public abstract class Microsoft.AspNetCore.Mvc.DataAnnotations.AttributeAdapterBase`1 : ValidationAttributeAdapter`1<TAttribute> {
    public AttributeAdapterBase`1(TAttribute attribute, IStringLocalizer stringLocalizer);
    public abstract virtual string GetErrorMessage(ModelValidationContextBase validationContext);
}
internal class Microsoft.AspNetCore.Mvc.DataAnnotations.CompareAttributeAdapter : AttributeAdapterBase`1<CompareAttribute> {
    private string _otherProperty;
    public CompareAttributeAdapter(CompareAttribute attribute, IStringLocalizer stringLocalizer);
    public virtual void AddValidation(ClientModelValidationContext context);
    public virtual string GetErrorMessage(ModelValidationContextBase validationContext);
}
internal class Microsoft.AspNetCore.Mvc.DataAnnotations.DataAnnotationsClientModelValidatorProvider : object {
    private IOptions`1<MvcDataAnnotationsLocalizationOptions> _options;
    private IStringLocalizerFactory _stringLocalizerFactory;
    private IValidationAttributeAdapterProvider _validationAttributeAdapterProvider;
    public DataAnnotationsClientModelValidatorProvider(IValidationAttributeAdapterProvider validationAttributeAdapterProvider, IOptions`1<MvcDataAnnotationsLocalizationOptions> options, IStringLocalizerFactory stringLocalizerFactory);
    public sealed virtual void CreateValidators(ClientValidatorProviderContext context);
}
internal static class Microsoft.AspNetCore.Mvc.DataAnnotations.DataAnnotationsLocalizationServices : object {
    public static void AddDataAnnotationsLocalizationServices(IServiceCollection services, Action`1<MvcDataAnnotationsLocalizationOptions> setupAction);
}
internal class Microsoft.AspNetCore.Mvc.DataAnnotations.DataAnnotationsMetadataProvider : object {
    private static string NullableAttributeFullTypeName;
    private static string NullableFlagsFieldName;
    private static string NullableContextAttributeFullName;
    private static string NullableContextFlagsFieldName;
    private IStringLocalizerFactory _stringLocalizerFactory;
    private MvcOptions _options;
    private MvcDataAnnotationsLocalizationOptions _localizationOptions;
    public DataAnnotationsMetadataProvider(MvcOptions options, IOptions`1<MvcDataAnnotationsLocalizationOptions> localizationOptions, IStringLocalizerFactory stringLocalizerFactory);
    public sealed virtual void CreateBindingMetadata(BindingMetadataProviderContext context);
    public sealed virtual void CreateDisplayMetadata(DisplayMetadataProviderContext context);
    public sealed virtual void CreateValidationMetadata(ValidationMetadataProviderContext context);
    private static string GetDisplayName(FieldInfo field, IStringLocalizer stringLocalizer);
    private static string GetDisplayGroup(FieldInfo field);
    internal static bool IsNullableReferenceType(Type containingType, MemberInfo member, IEnumerable`1<object> attributes);
    internal static bool HasNullableAttribute(IEnumerable`1<object> attributes, Boolean& isNullable);
    internal static bool IsNullableBasedOnContext(Type containingType, MemberInfo member);
    [CompilerGeneratedAttribute]
internal static Nullable`1<bool> <IsNullableBasedOnContext>g__AttributesHasNullableContext|15_0(Object[] attributes);
}
internal class Microsoft.AspNetCore.Mvc.DataAnnotations.DataAnnotationsModelValidator : object {
    private static object _emptyValidationContextInstance;
    private IStringLocalizer _stringLocalizer;
    private IValidationAttributeAdapterProvider _validationAttributeAdapterProvider;
    [CompilerGeneratedAttribute]
private ValidationAttribute <Attribute>k__BackingField;
    public ValidationAttribute Attribute { get; }
    public DataAnnotationsModelValidator(IValidationAttributeAdapterProvider validationAttributeAdapterProvider, ValidationAttribute attribute, IStringLocalizer stringLocalizer);
    private static DataAnnotationsModelValidator();
    [CompilerGeneratedAttribute]
public ValidationAttribute get_Attribute();
    public sealed virtual IEnumerable`1<ModelValidationResult> Validate(ModelValidationContext validationContext);
    private string GetErrorMessage(ModelValidationContextBase validationContext);
}
internal class Microsoft.AspNetCore.Mvc.DataAnnotations.DataAnnotationsModelValidatorProvider : object {
    private IOptions`1<MvcDataAnnotationsLocalizationOptions> _options;
    private IStringLocalizerFactory _stringLocalizerFactory;
    private IValidationAttributeAdapterProvider _validationAttributeAdapterProvider;
    public DataAnnotationsModelValidatorProvider(IValidationAttributeAdapterProvider validationAttributeAdapterProvider, IOptions`1<MvcDataAnnotationsLocalizationOptions> options, IStringLocalizerFactory stringLocalizerFactory);
    public sealed virtual void CreateValidators(ModelValidatorProviderContext context);
    public sealed virtual bool HasValidators(Type modelType, IList`1<object> validatorMetadata);
}
internal class Microsoft.AspNetCore.Mvc.DataAnnotations.DataTypeAttributeAdapter : AttributeAdapterBase`1<DataTypeAttribute> {
    [CompilerGeneratedAttribute]
private string <RuleName>k__BackingField;
    public string RuleName { get; }
    public DataTypeAttributeAdapter(DataTypeAttribute attribute, string ruleName, IStringLocalizer stringLocalizer);
    [CompilerGeneratedAttribute]
public string get_RuleName();
    public virtual void AddValidation(ClientModelValidationContext context);
    public virtual string GetErrorMessage(ModelValidationContextBase validationContext);
}
internal class Microsoft.AspNetCore.Mvc.DataAnnotations.DefaultClientModelValidatorProvider : object {
    public sealed virtual void CreateValidators(ClientValidatorProviderContext context);
}
internal class Microsoft.AspNetCore.Mvc.DataAnnotations.FileExtensionsAttributeAdapter : AttributeAdapterBase`1<FileExtensionsAttribute> {
    private string _extensions;
    private string _formattedExtensions;
    public FileExtensionsAttributeAdapter(FileExtensionsAttribute attribute, IStringLocalizer stringLocalizer);
    public virtual void AddValidation(ClientModelValidationContext context);
    public virtual string GetErrorMessage(ModelValidationContextBase validationContext);
}
public interface Microsoft.AspNetCore.Mvc.DataAnnotations.IAttributeAdapter {
    public abstract virtual string GetErrorMessage(ModelValidationContextBase validationContext);
}
public interface Microsoft.AspNetCore.Mvc.DataAnnotations.IValidationAttributeAdapterProvider {
    public abstract virtual IAttributeAdapter GetAttributeAdapter(ValidationAttribute attribute, IStringLocalizer stringLocalizer);
}
internal class Microsoft.AspNetCore.Mvc.DataAnnotations.MaxLengthAttributeAdapter : AttributeAdapterBase`1<MaxLengthAttribute> {
    private string _max;
    public MaxLengthAttributeAdapter(MaxLengthAttribute attribute, IStringLocalizer stringLocalizer);
    public virtual void AddValidation(ClientModelValidationContext context);
    public virtual string GetErrorMessage(ModelValidationContextBase validationContext);
}
internal class Microsoft.AspNetCore.Mvc.DataAnnotations.MinLengthAttributeAdapter : AttributeAdapterBase`1<MinLengthAttribute> {
    private string _min;
    public MinLengthAttributeAdapter(MinLengthAttribute attribute, IStringLocalizer stringLocalizer);
    public virtual void AddValidation(ClientModelValidationContext context);
    public virtual string GetErrorMessage(ModelValidationContextBase validationContext);
}
public class Microsoft.AspNetCore.Mvc.DataAnnotations.MvcDataAnnotationsLocalizationOptions : object {
    private IReadOnlyList`1<ICompatibilitySwitch> _switches;
    public Func`3<Type, IStringLocalizerFactory, IStringLocalizer> DataAnnotationLocalizerProvider;
    private sealed virtual override IEnumerator`1<ICompatibilitySwitch> System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Mvc.Infrastructure.ICompatibilitySwitch>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
internal class Microsoft.AspNetCore.Mvc.DataAnnotations.NumericClientModelValidator : object {
    public sealed virtual void AddValidation(ClientModelValidationContext context);
    private static void MergeAttribute(IDictionary`2<string, string> attributes, string key, string value);
    private string GetErrorMessage(ModelMetadata modelMetadata);
}
internal class Microsoft.AspNetCore.Mvc.DataAnnotations.NumericClientModelValidatorProvider : object {
    public sealed virtual void CreateValidators(ClientValidatorProviderContext context);
}
internal class Microsoft.AspNetCore.Mvc.DataAnnotations.RangeAttributeAdapter : AttributeAdapterBase`1<RangeAttribute> {
    private string _max;
    private string _min;
    public RangeAttributeAdapter(RangeAttribute attribute, IStringLocalizer stringLocalizer);
    public virtual void AddValidation(ClientModelValidationContext context);
    public virtual string GetErrorMessage(ModelValidationContextBase validationContext);
}
internal class Microsoft.AspNetCore.Mvc.DataAnnotations.RegularExpressionAttributeAdapter : AttributeAdapterBase`1<RegularExpressionAttribute> {
    public RegularExpressionAttributeAdapter(RegularExpressionAttribute attribute, IStringLocalizer stringLocalizer);
    public virtual void AddValidation(ClientModelValidationContext context);
    public virtual string GetErrorMessage(ModelValidationContextBase validationContext);
}
public class Microsoft.AspNetCore.Mvc.DataAnnotations.RequiredAttributeAdapter : AttributeAdapterBase`1<RequiredAttribute> {
    public RequiredAttributeAdapter(RequiredAttribute attribute, IStringLocalizer stringLocalizer);
    public virtual void AddValidation(ClientModelValidationContext context);
    public virtual string GetErrorMessage(ModelValidationContextBase validationContext);
}
internal static class Microsoft.AspNetCore.Mvc.DataAnnotations.Resources : object {
    private static ResourceManager s_resourceManager;
    [CompilerGeneratedAttribute]
private static CultureInfo <Culture>k__BackingField;
    internal static ResourceManager ResourceManager { get; }
    internal static CultureInfo Culture { get; internal set; }
    internal static string ValidatableObjectAdapter_IncompatibleType { get; }
    internal static string ArgumentCannotBeNullOrEmpty { get; }
    internal static string PropertyOfTypeCannotBeNull { get; }
    internal static ResourceManager get_ResourceManager();
    [CompilerGeneratedAttribute]
internal static CultureInfo get_Culture();
    [CompilerGeneratedAttribute]
internal static void set_Culture(CultureInfo value);
    internal static string GetResourceString(string resourceKey, string defaultValue);
    private static string GetResourceString(string resourceKey, String[] formatterNames);
    internal static string get_ValidatableObjectAdapter_IncompatibleType();
    internal static string FormatValidatableObjectAdapter_IncompatibleType(object p0, object p1);
    internal static string get_ArgumentCannotBeNullOrEmpty();
    internal static string get_PropertyOfTypeCannotBeNull();
    internal static string FormatPropertyOfTypeCannotBeNull(object p0, object p1);
}
internal class Microsoft.AspNetCore.Mvc.DataAnnotations.StringLengthAttributeAdapter : AttributeAdapterBase`1<StringLengthAttribute> {
    private string _max;
    private string _min;
    public StringLengthAttributeAdapter(StringLengthAttribute attribute, IStringLocalizer stringLocalizer);
    public virtual void AddValidation(ClientModelValidationContext context);
    public virtual string GetErrorMessage(ModelValidationContextBase validationContext);
}
internal class Microsoft.AspNetCore.Mvc.DataAnnotations.ValidatableObjectAdapter : object {
    public sealed virtual IEnumerable`1<ModelValidationResult> Validate(ModelValidationContext context);
    [IteratorStateMachineAttribute("Microsoft.AspNetCore.Mvc.DataAnnotations.ValidatableObjectAdapter/<ConvertResults>d__1")]
private IEnumerable`1<ModelValidationResult> ConvertResults(IEnumerable`1<ValidationResult> results);
}
public abstract class Microsoft.AspNetCore.Mvc.DataAnnotations.ValidationAttributeAdapter`1 : object {
    private IStringLocalizer _stringLocalizer;
    [CompilerGeneratedAttribute]
private TAttribute <Attribute>k__BackingField;
    public TAttribute Attribute { get; }
    public ValidationAttributeAdapter`1(TAttribute attribute, IStringLocalizer stringLocalizer);
    [CompilerGeneratedAttribute]
public TAttribute get_Attribute();
    public abstract virtual void AddValidation(ClientModelValidationContext context);
    protected static bool MergeAttribute(IDictionary`2<string, string> attributes, string key, string value);
    protected virtual string GetErrorMessage(ModelMetadata modelMetadata, Object[] arguments);
}
public class Microsoft.AspNetCore.Mvc.DataAnnotations.ValidationAttributeAdapterProvider : object {
    public sealed virtual IAttributeAdapter GetAttributeAdapter(ValidationAttribute attribute, IStringLocalizer stringLocalizer);
}
public abstract class Microsoft.AspNetCore.Mvc.DataAnnotations.ValidationProviderAttribute : Attribute {
    public abstract virtual IEnumerable`1<ValidationAttribute> GetValidationAttributes();
}
[AttributeUsageAttribute("132")]
public class Microsoft.AspNetCore.Mvc.HiddenInputAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <DisplayValue>k__BackingField;
    public bool DisplayValue { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_DisplayValue();
    [CompilerGeneratedAttribute]
public void set_DisplayValue(bool value);
}
internal class Microsoft.Extensions.DependencyInjection.MvcDataAnnotationsLocalizationOptionsSetup : object {
    public sealed virtual void Configure(MvcDataAnnotationsLocalizationOptions options);
}
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.MvcDataAnnotationsMvcBuilderExtensions : object {
    [ExtensionAttribute]
public static IMvcBuilder AddDataAnnotationsLocalization(IMvcBuilder builder);
    [ExtensionAttribute]
public static IMvcBuilder AddDataAnnotationsLocalization(IMvcBuilder builder, Action`1<MvcDataAnnotationsLocalizationOptions> setupAction);
}
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.MvcDataAnnotationsMvcCoreBuilderExtensions : object {
    [ExtensionAttribute]
public static IMvcCoreBuilder AddDataAnnotations(IMvcCoreBuilder builder);
    [ExtensionAttribute]
public static IMvcCoreBuilder AddDataAnnotationsLocalization(IMvcCoreBuilder builder);
    [ExtensionAttribute]
public static IMvcCoreBuilder AddDataAnnotationsLocalization(IMvcCoreBuilder builder, Action`1<MvcDataAnnotationsLocalizationOptions> setupAction);
    internal static void AddDataAnnotationsServices(IServiceCollection services);
    internal static void AddDataAnnotationsLocalizationServices(IServiceCollection services, Action`1<MvcDataAnnotationsLocalizationOptions> setupAction);
}
internal class Microsoft.Extensions.DependencyInjection.MvcDataAnnotationsMvcOptionsSetup : object {
    private IStringLocalizerFactory _stringLocalizerFactory;
    private IValidationAttributeAdapterProvider _validationAttributeAdapterProvider;
    private IOptions`1<MvcDataAnnotationsLocalizationOptions> _dataAnnotationLocalizationOptions;
    public MvcDataAnnotationsMvcOptionsSetup(IValidationAttributeAdapterProvider validationAttributeAdapterProvider, IOptions`1<MvcDataAnnotationsLocalizationOptions> dataAnnotationLocalizationOptions);
    public MvcDataAnnotationsMvcOptionsSetup(IValidationAttributeAdapterProvider validationAttributeAdapterProvider, IOptions`1<MvcDataAnnotationsLocalizationOptions> dataAnnotationLocalizationOptions, IStringLocalizerFactory stringLocalizerFactory);
    public sealed virtual void Configure(MvcOptions options);
}
