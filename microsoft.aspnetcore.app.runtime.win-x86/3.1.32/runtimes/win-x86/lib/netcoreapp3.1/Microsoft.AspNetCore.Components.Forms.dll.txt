public class Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator : ComponentBase {
    [CompilerGeneratedAttribute]
private EditContext <CurrentEditContext>k__BackingField;
    [CascadingParameterAttribute]
private EditContext CurrentEditContext { get; private set; }
    [CompilerGeneratedAttribute]
private EditContext get_CurrentEditContext();
    [CompilerGeneratedAttribute]
private void set_CurrentEditContext(EditContext value);
    protected virtual void OnInitialized();
}
public class Microsoft.AspNetCore.Components.Forms.EditContext : object {
    private Dictionary`2<FieldIdentifier, FieldState> _fieldStates;
    [CompilerGeneratedAttribute]
private EventHandler`1<FieldChangedEventArgs> OnFieldChanged;
    [CompilerGeneratedAttribute]
private EventHandler`1<ValidationRequestedEventArgs> OnValidationRequested;
    [CompilerGeneratedAttribute]
private EventHandler`1<ValidationStateChangedEventArgs> OnValidationStateChanged;
    [CompilerGeneratedAttribute]
private object <Model>k__BackingField;
    public object Model { get; }
    public EditContext(object model);
    [CompilerGeneratedAttribute]
public void add_OnFieldChanged(EventHandler`1<FieldChangedEventArgs> value);
    [CompilerGeneratedAttribute]
public void remove_OnFieldChanged(EventHandler`1<FieldChangedEventArgs> value);
    [CompilerGeneratedAttribute]
public void add_OnValidationRequested(EventHandler`1<ValidationRequestedEventArgs> value);
    [CompilerGeneratedAttribute]
public void remove_OnValidationRequested(EventHandler`1<ValidationRequestedEventArgs> value);
    [CompilerGeneratedAttribute]
public void add_OnValidationStateChanged(EventHandler`1<ValidationStateChangedEventArgs> value);
    [CompilerGeneratedAttribute]
public void remove_OnValidationStateChanged(EventHandler`1<ValidationStateChangedEventArgs> value);
    public FieldIdentifier Field(string fieldName);
    [CompilerGeneratedAttribute]
public object get_Model();
    public void NotifyFieldChanged(FieldIdentifier& fieldIdentifier);
    public void NotifyValidationStateChanged();
    public void MarkAsUnmodified(FieldIdentifier& fieldIdentifier);
    public void MarkAsUnmodified();
    public bool IsModified();
    [IteratorStateMachineAttribute("Microsoft.AspNetCore.Components.Forms.EditContext/<GetValidationMessages>d__20")]
public IEnumerable`1<string> GetValidationMessages();
    [IteratorStateMachineAttribute("Microsoft.AspNetCore.Components.Forms.EditContext/<GetValidationMessages>d__21")]
public IEnumerable`1<string> GetValidationMessages(FieldIdentifier fieldIdentifier);
    public IEnumerable`1<string> GetValidationMessages(Expression`1<Func`1<object>> accessor);
    public bool IsModified(FieldIdentifier& fieldIdentifier);
    public bool IsModified(Expression`1<Func`1<object>> accessor);
    public bool Validate();
    internal FieldState GetFieldState(FieldIdentifier& fieldIdentifier, bool ensureExists);
}
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Components.Forms.EditContextDataAnnotationsExtensions : object {
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static ConcurrentDictionary`2<ValueTuple`2<Type, string>, PropertyInfo> _propertyInfoCache;
    private static EditContextDataAnnotationsExtensions();
    [ExtensionAttribute]
public static EditContext AddDataAnnotationsValidation(EditContext editContext);
    private static void ValidateModel(EditContext editContext, ValidationMessageStore messages);
    private static void ValidateField(EditContext editContext, ValidationMessageStore messages, FieldIdentifier& fieldIdentifier);
    private static bool TryGetValidatableProperty(FieldIdentifier& fieldIdentifier, PropertyInfo& propertyInfo);
}
public class Microsoft.AspNetCore.Components.Forms.FieldChangedEventArgs : EventArgs {
    [CompilerGeneratedAttribute]
private FieldIdentifier <FieldIdentifier>k__BackingField;
    public FieldIdentifier FieldIdentifier { get; }
    public FieldChangedEventArgs(FieldIdentifier& fieldIdentifier);
    [CompilerGeneratedAttribute]
public FieldIdentifier get_FieldIdentifier();
}
[IsReadOnlyAttribute]
public class Microsoft.AspNetCore.Components.Forms.FieldIdentifier : ValueType {
    [CompilerGeneratedAttribute]
private object <Model>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FieldName>k__BackingField;
    public object Model { get; }
    public string FieldName { get; }
    public FieldIdentifier(object model, string fieldName);
    public static FieldIdentifier Create(Expression`1<Func`1<TField>> accessor);
    [CompilerGeneratedAttribute]
public object get_Model();
    [CompilerGeneratedAttribute]
public string get_FieldName();
    public virtual int GetHashCode();
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(FieldIdentifier otherIdentifier);
    private static void ParseAccessor(Expression`1<Func`1<T>> accessor, Object& model, String& fieldName);
}
internal class Microsoft.AspNetCore.Components.Forms.FieldState : object {
    private FieldIdentifier _fieldIdentifier;
    private HashSet`1<ValidationMessageStore> _validationMessageStores;
    [CompilerGeneratedAttribute]
private bool <IsModified>k__BackingField;
    public bool IsModified { get; public set; }
    public FieldState(FieldIdentifier fieldIdentifier);
    [CompilerGeneratedAttribute]
public bool get_IsModified();
    [CompilerGeneratedAttribute]
public void set_IsModified(bool value);
    [IteratorStateMachineAttribute("Microsoft.AspNetCore.Components.Forms.FieldState/<GetValidationMessages>d__7")]
public IEnumerable`1<string> GetValidationMessages();
    public void AssociateWithValidationMessageStore(ValidationMessageStore validationMessageStore);
    public void DissociateFromValidationMessageStore(ValidationMessageStore validationMessageStore);
}
[DefaultMemberAttribute("Item")]
public class Microsoft.AspNetCore.Components.Forms.ValidationMessageStore : object {
    private EditContext _editContext;
    private Dictionary`2<FieldIdentifier, List`1<string>> _messages;
    public IEnumerable`1<string> Item { get; }
    public IEnumerable`1<string> Item { get; }
    public ValidationMessageStore(EditContext editContext);
    public void Add(FieldIdentifier& fieldIdentifier, string message);
    public void Add(Expression`1<Func`1<object>> accessor, string message);
    public void Add(FieldIdentifier& fieldIdentifier, IEnumerable`1<string> messages);
    public void Add(Expression`1<Func`1<object>> accessor, IEnumerable`1<string> messages);
    public IEnumerable`1<string> get_Item(FieldIdentifier fieldIdentifier);
    public IEnumerable`1<string> get_Item(Expression`1<Func`1<object>> accessor);
    public void Clear();
    public void Clear(Expression`1<Func`1<object>> accessor);
    public void Clear(FieldIdentifier& fieldIdentifier);
    private List`1<string> GetOrCreateMessagesListForField(FieldIdentifier& fieldIdentifier);
    private void AssociateWithField(FieldIdentifier& fieldIdentifier);
    private void DissociateFromField(FieldIdentifier& fieldIdentifier);
}
public class Microsoft.AspNetCore.Components.Forms.ValidationRequestedEventArgs : EventArgs {
    public static ValidationRequestedEventArgs Empty;
    private static ValidationRequestedEventArgs();
}
public class Microsoft.AspNetCore.Components.Forms.ValidationStateChangedEventArgs : EventArgs {
    public static ValidationStateChangedEventArgs Empty;
    private static ValidationStateChangedEventArgs();
}
