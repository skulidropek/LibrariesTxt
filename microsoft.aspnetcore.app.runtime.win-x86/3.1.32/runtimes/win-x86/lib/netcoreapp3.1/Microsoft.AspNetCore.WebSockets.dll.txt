[ExtensionAttribute]
public static class Microsoft.AspNetCore.Builder.WebSocketMiddlewareExtensions : object {
    [ExtensionAttribute]
public static IApplicationBuilder UseWebSockets(IApplicationBuilder app);
    [ExtensionAttribute]
public static IApplicationBuilder UseWebSockets(IApplicationBuilder app, WebSocketOptions options);
}
public class Microsoft.AspNetCore.Builder.WebSocketOptions : object {
    [CompilerGeneratedAttribute]
private TimeSpan <KeepAliveInterval>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ReceiveBufferSize>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <AllowedOrigins>k__BackingField;
    public TimeSpan KeepAliveInterval { get; public set; }
    public int ReceiveBufferSize { get; public set; }
    public IList`1<string> AllowedOrigins { get; }
    [CompilerGeneratedAttribute]
public TimeSpan get_KeepAliveInterval();
    [CompilerGeneratedAttribute]
public void set_KeepAliveInterval(TimeSpan value);
    [CompilerGeneratedAttribute]
public int get_ReceiveBufferSize();
    [CompilerGeneratedAttribute]
public void set_ReceiveBufferSize(int value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_AllowedOrigins();
}
internal static class Microsoft.AspNetCore.WebSockets.Constants : object {
}
public class Microsoft.AspNetCore.WebSockets.ExtendedWebSocketAcceptContext : WebSocketAcceptContext {
    [CompilerGeneratedAttribute]
private string <SubProtocol>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ReceiveBufferSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <KeepAliveInterval>k__BackingField;
    public string SubProtocol { get; public set; }
    public Nullable`1<int> ReceiveBufferSize { get; public set; }
    public Nullable`1<TimeSpan> KeepAliveInterval { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_SubProtocol();
    [CompilerGeneratedAttribute]
public virtual void set_SubProtocol(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ReceiveBufferSize();
    [CompilerGeneratedAttribute]
public void set_ReceiveBufferSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_KeepAliveInterval();
    [CompilerGeneratedAttribute]
public void set_KeepAliveInterval(Nullable`1<TimeSpan> value);
}
internal static class Microsoft.AspNetCore.WebSockets.HandshakeHelpers : object {
    public static IEnumerable`1<string> NeededHeaders;
    private static HandshakeHelpers();
    public static bool CheckSupportedWebSocketRequest(string method, IEnumerable`1<KeyValuePair`2<string, string>> headers);
    public static void GenerateResponseHeaders(string key, string subProtocol, IHeaderDictionary headers);
    public static bool IsRequestKeyValid(string value);
    public static string CreateResponseKey(string requestKey);
}
public class Microsoft.AspNetCore.WebSockets.WebSocketMiddleware : object {
    private RequestDelegate _next;
    private WebSocketOptions _options;
    private ILogger _logger;
    private bool _anyOriginAllowed;
    private List`1<string> _allowedOrigins;
    public WebSocketMiddleware(RequestDelegate next, IOptions`1<WebSocketOptions> options, ILoggerFactory loggerFactory);
    public Task Invoke(HttpContext context);
}
[ExtensionAttribute]
public static class Microsoft.AspNetCore.WebSockets.WebSocketsDependencyInjectionExtensions : object {
    [ExtensionAttribute]
public static IServiceCollection AddWebSockets(IServiceCollection services, Action`1<WebSocketOptions> configure);
}
