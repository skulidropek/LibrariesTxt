public class Microsoft.AspNetCore.Authentication.AuthenticationFeature : object {
    [CompilerGeneratedAttribute]
private PathString <OriginalPathBase>k__BackingField;
    [CompilerGeneratedAttribute]
private PathString <OriginalPath>k__BackingField;
    public PathString OriginalPathBase { get; public set; }
    public PathString OriginalPath { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual PathString get_OriginalPathBase();
    [CompilerGeneratedAttribute]
public sealed virtual void set_OriginalPathBase(PathString value);
    [CompilerGeneratedAttribute]
public sealed virtual PathString get_OriginalPath();
    [CompilerGeneratedAttribute]
public sealed virtual void set_OriginalPath(PathString value);
}
public class Microsoft.AspNetCore.Authentication.AuthenticationHandlerProvider : object {
    [CompilerGeneratedAttribute]
private IAuthenticationSchemeProvider <Schemes>k__BackingField;
    private Dictionary`2<string, IAuthenticationHandler> _handlerMap;
    public IAuthenticationSchemeProvider Schemes { get; }
    public AuthenticationHandlerProvider(IAuthenticationSchemeProvider schemes);
    [CompilerGeneratedAttribute]
public IAuthenticationSchemeProvider get_Schemes();
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Authentication.AuthenticationHandlerProvider/<GetHandlerAsync>d__5")]
public sealed virtual Task`1<IAuthenticationHandler> GetHandlerAsync(HttpContext context, string authenticationScheme);
}
public class Microsoft.AspNetCore.Authentication.AuthenticationSchemeProvider : object {
    private AuthenticationOptions _options;
    private object _lock;
    private IDictionary`2<string, AuthenticationScheme> _schemes;
    private List`1<AuthenticationScheme> _requestHandlers;
    private IEnumerable`1<AuthenticationScheme> _schemesCopy;
    private IEnumerable`1<AuthenticationScheme> _requestHandlersCopy;
    public AuthenticationSchemeProvider(IOptions`1<AuthenticationOptions> options);
    protected AuthenticationSchemeProvider(IOptions`1<AuthenticationOptions> options, IDictionary`2<string, AuthenticationScheme> schemes);
    private Task`1<AuthenticationScheme> GetDefaultSchemeAsync();
    public virtual Task`1<AuthenticationScheme> GetDefaultAuthenticateSchemeAsync();
    public virtual Task`1<AuthenticationScheme> GetDefaultChallengeSchemeAsync();
    public virtual Task`1<AuthenticationScheme> GetDefaultForbidSchemeAsync();
    public virtual Task`1<AuthenticationScheme> GetDefaultSignInSchemeAsync();
    public virtual Task`1<AuthenticationScheme> GetDefaultSignOutSchemeAsync();
    public virtual Task`1<AuthenticationScheme> GetSchemeAsync(string name);
    public virtual Task`1<IEnumerable`1<AuthenticationScheme>> GetRequestHandlerSchemesAsync();
    public virtual void AddScheme(AuthenticationScheme scheme);
    public virtual void RemoveScheme(string name);
    public virtual Task`1<IEnumerable`1<AuthenticationScheme>> GetAllSchemesAsync();
}
public class Microsoft.AspNetCore.Authentication.AuthenticationService : object {
    [CompilerGeneratedAttribute]
private IAuthenticationSchemeProvider <Schemes>k__BackingField;
    [CompilerGeneratedAttribute]
private IAuthenticationHandlerProvider <Handlers>k__BackingField;
    [CompilerGeneratedAttribute]
private IClaimsTransformation <Transform>k__BackingField;
    public IAuthenticationSchemeProvider Schemes { get; }
    public IAuthenticationHandlerProvider Handlers { get; }
    public IClaimsTransformation Transform { get; }
    public AuthenticationService(IAuthenticationSchemeProvider schemes, IAuthenticationHandlerProvider handlers, IClaimsTransformation transform);
    [CompilerGeneratedAttribute]
public IAuthenticationSchemeProvider get_Schemes();
    [CompilerGeneratedAttribute]
public IAuthenticationHandlerProvider get_Handlers();
    [CompilerGeneratedAttribute]
public IClaimsTransformation get_Transform();
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Authentication.AuthenticationService/<AuthenticateAsync>d__10")]
public virtual Task`1<AuthenticateResult> AuthenticateAsync(HttpContext context, string scheme);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Authentication.AuthenticationService/<ChallengeAsync>d__11")]
public virtual Task ChallengeAsync(HttpContext context, string scheme, AuthenticationProperties properties);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Authentication.AuthenticationService/<ForbidAsync>d__12")]
public virtual Task ForbidAsync(HttpContext context, string scheme, AuthenticationProperties properties);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Authentication.AuthenticationService/<SignInAsync>d__13")]
public virtual Task SignInAsync(HttpContext context, string scheme, ClaimsPrincipal principal, AuthenticationProperties properties);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Authentication.AuthenticationService/<SignOutAsync>d__14")]
public virtual Task SignOutAsync(HttpContext context, string scheme, AuthenticationProperties properties);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Authentication.AuthenticationService/<CreateMissingHandlerException>d__15")]
private Task`1<Exception> CreateMissingHandlerException(string scheme);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Authentication.AuthenticationService/<GetAllSignInSchemeNames>d__16")]
private Task`1<string> GetAllSignInSchemeNames();
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Authentication.AuthenticationService/<CreateMissingSignInHandlerException>d__17")]
private Task`1<Exception> CreateMissingSignInHandlerException(string scheme);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Authentication.AuthenticationService/<CreateMismatchedSignInHandlerException>d__18")]
private Task`1<Exception> CreateMismatchedSignInHandlerException(string scheme, IAuthenticationHandler handler);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Authentication.AuthenticationService/<GetAllSignOutSchemeNames>d__19")]
private Task`1<string> GetAllSignOutSchemeNames();
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Authentication.AuthenticationService/<CreateMissingSignOutHandlerException>d__20")]
private Task`1<Exception> CreateMissingSignOutHandlerException(string scheme);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Authentication.AuthenticationService/<CreateMismatchedSignOutHandlerException>d__21")]
private Task`1<Exception> CreateMismatchedSignOutHandlerException(string scheme, IAuthenticationHandler handler);
}
public class Microsoft.AspNetCore.Authentication.NoopClaimsTransformation : object {
    public virtual Task`1<ClaimsPrincipal> TransformAsync(ClaimsPrincipal principal);
}
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.AuthenticationCoreServiceCollectionExtensions : object {
    [ExtensionAttribute]
public static IServiceCollection AddAuthenticationCore(IServiceCollection services);
    [ExtensionAttribute]
public static IServiceCollection AddAuthenticationCore(IServiceCollection services, Action`1<AuthenticationOptions> configureOptions);
}
