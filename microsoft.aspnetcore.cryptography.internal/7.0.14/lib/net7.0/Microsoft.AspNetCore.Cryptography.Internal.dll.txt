internal class Microsoft.AspNetCore.Cryptography.Cng.BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO : ValueType {
    public UInt32 cbSize;
    public UInt32 dwInfoVersion;
    public Byte* pbNonce;
    public UInt32 cbNonce;
    public Byte* pbAuthData;
    public UInt32 cbAuthData;
    public Byte* pbTag;
    public UInt32 cbTag;
    public Byte* pbMacContext;
    public UInt32 cbMacContext;
    public UInt32 cbAAD;
    public ulong cbData;
    public UInt32 dwFlags;
    public static void Init(BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO& info);
}
internal class Microsoft.AspNetCore.Cryptography.Cng.BCRYPT_KEY_LENGTHS_STRUCT : ValueType {
    internal UInt32 dwMinLength;
    internal UInt32 dwMaxLength;
    internal UInt32 dwIncrement;
    public void EnsureValidKeyLength(UInt32 keyLengthInBits);
    private bool IsValidKeyLength(UInt32 keyLengthInBits);
}
internal class Microsoft.AspNetCore.Cryptography.Cng.BCryptBuffer : ValueType {
    public UInt32 cbBuffer;
    public BCryptKeyDerivationBufferType BufferType;
    public IntPtr pvBuffer;
}
internal class Microsoft.AspNetCore.Cryptography.Cng.BCryptBufferDesc : ValueType {
    private static int BCRYPTBUFFER_VERSION;
    public UInt32 ulVersion;
    public UInt32 cBuffers;
    public BCryptBuffer* pBuffers;
    public static void Initialize(BCryptBufferDesc& bufferDesc);
}
[FlagsAttribute]
internal enum Microsoft.AspNetCore.Cryptography.Cng.BCryptEncryptFlags : Enum {
    public int value__;
    public static BCryptEncryptFlags BCRYPT_BLOCK_PADDING;
}
[FlagsAttribute]
internal enum Microsoft.AspNetCore.Cryptography.Cng.BCryptGenRandomFlags : Enum {
    public int value__;
    public static BCryptGenRandomFlags BCRYPT_RNG_USE_ENTROPY_IN_BUFFER;
    public static BCryptGenRandomFlags BCRYPT_USE_SYSTEM_PREFERRED_RNG;
}
internal enum Microsoft.AspNetCore.Cryptography.Cng.BCryptKeyDerivationBufferType : Enum {
    public int value__;
    public static BCryptKeyDerivationBufferType KDF_HASH_ALGORITHM;
    public static BCryptKeyDerivationBufferType KDF_SECRET_PREPEND;
    public static BCryptKeyDerivationBufferType KDF_SECRET_APPEND;
    public static BCryptKeyDerivationBufferType KDF_HMAC_KEY;
    public static BCryptKeyDerivationBufferType KDF_TLS_PRF_LABEL;
    public static BCryptKeyDerivationBufferType KDF_TLS_PRF_SEED;
    public static BCryptKeyDerivationBufferType KDF_SECRET_HANDLE;
    public static BCryptKeyDerivationBufferType KDF_TLS_PRF_PROTOCOL;
    public static BCryptKeyDerivationBufferType KDF_ALGORITHMID;
    public static BCryptKeyDerivationBufferType KDF_PARTYUINFO;
    public static BCryptKeyDerivationBufferType KDF_PARTYVINFO;
    public static BCryptKeyDerivationBufferType KDF_SUPPPUBINFO;
    public static BCryptKeyDerivationBufferType KDF_SUPPPRIVINFO;
    public static BCryptKeyDerivationBufferType KDF_LABEL;
    public static BCryptKeyDerivationBufferType KDF_CONTEXT;
    public static BCryptKeyDerivationBufferType KDF_SALT;
    public static BCryptKeyDerivationBufferType KDF_ITERATION_COUNT;
}
internal static class Microsoft.AspNetCore.Cryptography.Cng.BCryptUtil : object {
    public static void GenRandom(Byte* pbBuffer, UInt32 cbBuffer);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Microsoft.AspNetCore.Cryptography.Cng.CachedAlgorithmHandles : object {
    private static CachedAlgorithmInfo _aesCbc;
    private static CachedAlgorithmInfo _aesGcm;
    private static CachedAlgorithmInfo _hmacSha1;
    private static CachedAlgorithmInfo _hmacSha256;
    private static CachedAlgorithmInfo _hmacSha512;
    private static CachedAlgorithmInfo _pbkdf2;
    private static CachedAlgorithmInfo _sha1;
    private static CachedAlgorithmInfo _sha256;
    private static CachedAlgorithmInfo _sha512;
    private static CachedAlgorithmInfo _sp800_108_ctr_hmac;
    public static BCryptAlgorithmHandle AES_CBC { get; }
    public static BCryptAlgorithmHandle AES_GCM { get; }
    public static BCryptAlgorithmHandle HMAC_SHA1 { get; }
    public static BCryptAlgorithmHandle HMAC_SHA256 { get; }
    public static BCryptAlgorithmHandle HMAC_SHA512 { get; }
    public static BCryptAlgorithmHandle PBKDF2 { get; }
    public static BCryptAlgorithmHandle SHA1 { get; }
    public static BCryptAlgorithmHandle SHA256 { get; }
    public static BCryptAlgorithmHandle SHA512 { get; }
    public static BCryptAlgorithmHandle SP800_108_CTR_HMAC { get; }
    private static CachedAlgorithmHandles();
    public static BCryptAlgorithmHandle get_AES_CBC();
    public static BCryptAlgorithmHandle get_AES_GCM();
    public static BCryptAlgorithmHandle get_HMAC_SHA1();
    public static BCryptAlgorithmHandle get_HMAC_SHA256();
    public static BCryptAlgorithmHandle get_HMAC_SHA512();
    public static BCryptAlgorithmHandle get_PBKDF2();
    public static BCryptAlgorithmHandle get_SHA1();
    public static BCryptAlgorithmHandle get_SHA256();
    public static BCryptAlgorithmHandle get_SHA512();
    public static BCryptAlgorithmHandle get_SP800_108_CTR_HMAC();
    private static BCryptAlgorithmHandle GetAesAlgorithm(string chainingMode);
    private static BCryptAlgorithmHandle GetHashAlgorithm(string algorithm);
    private static BCryptAlgorithmHandle GetHmacAlgorithm(string algorithm);
    private static BCryptAlgorithmHandle GetPbkdf2Algorithm();
    private static BCryptAlgorithmHandle GetSP800_108_CTR_HMACAlgorithm();
}
[FlagsAttribute]
internal enum Microsoft.AspNetCore.Cryptography.Cng.NCryptEncryptFlags : Enum {
    public int value__;
    public static NCryptEncryptFlags NCRYPT_NO_PADDING_FLAG;
    public static NCryptEncryptFlags NCRYPT_PAD_PKCS1_FLAG;
    public static NCryptEncryptFlags NCRYPT_PAD_OAEP_FLAG;
    public static NCryptEncryptFlags NCRYPT_PAD_PSS_FLAG;
    public static NCryptEncryptFlags NCRYPT_SILENT_FLAG;
}
internal static class Microsoft.AspNetCore.Cryptography.Cng.OSVersionUtil : object {
    private static OSVersion _osVersion;
    private static OSVersionUtil();
    private static OSVersion GetOSVersion();
    public static bool IsWindows();
    public static bool IsWindows8OrLater();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Microsoft.AspNetCore.Cryptography.Constants : object {
    internal static int MAX_STACKALLOC_BYTES;
    internal static string BCRYPT_OPAQUE_KEY_BLOB;
    internal static string BCRYPT_KEY_DATA_BLOB;
    internal static string BCRYPT_AES_WRAP_KEY_BLOB;
    internal static string MS_PRIMITIVE_PROVIDER;
    internal static string MS_PLATFORM_CRYPTO_PROVIDER;
    internal static string BCRYPT_RSA_ALGORITHM;
    internal static string BCRYPT_RSA_SIGN_ALGORITHM;
    internal static string BCRYPT_DH_ALGORITHM;
    internal static string BCRYPT_DSA_ALGORITHM;
    internal static string BCRYPT_RC2_ALGORITHM;
    internal static string BCRYPT_RC4_ALGORITHM;
    internal static string BCRYPT_AES_ALGORITHM;
    internal static string BCRYPT_DES_ALGORITHM;
    internal static string BCRYPT_DESX_ALGORITHM;
    internal static string BCRYPT_3DES_ALGORITHM;
    internal static string BCRYPT_3DES_112_ALGORITHM;
    internal static string BCRYPT_MD2_ALGORITHM;
    internal static string BCRYPT_MD4_ALGORITHM;
    internal static string BCRYPT_MD5_ALGORITHM;
    internal static string BCRYPT_SHA1_ALGORITHM;
    internal static string BCRYPT_SHA256_ALGORITHM;
    internal static string BCRYPT_SHA384_ALGORITHM;
    internal static string BCRYPT_SHA512_ALGORITHM;
    internal static string BCRYPT_AES_GMAC_ALGORITHM;
    internal static string BCRYPT_AES_CMAC_ALGORITHM;
    internal static string BCRYPT_ECDSA_P256_ALGORITHM;
    internal static string BCRYPT_ECDSA_P384_ALGORITHM;
    internal static string BCRYPT_ECDSA_P521_ALGORITHM;
    internal static string BCRYPT_ECDH_P256_ALGORITHM;
    internal static string BCRYPT_ECDH_P384_ALGORITHM;
    internal static string BCRYPT_ECDH_P521_ALGORITHM;
    internal static string BCRYPT_RNG_ALGORITHM;
    internal static string BCRYPT_RNG_FIPS186_DSA_ALGORITHM;
    internal static string BCRYPT_RNG_DUAL_EC_ALGORITHM;
    internal static string BCRYPT_SP800108_CTR_HMAC_ALGORITHM;
    internal static string BCRYPT_SP80056A_CONCAT_ALGORITHM;
    internal static string BCRYPT_PBKDF2_ALGORITHM;
    internal static string BCRYPT_CAPI_KDF_ALGORITHM;
    internal static string BCRYPT_OBJECT_LENGTH;
    internal static string BCRYPT_ALGORITHM_NAME;
    internal static string BCRYPT_PROVIDER_HANDLE;
    internal static string BCRYPT_CHAINING_MODE;
    internal static string BCRYPT_BLOCK_LENGTH;
    internal static string BCRYPT_KEY_LENGTH;
    internal static string BCRYPT_KEY_OBJECT_LENGTH;
    internal static string BCRYPT_KEY_STRENGTH;
    internal static string BCRYPT_KEY_LENGTHS;
    internal static string BCRYPT_BLOCK_SIZE_LIST;
    internal static string BCRYPT_EFFECTIVE_KEY_LENGTH;
    internal static string BCRYPT_HASH_LENGTH;
    internal static string BCRYPT_HASH_OID_LIST;
    internal static string BCRYPT_PADDING_SCHEMES;
    internal static string BCRYPT_SIGNATURE_LENGTH;
    internal static string BCRYPT_HASH_BLOCK_LENGTH;
    internal static string BCRYPT_AUTH_TAG_LENGTH;
    internal static string BCRYPT_PRIMITIVE_TYPE;
    internal static string BCRYPT_IS_KEYED_HASH;
    internal static string BCRYPT_IS_REUSABLE_HASH;
    internal static string BCRYPT_MESSAGE_BLOCK_LENGTH;
    internal static string BCRYPT_CHAIN_MODE_NA;
    internal static string BCRYPT_CHAIN_MODE_CBC;
    internal static string BCRYPT_CHAIN_MODE_ECB;
    internal static string BCRYPT_CHAIN_MODE_CFB;
    internal static string BCRYPT_CHAIN_MODE_CCM;
    internal static string BCRYPT_CHAIN_MODE_GCM;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Microsoft.AspNetCore.Cryptography.CryptoUtil : object {
    public static void Assert(bool condition, string message);
    public static void AssertSafeHandleIsValid(SafeHandle safeHandle);
    public static void AssertPlatformIsWindows();
    public static void AssertPlatformIsWindows8OrLater();
    public static Exception Fail(string message);
    public static T Fail(string message);
    [NullableContextAttribute("0")]
public static bool TimeConstantBuffersAreEqual(Byte* bufA, Byte* bufB, UInt32 count);
    public static bool TimeConstantBuffersAreEqual(Byte[] bufA, int offsetA, int countA, Byte[] bufB, int offsetB, int countB);
}
internal class Microsoft.AspNetCore.Cryptography.DATA_BLOB : ValueType {
    public UInt32 cbData;
    public Byte* pbData;
}
internal static class Microsoft.AspNetCore.Cryptography.Internal.Resources : object {
    private static ResourceManager s_resourceManager;
    [CompilerGeneratedAttribute]
private static CultureInfo <Culture>k__BackingField;
    internal static ResourceManager ResourceManager { get; }
    internal static CultureInfo Culture { get; internal set; }
    internal static string BCryptAlgorithmHandle_ProviderNotFound { get; }
    internal static string BCRYPT_KEY_LENGTHS_STRUCT_InvalidKeyLength { get; }
    internal static string Platform_Windows7Required { get; }
    internal static string Platform_Windows8Required { get; }
    internal static ResourceManager get_ResourceManager();
    [CompilerGeneratedAttribute]
internal static CultureInfo get_Culture();
    [CompilerGeneratedAttribute]
internal static void set_Culture(CultureInfo value);
    internal static string GetResourceString(string resourceKey, string defaultValue);
    private static string GetResourceString(string resourceKey, String[] formatterNames);
    internal static string get_BCryptAlgorithmHandle_ProviderNotFound();
    internal static string FormatBCryptAlgorithmHandle_ProviderNotFound(object p0);
    internal static string get_BCRYPT_KEY_LENGTHS_STRUCT_InvalidKeyLength();
    internal static string FormatBCRYPT_KEY_LENGTHS_STRUCT_InvalidKeyLength(object p0, object p1, object p2, object p3);
    internal static string get_Platform_Windows7Required();
    internal static string get_Platform_Windows8Required();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.AspNetCore.Cryptography.SafeHandles.BCryptAlgorithmHandle : BCryptHandle {
    public BCryptHashHandle CreateHash();
    private BCryptHashHandle CreateHashCore(Byte* pbKey, UInt32 cbKey);
    [NullableContextAttribute("0")]
public BCryptHashHandle CreateHmac(Byte* pbKey, UInt32 cbKey);
    [NullableContextAttribute("0")]
public BCryptKeyHandle GenerateSymmetricKey(Byte* pbSecret, UInt32 cbSecret);
    public string GetAlgorithmName();
    public UInt32 GetCipherBlockLength();
    public UInt32 GetHashBlockLength();
    public BCRYPT_KEY_LENGTHS_STRUCT GetSupportedKeyLengths();
    public UInt32 GetHashDigestLength();
    public static BCryptAlgorithmHandle OpenAlgorithmHandle(string algorithmId, string implementation, bool hmac);
    protected virtual bool ReleaseHandle();
    public void SetChainingMode(string chainingMode);
}
internal abstract class Microsoft.AspNetCore.Cryptography.SafeHandles.BCryptHandle : SafeHandleZeroOrMinusOneIsInvalid {
    protected UInt32 GetProperty(string pszProperty, Void* pbOutput, UInt32 cbOutput);
    protected void SetProperty(string pszProperty, Void* pbInput, UInt32 cbInput);
}
internal class Microsoft.AspNetCore.Cryptography.SafeHandles.BCryptHashHandle : BCryptHandle {
    private BCryptAlgorithmHandle _algProviderHandle;
    [NullableContextAttribute("1")]
public BCryptHashHandle DuplicateHash();
    public void HashData(Byte* pbInput, UInt32 cbInput, Byte* pbHashDigest, UInt32 cbHashDigest);
    protected virtual bool ReleaseHandle();
    [NullableContextAttribute("1")]
internal void SetAlgorithmProviderHandle(BCryptAlgorithmHandle algProviderHandle);
}
internal class Microsoft.AspNetCore.Cryptography.SafeHandles.BCryptKeyHandle : BCryptHandle {
    private BCryptAlgorithmHandle _algProviderHandle;
    protected virtual bool ReleaseHandle();
    [NullableContextAttribute("1")]
internal void SetAlgorithmProviderHandle(BCryptAlgorithmHandle algProviderHandle);
}
internal class Microsoft.AspNetCore.Cryptography.SafeHandles.LocalAllocHandle : SafeHandleZeroOrMinusOneIsInvalid {
    protected virtual bool ReleaseHandle();
}
internal class Microsoft.AspNetCore.Cryptography.SafeHandles.NCryptDescriptorHandle : SafeHandleZeroOrMinusOneIsInvalid {
    [NullableContextAttribute("1")]
public string GetProtectionDescriptorRuleString();
    protected virtual bool ReleaseHandle();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.AspNetCore.Cryptography.SafeHandles.SafeLibraryHandle : SafeHandleZeroOrMinusOneIsInvalid {
    public bool DoesProcExist(string lpProcName);
    public void ForbidUnload();
    [NullableContextAttribute("2")]
public string FormatMessage(int messageId);
    public TDelegate GetProcAddress(string lpProcName, bool throwIfNotFound);
    public static SafeLibraryHandle Open(string filename);
    protected virtual bool ReleaseHandle();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.AspNetCore.Cryptography.SafeHandles.SecureLocalAllocHandle : LocalAllocHandle {
    private IntPtr _cb;
    public IntPtr Length { get; }
    private SecureLocalAllocHandle(IntPtr cb);
    public IntPtr get_Length();
    public static SecureLocalAllocHandle Allocate(IntPtr cb);
    private void AllocateImpl(IntPtr cb);
    public SecureLocalAllocHandle Duplicate();
    protected virtual bool ReleaseHandle();
}
internal static class Microsoft.AspNetCore.Cryptography.UnsafeBufferUtil : object {
    public static void BlockCopy(Void* from, Void* to, int byteCount);
    public static void BlockCopy(Void* from, Void* to, UInt32 byteCount);
    public static void BlockCopy(LocalAllocHandle from, Void* to, UInt32 byteCount);
    public static void BlockCopy(Void* from, LocalAllocHandle to, UInt32 byteCount);
    [NullableContextAttribute("1")]
public static void BlockCopy(LocalAllocHandle from, LocalAllocHandle to, IntPtr length);
    private static void BlockCopyCore(Byte* from, Byte* to, UInt32 byteCount);
    private static void BlockCopyCore(Byte* from, Byte* to, ulong byteCount);
    public static void SecureZeroMemory(Byte* buffer, int byteCount);
    public static void SecureZeroMemory(Byte* buffer, UInt32 byteCount);
    public static void SecureZeroMemory(Byte* buffer, ulong byteCount);
    public static void SecureZeroMemory(Byte* buffer, IntPtr length);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[SuppressUnmanagedCodeSecurityAttribute]
internal static class Microsoft.AspNetCore.Cryptography.UnsafeNativeMethods : object {
    internal static string BCRYPT_LIB;
    private static SafeLibraryHandle _lazyBCryptLibHandle;
    private static string CRYPT32_LIB;
    private static SafeLibraryHandle _lazyCrypt32LibHandle;
    private static string NCRYPT_LIB;
    private static SafeLibraryHandle _lazyNCryptLibHandle;
    [LibraryImportAttribute("bcrypt.dll")]
internal static int BCryptCloseAlgorithmProvider(IntPtr hAlgorithm, UInt32 dwFlags);
    [LibraryImportAttribute("bcrypt.dll")]
[GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "7.0.9.1910")]
[SkipLocalsInitAttribute]
internal static int BCryptCreateHash(BCryptAlgorithmHandle hAlgorithm, BCryptHashHandle& phHash, IntPtr pbHashObject, UInt32 cbHashObject, Byte* pbSecret, UInt32 cbSecret, UInt32 dwFlags);
    [NullableContextAttribute("0")]
[LibraryImportAttribute("bcrypt.dll")]
[GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "7.0.9.1910")]
[SkipLocalsInitAttribute]
internal static int BCryptDecrypt(BCryptKeyHandle hKey, Byte* pbInput, UInt32 cbInput, Void* pPaddingInfo, Byte* pbIV, UInt32 cbIV, Byte* pbOutput, UInt32 cbOutput, UInt32& pcbResult, BCryptEncryptFlags dwFlags);
    [NullableContextAttribute("0")]
[LibraryImportAttribute("bcrypt.dll")]
[GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "7.0.9.1910")]
[SkipLocalsInitAttribute]
internal static int BCryptDeriveKeyPBKDF2(BCryptAlgorithmHandle hPrf, Byte* pbPassword, UInt32 cbPassword, Byte* pbSalt, UInt32 cbSalt, ulong cIterations, Byte* pbDerivedKey, UInt32 cbDerivedKey, UInt32 dwFlags);
    [LibraryImportAttribute("bcrypt.dll")]
internal static int BCryptDestroyHash(IntPtr hHash);
    [LibraryImportAttribute("bcrypt.dll")]
internal static int BCryptDestroyKey(IntPtr hKey);
    [LibraryImportAttribute("bcrypt.dll")]
[GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "7.0.9.1910")]
[SkipLocalsInitAttribute]
internal static int BCryptDuplicateHash(BCryptHashHandle hHash, BCryptHashHandle& phNewHash, IntPtr pbHashObject, UInt32 cbHashObject, UInt32 dwFlags);
    [NullableContextAttribute("0")]
[LibraryImportAttribute("bcrypt.dll")]
[GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "7.0.9.1910")]
[SkipLocalsInitAttribute]
internal static int BCryptEncrypt(BCryptKeyHandle hKey, Byte* pbInput, UInt32 cbInput, Void* pPaddingInfo, Byte* pbIV, UInt32 cbIV, Byte* pbOutput, UInt32 cbOutput, UInt32& pcbResult, BCryptEncryptFlags dwFlags);
    [NullableContextAttribute("0")]
[LibraryImportAttribute("bcrypt.dll")]
[GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "7.0.9.1910")]
[SkipLocalsInitAttribute]
internal static int BCryptFinishHash(BCryptHashHandle hHash, Byte* pbOutput, UInt32 cbOutput, UInt32 dwFlags);
    [LibraryImportAttribute("bcrypt.dll")]
[GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "7.0.9.1910")]
[SkipLocalsInitAttribute]
internal static int BCryptGenerateSymmetricKey(BCryptAlgorithmHandle hAlgorithm, BCryptKeyHandle& phKey, IntPtr pbKeyObject, UInt32 cbKeyObject, Byte* pbSecret, UInt32 cbSecret, UInt32 dwFlags);
    [NullableContextAttribute("0")]
[LibraryImportAttribute("bcrypt.dll")]
internal static int BCryptGenRandom(IntPtr hAlgorithm, Byte* pbBuffer, UInt32 cbBuffer, BCryptGenRandomFlags dwFlags);
    [LibraryImportAttribute("bcrypt.dll")]
[GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "7.0.9.1910")]
[SkipLocalsInitAttribute]
internal static int BCryptGetProperty(BCryptHandle hObject, string pszProperty, Void* pbOutput, UInt32 cbOutput, UInt32& pcbResult, UInt32 dwFlags);
    [NullableContextAttribute("0")]
[LibraryImportAttribute("bcrypt.dll")]
[GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "7.0.9.1910")]
[SkipLocalsInitAttribute]
internal static int BCryptHashData(BCryptHashHandle hHash, Byte* pbInput, UInt32 cbInput, UInt32 dwFlags);
    [NullableContextAttribute("0")]
[LibraryImportAttribute("bcrypt.dll")]
[GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "7.0.9.1910")]
[SkipLocalsInitAttribute]
internal static int BCryptKeyDerivation(BCryptKeyHandle hKey, BCryptBufferDesc* pParameterList, Byte* pbDerivedKey, UInt32 cbDerivedKey, UInt32& pcbResult, UInt32 dwFlags);
    [LibraryImportAttribute("bcrypt.dll")]
[GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "7.0.9.1910")]
[SkipLocalsInitAttribute]
internal static int BCryptOpenAlgorithmProvider(BCryptAlgorithmHandle& phAlgorithm, string pszAlgId, string pszImplementation, UInt32 dwFlags);
    [LibraryImportAttribute("bcrypt.dll")]
[GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "7.0.9.1910")]
[SkipLocalsInitAttribute]
internal static int BCryptSetProperty(BCryptHandle hObject, string pszProperty, Void* pbInput, UInt32 cbInput, UInt32 dwFlags);
    [NullableContextAttribute("0")]
[LibraryImportAttribute("crypt32.dll")]
[GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "7.0.9.1910")]
[SkipLocalsInitAttribute]
internal static bool CryptProtectData(DATA_BLOB* pDataIn, IntPtr szDataDescr, DATA_BLOB* pOptionalEntropy, IntPtr pvReserved, IntPtr pPromptStruct, UInt32 dwFlags, DATA_BLOB* pDataOut);
    [LibraryImportAttribute("crypt32.dll")]
[GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "7.0.9.1910")]
[SkipLocalsInitAttribute]
public static bool CryptProtectMemory(SafeHandle pData, UInt32 cbData, UInt32 dwFlags);
    [NullableContextAttribute("0")]
[LibraryImportAttribute("crypt32.dll")]
[GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "7.0.9.1910")]
[SkipLocalsInitAttribute]
internal static bool CryptUnprotectData(DATA_BLOB* pDataIn, IntPtr ppszDataDescr, DATA_BLOB* pOptionalEntropy, IntPtr pvReserved, IntPtr pPromptStruct, UInt32 dwFlags, DATA_BLOB* pDataOut);
    [NullableContextAttribute("0")]
[LibraryImportAttribute("crypt32.dll")]
[GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "7.0.9.1910")]
[SkipLocalsInitAttribute]
public static bool CryptUnprotectMemory(Byte* pData, UInt32 cbData, UInt32 dwFlags);
    [LibraryImportAttribute("crypt32.dll")]
[GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "7.0.9.1910")]
[SkipLocalsInitAttribute]
public static bool CryptUnprotectMemory(SafeHandle pData, UInt32 cbData, UInt32 dwFlags);
    [LibraryImportAttribute("ncrypt.dll")]
internal static int NCryptCloseProtectionDescriptor(IntPtr hDescriptor);
    [LibraryImportAttribute("ncrypt.dll")]
[GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "7.0.9.1910")]
[SkipLocalsInitAttribute]
internal static int NCryptCreateProtectionDescriptor(string pwszDescriptorString, UInt32 dwFlags, NCryptDescriptorHandle& phDescriptor);
    [LibraryImportAttribute("ncrypt.dll")]
[GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "7.0.9.1910")]
[SkipLocalsInitAttribute]
internal static int NCryptGetProtectionDescriptorInfo(NCryptDescriptorHandle hDescriptor, IntPtr pMemPara, UInt32 dwInfoType, LocalAllocHandle& ppvInfo);
    [LibraryImportAttribute("ncrypt.dll")]
[GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "7.0.9.1910")]
[SkipLocalsInitAttribute]
internal static int NCryptProtectSecret(NCryptDescriptorHandle hDescriptor, UInt32 dwFlags, Byte* pbData, UInt32 cbData, IntPtr pMemPara, IntPtr hWnd, LocalAllocHandle& ppbProtectedBlob, UInt32& pcbProtectedBlob);
    [NullableContextAttribute("0")]
[LibraryImportAttribute("ncrypt.dll")]
[GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "7.0.9.1910")]
[SkipLocalsInitAttribute]
internal static int NCryptUnprotectSecret(IntPtr phDescriptor, UInt32 dwFlags, Byte* pbProtectedBlob, UInt32 cbProtectedBlob, IntPtr pMemPara, IntPtr hWnd, LocalAllocHandle& ppbData, UInt32& pcbData);
    [LibraryImportAttribute("ncrypt.dll")]
[GeneratedCodeAttribute("Microsoft.Interop.LibraryImportGenerator", "7.0.9.1910")]
[SkipLocalsInitAttribute]
internal static int NCryptUnprotectSecret(NCryptDescriptorHandle& phDescriptor, UInt32 dwFlags, Byte* pbProtectedBlob, UInt32 cbProtectedBlob, IntPtr pMemPara, IntPtr hWnd, LocalAllocHandle& ppbData, UInt32& pcbData);
    private static SafeLibraryHandle GetLibHandle(string libraryName, SafeLibraryHandle& safeLibraryHandle);
    private static SafeLibraryHandle GetBCryptLibHandle();
    private static SafeLibraryHandle GetCrypt32LibHandle();
    private static SafeLibraryHandle GetNCryptLibHandle();
    internal static void ThrowExceptionForBCryptStatus(int ntstatus);
    private static void ThrowExceptionForBCryptStatusImpl(int ntstatus);
    public static void ThrowExceptionForLastCrypt32Error();
    internal static void ThrowExceptionForNCryptStatus(int ntstatus);
    private static void ThrowExceptionForNCryptStatusImpl(int ntstatus);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static int <BCryptCreateHash>g____PInvoke|7_0(IntPtr hAlgorithm, IntPtr* phHash, IntPtr pbHashObject, UInt32 cbHashObject, Byte* pbSecret, UInt32 cbSecret, UInt32 dwFlags);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static int <BCryptDecrypt>g____PInvoke|8_0(IntPtr hKey, Byte* pbInput, UInt32 cbInput, Void* pPaddingInfo, Byte* pbIV, UInt32 cbIV, Byte* pbOutput, UInt32 cbOutput, UInt32* pcbResult, BCryptEncryptFlags dwFlags);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static int <BCryptDeriveKeyPBKDF2>g____PInvoke|9_0(IntPtr hPrf, Byte* pbPassword, UInt32 cbPassword, Byte* pbSalt, UInt32 cbSalt, ulong cIterations, Byte* pbDerivedKey, UInt32 cbDerivedKey, UInt32 dwFlags);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static int <BCryptDuplicateHash>g____PInvoke|12_0(IntPtr hHash, IntPtr* phNewHash, IntPtr pbHashObject, UInt32 cbHashObject, UInt32 dwFlags);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static int <BCryptEncrypt>g____PInvoke|13_0(IntPtr hKey, Byte* pbInput, UInt32 cbInput, Void* pPaddingInfo, Byte* pbIV, UInt32 cbIV, Byte* pbOutput, UInt32 cbOutput, UInt32* pcbResult, BCryptEncryptFlags dwFlags);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static int <BCryptFinishHash>g____PInvoke|14_0(IntPtr hHash, Byte* pbOutput, UInt32 cbOutput, UInt32 dwFlags);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static int <BCryptGenerateSymmetricKey>g____PInvoke|15_0(IntPtr hAlgorithm, IntPtr* phKey, IntPtr pbKeyObject, UInt32 cbKeyObject, Byte* pbSecret, UInt32 cbSecret, UInt32 dwFlags);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static int <BCryptGetProperty>g____PInvoke|17_0(IntPtr hObject, UInt16* pszProperty, Void* pbOutput, UInt32 cbOutput, UInt32* pcbResult, UInt32 dwFlags);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static int <BCryptHashData>g____PInvoke|18_0(IntPtr hHash, Byte* pbInput, UInt32 cbInput, UInt32 dwFlags);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static int <BCryptKeyDerivation>g____PInvoke|19_0(IntPtr hKey, BCryptBufferDesc* pParameterList, Byte* pbDerivedKey, UInt32 cbDerivedKey, UInt32* pcbResult, UInt32 dwFlags);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static int <BCryptOpenAlgorithmProvider>g____PInvoke|20_0(IntPtr* phAlgorithm, UInt16* pszAlgId, UInt16* pszImplementation, UInt32 dwFlags);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static int <BCryptSetProperty>g____PInvoke|21_0(IntPtr hObject, UInt16* pszProperty, Void* pbInput, UInt32 cbInput, UInt32 dwFlags);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static int <CryptProtectData>g____PInvoke|22_0(DATA_BLOB* pDataIn, IntPtr szDataDescr, DATA_BLOB* pOptionalEntropy, IntPtr pvReserved, IntPtr pPromptStruct, UInt32 dwFlags, DATA_BLOB* pDataOut);
    [CompilerGeneratedAttribute]
internal static int <CryptProtectMemory>g____PInvoke|23_0(IntPtr pData, UInt32 cbData, UInt32 dwFlags);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static int <CryptUnprotectData>g____PInvoke|24_0(DATA_BLOB* pDataIn, IntPtr ppszDataDescr, DATA_BLOB* pOptionalEntropy, IntPtr pvReserved, IntPtr pPromptStruct, UInt32 dwFlags, DATA_BLOB* pDataOut);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static int <CryptUnprotectMemory>g____PInvoke|25_0(Byte* pData, UInt32 cbData, UInt32 dwFlags);
    [CompilerGeneratedAttribute]
internal static int <CryptUnprotectMemory>g____PInvoke|26_0(IntPtr pData, UInt32 cbData, UInt32 dwFlags);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static int <NCryptCreateProtectionDescriptor>g____PInvoke|28_0(UInt16* pwszDescriptorString, UInt32 dwFlags, IntPtr* phDescriptor);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static int <NCryptGetProtectionDescriptorInfo>g____PInvoke|29_0(IntPtr hDescriptor, IntPtr pMemPara, UInt32 dwInfoType, IntPtr* ppvInfo);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static int <NCryptProtectSecret>g____PInvoke|30_0(IntPtr hDescriptor, UInt32 dwFlags, Byte* pbData, UInt32 cbData, IntPtr pMemPara, IntPtr hWnd, IntPtr* ppbProtectedBlob, UInt32* pcbProtectedBlob);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static int <NCryptUnprotectSecret>g____PInvoke|31_0(IntPtr phDescriptor, UInt32 dwFlags, Byte* pbProtectedBlob, UInt32 cbProtectedBlob, IntPtr pMemPara, IntPtr hWnd, IntPtr* ppbData, UInt32* pcbData);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
internal static int <NCryptUnprotectSecret>g____PInvoke|32_0(IntPtr* phDescriptor, UInt32 dwFlags, Byte* pbProtectedBlob, UInt32 cbProtectedBlob, IntPtr pMemPara, IntPtr hWnd, IntPtr* ppbData, UInt32* pcbData);
}
internal static class Microsoft.AspNetCore.Cryptography.WeakReferenceHelpers : object {
    [NullableContextAttribute("1")]
public static T GetSharedInstance(WeakReference`1& weakReference, Func`1<T> factory);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.NullablePublicOnlyAttribute : Attribute {
    public bool IncludesInternals;
    public NullablePublicOnlyAttribute(bool );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
