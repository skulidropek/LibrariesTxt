[DiagnosticAnalyzerAttribute("Visual Basic", "Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.CodeAnalysis.VisualBasic.Analyzers.FixAnalyzers.BasicFixerWithFixAllAnalyzer : FixerWithFixAllAnalyzer`1<SyntaxKind> {
    protected virtual CompilationAnalyzer<SyntaxKind> GetCompilationAnalyzer(INamedTypeSymbol codeFixProviderSymbol, IMethodSymbol getFixAllProvider, INamedTypeSymbol codeActionSymbol, ImmutableHashSet`1<IMethodSymbol> createMethods, IPropertySymbol equivalenceKeyProperty);
}
[DiagnosticAnalyzerAttribute("Visual Basic", "Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.CodeAnalysis.VisualBasic.Analyzers.MetaAnalyzers.BasicDiagnosticAnalyzerFieldsAnalyzer : DiagnosticAnalyzerFieldsAnalyzer`4<ClassBlockSyntax, FieldDeclarationSyntax, TypeSyntax, SimpleAsClauseSyntax> {
}
[DiagnosticAnalyzerAttribute("Visual Basic", "Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.CodeAnalysis.VisualBasic.Analyzers.MetaAnalyzers.BasicDiagnosticDescriptorCreationAnalyzer : DiagnosticDescriptorCreationAnalyzer`3<ClassBlockSyntax, ObjectCreationExpressionSyntax, SyntaxKind> {
    protected ImmutableArray`1<SyntaxKind> SyntaxKindsOfInterest { get; }
    protected virtual ImmutableArray`1<SyntaxKind> get_SyntaxKindsOfInterest();
    protected virtual CompilationAnalyzer<ClassBlockSyntax, ObjectCreationExpressionSyntax, SyntaxKind> GetAnalyzer(Compilation compilation, INamedTypeSymbol diagnosticDescriptorType);
}
[DiagnosticAnalyzerAttribute("Visual Basic", "Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.CodeAnalysis.VisualBasic.Analyzers.MetaAnalyzers.BasicRegisterActionAnalyzer : RegisterActionAnalyzer`4<ClassBlockSyntax, InvocationExpressionSyntax, ArgumentSyntax, SyntaxKind> {
    private static string s_basicSyntaxKindFullName;
    private static string s_CSharpSyntaxKindFullName;
    private static BasicRegisterActionAnalyzer();
    protected virtual RegisterActionCodeBlockAnalyzer<ClassBlockSyntax, InvocationExpressionSyntax, ArgumentSyntax, SyntaxKind> GetCodeBlockAnalyzer(Compilation compilation, INamedTypeSymbol analysisContext, INamedTypeSymbol compilationStartAnalysisContext, INamedTypeSymbol codeBlockStartAnalysisContext, INamedTypeSymbol symbolKind, INamedTypeSymbol diagnosticAnalyzer, INamedTypeSymbol diagnosticAnalyzerAttribute);
}
[DiagnosticAnalyzerAttribute("Visual Basic", "Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.CodeAnalysis.VisualBasic.Analyzers.MetaAnalyzers.BasicReportDiagnosticAnalyzer : ReportDiagnosticAnalyzer`4<ClassBlockSyntax, InvocationExpressionSyntax, IdentifierNameSyntax, VariableDeclaratorSyntax> {
    protected virtual ReportDiagnosticCompilationAnalyzer<ClassBlockSyntax, InvocationExpressionSyntax, IdentifierNameSyntax, VariableDeclaratorSyntax> GetAnalyzer(ImmutableHashSet`1<INamedTypeSymbol> contextTypes, INamedTypeSymbol diagnosticType, INamedTypeSymbol diagnosticDescriptorType, INamedTypeSymbol diagnosticAnalyzer, INamedTypeSymbol diagnosticAnalyzerAttribute);
}
[ExportCodeFixProviderAttribute("Visual Basic", "Mono.Cecil.CustomAttributeArgument[]")]
[SharedAttribute]
public class Microsoft.CodeAnalysis.VisualBasic.Analyzers.MetaAnalyzers.CodeFixes.BasicApplyDiagnosticAnalyzerAttributeFix : ApplyDiagnosticAnalyzerAttributeFix {
    protected virtual SyntaxNode ParseExpression(string expression);
}
