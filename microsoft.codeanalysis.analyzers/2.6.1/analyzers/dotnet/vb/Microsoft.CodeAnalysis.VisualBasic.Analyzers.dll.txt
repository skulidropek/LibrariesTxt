[DiagnosticAnalyzerAttribute("Visual Basic", "Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.CodeAnalysis.VisualBasic.Analyzers.MetaAnalyzers.BasicDiagnosticAnalyzerApiUsageAnalyzer : DiagnosticAnalyzerApiUsageAnalyzer`1<TypeSyntax> {
    protected virtual bool IsNamedTypeDeclarationBlock(SyntaxNode syntax);
}
[DiagnosticAnalyzerAttribute("Visual Basic", "Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.CodeAnalysis.VisualBasic.Analyzers.MetaAnalyzers.BasicDiagnosticAnalyzerFieldsAnalyzer : DiagnosticAnalyzerFieldsAnalyzer`4<ClassBlockSyntax, FieldDeclarationSyntax, TypeSyntax, SimpleAsClauseSyntax> {
}
[DiagnosticAnalyzerAttribute("Visual Basic", "Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.CodeAnalysis.VisualBasic.Analyzers.MetaAnalyzers.BasicRegisterActionAnalyzer : RegisterActionAnalyzer`4<ClassBlockSyntax, InvocationExpressionSyntax, ArgumentSyntax, SyntaxKind> {
    private static string BasicSyntaxKindFullName;
    private static string CSharpSyntaxKindFullName;
    protected virtual RegisterActionCodeBlockAnalyzer<ClassBlockSyntax, InvocationExpressionSyntax, ArgumentSyntax, SyntaxKind> GetCodeBlockAnalyzer(Compilation compilation, INamedTypeSymbol analysisContext, INamedTypeSymbol compilationStartAnalysisContext, INamedTypeSymbol codeBlockStartAnalysisContext, INamedTypeSymbol operationBlockStartAnalysisContext, INamedTypeSymbol symbolKind);
}
[DiagnosticAnalyzerAttribute("Visual Basic", "Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.CodeAnalysis.VisualBasic.Analyzers.MetaAnalyzers.BasicReportDiagnosticAnalyzer : ReportDiagnosticAnalyzer`4<ClassBlockSyntax, InvocationExpressionSyntax, IdentifierNameSyntax, VariableDeclaratorSyntax> {
    protected virtual ReportDiagnosticCompilationAnalyzer<ClassBlockSyntax, InvocationExpressionSyntax, IdentifierNameSyntax, VariableDeclaratorSyntax> GetAnalyzer(ImmutableHashSet`1<INamedTypeSymbol> contextTypes, INamedTypeSymbol diagnosticType, INamedTypeSymbol diagnosticDescriptorType, INamedTypeSymbol diagnosticAnalyzer, INamedTypeSymbol diagnosticAnalyzerAttribute);
}
[ExportCodeFixProviderAttribute("Visual Basic", "Mono.Cecil.CustomAttributeArgument[]")]
[SharedAttribute]
public class Microsoft.CodeAnalysis.VisualBasic.Analyzers.MetaAnalyzers.CodeFixes.BasicApplyDiagnosticAnalyzerAttributeFix : ApplyDiagnosticAnalyzerAttributeFix {
    protected virtual SyntaxNode ParseExpression(string expression);
}
[DiagnosticAnalyzerAttribute("Visual Basic", "Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.CodeAnalysis.VisualBasic.Analyzers.VisualBasicUpgradeMSBuildWorkspaceAnalyzer : UpgradeMSBuildWorkspaceAnalyzer {
    private VisualBasicUpgradeMSBuildWorkspaceAnalyzer(bool performAssemblyChecks);
    internal static VisualBasicUpgradeMSBuildWorkspaceAnalyzer CreateForTests();
    protected virtual void RegisterIdentifierAnalysis(CompilationStartAnalysisContext context);
    protected virtual void RegisterIdentifierAnalysis(AnalysisContext context);
    private void AnalyzeIdentifier(SyntaxNodeAnalysisContext context);
}
