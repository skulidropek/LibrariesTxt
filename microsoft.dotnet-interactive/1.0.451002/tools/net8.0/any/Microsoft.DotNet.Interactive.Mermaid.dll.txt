[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.DotNet.Interactive.Mermaid.ChooseMermaidKernelDirective : ChooseKernelDirective {
    [CompilerGeneratedAttribute]
private Option`1<string> <WidthOption>k__BackingField;
    [CompilerGeneratedAttribute]
private Option`1<string> <HeightOption>k__BackingField;
    [CompilerGeneratedAttribute]
private Option`1<string> <BackgroundOption>k__BackingField;
    public Option`1<string> WidthOption { get; }
    public Option`1<string> HeightOption { get; }
    public Option`1<string> BackgroundOption { get; }
    public ChooseMermaidKernelDirective(MermaidKernel kernel);
    [CompilerGeneratedAttribute]
public Option`1<string> get_WidthOption();
    [CompilerGeneratedAttribute]
public Option`1<string> get_HeightOption();
    [CompilerGeneratedAttribute]
public Option`1<string> get_BackgroundOption();
}
[ExtensionAttribute]
public static class Microsoft.DotNet.Interactive.Mermaid.MermaidExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static T UseMermaid(T kernel, Uri libraryUri, string libraryVersion, string cacheBuster);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.DotNet.Interactive.Mermaid.MermaidKernel : Kernel {
    [NullableAttribute("2")]
private ChooseMermaidKernelDirective _chooseKernelDirective;
    public ChooseKernelDirective ChooseKernelDirective { get; }
    private sealed virtual override Task Microsoft.DotNet.Interactive.IKernelCommandHandler<Microsoft.DotNet.Interactive.Commands.SubmitCode>.HandleAsync(SubmitCode command, KernelInvocationContext context);
    public virtual ChooseKernelDirective get_ChooseKernelDirective();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[TypeFormatterSourceAttribute("Microsoft.DotNet.Interactive.Mermaid.MermaidMarkdownFormatter")]
public class Microsoft.DotNet.Interactive.Mermaid.MermaidMarkdown : object {
    [CompilerGeneratedAttribute]
private string <Background>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Width>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Height>k__BackingField;
    private string _value;
    internal string Background { get; internal set; }
    internal string Width { get; internal set; }
    internal string Height { get; internal set; }
    public MermaidMarkdown(string value);
    [CompilerGeneratedAttribute]
internal string get_Background();
    [CompilerGeneratedAttribute]
internal void set_Background(string value);
    [CompilerGeneratedAttribute]
internal string get_Width();
    [CompilerGeneratedAttribute]
internal void set_Width(string value);
    [CompilerGeneratedAttribute]
internal string get_Height();
    [CompilerGeneratedAttribute]
internal void set_Height(string value);
    public virtual string ToString();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Microsoft.DotNet.Interactive.Mermaid.MermaidMarkdownFormatter : object {
    [NullableAttribute("1")]
private static string DefaultLibraryVersion;
    [NullableAttribute("1")]
private static Uri DefaultLibraryUri;
    [NullableAttribute("1")]
private static Uri RequireUri;
    private static string _cacheBuster;
    private static Uri _libraryUri;
    private static string _libraryVersion;
    internal static Uri LibraryUri { get; internal set; }
    internal static string LibraryVersion { get; internal set; }
    internal static string CacheBuster { get; internal set; }
    private static MermaidMarkdownFormatter();
    internal static Uri get_LibraryUri();
    internal static void set_LibraryUri(Uri value);
    internal static string get_LibraryVersion();
    internal static void set_LibraryVersion(string value);
    internal static string get_CacheBuster();
    internal static void set_CacheBuster(string value);
    [NullableContextAttribute("1")]
[IteratorStateMachineAttribute("Microsoft.DotNet.Interactive.Mermaid.MermaidMarkdownFormatter/<CreateTypeFormatters>d__15")]
public sealed virtual IEnumerable`1<ITypeFormatter> CreateTypeFormatters();
    [NullableContextAttribute("1")]
internal static IHtmlContent GenerateHtml(MermaidMarkdown markdown, Uri libraryUri, string libraryVersion);
    [NullableContextAttribute("1")]
private static void AppendJsCode(StringBuilder stringBuilder, string divId, Uri libraryUri, string libraryVersion, string markdown);
}
