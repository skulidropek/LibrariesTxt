internal static class FxResources.System.Web.Services.Description.SR : object {
}
internal class System.InvariantComparer : object {
    private CompareInfo _compareInfo;
    internal static InvariantComparer Default;
    private static InvariantComparer();
    public sealed virtual int Compare(object a, object b);
}
internal static class System.SR : object {
    private static ResourceManager s_resourceManager;
    [CompilerGeneratedAttribute]
private static CultureInfo <Culture>k__BackingField;
    internal static ResourceManager ResourceManager { get; }
    internal static CultureInfo Culture { get; internal set; }
    internal static string MissingMessagePartForMessageFromNamespace3 { get; }
    internal static string OnlyOperationInputOrOperationOutputTypes { get; }
    internal static string OnlyXmlElementsOrTypesDerivingFromServiceDescriptionFormatExtension0 { get; }
    internal static string TraceExceptionCaught { get; }
    internal static string TraceExceptionDetails { get; }
    internal static string WebDescriptionMissing { get; }
    internal static string WebDescriptionMissingItem { get; }
    internal static string WebDescriptionTooManyMessages { get; }
    internal static string WebUnknownElement { get; }
    internal static string WebUnknownElement1 { get; }
    internal static string WebUnknownElement2 { get; }
    internal static string WsdlInstanceValidationDetails { get; }
    internal static string WebDuplicateServiceDescription { get; }
    internal static string WebDuplicateFormatExtension { get; }
    internal static string WebDuplicateOperationMessage { get; }
    internal static string WebDuplicateImport { get; }
    internal static string WebDuplicateMessage { get; }
    internal static string WebDuplicatePort { get; }
    internal static string WebDuplicatePortType { get; }
    internal static string WebDuplicateBinding { get; }
    internal static string WebDuplicateService { get; }
    internal static string WebDuplicateMessagePart { get; }
    internal static string WebDuplicateOperationBinding { get; }
    internal static string WebDuplicateFaultBinding { get; }
    internal static string WebDuplicateOperation { get; }
    internal static string WebDuplicateOperationFault { get; }
    internal static string WebDuplicateUnknownElement { get; }
    internal static string RequiredXmlFormatExtensionAttributeIsMissing1 { get; }
    internal static string TheSyntaxOfTypeMayNotBeExtended1 { get; }
    internal static string WebNegativeValue { get; }
    private static bool UsingResourceKeys();
    internal static string Format(string resourceFormat, Object[] args);
    internal static string Format(string resourceFormat, object p1);
    internal static string Format(string resourceFormat, object p1, object p2);
    internal static string Format(string resourceFormat, object p1, object p2, object p3);
    internal static ResourceManager get_ResourceManager();
    [CompilerGeneratedAttribute]
internal static CultureInfo get_Culture();
    [CompilerGeneratedAttribute]
internal static void set_Culture(CultureInfo value);
    internal static string GetResourceString(string resourceKey, string defaultValue);
    internal static string get_MissingMessagePartForMessageFromNamespace3();
    internal static string get_OnlyOperationInputOrOperationOutputTypes();
    internal static string get_OnlyXmlElementsOrTypesDerivingFromServiceDescriptionFormatExtension0();
    internal static string get_TraceExceptionCaught();
    internal static string get_TraceExceptionDetails();
    internal static string get_WebDescriptionMissing();
    internal static string get_WebDescriptionMissingItem();
    internal static string get_WebDescriptionTooManyMessages();
    internal static string get_WebUnknownElement();
    internal static string get_WebUnknownElement1();
    internal static string get_WebUnknownElement2();
    internal static string get_WsdlInstanceValidationDetails();
    internal static string get_WebDuplicateServiceDescription();
    internal static string get_WebDuplicateFormatExtension();
    internal static string get_WebDuplicateOperationMessage();
    internal static string get_WebDuplicateImport();
    internal static string get_WebDuplicateMessage();
    internal static string get_WebDuplicatePort();
    internal static string get_WebDuplicatePortType();
    internal static string get_WebDuplicateBinding();
    internal static string get_WebDuplicateService();
    internal static string get_WebDuplicateMessagePart();
    internal static string get_WebDuplicateOperationBinding();
    internal static string get_WebDuplicateFaultBinding();
    internal static string get_WebDuplicateOperation();
    internal static string get_WebDuplicateOperationFault();
    internal static string get_WebDuplicateUnknownElement();
    internal static string get_RequiredXmlFormatExtensionAttributeIsMissing1();
    internal static string get_TheSyntaxOfTypeMayNotBeExtended1();
    internal static string get_WebNegativeValue();
}
internal class System.Web.Services.Configuration.WebServicesSection : object {
    private Type[] _defaultFormatTypes;
    public static WebServicesSection Current { get; }
    public static WebServicesSection get_Current();
    internal Type[] GetAllFormatExtensionTypes();
    private static XmlFormatExtensionPointAttribute GetExtensionPointAttribute(Type type);
    internal static void LoadXmlFormatExtensions(Type[] extensionTypes, XmlAttributeOverrides overrides, XmlSerializerNamespaces namespaces);
}
[AttributeUsageAttribute("4")]
public class System.Web.Services.Configuration.XmlFormatExtensionAttribute : Attribute {
    private Type[] _types;
    private string _name;
    private string _ns;
    public Type[] ExtensionPoints { get; public set; }
    public string Namespace { get; public set; }
    public string ElementName { get; public set; }
    public XmlFormatExtensionAttribute(string elementName, string ns, Type extensionPoint1);
    public XmlFormatExtensionAttribute(string elementName, string ns, Type extensionPoint1, Type extensionPoint2);
    public XmlFormatExtensionAttribute(string elementName, string ns, Type extensionPoint1, Type extensionPoint2, Type extensionPoint3);
    public XmlFormatExtensionAttribute(string elementName, string ns, Type extensionPoint1, Type extensionPoint2, Type extensionPoint3, Type extensionPoint4);
    public XmlFormatExtensionAttribute(string elementName, string ns, Type[] extensionPoints);
    public Type[] get_ExtensionPoints();
    public void set_ExtensionPoints(Type[] value);
    public string get_Namespace();
    public void set_Namespace(string value);
    public string get_ElementName();
    public void set_ElementName(string value);
}
[AttributeUsageAttribute("4")]
public class System.Web.Services.Configuration.XmlFormatExtensionPointAttribute : Attribute {
    private string _name;
    [CompilerGeneratedAttribute]
private bool <AllowElements>k__BackingField;
    public string MemberName { get; public set; }
    public bool AllowElements { get; public set; }
    public XmlFormatExtensionPointAttribute(string memberName);
    public string get_MemberName();
    public void set_MemberName(string value);
    [CompilerGeneratedAttribute]
public bool get_AllowElements();
    [CompilerGeneratedAttribute]
public void set_AllowElements(bool value);
}
[AttributeUsageAttribute("4")]
public class System.Web.Services.Configuration.XmlFormatExtensionPrefixAttribute : Attribute {
    private string _prefix;
    private string _ns;
    public string Prefix { get; public set; }
    public string Namespace { get; public set; }
    public XmlFormatExtensionPrefixAttribute(string prefix, string ns);
    public string get_Prefix();
    public void set_Prefix(string value);
    public string get_Namespace();
    public void set_Namespace(string value);
}
[XmlFormatExtensionPointAttribute("Extensions")]
public class System.Web.Services.Description.Binding : NamedItem {
    private ServiceDescriptionFormatExtensionCollection _extensions;
    private OperationBindingCollection _operations;
    private XmlQualifiedName _type;
    [CompilerGeneratedAttribute]
private ServiceDescription <ServiceDescription>k__BackingField;
    public ServiceDescription ServiceDescription { get; private set; }
    [XmlIgnoreAttribute]
public ServiceDescriptionFormatExtensionCollection Extensions { get; }
    [XmlElementAttribute("operation")]
public OperationBindingCollection Operations { get; }
    [XmlAttributeAttribute("type")]
public XmlQualifiedName Type { get; public set; }
    internal void SetParent(ServiceDescription parent);
    [CompilerGeneratedAttribute]
public ServiceDescription get_ServiceDescription();
    [CompilerGeneratedAttribute]
private void set_ServiceDescription(ServiceDescription value);
    public virtual ServiceDescriptionFormatExtensionCollection get_Extensions();
    public OperationBindingCollection get_Operations();
    public XmlQualifiedName get_Type();
    public void set_Type(XmlQualifiedName value);
}
[DefaultMemberAttribute("Item")]
public class System.Web.Services.Description.BindingCollection : ServiceDescriptionBaseCollection {
    public Binding Item { get; public set; }
    public Binding Item { get; }
    internal BindingCollection(ServiceDescription serviceDescription);
    public Binding get_Item(int index);
    public void set_Item(int index, Binding value);
    public int Add(Binding binding);
    public void Insert(int index, Binding binding);
    public int IndexOf(Binding binding);
    public bool Contains(Binding binding);
    public void Remove(Binding binding);
    public void CopyTo(Binding[] array, int index);
    public Binding get_Item(string name);
    protected virtual string GetKey(object value);
    protected virtual void SetParent(object value, object parent);
}
public abstract class System.Web.Services.Description.DocumentableItem : object {
    private XmlDocument _parent;
    private string _documentation;
    private XmlElement _documentationElement;
    private XmlSerializerNamespaces _namespaces;
    [CompilerGeneratedAttribute]
private XmlAttribute[] <ExtensibleAttributes>k__BackingField;
    [XmlIgnoreAttribute]
public string Documentation { get; public set; }
    [XmlAnyElementAttribute("documentation")]
public XmlElement DocumentationElement { get; public set; }
    [XmlAnyAttributeAttribute]
public XmlAttribute[] ExtensibleAttributes { get; public set; }
    [XmlNamespaceDeclarationsAttribute]
public XmlSerializerNamespaces Namespaces { get; public set; }
    [XmlIgnoreAttribute]
public ServiceDescriptionFormatExtensionCollection Extensions { get; }
    internal XmlDocument Parent { get; }
    public string get_Documentation();
    public void set_Documentation(string value);
    public XmlElement get_DocumentationElement();
    public void set_DocumentationElement(XmlElement value);
    [CompilerGeneratedAttribute]
public XmlAttribute[] get_ExtensibleAttributes();
    [CompilerGeneratedAttribute]
public void set_ExtensibleAttributes(XmlAttribute[] value);
    public XmlSerializerNamespaces get_Namespaces();
    public void set_Namespaces(XmlSerializerNamespaces value);
    public abstract virtual ServiceDescriptionFormatExtensionCollection get_Extensions();
    internal XmlDocument get_Parent();
}
[XmlFormatExtensionPointAttribute("Extensions")]
public class System.Web.Services.Description.FaultBinding : MessageBinding {
    private ServiceDescriptionFormatExtensionCollection _extensions;
    [XmlIgnoreAttribute]
public ServiceDescriptionFormatExtensionCollection Extensions { get; }
    public virtual ServiceDescriptionFormatExtensionCollection get_Extensions();
}
[DefaultMemberAttribute("Item")]
public class System.Web.Services.Description.FaultBindingCollection : ServiceDescriptionBaseCollection {
    public FaultBinding Item { get; public set; }
    public FaultBinding Item { get; }
    internal FaultBindingCollection(OperationBinding operationBinding);
    public FaultBinding get_Item(int index);
    public void set_Item(int index, FaultBinding value);
    public int Add(FaultBinding bindingOperationFault);
    public void Insert(int index, FaultBinding bindingOperationFault);
    public int IndexOf(FaultBinding bindingOperationFault);
    public bool Contains(FaultBinding bindingOperationFault);
    public void Remove(FaultBinding bindingOperationFault);
    public void CopyTo(FaultBinding[] array, int index);
    public FaultBinding get_Item(string name);
    protected virtual string GetKey(object value);
    protected virtual void SetParent(object value, object parent);
}
[XmlFormatExtensionAttribute("address", "http://schemas.xmlsoap.org/wsdl/http/", "System.Web.Services.Description.Port")]
public class System.Web.Services.Description.HttpAddressBinding : ServiceDescriptionFormatExtension {
    private string _location;
    [XmlAttributeAttribute("location")]
public string Location { get; public set; }
    public string get_Location();
    public void set_Location(string value);
}
[XmlFormatExtensionAttribute("binding", "http://schemas.xmlsoap.org/wsdl/http/", "System.Web.Services.Description.Binding")]
[XmlFormatExtensionPrefixAttribute("http", "http://schemas.xmlsoap.org/wsdl/http/")]
public class System.Web.Services.Description.HttpBinding : ServiceDescriptionFormatExtension {
    public static string Namespace;
    [CompilerGeneratedAttribute]
private string <Verb>k__BackingField;
    [XmlAttributeAttribute("verb")]
public string Verb { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Verb();
    [CompilerGeneratedAttribute]
public void set_Verb(string value);
}
[XmlFormatExtensionAttribute("operation", "http://schemas.xmlsoap.org/wsdl/http/", "System.Web.Services.Description.OperationBinding")]
public class System.Web.Services.Description.HttpOperationBinding : ServiceDescriptionFormatExtension {
    private string _location;
    [XmlAttributeAttribute("location")]
public string Location { get; public set; }
    public string get_Location();
    public void set_Location(string value);
}
[XmlFormatExtensionAttribute("urlEncoded", "http://schemas.xmlsoap.org/wsdl/http/", "System.Web.Services.Description.InputBinding")]
public class System.Web.Services.Description.HttpUrlEncodedBinding : ServiceDescriptionFormatExtension {
}
[XmlFormatExtensionAttribute("urlReplacement", "http://schemas.xmlsoap.org/wsdl/http/", "System.Web.Services.Description.InputBinding")]
public class System.Web.Services.Description.HttpUrlReplacementBinding : ServiceDescriptionFormatExtension {
}
[XmlFormatExtensionPointAttribute("Extensions")]
public class System.Web.Services.Description.Import : DocumentableItem {
    private string _ns;
    private string _location;
    private ServiceDescriptionFormatExtensionCollection _extensions;
    [CompilerGeneratedAttribute]
private ServiceDescription <ServiceDescription>k__BackingField;
    [XmlIgnoreAttribute]
public ServiceDescriptionFormatExtensionCollection Extensions { get; }
    public ServiceDescription ServiceDescription { get; private set; }
    [XmlAttributeAttribute("namespace")]
public string Namespace { get; public set; }
    [XmlAttributeAttribute("location")]
public string Location { get; public set; }
    internal void SetParent(ServiceDescription parent);
    public virtual ServiceDescriptionFormatExtensionCollection get_Extensions();
    [CompilerGeneratedAttribute]
public ServiceDescription get_ServiceDescription();
    [CompilerGeneratedAttribute]
private void set_ServiceDescription(ServiceDescription value);
    public string get_Namespace();
    public void set_Namespace(string value);
    public string get_Location();
    public void set_Location(string value);
}
[DefaultMemberAttribute("Item")]
public class System.Web.Services.Description.ImportCollection : ServiceDescriptionBaseCollection {
    public Import Item { get; public set; }
    internal ImportCollection(ServiceDescription serviceDescription);
    public Import get_Item(int index);
    public void set_Item(int index, Import value);
    public int Add(Import import);
    public void Insert(int index, Import import);
    public int IndexOf(Import import);
    public bool Contains(Import import);
    public void Remove(Import import);
    public void CopyTo(Import[] array, int index);
    protected virtual void SetParent(object value, object parent);
}
[XmlFormatExtensionPointAttribute("Extensions")]
public class System.Web.Services.Description.InputBinding : MessageBinding {
    private ServiceDescriptionFormatExtensionCollection _extensions;
    [XmlIgnoreAttribute]
public ServiceDescriptionFormatExtensionCollection Extensions { get; }
    public virtual ServiceDescriptionFormatExtensionCollection get_Extensions();
}
[XmlFormatExtensionPointAttribute("Extensions")]
public class System.Web.Services.Description.Message : NamedItem {
    private MessagePartCollection _parts;
    private ServiceDescriptionFormatExtensionCollection _extensions;
    [CompilerGeneratedAttribute]
private ServiceDescription <ServiceDescription>k__BackingField;
    [XmlIgnoreAttribute]
public ServiceDescriptionFormatExtensionCollection Extensions { get; }
    public ServiceDescription ServiceDescription { get; private set; }
    [XmlElementAttribute("part")]
public MessagePartCollection Parts { get; }
    internal void SetParent(ServiceDescription parent);
    public virtual ServiceDescriptionFormatExtensionCollection get_Extensions();
    [CompilerGeneratedAttribute]
public ServiceDescription get_ServiceDescription();
    [CompilerGeneratedAttribute]
private void set_ServiceDescription(ServiceDescription value);
    public MessagePartCollection get_Parts();
    public MessagePart[] FindPartsByName(String[] partNames);
    public MessagePart FindPartByName(string partName);
}
public abstract class System.Web.Services.Description.MessageBinding : NamedItem {
    [CompilerGeneratedAttribute]
private OperationBinding <OperationBinding>k__BackingField;
    public OperationBinding OperationBinding { get; private set; }
    internal void SetParent(OperationBinding parent);
    [CompilerGeneratedAttribute]
public OperationBinding get_OperationBinding();
    [CompilerGeneratedAttribute]
private void set_OperationBinding(OperationBinding value);
}
[DefaultMemberAttribute("Item")]
public class System.Web.Services.Description.MessageCollection : ServiceDescriptionBaseCollection {
    public Message Item { get; public set; }
    public Message Item { get; }
    internal MessageCollection(ServiceDescription serviceDescription);
    public Message get_Item(int index);
    public void set_Item(int index, Message value);
    public int Add(Message message);
    public void Insert(int index, Message message);
    public int IndexOf(Message message);
    public bool Contains(Message message);
    public void Remove(Message message);
    public void CopyTo(Message[] array, int index);
    public Message get_Item(string name);
    protected virtual string GetKey(object value);
    protected virtual void SetParent(object value, object parent);
}
[XmlFormatExtensionPointAttribute("Extensions")]
public class System.Web.Services.Description.MessagePart : NamedItem {
    private XmlQualifiedName _type;
    private ServiceDescriptionFormatExtensionCollection _extensions;
    [CompilerGeneratedAttribute]
private Message <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private XmlQualifiedName <Element>k__BackingField;
    [XmlIgnoreAttribute]
public ServiceDescriptionFormatExtensionCollection Extensions { get; }
    public Message Message { get; private set; }
    [XmlAttributeAttribute("element")]
public XmlQualifiedName Element { get; public set; }
    [XmlAttributeAttribute("type")]
public XmlQualifiedName Type { get; public set; }
    internal void SetParent(Message parent);
    public virtual ServiceDescriptionFormatExtensionCollection get_Extensions();
    [CompilerGeneratedAttribute]
public Message get_Message();
    [CompilerGeneratedAttribute]
private void set_Message(Message value);
    [CompilerGeneratedAttribute]
public XmlQualifiedName get_Element();
    [CompilerGeneratedAttribute]
public void set_Element(XmlQualifiedName value);
    public XmlQualifiedName get_Type();
    public void set_Type(XmlQualifiedName value);
}
[DefaultMemberAttribute("Item")]
public class System.Web.Services.Description.MessagePartCollection : ServiceDescriptionBaseCollection {
    public MessagePart Item { get; public set; }
    public MessagePart Item { get; }
    internal MessagePartCollection(Message message);
    public MessagePart get_Item(int index);
    public void set_Item(int index, MessagePart value);
    public int Add(MessagePart messagePart);
    public void Insert(int index, MessagePart messagePart);
    public int IndexOf(MessagePart messagePart);
    public bool Contains(MessagePart messagePart);
    public void Remove(MessagePart messagePart);
    public void CopyTo(MessagePart[] array, int index);
    public MessagePart get_Item(string name);
    protected virtual string GetKey(object value);
    protected virtual void SetParent(object value, object parent);
}
[XmlFormatExtensionAttribute("content", "http://schemas.xmlsoap.org/wsdl/mime/", "System.Web.Services.Description.MimePart", "System.Web.Services.Description.InputBinding", "System.Web.Services.Description.OutputBinding")]
[XmlFormatExtensionPrefixAttribute("mime", "http://schemas.xmlsoap.org/wsdl/mime/")]
public class System.Web.Services.Description.MimeContentBinding : ServiceDescriptionFormatExtension {
    private string _type;
    [CompilerGeneratedAttribute]
private string <Part>k__BackingField;
    public static string Namespace;
    [XmlAttributeAttribute("part")]
public string Part { get; public set; }
    [XmlAttributeAttribute("type")]
public string Type { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Part();
    [CompilerGeneratedAttribute]
public void set_Part(string value);
    public string get_Type();
    public void set_Type(string value);
}
[XmlFormatExtensionAttribute("multipartRelated", "http://schemas.xmlsoap.org/wsdl/mime/", "System.Web.Services.Description.InputBinding", "System.Web.Services.Description.OutputBinding")]
public class System.Web.Services.Description.MimeMultipartRelatedBinding : ServiceDescriptionFormatExtension {
    [CompilerGeneratedAttribute]
private MimePartCollection <Parts>k__BackingField;
    [XmlElementAttribute("part")]
public MimePartCollection Parts { get; }
    [CompilerGeneratedAttribute]
public MimePartCollection get_Parts();
}
[XmlFormatExtensionPointAttribute("Extensions")]
public class System.Web.Services.Description.MimePart : ServiceDescriptionFormatExtension {
    private ServiceDescriptionFormatExtensionCollection _extensions;
    [XmlIgnoreAttribute]
public ServiceDescriptionFormatExtensionCollection Extensions { get; }
    public ServiceDescriptionFormatExtensionCollection get_Extensions();
}
[DefaultMemberAttribute("Item")]
public class System.Web.Services.Description.MimePartCollection : CollectionBase {
    public MimePart Item { get; public set; }
    public MimePart get_Item(int index);
    public void set_Item(int index, MimePart value);
    public int Add(MimePart mimePart);
    public void Insert(int index, MimePart mimePart);
    public int IndexOf(MimePart mimePart);
    public bool Contains(MimePart mimePart);
    public void Remove(MimePart mimePart);
    public void CopyTo(MimePart[] array, int index);
}
[XmlFormatExtensionAttribute("text", "http://microsoft.com/wsdl/mime/textMatching/", "System.Web.Services.Description.InputBinding", "System.Web.Services.Description.OutputBinding", "System.Web.Services.Description.MimePart")]
[XmlFormatExtensionPrefixAttribute("tm", "http://microsoft.com/wsdl/mime/textMatching/")]
public class System.Web.Services.Description.MimeTextBinding : ServiceDescriptionFormatExtension {
    public static string Namespace;
    [CompilerGeneratedAttribute]
private MimeTextMatchCollection <Matches>k__BackingField;
    [XmlElementAttribute("match", "System.Web.Services.Description.MimeTextMatch")]
public MimeTextMatchCollection Matches { get; }
    [CompilerGeneratedAttribute]
public MimeTextMatchCollection get_Matches();
}
public class System.Web.Services.Description.MimeTextMatch : object {
    private string _name;
    private string _type;
    private int _repeats;
    private string _pattern;
    private int _group;
    private int _capture;
    [CompilerGeneratedAttribute]
private bool <IgnoreCase>k__BackingField;
    [CompilerGeneratedAttribute]
private MimeTextMatchCollection <Matches>k__BackingField;
    [XmlAttributeAttribute("name")]
public string Name { get; public set; }
    [XmlAttributeAttribute("type")]
public string Type { get; public set; }
    [XmlAttributeAttribute("group")]
[DefaultValueAttribute("1")]
public int Group { get; public set; }
    [XmlAttributeAttribute("capture")]
[DefaultValueAttribute("0")]
public int Capture { get; public set; }
    [XmlIgnoreAttribute]
public int Repeats { get; public set; }
    [XmlAttributeAttribute("repeats")]
[DefaultValueAttribute("1")]
public string RepeatsString { get; public set; }
    [XmlAttributeAttribute("pattern")]
public string Pattern { get; public set; }
    [XmlAttributeAttribute("ignoreCase")]
public bool IgnoreCase { get; public set; }
    [XmlElementAttribute("match")]
public MimeTextMatchCollection Matches { get; }
    public string get_Name();
    public void set_Name(string value);
    public string get_Type();
    public void set_Type(string value);
    public int get_Group();
    public void set_Group(int value);
    public int get_Capture();
    public void set_Capture(int value);
    public int get_Repeats();
    public void set_Repeats(int value);
    public string get_RepeatsString();
    public void set_RepeatsString(string value);
    public string get_Pattern();
    public void set_Pattern(string value);
    [CompilerGeneratedAttribute]
public bool get_IgnoreCase();
    [CompilerGeneratedAttribute]
public void set_IgnoreCase(bool value);
    [CompilerGeneratedAttribute]
public MimeTextMatchCollection get_Matches();
}
[DefaultMemberAttribute("Item")]
public class System.Web.Services.Description.MimeTextMatchCollection : CollectionBase {
    public MimeTextMatch Item { get; public set; }
    public MimeTextMatch get_Item(int index);
    public void set_Item(int index, MimeTextMatch value);
    public int Add(MimeTextMatch match);
    public void Insert(int index, MimeTextMatch match);
    public int IndexOf(MimeTextMatch match);
    public bool Contains(MimeTextMatch match);
    public void Remove(MimeTextMatch match);
    public void CopyTo(MimeTextMatch[] array, int index);
}
[XmlFormatExtensionAttribute("mimeXml", "http://schemas.xmlsoap.org/wsdl/mime/", "System.Web.Services.Description.MimePart", "System.Web.Services.Description.InputBinding", "System.Web.Services.Description.OutputBinding")]
public class System.Web.Services.Description.MimeXmlBinding : ServiceDescriptionFormatExtension {
    [CompilerGeneratedAttribute]
private string <Part>k__BackingField;
    [XmlAttributeAttribute("part")]
public string Part { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Part();
    [CompilerGeneratedAttribute]
public void set_Part(string value);
}
public abstract class System.Web.Services.Description.NamedItem : DocumentableItem {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [XmlAttributeAttribute("name")]
public string Name { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
}
[XmlFormatExtensionPointAttribute("Extensions")]
public class System.Web.Services.Description.Operation : NamedItem {
    private OperationMessageCollection _messages;
    private OperationFaultCollection _faults;
    private ServiceDescriptionFormatExtensionCollection _extensions;
    [CompilerGeneratedAttribute]
private PortType <PortType>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <ParameterOrder>k__BackingField;
    [XmlIgnoreAttribute]
public ServiceDescriptionFormatExtensionCollection Extensions { get; }
    public PortType PortType { get; private set; }
    [XmlAttributeAttribute("parameterOrder")]
[DefaultValueAttribute("")]
public string ParameterOrderString { get; public set; }
    [XmlIgnoreAttribute]
public String[] ParameterOrder { get; public set; }
    [XmlElementAttribute("input", "System.Web.Services.Description.OperationInput")]
[XmlElementAttribute("output", "System.Web.Services.Description.OperationOutput")]
public OperationMessageCollection Messages { get; }
    [XmlElementAttribute("fault")]
public OperationFaultCollection Faults { get; }
    internal void SetParent(PortType parent);
    public virtual ServiceDescriptionFormatExtensionCollection get_Extensions();
    [CompilerGeneratedAttribute]
public PortType get_PortType();
    [CompilerGeneratedAttribute]
private void set_PortType(PortType value);
    public string get_ParameterOrderString();
    public void set_ParameterOrderString(string value);
    [CompilerGeneratedAttribute]
public String[] get_ParameterOrder();
    [CompilerGeneratedAttribute]
public void set_ParameterOrder(String[] value);
    public OperationMessageCollection get_Messages();
    public OperationFaultCollection get_Faults();
    public bool IsBoundBy(OperationBinding operationBinding);
    private string GetMessageName(string operationName, string messageName, bool isInput);
}
[XmlFormatExtensionPointAttribute("Extensions")]
public class System.Web.Services.Description.OperationBinding : NamedItem {
    private ServiceDescriptionFormatExtensionCollection _extensions;
    private FaultBindingCollection _faults;
    private InputBinding _input;
    private OutputBinding _output;
    [CompilerGeneratedAttribute]
private Binding <Binding>k__BackingField;
    public Binding Binding { get; private set; }
    [XmlIgnoreAttribute]
public ServiceDescriptionFormatExtensionCollection Extensions { get; }
    [XmlElementAttribute("input")]
public InputBinding Input { get; public set; }
    [XmlElementAttribute("output")]
public OutputBinding Output { get; public set; }
    [XmlElementAttribute("fault")]
public FaultBindingCollection Faults { get; }
    internal void SetParent(Binding parent);
    [CompilerGeneratedAttribute]
public Binding get_Binding();
    [CompilerGeneratedAttribute]
private void set_Binding(Binding value);
    public virtual ServiceDescriptionFormatExtensionCollection get_Extensions();
    public InputBinding get_Input();
    public void set_Input(InputBinding value);
    public OutputBinding get_Output();
    public void set_Output(OutputBinding value);
    public FaultBindingCollection get_Faults();
}
[DefaultMemberAttribute("Item")]
public class System.Web.Services.Description.OperationBindingCollection : ServiceDescriptionBaseCollection {
    public OperationBinding Item { get; public set; }
    internal OperationBindingCollection(Binding binding);
    public OperationBinding get_Item(int index);
    public void set_Item(int index, OperationBinding value);
    public int Add(OperationBinding bindingOperation);
    public void Insert(int index, OperationBinding bindingOperation);
    public int IndexOf(OperationBinding bindingOperation);
    public bool Contains(OperationBinding bindingOperation);
    public void Remove(OperationBinding bindingOperation);
    public void CopyTo(OperationBinding[] array, int index);
    protected virtual void SetParent(object value, object parent);
}
[DefaultMemberAttribute("Item")]
public class System.Web.Services.Description.OperationCollection : ServiceDescriptionBaseCollection {
    public Operation Item { get; public set; }
    internal OperationCollection(PortType portType);
    public Operation get_Item(int index);
    public void set_Item(int index, Operation value);
    public int Add(Operation operation);
    public void Insert(int index, Operation operation);
    public int IndexOf(Operation operation);
    public bool Contains(Operation operation);
    public void Remove(Operation operation);
    public void CopyTo(Operation[] array, int index);
    protected virtual void SetParent(object value, object parent);
}
[XmlFormatExtensionPointAttribute("Extensions")]
public class System.Web.Services.Description.OperationFault : OperationMessage {
    private ServiceDescriptionFormatExtensionCollection _extensions;
    [XmlIgnoreAttribute]
public ServiceDescriptionFormatExtensionCollection Extensions { get; }
    public virtual ServiceDescriptionFormatExtensionCollection get_Extensions();
}
[DefaultMemberAttribute("Item")]
public class System.Web.Services.Description.OperationFaultCollection : ServiceDescriptionBaseCollection {
    public OperationFault Item { get; public set; }
    public OperationFault Item { get; }
    internal OperationFaultCollection(Operation operation);
    public OperationFault get_Item(int index);
    public void set_Item(int index, OperationFault value);
    public int Add(OperationFault operationFaultMessage);
    public void Insert(int index, OperationFault operationFaultMessage);
    public int IndexOf(OperationFault operationFaultMessage);
    public bool Contains(OperationFault operationFaultMessage);
    public void Remove(OperationFault operationFaultMessage);
    public void CopyTo(OperationFault[] array, int index);
    public OperationFault get_Item(string name);
    protected virtual string GetKey(object value);
    protected virtual void SetParent(object value, object parent);
}
public enum System.Web.Services.Description.OperationFlow : Enum {
    public int value__;
    public static OperationFlow None;
    public static OperationFlow OneWay;
    public static OperationFlow Notification;
    public static OperationFlow RequestResponse;
    public static OperationFlow SolicitResponse;
}
[XmlFormatExtensionPointAttribute("Extensions")]
public class System.Web.Services.Description.OperationInput : OperationMessage {
    private ServiceDescriptionFormatExtensionCollection _extensions;
    [XmlIgnoreAttribute]
public ServiceDescriptionFormatExtensionCollection Extensions { get; }
    public virtual ServiceDescriptionFormatExtensionCollection get_Extensions();
}
public abstract class System.Web.Services.Description.OperationMessage : NamedItem {
    [CompilerGeneratedAttribute]
private Operation <Operation>k__BackingField;
    [CompilerGeneratedAttribute]
private XmlQualifiedName <Message>k__BackingField;
    public Operation Operation { get; private set; }
    [XmlAttributeAttribute("message")]
public XmlQualifiedName Message { get; public set; }
    internal void SetParent(Operation parent);
    [CompilerGeneratedAttribute]
public Operation get_Operation();
    [CompilerGeneratedAttribute]
private void set_Operation(Operation value);
    [CompilerGeneratedAttribute]
public XmlQualifiedName get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(XmlQualifiedName value);
}
[DefaultMemberAttribute("Item")]
public class System.Web.Services.Description.OperationMessageCollection : ServiceDescriptionBaseCollection {
    public OperationMessage Item { get; public set; }
    public OperationInput Input { get; }
    public OperationOutput Output { get; }
    public OperationFlow Flow { get; }
    internal OperationMessageCollection(Operation operation);
    public OperationMessage get_Item(int index);
    public void set_Item(int index, OperationMessage value);
    public int Add(OperationMessage operationMessage);
    public void Insert(int index, OperationMessage operationMessage);
    public int IndexOf(OperationMessage operationMessage);
    public bool Contains(OperationMessage operationMessage);
    public void Remove(OperationMessage operationMessage);
    public void CopyTo(OperationMessage[] array, int index);
    public OperationInput get_Input();
    public OperationOutput get_Output();
    public OperationFlow get_Flow();
    protected virtual void SetParent(object value, object parent);
    protected virtual void OnInsert(int index, object value);
    protected virtual void OnSet(int index, object oldValue, object newValue);
    protected virtual void OnValidate(object value);
}
[XmlFormatExtensionPointAttribute("Extensions")]
public class System.Web.Services.Description.OperationOutput : OperationMessage {
    private ServiceDescriptionFormatExtensionCollection _extensions;
    [XmlIgnoreAttribute]
public ServiceDescriptionFormatExtensionCollection Extensions { get; }
    public virtual ServiceDescriptionFormatExtensionCollection get_Extensions();
}
[XmlFormatExtensionPointAttribute("Extensions")]
public class System.Web.Services.Description.OutputBinding : MessageBinding {
    private ServiceDescriptionFormatExtensionCollection _extensions;
    [XmlIgnoreAttribute]
public ServiceDescriptionFormatExtensionCollection Extensions { get; }
    public virtual ServiceDescriptionFormatExtensionCollection get_Extensions();
}
[XmlFormatExtensionPointAttribute("Extensions")]
public class System.Web.Services.Description.Port : NamedItem {
    private ServiceDescriptionFormatExtensionCollection _extensions;
    [CompilerGeneratedAttribute]
private Service <Service>k__BackingField;
    [CompilerGeneratedAttribute]
private XmlQualifiedName <Binding>k__BackingField;
    public Service Service { get; private set; }
    [XmlIgnoreAttribute]
public ServiceDescriptionFormatExtensionCollection Extensions { get; }
    [XmlAttributeAttribute("binding")]
public XmlQualifiedName Binding { get; public set; }
    internal void SetParent(Service parent);
    [CompilerGeneratedAttribute]
public Service get_Service();
    [CompilerGeneratedAttribute]
private void set_Service(Service value);
    public virtual ServiceDescriptionFormatExtensionCollection get_Extensions();
    [CompilerGeneratedAttribute]
public XmlQualifiedName get_Binding();
    [CompilerGeneratedAttribute]
public void set_Binding(XmlQualifiedName value);
}
[DefaultMemberAttribute("Item")]
public class System.Web.Services.Description.PortCollection : ServiceDescriptionBaseCollection {
    public Port Item { get; public set; }
    public Port Item { get; }
    internal PortCollection(Service service);
    public Port get_Item(int index);
    public void set_Item(int index, Port value);
    public int Add(Port port);
    public void Insert(int index, Port port);
    public int IndexOf(Port port);
    public bool Contains(Port port);
    public void Remove(Port port);
    public void CopyTo(Port[] array, int index);
    public Port get_Item(string name);
    protected virtual string GetKey(object value);
    protected virtual void SetParent(object value, object parent);
}
[XmlFormatExtensionPointAttribute("Extensions")]
public class System.Web.Services.Description.PortType : NamedItem {
    private OperationCollection _operations;
    private ServiceDescriptionFormatExtensionCollection _extensions;
    [CompilerGeneratedAttribute]
private ServiceDescription <ServiceDescription>k__BackingField;
    [XmlIgnoreAttribute]
public ServiceDescriptionFormatExtensionCollection Extensions { get; }
    public ServiceDescription ServiceDescription { get; private set; }
    [XmlElementAttribute("operation")]
public OperationCollection Operations { get; }
    internal void SetParent(ServiceDescription parent);
    public virtual ServiceDescriptionFormatExtensionCollection get_Extensions();
    [CompilerGeneratedAttribute]
public ServiceDescription get_ServiceDescription();
    [CompilerGeneratedAttribute]
private void set_ServiceDescription(ServiceDescription value);
    public OperationCollection get_Operations();
}
[DefaultMemberAttribute("Item")]
public class System.Web.Services.Description.PortTypeCollection : ServiceDescriptionBaseCollection {
    public PortType Item { get; public set; }
    public PortType Item { get; }
    internal PortTypeCollection(ServiceDescription serviceDescription);
    public PortType get_Item(int index);
    public void set_Item(int index, PortType value);
    public int Add(PortType portType);
    public void Insert(int index, PortType portType);
    public int IndexOf(PortType portType);
    public bool Contains(PortType portType);
    public void Remove(PortType portType);
    public void CopyTo(PortType[] array, int index);
    public PortType get_Item(string name);
    protected virtual string GetKey(object value);
    protected virtual void SetParent(object value, object parent);
}
internal class System.Web.Services.Description.Schemas : object {
    internal static string Wsdl;
    internal static string Soap;
    internal static string WebRef;
    internal static string SoapEncoding;
}
[XmlFormatExtensionPointAttribute("Extensions")]
public class System.Web.Services.Description.Service : NamedItem {
    private ServiceDescriptionFormatExtensionCollection _extensions;
    private PortCollection _ports;
    [CompilerGeneratedAttribute]
private ServiceDescription <ServiceDescription>k__BackingField;
    public ServiceDescription ServiceDescription { get; private set; }
    [XmlIgnoreAttribute]
public ServiceDescriptionFormatExtensionCollection Extensions { get; }
    [XmlElementAttribute("port")]
public PortCollection Ports { get; }
    internal void SetParent(ServiceDescription parent);
    [CompilerGeneratedAttribute]
public ServiceDescription get_ServiceDescription();
    [CompilerGeneratedAttribute]
private void set_ServiceDescription(ServiceDescription value);
    public virtual ServiceDescriptionFormatExtensionCollection get_Extensions();
    public PortCollection get_Ports();
}
[DefaultMemberAttribute("Item")]
public class System.Web.Services.Description.ServiceCollection : ServiceDescriptionBaseCollection {
    public Service Item { get; public set; }
    public Service Item { get; }
    internal ServiceCollection(ServiceDescription serviceDescription);
    public Service get_Item(int index);
    public void set_Item(int index, Service value);
    public int Add(Service service);
    public void Insert(int index, Service service);
    public int IndexOf(Service service);
    public bool Contains(Service service);
    public void Remove(Service service);
    public void CopyTo(Service[] array, int index);
    public Service get_Item(string name);
    protected virtual string GetKey(object value);
    protected virtual void SetParent(object value, object parent);
}
[XmlRootAttribute("definitions")]
[XmlFormatExtensionPointAttribute("Extensions")]
public class System.Web.Services.Description.ServiceDescription : NamedItem {
    internal static string Prefix;
    private static XmlSerializer s_serializer;
    private static XmlSerializerNamespaces s_namespaces;
    private static XmlSchema s_schema;
    private static XmlSchema s_soapEncodingSchema;
    private static StringCollection s_warnings;
    public static string Namespace;
    private static WsiProfiles SupportedClaims;
    private Types _types;
    private ImportCollection _imports;
    private MessageCollection _messages;
    private PortTypeCollection _portTypes;
    private BindingCollection _bindings;
    private ServiceCollection _services;
    private ServiceDescriptionFormatExtensionCollection _extensions;
    private string _retrievalUrl;
    private StringCollection _validationWarnings;
    [CompilerGeneratedAttribute]
private ServiceDescriptionCollection <ServiceDescriptions>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TargetNamespace>k__BackingField;
    [CompilerGeneratedAttribute]
private ServiceDescription <Next>k__BackingField;
    [XmlIgnoreAttribute]
public string RetrievalUrl { get; public set; }
    [XmlIgnoreAttribute]
public ServiceDescriptionCollection ServiceDescriptions { get; private set; }
    [XmlIgnoreAttribute]
public ServiceDescriptionFormatExtensionCollection Extensions { get; }
    [XmlElementAttribute("import")]
public ImportCollection Imports { get; }
    [XmlElementAttribute("types")]
public Types Types { get; public set; }
    [XmlElementAttribute("message")]
public MessageCollection Messages { get; }
    [XmlElementAttribute("portType")]
public PortTypeCollection PortTypes { get; }
    [XmlElementAttribute("binding")]
public BindingCollection Bindings { get; }
    [XmlElementAttribute("service")]
public ServiceCollection Services { get; }
    [XmlAttributeAttribute("targetNamespace")]
public string TargetNamespace { get; public set; }
    public static XmlSchema Schema { get; }
    internal static XmlSchema SoapEncodingSchema { get; }
    [XmlIgnoreAttribute]
public StringCollection ValidationWarnings { get; }
    [XmlIgnoreAttribute]
public static XmlSerializer Serializer { get; }
    internal ServiceDescription Next { get; internal set; }
    private static ServiceDescription();
    private static void InstanceValidation(object sender, ValidationEventArgs args);
    public string get_RetrievalUrl();
    public void set_RetrievalUrl(string value);
    internal void SetParent(ServiceDescriptionCollection parent);
    [CompilerGeneratedAttribute]
public ServiceDescriptionCollection get_ServiceDescriptions();
    [CompilerGeneratedAttribute]
private void set_ServiceDescriptions(ServiceDescriptionCollection value);
    public virtual ServiceDescriptionFormatExtensionCollection get_Extensions();
    public ImportCollection get_Imports();
    public Types get_Types();
    public void set_Types(Types value);
    private bool ShouldSerializeTypes();
    public MessageCollection get_Messages();
    public PortTypeCollection get_PortTypes();
    public BindingCollection get_Bindings();
    public ServiceCollection get_Services();
    [CompilerGeneratedAttribute]
public string get_TargetNamespace();
    [CompilerGeneratedAttribute]
public void set_TargetNamespace(string value);
    public static XmlSchema get_Schema();
    internal static XmlSchema get_SoapEncodingSchema();
    public StringCollection get_ValidationWarnings();
    internal void SetWarnings(StringCollection warnings);
    public static XmlSerializer get_Serializer();
    [CompilerGeneratedAttribute]
internal ServiceDescription get_Next();
    [CompilerGeneratedAttribute]
internal void set_Next(ServiceDescription value);
    public static ServiceDescription Read(TextReader textReader);
    public static ServiceDescription Read(Stream stream);
    public static ServiceDescription Read(XmlReader reader);
    public static ServiceDescription Read(string fileName);
    public static ServiceDescription Read(TextReader textReader, bool validate);
    public static ServiceDescription Read(Stream stream, bool validate);
    public static ServiceDescription Read(string fileName, bool validate);
    public static ServiceDescription Read(XmlReader reader, bool validate);
    public static bool CanRead(XmlReader reader);
    public void Write(string fileName);
    public void Write(TextWriter writer);
    public void Write(Stream stream);
    public void Write(XmlWriter writer);
    internal static WsiProfiles GetConformanceClaims(XmlElement documentation);
    internal static void AddConformanceClaims(XmlElement documentation, WsiProfiles claims);
}
public abstract class System.Web.Services.Description.ServiceDescriptionBaseCollection : CollectionBase {
    private Hashtable _table;
    private object _parent;
    protected IDictionary Table { get; }
    internal ServiceDescriptionBaseCollection(object parent);
    protected virtual IDictionary get_Table();
    protected virtual string GetKey(object value);
    protected virtual void SetParent(object value, object parent);
    protected virtual void OnInsertComplete(int index, object value);
    protected virtual void OnRemove(int index, object value);
    protected virtual void OnClear();
    protected virtual void OnSet(int index, object oldValue, object newValue);
    private void AddValue(object value);
    private void RemoveValue(object value);
    private static string GetDuplicateMessage(Type type, string elemName);
}
[DefaultMemberAttribute("Item")]
public class System.Web.Services.Description.ServiceDescriptionCollection : ServiceDescriptionBaseCollection {
    public ServiceDescription Item { get; public set; }
    public ServiceDescription Item { get; }
    public ServiceDescription get_Item(int index);
    public void set_Item(int index, ServiceDescription value);
    public ServiceDescription get_Item(string ns);
    public int Add(ServiceDescription serviceDescription);
    public void Insert(int index, ServiceDescription serviceDescription);
    public int IndexOf(ServiceDescription serviceDescription);
    public bool Contains(ServiceDescription serviceDescription);
    public void Remove(ServiceDescription serviceDescription);
    public void CopyTo(ServiceDescription[] array, int index);
    protected virtual string GetKey(object value);
    private Exception ItemNotFound(XmlQualifiedName name, string type);
    public Message GetMessage(XmlQualifiedName name);
    public PortType GetPortType(XmlQualifiedName name);
    public Service GetService(XmlQualifiedName name);
    public Binding GetBinding(XmlQualifiedName name);
    private ServiceDescription GetServiceDescription(XmlQualifiedName name);
    protected virtual void SetParent(object value, object parent);
    protected virtual void OnInsertComplete(int index, object value);
}
public abstract class System.Web.Services.Description.ServiceDescriptionFormatExtension : object {
    [CompilerGeneratedAttribute]
private object <Parent>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Required>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Handled>k__BackingField;
    public object Parent { get; private set; }
    [XmlAttributeAttribute("required")]
[DefaultValueAttribute("False")]
public bool Required { get; public set; }
    [XmlIgnoreAttribute]
public bool Handled { get; public set; }
    internal void SetParent(object parent);
    [CompilerGeneratedAttribute]
public object get_Parent();
    [CompilerGeneratedAttribute]
private void set_Parent(object value);
    [CompilerGeneratedAttribute]
public bool get_Required();
    [CompilerGeneratedAttribute]
public void set_Required(bool value);
    [CompilerGeneratedAttribute]
public bool get_Handled();
    [CompilerGeneratedAttribute]
public void set_Handled(bool value);
}
[DefaultMemberAttribute("Item")]
public class System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection : ServiceDescriptionBaseCollection {
    private ArrayList _handledElements;
    public object Item { get; public set; }
    public ServiceDescriptionFormatExtensionCollection(object parent);
    public object get_Item(int index);
    public void set_Item(int index, object value);
    public int Add(object extension);
    public void Insert(int index, object extension);
    public int IndexOf(object extension);
    public bool Contains(object extension);
    public void Remove(object extension);
    public void CopyTo(Object[] array, int index);
    public object Find(Type type);
    public Object[] FindAll(Type type);
    public XmlElement Find(string name, string ns);
    public XmlElement[] FindAll(string name, string ns);
    private void SetHandled(XmlElement element);
    public bool IsHandled(object item);
    public bool IsRequired(object item);
    private bool IsHandled(XmlElement element);
    private bool IsRequired(XmlElement element);
    protected virtual void SetParent(object value, object parent);
    protected virtual void OnValidate(object value);
}
internal class System.Web.Services.Description.ServiceDescriptionSerializationReader : XmlSerializationReader {
    private Hashtable _XmlSchemaDerivationMethodValues;
    private string id133_XmlSchemaSimpleTypeUnion;
    private string id143_maxInclusive;
    private string id46_body;
    private string id190_any;
    private string id88_OperationOutput;
    private string id6_targetNamespace;
    private string id158_XmlSchemaMaxLengthFacet;
    private string id11_portType;
    private string id182_mixed;
    private string id172_keyref;
    private string id187_all;
    private string id162_itemType;
    private string id68_InputBinding;
    private string id25_HttpAddressBinding;
    private string id82_HttpBinding;
    private string id17_address;
    private string id3_ServiceDescription;
    private string id38_SoapFaultBinding;
    private string id123_ref;
    private string id198_XmlSchemaComplexContent;
    private string id53_parts;
    private string id35_use;
    private string id157_XmlSchemaLengthFacet;
    private string id207_XmlSchemaImport;
    private string id44_text;
    private string id117_XmlSchemaAppInfo;
    private string id203_public;
    private string id69_urlEncoded;
    private string id7_documentation;
    private string id19_Item;
    private string id129_final;
    private string id163_XmlSchemaElement;
    private string id60_capture;
    private string id37_encodingStyle;
    private string id185_sequence;
    private string id166_abstract;
    private string id23_location;
    private string id111_XmlSchemaAttributeGroup;
    private string id192_XmlSchemaSequence;
    private string id33_FaultBinding;
    private string id153_XmlSchemaMaxInclusiveFacet;
    private string id201_XmlSchemaGroup;
    private string id43_multipartRelated;
    private string id168_nillable;
    private string id149_value;
    private string id64_MimeMultipartRelatedBinding;
    private string id193_XmlSchemaAny;
    private string id191_XmlSchemaGroupRef;
    private string id74_soapAction;
    private string id63_ignoreCase;
    private string id101_version;
    private string id47_header;
    private string id195_extension;
    private string id48_Soap12HeaderBinding;
    private string id134_memberTypes;
    private string id121_Item;
    private string id146_minExclusive;
    private string id84_PortType;
    private string id42_mimeXml;
    private string id138_minInclusive;
    private string id118_source;
    private string id73_Soap12OperationBinding;
    private string id131_restriction;
    private string id152_XmlSchemaMaxExclusiveFacet;
    private string id135_XmlSchemaSimpleTypeRestriction;
    private string id188_XmlSchemaAll;
    private string id116_appinfo;
    private string id86_parameterOrder;
    private string id147_minLength;
    private string id78_HttpOperationBinding;
    private string id161_XmlSchemaSimpleTypeList;
    private string id205_XmlSchemaRedefine;
    private string id194_XmlSchemaSimpleContent;
    private string id91_MessagePart;
    private string id92_element;
    private string id114_processContents;
    private string id18_Item;
    private string id50_headerfault;
    private string id154_XmlSchemaEnumerationFacet;
    private string id96_XmlSchema;
    private string id127_form;
    private string id176_field;
    private string id49_part;
    private string id5_Item;
    private string id57_match;
    private string id52_Soap12BodyBinding;
    private string id104_redefine;
    private string id20_Item;
    private string id21_Soap12AddressBinding;
    private string id142_enumeration;
    private string id24_SoapAddressBinding;
    private string id103_include;
    private string id139_maxLength;
    private string id165_maxOccurs;
    private string id65_MimePart;
    private string id102_id;
    private string id196_Item;
    private string id140_length;
    private string id27_type;
    private string id106_complexType;
    private string id31_output;
    private string id1_definitions;
    private string id4_name;
    private string id132_union;
    private string id29_OperationBinding;
    private string id170_key;
    private string id45_Item;
    private string id95_Item;
    private string id169_substitutionGroup;
    private string id178_xpath;
    private string id9_types;
    private string id97_attributeFormDefault;
    private string id62_pattern;
    private string id58_MimeTextMatch;
    private string id180_XmlSchemaKey;
    private string id10_message;
    private string id8_import;
    private string id148_XmlSchemaMinLengthFacet;
    private string id105_simpleType;
    private string id181_XmlSchemaComplexType;
    private string id164_minOccurs;
    private string id144_maxExclusive;
    private string id160_XmlSchemaFractionDigitsFacet;
    private string id124_XmlSchemaAttribute;
    private string id209_Import;
    private string id206_schemaLocation;
    private string id179_XmlSchemaUnique;
    private string id75_style;
    private string id119_XmlSchemaDocumentation;
    private string id136_base;
    private string id66_MimeXmlBinding;
    private string id30_input;
    private string id40_content;
    private string id93_Types;
    private string id94_schema;
    private string id200_Item;
    private string id67_MimeContentBinding;
    private string id59_group;
    private string id32_fault;
    private string id80_transport;
    private string id98_blockDefault;
    private string id13_service;
    private string id54_SoapHeaderBinding;
    private string id204_system;
    private string id16_Port;
    private string id108_notation;
    private string id186_choice;
    private string id110_attributeGroup;
    private string id79_Soap12Binding;
    private string id77_SoapOperationBinding;
    private string id115_XmlSchemaAnnotation;
    private string id83_verb;
    private string id72_HttpUrlEncodedBinding;
    private string id39_OutputBinding;
    private string id183_complexContent;
    private string id202_XmlSchemaNotation;
    private string id81_SoapBinding;
    private string id199_Item;
    private string id28_operation;
    private string id122_XmlSchemaAttributeGroupRef;
    private string id155_XmlSchemaPatternFacet;
    private string id76_soapActionRequired;
    private string id90_Message;
    private string id159_XmlSchemaMinInclusiveFacet;
    private string id208_XmlSchemaInclude;
    private string id85_Operation;
    private string id130_list;
    private string id14_Service;
    private string id22_required;
    private string id174_refer;
    private string id71_HttpUrlReplacementBinding;
    private string id56_MimeTextBinding;
    private string id87_OperationFault;
    private string id125_default;
    private string id15_port;
    private string id51_SoapHeaderFaultBinding;
    private string id128_XmlSchemaSimpleType;
    private string id36_namespace;
    private string id175_selector;
    private string id150_XmlSchemaMinExclusiveFacet;
    private string id100_elementFormDefault;
    private string id26_Binding;
    private string id197_Item;
    private string id126_fixed;
    private string id107_annotation;
    private string id99_finalDefault;
    private string id137_fractionDigits;
    private string id70_urlReplacement;
    private string id189_XmlSchemaChoice;
    private string id2_Item;
    private string id112_anyAttribute;
    private string id89_OperationInput;
    private string id141_totalDigits;
    private string id61_repeats;
    private string id184_simpleContent;
    private string id55_SoapBodyBinding;
    private string id145_whiteSpace;
    private string id167_block;
    private string id151_XmlSchemaWhiteSpaceFacet;
    private string id12_binding;
    private string id109_attribute;
    private string id171_unique;
    private string id120_lang;
    private string id173_XmlSchemaKeyref;
    private string id177_XmlSchemaXPath;
    private string id34_Soap12FaultBinding;
    private string id41_Item;
    private string id156_XmlSchemaTotalDigitsFacet;
    private string id113_XmlSchemaAnyAttribute;
    internal Hashtable XmlSchemaDerivationMethodValues { get; }
    public object Read125_definitions();
    private ServiceDescription Read124_ServiceDescription(bool isNullable, bool checkType);
    private Service Read123_Service(bool isNullable, bool checkType);
    private Port Read122_Port(bool isNullable, bool checkType);
    private Soap12AddressBinding Read121_Soap12AddressBinding(bool isNullable, bool checkType);
    private SoapAddressBinding Read119_SoapAddressBinding(bool isNullable, bool checkType);
    private HttpAddressBinding Read118_HttpAddressBinding(bool isNullable, bool checkType);
    private Binding Read117_Binding(bool isNullable, bool checkType);
    private OperationBinding Read116_OperationBinding(bool isNullable, bool checkType);
    private FaultBinding Read115_FaultBinding(bool isNullable, bool checkType);
    private Soap12FaultBinding Read114_Soap12FaultBinding(bool isNullable, bool checkType);
    private SoapBindingUse Read100_SoapBindingUse(string s);
    private SoapFaultBinding Read112_SoapFaultBinding(bool isNullable, bool checkType);
    private SoapBindingUse Read98_SoapBindingUse(string s);
    private OutputBinding Read111_OutputBinding(bool isNullable, bool checkType);
    private Soap12HeaderBinding Read109_Soap12HeaderBinding(bool isNullable, bool checkType);
    private SoapHeaderFaultBinding Read107_SoapHeaderFaultBinding(bool isNullable, bool checkType);
    private Soap12BodyBinding Read102_Soap12BodyBinding(bool isNullable, bool checkType);
    private SoapHeaderBinding Read106_SoapHeaderBinding(bool isNullable, bool checkType);
    private SoapHeaderFaultBinding Read105_SoapHeaderFaultBinding(bool isNullable, bool checkType);
    private SoapBodyBinding Read99_SoapBodyBinding(bool isNullable, bool checkType);
    private MimeTextBinding Read97_MimeTextBinding(bool isNullable, bool checkType);
    private MimeTextMatch Read96_MimeTextMatch(bool isNullable, bool checkType);
    private MimeMultipartRelatedBinding Read104_MimeMultipartRelatedBinding(bool isNullable, bool checkType);
    private MimePart Read103_MimePart(bool isNullable, bool checkType);
    private MimeXmlBinding Read94_MimeXmlBinding(bool isNullable, bool checkType);
    private MimeContentBinding Read93_MimeContentBinding(bool isNullable, bool checkType);
    private InputBinding Read110_InputBinding(bool isNullable, bool checkType);
    private HttpUrlReplacementBinding Read91_HttpUrlReplacementBinding(bool isNullable, bool checkType);
    private HttpUrlEncodedBinding Read90_HttpUrlEncodedBinding(bool isNullable, bool checkType);
    private Soap12OperationBinding Read88_Soap12OperationBinding(bool isNullable, bool checkType);
    private SoapBindingStyle Read82_SoapBindingStyle(string s);
    private SoapOperationBinding Read86_SoapOperationBinding(bool isNullable, bool checkType);
    private SoapBindingStyle Read79_SoapBindingStyle(string s);
    private HttpOperationBinding Read85_HttpOperationBinding(bool isNullable, bool checkType);
    private Soap12Binding Read84_Soap12Binding(bool isNullable, bool checkType);
    private SoapBinding Read80_SoapBinding(bool isNullable, bool checkType);
    private HttpBinding Read77_HttpBinding(bool isNullable, bool checkType);
    private PortType Read75_PortType(bool isNullable, bool checkType);
    private Operation Read74_Operation(bool isNullable, bool checkType);
    private OperationFault Read73_OperationFault(bool isNullable, bool checkType);
    private OperationOutput Read72_OperationOutput(bool isNullable, bool checkType);
    private OperationInput Read71_OperationInput(bool isNullable, bool checkType);
    private Message Read69_Message(bool isNullable, bool checkType);
    private MessagePart Read68_MessagePart(bool isNullable, bool checkType);
    private Types Read67_Types(bool isNullable, bool checkType);
    private XmlSchema Read66_XmlSchema(bool isNullable, bool checkType);
    private XmlSchemaAttributeGroup Read40_XmlSchemaAttributeGroup(bool isNullable, bool checkType);
    private XmlSchemaAnyAttribute Read39_XmlSchemaAnyAttribute(bool isNullable, bool checkType);
    private XmlSchemaAnnotation Read11_XmlSchemaAnnotation(bool isNullable, bool checkType);
    private XmlSchemaAppInfo Read10_XmlSchemaAppInfo(bool isNullable, bool checkType);
    private XmlSchemaDocumentation Read9_XmlSchemaDocumentation(bool isNullable, bool checkType);
    private XmlSchemaContentProcessing Read38_XmlSchemaContentProcessing(string s);
    private XmlSchemaAttributeGroupRef Read37_XmlSchemaAttributeGroupRef(bool isNullable, bool checkType);
    private XmlSchemaAttribute Read36_XmlSchemaAttribute(bool isNullable, bool checkType);
    private XmlSchemaSimpleType Read34_XmlSchemaSimpleType(bool isNullable, bool checkType);
    private XmlSchemaSimpleTypeUnion Read33_XmlSchemaSimpleTypeUnion(bool isNullable, bool checkType);
    private XmlSchemaSimpleTypeRestriction Read32_XmlSchemaSimpleTypeRestriction(bool isNullable, bool checkType);
    private XmlSchemaMinLengthFacet Read31_XmlSchemaMinLengthFacet(bool isNullable, bool checkType);
    private XmlSchemaMinExclusiveFacet Read30_XmlSchemaMinExclusiveFacet(bool isNullable, bool checkType);
    private XmlSchemaWhiteSpaceFacet Read29_XmlSchemaWhiteSpaceFacet(bool isNullable, bool checkType);
    private XmlSchemaMaxExclusiveFacet Read28_XmlSchemaMaxExclusiveFacet(bool isNullable, bool checkType);
    private XmlSchemaMaxInclusiveFacet Read27_XmlSchemaMaxInclusiveFacet(bool isNullable, bool checkType);
    private XmlSchemaEnumerationFacet Read26_XmlSchemaEnumerationFacet(bool isNullable, bool checkType);
    private XmlSchemaPatternFacet Read25_XmlSchemaPatternFacet(bool isNullable, bool checkType);
    private XmlSchemaTotalDigitsFacet Read24_XmlSchemaTotalDigitsFacet(bool isNullable, bool checkType);
    private XmlSchemaLengthFacet Read23_XmlSchemaLengthFacet(bool isNullable, bool checkType);
    private XmlSchemaMaxLengthFacet Read22_XmlSchemaMaxLengthFacet(bool isNullable, bool checkType);
    private XmlSchemaMinInclusiveFacet Read21_XmlSchemaMinInclusiveFacet(bool isNullable, bool checkType);
    private XmlSchemaFractionDigitsFacet Read20_XmlSchemaFractionDigitsFacet(bool isNullable, bool checkType);
    private XmlSchemaSimpleTypeList Read17_XmlSchemaSimpleTypeList(bool isNullable, bool checkType);
    internal Hashtable get_XmlSchemaDerivationMethodValues();
    private XmlSchemaDerivationMethod Read7_XmlSchemaDerivationMethod(string s);
    private XmlSchemaUse Read35_XmlSchemaUse(string s);
    private XmlSchemaForm Read6_XmlSchemaForm(string s);
    private XmlSchemaElement Read52_XmlSchemaElement(bool isNullable, bool checkType);
    private XmlSchemaKeyref Read51_XmlSchemaKeyref(bool isNullable, bool checkType);
    private XmlSchemaXPath Read47_XmlSchemaXPath(bool isNullable, bool checkType);
    private XmlSchemaUnique Read50_XmlSchemaUnique(bool isNullable, bool checkType);
    private XmlSchemaKey Read49_XmlSchemaKey(bool isNullable, bool checkType);
    private XmlSchemaComplexType Read62_XmlSchemaComplexType(bool isNullable, bool checkType);
    private XmlSchemaAll Read55_XmlSchemaAll(bool isNullable, bool checkType);
    private XmlSchemaChoice Read54_XmlSchemaChoice(bool isNullable, bool checkType);
    private XmlSchemaGroupRef Read44_XmlSchemaGroupRef(bool isNullable, bool checkType);
    private XmlSchemaSequence Read53_XmlSchemaSequence(bool isNullable, bool checkType);
    private XmlSchemaAny Read46_XmlSchemaAny(bool isNullable, bool checkType);
    private XmlSchemaSimpleContent Read61_XmlSchemaSimpleContent(bool isNullable, bool checkType);
    private XmlSchemaSimpleContentExtension Read60_Item(bool isNullable, bool checkType);
    private XmlSchemaSimpleContentRestriction Read59_Item(bool isNullable, bool checkType);
    private XmlSchemaComplexContent Read58_XmlSchemaComplexContent(bool isNullable, bool checkType);
    private XmlSchemaComplexContentRestriction Read57_Item(bool isNullable, bool checkType);
    private XmlSchemaComplexContentExtension Read56_Item(bool isNullable, bool checkType);
    private XmlSchemaGroup Read63_XmlSchemaGroup(bool isNullable, bool checkType);
    private XmlSchemaNotation Read65_XmlSchemaNotation(bool isNullable, bool checkType);
    private XmlSchemaRedefine Read64_XmlSchemaRedefine(bool isNullable, bool checkType);
    private XmlSchemaImport Read13_XmlSchemaImport(bool isNullable, bool checkType);
    private XmlSchemaInclude Read12_XmlSchemaInclude(bool isNullable, bool checkType);
    private Import Read4_Import(bool isNullable, bool checkType);
    protected virtual void InitCallbacks();
    protected virtual void InitIDs();
}
internal class System.Web.Services.Description.ServiceDescriptionSerializationWriter : XmlSerializationWriter {
    public void Write125_definitions(object o);
    private void Write124_ServiceDescription(string n, string ns, ServiceDescription o, bool isNullable, bool needType);
    private void Write123_Service(string n, string ns, Service o, bool isNullable, bool needType);
    private void Write122_Port(string n, string ns, Port o, bool isNullable, bool needType);
    private void Write119_SoapAddressBinding(string n, string ns, SoapAddressBinding o, bool isNullable, bool needType);
    private void Write118_HttpAddressBinding(string n, string ns, HttpAddressBinding o, bool isNullable, bool needType);
    private void Write121_Soap12AddressBinding(string n, string ns, Soap12AddressBinding o, bool isNullable, bool needType);
    private void Write117_Binding(string n, string ns, Binding o, bool isNullable, bool needType);
    private void Write116_OperationBinding(string n, string ns, OperationBinding o, bool isNullable, bool needType);
    private void Write115_FaultBinding(string n, string ns, FaultBinding o, bool isNullable, bool needType);
    private void Write112_SoapFaultBinding(string n, string ns, SoapFaultBinding o, bool isNullable, bool needType);
    private string Write98_SoapBindingUse(SoapBindingUse v);
    private void Write114_Soap12FaultBinding(string n, string ns, Soap12FaultBinding o, bool isNullable, bool needType);
    private string Write100_SoapBindingUse(SoapBindingUse v);
    private void Write111_OutputBinding(string n, string ns, OutputBinding o, bool isNullable, bool needType);
    private void Write104_MimeMultipartRelatedBinding(string n, string ns, MimeMultipartRelatedBinding o, bool isNullable, bool needType);
    private void Write103_MimePart(string n, string ns, MimePart o, bool isNullable, bool needType);
    private void Write97_MimeTextBinding(string n, string ns, MimeTextBinding o, bool isNullable, bool needType);
    private void Write96_MimeTextMatch(string n, string ns, MimeTextMatch o, bool isNullable, bool needType);
    private void Write94_MimeXmlBinding(string n, string ns, MimeXmlBinding o, bool isNullable, bool needType);
    private void Write93_MimeContentBinding(string n, string ns, MimeContentBinding o, bool isNullable, bool needType);
    private void Write99_SoapBodyBinding(string n, string ns, SoapBodyBinding o, bool isNullable, bool needType);
    private void Write102_Soap12BodyBinding(string n, string ns, Soap12BodyBinding o, bool isNullable, bool needType);
    private void Write106_SoapHeaderBinding(string n, string ns, SoapHeaderBinding o, bool isNullable, bool needType);
    private void Write105_SoapHeaderFaultBinding(string n, string ns, SoapHeaderFaultBinding o, bool isNullable, bool needType);
    private void Write109_Soap12HeaderBinding(string n, string ns, Soap12HeaderBinding o, bool isNullable, bool needType);
    private void Write107_SoapHeaderFaultBinding(string n, string ns, SoapHeaderFaultBinding o, bool isNullable, bool needType);
    private void Write110_InputBinding(string n, string ns, InputBinding o, bool isNullable, bool needType);
    private void Write90_HttpUrlEncodedBinding(string n, string ns, HttpUrlEncodedBinding o, bool isNullable, bool needType);
    private void Write91_HttpUrlReplacementBinding(string n, string ns, HttpUrlReplacementBinding o, bool isNullable, bool needType);
    private void Write86_SoapOperationBinding(string n, string ns, SoapOperationBinding o, bool isNullable, bool needType);
    private string Write79_SoapBindingStyle(SoapBindingStyle v);
    private void Write85_HttpOperationBinding(string n, string ns, HttpOperationBinding o, bool isNullable, bool needType);
    private void Write88_Soap12OperationBinding(string n, string ns, Soap12OperationBinding o, bool isNullable, bool needType);
    private string Write82_SoapBindingStyle(SoapBindingStyle v);
    private void Write80_SoapBinding(string n, string ns, SoapBinding o, bool isNullable, bool needType);
    private void Write77_HttpBinding(string n, string ns, HttpBinding o, bool isNullable, bool needType);
    private void Write84_Soap12Binding(string n, string ns, Soap12Binding o, bool isNullable, bool needType);
    private void Write75_PortType(string n, string ns, PortType o, bool isNullable, bool needType);
    private void Write74_Operation(string n, string ns, Operation o, bool isNullable, bool needType);
    private void Write73_OperationFault(string n, string ns, OperationFault o, bool isNullable, bool needType);
    private void Write71_OperationInput(string n, string ns, OperationInput o, bool isNullable, bool needType);
    private void Write72_OperationOutput(string n, string ns, OperationOutput o, bool isNullable, bool needType);
    private void Write69_Message(string n, string ns, Message o, bool isNullable, bool needType);
    private void Write68_MessagePart(string n, string ns, MessagePart o, bool isNullable, bool needType);
    private void Write67_Types(string n, string ns, Types o, bool isNullable, bool needType);
    private void Write66_XmlSchema(string n, string ns, XmlSchema o, bool isNullable, bool needType);
    private void Write11_XmlSchemaAnnotation(string n, string ns, XmlSchemaAnnotation o, bool isNullable, bool needType);
    private void Write9_XmlSchemaDocumentation(string n, string ns, XmlSchemaDocumentation o, bool isNullable, bool needType);
    private void Write10_XmlSchemaAppInfo(string n, string ns, XmlSchemaAppInfo o, bool isNullable, bool needType);
    private void Write63_XmlSchemaGroup(string n, string ns, XmlSchemaGroup o, bool isNullable, bool needType);
    private void Write53_XmlSchemaSequence(string n, string ns, XmlSchemaSequence o, bool isNullable, bool needType);
    private void Write46_XmlSchemaAny(string n, string ns, XmlSchemaAny o, bool isNullable, bool needType);
    private string Write38_XmlSchemaContentProcessing(XmlSchemaContentProcessing v);
    private void Write52_XmlSchemaElement(string n, string ns, XmlSchemaElement o, bool isNullable, bool needType);
    private void Write49_XmlSchemaKey(string n, string ns, XmlSchemaKey o, bool isNullable, bool needType);
    private void Write47_XmlSchemaXPath(string n, string ns, XmlSchemaXPath o, bool isNullable, bool needType);
    private void Write50_XmlSchemaUnique(string n, string ns, XmlSchemaUnique o, bool isNullable, bool needType);
    private void Write51_XmlSchemaKeyref(string n, string ns, XmlSchemaKeyref o, bool isNullable, bool needType);
    private void Write34_XmlSchemaSimpleType(string n, string ns, XmlSchemaSimpleType o, bool isNullable, bool needType);
    private void Write17_XmlSchemaSimpleTypeList(string n, string ns, XmlSchemaSimpleTypeList o, bool isNullable, bool needType);
    private void Write32_XmlSchemaSimpleTypeRestriction(string n, string ns, XmlSchemaSimpleTypeRestriction o, bool isNullable, bool needType);
    private void Write26_XmlSchemaEnumerationFacet(string n, string ns, XmlSchemaEnumerationFacet o, bool isNullable, bool needType);
    private void Write27_XmlSchemaMaxInclusiveFacet(string n, string ns, XmlSchemaMaxInclusiveFacet o, bool isNullable, bool needType);
    private void Write21_XmlSchemaMinInclusiveFacet(string n, string ns, XmlSchemaMinInclusiveFacet o, bool isNullable, bool needType);
    private void Write25_XmlSchemaPatternFacet(string n, string ns, XmlSchemaPatternFacet o, bool isNullable, bool needType);
    private void Write30_XmlSchemaMinExclusiveFacet(string n, string ns, XmlSchemaMinExclusiveFacet o, bool isNullable, bool needType);
    private void Write29_XmlSchemaWhiteSpaceFacet(string n, string ns, XmlSchemaWhiteSpaceFacet o, bool isNullable, bool needType);
    private void Write28_XmlSchemaMaxExclusiveFacet(string n, string ns, XmlSchemaMaxExclusiveFacet o, bool isNullable, bool needType);
    private void Write31_XmlSchemaMinLengthFacet(string n, string ns, XmlSchemaMinLengthFacet o, bool isNullable, bool needType);
    private void Write20_XmlSchemaFractionDigitsFacet(string n, string ns, XmlSchemaFractionDigitsFacet o, bool isNullable, bool needType);
    private void Write22_XmlSchemaMaxLengthFacet(string n, string ns, XmlSchemaMaxLengthFacet o, bool isNullable, bool needType);
    private void Write24_XmlSchemaTotalDigitsFacet(string n, string ns, XmlSchemaTotalDigitsFacet o, bool isNullable, bool needType);
    private void Write23_XmlSchemaLengthFacet(string n, string ns, XmlSchemaLengthFacet o, bool isNullable, bool needType);
    private void Write33_XmlSchemaSimpleTypeUnion(string n, string ns, XmlSchemaSimpleTypeUnion o, bool isNullable, bool needType);
    private string Write7_XmlSchemaDerivationMethod(XmlSchemaDerivationMethod v);
    private void Write62_XmlSchemaComplexType(string n, string ns, XmlSchemaComplexType o, bool isNullable, bool needType);
    private void Write39_XmlSchemaAnyAttribute(string n, string ns, XmlSchemaAnyAttribute o, bool isNullable, bool needType);
    private void Write36_XmlSchemaAttribute(string n, string ns, XmlSchemaAttribute o, bool isNullable, bool needType);
    private string Write35_XmlSchemaUse(XmlSchemaUse v);
    private string Write6_XmlSchemaForm(XmlSchemaForm v);
    private void Write37_XmlSchemaAttributeGroupRef(string n, string ns, XmlSchemaAttributeGroupRef o, bool isNullable, bool needType);
    private void Write44_XmlSchemaGroupRef(string n, string ns, XmlSchemaGroupRef o, bool isNullable, bool needType);
    private void Write55_XmlSchemaAll(string n, string ns, XmlSchemaAll o, bool isNullable, bool needType);
    private void Write54_XmlSchemaChoice(string n, string ns, XmlSchemaChoice o, bool isNullable, bool needType);
    private void Write58_XmlSchemaComplexContent(string n, string ns, XmlSchemaComplexContent o, bool isNullable, bool needType);
    private void Write56_Item(string n, string ns, XmlSchemaComplexContentExtension o, bool isNullable, bool needType);
    private void Write57_Item(string n, string ns, XmlSchemaComplexContentRestriction o, bool isNullable, bool needType);
    private void Write61_XmlSchemaSimpleContent(string n, string ns, XmlSchemaSimpleContent o, bool isNullable, bool needType);
    private void Write59_Item(string n, string ns, XmlSchemaSimpleContentRestriction o, bool isNullable, bool needType);
    private void Write60_Item(string n, string ns, XmlSchemaSimpleContentExtension o, bool isNullable, bool needType);
    private void Write65_XmlSchemaNotation(string n, string ns, XmlSchemaNotation o, bool isNullable, bool needType);
    private void Write40_XmlSchemaAttributeGroup(string n, string ns, XmlSchemaAttributeGroup o, bool isNullable, bool needType);
    private void Write12_XmlSchemaInclude(string n, string ns, XmlSchemaInclude o, bool isNullable, bool needType);
    private void Write13_XmlSchemaImport(string n, string ns, XmlSchemaImport o, bool isNullable, bool needType);
    private void Write64_XmlSchemaRedefine(string n, string ns, XmlSchemaRedefine o, bool isNullable, bool needType);
    private void Write4_Import(string n, string ns, Import o, bool isNullable, bool needType);
    protected virtual void InitCallbacks();
}
[XmlFormatExtensionAttribute("address", "http://schemas.xmlsoap.org/wsdl/soap12/", "System.Web.Services.Description.Port")]
public class System.Web.Services.Description.Soap12AddressBinding : SoapAddressBinding {
}
[XmlFormatExtensionAttribute("binding", "http://schemas.xmlsoap.org/wsdl/soap12/", "System.Web.Services.Description.Binding")]
[XmlFormatExtensionPrefixAttribute("soap12", "http://schemas.xmlsoap.org/wsdl/soap12/")]
public class System.Web.Services.Description.Soap12Binding : SoapBinding {
    public static string Namespace;
    public static string HttpTransport;
}
[XmlFormatExtensionAttribute("body", "http://schemas.xmlsoap.org/wsdl/soap12/", "System.Web.Services.Description.InputBinding", "System.Web.Services.Description.OutputBinding", "System.Web.Services.Description.MimePart")]
public class System.Web.Services.Description.Soap12BodyBinding : SoapBodyBinding {
}
[XmlFormatExtensionAttribute("fault", "http://schemas.xmlsoap.org/wsdl/soap12/", "System.Web.Services.Description.FaultBinding")]
public class System.Web.Services.Description.Soap12FaultBinding : SoapFaultBinding {
}
[XmlFormatExtensionAttribute("header", "http://schemas.xmlsoap.org/wsdl/soap12/", "System.Web.Services.Description.InputBinding", "System.Web.Services.Description.OutputBinding")]
public class System.Web.Services.Description.Soap12HeaderBinding : SoapHeaderBinding {
}
[XmlFormatExtensionAttribute("operation", "http://schemas.xmlsoap.org/wsdl/soap12/", "System.Web.Services.Description.OperationBinding")]
public class System.Web.Services.Description.Soap12OperationBinding : SoapOperationBinding {
    [CompilerGeneratedAttribute]
private bool <SoapActionRequired>k__BackingField;
    [CompilerGeneratedAttribute]
private Soap12OperationBinding <DuplicateBySoapAction>k__BackingField;
    [CompilerGeneratedAttribute]
private Soap12OperationBinding <DuplicateByRequestElement>k__BackingField;
    [XmlAttributeAttribute("soapActionRequired")]
[DefaultValueAttribute("False")]
public bool SoapActionRequired { get; public set; }
    internal Soap12OperationBinding DuplicateBySoapAction { get; internal set; }
    internal Soap12OperationBinding DuplicateByRequestElement { get; internal set; }
    [CompilerGeneratedAttribute]
public bool get_SoapActionRequired();
    [CompilerGeneratedAttribute]
public void set_SoapActionRequired(bool value);
    [CompilerGeneratedAttribute]
internal Soap12OperationBinding get_DuplicateBySoapAction();
    [CompilerGeneratedAttribute]
internal void set_DuplicateBySoapAction(Soap12OperationBinding value);
    [CompilerGeneratedAttribute]
internal Soap12OperationBinding get_DuplicateByRequestElement();
    [CompilerGeneratedAttribute]
internal void set_DuplicateByRequestElement(Soap12OperationBinding value);
}
[XmlFormatExtensionAttribute("address", "http://schemas.xmlsoap.org/wsdl/soap/", "System.Web.Services.Description.Port")]
public class System.Web.Services.Description.SoapAddressBinding : ServiceDescriptionFormatExtension {
    private string _location;
    [XmlAttributeAttribute("location")]
public string Location { get; public set; }
    public string get_Location();
    public void set_Location(string value);
}
[XmlFormatExtensionAttribute("binding", "http://schemas.xmlsoap.org/wsdl/soap/", "System.Web.Services.Description.Binding")]
[XmlFormatExtensionPrefixAttribute("soap", "http://schemas.xmlsoap.org/wsdl/soap/")]
[XmlFormatExtensionPrefixAttribute("soapenc", "http://schemas.xmlsoap.org/soap/encoding/")]
public class System.Web.Services.Description.SoapBinding : ServiceDescriptionFormatExtension {
    private string _transport;
    private static XmlSchema s_schema;
    public static string Namespace;
    public static string HttpTransport;
    [CompilerGeneratedAttribute]
private SoapBindingStyle <Style>k__BackingField;
    [XmlAttributeAttribute("transport")]
public string Transport { get; public set; }
    [XmlAttributeAttribute("style")]
[DefaultValueAttribute("Mono.Cecil.CustomAttributeArgument")]
public SoapBindingStyle Style { get; public set; }
    public static XmlSchema Schema { get; }
    public string get_Transport();
    public void set_Transport(string value);
    [CompilerGeneratedAttribute]
public SoapBindingStyle get_Style();
    [CompilerGeneratedAttribute]
public void set_Style(SoapBindingStyle value);
    public static XmlSchema get_Schema();
}
public enum System.Web.Services.Description.SoapBindingStyle : Enum {
    public int value__;
    [XmlIgnoreAttribute]
public static SoapBindingStyle Default;
    [XmlEnumAttribute("document")]
public static SoapBindingStyle Document;
    [XmlEnumAttribute("rpc")]
public static SoapBindingStyle Rpc;
}
public enum System.Web.Services.Description.SoapBindingUse : Enum {
    public int value__;
    [XmlIgnoreAttribute]
public static SoapBindingUse Default;
    [XmlEnumAttribute("encoded")]
public static SoapBindingUse Encoded;
    [XmlEnumAttribute("literal")]
public static SoapBindingUse Literal;
}
[XmlFormatExtensionAttribute("body", "http://schemas.xmlsoap.org/wsdl/soap/", "System.Web.Services.Description.InputBinding", "System.Web.Services.Description.OutputBinding", "System.Web.Services.Description.MimePart")]
public class System.Web.Services.Description.SoapBodyBinding : ServiceDescriptionFormatExtension {
    private string _ns;
    private string _encoding;
    [CompilerGeneratedAttribute]
private SoapBindingUse <Use>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Parts>k__BackingField;
    [XmlAttributeAttribute("use")]
[DefaultValueAttribute("Mono.Cecil.CustomAttributeArgument")]
public SoapBindingUse Use { get; public set; }
    [XmlAttributeAttribute("namespace")]
[DefaultValueAttribute("")]
public string Namespace { get; public set; }
    [XmlAttributeAttribute("encodingStyle")]
[DefaultValueAttribute("")]
public string Encoding { get; public set; }
    [XmlAttributeAttribute("parts")]
public string PartsString { get; public set; }
    [XmlIgnoreAttribute]
public String[] Parts { get; public set; }
    [CompilerGeneratedAttribute]
public SoapBindingUse get_Use();
    [CompilerGeneratedAttribute]
public void set_Use(SoapBindingUse value);
    public string get_Namespace();
    public void set_Namespace(string value);
    public string get_Encoding();
    public void set_Encoding(string value);
    public string get_PartsString();
    public void set_PartsString(string value);
    [CompilerGeneratedAttribute]
public String[] get_Parts();
    [CompilerGeneratedAttribute]
public void set_Parts(String[] value);
}
[XmlFormatExtensionAttribute("fault", "http://schemas.xmlsoap.org/wsdl/soap/", "System.Web.Services.Description.FaultBinding")]
public class System.Web.Services.Description.SoapFaultBinding : ServiceDescriptionFormatExtension {
    private string _ns;
    private string _encoding;
    [CompilerGeneratedAttribute]
private SoapBindingUse <Use>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [XmlAttributeAttribute("use")]
[DefaultValueAttribute("Mono.Cecil.CustomAttributeArgument")]
public SoapBindingUse Use { get; public set; }
    [XmlAttributeAttribute("name")]
public string Name { get; public set; }
    [XmlAttributeAttribute("namespace")]
public string Namespace { get; public set; }
    [XmlAttributeAttribute("encodingStyle")]
[DefaultValueAttribute("")]
public string Encoding { get; public set; }
    [CompilerGeneratedAttribute]
public SoapBindingUse get_Use();
    [CompilerGeneratedAttribute]
public void set_Use(SoapBindingUse value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    public string get_Namespace();
    public void set_Namespace(string value);
    public string get_Encoding();
    public void set_Encoding(string value);
}
[XmlFormatExtensionAttribute("header", "http://schemas.xmlsoap.org/wsdl/soap/", "System.Web.Services.Description.InputBinding", "System.Web.Services.Description.OutputBinding")]
public class System.Web.Services.Description.SoapHeaderBinding : ServiceDescriptionFormatExtension {
    private string _encoding;
    private string _ns;
    [CompilerGeneratedAttribute]
private bool <MapToProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private XmlQualifiedName <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Part>k__BackingField;
    [CompilerGeneratedAttribute]
private SoapBindingUse <Use>k__BackingField;
    [CompilerGeneratedAttribute]
private SoapHeaderFaultBinding <Fault>k__BackingField;
    [XmlIgnoreAttribute]
public bool MapToProperty { get; public set; }
    [XmlAttributeAttribute("message")]
public XmlQualifiedName Message { get; public set; }
    [XmlAttributeAttribute("part")]
public string Part { get; public set; }
    [XmlAttributeAttribute("use")]
[DefaultValueAttribute("Mono.Cecil.CustomAttributeArgument")]
public SoapBindingUse Use { get; public set; }
    [XmlAttributeAttribute("encodingStyle")]
[DefaultValueAttribute("")]
public string Encoding { get; public set; }
    [XmlAttributeAttribute("namespace")]
[DefaultValueAttribute("")]
public string Namespace { get; public set; }
    [XmlElementAttribute("headerfault")]
public SoapHeaderFaultBinding Fault { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_MapToProperty();
    [CompilerGeneratedAttribute]
public void set_MapToProperty(bool value);
    [CompilerGeneratedAttribute]
public XmlQualifiedName get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(XmlQualifiedName value);
    [CompilerGeneratedAttribute]
public string get_Part();
    [CompilerGeneratedAttribute]
public void set_Part(string value);
    [CompilerGeneratedAttribute]
public SoapBindingUse get_Use();
    [CompilerGeneratedAttribute]
public void set_Use(SoapBindingUse value);
    public string get_Encoding();
    public void set_Encoding(string value);
    public string get_Namespace();
    public void set_Namespace(string value);
    [CompilerGeneratedAttribute]
public SoapHeaderFaultBinding get_Fault();
    [CompilerGeneratedAttribute]
public void set_Fault(SoapHeaderFaultBinding value);
}
public class System.Web.Services.Description.SoapHeaderFaultBinding : ServiceDescriptionFormatExtension {
    private string _encoding;
    private string _ns;
    [CompilerGeneratedAttribute]
private XmlQualifiedName <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Part>k__BackingField;
    [CompilerGeneratedAttribute]
private SoapBindingUse <Use>k__BackingField;
    [XmlAttributeAttribute("message")]
public XmlQualifiedName Message { get; public set; }
    [XmlAttributeAttribute("part")]
public string Part { get; public set; }
    [XmlAttributeAttribute("use")]
[DefaultValueAttribute("Mono.Cecil.CustomAttributeArgument")]
public SoapBindingUse Use { get; public set; }
    [XmlAttributeAttribute("encodingStyle")]
[DefaultValueAttribute("")]
public string Encoding { get; public set; }
    [XmlAttributeAttribute("namespace")]
[DefaultValueAttribute("")]
public string Namespace { get; public set; }
    [CompilerGeneratedAttribute]
public XmlQualifiedName get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(XmlQualifiedName value);
    [CompilerGeneratedAttribute]
public string get_Part();
    [CompilerGeneratedAttribute]
public void set_Part(string value);
    [CompilerGeneratedAttribute]
public SoapBindingUse get_Use();
    [CompilerGeneratedAttribute]
public void set_Use(SoapBindingUse value);
    public string get_Encoding();
    public void set_Encoding(string value);
    public string get_Namespace();
    public void set_Namespace(string value);
}
[XmlFormatExtensionAttribute("operation", "http://schemas.xmlsoap.org/wsdl/soap/", "System.Web.Services.Description.OperationBinding")]
public class System.Web.Services.Description.SoapOperationBinding : ServiceDescriptionFormatExtension {
    private string _soapAction;
    [CompilerGeneratedAttribute]
private SoapBindingStyle <Style>k__BackingField;
    [XmlAttributeAttribute("soapAction")]
public string SoapAction { get; public set; }
    [XmlAttributeAttribute("style")]
[DefaultValueAttribute("Mono.Cecil.CustomAttributeArgument")]
public SoapBindingStyle Style { get; public set; }
    public string get_SoapAction();
    public void set_SoapAction(string value);
    [CompilerGeneratedAttribute]
public SoapBindingStyle get_Style();
    [CompilerGeneratedAttribute]
public void set_Style(SoapBindingStyle value);
}
[XmlFormatExtensionPointAttribute("Extensions")]
public class System.Web.Services.Description.Types : DocumentableItem {
    private XmlSchemas _schemas;
    private ServiceDescriptionFormatExtensionCollection _extensions;
    [XmlIgnoreAttribute]
public ServiceDescriptionFormatExtensionCollection Extensions { get; }
    [XmlElementAttribute("schema", "System.Xml.Schema.XmlSchema")]
public XmlSchemas Schemas { get; }
    internal bool HasItems();
    public virtual ServiceDescriptionFormatExtensionCollection get_Extensions();
    public XmlSchemas get_Schemas();
}
internal class System.Web.Services.Diagnostics.TraceMethod : object {
    internal static string MethodId(object target, string method);
    private static void WriteObjectId(StringBuilder sb, object o);
    private static string HashString(object objectValue);
}
internal static class System.Web.Services.Diagnostics.Tracing : object {
    private static bool s_tracingEnabled;
    private static bool s_tracingInitialized;
    private static bool s_appDomainShutdown;
    private static string TraceSourceAsmx;
    private static TraceSource s_asmxTraceSource;
    private static object s_internalSyncObject;
    private static object InternalSyncObject { get; }
    internal static bool IsVerbose { get; }
    internal static TraceSource Asmx { get; }
    private static Tracing();
    private static object get_InternalSyncObject();
    internal static bool get_IsVerbose();
    internal static TraceSource get_Asmx();
    private static void InitializeLogging();
    private static void Close();
    private static void UnhandledExceptionHandler(object sender, UnhandledExceptionEventArgs args);
    private static void ProcessExitEvent(object sender, EventArgs e);
    private static void AppDomainUnloadEvent(object sender, EventArgs e);
    private static bool ValidateSettings(TraceSource traceSource, TraceEventType traceLevel);
    private static void TraceEvent(TraceEventType eventType, string format);
    internal static Exception ExceptionCatch(TraceEventType eventType, object target, string method, Exception e);
    private static void StackTrace(TraceEventType eventType, Exception e);
    internal static void OnUnknownElement(object sender, XmlElementEventArgs e);
}
internal static class System.Web.Services.Protocols.RuntimeUtils : object {
    internal static string ElementString(XmlElement element);
    internal static void OnUnknownElement(object sender, XmlElementEventArgs e);
}
internal class System.Web.Services.Soap : object {
    internal static string XmlNamespace;
    internal static string Encoding;
    internal static string Namespace;
    internal static string ConformanceClaim;
    internal static string BasicProfile1_1;
    internal static string Action;
    internal static string ArrayType;
    internal static string Prefix;
    internal static string ClaimPrefix;
    internal static string DimeContentType;
    internal static string SoapContentType;
}
internal class System.Web.Services.Soap12 : object {
    internal static string Namespace;
    internal static string Encoding;
    internal static string RpcNamespace;
    internal static string Prefix;
}
[FlagsAttribute]
public enum System.Web.Services.WsiProfiles : Enum {
    public int value__;
    public static WsiProfiles None;
    public static WsiProfiles BasicProfile1_1;
}
