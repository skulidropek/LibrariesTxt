[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Json.More.EnumStringConverter`1 : WeaklyTypedJsonConverter`1<T> {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Dictionary`2<string, T> _readValues;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Dictionary`2<T, string> _writeValues;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Func`3<T, T, T> _aggregator;
    private static object _lock;
    private static Dictionary`2<string, T> ReadValues { get; }
    private static Dictionary`2<T, string> WriteValues { get; }
    private static Func`3<T, T, T> Aggregator { get; }
    private static EnumStringConverter`1();
    private static Dictionary`2<string, T> get_ReadValues();
    private static Dictionary`2<T, string> get_WriteValues();
    private static Func`3<T, T, T> get_Aggregator();
    public virtual T Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual T ReadAsPropertyName(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, T value, JsonSerializerOptions options);
    public virtual void WriteAsPropertyName(Utf8JsonWriter writer, T value, JsonSerializerOptions options);
    private static Func`3<T, T, T> BuildAggregator();
    private static void EnsureMap();
}
[NullableContextAttribute("1")]
public interface Json.More.IWeaklyTypedJsonConverter {
    public abstract virtual object Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public abstract virtual void Write(Utf8JsonWriter writer, object value, JsonSerializerOptions options, JsonTypeInfo typeInfo);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed and might need runtime code generation. Use System.Text.Json source generation for native AOT applications.")]
public class Json.More.JsonArrayTupleConverter : JsonConverterFactory {
    public virtual bool CanConvert(Type typeToConvert);
    [UnconditionalSuppressMessageAttribute("Trimming", "IL2026:Members annotated with 'RequiresUnreferencedCodeAttribute' require dynamic access otherwise can break functionality when trimming application code")]
[UnconditionalSuppressMessageAttribute("AOT", "IL3050:Calling members annotated with 'RequiresDynamicCodeAttribute' may break functionality when AOT compiling.")]
public virtual JsonConverter CreateConverter(Type typeToConvert, JsonSerializerOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Json.More.JsonArrayTupleConverter`1 : JsonConverter`1<ValueTuple`1<T>> {
    [UnconditionalSuppressMessageAttribute("Trimming", "IL2026:Members annotated with 'RequiresUnreferencedCodeAttribute' require dynamic access otherwise can break functionality when trimming application code")]
[UnconditionalSuppressMessageAttribute("AOT", "IL3050:Calling members annotated with 'RequiresDynamicCodeAttribute' may break functionality when AOT compiling.")]
public virtual ValueTuple`1<T> Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    [UnconditionalSuppressMessageAttribute("Trimming", "IL2026:Members annotated with 'RequiresUnreferencedCodeAttribute' require dynamic access otherwise can break functionality when trimming application code")]
[UnconditionalSuppressMessageAttribute("AOT", "IL3050:Calling members annotated with 'RequiresDynamicCodeAttribute' may break functionality when AOT compiling.")]
public virtual void Write(Utf8JsonWriter writer, ValueTuple`1<T> value, JsonSerializerOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Json.More.JsonArrayTupleConverter`2 : JsonConverter`1<ValueTuple`2<T1, T2>> {
    [UnconditionalSuppressMessageAttribute("Trimming", "IL2026:Members annotated with 'RequiresUnreferencedCodeAttribute' require dynamic access otherwise can break functionality when trimming application code")]
[UnconditionalSuppressMessageAttribute("AOT", "IL3050:Calling members annotated with 'RequiresDynamicCodeAttribute' may break functionality when AOT compiling.")]
public virtual ValueTuple`2<T1, T2> Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    [UnconditionalSuppressMessageAttribute("Trimming", "IL2026:Members annotated with 'RequiresUnreferencedCodeAttribute' require dynamic access otherwise can break functionality when trimming application code")]
[UnconditionalSuppressMessageAttribute("AOT", "IL3050:Calling members annotated with 'RequiresDynamicCodeAttribute' may break functionality when AOT compiling.")]
public virtual void Write(Utf8JsonWriter writer, ValueTuple`2<T1, T2> value, JsonSerializerOptions options);
}
[NullableContextAttribute("2")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Json.More.JsonArrayTupleConverter`3 : JsonConverter`1<ValueTuple`3<T1, T2, T3>> {
    [NullableContextAttribute("1")]
[UnconditionalSuppressMessageAttribute("Trimming", "IL2026:Members annotated with 'RequiresUnreferencedCodeAttribute' require dynamic access otherwise can break functionality when trimming application code")]
[UnconditionalSuppressMessageAttribute("AOT", "IL3050:Calling members annotated with 'RequiresDynamicCodeAttribute' may break functionality when AOT compiling.")]
public virtual ValueTuple`3<T1, T2, T3> Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    [NullableContextAttribute("1")]
[UnconditionalSuppressMessageAttribute("Trimming", "IL2026:Members annotated with 'RequiresUnreferencedCodeAttribute' require dynamic access otherwise can break functionality when trimming application code")]
[UnconditionalSuppressMessageAttribute("AOT", "IL3050:Calling members annotated with 'RequiresDynamicCodeAttribute' may break functionality when AOT compiling.")]
public virtual void Write(Utf8JsonWriter writer, ValueTuple`3<T1, T2, T3> value, JsonSerializerOptions options);
}
[NullableContextAttribute("2")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Json.More.JsonArrayTupleConverter`4 : JsonConverter`1<ValueTuple`4<T1, T2, T3, T4>> {
    [NullableContextAttribute("1")]
[UnconditionalSuppressMessageAttribute("Trimming", "IL2026:Members annotated with 'RequiresUnreferencedCodeAttribute' require dynamic access otherwise can break functionality when trimming application code")]
[UnconditionalSuppressMessageAttribute("AOT", "IL3050:Calling members annotated with 'RequiresDynamicCodeAttribute' may break functionality when AOT compiling.")]
public virtual ValueTuple`4<T1, T2, T3, T4> Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    [NullableContextAttribute("1")]
[UnconditionalSuppressMessageAttribute("Trimming", "IL2026:Members annotated with 'RequiresUnreferencedCodeAttribute' require dynamic access otherwise can break functionality when trimming application code")]
[UnconditionalSuppressMessageAttribute("AOT", "IL3050:Calling members annotated with 'RequiresDynamicCodeAttribute' may break functionality when AOT compiling.")]
public virtual void Write(Utf8JsonWriter writer, ValueTuple`4<T1, T2, T3, T4> value, JsonSerializerOptions options);
}
[NullableContextAttribute("2")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Json.More.JsonArrayTupleConverter`5 : JsonConverter`1<ValueTuple`5<T1, T2, T3, T4, T5>> {
    [NullableContextAttribute("1")]
[UnconditionalSuppressMessageAttribute("Trimming", "IL2026:Members annotated with 'RequiresUnreferencedCodeAttribute' require dynamic access otherwise can break functionality when trimming application code")]
[UnconditionalSuppressMessageAttribute("AOT", "IL3050:Calling members annotated with 'RequiresDynamicCodeAttribute' may break functionality when AOT compiling.")]
public virtual ValueTuple`5<T1, T2, T3, T4, T5> Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    [NullableContextAttribute("1")]
[UnconditionalSuppressMessageAttribute("Trimming", "IL2026:Members annotated with 'RequiresUnreferencedCodeAttribute' require dynamic access otherwise can break functionality when trimming application code")]
[UnconditionalSuppressMessageAttribute("AOT", "IL3050:Calling members annotated with 'RequiresDynamicCodeAttribute' may break functionality when AOT compiling.")]
public virtual void Write(Utf8JsonWriter writer, ValueTuple`5<T1, T2, T3, T4, T5> value, JsonSerializerOptions options);
}
[NullableContextAttribute("2")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Json.More.JsonArrayTupleConverter`6 : JsonConverter`1<ValueTuple`6<T1, T2, T3, T4, T5, T6>> {
    [NullableContextAttribute("1")]
[UnconditionalSuppressMessageAttribute("Trimming", "IL2026:Members annotated with 'RequiresUnreferencedCodeAttribute' require dynamic access otherwise can break functionality when trimming application code")]
[UnconditionalSuppressMessageAttribute("AOT", "IL3050:Calling members annotated with 'RequiresDynamicCodeAttribute' may break functionality when AOT compiling.")]
public virtual ValueTuple`6<T1, T2, T3, T4, T5, T6> Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    [NullableContextAttribute("1")]
[UnconditionalSuppressMessageAttribute("Trimming", "IL2026:Members annotated with 'RequiresUnreferencedCodeAttribute' require dynamic access otherwise can break functionality when trimming application code")]
[UnconditionalSuppressMessageAttribute("AOT", "IL3050:Calling members annotated with 'RequiresDynamicCodeAttribute' may break functionality when AOT compiling.")]
public virtual void Write(Utf8JsonWriter writer, ValueTuple`6<T1, T2, T3, T4, T5, T6> value, JsonSerializerOptions options);
}
[NullableContextAttribute("2")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Json.More.JsonArrayTupleConverter`7 : JsonConverter`1<ValueTuple`7<T1, T2, T3, T4, T5, T6, T7>> {
    [NullableContextAttribute("1")]
[UnconditionalSuppressMessageAttribute("Trimming", "IL2026:Members annotated with 'RequiresUnreferencedCodeAttribute' require dynamic access otherwise can break functionality when trimming application code")]
[UnconditionalSuppressMessageAttribute("AOT", "IL3050:Calling members annotated with 'RequiresDynamicCodeAttribute' may break functionality when AOT compiling.")]
public virtual ValueTuple`7<T1, T2, T3, T4, T5, T6, T7> Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    [NullableContextAttribute("1")]
[UnconditionalSuppressMessageAttribute("Trimming", "IL2026:Members annotated with 'RequiresUnreferencedCodeAttribute' require dynamic access otherwise can break functionality when trimming application code")]
[UnconditionalSuppressMessageAttribute("AOT", "IL3050:Calling members annotated with 'RequiresDynamicCodeAttribute' may break functionality when AOT compiling.")]
public virtual void Write(Utf8JsonWriter writer, ValueTuple`7<T1, T2, T3, T4, T5, T6, T7> value, JsonSerializerOptions options);
}
[NullableContextAttribute("2")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Json.More.JsonArrayTupleConverter`8 : JsonConverter`1<ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, TRest>> {
    [NullableContextAttribute("1")]
[UnconditionalSuppressMessageAttribute("Trimming", "IL2026:Members annotated with 'RequiresUnreferencedCodeAttribute' require dynamic access otherwise can break functionality when trimming application code")]
[UnconditionalSuppressMessageAttribute("AOT", "IL3050:Calling members annotated with 'RequiresDynamicCodeAttribute' may break functionality when AOT compiling.")]
public virtual ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, TRest> Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    [NullableContextAttribute("1")]
[UnconditionalSuppressMessageAttribute("Trimming", "IL2026:Members annotated with 'RequiresUnreferencedCodeAttribute' require dynamic access otherwise can break functionality when trimming application code")]
[UnconditionalSuppressMessageAttribute("AOT", "IL3050:Calling members annotated with 'RequiresDynamicCodeAttribute' may break functionality when AOT compiling.")]
public virtual void Write(Utf8JsonWriter writer, ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, TRest> value, JsonSerializerOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Json.More.JsonDocumentEqualityComparer : object {
    [CompilerGeneratedAttribute]
private static JsonDocumentEqualityComparer <Instance>k__BackingField;
    public static JsonDocumentEqualityComparer Instance { get; }
    private static JsonDocumentEqualityComparer();
    [CompilerGeneratedAttribute]
public static JsonDocumentEqualityComparer get_Instance();
    [NullableContextAttribute("2")]
public sealed virtual bool Equals(JsonDocument x, JsonDocument y);
    public sealed virtual int GetHashCode(JsonDocument obj);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Json.More.JsonDocumentExtensions : object {
    [ExtensionAttribute]
public static bool IsEquivalentTo(JsonDocument a, JsonDocument b);
    [ExtensionAttribute]
[RequiresUnreferencedCodeAttribute("Calls System.Text.Json.JsonSerializer.Serialize<T>(T, JsonSerializerOptions)")]
[RequiresDynamicCodeAttribute("Calls System.Text.Json.JsonSerializer.Serialize<T>(T, JsonSerializerOptions)")]
public static JsonDocument ToJsonDocument(T value, JsonSerializerOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Json.More.JsonElementEqualityComparer : object {
    [CompilerGeneratedAttribute]
private static JsonElementEqualityComparer <Instance>k__BackingField;
    public static JsonElementEqualityComparer Instance { get; }
    private static JsonElementEqualityComparer();
    [CompilerGeneratedAttribute]
public static JsonElementEqualityComparer get_Instance();
    public sealed virtual bool Equals(JsonElement x, JsonElement y);
    public sealed virtual int GetHashCode(JsonElement obj);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Json.More.JsonElementExtensions : object {
    [ExtensionAttribute]
public static bool IsEquivalentTo(JsonElement a, JsonElement b);
    [ExtensionAttribute]
public static int GetEquivalenceHashCode(JsonElement element, int maxHashDepth);
    [ExtensionAttribute]
public static string ToJsonString(JsonElement element);
    [ExtensionAttribute]
public static JsonElement AsJsonElement(long value);
    [ExtensionAttribute]
public static JsonElement AsJsonElement(int value);
    [ExtensionAttribute]
public static JsonElement AsJsonElement(short value);
    [ExtensionAttribute]
public static JsonElement AsJsonElement(bool value);
    [ExtensionAttribute]
public static JsonElement AsJsonElement(decimal value);
    [ExtensionAttribute]
public static JsonElement AsJsonElement(double value);
    [ExtensionAttribute]
public static JsonElement AsJsonElement(float value);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static JsonElement AsJsonElement(string value);
    [ExtensionAttribute]
public static JsonElement AsJsonElement(IEnumerable`1<JsonElement> values);
    [ExtensionAttribute]
public static JsonElement AsJsonElement(IDictionary`2<string, JsonElement> values);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static JsonNode AsNode(JsonElement element);
    [RequiresDynamicCodeAttribute("Calls System.Text.Json.JsonSerializer.Deserialize<TValue>(JsonSerializerOptions)")]
[RequiresUnreferencedCodeAttribute("Calls System.Text.Json.JsonSerializer.Deserialize<TValue>(JsonSerializerOptions)")]
internal static T ReadValue(ArrayEnumerator& enumerator, JsonSerializerOptions options);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal static void <GetEquivalenceHashCode>g__Add|1_0(Int32& current, object newValue);
    [CompilerGeneratedAttribute]
internal static void <GetEquivalenceHashCode>g__ComputeHashCode|1_1(JsonElement obj, Int32& current, int depth, <>c__DisplayClass1_0& );
}
[IsReadOnlyAttribute]
public class Json.More.JsonElementProxy : ValueType {
    private JsonElement _value;
    private JsonElementProxy(JsonElement value);
    public static JsonElementProxy op_Implicit(int value);
    public static JsonElementProxy op_Implicit(long value);
    public static JsonElementProxy op_Implicit(short value);
    public static JsonElementProxy op_Implicit(float value);
    public static JsonElementProxy op_Implicit(double value);
    public static JsonElementProxy op_Implicit(decimal value);
    [NullableContextAttribute("1")]
public static JsonElementProxy op_Implicit(string value);
    public static JsonElementProxy op_Implicit(bool value);
    public static JsonElement op_Implicit(JsonElementProxy proxy);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Json.More.JsonNodeEqualityComparer : object {
    [CompilerGeneratedAttribute]
private static JsonNodeEqualityComparer <Instance>k__BackingField;
    public static JsonNodeEqualityComparer Instance { get; }
    private static JsonNodeEqualityComparer();
    [CompilerGeneratedAttribute]
public static JsonNodeEqualityComparer get_Instance();
    [NullableContextAttribute("2")]
public sealed virtual bool Equals(JsonNode x, JsonNode y);
    [NullableContextAttribute("2")]
public sealed virtual int GetHashCode(JsonNode obj);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Json.More.JsonNodeExtensions : object {
    private static JsonSerializerOptions _unfriendlyCharSerialization;
    private static Regex _pathSegmentTestPattern;
    private static JsonNodeExtensions();
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static bool IsEquivalentTo(JsonNode a, JsonNode b);
    [ExtensionAttribute]
public static int GetEquivalenceHashCode(JsonNode node, int maxHashDepth);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static string AsJsonString(JsonNode node, JsonSerializerOptions options);
    [ExtensionAttribute]
public static Nullable`1<decimal> GetNumber(JsonValue value);
    [ExtensionAttribute]
public static Nullable`1<long> GetInteger(JsonValue value);
    [ExtensionAttribute]
public static string GetString(JsonValue value);
    [ExtensionAttribute]
public static Nullable`1<bool> GetBool(JsonValue value);
    [ExtensionAttribute]
public static bool TryGetValue(JsonObject obj, string propertyName, JsonNode& node, Exception& e);
    [ExtensionAttribute]
public static JsonArray ToJsonArray(IEnumerable`1<JsonNode> nodes);
    [ExtensionAttribute]
public static string GetPathFromRoot(JsonNode node, bool useShorthand);
    [NullableContextAttribute("2")]
private static Stack`1<JsonValue> GetSegments(JsonNode current);
    private static JsonValue GetKey(JsonObject obj, JsonNode current);
    private static JsonValue GetIndex(JsonArray arr, JsonNode current);
    private static string GetNamedSegmentForPath(JsonValue segment, bool useShorthand);
    private static string PrepForJsonPath(string jsonString);
    [ExtensionAttribute]
public static string GetPointerFromRoot(JsonNode node);
    private static string PrepForJsonPointer(string s);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal static void <GetEquivalenceHashCode>g__Add|2_0(Int32& current, object newValue);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal static void <GetEquivalenceHashCode>g__ComputeHashCode|2_1(JsonNode target, Int32& current, int depth, <>c__DisplayClass2_0& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Json.More.JsonSerializerOptionsExtensions : object {
    [ExtensionAttribute]
public static JsonConverter`1<T> GetConverter(JsonSerializerOptions options, JsonTypeInfo typeInfo);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static T Read(JsonSerializerOptions options, Utf8JsonReader& reader, JsonTypeInfo`1<T> typeInfo);
    [ExtensionAttribute]
public static void Write(JsonSerializerOptions options, Utf8JsonWriter writer, T value, JsonTypeInfo`1<T> typeInfo);
    [ExtensionAttribute]
public static List`1<T> ReadList(JsonSerializerOptions options, Utf8JsonReader& reader, JsonTypeInfo`1<T> typeInfo);
    [ExtensionAttribute]
public static T[] ReadArray(JsonSerializerOptions options, Utf8JsonReader& reader, JsonTypeInfo`1<T> typeInfo);
    [ExtensionAttribute]
public static void WriteList(JsonSerializerOptions options, Utf8JsonWriter writer, IEnumerable`1<T> values, JsonTypeInfo`1<T> typeInfo);
    [ExtensionAttribute]
public static Dictionary`2<string, T> ReadDictionary(JsonSerializerOptions options, Utf8JsonReader& reader, JsonTypeInfo`1<T> valueTypeInfo);
    [ExtensionAttribute]
public static Dictionary`2<string, List`1<T>> ReadDictionaryList(JsonSerializerOptions options, Utf8JsonReader& reader, JsonTypeInfo`1<T> valueTypeInfo);
    [ExtensionAttribute]
public static void WriteDictionary(JsonSerializerOptions options, Utf8JsonWriter writer, IEnumerable`1<KeyValuePair`2<string, T>> values, JsonTypeInfo`1<T> valueTypeInfo);
    [ExtensionAttribute]
public static void WriteDictionaryList(JsonSerializerOptions options, Utf8JsonWriter writer, IEnumerable`1<KeyValuePair`2<string, IReadOnlyList`1<T>>> values, JsonTypeInfo`1<T> valueTypeInfo);
    [ExtensionAttribute]
[RequiresDynamicCodeAttribute("Calls JsonSerializer.Serialize. Make sure the options object contains all relevant JsonTypeInfos before suppressing this warning.")]
[RequiresUnreferencedCodeAttribute("Calls JsonSerializer.Serialize. Make sure the options object contains all relevant JsonTypeInfos before suppressing this warning.")]
public static void Write(JsonSerializerOptions options, Utf8JsonWriter writer, object value, Type inputType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[JsonSerializableAttribute("System.Text.Json.JsonElement")]
[JsonSerializableAttribute("System.String")]
[GeneratedCodeAttribute("System.Text.Json.SourceGeneration", "8.0.9.8001")]
internal class Json.More.MoreSerializerContext : JsonSerializerContext {
    [NullableAttribute("2")]
private JsonTypeInfo`1<JsonElement> _JsonElement;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private JsonTypeInfo`1<string> _String;
    private static JsonSerializerOptions s_defaultOptions;
    [CompilerGeneratedAttribute]
private static MoreSerializerContext <Default>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private JsonSerializerOptions <GeneratedSerializerOptions>k__BackingField;
    public JsonTypeInfo`1<JsonElement> JsonElement { get; }
    public JsonTypeInfo`1<string> String { get; }
    public static MoreSerializerContext Default { get; }
    [NullableAttribute("2")]
protected JsonSerializerOptions GeneratedSerializerOptions { get; }
    public MoreSerializerContext(JsonSerializerOptions options);
    private static MoreSerializerContext();
    public JsonTypeInfo`1<JsonElement> get_JsonElement();
    private JsonTypeInfo`1<JsonElement> Create_JsonElement(JsonSerializerOptions options);
    public JsonTypeInfo`1<string> get_String();
    private JsonTypeInfo`1<string> Create_String(JsonSerializerOptions options);
    [CompilerGeneratedAttribute]
public static MoreSerializerContext get_Default();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
protected virtual JsonSerializerOptions get_GeneratedSerializerOptions();
    private static bool TryGetTypeInfoForRuntimeCustomConverter(JsonSerializerOptions options, JsonTypeInfo`1& jsonTypeInfo);
    private static JsonConverter GetRuntimeConverterForType(Type type, JsonSerializerOptions options);
    private static JsonConverter ExpandConverter(Type type, JsonConverter converter, JsonSerializerOptions options, bool validateCanConvert);
    public virtual JsonTypeInfo GetTypeInfo(Type type);
    private sealed virtual override JsonTypeInfo global::System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver.GetTypeInfo(Type type, JsonSerializerOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Json.More.TypeExtensions : object {
    [ExtensionAttribute]
public static bool IsInteger(Type type);
    [ExtensionAttribute]
public static bool IsFloatingPoint(Type type);
    [ExtensionAttribute]
public static bool IsNumber(Type type);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Json.More.Utf8JsonWriterExtensions : object {
    [ExtensionAttribute]
public static void WriteValue(Utf8JsonWriter writer, JsonElement element);
    [ExtensionAttribute]
private static void WriteObject(Utf8JsonWriter writer, JsonElement element);
    [ExtensionAttribute]
private static void WriteArray(Utf8JsonWriter writer, JsonElement element);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal static class Json.More.ValueReader : object {
    [NullableContextAttribute("1")]
[RequiresUnreferencedCodeAttribute("Calls Json.More.JsonElementExtensions.ReadValue<T>(ref ArrayEnumerator, JsonSerializerOptions)")]
[RequiresDynamicCodeAttribute("Calls Json.More.JsonElementExtensions.ReadValue<T>(ref ArrayEnumerator, JsonSerializerOptions)")]
public static ValueTuple`1<T> ReadValues1(ArrayEnumerator enumerator, JsonSerializerOptions options);
    [RequiresUnreferencedCodeAttribute("Calls Json.More.JsonElementExtensions.ReadValue<T>(ref ArrayEnumerator, JsonSerializerOptions)")]
[RequiresDynamicCodeAttribute("Calls Json.More.JsonElementExtensions.ReadValue<T>(ref ArrayEnumerator, JsonSerializerOptions)")]
public static ValueTuple`2<T1, T2> ReadValues2(ArrayEnumerator enumerator, JsonSerializerOptions options);
    [RequiresUnreferencedCodeAttribute("Calls Json.More.JsonElementExtensions.ReadValue<T>(ref ArrayEnumerator, JsonSerializerOptions)")]
[RequiresDynamicCodeAttribute("Calls Json.More.JsonElementExtensions.ReadValue<T>(ref ArrayEnumerator, JsonSerializerOptions)")]
public static ValueTuple`3<T1, T2, T3> ReadValues3(ArrayEnumerator enumerator, JsonSerializerOptions options);
    [RequiresUnreferencedCodeAttribute("Calls Json.More.JsonElementExtensions.ReadValue<T>(ref ArrayEnumerator, JsonSerializerOptions)")]
[RequiresDynamicCodeAttribute("Calls Json.More.JsonElementExtensions.ReadValue<T>(ref ArrayEnumerator, JsonSerializerOptions)")]
public static ValueTuple`4<T1, T2, T3, T4> ReadValues4(ArrayEnumerator enumerator, JsonSerializerOptions options);
    [RequiresUnreferencedCodeAttribute("Calls Json.More.JsonElementExtensions.ReadValue<T>(ref ArrayEnumerator, JsonSerializerOptions)")]
[RequiresDynamicCodeAttribute("Calls Json.More.JsonElementExtensions.ReadValue<T>(ref ArrayEnumerator, JsonSerializerOptions)")]
public static ValueTuple`5<T1, T2, T3, T4, T5> ReadValues5(ArrayEnumerator enumerator, JsonSerializerOptions options);
    [RequiresUnreferencedCodeAttribute("Calls Json.More.JsonElementExtensions.ReadValue<T>(ref ArrayEnumerator, JsonSerializerOptions)")]
[RequiresDynamicCodeAttribute("Calls Json.More.JsonElementExtensions.ReadValue<T>(ref ArrayEnumerator, JsonSerializerOptions)")]
public static ValueTuple`6<T1, T2, T3, T4, T5, T6> ReadValues6(ArrayEnumerator enumerator, JsonSerializerOptions options);
    [RequiresUnreferencedCodeAttribute("Calls Json.More.JsonElementExtensions.ReadValue<T>(ref ArrayEnumerator, JsonSerializerOptions)")]
[RequiresDynamicCodeAttribute("Calls Json.More.JsonElementExtensions.ReadValue<T>(ref ArrayEnumerator, JsonSerializerOptions)")]
public static ValueTuple`7<T1, T2, T3, T4, T5, T6, T7> ReadValues7(ArrayEnumerator enumerator, JsonSerializerOptions options);
    [RequiresUnreferencedCodeAttribute("Calls Json.More.JsonElementExtensions.ReadValue<T>(ref ArrayEnumerator, JsonSerializerOptions) and Json.More.ValueReader.GetReadValuesMethod(string, Type[])")]
[RequiresDynamicCodeAttribute("Calls Json.More.JsonElementExtensions.ReadValue<T>(ref ArrayEnumerator, JsonSerializerOptions)")]
public static ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, TRest> ReadValues8(ArrayEnumerator enumerator, JsonSerializerOptions options);
    [NullableContextAttribute("1")]
[RequiresUnreferencedCodeAttribute("Calls System.Reflection.MethodInfo.MakeGenericType(Type[])")]
[RequiresDynamicCodeAttribute("Calls System.Reflection.MethodInfo.MakeGenericMethod(params Type[])")]
private static MethodInfo GetReadValuesMethod(string methodName, Type[] types);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal static class Json.More.ValueWriter : object {
    [NullableContextAttribute("1")]
[RequiresUnreferencedCodeAttribute("Calls System.Text.Json.JsonSerializer.Serialize(Utf8JsonWriter, Object, Type, JsonSerializerOptions)")]
[RequiresDynamicCodeAttribute("Calls System.Text.Json.JsonSerializer.Serialize(Utf8JsonWriter, Object, Type, JsonSerializerOptions)")]
public static void WriteValues(Utf8JsonWriter writer, IEnumerable`1<ValueTuple`2<object, Type>> values, JsonSerializerOptions options);
    [IteratorStateMachineAttribute("Json.More.ValueWriter/<Unwrap1>d__1`1")]
public static IEnumerable`1<ValueTuple`2<object, Type>> Unwrap1(ValueTuple`1<T> value);
    [IteratorStateMachineAttribute("Json.More.ValueWriter/<Unwrap2>d__2`2")]
public static IEnumerable`1<ValueTuple`2<object, Type>> Unwrap2(ValueTuple`2<T1, T2> value);
    [IteratorStateMachineAttribute("Json.More.ValueWriter/<Unwrap3>d__3`3")]
public static IEnumerable`1<ValueTuple`2<object, Type>> Unwrap3(ValueTuple`3<T1, T2, T3> value);
    [IteratorStateMachineAttribute("Json.More.ValueWriter/<Unwrap4>d__4`4")]
public static IEnumerable`1<ValueTuple`2<object, Type>> Unwrap4(ValueTuple`4<T1, T2, T3, T4> value);
    [IteratorStateMachineAttribute("Json.More.ValueWriter/<Unwrap5>d__5`5")]
public static IEnumerable`1<ValueTuple`2<object, Type>> Unwrap5(ValueTuple`5<T1, T2, T3, T4, T5> value);
    [IteratorStateMachineAttribute("Json.More.ValueWriter/<Unwrap6>d__6`6")]
public static IEnumerable`1<ValueTuple`2<object, Type>> Unwrap6(ValueTuple`6<T1, T2, T3, T4, T5, T6> value);
    [IteratorStateMachineAttribute("Json.More.ValueWriter/<Unwrap7>d__7`7")]
public static IEnumerable`1<ValueTuple`2<object, Type>> Unwrap7(ValueTuple`7<T1, T2, T3, T4, T5, T6, T7> value);
    [IteratorStateMachineAttribute("Json.More.ValueWriter/<Unwrap8>d__8`8")]
[RequiresDynamicCodeAttribute("Calls Json.More.ValueWriter.GetUnwrapMethod(String, Type[])")]
[RequiresUnreferencedCodeAttribute("Calls Json.More.ValueWriter.GetUnwrapMethod(String, Type[])")]
public static IEnumerable`1<ValueTuple`2<object, Type>> Unwrap8(ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, TRest> value);
    [NullableContextAttribute("1")]
[RequiresDynamicCodeAttribute("Calls System.Reflection.MethodInfo.MakeGenericMethod(params Type[])")]
[RequiresUnreferencedCodeAttribute("Calls System.Type.GetMethod(String) and System.Reflection.MethodInfo.MakeGenericMethod(Type[])")]
private static MethodInfo GetUnwrapMethod(string methodName, Type[] types);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Json.More.WeaklyTypedJsonConverter`1 : JsonConverter`1<T> {
    private sealed virtual override object Json.More.IWeaklyTypedJsonConverter.Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    private sealed virtual override void Json.More.IWeaklyTypedJsonConverter.Write(Utf8JsonWriter writer, object value, JsonSerializerOptions options, JsonTypeInfo typeInfo);
}
