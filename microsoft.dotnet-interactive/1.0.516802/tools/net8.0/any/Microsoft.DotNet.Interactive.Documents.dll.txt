[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.DotNet.Interactive.Documents.CodeSubmission : object {
    private static string MagicCommandPrefix;
    private static Encoding _encoding;
    private static CodeSubmission();
    public static InteractiveDocument Parse(string content, KernelInfoCollection kernelInfos);
    private static KernelInfoCollection WithMarkdownKernel(KernelInfoCollection kernelInfo);
    public static InteractiveDocument Read(Stream stream, KernelInfoCollection kernelInfos);
    [ExtensionAttribute]
public static string ToCodeSubmissionContent(InteractiveDocument document, string newline);
    public static void Write(InteractiveDocument document, Stream stream, KernelInfoCollection kernelInfos, string newline);
    [CompilerGeneratedAttribute]
internal static void <Parse>g__AddElement|2_0(<>c__DisplayClass2_0& );
    [CompilerGeneratedAttribute]
internal static InteractiveDocumentElement <Parse>g__CreateElement|2_1(string kernelName, IEnumerable`1<string> elementLines);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.DotNet.Interactive.Documents.DisplayElement : InteractiveDocumentOutputElement {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <Data>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <Metadata>k__BackingField;
    public IDictionary`2<string, object> Data { get; }
    public IDictionary`2<string, object> Metadata { get; }
    public DisplayElement(IDictionary`2<string, object> data);
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, object> get_Data();
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_Metadata();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.DotNet.Interactive.Documents.ErrorElement : InteractiveDocumentOutputElement {
    [CompilerGeneratedAttribute]
private string <ErrorName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorValue>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <StackTrace>k__BackingField;
    public string ErrorName { get; }
    public string ErrorValue { get; }
    public String[] StackTrace { get; }
    [NullableContextAttribute("2")]
public ErrorElement(string errorValue, string errorName, String[] stackTrace);
    [CompilerGeneratedAttribute]
public string get_ErrorName();
    [CompilerGeneratedAttribute]
public string get_ErrorValue();
    [CompilerGeneratedAttribute]
public String[] get_StackTrace();
}
[NullableContextAttribute("1")]
internal interface Microsoft.DotNet.Interactive.Documents.IDataElement {
    public IDictionary`2<string, object> Data { get; }
    public abstract virtual IDictionary`2<string, object> get_Data();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.DotNet.Interactive.Documents.InputField : object {
    [CompilerGeneratedAttribute]
private string <ValueName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeHint>k__BackingField;
    public string ValueName { get; public set; }
    public string TypeHint { get; public set; }
    public InputField(string valueName, string typeHint);
    [CompilerGeneratedAttribute]
public string get_ValueName();
    [CompilerGeneratedAttribute]
public void set_ValueName(string value);
    [CompilerGeneratedAttribute]
public string get_TypeHint();
    [CompilerGeneratedAttribute]
public void set_TypeHint(string value);
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.DotNet.Interactive.Documents.InteractiveDocument : object {
    [NullableAttribute("2")]
private static Parser _importFieldsParser;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Argument`1<FileInfo> _importedFileArgument;
    [NullableAttribute("2")]
private static Parser _inputFieldsParser;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Option`1<string> _valueNameOption;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Option`1<String[]> _discoveredInputPrompts;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Option`1<String[]> _discoveredPasswordPrompts;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IDictionary`2<string, object> _metadata;
    [CompilerGeneratedAttribute]
private IList`1<InteractiveDocumentElement> <Elements>k__BackingField;
    [CompilerGeneratedAttribute]
private static JsonSerializerOptions <JsonSerializerOptions>k__BackingField;
    public IList`1<InteractiveDocumentElement> Elements { get; }
    public IDictionary`2<string, object> Metadata { get; }
    internal static JsonSerializerOptions JsonSerializerOptions { get; }
    private static InteractiveDocument();
    public InteractiveDocument(IList`1<InteractiveDocumentElement> elements);
    [CompilerGeneratedAttribute]
public IList`1<InteractiveDocumentElement> get_Elements();
    public IDictionary`2<string, object> get_Metadata();
    [AsyncIteratorStateMachineAttribute("Microsoft.DotNet.Interactive.Documents.InteractiveDocument/<GetImportsAsync>d__14")]
public IAsyncEnumerable`1<InteractiveDocument> GetImportsAsync(bool recursive);
    public IEnumerable`1<InputField> GetInputFields();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public void Add(InteractiveDocumentElement element);
    internal void NormalizeElementKernelNames(KernelInfoCollection kernelInfos);
    [AsyncStateMachineAttribute("Microsoft.DotNet.Interactive.Documents.InteractiveDocument/<LoadAsync>d__19")]
public static Task`1<InteractiveDocument> LoadAsync(FileInfo file, KernelInfoCollection kernelInfos);
    [NullableContextAttribute("2")]
public string GetDefaultKernelName();
    internal string GetDefaultKernelName(KernelInfoCollection kernelInfos);
    internal static void MergeKernelInfos(InteractiveDocument document, KernelInfoCollection kernelInfos);
    internal static void MergeKernelInfos(KernelInfoCollection destination, KernelInfoCollection source);
    [NullableContextAttribute("2")]
internal static bool TryGetKernelInfosFromMetadata(IDictionary`2<string, object> metadata, KernelInfoCollection& kernelInfos);
    public IEnumerable`1<string> GetMagicCommandLines();
    private static void EnsureImportFieldParserIsInitialized();
    private static void EnsureInputFieldParserIsInitialized();
    [CompilerGeneratedAttribute]
internal static JsonSerializerOptions get_JsonSerializerOptions();
    [CompilerGeneratedAttribute]
internal static IReadOnlyCollection`1<InputField> <GetInputFields>g__ParseInputFields|15_0(string line);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.DotNet.Interactive.Documents.InteractiveDocumentElement : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <KernelName>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <Contents>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private List`1<InteractiveDocumentOutputElement> <Outputs>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ExecutionOrder>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IDictionary`2<string, object> <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InferredTargetKernelName>k__BackingField;
    [JsonIgnoreAttribute]
public string Id { get; public set; }
    public string KernelName { get; public set; }
    [NullableAttribute("1")]
public string Contents { get; public set; }
    [NullableAttribute("1")]
public List`1<InteractiveDocumentOutputElement> Outputs { get; }
    public int ExecutionOrder { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[JsonIgnoreAttribute]
public IDictionary`2<string, object> Metadata { get; public set; }
    internal string InferredTargetKernelName { get; internal set; }
    public InteractiveDocumentElement(string contents, string kernelName, IEnumerable`1<InteractiveDocumentOutputElement> outputs);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_KernelName();
    [CompilerGeneratedAttribute]
public void set_KernelName(string value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_Contents();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_Contents(string value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public List`1<InteractiveDocumentOutputElement> get_Outputs();
    [CompilerGeneratedAttribute]
public int get_ExecutionOrder();
    [CompilerGeneratedAttribute]
public void set_ExecutionOrder(int value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_Metadata();
    [CompilerGeneratedAttribute]
public void set_Metadata(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
internal string get_InferredTargetKernelName();
    [CompilerGeneratedAttribute]
internal void set_InferredTargetKernelName(string value);
}
public abstract class Microsoft.DotNet.Interactive.Documents.InteractiveDocumentOutputElement : object {
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Microsoft.DotNet.Interactive.Documents.Json.ByteArrayConverter : JsonConverter`1<Byte[]> {
    public virtual Byte[] Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, Byte[] value, JsonSerializerOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Microsoft.DotNet.Interactive.Documents.Json.DataDictionaryConverter : JsonConverter`1<IDictionary`2<string, object>> {
    public virtual IDictionary`2<string, object> Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    private static object GetValue(Utf8JsonReader& reader, JsonSerializerOptions options);
    private static object ParseArray(Utf8JsonReader& reader, JsonSerializerOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal abstract class Microsoft.DotNet.Interactive.Documents.JsonConverter`1 : JsonConverter`1<T> {
    protected void EnsureStartObject(Utf8JsonReader reader, Type typeToConvert);
    public virtual void Write(Utf8JsonWriter writer, T value, JsonSerializerOptions options);
    protected virtual void OnWrite(Utf8JsonWriter writer, T value, JsonSerializerOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.DotNet.Interactive.Documents.JsonReaderExtensions : object {
    [ExtensionAttribute]
internal static T[] ReadArray(Utf8JsonReader& reader, JsonSerializerOptions options);
    [ExtensionAttribute]
internal static IDictionary`2<string, object> ReadDataDictionary(Utf8JsonReader& reader, JsonSerializerOptions options);
    [ExtensionAttribute]
internal static Nullable`1<int> ReadInt32(Utf8JsonReader& reader);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
internal static string ReadString(Utf8JsonReader& reader);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
internal static string ReadArrayOrStringAsString(Utf8JsonReader& reader);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.DotNet.Interactive.Documents.Jupyter.InputCellMetadata : object {
    [CompilerGeneratedAttribute]
private string <KernelName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Language>k__BackingField;
    [JsonPropertyNameAttribute("kernelName")]
public string KernelName { get; }
    [JsonPropertyNameAttribute("language")]
public string Language { get; }
    public InputCellMetadata(string kernelName, string language);
    [CompilerGeneratedAttribute]
public string get_KernelName();
    [CompilerGeneratedAttribute]
public string get_Language();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Microsoft.DotNet.Interactive.Documents.Jupyter.InteractiveDocumentConverter : JsonConverter`1<InteractiveDocument> {
    public virtual InteractiveDocument Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, InteractiveDocument document, JsonSerializerOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Microsoft.DotNet.Interactive.Documents.Jupyter.InteractiveDocumentElementConverter : JsonConverter`1<InteractiveDocumentElement> {
    public virtual InteractiveDocumentElement Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    private static string GetMetadataStringValue(IDictionary`2<string, object> dict, string name1, string name2);
    public virtual void Write(Utf8JsonWriter writer, InteractiveDocumentElement element, JsonSerializerOptions options);
}
[ExtensionAttribute]
internal static class Microsoft.DotNet.Interactive.Documents.Jupyter.InteractiveDocumentExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static InteractiveDocument WithJupyterMetadata(InteractiveDocument document, string language);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Microsoft.DotNet.Interactive.Documents.Jupyter.InteractiveDocumentOutputElementConverter : JsonConverter`1<InteractiveDocumentOutputElement> {
    public virtual InteractiveDocumentOutputElement Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, InteractiveDocumentOutputElement element, JsonSerializerOptions options);
    [CompilerGeneratedAttribute]
internal static void <Write>g__WriteData|1_0(IDataElement displayElement, <>c__DisplayClass1_0& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.DotNet.Interactive.Documents.Jupyter.JsonElementExtensions : object {
    [ExtensionAttribute]
public static IEnumerable`1<JsonElement> EnumerateArray(Nullable`1<JsonElement> jsonElement);
    [ExtensionAttribute]
public static string GetRawText(Nullable`1<JsonElement> jsonElement);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static string GetString(Nullable`1<JsonElement> jsonElement);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.DotNet.Interactive.Documents.Jupyter.Notebook : object {
    private static Encoding _encoding;
    [CompilerGeneratedAttribute]
private static JsonSerializerOptions <JsonSerializerOptions>k__BackingField;
    internal static JsonSerializerOptions JsonSerializerOptions { get; }
    private static Notebook();
    [CompilerGeneratedAttribute]
internal static JsonSerializerOptions get_JsonSerializerOptions();
    public static InteractiveDocument Parse(string json, KernelInfoCollection kernelInfos);
    public static InteractiveDocument Read(Stream stream, KernelInfoCollection kernelInfos);
    [ExtensionAttribute]
public static string ToJupyterJson(InteractiveDocument document, string defaultLanguage);
    public static void Write(InteractiveDocument document, Stream stream, KernelInfoCollection kernelInfos);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[JsonConverterAttribute("Microsoft.DotNet.Interactive.Documents.KernelInfoConverter")]
public class Microsoft.DotNet.Interactive.Documents.KernelInfo : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <LanguageName>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<string> <Aliases>k__BackingField;
    public string Name { get; }
    [NullableAttribute("2")]
public string LanguageName { get; }
    public IReadOnlyCollection`1<string> Aliases { get; }
    public KernelInfo(string name, string languageName, IReadOnlyCollection`1<string> aliases);
    [CompilerGeneratedAttribute]
public string get_Name();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_LanguageName();
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<string> get_Aliases();
    public virtual string ToString();
    private static void Validate(string name);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[JsonConverterAttribute("Microsoft.DotNet.Interactive.Documents.KernelInfoCollectionConverter")]
public class Microsoft.DotNet.Interactive.Documents.KernelInfoCollection : object {
    private HashSet`1<KernelInfo> _kernelNames;
    private Dictionary`2<string, KernelInfo> _kernelInfoByNameOrAlias;
    [NullableAttribute("2")]
private string _defaultKernelName;
    public int Count { get; }
    public bool IsReadOnly { get; }
    [NullableAttribute("2")]
public string DefaultKernelName { get; public set; }
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    [NullableContextAttribute("2")]
public string get_DefaultKernelName();
    [NullableContextAttribute("2")]
public void set_DefaultKernelName(string value);
    public sealed virtual void Add(KernelInfo kernelInfo);
    public void AddRange(IEnumerable`1<KernelInfo> collection);
    public sealed virtual void Clear();
    public sealed virtual bool Remove(KernelInfo item);
    public sealed virtual bool Contains(KernelInfo kernelInfo);
    public sealed virtual void CopyTo(KernelInfo[] array, int arrayIndex);
    public bool Contains(string nameOrAlias);
    public KernelInfoCollection Clone();
    internal bool TryGetByAlias(string alias, KernelInfo& info);
    private sealed virtual override IEnumerator`1<KernelInfo> System.Collections.Generic.IEnumerable<Microsoft.DotNet.Interactive.Documents.KernelInfo>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Microsoft.DotNet.Interactive.Documents.KernelInfoCollectionConverter : JsonConverter`1<KernelInfoCollection> {
    public virtual KernelInfoCollection Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, KernelInfoCollection collection, JsonSerializerOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Microsoft.DotNet.Interactive.Documents.KernelInfoConverter : JsonConverter`1<KernelInfo> {
    public virtual KernelInfo Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, KernelInfo value, JsonSerializerOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.DotNet.Interactive.Documents.ReturnValueElement : InteractiveDocumentOutputElement {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <Data>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ExecutionOrder>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <Metadata>k__BackingField;
    public IDictionary`2<string, object> Data { get; }
    public int ExecutionOrder { get; public set; }
    public IDictionary`2<string, object> Metadata { get; }
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, object> get_Data();
    [CompilerGeneratedAttribute]
public int get_ExecutionOrder();
    [CompilerGeneratedAttribute]
public void set_ExecutionOrder(int value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_Metadata();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.DotNet.Interactive.Documents.TextElement : InteractiveDocumentOutputElement {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    public string Name { get; }
    public string Text { get; }
    [NullableContextAttribute("2")]
public TextElement(string text, string name);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public string get_Text();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.DotNet.Interactive.Documents.Utility.StringExtensions : object {
    [ExtensionAttribute]
internal static String[] SplitIntoLines(string s);
    [ExtensionAttribute]
internal static String[] SplitIntoJupyterFileArray(string value);
}
[ExtensionAttribute]
internal static class Microsoft.DotNet.Interactive.Utility.DictionaryExtensions : object {
    [ExtensionAttribute]
public static TValue GetOrAdd(IDictionary`2<TKey, TValue> dictionary, TKey key, Func`2<TKey, TValue> getValue);
    [ExtensionAttribute]
public static TValue GetOrAdd(IDictionary`2<string, object> dictionary, string key, Func`2<string, TValue> getValue);
    [ExtensionAttribute]
public static bool TryAdd(IDictionary`2<TKey, TValue> source, TKey key, TValue value);
    [ExtensionAttribute]
public static IDictionary`2<TKey, TValue> Merge(IDictionary`2<TKey, TValue> dictionary1, IDictionary`2<TKey, TValue> dictionary2, bool replace, IEqualityComparer`1<TKey> comparer);
    [ExtensionAttribute]
public static void MergeWith(IDictionary`2<TKey, TValue> target, IDictionary`2<TKey, TValue> source, bool replace);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.DotNet.Interactive.Utility.IOExtensions : object {
    private static Encoding DefaultEncoding;
    private static int DefaultBufferSize;
    private static IOExtensions();
    internal static Task`1<string> ReadAllTextAsync(string filePath, Encoding encoding, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.DotNet.Interactive.Utility.IOExtensions/<ReadAllTextInternalAsync>d__3")]
private static Task`1<string> ReadAllTextInternalAsync(string filePath, Encoding encoding, CancellationToken cancellationToken);
}
[AttributeUsageAttribute("2432")]
internal class System.Diagnostics.CodeAnalysis.AllowNullAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
internal class System.Diagnostics.CodeAnalysis.DisallowNullAttribute : Attribute {
}
[AttributeUsageAttribute("64")]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ParameterValue>k__BackingField;
    public bool ParameterValue { get; }
    public DoesNotReturnIfAttribute(bool parameterValue);
    [CompilerGeneratedAttribute]
public bool get_ParameterValue();
}
[AttributeUsageAttribute("10624")]
internal class System.Diagnostics.CodeAnalysis.MaybeNullAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public MaybeNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("192")]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public String[] Members { get; }
    public MemberNotNullAttribute(string member);
    public MemberNotNullAttribute(String[] members);
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("192")]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public bool ReturnValue { get; }
    public String[] Members { get; }
    public MemberNotNullWhenAttribute(bool returnValue, string member);
    public MemberNotNullWhenAttribute(bool returnValue, String[] members);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[AttributeUsageAttribute("10624")]
internal class System.Diagnostics.CodeAnalysis.NotNullAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("10368")]
internal class System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ParameterName>k__BackingField;
    public string ParameterName { get; }
    public NotNullIfNotNullAttribute(string parameterName);
    [CompilerGeneratedAttribute]
public string get_ParameterName();
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.NotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public NotNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[IsReadOnlyAttribute]
internal class System.Index : ValueType {
    private int _value;
    public static Index Start { get; }
    public static Index End { get; }
    public int Value { get; }
    public bool IsFromEnd { get; }
    public Index(int value, bool fromEnd);
    private Index(int value);
    public static Index get_Start();
    public static Index get_End();
    public static Index FromStart(int value);
    public static Index FromEnd(int value);
    public int get_Value();
    public bool get_IsFromEnd();
    public int GetOffset(int length);
    [NullableContextAttribute("2")]
public virtual bool Equals(object value);
    public sealed virtual bool Equals(Index other);
    public virtual int GetHashCode();
    public static Index op_Implicit(int value);
    [NullableContextAttribute("1")]
public virtual string ToString();
}
[IsReadOnlyAttribute]
internal class System.Range : ValueType {
    [CompilerGeneratedAttribute]
private Index <Start>k__BackingField;
    [CompilerGeneratedAttribute]
private Index <End>k__BackingField;
    public Index Start { get; }
    public Index End { get; }
    public static Range All { get; }
    public Range(Index start, Index end);
    [CompilerGeneratedAttribute]
public Index get_Start();
    [CompilerGeneratedAttribute]
public Index get_End();
    [NullableContextAttribute("2")]
public virtual bool Equals(object value);
    public sealed virtual bool Equals(Range other);
    public virtual int GetHashCode();
    [NullableContextAttribute("1")]
public virtual string ToString();
    public static Range StartAt(Index start);
    public static Range EndAt(Index end);
    public static Range get_All();
    public ValueTuple`2<int, int> GetOffsetAndLength(int length);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class System.Runtime.CompilerServices.IsReadOnlyAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
internal static class System.Runtime.CompilerServices.RuntimeHelpers : object {
    [NullableContextAttribute("1")]
public static T[] GetSubArray(T[] array, Range range);
}
