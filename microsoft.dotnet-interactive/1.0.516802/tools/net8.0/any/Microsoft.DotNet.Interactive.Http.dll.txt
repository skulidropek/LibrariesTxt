public class Microsoft.DotNet.Interactive.Http.ClearValues : KernelCommand {
    [NullableContextAttribute("2")]
public ClearValues(string targetKernelName);
}
[ExtensionAttribute]
internal static class Microsoft.DotNet.Interactive.Http.DateTimeUtilities : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static bool TryAddOffset(DateTimeOffset dateTime, int offset, string offsetFormatString, Nullable`1& newDateTime);
}
[TypeFormatterSourceAttribute("Microsoft.DotNet.Interactive.Http.HttpResponseFormatterSource")]
public class Microsoft.DotNet.Interactive.Http.EmptyHttpResponse : object {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.DotNet.Interactive.Http.HttpContent : object {
    [CompilerGeneratedAttribute]
private string <Raw>k__BackingField;
    [CompilerGeneratedAttribute]
private long <ByteLength>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, String[]> <Headers>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <ContentType>k__BackingField;
    public string Raw { get; }
    public long ByteLength { get; }
    public Dictionary`2<string, String[]> Headers { get; }
    [NullableAttribute("2")]
public string ContentType { get; }
    public HttpContent(string raw, long byteLength, Dictionary`2<string, String[]> headers, string contentType);
    [CompilerGeneratedAttribute]
public string get_Raw();
    [CompilerGeneratedAttribute]
public long get_ByteLength();
    [CompilerGeneratedAttribute]
public Dictionary`2<string, String[]> get_Headers();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_ContentType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.DotNet.Interactive.Http.HttpKernel : Kernel {
    internal static int DefaultResponseDelayThresholdInMilliseconds;
    internal static int DefaultContentByteLengthThreshold;
    private HttpClient _client;
    private int _responseDelayThresholdInMilliseconds;
    private long _contentByteLengthThreshold;
    private Dictionary`2<string, object> _variables;
    private static HttpKernel();
    [NullableContextAttribute("2")]
public HttpKernel(string name, HttpClient client, int responseDelayThresholdInMilliseconds, int contentByteLengthThreshold);
    public sealed virtual Task HandleAsync(ClearValues command, KernelInvocationContext context);
    private sealed virtual override Task Microsoft.DotNet.Interactive.IKernelCommandHandler<Microsoft.DotNet.Interactive.Commands.RequestValue>.HandleAsync(RequestValue command, KernelInvocationContext context);
    private sealed virtual override Task Microsoft.DotNet.Interactive.IKernelCommandHandler<Microsoft.DotNet.Interactive.Commands.RequestValueInfos>.HandleAsync(RequestValueInfos command, KernelInvocationContext context);
    [AsyncStateMachineAttribute("Microsoft.DotNet.Interactive.Http.HttpKernel/<Microsoft-DotNet-Interactive-IKernelCommandHandler<Microsoft-DotNet-Interactive-Commands-SendValue>-HandleAsync>d__11")]
private sealed virtual override Task Microsoft.DotNet.Interactive.IKernelCommandHandler<Microsoft.DotNet.Interactive.Commands.SendValue>.HandleAsync(SendValue command, KernelInvocationContext context);
    private Task SetValueAsync(string valueName, object value, Type declaredType);
    [AsyncStateMachineAttribute("Microsoft.DotNet.Interactive.Http.HttpKernel/<Microsoft-DotNet-Interactive-IKernelCommandHandler<Microsoft-DotNet-Interactive-Commands-SubmitCode>-HandleAsync>d__13")]
private sealed virtual override Task Microsoft.DotNet.Interactive.IKernelCommandHandler<Microsoft.DotNet.Interactive.Commands.SubmitCode>.HandleAsync(SubmitCode command, KernelInvocationContext context);
    [AsyncStateMachineAttribute("Microsoft.DotNet.Interactive.Http.HttpKernel/<SendRequestAsync>d__14")]
private Task SendRequestAsync(HttpRequestMessage requestMessage, KernelCommand command, KernelInvocationContext context);
    [AsyncStateMachineAttribute("Microsoft.DotNet.Interactive.Http.HttpKernel/<GetResponseWithTimingAsync>d__15")]
private Task`1<HttpResponse> GetResponseWithTimingAsync(HttpRequestMessage requestMessage, CancellationToken cancellationToken);
    private void PublishDiagnostics(KernelInvocationContext context, KernelCommand command, IReadOnlyCollection`1<Diagnostic> diagnostics);
    private sealed virtual override Task Microsoft.DotNet.Interactive.IKernelCommandHandler<Microsoft.DotNet.Interactive.Commands.RequestDiagnostics>.HandleAsync(RequestDiagnostics command, KernelInvocationContext context);
    private List`1<Diagnostic> GetAllDiagnostics(HttpRequestParseResult parseResult);
    private HttpBindingResult`1<object> BindExpressionValues(HttpExpressionNode node);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private HttpBindingResult`1<HttpRequestMessage> <Microsoft.DotNet.Interactive.IKernelCommandHandler<Microsoft.DotNet.Interactive.Commands.SubmitCode>.HandleAsync>b__13_0(HttpRequestNode n);
    [CompilerGeneratedAttribute]
internal static Diagnostic <PublishDiagnostics>g__ToSerializedDiagnostic|16_0(Diagnostic d);
}
public class Microsoft.DotNet.Interactive.Http.HttpKernelExtension : object {
    [NullableContextAttribute("1")]
public static void Load(Kernel kernel, HttpClient httpClient, int responseDelayThresholdInMilliseconds, int contentByteLengthThreshold);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.DotNet.Interactive.Http.HttpMessageExtensions : object {
    [NullableContextAttribute("2")]
[AsyncStateMachineAttribute("Microsoft.DotNet.Interactive.Http.HttpMessageExtensions/<ToHttpRequestAsync>d__0")]
[ExtensionAttribute]
internal static Task`1<HttpRequest> ToHttpRequestAsync(HttpRequestMessage requestMessage, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
[AsyncStateMachineAttribute("Microsoft.DotNet.Interactive.Http.HttpMessageExtensions/<ToHttpResponseAsync>d__1")]
[ExtensionAttribute]
internal static Task`1<HttpResponse> ToHttpResponseAsync(HttpResponseMessage responseMessage, CancellationToken cancellationToken);
    [ExtensionAttribute]
private static Dictionary`2<string, String[]> ToDictionary(HttpHeaders headers);
    [ExtensionAttribute]
internal static PartialHttpResponse ToPartialHttpResponse(HttpResponse response);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.DotNet.Interactive.Http.HttpRequest : object {
    [CompilerGeneratedAttribute]
private string <Method>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, String[]> <Headers>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Uri>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private HttpContent <Content>k__BackingField;
    public string Method { get; }
    public string Version { get; }
    public Dictionary`2<string, String[]> Headers { get; }
    [NullableAttribute("2")]
public string Uri { get; }
    [NullableAttribute("2")]
public HttpContent Content { get; }
    public HttpRequest(string method, string version, Dictionary`2<string, String[]> headers, string uri, HttpContent content);
    [CompilerGeneratedAttribute]
public string get_Method();
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public Dictionary`2<string, String[]> get_Headers();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Uri();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public HttpContent get_Content();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[TypeFormatterSourceAttribute("Microsoft.DotNet.Interactive.Http.HttpResponseFormatterSource")]
public class Microsoft.DotNet.Interactive.Http.HttpResponse : PartialHttpResponse {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private Dictionary`2<string, String[]> <Headers>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpRequest <Request>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpContent <Content>k__BackingField;
    [NullableAttribute("1")]
public Dictionary`2<string, String[]> Headers { get; }
    public HttpRequest Request { get; }
    public HttpContent Content { get; }
    [NullableContextAttribute("1")]
public HttpResponse(int statusCode, string reasonPhrase, string version, Dictionary`2<string, String[]> headers, HttpRequest request, HttpContent content, Nullable`1<double> elapsedMilliseconds);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public Dictionary`2<string, String[]> get_Headers();
    [CompilerGeneratedAttribute]
public HttpRequest get_Request();
    [CompilerGeneratedAttribute]
public HttpContent get_Content();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.DotNet.Interactive.Http.HttpResponseFormatterSource : object {
    [IteratorStateMachineAttribute("Microsoft.DotNet.Interactive.Http.HttpResponseFormatterSource/<Microsoft-DotNet-Interactive-Formatting-ITypeFormatterSource-CreateTypeFormatters>d__0")]
private sealed virtual override IEnumerable`1<ITypeFormatter> Microsoft.DotNet.Interactive.Formatting.ITypeFormatterSource.CreateTypeFormatters();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Microsoft.DotNet.Interactive.Http.HttpResponseFormattingExtensions : object {
    private static string ContainerClass;
    private static HtmlString CSS;
    private static HttpResponseFormattingExtensions();
    [ExtensionAttribute]
internal static void FormatAsHtml(EmptyHttpResponse response, FormatContext context);
    [ExtensionAttribute]
private static PocketView FormatAsHtml(HttpResponse response);
    [ExtensionAttribute]
internal static void FormatAsPlainText(EmptyHttpResponse response, FormatContext context);
    [ExtensionAttribute]
private static void FormatAsPlainText(HttpResponse response, FormatContext context);
    private static object HeaderTable(Dictionary`2<string, String[]> headers, Dictionary`2<string, String[]> contentHeaders);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.DotNet.Interactive.Http.HttpResponseMessageFormattingExtensions : object {
    public static void RegisterFormatters();
    [AsyncStateMachineAttribute("Microsoft.DotNet.Interactive.Http.HttpResponseMessageFormattingExtensions/<FormatAsHtmlAsync>d__1")]
[ExtensionAttribute]
private static Task FormatAsHtmlAsync(HttpResponseMessage responseMessage, FormatContext context);
    [AsyncStateMachineAttribute("Microsoft.DotNet.Interactive.Http.HttpResponseMessageFormattingExtensions/<FormatAsPlainTextAsync>d__2")]
[ExtensionAttribute]
private static Task FormatAsPlainTextAsync(HttpResponseMessage responseMessage, FormatContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Microsoft.DotNet.Interactive.Http.Parsing.DynamicExpressionUtilites : object {
    private static string DateTime;
    private static string LocalDateTime;
    private static string OffsetRegex;
    private static string TypeRegex;
    internal static Regex guidPattern;
    internal static Regex dateTimePattern;
    internal static Regex localDateTimePattern;
    internal static Regex randomIntPattern;
    internal static Regex timestampPattern;
    private static DynamicExpressionUtilites();
    internal static HttpBindingResult`1<object> ResolveExpressionBinding(HttpExpressionNode node, string expression);
    private static HttpBindingResult`1<object> GetTimestamp(HttpExpressionNode node, string expressionText, Match match);
    private static HttpBindingResult`1<object> GetDateTime(HttpExpressionNode node, string dateTimeType, string expressionText, Match match);
    private static HttpBindingResult`1<object> GetRandomInt(HttpExpressionNode node, string text, Match match);
    [CompilerGeneratedAttribute]
internal static bool <GetRandomInt>g__TryParseArgumentsFromMatch|12_0(string expression, Match match, Nullable`1& min, Nullable`1& max, HttpDiagnosticInfo& diagnostic);
    [CompilerGeneratedAttribute]
internal static bool <GetRandomInt>g__TryParseInteger|12_1(string valueString, string expression, Nullable`1& value, HttpDiagnosticInfo& diagnostic);
}
internal class Microsoft.DotNet.Interactive.Http.Parsing.HttpBindingDelegate : MulticastDelegate {
    public HttpBindingDelegate(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual HttpBindingResult`1<object> Invoke(HttpExpressionNode node);
    public virtual IAsyncResult BeginInvoke(HttpExpressionNode node, AsyncCallback callback, object object);
    public virtual HttpBindingResult`1<object> EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.DotNet.Interactive.Http.Parsing.HttpBindingResult`1 : object {
    [CompilerGeneratedAttribute]
private List`1<Diagnostic> <Diagnostics>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsSuccessful>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private T <Value>k__BackingField;
    public List`1<Diagnostic> Diagnostics { get; }
    public bool IsSuccessful { get; private set; }
    [NullableAttribute("2")]
public T Value { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<Diagnostic> get_Diagnostics();
    [CompilerGeneratedAttribute]
public bool get_IsSuccessful();
    [CompilerGeneratedAttribute]
private void set_IsSuccessful(bool value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public T get_Value();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Value(T value);
    public static HttpBindingResult`1<T> Success(T value, Diagnostic[] diagnostics);
    public static HttpBindingResult`1<T> Failure(Diagnostic[] diagnostics);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.DotNet.Interactive.Http.Parsing.HttpBodyNode : HttpSyntaxNode {
    internal HttpBodyNode(SourceText sourceText, HttpSyntaxTree syntaxTree);
    public void Add(HttpEmbeddedExpressionNode node);
    public HttpBindingResult`1<string> TryGetBody(HttpBindingDelegate bind);
}
internal class Microsoft.DotNet.Interactive.Http.Parsing.HttpCommentBodyNode : HttpSyntaxNode {
    [NullableContextAttribute("1")]
internal HttpCommentBodyNode(SourceText sourceText, HttpSyntaxTree syntaxTree);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Microsoft.DotNet.Interactive.Http.Parsing.HttpCommentNode : HttpSyntaxNode {
    [CompilerGeneratedAttribute]
private HttpCommentStartNode <CommentStartNode>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpCommentBodyNode <CommentBodyNode>k__BackingField;
    public HttpCommentStartNode CommentStartNode { get; private set; }
    public HttpCommentBodyNode CommentBodyNode { get; private set; }
    public bool IsSignificant { get; }
    [NullableContextAttribute("1")]
internal HttpCommentNode(SourceText sourceText, HttpSyntaxTree syntaxTree);
    [CompilerGeneratedAttribute]
public HttpCommentStartNode get_CommentStartNode();
    [CompilerGeneratedAttribute]
private void set_CommentStartNode(HttpCommentStartNode value);
    [CompilerGeneratedAttribute]
public HttpCommentBodyNode get_CommentBodyNode();
    [CompilerGeneratedAttribute]
private void set_CommentBodyNode(HttpCommentBodyNode value);
    public virtual bool get_IsSignificant();
    [NullableContextAttribute("1")]
public void Add(HttpCommentStartNode node);
    [NullableContextAttribute("1")]
public void Add(HttpCommentBodyNode node);
}
internal class Microsoft.DotNet.Interactive.Http.Parsing.HttpCommentStartNode : HttpSyntaxNode {
    [NullableContextAttribute("1")]
internal HttpCommentStartNode(SourceText sourceText, HttpSyntaxTree syntaxTree);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.DotNet.Interactive.Http.Parsing.HttpDiagnosticInfo : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MessageFormat>k__BackingField;
    [CompilerGeneratedAttribute]
private DiagnosticSeverity <Severity>k__BackingField;
    [CompilerGeneratedAttribute]
private Object[] <MessageArguments>k__BackingField;
    internal string Id { get; }
    internal string MessageFormat { get; }
    internal DiagnosticSeverity Severity { get; }
    internal Object[] MessageArguments { get; }
    internal HttpDiagnosticInfo(string id, string messageFormat, DiagnosticSeverity severity, Object[] messageArguments);
    [CompilerGeneratedAttribute]
internal string get_Id();
    [CompilerGeneratedAttribute]
internal string get_MessageFormat();
    [CompilerGeneratedAttribute]
internal DiagnosticSeverity get_Severity();
    [CompilerGeneratedAttribute]
internal Object[] get_MessageArguments();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Microsoft.DotNet.Interactive.Http.Parsing.HttpDiagnostics : object {
    internal static HttpDiagnosticInfo UnrecognizedVerb(string verb);
    internal static HttpDiagnosticInfo MissingUrl();
    internal static HttpDiagnosticInfo UnrecognizedUriScheme(string scheme);
    internal static HttpDiagnosticInfo InvalidUri();
    internal static HttpDiagnosticInfo InvalidHttpVersion();
    internal static HttpDiagnosticInfo InvalidWhitespaceInHeaderName();
    internal static HttpDiagnosticInfo MissingHeaderName();
    internal static HttpDiagnosticInfo MissingHeaderValue();
    internal static HttpDiagnosticInfo CannotSetContentHeaderWithoutContent(string headerText);
    internal static HttpDiagnosticInfo InvalidHeader(string headerText, string exceptionMessage);
    internal static HttpDiagnosticInfo VariableNameExpected();
    internal static HttpDiagnosticInfo UnableToEvaluateExpression(string symbol);
    internal static HttpDiagnosticInfo IncorrectDateTimeFormat(string expression, string dateTimeType);
    internal static HttpDiagnosticInfo IncorrectTimestampFormat(string timestamp);
    internal static HttpDiagnosticInfo InvalidOffset(string expression, string offset);
    internal static HttpDiagnosticInfo InvalidOption(string expression, string option);
    internal static HttpDiagnosticInfo IncorrectRandomIntFormat(string expression);
    internal static HttpDiagnosticInfo RandomIntMinMustNotBeGreaterThanMax(string expression, string min, string max);
    internal static HttpDiagnosticInfo InvalidRandomIntArgument(string expression, string argument);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Microsoft.DotNet.Interactive.Http.Parsing.HttpEmbeddedExpressionNode : HttpSyntaxNode {
    [CompilerGeneratedAttribute]
private HttpExpressionStartNode <StartNode>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpExpressionNode <ExpressionNode>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpExpressionEndNode <EndNode>k__BackingField;
    public HttpExpressionStartNode StartNode { get; private set; }
    public HttpExpressionNode ExpressionNode { get; private set; }
    public HttpExpressionEndNode EndNode { get; private set; }
    [NullableContextAttribute("1")]
internal HttpEmbeddedExpressionNode(SourceText sourceText, HttpSyntaxTree syntaxTree);
    [CompilerGeneratedAttribute]
public HttpExpressionStartNode get_StartNode();
    [CompilerGeneratedAttribute]
private void set_StartNode(HttpExpressionStartNode value);
    [CompilerGeneratedAttribute]
public HttpExpressionNode get_ExpressionNode();
    [CompilerGeneratedAttribute]
private void set_ExpressionNode(HttpExpressionNode value);
    [CompilerGeneratedAttribute]
public HttpExpressionEndNode get_EndNode();
    [CompilerGeneratedAttribute]
private void set_EndNode(HttpExpressionEndNode value);
    [NullableContextAttribute("1")]
public void Add(HttpExpressionStartNode startNode);
    [NullableContextAttribute("1")]
public void Add(HttpExpressionNode expressionNode);
    [NullableContextAttribute("1")]
public void Add(HttpExpressionEndNode endNode);
}
internal class Microsoft.DotNet.Interactive.Http.Parsing.HttpExpressionEndNode : HttpSyntaxNode {
    [NullableContextAttribute("1")]
internal HttpExpressionEndNode(SourceText sourceText, HttpSyntaxTree syntaxTree);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.DotNet.Interactive.Http.Parsing.HttpExpressionNode : HttpSyntaxNode {
    internal HttpExpressionNode(SourceText sourceText, HttpSyntaxTree syntaxTree);
    public HttpBindingResult`1<object> CreateBindingFailure(HttpDiagnosticInfo diagnosticInfo);
    [NullableContextAttribute("2")]
public HttpBindingResult`1<object> CreateBindingSuccess(object value);
}
internal class Microsoft.DotNet.Interactive.Http.Parsing.HttpExpressionStartNode : HttpSyntaxNode {
    [NullableContextAttribute("1")]
internal HttpExpressionStartNode(SourceText sourceText, HttpSyntaxTree syntaxTree);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.DotNet.Interactive.Http.Parsing.HttpHeaderNameNode : HttpSyntaxNode {
    internal HttpHeaderNameNode(SourceText sourceText, HttpSyntaxTree syntaxTree);
    [IteratorStateMachineAttribute("Microsoft.DotNet.Interactive.Http.Parsing.HttpHeaderNameNode/<GetDiagnostics>d__1")]
public virtual IEnumerable`1<Diagnostic> GetDiagnostics();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Diagnostic> <>n__0();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Microsoft.DotNet.Interactive.Http.Parsing.HttpHeaderNode : HttpSyntaxNode {
    [CompilerGeneratedAttribute]
private HttpHeaderNameNode <NameNode>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpHeaderSeparatorNode <SeparatorNode>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpHeaderValueNode <ValueNode>k__BackingField;
    public HttpHeaderNameNode NameNode { get; private set; }
    public HttpHeaderSeparatorNode SeparatorNode { get; private set; }
    public HttpHeaderValueNode ValueNode { get; private set; }
    [NullableContextAttribute("1")]
internal HttpHeaderNode(SourceText sourceText, HttpSyntaxTree syntaxTree);
    [CompilerGeneratedAttribute]
public HttpHeaderNameNode get_NameNode();
    [CompilerGeneratedAttribute]
private void set_NameNode(HttpHeaderNameNode value);
    [CompilerGeneratedAttribute]
public HttpHeaderSeparatorNode get_SeparatorNode();
    [CompilerGeneratedAttribute]
private void set_SeparatorNode(HttpHeaderSeparatorNode value);
    [CompilerGeneratedAttribute]
public HttpHeaderValueNode get_ValueNode();
    [CompilerGeneratedAttribute]
private void set_ValueNode(HttpHeaderValueNode value);
    [NullableContextAttribute("1")]
public void Add(HttpHeaderNameNode node);
    [NullableContextAttribute("1")]
public void Add(HttpHeaderSeparatorNode node);
    [NullableContextAttribute("1")]
public void Add(HttpHeaderValueNode node);
}
internal class Microsoft.DotNet.Interactive.Http.Parsing.HttpHeaderSeparatorNode : HttpSyntaxNode {
    [NullableContextAttribute("1")]
internal HttpHeaderSeparatorNode(SourceText sourceText, HttpSyntaxTree syntaxTree);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.DotNet.Interactive.Http.Parsing.HttpHeadersNode : HttpSyntaxNode {
    public IReadOnlyList`1<HttpHeaderNode> HeaderNodes { get; }
    internal HttpHeadersNode(SourceText sourceText, HttpSyntaxTree syntaxTree);
    public IReadOnlyList`1<HttpHeaderNode> get_HeaderNodes();
    public void Add(HttpHeaderNode headerNode);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.DotNet.Interactive.Http.Parsing.HttpHeaderValueNode : HttpSyntaxNode {
    internal HttpHeaderValueNode(SourceText sourceText, HttpSyntaxTree syntaxTree);
    public void Add(HttpEmbeddedExpressionNode node);
    public HttpBindingResult`1<string> TryGetValue(HttpBindingDelegate bind);
    [IteratorStateMachineAttribute("Microsoft.DotNet.Interactive.Http.Parsing.HttpHeaderValueNode/<GetDiagnostics>d__3")]
public virtual IEnumerable`1<Diagnostic> GetDiagnostics();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Diagnostic> <>n__0();
}
internal class Microsoft.DotNet.Interactive.Http.Parsing.HttpMethodNode : HttpSyntaxNode {
    [NullableContextAttribute("1")]
internal HttpMethodNode(SourceText sourceText, HttpSyntaxTree syntaxTree);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Microsoft.DotNet.Interactive.Http.Parsing.HttpRequestNode : HttpSyntaxNode {
    [CompilerGeneratedAttribute]
private HttpMethodNode <MethodNode>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpUrlNode <UrlNode>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpVersionNode <VersionNode>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpHeadersNode <HeadersNode>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpBodyNode <BodyNode>k__BackingField;
    public HttpMethodNode MethodNode { get; private set; }
    public HttpUrlNode UrlNode { get; private set; }
    public HttpVersionNode VersionNode { get; private set; }
    public HttpHeadersNode HeadersNode { get; private set; }
    public HttpBodyNode BodyNode { get; private set; }
    [NullableContextAttribute("1")]
internal HttpRequestNode(SourceText sourceText, HttpSyntaxTree syntaxTree);
    [CompilerGeneratedAttribute]
public HttpMethodNode get_MethodNode();
    [CompilerGeneratedAttribute]
private void set_MethodNode(HttpMethodNode value);
    [CompilerGeneratedAttribute]
public HttpUrlNode get_UrlNode();
    [CompilerGeneratedAttribute]
private void set_UrlNode(HttpUrlNode value);
    [CompilerGeneratedAttribute]
public HttpVersionNode get_VersionNode();
    [CompilerGeneratedAttribute]
private void set_VersionNode(HttpVersionNode value);
    [CompilerGeneratedAttribute]
public HttpHeadersNode get_HeadersNode();
    [CompilerGeneratedAttribute]
private void set_HeadersNode(HttpHeadersNode value);
    [CompilerGeneratedAttribute]
public HttpBodyNode get_BodyNode();
    [CompilerGeneratedAttribute]
private void set_BodyNode(HttpBodyNode value);
    [NullableContextAttribute("1")]
public void Add(HttpMethodNode node);
    [NullableContextAttribute("1")]
public void Add(HttpUrlNode node);
    [NullableContextAttribute("1")]
public void Add(HttpVersionNode node);
    [NullableContextAttribute("1")]
public void Add(HttpHeadersNode node);
    [NullableContextAttribute("1")]
public void Add(HttpBodyNode node);
    [NullableContextAttribute("1")]
public void Add(HttpCommentNode node);
    [NullableContextAttribute("1")]
public HttpBindingResult`1<HttpRequestMessage> TryGetHttpRequestMessage(HttpBindingDelegate bind);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.DotNet.Interactive.Http.Parsing.HttpRequestParser : object {
    public static HttpRequestParseResult Parse(string code);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.DotNet.Interactive.Http.Parsing.HttpRequestParseResult : object {
    [CompilerGeneratedAttribute]
private HttpSyntaxTree <SyntaxTree>k__BackingField;
    public HttpSyntaxTree SyntaxTree { get; }
    public HttpRequestParseResult(HttpSyntaxTree syntaxTree);
    [CompilerGeneratedAttribute]
public HttpSyntaxTree get_SyntaxTree();
    public IEnumerable`1<Diagnostic> GetDiagnostics();
}
internal class Microsoft.DotNet.Interactive.Http.Parsing.HttpRequestSeparatorNode : HttpSyntaxNode {
    [NullableContextAttribute("1")]
internal HttpRequestSeparatorNode(SourceText sourceText, HttpSyntaxTree syntaxTree);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.DotNet.Interactive.Http.Parsing.HttpRootSyntaxNode : HttpSyntaxNode {
    internal HttpRootSyntaxNode(SourceText sourceText, HttpSyntaxTree tree);
    public void Add(HttpRequestNode requestNode);
    public void Add(HttpCommentNode commentNode);
    public void Add(HttpVariableDeclarationAndAssignmentNode variableNode);
    public void Add(HttpRequestSeparatorNode separatorNode);
    public Dictionary`2<string, DeclaredVariable> GetDeclaredVariables();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Microsoft.DotNet.Interactive.Http.Parsing.HttpSyntaxNode : HttpSyntaxNodeOrToken {
    private TextSpan _fullSpan;
    private List`1<HttpSyntaxNodeOrToken> _childNodesAndTokens;
    private TextSpan _span;
    private bool _isSignificant;
    public TextSpan FullSpan { get; }
    public bool IsSignificant { get; }
    public TextSpan Span { get; }
    public string FullText { get; }
    public IEnumerable`1<HttpSyntaxNode> ChildNodes { get; }
    public IEnumerable`1<HttpSyntaxToken> ChildTokens { get; }
    public IReadOnlyList`1<HttpSyntaxNodeOrToken> ChildNodesAndTokens { get; }
    private protected HttpSyntaxNode(SourceText sourceText, HttpSyntaxTree syntaxTree);
    public virtual TextSpan get_FullSpan();
    public virtual bool get_IsSignificant();
    public virtual TextSpan get_Span();
    public string get_FullText();
    public bool Contains(HttpSyntaxNode node);
    [NullableContextAttribute("2")]
public HttpSyntaxNode FindNode(TextSpan span);
    [NullableContextAttribute("2")]
public HttpSyntaxNode FindNode(int position);
    [NullableContextAttribute("2")]
public HttpSyntaxToken FindToken(int position);
    protected bool TextContainsWhitespace();
    private void GrowSpan(HttpSyntaxNodeOrToken child);
    internal void Add(HttpSyntaxToken token);
    internal void Add(HttpCommentNode node, bool addBefore);
    protected void AddInternal(HttpSyntaxNodeOrToken child, bool addBefore);
    public IEnumerable`1<HttpSyntaxNode> get_ChildNodes();
    public IEnumerable`1<HttpSyntaxToken> get_ChildTokens();
    public IReadOnlyList`1<HttpSyntaxNodeOrToken> get_ChildNodesAndTokens();
    [IteratorStateMachineAttribute("Microsoft.DotNet.Interactive.Http.Parsing.HttpSyntaxNode/<GetDiagnostics>d__28")]
public virtual IEnumerable`1<Diagnostic> GetDiagnostics();
    [IteratorStateMachineAttribute("Microsoft.DotNet.Interactive.Http.Parsing.HttpSyntaxNode/<DescendantNodesAndTokensAndSelf>d__29")]
public IEnumerable`1<HttpSyntaxNodeOrToken> DescendantNodesAndTokensAndSelf();
    public IEnumerable`1<HttpSyntaxNodeOrToken> DescendantNodesAndTokens();
    [IteratorStateMachineAttribute("Microsoft.DotNet.Interactive.Http.Parsing.HttpSyntaxNode/<FlattenBreadthFirst>d__31`1")]
private static IEnumerable`1<T> FlattenBreadthFirst(IEnumerable`1<T> source, Func`2<T, IEnumerable`1<T>> children);
    protected HttpBindingResult`1<string> BindByInterpolation(HttpBindingDelegate bind);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Diagnostic> <>n__0();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Microsoft.DotNet.Interactive.Http.Parsing.HttpSyntaxNodeOrToken : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
protected List`1<Diagnostic> _diagnostics;
    [CompilerGeneratedAttribute]
private SourceText <SourceText>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private HttpSyntaxNode <Parent>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private HttpSyntaxTree <SyntaxTree>k__BackingField;
    public SourceText SourceText { get; }
    [NullableAttribute("2")]
public HttpSyntaxNode Parent { get; internal set; }
    public bool IsSignificant { get; }
    public TextSpan FullSpan { get; }
    public TextSpan Span { get; }
    [NullableAttribute("2")]
public HttpSyntaxTree SyntaxTree { get; }
    public string Text { get; }
    private protected HttpSyntaxNodeOrToken(SourceText sourceText, HttpSyntaxTree syntaxTree);
    [CompilerGeneratedAttribute]
public SourceText get_SourceText();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public HttpSyntaxNode get_Parent();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal void set_Parent(HttpSyntaxNode value);
    public abstract virtual bool get_IsSignificant();
    public abstract virtual TextSpan get_FullSpan();
    public abstract virtual TextSpan get_Span();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public HttpSyntaxTree get_SyntaxTree();
    public string get_Text();
    public virtual string ToString();
    [IteratorStateMachineAttribute("Microsoft.DotNet.Interactive.Http.Parsing.HttpSyntaxNodeOrToken/<GetDiagnostics>d__21")]
public virtual IEnumerable`1<Diagnostic> GetDiagnostics();
    public void AddDiagnostic(Diagnostic d);
    public Diagnostic CreateDiagnostic(HttpDiagnosticInfo diagnosticInfo, Location location);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.DotNet.Interactive.Http.Parsing.HttpSyntaxToken : HttpSyntaxNodeOrToken {
    [CompilerGeneratedAttribute]
private TextSpan <FullSpan>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpTokenKind <Kind>k__BackingField;
    public TextSpan FullSpan { get; }
    public bool IsSignificant { get; }
    public TextSpan Span { get; }
    public HttpTokenKind Kind { get; public set; }
    internal HttpSyntaxToken(HttpTokenKind kind, SourceText sourceText, TextSpan fullSpan, HttpSyntaxTree syntaxTree);
    [CompilerGeneratedAttribute]
public virtual TextSpan get_FullSpan();
    public virtual bool get_IsSignificant();
    public virtual TextSpan get_Span();
    [CompilerGeneratedAttribute]
public HttpTokenKind get_Kind();
    [CompilerGeneratedAttribute]
public void set_Kind(HttpTokenKind value);
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.DotNet.Interactive.Http.Parsing.HttpSyntaxTree : object {
    [CompilerGeneratedAttribute]
private HttpRootSyntaxNode <RootNode>k__BackingField;
    public HttpRootSyntaxNode RootNode { get; }
    public HttpSyntaxTree(SourceText sourceText);
    [CompilerGeneratedAttribute]
public HttpRootSyntaxNode get_RootNode();
}
internal enum Microsoft.DotNet.Interactive.Http.Parsing.HttpTokenKind : Enum {
    public int value__;
    public static HttpTokenKind Word;
    public static HttpTokenKind Whitespace;
    public static HttpTokenKind Punctuation;
    public static HttpTokenKind NewLine;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.DotNet.Interactive.Http.Parsing.HttpUrlNode : HttpSyntaxNode {
    internal HttpUrlNode(SourceText sourceText, HttpSyntaxTree syntaxTree);
    public void Add(HttpEmbeddedExpressionNode node);
    [IteratorStateMachineAttribute("Microsoft.DotNet.Interactive.Http.Parsing.HttpUrlNode/<GetDiagnostics>d__2")]
public virtual IEnumerable`1<Diagnostic> GetDiagnostics();
    internal HttpBindingResult`1<Uri> TryGetUri(HttpBindingDelegate bind);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Diagnostic> <>n__0();
}
internal class Microsoft.DotNet.Interactive.Http.Parsing.HttpVariableAssignmentNode : HttpSyntaxNode {
    [NullableContextAttribute("1")]
internal HttpVariableAssignmentNode(SourceText sourceText, HttpSyntaxTree syntaxTree);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Microsoft.DotNet.Interactive.Http.Parsing.HttpVariableDeclarationAndAssignmentNode : HttpSyntaxNode {
    [CompilerGeneratedAttribute]
private HttpVariableDeclarationNode <DeclarationNode>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpVariableAssignmentNode <AssignmentNode>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpVariableValueNode <ValueNode>k__BackingField;
    public HttpVariableDeclarationNode DeclarationNode { get; private set; }
    public HttpVariableAssignmentNode AssignmentNode { get; private set; }
    public HttpVariableValueNode ValueNode { get; private set; }
    [NullableContextAttribute("1")]
internal HttpVariableDeclarationAndAssignmentNode(SourceText sourceText, HttpSyntaxTree syntaxTree);
    [CompilerGeneratedAttribute]
public HttpVariableDeclarationNode get_DeclarationNode();
    [CompilerGeneratedAttribute]
private void set_DeclarationNode(HttpVariableDeclarationNode value);
    [CompilerGeneratedAttribute]
public HttpVariableAssignmentNode get_AssignmentNode();
    [CompilerGeneratedAttribute]
private void set_AssignmentNode(HttpVariableAssignmentNode value);
    [CompilerGeneratedAttribute]
public HttpVariableValueNode get_ValueNode();
    [CompilerGeneratedAttribute]
private void set_ValueNode(HttpVariableValueNode value);
    [NullableContextAttribute("1")]
public void Add(HttpVariableDeclarationNode node);
    [NullableContextAttribute("1")]
public void Add(HttpVariableAssignmentNode node);
    [NullableContextAttribute("1")]
public void Add(HttpVariableValueNode node);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.DotNet.Interactive.Http.Parsing.HttpVariableDeclarationNode : HttpSyntaxNode {
    public string VariableName { get; }
    internal HttpVariableDeclarationNode(SourceText sourceText, HttpSyntaxTree syntaxTree);
    public string get_VariableName();
    [IteratorStateMachineAttribute("Microsoft.DotNet.Interactive.Http.Parsing.HttpVariableDeclarationNode/<GetDiagnostics>d__3")]
public virtual IEnumerable`1<Diagnostic> GetDiagnostics();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Diagnostic> <>n__0();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.DotNet.Interactive.Http.Parsing.HttpVariableValueNode : HttpSyntaxNode {
    internal HttpVariableValueNode(SourceText sourceText, HttpSyntaxTree syntaxTree);
    public void Add(HttpEmbeddedExpressionNode node);
    public HttpBindingResult`1<string> TryGetValue(HttpBindingDelegate bind);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.DotNet.Interactive.Http.Parsing.HttpVersionNode : HttpSyntaxNode {
    internal HttpVersionNode(SourceText sourceText, HttpSyntaxTree syntaxTree);
    [IteratorStateMachineAttribute("Microsoft.DotNet.Interactive.Http.Parsing.HttpVersionNode/<GetDiagnostics>d__1")]
public virtual IEnumerable`1<Diagnostic> GetDiagnostics();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<Diagnostic> <>n__0();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.DotNet.Interactive.Http.Parsing.Parsing.DeclaredVariable : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpBindingResult`1<string> <HttpBindingResult>k__BackingField;
    public string Name { get; }
    public string Value { get; }
    public HttpBindingResult`1<string> HttpBindingResult { get; }
    public DeclaredVariable(string name, string value, HttpBindingResult`1<string> httpBindingResult);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public HttpBindingResult`1<string> get_HttpBindingResult();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[TypeFormatterSourceAttribute("Microsoft.DotNet.Interactive.Http.HttpResponseFormatterSource")]
public class Microsoft.DotNet.Interactive.Http.PartialHttpResponse : EmptyHttpResponse {
    [CompilerGeneratedAttribute]
private int <StatusCode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ReasonPhrase>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <ElapsedMilliseconds>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <ContentByteLength>k__BackingField;
    public int StatusCode { get; }
    public string ReasonPhrase { get; }
    public string Version { get; }
    public Nullable`1<double> ElapsedMilliseconds { get; internal set; }
    public Nullable`1<long> ContentByteLength { get; }
    public PartialHttpResponse(int statusCode, string reasonPhrase, string version, Nullable`1<double> elapsedMilliseconds, Nullable`1<long> contentByteLength);
    [CompilerGeneratedAttribute]
public int get_StatusCode();
    [CompilerGeneratedAttribute]
public string get_ReasonPhrase();
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_ElapsedMilliseconds();
    [CompilerGeneratedAttribute]
internal void set_ElapsedMilliseconds(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_ContentByteLength();
}
