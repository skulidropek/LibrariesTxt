[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class System.CommandLine.NamingConventionBinder.BindingContextExtensions : object {
    [ExtensionAttribute]
public static void AddModelBinder(BindingContext bindingContext, ModelBinder binder);
    [ExtensionAttribute]
public static ModelBinder GetOrCreateModelBinder(BindingContext bindingContext, IValueDescriptor valueDescriptor);
    private static ModelBinderCollection GetModelBinderCollection(BindingContext bindingContext);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public static class System.CommandLine.NamingConventionBinder.CommandHandler : object {
    [NullableContextAttribute("1")]
public static ICommandHandler Create(Delegate delegate);
    [NullableContextAttribute("1")]
public static ICommandHandler Create(MethodInfo method, object target);
    [NullableContextAttribute("1")]
public static ICommandHandler Create(Action`1<T> action);
    [NullableContextAttribute("1")]
public static ICommandHandler Create(Action`2<T1, T2> action);
    public static ICommandHandler Create(Action`3<T1, T2, T3> action);
    public static ICommandHandler Create(Action`4<T1, T2, T3, T4> action);
    public static ICommandHandler Create(Action`5<T1, T2, T3, T4, T5> action);
    public static ICommandHandler Create(Action`6<T1, T2, T3, T4, T5, T6> action);
    public static ICommandHandler Create(Action`7<T1, T2, T3, T4, T5, T6, T7> action);
    public static ICommandHandler Create(Action`8<T1, T2, T3, T4, T5, T6, T7, T8> action);
    public static ICommandHandler Create(Action`9<T1, T2, T3, T4, T5, T6, T7, T8, T9> action);
    public static ICommandHandler Create(Action`10<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> action);
    public static ICommandHandler Create(Action`11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> action);
    public static ICommandHandler Create(Action`12<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> action);
    public static ICommandHandler Create(Action`13<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> action);
    public static ICommandHandler Create(Action`14<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> action);
    public static ICommandHandler Create(Action`15<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> action);
    public static ICommandHandler Create(Action`16<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> action);
    [NullableContextAttribute("1")]
public static ICommandHandler Create(Func`2<T, int> action);
    [NullableContextAttribute("1")]
public static ICommandHandler Create(Func`3<T1, T2, int> action);
    public static ICommandHandler Create(Func`4<T1, T2, T3, int> action);
    public static ICommandHandler Create(Func`5<T1, T2, T3, T4, int> action);
    public static ICommandHandler Create(Func`6<T1, T2, T3, T4, T5, int> action);
    public static ICommandHandler Create(Func`7<T1, T2, T3, T4, T5, T6, int> action);
    public static ICommandHandler Create(Func`8<T1, T2, T3, T4, T5, T6, T7, int> action);
    public static ICommandHandler Create(Func`9<T1, T2, T3, T4, T5, T6, T7, T8, int> action);
    public static ICommandHandler Create(Func`10<T1, T2, T3, T4, T5, T6, T7, T8, T9, int> action);
    public static ICommandHandler Create(Func`11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, int> action);
    public static ICommandHandler Create(Func`12<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, int> action);
    public static ICommandHandler Create(Func`13<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, int> action);
    public static ICommandHandler Create(Func`14<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, int> action);
    public static ICommandHandler Create(Func`15<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, int> action);
    public static ICommandHandler Create(Func`16<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, int> action);
    public static ICommandHandler Create(Func`17<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, int> action);
    [NullableContextAttribute("1")]
public static ICommandHandler Create(Func`2<T, Task> action);
    [NullableContextAttribute("1")]
public static ICommandHandler Create(Func`3<T1, T2, Task> action);
    public static ICommandHandler Create(Func`4<T1, T2, T3, Task> action);
    public static ICommandHandler Create(Func`5<T1, T2, T3, T4, Task> action);
    public static ICommandHandler Create(Func`6<T1, T2, T3, T4, T5, Task> action);
    public static ICommandHandler Create(Func`7<T1, T2, T3, T4, T5, T6, Task> action);
    public static ICommandHandler Create(Func`8<T1, T2, T3, T4, T5, T6, T7, Task> action);
    public static ICommandHandler Create(Func`9<T1, T2, T3, T4, T5, T6, T7, T8, Task> action);
    public static ICommandHandler Create(Func`10<T1, T2, T3, T4, T5, T6, T7, T8, T9, Task> action);
    public static ICommandHandler Create(Func`11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, Task> action);
    public static ICommandHandler Create(Func`12<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, Task> action);
    public static ICommandHandler Create(Func`13<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, Task> action);
    public static ICommandHandler Create(Func`14<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, Task> action);
    public static ICommandHandler Create(Func`15<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, Task> action);
    public static ICommandHandler Create(Func`16<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, Task> action);
    public static ICommandHandler Create(Func`17<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, Task> action);
    [NullableContextAttribute("1")]
public static ICommandHandler Create(Func`2<T, Task`1<int>> action);
    [NullableContextAttribute("1")]
public static ICommandHandler Create(Func`3<T1, T2, Task`1<int>> action);
    public static ICommandHandler Create(Func`4<T1, T2, T3, Task`1<int>> action);
    public static ICommandHandler Create(Func`5<T1, T2, T3, T4, Task`1<int>> action);
    public static ICommandHandler Create(Func`6<T1, T2, T3, T4, T5, Task`1<int>> action);
    public static ICommandHandler Create(Func`7<T1, T2, T3, T4, T5, T6, Task`1<int>> action);
    public static ICommandHandler Create(Func`8<T1, T2, T3, T4, T5, T6, T7, Task`1<int>> action);
    public static ICommandHandler Create(Func`9<T1, T2, T3, T4, T5, T6, T7, T8, Task`1<int>> action);
    public static ICommandHandler Create(Func`10<T1, T2, T3, T4, T5, T6, T7, T8, T9, Task`1<int>> action);
    public static ICommandHandler Create(Func`11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, Task`1<int>> action);
    public static ICommandHandler Create(Func`12<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, Task`1<int>> action);
    public static ICommandHandler Create(Func`13<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, Task`1<int>> action);
    public static ICommandHandler Create(Func`14<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, Task`1<int>> action);
    public static ICommandHandler Create(Func`15<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, Task`1<int>> action);
    public static ICommandHandler Create(Func`16<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, Task`1<int>> action);
    public static ICommandHandler Create(Func`17<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, Task`1<int>> action);
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("System.CommandLine.NamingConventionBinder.CommandHandler/<GetExitCodeAsync>d__66")]
internal static Task`1<int> GetExitCodeAsync(object returnValue, InvocationContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class System.CommandLine.NamingConventionBinder.CommandResultExtensions : object {
    [ExtensionAttribute]
internal static bool TryGetValueForArgument(CommandResult commandResult, IValueDescriptor valueDescriptor, Object& value);
    [ExtensionAttribute]
internal static bool TryGetValueForOption(CommandResult commandResult, IValueDescriptor valueDescriptor, Object& value);
    [ExtensionAttribute]
private static bool IsMatch(string parameterName, string alias);
    [CompilerGeneratedAttribute]
internal static bool <TryGetValueForOption>g__HasMatchingAlias|1_0(IValueDescriptor valueDescriptor, Option option);
    [CompilerGeneratedAttribute]
internal static int <IsMatch>g__IndexAfterPrefix|2_0(string alias);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class System.CommandLine.NamingConventionBinder.ConstructorDescriptor : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private List`1<ParameterDescriptor> _parameterDescriptors;
    private ConstructorInfo _constructorInfo;
    [CompilerGeneratedAttribute]
private ModelDescriptor <Parent>k__BackingField;
    public ModelDescriptor Parent { get; }
    public IReadOnlyList`1<ParameterDescriptor> ParameterDescriptors { get; }
    internal ConstructorDescriptor(ConstructorInfo constructorInfo, ModelDescriptor parent);
    [CompilerGeneratedAttribute]
public sealed virtual ModelDescriptor get_Parent();
    public sealed virtual IReadOnlyList`1<ParameterDescriptor> get_ParameterDescriptors();
    internal object Invoke(IReadOnlyCollection`1<object> parameters);
    public virtual string ToString();
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private ParameterDescriptor <get_ParameterDescriptors>b__7_0(ParameterInfo p);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class System.CommandLine.NamingConventionBinder.DelegateHandlerDescriptor : HandlerDescriptor {
    private Delegate _handlerDelegate;
    [NullableAttribute("2")]
public ModelDescriptor Parent { get; }
    public DelegateHandlerDescriptor(Delegate handlerDelegate);
    public virtual ICommandHandler GetCommandHandler();
    [NullableContextAttribute("2")]
public virtual ModelDescriptor get_Parent();
    private protected virtual IEnumerable`1<ParameterDescriptor> InitializeParameterDescriptors();
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private ParameterDescriptor <InitializeParameterDescriptors>b__5_0(ParameterInfo p);
}
internal class System.CommandLine.NamingConventionBinder.DelegateValueSource : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Func`2<BindingContext, object> _getValue;
    public DelegateValueSource(Func`2<BindingContext, object> getValue);
    [NullableContextAttribute("2")]
public sealed virtual bool TryGetValue(IValueDescriptor valueDescriptor, BindingContext bindingContext, Object& boundValue);
}
[ExtensionAttribute]
internal static class System.CommandLine.NamingConventionBinder.ExpressionExtensions : object {
    [NullableContextAttribute("2")]
[ExtensionAttribute]
internal static ValueTuple`2<Type, string> MemberTypeAndName(Expression`1<Func`2<T, TValue>> expression);
    [NullableContextAttribute("1")]
[ExtensionAttribute]
internal static Type ReturnType(MemberInfo memberInfo);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
internal static ValueTuple`2<Type, string> <MemberTypeAndName>g__TypeAndName|0_0(MemberExpression memberExpression);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class System.CommandLine.NamingConventionBinder.HandlerDescriptor : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private List`1<ParameterDescriptor> _parameterDescriptors;
    [NullableAttribute("2")]
public ModelDescriptor Parent { get; }
    public IReadOnlyList`1<ParameterDescriptor> ParameterDescriptors { get; }
    public abstract virtual ICommandHandler GetCommandHandler();
    [NullableContextAttribute("2")]
public abstract virtual ModelDescriptor get_Parent();
    public sealed virtual IReadOnlyList`1<ParameterDescriptor> get_ParameterDescriptors();
    private protected abstract virtual IEnumerable`1<ParameterDescriptor> InitializeParameterDescriptors();
    public virtual string ToString();
    public static HandlerDescriptor FromMethodInfo(MethodInfo methodInfo, object target);
    public static HandlerDescriptor FromDelegate(Delegate delegate);
}
[NullableContextAttribute("1")]
public interface System.CommandLine.NamingConventionBinder.IMethodDescriptor {
    [NullableAttribute("2")]
public ModelDescriptor Parent { get; }
    public IReadOnlyList`1<ParameterDescriptor> ParameterDescriptors { get; }
    [NullableContextAttribute("2")]
public abstract virtual ModelDescriptor get_Parent();
    public abstract virtual IReadOnlyList`1<ParameterDescriptor> get_ParameterDescriptors();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class System.CommandLine.NamingConventionBinder.MethodInfoHandlerDescriptor : HandlerDescriptor {
    private MethodInfo _handlerMethodInfo;
    [NullableAttribute("2")]
private object _invocationTarget;
    public ModelDescriptor Parent { get; }
    public MethodInfoHandlerDescriptor(MethodInfo handlerMethodInfo, object target);
    public virtual ICommandHandler GetCommandHandler();
    public virtual ModelDescriptor get_Parent();
    private protected virtual IEnumerable`1<ParameterDescriptor> InitializeParameterDescriptors();
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private ParameterDescriptor <InitializeParameterDescriptors>b__6_0(ParameterInfo p);
}
internal class System.CommandLine.NamingConventionBinder.MissingValueSource : object {
    [NullableContextAttribute("2")]
public sealed virtual bool TryGetValue(IValueDescriptor valueDescriptor, BindingContext bindingContext, Object& boundValue);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class System.CommandLine.NamingConventionBinder.ModelBinder : object {
    [CompilerGeneratedAttribute]
private IValueDescriptor <ValueDescriptor>k__BackingField;
    [CompilerGeneratedAttribute]
private ModelDescriptor <ModelDescriptor>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnforceExplicitBinding>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<IValueDescriptor, IValueSource> <ConstructorArgumentBindingSources>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<IValueDescriptor, IValueSource> <MemberBindingSources>k__BackingField;
    public IValueDescriptor ValueDescriptor { get; }
    public ModelDescriptor ModelDescriptor { get; }
    public bool EnforceExplicitBinding { get; public set; }
    internal Dictionary`2<IValueDescriptor, IValueSource> ConstructorArgumentBindingSources { get; }
    internal Dictionary`2<IValueDescriptor, IValueSource> MemberBindingSources { get; }
    public ModelBinder(Type modelType);
    internal ModelBinder(IValueDescriptor valueDescriptor);
    [CompilerGeneratedAttribute]
public IValueDescriptor get_ValueDescriptor();
    [CompilerGeneratedAttribute]
public ModelDescriptor get_ModelDescriptor();
    [CompilerGeneratedAttribute]
public bool get_EnforceExplicitBinding();
    [CompilerGeneratedAttribute]
public void set_EnforceExplicitBinding(bool value);
    [CompilerGeneratedAttribute]
internal Dictionary`2<IValueDescriptor, IValueSource> get_ConstructorArgumentBindingSources();
    [CompilerGeneratedAttribute]
internal Dictionary`2<IValueDescriptor, IValueSource> get_MemberBindingSources();
    public void BindMemberFromValue(PropertyInfo property, IValueDescriptor valueDescriptor);
    public object CreateInstance(BindingContext bindingContext);
    public void UpdateInstance(T instance, BindingContext bindingContext);
    private ValueTuple`3<bool, object, bool> CreateInstanceInternal(BindingContext bindingContext);
    private bool IsModelTypeUnbindable();
    private bool ShortCutTheBinding();
    private ValueTuple`3<bool, object, bool> GetSimpleModelValue(IDictionary`2<IValueDescriptor, IValueSource> bindingSources, BindingContext bindingContext);
    private ValueTuple`3<bool, object, bool> InstanceFromSpecificConstructor(BindingContext bindingContext, ConstructorDescriptor constructor, IReadOnlyList`1<BoundValue> boundValues, Boolean& nonDefaultsUsed);
    private bool UpdateInstanceInternalNotifyIfNonDefaultsUsed(T instance, BindingContext bindingContext);
    private ConstructorAndArgs GetBestConstructorAndArgs(BindingContext bindingContext);
    internal static ValueTuple`2<IReadOnlyList`1<BoundValue>, bool> GetBoundValues(IDictionary`2<IValueDescriptor, IValueSource> bindingSources, BindingContext bindingContext, IReadOnlyList`1<IValueDescriptor> valueDescriptors, bool enforceExplicitBinding, Type parentType, bool includeMissingValues);
    internal static IValueSource GetValueSource(IDictionary`2<IValueDescriptor, IValueSource> bindingSources, BindingContext bindingContext, IValueDescriptor valueDescriptor, bool enforceExplicitBinding);
    internal static ValueTuple`2<Nullable`1<BoundValue>, bool> GetBoundValue(IValueSource valueSource, BindingContext bindingContext, IValueDescriptor valueDescriptor, bool includeMissingValues, Type parentType);
    private static BoundValue DefaultForValueDescriptor(IValueDescriptor valueDescriptor, BindingContext context);
    private protected IValueDescriptor FindModelPropertyDescriptor(Type propertyType, string propertyName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class System.CommandLine.NamingConventionBinder.ModelBinder`1 : ModelBinder {
    public void BindMemberFromValue(Expression`1<Func`2<TModel, TValue>> property, IValueDescriptor valueDescriptor);
    public void BindMemberFromValue(Expression`1<Func`2<TModel, TValue>> property, Func`2<BindingContext, TValue> getValue);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class System.CommandLine.NamingConventionBinder.ModelBinderCollection : object {
    private Dictionary`2<Type, ModelBinder> _modelBindersByValueDescriptor;
    public void Add(ModelBinder binder);
    public ModelBinder GetModelBinder(IValueDescriptor valueDescriptor);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class System.CommandLine.NamingConventionBinder.ModelBindingCommandHandler : object {
    [NullableAttribute("2")]
private Delegate _handlerDelegate;
    [NullableAttribute("2")]
private object _invocationTarget;
    [NullableAttribute("2")]
private ModelBinder _invocationTargetBinder;
    [NullableAttribute("2")]
private MethodInfo _handlerMethodInfo;
    private IMethodDescriptor _methodDescriptor;
    [CompilerGeneratedAttribute]
private Dictionary`2<IValueDescriptor, IValueSource> <_invokeArgumentBindingSources>k__BackingField;
    private Dictionary`2<IValueDescriptor, IValueSource> _invokeArgumentBindingSources { get; }
    internal ModelBindingCommandHandler(MethodInfo handlerMethodInfo, IMethodDescriptor methodDescriptor, object invocationTarget);
    internal ModelBindingCommandHandler(MethodInfo handlerMethodInfo, IMethodDescriptor methodDescriptor);
    internal ModelBindingCommandHandler(Delegate handlerDelegate, IMethodDescriptor methodDescriptor);
    [CompilerGeneratedAttribute]
private Dictionary`2<IValueDescriptor, IValueSource> get__invokeArgumentBindingSources();
    [AsyncStateMachineAttribute("System.CommandLine.NamingConventionBinder.ModelBindingCommandHandler/<InvokeAsync>d__11")]
public sealed virtual Task`1<int> InvokeAsync(InvocationContext context);
    public void BindParameter(ParameterInfo param, Argument argument);
    public void BindParameter(ParameterInfo param, Option option);
    private void BindValueSource(ParameterInfo param, IValueSource valueSource);
    [NullableContextAttribute("2")]
private ParameterDescriptor FindParameterDescriptor(ParameterInfo param);
    public sealed virtual int Invoke(InvocationContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class System.CommandLine.NamingConventionBinder.ModelDescriptor : object {
    private static BindingFlags CommonBindingFlags;
    private static ConcurrentDictionary`2<Type, ModelDescriptor> _modelDescriptors;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private List`1<PropertyDescriptor> _propertyDescriptors;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private List`1<ConstructorDescriptor> _constructorDescriptors;
    [CompilerGeneratedAttribute]
private Type <ModelType>k__BackingField;
    public IReadOnlyList`1<ConstructorDescriptor> ConstructorDescriptors { get; }
    public IReadOnlyList`1<IValueDescriptor> PropertyDescriptors { get; }
    public Type ModelType { get; }
    protected ModelDescriptor(Type modelType);
    private static ModelDescriptor();
    public IReadOnlyList`1<ConstructorDescriptor> get_ConstructorDescriptors();
    public IReadOnlyList`1<IValueDescriptor> get_PropertyDescriptors();
    [CompilerGeneratedAttribute]
public Type get_ModelType();
    public virtual string ToString();
    public static ModelDescriptor FromType();
    public static ModelDescriptor FromType(Type type);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private ConstructorDescriptor <get_ConstructorDescriptors>b__6_0(ConstructorInfo i);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private PropertyDescriptor <get_PropertyDescriptors>b__8_1(PropertyInfo i);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class System.CommandLine.NamingConventionBinder.ParameterDescriptor : object {
    private ParameterInfo _parameterInfo;
    private Nullable`1<bool> _allowsNull;
    [CompilerGeneratedAttribute]
private IMethodDescriptor <Parent>k__BackingField;
    public string ValueName { get; }
    public IMethodDescriptor Parent { get; }
    public Type ValueType { get; }
    public bool HasDefaultValue { get; }
    public bool AllowsNull { get; }
    internal ParameterDescriptor(ParameterInfo parameterInfo, IMethodDescriptor parent);
    public sealed virtual string get_ValueName();
    [CompilerGeneratedAttribute]
public IMethodDescriptor get_Parent();
    public sealed virtual Type get_ValueType();
    public sealed virtual bool get_HasDefaultValue();
    public bool get_AllowsNull();
    internal static bool CalculateAllowsNull(ParameterInfo parameterInfo);
    [NullableContextAttribute("2")]
public sealed virtual object GetDefaultValue();
    public virtual string ToString();
}
internal class System.CommandLine.NamingConventionBinder.ParseResultMatchingValueSource : object {
    [NullableContextAttribute("2")]
public sealed virtual bool TryGetValue(IValueDescriptor valueDescriptor, BindingContext bindingContext, Object& boundValue);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class System.CommandLine.NamingConventionBinder.PropertyDescriptor : object {
    private PropertyInfo _propertyInfo;
    [CompilerGeneratedAttribute]
private ModelDescriptor <Parent>k__BackingField;
    public string ValueName { get; }
    public ModelDescriptor Parent { get; }
    internal string Path { get; }
    public Type ValueType { get; }
    public bool HasDefaultValue { get; }
    internal PropertyDescriptor(PropertyInfo propertyInfo, ModelDescriptor parent);
    public sealed virtual string get_ValueName();
    [CompilerGeneratedAttribute]
public ModelDescriptor get_Parent();
    internal string get_Path();
    public sealed virtual Type get_ValueType();
    public sealed virtual bool get_HasDefaultValue();
    [NullableContextAttribute("2")]
public sealed virtual object GetDefaultValue();
    [NullableContextAttribute("2")]
public void SetValue(object instance, object value);
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class System.CommandLine.NamingConventionBinder.SpecificSymbolValueSource : object {
    [CompilerGeneratedAttribute]
private IValueDescriptor <ValueDescriptor>k__BackingField;
    public IValueDescriptor ValueDescriptor { get; }
    public SpecificSymbolValueSource(IValueDescriptor valueDescriptor);
    [CompilerGeneratedAttribute]
public IValueDescriptor get_ValueDescriptor();
    [NullableContextAttribute("2")]
public sealed virtual bool TryGetValue(IValueDescriptor valueDescriptor, BindingContext bindingContext, Object& boundValue);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class System.CommandLine.NamingConventionBinder.TypeExtensions : object {
    [ExtensionAttribute]
public static bool IsConstructedGenericTypeOf(Type type, Type genericTypeDefinition);
    [ExtensionAttribute]
public static bool IsNullableValueType(Type type);
}
[AttributeUsageAttribute("2432")]
internal class System.Diagnostics.CodeAnalysis.AllowNullAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
internal class System.Diagnostics.CodeAnalysis.DisallowNullAttribute : Attribute {
}
[AttributeUsageAttribute("64")]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute : Attribute {
    public bool ParameterValue { get; }
    public DoesNotReturnIfAttribute(bool parameterValue);
    public bool get_ParameterValue();
}
[AttributeUsageAttribute("749")]
internal class System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute : Attribute {
}
[AttributeUsageAttribute("10624")]
internal class System.Diagnostics.CodeAnalysis.MaybeNullAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute : Attribute {
    public bool ReturnValue { get; }
    public MaybeNullWhenAttribute(bool returnValue);
    public bool get_ReturnValue();
}
[AttributeUsageAttribute("10624")]
internal class System.Diagnostics.CodeAnalysis.NotNullAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("10368")]
internal class System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute : Attribute {
    public string ParameterName { get; }
    public NotNullIfNotNullAttribute(string parameterName);
    public string get_ParameterName();
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.NotNullWhenAttribute : Attribute {
    public bool ReturnValue { get; }
    public NotNullWhenAttribute(bool returnValue);
    public bool get_ReturnValue();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
