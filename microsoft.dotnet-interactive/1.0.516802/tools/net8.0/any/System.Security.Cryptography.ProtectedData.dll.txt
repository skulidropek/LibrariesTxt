internal static class FxResources.System.Security.Cryptography.ProtectedData.SR : object {
}
[ExtensionAttribute]
internal static class Internal.Cryptography.CryptoThrowHelper : object {
    [ExtensionAttribute]
public static CryptographicException ToCryptographicException(int hr);
}
internal static class Interop : object {
}
internal static class System.HResults : object {
    internal static int S_OK;
    internal static int S_FALSE;
    internal static int COR_E_ABANDONEDMUTEX;
    internal static int COR_E_AMBIGUOUSIMPLEMENTATION;
    internal static int COR_E_AMBIGUOUSMATCH;
    internal static int COR_E_APPDOMAINUNLOADED;
    internal static int COR_E_APPLICATION;
    internal static int COR_E_ARGUMENT;
    internal static int COR_E_ARGUMENTOUTOFRANGE;
    internal static int COR_E_ARITHMETIC;
    internal static int COR_E_ARRAYTYPEMISMATCH;
    internal static int COR_E_BADEXEFORMAT;
    internal static int COR_E_BADIMAGEFORMAT;
    internal static int COR_E_CANNOTUNLOADAPPDOMAIN;
    internal static int COR_E_CODECONTRACTFAILED;
    internal static int COR_E_CONTEXTMARSHAL;
    internal static int COR_E_CUSTOMATTRIBUTEFORMAT;
    internal static int COR_E_DATAMISALIGNED;
    internal static int COR_E_DIRECTORYNOTFOUND;
    internal static int COR_E_DIVIDEBYZERO;
    internal static int COR_E_DLLNOTFOUND;
    internal static int COR_E_DUPLICATEWAITOBJECT;
    internal static int COR_E_ENDOFSTREAM;
    internal static int COR_E_ENTRYPOINTNOTFOUND;
    internal static int COR_E_EXCEPTION;
    internal static int COR_E_EXECUTIONENGINE;
    internal static int COR_E_FAILFAST;
    internal static int COR_E_FIELDACCESS;
    internal static int COR_E_FILELOAD;
    internal static int COR_E_FILENOTFOUND;
    internal static int COR_E_FORMAT;
    internal static int COR_E_INDEXOUTOFRANGE;
    internal static int COR_E_INSUFFICIENTEXECUTIONSTACK;
    internal static int COR_E_INSUFFICIENTMEMORY;
    internal static int COR_E_INVALIDCAST;
    internal static int COR_E_INVALIDCOMOBJECT;
    internal static int COR_E_INVALIDFILTERCRITERIA;
    internal static int COR_E_INVALIDOLEVARIANTTYPE;
    internal static int COR_E_INVALIDOPERATION;
    internal static int COR_E_INVALIDPROGRAM;
    internal static int COR_E_IO;
    internal static int COR_E_KEYNOTFOUND;
    internal static int COR_E_MARSHALDIRECTIVE;
    internal static int COR_E_MEMBERACCESS;
    internal static int COR_E_METHODACCESS;
    internal static int COR_E_MISSINGFIELD;
    internal static int COR_E_MISSINGMANIFESTRESOURCE;
    internal static int COR_E_MISSINGMEMBER;
    internal static int COR_E_MISSINGMETHOD;
    internal static int COR_E_MISSINGSATELLITEASSEMBLY;
    internal static int COR_E_MULTICASTNOTSUPPORTED;
    internal static int COR_E_NOTFINITENUMBER;
    internal static int COR_E_NOTSUPPORTED;
    internal static int COR_E_OBJECTDISPOSED;
    internal static int COR_E_OPERATIONCANCELED;
    internal static int COR_E_OUTOFMEMORY;
    internal static int COR_E_OVERFLOW;
    internal static int COR_E_PATHTOOLONG;
    internal static int COR_E_PLATFORMNOTSUPPORTED;
    internal static int COR_E_RANK;
    internal static int COR_E_REFLECTIONTYPELOAD;
    internal static int COR_E_RUNTIMEWRAPPED;
    internal static int COR_E_SAFEARRAYRANKMISMATCH;
    internal static int COR_E_SAFEARRAYTYPEMISMATCH;
    internal static int COR_E_SECURITY;
    internal static int COR_E_SERIALIZATION;
    internal static int COR_E_STACKOVERFLOW;
    internal static int COR_E_SYNCHRONIZATIONLOCK;
    internal static int COR_E_SYSTEM;
    internal static int COR_E_TARGET;
    internal static int COR_E_TARGETINVOCATION;
    internal static int COR_E_TARGETPARAMCOUNT;
    internal static int COR_E_THREADABORTED;
    internal static int COR_E_THREADINTERRUPTED;
    internal static int COR_E_THREADSTART;
    internal static int COR_E_THREADSTATE;
    internal static int COR_E_TIMEOUT;
    internal static int COR_E_TYPEACCESS;
    internal static int COR_E_TYPEINITIALIZATION;
    internal static int COR_E_TYPELOAD;
    internal static int COR_E_TYPEUNLOADED;
    internal static int COR_E_UNAUTHORIZEDACCESS;
    internal static int COR_E_VERIFICATION;
    internal static int COR_E_WAITHANDLECANNOTBEOPENED;
    internal static int CO_E_NOTINITIALIZED;
    internal static int DISP_E_OVERFLOW;
    internal static int E_BOUNDS;
    internal static int E_CHANGED_STATE;
    internal static int E_FILENOTFOUND;
    internal static int E_FAIL;
    internal static int E_HANDLE;
    internal static int E_INVALIDARG;
    internal static int E_NOTIMPL;
    internal static int E_POINTER;
    internal static int ERROR_MRM_MAP_NOT_FOUND;
    internal static int ERROR_TIMEOUT;
    internal static int RO_E_CLOSED;
    internal static int RPC_E_CHANGED_MODE;
    internal static int TYPE_E_TYPEMISMATCH;
    internal static int STG_E_PATHNOTFOUND;
    internal static int CTL_E_PATHNOTFOUND;
    internal static int CTL_E_FILENOTFOUND;
    internal static int FUSION_E_INVALID_NAME;
    internal static int FUSION_E_PRIVATE_ASM_DISALLOWED;
    internal static int FUSION_E_REF_DEF_MISMATCH;
    internal static int ERROR_TOO_MANY_OPEN_FILES;
    internal static int ERROR_SHARING_VIOLATION;
    internal static int ERROR_LOCK_VIOLATION;
    internal static int ERROR_OPEN_FAILED;
    internal static int ERROR_DISK_CORRUPT;
    internal static int ERROR_UNRECOGNIZED_VOLUME;
    internal static int ERROR_DLL_INIT_FAILED;
    internal static int MSEE_E_ASSEMBLYLOADINPROGRESS;
    internal static int ERROR_FILE_INVALID;
}
public enum System.Security.Cryptography.DataProtectionScope : Enum {
    public int value__;
    public static DataProtectionScope CurrentUser;
    public static DataProtectionScope LocalMachine;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class System.Security.Cryptography.ProtectedData : object {
    private static Byte[] s_nonEmpty;
    private static ProtectedData();
    public static Byte[] Protect(Byte[] userData, Byte[] optionalEntropy, DataProtectionScope scope);
    public static Byte[] Unprotect(Byte[] encryptedData, Byte[] optionalEntropy, DataProtectionScope scope);
    private static Byte[] ProtectOrUnprotect(Byte[] inputData, Byte[] optionalEntropy, DataProtectionScope scope, bool protect);
    private static bool ErrorMayBeCausedByUnloadedProfile(int errorCode);
    private static void CheckPlatformSupport();
}
internal static class System.SR : object {
    private static bool s_usingResourceKeys;
    private static ResourceManager s_resourceManager;
    internal static ResourceManager ResourceManager { get; }
    internal static string Cryptography_DpApi_ProfileMayNotBeLoaded { get; }
    internal static string PlatformNotSupported_CryptographyProtectedData { get; }
    private static SR();
    internal static bool UsingResourceKeys();
    private static string GetResourceString(string resourceKey);
    private static string GetResourceString(string resourceKey, string defaultString);
    internal static string Format(string resourceFormat, object p1);
    internal static string Format(string resourceFormat, object p1, object p2);
    internal static string Format(string resourceFormat, object p1, object p2, object p3);
    internal static string Format(string resourceFormat, Object[] args);
    internal static string Format(IFormatProvider provider, string resourceFormat, object p1);
    internal static string Format(IFormatProvider provider, string resourceFormat, object p1, object p2);
    internal static string Format(IFormatProvider provider, string resourceFormat, object p1, object p2, object p3);
    internal static string Format(IFormatProvider provider, string resourceFormat, Object[] args);
    internal static ResourceManager get_ResourceManager();
    internal static string get_Cryptography_DpApi_ProfileMayNotBeLoaded();
    internal static string get_PlatformNotSupported_CryptographyProtectedData();
}
