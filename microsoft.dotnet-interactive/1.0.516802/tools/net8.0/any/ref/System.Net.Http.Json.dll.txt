[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class System.Net.Http.Json.HttpClientJsonExtensions : object {
    [ExtensionAttribute]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
public static Task`1<object> DeleteFromJsonAsync(HttpClient client, string requestUri, Type type, JsonSerializerOptions options, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<object> DeleteFromJsonAsync(HttpClient client, string requestUri, Type type, JsonSerializerContext context, CancellationToken cancellationToken);
    [ExtensionAttribute]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
public static Task`1<object> DeleteFromJsonAsync(HttpClient client, string requestUri, Type type, CancellationToken cancellationToken);
    [ExtensionAttribute]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
public static Task`1<object> DeleteFromJsonAsync(HttpClient client, Uri requestUri, Type type, JsonSerializerOptions options, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<object> DeleteFromJsonAsync(HttpClient client, Uri requestUri, Type type, JsonSerializerContext context, CancellationToken cancellationToken);
    [ExtensionAttribute]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
public static Task`1<object> DeleteFromJsonAsync(HttpClient client, Uri requestUri, Type type, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
public static Task`1<TValue> DeleteFromJsonAsync(HttpClient client, string requestUri, JsonSerializerOptions options, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<TValue> DeleteFromJsonAsync(HttpClient client, string requestUri, JsonTypeInfo`1<TValue> jsonTypeInfo, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
public static Task`1<TValue> DeleteFromJsonAsync(HttpClient client, string requestUri, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
public static Task`1<TValue> DeleteFromJsonAsync(HttpClient client, Uri requestUri, JsonSerializerOptions options, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<TValue> DeleteFromJsonAsync(HttpClient client, Uri requestUri, JsonTypeInfo`1<TValue> jsonTypeInfo, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
public static Task`1<TValue> DeleteFromJsonAsync(HttpClient client, Uri requestUri, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
public static IAsyncEnumerable`1<TValue> GetFromJsonAsAsyncEnumerable(HttpClient client, string requestUri, JsonSerializerOptions options, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TValue> GetFromJsonAsAsyncEnumerable(HttpClient client, string requestUri, JsonTypeInfo`1<TValue> jsonTypeInfo, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
public static IAsyncEnumerable`1<TValue> GetFromJsonAsAsyncEnumerable(HttpClient client, string requestUri, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
public static IAsyncEnumerable`1<TValue> GetFromJsonAsAsyncEnumerable(HttpClient client, Uri requestUri, JsonSerializerOptions options, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TValue> GetFromJsonAsAsyncEnumerable(HttpClient client, Uri requestUri, JsonTypeInfo`1<TValue> jsonTypeInfo, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
public static IAsyncEnumerable`1<TValue> GetFromJsonAsAsyncEnumerable(HttpClient client, Uri requestUri, CancellationToken cancellationToken);
    [ExtensionAttribute]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
public static Task`1<object> GetFromJsonAsync(HttpClient client, string requestUri, Type type, JsonSerializerOptions options, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<object> GetFromJsonAsync(HttpClient client, string requestUri, Type type, JsonSerializerContext context, CancellationToken cancellationToken);
    [ExtensionAttribute]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
public static Task`1<object> GetFromJsonAsync(HttpClient client, string requestUri, Type type, CancellationToken cancellationToken);
    [ExtensionAttribute]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
public static Task`1<object> GetFromJsonAsync(HttpClient client, Uri requestUri, Type type, JsonSerializerOptions options, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<object> GetFromJsonAsync(HttpClient client, Uri requestUri, Type type, JsonSerializerContext context, CancellationToken cancellationToken);
    [ExtensionAttribute]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
public static Task`1<object> GetFromJsonAsync(HttpClient client, Uri requestUri, Type type, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
public static Task`1<TValue> GetFromJsonAsync(HttpClient client, string requestUri, JsonSerializerOptions options, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<TValue> GetFromJsonAsync(HttpClient client, string requestUri, JsonTypeInfo`1<TValue> jsonTypeInfo, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
public static Task`1<TValue> GetFromJsonAsync(HttpClient client, string requestUri, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
public static Task`1<TValue> GetFromJsonAsync(HttpClient client, Uri requestUri, JsonSerializerOptions options, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<TValue> GetFromJsonAsync(HttpClient client, Uri requestUri, JsonTypeInfo`1<TValue> jsonTypeInfo, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
public static Task`1<TValue> GetFromJsonAsync(HttpClient client, Uri requestUri, CancellationToken cancellationToken);
    [ExtensionAttribute]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
public static Task`1<HttpResponseMessage> PatchAsJsonAsync(HttpClient client, string requestUri, TValue value, JsonSerializerOptions options, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<HttpResponseMessage> PatchAsJsonAsync(HttpClient client, string requestUri, TValue value, JsonTypeInfo`1<TValue> jsonTypeInfo, CancellationToken cancellationToken);
    [ExtensionAttribute]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
public static Task`1<HttpResponseMessage> PatchAsJsonAsync(HttpClient client, string requestUri, TValue value, CancellationToken cancellationToken);
    [ExtensionAttribute]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
public static Task`1<HttpResponseMessage> PatchAsJsonAsync(HttpClient client, Uri requestUri, TValue value, JsonSerializerOptions options, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<HttpResponseMessage> PatchAsJsonAsync(HttpClient client, Uri requestUri, TValue value, JsonTypeInfo`1<TValue> jsonTypeInfo, CancellationToken cancellationToken);
    [ExtensionAttribute]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
public static Task`1<HttpResponseMessage> PatchAsJsonAsync(HttpClient client, Uri requestUri, TValue value, CancellationToken cancellationToken);
    [ExtensionAttribute]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
public static Task`1<HttpResponseMessage> PostAsJsonAsync(HttpClient client, string requestUri, TValue value, JsonSerializerOptions options, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<HttpResponseMessage> PostAsJsonAsync(HttpClient client, string requestUri, TValue value, JsonTypeInfo`1<TValue> jsonTypeInfo, CancellationToken cancellationToken);
    [ExtensionAttribute]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
public static Task`1<HttpResponseMessage> PostAsJsonAsync(HttpClient client, string requestUri, TValue value, CancellationToken cancellationToken);
    [ExtensionAttribute]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
public static Task`1<HttpResponseMessage> PostAsJsonAsync(HttpClient client, Uri requestUri, TValue value, JsonSerializerOptions options, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<HttpResponseMessage> PostAsJsonAsync(HttpClient client, Uri requestUri, TValue value, JsonTypeInfo`1<TValue> jsonTypeInfo, CancellationToken cancellationToken);
    [ExtensionAttribute]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
public static Task`1<HttpResponseMessage> PostAsJsonAsync(HttpClient client, Uri requestUri, TValue value, CancellationToken cancellationToken);
    [ExtensionAttribute]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
public static Task`1<HttpResponseMessage> PutAsJsonAsync(HttpClient client, string requestUri, TValue value, JsonSerializerOptions options, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<HttpResponseMessage> PutAsJsonAsync(HttpClient client, string requestUri, TValue value, JsonTypeInfo`1<TValue> jsonTypeInfo, CancellationToken cancellationToken);
    [ExtensionAttribute]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
public static Task`1<HttpResponseMessage> PutAsJsonAsync(HttpClient client, string requestUri, TValue value, CancellationToken cancellationToken);
    [ExtensionAttribute]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
public static Task`1<HttpResponseMessage> PutAsJsonAsync(HttpClient client, Uri requestUri, TValue value, JsonSerializerOptions options, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<HttpResponseMessage> PutAsJsonAsync(HttpClient client, Uri requestUri, TValue value, JsonTypeInfo`1<TValue> jsonTypeInfo, CancellationToken cancellationToken);
    [ExtensionAttribute]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
public static Task`1<HttpResponseMessage> PutAsJsonAsync(HttpClient client, Uri requestUri, TValue value, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class System.Net.Http.Json.HttpContentJsonExtensions : object {
    [NullableContextAttribute("2")]
[ExtensionAttribute]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
public static IAsyncEnumerable`1<TValue> ReadFromJsonAsAsyncEnumerable(HttpContent content, JsonSerializerOptions options, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static IAsyncEnumerable`1<TValue> ReadFromJsonAsAsyncEnumerable(HttpContent content, JsonTypeInfo`1<TValue> jsonTypeInfo, CancellationToken cancellationToken);
    [ExtensionAttribute]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
public static IAsyncEnumerable`1<TValue> ReadFromJsonAsAsyncEnumerable(HttpContent content, CancellationToken cancellationToken);
    [ExtensionAttribute]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
public static Task`1<object> ReadFromJsonAsync(HttpContent content, Type type, JsonSerializerOptions options, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<object> ReadFromJsonAsync(HttpContent content, Type type, JsonSerializerContext context, CancellationToken cancellationToken);
    [ExtensionAttribute]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
public static Task`1<object> ReadFromJsonAsync(HttpContent content, Type type, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
public static Task`1<T> ReadFromJsonAsync(HttpContent content, JsonSerializerOptions options, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<T> ReadFromJsonAsync(HttpContent content, JsonTypeInfo`1<T> jsonTypeInfo, CancellationToken cancellationToken);
    [ExtensionAttribute]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
public static Task`1<T> ReadFromJsonAsync(HttpContent content, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class System.Net.Http.Json.JsonContent : HttpContent {
    public Type ObjectType { get; }
    [NullableAttribute("2")]
public object Value { get; }
    public Type get_ObjectType();
    [NullableContextAttribute("2")]
public object get_Value();
    [NullableContextAttribute("2")]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
public static JsonContent Create(object inputValue, Type inputType, MediaTypeHeaderValue mediaType, JsonSerializerOptions options);
    [NullableContextAttribute("2")]
[RequiresUnreferencedCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext, or make sure all of the required types are preserved.")]
[RequiresDynamicCodeAttribute("JSON serialization and deserialization might require types that cannot be statically analyzed. Use the overload that takes a JsonTypeInfo or JsonSerializerContext.")]
public static JsonContent Create(T inputValue, MediaTypeHeaderValue mediaType, JsonSerializerOptions options);
    [NullableContextAttribute("2")]
public static JsonContent Create(T inputValue, JsonTypeInfo`1<T> jsonTypeInfo, MediaTypeHeaderValue mediaType);
    public static JsonContent Create(object inputValue, JsonTypeInfo jsonTypeInfo, MediaTypeHeaderValue mediaType);
    protected virtual Task SerializeToStreamAsync(Stream stream, TransportContext context);
    protected virtual bool TryComputeLength(Int64& length);
    protected virtual void SerializeToStream(Stream stream, TransportContext context, CancellationToken cancellationToken);
    protected virtual Task SerializeToStreamAsync(Stream stream, TransportContext context, CancellationToken cancellationToken);
}
