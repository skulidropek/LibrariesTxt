[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("64")]
internal class JetBrains.Annotations.ContractAnnotationAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Contract>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ForceFullStates>k__BackingField;
    public string Contract { get; }
    public bool ForceFullStates { get; }
    public ContractAnnotationAttribute(string contract);
    public ContractAnnotationAttribute(string contract, bool forceFullStates);
    [CompilerGeneratedAttribute]
public string get_Contract();
    [CompilerGeneratedAttribute]
public bool get_ForceFullStates();
}
[FlagsAttribute]
internal enum JetBrains.Annotations.ImplicitUseKindFlags : Enum {
    public int value__;
    public static ImplicitUseKindFlags Default;
    public static ImplicitUseKindFlags Access;
    public static ImplicitUseKindFlags Assign;
    public static ImplicitUseKindFlags InstantiatedWithFixedConstructorSignature;
    public static ImplicitUseKindFlags InstantiatedNoFixedConstructorSignature;
}
[FlagsAttribute]
internal enum JetBrains.Annotations.ImplicitUseTargetFlags : Enum {
    public int value__;
    public static ImplicitUseTargetFlags Default;
    public static ImplicitUseTargetFlags Itself;
    public static ImplicitUseTargetFlags Members;
    public static ImplicitUseTargetFlags WithMembers;
}
[AttributeUsageAttribute("2048")]
internal class JetBrains.Annotations.InvokerParameterNameAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
internal class JetBrains.Annotations.NoEnumerationAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("4320")]
internal class JetBrains.Annotations.StringFormatMethodAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <FormatParameterName>k__BackingField;
    public string FormatParameterName { get; }
    public StringFormatMethodAttribute(string formatParameterName);
    [CompilerGeneratedAttribute]
public string get_FormatParameterName();
}
[AttributeUsageAttribute("32767")]
internal class JetBrains.Annotations.UsedImplicitlyAttribute : Attribute {
    [CompilerGeneratedAttribute]
private ImplicitUseKindFlags <UseKindFlags>k__BackingField;
    [CompilerGeneratedAttribute]
private ImplicitUseTargetFlags <TargetFlags>k__BackingField;
    public ImplicitUseKindFlags UseKindFlags { get; }
    public ImplicitUseTargetFlags TargetFlags { get; }
    public UsedImplicitlyAttribute(ImplicitUseKindFlags useKindFlags);
    public UsedImplicitlyAttribute(ImplicitUseTargetFlags targetFlags);
    public UsedImplicitlyAttribute(ImplicitUseKindFlags useKindFlags, ImplicitUseTargetFlags targetFlags);
    [CompilerGeneratedAttribute]
public ImplicitUseKindFlags get_UseKindFlags();
    [CompilerGeneratedAttribute]
public ImplicitUseTargetFlags get_TargetFlags();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Microsoft.DotNet.Cli.CommandLine.CommandArgument : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <Values>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <MultipleValues>k__BackingField;
    public string Name { get; public set; }
    public string Description { get; public set; }
    [NullableAttribute("1")]
public List`1<string> Values { get; }
    public bool MultipleValues { get; public set; }
    public string Value { get; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public List`1<string> get_Values();
    [CompilerGeneratedAttribute]
public bool get_MultipleValues();
    [CompilerGeneratedAttribute]
public void set_MultipleValues(bool value);
    public string get_Value();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.DotNet.Cli.CommandLine.CommandLineApplication : object {
    private bool _throwOnUnexpectedArg;
    [CompilerGeneratedAttribute]
private CommandLineApplication <Parent>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FullName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Syntax>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<CommandOption> <Options>k__BackingField;
    [CompilerGeneratedAttribute]
private CommandOption <OptionHelp>k__BackingField;
    [CompilerGeneratedAttribute]
private CommandOption <OptionVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<CommandArgument> <Arguments>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <RemainingArguments>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <ApplicationArguments>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsShowingInformation>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<String[], int> <Invoke>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`1<string> <LongVersionGetter>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`1<string> <ShortVersionGetter>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<CommandLineApplication> <Commands>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HandleResponseFiles>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowArgumentSeparator>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HandleRemainingArguments>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ArgumentSeparatorHelpText>k__BackingField;
    [NullableAttribute("2")]
public CommandLineApplication Parent { get; public set; }
    [NullableAttribute("2")]
public string Name { get; public set; }
    [NullableAttribute("2")]
public string FullName { get; public set; }
    [NullableAttribute("2")]
public string Syntax { get; public set; }
    [NullableAttribute("2")]
public string Description { get; public set; }
    public List`1<CommandOption> Options { get; }
    [NullableAttribute("2")]
public CommandOption OptionHelp { get; private set; }
    [NullableAttribute("2")]
public CommandOption OptionVersion { get; private set; }
    public List`1<CommandArgument> Arguments { get; }
    public List`1<string> RemainingArguments { get; }
    public List`1<string> ApplicationArguments { get; }
    public bool IsShowingInformation { get; protected set; }
    public Func`2<String[], int> Invoke { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`1<string> LongVersionGetter { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`1<string> ShortVersionGetter { get; public set; }
    public List`1<CommandLineApplication> Commands { get; }
    public bool HandleResponseFiles { get; public set; }
    public bool AllowArgumentSeparator { get; public set; }
    public bool HandleRemainingArguments { get; public set; }
    [NullableAttribute("2")]
public string ArgumentSeparatorHelpText { get; public set; }
    public CommandLineApplication(bool throwOnUnexpectedArg);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public CommandLineApplication get_Parent();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Parent(CommandLineApplication value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Name();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Name(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_FullName();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_FullName(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Syntax();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Syntax(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Description();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public List`1<CommandOption> get_Options();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public CommandOption get_OptionHelp();
    [CompilerGeneratedAttribute]
private void set_OptionHelp(CommandOption value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public CommandOption get_OptionVersion();
    [CompilerGeneratedAttribute]
private void set_OptionVersion(CommandOption value);
    [CompilerGeneratedAttribute]
public List`1<CommandArgument> get_Arguments();
    [CompilerGeneratedAttribute]
public List`1<string> get_RemainingArguments();
    [CompilerGeneratedAttribute]
public List`1<string> get_ApplicationArguments();
    [CompilerGeneratedAttribute]
public bool get_IsShowingInformation();
    [CompilerGeneratedAttribute]
protected void set_IsShowingInformation(bool value);
    [CompilerGeneratedAttribute]
public Func`2<String[], int> get_Invoke();
    [CompilerGeneratedAttribute]
public void set_Invoke(Func`2<String[], int> value);
    [CompilerGeneratedAttribute]
public Func`1<string> get_LongVersionGetter();
    [CompilerGeneratedAttribute]
public void set_LongVersionGetter(Func`1<string> value);
    [CompilerGeneratedAttribute]
public Func`1<string> get_ShortVersionGetter();
    [CompilerGeneratedAttribute]
public void set_ShortVersionGetter(Func`1<string> value);
    [CompilerGeneratedAttribute]
public List`1<CommandLineApplication> get_Commands();
    [CompilerGeneratedAttribute]
public bool get_HandleResponseFiles();
    [CompilerGeneratedAttribute]
public void set_HandleResponseFiles(bool value);
    [CompilerGeneratedAttribute]
public bool get_AllowArgumentSeparator();
    [CompilerGeneratedAttribute]
public void set_AllowArgumentSeparator(bool value);
    [CompilerGeneratedAttribute]
public bool get_HandleRemainingArguments();
    [CompilerGeneratedAttribute]
public void set_HandleRemainingArguments(bool value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_ArgumentSeparatorHelpText();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_ArgumentSeparatorHelpText(string value);
    public CommandLineApplication Command(string name, bool throwOnUnexpectedArg);
    public CommandLineApplication Command(string name, Action`1<CommandLineApplication> configuration, bool throwOnUnexpectedArg);
    public CommandOption Option(string template, string description, CommandOptionType optionType);
    public CommandOption Option(string template, string description, CommandOptionType optionType, Action`1<CommandOption> configuration);
    public CommandArgument Argument(string name, string description, bool multipleValues);
    public CommandArgument Argument(string name, string description, Action`1<CommandArgument> configuration, bool multipleValues);
    public void OnExecute(Func`2<String[], int> invoke);
    public void OnExecute(Func`2<String[], Task`1<int>> invoke);
    public int Execute(String[] args);
    private static ParseOptionResult ParseOption(bool isLongOption, CommandLineApplication command, String[] args, Int32& index, CommandOption& option);
    private static CommandLineApplication ParseSubCommand(string arg, CommandLineApplication command);
    public CommandOption HelpOption(string template);
    public CommandOption VersionOption(string template, string shortFormVersion, string longFormVersion);
    public CommandOption VersionOption(string template, Func`1<string> shortFormVersionGetter, Func`1<string> longFormVersionGetter);
    public void ShowHint();
    [NullableContextAttribute("2")]
public void ShowHelp(string commandName);
    public void ShowVersion();
    [NullableContextAttribute("2")]
public string GetFullNameAndVersion();
    public void ShowRootCommandFullNameAndVersion();
    private static int MaxOptionTemplateLength(IEnumerable`1<CommandOption> options);
    private static int MaxCommandLength(IEnumerable`1<CommandLineApplication> commands);
    private static int MaxArgumentLength(IEnumerable`1<CommandArgument> arguments);
    private static void HandleUnexpectedArg(CommandLineApplication command, String[] args, int index, string argTypeName);
    [IteratorStateMachineAttribute("Microsoft.DotNet.Cli.CommandLine.CommandLineApplication/<ExpandResponseFiles>d__101")]
private IEnumerable`1<string> ExpandResponseFiles(IEnumerable`1<string> args);
    private IEnumerable`1<string> ParseResponseFile(string fileName);
}
[ExtensionAttribute]
internal static class Microsoft.DotNet.Cli.CommandLine.CommandLineApplicationExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static CommandOption Option(CommandLineApplication command, string template, string description);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Microsoft.DotNet.Cli.CommandLine.CommandOption : object {
    [CompilerGeneratedAttribute]
private string <Template>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ShortName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LongName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SymbolName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ValueName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <Values>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <BoolValue>k__BackingField;
    [CompilerGeneratedAttribute]
private CommandOptionType <OptionType>k__BackingField;
    [NullableAttribute("1")]
public string Template { get; public set; }
    public string ShortName { get; public set; }
    public string LongName { get; public set; }
    public string SymbolName { get; public set; }
    public string ValueName { get; public set; }
    public string Description { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public List`1<string> Values { get; }
    public Nullable`1<bool> BoolValue { get; private set; }
    public CommandOptionType OptionType { get; }
    [NullableContextAttribute("1")]
public CommandOption(string template, CommandOptionType optionType);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_Template();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_Template(string value);
    [CompilerGeneratedAttribute]
public string get_ShortName();
    [CompilerGeneratedAttribute]
public void set_ShortName(string value);
    [CompilerGeneratedAttribute]
public string get_LongName();
    [CompilerGeneratedAttribute]
public void set_LongName(string value);
    [CompilerGeneratedAttribute]
public string get_SymbolName();
    [CompilerGeneratedAttribute]
public void set_SymbolName(string value);
    [CompilerGeneratedAttribute]
public string get_ValueName();
    [CompilerGeneratedAttribute]
public void set_ValueName(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public List`1<string> get_Values();
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_BoolValue();
    [CompilerGeneratedAttribute]
private void set_BoolValue(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public CommandOptionType get_OptionType();
    public bool TryParse(string value);
    public bool HasValue();
    public string Value();
    private static bool IsEnglishLetter(char c);
}
internal enum Microsoft.DotNet.Cli.CommandLine.CommandOptionType : Enum {
    public int value__;
    public static CommandOptionType MultipleValue;
    public static CommandOptionType SingleValue;
    public static CommandOptionType BoolValue;
    public static CommandOptionType NoValue;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.DotNet.Cli.CommandLine.CommandParsingException : Exception {
    [CompilerGeneratedAttribute]
private CommandLineApplication <Command>k__BackingField;
    public CommandLineApplication Command { get; }
    public CommandParsingException(CommandLineApplication command, string message);
    [CompilerGeneratedAttribute]
public CommandLineApplication get_Command();
}
[NullableContextAttribute("1")]
public interface Microsoft.EntityFrameworkCore.Design.IOperationReportHandler {
    public int Version { get; }
    public abstract virtual int get_Version();
    public abstract virtual void OnError(string message);
    public abstract virtual void OnWarning(string message);
    public abstract virtual void OnInformation(string message);
    public abstract virtual void OnVerbose(string message);
}
[NullableContextAttribute("1")]
public interface Microsoft.EntityFrameworkCore.Design.IOperationResultHandler {
    public int Version { get; }
    public abstract virtual int get_Version();
    [NullableContextAttribute("2")]
public abstract virtual void OnResult(object value);
    public abstract virtual void OnError(string type, string message, string stackTrace);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.EntityFrameworkCore.Design.OperationReportHandler : MarshalByRefObject {
    private Action`1<string> _errorHandler;
    private Action`1<string> _warningHandler;
    private Action`1<string> _informationHandler;
    private Action`1<string> _verboseHandler;
    public int Version { get; }
    public OperationReportHandler(Action`1<string> errorHandler, Action`1<string> warningHandler, Action`1<string> informationHandler, Action`1<string> verboseHandler);
    public virtual int get_Version();
    public virtual void OnError(string message);
    public virtual void OnWarning(string message);
    public virtual void OnInformation(string message);
    public virtual void OnVerbose(string message);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.EntityFrameworkCore.Design.OperationResultHandler : MarshalByRefObject {
    private bool _hasResult;
    private object _result;
    private string _errorType;
    private string _errorMessage;
    private string _errorStackTrace;
    public int Version { get; }
    public bool HasResult { get; }
    public object Result { get; }
    public string ErrorType { get; }
    public string ErrorMessage { get; }
    public string ErrorStackTrace { get; }
    public virtual int get_Version();
    public virtual bool get_HasResult();
    public virtual object get_Result();
    public virtual string get_ErrorType();
    public virtual string get_ErrorMessage();
    public virtual string get_ErrorStackTrace();
    public virtual void OnResult(object value);
    [NullableContextAttribute("1")]
public virtual void OnError(string type, string message, string stackTrace);
}
public static class Microsoft.EntityFrameworkCore.Infrastructure.ProductInfo : object {
    [NullableContextAttribute("1")]
public static string GetVersion();
}
public class Microsoft.EntityFrameworkCore.Internal.SemanticVersionComparer : object {
    [NullableContextAttribute("2")]
public virtual int Compare(string x, string y);
    private static Version CreateVersion(string semanticVersion);
}
internal static class Microsoft.EntityFrameworkCore.Tools.AnsiConsole : object {
    [NullableAttribute("1")]
public static AnsiTextWriter Out;
    private static AnsiConsole();
    [NullableContextAttribute("2")]
public static void WriteLine(string text);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Microsoft.EntityFrameworkCore.Tools.AnsiConstants : object {
    public static string Reset;
    public static string Bold;
    public static string Dark;
    public static string Black;
    public static string Red;
    public static string Green;
    public static string Yellow;
    public static string Blue;
    public static string Magenta;
    public static string Cyan;
    public static string Gray;
}
internal class Microsoft.EntityFrameworkCore.Tools.AnsiTextWriter : object {
    private TextWriter _writer;
    [NullableContextAttribute("1")]
public AnsiTextWriter(TextWriter writer);
    [NullableContextAttribute("2")]
public void WriteLine(string text);
    private void Interpret(string value);
    private static void Apply(string parameter);
    private static void ApplyBold();
    private static void ResetBold();
    private static void ApplyColor(ConsoleColor color);
    private static void ResetColor();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.EntityFrameworkCore.Tools.CommandException : Exception {
    public CommandException(string message);
    public CommandException(string message, Exception innerException);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Microsoft.EntityFrameworkCore.Tools.Commands.CommandBase : object {
    public virtual void Configure(CommandLineApplication command);
    protected virtual void Validate();
    protected virtual int Execute(String[] args);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Microsoft.EntityFrameworkCore.Tools.Commands.ContextCommandBase : ProjectCommandBase {
    [CompilerGeneratedAttribute]
private CommandOption <Context>k__BackingField;
    protected CommandOption Context { get; private set; }
    [CompilerGeneratedAttribute]
protected CommandOption get_Context();
    [CompilerGeneratedAttribute]
private void set_Context(CommandOption value);
    [NullableContextAttribute("1")]
public virtual void Configure(CommandLineApplication command);
}
internal class Microsoft.EntityFrameworkCore.Tools.Commands.DatabaseCommand : HelpCommandBase {
    [NullableContextAttribute("1")]
public virtual void Configure(CommandLineApplication command);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.EntityFrameworkCore.Tools.Commands.DatabaseDropCommand : ContextCommandBase {
    private CommandOption _force;
    private CommandOption _dryRun;
    public virtual void Configure(CommandLineApplication command);
    protected virtual int Execute(String[] args);
    [CompilerGeneratedAttribute]
private void <Execute>g__LogDropCommand|3_0(Func`3<object, object, string> resource, <>c__DisplayClass3_0& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.EntityFrameworkCore.Tools.Commands.DatabaseUpdateCommand : ContextCommandBase {
    private CommandArgument _migration;
    private CommandOption _connection;
    public virtual void Configure(CommandLineApplication command);
    protected virtual int Execute(String[] args);
}
internal class Microsoft.EntityFrameworkCore.Tools.Commands.DbContextCommand : HelpCommandBase {
    [NullableContextAttribute("1")]
public virtual void Configure(CommandLineApplication command);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.EntityFrameworkCore.Tools.Commands.DbContextInfoCommand : ContextCommandBase {
    private CommandOption _json;
    public virtual void Configure(CommandLineApplication command);
    protected virtual int Execute(String[] args);
    private static void ReportJsonResult(IDictionary result);
    private static void ReportResult(IDictionary result);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.EntityFrameworkCore.Tools.Commands.DbContextListCommand : ProjectCommandBase {
    private CommandOption _json;
    public virtual void Configure(CommandLineApplication command);
    protected virtual int Execute(String[] args);
    private static void ReportJsonResults(IReadOnlyList`1<IDictionary> contextTypes);
    private static void ReportResults(IEnumerable`1<IDictionary> contextTypes);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.EntityFrameworkCore.Tools.Commands.DbContextOptimizeCommand : ContextCommandBase {
    private CommandOption _outputDir;
    private CommandOption _namespace;
    public virtual void Configure(CommandLineApplication command);
    protected virtual int Execute(String[] args);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.EntityFrameworkCore.Tools.Commands.DbContextScaffoldCommand : ProjectCommandBase {
    private CommandArgument _connection;
    private CommandArgument _provider;
    private CommandOption _dataAnnotations;
    private CommandOption _context;
    private CommandOption _contextDir;
    private CommandOption _force;
    private CommandOption _outputDir;
    private CommandOption _schemas;
    private CommandOption _tables;
    private CommandOption _useDatabaseNames;
    private CommandOption _json;
    private CommandOption _namespace;
    private CommandOption _contextNamespace;
    private CommandOption _suppressOnConfiguring;
    private CommandOption _noPluralize;
    public virtual void Configure(CommandLineApplication command);
    protected virtual void Validate();
    protected virtual int Execute(String[] args);
    private static void ReportJsonResults(IDictionary result);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.EntityFrameworkCore.Tools.Commands.DbContextScriptCommand : ContextCommandBase {
    private CommandOption _output;
    public virtual void Configure(CommandLineApplication command);
    protected virtual int Execute(String[] args);
}
internal abstract class Microsoft.EntityFrameworkCore.Tools.Commands.EFCommandBase : CommandBase {
    [NullableContextAttribute("1")]
public virtual void Configure(CommandLineApplication command);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.EntityFrameworkCore.Tools.Commands.HelpCommandBase : EFCommandBase {
    private CommandLineApplication _command;
    public virtual void Configure(CommandLineApplication command);
    protected virtual int Execute(String[] args);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.EntityFrameworkCore.Tools.Commands.MigrationsAddCommand : ContextCommandBase {
    private CommandArgument _name;
    private CommandOption _outputDir;
    private CommandOption _json;
    private CommandOption _namespace;
    public virtual void Configure(CommandLineApplication command);
    protected virtual void Validate();
    protected virtual int Execute(String[] args);
    private static void ReportJson(IDictionary files);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.EntityFrameworkCore.Tools.Commands.MigrationsBundleCommand : ContextCommandBase {
    private CommandOption _output;
    private CommandOption _force;
    private CommandOption _selfContained;
    private CommandOption _runtime;
    public virtual void Configure(CommandLineApplication command);
    protected virtual void Validate();
    protected virtual int Execute(String[] args);
}
internal class Microsoft.EntityFrameworkCore.Tools.Commands.MigrationsCommand : HelpCommandBase {
    [NullableContextAttribute("1")]
public virtual void Configure(CommandLineApplication command);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.EntityFrameworkCore.Tools.Commands.MigrationsListCommand : ContextCommandBase {
    private CommandOption _connection;
    private CommandOption _noConnect;
    private CommandOption _json;
    public virtual void Configure(CommandLineApplication command);
    protected virtual int Execute(String[] args);
    private static void ReportJsonResults(IReadOnlyList`1<IDictionary> migrations);
    private static void ReportResults(IEnumerable`1<IDictionary> migrations);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.EntityFrameworkCore.Tools.Commands.MigrationsRemoveCommand : ContextCommandBase {
    private CommandOption _force;
    private CommandOption _json;
    public virtual void Configure(CommandLineApplication command);
    protected virtual int Execute(String[] args);
    private static void ReportJsonResults(IDictionary result);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.EntityFrameworkCore.Tools.Commands.MigrationsScriptCommand : ContextCommandBase {
    private CommandArgument _from;
    private CommandArgument _to;
    private CommandOption _output;
    private CommandOption _idempotent;
    private CommandOption _noTransactions;
    public virtual void Configure(CommandLineApplication command);
    protected virtual int Execute(String[] args);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal abstract class Microsoft.EntityFrameworkCore.Tools.Commands.ProjectCommandBase : EFCommandBase {
    private CommandOption _dataDir;
    private CommandOption _projectDir;
    private CommandOption _rootNamespace;
    private CommandOption _language;
    private CommandOption _nullable;
    private string _efcoreVersion;
    [CompilerGeneratedAttribute]
private CommandOption <Assembly>k__BackingField;
    [CompilerGeneratedAttribute]
private CommandOption <Project>k__BackingField;
    [CompilerGeneratedAttribute]
private CommandOption <StartupAssembly>k__BackingField;
    [CompilerGeneratedAttribute]
private CommandOption <StartupProject>k__BackingField;
    [CompilerGeneratedAttribute]
private CommandOption <WorkingDir>k__BackingField;
    [CompilerGeneratedAttribute]
private CommandOption <Framework>k__BackingField;
    [CompilerGeneratedAttribute]
private CommandOption <Configuration>k__BackingField;
    protected CommandOption Assembly { get; private set; }
    protected CommandOption Project { get; private set; }
    protected CommandOption StartupAssembly { get; private set; }
    protected CommandOption StartupProject { get; private set; }
    protected CommandOption WorkingDir { get; private set; }
    protected CommandOption Framework { get; private set; }
    protected CommandOption Configuration { get; private set; }
    protected string EFCoreVersion { get; }
    [CompilerGeneratedAttribute]
protected CommandOption get_Assembly();
    [CompilerGeneratedAttribute]
private void set_Assembly(CommandOption value);
    [CompilerGeneratedAttribute]
protected CommandOption get_Project();
    [CompilerGeneratedAttribute]
private void set_Project(CommandOption value);
    [CompilerGeneratedAttribute]
protected CommandOption get_StartupAssembly();
    [CompilerGeneratedAttribute]
private void set_StartupAssembly(CommandOption value);
    [CompilerGeneratedAttribute]
protected CommandOption get_StartupProject();
    [CompilerGeneratedAttribute]
private void set_StartupProject(CommandOption value);
    [CompilerGeneratedAttribute]
protected CommandOption get_WorkingDir();
    [CompilerGeneratedAttribute]
private void set_WorkingDir(CommandOption value);
    [CompilerGeneratedAttribute]
protected CommandOption get_Framework();
    [CompilerGeneratedAttribute]
private void set_Framework(CommandOption value);
    [CompilerGeneratedAttribute]
protected CommandOption get_Configuration();
    [CompilerGeneratedAttribute]
private void set_Configuration(CommandOption value);
    protected string get_EFCoreVersion();
    [NullableContextAttribute("1")]
public virtual void Configure(CommandLineApplication command);
    protected virtual void Validate();
    [NullableContextAttribute("1")]
protected IOperationExecutor CreateExecutor(String[] remainingArguments);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.EntityFrameworkCore.Tools.Commands.RootCommand : HelpCommandBase {
    public virtual void Configure(CommandLineApplication command);
    protected virtual int Execute(String[] args);
    private static string GetVersion();
}
internal static class Microsoft.EntityFrameworkCore.Tools.Exe : object {
    [NullableContextAttribute("1")]
public static int Run(string executable, IReadOnlyList`1<string> args, string workingDirectory, bool interceptOutput);
    private static string ToArguments(IReadOnlyList`1<string> args);
}
[GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
internal class Microsoft.EntityFrameworkCore.Tools.Generators.BundleProgramGenerator : BundleProgramGeneratorBase {
    private string _ContextTypeField;
    private string _AssemblyField;
    private string _StartupAssemblyField;
    private string ContextType { get; }
    private string Assembly { get; }
    private string StartupAssembly { get; }
    public virtual string TransformText();
    private string get_ContextType();
    private string get_Assembly();
    private string get_StartupAssembly();
    public virtual void Initialize();
}
[GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
internal class Microsoft.EntityFrameworkCore.Tools.Generators.BundleProgramGeneratorBase : object {
    private StringBuilder generationEnvironmentField;
    private CompilerErrorCollection errorsField;
    private List`1<int> indentLengthsField;
    private string currentIndentField;
    private bool endsWithNewline;
    private IDictionary`2<string, object> sessionField;
    private ToStringInstanceHelper toStringHelperField;
    protected StringBuilder GenerationEnvironment { get; protected set; }
    public CompilerErrorCollection Errors { get; }
    private List`1<int> indentLengths { get; }
    public string CurrentIndent { get; }
    public IDictionary`2<string, object> Session { get; public set; }
    public ToStringInstanceHelper ToStringHelper { get; }
    protected StringBuilder get_GenerationEnvironment();
    protected void set_GenerationEnvironment(StringBuilder value);
    public CompilerErrorCollection get_Errors();
    private List`1<int> get_indentLengths();
    public string get_CurrentIndent();
    public virtual IDictionary`2<string, object> get_Session();
    public virtual void set_Session(IDictionary`2<string, object> value);
    public void Write(string textToAppend);
    public void WriteLine(string textToAppend);
    public void Write(string format, Object[] args);
    public void WriteLine(string format, Object[] args);
    public void Error(string message);
    public void Warning(string message);
    public void PushIndent(string indent);
    public string PopIndent();
    public void ClearIndent();
    public ToStringInstanceHelper get_ToStringHelper();
}
[GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
internal class Microsoft.EntityFrameworkCore.Tools.Generators.BundleProjectGenerator : BundleProjectGeneratorBase {
    private string _TargetFrameworkField;
    private string _EFCoreVersionField;
    private string _ProjectField;
    private string _StartupProjectField;
    private string TargetFramework { get; }
    private string EFCoreVersion { get; }
    private string Project { get; }
    private string StartupProject { get; }
    public virtual string TransformText();
    private string get_TargetFramework();
    private string get_EFCoreVersion();
    private string get_Project();
    private string get_StartupProject();
    public virtual void Initialize();
}
[GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
internal class Microsoft.EntityFrameworkCore.Tools.Generators.BundleProjectGeneratorBase : object {
    private StringBuilder generationEnvironmentField;
    private CompilerErrorCollection errorsField;
    private List`1<int> indentLengthsField;
    private string currentIndentField;
    private bool endsWithNewline;
    private IDictionary`2<string, object> sessionField;
    private ToStringInstanceHelper toStringHelperField;
    protected StringBuilder GenerationEnvironment { get; protected set; }
    public CompilerErrorCollection Errors { get; }
    private List`1<int> indentLengths { get; }
    public string CurrentIndent { get; }
    public IDictionary`2<string, object> Session { get; public set; }
    public ToStringInstanceHelper ToStringHelper { get; }
    protected StringBuilder get_GenerationEnvironment();
    protected void set_GenerationEnvironment(StringBuilder value);
    public CompilerErrorCollection get_Errors();
    private List`1<int> get_indentLengths();
    public string get_CurrentIndent();
    public virtual IDictionary`2<string, object> get_Session();
    public virtual void set_Session(IDictionary`2<string, object> value);
    public void Write(string textToAppend);
    public void WriteLine(string textToAppend);
    public void Write(string format, Object[] args);
    public void WriteLine(string format, Object[] args);
    public void Error(string message);
    public void Warning(string message);
    public void PushIndent(string indent);
    public string PopIndent();
    public void ClearIndent();
    public ToStringInstanceHelper get_ToStringHelper();
}
[NullableContextAttribute("2")]
internal interface Microsoft.EntityFrameworkCore.Tools.IOperationExecutor {
    public abstract virtual IDictionary AddMigration(string name, string outputDir, string contextType, string namespace);
    [NullableContextAttribute("1")]
public abstract virtual IDictionary RemoveMigration(string contextType, bool force);
    public abstract virtual IEnumerable`1<IDictionary> GetMigrations(string contextType, string connectionString, bool noConnect);
    public abstract virtual void DropDatabase(string contextType);
    [NullableContextAttribute("1")]
public abstract virtual IDictionary GetContextInfo(string name);
    public abstract virtual void UpdateDatabase(string migration, string connectionString, string contextType);
    [NullableContextAttribute("1")]
public abstract virtual IEnumerable`1<IDictionary> GetContextTypes();
    public abstract virtual void OptimizeContext(string outputDir, string modelNamespace, string contextType);
    [NullableContextAttribute("1")]
public abstract virtual IDictionary ScaffoldContext(string provider, string connectionString, string outputDir, string outputDbContextDir, string dbContextClassName, IEnumerable`1<string> schemaFilters, IEnumerable`1<string> tableFilters, bool useDataAnnotations, bool overwriteFiles, bool useDatabaseNames, string entityNamespace, string dbContextNamespace, bool suppressOnConfiguring, bool noPluralize);
    public abstract virtual string ScriptMigration(string fromMigration, string toMigration, bool idempotent, bool noTransactions, string contextType);
    [NullableContextAttribute("1")]
public abstract virtual string ScriptDbContext(string contextType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Microsoft.EntityFrameworkCore.Tools.Json : object {
    public static CommandOption ConfigureOption(CommandLineApplication command);
    public static string Literal(string text);
    public static string Literal(Nullable`1<bool> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Microsoft.EntityFrameworkCore.Tools.OperationExecutorBase : object {
    public static string DesignAssemblyName;
    protected static string ExecutorTypeName;
    private static IDictionary EmptyArguments;
    [CompilerGeneratedAttribute]
private string <AppBasePath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AssemblyFileName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StartupAssemblyFileName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectDirectory>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RootNamespace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Language>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Nullable>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <RemainingArguments>k__BackingField;
    public string AppBasePath { get; }
    protected string AssemblyFileName { get; protected set; }
    protected string StartupAssemblyFileName { get; protected set; }
    protected string ProjectDirectory { get; }
    protected string RootNamespace { get; }
    [NullableAttribute("2")]
protected string Language { get; }
    protected bool Nullable { get; }
    protected String[] RemainingArguments { get; }
    [NullableContextAttribute("2")]
protected OperationExecutorBase(string assembly, string startupAssembly, string projectDir, string rootNamespace, string language, bool nullable, String[] remainingArguments);
    private static OperationExecutorBase();
    [CompilerGeneratedAttribute]
public string get_AppBasePath();
    [CompilerGeneratedAttribute]
protected string get_AssemblyFileName();
    [CompilerGeneratedAttribute]
protected void set_AssemblyFileName(string value);
    [CompilerGeneratedAttribute]
protected string get_StartupAssemblyFileName();
    [CompilerGeneratedAttribute]
protected void set_StartupAssemblyFileName(string value);
    [CompilerGeneratedAttribute]
protected string get_ProjectDirectory();
    [CompilerGeneratedAttribute]
protected string get_RootNamespace();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
protected string get_Language();
    [CompilerGeneratedAttribute]
protected bool get_Nullable();
    [CompilerGeneratedAttribute]
protected String[] get_RemainingArguments();
    public virtual void Dispose();
    protected abstract virtual object CreateResultHandler();
    protected abstract virtual void Execute(string operationName, object resultHandler, IDictionary arguments);
    private TResult InvokeOperation(string operation);
    private TResult InvokeOperation(string operation, IDictionary arguments);
    private void InvokeOperation(string operation, IDictionary arguments);
    private object InvokeOperationImpl(string operationName, IDictionary arguments);
    [NullableContextAttribute("2")]
public sealed virtual IDictionary AddMigration(string name, string outputDir, string contextType, string namespace);
    public sealed virtual IDictionary RemoveMigration(string contextType, bool force);
    [NullableContextAttribute("2")]
public sealed virtual IEnumerable`1<IDictionary> GetMigrations(string contextType, string connectionString, bool noConnect);
    [NullableContextAttribute("2")]
public sealed virtual void DropDatabase(string contextType);
    public sealed virtual IDictionary GetContextInfo(string name);
    [NullableContextAttribute("2")]
public sealed virtual void UpdateDatabase(string migration, string connectionString, string contextType);
    public sealed virtual IEnumerable`1<IDictionary> GetContextTypes();
    [NullableContextAttribute("2")]
public sealed virtual void OptimizeContext(string outputDir, string modelNamespace, string contextType);
    public sealed virtual IDictionary ScaffoldContext(string provider, string connectionString, string outputDir, string outputDbContextDir, string dbContextClassName, IEnumerable`1<string> schemaFilters, IEnumerable`1<string> tableFilters, bool useDataAnnotations, bool overwriteFiles, bool useDatabaseNames, string modelNamespace, string contextNamespace, bool suppressOnConfiguring, bool noPluralize);
    [NullableContextAttribute("2")]
public sealed virtual string ScriptMigration(string fromMigration, string toMigration, bool idempotent, bool noTransactions, string contextType);
    public sealed virtual string ScriptDbContext(string contextType);
}
internal static class Microsoft.EntityFrameworkCore.Tools.Program : object {
    private static int Main(String[] args);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Microsoft.EntityFrameworkCore.Tools.Properties.Resources : object {
    private static ResourceManager _resourceManager;
    public static string AppSettingsTip { get; }
    public static string AssemblyDescription { get; }
    public static string BuildBundleFailed { get; }
    public static string BuildBundleStarted { get; }
    public static string ConfigurationDescription { get; }
    public static string ConnectionDescription { get; }
    public static string ContextDescription { get; }
    public static string ContextDirDescription { get; }
    public static string ContextNameDescription { get; }
    public static string ContextNamespaceDescription { get; }
    public static string DataAnnotationsDescription { get; }
    public static string DatabaseDescription { get; }
    public static string DatabaseDropDescription { get; }
    public static string DatabaseDropDryRunDescription { get; }
    public static string DatabaseDropForceDescription { get; }
    public static string DatabaseUpdateDescription { get; }
    public static string DataDirDescription { get; }
    public static string DbContextConnectionDescription { get; }
    public static string DbContextDescription { get; }
    public static string DbContextInfoDescription { get; }
    public static string DbContextListDescription { get; }
    public static string DbContextOptimizeDescription { get; }
    public static string DbContextScaffoldDescription { get; }
    public static string DbContextScaffoldForceDescription { get; }
    public static string DbContextScriptDescription { get; }
    public static string EFFullName { get; }
    public static string FrameworkDescription { get; }
    public static string IdempotentDescription { get; }
    public static string JsonDescription { get; }
    public static string LanguageDescription { get; }
    public static string MigrationDescription { get; }
    public static string MigrationFromDescription { get; }
    public static string MigrationNameDescription { get; }
    public static string MigrationsAddCompleted { get; }
    public static string MigrationsAddDescription { get; }
    public static string MigrationsBundleDescription { get; }
    public static string MigrationsBundleOutputDescription { get; }
    public static string MigrationsBundleRuntimeDescription { get; }
    public static string MigrationsDescription { get; }
    public static string MigrationsListDescription { get; }
    public static string MigrationsNamespaceDescription { get; }
    public static string MigrationsOutputDirDescription { get; }
    public static string MigrationsRemoveDescription { get; }
    public static string MigrationsRemoveForceDescription { get; }
    public static string MigrationsScriptDescription { get; }
    public static string MigrationToDescription { get; }
    public static string NamespaceDescription { get; }
    public static string NoColorDescription { get; }
    public static string NoConnectDescription { get; }
    public static string NoDbContext { get; }
    public static string NoMigrations { get; }
    public static string NoPluralizeDescription { get; }
    public static string NoTransactionsDescription { get; }
    public static string NullableDescription { get; }
    public static string OutputDescription { get; }
    public static string OutputDirDescription { get; }
    public static string Pending { get; }
    public static string PendingUnknown { get; }
    public static string PrefixDescription { get; }
    public static string ProjectDescription { get; }
    public static string ProjectDirDescription { get; }
    public static string ProviderDescription { get; }
    public static string RootNamespaceDescription { get; }
    public static string SchemasDescription { get; }
    public static string SelfContainedDescription { get; }
    public static string StartupAssemblyDescription { get; }
    public static string StartupProjectDescription { get; }
    public static string SuppressOnConfiguringDescription { get; }
    public static string TablesDescription { get; }
    public static string UseDatabaseNamesDescription { get; }
    public static string VerboseDescription { get; }
    public static string WorkingDirDescription { get; }
    private static Resources();
    public static string get_AppSettingsTip();
    public static string get_AssemblyDescription();
    public static string get_BuildBundleFailed();
    public static string get_BuildBundleStarted();
    public static string BuildBundleSucceeded(object path);
    public static string get_ConfigurationDescription();
    public static string get_ConnectionDescription();
    public static string get_ContextDescription();
    public static string get_ContextDirDescription();
    public static string get_ContextNameDescription();
    public static string get_ContextNamespaceDescription();
    public static string get_DataAnnotationsDescription();
    public static string get_DatabaseDescription();
    public static string get_DatabaseDropDescription();
    [NullableContextAttribute("2")]
public static string DatabaseDropDryRun(object database, object dataSource);
    public static string get_DatabaseDropDryRunDescription();
    public static string get_DatabaseDropForceDescription();
    [NullableContextAttribute("2")]
public static string DatabaseDropPrompt(object database, object dataSource);
    public static string DatabaseName(object database);
    public static string get_DatabaseUpdateDescription();
    public static string get_DataDirDescription();
    public static string DataSource(object dataSource);
    public static string get_DbContextConnectionDescription();
    public static string get_DbContextDescription();
    public static string get_DbContextInfoDescription();
    public static string get_DbContextListDescription();
    public static string get_DbContextOptimizeDescription();
    public static string get_DbContextScaffoldDescription();
    public static string get_DbContextScaffoldForceDescription();
    public static string get_DbContextScriptDescription();
    public static string DbContextType(object type);
    public static string DesignNotFound(object startupProject);
    public static string get_EFFullName();
    public static string FileExists(object path);
    public static string get_FrameworkDescription();
    public static string get_IdempotentDescription();
    public static string get_JsonDescription();
    public static string get_LanguageDescription();
    public static string get_MigrationDescription();
    public static string get_MigrationFromDescription();
    public static string get_MigrationNameDescription();
    public static string get_MigrationsAddCompleted();
    public static string get_MigrationsAddDescription();
    public static string get_MigrationsBundleDescription();
    public static string get_MigrationsBundleOutputDescription();
    public static string get_MigrationsBundleRuntimeDescription();
    public static string get_MigrationsDescription();
    public static string get_MigrationsListDescription();
    public static string get_MigrationsNamespaceDescription();
    public static string get_MigrationsOutputDirDescription();
    public static string get_MigrationsRemoveDescription();
    public static string get_MigrationsRemoveForceDescription();
    public static string get_MigrationsScriptDescription();
    public static string get_MigrationToDescription();
    public static string MissingArgument(object arg);
    public static string MissingOption(object option);
    public static string get_NamespaceDescription();
    public static string get_NoColorDescription();
    public static string get_NoConnectDescription();
    public static string get_NoDbContext();
    public static string get_NoMigrations();
    public static string get_NoPluralizeDescription();
    public static string get_NoTransactionsDescription();
    public static string get_NullableDescription();
    public static string Options(object options);
    public static string get_OutputDescription();
    public static string get_OutputDirDescription();
    public static string get_Pending();
    public static string get_PendingUnknown();
    public static string get_PrefixDescription();
    public static string get_ProjectDescription();
    public static string get_ProjectDirDescription();
    public static string get_ProviderDescription();
    public static string ProviderName(object provider);
    public static string RemainingArguments(object remainingArguments);
    public static string get_RootNamespaceDescription();
    public static string get_SchemasDescription();
    public static string get_SelfContainedDescription();
    public static string get_StartupAssemblyDescription();
    public static string get_StartupProjectDescription();
    public static string get_SuppressOnConfiguringDescription();
    public static string get_TablesDescription();
    public static string get_UseDatabaseNamesDescription();
    public static string UsingApplicationBase(object appBase);
    public static string UsingAssembly(object assembly);
    public static string UsingConfigurationFile(object config);
    public static string UsingDataDir(object dataDir);
    public static string UsingProjectDir(object projectDir);
    public static string UsingRootNamespace(object rootNamespace);
    public static string UsingStartupAssembly(object startupAssembly);
    public static string UsingWorkingDirectory(object workingDirectory);
    public static string get_VerboseDescription();
    public static string VersionRequired(object version);
    public static string get_WorkingDirDescription();
    public static string WritingFile(object file);
    private static string GetString(string name, String[] formatterNames);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.EntityFrameworkCore.Tools.ReflectionOperationExecutor : OperationExecutorBase {
    private object _executor;
    private Assembly _commandsAssembly;
    private static string ReportHandlerTypeName;
    private static string ResultHandlerTypeName;
    private Type _resultHandlerType;
    [NullableContextAttribute("2")]
public ReflectionOperationExecutor(string assembly, string startupAssembly, string projectDir, string dataDirectory, string rootNamespace, string language, bool nullable, String[] remainingArguments);
    protected virtual object CreateResultHandler();
    protected virtual void Execute(string operationName, object resultHandler, IDictionary arguments);
    private Assembly ResolveAssembly(object sender, ResolveEventArgs args);
    public virtual void Dispose();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal static class Microsoft.EntityFrameworkCore.Tools.Reporter : object {
    [CompilerGeneratedAttribute]
private static bool <IsVerbose>k__BackingField;
    [CompilerGeneratedAttribute]
private static bool <NoColor>k__BackingField;
    [CompilerGeneratedAttribute]
private static bool <PrefixOutput>k__BackingField;
    public static bool IsVerbose { get; public set; }
    public static bool NoColor { get; public set; }
    public static bool PrefixOutput { get; public set; }
    [CompilerGeneratedAttribute]
public static bool get_IsVerbose();
    [CompilerGeneratedAttribute]
public static void set_IsVerbose(bool value);
    [CompilerGeneratedAttribute]
public static bool get_NoColor();
    [CompilerGeneratedAttribute]
public static void set_NoColor(bool value);
    [CompilerGeneratedAttribute]
public static bool get_PrefixOutput();
    [CompilerGeneratedAttribute]
public static void set_PrefixOutput(bool value);
    public static string Colorize(string value, Func`2<string, string> colorizeFunc);
    public static void WriteError(string message);
    public static void WriteWarning(string message);
    public static void WriteInformation(string message);
    public static void WriteData(string message);
    public static void WriteVerbose(string message);
    private static string Prefix(string prefix, string value);
    private static void WriteLine(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.EntityFrameworkCore.Tools.WrappedException : Exception {
    private string _stackTrace;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    public string Type { get; }
    public WrappedException(string type, string message, string stackTrace);
    [CompilerGeneratedAttribute]
public string get_Type();
    public virtual string ToString();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class System.CodeDom.Compiler.CompilerError : object {
    [CompilerGeneratedAttribute]
private string <ErrorText>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsWarning>k__BackingField;
    public string ErrorText { get; public set; }
    public bool IsWarning { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ErrorText();
    [CompilerGeneratedAttribute]
public void set_ErrorText(string value);
    [CompilerGeneratedAttribute]
public bool get_IsWarning();
    [CompilerGeneratedAttribute]
public void set_IsWarning(bool value);
}
internal class System.CodeDom.Compiler.CompilerErrorCollection : object {
    public bool HasErrors { get; }
    public bool get_HasErrors();
    [NullableContextAttribute("1")]
public void Add(CompilerError error);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("10368")]
internal class System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ParameterName>k__BackingField;
    public string ParameterName { get; }
    public NotNullIfNotNullAttribute(string parameterName);
    [CompilerGeneratedAttribute]
public string get_ParameterName();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.NullablePublicOnlyAttribute : Attribute {
    public bool IncludesInternals;
    public NullablePublicOnlyAttribute(bool );
}
internal static class System.Runtime.Remoting.Messaging.CallContext : object {
    [NullableContextAttribute("1")]
public static object LogicalGetData(string _);
}
