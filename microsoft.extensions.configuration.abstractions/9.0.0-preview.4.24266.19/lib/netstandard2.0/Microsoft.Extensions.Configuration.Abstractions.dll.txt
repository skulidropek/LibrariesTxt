internal static class FxResources.Microsoft.Extensions.Configuration.Abstractions.SR : object {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsReadOnlyAttribute]
public class Microsoft.Extensions.Configuration.ConfigurationDebugViewContext : ValueType {
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private IConfigurationProvider <ConfigurationProvider>k__BackingField;
    public string Path { get; }
    public string Key { get; }
    [NullableAttribute("2")]
public string Value { get; }
    public IConfigurationProvider ConfigurationProvider { get; }
    public ConfigurationDebugViewContext(string path, string key, string value, IConfigurationProvider configurationProvider);
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public string get_Key();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public IConfigurationProvider get_ConfigurationProvider();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.Extensions.Configuration.ConfigurationExtensions : object {
    [ExtensionAttribute]
public static IConfigurationBuilder Add(IConfigurationBuilder builder, Action`1<TSource> configureSource);
    [ExtensionAttribute]
public static string GetConnectionString(IConfiguration configuration, string name);
    [ExtensionAttribute]
public static IEnumerable`1<KeyValuePair`2<string, string>> AsEnumerable(IConfiguration configuration);
    [IteratorStateMachineAttribute("Microsoft.Extensions.Configuration.ConfigurationExtensions/<AsEnumerable>d__3")]
[ExtensionAttribute]
public static IEnumerable`1<KeyValuePair`2<string, string>> AsEnumerable(IConfiguration configuration, bool makePathsRelative);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static bool Exists(IConfigurationSection section);
    [ExtensionAttribute]
public static IConfigurationSection GetRequiredSection(IConfiguration configuration, string key);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("128")]
public class Microsoft.Extensions.Configuration.ConfigurationKeyNameAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public string Name { get; }
    public ConfigurationKeyNameAttribute(string name);
    [CompilerGeneratedAttribute]
public string get_Name();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Microsoft.Extensions.Configuration.ConfigurationPath : object {
    public static string KeyDelimiter;
    private static ConfigurationPath();
    public static string Combine(String[] pathSegments);
    public static string Combine(IEnumerable`1<string> pathSegments);
    [NullableContextAttribute("2")]
public static string GetSectionKey(string path);
    [NullableContextAttribute("2")]
public static string GetParentPath(string path);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.Extensions.Configuration.ConfigurationRootExtensions : object {
    [ExtensionAttribute]
public static string GetDebugView(IConfigurationRoot root);
    [ExtensionAttribute]
public static string GetDebugView(IConfigurationRoot root, Func`2<ConfigurationDebugViewContext, string> processValue);
    private static ValueTuple`2<string, IConfigurationProvider> GetValueAndProvider(IConfigurationRoot root, string key);
    [CompilerGeneratedAttribute]
internal static void <GetDebugView>g__RecurseChildren|1_0(StringBuilder stringBuilder, IEnumerable`1<IConfigurationSection> children, string indent, <>c__DisplayClass1_0& );
}
[NullableContextAttribute("1")]
[DefaultMemberAttribute("Item")]
public interface Microsoft.Extensions.Configuration.IConfiguration {
    [NullableAttribute("2")]
public string Item { get; public set; }
    public abstract virtual string get_Item(string key);
    public abstract virtual void set_Item(string key, string value);
    public abstract virtual IConfigurationSection GetSection(string key);
    public abstract virtual IEnumerable`1<IConfigurationSection> GetChildren();
    public abstract virtual IChangeToken GetReloadToken();
}
[NullableContextAttribute("1")]
public interface Microsoft.Extensions.Configuration.IConfigurationBuilder {
    public IDictionary`2<string, object> Properties { get; }
    public IList`1<IConfigurationSource> Sources { get; }
    public abstract virtual IDictionary`2<string, object> get_Properties();
    public abstract virtual IList`1<IConfigurationSource> get_Sources();
    public abstract virtual IConfigurationBuilder Add(IConfigurationSource source);
    public abstract virtual IConfigurationRoot Build();
}
public interface Microsoft.Extensions.Configuration.IConfigurationManager {
}
[NullableContextAttribute("1")]
public interface Microsoft.Extensions.Configuration.IConfigurationProvider {
    public abstract virtual bool TryGet(string key, String& value);
    public abstract virtual void Set(string key, string value);
    public abstract virtual IChangeToken GetReloadToken();
    public abstract virtual void Load();
    public abstract virtual IEnumerable`1<string> GetChildKeys(IEnumerable`1<string> earlierKeys, string parentPath);
}
[NullableContextAttribute("1")]
public interface Microsoft.Extensions.Configuration.IConfigurationRoot {
    public IEnumerable`1<IConfigurationProvider> Providers { get; }
    public abstract virtual void Reload();
    public abstract virtual IEnumerable`1<IConfigurationProvider> get_Providers();
}
[NullableContextAttribute("1")]
public interface Microsoft.Extensions.Configuration.IConfigurationSection {
    public string Key { get; }
    public string Path { get; }
    [NullableAttribute("2")]
public string Value { get; public set; }
    public abstract virtual string get_Key();
    public abstract virtual string get_Path();
    [NullableContextAttribute("2")]
public abstract virtual string get_Value();
    [NullableContextAttribute("2")]
public abstract virtual void set_Value(string value);
}
[NullableContextAttribute("1")]
public interface Microsoft.Extensions.Configuration.IConfigurationSource {
    public abstract virtual IConfigurationProvider Build(IConfigurationBuilder builder);
}
[AttributeUsageAttribute("2432")]
internal class System.Diagnostics.CodeAnalysis.AllowNullAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
internal class System.Diagnostics.CodeAnalysis.DisallowNullAttribute : Attribute {
}
[AttributeUsageAttribute("64")]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ParameterValue>k__BackingField;
    public bool ParameterValue { get; }
    public DoesNotReturnIfAttribute(bool parameterValue);
    [CompilerGeneratedAttribute]
public bool get_ParameterValue();
}
[AttributeUsageAttribute("10624")]
internal class System.Diagnostics.CodeAnalysis.MaybeNullAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public MaybeNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[AttributeUsageAttribute("192")]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public String[] Members { get; }
    public MemberNotNullAttribute(string member);
    public MemberNotNullAttribute(String[] members);
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[AttributeUsageAttribute("192")]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public bool ReturnValue { get; }
    public String[] Members { get; }
    public MemberNotNullWhenAttribute(bool returnValue, string member);
    public MemberNotNullWhenAttribute(bool returnValue, String[] members);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[AttributeUsageAttribute("10624")]
internal class System.Diagnostics.CodeAnalysis.NotNullAttribute : Attribute {
}
[AttributeUsageAttribute("10368")]
internal class System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ParameterName>k__BackingField;
    public string ParameterName { get; }
    public NotNullIfNotNullAttribute(string parameterName);
    [CompilerGeneratedAttribute]
public string get_ParameterName();
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.NotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public NotNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[AttributeUsageAttribute("2048")]
internal class System.Runtime.CompilerServices.CallerArgumentExpressionAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ParameterName>k__BackingField;
    public string ParameterName { get; }
    public CallerArgumentExpressionAttribute(string parameterName);
    [CompilerGeneratedAttribute]
public string get_ParameterName();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class System.Runtime.CompilerServices.IsReadOnlyAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.NullablePublicOnlyAttribute : Attribute {
    public bool IncludesInternals;
    public NullablePublicOnlyAttribute(bool );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
[AttributeUsageAttribute("64")]
internal class System.Runtime.InteropServices.LibraryImportAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <LibraryName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EntryPoint>k__BackingField;
    [CompilerGeneratedAttribute]
private StringMarshalling <StringMarshalling>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <StringMarshallingCustomType>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SetLastError>k__BackingField;
    public string LibraryName { get; }
    public string EntryPoint { get; public set; }
    public StringMarshalling StringMarshalling { get; public set; }
    public Type StringMarshallingCustomType { get; public set; }
    public bool SetLastError { get; public set; }
    public LibraryImportAttribute(string libraryName);
    [CompilerGeneratedAttribute]
public string get_LibraryName();
    [CompilerGeneratedAttribute]
public string get_EntryPoint();
    [CompilerGeneratedAttribute]
public void set_EntryPoint(string value);
    [CompilerGeneratedAttribute]
public StringMarshalling get_StringMarshalling();
    [CompilerGeneratedAttribute]
public void set_StringMarshalling(StringMarshalling value);
    [CompilerGeneratedAttribute]
public Type get_StringMarshallingCustomType();
    [CompilerGeneratedAttribute]
public void set_StringMarshallingCustomType(Type value);
    [CompilerGeneratedAttribute]
public bool get_SetLastError();
    [CompilerGeneratedAttribute]
public void set_SetLastError(bool value);
}
internal enum System.Runtime.InteropServices.StringMarshalling : Enum {
    public int value__;
    public static StringMarshalling Custom;
    public static StringMarshalling Utf8;
    public static StringMarshalling Utf16;
}
internal static class System.SR : object {
    private static bool s_usingResourceKeys;
    private static ResourceManager s_resourceManager;
    internal static ResourceManager ResourceManager { get; }
    internal static string InvalidSectionName { get; }
    private static SR();
    internal static bool UsingResourceKeys();
    private static string GetResourceString(string resourceKey);
    private static string GetResourceString(string resourceKey, string defaultString);
    internal static string Format(string resourceFormat, object p1);
    internal static string Format(string resourceFormat, object p1, object p2);
    internal static string Format(string resourceFormat, object p1, object p2, object p3);
    internal static string Format(string resourceFormat, Object[] args);
    internal static string Format(IFormatProvider provider, string resourceFormat, object p1);
    internal static string Format(IFormatProvider provider, string resourceFormat, object p1, object p2);
    internal static string Format(IFormatProvider provider, string resourceFormat, object p1, object p2, object p3);
    internal static string Format(IFormatProvider provider, string resourceFormat, Object[] args);
    internal static ResourceManager get_ResourceManager();
    internal static string get_InvalidSectionName();
}
internal static class System.ThrowHelper : object {
    internal static void ThrowIfNull(object argument, string paramName);
    private static void Throw(string paramName);
    public static string IfNullOrWhitespace(string argument, string paramName);
}
