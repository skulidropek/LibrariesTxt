[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
public class Microsoft.Extensions.Configuration.AzureAppConfiguration.AzureAppConfigurationKeyVaultOptions : object {
    internal TokenCredential Credential;
    internal List`1<SecretClient> SecretClients;
    internal Func`2<Uri, ValueTask`1<string>> SecretResolver;
    internal Dictionary`2<string, TimeSpan> SecretRefreshIntervals;
    internal Nullable`1<TimeSpan> DefaultSecretRefreshInterval;
    internal bool IsKeyVaultRefreshConfigured;
    public AzureAppConfigurationKeyVaultOptions SetCredential(TokenCredential credential);
    public AzureAppConfigurationKeyVaultOptions Register(SecretClient secretClient);
    public AzureAppConfigurationKeyVaultOptions SetSecretResolver(Func`2<Uri, ValueTask`1<string>> secretResolver);
    public AzureAppConfigurationKeyVaultOptions SetSecretRefreshInterval(string secretReferenceKey, TimeSpan refreshInterval);
    public AzureAppConfigurationKeyVaultOptions SetSecretRefreshInterval(TimeSpan refreshInterval);
}
public class Microsoft.Extensions.Configuration.AzureAppConfiguration.AzureAppConfigurationOptions : object {
    private static int MaxRetries;
    private static TimeSpan MaxRetryDelay;
    private List`1<KeyValueWatcher> _changeWatchers;
    private List`1<KeyValueWatcher> _multiKeyWatchers;
    private List`1<IKeyValueAdapter> _adapters;
    private List`1<Func`2<ConfigurationSetting, ValueTask`1<ConfigurationSetting>>> _mappers;
    private List`1<KeyValueSelector> _kvSelectors;
    private IConfigurationRefresher _refresher;
    private SortedSet`1<string> _keyPrefixes;
    [CompilerGeneratedAttribute]
private bool <ReplicaDiscoveryEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <ConnectionStrings>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<Uri> <Endpoints>k__BackingField;
    [CompilerGeneratedAttribute]
private TokenCredential <Credential>k__BackingField;
    [CompilerGeneratedAttribute]
private IConfigurationClientManager <ClientManager>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <MinBackoffDuration>k__BackingField;
    [CompilerGeneratedAttribute]
private ConfigurationClientOptions <ClientOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsKeyVaultConfigured>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsKeyVaultRefreshConfigured>k__BackingField;
    [CompilerGeneratedAttribute]
private FeatureFilterTracing <FeatureFilterTracing>k__BackingField;
    [CompilerGeneratedAttribute]
private StartupOptions <Startup>k__BackingField;
    public bool ReplicaDiscoveryEnabled { get; public set; }
    internal IEnumerable`1<string> ConnectionStrings { get; private set; }
    internal IEnumerable`1<Uri> Endpoints { get; private set; }
    internal TokenCredential Credential { get; private set; }
    internal IEnumerable`1<KeyValueSelector> KeyValueSelectors { get; }
    internal IEnumerable`1<KeyValueWatcher> ChangeWatchers { get; }
    internal IEnumerable`1<KeyValueWatcher> MultiKeyWatchers { get; }
    internal IEnumerable`1<IKeyValueAdapter> Adapters { get; internal set; }
    internal IEnumerable`1<Func`2<ConfigurationSetting, ValueTask`1<ConfigurationSetting>>> Mappers { get; }
    internal IEnumerable`1<string> KeyPrefixes { get; }
    internal IConfigurationClientManager ClientManager { get; internal set; }
    internal TimeSpan MinBackoffDuration { get; internal set; }
    internal ConfigurationClientOptions ClientOptions { get; }
    internal bool IsKeyVaultConfigured { get; private set; }
    internal bool IsKeyVaultRefreshConfigured { get; private set; }
    internal FeatureFilterTracing FeatureFilterTracing { get; internal set; }
    internal StartupOptions Startup { get; internal set; }
    private static AzureAppConfigurationOptions();
    [CompilerGeneratedAttribute]
public bool get_ReplicaDiscoveryEnabled();
    [CompilerGeneratedAttribute]
public void set_ReplicaDiscoveryEnabled(bool value);
    [CompilerGeneratedAttribute]
internal IEnumerable`1<string> get_ConnectionStrings();
    [CompilerGeneratedAttribute]
private void set_ConnectionStrings(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
internal IEnumerable`1<Uri> get_Endpoints();
    [CompilerGeneratedAttribute]
private void set_Endpoints(IEnumerable`1<Uri> value);
    [CompilerGeneratedAttribute]
internal TokenCredential get_Credential();
    [CompilerGeneratedAttribute]
private void set_Credential(TokenCredential value);
    internal IEnumerable`1<KeyValueSelector> get_KeyValueSelectors();
    internal IEnumerable`1<KeyValueWatcher> get_ChangeWatchers();
    internal IEnumerable`1<KeyValueWatcher> get_MultiKeyWatchers();
    internal IEnumerable`1<IKeyValueAdapter> get_Adapters();
    internal void set_Adapters(IEnumerable`1<IKeyValueAdapter> value);
    internal IEnumerable`1<Func`2<ConfigurationSetting, ValueTask`1<ConfigurationSetting>>> get_Mappers();
    internal IEnumerable`1<string> get_KeyPrefixes();
    [CompilerGeneratedAttribute]
internal IConfigurationClientManager get_ClientManager();
    [CompilerGeneratedAttribute]
internal void set_ClientManager(IConfigurationClientManager value);
    [CompilerGeneratedAttribute]
internal TimeSpan get_MinBackoffDuration();
    [CompilerGeneratedAttribute]
internal void set_MinBackoffDuration(TimeSpan value);
    [CompilerGeneratedAttribute]
internal ConfigurationClientOptions get_ClientOptions();
    [CompilerGeneratedAttribute]
internal bool get_IsKeyVaultConfigured();
    [CompilerGeneratedAttribute]
private void set_IsKeyVaultConfigured(bool value);
    [CompilerGeneratedAttribute]
internal bool get_IsKeyVaultRefreshConfigured();
    [CompilerGeneratedAttribute]
private void set_IsKeyVaultRefreshConfigured(bool value);
    [CompilerGeneratedAttribute]
internal FeatureFilterTracing get_FeatureFilterTracing();
    [CompilerGeneratedAttribute]
internal void set_FeatureFilterTracing(FeatureFilterTracing value);
    [CompilerGeneratedAttribute]
internal StartupOptions get_Startup();
    [CompilerGeneratedAttribute]
internal void set_Startup(StartupOptions value);
    public AzureAppConfigurationOptions Select(string keyFilter, string labelFilter);
    public AzureAppConfigurationOptions SelectSnapshot(string name);
    public AzureAppConfigurationOptions UseFeatureFlags(Action`1<FeatureFlagOptions> configure);
    public AzureAppConfigurationOptions Connect(string connectionString);
    public AzureAppConfigurationOptions Connect(IEnumerable`1<string> connectionStrings);
    public AzureAppConfigurationOptions Connect(Uri endpoint, TokenCredential credential);
    public AzureAppConfigurationOptions Connect(IEnumerable`1<Uri> endpoints, TokenCredential credential);
    public AzureAppConfigurationOptions TrimKeyPrefix(string prefix);
    public AzureAppConfigurationOptions ConfigureClientOptions(Action`1<ConfigurationClientOptions> configure);
    public AzureAppConfigurationOptions ConfigureRefresh(Action`1<AzureAppConfigurationRefreshOptions> configure);
    public IConfigurationRefresher GetRefresher();
    public AzureAppConfigurationOptions ConfigureKeyVault(Action`1<AzureAppConfigurationKeyVaultOptions> configure);
    public AzureAppConfigurationOptions Map(Func`2<ConfigurationSetting, ValueTask`1<ConfigurationSetting>> mapper);
    public AzureAppConfigurationOptions ConfigureStartupOptions(Action`1<StartupOptions> configure);
    private static ConfigurationClientOptions GetDefaultClientOptions();
}
internal class Microsoft.Extensions.Configuration.AzureAppConfiguration.AzureAppConfigurationProvider : ConfigurationProvider {
    private bool _optional;
    private bool _isInitialLoadComplete;
    private bool _isFeatureManagementVersionInspected;
    private bool _requestTracingEnabled;
    private IConfigurationClientManager _configClientManager;
    private AzureAppConfigurationOptions _options;
    private Dictionary`2<string, ConfigurationSetting> _mappedData;
    private Dictionary`2<KeyValueIdentifier, ConfigurationSetting> _watchedSettings;
    private RequestTracingOptions _requestTracingOptions;
    private Dictionary`2<Uri, ConfigurationClientBackoffStatus> _configClientBackoffs;
    private TimeSpan MinCacheExpirationInterval;
    private DateTimeOffset InitializationCacheExpires;
    private static TimeSpan MinDelayForUnhandledFailure;
    private static TimeSpan DefaultMaxSetDirtyDelay;
    private int _networkOperationsInProgress;
    private Logger _logger;
    private ILoggerFactory _loggerFactory;
    public Uri AppConfigurationEndpoint { get; }
    public ILoggerFactory LoggerFactory { get; public set; }
    public AzureAppConfigurationProvider(IConfigurationClientManager configClientManager, AzureAppConfigurationOptions options, bool optional);
    private static AzureAppConfigurationProvider();
    public sealed virtual Uri get_AppConfigurationEndpoint();
    public ILoggerFactory get_LoggerFactory();
    public void set_LoggerFactory(ILoggerFactory value);
    public virtual void Load();
    [AsyncStateMachineAttribute("Microsoft.Extensions.Configuration.AzureAppConfiguration.AzureAppConfigurationProvider/<RefreshAsync>d__25")]
public sealed virtual Task RefreshAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Extensions.Configuration.AzureAppConfiguration.AzureAppConfigurationProvider/<TryRefreshAsync>d__26")]
public sealed virtual Task`1<bool> TryRefreshAsync(CancellationToken cancellationToken);
    public sealed virtual void ProcessPushNotification(PushNotification pushNotification, Nullable`1<TimeSpan> maxDelay);
    private void SetDirty(Nullable`1<TimeSpan> maxDelay);
    [AsyncStateMachineAttribute("Microsoft.Extensions.Configuration.AzureAppConfiguration.AzureAppConfigurationProvider/<PrepareData>d__29")]
private Task`1<Dictionary`2<string, string>> PrepareData(Dictionary`2<string, ConfigurationSetting> data, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Extensions.Configuration.AzureAppConfiguration.AzureAppConfigurationProvider/<LoadAsync>d__30")]
private Task LoadAsync(bool ignoreFailures, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Extensions.Configuration.AzureAppConfiguration.AzureAppConfigurationProvider/<TryInitializeAsync>d__31")]
private Task`1<bool> TryInitializeAsync(IEnumerable`1<ConfigurationClient> clients, List`1<Exception> startupExceptions, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Extensions.Configuration.AzureAppConfiguration.AzureAppConfigurationProvider/<InitializeAsync>d__32")]
private Task InitializeAsync(IEnumerable`1<ConfigurationClient> clients, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Extensions.Configuration.AzureAppConfiguration.AzureAppConfigurationProvider/<LoadSelectedKeyValues>d__33")]
private Task`1<Dictionary`2<string, ConfigurationSetting>> LoadSelectedKeyValues(ConfigurationClient client, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Extensions.Configuration.AzureAppConfiguration.AzureAppConfigurationProvider/<LoadKeyValuesRegisteredForRefresh>d__34")]
private Task`1<Dictionary`2<KeyValueIdentifier, ConfigurationSetting>> LoadKeyValuesRegisteredForRefresh(ConfigurationClient client, IDictionary`2<string, ConfigurationSetting> existingSettings, CancellationToken cancellationToken);
    private Dictionary`2<KeyValueIdentifier, ConfigurationSetting> UpdateWatchedKeyValueCollections(Dictionary`2<KeyValueIdentifier, ConfigurationSetting> watchedSettings, IDictionary`2<string, ConfigurationSetting> existingSettings);
    [AsyncStateMachineAttribute("Microsoft.Extensions.Configuration.AzureAppConfiguration.AzureAppConfigurationProvider/<GetRefreshedKeyValueCollections>d__36")]
private Task`1<List`1<KeyValueChange>> GetRefreshedKeyValueCollections(IEnumerable`1<KeyValueWatcher> multiKeyWatchers, ConfigurationClient client, StringBuilder logDebugBuilder, StringBuilder logInfoBuilder, Uri endpoint, CancellationToken cancellationToken);
    private void SetData(IDictionary`2<string, string> data);
    [AsyncStateMachineAttribute("Microsoft.Extensions.Configuration.AzureAppConfiguration.AzureAppConfigurationProvider/<ProcessAdapters>d__38")]
private Task`1<IEnumerable`1<KeyValuePair`2<string, string>>> ProcessAdapters(ConfigurationSetting setting, CancellationToken cancellationToken);
    private Task CallWithRequestTracing(Func`1<Task> clientCall);
    private void SetRequestTracingOptions();
    private DateTimeOffset AddRandomDelay(DateTimeOffset dt, TimeSpan maxDelay);
    private bool IsAuthenticationError(Exception ex);
    private void UpdateCacheExpirationTime(KeyValueWatcher changeWatcher);
    [AsyncStateMachineAttribute("Microsoft.Extensions.Configuration.AzureAppConfiguration.AzureAppConfigurationProvider/<ExecuteWithFailOverPolicyAsync>d__44`1")]
private Task`1<T> ExecuteWithFailOverPolicyAsync(IEnumerable`1<ConfigurationClient> clients, Func`2<ConfigurationClient, Task`1<T>> funcToExecute, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Extensions.Configuration.AzureAppConfiguration.AzureAppConfigurationProvider/<ExecuteWithFailOverPolicyAsync>d__45")]
private Task ExecuteWithFailOverPolicyAsync(IEnumerable`1<ConfigurationClient> clients, Func`2<ConfigurationClient, Task> funcToExecute, CancellationToken cancellationToken);
    private bool IsFailOverable(AggregateException ex);
    private bool IsFailOverable(RequestFailedException rfe);
    private bool IsFailOverable(KeyVaultReferenceException kvre);
    [AsyncStateMachineAttribute("Microsoft.Extensions.Configuration.AzureAppConfiguration.AzureAppConfigurationProvider/<MapConfigurationSettings>d__49")]
private Task`1<Dictionary`2<string, ConfigurationSetting>> MapConfigurationSettings(Dictionary`2<string, ConfigurationSetting> data);
    private IEnumerable`1<ConfigurationSetting> GetCurrentKeyValueCollection(string key, string label, IEnumerable`1<ConfigurationSetting> existingSettings);
    private void EnsureFeatureManagementVersionInspected();
    private void UpdateClientBackoffStatus(Uri endpoint, bool successful);
    public sealed virtual void Dispose();
    [CompilerGeneratedAttribute]
private bool <IsAuthenticationError>b__42_0(Exception inner);
}
[EventSourceAttribute]
internal class Microsoft.Extensions.Configuration.AzureAppConfiguration.AzureAppConfigurationProviderRefreshEventSource : EventSource {
    private static string EventSourceName;
    private static int LogDebugEvent;
    private static int LogInformationEvent;
    private static int LogWarningEvent;
    [CompilerGeneratedAttribute]
private static AzureAppConfigurationProviderRefreshEventSource <Log>k__BackingField;
    public static AzureAppConfigurationProviderRefreshEventSource Log { get; }
    private static AzureAppConfigurationProviderRefreshEventSource();
    [CompilerGeneratedAttribute]
public static AzureAppConfigurationProviderRefreshEventSource get_Log();
    [EventAttribute("1")]
public void LogDebug(string message);
    [EventAttribute("2")]
public void LogInformation(string message);
    [EventAttribute("3")]
public void LogWarning(string message);
}
internal class Microsoft.Extensions.Configuration.AzureAppConfiguration.AzureAppConfigurationRefresher : object {
    private AzureAppConfigurationProvider _provider;
    [CompilerGeneratedAttribute]
private Uri <AppConfigurationEndpoint>k__BackingField;
    public Uri AppConfigurationEndpoint { get; private set; }
    [CompilerGeneratedAttribute]
public sealed virtual Uri get_AppConfigurationEndpoint();
    [CompilerGeneratedAttribute]
private void set_AppConfigurationEndpoint(Uri value);
    public void SetProvider(AzureAppConfigurationProvider provider);
    [AsyncStateMachineAttribute("Microsoft.Extensions.Configuration.AzureAppConfiguration.AzureAppConfigurationRefresher/<RefreshAsync>d__6")]
public sealed virtual Task RefreshAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Extensions.Configuration.AzureAppConfiguration.AzureAppConfigurationRefresher/<TryRefreshAsync>d__7")]
public sealed virtual Task`1<bool> TryRefreshAsync(CancellationToken cancellationToken);
    public sealed virtual void ProcessPushNotification(PushNotification pushNotification, Nullable`1<TimeSpan> maxDelay);
    private void ThrowIfNullProvider(string operation);
}
internal class Microsoft.Extensions.Configuration.AzureAppConfiguration.AzureAppConfigurationRefresherProvider : object {
    private static PropertyInfo _propertyInfo;
    [CompilerGeneratedAttribute]
private IEnumerable`1<IConfigurationRefresher> <Refreshers>k__BackingField;
    public IEnumerable`1<IConfigurationRefresher> Refreshers { get; }
    public AzureAppConfigurationRefresherProvider(IConfiguration configuration, ILoggerFactory _loggerFactory);
    private static AzureAppConfigurationRefresherProvider();
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<IConfigurationRefresher> get_Refreshers();
    private void FindRefreshers(IConfigurationRoot configurationRoot, ILoggerFactory loggerFactory, List`1<IConfigurationRefresher> refreshers);
}
public class Microsoft.Extensions.Configuration.AzureAppConfiguration.AzureAppConfigurationRefreshOptions : object {
    [CompilerGeneratedAttribute]
private TimeSpan <CacheExpirationInterval>k__BackingField;
    internal ISet`1<KeyValueWatcher> RefreshRegistrations;
    internal TimeSpan CacheExpirationInterval { get; private set; }
    [CompilerGeneratedAttribute]
internal TimeSpan get_CacheExpirationInterval();
    [CompilerGeneratedAttribute]
private void set_CacheExpirationInterval(TimeSpan value);
    public AzureAppConfigurationRefreshOptions Register(string key, bool refreshAll);
    public AzureAppConfigurationRefreshOptions Register(string key, string label, bool refreshAll);
    public AzureAppConfigurationRefreshOptions SetCacheExpiration(TimeSpan cacheExpiration);
}
internal class Microsoft.Extensions.Configuration.AzureAppConfiguration.AzureAppConfigurationSource : object {
    private bool _optional;
    private Func`1<AzureAppConfigurationOptions> _optionsProvider;
    public AzureAppConfigurationSource(Action`1<AzureAppConfigurationOptions> optionsInitializer, bool optional);
    public sealed virtual IConfigurationProvider Build(IConfigurationBuilder builder);
}
internal class Microsoft.Extensions.Configuration.AzureAppConfiguration.AzureKeyVault.AzureKeyVaultKeyValueAdapter : object {
    private static string AzureIdentityAssemblyName;
    private AzureKeyVaultSecretProvider _secretProvider;
    public AzureKeyVaultKeyValueAdapter(AzureKeyVaultSecretProvider secretProvider);
    [AsyncStateMachineAttribute("Microsoft.Extensions.Configuration.AzureAppConfiguration.AzureKeyVault.AzureKeyVaultKeyValueAdapter/<ProcessKeyValue>d__3")]
public sealed virtual Task`1<IEnumerable`1<KeyValuePair`2<string, string>>> ProcessKeyValue(ConfigurationSetting setting, Uri endpoint, Logger logger, CancellationToken cancellationToken);
    private KeyVaultReferenceException CreateKeyVaultReferenceException(string message, ConfigurationSetting setting, Exception inner, KeyVaultSecretReference secretRef);
    public sealed virtual bool CanProcess(ConfigurationSetting setting);
    public sealed virtual void InvalidateCache(ConfigurationSetting setting);
    public sealed virtual bool NeedsRefresh();
}
internal class Microsoft.Extensions.Configuration.AzureAppConfiguration.AzureKeyVault.AzureKeyVaultSecretProvider : object {
    private AzureAppConfigurationKeyVaultOptions _keyVaultOptions;
    private IDictionary`2<string, SecretClient> _secretClients;
    private Dictionary`2<string, CachedKeyVaultSecret> _cachedKeyVaultSecrets;
    private string _nextRefreshKey;
    private Nullable`1<DateTimeOffset> _nextRefreshTime;
    public AzureKeyVaultSecretProvider(AzureAppConfigurationKeyVaultOptions keyVaultOptions);
    [AsyncStateMachineAttribute("Microsoft.Extensions.Configuration.AzureAppConfiguration.AzureKeyVault.AzureKeyVaultSecretProvider/<GetSecretValue>d__6")]
public Task`1<string> GetSecretValue(KeyVaultSecretIdentifier secretIdentifier, string key, string label, Logger logger, CancellationToken cancellationToken);
    public bool ShouldRefreshKeyVaultSecrets();
    public void ClearCache();
    public void RemoveSecretFromCache(string key);
    private SecretClient GetSecretClient(Uri secretUri);
    private void SetSecretInCache(string key, CachedKeyVaultSecret cachedSecret, bool success);
    private void UpdateNextRefreshableSecretFromCache();
    private void UpdateCacheExpirationTimeForSecret(string key, CachedKeyVaultSecret cachedSecret, bool success);
}
internal class Microsoft.Extensions.Configuration.AzureAppConfiguration.AzureKeyVault.CachedKeyVaultSecret : object {
    [CompilerGeneratedAttribute]
private string <SecretValue>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <RefreshAt>k__BackingField;
    [CompilerGeneratedAttribute]
private int <RefreshAttempts>k__BackingField;
    public string SecretValue { get; public set; }
    public Nullable`1<DateTimeOffset> RefreshAt { get; public set; }
    public int RefreshAttempts { get; public set; }
    public CachedKeyVaultSecret(string secretValue, Nullable`1<DateTimeOffset> refreshAt, int refreshAttempts);
    [CompilerGeneratedAttribute]
public string get_SecretValue();
    [CompilerGeneratedAttribute]
public void set_SecretValue(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_RefreshAt();
    [CompilerGeneratedAttribute]
public void set_RefreshAt(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public int get_RefreshAttempts();
    [CompilerGeneratedAttribute]
public void set_RefreshAttempts(int value);
}
internal class Microsoft.Extensions.Configuration.AzureAppConfiguration.AzureKeyVault.KeyVaultConstants : object {
    public static string ContentType;
}
internal class Microsoft.Extensions.Configuration.AzureAppConfiguration.AzureKeyVault.KeyVaultSecretReference : object {
    [CompilerGeneratedAttribute]
private string <Uri>k__BackingField;
    [JsonPropertyNameAttribute("uri")]
public string Uri { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Uri();
    [CompilerGeneratedAttribute]
public void set_Uri(string value);
}
internal class Microsoft.Extensions.Configuration.AzureAppConfiguration.ConfigurationClientManager : object {
    private IList`1<ConfigurationClientWrapper> _clients;
    private Uri _endpoint;
    private string _secret;
    private string _id;
    private TokenCredential _credential;
    private ConfigurationClientOptions _clientOptions;
    private bool _replicaDiscoveryEnabled;
    private SrvLookupClient _srvLookupClient;
    private string _validDomain;
    private IList`1<ConfigurationClientWrapper> _dynamicClients;
    private DateTimeOffset _lastFallbackClientRefresh;
    private DateTimeOffset _lastFallbackClientRefreshAttempt;
    private Logger _logger;
    private bool _isDisposed;
    private static TimeSpan FallbackClientRefreshExpireInterval;
    private static TimeSpan MinimalClientRefreshInterval;
    private static String[] TrustedDomainLabels;
    private CancellationTokenSource _cancellationTokenSource;
    [CompilerGeneratedAttribute]
private int <RefreshClientsCalled>k__BackingField;
    internal int RefreshClientsCalled { get; internal set; }
    public ConfigurationClientManager(IEnumerable`1<string> connectionStrings, ConfigurationClientOptions clientOptions, bool replicaDiscoveryEnabled);
    public ConfigurationClientManager(IEnumerable`1<Uri> endpoints, TokenCredential credential, ConfigurationClientOptions clientOptions, bool replicaDiscoveryEnabled);
    internal ConfigurationClientManager(IList`1<ConfigurationClientWrapper> clients);
    private static ConfigurationClientManager();
    [CompilerGeneratedAttribute]
internal int get_RefreshClientsCalled();
    [CompilerGeneratedAttribute]
internal void set_RefreshClientsCalled(int value);
    public sealed virtual IEnumerable`1<ConfigurationClient> GetClients();
    public sealed virtual void RefreshClients();
    public sealed virtual bool UpdateSyncToken(Uri endpoint, string syncToken);
    public sealed virtual Uri GetEndpointForClient(ConfigurationClient client);
    public void SetLogger(Logger logger);
    [AsyncStateMachineAttribute("Microsoft.Extensions.Configuration.AzureAppConfiguration.ConfigurationClientManager/<DiscoverFallbackClients>d__30")]
private Task DiscoverFallbackClients();
    [AsyncStateMachineAttribute("Microsoft.Extensions.Configuration.AzureAppConfiguration.ConfigurationClientManager/<RefreshFallbackClients>d__31")]
private Task RefreshFallbackClients(CancellationToken cancellationToken);
    private string GetValidDomain(Uri endpoint);
    internal bool IsValidEndpoint(string hostName);
    public sealed virtual void Dispose();
    [CompilerGeneratedAttribute]
private ConfigurationClientWrapper <.ctor>b__22_0(string cs);
    [CompilerGeneratedAttribute]
private ConfigurationClientWrapper <.ctor>b__23_0(Uri endpoint);
}
internal class Microsoft.Extensions.Configuration.AzureAppConfiguration.ConfigurationClientWrapper : object {
    [CompilerGeneratedAttribute]
private ConfigurationClient <Client>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <Endpoint>k__BackingField;
    public ConfigurationClient Client { get; private set; }
    public Uri Endpoint { get; private set; }
    public ConfigurationClientWrapper(Uri endpoint, ConfigurationClient configurationClient);
    [CompilerGeneratedAttribute]
public ConfigurationClient get_Client();
    [CompilerGeneratedAttribute]
private void set_Client(ConfigurationClient value);
    [CompilerGeneratedAttribute]
public Uri get_Endpoint();
    [CompilerGeneratedAttribute]
private void set_Endpoint(Uri value);
}
internal static class Microsoft.Extensions.Configuration.AzureAppConfiguration.ConnectionStringUtils : object {
    public static string EndpointSection;
    public static string SecretSection;
    public static string IdSection;
    public static string Parse(string connectionString, string token);
    public static string Build(Uri endpoint, string id, string secret);
}
internal static class Microsoft.Extensions.Configuration.AzureAppConfiguration.CryptoService : object {
    private static Byte[] Worker(WorkerType workerType, Byte[] data, Byte[] key, Byte[] iv);
    public static Byte[] AESEncrypt(Byte[] data, Byte[] key, Byte[] iv);
    public static string AESDecrypt(string text, Byte[] key, Byte[] iv);
    public static string GetHash(Byte[] data, Byte[] key);
}
internal class Microsoft.Extensions.Configuration.AzureAppConfiguration.EmptyConfigurationProvider : ConfigurationProvider {
}
internal class Microsoft.Extensions.Configuration.AzureAppConfiguration.EmptyConfigurationRefresherProvider : object {
    public IEnumerable`1<IConfigurationRefresher> Refreshers { get; }
    public sealed virtual IEnumerable`1<IConfigurationRefresher> get_Refreshers();
}
internal class Microsoft.Extensions.Configuration.AzureAppConfiguration.EndpointComparer : object {
    public sealed virtual bool Equals(Uri endpoint1, Uri endpoint2);
    public sealed virtual int GetHashCode(Uri obj);
}
internal class Microsoft.Extensions.Configuration.AzureAppConfiguration.ErrorMessages : object {
    public static string CacheExpirationTimeTooShort;
    public static string SecretRefreshIntervalTooShort;
}
[ExtensionAttribute]
internal static class Microsoft.Extensions.Configuration.AzureAppConfiguration.Extensions.BytesExtensions : object {
    [ExtensionAttribute]
public static string ToBase64Url(Byte[] bytes);
}
[ExtensionAttribute]
internal static class Microsoft.Extensions.Configuration.AzureAppConfiguration.Extensions.ConfigurationClientExtensions : object {
    [AsyncStateMachineAttribute("Microsoft.Extensions.Configuration.AzureAppConfiguration.Extensions.ConfigurationClientExtensions/<GetKeyValueChange>d__0")]
[ExtensionAttribute]
public static Task`1<KeyValueChange> GetKeyValueChange(ConfigurationClient client, ConfigurationSetting setting, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Extensions.Configuration.AzureAppConfiguration.Extensions.ConfigurationClientExtensions/<GetKeyValueChangeCollection>d__1")]
[ExtensionAttribute]
public static Task`1<IEnumerable`1<KeyValueChange>> GetKeyValueChangeCollection(ConfigurationClient client, IEnumerable`1<ConfigurationSetting> keyValues, GetKeyValueChangeCollectionOptions options, StringBuilder logDebugBuilder, StringBuilder logInfoBuilder, Uri endpoint, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class Microsoft.Extensions.Configuration.AzureAppConfiguration.Extensions.EventGridEventExtensions : object {
    private static string SyncTokenPropertyName;
    [ExtensionAttribute]
public static bool TryCreatePushNotification(EventGridEvent eventGridEvent, PushNotification& pushNotification);
}
internal static class Microsoft.Extensions.Configuration.AzureAppConfiguration.Extensions.LabelFilters : object {
    public static string Null;
    public static string Any;
    private static LabelFilters();
}
[ExtensionAttribute]
internal static class Microsoft.Extensions.Configuration.AzureAppConfiguration.Extensions.ListExtensions : object {
    [ExtensionAttribute]
public static List`1<T> Shuffle(List`1<T> values);
    [ExtensionAttribute]
public static List`1<SrvRecord> SortSrvRecords(List`1<SrvRecord> srvRecords);
    [ExtensionAttribute]
public static void AppendUnique(List`1<T> items, T item);
}
[ExtensionAttribute]
internal static class Microsoft.Extensions.Configuration.AzureAppConfiguration.Extensions.StringExtensions : object {
    [ExtensionAttribute]
public static string NormalizeNull(string s);
}
[ExtensionAttribute]
internal static class Microsoft.Extensions.Configuration.AzureAppConfiguration.Extensions.TimeSpanExtensions : object {
    private static int SafeShiftLimit;
    private static double JitterRatio;
    private static IList`1<KeyValuePair`2<TimeSpan, TimeSpan>> StartupMaxBackoffDurationIntervals;
    private static TimeSpanExtensions();
    [ExtensionAttribute]
public static TimeSpan CalculateBackoffTime(TimeSpan interval, TimeSpan min, TimeSpan max, int attempts);
    [ExtensionAttribute]
public static TimeSpan CalculateBackoffDuration(TimeSpan minDuration, TimeSpan maxDuration, int attempts);
    [ExtensionAttribute]
public static bool TryGetFixedBackoff(TimeSpan startupTimeElapsed, TimeSpan& backoff);
    [ExtensionAttribute]
private static TimeSpan Jitter(TimeSpan timeSpan, double ratio);
}
[ExtensionAttribute]
internal static class Microsoft.Extensions.Configuration.AzureAppConfiguration.Extensions.Utf8JsonReaderExtensions : object {
    [ExtensionAttribute]
public static string ReadAsString(Utf8JsonReader reader);
}
internal class Microsoft.Extensions.Configuration.AzureAppConfiguration.FailOverConstants : object {
    public static TimeSpan MinBackoffDuration;
    public static TimeSpan MaxBackoffDuration;
    public static TimeSpan MinStartupBackoffDuration;
    public static TimeSpan UdpSrvQueryTimeout;
    private static FailOverConstants();
}
internal class Microsoft.Extensions.Configuration.AzureAppConfiguration.FeatureManagement.ClientFilter : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private JsonElement <Parameters>k__BackingField;
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("parameters")]
public JsonElement Parameters { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public JsonElement get_Parameters();
    [CompilerGeneratedAttribute]
public void set_Parameters(JsonElement value);
}
internal class Microsoft.Extensions.Configuration.AzureAppConfiguration.FeatureManagement.FeatureAllocation : object {
    [CompilerGeneratedAttribute]
private string <DefaultWhenDisabled>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DefaultWhenEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<FeatureUserAllocation> <User>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<FeatureGroupAllocation> <Group>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<FeaturePercentileAllocation> <Percentile>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Seed>k__BackingField;
    [JsonPropertyNameAttribute("default_when_disabled")]
public string DefaultWhenDisabled { get; public set; }
    [JsonPropertyNameAttribute("default_when_enabled")]
public string DefaultWhenEnabled { get; public set; }
    [JsonPropertyNameAttribute("user")]
public IEnumerable`1<FeatureUserAllocation> User { get; public set; }
    [JsonPropertyNameAttribute("group")]
public IEnumerable`1<FeatureGroupAllocation> Group { get; public set; }
    [JsonPropertyNameAttribute("percentile")]
public IEnumerable`1<FeaturePercentileAllocation> Percentile { get; public set; }
    [JsonPropertyNameAttribute("seed")]
public string Seed { get; public set; }
    [CompilerGeneratedAttribute]
public string get_DefaultWhenDisabled();
    [CompilerGeneratedAttribute]
public void set_DefaultWhenDisabled(string value);
    [CompilerGeneratedAttribute]
public string get_DefaultWhenEnabled();
    [CompilerGeneratedAttribute]
public void set_DefaultWhenEnabled(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<FeatureUserAllocation> get_User();
    [CompilerGeneratedAttribute]
public void set_User(IEnumerable`1<FeatureUserAllocation> value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<FeatureGroupAllocation> get_Group();
    [CompilerGeneratedAttribute]
public void set_Group(IEnumerable`1<FeatureGroupAllocation> value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<FeaturePercentileAllocation> get_Percentile();
    [CompilerGeneratedAttribute]
public void set_Percentile(IEnumerable`1<FeaturePercentileAllocation> value);
    [CompilerGeneratedAttribute]
public string get_Seed();
    [CompilerGeneratedAttribute]
public void set_Seed(string value);
}
internal class Microsoft.Extensions.Configuration.AzureAppConfiguration.FeatureManagement.FeatureConditions : object {
    [CompilerGeneratedAttribute]
private List`1<ClientFilter> <ClientFilters>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RequirementType>k__BackingField;
    [JsonPropertyNameAttribute("client_filters")]
public List`1<ClientFilter> ClientFilters { get; public set; }
    [JsonPropertyNameAttribute("requirement_type")]
public string RequirementType { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<ClientFilter> get_ClientFilters();
    [CompilerGeneratedAttribute]
public void set_ClientFilters(List`1<ClientFilter> value);
    [CompilerGeneratedAttribute]
public string get_RequirementType();
    [CompilerGeneratedAttribute]
public void set_RequirementType(string value);
}
internal class Microsoft.Extensions.Configuration.AzureAppConfiguration.FeatureManagement.FeatureFilterTracing : object {
    private static string CustomFilter;
    private static string PercentageFilter;
    private static string TimeWindowFilter;
    private static string TargetingFilter;
    private static string FilterTypeDelimiter;
    private List`1<string> PercentageFilterNames;
    private List`1<string> TimeWindowFilterNames;
    private List`1<string> TargetingFilterNames;
    [CompilerGeneratedAttribute]
private bool <UsesCustomFilter>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UsesPercentageFilter>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UsesTimeWindowFilter>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UsesTargetingFilter>k__BackingField;
    public bool UsesCustomFilter { get; public set; }
    public bool UsesPercentageFilter { get; public set; }
    public bool UsesTimeWindowFilter { get; public set; }
    public bool UsesTargetingFilter { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_UsesCustomFilter();
    [CompilerGeneratedAttribute]
public void set_UsesCustomFilter(bool value);
    [CompilerGeneratedAttribute]
public bool get_UsesPercentageFilter();
    [CompilerGeneratedAttribute]
public void set_UsesPercentageFilter(bool value);
    [CompilerGeneratedAttribute]
public bool get_UsesTimeWindowFilter();
    [CompilerGeneratedAttribute]
public void set_UsesTimeWindowFilter(bool value);
    [CompilerGeneratedAttribute]
public bool get_UsesTargetingFilter();
    [CompilerGeneratedAttribute]
public void set_UsesTargetingFilter(bool value);
    public bool UsesAnyFeatureFilter();
    public void ResetFeatureFilterTracing();
    public void UpdateFeatureFilterTracing(string filterName);
    public virtual string ToString();
}
internal class Microsoft.Extensions.Configuration.AzureAppConfiguration.FeatureManagement.FeatureFlag : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Enabled>k__BackingField;
    [CompilerGeneratedAttribute]
private FeatureConditions <Conditions>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<FeatureVariant> <Variants>k__BackingField;
    [CompilerGeneratedAttribute]
private FeatureAllocation <Allocation>k__BackingField;
    [CompilerGeneratedAttribute]
private FeatureTelemetry <Telemetry>k__BackingField;
    [JsonPropertyNameAttribute("id")]
public string Id { get; public set; }
    [JsonPropertyNameAttribute("enabled")]
public bool Enabled { get; public set; }
    [JsonPropertyNameAttribute("conditions")]
public FeatureConditions Conditions { get; public set; }
    [JsonPropertyNameAttribute("variants")]
public IEnumerable`1<FeatureVariant> Variants { get; public set; }
    [JsonPropertyNameAttribute("allocation")]
public FeatureAllocation Allocation { get; public set; }
    [JsonPropertyNameAttribute("telemetry")]
public FeatureTelemetry Telemetry { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public bool get_Enabled();
    [CompilerGeneratedAttribute]
public void set_Enabled(bool value);
    [CompilerGeneratedAttribute]
public FeatureConditions get_Conditions();
    [CompilerGeneratedAttribute]
public void set_Conditions(FeatureConditions value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<FeatureVariant> get_Variants();
    [CompilerGeneratedAttribute]
public void set_Variants(IEnumerable`1<FeatureVariant> value);
    [CompilerGeneratedAttribute]
public FeatureAllocation get_Allocation();
    [CompilerGeneratedAttribute]
public void set_Allocation(FeatureAllocation value);
    [CompilerGeneratedAttribute]
public FeatureTelemetry get_Telemetry();
    [CompilerGeneratedAttribute]
public void set_Telemetry(FeatureTelemetry value);
}
public class Microsoft.Extensions.Configuration.AzureAppConfiguration.FeatureManagement.FeatureFlagOptions : object {
    internal List`1<KeyValueSelector> FeatureFlagSelectors;
    [CompilerGeneratedAttribute]
private string <Label>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <CacheExpirationInterval>k__BackingField;
    public string Label { get; public set; }
    public TimeSpan CacheExpirationInterval { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Label();
    [CompilerGeneratedAttribute]
public void set_Label(string value);
    [CompilerGeneratedAttribute]
public TimeSpan get_CacheExpirationInterval();
    [CompilerGeneratedAttribute]
public void set_CacheExpirationInterval(TimeSpan value);
    public FeatureFlagOptions Select(string featureFlagFilter, string labelFilter);
}
internal class Microsoft.Extensions.Configuration.AzureAppConfiguration.FeatureManagement.FeatureGroupAllocation : object {
    [CompilerGeneratedAttribute]
private string <Variant>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <Groups>k__BackingField;
    [JsonPropertyNameAttribute("variant")]
public string Variant { get; public set; }
    [JsonPropertyNameAttribute("groups")]
public IEnumerable`1<string> Groups { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Variant();
    [CompilerGeneratedAttribute]
public void set_Variant(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_Groups();
    [CompilerGeneratedAttribute]
public void set_Groups(IEnumerable`1<string> value);
}
internal class Microsoft.Extensions.Configuration.AzureAppConfiguration.FeatureManagement.FeatureManagementConstants : object {
    public static string FeatureFlagMarker;
    public static string ContentType;
    public static string SectionName;
    public static string EnabledFor;
    public static string Variants;
    public static string Allocation;
    public static string User;
    public static string Group;
    public static string Percentile;
    public static string Telemetry;
    public static string Enabled;
    public static string Metadata;
    public static string RequirementType;
    public static string Name;
    public static string Parameters;
    public static string Variant;
    public static string ConfigurationValue;
    public static string ConfigurationReference;
    public static string StatusOverride;
    public static string DefaultWhenDisabled;
    public static string DefaultWhenEnabled;
    public static string Users;
    public static string Groups;
    public static string From;
    public static string To;
    public static string Seed;
    public static string ETag;
    public static string FeatureFlagId;
    public static string FeatureFlagReference;
    public static string Status;
    public static string AlwaysOnFilter;
    public static string Conditional;
    public static string Disabled;
}
internal class Microsoft.Extensions.Configuration.AzureAppConfiguration.FeatureManagement.FeatureManagementKeyValueAdapter : object {
    private FeatureFilterTracing _featureFilterTracing;
    public FeatureManagementKeyValueAdapter(FeatureFilterTracing featureFilterTracing);
    public sealed virtual Task`1<IEnumerable`1<KeyValuePair`2<string, string>>> ProcessKeyValue(ConfigurationSetting setting, Uri endpoint, Logger logger, CancellationToken cancellationToken);
    public sealed virtual bool CanProcess(ConfigurationSetting setting);
    public sealed virtual void InvalidateCache(ConfigurationSetting setting);
    public sealed virtual bool NeedsRefresh();
    private static string CalculateFeatureFlagId(string key, string label);
}
internal class Microsoft.Extensions.Configuration.AzureAppConfiguration.FeatureManagement.FeaturePercentileAllocation : object {
    [CompilerGeneratedAttribute]
private string <Variant>k__BackingField;
    [CompilerGeneratedAttribute]
private double <From>k__BackingField;
    [CompilerGeneratedAttribute]
private double <To>k__BackingField;
    [JsonPropertyNameAttribute("variant")]
public string Variant { get; public set; }
    [JsonPropertyNameAttribute("from")]
public double From { get; public set; }
    [JsonPropertyNameAttribute("to")]
public double To { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Variant();
    [CompilerGeneratedAttribute]
public void set_Variant(string value);
    [CompilerGeneratedAttribute]
public double get_From();
    [CompilerGeneratedAttribute]
public void set_From(double value);
    [CompilerGeneratedAttribute]
public double get_To();
    [CompilerGeneratedAttribute]
public void set_To(double value);
}
internal class Microsoft.Extensions.Configuration.AzureAppConfiguration.FeatureManagement.FeatureTelemetry : object {
    [CompilerGeneratedAttribute]
private bool <Enabled>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, string> <Metadata>k__BackingField;
    [JsonPropertyNameAttribute("enabled")]
public bool Enabled { get; public set; }
    [JsonPropertyNameAttribute("metadata")]
public IReadOnlyDictionary`2<string, string> Metadata { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_Enabled();
    [CompilerGeneratedAttribute]
public void set_Enabled(bool value);
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, string> get_Metadata();
    [CompilerGeneratedAttribute]
public void set_Metadata(IReadOnlyDictionary`2<string, string> value);
}
internal class Microsoft.Extensions.Configuration.AzureAppConfiguration.FeatureManagement.FeatureUserAllocation : object {
    [CompilerGeneratedAttribute]
private string <Variant>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <Users>k__BackingField;
    [JsonPropertyNameAttribute("variant")]
public string Variant { get; public set; }
    [JsonPropertyNameAttribute("users")]
public IEnumerable`1<string> Users { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Variant();
    [CompilerGeneratedAttribute]
public void set_Variant(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_Users();
    [CompilerGeneratedAttribute]
public void set_Users(IEnumerable`1<string> value);
}
internal class Microsoft.Extensions.Configuration.AzureAppConfiguration.FeatureManagement.FeatureVariant : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ConfigurationValue>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ConfigurationReference>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StatusOverride>k__BackingField;
    [JsonPropertyNameAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyNameAttribute("configuration_value")]
public string ConfigurationValue { get; public set; }
    [JsonPropertyNameAttribute("configuration_reference")]
public string ConfigurationReference { get; public set; }
    [JsonPropertyNameAttribute("status_override")]
public string StatusOverride { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_ConfigurationValue();
    [CompilerGeneratedAttribute]
public void set_ConfigurationValue(string value);
    [CompilerGeneratedAttribute]
public string get_ConfigurationReference();
    [CompilerGeneratedAttribute]
public void set_ConfigurationReference(string value);
    [CompilerGeneratedAttribute]
public string get_StatusOverride();
    [CompilerGeneratedAttribute]
public void set_StatusOverride(string value);
}
internal class Microsoft.Extensions.Configuration.AzureAppConfiguration.FeatureManagement.JsonFlattener : object {
    private List`1<KeyValuePair`2<string, string>> _data;
    private Stack`1<string> _context;
    private string _currentPath;
    public List`1<KeyValuePair`2<string, string>> FlattenJson(JsonElement rootElement);
    private void VisitJsonProperty(JsonProperty property);
    private void VisitJsonElement(JsonElement element);
    private void EnterContext(string context);
    private void ExitContext();
}
internal class Microsoft.Extensions.Configuration.AzureAppConfiguration.GetKeyValueChangeCollectionOptions : object {
    [CompilerGeneratedAttribute]
private string <KeyFilter>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Label>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <RequestTracingEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private RequestTracingOptions <RequestTracingOptions>k__BackingField;
    public string KeyFilter { get; public set; }
    public string Label { get; public set; }
    public bool RequestTracingEnabled { get; public set; }
    public RequestTracingOptions RequestTracingOptions { get; public set; }
    [CompilerGeneratedAttribute]
public string get_KeyFilter();
    [CompilerGeneratedAttribute]
public void set_KeyFilter(string value);
    [CompilerGeneratedAttribute]
public string get_Label();
    [CompilerGeneratedAttribute]
public void set_Label(string value);
    [CompilerGeneratedAttribute]
public bool get_RequestTracingEnabled();
    [CompilerGeneratedAttribute]
public void set_RequestTracingEnabled(bool value);
    [CompilerGeneratedAttribute]
public RequestTracingOptions get_RequestTracingOptions();
    [CompilerGeneratedAttribute]
public void set_RequestTracingOptions(RequestTracingOptions value);
}
internal enum Microsoft.Extensions.Configuration.AzureAppConfiguration.HostType : Enum {
    public int value__;
    public static HostType Unidentified;
    public static HostType AzureWebApp;
    public static HostType AzureFunction;
    public static HostType ContainerApp;
    public static HostType Kubernetes;
    public static HostType IISExpress;
    public static HostType ServiceFabric;
}
internal class Microsoft.Extensions.Configuration.AzureAppConfiguration.HttpStatusCodes : object {
    public static int TooManyRequests;
    private static HttpStatusCodes();
}
internal interface Microsoft.Extensions.Configuration.AzureAppConfiguration.IConfigurationClientManager {
    public abstract virtual IEnumerable`1<ConfigurationClient> GetClients();
    public abstract virtual void RefreshClients();
    public abstract virtual bool UpdateSyncToken(Uri endpoint, string syncToken);
    public abstract virtual Uri GetEndpointForClient(ConfigurationClient client);
}
public interface Microsoft.Extensions.Configuration.AzureAppConfiguration.IConfigurationRefresher {
    public Uri AppConfigurationEndpoint { get; }
    public abstract virtual Uri get_AppConfigurationEndpoint();
    public abstract virtual Task RefreshAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<bool> TryRefreshAsync(CancellationToken cancellationToken);
    public abstract virtual void ProcessPushNotification(PushNotification pushNotification, Nullable`1<TimeSpan> maxDelay);
}
public interface Microsoft.Extensions.Configuration.AzureAppConfiguration.IConfigurationRefresherProvider {
    public IEnumerable`1<IConfigurationRefresher> Refreshers { get; }
    public abstract virtual IEnumerable`1<IConfigurationRefresher> get_Refreshers();
}
internal interface Microsoft.Extensions.Configuration.AzureAppConfiguration.IKeyValueAdapter {
    public abstract virtual Task`1<IEnumerable`1<KeyValuePair`2<string, string>>> ProcessKeyValue(ConfigurationSetting setting, Uri endpoint, Logger logger, CancellationToken cancellationToken);
    public abstract virtual bool CanProcess(ConfigurationSetting setting);
    public abstract virtual void InvalidateCache(ConfigurationSetting setting);
    public abstract virtual bool NeedsRefresh();
}
internal class Microsoft.Extensions.Configuration.AzureAppConfiguration.JsonKeyValueAdapter : object {
    private static IEnumerable`1<string> ExcludedJsonContentTypes;
    private static JsonKeyValueAdapter();
    public sealed virtual Task`1<IEnumerable`1<KeyValuePair`2<string, string>>> ProcessKeyValue(ConfigurationSetting setting, Uri endpoint, Logger logger, CancellationToken cancellationToken);
    public sealed virtual bool CanProcess(ConfigurationSetting setting);
    public sealed virtual void InvalidateCache(ConfigurationSetting setting);
    public sealed virtual bool NeedsRefresh();
}
public class Microsoft.Extensions.Configuration.AzureAppConfiguration.KeyFilter : object {
    public static string Any;
}
internal class Microsoft.Extensions.Configuration.AzureAppConfiguration.KeyValueChange : ValueType {
    [CompilerGeneratedAttribute]
private KeyValueChangeType <ChangeType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Label>k__BackingField;
    [CompilerGeneratedAttribute]
private ConfigurationSetting <Current>k__BackingField;
    public KeyValueChangeType ChangeType { get; public set; }
    public string Key { get; public set; }
    public string Label { get; public set; }
    public ConfigurationSetting Current { get; public set; }
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public KeyValueChangeType get_ChangeType();
    [CompilerGeneratedAttribute]
public void set_ChangeType(KeyValueChangeType value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(string value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_Label();
    [CompilerGeneratedAttribute]
public void set_Label(string value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public ConfigurationSetting get_Current();
    [CompilerGeneratedAttribute]
public void set_Current(ConfigurationSetting value);
}
internal enum Microsoft.Extensions.Configuration.AzureAppConfiguration.KeyValueChangeType : Enum {
    public int value__;
    public static KeyValueChangeType None;
    public static KeyValueChangeType Modified;
    public static KeyValueChangeType Deleted;
}
public class Microsoft.Extensions.Configuration.AzureAppConfiguration.KeyVaultReferenceException : Exception {
    private string _message;
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Label>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Etag>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SecretIdentifier>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorCode>k__BackingField;
    public string Message { get; }
    public string Key { get; public set; }
    public string Label { get; public set; }
    public string Etag { get; public set; }
    public string SecretIdentifier { get; public set; }
    public string ErrorCode { get; public set; }
    public KeyVaultReferenceException(string message, Exception inner);
    public virtual string get_Message();
    [CompilerGeneratedAttribute]
public string get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(string value);
    [CompilerGeneratedAttribute]
public string get_Label();
    [CompilerGeneratedAttribute]
public void set_Label(string value);
    [CompilerGeneratedAttribute]
public string get_Etag();
    [CompilerGeneratedAttribute]
public void set_Etag(string value);
    [CompilerGeneratedAttribute]
public string get_SecretIdentifier();
    [CompilerGeneratedAttribute]
public void set_SecretIdentifier(string value);
    [CompilerGeneratedAttribute]
public string get_ErrorCode();
    [CompilerGeneratedAttribute]
public void set_ErrorCode(string value);
}
public class Microsoft.Extensions.Configuration.AzureAppConfiguration.LabelFilter : object {
    public static string Null;
}
internal class Microsoft.Extensions.Configuration.AzureAppConfiguration.Logger : object {
    private ILogger _logger;
    public Logger(ILogger logger);
    public void LogDebug(string message);
    public void LogInformation(string message);
    public void LogWarning(string message);
}
internal class Microsoft.Extensions.Configuration.AzureAppConfiguration.LoggingConstants : object {
    public static string AppConfigRefreshLogCategory;
    public static string RefreshFailedDueToAuthenticationError;
    public static string RefreshFailedError;
    public static string RefreshCanceledError;
    public static string RefreshFailedDueToKeyVaultError;
    public static string PushNotificationUnregisteredEndpoint;
    public static string FallbackClientLookupError;
    public static string RefreshKeyValueRead;
    public static string RefreshKeyVaultSecretRead;
    public static string RefreshFeatureFlagRead;
    public static string RefreshFeatureFlagsUnchanged;
    public static string RefreshConfigurationUpdatedSuccess;
    public static string RefreshKeyValueSettingUpdated;
    public static string RefreshKeyVaultSettingUpdated;
    public static string RefreshFeatureFlagUpdated;
    public static string RefreshSkippedNoClientAvailable;
    public static string RefreshFailedToGetSettingsFromEndpoint;
    public static string FailingOverToEndpoint;
}
internal static class Microsoft.Extensions.Configuration.AzureAppConfiguration.LogHelper : object {
    public static string BuildKeyValueReadMessage(KeyValueChangeType changeType, string key, string label, string endpoint);
    public static string BuildKeyValueSettingUpdatedMessage(string key);
    public static string BuildConfigurationUpdatedMessage();
    public static string BuildFeatureFlagsUnchangedMessage(string endpoint);
    public static string BuildFeatureFlagReadMessage(string key, string label, string endpoint);
    public static string BuildFeatureFlagUpdatedMessage(string key);
    public static string BuildKeyVaultSecretReadMessage(string key, string label);
    public static string BuildKeyVaultSettingUpdatedMessage(string key);
    public static string BuildRefreshSkippedNoClientAvailableMessage();
    public static string BuildRefreshFailedDueToAuthenticationErrorMessage(string exceptionMessage);
    public static string BuildRefreshFailedErrorMessage(string exceptionMessage);
    public static string BuildRefreshFailedDueToKeyVaultErrorMessage(string exceptionMessage);
    public static string BuildRefreshCanceledErrorMessage();
    public static string BuildPushNotificationUnregisteredEndpointMessage(string resourceUri);
    public static string BuildFailoverMessage(string originalEndpoint, string currentEndpoint);
    public static string BuildLastEndpointFailedMessage(string endpoint);
    public static string BuildFallbackClientLookupFailMessage(string exceptionMessage);
}
internal class Microsoft.Extensions.Configuration.AzureAppConfiguration.Models.KeyValueIdentifier : ValueType {
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Label>k__BackingField;
    public string Key { get; public set; }
    public string Label { get; public set; }
    public KeyValueIdentifier(string key, string label);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(string value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_Label();
    [CompilerGeneratedAttribute]
public void set_Label(string value);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
public class Microsoft.Extensions.Configuration.AzureAppConfiguration.Models.KeyValueSelector : object {
    [CompilerGeneratedAttribute]
private string <KeyFilter>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LabelFilter>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SnapshotName>k__BackingField;
    public string KeyFilter { get; public set; }
    public string LabelFilter { get; public set; }
    public string SnapshotName { get; public set; }
    [CompilerGeneratedAttribute]
public string get_KeyFilter();
    [CompilerGeneratedAttribute]
public void set_KeyFilter(string value);
    [CompilerGeneratedAttribute]
public string get_LabelFilter();
    [CompilerGeneratedAttribute]
public void set_LabelFilter(string value);
    [CompilerGeneratedAttribute]
public string get_SnapshotName();
    [CompilerGeneratedAttribute]
public void set_SnapshotName(string value);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
internal class Microsoft.Extensions.Configuration.AzureAppConfiguration.Models.KeyValueWatcher : object {
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Label>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <RefreshAll>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <CacheExpirationInterval>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <CacheExpires>k__BackingField;
    public string Key { get; public set; }
    public string Label { get; public set; }
    public bool RefreshAll { get; public set; }
    public TimeSpan CacheExpirationInterval { get; public set; }
    public DateTimeOffset CacheExpires { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(string value);
    [CompilerGeneratedAttribute]
public string get_Label();
    [CompilerGeneratedAttribute]
public void set_Label(string value);
    [CompilerGeneratedAttribute]
public bool get_RefreshAll();
    [CompilerGeneratedAttribute]
public void set_RefreshAll(bool value);
    [CompilerGeneratedAttribute]
public TimeSpan get_CacheExpirationInterval();
    [CompilerGeneratedAttribute]
public void set_CacheExpirationInterval(TimeSpan value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_CacheExpires();
    [CompilerGeneratedAttribute]
public void set_CacheExpires(DateTimeOffset value);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
public class Microsoft.Extensions.Configuration.AzureAppConfiguration.PushNotification : object {
    [CompilerGeneratedAttribute]
private Uri <ResourceUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SyncToken>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EventType>k__BackingField;
    public Uri ResourceUri { get; public set; }
    public string SyncToken { get; public set; }
    public string EventType { get; public set; }
    [CompilerGeneratedAttribute]
public Uri get_ResourceUri();
    [CompilerGeneratedAttribute]
public void set_ResourceUri(Uri value);
    [CompilerGeneratedAttribute]
public string get_SyncToken();
    [CompilerGeneratedAttribute]
public void set_SyncToken(string value);
    [CompilerGeneratedAttribute]
public string get_EventType();
    [CompilerGeneratedAttribute]
public void set_EventType(string value);
}
internal static class Microsoft.Extensions.Configuration.AzureAppConfiguration.RandomGenerator : object {
    private static Random _global;
    private static ThreadLocal`1<Random> _rnd;
    private static RandomGenerator();
    public static double NextDouble();
}
internal class Microsoft.Extensions.Configuration.AzureAppConfiguration.RefreshConstants : object {
    public static TimeSpan DefaultCacheExpirationInterval;
    public static TimeSpan MinimumCacheExpirationInterval;
    public static TimeSpan DefaultFeatureFlagsCacheExpirationInterval;
    public static TimeSpan MinimumFeatureFlagsCacheExpirationInterval;
    public static TimeSpan MinimumSecretRefreshInterval;
    public static TimeSpan DefaultMinBackoff;
    public static TimeSpan DefaultMaxBackoff;
    private static RefreshConstants();
}
internal class Microsoft.Extensions.Configuration.AzureAppConfiguration.RequestTracingConstants : object {
    public static string RequestTracingDisabledEnvironmentVariable;
    public static string AzureFunctionEnvironmentVariable;
    public static string AzureWebAppEnvironmentVariable;
    public static string ContainerAppEnvironmentVariable;
    public static string KubernetesEnvironmentVariable;
    public static string AspNetCoreEnvironmentVariable;
    public static string DotNetCoreEnvironmentVariable;
    public static string DevelopmentEnvironmentName;
    public static string ServiceFabricEnvironmentVariable;
    public static string IISExpressProcessName;
    public static string RequestTypeKey;
    public static string HostTypeKey;
    public static string FilterTypeKey;
    public static string EnvironmentKey;
    public static string FeatureManagementVersionKey;
    public static string FeatureManagementAspNetCoreVersionKey;
    public static string DevEnvironmentValue;
    public static string KeyVaultConfiguredTag;
    public static string KeyVaultRefreshConfiguredTag;
    public static string ReplicaCountKey;
    public static string DiagnosticHeaderActivityName;
    public static string CorrelationContextHeader;
    public static string UserAgentHeader;
    public static string FeatureManagementAssemblyName;
    public static string FeatureManagementAspNetCoreAssemblyName;
}
internal class Microsoft.Extensions.Configuration.AzureAppConfiguration.RequestTracingOptions : object {
    [CompilerGeneratedAttribute]
private HostType <HostType>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsKeyVaultConfigured>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsKeyVaultRefreshConfigured>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDevEnvironment>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ReplicaCount>k__BackingField;
    [CompilerGeneratedAttribute]
private FeatureFilterTracing <FilterTracing>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FeatureManagementVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FeatureManagementAspNetCoreVersion>k__BackingField;
    public HostType HostType { get; public set; }
    public bool IsKeyVaultConfigured { get; public set; }
    public bool IsKeyVaultRefreshConfigured { get; public set; }
    public bool IsDevEnvironment { get; public set; }
    public int ReplicaCount { get; public set; }
    public FeatureFilterTracing FilterTracing { get; public set; }
    public string FeatureManagementVersion { get; public set; }
    public string FeatureManagementAspNetCoreVersion { get; public set; }
    [CompilerGeneratedAttribute]
public HostType get_HostType();
    [CompilerGeneratedAttribute]
public void set_HostType(HostType value);
    [CompilerGeneratedAttribute]
public bool get_IsKeyVaultConfigured();
    [CompilerGeneratedAttribute]
public void set_IsKeyVaultConfigured(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsKeyVaultRefreshConfigured();
    [CompilerGeneratedAttribute]
public void set_IsKeyVaultRefreshConfigured(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsDevEnvironment();
    [CompilerGeneratedAttribute]
public void set_IsDevEnvironment(bool value);
    [CompilerGeneratedAttribute]
public int get_ReplicaCount();
    [CompilerGeneratedAttribute]
public void set_ReplicaCount(int value);
    [CompilerGeneratedAttribute]
public FeatureFilterTracing get_FilterTracing();
    [CompilerGeneratedAttribute]
public void set_FilterTracing(FeatureFilterTracing value);
    [CompilerGeneratedAttribute]
public string get_FeatureManagementVersion();
    [CompilerGeneratedAttribute]
public void set_FeatureManagementVersion(string value);
    [CompilerGeneratedAttribute]
public string get_FeatureManagementAspNetCoreVersion();
    [CompilerGeneratedAttribute]
public void set_FeatureManagementAspNetCoreVersion(string value);
}
internal enum Microsoft.Extensions.Configuration.AzureAppConfiguration.RequestType : Enum {
    public int value__;
    public static RequestType Startup;
    public static RequestType Watch;
}
internal class Microsoft.Extensions.Configuration.AzureAppConfiguration.SrvLookupClient : object {
    private LookupClient _lookupClient;
    private static string TcpOrigin;
    private static string TCP;
    private static string Alt;
    [AsyncStateMachineAttribute("Microsoft.Extensions.Configuration.AzureAppConfiguration.SrvLookupClient/<QueryAsync>d__5")]
public Task`1<IEnumerable`1<SrvRecord>> QueryAsync(string host, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.Extensions.Configuration.AzureAppConfiguration.SrvLookupClient/<InternalQueryAsync>d__6")]
private Task`1<IEnumerable`1<SrvRecord>> InternalQueryAsync(string srvDns, CancellationToken cancellationToken);
}
public class Microsoft.Extensions.Configuration.AzureAppConfiguration.StartupOptions : object {
    [CompilerGeneratedAttribute]
private TimeSpan <Timeout>k__BackingField;
    public TimeSpan Timeout { get; public set; }
    [CompilerGeneratedAttribute]
public TimeSpan get_Timeout();
    [CompilerGeneratedAttribute]
public void set_Timeout(TimeSpan value);
}
[ExtensionAttribute]
internal static class Microsoft.Extensions.Configuration.AzureAppConfiguration.TaskExtensions : object {
    [ExtensionAttribute]
public static void EnsureCompleted(ValueTask task);
}
internal static class Microsoft.Extensions.Configuration.AzureAppConfiguration.TracingUtils : object {
    public static HostType GetHostType();
    public static bool IsDevEnvironment();
    public static string GetAssemblyVersion(string assemblyName);
    [AsyncStateMachineAttribute("Microsoft.Extensions.Configuration.AzureAppConfiguration.TracingUtils/<CallWithRequestTracing>d__3")]
public static Task CallWithRequestTracing(bool tracingEnabled, RequestType requestType, RequestTracingOptions requestTracingOptions, Func`1<Task> clientCall);
    private static string CreateCorrelationContextHeader(RequestType requestType, RequestTracingOptions requestTracingOptions);
}
internal class Microsoft.Extensions.Configuration.AzureAppConfiguration.UserAgentHeaderPolicy : HttpPipelinePolicy {
    public virtual void Process(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline);
    public virtual ValueTask ProcessAsync(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline);
    internal static string GenerateUserAgent();
    [AsyncStateMachineAttribute("Microsoft.Extensions.Configuration.AzureAppConfiguration.UserAgentHeaderPolicy/<ProcessAsync>d__3")]
private ValueTask ProcessAsync(HttpMessage message, ReadOnlyMemory`1<HttpPipelinePolicy> pipeline, bool async);
}
[ExtensionAttribute]
public static class Microsoft.Extensions.Configuration.AzureAppConfigurationExtensions : object {
    private static string DisableProviderEnvironmentVariable;
    private static bool _isProviderDisabled;
    private static AzureAppConfigurationExtensions();
    private static bool IsProviderDisabled();
    [ExtensionAttribute]
public static IConfigurationBuilder AddAzureAppConfiguration(IConfigurationBuilder configurationBuilder, string connectionString, bool optional);
    [ExtensionAttribute]
public static IConfigurationBuilder AddAzureAppConfiguration(IConfigurationBuilder configurationBuilder, IEnumerable`1<string> connectionStrings, bool optional);
    [ExtensionAttribute]
public static IConfigurationBuilder AddAzureAppConfiguration(IConfigurationBuilder configurationBuilder, Action`1<AzureAppConfigurationOptions> action, bool optional);
    [ExtensionAttribute]
public static IServiceCollection AddAzureAppConfiguration(IServiceCollection services);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class System.Runtime.CompilerServices.IsReadOnlyAttribute : Attribute {
}
