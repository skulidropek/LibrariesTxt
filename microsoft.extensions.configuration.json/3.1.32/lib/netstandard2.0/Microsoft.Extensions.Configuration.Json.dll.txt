internal class Microsoft.Extensions.Configuration.Json.JsonConfigurationFileParser : object {
    private IDictionary`2<string, string> _data;
    private Stack`1<string> _context;
    private string _currentPath;
    public static IDictionary`2<string, string> Parse(Stream input);
    private IDictionary`2<string, string> ParseStream(Stream input);
    private void VisitElement(JsonElement element);
    private void VisitValue(JsonElement value);
    private void EnterContext(string context);
    private void ExitContext();
}
public class Microsoft.Extensions.Configuration.Json.JsonConfigurationProvider : FileConfigurationProvider {
    public JsonConfigurationProvider(JsonConfigurationSource source);
    public virtual void Load(Stream stream);
}
public class Microsoft.Extensions.Configuration.Json.JsonConfigurationSource : FileConfigurationSource {
    public virtual IConfigurationProvider Build(IConfigurationBuilder builder);
}
public class Microsoft.Extensions.Configuration.Json.JsonStreamConfigurationProvider : StreamConfigurationProvider {
    public JsonStreamConfigurationProvider(JsonStreamConfigurationSource source);
    public virtual void Load(Stream stream);
}
public class Microsoft.Extensions.Configuration.Json.JsonStreamConfigurationSource : StreamConfigurationSource {
    public virtual IConfigurationProvider Build(IConfigurationBuilder builder);
}
internal static class Microsoft.Extensions.Configuration.Json.Resources : object {
    private static ResourceManager s_resourceManager;
    [CompilerGeneratedAttribute]
private static CultureInfo <Culture>k__BackingField;
    internal static ResourceManager ResourceManager { get; }
    internal static CultureInfo Culture { get; internal set; }
    internal static string Error_InvalidFilePath { get; }
    internal static string Error_JSONParseError { get; }
    internal static string Error_KeyIsDuplicated { get; }
    internal static string Error_UnsupportedJSONToken { get; }
    internal static ResourceManager get_ResourceManager();
    [CompilerGeneratedAttribute]
internal static CultureInfo get_Culture();
    [CompilerGeneratedAttribute]
internal static void set_Culture(CultureInfo value);
    internal static string GetResourceString(string resourceKey, string defaultValue);
    private static string GetResourceString(string resourceKey, String[] formatterNames);
    internal static string get_Error_InvalidFilePath();
    internal static string get_Error_JSONParseError();
    internal static string get_Error_KeyIsDuplicated();
    internal static string FormatError_KeyIsDuplicated(object p0);
    internal static string get_Error_UnsupportedJSONToken();
    internal static string FormatError_UnsupportedJSONToken(object p0);
}
[ExtensionAttribute]
public static class Microsoft.Extensions.Configuration.JsonConfigurationExtensions : object {
    [ExtensionAttribute]
public static IConfigurationBuilder AddJsonFile(IConfigurationBuilder builder, string path);
    [ExtensionAttribute]
public static IConfigurationBuilder AddJsonFile(IConfigurationBuilder builder, string path, bool optional);
    [ExtensionAttribute]
public static IConfigurationBuilder AddJsonFile(IConfigurationBuilder builder, string path, bool optional, bool reloadOnChange);
    [ExtensionAttribute]
public static IConfigurationBuilder AddJsonFile(IConfigurationBuilder builder, IFileProvider provider, string path, bool optional, bool reloadOnChange);
    [ExtensionAttribute]
public static IConfigurationBuilder AddJsonFile(IConfigurationBuilder builder, Action`1<JsonConfigurationSource> configureSource);
    [ExtensionAttribute]
public static IConfigurationBuilder AddJsonStream(IConfigurationBuilder builder, Stream stream);
}
