[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.Extensions.FileProviders.Embedded.EmbeddedResourceFileInfo : object {
    private Assembly _assembly;
    private string _resourcePath;
    private Nullable`1<long> _length;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <LastModified>k__BackingField;
    public bool Exists { get; }
    public long Length { get; }
    [NullableAttribute("2")]
public string PhysicalPath { get; }
    public string Name { get; }
    public DateTimeOffset LastModified { get; }
    public bool IsDirectory { get; }
    public EmbeddedResourceFileInfo(Assembly assembly, string resourcePath, string name, DateTimeOffset lastModified);
    public sealed virtual bool get_Exists();
    public sealed virtual long get_Length();
    [NullableContextAttribute("2")]
public sealed virtual string get_PhysicalPath();
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual DateTimeOffset get_LastModified();
    public sealed virtual bool get_IsDirectory();
    public sealed virtual Stream CreateReadStream();
    private Stream GetManifestResourceStream();
}
internal class Microsoft.Extensions.FileProviders.Embedded.EnumerableDirectoryContents : object {
    private IEnumerable`1<IFileInfo> _entries;
    public bool Exists { get; }
    [NullableContextAttribute("1")]
public EnumerableDirectoryContents(IEnumerable`1<IFileInfo> entries);
    public sealed virtual bool get_Exists();
    [NullableContextAttribute("1")]
public sealed virtual IEnumerator`1<IFileInfo> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.Extensions.FileProviders.Embedded.Manifest.EmbeddedFilesManifest : object {
    private static Char[] _invalidFileNameChars;
    private static Char[] _separators;
    private ManifestDirectory _rootDirectory;
    internal EmbeddedFilesManifest(ManifestDirectory rootDirectory);
    private static EmbeddedFilesManifest();
    internal ManifestEntry ResolveEntry(string path);
    private static StringSegment RemoveLeadingAndTrailingDirectorySeparators(string path);
    internal EmbeddedFilesManifest Scope(string path);
    private static bool HasInvalidPathChars(string path);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.Extensions.FileProviders.Embedded.Manifest.ManifestDirectory : ManifestEntry {
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<ManifestEntry> <Children>k__BackingField;
    public IReadOnlyList`1<ManifestEntry> Children { get; protected set; }
    protected ManifestDirectory(string name, ManifestEntry[] children);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<ManifestEntry> get_Children();
    [CompilerGeneratedAttribute]
protected void set_Children(IReadOnlyList`1<ManifestEntry> value);
    public virtual ManifestEntry Traverse(StringSegment segment);
    public virtual ManifestDirectory ToRootDirectory();
    public static ManifestDirectory CreateDirectory(string name, ManifestEntry[] children);
    public static ManifestRootDirectory CreateRootDirectory(ManifestEntry[] children);
    internal static void ValidateChildrenAndSetParent(ManifestEntry[] children, ManifestDirectory parent);
    private ManifestEntry[] CopyChildren();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.Extensions.FileProviders.Embedded.Manifest.ManifestDirectoryContents : object {
    private DateTimeOffset _lastModified;
    private IFileInfo[] _entries;
    [CompilerGeneratedAttribute]
private Assembly <Assembly>k__BackingField;
    [CompilerGeneratedAttribute]
private ManifestDirectory <Directory>k__BackingField;
    public bool Exists { get; }
    public Assembly Assembly { get; }
    public ManifestDirectory Directory { get; }
    public ManifestDirectoryContents(Assembly assembly, ManifestDirectory directory, DateTimeOffset lastModified);
    public sealed virtual bool get_Exists();
    [CompilerGeneratedAttribute]
public Assembly get_Assembly();
    [CompilerGeneratedAttribute]
public ManifestDirectory get_Directory();
    public sealed virtual IEnumerator`1<IFileInfo> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<IFileInfo> <GetEnumerator>g__EnsureEntries|11_0();
    [IteratorStateMachineAttribute("Microsoft.Extensions.FileProviders.Embedded.Manifest.ManifestDirectoryContents/<<GetEnumerator>g__ResolveEntries|11_1>d")]
[CompilerGeneratedAttribute]
private IEnumerable`1<IFileInfo> <GetEnumerator>g__ResolveEntries|11_1();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.Extensions.FileProviders.Embedded.Manifest.ManifestDirectoryInfo : object {
    [CompilerGeneratedAttribute]
private DateTimeOffset <LastModified>k__BackingField;
    [CompilerGeneratedAttribute]
private ManifestDirectory <Directory>k__BackingField;
    public bool Exists { get; }
    public long Length { get; }
    [NullableAttribute("2")]
public string PhysicalPath { get; }
    public string Name { get; }
    public DateTimeOffset LastModified { get; }
    public bool IsDirectory { get; }
    public ManifestDirectory Directory { get; }
    public ManifestDirectoryInfo(ManifestDirectory directory, DateTimeOffset lastModified);
    public sealed virtual bool get_Exists();
    public sealed virtual long get_Length();
    [NullableContextAttribute("2")]
public sealed virtual string get_PhysicalPath();
    public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual DateTimeOffset get_LastModified();
    public sealed virtual bool get_IsDirectory();
    [CompilerGeneratedAttribute]
public ManifestDirectory get_Directory();
    public sealed virtual Stream CreateReadStream();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Microsoft.Extensions.FileProviders.Embedded.Manifest.ManifestEntry : object {
    [CompilerGeneratedAttribute]
private ManifestEntry <Parent>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private static ManifestEntry <UnknownPath>k__BackingField;
    [NullableAttribute("2")]
public ManifestEntry Parent { get; private set; }
    public string Name { get; }
    public static ManifestEntry UnknownPath { get; }
    public ManifestEntry(string name);
    private static ManifestEntry();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public ManifestEntry get_Parent();
    [CompilerGeneratedAttribute]
private void set_Parent(ManifestEntry value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public static ManifestEntry get_UnknownPath();
    protected internal virtual void SetParent(ManifestDirectory directory);
    public abstract virtual ManifestEntry Traverse(StringSegment segment);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.Extensions.FileProviders.Embedded.Manifest.ManifestFile : ManifestEntry {
    [CompilerGeneratedAttribute]
private string <ResourcePath>k__BackingField;
    public string ResourcePath { get; }
    public ManifestFile(string name, string resourcePath);
    [CompilerGeneratedAttribute]
public string get_ResourcePath();
    public virtual ManifestEntry Traverse(StringSegment segment);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.Extensions.FileProviders.Embedded.Manifest.ManifestFileInfo : object {
    private Nullable`1<long> _length;
    [CompilerGeneratedAttribute]
private Assembly <Assembly>k__BackingField;
    [CompilerGeneratedAttribute]
private ManifestFile <ManifestFile>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <LastModified>k__BackingField;
    public Assembly Assembly { get; }
    public ManifestFile ManifestFile { get; }
    public bool Exists { get; }
    public long Length { get; }
    [NullableAttribute("2")]
public string PhysicalPath { get; }
    public string Name { get; }
    public DateTimeOffset LastModified { get; }
    public bool IsDirectory { get; }
    public ManifestFileInfo(Assembly assembly, ManifestFile file, DateTimeOffset lastModified);
    [CompilerGeneratedAttribute]
public Assembly get_Assembly();
    [CompilerGeneratedAttribute]
public ManifestFile get_ManifestFile();
    public sealed virtual bool get_Exists();
    public sealed virtual long get_Length();
    [NullableContextAttribute("2")]
public sealed virtual string get_PhysicalPath();
    public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual DateTimeOffset get_LastModified();
    public sealed virtual bool get_IsDirectory();
    private long EnsureLength();
    public sealed virtual Stream CreateReadStream();
    private Stream GetManifestResourceStream();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Microsoft.Extensions.FileProviders.Embedded.Manifest.ManifestParser : object {
    private static string DefaultManifestName;
    public static EmbeddedFilesManifest Parse(Assembly assembly);
    public static EmbeddedFilesManifest Parse(Assembly assembly, string name);
    private static void ValidateEntries(List`1<ManifestEntry> entriesList);
    private static ManifestEntry BuildEntry(XElement element);
    private static XElement EnsureElement(XContainer container, string elementName);
    private static string EnsureName(XElement element);
    private static string EnsureText(XElement element);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.Extensions.FileProviders.Embedded.Manifest.ManifestRootDirectory : ManifestDirectory {
    public ManifestRootDirectory(ManifestEntry[] children);
    public virtual ManifestDirectory ToRootDirectory();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.Extensions.FileProviders.Embedded.Manifest.ManifestSinkDirectory : ManifestDirectory {
    [CompilerGeneratedAttribute]
private static ManifestDirectory <Instance>k__BackingField;
    public static ManifestDirectory Instance { get; }
    private static ManifestSinkDirectory();
    [CompilerGeneratedAttribute]
public static ManifestDirectory get_Instance();
    public virtual ManifestEntry Traverse(StringSegment segment);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.Extensions.FileProviders.EmbeddedFileProvider : object {
    private static Char[] _invalidFileNameChars;
    private Assembly _assembly;
    private string _baseNamespace;
    private DateTimeOffset _lastModified;
    public EmbeddedFileProvider(Assembly assembly);
    public EmbeddedFileProvider(Assembly assembly, string baseNamespace);
    private static EmbeddedFileProvider();
    public sealed virtual IFileInfo GetFileInfo(string subpath);
    public sealed virtual IDirectoryContents GetDirectoryContents(string subpath);
    public sealed virtual IChangeToken Watch(string pattern);
    private static bool HasInvalidPathChars(string path);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.Extensions.FileProviders.ManifestEmbeddedFileProvider : object {
    private DateTimeOffset _lastModified;
    [CompilerGeneratedAttribute]
private Assembly <Assembly>k__BackingField;
    [CompilerGeneratedAttribute]
private EmbeddedFilesManifest <Manifest>k__BackingField;
    public Assembly Assembly { get; }
    internal EmbeddedFilesManifest Manifest { get; }
    public ManifestEmbeddedFileProvider(Assembly assembly);
    public ManifestEmbeddedFileProvider(Assembly assembly, string root);
    public ManifestEmbeddedFileProvider(Assembly assembly, string root, DateTimeOffset lastModified);
    public ManifestEmbeddedFileProvider(Assembly assembly, string root, string manifestName, DateTimeOffset lastModified);
    internal ManifestEmbeddedFileProvider(Assembly assembly, EmbeddedFilesManifest manifest, DateTimeOffset lastModified);
    [CompilerGeneratedAttribute]
public Assembly get_Assembly();
    [CompilerGeneratedAttribute]
internal EmbeddedFilesManifest get_Manifest();
    public sealed virtual IDirectoryContents GetDirectoryContents(string subpath);
    public sealed virtual IFileInfo GetFileInfo(string subpath);
    public sealed virtual IChangeToken Watch(string filter);
    private static DateTimeOffset ResolveLastModified(Assembly assembly);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.NullablePublicOnlyAttribute : Attribute {
    public bool IncludesInternals;
    public NullablePublicOnlyAttribute(bool );
}
