[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.AspNetCore.Identity.IdentityRole : IdentityRole`1<string> {
    public IdentityRole(string roleName);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Identity.IdentityRole`1 : object {
    [CompilerGeneratedAttribute]
private TKey <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NormalizedName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ConcurrencyStamp>k__BackingField;
    [NullableAttribute("1")]
public TKey Id { get; public set; }
    public string Name { get; public set; }
    public string NormalizedName { get; public set; }
    public string ConcurrencyStamp { get; public set; }
    [NullableContextAttribute("1")]
public IdentityRole`1(string roleName);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual TKey get_Id();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual void set_Id(TKey value);
    [CompilerGeneratedAttribute]
public virtual string get_Name();
    [CompilerGeneratedAttribute]
public virtual void set_Name(string value);
    [CompilerGeneratedAttribute]
public virtual string get_NormalizedName();
    [CompilerGeneratedAttribute]
public virtual void set_NormalizedName(string value);
    [CompilerGeneratedAttribute]
public virtual string get_ConcurrencyStamp();
    [CompilerGeneratedAttribute]
public virtual void set_ConcurrencyStamp(string value);
    [NullableContextAttribute("1")]
public virtual string ToString();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Identity.IdentityRoleClaim`1 : object {
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private TKey <RoleId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClaimType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClaimValue>k__BackingField;
    public int Id { get; public set; }
    [NullableAttribute("1")]
public TKey RoleId { get; public set; }
    public string ClaimType { get; public set; }
    public string ClaimValue { get; public set; }
    [CompilerGeneratedAttribute]
public virtual int get_Id();
    [CompilerGeneratedAttribute]
public virtual void set_Id(int value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual TKey get_RoleId();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual void set_RoleId(TKey value);
    [CompilerGeneratedAttribute]
public virtual string get_ClaimType();
    [CompilerGeneratedAttribute]
public virtual void set_ClaimType(string value);
    [CompilerGeneratedAttribute]
public virtual string get_ClaimValue();
    [CompilerGeneratedAttribute]
public virtual void set_ClaimValue(string value);
    [NullableContextAttribute("1")]
public virtual Claim ToClaim();
    public virtual void InitializeFromClaim(Claim other);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.AspNetCore.Identity.IdentityUser : IdentityUser`1<string> {
    public IdentityUser(string userName);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Identity.IdentityUser`1 : object {
    [CompilerGeneratedAttribute]
private TKey <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NormalizedUserName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Email>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NormalizedEmail>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EmailConfirmed>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PasswordHash>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SecurityStamp>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ConcurrencyStamp>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PhoneNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <PhoneNumberConfirmed>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <TwoFactorEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <LockoutEnd>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <LockoutEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private int <AccessFailedCount>k__BackingField;
    [NullableAttribute("1")]
[PersonalDataAttribute]
public TKey Id { get; public set; }
    [ProtectedPersonalDataAttribute]
public string UserName { get; public set; }
    public string NormalizedUserName { get; public set; }
    [ProtectedPersonalDataAttribute]
public string Email { get; public set; }
    public string NormalizedEmail { get; public set; }
    [PersonalDataAttribute]
public bool EmailConfirmed { get; public set; }
    public string PasswordHash { get; public set; }
    public string SecurityStamp { get; public set; }
    public string ConcurrencyStamp { get; public set; }
    [ProtectedPersonalDataAttribute]
public string PhoneNumber { get; public set; }
    [PersonalDataAttribute]
public bool PhoneNumberConfirmed { get; public set; }
    [PersonalDataAttribute]
public bool TwoFactorEnabled { get; public set; }
    public Nullable`1<DateTimeOffset> LockoutEnd { get; public set; }
    public bool LockoutEnabled { get; public set; }
    public int AccessFailedCount { get; public set; }
    [NullableContextAttribute("1")]
public IdentityUser`1(string userName);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual TKey get_Id();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual void set_Id(TKey value);
    [CompilerGeneratedAttribute]
public virtual string get_UserName();
    [CompilerGeneratedAttribute]
public virtual void set_UserName(string value);
    [CompilerGeneratedAttribute]
public virtual string get_NormalizedUserName();
    [CompilerGeneratedAttribute]
public virtual void set_NormalizedUserName(string value);
    [CompilerGeneratedAttribute]
public virtual string get_Email();
    [CompilerGeneratedAttribute]
public virtual void set_Email(string value);
    [CompilerGeneratedAttribute]
public virtual string get_NormalizedEmail();
    [CompilerGeneratedAttribute]
public virtual void set_NormalizedEmail(string value);
    [CompilerGeneratedAttribute]
public virtual bool get_EmailConfirmed();
    [CompilerGeneratedAttribute]
public virtual void set_EmailConfirmed(bool value);
    [CompilerGeneratedAttribute]
public virtual string get_PasswordHash();
    [CompilerGeneratedAttribute]
public virtual void set_PasswordHash(string value);
    [CompilerGeneratedAttribute]
public virtual string get_SecurityStamp();
    [CompilerGeneratedAttribute]
public virtual void set_SecurityStamp(string value);
    [CompilerGeneratedAttribute]
public virtual string get_ConcurrencyStamp();
    [CompilerGeneratedAttribute]
public virtual void set_ConcurrencyStamp(string value);
    [CompilerGeneratedAttribute]
public virtual string get_PhoneNumber();
    [CompilerGeneratedAttribute]
public virtual void set_PhoneNumber(string value);
    [CompilerGeneratedAttribute]
public virtual bool get_PhoneNumberConfirmed();
    [CompilerGeneratedAttribute]
public virtual void set_PhoneNumberConfirmed(bool value);
    [CompilerGeneratedAttribute]
public virtual bool get_TwoFactorEnabled();
    [CompilerGeneratedAttribute]
public virtual void set_TwoFactorEnabled(bool value);
    [CompilerGeneratedAttribute]
public virtual Nullable`1<DateTimeOffset> get_LockoutEnd();
    [CompilerGeneratedAttribute]
public virtual void set_LockoutEnd(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public virtual bool get_LockoutEnabled();
    [CompilerGeneratedAttribute]
public virtual void set_LockoutEnabled(bool value);
    [CompilerGeneratedAttribute]
public virtual int get_AccessFailedCount();
    [CompilerGeneratedAttribute]
public virtual void set_AccessFailedCount(int value);
    [NullableContextAttribute("1")]
public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Identity.IdentityUserClaim`1 : object {
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private TKey <UserId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClaimType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClaimValue>k__BackingField;
    public int Id { get; public set; }
    public TKey UserId { get; public set; }
    [NullableAttribute("2")]
public string ClaimType { get; public set; }
    [NullableAttribute("2")]
public string ClaimValue { get; public set; }
    [CompilerGeneratedAttribute]
public virtual int get_Id();
    [CompilerGeneratedAttribute]
public virtual void set_Id(int value);
    [CompilerGeneratedAttribute]
public virtual TKey get_UserId();
    [CompilerGeneratedAttribute]
public virtual void set_UserId(TKey value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual string get_ClaimType();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual void set_ClaimType(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual string get_ClaimValue();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual void set_ClaimValue(string value);
    public virtual Claim ToClaim();
    public virtual void InitializeFromClaim(Claim claim);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Identity.IdentityUserLogin`1 : object {
    [CompilerGeneratedAttribute]
private string <LoginProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProviderKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProviderDisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private TKey <UserId>k__BackingField;
    public string LoginProvider { get; public set; }
    public string ProviderKey { get; public set; }
    [NullableAttribute("2")]
public string ProviderDisplayName { get; public set; }
    public TKey UserId { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_LoginProvider();
    [CompilerGeneratedAttribute]
public virtual void set_LoginProvider(string value);
    [CompilerGeneratedAttribute]
public virtual string get_ProviderKey();
    [CompilerGeneratedAttribute]
public virtual void set_ProviderKey(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual string get_ProviderDisplayName();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual void set_ProviderDisplayName(string value);
    [CompilerGeneratedAttribute]
public virtual TKey get_UserId();
    [CompilerGeneratedAttribute]
public virtual void set_UserId(TKey value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Identity.IdentityUserRole`1 : object {
    [CompilerGeneratedAttribute]
private TKey <UserId>k__BackingField;
    [CompilerGeneratedAttribute]
private TKey <RoleId>k__BackingField;
    public TKey UserId { get; public set; }
    public TKey RoleId { get; public set; }
    [CompilerGeneratedAttribute]
public virtual TKey get_UserId();
    [CompilerGeneratedAttribute]
public virtual void set_UserId(TKey value);
    [CompilerGeneratedAttribute]
public virtual TKey get_RoleId();
    [CompilerGeneratedAttribute]
public virtual void set_RoleId(TKey value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Identity.IdentityUserToken`1 : object {
    [CompilerGeneratedAttribute]
private TKey <UserId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LoginProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    public TKey UserId { get; public set; }
    public string LoginProvider { get; public set; }
    public string Name { get; public set; }
    [NullableAttribute("2")]
[ProtectedPersonalDataAttribute]
public string Value { get; public set; }
    [CompilerGeneratedAttribute]
public virtual TKey get_UserId();
    [CompilerGeneratedAttribute]
public virtual void set_UserId(TKey value);
    [CompilerGeneratedAttribute]
public virtual string get_LoginProvider();
    [CompilerGeneratedAttribute]
public virtual void set_LoginProvider(string value);
    [CompilerGeneratedAttribute]
public virtual string get_Name();
    [CompilerGeneratedAttribute]
public virtual void set_Name(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual string get_Value();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual void set_Value(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Microsoft.AspNetCore.Identity.RoleStoreBase`4 : object {
    private bool _disposed;
    [CompilerGeneratedAttribute]
private IdentityErrorDescriber <ErrorDescriber>k__BackingField;
    public IdentityErrorDescriber ErrorDescriber { get; public set; }
    public IQueryable`1<TRole> Roles { get; }
    public RoleStoreBase`4(IdentityErrorDescriber describer);
    [CompilerGeneratedAttribute]
public IdentityErrorDescriber get_ErrorDescriber();
    [CompilerGeneratedAttribute]
public void set_ErrorDescriber(IdentityErrorDescriber value);
    public abstract virtual Task`1<IdentityResult> CreateAsync(TRole role, CancellationToken cancellationToken);
    public abstract virtual Task`1<IdentityResult> UpdateAsync(TRole role, CancellationToken cancellationToken);
    public abstract virtual Task`1<IdentityResult> DeleteAsync(TRole role, CancellationToken cancellationToken);
    public virtual Task`1<string> GetRoleIdAsync(TRole role, CancellationToken cancellationToken);
    public virtual Task`1<string> GetRoleNameAsync(TRole role, CancellationToken cancellationToken);
    public virtual Task SetRoleNameAsync(TRole role, string roleName, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
[UnconditionalSuppressMessageAttribute("Trimming", "IL2026:Members annotated with 'RequiresUnreferencedCodeAttribute' require dynamic access otherwise can break functionality when trimming application code")]
public virtual TKey ConvertIdFromString(string id);
    public virtual string ConvertIdToString(TKey id);
    public abstract virtual Task`1<TRole> FindByIdAsync(string id, CancellationToken cancellationToken);
    public abstract virtual Task`1<TRole> FindByNameAsync(string normalizedName, CancellationToken cancellationToken);
    public virtual Task`1<string> GetNormalizedRoleNameAsync(TRole role, CancellationToken cancellationToken);
    public virtual Task SetNormalizedRoleNameAsync(TRole role, string normalizedName, CancellationToken cancellationToken);
    protected void ThrowIfDisposed();
    public sealed virtual void Dispose();
    public abstract virtual Task`1<IList`1<Claim>> GetClaimsAsync(TRole role, CancellationToken cancellationToken);
    public abstract virtual Task AddClaimAsync(TRole role, Claim claim, CancellationToken cancellationToken);
    public abstract virtual Task RemoveClaimAsync(TRole role, Claim claim, CancellationToken cancellationToken);
    public abstract virtual IQueryable`1<TRole> get_Roles();
    protected virtual TRoleClaim CreateRoleClaim(TRole role, Claim claim);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Microsoft.AspNetCore.Identity.UserStoreBase`5 : object {
    private bool _disposed;
    [CompilerGeneratedAttribute]
private IdentityErrorDescriber <ErrorDescriber>k__BackingField;
    private static string InternalLoginProvider;
    private static string AuthenticatorKeyTokenName;
    private static string RecoveryCodeTokenName;
    public IdentityErrorDescriber ErrorDescriber { get; public set; }
    public IQueryable`1<TUser> Users { get; }
    public UserStoreBase`5(IdentityErrorDescriber describer);
    [CompilerGeneratedAttribute]
public IdentityErrorDescriber get_ErrorDescriber();
    [CompilerGeneratedAttribute]
public void set_ErrorDescriber(IdentityErrorDescriber value);
    protected virtual TUserClaim CreateUserClaim(TUser user, Claim claim);
    protected virtual TUserLogin CreateUserLogin(TUser user, UserLoginInfo login);
    protected virtual TUserToken CreateUserToken(TUser user, string loginProvider, string name, string value);
    public virtual Task`1<string> GetUserIdAsync(TUser user, CancellationToken cancellationToken);
    public virtual Task`1<string> GetUserNameAsync(TUser user, CancellationToken cancellationToken);
    public virtual Task SetUserNameAsync(TUser user, string userName, CancellationToken cancellationToken);
    public virtual Task`1<string> GetNormalizedUserNameAsync(TUser user, CancellationToken cancellationToken);
    public virtual Task SetNormalizedUserNameAsync(TUser user, string normalizedName, CancellationToken cancellationToken);
    public abstract virtual Task`1<IdentityResult> CreateAsync(TUser user, CancellationToken cancellationToken);
    public abstract virtual Task`1<IdentityResult> UpdateAsync(TUser user, CancellationToken cancellationToken);
    public abstract virtual Task`1<IdentityResult> DeleteAsync(TUser user, CancellationToken cancellationToken);
    public abstract virtual Task`1<TUser> FindByIdAsync(string userId, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
[UnconditionalSuppressMessageAttribute("Trimming", "IL2026:Members annotated with 'RequiresUnreferencedCodeAttribute' require dynamic access otherwise can break functionality when trimming application code")]
public virtual TKey ConvertIdFromString(string id);
    public virtual string ConvertIdToString(TKey id);
    public abstract virtual Task`1<TUser> FindByNameAsync(string normalizedUserName, CancellationToken cancellationToken);
    public abstract virtual IQueryable`1<TUser> get_Users();
    public virtual Task SetPasswordHashAsync(TUser user, string passwordHash, CancellationToken cancellationToken);
    public virtual Task`1<string> GetPasswordHashAsync(TUser user, CancellationToken cancellationToken);
    public virtual Task`1<bool> HasPasswordAsync(TUser user, CancellationToken cancellationToken);
    protected abstract virtual Task`1<TUser> FindUserAsync(TKey userId, CancellationToken cancellationToken);
    protected abstract virtual Task`1<TUserLogin> FindUserLoginAsync(TKey userId, string loginProvider, string providerKey, CancellationToken cancellationToken);
    protected abstract virtual Task`1<TUserLogin> FindUserLoginAsync(string loginProvider, string providerKey, CancellationToken cancellationToken);
    protected void ThrowIfDisposed();
    public sealed virtual void Dispose();
    public abstract virtual Task`1<IList`1<Claim>> GetClaimsAsync(TUser user, CancellationToken cancellationToken);
    public abstract virtual Task AddClaimsAsync(TUser user, IEnumerable`1<Claim> claims, CancellationToken cancellationToken);
    public abstract virtual Task ReplaceClaimAsync(TUser user, Claim claim, Claim newClaim, CancellationToken cancellationToken);
    public abstract virtual Task RemoveClaimsAsync(TUser user, IEnumerable`1<Claim> claims, CancellationToken cancellationToken);
    public abstract virtual Task AddLoginAsync(TUser user, UserLoginInfo login, CancellationToken cancellationToken);
    public abstract virtual Task RemoveLoginAsync(TUser user, string loginProvider, string providerKey, CancellationToken cancellationToken);
    public abstract virtual Task`1<IList`1<UserLoginInfo>> GetLoginsAsync(TUser user, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Identity.UserStoreBase`5/<FindByLoginAsync>d__38")]
public virtual Task`1<TUser> FindByLoginAsync(string loginProvider, string providerKey, CancellationToken cancellationToken);
    public virtual Task`1<bool> GetEmailConfirmedAsync(TUser user, CancellationToken cancellationToken);
    public virtual Task SetEmailConfirmedAsync(TUser user, bool confirmed, CancellationToken cancellationToken);
    public virtual Task SetEmailAsync(TUser user, string email, CancellationToken cancellationToken);
    public virtual Task`1<string> GetEmailAsync(TUser user, CancellationToken cancellationToken);
    public virtual Task`1<string> GetNormalizedEmailAsync(TUser user, CancellationToken cancellationToken);
    public virtual Task SetNormalizedEmailAsync(TUser user, string normalizedEmail, CancellationToken cancellationToken);
    public abstract virtual Task`1<TUser> FindByEmailAsync(string normalizedEmail, CancellationToken cancellationToken);
    public virtual Task`1<Nullable`1<DateTimeOffset>> GetLockoutEndDateAsync(TUser user, CancellationToken cancellationToken);
    public virtual Task SetLockoutEndDateAsync(TUser user, Nullable`1<DateTimeOffset> lockoutEnd, CancellationToken cancellationToken);
    public virtual Task`1<int> IncrementAccessFailedCountAsync(TUser user, CancellationToken cancellationToken);
    public virtual Task ResetAccessFailedCountAsync(TUser user, CancellationToken cancellationToken);
    public virtual Task`1<int> GetAccessFailedCountAsync(TUser user, CancellationToken cancellationToken);
    public virtual Task`1<bool> GetLockoutEnabledAsync(TUser user, CancellationToken cancellationToken);
    public virtual Task SetLockoutEnabledAsync(TUser user, bool enabled, CancellationToken cancellationToken);
    public virtual Task SetPhoneNumberAsync(TUser user, string phoneNumber, CancellationToken cancellationToken);
    public virtual Task`1<string> GetPhoneNumberAsync(TUser user, CancellationToken cancellationToken);
    public virtual Task`1<bool> GetPhoneNumberConfirmedAsync(TUser user, CancellationToken cancellationToken);
    public virtual Task SetPhoneNumberConfirmedAsync(TUser user, bool confirmed, CancellationToken cancellationToken);
    public virtual Task SetSecurityStampAsync(TUser user, string stamp, CancellationToken cancellationToken);
    public virtual Task`1<string> GetSecurityStampAsync(TUser user, CancellationToken cancellationToken);
    public virtual Task SetTwoFactorEnabledAsync(TUser user, bool enabled, CancellationToken cancellationToken);
    public virtual Task`1<bool> GetTwoFactorEnabledAsync(TUser user, CancellationToken cancellationToken);
    public abstract virtual Task`1<IList`1<TUser>> GetUsersForClaimAsync(Claim claim, CancellationToken cancellationToken);
    protected abstract virtual Task`1<TUserToken> FindTokenAsync(TUser user, string loginProvider, string name, CancellationToken cancellationToken);
    protected abstract virtual Task AddUserTokenAsync(TUserToken token);
    protected abstract virtual Task RemoveUserTokenAsync(TUserToken token);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Identity.UserStoreBase`5/<SetTokenAsync>d__65")]
public virtual Task SetTokenAsync(TUser user, string loginProvider, string name, string value, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Identity.UserStoreBase`5/<RemoveTokenAsync>d__66")]
public virtual Task RemoveTokenAsync(TUser user, string loginProvider, string name, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Identity.UserStoreBase`5/<GetTokenAsync>d__67")]
public virtual Task`1<string> GetTokenAsync(TUser user, string loginProvider, string name, CancellationToken cancellationToken);
    public virtual Task SetAuthenticatorKeyAsync(TUser user, string key, CancellationToken cancellationToken);
    public virtual Task`1<string> GetAuthenticatorKeyAsync(TUser user, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Identity.UserStoreBase`5/<CountCodesAsync>d__73")]
public virtual Task`1<int> CountCodesAsync(TUser user, CancellationToken cancellationToken);
    public virtual Task ReplaceCodesAsync(TUser user, IEnumerable`1<string> recoveryCodes, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Identity.UserStoreBase`5/<RedeemCodeAsync>d__75")]
public virtual Task`1<bool> RedeemCodeAsync(TUser user, string code, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Microsoft.AspNetCore.Identity.UserStoreBase`8 : UserStoreBase`5<TUser, TKey, TUserClaim, TUserLogin, TUserToken> {
    public UserStoreBase`8(IdentityErrorDescriber describer);
    protected virtual TUserRole CreateUserRole(TUser user, TRole role);
    public abstract virtual Task`1<IList`1<TUser>> GetUsersInRoleAsync(string normalizedRoleName, CancellationToken cancellationToken);
    public abstract virtual Task AddToRoleAsync(TUser user, string normalizedRoleName, CancellationToken cancellationToken);
    public abstract virtual Task RemoveFromRoleAsync(TUser user, string normalizedRoleName, CancellationToken cancellationToken);
    public abstract virtual Task`1<IList`1<string>> GetRolesAsync(TUser user, CancellationToken cancellationToken);
    public abstract virtual Task`1<bool> IsInRoleAsync(TUser user, string normalizedRoleName, CancellationToken cancellationToken);
    protected abstract virtual Task`1<TRole> FindRoleAsync(string normalizedRoleName, CancellationToken cancellationToken);
    protected abstract virtual Task`1<TUserRole> FindUserRoleAsync(TKey userId, TKey roleId, CancellationToken cancellationToken);
}
internal static class Microsoft.AspNetCore.Shared.ArgumentNullThrowHelper : object {
    public static void ThrowIfNull(object argument, string paramName);
    [DoesNotReturnAttribute]
internal static void Throw(string paramName);
}
internal static class Microsoft.AspNetCore.Shared.ObjectDisposedThrowHelper : object {
    public static void ThrowIf(bool condition, object instance);
    public static void ThrowIf(bool condition, Type type);
    [DoesNotReturnAttribute]
private static void ThrowObjectDisposedException(object instance);
    [DoesNotReturnAttribute]
private static void ThrowObjectDisposedException(Type type);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
internal class System.Diagnostics.CodeAnalysis.AllowNullAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
internal class System.Diagnostics.CodeAnalysis.DisallowNullAttribute : Attribute {
}
[AttributeUsageAttribute("64")]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ParameterValue>k__BackingField;
    public bool ParameterValue { get; }
    public DoesNotReturnIfAttribute(bool parameterValue);
    [CompilerGeneratedAttribute]
public bool get_ParameterValue();
}
[AttributeUsageAttribute("28108")]
internal class System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembersAttribute : Attribute {
    [CompilerGeneratedAttribute]
private DynamicallyAccessedMemberTypes <MemberTypes>k__BackingField;
    public DynamicallyAccessedMemberTypes MemberTypes { get; }
    public DynamicallyAccessedMembersAttribute(DynamicallyAccessedMemberTypes memberTypes);
    [CompilerGeneratedAttribute]
public DynamicallyAccessedMemberTypes get_MemberTypes();
}
[FlagsAttribute]
internal enum System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes : Enum {
    public int value__;
    public static DynamicallyAccessedMemberTypes None;
    public static DynamicallyAccessedMemberTypes PublicParameterlessConstructor;
    public static DynamicallyAccessedMemberTypes PublicConstructors;
    public static DynamicallyAccessedMemberTypes NonPublicConstructors;
    public static DynamicallyAccessedMemberTypes PublicMethods;
    public static DynamicallyAccessedMemberTypes NonPublicMethods;
    public static DynamicallyAccessedMemberTypes PublicFields;
    public static DynamicallyAccessedMemberTypes NonPublicFields;
    public static DynamicallyAccessedMemberTypes PublicNestedTypes;
    public static DynamicallyAccessedMemberTypes NonPublicNestedTypes;
    public static DynamicallyAccessedMemberTypes PublicProperties;
    public static DynamicallyAccessedMemberTypes NonPublicProperties;
    public static DynamicallyAccessedMemberTypes PublicEvents;
    public static DynamicallyAccessedMemberTypes NonPublicEvents;
    public static DynamicallyAccessedMemberTypes Interfaces;
    public static DynamicallyAccessedMemberTypes All;
}
[AttributeUsageAttribute("352")]
internal class System.Diagnostics.CodeAnalysis.DynamicDependencyAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <MemberSignature>k__BackingField;
    [CompilerGeneratedAttribute]
private DynamicallyAccessedMemberTypes <MemberTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AssemblyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Condition>k__BackingField;
    public string MemberSignature { get; }
    public DynamicallyAccessedMemberTypes MemberTypes { get; }
    public Type Type { get; }
    public string TypeName { get; }
    public string AssemblyName { get; }
    public string Condition { get; public set; }
    public DynamicDependencyAttribute(string memberSignature);
    public DynamicDependencyAttribute(string memberSignature, Type type);
    public DynamicDependencyAttribute(string memberSignature, string typeName, string assemblyName);
    public DynamicDependencyAttribute(DynamicallyAccessedMemberTypes memberTypes, Type type);
    public DynamicDependencyAttribute(DynamicallyAccessedMemberTypes memberTypes, string typeName, string assemblyName);
    [CompilerGeneratedAttribute]
public string get_MemberSignature();
    [CompilerGeneratedAttribute]
public DynamicallyAccessedMemberTypes get_MemberTypes();
    [CompilerGeneratedAttribute]
public Type get_Type();
    [CompilerGeneratedAttribute]
public string get_TypeName();
    [CompilerGeneratedAttribute]
public string get_AssemblyName();
    [CompilerGeneratedAttribute]
public string get_Condition();
    [CompilerGeneratedAttribute]
public void set_Condition(string value);
}
[AttributeUsageAttribute("10624")]
internal class System.Diagnostics.CodeAnalysis.MaybeNullAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public MaybeNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[AttributeUsageAttribute("192")]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public String[] Members { get; }
    public MemberNotNullAttribute(string member);
    public MemberNotNullAttribute(String[] members);
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[AttributeUsageAttribute("192")]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public bool ReturnValue { get; }
    public String[] Members { get; }
    public MemberNotNullWhenAttribute(bool returnValue, string member);
    public MemberNotNullWhenAttribute(bool returnValue, String[] members);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[AttributeUsageAttribute("10624")]
internal class System.Diagnostics.CodeAnalysis.NotNullAttribute : Attribute {
}
[AttributeUsageAttribute("10368")]
internal class System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ParameterName>k__BackingField;
    public string ParameterName { get; }
    public NotNullIfNotNullAttribute(string parameterName);
    [CompilerGeneratedAttribute]
public string get_ParameterName();
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.NotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public NotNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[AttributeUsageAttribute("100")]
internal class System.Diagnostics.CodeAnalysis.RequiresDynamicCodeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    public string Message { get; }
    public string Url { get; public set; }
    public RequiresDynamicCodeAttribute(string message);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
}
[AttributeUsageAttribute("100")]
internal class System.Diagnostics.CodeAnalysis.RequiresUnreferencedCodeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    public string Message { get; }
    public string Url { get; public set; }
    public RequiresUnreferencedCodeAttribute(string message);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
}
[AttributeUsageAttribute("32767")]
internal class System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Category>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CheckId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scope>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Target>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MessageId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Justification>k__BackingField;
    public string Category { get; }
    public string CheckId { get; }
    public string Scope { get; public set; }
    public string Target { get; public set; }
    public string MessageId { get; public set; }
    public string Justification { get; public set; }
    public UnconditionalSuppressMessageAttribute(string category, string checkId);
    [CompilerGeneratedAttribute]
public string get_Category();
    [CompilerGeneratedAttribute]
public string get_CheckId();
    [CompilerGeneratedAttribute]
public string get_Scope();
    [CompilerGeneratedAttribute]
public void set_Scope(string value);
    [CompilerGeneratedAttribute]
public string get_Target();
    [CompilerGeneratedAttribute]
public void set_Target(string value);
    [CompilerGeneratedAttribute]
public string get_MessageId();
    [CompilerGeneratedAttribute]
public void set_MessageId(string value);
    [CompilerGeneratedAttribute]
public string get_Justification();
    [CompilerGeneratedAttribute]
public void set_Justification(string value);
}
[AttributeUsageAttribute("2048")]
internal class System.Runtime.CompilerServices.CallerArgumentExpressionAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ParameterName>k__BackingField;
    public string ParameterName { get; }
    public CallerArgumentExpressionAttribute(string parameterName);
    [CompilerGeneratedAttribute]
public string get_ParameterName();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.NullablePublicOnlyAttribute : Attribute {
    public bool IncludesInternals;
    public NullablePublicOnlyAttribute(bool );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
