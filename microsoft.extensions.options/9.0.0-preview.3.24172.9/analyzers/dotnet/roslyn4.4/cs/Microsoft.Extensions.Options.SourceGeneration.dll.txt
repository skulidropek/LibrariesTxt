internal static class FxResources.Microsoft.Extensions.Options.SourceGeneration.SR : object {
}
[ExtensionAttribute]
internal static class Microsoft.CodeAnalysis.DotnetRuntime.Extensions.RoslynExtensions : object {
    [ExtensionAttribute]
public static INamedTypeSymbol GetBestTypeByMetadataName(Compilation compilation, string fullyQualifiedMetadataName);
    [ExtensionAttribute]
public static INamedTypeSymbol GetBestTypeByMetadataName(Compilation compilation, Type type);
    [ExtensionAttribute]
private static SymbolVisibility GetResultantVisibility(ISymbol symbol);
    [ExtensionAttribute]
internal static bool HasAttributeSuffix(string name, bool isCaseSensitive);
    [ExtensionAttribute]
public static ImmutableArray`1<T> ToImmutableArray(ReadOnlySpan`1<T> span);
    [ExtensionAttribute]
public static SimpleNameSyntax GetUnqualifiedName(NameSyntax name);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
internal class Microsoft.Extensions.Options.Generators.DiagDescriptors : DiagDescriptorsBase {
    private static string Category;
    [CompilerGeneratedAttribute]
private static DiagnosticDescriptor <CantUseWithGenericTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private static DiagnosticDescriptor <NoEligibleMember>k__BackingField;
    [CompilerGeneratedAttribute]
private static DiagnosticDescriptor <NoEligibleMembersFromValidator>k__BackingField;
    [CompilerGeneratedAttribute]
private static DiagnosticDescriptor <DoesntImplementIValidateOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private static DiagnosticDescriptor <AlreadyImplementsValidateMethod>k__BackingField;
    [CompilerGeneratedAttribute]
private static DiagnosticDescriptor <MemberIsInaccessible>k__BackingField;
    [CompilerGeneratedAttribute]
private static DiagnosticDescriptor <NotEnumerableType>k__BackingField;
    [CompilerGeneratedAttribute]
private static DiagnosticDescriptor <ValidatorsNeedSimpleConstructor>k__BackingField;
    [CompilerGeneratedAttribute]
private static DiagnosticDescriptor <CantBeStaticClass>k__BackingField;
    [CompilerGeneratedAttribute]
private static DiagnosticDescriptor <NullValidatorType>k__BackingField;
    [CompilerGeneratedAttribute]
private static DiagnosticDescriptor <CircularTypeReferences>k__BackingField;
    [CompilerGeneratedAttribute]
private static DiagnosticDescriptor <PotentiallyMissingTransitiveValidation>k__BackingField;
    [CompilerGeneratedAttribute]
private static DiagnosticDescriptor <PotentiallyMissingEnumerableValidation>k__BackingField;
    [CompilerGeneratedAttribute]
private static DiagnosticDescriptor <CantValidateStaticOrConstMember>k__BackingField;
    [CompilerGeneratedAttribute]
private static DiagnosticDescriptor <InaccessibleValidationAttribute>k__BackingField;
    [CompilerGeneratedAttribute]
private static DiagnosticDescriptor <OptionsUnsupportedLanguageVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private static DiagnosticDescriptor <IncompatibleWithTypeForValidationAttribute>k__BackingField;
    public static DiagnosticDescriptor CantUseWithGenericTypes { get; }
    public static DiagnosticDescriptor NoEligibleMember { get; }
    public static DiagnosticDescriptor NoEligibleMembersFromValidator { get; }
    public static DiagnosticDescriptor DoesntImplementIValidateOptions { get; }
    public static DiagnosticDescriptor AlreadyImplementsValidateMethod { get; }
    public static DiagnosticDescriptor MemberIsInaccessible { get; }
    public static DiagnosticDescriptor NotEnumerableType { get; }
    public static DiagnosticDescriptor ValidatorsNeedSimpleConstructor { get; }
    public static DiagnosticDescriptor CantBeStaticClass { get; }
    public static DiagnosticDescriptor NullValidatorType { get; }
    public static DiagnosticDescriptor CircularTypeReferences { get; }
    public static DiagnosticDescriptor PotentiallyMissingTransitiveValidation { get; }
    public static DiagnosticDescriptor PotentiallyMissingEnumerableValidation { get; }
    public static DiagnosticDescriptor CantValidateStaticOrConstMember { get; }
    public static DiagnosticDescriptor InaccessibleValidationAttribute { get; }
    public static DiagnosticDescriptor OptionsUnsupportedLanguageVersion { get; }
    public static DiagnosticDescriptor IncompatibleWithTypeForValidationAttribute { get; }
    private static DiagDescriptors();
    [CompilerGeneratedAttribute]
public static DiagnosticDescriptor get_CantUseWithGenericTypes();
    [CompilerGeneratedAttribute]
public static DiagnosticDescriptor get_NoEligibleMember();
    [CompilerGeneratedAttribute]
public static DiagnosticDescriptor get_NoEligibleMembersFromValidator();
    [CompilerGeneratedAttribute]
public static DiagnosticDescriptor get_DoesntImplementIValidateOptions();
    [CompilerGeneratedAttribute]
public static DiagnosticDescriptor get_AlreadyImplementsValidateMethod();
    [CompilerGeneratedAttribute]
public static DiagnosticDescriptor get_MemberIsInaccessible();
    [CompilerGeneratedAttribute]
public static DiagnosticDescriptor get_NotEnumerableType();
    [CompilerGeneratedAttribute]
public static DiagnosticDescriptor get_ValidatorsNeedSimpleConstructor();
    [CompilerGeneratedAttribute]
public static DiagnosticDescriptor get_CantBeStaticClass();
    [CompilerGeneratedAttribute]
public static DiagnosticDescriptor get_NullValidatorType();
    [CompilerGeneratedAttribute]
public static DiagnosticDescriptor get_CircularTypeReferences();
    [CompilerGeneratedAttribute]
public static DiagnosticDescriptor get_PotentiallyMissingTransitiveValidation();
    [CompilerGeneratedAttribute]
public static DiagnosticDescriptor get_PotentiallyMissingEnumerableValidation();
    [CompilerGeneratedAttribute]
public static DiagnosticDescriptor get_CantValidateStaticOrConstMember();
    [CompilerGeneratedAttribute]
public static DiagnosticDescriptor get_InaccessibleValidationAttribute();
    [CompilerGeneratedAttribute]
public static DiagnosticDescriptor get_OptionsUnsupportedLanguageVersion();
    [CompilerGeneratedAttribute]
public static DiagnosticDescriptor get_IncompatibleWithTypeForValidationAttribute();
}
internal class Microsoft.Extensions.Options.Generators.DiagDescriptorsBase : object {
    protected static DiagnosticDescriptor Make(string id, string title, string messageFormat, string category, DiagnosticSeverity defaultSeverity, bool isEnabledByDefault);
}
internal class Microsoft.Extensions.Options.Generators.Emitter : EmitterBase {
    private static string StaticFieldHolderClassesNamespace;
    internal static string StaticGeneratedValidationAttributesClassesNamespace;
    internal static string StaticAttributeClassNamePrefix;
    internal static string StaticGeneratedMaxLengthAttributeClassesName;
    private static string StaticListType;
    private static string StaticValidationResultType;
    private static string StaticValidationAttributeType;
    private static string StaticValidationContextType;
    private string _staticValidationAttributeHolderClassName;
    private string _staticValidatorHolderClassName;
    private string _staticValidationAttributeHolderClassFQN;
    private string _staticValidatorHolderClassFQN;
    private string _TryGetValueNullableAnnotation;
    private SymbolHolder _symbolHolder;
    private OptionsSourceGenContext _optionsSourceGenContext;
    public Emitter(Compilation compilation, SymbolHolder symbolHolder, OptionsSourceGenContext optionsSourceGenContext, bool emitPreamble);
    public string Emit(IEnumerable`1<ValidatorType> validatorTypes, CancellationToken cancellationToken);
    private static string GetNullableAnnotationStringForTryValidateValueToUseInGeneratedCode(Compilation compilation);
    private void GenValidatorType(ValidatorType vt, Dictionary`2& staticValidationAttributesDict, Dictionary`2& staticValidatorsDict);
    private void GenStaticClassWithStaticReadonlyFields(IEnumerable`1<StaticFieldInfo> staticFields, string classNamespace, string className);
    public void EmitMaxLengthAttribute(string modifier, string prefix, string className, string linesToInsert, string suffix);
    public void EmitMinLengthAttribute(string modifier, string prefix, string className, string linesToInsert, string suffix);
    public void EmitLengthAttribute(string modifier, string prefix, string className, string linesToInsert, string suffix);
    public void EmitCompareAttribute(string modifier, string prefix, string className, string linesToInsert, string suffix);
    public void EmitRangeAttribute(string modifier, string prefix, string className, string suffix, bool emitTimeSpanSupport);
    private string GenerateStronglyTypedCodeForLengthAttributes(HashSet`1<object> data);
    private string GenerateStronglyTypedCodeForCompareAttribute(HashSet`1<object> data);
    private void GenValidationAttributesClasses();
    private void GenModelSelfValidationIfNecessary(ValidatedModel modelToValidate, string modelName);
    private void GenModelValidationMethod(ValidatedModel modelToValidate, bool makeStatic, Dictionary`2& staticValidationAttributesDict, Dictionary`2& staticValidatorsDict);
    private void GenMemberValidation(ValidatedMember vm, string modelName, Dictionary`2& staticValidationAttributesDict, bool cleanListsBeforeUse);
    private StaticFieldInfo GetOrAddStaticValidationAttribute(Dictionary`2& staticValidationAttributesDict, ValidationAttributeInfo attr);
    private void GenTransitiveValidation(ValidatedMember vm, string modelName, Dictionary`2& staticValidatorsDict);
    private void GenEnumerationValidation(ValidatedMember vm, string modelName, Dictionary`2& staticValidatorsDict);
    private StaticFieldInfo GetOrAddStaticValidator(Dictionary`2& staticValidatorsDict, string validatorTypeFQN);
}
internal class Microsoft.Extensions.Options.Generators.EmitterBase : object {
    [CompilerGeneratedAttribute]
private static string <GeneratedCodeAttribute>k__BackingField;
    [CompilerGeneratedAttribute]
private static string <FilePreamble>k__BackingField;
    private static int DefaultStringBuilderCapacity;
    private static int IndentChars;
    private StringBuilder _sb;
    private String[] _padding;
    private int _indent;
    public static string GeneratedCodeAttribute { get; }
    public static string FilePreamble { get; }
    public EmitterBase(bool emitPreamble);
    private static EmitterBase();
    [CompilerGeneratedAttribute]
public static string get_GeneratedCodeAttribute();
    [CompilerGeneratedAttribute]
public static string get_FilePreamble();
    protected void OutOpenBrace();
    protected void OutCloseBrace();
    protected void OutCloseBraceWithExtra(string extra);
    protected void OutIndent();
    protected string GetPaddingString(byte indent);
    protected void OutLn();
    protected void OutLn(string line);
    protected void OutPP(string line);
    protected void OutEnumeration(IEnumerable`1<string> e);
    protected void Out(string text);
    protected void Out(char ch);
    protected void Indent();
    protected void Unindent();
    protected void OutGeneratedCodeAttribute();
    protected string Capture();
}
internal class Microsoft.Extensions.Options.Generators.OptionsSourceGenContext : object {
    [CompilerGeneratedAttribute]
private string <Suffix>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClassModifier>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsLangVersion11AndAbove>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, HashSet`1<object>> <AttributesToGenerate>k__BackingField;
    internal string Suffix { get; }
    internal string ClassModifier { get; }
    internal bool IsLangVersion11AndAbove { get; }
    internal Dictionary`2<string, HashSet`1<object>> AttributesToGenerate { get; internal set; }
    public OptionsSourceGenContext(Compilation compilation);
    [CompilerGeneratedAttribute]
internal string get_Suffix();
    [CompilerGeneratedAttribute]
internal string get_ClassModifier();
    [CompilerGeneratedAttribute]
internal bool get_IsLangVersion11AndAbove();
    [CompilerGeneratedAttribute]
internal Dictionary`2<string, HashSet`1<object>> get_AttributesToGenerate();
    [CompilerGeneratedAttribute]
internal void set_AttributesToGenerate(Dictionary`2<string, HashSet`1<object>> value);
    internal void EnsureTrackingAttribute(string attributeName, bool createValue, HashSet`1& value);
    internal static bool IsConvertibleBasicType(ITypeSymbol typeSymbol);
    internal static int GetNonRandomizedHashCode(string s);
}
[GeneratorAttribute]
public class Microsoft.Extensions.Options.Generators.OptionsValidatorGenerator : object {
    public sealed virtual void Initialize(IncrementalGeneratorInitializationContext context);
    private static void HandleAnnotatedTypes(Compilation compilation, ImmutableArray`1<ValueTuple`2<TypeDeclarationSyntax, SemanticModel>> types, SourceProductionContext context);
}
internal class Microsoft.Extensions.Options.Generators.Parser : object {
    private static int NumValidationMethodArgs;
    private CancellationToken _cancellationToken;
    private Compilation _compilation;
    private Action`1<Diagnostic> _reportDiagnostic;
    private SymbolHolder _symbolHolder;
    private OptionsSourceGenContext _optionsSourceGenContext;
    private Dictionary`2<ITypeSymbol, ValidatorType> _synthesizedValidators;
    private HashSet`1<ITypeSymbol> _visitedModelTypes;
    private static Char[] _specialChars;
    public Parser(Compilation compilation, Action`1<Diagnostic> reportDiagnostic, SymbolHolder symbolHolder, OptionsSourceGenContext optionsSourceGenContext, CancellationToken cancellationToken);
    private static Parser();
    public IReadOnlyList`1<ValidatorType> GetValidatorTypes(IEnumerable`1<ValueTuple`2<TypeDeclarationSyntax, SemanticModel>> classes);
    private static bool IsAllowedKind(SyntaxKind kind);
    private static string GetTypeKeyword(ITypeSymbol type);
    private static string GetTypeKeyword(TypeDeclarationSyntax type);
    private static string GetFQN(ISymbol type);
    private static string GetMinimalFQN(ISymbol type);
    private static string GetMinimalFQNWithoutGenerics(ISymbol type);
    private static bool AlreadyImplementsValidateMethod(INamespaceOrTypeSymbol validatorType, ISymbol modelType);
    private static bool HasOpenGenerics(ITypeSymbol type, String& genericType);
    private ITypeSymbol GetEnumeratedType(ITypeSymbol type);
    private List`1<ValidatedMember> GetMembersToValidate(ITypeSymbol modelType, bool speculate, Location lowerLocationInCompilation, ITypeSymbol validatorType);
    private ValidatedMember GetMemberInfo(ISymbol member, bool speculate, Location location, ITypeSymbol modelType, ITypeSymbol validatorType);
    private bool LengthBasedAttributeIsTrackedForSubstitution(ITypeSymbol memberType, Location location, ITypeSymbol attributeType, String& attributeFullQualifiedName);
    private void TrackCompareAttributeForSubstitution(AttributeData attribute, ITypeSymbol modelType, String& attributeFullQualifiedName);
    private void TrackRangeAttributeForSubstitution(AttributeData attribute, ITypeSymbol memberType, String& attributeFullQualifiedName);
    private string AddSynthesizedValidator(ITypeSymbol modelType, ISymbol member, Location location, ITypeSymbol validatorType);
    private bool ConvertTo(ITypeSymbol source, ITypeSymbol dest);
    private bool ModelSelfValidates(ITypeSymbol modelType);
    private List`1<ITypeSymbol> GetModelTypes(ITypeSymbol validatorType);
    private bool CanValidate(ITypeSymbol validatorType, ISymbol modelType);
    private string GetArrayArgumentExpression(ImmutableArray`1<TypedConstant> value, bool isParams);
    private string GetArgumentExpression(ITypeSymbol type, object value);
    private static string EscapeString(string s);
    private void Diag(DiagnosticDescriptor desc, Location location);
    private void Diag(DiagnosticDescriptor desc, Location location, Object[] messageArgs);
}
[ExtensionAttribute]
internal static class Microsoft.Extensions.Options.Generators.ParserUtilities : object {
    internal static AttributeData GetSymbolAttributeAnnotationOrDefault(ISymbol attribute, ISymbol symbol);
    internal static bool PropertyHasModifier(ISymbol property, SyntaxKind modifierToSearch, CancellationToken token);
    [ExtensionAttribute]
internal static Location GetLocation(ISymbol symbol);
    internal static bool IsBaseOrIdentity(ITypeSymbol source, ITypeSymbol dest, Compilation comp);
    [ExtensionAttribute]
internal static bool ImplementsInterface(ITypeSymbol type, ITypeSymbol interfaceType);
    internal static bool TypeHasProperty(ITypeSymbol typeSymbol, string propertyName, SpecialType returnType);
    [ExtensionAttribute]
internal static bool IsNullableOfT(ITypeSymbol type);
}
internal class Microsoft.Extensions.Options.Generators.SymbolHolder : object {
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <OptionsValidatorSymbol>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <ValidationAttributeSymbol>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <MaxLengthAttributeSymbol>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <MinLengthAttributeSymbol>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <CompareAttributeSymbol>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <LengthAttributeSymbol>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <UnconditionalSuppressMessageAttributeSymbol>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <RangeAttributeSymbol>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <ICollectionSymbol>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <DataTypeAttributeSymbol>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <ValidateOptionsSymbol>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <IValidatableObjectSymbol>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <GenericIEnumerableSymbol>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <TypeSymbol>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <TimeSpanSymbol>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <ValidateObjectMembersAttributeSymbol>k__BackingField;
    [CompilerGeneratedAttribute]
private INamedTypeSymbol <ValidateEnumeratedItemsAttributeSymbol>k__BackingField;
    [CompilerGeneratedAttribute]
private Type EqualityContract { get; }
    public INamedTypeSymbol OptionsValidatorSymbol { get; public set; }
    public INamedTypeSymbol ValidationAttributeSymbol { get; public set; }
    public INamedTypeSymbol MaxLengthAttributeSymbol { get; public set; }
    public INamedTypeSymbol MinLengthAttributeSymbol { get; public set; }
    public INamedTypeSymbol CompareAttributeSymbol { get; public set; }
    public INamedTypeSymbol LengthAttributeSymbol { get; public set; }
    public INamedTypeSymbol UnconditionalSuppressMessageAttributeSymbol { get; public set; }
    public INamedTypeSymbol RangeAttributeSymbol { get; public set; }
    public INamedTypeSymbol ICollectionSymbol { get; public set; }
    public INamedTypeSymbol DataTypeAttributeSymbol { get; public set; }
    public INamedTypeSymbol ValidateOptionsSymbol { get; public set; }
    public INamedTypeSymbol IValidatableObjectSymbol { get; public set; }
    public INamedTypeSymbol GenericIEnumerableSymbol { get; public set; }
    public INamedTypeSymbol TypeSymbol { get; public set; }
    public INamedTypeSymbol TimeSpanSymbol { get; public set; }
    public INamedTypeSymbol ValidateObjectMembersAttributeSymbol { get; public set; }
    public INamedTypeSymbol ValidateEnumeratedItemsAttributeSymbol { get; public set; }
    public SymbolHolder(INamedTypeSymbol OptionsValidatorSymbol, INamedTypeSymbol ValidationAttributeSymbol, INamedTypeSymbol MaxLengthAttributeSymbol, INamedTypeSymbol MinLengthAttributeSymbol, INamedTypeSymbol CompareAttributeSymbol, INamedTypeSymbol LengthAttributeSymbol, INamedTypeSymbol UnconditionalSuppressMessageAttributeSymbol, INamedTypeSymbol RangeAttributeSymbol, INamedTypeSymbol ICollectionSymbol, INamedTypeSymbol DataTypeAttributeSymbol, INamedTypeSymbol ValidateOptionsSymbol, INamedTypeSymbol IValidatableObjectSymbol, INamedTypeSymbol GenericIEnumerableSymbol, INamedTypeSymbol TypeSymbol, INamedTypeSymbol TimeSpanSymbol, INamedTypeSymbol ValidateObjectMembersAttributeSymbol, INamedTypeSymbol ValidateEnumeratedItemsAttributeSymbol);
    [CompilerGeneratedAttribute]
private SymbolHolder(SymbolHolder original);
    [CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_OptionsValidatorSymbol();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_OptionsValidatorSymbol(INamedTypeSymbol value);
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_ValidationAttributeSymbol();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ValidationAttributeSymbol(INamedTypeSymbol value);
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_MaxLengthAttributeSymbol();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_MaxLengthAttributeSymbol(INamedTypeSymbol value);
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_MinLengthAttributeSymbol();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_MinLengthAttributeSymbol(INamedTypeSymbol value);
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_CompareAttributeSymbol();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_CompareAttributeSymbol(INamedTypeSymbol value);
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_LengthAttributeSymbol();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_LengthAttributeSymbol(INamedTypeSymbol value);
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_UnconditionalSuppressMessageAttributeSymbol();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_UnconditionalSuppressMessageAttributeSymbol(INamedTypeSymbol value);
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_RangeAttributeSymbol();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_RangeAttributeSymbol(INamedTypeSymbol value);
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_ICollectionSymbol();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ICollectionSymbol(INamedTypeSymbol value);
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_DataTypeAttributeSymbol();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_DataTypeAttributeSymbol(INamedTypeSymbol value);
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_ValidateOptionsSymbol();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ValidateOptionsSymbol(INamedTypeSymbol value);
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_IValidatableObjectSymbol();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IValidatableObjectSymbol(INamedTypeSymbol value);
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_GenericIEnumerableSymbol();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_GenericIEnumerableSymbol(INamedTypeSymbol value);
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_TypeSymbol();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_TypeSymbol(INamedTypeSymbol value);
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_TimeSpanSymbol();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_TimeSpanSymbol(INamedTypeSymbol value);
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_ValidateObjectMembersAttributeSymbol();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ValidateObjectMembersAttributeSymbol(INamedTypeSymbol value);
    [CompilerGeneratedAttribute]
public INamedTypeSymbol get_ValidateEnumeratedItemsAttributeSymbol();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ValidateEnumeratedItemsAttributeSymbol(INamedTypeSymbol value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(SymbolHolder left, SymbolHolder right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(SymbolHolder left, SymbolHolder right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(SymbolHolder other);
    [CompilerGeneratedAttribute]
public SymbolHolder <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(INamedTypeSymbol& OptionsValidatorSymbol, INamedTypeSymbol& ValidationAttributeSymbol, INamedTypeSymbol& MaxLengthAttributeSymbol, INamedTypeSymbol& MinLengthAttributeSymbol, INamedTypeSymbol& CompareAttributeSymbol, INamedTypeSymbol& LengthAttributeSymbol, INamedTypeSymbol& UnconditionalSuppressMessageAttributeSymbol, INamedTypeSymbol& RangeAttributeSymbol, INamedTypeSymbol& ICollectionSymbol, INamedTypeSymbol& DataTypeAttributeSymbol, INamedTypeSymbol& ValidateOptionsSymbol, INamedTypeSymbol& IValidatableObjectSymbol, INamedTypeSymbol& GenericIEnumerableSymbol, INamedTypeSymbol& TypeSymbol, INamedTypeSymbol& TimeSpanSymbol, INamedTypeSymbol& ValidateObjectMembersAttributeSymbol, INamedTypeSymbol& ValidateEnumeratedItemsAttributeSymbol);
}
internal static class Microsoft.Extensions.Options.Generators.SymbolLoader : object {
    public static string OptionsValidatorAttribute;
    internal static string ValidationAttribute;
    internal static string MaxLengthAttribute;
    internal static string MinLengthAttribute;
    internal static string CompareAttribute;
    internal static string LengthAttribute;
    internal static string RangeAttribute;
    internal static string ICollectionType;
    internal static string DataTypeAttribute;
    internal static string IValidatableObjectType;
    internal static string IValidateOptionsType;
    internal static string TypeOfType;
    internal static string TimeSpanType;
    internal static string ValidateObjectMembersAttribute;
    internal static string ValidateEnumeratedItemsAttribute;
    internal static string GenericIEnumerableType;
    internal static string UnconditionalSuppressMessageAttributeType;
    public static bool TryLoad(Compilation compilation, SymbolHolder& symbolHolder);
    [CompilerGeneratedAttribute]
internal static INamedTypeSymbol <TryLoad>g__GetSymbol|17_0(string metadataName, <>c__DisplayClass17_0& );
}
internal class Microsoft.Extensions.Options.Generators.TypeDeclarationSyntaxReceiver : object {
    [CompilerGeneratedAttribute]
private ICollection`1<TypeDeclarationSyntax> <TypeDeclarations>k__BackingField;
    public ICollection`1<TypeDeclarationSyntax> TypeDeclarations { get; }
    internal static ISyntaxReceiver Create();
    [CompilerGeneratedAttribute]
public ICollection`1<TypeDeclarationSyntax> get_TypeDeclarations();
    public sealed virtual void OnVisitSyntaxNode(SyntaxNode syntaxNode);
}
internal class Microsoft.Extensions.Options.Generators.ValidatedMember : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ValidationAttributeInfo> <ValidationAttributes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TransValidatorType>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <TransValidateTypeIsSynthetic>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EnumerationValidatorType>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnumerationValidatorTypeIsSynthetic>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsNullable>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsValueType>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnumeratedIsNullable>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnumeratedIsValueType>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnumeratedMayBeNull>k__BackingField;
    [CompilerGeneratedAttribute]
private Type EqualityContract { get; }
    public string Name { get; public set; }
    public List`1<ValidationAttributeInfo> ValidationAttributes { get; public set; }
    public string TransValidatorType { get; public set; }
    public bool TransValidateTypeIsSynthetic { get; public set; }
    public string EnumerationValidatorType { get; public set; }
    public bool EnumerationValidatorTypeIsSynthetic { get; public set; }
    public bool IsNullable { get; public set; }
    public bool IsValueType { get; public set; }
    public bool EnumeratedIsNullable { get; public set; }
    public bool EnumeratedIsValueType { get; public set; }
    public bool EnumeratedMayBeNull { get; public set; }
    public ValidatedMember(string Name, List`1<ValidationAttributeInfo> ValidationAttributes, string TransValidatorType, bool TransValidateTypeIsSynthetic, string EnumerationValidatorType, bool EnumerationValidatorTypeIsSynthetic, bool IsNullable, bool IsValueType, bool EnumeratedIsNullable, bool EnumeratedIsValueType, bool EnumeratedMayBeNull);
    [CompilerGeneratedAttribute]
private ValidatedMember(ValidatedMember original);
    [CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Name(string value);
    [CompilerGeneratedAttribute]
public List`1<ValidationAttributeInfo> get_ValidationAttributes();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ValidationAttributes(List`1<ValidationAttributeInfo> value);
    [CompilerGeneratedAttribute]
public string get_TransValidatorType();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_TransValidatorType(string value);
    [CompilerGeneratedAttribute]
public bool get_TransValidateTypeIsSynthetic();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_TransValidateTypeIsSynthetic(bool value);
    [CompilerGeneratedAttribute]
public string get_EnumerationValidatorType();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_EnumerationValidatorType(string value);
    [CompilerGeneratedAttribute]
public bool get_EnumerationValidatorTypeIsSynthetic();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_EnumerationValidatorTypeIsSynthetic(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsNullable();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IsNullable(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsValueType();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IsValueType(bool value);
    [CompilerGeneratedAttribute]
public bool get_EnumeratedIsNullable();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_EnumeratedIsNullable(bool value);
    [CompilerGeneratedAttribute]
public bool get_EnumeratedIsValueType();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_EnumeratedIsValueType(bool value);
    [CompilerGeneratedAttribute]
public bool get_EnumeratedMayBeNull();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_EnumeratedMayBeNull(bool value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(ValidatedMember left, ValidatedMember right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(ValidatedMember left, ValidatedMember right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(ValidatedMember other);
    [CompilerGeneratedAttribute]
public ValidatedMember <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(String& Name, List`1& ValidationAttributes, String& TransValidatorType, Boolean& TransValidateTypeIsSynthetic, String& EnumerationValidatorType, Boolean& EnumerationValidatorTypeIsSynthetic, Boolean& IsNullable, Boolean& IsValueType, Boolean& EnumeratedIsNullable, Boolean& EnumeratedIsValueType, Boolean& EnumeratedMayBeNull);
}
internal class Microsoft.Extensions.Options.Generators.ValidatedModel : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SimpleName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SelfValidates>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ValidatedMember> <MembersToValidate>k__BackingField;
    [CompilerGeneratedAttribute]
private Type EqualityContract { get; }
    public string Name { get; public set; }
    public string SimpleName { get; public set; }
    public bool SelfValidates { get; public set; }
    public List`1<ValidatedMember> MembersToValidate { get; public set; }
    public ValidatedModel(string Name, string SimpleName, bool SelfValidates, List`1<ValidatedMember> MembersToValidate);
    [CompilerGeneratedAttribute]
private ValidatedModel(ValidatedModel original);
    [CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_SimpleName();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_SimpleName(string value);
    [CompilerGeneratedAttribute]
public bool get_SelfValidates();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_SelfValidates(bool value);
    [CompilerGeneratedAttribute]
public List`1<ValidatedMember> get_MembersToValidate();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_MembersToValidate(List`1<ValidatedMember> value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(ValidatedModel left, ValidatedModel right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(ValidatedModel left, ValidatedModel right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(ValidatedModel other);
    [CompilerGeneratedAttribute]
public ValidatedModel <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(String& Name, String& SimpleName, Boolean& SelfValidates, List`1& MembersToValidate);
}
internal class Microsoft.Extensions.Options.Generators.ValidationAttributeInfo : object {
    [CompilerGeneratedAttribute]
private string <AttributeName>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <ConstructorArguments>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private Type EqualityContract { get; }
    public string AttributeName { get; public set; }
    public List`1<string> ConstructorArguments { get; }
    public Dictionary`2<string, string> Properties { get; }
    public ValidationAttributeInfo(string AttributeName);
    [CompilerGeneratedAttribute]
private ValidationAttributeInfo(ValidationAttributeInfo original);
    [CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public string get_AttributeName();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_AttributeName(string value);
    [CompilerGeneratedAttribute]
public List`1<string> get_ConstructorArguments();
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Properties();
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(ValidationAttributeInfo left, ValidationAttributeInfo right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(ValidationAttributeInfo left, ValidationAttributeInfo right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(ValidationAttributeInfo other);
    [CompilerGeneratedAttribute]
public ValidationAttributeInfo <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(String& AttributeName);
}
internal class Microsoft.Extensions.Options.Generators.ValidatorType : object {
    [CompilerGeneratedAttribute]
private string <Namespace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NameWithoutGenerics>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DeclarationKeyword>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <ParentTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsSynthetic>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ValidatedModel> <ModelsToValidate>k__BackingField;
    [CompilerGeneratedAttribute]
private Type EqualityContract { get; }
    public string Namespace { get; public set; }
    public string Name { get; public set; }
    public string NameWithoutGenerics { get; public set; }
    public string DeclarationKeyword { get; public set; }
    public List`1<string> ParentTypes { get; public set; }
    public bool IsSynthetic { get; public set; }
    public IList`1<ValidatedModel> ModelsToValidate { get; public set; }
    public ValidatorType(string Namespace, string Name, string NameWithoutGenerics, string DeclarationKeyword, List`1<string> ParentTypes, bool IsSynthetic, IList`1<ValidatedModel> ModelsToValidate);
    [CompilerGeneratedAttribute]
private ValidatorType(ValidatorType original);
    [CompilerGeneratedAttribute]
private Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public string get_Namespace();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Namespace(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_NameWithoutGenerics();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_NameWithoutGenerics(string value);
    [CompilerGeneratedAttribute]
public string get_DeclarationKeyword();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_DeclarationKeyword(string value);
    [CompilerGeneratedAttribute]
public List`1<string> get_ParentTypes();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ParentTypes(List`1<string> value);
    [CompilerGeneratedAttribute]
public bool get_IsSynthetic();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_IsSynthetic(bool value);
    [CompilerGeneratedAttribute]
public IList`1<ValidatedModel> get_ModelsToValidate();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ModelsToValidate(IList`1<ValidatedModel> value);
    [CompilerGeneratedAttribute]
public virtual string ToString();
    [CompilerGeneratedAttribute]
private bool PrintMembers(StringBuilder builder);
    [CompilerGeneratedAttribute]
public static bool op_Inequality(ValidatorType left, ValidatorType right);
    [CompilerGeneratedAttribute]
public static bool op_Equality(ValidatorType left, ValidatorType right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [CompilerGeneratedAttribute]
public sealed virtual bool Equals(ValidatorType other);
    [CompilerGeneratedAttribute]
public ValidatorType <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(String& Namespace, String& Name, String& NameWithoutGenerics, String& DeclarationKeyword, List`1& ParentTypes, Boolean& IsSynthetic, IList`1& ModelsToValidate);
}
[AttributeUsageAttribute("2432")]
internal class System.Diagnostics.CodeAnalysis.AllowNullAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
internal class System.Diagnostics.CodeAnalysis.DisallowNullAttribute : Attribute {
}
[AttributeUsageAttribute("64")]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ParameterValue>k__BackingField;
    public bool ParameterValue { get; }
    public DoesNotReturnIfAttribute(bool parameterValue);
    [CompilerGeneratedAttribute]
public bool get_ParameterValue();
}
[AttributeUsageAttribute("10624")]
internal class System.Diagnostics.CodeAnalysis.MaybeNullAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public MaybeNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[AttributeUsageAttribute("192")]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public String[] Members { get; }
    public MemberNotNullAttribute(string member);
    public MemberNotNullAttribute(String[] members);
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[AttributeUsageAttribute("192")]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public bool ReturnValue { get; }
    public String[] Members { get; }
    public MemberNotNullWhenAttribute(bool returnValue, string member);
    public MemberNotNullWhenAttribute(bool returnValue, String[] members);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[AttributeUsageAttribute("10624")]
internal class System.Diagnostics.CodeAnalysis.NotNullAttribute : Attribute {
}
[AttributeUsageAttribute("10368")]
internal class System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ParameterName>k__BackingField;
    public string ParameterName { get; }
    public NotNullIfNotNullAttribute(string parameterName);
    [CompilerGeneratedAttribute]
public string get_ParameterName();
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.NotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public NotNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[EditorBrowsableAttribute("1")]
internal static class System.Runtime.CompilerServices.IsExternalInit : object {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
internal static class System.SR : object {
    private static bool s_usingResourceKeys;
    private static ResourceManager s_resourceManager;
    internal static ResourceManager ResourceManager { get; }
    internal static string AlreadyImplementsValidateMethodMessage { get; }
    internal static string AlreadyImplementsValidateMethodTitle { get; }
    internal static string CantBeStaticClassMessage { get; }
    internal static string CantBeStaticClassTitle { get; }
    internal static string CantUseWithGenericTypesMessage { get; }
    internal static string CantUseWithGenericTypesTitle { get; }
    internal static string CantValidateStaticOrConstMemberMessage { get; }
    internal static string CantValidateStaticOrConstMemberTitle { get; }
    internal static string CircularTypeReferencesMessage { get; }
    internal static string CircularTypeReferencesTitle { get; }
    internal static string DoesntImplementIValidateOptionsMessage { get; }
    internal static string DoesntImplementIValidateOptionsTitle { get; }
    internal static string MemberIsInaccessibleMessage { get; }
    internal static string MemberIsInaccessibleTitle { get; }
    internal static string NoEligibleMemberMessage { get; }
    internal static string NoEligibleMembersFromValidatorMessage { get; }
    internal static string NoEligibleMembersFromValidatorTitle { get; }
    internal static string NoEligibleMemberTitle { get; }
    internal static string NotEnumerableTypeMessage { get; }
    internal static string NotEnumerableTypeTitle { get; }
    internal static string NullValidatorTypeMessage { get; }
    internal static string NullValidatorTypeTitle { get; }
    internal static string PotentiallyMissingEnumerableValidationMessage { get; }
    internal static string PotentiallyMissingEnumerableValidationTitle { get; }
    internal static string PotentiallyMissingTransitiveValidationMessage { get; }
    internal static string PotentiallyMissingTransitiveValidationTitle { get; }
    internal static string ValidatorsNeedSimpleConstructorMessage { get; }
    internal static string ValidatorsNeedSimpleConstructorTitle { get; }
    internal static string InaccessibleValidationAttributeMessage { get; }
    internal static string InaccessibleValidationAttributeTitle { get; }
    internal static string OptionsUnsupportedLanguageVersionTitle { get; }
    internal static string OptionsUnsupportedLanguageVersionMessage { get; }
    internal static string TypeCannotBeUsedWithTheValidationAttributeTitle { get; }
    internal static string TypeCannotBeUsedWithTheValidationAttributeMessage { get; }
    private static SR();
    internal static bool UsingResourceKeys();
    private static string GetResourceString(string resourceKey);
    private static string GetResourceString(string resourceKey, string defaultString);
    internal static string Format(string resourceFormat, object p1);
    internal static string Format(string resourceFormat, object p1, object p2);
    internal static string Format(string resourceFormat, object p1, object p2, object p3);
    internal static string Format(string resourceFormat, Object[] args);
    internal static string Format(IFormatProvider provider, string resourceFormat, object p1);
    internal static string Format(IFormatProvider provider, string resourceFormat, object p1, object p2);
    internal static string Format(IFormatProvider provider, string resourceFormat, object p1, object p2, object p3);
    internal static string Format(IFormatProvider provider, string resourceFormat, Object[] args);
    internal static ResourceManager get_ResourceManager();
    internal static string get_AlreadyImplementsValidateMethodMessage();
    internal static string get_AlreadyImplementsValidateMethodTitle();
    internal static string get_CantBeStaticClassMessage();
    internal static string get_CantBeStaticClassTitle();
    internal static string get_CantUseWithGenericTypesMessage();
    internal static string get_CantUseWithGenericTypesTitle();
    internal static string get_CantValidateStaticOrConstMemberMessage();
    internal static string get_CantValidateStaticOrConstMemberTitle();
    internal static string get_CircularTypeReferencesMessage();
    internal static string get_CircularTypeReferencesTitle();
    internal static string get_DoesntImplementIValidateOptionsMessage();
    internal static string get_DoesntImplementIValidateOptionsTitle();
    internal static string get_MemberIsInaccessibleMessage();
    internal static string get_MemberIsInaccessibleTitle();
    internal static string get_NoEligibleMemberMessage();
    internal static string get_NoEligibleMembersFromValidatorMessage();
    internal static string get_NoEligibleMembersFromValidatorTitle();
    internal static string get_NoEligibleMemberTitle();
    internal static string get_NotEnumerableTypeMessage();
    internal static string get_NotEnumerableTypeTitle();
    internal static string get_NullValidatorTypeMessage();
    internal static string get_NullValidatorTypeTitle();
    internal static string get_PotentiallyMissingEnumerableValidationMessage();
    internal static string get_PotentiallyMissingEnumerableValidationTitle();
    internal static string get_PotentiallyMissingTransitiveValidationMessage();
    internal static string get_PotentiallyMissingTransitiveValidationTitle();
    internal static string get_ValidatorsNeedSimpleConstructorMessage();
    internal static string get_ValidatorsNeedSimpleConstructorTitle();
    internal static string get_InaccessibleValidationAttributeMessage();
    internal static string get_InaccessibleValidationAttributeTitle();
    internal static string get_OptionsUnsupportedLanguageVersionTitle();
    internal static string get_OptionsUnsupportedLanguageVersionMessage();
    internal static string get_TypeCannotBeUsedWithTheValidationAttributeTitle();
    internal static string get_TypeCannotBeUsedWithTheValidationAttributeMessage();
}
