[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[ExtensionAttribute]
public static class Microsoft.FeatureManagement.AspNetCoreFeatureManagementBuilderExtensions : object {
    [ExtensionAttribute]
public static IFeatureManagementBuilder UseDisabledFeaturesHandler(IFeatureManagementBuilder builder, IDisabledFeaturesHandler disabledFeaturesHandler);
    [ExtensionAttribute]
public static IFeatureManagementBuilder UseDisabledFeaturesHandler(IFeatureManagementBuilder builder, Action`2<IEnumerable`1<string>, ActionExecutingContext> handler);
    [ExtensionAttribute]
public static IFeatureManagementBuilder WithTargeting(IFeatureManagementBuilder builder);
}
internal class Microsoft.FeatureManagement.DefaultHttpTargetingContextAccessor : object {
    private static object _cacheKey;
    private IHttpContextAccessor _httpContextAccessor;
    public DefaultHttpTargetingContextAccessor(IHttpContextAccessor httpContextAccessor);
    private static DefaultHttpTargetingContextAccessor();
    public sealed virtual ValueTask`1<TargetingContext> GetContextAsync();
}
internal class Microsoft.FeatureManagement.DisabledFeatureFilter : object {
    [CompilerGeneratedAttribute]
private string <FeatureName>k__BackingField;
    public string FeatureName { get; }
    public DisabledFeatureFilter(string featureName);
    [CompilerGeneratedAttribute]
public string get_FeatureName();
    public sealed virtual void OnActionExecuted(ActionExecutedContext context);
    public sealed virtual void OnActionExecuting(ActionExecutingContext context);
}
internal class Microsoft.FeatureManagement.FeatureGatedAsyncActionFilter`1 : object {
    [CompilerGeneratedAttribute]
private string <FeatureName>k__BackingField;
    public string FeatureName { get; }
    public FeatureGatedAsyncActionFilter`1(string featureName);
    [CompilerGeneratedAttribute]
public string get_FeatureName();
    [AsyncStateMachineAttribute("Microsoft.FeatureManagement.FeatureGatedAsyncActionFilter`1/<OnActionExecutionAsync>d__4")]
public sealed virtual Task OnActionExecutionAsync(ActionExecutingContext context, ActionExecutionDelegate next);
}
[ExtensionAttribute]
public static class Microsoft.FeatureManagement.FilterCollectionExtensions : object {
    [ExtensionAttribute]
public static IFilterMetadata AddForFeature(FilterCollection filters, string feature);
}
[AttributeUsageAttribute("68")]
public class Microsoft.FeatureManagement.Mvc.FeatureGateAttribute : ActionFilterAttribute {
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <Features>k__BackingField;
    [CompilerGeneratedAttribute]
private RequirementType <RequirementType>k__BackingField;
    public IEnumerable`1<string> Features { get; }
    public RequirementType RequirementType { get; }
    public FeatureGateAttribute(String[] features);
    public FeatureGateAttribute(RequirementType requirementType, String[] features);
    public FeatureGateAttribute(Object[] features);
    public FeatureGateAttribute(RequirementType requirementType, Object[] features);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_Features();
    [CompilerGeneratedAttribute]
public RequirementType get_RequirementType();
    [AsyncStateMachineAttribute("Microsoft.FeatureManagement.Mvc.FeatureGateAttribute/<OnActionExecutionAsync>d__10")]
public virtual Task OnActionExecutionAsync(ActionExecutingContext context, ActionExecutionDelegate next);
    [AsyncStateMachineAttribute("Microsoft.FeatureManagement.Mvc.FeatureGateAttribute/<OnPageHandlerExecutionAsync>d__11")]
public sealed virtual Task OnPageHandlerExecutionAsync(PageHandlerExecutingContext context, PageHandlerExecutionDelegate next);
    public sealed virtual Task OnPageHandlerSelectionAsync(PageHandlerSelectedContext context);
}
public interface Microsoft.FeatureManagement.Mvc.IDisabledFeaturesHandler {
    public abstract virtual Task HandleDisabledFeatures(IEnumerable`1<string> features, ActionExecutingContext context);
}
internal class Microsoft.FeatureManagement.Mvc.InlineDisabledFeaturesHandler : object {
    private Action`2<IEnumerable`1<string>, ActionExecutingContext> _handler;
    public InlineDisabledFeaturesHandler(Action`2<IEnumerable`1<string>, ActionExecutingContext> handler);
    public sealed virtual Task HandleDisabledFeatures(IEnumerable`1<string> features, ActionExecutingContext context);
}
internal class Microsoft.FeatureManagement.Mvc.NotFoundDisabledFeaturesHandler : object {
    public sealed virtual Task HandleDisabledFeatures(IEnumerable`1<string> features, ActionExecutingContext context);
}
public class Microsoft.FeatureManagement.Mvc.TagHelpers.FeatureTagHelper : TagHelper {
    private IVariantFeatureManager _featureManager;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private RequirementType <Requirement>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Negate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Variant>k__BackingField;
    public string Name { get; public set; }
    public RequirementType Requirement { get; public set; }
    public bool Negate { get; public set; }
    public string Variant { get; public set; }
    public FeatureTagHelper(IVariantFeatureManagerSnapshot featureManager);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public RequirementType get_Requirement();
    [CompilerGeneratedAttribute]
public void set_Requirement(RequirementType value);
    [CompilerGeneratedAttribute]
public bool get_Negate();
    [CompilerGeneratedAttribute]
public void set_Negate(bool value);
    [CompilerGeneratedAttribute]
public string get_Variant();
    [CompilerGeneratedAttribute]
public void set_Variant(string value);
    [AsyncStateMachineAttribute("Microsoft.FeatureManagement.Mvc.TagHelpers.FeatureTagHelper/<ProcessAsync>d__18")]
public virtual Task ProcessAsync(TagHelperContext context, TagHelperOutput output);
    [AsyncStateMachineAttribute("Microsoft.FeatureManagement.Mvc.TagHelpers.FeatureTagHelper/<<ProcessAsync>b__18_1>d")]
[CompilerGeneratedAttribute]
private Task`1<bool> <ProcessAsync>b__18_1(string feature);
    [AsyncStateMachineAttribute("Microsoft.FeatureManagement.Mvc.TagHelpers.FeatureTagHelper/<<ProcessAsync>b__18_2>d")]
[CompilerGeneratedAttribute]
private Task`1<bool> <ProcessAsync>b__18_2(string feature);
}
public class Microsoft.FeatureManagement.TargetingHttpContextMiddleware : object {
    private RequestDelegate _next;
    private ILogger _logger;
    private static string TargetingIdKey;
    public TargetingHttpContextMiddleware(RequestDelegate next, ILoggerFactory loggerFactory);
    [AsyncStateMachineAttribute("Microsoft.FeatureManagement.TargetingHttpContextMiddleware/<InvokeAsync>d__4")]
public Task InvokeAsync(HttpContext httpContext, ITargetingContextAccessor targetingContextAccessor);
}
[ExtensionAttribute]
public static class Microsoft.FeatureManagement.UseForFeatureExtensions : object {
    [ExtensionAttribute]
public static IApplicationBuilder UseForFeature(IApplicationBuilder app, string featureName, Action`1<IApplicationBuilder> configuration);
    [ExtensionAttribute]
public static IApplicationBuilder UseMiddlewareForFeature(IApplicationBuilder app, string featureName);
}
[ExtensionAttribute]
internal static class System.Collections.Generic.EnumerableExtensions : object {
    [AsyncStateMachineAttribute("System.Collections.Generic.EnumerableExtensions/<Any>d__0`1")]
[ExtensionAttribute]
public static Task`1<bool> Any(IEnumerable`1<TSource> source, Func`2<TSource, Task`1<bool>> predicate);
    [AsyncStateMachineAttribute("System.Collections.Generic.EnumerableExtensions/<All>d__1`1")]
[ExtensionAttribute]
public static Task`1<bool> All(IEnumerable`1<TSource> source, Func`2<TSource, Task`1<bool>> predicate);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
