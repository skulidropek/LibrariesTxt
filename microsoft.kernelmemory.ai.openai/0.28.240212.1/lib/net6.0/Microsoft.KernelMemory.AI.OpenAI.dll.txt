[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
public class Microsoft.KernelMemory.AI.OpenAI.DefaultGPTTokenizer : object {
    [NullableContextAttribute("1")]
public sealed virtual int CountTokens(string text);
    [NullableContextAttribute("1")]
public static int StaticCountTokens(string text);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Microsoft.KernelMemory.AI.OpenAI.GPT3.EmbeddedTokenizersGPT3Resource : object {
    [NullableAttribute("2")]
private static string s_namespace;
    private static EmbeddedTokenizersGPT3Resource();
    internal static string ReadBytePairEncodingTable();
    internal static string ReadEncodingTable();
    private static string Read(string fileName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Microsoft.KernelMemory.AI.OpenAI.GPT3.GPT3Settings : object {
    private static Lazy`1<Dictionary`2<string, int>> s_encoder;
    private static Lazy`1<Dictionary`2<Tuple`2<string, string>, int>> s_bpeRanks;
    internal static Dictionary`2<string, int> Encoder { get; }
    internal static Dictionary`2<Tuple`2<string, string>, int> BpeRanks { get; }
    private static GPT3Settings();
    internal static Dictionary`2<string, int> get_Encoder();
    internal static Dictionary`2<Tuple`2<string, string>, int> get_BpeRanks();
    private static Dictionary`2<Tuple`2<string, string>, int> BuildBpeRanks();
    private static Dictionary`2<string, int> BuildEncoder();
    private static Dictionary`2<Tuple`2<string, string>, int> DictZip(List`1<Tuple`2<string, string>> x, List`1<int> y);
    private static List`1<int> Range(int x, int y);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Microsoft.KernelMemory.AI.OpenAI.GPT3.GPT3Tokenizer : object {
    private static ConcurrentDictionary`2<string, string> s_bpeCache;
    [NullableAttribute("2")]
private static ConcurrentDictionary`2<int, char> s_bytesToUnicodeCache;
    private static Regex s_encodingRegex;
    private static GPT3Tokenizer();
    public static List`1<int> Encode(string text);
    public static List`1<int> Encode(StringBuilder stringBuilder);
    public static List`1<int> Encode(Char[] chars);
    public static List`1<int> Encode(IEnumerable`1<char> chars);
    private static int Ord(string x);
    private static ConcurrentDictionary`2<int, char> BytesToUnicode();
    private static string BytePairEncoding(string token);
    private static List`1<Tuple`2<string, string>> GetPairs(List`1<string> word);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.KernelMemory.AI.OpenAI.OpenAITextEmbeddingGenerator : object {
    private ITextTokenizer _textTokenizer;
    private OpenAITextEmbeddingGenerationService _client;
    private ILogger`1<OpenAITextEmbeddingGenerator> _log;
    [CompilerGeneratedAttribute]
private int <MaxTokens>k__BackingField;
    public int MaxTokens { get; }
    [NullableContextAttribute("2")]
public OpenAITextEmbeddingGenerator(OpenAIConfig config, ITextTokenizer textTokenizer, ILoggerFactory loggerFactory, HttpClient httpClient);
    [NullableContextAttribute("2")]
public OpenAITextEmbeddingGenerator(OpenAIConfig config, ITextTokenizer textTokenizer, ILogger`1<OpenAITextEmbeddingGenerator> log, HttpClient httpClient);
    [CompilerGeneratedAttribute]
public sealed virtual int get_MaxTokens();
    public sealed virtual int CountTokens(string text);
    public sealed virtual Task`1<Embedding> GenerateEmbeddingAsync(string text, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.KernelMemory.AI.OpenAI.OpenAITextGenerator : object {
    private ILogger`1<OpenAITextGenerator> _log;
    private ITextTokenizer _textTokenizer;
    private OpenAIClient _client;
    private bool _isTextModel;
    private string _model;
    [CompilerGeneratedAttribute]
private int <MaxTokenTotal>k__BackingField;
    public int MaxTokenTotal { get; }
    [NullableContextAttribute("2")]
public OpenAITextGenerator(OpenAIConfig config, ITextTokenizer textTokenizer, ILoggerFactory loggerFactory, HttpClient httpClient);
    [NullableContextAttribute("2")]
public OpenAITextGenerator(OpenAIConfig config, ITextTokenizer textTokenizer, ILogger`1<OpenAITextGenerator> log, HttpClient httpClient);
    [CompilerGeneratedAttribute]
public sealed virtual int get_MaxTokenTotal();
    public sealed virtual int CountTokens(string text);
    [AsyncIteratorStateMachineAttribute("Microsoft.KernelMemory.AI.OpenAI.OpenAITextGenerator/<GenerateTextAsync>d__11")]
public sealed virtual IAsyncEnumerable`1<string> GenerateTextAsync(string prompt, TextGenerationOptions options, CancellationToken cancellationToken);
}
internal class Microsoft.KernelMemory.AI.OpenAI.SequentialDelayStrategy : DelayStrategy {
    [NullableAttribute("1")]
private static TimeSpan[] s_pollingSequence;
    private static TimeSpan s_maxDelay;
    private static SequentialDelayStrategy();
    [NullableContextAttribute("2")]
protected virtual TimeSpan GetNextDelayCore(Response response, int retryNumber);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.KernelMemory.DependencyInjection : object {
    [ExtensionAttribute]
public static IServiceCollection AddOpenAITextEmbeddingGeneration(IServiceCollection services, OpenAIConfig config, ITextTokenizer textTokenizer, HttpClient httpClient);
    [ExtensionAttribute]
public static IServiceCollection AddOpenAITextGeneration(IServiceCollection services, OpenAIConfig config, ITextTokenizer textTokenizer, HttpClient httpClient);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.KernelMemory.KernelMemoryBuilderExtensions : object {
    private static string DefaultTextModel;
    private static int DefaultTextModelMaxToken;
    private static string DefaultEmbeddingModel;
    private static int DefaultEmbeddingModelMaxToken;
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static IKernelMemoryBuilder WithOpenAIDefaults(IKernelMemoryBuilder builder, string apiKey, string organization, ITextTokenizer textGenerationTokenizer, ITextTokenizer textEmbeddingTokenizer, ILoggerFactory loggerFactory, bool onlyForRetrieval, HttpClient httpClient);
    [ExtensionAttribute]
public static IKernelMemoryBuilder WithOpenAI(IKernelMemoryBuilder builder, OpenAIConfig config, ITextTokenizer textGenerationTokenizer, ITextTokenizer textEmbeddingTokenizer, bool onlyForRetrieval, HttpClient httpClient);
    [ExtensionAttribute]
public static IKernelMemoryBuilder WithOpenAITextEmbeddingGeneration(IKernelMemoryBuilder builder, OpenAIConfig config, ITextTokenizer textTokenizer, bool onlyForRetrieval, HttpClient httpClient);
    [ExtensionAttribute]
public static IKernelMemoryBuilder WithOpenAITextGeneration(IKernelMemoryBuilder builder, OpenAIConfig config, ITextTokenizer textTokenizer, HttpClient httpClient);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.KernelMemory.OpenAIConfig : object {
    [CompilerGeneratedAttribute]
private string <TextModel>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TextModelMaxTokenTotal>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EmbeddingModel>k__BackingField;
    [CompilerGeneratedAttribute]
private int <EmbeddingModelMaxTokenTotal>k__BackingField;
    [CompilerGeneratedAttribute]
private string <APIKey>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <OrgId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaxRetries>k__BackingField;
    public string TextModel { get; public set; }
    public int TextModelMaxTokenTotal { get; public set; }
    public string EmbeddingModel { get; public set; }
    public int EmbeddingModelMaxTokenTotal { get; public set; }
    public string APIKey { get; public set; }
    [NullableAttribute("2")]
public string OrgId { get; public set; }
    public int MaxRetries { get; public set; }
    [CompilerGeneratedAttribute]
public string get_TextModel();
    [CompilerGeneratedAttribute]
public void set_TextModel(string value);
    [CompilerGeneratedAttribute]
public int get_TextModelMaxTokenTotal();
    [CompilerGeneratedAttribute]
public void set_TextModelMaxTokenTotal(int value);
    [CompilerGeneratedAttribute]
public string get_EmbeddingModel();
    [CompilerGeneratedAttribute]
public void set_EmbeddingModel(string value);
    [CompilerGeneratedAttribute]
public int get_EmbeddingModelMaxTokenTotal();
    [CompilerGeneratedAttribute]
public void set_EmbeddingModelMaxTokenTotal(int value);
    [CompilerGeneratedAttribute]
public string get_APIKey();
    [CompilerGeneratedAttribute]
public void set_APIKey(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_OrgId();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_OrgId(string value);
    [CompilerGeneratedAttribute]
public int get_MaxRetries();
    [CompilerGeneratedAttribute]
public void set_MaxRetries(int value);
    public void Validate();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
