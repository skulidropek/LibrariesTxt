[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.KernelMemory.AzureAISearchConfig : object {
    [NullableAttribute("2")]
private TokenCredential _tokenCredential;
    [CompilerGeneratedAttribute]
private AuthTypes <Auth>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Endpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <APIKey>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseHybridSearch>k__BackingField;
    public AuthTypes Auth { get; public set; }
    public string Endpoint { get; public set; }
    public string APIKey { get; public set; }
    public bool UseHybridSearch { get; public set; }
    [CompilerGeneratedAttribute]
public AuthTypes get_Auth();
    [CompilerGeneratedAttribute]
public void set_Auth(AuthTypes value);
    [CompilerGeneratedAttribute]
public string get_Endpoint();
    [CompilerGeneratedAttribute]
public void set_Endpoint(string value);
    [CompilerGeneratedAttribute]
public string get_APIKey();
    [CompilerGeneratedAttribute]
public void set_APIKey(string value);
    [CompilerGeneratedAttribute]
public bool get_UseHybridSearch();
    [CompilerGeneratedAttribute]
public void set_UseHybridSearch(bool value);
    public void SetCredential(TokenCredential credential);
    public TokenCredential GetTokenCredential();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.KernelMemory.DependencyInjection : object {
    [ExtensionAttribute]
public static IServiceCollection AddAzureAISearchAsMemoryDb(IServiceCollection services, AzureAISearchConfig config);
    [ExtensionAttribute]
public static IServiceCollection AddAzureAISearchAsMemoryDb(IServiceCollection services, string endpoint, string apiKey);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.KernelMemory.KernelMemoryBuilderExtensions : object {
    [ExtensionAttribute]
public static IKernelMemoryBuilder WithAzureAISearchMemoryDb(IKernelMemoryBuilder builder, AzureAISearchConfig config);
    [ExtensionAttribute]
public static IKernelMemoryBuilder WithAzureAISearchMemoryDb(IKernelMemoryBuilder builder, string endpoint, string apiKey);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Microsoft.KernelMemory.MemoryDb.AzureAISearch.AzureAISearchFiltering : object {
    private static Char[] s_searchInDelimitersAvailable;
    private static AzureAISearchFiltering();
    internal static string BuildSearchFilter(IEnumerable`1<MemoryFilter> filters);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.KernelMemory.MemoryDb.AzureAISearch.AzureAISearchMemory : object {
    private ITextEmbeddingGenerator _embeddingGenerator;
    private ILogger`1<AzureAISearchMemory> _log;
    private bool _useHybridSearch;
    private static Regex s_replaceIndexNameCharsRegex;
    private ConcurrentDictionary`2<string, SearchClient> _clientsByIndex;
    private SearchIndexClient _adminClient;
    public AzureAISearchMemory(AzureAISearchConfig config, ITextEmbeddingGenerator embeddingGenerator, ILogger`1<AzureAISearchMemory> log);
    private static AzureAISearchMemory();
    public sealed virtual Task CreateIndexAsync(string index, int vectorSize, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.KernelMemory.MemoryDb.AzureAISearch.AzureAISearchMemory/<GetIndexesAsync>d__5")]
public sealed virtual Task`1<IEnumerable`1<string>> GetIndexesAsync(CancellationToken cancellationToken);
    public sealed virtual Task DeleteIndexAsync(string index, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.KernelMemory.MemoryDb.AzureAISearch.AzureAISearchMemory/<UpsertAsync>d__7")]
public sealed virtual Task`1<string> UpsertAsync(string index, MemoryRecord record, CancellationToken cancellationToken);
    [AsyncIteratorStateMachineAttribute("Microsoft.KernelMemory.MemoryDb.AzureAISearch.AzureAISearchMemory/<GetSimilarListAsync>d__8")]
public sealed virtual IAsyncEnumerable`1<ValueTuple`2<MemoryRecord, double>> GetSimilarListAsync(string index, string text, ICollection`1<MemoryFilter> filters, double minRelevance, int limit, bool withEmbeddings, CancellationToken cancellationToken);
    [AsyncIteratorStateMachineAttribute("Microsoft.KernelMemory.MemoryDb.AzureAISearch.AzureAISearchMemory/<GetListAsync>d__9")]
public sealed virtual IAsyncEnumerable`1<MemoryRecord> GetListAsync(string index, ICollection`1<MemoryFilter> filters, int limit, bool withEmbeddings, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.KernelMemory.MemoryDb.AzureAISearch.AzureAISearchMemory/<DeleteAsync>d__10")]
public sealed virtual Task DeleteAsync(string index, MemoryRecord record, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.KernelMemory.MemoryDb.AzureAISearch.AzureAISearchMemory/<CreateIndexAsync>d__11")]
private Task CreateIndexAsync(string index, MemoryDbSchema schema, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.KernelMemory.MemoryDb.AzureAISearch.AzureAISearchMemory/<DoesIndexExistAsync>d__12")]
private Task`1<bool> DoesIndexExistAsync(string index, CancellationToken cancellationToken);
    [AsyncIteratorStateMachineAttribute("Microsoft.KernelMemory.MemoryDb.AzureAISearch.AzureAISearchMemory/<UpsertBatchAsync>d__13")]
private IAsyncEnumerable`1<string> UpsertBatchAsync(string index, IEnumerable`1<MemoryRecord> records, CancellationToken cancellationToken);
    private SearchClient GetSearchClient(string index);
    private static bool IsIndexNotFoundException(RequestFailedException e);
    private static void ValidateSchema(MemoryDbSchema schema);
    private static SearchClientOptions GetClientOptions();
    private string NormalizeIndexName(string index);
    private SearchIndex PrepareIndexSchema(string index, MemoryDbSchema schema);
    private static double ScoreToCosineSimilarity(double score);
    private static double CosineSimilarityToScore(double similarity);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.KernelMemory.MemoryDb.AzureAISearch.AzureAISearchMemoryException : KernelMemoryException {
    public AzureAISearchMemoryException(string message);
    public AzureAISearchMemoryException(string message, Exception innerException);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.KernelMemory.MemoryDb.AzureAISearch.AzureAISearchMemoryRecord : object {
    internal static string IdField;
    internal static string VectorField;
    private static string TagsField;
    private static string PayloadField;
    private static JsonSerializerOptions s_jsonOptions;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private Embedding <Vector>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <Tags>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Payload>k__BackingField;
    [JsonPropertyNameAttribute("id")]
public string Id { get; public set; }
    [JsonPropertyNameAttribute("embedding")]
[JsonConverterAttribute("Microsoft.KernelMemory.Embedding/JsonConverter")]
public Embedding Vector { get; public set; }
    [JsonPropertyNameAttribute("tags")]
public List`1<string> Tags { get; public set; }
    [JsonPropertyNameAttribute("payload")]
public string Payload { get; public set; }
    private static AzureAISearchMemoryRecord();
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public Embedding get_Vector();
    [CompilerGeneratedAttribute]
public void set_Vector(Embedding value);
    [CompilerGeneratedAttribute]
public List`1<string> get_Tags();
    [CompilerGeneratedAttribute]
public void set_Tags(List`1<string> value);
    [CompilerGeneratedAttribute]
public string get_Payload();
    [CompilerGeneratedAttribute]
public void set_Payload(string value);
    public static MemoryDbSchema GetSchema(int vectorSize);
    public MemoryRecord ToMemoryRecord(bool withEmbedding);
    public static AzureAISearchMemoryRecord FromMemoryRecord(MemoryRecord record);
    private static string EncodeId(string realId);
    private static string DecodeId(string encodedId);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.KernelMemory.MemoryDb.AzureAISearch.MemoryDbField : object {
    [CompilerGeneratedAttribute]
private FieldType <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsKey>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsFilterable>k__BackingField;
    [CompilerGeneratedAttribute]
private int <VectorSize>k__BackingField;
    [CompilerGeneratedAttribute]
private VectorMetricType <VectorMetric>k__BackingField;
    public FieldType Type { get; public set; }
    public string Name { get; public set; }
    public bool IsKey { get; public set; }
    public bool IsFilterable { get; public set; }
    public int VectorSize { get; public set; }
    public VectorMetricType VectorMetric { get; public set; }
    [CompilerGeneratedAttribute]
public FieldType get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(FieldType value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public bool get_IsKey();
    [CompilerGeneratedAttribute]
public void set_IsKey(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsFilterable();
    [CompilerGeneratedAttribute]
public void set_IsFilterable(bool value);
    [CompilerGeneratedAttribute]
public int get_VectorSize();
    [CompilerGeneratedAttribute]
public void set_VectorSize(int value);
    [CompilerGeneratedAttribute]
public VectorMetricType get_VectorMetric();
    [CompilerGeneratedAttribute]
public void set_VectorMetric(VectorMetricType value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.KernelMemory.MemoryDb.AzureAISearch.MemoryDbSchema : object {
    [CompilerGeneratedAttribute]
private List`1<MemoryDbField> <Fields>k__BackingField;
    public List`1<MemoryDbField> Fields { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<MemoryDbField> get_Fields();
    [CompilerGeneratedAttribute]
public void set_Fields(List`1<MemoryDbField> value);
    public void Validate(bool vectorSizeRequired);
}
