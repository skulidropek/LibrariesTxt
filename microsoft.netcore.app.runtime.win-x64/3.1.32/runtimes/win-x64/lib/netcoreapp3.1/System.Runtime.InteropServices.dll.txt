internal static class FxResources.System.Runtime.InteropServices.SR : object {
}
internal static class Interop : object {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[AttributeUsageAttribute("2304")]
[NullableAttribute("0")]
[NullableContextAttribute("1")]
public class System.Runtime.CompilerServices.IDispatchConstantAttribute : CustomConstantAttribute {
    public object Value { get; }
    public virtual object get_Value();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("2304")]
public class System.Runtime.CompilerServices.IUnknownConstantAttribute : CustomConstantAttribute {
    public object Value { get; }
    public virtual object get_Value();
}
[EmbeddedAttribute]
[CompilerGeneratedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
}
[AttributeUsageAttribute("5198")]
[EmbeddedAttribute]
[CompilerGeneratedAttribute]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[AttributeUsageAttribute("2")]
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class System.Runtime.CompilerServices.NullablePublicOnlyAttribute : Attribute {
    public bool IncludesInternals;
    public NullablePublicOnlyAttribute(bool );
}
[FlagsAttribute]
public enum System.Runtime.InteropServices.AssemblyRegistrationFlags : Enum {
    public int value__;
    public static AssemblyRegistrationFlags None;
    public static AssemblyRegistrationFlags SetCodeBase;
}
[AttributeUsageAttribute("1029")]
public class System.Runtime.InteropServices.AutomationProxyAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <Value>k__BackingField;
    public bool Value { get; }
    public AutomationProxyAttribute(bool val);
    [CompilerGeneratedAttribute]
public bool get_Value();
}
[NullableAttribute("0")]
[NullableContextAttribute("1")]
[AttributeUsageAttribute("10624")]
public class System.Runtime.InteropServices.ComAliasNameAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    public string Value { get; }
    public ComAliasNameAttribute(string alias);
    [CompilerGeneratedAttribute]
public string get_Value();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class System.Runtime.InteropServices.ComAwareEventInfo : EventInfo {
    private EventInfo _innerEventInfo;
    public EventAttributes Attributes { get; }
    [NullableAttribute("2")]
public Type DeclaringType { get; }
    public int MetadataToken { get; }
    public Module Module { get; }
    public string Name { get; }
    [NullableAttribute("2")]
public Type ReflectedType { get; }
    public ComAwareEventInfo(Type type, string eventName);
    public virtual void AddEventHandler(object target, Delegate handler);
    public virtual void RemoveEventHandler(object target, Delegate handler);
    public virtual EventAttributes get_Attributes();
    [NullableContextAttribute("2")]
public virtual MethodInfo GetAddMethod(bool nonPublic);
    public virtual MethodInfo[] GetOtherMethods(bool nonPublic);
    [NullableContextAttribute("2")]
public virtual MethodInfo GetRaiseMethod(bool nonPublic);
    [NullableContextAttribute("2")]
public virtual MethodInfo GetRemoveMethod(bool nonPublic);
    [NullableContextAttribute("2")]
public virtual Type get_DeclaringType();
    public virtual Object[] GetCustomAttributes(Type attributeType, bool inherit);
    public virtual Object[] GetCustomAttributes(bool inherit);
    public virtual IList`1<CustomAttributeData> GetCustomAttributesData();
    public virtual bool IsDefined(Type attributeType, bool inherit);
    public virtual int get_MetadataToken();
    public virtual Module get_Module();
    public virtual string get_Name();
    [NullableContextAttribute("2")]
public virtual Type get_ReflectedType();
    private static void GetDataForComInvocation(EventInfo eventInfo, Guid& sourceIid, Int32& dispid);
}
[AttributeUsageAttribute("1")]
public class System.Runtime.InteropServices.ComCompatibleVersionAttribute : Attribute {
    [CompilerGeneratedAttribute]
private int <MajorVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MinorVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private int <BuildNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private int <RevisionNumber>k__BackingField;
    public int MajorVersion { get; }
    public int MinorVersion { get; }
    public int BuildNumber { get; }
    public int RevisionNumber { get; }
    public ComCompatibleVersionAttribute(int major, int minor, int build, int revision);
    [CompilerGeneratedAttribute]
public int get_MajorVersion();
    [CompilerGeneratedAttribute]
public int get_MinorVersion();
    [CompilerGeneratedAttribute]
public int get_BuildNumber();
    [CompilerGeneratedAttribute]
public int get_RevisionNumber();
}
[AttributeUsageAttribute("32767")]
public class System.Runtime.InteropServices.ComConversionLossAttribute : Attribute {
}
[AttributeUsageAttribute("64")]
public class System.Runtime.InteropServices.ComRegisterFunctionAttribute : Attribute {
}
[FlagsAttribute]
public enum System.Runtime.InteropServices.ComTypes.ADVF : Enum {
    public int value__;
    public static ADVF ADVF_NODATA;
    public static ADVF ADVF_PRIMEFIRST;
    public static ADVF ADVF_ONLYONCE;
    public static ADVF ADVF_DATAONSTOP;
    public static ADVF ADVFCACHE_NOHANDLER;
    public static ADVF ADVFCACHE_FORCEBUILTIN;
    public static ADVF ADVFCACHE_ONSAVE;
}
public enum System.Runtime.InteropServices.ComTypes.DATADIR : Enum {
    public int value__;
    public static DATADIR DATADIR_GET;
    public static DATADIR DATADIR_SET;
}
[FlagsAttribute]
public enum System.Runtime.InteropServices.ComTypes.DVASPECT : Enum {
    public int value__;
    public static DVASPECT DVASPECT_CONTENT;
    public static DVASPECT DVASPECT_THUMBNAIL;
    public static DVASPECT DVASPECT_ICON;
    public static DVASPECT DVASPECT_DOCPRINT;
}
public class System.Runtime.InteropServices.ComTypes.FORMATETC : ValueType {
    public short cfFormat;
    public IntPtr ptd;
    public DVASPECT dwAspect;
    public int lindex;
    public TYMED tymed;
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("0000010F-0000-0000-C000-000000000046")]
[NullableContextAttribute("1")]
public interface System.Runtime.InteropServices.ComTypes.IAdviseSink {
    public abstract virtual void OnDataChange(FORMATETC& format, STGMEDIUM& stgmedium);
    public abstract virtual void OnViewChange(int aspect, int index);
    public abstract virtual void OnRename(IMoniker moniker);
    public abstract virtual void OnSave();
    public abstract virtual void OnClose();
}
[InterfaceTypeAttribute("1")]
[NullableContextAttribute("1")]
[GuidAttribute("0000010E-0000-0000-C000-000000000046")]
[CLSCompliantAttribute("False")]
public interface System.Runtime.InteropServices.ComTypes.IDataObject {
    public abstract virtual void GetData(FORMATETC& format, STGMEDIUM& medium);
    public abstract virtual void GetDataHere(FORMATETC& format, STGMEDIUM& medium);
    public abstract virtual int QueryGetData(FORMATETC& format);
    public abstract virtual int GetCanonicalFormatEtc(FORMATETC& formatIn, FORMATETC& formatOut);
    public abstract virtual void SetData(FORMATETC& formatIn, STGMEDIUM& medium, bool release);
    public abstract virtual IEnumFORMATETC EnumFormatEtc(DATADIR direction);
    public abstract virtual int DAdvise(FORMATETC& pFormatetc, ADVF advf, IAdviseSink adviseSink, Int32& connection);
    public abstract virtual void DUnadvise(int connection);
    [NullableContextAttribute("2")]
public abstract virtual int EnumDAdvise(IEnumSTATDATA& enumAdvise);
}
[NullableContextAttribute("1")]
[GuidAttribute("00000103-0000-0000-C000-000000000046")]
[InterfaceTypeAttribute("1")]
public interface System.Runtime.InteropServices.ComTypes.IEnumFORMATETC {
    public abstract virtual int Next(int celt, FORMATETC[] rgelt, Int32[] pceltFetched);
    public abstract virtual int Skip(int celt);
    public abstract virtual int Reset();
    public abstract virtual void Clone(IEnumFORMATETC& newEnum);
}
[NullableContextAttribute("1")]
[GuidAttribute("00000103-0000-0000-C000-000000000046")]
[InterfaceTypeAttribute("1")]
public interface System.Runtime.InteropServices.ComTypes.IEnumSTATDATA {
    public abstract virtual int Next(int celt, STATDATA[] rgelt, Int32[] pceltFetched);
    public abstract virtual int Skip(int celt);
    public abstract virtual int Reset();
    public abstract virtual void Clone(IEnumSTATDATA& newEnum);
}
public class System.Runtime.InteropServices.ComTypes.STATDATA : ValueType {
    public FORMATETC formatetc;
    public ADVF advf;
    [NullableAttribute("1")]
public IAdviseSink advSink;
    public int connection;
}
public class System.Runtime.InteropServices.ComTypes.STGMEDIUM : ValueType {
    public TYMED tymed;
    public IntPtr unionmember;
    [NullableAttribute("2")]
public object pUnkForRelease;
}
[FlagsAttribute]
public enum System.Runtime.InteropServices.ComTypes.TYMED : Enum {
    public int value__;
    public static TYMED TYMED_HGLOBAL;
    public static TYMED TYMED_FILE;
    public static TYMED TYMED_ISTREAM;
    public static TYMED TYMED_ISTORAGE;
    public static TYMED TYMED_GDI;
    public static TYMED TYMED_MFPICT;
    public static TYMED TYMED_ENHMF;
    public static TYMED TYMED_NULL;
}
[AttributeUsageAttribute("64")]
public class System.Runtime.InteropServices.ComUnregisterFunctionAttribute : Attribute {
}
public enum System.Runtime.InteropServices.ExporterEventKind : Enum {
    public int value__;
    public static ExporterEventKind NOTIF_TYPECONVERTED;
    public static ExporterEventKind NOTIF_CONVERTWARNING;
    public static ExporterEventKind ERROR_REFTOINVALIDASSEMBLY;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class System.Runtime.InteropServices.HandleCollector : object {
    private int _threshold;
    private int _handleCount;
    private Int32[] _gcCounts;
    private int _gcGeneration;
    [CompilerGeneratedAttribute]
private int <InitialThreshold>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaximumThreshold>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public int Count { get; }
    public int InitialThreshold { get; }
    public int MaximumThreshold { get; }
    public string Name { get; }
    [NullableContextAttribute("2")]
public HandleCollector(string name, int initialThreshold);
    [NullableContextAttribute("2")]
public HandleCollector(string name, int initialThreshold, int maximumThreshold);
    public int get_Count();
    [CompilerGeneratedAttribute]
public int get_InitialThreshold();
    [CompilerGeneratedAttribute]
public int get_MaximumThreshold();
    [CompilerGeneratedAttribute]
public string get_Name();
    public void Add();
    public void Remove();
}
[ObsoleteAttribute("This attribute is deprecated and will be removed in a future version.", "False")]
[AttributeUsageAttribute("5")]
public class System.Runtime.InteropServices.IDispatchImplAttribute : Attribute {
    [CompilerGeneratedAttribute]
private IDispatchImplType <Value>k__BackingField;
    public IDispatchImplType Value { get; }
    public IDispatchImplAttribute(short implType);
    public IDispatchImplAttribute(IDispatchImplType implType);
    [CompilerGeneratedAttribute]
public IDispatchImplType get_Value();
}
[ObsoleteAttribute("The IDispatchImplAttribute is deprecated.", "False")]
public enum System.Runtime.InteropServices.IDispatchImplType : Enum {
    public int value__;
    public static IDispatchImplType CompatibleImpl;
    public static IDispatchImplType InternalImpl;
    public static IDispatchImplType SystemDefinedImpl;
}
[GuidAttribute("00000003-0000-0000-C000-000000000046")]
[InterfaceTypeAttribute("1")]
internal interface System.Runtime.InteropServices.IMarshal {
    public abstract virtual int GetUnmarshalClass(Guid& riid, IntPtr pv, int dwDestContext, IntPtr pvDestContext, int mshlflags, Guid& pCid);
    public abstract virtual int GetMarshalSizeMax(Guid& riid, IntPtr pv, int dwDestContext, IntPtr pvDestContext, int mshlflags, Int32& pSize);
    public abstract virtual int MarshalInterface(IntPtr pStm, Guid& riid, IntPtr pv, int dwDestContext, IntPtr pvDestContext, int mshlflags);
    public abstract virtual int UnmarshalInterface(IntPtr pStm, Guid& riid, IntPtr& ppv);
    public abstract virtual int ReleaseMarshalData(IntPtr pStm);
    public abstract virtual int DisconnectObject(int dwReserved);
}
[NullableAttribute("0")]
[NullableContextAttribute("1")]
[AttributeUsageAttribute("1")]
public class System.Runtime.InteropServices.ImportedFromTypeLibAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    public string Value { get; }
    public ImportedFromTypeLibAttribute(string tlbFile);
    [CompilerGeneratedAttribute]
public string get_Value();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("64")]
public class System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute : Attribute {
    [CompilerGeneratedAttribute]
private Type <ClassType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MethodName>k__BackingField;
    public Type ClassType { get; }
    public string MethodName { get; }
    public ManagedToNativeComInteropStubAttribute(Type classType, string methodName);
    [CompilerGeneratedAttribute]
public Type get_ClassType();
    [CompilerGeneratedAttribute]
public string get_MethodName();
}
[AttributeUsageAttribute("1")]
public class System.Runtime.InteropServices.PrimaryInteropAssemblyAttribute : Attribute {
    [CompilerGeneratedAttribute]
private int <MajorVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MinorVersion>k__BackingField;
    public int MajorVersion { get; }
    public int MinorVersion { get; }
    public PrimaryInteropAssemblyAttribute(int major, int minor);
    [CompilerGeneratedAttribute]
public int get_MajorVersion();
    [CompilerGeneratedAttribute]
public int get_MinorVersion();
}
[FlagsAttribute]
public enum System.Runtime.InteropServices.RegistrationClassContext : Enum {
    public int value__;
    public static RegistrationClassContext InProcessServer;
    public static RegistrationClassContext InProcessHandler;
    public static RegistrationClassContext LocalServer;
    public static RegistrationClassContext InProcessServer16;
    public static RegistrationClassContext RemoteServer;
    public static RegistrationClassContext InProcessHandler16;
    public static RegistrationClassContext Reserved1;
    public static RegistrationClassContext Reserved2;
    public static RegistrationClassContext Reserved3;
    public static RegistrationClassContext Reserved4;
    public static RegistrationClassContext NoCodeDownload;
    public static RegistrationClassContext Reserved5;
    public static RegistrationClassContext NoCustomMarshal;
    public static RegistrationClassContext EnableCodeDownload;
    public static RegistrationClassContext NoFailureLog;
    public static RegistrationClassContext DisableActivateAsActivator;
    public static RegistrationClassContext EnableActivateAsActivator;
    public static RegistrationClassContext FromDefaultContext;
}
[FlagsAttribute]
public enum System.Runtime.InteropServices.RegistrationConnectionType : Enum {
    public int value__;
    public static RegistrationConnectionType SingleUse;
    public static RegistrationConnectionType MultipleUse;
    public static RegistrationConnectionType MultiSeparate;
    public static RegistrationConnectionType Suspended;
    public static RegistrationConnectionType Surrogate;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class System.Runtime.InteropServices.RuntimeEnvironment : object {
    public static string SystemConfigurationFile { get; }
    public static string get_SystemConfigurationFile();
    public static bool FromGlobalAccessCache(Assembly a);
    public static string GetRuntimeDirectory();
    public static IntPtr GetRuntimeInterfaceAsIntPtr(Guid clsid, Guid riid);
    public static object GetRuntimeInterfaceAsObject(Guid clsid, Guid riid);
    public static string GetSystemVersion();
}
[ObsoleteAttribute("This attribute has been deprecated.  Application Domains no longer respect Activation Context boundaries in IDispatch calls.", "False")]
[AttributeUsageAttribute("1")]
public class System.Runtime.InteropServices.SetWin32ContextInIDispatchAttribute : Attribute {
}
public class System.Runtime.InteropServices.StandardOleMarshalObject : MarshalByRefObject {
    private static Guid CLSID_StdMarshal;
    private static StandardOleMarshalObject();
    private IntPtr GetStdMarshaler(Guid& riid, int dwDestContext, int mshlflags);
    private sealed virtual override int System.Runtime.InteropServices.IMarshal.GetUnmarshalClass(Guid& riid, IntPtr pv, int dwDestContext, IntPtr pvDestContext, int mshlflags, Guid& pCid);
    private sealed virtual override int System.Runtime.InteropServices.IMarshal.GetMarshalSizeMax(Guid& riid, IntPtr pv, int dwDestContext, IntPtr pvDestContext, int mshlflags, Int32& pSize);
    private sealed virtual override int System.Runtime.InteropServices.IMarshal.MarshalInterface(IntPtr pStm, Guid& riid, IntPtr pv, int dwDestContext, IntPtr pvDestContext, int mshlflags);
    private sealed virtual override int System.Runtime.InteropServices.IMarshal.UnmarshalInterface(IntPtr pStm, Guid& riid, IntPtr& ppv);
    private sealed virtual override int System.Runtime.InteropServices.IMarshal.ReleaseMarshalData(IntPtr pStm);
    private sealed virtual override int System.Runtime.InteropServices.IMarshal.DisconnectObject(int dwReserved);
}
[AttributeUsageAttribute("64")]
public class System.Runtime.InteropServices.TypeLibFuncAttribute : Attribute {
    [CompilerGeneratedAttribute]
private TypeLibFuncFlags <Value>k__BackingField;
    public TypeLibFuncFlags Value { get; }
    public TypeLibFuncAttribute(TypeLibFuncFlags flags);
    public TypeLibFuncAttribute(short flags);
    [CompilerGeneratedAttribute]
public TypeLibFuncFlags get_Value();
}
[FlagsAttribute]
public enum System.Runtime.InteropServices.TypeLibFuncFlags : Enum {
    public int value__;
    public static TypeLibFuncFlags FRestricted;
    public static TypeLibFuncFlags FSource;
    public static TypeLibFuncFlags FBindable;
    public static TypeLibFuncFlags FRequestEdit;
    public static TypeLibFuncFlags FDisplayBind;
    public static TypeLibFuncFlags FDefaultBind;
    public static TypeLibFuncFlags FHidden;
    public static TypeLibFuncFlags FUsesGetLastError;
    public static TypeLibFuncFlags FDefaultCollelem;
    public static TypeLibFuncFlags FUiDefault;
    public static TypeLibFuncFlags FNonBrowsable;
    public static TypeLibFuncFlags FReplaceable;
    public static TypeLibFuncFlags FImmediateBind;
}
[AttributeUsageAttribute("1024")]
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class System.Runtime.InteropServices.TypeLibImportClassAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    public string Value { get; }
    public TypeLibImportClassAttribute(Type importClass);
    [CompilerGeneratedAttribute]
public string get_Value();
}
[AttributeUsageAttribute("1052")]
public class System.Runtime.InteropServices.TypeLibTypeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private TypeLibTypeFlags <Value>k__BackingField;
    public TypeLibTypeFlags Value { get; }
    public TypeLibTypeAttribute(TypeLibTypeFlags flags);
    public TypeLibTypeAttribute(short flags);
    [CompilerGeneratedAttribute]
public TypeLibTypeFlags get_Value();
}
[FlagsAttribute]
public enum System.Runtime.InteropServices.TypeLibTypeFlags : Enum {
    public int value__;
    public static TypeLibTypeFlags FAppObject;
    public static TypeLibTypeFlags FCanCreate;
    public static TypeLibTypeFlags FLicensed;
    public static TypeLibTypeFlags FPreDeclId;
    public static TypeLibTypeFlags FHidden;
    public static TypeLibTypeFlags FControl;
    public static TypeLibTypeFlags FDual;
    public static TypeLibTypeFlags FNonExtensible;
    public static TypeLibTypeFlags FOleAutomation;
    public static TypeLibTypeFlags FRestricted;
    public static TypeLibTypeFlags FAggregatable;
    public static TypeLibTypeFlags FReplaceable;
    public static TypeLibTypeFlags FDispatchable;
    public static TypeLibTypeFlags FReverseBind;
}
[AttributeUsageAttribute("256")]
public class System.Runtime.InteropServices.TypeLibVarAttribute : Attribute {
    [CompilerGeneratedAttribute]
private TypeLibVarFlags <Value>k__BackingField;
    public TypeLibVarFlags Value { get; }
    public TypeLibVarAttribute(TypeLibVarFlags flags);
    public TypeLibVarAttribute(short flags);
    [CompilerGeneratedAttribute]
public TypeLibVarFlags get_Value();
}
[FlagsAttribute]
public enum System.Runtime.InteropServices.TypeLibVarFlags : Enum {
    public int value__;
    public static TypeLibVarFlags FReadOnly;
    public static TypeLibVarFlags FSource;
    public static TypeLibVarFlags FBindable;
    public static TypeLibVarFlags FRequestEdit;
    public static TypeLibVarFlags FDisplayBind;
    public static TypeLibVarFlags FDefaultBind;
    public static TypeLibVarFlags FHidden;
    public static TypeLibVarFlags FRestricted;
    public static TypeLibVarFlags FDefaultCollelem;
    public static TypeLibVarFlags FUiDefault;
    public static TypeLibVarFlags FNonBrowsable;
    public static TypeLibVarFlags FReplaceable;
    public static TypeLibVarFlags FImmediateBind;
}
[AttributeUsageAttribute("1")]
public class System.Runtime.InteropServices.TypeLibVersionAttribute : Attribute {
    [CompilerGeneratedAttribute]
private int <MajorVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MinorVersion>k__BackingField;
    public int MajorVersion { get; }
    public int MinorVersion { get; }
    public TypeLibVersionAttribute(int major, int minor);
    [CompilerGeneratedAttribute]
public int get_MajorVersion();
    [CompilerGeneratedAttribute]
public int get_MinorVersion();
}
[CLSCompliantAttribute("False")]
[NullableAttribute("0")]
[NullableContextAttribute("1")]
public static class System.Security.SecureStringMarshal : object {
    public static IntPtr SecureStringToCoTaskMemAnsi(SecureString s);
    public static IntPtr SecureStringToGlobalAllocAnsi(SecureString s);
    public static IntPtr SecureStringToCoTaskMemUnicode(SecureString s);
    public static IntPtr SecureStringToGlobalAllocUnicode(SecureString s);
}
internal static class System.SR : object {
    private static ResourceManager s_resourceManager;
    internal static ResourceManager ResourceManager { get; }
    internal static string InvalidOperation_HCCountOverflow { get; }
    internal static string Arg_NeedNonNegNumRequired { get; }
    internal static string Arg_InvalidThreshold { get; }
    internal static string InvalidOperation_NoComEventInterfaceAttribute { get; }
    internal static string AmbiguousMatch_MultipleEventInterfaceAttributes { get; }
    internal static string InvalidOperation_NoDispIdAttribute { get; }
    internal static string StandardOleMarshalObjectGetMarshalerFailed { get; }
    private static bool UsingResourceKeys();
    internal static string GetResourceString(string resourceKey, string defaultString);
    internal static string Format(string resourceFormat, object p1);
    internal static ResourceManager get_ResourceManager();
    internal static string get_InvalidOperation_HCCountOverflow();
    internal static string get_Arg_NeedNonNegNumRequired();
    internal static string get_Arg_InvalidThreshold();
    internal static string get_InvalidOperation_NoComEventInterfaceAttribute();
    internal static string get_AmbiguousMatch_MultipleEventInterfaceAttributes();
    internal static string get_InvalidOperation_NoDispIdAttribute();
    internal static string get_StandardOleMarshalObjectGetMarshalerFailed();
}
