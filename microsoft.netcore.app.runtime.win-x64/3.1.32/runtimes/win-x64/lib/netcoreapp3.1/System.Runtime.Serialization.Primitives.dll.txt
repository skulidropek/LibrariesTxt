internal static class FxResources.System.Runtime.Serialization.Primitives.SR : object {
}
[AttributeUsageAttribute("12")]
public class System.Runtime.Serialization.CollectionDataContractAttribute : Attribute {
    private string _name;
    private string _ns;
    private string _itemName;
    private string _keyName;
    private string _valueName;
    private bool _isReference;
    private bool _isNameSetExplicitly;
    private bool _isNamespaceSetExplicitly;
    private bool _isReferenceSetExplicitly;
    private bool _isItemNameSetExplicitly;
    private bool _isKeyNameSetExplicitly;
    private bool _isValueNameSetExplicitly;
    public string Namespace { get; public set; }
    public bool IsNamespaceSetExplicitly { get; }
    public string Name { get; public set; }
    public bool IsNameSetExplicitly { get; }
    public string ItemName { get; public set; }
    public bool IsItemNameSetExplicitly { get; }
    public string KeyName { get; public set; }
    public bool IsKeyNameSetExplicitly { get; }
    public bool IsReference { get; public set; }
    public bool IsReferenceSetExplicitly { get; }
    public string ValueName { get; public set; }
    public bool IsValueNameSetExplicitly { get; }
    public string get_Namespace();
    public void set_Namespace(string value);
    public bool get_IsNamespaceSetExplicitly();
    public string get_Name();
    public void set_Name(string value);
    public bool get_IsNameSetExplicitly();
    public string get_ItemName();
    public void set_ItemName(string value);
    public bool get_IsItemNameSetExplicitly();
    public string get_KeyName();
    public void set_KeyName(string value);
    public bool get_IsKeyNameSetExplicitly();
    public bool get_IsReference();
    public void set_IsReference(bool value);
    public bool get_IsReferenceSetExplicitly();
    public string get_ValueName();
    public void set_ValueName(string value);
    public bool get_IsValueNameSetExplicitly();
}
[AttributeUsageAttribute("3")]
public class System.Runtime.Serialization.ContractNamespaceAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ClrNamespace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContractNamespace>k__BackingField;
    public string ClrNamespace { get; public set; }
    public string ContractNamespace { get; }
    public ContractNamespaceAttribute(string contractNamespace);
    [CompilerGeneratedAttribute]
public string get_ClrNamespace();
    [CompilerGeneratedAttribute]
public void set_ClrNamespace(string value);
    [CompilerGeneratedAttribute]
public string get_ContractNamespace();
}
[AttributeUsageAttribute("28")]
public class System.Runtime.Serialization.DataContractAttribute : Attribute {
    private string _name;
    private string _ns;
    private bool _isNameSetExplicitly;
    private bool _isNamespaceSetExplicitly;
    private bool _isReference;
    private bool _isReferenceSetExplicitly;
    public bool IsReference { get; public set; }
    public bool IsReferenceSetExplicitly { get; }
    public string Namespace { get; public set; }
    public bool IsNamespaceSetExplicitly { get; }
    public string Name { get; public set; }
    public bool IsNameSetExplicitly { get; }
    public bool get_IsReference();
    public void set_IsReference(bool value);
    public bool get_IsReferenceSetExplicitly();
    public string get_Namespace();
    public void set_Namespace(string value);
    public bool get_IsNamespaceSetExplicitly();
    public string get_Name();
    public void set_Name(string value);
    public bool get_IsNameSetExplicitly();
}
[AttributeUsageAttribute("384")]
public class System.Runtime.Serialization.DataMemberAttribute : Attribute {
    private string _name;
    private bool _isNameSetExplicitly;
    private int _order;
    [CompilerGeneratedAttribute]
private bool <IsRequired>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EmitDefaultValue>k__BackingField;
    public string Name { get; public set; }
    public bool IsNameSetExplicitly { get; }
    public int Order { get; public set; }
    public bool IsRequired { get; public set; }
    public bool EmitDefaultValue { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    public bool get_IsNameSetExplicitly();
    public int get_Order();
    public void set_Order(int value);
    [CompilerGeneratedAttribute]
public bool get_IsRequired();
    [CompilerGeneratedAttribute]
public void set_IsRequired(bool value);
    [CompilerGeneratedAttribute]
public bool get_EmitDefaultValue();
    [CompilerGeneratedAttribute]
public void set_EmitDefaultValue(bool value);
}
[AttributeUsageAttribute("256")]
public class System.Runtime.Serialization.EnumMemberAttribute : Attribute {
    private string _value;
    private bool _isValueSetExplicitly;
    public string Value { get; public set; }
    public bool IsValueSetExplicitly { get; }
    public string get_Value();
    public void set_Value(string value);
    public bool get_IsValueSetExplicitly();
}
[AttributeUsageAttribute("384")]
public class System.Runtime.Serialization.IgnoreDataMemberAttribute : Attribute {
}
[TypeForwardedFromAttribute("System.Runtime.Serialization, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089")]
public class System.Runtime.Serialization.InvalidDataContractException : Exception {
    public InvalidDataContractException(string message);
    public InvalidDataContractException(string message, Exception innerException);
    protected InvalidDataContractException(SerializationInfo info, StreamingContext context);
}
public interface System.Runtime.Serialization.ISerializationSurrogateProvider {
    public abstract virtual Type GetSurrogateType(Type type);
    public abstract virtual object GetObjectToSerialize(object obj, Type targetType);
    public abstract virtual object GetDeserializedObject(object obj, Type targetType);
}
[AttributeUsageAttribute("12")]
public class System.Runtime.Serialization.KnownTypeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <MethodName>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <Type>k__BackingField;
    public string MethodName { get; }
    public Type Type { get; }
    public KnownTypeAttribute(Type type);
    public KnownTypeAttribute(string methodName);
    [CompilerGeneratedAttribute]
public string get_MethodName();
    [CompilerGeneratedAttribute]
public Type get_Type();
}
internal static class System.SR : object {
    private static ResourceManager s_resourceManager;
    internal static ResourceManager ResourceManager { get; }
    internal static string OrderCannotBeNegative { get; }
    private static bool UsingResourceKeys();
    internal static string GetResourceString(string resourceKey, string defaultString);
    internal static ResourceManager get_ResourceManager();
    internal static string get_OrderCannotBeNegative();
}
