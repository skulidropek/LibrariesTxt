internal static class FxResources.System.Reflection.DispatchProxy.SR : object {
}
public abstract class System.Reflection.DispatchProxy : object {
    protected abstract virtual object Invoke(MethodInfo targetMethod, Object[] args);
    public static T Create();
}
internal static class System.Reflection.DispatchProxyGenerator : object {
    private static Dictionary`2<Type, Dictionary`2<Type, Type>> s_baseTypeAndInterfaceToGeneratedProxyType;
    private static ProxyAssembly s_proxyAssembly;
    private static MethodInfo s_dispatchProxyInvokeMethod;
    private static DispatchProxyGenerator();
    internal static object CreateProxyInstance(Type baseType, Type interfaceType);
    private static Type GetProxyType(Type baseType, Type interfaceType);
    private static Type GenerateProxyType(Type baseType, Type interfaceType);
    private static void Invoke(Object[] args);
}
internal static class System.Reflection.Emit.IgnoreAccessChecksToAttributeBuilder : object {
    public static ConstructorInfo AddToModule(ModuleBuilder mb);
}
internal static class System.SR : object {
    private static ResourceManager s_resourceManager;
    internal static ResourceManager ResourceManager { get; }
    internal static string BaseType_Cannot_Be_Sealed { get; }
    internal static string BaseType_Must_Have_Default_Ctor { get; }
    internal static string InterfaceType_Must_Be_Interface { get; }
    internal static string BaseType_Cannot_Be_Abstract { get; }
    private static bool UsingResourceKeys();
    internal static string GetResourceString(string resourceKey, string defaultString);
    internal static string Format(string resourceFormat, object p1);
    internal static ResourceManager get_ResourceManager();
    internal static string get_BaseType_Cannot_Be_Sealed();
    internal static string get_BaseType_Must_Have_Default_Ctor();
    internal static string get_InterfaceType_Must_Be_Interface();
    internal static string get_BaseType_Cannot_Be_Abstract();
}
