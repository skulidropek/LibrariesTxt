internal static class FxResources.Microsoft.Extensions.Logging.Configuration.SR : object {
}
public interface Microsoft.Extensions.Logging.Configuration.ILoggerProviderConfiguration`1 {
    public IConfiguration Configuration { get; }
    public abstract virtual IConfiguration get_Configuration();
}
public interface Microsoft.Extensions.Logging.Configuration.ILoggerProviderConfigurationFactory {
    public abstract virtual IConfiguration GetConfiguration(Type providerType);
}
internal class Microsoft.Extensions.Logging.Configuration.LoggerProviderConfiguration`1 : object {
    [CompilerGeneratedAttribute]
private IConfiguration <Configuration>k__BackingField;
    public IConfiguration Configuration { get; }
    public LoggerProviderConfiguration`1(ILoggerProviderConfigurationFactory providerConfigurationFactory);
    [CompilerGeneratedAttribute]
public sealed virtual IConfiguration get_Configuration();
}
internal class Microsoft.Extensions.Logging.Configuration.LoggerProviderConfigurationFactory : object {
    private IEnumerable`1<LoggingConfiguration> _configurations;
    public LoggerProviderConfigurationFactory(IEnumerable`1<LoggingConfiguration> configurations);
    public sealed virtual IConfiguration GetConfiguration(Type providerType);
}
internal class Microsoft.Extensions.Logging.Configuration.LoggerProviderConfigureOptions`2 : ConfigureFromConfigurationOptions`1<TOptions> {
    [RequiresUnreferencedCodeAttribute("TOptions's dependent types may have their members trimmed. Ensure all required members are preserved.")]
public LoggerProviderConfigureOptions`2(ILoggerProviderConfiguration`1<TProvider> providerConfiguration);
}
public static class Microsoft.Extensions.Logging.Configuration.LoggerProviderOptions : object {
    internal static string TrimmingRequiresUnreferencedCodeMessage;
    [RequiresUnreferencedCodeAttribute("TOptions's dependent types may have their members trimmed. Ensure all required members are preserved.")]
public static void RegisterProviderOptions(IServiceCollection services);
}
public class Microsoft.Extensions.Logging.Configuration.LoggerProviderOptionsChangeTokenSource`2 : ConfigurationChangeTokenSource`1<TOptions> {
    public LoggerProviderOptionsChangeTokenSource`2(ILoggerProviderConfiguration`1<TProvider> providerConfiguration);
}
[ExtensionAttribute]
public static class Microsoft.Extensions.Logging.Configuration.LoggingBuilderConfigurationExtensions : object {
    [ExtensionAttribute]
public static void AddConfiguration(ILoggingBuilder builder);
}
internal class Microsoft.Extensions.Logging.Configuration.LoggingConfiguration : object {
    [CompilerGeneratedAttribute]
private IConfiguration <Configuration>k__BackingField;
    public IConfiguration Configuration { get; }
    public LoggingConfiguration(IConfiguration configuration);
    [CompilerGeneratedAttribute]
public IConfiguration get_Configuration();
}
internal class Microsoft.Extensions.Logging.LoggerFilterConfigureOptions : object {
    private static string LogLevelKey;
    private static string DefaultCategory;
    private IConfiguration _configuration;
    public LoggerFilterConfigureOptions(IConfiguration configuration);
    public sealed virtual void Configure(LoggerFilterOptions options);
    private void LoadDefaultConfigValues(LoggerFilterOptions options);
    private void LoadRules(LoggerFilterOptions options, IConfigurationSection configurationSection, string logger);
    private static bool TryGetSwitch(string value, LogLevel& level);
    [CompilerGeneratedAttribute]
[UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026:RequiresUnreferencedCode")]
private bool <LoadDefaultConfigValues>g__GetCaptureScopesValue|5_0(LoggerFilterOptions options);
}
[ExtensionAttribute]
public static class Microsoft.Extensions.Logging.LoggingBuilderExtensions : object {
    [ExtensionAttribute]
public static ILoggingBuilder AddConfiguration(ILoggingBuilder builder, IConfiguration configuration);
}
internal static class Microsoft.Extensions.Logging.ProviderAliasUtilities : object {
    private static string AliasAttibuteTypeFullName;
    internal static string GetAlias(Type providerType);
}
[AttributeUsageAttribute("28108")]
internal class System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembersAttribute : Attribute {
    [CompilerGeneratedAttribute]
private DynamicallyAccessedMemberTypes <MemberTypes>k__BackingField;
    public DynamicallyAccessedMemberTypes MemberTypes { get; }
    public DynamicallyAccessedMembersAttribute(DynamicallyAccessedMemberTypes memberTypes);
    [CompilerGeneratedAttribute]
public DynamicallyAccessedMemberTypes get_MemberTypes();
}
[FlagsAttribute]
internal enum System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes : Enum {
    public int value__;
    public static DynamicallyAccessedMemberTypes None;
    public static DynamicallyAccessedMemberTypes PublicParameterlessConstructor;
    public static DynamicallyAccessedMemberTypes PublicConstructors;
    public static DynamicallyAccessedMemberTypes NonPublicConstructors;
    public static DynamicallyAccessedMemberTypes PublicMethods;
    public static DynamicallyAccessedMemberTypes NonPublicMethods;
    public static DynamicallyAccessedMemberTypes PublicFields;
    public static DynamicallyAccessedMemberTypes NonPublicFields;
    public static DynamicallyAccessedMemberTypes PublicNestedTypes;
    public static DynamicallyAccessedMemberTypes NonPublicNestedTypes;
    public static DynamicallyAccessedMemberTypes PublicProperties;
    public static DynamicallyAccessedMemberTypes NonPublicProperties;
    public static DynamicallyAccessedMemberTypes PublicEvents;
    public static DynamicallyAccessedMemberTypes NonPublicEvents;
    public static DynamicallyAccessedMemberTypes Interfaces;
    public static DynamicallyAccessedMemberTypes All;
}
[AttributeUsageAttribute("100")]
internal class System.Diagnostics.CodeAnalysis.RequiresUnreferencedCodeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    public string Message { get; }
    public string Url { get; public set; }
    public RequiresUnreferencedCodeAttribute(string message);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
}
[AttributeUsageAttribute("32767")]
internal class System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Category>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CheckId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scope>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Target>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MessageId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Justification>k__BackingField;
    public string Category { get; }
    public string CheckId { get; }
    public string Scope { get; public set; }
    public string Target { get; public set; }
    public string MessageId { get; public set; }
    public string Justification { get; public set; }
    public UnconditionalSuppressMessageAttribute(string category, string checkId);
    [CompilerGeneratedAttribute]
public string get_Category();
    [CompilerGeneratedAttribute]
public string get_CheckId();
    [CompilerGeneratedAttribute]
public string get_Scope();
    [CompilerGeneratedAttribute]
public void set_Scope(string value);
    [CompilerGeneratedAttribute]
public string get_Target();
    [CompilerGeneratedAttribute]
public void set_Target(string value);
    [CompilerGeneratedAttribute]
public string get_MessageId();
    [CompilerGeneratedAttribute]
public void set_MessageId(string value);
    [CompilerGeneratedAttribute]
public string get_Justification();
    [CompilerGeneratedAttribute]
public void set_Justification(string value);
}
internal static class System.SR : object {
    private static bool s_usingResourceKeys;
    private static ResourceManager s_resourceManager;
    internal static ResourceManager ResourceManager { get; }
    internal static string ValueNotSupported { get; }
    private static SR();
    private static bool UsingResourceKeys();
    internal static string GetResourceString(string resourceKey);
    internal static string GetResourceString(string resourceKey, string defaultString);
    internal static string Format(string resourceFormat, object p1);
    internal static string Format(string resourceFormat, object p1, object p2);
    internal static string Format(string resourceFormat, object p1, object p2, object p3);
    internal static string Format(string resourceFormat, Object[] args);
    internal static string Format(IFormatProvider provider, string resourceFormat, object p1);
    internal static string Format(IFormatProvider provider, string resourceFormat, object p1, object p2);
    internal static string Format(IFormatProvider provider, string resourceFormat, object p1, object p2, object p3);
    internal static string Format(IFormatProvider provider, string resourceFormat, Object[] args);
    internal static ResourceManager get_ResourceManager();
    internal static string get_ValueNotSupported();
}
