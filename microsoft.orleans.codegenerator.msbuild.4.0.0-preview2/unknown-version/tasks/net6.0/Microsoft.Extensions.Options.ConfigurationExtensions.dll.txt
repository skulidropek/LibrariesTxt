[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.OptionsBuilderConfigurationExtensions : object {
    internal static string TrimmingRequiredUnreferencedCodeMessage;
    [ExtensionAttribute]
[RequiresUnreferencedCodeAttribute("TOptions's dependent types may have their members trimmed. Ensure all required members are preserved.")]
public static OptionsBuilder`1<TOptions> Bind(OptionsBuilder`1<TOptions> optionsBuilder, IConfiguration config);
    [ExtensionAttribute]
[RequiresUnreferencedCodeAttribute("TOptions's dependent types may have their members trimmed. Ensure all required members are preserved.")]
public static OptionsBuilder`1<TOptions> Bind(OptionsBuilder`1<TOptions> optionsBuilder, IConfiguration config, Action`1<BinderOptions> configureBinder);
    [ExtensionAttribute]
[RequiresUnreferencedCodeAttribute("TOptions's dependent types may have their members trimmed. Ensure all required members are preserved.")]
public static OptionsBuilder`1<TOptions> BindConfiguration(OptionsBuilder`1<TOptions> optionsBuilder, string configSectionPath, Action`1<BinderOptions> configureBinder);
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026:RequiresUnreferencedCode")]
private static void BindFromOptions(TOptions opts, IConfiguration config, string configSectionPath, Action`1<BinderOptions> configureBinder);
}
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.OptionsConfigurationServiceCollectionExtensions : object {
    [ExtensionAttribute]
[RequiresUnreferencedCodeAttribute("TOptions's dependent types may have their members trimmed. Ensure all required members are preserved.")]
public static IServiceCollection Configure(IServiceCollection services, IConfiguration config);
    [ExtensionAttribute]
[RequiresUnreferencedCodeAttribute("TOptions's dependent types may have their members trimmed. Ensure all required members are preserved.")]
public static IServiceCollection Configure(IServiceCollection services, string name, IConfiguration config);
    [ExtensionAttribute]
[RequiresUnreferencedCodeAttribute("TOptions's dependent types may have their members trimmed. Ensure all required members are preserved.")]
public static IServiceCollection Configure(IServiceCollection services, IConfiguration config, Action`1<BinderOptions> configureBinder);
    [ExtensionAttribute]
[RequiresUnreferencedCodeAttribute("TOptions's dependent types may have their members trimmed. Ensure all required members are preserved.")]
public static IServiceCollection Configure(IServiceCollection services, string name, IConfiguration config, Action`1<BinderOptions> configureBinder);
}
public class Microsoft.Extensions.Options.ConfigurationChangeTokenSource`1 : object {
    private IConfiguration _config;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public string Name { get; }
    public ConfigurationChangeTokenSource`1(IConfiguration config);
    public ConfigurationChangeTokenSource`1(string name, IConfiguration config);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    public sealed virtual IChangeToken GetChangeToken();
}
public class Microsoft.Extensions.Options.ConfigureFromConfigurationOptions`1 : ConfigureOptions`1<TOptions> {
    [RequiresUnreferencedCodeAttribute("TOptions's dependent types may have their members trimmed. Ensure all required members are preserved.")]
public ConfigureFromConfigurationOptions`1(IConfiguration config);
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026:RequiresUnreferencedCode")]
private static void BindFromOptions(TOptions options, IConfiguration config);
}
public class Microsoft.Extensions.Options.NamedConfigureFromConfigurationOptions`1 : ConfigureNamedOptions`1<TOptions> {
    [RequiresUnreferencedCodeAttribute("TOptions's dependent types may have their members trimmed. Ensure all required members are preserved.")]
public NamedConfigureFromConfigurationOptions`1(string name, IConfiguration config);
    [RequiresUnreferencedCodeAttribute("TOptions's dependent types may have their members trimmed. Ensure all required members are preserved.")]
public NamedConfigureFromConfigurationOptions`1(string name, IConfiguration config, Action`1<BinderOptions> configureBinder);
    [UnconditionalSuppressMessageAttribute("ReflectionAnalysis", "IL2026:RequiresUnreferencedCode")]
private static void BindFromOptions(TOptions options, IConfiguration config, Action`1<BinderOptions> configureBinder);
}
[AttributeUsageAttribute("28108")]
internal class System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembersAttribute : Attribute {
    [CompilerGeneratedAttribute]
private DynamicallyAccessedMemberTypes <MemberTypes>k__BackingField;
    public DynamicallyAccessedMemberTypes MemberTypes { get; }
    public DynamicallyAccessedMembersAttribute(DynamicallyAccessedMemberTypes memberTypes);
    [CompilerGeneratedAttribute]
public DynamicallyAccessedMemberTypes get_MemberTypes();
}
[FlagsAttribute]
internal enum System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes : Enum {
    public int value__;
    public static DynamicallyAccessedMemberTypes None;
    public static DynamicallyAccessedMemberTypes PublicParameterlessConstructor;
    public static DynamicallyAccessedMemberTypes PublicConstructors;
    public static DynamicallyAccessedMemberTypes NonPublicConstructors;
    public static DynamicallyAccessedMemberTypes PublicMethods;
    public static DynamicallyAccessedMemberTypes NonPublicMethods;
    public static DynamicallyAccessedMemberTypes PublicFields;
    public static DynamicallyAccessedMemberTypes NonPublicFields;
    public static DynamicallyAccessedMemberTypes PublicNestedTypes;
    public static DynamicallyAccessedMemberTypes NonPublicNestedTypes;
    public static DynamicallyAccessedMemberTypes PublicProperties;
    public static DynamicallyAccessedMemberTypes NonPublicProperties;
    public static DynamicallyAccessedMemberTypes PublicEvents;
    public static DynamicallyAccessedMemberTypes NonPublicEvents;
    public static DynamicallyAccessedMemberTypes Interfaces;
    public static DynamicallyAccessedMemberTypes All;
}
[AttributeUsageAttribute("100")]
internal class System.Diagnostics.CodeAnalysis.RequiresUnreferencedCodeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    public string Message { get; }
    public string Url { get; public set; }
    public RequiresUnreferencedCodeAttribute(string message);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
}
[AttributeUsageAttribute("32767")]
internal class System.Diagnostics.CodeAnalysis.UnconditionalSuppressMessageAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Category>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CheckId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scope>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Target>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MessageId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Justification>k__BackingField;
    public string Category { get; }
    public string CheckId { get; }
    public string Scope { get; public set; }
    public string Target { get; public set; }
    public string MessageId { get; public set; }
    public string Justification { get; public set; }
    public UnconditionalSuppressMessageAttribute(string category, string checkId);
    [CompilerGeneratedAttribute]
public string get_Category();
    [CompilerGeneratedAttribute]
public string get_CheckId();
    [CompilerGeneratedAttribute]
public string get_Scope();
    [CompilerGeneratedAttribute]
public void set_Scope(string value);
    [CompilerGeneratedAttribute]
public string get_Target();
    [CompilerGeneratedAttribute]
public void set_Target(string value);
    [CompilerGeneratedAttribute]
public string get_MessageId();
    [CompilerGeneratedAttribute]
public void set_MessageId(string value);
    [CompilerGeneratedAttribute]
public string get_Justification();
    [CompilerGeneratedAttribute]
public void set_Justification(string value);
}
