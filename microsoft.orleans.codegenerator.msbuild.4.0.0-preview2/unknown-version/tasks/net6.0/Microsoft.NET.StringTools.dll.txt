[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IsByRefLikeAttribute]
[ObsoleteAttribute("Types with embedded references are not supported in this version of your compiler.", "True")]
internal class Microsoft.NET.StringTools.InternableString : ValueType {
    [NullableAttribute("0")]
private ReadOnlySpan`1<char> _inlineSpan;
    [NullableAttribute("2")]
private string _inlineSpanString;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private List`1<ReadOnlyMemory`1<char>> _spans;
    [CompilerGeneratedAttribute]
private int <Length>k__BackingField;
    public int Length { get; private set; }
    [NullableContextAttribute("0")]
internal InternableString(ReadOnlySpan`1<char> span);
    internal InternableString(string str);
    internal InternableString(SpanBasedStringBuilder stringBuilder);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public int get_Length();
    [CompilerGeneratedAttribute]
private void set_Length(int value);
    public Enumerator GetEnumerator();
    public bool Equals(string other);
    public string ExpensiveConvertToString();
    public bool ReferenceEquals(string str);
    public virtual string ToString();
    public virtual int GetHashCode();
}
public class Microsoft.NET.StringTools.SpanBasedStringBuilder : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private List`1<ReadOnlyMemory`1<char>> _spans;
    [CompilerGeneratedAttribute]
private int <Length>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal List`1<ReadOnlyMemory`1<char>> Spans { get; }
    public int Length { get; private set; }
    public int Capacity { get; }
    [NullableContextAttribute("1")]
public SpanBasedStringBuilder(string str);
    public SpanBasedStringBuilder(int capacity);
    internal List`1<ReadOnlyMemory`1<char>> get_Spans();
    [CompilerGeneratedAttribute]
public int get_Length();
    [CompilerGeneratedAttribute]
private void set_Length(int value);
    public int get_Capacity();
    public Enumerator GetEnumerator();
    [NullableContextAttribute("1")]
public virtual string ToString();
    public sealed virtual void Dispose();
    [NullableContextAttribute("1")]
public void Append(string value);
    [NullableContextAttribute("1")]
public void Append(string value, int startIndex, int count);
    public void Append(ReadOnlyMemory`1<char> span);
    public void TrimStart();
    public void TrimEnd();
    public void Trim();
    public void Clear();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Microsoft.NET.StringTools.Strings : object {
    [NullableAttribute("2")]
[ThreadStaticAttribute]
private static SpanBasedStringBuilder _spanBasedStringBuilder;
    public static string WeakIntern(string str);
    [NullableContextAttribute("0")]
public static string WeakIntern(ReadOnlySpan`1<char> str);
    public static SpanBasedStringBuilder GetSpanBasedStringBuilder();
    public static void EnableDiagnostics();
    public static string CreateDiagnosticReport();
    internal static void ReturnSpanBasedStringBuilder(SpanBasedStringBuilder stringBuilder);
}
internal class Microsoft.NET.StringTools.WeakStringCache : object {
    [NullableAttribute("1")]
private ConcurrentDictionary`2<int, StringWeakHandle> _stringsByHashCode;
    private static int _initialCapacity;
    private int _scavengeThreshold;
    [NullableContextAttribute("1")]
public string GetOrCreateEntry(InternableString& internable, Boolean& cacheHit);
    public void Scavenge();
    public DebugInfo GetDebugInfo();
    private void DisposeImpl();
    public sealed virtual void Dispose();
    protected virtual override void Finalize();
    private DebugInfo GetDebugInfoImpl();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.NET.StringTools.WeakStringCacheInterner : object {
    internal static WeakStringCacheInterner Instance;
    private WeakStringCache _weakStringCache;
    private int _regularInternHits;
    private int _regularInternMisses;
    private int _internEliminatedStrings;
    private int _internEliminatedChars;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Dictionary`2<string, int> _internCallCountsByString;
    private static WeakStringCacheInterner();
    private InternResult Intern(InternableString& candidate, String& interned);
    public string InternableToString(InternableString& candidate);
    public void EnableStatistics();
    public string FormatStatistics();
    public sealed virtual void Dispose();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class System.Runtime.CompilerServices.IsByRefLikeAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class System.Runtime.CompilerServices.IsReadOnlyAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
