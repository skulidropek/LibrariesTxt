[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
internal class Orleans.CodeGenerator.MSBuild.AssemblyResolver : object {
    private ICompilationAssemblyResolver _assemblyResolver;
    private DependencyContext _resolverRependencyContext;
    private AssemblyLoadContext _loadContext;
    public sealed virtual void Dispose();
    public Assembly ResolveAssembly(object sender, ResolveEventArgs args);
    public Assembly AssemblyLoadContextResolving(AssemblyLoadContext context, AssemblyName name);
    private Assembly TryLoadAssemblyFromPath(string path);
}
public class Orleans.CodeGenerator.MSBuild.CodeGeneratorCommand : object {
    private static string OrleansSerializationAssemblyShortName;
    private static Int32[] SuppressCompilerWarnings;
    [CompilerGeneratedAttribute]
private ILogger <Log>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectGuid>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OutputType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TargetPath>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <Compile>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <Reference>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CodeGenOutputFile>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <IdAttributes>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <AliasAttributes>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <ImmutableAttributes>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <GenerateSerializerAttributes>k__BackingField;
    public ILogger Log { get; public set; }
    public string ProjectPath { get; public set; }
    public string ProjectGuid { get; public set; }
    public string OutputType { get; public set; }
    public string TargetPath { get; public set; }
    public List`1<string> Compile { get; }
    public List`1<string> Reference { get; }
    public string CodeGenOutputFile { get; public set; }
    public List`1<string> IdAttributes { get; public set; }
    public List`1<string> AliasAttributes { get; private set; }
    public List`1<string> ImmutableAttributes { get; private set; }
    public List`1<string> GenerateSerializerAttributes { get; private set; }
    private static CodeGeneratorCommand();
    [CompilerGeneratedAttribute]
public ILogger get_Log();
    [CompilerGeneratedAttribute]
public void set_Log(ILogger value);
    [CompilerGeneratedAttribute]
public string get_ProjectPath();
    [CompilerGeneratedAttribute]
public void set_ProjectPath(string value);
    [CompilerGeneratedAttribute]
public string get_ProjectGuid();
    [CompilerGeneratedAttribute]
public void set_ProjectGuid(string value);
    [CompilerGeneratedAttribute]
public string get_OutputType();
    [CompilerGeneratedAttribute]
public void set_OutputType(string value);
    [CompilerGeneratedAttribute]
public string get_TargetPath();
    [CompilerGeneratedAttribute]
public void set_TargetPath(string value);
    [CompilerGeneratedAttribute]
public List`1<string> get_Compile();
    [CompilerGeneratedAttribute]
public List`1<string> get_Reference();
    [CompilerGeneratedAttribute]
public string get_CodeGenOutputFile();
    [CompilerGeneratedAttribute]
public void set_CodeGenOutputFile(string value);
    [CompilerGeneratedAttribute]
public List`1<string> get_IdAttributes();
    [CompilerGeneratedAttribute]
public void set_IdAttributes(List`1<string> value);
    [CompilerGeneratedAttribute]
public List`1<string> get_AliasAttributes();
    [CompilerGeneratedAttribute]
private void set_AliasAttributes(List`1<string> value);
    [CompilerGeneratedAttribute]
public List`1<string> get_ImmutableAttributes();
    [CompilerGeneratedAttribute]
private void set_ImmutableAttributes(List`1<string> value);
    [CompilerGeneratedAttribute]
public List`1<string> get_GenerateSerializerAttributes();
    [CompilerGeneratedAttribute]
private void set_GenerateSerializerAttributes(List`1<string> value);
    [AsyncStateMachineAttribute("Orleans.CodeGenerator.MSBuild.CodeGeneratorCommand/<Execute>d__48")]
public Task`1<bool> Execute(CancellationToken cancellationToken);
    private static IEnumerable`1<DocumentInfo> GetDocuments(List`1<string> sources, ProjectId projectId);
    private static IEnumerable`1<MetadataReference> GetMetadataReferences(List`1<string> references);
    private static string GetLanguageName(string projectPath);
    private static CompilationOptions CreateCompilationOptions(string outputType, string languageName);
}
public static class Orleans.CodeGenerator.MSBuild.Program : object {
    public static int Main(String[] args);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
