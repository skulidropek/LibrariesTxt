[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[DataContractAttribute]
public class Microsoft.TeamFoundation.DistributedTask.Common.Contracts.AuthorizationHeader : BaseSecuredObject {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public string Value { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
}
[DataContractAttribute]
public class Microsoft.TeamFoundation.DistributedTask.Common.Contracts.DataSourceBindingBase : BaseSecuredObject {
    [CompilerGeneratedAttribute]
private string <DataSourceName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EndpointId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Target>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResultTemplate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RequestVerb>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RequestContent>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EndpointUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResultSelector>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CallbackContextTemplate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CallbackRequiredTemplate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InitialContextTemplate>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<AuthorizationHeader> <Headers>k__BackingField;
    private Dictionary`2<string, string> m_parameters;
    [DataMemberAttribute]
public string DataSourceName { get; public set; }
    [DataMemberAttribute]
public Dictionary`2<string, string> Parameters { get; }
    [DataMemberAttribute]
public string EndpointId { get; public set; }
    [DataMemberAttribute]
public string Target { get; public set; }
    [DataMemberAttribute]
public string ResultTemplate { get; public set; }
    [DataMemberAttribute]
public string RequestVerb { get; public set; }
    [DataMemberAttribute]
public string RequestContent { get; public set; }
    [DataMemberAttribute]
public string EndpointUrl { get; public set; }
    [DataMemberAttribute]
public string ResultSelector { get; public set; }
    [DataMemberAttribute]
public string CallbackContextTemplate { get; public set; }
    [DataMemberAttribute]
public string CallbackRequiredTemplate { get; public set; }
    [DataMemberAttribute]
public string InitialContextTemplate { get; public set; }
    [DataMemberAttribute]
public List`1<AuthorizationHeader> Headers { get; public set; }
    protected DataSourceBindingBase(DataSourceBindingBase inputDefinitionToClone);
    protected DataSourceBindingBase(DataSourceBindingBase inputDefinitionToClone, ISecuredObject securedObject);
    [CompilerGeneratedAttribute]
public string get_DataSourceName();
    [CompilerGeneratedAttribute]
public void set_DataSourceName(string value);
    public Dictionary`2<string, string> get_Parameters();
    public DataSourceBindingBase Clone(ISecuredObject securedObject);
    private void CloneHeaders(List`1<AuthorizationHeader> headers);
    [CompilerGeneratedAttribute]
public string get_EndpointId();
    [CompilerGeneratedAttribute]
public void set_EndpointId(string value);
    [CompilerGeneratedAttribute]
public string get_Target();
    [CompilerGeneratedAttribute]
public void set_Target(string value);
    [CompilerGeneratedAttribute]
public string get_ResultTemplate();
    [CompilerGeneratedAttribute]
public void set_ResultTemplate(string value);
    [CompilerGeneratedAttribute]
public string get_RequestVerb();
    [CompilerGeneratedAttribute]
public void set_RequestVerb(string value);
    [CompilerGeneratedAttribute]
public string get_RequestContent();
    [CompilerGeneratedAttribute]
public void set_RequestContent(string value);
    [CompilerGeneratedAttribute]
public string get_EndpointUrl();
    [CompilerGeneratedAttribute]
public void set_EndpointUrl(string value);
    [CompilerGeneratedAttribute]
public string get_ResultSelector();
    [CompilerGeneratedAttribute]
public void set_ResultSelector(string value);
    [CompilerGeneratedAttribute]
public string get_CallbackContextTemplate();
    [CompilerGeneratedAttribute]
public void set_CallbackContextTemplate(string value);
    [CompilerGeneratedAttribute]
public string get_CallbackRequiredTemplate();
    [CompilerGeneratedAttribute]
public void set_CallbackRequiredTemplate(string value);
    [CompilerGeneratedAttribute]
public string get_InitialContextTemplate();
    [CompilerGeneratedAttribute]
public void set_InitialContextTemplate(string value);
    [CompilerGeneratedAttribute]
public List`1<AuthorizationHeader> get_Headers();
    [CompilerGeneratedAttribute]
public void set_Headers(List`1<AuthorizationHeader> value);
}
[DataContractAttribute]
public class Microsoft.TeamFoundation.DistributedTask.Common.Contracts.ProcessParameters : BaseSecuredObject {
    [DataMemberAttribute]
private List`1<TaskInputDefinitionBase> m_serializedInputs;
    [DataMemberAttribute]
private List`1<TaskSourceDefinitionBase> m_serializedSourceDefinitions;
    [DataMemberAttribute]
private List`1<DataSourceBindingBase> m_serializedDataSourceBindings;
    private List`1<TaskInputDefinitionBase> m_inputs;
    private List`1<TaskSourceDefinitionBase> m_sourceDefinitions;
    private List`1<DataSourceBindingBase> m_dataSourceBindings;
    public IList`1<TaskInputDefinitionBase> Inputs { get; }
    public IList`1<TaskSourceDefinitionBase> SourceDefinitions { get; }
    public IList`1<DataSourceBindingBase> DataSourceBindings { get; }
    public ProcessParameters(ISecuredObject securedObject);
    private ProcessParameters(ProcessParameters toClone, ISecuredObject securedObject);
    public IList`1<TaskInputDefinitionBase> get_Inputs();
    public IList`1<TaskSourceDefinitionBase> get_SourceDefinitions();
    public IList`1<DataSourceBindingBase> get_DataSourceBindings();
    public virtual int GetHashCode();
    public virtual bool Equals(object obj);
    public ProcessParameters Clone(ISecuredObject securedObject);
    [OnDeserializedAttribute]
private void OnDeserialized(StreamingContext context);
    [OnSerializingAttribute]
private void OnSerializing(StreamingContext context);
    [OnSerializedAttribute]
private void OnSerialized(StreamingContext context);
}
internal static class Microsoft.TeamFoundation.DistributedTask.Common.Contracts.SerializationHelper : object {
    public static void Copy(List`1& source, List`1& target, bool clearSource);
    public static void Copy(IDictionary`2& source, IDictionary`2& target, bool clearSource);
    public static void Copy(IDictionary`2& source, IDictionary`2& target, IEqualityComparer`1<TKey> comparer, bool clearSource);
}
[DataContractAttribute]
public class Microsoft.TeamFoundation.DistributedTask.Common.Contracts.TaskInputDefinitionBase : BaseSecuredObject {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Label>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DefaultValue>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Required>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InputType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HelpMarkDown>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VisibleRule>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GroupName>k__BackingField;
    [CompilerGeneratedAttribute]
private TaskInputValidation <Validation>k__BackingField;
    [DataMemberAttribute]
private List`1<string> m_aliases;
    [DataMemberAttribute]
private Dictionary`2<string, string> m_options;
    [DataMemberAttribute]
private Dictionary`2<string, string> m_properties;
    public IList`1<string> Aliases { get; }
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public string Label { get; public set; }
    [DataMemberAttribute]
public string DefaultValue { get; public set; }
    [DataMemberAttribute]
public bool Required { get; public set; }
    [DataMemberAttribute]
public string InputType { get; public set; }
    [DataMemberAttribute]
public string HelpMarkDown { get; public set; }
    [DataMemberAttribute]
public string VisibleRule { get; public set; }
    [DataMemberAttribute]
public string GroupName { get; public set; }
    [DataMemberAttribute]
public TaskInputValidation Validation { get; public set; }
    public Dictionary`2<string, string> Options { get; }
    public Dictionary`2<string, string> Properties { get; public set; }
    protected TaskInputDefinitionBase(TaskInputDefinitionBase inputDefinitionToClone);
    protected TaskInputDefinitionBase(TaskInputDefinitionBase inputDefinitionToClone, ISecuredObject securedObject);
    public IList`1<string> get_Aliases();
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Label();
    [CompilerGeneratedAttribute]
public void set_Label(string value);
    [CompilerGeneratedAttribute]
public string get_DefaultValue();
    [CompilerGeneratedAttribute]
public void set_DefaultValue(string value);
    [CompilerGeneratedAttribute]
public bool get_Required();
    [CompilerGeneratedAttribute]
public void set_Required(bool value);
    [CompilerGeneratedAttribute]
public string get_InputType();
    [CompilerGeneratedAttribute]
public void set_InputType(string value);
    [CompilerGeneratedAttribute]
public string get_HelpMarkDown();
    [CompilerGeneratedAttribute]
public void set_HelpMarkDown(string value);
    [CompilerGeneratedAttribute]
public string get_VisibleRule();
    [CompilerGeneratedAttribute]
public void set_VisibleRule(string value);
    [CompilerGeneratedAttribute]
public string get_GroupName();
    [CompilerGeneratedAttribute]
public void set_GroupName(string value);
    [CompilerGeneratedAttribute]
public TaskInputValidation get_Validation();
    [CompilerGeneratedAttribute]
public void set_Validation(TaskInputValidation value);
    public Dictionary`2<string, string> get_Options();
    public Dictionary`2<string, string> get_Properties();
    public void set_Properties(Dictionary`2<string, string> value);
    public virtual TaskInputDefinitionBase Clone(ISecuredObject securedObject);
    public virtual int GetHashCode();
    public virtual bool Equals(object obj);
    private bool AreDictionariesEqual(Dictionary`2<string, string> input1, Dictionary`2<string, string> input2);
    private bool AreListsEqual(IList`1<string> list1, IList`1<string> list2);
}
public static class Microsoft.TeamFoundation.DistributedTask.Common.Contracts.TaskInputType : object {
    public static string String;
    public static string Repository;
    public static string Boolean;
    public static string KeyValue;
    public static string FilePath;
}
[DataContractAttribute]
public class Microsoft.TeamFoundation.DistributedTask.Common.Contracts.TaskInputValidation : BaseSecuredObject {
    [CompilerGeneratedAttribute]
private string <Expression>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [DataMemberAttribute]
public string Expression { get; public set; }
    [DataMemberAttribute]
public string Message { get; public set; }
    private TaskInputValidation(TaskInputValidation toClone, ISecuredObject securedObject);
    [CompilerGeneratedAttribute]
public string get_Expression();
    [CompilerGeneratedAttribute]
public void set_Expression(string value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    public virtual int GetHashCode();
    public TaskInputValidation Clone();
    public TaskInputValidation Clone(ISecuredObject securedObject);
}
[DataContractAttribute]
public class Microsoft.TeamFoundation.DistributedTask.Common.Contracts.TaskSourceDefinitionBase : BaseSecuredObject {
    [CompilerGeneratedAttribute]
private string <Endpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Target>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AuthKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Selector>k__BackingField;
    [CompilerGeneratedAttribute]
private string <KeySelector>k__BackingField;
    [DataMemberAttribute]
public string Endpoint { get; public set; }
    [DataMemberAttribute]
public string Target { get; public set; }
    [DataMemberAttribute]
public string AuthKey { get; public set; }
    [DataMemberAttribute]
public string Selector { get; public set; }
    [DataMemberAttribute]
public string KeySelector { get; public set; }
    protected TaskSourceDefinitionBase(TaskSourceDefinitionBase inputDefinitionToClone);
    protected TaskSourceDefinitionBase(TaskSourceDefinitionBase inputDefinitionToClone, ISecuredObject securedObject);
    public virtual TaskSourceDefinitionBase Clone(ISecuredObject securedObject);
    [CompilerGeneratedAttribute]
public string get_Endpoint();
    [CompilerGeneratedAttribute]
public void set_Endpoint(string value);
    [CompilerGeneratedAttribute]
public string get_Target();
    [CompilerGeneratedAttribute]
public void set_Target(string value);
    [CompilerGeneratedAttribute]
public string get_AuthKey();
    [CompilerGeneratedAttribute]
public void set_AuthKey(string value);
    [CompilerGeneratedAttribute]
public string get_Selector();
    [CompilerGeneratedAttribute]
public void set_Selector(string value);
    [CompilerGeneratedAttribute]
public string get_KeySelector();
    [CompilerGeneratedAttribute]
public void set_KeySelector(string value);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
