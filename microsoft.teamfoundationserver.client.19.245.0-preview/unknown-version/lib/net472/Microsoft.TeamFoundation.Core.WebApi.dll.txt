[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[DataContractAttribute]
public class Microsoft.TeamFoundation.Core.WebApi.CategorizedWebApiTeams : object {
    [CompilerGeneratedAttribute]
private IList`1<WebApiTeam> <MyTeams>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<WebApiTeam> <OtherReadableTeams>k__BackingField;
    [DataMemberAttribute]
public IList`1<WebApiTeam> MyTeams { get; public set; }
    [DataMemberAttribute]
public IList`1<WebApiTeam> OtherReadableTeams { get; public set; }
    public CategorizedWebApiTeams(IList`1<WebApiTeam> myTeams, IList`1<WebApiTeam> otherReadableTeams);
    [CompilerGeneratedAttribute]
public IList`1<WebApiTeam> get_MyTeams();
    [CompilerGeneratedAttribute]
public void set_MyTeams(IList`1<WebApiTeam> value);
    [CompilerGeneratedAttribute]
public IList`1<WebApiTeam> get_OtherReadableTeams();
    [CompilerGeneratedAttribute]
public void set_OtherReadableTeams(IList`1<WebApiTeam> value);
}
[ResourceAreaAttribute("79134C72-4A58-4B42-976C-04E7115F32BF")]
public class Microsoft.TeamFoundation.Core.WebApi.ConnectedServiceHttpClient : VssHttpClientBase {
    private ApiResourceVersion mCurrentApiVersion;
    public ConnectedServiceHttpClient(Uri baseUrl, VssCredentials credentials);
    public ConnectedServiceHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public ConnectedServiceHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public ConnectedServiceHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public ConnectedServiceHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    public Task`1<IEnumerable`1<WebApiConnectedService>> GetConnectedServices(string projectId, ConnectedServiceKind connectionServiceKind, CancellationToken cancellationToken, object userState);
    public Task`1<WebApiConnectedServiceDetails> GetConnectedServiceDetails(string projectId, string connectionName, CancellationToken cancellationToken, object userState);
    public Task`1<WebApiConnectedService> CreateConnectedService(string projectId, WebApiConnectedServiceDetails serviceDetails, CancellationToken cancellationToken, object userState);
}
public enum Microsoft.TeamFoundation.Core.WebApi.ConnectedServiceKind : Enum {
    public int value__;
    public static ConnectedServiceKind Custom;
    public static ConnectedServiceKind AzureSubscription;
    public static ConnectedServiceKind Chef;
    public static ConnectedServiceKind Generic;
}
public static class Microsoft.TeamFoundation.Core.WebApi.ConnectionServiceData : object {
    public static string ConnectedServiceMetaData;
    public static string EndPoint;
    public static string CredentialsXml;
    public static string AuthorizationSuffix;
    public static string ConnectedServiceType;
    public static string AuthorizationKey;
}
[ResourceAreaAttribute("contentValidation")]
public class Microsoft.TeamFoundation.Core.WebApi.ContentValidationHttpClient : VssHttpClientBase {
    public ContentValidationHttpClient(Uri baseUrl, VssCredentials credentials);
    public ContentValidationHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public ContentValidationHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public ContentValidationHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public ContentValidationHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    [AsyncStateMachineAttribute("Microsoft.TeamFoundation.Core.WebApi.ContentValidationHttpClient/<UpdateTakedownStatusAsync>d__5")]
[EditorBrowsableAttribute("1")]
public Task UpdateTakedownStatusAsync(Guid sourceProjectId, object userState, CancellationToken cancellationToken);
}
[GenerateAllConstantsAttribute("")]
public class Microsoft.TeamFoundation.Core.WebApi.CoreConstants : object {
    public static string AreaId;
    public static Guid AreaIdGuid;
    public static string AreaName;
    public static string ProcessAreaName;
    public static string ApiString;
    public static string JsonPatchMediaType;
    public static string ProcessResource;
    public static string ProjectsResource;
    public static string ProjectHistoryResource;
    public static string ProjectAvatarResource;
    public static string ProjectCollectionsResource;
    public static string TeamsResource;
    public static string CategorizedTeamsResource;
    public static string TeamMembersResource;
    public static string ConnectedServicesResource;
    public static string ProxyResource;
    public static string ProxyAuthorizationResource;
    public static string PropertiesResource;
    public static string ProjectsPropertiesResource;
    public static string ProjectCollectionsRouteName;
    public static string ProjectsRouteName;
    public static string ProjectHistoryRouteName;
    public static string ProjectAvatarRouteName;
    public static string ProcessesRouteName;
    public static string TeamsRouteName;
    public static string TeamsCategorizedRouteName;
    public static string CollectionTeamsRouteName;
    public static string TeamMembersRouteName;
    public static string ConnectedServicesRouteName;
    public static string ProxyRouteName;
    public static string PropertiesRouteName;
    public static string ProjectsPropertiesRouteName;
    public static Guid ProjectCollectionsLocationId;
    public static Guid ProjectsLocationId;
    public static Guid ProcessLocationId;
    public static Guid ProjectHistoryLocationId;
    public static Guid ProjectAvatarLocationId;
    public static string TeamsLocationIdString;
    public static Guid TeamsLocationId;
    public static string CollectionTeamsLocationIdString;
    public static Guid CollectionTeamsLocationId;
    public static string CategorizedTeamsLocationIdString;
    public static Guid CategorizedTeamsLocationId;
    public static Guid TeamMembersLocationId;
    public static Guid ConnectedServicesId;
    public static Guid ProxyId;
    public static Guid PropertiesLocationId;
    public static Guid ProjectsPropertiesLocationId;
    private static CoreConstants();
}
[ExceptionMappingAttribute("0.0", "3.0", "CreateTeamInputValuesException", "Microsoft.TeamFoundation.Core.WebApi.CreateTeamInputValuesException, Microsoft.TeamFoundation.Core.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.TeamFoundation.Core.WebApi.CreateTeamInputValuesException : VssServiceException {
    public CreateTeamInputValuesException(string message);
}
[ExceptionMappingAttribute("0.0", "3.0", "DefaultTeamNotFoundException", "Microsoft.TeamFoundation.Core.WebApi.DefaultTeamNotFoundException, Microsoft.TeamFoundation.Core.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.TeamFoundation.Core.WebApi.DefaultTeamNotFoundException : VssServiceException {
    public DefaultTeamNotFoundException(string message);
}
[ExceptionMappingAttribute("0.0", "3.0", "DeleteTeamInputValuesException", "Microsoft.TeamFoundation.Core.WebApi.DeleteTeamInputValuesException, Microsoft.TeamFoundation.Core.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.TeamFoundation.Core.WebApi.DeleteTeamInputValuesException : VssServiceException {
    public DeleteTeamInputValuesException(string message);
}
[ExceptionMappingAttribute("0.0", "3.0", "EmptyProjectNameException", "Microsoft.TeamFoundation.Core.WebApi.EmptyProjectNameException, Microsoft.TeamFoundation.Core.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.TeamFoundation.Core.WebApi.EmptyProjectNameException : ProjectException {
    public EmptyProjectNameException(string message, Exception innerException);
    protected EmptyProjectNameException(SerializationInfo info, StreamingContext context);
}
[EditorBrowsableAttribute("1")]
[DataContractAttribute]
public class Microsoft.TeamFoundation.Core.WebApi.IdentityData : object {
    [CompilerGeneratedAttribute]
private Guid[] <IdentityIds>k__BackingField;
    [DataMemberAttribute]
public Guid[] IdentityIds { get; public set; }
    [CompilerGeneratedAttribute]
public Guid[] get_IdentityIds();
    [CompilerGeneratedAttribute]
public void set_IdentityIds(Guid[] value);
}
[EditorBrowsableAttribute("1")]
[ResourceAreaAttribute("79134C72-4A58-4B42-976C-04E7115F32BF")]
public class Microsoft.TeamFoundation.Core.WebApi.IdentityMruHttpClient : VssHttpClientBase {
    public IdentityMruHttpClient(Uri baseUrl, VssCredentials credentials);
    public IdentityMruHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public IdentityMruHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public IdentityMruHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public IdentityMruHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    public Task CreateIdentityMruAsync(IdentityData mruData, string mruName, object userState, CancellationToken cancellationToken);
    public Task DeleteIdentityMruAsync(IdentityData mruData, string mruName, object userState, CancellationToken cancellationToken);
    public Task`1<List`1<IdentityRef>> GetIdentityMruAsync(string mruName, object userState, CancellationToken cancellationToken);
    public Task UpdateIdentityMruAsync(IdentityData mruData, string mruName, object userState, CancellationToken cancellationToken);
}
[EditorBrowsableAttribute("1")]
public class Microsoft.TeamFoundation.Core.WebApi.IdentityRefOrJValueConverter : VssSecureJsonConverter {
    public bool CanWrite { get; }
    public virtual bool CanConvert(Type objectType);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual bool get_CanWrite();
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.TeamFoundation.Core.WebApi.Internal.CssUtils : object {
    public static int MaxCssNodeNameLength;
    public static int MaxProjectLength;
    internal static int MaxSyncRefName;
    internal static int MaxSyncUniqueId;
    private static Char[] illegalCssChars;
    private static String[] illegalCssNames;
    private static String[] illegalProjectNames;
    private static Char[] illegalProjectChars;
    private static CssUtils();
    public static bool IsReservedCssName(string name);
    public static bool IsReservedProjectName(string name, bool checkReservedCssNames);
    public static bool HasInvalidCssCharacters(string name);
    public static bool IsValidCssNodeName(string name);
    public static bool IsValidProjectName(string projectName);
    private static bool TryCreateUri(string uriString, UriKind uriKind, Uri& result);
}
[ExceptionMappingAttribute("0.0", "3.0", "InvalidProjectCreateException", "Microsoft.TeamFoundation.Core.WebApi.InvalidProjectCreateException, Microsoft.TeamFoundation.Core.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.TeamFoundation.Core.WebApi.InvalidProjectCreateException : ProjectException {
    public InvalidProjectCreateException(string message);
}
[ExceptionMappingAttribute("0.0", "3.0", "InvalidProjectDeleteException", "Microsoft.TeamFoundation.Core.WebApi.InvalidProjectDeleteException, Microsoft.TeamFoundation.Core.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.TeamFoundation.Core.WebApi.InvalidProjectDeleteException : ProjectException {
    public InvalidProjectDeleteException(string message);
}
[ExceptionMappingAttribute("0.0", "3.0", "InvalidProjectNameException", "Microsoft.TeamFoundation.Core.WebApi.InvalidProjectNameException, Microsoft.TeamFoundation.Core.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.TeamFoundation.Core.WebApi.InvalidProjectNameException : ProjectException {
    public InvalidProjectNameException(string projectName);
    public InvalidProjectNameException(string message, Exception innerException);
    protected InvalidProjectNameException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.TeamFoundation.Core.WebApi.InvalidProxyUriException : VssServiceException {
    public InvalidProxyUriException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "InvalidTeamDescriptionException", "Microsoft.TeamFoundation.Core.WebApi.InvalidTeamDescriptionException, Microsoft.TeamFoundation.Core.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.TeamFoundation.Core.WebApi.InvalidTeamDescriptionException : VssServiceException {
    public InvalidTeamDescriptionException(string message);
}
[ExceptionMappingAttribute("0.0", "3.0", "InvalidTeamNameException", "Microsoft.TeamFoundation.Core.WebApi.InvalidTeamNameException, Microsoft.TeamFoundation.Core.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.TeamFoundation.Core.WebApi.InvalidTeamNameException : VssServiceException {
    public InvalidTeamNameException(string message);
}
[DataContractAttribute]
public class Microsoft.TeamFoundation.Core.WebApi.Process : ProcessReference {
    [CompilerGeneratedAttribute]
private Guid <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDefault>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceLinks <Links>k__BackingField;
    [CompilerGeneratedAttribute]
private ProcessType <Type>k__BackingField;
    [DataMemberAttribute]
public Guid Id { get; public set; }
    [DataMemberAttribute]
public string Description { get; public set; }
    [DataMemberAttribute]
public bool IsDefault { get; public set; }
    [DataMemberAttribute]
public ReferenceLinks Links { get; public set; }
    [DataMemberAttribute]
public ProcessType Type { get; public set; }
    [CompilerGeneratedAttribute]
public Guid get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(Guid value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public bool get_IsDefault();
    [CompilerGeneratedAttribute]
public void set_IsDefault(bool value);
    [CompilerGeneratedAttribute]
public ReferenceLinks get_Links();
    [CompilerGeneratedAttribute]
public void set_Links(ReferenceLinks value);
    [CompilerGeneratedAttribute]
public ProcessType get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(ProcessType value);
}
public enum Microsoft.TeamFoundation.Core.WebApi.ProcessCustomizationType : Enum {
    public int value__;
    public static ProcessCustomizationType Unknown;
    public static ProcessCustomizationType Xml;
    public static ProcessCustomizationType Inherited;
}
[ResourceAreaAttribute("79134C72-4A58-4B42-976C-04E7115F32BF")]
public class Microsoft.TeamFoundation.Core.WebApi.ProcessHttpClient : VssHttpClientBase {
    public ProcessHttpClient(Uri baseUrl, VssCredentials credentials);
    public ProcessHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public ProcessHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public ProcessHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public ProcessHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    public virtual Task`1<Process> GetProcessByIdAsync(Guid processId, object userState, CancellationToken cancellationToken);
    public virtual Task`1<List`1<Process>> GetProcessesAsync(object userState, CancellationToken cancellationToken);
}
[DataContractAttribute]
public class Microsoft.TeamFoundation.Core.WebApi.ProcessReference : object {
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [DataMemberAttribute]
public string Url { get; public set; }
    [DataMemberAttribute]
public string Name { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
}
public enum Microsoft.TeamFoundation.Core.WebApi.ProcessType : Enum {
    public int value__;
    public static ProcessType System;
    public static ProcessType Custom;
    public static ProcessType Inherited;
}
[ExceptionMappingAttribute("0.0", "3.0", "ProjectAlreadyExistsException", "Microsoft.TeamFoundation.Core.WebApi.ProjectAlreadyExistsException, Microsoft.TeamFoundation.Core.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.TeamFoundation.Core.WebApi.ProjectAlreadyExistsException : ProjectException {
    public ProjectAlreadyExistsException(string projectName);
    public ProjectAlreadyExistsException(string message, Exception innerException);
    protected ProjectAlreadyExistsException(SerializationInfo info, StreamingContext context);
}
[EditorBrowsableAttribute("1")]
[DataContractAttribute]
public class Microsoft.TeamFoundation.Core.WebApi.ProjectAvatar : object {
    [CompilerGeneratedAttribute]
private Byte[] <Image>k__BackingField;
    [DataMemberAttribute]
public Byte[] Image { get; public set; }
    [CompilerGeneratedAttribute]
public Byte[] get_Image();
    [CompilerGeneratedAttribute]
public void set_Image(Byte[] value);
}
public enum Microsoft.TeamFoundation.Core.WebApi.ProjectChangeType : Enum {
    public int value__;
    public static ProjectChangeType Modified;
    public static ProjectChangeType Deleted;
    public static ProjectChangeType Added;
}
[ResourceAreaAttribute("79134C72-4A58-4B42-976C-04E7115F32BF")]
public class Microsoft.TeamFoundation.Core.WebApi.ProjectCollectionHttpClient : VssHttpClientBase {
    private static ApiResourceVersion s_resourceVersion;
    private static Dictionary`2<string, Type> s_translatedExceptions;
    protected IDictionary`2<string, Type> TranslatedExceptions { get; }
    public ProjectCollectionHttpClient(Uri baseUrl, VssCredentials credentials);
    public ProjectCollectionHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public ProjectCollectionHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public ProjectCollectionHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public ProjectCollectionHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    private static ProjectCollectionHttpClient();
    protected virtual IDictionary`2<string, Type> get_TranslatedExceptions();
    public Task`1<TeamProjectCollection> GetProjectCollection(string id, object userState);
    public Task`1<IEnumerable`1<TeamProjectCollectionReference>> GetProjectCollections(Nullable`1<int> top, Nullable`1<int> skip, object userState);
}
[EditorBrowsableAttribute("1")]
public class Microsoft.TeamFoundation.Core.WebApi.ProjectCompatHttpClientBase : VssHttpClientBase {
    public ProjectCompatHttpClientBase(Uri baseUrl, VssCredentials credentials);
    public ProjectCompatHttpClientBase(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public ProjectCompatHttpClientBase(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public ProjectCompatHttpClientBase(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public ProjectCompatHttpClientBase(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    [EditorBrowsableAttribute("1")]
[ObsoleteAttribute]
public Task`1<IEnumerable`1<TeamProjectReference>> GetProjects(Nullable`1<ProjectState> stateFilter, Nullable`1<int> top, Nullable`1<int> skip, object userState);
}
[ExceptionMappingAttribute("0.0", "3.0", "ProjectDoesNotExistException", "Microsoft.TeamFoundation.Core.WebApi.ProjectDoesNotExistException, Microsoft.TeamFoundation.Core.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.TeamFoundation.Core.WebApi.ProjectDoesNotExistException : ProjectException {
    public ProjectDoesNotExistException(string projectId);
    public ProjectDoesNotExistException(Uri projectUri);
    public ProjectDoesNotExistException(string message, Exception innerException);
    protected ProjectDoesNotExistException(SerializationInfo info, StreamingContext context);
}
[ExceptionMappingAttribute("0.0", "3.0", "ProjectDoesNotExistWithNameException", "Microsoft.TeamFoundation.Core.WebApi.ProjectDoesNotExistWithNameException, Microsoft.TeamFoundation.Core.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.TeamFoundation.Core.WebApi.ProjectDoesNotExistWithNameException : ProjectException {
    public ProjectDoesNotExistWithNameException(string projectName);
    public ProjectDoesNotExistWithNameException(string message, Exception innerException);
    protected ProjectDoesNotExistWithNameException(SerializationInfo info, StreamingContext context);
}
[ExceptionMappingAttribute("0.0", "3.0", "ProjectException", "Microsoft.TeamFoundation.Core.WebApi.ProjectException, Microsoft.TeamFoundation.Core.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.TeamFoundation.Core.WebApi.ProjectException : VssServiceException {
    public ProjectException(string message, Exception innerException);
    public ProjectException(string message);
    protected ProjectException(SerializationInfo info, StreamingContext context);
}
[ResourceAreaAttribute("79134C72-4A58-4B42-976C-04E7115F32BF")]
public class Microsoft.TeamFoundation.Core.WebApi.ProjectHttpClient : ProjectHttpClientBase {
    private static Dictionary`2<string, Type> s_translatedExceptions;
    private static ApiResourceVersion s_resourceVersion;
    internal HttpRequestHeaders DefaultRequestHeaders { get; }
    protected IDictionary`2<string, Type> TranslatedExceptions { get; }
    private static ProjectHttpClient();
    public ProjectHttpClient(Uri baseUrl, VssCredentials credentials);
    public ProjectHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public ProjectHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public ProjectHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public ProjectHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    internal HttpRequestHeaders get_DefaultRequestHeaders();
    protected virtual IDictionary`2<string, Type> get_TranslatedExceptions();
    public virtual Task`1<TeamProject> GetProject(string id, Nullable`1<bool> includeCapabilities, bool includeHistory, object userState);
    public virtual Task`1<IPagedList`1<TeamProjectReference>> GetProjects(Nullable`1<ProjectState> stateFilter, Nullable`1<int> top, Nullable`1<int> skip, object userState, string continuationToken);
    public virtual Task`1<IPagedList`1<TeamProjectReference>> GetProjects(Nullable`1<ProjectState> stateFilter, Nullable`1<int> top, Nullable`1<int> skip, object userState, string continuationToken, Nullable`1<bool> getDefaultTeamImageUrl);
    [AsyncStateMachineAttribute("Microsoft.TeamFoundation.Core.WebApi.ProjectHttpClient/<GetProjectsAsync>d__15")]
private Task`1<IPagedList`1<TeamProjectReference>> GetProjectsAsync(IEnumerable`1<KeyValuePair`2<string, string>> queryParams, object userState);
    [EditorBrowsableAttribute("1")]
[ObsoleteAttribute("Use GetProjectHistoryEntriesAsync instead")]
public Task`1<IEnumerable`1<TeamProjectReference>> GetProjectHistory(long minRevision, object userState);
    public Task`1<OperationReference> QueueCreateProject(TeamProject projectToCreate, object userState);
    public Task`1<OperationReference> QueueDeleteProject(Guid projectId, object userState);
    public Task`1<OperationReference> QueueDeleteProject(Guid projectId, bool hardDelete, object userState);
    public Task`1<OperationReference> UpdateProject(Guid projectToUpdateId, TeamProject projectUpdate, object userState);
    public Task`1<ApiResourceLocation> Options();
}
[ResourceAreaAttribute("79134C72-4A58-4B42-976C-04E7115F32BF")]
[ClientCancellationTimeoutAttribute("45")]
[ClientCircuitBreakerSettingsAttribute("15", "50")]
public abstract class Microsoft.TeamFoundation.Core.WebApi.ProjectHttpClientBase : ProjectCompatHttpClientBase {
    public ProjectHttpClientBase(Uri baseUrl, VssCredentials credentials);
    public ProjectHttpClientBase(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public ProjectHttpClientBase(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public ProjectHttpClientBase(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public ProjectHttpClientBase(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    [AsyncStateMachineAttribute("Microsoft.TeamFoundation.Core.WebApi.ProjectHttpClientBase/<RemoveProjectAvatarAsync>d__5")]
public virtual Task RemoveProjectAvatarAsync(string projectId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.TeamFoundation.Core.WebApi.ProjectHttpClientBase/<SetProjectAvatarAsync>d__6")]
public virtual Task SetProjectAvatarAsync(ProjectAvatar avatarBlob, string projectId, object userState, CancellationToken cancellationToken);
    [EditorBrowsableAttribute("1")]
public virtual Task`1<List`1<ProjectInfo>> GetProjectHistoryEntriesAsync(Nullable`1<long> minRevision, object userState, CancellationToken cancellationToken);
    [EditorBrowsableAttribute("1")]
public virtual Task`1<List`1<ProjectProperties>> GetProjectsPropertiesAsync(IEnumerable`1<Guid> projectIds, IEnumerable`1<string> properties, object userState, CancellationToken cancellationToken);
    public virtual Task`1<List`1<ProjectProperty>> GetProjectPropertiesAsync(Guid projectId, IEnumerable`1<string> keys, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.TeamFoundation.Core.WebApi.ProjectHttpClientBase/<SetProjectPropertiesAsync>d__10")]
public virtual Task SetProjectPropertiesAsync(Guid projectId, JsonPatchDocument patchDocument, object userState, CancellationToken cancellationToken);
}
internal static class Microsoft.TeamFoundation.Core.WebApi.ProjectHttpHeaders : object {
    public static string BypassProjectPropertyCache;
}
[ServiceEventObjectAttribute]
[DataContractAttribute]
public class Microsoft.TeamFoundation.Core.WebApi.ProjectInfo : object {
    [CompilerGeneratedAttribute]
private string <Uri>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Abbreviation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private ProjectVisibility <Visibility>k__BackingField;
    [CompilerGeneratedAttribute]
private ProjectState <State>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ProjectProperty> <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Revision>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <UserId>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <LastUpdateTime>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <KnownNames>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsProjectForUpdate>k__BackingField;
    public static int c_maxProjectAbbreviationLength;
    [DataMemberAttribute]
public string Uri { get; public set; }
    [DataMemberAttribute]
public Guid Id { get; public set; }
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public string Abbreviation { get; public set; }
    [DataMemberAttribute]
public string Description { get; public set; }
    [DataMemberAttribute]
public ProjectVisibility Visibility { get; public set; }
    [DataMemberAttribute]
public ProjectState State { get; public set; }
    [DataMemberAttribute]
public IList`1<ProjectProperty> Properties { get; public set; }
    [DataMemberAttribute]
public long Revision { get; public set; }
    [IgnoreDataMemberAttribute]
public Guid UserId { get; public set; }
    [DataMemberAttribute]
public DateTime LastUpdateTime { get; public set; }
    [DataMemberAttribute]
public long Version { get; public set; }
    [IgnoreDataMemberAttribute]
public IList`1<string> KnownNames { get; public set; }
    [IgnoreDataMemberAttribute]
public bool IsProjectForUpdate { get; private set; }
    [IgnoreDataMemberAttribute]
public bool IsSoftDeleted { get; }
    public ProjectInfo(Guid id, string name, ProjectState state, string abbreviation, string description);
    public ProjectInfo(Guid id, string name, ProjectState state, ProjectVisibility visibility, string abbreviation, string description);
    [CompilerGeneratedAttribute]
public string get_Uri();
    [CompilerGeneratedAttribute]
public void set_Uri(string value);
    [CompilerGeneratedAttribute]
public Guid get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(Guid value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Abbreviation();
    [CompilerGeneratedAttribute]
public void set_Abbreviation(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public ProjectVisibility get_Visibility();
    [CompilerGeneratedAttribute]
public void set_Visibility(ProjectVisibility value);
    [CompilerGeneratedAttribute]
public ProjectState get_State();
    [CompilerGeneratedAttribute]
public void set_State(ProjectState value);
    [CompilerGeneratedAttribute]
public IList`1<ProjectProperty> get_Properties();
    [CompilerGeneratedAttribute]
public void set_Properties(IList`1<ProjectProperty> value);
    [CompilerGeneratedAttribute]
public long get_Revision();
    [CompilerGeneratedAttribute]
public void set_Revision(long value);
    [CompilerGeneratedAttribute]
public Guid get_UserId();
    [CompilerGeneratedAttribute]
public void set_UserId(Guid value);
    [CompilerGeneratedAttribute]
public DateTime get_LastUpdateTime();
    [CompilerGeneratedAttribute]
public void set_LastUpdateTime(DateTime value);
    public void set_Version(long value);
    public long get_Version();
    [CompilerGeneratedAttribute]
public IList`1<string> get_KnownNames();
    [CompilerGeneratedAttribute]
public void set_KnownNames(IList`1<string> value);
    [CompilerGeneratedAttribute]
public bool get_IsProjectForUpdate();
    [CompilerGeneratedAttribute]
private void set_IsProjectForUpdate(bool value);
    public bool get_IsSoftDeleted();
    public ProjectInfo Clone();
    public virtual string ToString();
    public virtual bool Equals(object that);
    public virtual int GetHashCode();
    public void SetProjectUri();
    public static string GetProjectUri(string id);
    public static string GetProjectUri(Guid id);
    public static Guid GetProjectId(string uri);
    public static ProjectInfo GetProjectToUpdate(Guid id);
    public static string NormalizeProjectUri(string projectUri);
    public static string NormalizeProjectName(string projectName, string parameterName, bool allowGuid, bool checkValidity);
    public static string NormalizeProjectAbbreviation(string projectAbbreviation, string parameterName);
    private static bool IsDGuid(string projectName);
}
[DataContractAttribute]
[KnownTypeAttribute("Microsoft.TeamFoundation.Core.WebApi.ProjectInfo")]
[ServiceEventObjectAttribute]
public class Microsoft.TeamFoundation.Core.WebApi.ProjectMessage : object {
    [CompilerGeneratedAttribute]
private ProjectInfo <Project>k__BackingField;
    [CompilerGeneratedAttribute]
private ProjectChangeType <ProjectChangeType>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ShouldInvalidateSystemStore>k__BackingField;
    [DataMemberAttribute]
public ProjectInfo Project { get; public set; }
    [DataMemberAttribute]
public ProjectChangeType ProjectChangeType { get; public set; }
    [DataMemberAttribute]
public bool ShouldInvalidateSystemStore { get; public set; }
    public ProjectMessage(ProjectInfo project, ProjectChangeType changeType, bool shouldInvalidateSystemStore);
    public ProjectMessage(ProjectInfo project, ProjectChangeType changeType);
    [CompilerGeneratedAttribute]
public ProjectInfo get_Project();
    [CompilerGeneratedAttribute]
public void set_Project(ProjectInfo value);
    [CompilerGeneratedAttribute]
public ProjectChangeType get_ProjectChangeType();
    [CompilerGeneratedAttribute]
public void set_ProjectChangeType(ProjectChangeType value);
    [CompilerGeneratedAttribute]
public bool get_ShouldInvalidateSystemStore();
    [CompilerGeneratedAttribute]
public void set_ShouldInvalidateSystemStore(bool value);
}
public class Microsoft.TeamFoundation.Core.WebApi.ProjectMessageConstants : object {
    public static string MessageTopic;
    public static Guid PublishProjectMessageJob;
    public static string Root;
    public static string PublishDeletedWatermark;
    public static string PublishModifiedWatermark;
    private static ProjectMessageConstants();
}
[ExceptionMappingAttribute("0.0", "3.0", "ProjectNameNotRecognizedException", "Microsoft.TeamFoundation.Core.WebApi.ProjectNameNotRecognizedException, Microsoft.TeamFoundation.Core.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.TeamFoundation.Core.WebApi.ProjectNameNotRecognizedException : ProjectException {
    public ProjectNameNotRecognizedException(string projectName);
    public ProjectNameNotRecognizedException(string message, Exception innerException);
    protected ProjectNameNotRecognizedException(SerializationInfo info, StreamingContext context);
}
[DataContractAttribute]
public class Microsoft.TeamFoundation.Core.WebApi.ProjectProperties : object {
    [DataMemberAttribute]
public Guid ProjectId;
    [DataMemberAttribute]
public IEnumerable`1<ProjectProperty> Properties;
    private Guid Microsoft.VisualStudio.Services.WebApi.ISecuredObject.NamespaceId { get; }
    private int Microsoft.VisualStudio.Services.WebApi.ISecuredObject.RequiredPermissions { get; }
    private sealed virtual override Guid Microsoft.VisualStudio.Services.WebApi.ISecuredObject.get_NamespaceId();
    private sealed virtual override int Microsoft.VisualStudio.Services.WebApi.ISecuredObject.get_RequiredPermissions();
    private sealed virtual override string Microsoft.VisualStudio.Services.WebApi.ISecuredObject.GetToken();
}
[DataContractAttribute]
public class Microsoft.TeamFoundation.Core.WebApi.ProjectProperty : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <ProjectId>k__BackingField;
    public static int MaxPropertyNameLength;
    public static int MaxPropertyValueLength;
    public static string SystemPropertyPrefix;
    public static char JsonPatchOperationPathSeparator;
    private static Char[] s_invalidProjectPropertyNameChars;
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public object Value { get; public set; }
    private Guid Microsoft.VisualStudio.Services.WebApi.ISecuredObject.NamespaceId { get; }
    private int Microsoft.VisualStudio.Services.WebApi.ISecuredObject.RequiredPermissions { get; }
    internal Guid ProjectId { get; internal set; }
    public ProjectProperty(string name, object value);
    private static ProjectProperty();
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public object get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(object value);
    public ProjectProperty Clone();
    private sealed virtual override Guid Microsoft.VisualStudio.Services.WebApi.ISecuredObject.get_NamespaceId();
    private sealed virtual override int Microsoft.VisualStudio.Services.WebApi.ISecuredObject.get_RequiredPermissions();
    [CompilerGeneratedAttribute]
internal Guid get_ProjectId();
    [CompilerGeneratedAttribute]
internal void set_ProjectId(Guid value);
    private sealed virtual override string Microsoft.VisualStudio.Services.WebApi.ISecuredObject.GetToken();
    public static void NormalizePropertyNameFilters(IEnumerable`1& propertyNameFilters, string parameterName);
    public static void NormalizeProperties(IList`1& properties, string parameterName);
    public static void NormalizeProperty(ProjectProperty& property, string parameterName);
    public static JsonPatchDocument CreateJsonPatchDocument(IEnumerable`1<ProjectProperty> projectProperties);
    private static string NormalizePropertyName(string propertyName);
    private static object NormalizePropertyValue(object propertyValue);
}
[GenerateAllConstantsAttribute("")]
public enum Microsoft.TeamFoundation.Core.WebApi.ProjectState : Enum {
    public int value__;
    [EnumMemberAttribute]
public static ProjectState Deleting;
    [EnumMemberAttribute]
public static ProjectState New;
    [EnumMemberAttribute]
public static ProjectState WellFormed;
    [EnumMemberAttribute]
public static ProjectState CreatePending;
    [EnumMemberAttribute]
public static ProjectState All;
    [EnumMemberAttribute]
public static ProjectState Unchanged;
    [EnumMemberAttribute]
public static ProjectState Deleted;
}
public enum Microsoft.TeamFoundation.Core.WebApi.ProjectVisibility : Enum {
    public int value__;
    [ClientInternalUseOnlyAttribute("True")]
public static ProjectVisibility Unchanged;
    public static ProjectVisibility Private;
    [ClientInternalUseOnlyAttribute("False")]
public static ProjectVisibility Organization;
    [EditorBrowsableAttribute("1")]
public static ProjectVisibility Public;
    [ClientInternalUseOnlyAttribute("True")]
public static ProjectVisibility SystemPrivate;
}
[ExceptionMappingAttribute("0.0", "3.0", "ProjectWorkPendingException", "Microsoft.TeamFoundation.Core.WebApi.ProjectWorkPendingException, Microsoft.TeamFoundation.Core.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.TeamFoundation.Core.WebApi.ProjectWorkPendingException : ProjectException {
    public ProjectWorkPendingException(string projectName);
    public ProjectWorkPendingException(string message, Exception innerException);
    protected ProjectWorkPendingException(SerializationInfo info, StreamingContext context);
}
[EditorBrowsableAttribute("1")]
[DataContractAttribute]
public class Microsoft.TeamFoundation.Core.WebApi.Proxy : object {
    [CompilerGeneratedAttribute]
private Guid <ProxyId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FriendlyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Site>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <SiteDefault>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <GlobalDefault>k__BackingField;
    [CompilerGeneratedAttribute]
private ProxyAuthorization <Authorization>k__BackingField;
    [EditorBrowsableAttribute("1")]
public Guid ProxyId { get; public set; }
    [DataMemberAttribute]
public string Url { get; public set; }
    [DataMemberAttribute]
public string FriendlyName { get; public set; }
    [DataMemberAttribute]
public string Site { get; public set; }
    [DataMemberAttribute]
public string Description { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> SiteDefault { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> GlobalDefault { get; public set; }
    [DataMemberAttribute]
public ProxyAuthorization Authorization { get; public set; }
    [CompilerGeneratedAttribute]
public Guid get_ProxyId();
    [CompilerGeneratedAttribute]
public void set_ProxyId(Guid value);
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
    [CompilerGeneratedAttribute]
public string get_FriendlyName();
    [CompilerGeneratedAttribute]
public void set_FriendlyName(string value);
    [CompilerGeneratedAttribute]
public string get_Site();
    [CompilerGeneratedAttribute]
public void set_Site(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_SiteDefault();
    [CompilerGeneratedAttribute]
public void set_SiteDefault(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_GlobalDefault();
    [CompilerGeneratedAttribute]
public void set_GlobalDefault(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public ProxyAuthorization get_Authorization();
    [CompilerGeneratedAttribute]
public void set_Authorization(ProxyAuthorization value);
}
[DataContractAttribute]
public class Microsoft.TeamFoundation.Core.WebApi.ProxyAuthorization : object {
    [CompilerGeneratedAttribute]
private Uri <AuthorizationUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private PublicKey <PublicKey>k__BackingField;
    [CompilerGeneratedAttribute]
private IdentityDescriptor <Identity>k__BackingField;
    [DataMemberAttribute]
public Uri AuthorizationUrl { get; public set; }
    [DataMemberAttribute]
public Guid ClientId { get; public set; }
    [DataMemberAttribute]
public PublicKey PublicKey { get; public set; }
    [DataMemberAttribute]
public IdentityDescriptor Identity { get; public set; }
    [CompilerGeneratedAttribute]
public Uri get_AuthorizationUrl();
    [CompilerGeneratedAttribute]
public void set_AuthorizationUrl(Uri value);
    [CompilerGeneratedAttribute]
public Guid get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(Guid value);
    [CompilerGeneratedAttribute]
public PublicKey get_PublicKey();
    [CompilerGeneratedAttribute]
public void set_PublicKey(PublicKey value);
    [CompilerGeneratedAttribute]
public IdentityDescriptor get_Identity();
    [CompilerGeneratedAttribute]
public void set_Identity(IdentityDescriptor value);
}
[ResourceAreaAttribute("79134C72-4A58-4B42-976C-04E7115F32BF")]
public class Microsoft.TeamFoundation.Core.WebApi.ProxyHttpClient : VssHttpClientBase {
    public ProxyHttpClient(Uri baseUrl, VssCredentials credentials);
    public ProxyHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public ProxyHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public ProxyHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public ProxyHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    public Task`1<Proxy> CreateOrUpdateProxyAsync(Proxy proxy, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.TeamFoundation.Core.WebApi.ProxyHttpClient/<DeleteProxyAsync>d__6")]
public Task DeleteProxyAsync(string proxyUrl, string site, object userState, CancellationToken cancellationToken);
    public Task`1<List`1<Proxy>> GetProxiesAsync(string proxyUrl, object userState, CancellationToken cancellationToken);
}
internal class Microsoft.TeamFoundation.Core.WebApi.QueryParamConstants : object {
    internal static string ContinuationToken;
    internal static string Top;
    internal static string Skip;
    internal static string IncludeCapabilities;
    internal static string IncludeHistory;
    internal static string StateFilter;
    internal static string IncludeChanges;
    internal static string MinRevision;
    internal static string GetDefaultTeamImageUrl;
    internal static string ConnectedServiceKind;
    internal static string ConnectedServiceName;
}
internal static class Microsoft.TeamFoundation.Core.WebApi.QueryParamHelper : object {
    internal static void AddNonNullParam(List`1<KeyValuePair`2<string, string>> queryParams, string paramName, object paramValue);
}
[DataContractAttribute]
public enum Microsoft.TeamFoundation.Core.WebApi.SourceControlTypes : Enum {
    public int value__;
    [EnumMemberAttribute]
public static SourceControlTypes Tfvc;
    [EnumMemberAttribute]
public static SourceControlTypes Git;
}
[EditorBrowsableAttribute("1")]
public class Microsoft.TeamFoundation.Core.WebApi.TaggingHelper : object {
    private static string c_tagsFormatSeparator;
    public static Char[] TagSeparators;
    public static int MaxTagNameLength;
    public static int DefaultTagDefinitionLimit;
    public static string TagLimitRegistryPath;
    public static string EnforceTagLimitsFeatureFlag;
    private static string c_tagRegistryPathRoot;
    private static TaggingHelper();
    public static IEnumerable`1<string> SplitTagText(string text);
    public static string FormatTagsValue(IEnumerable`1<string> tags);
}
[ResourceAreaAttribute("1F131D7F-CFBB-4EC9-B358-FB4E8341CE59")]
public class Microsoft.TeamFoundation.Core.WebApi.TaggingHttpClient : VssHttpClientBase {
    public TaggingHttpClient(Uri baseUrl, VssCredentials credentials);
    public TaggingHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public TaggingHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public TaggingHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public TaggingHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    public virtual Task`1<WebApiTagDefinition> GetTagAsync(Guid scopeId, Guid tagId, object userState, CancellationToken cancellationToken);
    public virtual Task`1<WebApiTagDefinition> GetTagAsync(Guid scopeId, string name, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.TeamFoundation.Core.WebApi.TaggingHttpClient/<GetTagsAsync>d__7")]
public virtual Task`1<WebApiTagDefinitionList> GetTagsAsync(Guid scopeId, bool includeInactive, object userState, CancellationToken cancellationToken);
    public Task`1<WebApiTagDefinition> CreateTagAsync(Guid scopeId, string name, object userState, CancellationToken cancellationToken);
    public Task`1<WebApiTagDefinition> UpdateTagAsync(Guid scopeId, Guid tagId, string name, Nullable`1<bool> active, object userState, CancellationToken cancellationToken);
    public virtual Task DeleteTagAsync(Guid scopeId, Guid tagId, object userState, CancellationToken cancellationToken);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.TeamFoundation.Core.WebApi.TaggingWebApiConstants : object {
    public static string TaggingAreaId;
    public static string TaggingAreaName;
    public static string TagsResource;
    public static string ScopesResource;
    public static string TagIdUrlPlaceholder;
    public static string ScopeIdUrlPlaceholder;
    public static Guid TagsLocationId;
    private static TaggingWebApiConstants();
}
[DataContractAttribute]
public class Microsoft.TeamFoundation.Core.WebApi.Team.UpdateTeam : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public string Description { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    public static WebApiTeam op_Implicit(UpdateTeam updateTeamContract);
}
[ExceptionMappingAttribute("0.0", "3.0", "TeamAlreadyExistsException", "Microsoft.TeamFoundation.Core.WebApi.TeamAlreadyExistsException, Microsoft.TeamFoundation.Core.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.TeamFoundation.Core.WebApi.TeamAlreadyExistsException : VssServiceException {
    public TeamAlreadyExistsException(string message);
}
public abstract class Microsoft.TeamFoundation.Core.WebApi.TeamCompatHttpClientBase : VssHttpClientBase {
    public TeamCompatHttpClientBase(Uri baseUrl, VssCredentials credentials);
    public TeamCompatHttpClientBase(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public TeamCompatHttpClientBase(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public TeamCompatHttpClientBase(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public TeamCompatHttpClientBase(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    [ObsoleteAttribute("Use GetTeamMembersWithExtendedPropertiesAsync method", "False")]
[EditorBrowsableAttribute("1")]
public Task`1<IEnumerable`1<IdentityRef>> GetTeamMembersAsync(string projectId, string teamId, Nullable`1<int> top, Nullable`1<int> skip, object userState, CancellationToken cancellationToken);
    [ObsoleteAttribute]
[EditorBrowsableAttribute("1")]
public virtual Task`1<List`1<WebApiTeam>> GetTeamsAsync(string projectId, Nullable`1<int> top, Nullable`1<int> skip, object userState, CancellationToken cancellationToken);
    [ObsoleteAttribute]
[EditorBrowsableAttribute("1")]
public virtual Task`1<List`1<WebApiTeam>> GetAllTeamsAsync(Nullable`1<bool> mine, Nullable`1<int> top, Nullable`1<int> skip, object userState, CancellationToken cancellationToken);
    [ObsoleteAttribute]
[EditorBrowsableAttribute("1")]
public virtual Task`1<WebApiTeam> GetTeamAsync(string projectId, string teamId, object userState, CancellationToken cancellationToken);
    [ObsoleteAttribute]
[EditorBrowsableAttribute("1")]
public virtual Task`1<List`1<WebApiTeam>> GetTeamsAsync(string projectId, Nullable`1<bool> mine, Nullable`1<int> top, Nullable`1<int> skip, object userState, CancellationToken cancellationToken);
}
[ResourceAreaAttribute("79134C72-4A58-4B42-976C-04E7115F32BF")]
public class Microsoft.TeamFoundation.Core.WebApi.TeamHttpClient : TeamHttpClientBase {
    private static Dictionary`2<string, Type> s_translatedExceptions;
    private static TeamHttpClient();
    public TeamHttpClient(Uri baseUrl, VssCredentials credentials);
    public TeamHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public TeamHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public TeamHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public TeamHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    [ObsoleteAttribute("Use GetTeamsAsync method", "False")]
public Task`1<IEnumerable`1<WebApiTeam>> GetTeams(string projectId, Nullable`1<int> top, Nullable`1<int> skip, object userState);
    [ObsoleteAttribute("Use GetTeamAsync method", "False")]
public Task`1<WebApiTeam> GetTeam(string projectId, string teamId, object userState);
    [ObsoleteAttribute("Use GetTeamMembersAsync method", "False")]
public Task`1<IEnumerable`1<IdentityRef>> GetTeamMembers(string projectId, string teamId, Nullable`1<int> top, Nullable`1<int> skip, object userState);
    [AsyncStateMachineAttribute("Microsoft.TeamFoundation.Core.WebApi.TeamHttpClient/<GetTeamsAsyncWrapper>d__10")]
private Task`1<IEnumerable`1<WebApiTeam>> GetTeamsAsyncWrapper(string projectId, Nullable`1<int> top, Nullable`1<int> skip, object userState);
}
[ResourceAreaAttribute("79134C72-4A58-4B42-976C-04E7115F32BF")]
public abstract class Microsoft.TeamFoundation.Core.WebApi.TeamHttpClientBase : TeamCompatHttpClientBase {
    public TeamHttpClientBase(Uri baseUrl, VssCredentials credentials);
    public TeamHttpClientBase(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public TeamHttpClientBase(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public TeamHttpClientBase(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public TeamHttpClientBase(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    public virtual Task`1<CategorizedWebApiTeams> GetProjectTeamsByCategoryAsync(string projectId, Nullable`1<bool> expandIdentity, Nullable`1<int> top, Nullable`1<int> skip, object userState, CancellationToken cancellationToken);
    public virtual Task`1<List`1<TeamMember>> GetTeamMembersWithExtendedPropertiesAsync(string projectId, string teamId, Nullable`1<int> top, Nullable`1<int> skip, object userState, CancellationToken cancellationToken);
    public virtual Task`1<List`1<WebApiTeam>> GetAllTeamsAsync(Nullable`1<bool> mine, Nullable`1<int> top, Nullable`1<int> skip, Nullable`1<bool> expandIdentity, object userState, CancellationToken cancellationToken);
    public virtual Task`1<WebApiTeam> CreateTeamAsync(WebApiTeam team, string projectId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.TeamFoundation.Core.WebApi.TeamHttpClientBase/<DeleteTeamAsync>d__9")]
public virtual Task DeleteTeamAsync(string projectId, string teamId, object userState, CancellationToken cancellationToken);
    public virtual Task`1<WebApiTeam> GetTeamAsync(string projectId, string teamId, Nullable`1<bool> expandIdentity, object userState, CancellationToken cancellationToken);
    public virtual Task`1<List`1<WebApiTeam>> GetTeamsAsync(string projectId, Nullable`1<bool> mine, Nullable`1<int> top, Nullable`1<int> skip, Nullable`1<bool> expandIdentity, object userState, CancellationToken cancellationToken);
    public virtual Task`1<WebApiTeam> UpdateTeamAsync(WebApiTeam teamData, string projectId, string teamId, object userState, CancellationToken cancellationToken);
}
[ExceptionMappingAttribute("0.0", "3.0", "TeamNotFoundException", "Microsoft.TeamFoundation.Core.WebApi.TeamNotFoundException, Microsoft.TeamFoundation.Core.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.TeamFoundation.Core.WebApi.TeamNotFoundException : VssServiceException {
    public TeamNotFoundException(string message);
}
[DataContractAttribute]
public class Microsoft.TeamFoundation.Core.WebApi.TeamProject : TeamProjectReference {
    [CompilerGeneratedAttribute]
private Dictionary`2<string, Dictionary`2<string, string>> <Capabilities>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceLinks <Links>k__BackingField;
    [CompilerGeneratedAttribute]
private WebApiTeamRef <DefaultTeam>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TfsUri>k__BackingField;
    [DataMemberAttribute]
public Dictionary`2<string, Dictionary`2<string, string>> Capabilities { get; public set; }
    [DataMemberAttribute]
public ReferenceLinks Links { get; public set; }
    [DataMemberAttribute]
public WebApiTeamRef DefaultTeam { get; public set; }
    public string TfsUri { get; public set; }
    public TeamProject(TeamProjectReference projectReference);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, Dictionary`2<string, string>> get_Capabilities();
    [CompilerGeneratedAttribute]
public void set_Capabilities(Dictionary`2<string, Dictionary`2<string, string>> value);
    [CompilerGeneratedAttribute]
public ReferenceLinks get_Links();
    [CompilerGeneratedAttribute]
public void set_Links(ReferenceLinks value);
    [CompilerGeneratedAttribute]
public WebApiTeamRef get_DefaultTeam();
    [CompilerGeneratedAttribute]
public void set_DefaultTeam(WebApiTeamRef value);
    [CompilerGeneratedAttribute]
public string get_TfsUri();
    [CompilerGeneratedAttribute]
public void set_TfsUri(string value);
}
[GenerateAllConstantsAttribute("")]
public class Microsoft.TeamFoundation.Core.WebApi.TeamProjectCapabilitiesConstants : object {
    public static string FeaturesCapabilityName;
    public static string FeaturesEnabled;
    public static string VersionControlCapabilityName;
    public static string VersionControlCapabilityAttributeName;
    public static string VersionControlGitEnabledAttributeName;
    public static string VersionControlTfvcEnabledAttributeName;
    public static string ProcessTemplateCapabilityName;
    public static string ProcessTemplateCapabilityTemplateNameAttributeName;
    public static string ProcessTemplateCapabilityTemplateTypeIdAttributeName;
    private static TeamProjectCapabilitiesConstants();
}
[DataContractAttribute]
public class Microsoft.TeamFoundation.Core.WebApi.TeamProjectCollection : TeamProjectCollectionReference {
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <State>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceLinks <Links>k__BackingField;
    [CompilerGeneratedAttribute]
private ProcessCustomizationType <ProcessCustomizationType>k__BackingField;
    [DataMemberAttribute]
public string Description { get; public set; }
    [DataMemberAttribute]
public string State { get; public set; }
    [DataMemberAttribute]
public ReferenceLinks Links { get; public set; }
    [DataMemberAttribute]
public ProcessCustomizationType ProcessCustomizationType { get; public set; }
    public TeamProjectCollection(TeamProjectCollectionReference projectCollectionRef);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public string get_State();
    [CompilerGeneratedAttribute]
public void set_State(string value);
    [CompilerGeneratedAttribute]
public ReferenceLinks get_Links();
    [CompilerGeneratedAttribute]
public void set_Links(ReferenceLinks value);
    [CompilerGeneratedAttribute]
public ProcessCustomizationType get_ProcessCustomizationType();
    [CompilerGeneratedAttribute]
public void set_ProcessCustomizationType(ProcessCustomizationType value);
}
[DataContractAttribute]
public class Microsoft.TeamFoundation.Core.WebApi.TeamProjectCollectionReference : object {
    [CompilerGeneratedAttribute]
private Guid <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AvatarUrl>k__BackingField;
    [DataMemberAttribute]
public Guid Id { get; public set; }
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public string Url { get; public set; }
    [DataMemberAttribute]
public string AvatarUrl { get; public set; }
    [CompilerGeneratedAttribute]
public Guid get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(Guid value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
    [CompilerGeneratedAttribute]
public string get_AvatarUrl();
    [CompilerGeneratedAttribute]
public void set_AvatarUrl(string value);
}
[DataContractAttribute]
public class Microsoft.TeamFoundation.Core.WebApi.TeamProjectReference : object {
    [CompilerGeneratedAttribute]
private Guid <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Abbreviation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [CompilerGeneratedAttribute]
private ProjectState <State>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Revision>k__BackingField;
    [CompilerGeneratedAttribute]
private ProjectVisibility <Visibility>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DefaultTeamImageUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <LastUpdateTime>k__BackingField;
    [DataMemberAttribute]
public Guid Id { get; public set; }
    [DataMemberAttribute]
public string Abbreviation { get; public set; }
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public string Description { get; public set; }
    [DataMemberAttribute]
public string Url { get; public set; }
    [DataMemberAttribute]
public ProjectState State { get; public set; }
    [DataMemberAttribute]
public long Revision { get; public set; }
    [DataMemberAttribute]
public ProjectVisibility Visibility { get; public set; }
    [DataMemberAttribute]
public string DefaultTeamImageUrl { get; public set; }
    [DataMemberAttribute]
public DateTime LastUpdateTime { get; public set; }
    private Guid Microsoft.VisualStudio.Services.WebApi.ISecuredObject.NamespaceId { get; }
    private int Microsoft.VisualStudio.Services.WebApi.ISecuredObject.RequiredPermissions { get; }
    protected Guid NamespaceId { get; }
    protected int RequiredPermissions { get; }
    [CompilerGeneratedAttribute]
public Guid get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(Guid value);
    [CompilerGeneratedAttribute]
public string get_Abbreviation();
    [CompilerGeneratedAttribute]
public void set_Abbreviation(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
    [CompilerGeneratedAttribute]
public ProjectState get_State();
    [CompilerGeneratedAttribute]
public void set_State(ProjectState value);
    [CompilerGeneratedAttribute]
public long get_Revision();
    [CompilerGeneratedAttribute]
public void set_Revision(long value);
    [CompilerGeneratedAttribute]
public ProjectVisibility get_Visibility();
    [CompilerGeneratedAttribute]
public void set_Visibility(ProjectVisibility value);
    [CompilerGeneratedAttribute]
public string get_DefaultTeamImageUrl();
    [CompilerGeneratedAttribute]
public void set_DefaultTeamImageUrl(string value);
    [CompilerGeneratedAttribute]
public DateTime get_LastUpdateTime();
    [CompilerGeneratedAttribute]
public void set_LastUpdateTime(DateTime value);
    private sealed virtual override Guid Microsoft.VisualStudio.Services.WebApi.ISecuredObject.get_NamespaceId();
    private sealed virtual override int Microsoft.VisualStudio.Services.WebApi.ISecuredObject.get_RequiredPermissions();
    private sealed virtual override string Microsoft.VisualStudio.Services.WebApi.ISecuredObject.GetToken();
    protected virtual Guid get_NamespaceId();
    protected virtual int get_RequiredPermissions();
    protected virtual string GetToken();
}
[ExceptionMappingAttribute("0.0", "3.0", "TeamSecurityException", "Microsoft.TeamFoundation.Core.WebApi.TeamSecurityException, Microsoft.TeamFoundation.Core.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.TeamFoundation.Core.WebApi.TeamSecurityException : VssServiceException {
    public TeamSecurityException(string message);
}
[ExceptionMappingAttribute("0.0", "3.0", "TeamUpdateInvalidPermissionException", "Microsoft.TeamFoundation.Core.WebApi.TeamUpdateInvalidPermissionException, Microsoft.TeamFoundation.Core.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.TeamFoundation.Core.WebApi.TeamUpdateInvalidPermissionException : VssServiceException {
    public TeamUpdateInvalidPermissionException(string message);
}
[DataContractAttribute]
public class Microsoft.TeamFoundation.Core.WebApi.TemporaryDataCreatedDTO : TemporaryDataDTO {
    [CompilerGeneratedAttribute]
private Guid <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <ExpirationDate>k__BackingField;
    [DataMemberAttribute]
public Guid Id { get; public set; }
    [DataMemberAttribute]
public string Url { get; public set; }
    [DataMemberAttribute]
public DateTime ExpirationDate { get; public set; }
    [CompilerGeneratedAttribute]
public Guid get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(Guid value);
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
    [CompilerGeneratedAttribute]
public DateTime get_ExpirationDate();
    [CompilerGeneratedAttribute]
public void set_ExpirationDate(DateTime value);
}
[DataContractAttribute]
public class Microsoft.TeamFoundation.Core.WebApi.TemporaryDataDTO : object {
    [CompilerGeneratedAttribute]
private object <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Origin>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ExpirationSeconds>k__BackingField;
    [DataMemberAttribute]
public object Value { get; public set; }
    [DataMemberAttribute]
public string Origin { get; public set; }
    [DataMemberAttribute]
public int ExpirationSeconds { get; public set; }
    [CompilerGeneratedAttribute]
public object get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(object value);
    [CompilerGeneratedAttribute]
public string get_Origin();
    [CompilerGeneratedAttribute]
public void set_Origin(string value);
    [CompilerGeneratedAttribute]
public int get_ExpirationSeconds();
    [CompilerGeneratedAttribute]
public void set_ExpirationSeconds(int value);
}
[ResourceAreaAttribute("79134C72-4A58-4B42-976C-04E7115F32BF")]
public class Microsoft.TeamFoundation.Core.WebApi.TemporaryDataHttpClient : VssHttpClientBase {
    public TemporaryDataHttpClient(Uri baseUrl, VssCredentials credentials);
    public TemporaryDataHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public TemporaryDataHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public TemporaryDataHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public TemporaryDataHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    [EditorBrowsableAttribute("1")]
public Task`1<TemporaryDataCreatedDTO> CreateTemporaryDataAsync(TemporaryDataDTO requestBody, object userState, CancellationToken cancellationToken);
    [EditorBrowsableAttribute("1")]
public Task`1<TemporaryDataCreatedDTO> CreateTemporaryDataAsync(TemporaryDataDTO requestBody, Guid id, object userState, CancellationToken cancellationToken);
    [EditorBrowsableAttribute("1")]
public Task`1<TemporaryDataCreatedDTO> GetTemporaryDataAsync(Guid id, object userState, CancellationToken cancellationToken);
}
public static class Microsoft.TeamFoundation.Core.WebApi.TfsRequestContextItemsKeys : object {
    public static string RequestTeam;
    public static string RequestProject;
    public static string RequestProjectId;
}
[GenerateAllConstantsAttribute("")]
public static class Microsoft.TeamFoundation.Core.WebApi.TfsSettingsScopeNames : object {
    public static string Project;
    public static string Team;
    public static string WebTeam;
    public static string Repository;
}
public class Microsoft.TeamFoundation.Core.WebApi.TFStringComparer : VssStringComparer {
    public static VssStringComparer AnnotationName { get; }
    public static VssStringComparer BacklogPluralName { get; }
    public static VssStringComparer CaseSensitiveFileName { get; }
    public static VssStringComparer ChangeType { get; }
    public static VssStringComparer ChangeTypeUI { get; }
    public static VssStringComparer CheckinNoteName { get; }
    public static VssStringComparer CheckinNoteNameUI { get; }
    public static VssStringComparer CommandLineOptionName { get; }
    public static VssStringComparer CommandLineOptionValue { get; }
    public static VssStringComparer Comment { get; }
    public static VssStringComparer CommentUI { get; }
    public static VssStringComparer ConflictDescription { get; }
    public static VssStringComparer ConflictDescriptionUI { get; }
    public static VssStringComparer ConflictType { get; }
    public static VssStringComparer ConflictTypeUI { get; }
    public static VssStringComparer FileType { get; }
    public static VssStringComparer InstanceId { get; }
    public static VssStringComparer LabelName { get; }
    public static VssStringComparer LabelNameUI { get; }
    public static VssStringComparer ObjectId { get; }
    public static VssStringComparer PermissionName { get; }
    public static VssStringComparer PolicyType { get; }
    public static VssStringComparer QuotaName { get; }
    public static VssStringComparer ShelvesetName { get; }
    public static VssStringComparer ShelvesetNameUI { get; }
    public static VssStringComparer SoapExceptionCode { get; }
    public static VssStringComparer SubscriptionFieldName { get; }
    public static VssStringComparer SubscriptionTag { get; }
    public static VssStringComparer TeamProjectCollectionName { get; }
    public static VssStringComparer TeamProjectCollectionNameUI { get; }
    public static VssStringComparer TeamProjectName { get; }
    public static VssStringComparer TeamProjectGuid { get; }
    public static VssStringComparer TeamProjectNameUI { get; }
    public static VssStringComparer TeamProjectPropertyName { get; }
    public static VssStringComparer TeamNameUI { get; }
    public static VssStringComparer TFSName { get; }
    public static VssStringComparer TFSNameUI { get; }
    public static VssStringComparer VersionControlPath { get; }
    public static VssStringComparer WorkItemQueryName { get; }
    public static VssStringComparer WorkItemQueryText { get; }
    public static VssStringComparer WorkItemStateName { get; }
    public static VssStringComparer WorkItemActionName { get; }
    public static VssStringComparer WorkItemTypeName { get; }
    public static VssStringComparer BehaviorName { get; }
    public static VssStringComparer WorkItemIdentityName { get; }
    public static VssStringComparer WorkspaceName { get; }
    public static VssStringComparer WorkspaceNameUI { get; }
    public static VssStringComparer WorkItemFieldType { get; }
    public static VssStringComparer WorkItemUpdate { get; }
    public static VssStringComparer BuildAgent { get; }
    public static VssStringComparer BuildAgentUI { get; }
    public static VssStringComparer BuildControllerName { get; }
    public static VssStringComparer BuildControllerNameUI { get; }
    public static VssStringComparer BuildName { get; }
    public static VssStringComparer BuildNumber { get; }
    public static VssStringComparer BuildStep { get; }
    public static VssStringComparer BuildPlatformFlavor { get; }
    public static VssStringComparer BuildTargetName { get; }
    public static VssStringComparer BuildTaskName { get; }
    public static VssStringComparer BuildType { get; }
    public static VssStringComparer BuildTypeUI { get; }
    public static VssStringComparer BuildQuality { get; }
    public static VssStringComparer BuildQualityUI { get; }
    public static VssStringComparer InformationType { get; }
    public static VssStringComparer TestCategoryName { get; }
    public static VssStringComparer TestCategoryNameUI { get; }
    public static VssStringComparer DataType { get; }
    public static VssStringComparer StructureType { get; }
    public static VssStringComparer QueryOperator { get; }
    public static VssStringComparer CssActions { get; }
    public static VssStringComparer UpdateAction { get; }
    public static VssStringComparer WorkItemArtifactType { get; }
    public static VssStringComparer AutoCompleteComboBox { get; }
    public static VssStringComparer WorkItemCategoryName { get; }
    public static VssStringComparer WorkItemCategoryReferenceName { get; }
    public static VssStringComparer BacklogLevelId { get; }
    public static VssStringComparer LinkComment { get; }
    public static VssStringComparer ControlType { get; }
    public static VssStringComparer ControlClassName { get; }
    public static VssStringComparer DefaultValue { get; }
    public static VssStringComparer IterationName { get; }
    public static VssStringComparer ListViewItem { get; }
    public static VssStringComparer NodeSpec { get; }
    public static VssStringComparer CssNodeName { get; }
    public static VssStringComparer FavoritesNodePath { get; }
    public static VssStringComparer ProjectCreationContextData { get; }
    public static VssStringComparer TemplateName { get; }
    public static VssStringComparer WssListElement { get; }
    public static VssStringComparer WssTemplate { get; }
    public static VssStringComparer WssFilePath { get; }
    public static VssStringComparer OfficeVersions { get; }
    public static VssStringComparer CssProjectPropertyName { get; }
    public static VssStringComparer FactName { get; }
    public static VssStringComparer ParserTag { get; }
    public static VssStringComparer StringUtilityComparison { get; }
    public static VssStringComparer BoolAppSetting { get; }
    public static VssStringComparer IdentityData { get; }
    public static VssStringComparer ProjectString { get; }
    public static VssStringComparer CssStructureType { get; }
    public static VssStringComparer CssXmlNodeName { get; }
    public static VssStringComparer CssTreeNodeName { get; }
    public static VssStringComparer CssXmlNodeInfoUri { get; }
    public static VssStringComparer CssTreePathName { get; }
    public static VssStringComparer RegistrationEntryType { get; }
    public static VssStringComparer DataGridId { get; }
    public static VssStringComparer ArtiFactUrl { get; }
    public static VssStringComparer AclPermissionEntry { get; }
    public static VssStringComparer DirectoryEntrySchemaClassName { get; }
    public static VssStringComparer RoleMemberName { get; }
    public static VssStringComparer BaseHierarchyNodeName { get; }
    public static VssStringComparer BaseHierarchyNodePath { get; }
    public static VssStringComparer BaseUIHierarchyNodeName { get; }
    public static VssStringComparer CanonicalName { get; }
    public static VssStringComparer CreateDSArg { get; }
    public static VssStringComparer CatalogItemName { get; }
    public static VssStringComparer Verb { get; }
    public static VssStringComparer ProgId { get; }
    public static VssStringComparer OfficeWorkItemId { get; }
    public static VssStringComparer TfsProtocolUriComponent { get; }
    public static VssStringComparer StoryboardStencilReferenceName { get; }
    public static VssStringComparer StoryboardLinkPath { get; }
    public static VssStringComparer AllowedValue { get; }
    public static VssStringComparer ProjectUri { get; }
    public static VssStringComparer ELeadListObjectName { get; }
    public static VssStringComparer HashCode { get; }
    public static VssStringComparer WorkItemId { get; }
    public static VssStringComparer WorkItemRev { get; }
    public static VssStringComparer WorkItemType { get; }
    public static VssStringComparer ExcelValidationData { get; }
    public static VssStringComparer ExcelValidationDataIgnoreCase { get; }
    public static VssStringComparer WorkbookName { get; }
    public static VssStringComparer WorksheetName { get; }
    public static VssStringComparer ExcelListName { get; }
    public static VssStringComparer ExcelColumnName { get; }
    public static VssStringComparer ExcelWorkSheetName { get; }
    public static VssStringComparer ExcelNumberFormat { get; }
    public static VssStringComparer ExcelBannerText { get; }
    public static VssStringComparer WorkItemFieldReferenceName { get; }
    public static VssStringComparer WorkItemTypeletReferenceName { get; }
    public static VssStringComparer WorkItemTypeReferenceName { get; }
    public static VssStringComparer BehaviorReferenceName { get; }
    public static VssStringComparer WorkItemLinkTypeReferenceName { get; }
    public static VssStringComparer WorkItemFieldFriendlyName { get; }
    public static VssStringComparer StoredQueryName { get; }
    public static VssStringComparer StoredQueryText { get; }
    public static VssStringComparer AttachmentName { get; }
    public static VssStringComparer LinkData { get; }
    public static VssStringComparer CssSprocErrors { get; }
    public static VssStringComparer MSProjectDisplayableObjectName { get; }
    public static VssStringComparer MSProjectAssignmentName { get; }
    public static VssStringComparer MSProjectFieldName { get; }
    public static VssStringComparer MSProjectCellValue { get; }
    public static VssStringComparer CaseInsensitiveArrayList { get; }
    public static VssStringComparer ProjMapArgs { get; }
    public static VssStringComparer ProcessName { get; }
    public static VssStringComparer ProcessReferenceName { get; }
    public static VssStringComparer WIConverterFieldRefName { get; }
    public static VssStringComparer ReportItemPath { get; }
    public static VssStringComparer DiagnosticAreaPathName { get; }
    public static VssStringComparer BoardColumnName { get; }
    public static VssStringComparer BoardColumnNameCaseSensitive { get; }
    public static VssStringComparer BoardRowName { get; }
    public static VssStringComparer BoardName { get; }
    public static VssStringComparer ProcessTemplatePluginName { get; }
    public static VssStringComparer ExternalConnectionName { get; }
    public static VssStringComparer ExternalProviderKey { get; }
    public static VssStringComparer ExternalRepoId { get; }
    public static VssStringComparer ExternalRepoName { get; }
    private TFStringComparer(StringComparison stringComparison);
    public static VssStringComparer get_AnnotationName();
    public static VssStringComparer get_BacklogPluralName();
    public static VssStringComparer get_CaseSensitiveFileName();
    public static VssStringComparer get_ChangeType();
    public static VssStringComparer get_ChangeTypeUI();
    public static VssStringComparer get_CheckinNoteName();
    public static VssStringComparer get_CheckinNoteNameUI();
    public static VssStringComparer get_CommandLineOptionName();
    public static VssStringComparer get_CommandLineOptionValue();
    public static VssStringComparer get_Comment();
    public static VssStringComparer get_CommentUI();
    public static VssStringComparer get_ConflictDescription();
    public static VssStringComparer get_ConflictDescriptionUI();
    public static VssStringComparer get_ConflictType();
    public static VssStringComparer get_ConflictTypeUI();
    public static VssStringComparer get_FileType();
    public static VssStringComparer get_InstanceId();
    public static VssStringComparer get_LabelName();
    public static VssStringComparer get_LabelNameUI();
    public static VssStringComparer get_ObjectId();
    public static VssStringComparer get_PermissionName();
    public static VssStringComparer get_PolicyType();
    public static VssStringComparer get_QuotaName();
    public static VssStringComparer get_ShelvesetName();
    public static VssStringComparer get_ShelvesetNameUI();
    public static VssStringComparer get_SoapExceptionCode();
    public static VssStringComparer get_SubscriptionFieldName();
    public static VssStringComparer get_SubscriptionTag();
    public static VssStringComparer get_TeamProjectCollectionName();
    public static VssStringComparer get_TeamProjectCollectionNameUI();
    public static VssStringComparer get_TeamProjectName();
    public static VssStringComparer get_TeamProjectGuid();
    public static VssStringComparer get_TeamProjectNameUI();
    public static VssStringComparer get_TeamProjectPropertyName();
    public static VssStringComparer get_TeamNameUI();
    public static VssStringComparer get_TFSName();
    public static VssStringComparer get_TFSNameUI();
    public static VssStringComparer get_VersionControlPath();
    public static VssStringComparer get_WorkItemQueryName();
    public static VssStringComparer get_WorkItemQueryText();
    public static VssStringComparer get_WorkItemStateName();
    public static VssStringComparer get_WorkItemActionName();
    public static VssStringComparer get_WorkItemTypeName();
    public static VssStringComparer get_BehaviorName();
    public static VssStringComparer get_WorkItemIdentityName();
    public static VssStringComparer get_WorkspaceName();
    public static VssStringComparer get_WorkspaceNameUI();
    public static VssStringComparer get_WorkItemFieldType();
    public static VssStringComparer get_WorkItemUpdate();
    public static VssStringComparer get_BuildAgent();
    public static VssStringComparer get_BuildAgentUI();
    public static VssStringComparer get_BuildControllerName();
    public static VssStringComparer get_BuildControllerNameUI();
    public static VssStringComparer get_BuildName();
    public static VssStringComparer get_BuildNumber();
    public static VssStringComparer get_BuildStep();
    public static VssStringComparer get_BuildPlatformFlavor();
    public static VssStringComparer get_BuildTargetName();
    public static VssStringComparer get_BuildTaskName();
    public static VssStringComparer get_BuildType();
    public static VssStringComparer get_BuildTypeUI();
    public static VssStringComparer get_BuildQuality();
    public static VssStringComparer get_BuildQualityUI();
    public static VssStringComparer get_InformationType();
    public static VssStringComparer get_TestCategoryName();
    public static VssStringComparer get_TestCategoryNameUI();
    public static VssStringComparer get_DataType();
    public static VssStringComparer get_StructureType();
    public static VssStringComparer get_QueryOperator();
    public static VssStringComparer get_CssActions();
    public static VssStringComparer get_UpdateAction();
    public static VssStringComparer get_WorkItemArtifactType();
    public static VssStringComparer get_AutoCompleteComboBox();
    public static VssStringComparer get_WorkItemCategoryName();
    public static VssStringComparer get_WorkItemCategoryReferenceName();
    public static VssStringComparer get_BacklogLevelId();
    public static VssStringComparer get_LinkComment();
    public static VssStringComparer get_ControlType();
    public static VssStringComparer get_ControlClassName();
    public static VssStringComparer get_DefaultValue();
    public static VssStringComparer get_IterationName();
    public static VssStringComparer get_ListViewItem();
    public static VssStringComparer get_NodeSpec();
    public static VssStringComparer get_CssNodeName();
    public static VssStringComparer get_FavoritesNodePath();
    public static VssStringComparer get_ProjectCreationContextData();
    public static VssStringComparer get_TemplateName();
    public static VssStringComparer get_WssListElement();
    public static VssStringComparer get_WssTemplate();
    public static VssStringComparer get_WssFilePath();
    public static VssStringComparer get_OfficeVersions();
    public static VssStringComparer get_CssProjectPropertyName();
    public static VssStringComparer get_FactName();
    public static VssStringComparer get_ParserTag();
    public static VssStringComparer get_StringUtilityComparison();
    public static VssStringComparer get_BoolAppSetting();
    public static VssStringComparer get_IdentityData();
    public static VssStringComparer get_ProjectString();
    public static VssStringComparer get_CssStructureType();
    public static VssStringComparer get_CssXmlNodeName();
    public static VssStringComparer get_CssTreeNodeName();
    public static VssStringComparer get_CssXmlNodeInfoUri();
    public static VssStringComparer get_CssTreePathName();
    public static VssStringComparer get_RegistrationEntryType();
    public static VssStringComparer get_DataGridId();
    public static VssStringComparer get_ArtiFactUrl();
    public static VssStringComparer get_AclPermissionEntry();
    public static VssStringComparer get_DirectoryEntrySchemaClassName();
    public static VssStringComparer get_RoleMemberName();
    public static VssStringComparer get_BaseHierarchyNodeName();
    public static VssStringComparer get_BaseHierarchyNodePath();
    public static VssStringComparer get_BaseUIHierarchyNodeName();
    public static VssStringComparer get_CanonicalName();
    public static VssStringComparer get_CreateDSArg();
    public static VssStringComparer get_CatalogItemName();
    public static VssStringComparer get_Verb();
    public static VssStringComparer get_ProgId();
    public static VssStringComparer get_OfficeWorkItemId();
    public static VssStringComparer get_TfsProtocolUriComponent();
    public static VssStringComparer get_StoryboardStencilReferenceName();
    public static VssStringComparer get_StoryboardLinkPath();
    public static VssStringComparer get_AllowedValue();
    public static VssStringComparer get_ProjectUri();
    public static VssStringComparer get_ELeadListObjectName();
    public static VssStringComparer get_HashCode();
    public static VssStringComparer get_WorkItemId();
    public static VssStringComparer get_WorkItemRev();
    public static VssStringComparer get_WorkItemType();
    public static VssStringComparer get_ExcelValidationData();
    public static VssStringComparer get_ExcelValidationDataIgnoreCase();
    public static VssStringComparer get_WorkbookName();
    public static VssStringComparer get_WorksheetName();
    public static VssStringComparer get_ExcelListName();
    public static VssStringComparer get_ExcelColumnName();
    public static VssStringComparer get_ExcelWorkSheetName();
    public static VssStringComparer get_ExcelNumberFormat();
    public static VssStringComparer get_ExcelBannerText();
    public static VssStringComparer get_WorkItemFieldReferenceName();
    public static VssStringComparer get_WorkItemTypeletReferenceName();
    public static VssStringComparer get_WorkItemTypeReferenceName();
    public static VssStringComparer get_BehaviorReferenceName();
    public static VssStringComparer get_WorkItemLinkTypeReferenceName();
    public static VssStringComparer get_WorkItemFieldFriendlyName();
    public static VssStringComparer get_StoredQueryName();
    public static VssStringComparer get_StoredQueryText();
    public static VssStringComparer get_AttachmentName();
    public static VssStringComparer get_LinkData();
    public static VssStringComparer get_CssSprocErrors();
    public static VssStringComparer get_MSProjectDisplayableObjectName();
    public static VssStringComparer get_MSProjectAssignmentName();
    public static VssStringComparer get_MSProjectFieldName();
    public static VssStringComparer get_MSProjectCellValue();
    public static VssStringComparer get_CaseInsensitiveArrayList();
    public static VssStringComparer get_ProjMapArgs();
    public static VssStringComparer get_ProcessName();
    public static VssStringComparer get_ProcessReferenceName();
    public static VssStringComparer get_WIConverterFieldRefName();
    public static VssStringComparer get_ReportItemPath();
    public static VssStringComparer get_DiagnosticAreaPathName();
    public static VssStringComparer get_BoardColumnName();
    public static VssStringComparer get_BoardColumnNameCaseSensitive();
    public static VssStringComparer get_BoardRowName();
    public static VssStringComparer get_BoardName();
    public static VssStringComparer get_ProcessTemplatePluginName();
    public static VssStringComparer get_ExternalConnectionName();
    public static VssStringComparer get_ExternalProviderKey();
    public static VssStringComparer get_ExternalRepoId();
    public static VssStringComparer get_ExternalRepoName();
}
[DataContractAttribute]
public class Microsoft.TeamFoundation.Core.WebApi.Types.TeamContext : object {
    [CompilerGeneratedAttribute]
private Nullable`1<Guid> <ProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Project>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Guid> <TeamId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Team>k__BackingField;
    [DataMemberAttribute]
public Nullable`1<Guid> ProjectId { get; public set; }
    [DataMemberAttribute]
public string Project { get; public set; }
    [DataMemberAttribute]
public Nullable`1<Guid> TeamId { get; public set; }
    [DataMemberAttribute]
public string Team { get; public set; }
    public TeamContext(Guid projectId, Nullable`1<Guid> teamId);
    public TeamContext(string project, string team);
    [CompilerGeneratedAttribute]
public Nullable`1<Guid> get_ProjectId();
    [CompilerGeneratedAttribute]
public void set_ProjectId(Nullable`1<Guid> value);
    [CompilerGeneratedAttribute]
public string get_Project();
    [CompilerGeneratedAttribute]
public void set_Project(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<Guid> get_TeamId();
    [CompilerGeneratedAttribute]
public void set_TeamId(Nullable`1<Guid> value);
    [CompilerGeneratedAttribute]
public string get_Team();
    [CompilerGeneratedAttribute]
public void set_Team(string value);
}
[ExceptionMappingAttribute("0.0", "3.0", "UpdateTeamInputValuesException", "Microsoft.TeamFoundation.Core.WebApi.UpdateTeamInputValuesException, Microsoft.TeamFoundation.Core.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.TeamFoundation.Core.WebApi.UpdateTeamInputValuesException : VssServiceException {
    public UpdateTeamInputValuesException(string message);
}
[DataContractAttribute]
public class Microsoft.TeamFoundation.Core.WebApi.WebApiConnectedService : WebApiConnectedServiceRef {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FriendlyName>k__BackingField;
    [CompilerGeneratedAttribute]
private TeamProjectReference <Project>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kind>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServiceUri>k__BackingField;
    [CompilerGeneratedAttribute]
private IdentityRef <AuthenticatedBy>k__BackingField;
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public string FriendlyName { get; public set; }
    [DataMemberAttribute]
public TeamProjectReference Project { get; public set; }
    [DataMemberAttribute]
public string Description { get; public set; }
    [DataMemberAttribute]
public string Kind { get; public set; }
    [DataMemberAttribute]
public string ServiceUri { get; public set; }
    [DataMemberAttribute]
public IdentityRef AuthenticatedBy { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_FriendlyName();
    [CompilerGeneratedAttribute]
public void set_FriendlyName(string value);
    [CompilerGeneratedAttribute]
public TeamProjectReference get_Project();
    [CompilerGeneratedAttribute]
public void set_Project(TeamProjectReference value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public string get_Kind();
    [CompilerGeneratedAttribute]
public void set_Kind(string value);
    [CompilerGeneratedAttribute]
public string get_ServiceUri();
    [CompilerGeneratedAttribute]
public void set_ServiceUri(string value);
    [CompilerGeneratedAttribute]
public IdentityRef get_AuthenticatedBy();
    [CompilerGeneratedAttribute]
public void set_AuthenticatedBy(IdentityRef value);
}
[DataContractAttribute]
public class Microsoft.TeamFoundation.Core.WebApi.WebApiConnectedServiceDetails : WebApiConnectedServiceRef {
    [CompilerGeneratedAttribute]
private WebApiConnectedService <ConnectedServiceMetaData>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EndPoint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CredentialsXml>k__BackingField;
    [DataMemberAttribute]
public WebApiConnectedService ConnectedServiceMetaData { get; public set; }
    [DataMemberAttribute]
public string EndPoint { get; public set; }
    [DataMemberAttribute]
public string CredentialsXml { get; public set; }
    [CompilerGeneratedAttribute]
public WebApiConnectedService get_ConnectedServiceMetaData();
    [CompilerGeneratedAttribute]
public void set_ConnectedServiceMetaData(WebApiConnectedService value);
    [CompilerGeneratedAttribute]
public string get_EndPoint();
    [CompilerGeneratedAttribute]
public void set_EndPoint(string value);
    [CompilerGeneratedAttribute]
public string get_CredentialsXml();
    [CompilerGeneratedAttribute]
public void set_CredentialsXml(string value);
}
[DataContractAttribute]
public class Microsoft.TeamFoundation.Core.WebApi.WebApiConnectedServiceRef : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [DataMemberAttribute]
public string Id { get; public set; }
    [DataMemberAttribute]
public string Url { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
}
[DataContractAttribute]
public class Microsoft.TeamFoundation.Core.WebApi.WebApiCreateTagRequestData : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [DataMemberAttribute]
public string Name { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
}
[DataContractAttribute]
public class Microsoft.TeamFoundation.Core.WebApi.WebApiProject : TeamProjectReference {
    [CompilerGeneratedAttribute]
private WebApiProjectCollectionRef <Collection>k__BackingField;
    [CompilerGeneratedAttribute]
private WebApiTeamRef <DefaultTeam>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, Dictionary`2<string, string>> <Capabilities>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TfsUri>k__BackingField;
    [DataMemberAttribute]
public WebApiProjectCollectionRef Collection { get; public set; }
    [DataMemberAttribute]
public WebApiTeamRef DefaultTeam { get; public set; }
    [DataMemberAttribute]
public Dictionary`2<string, Dictionary`2<string, string>> Capabilities { get; public set; }
    public string TfsUri { get; public set; }
    public WebApiProject(TeamProjectReference projRef);
    [CompilerGeneratedAttribute]
public WebApiProjectCollectionRef get_Collection();
    [CompilerGeneratedAttribute]
public void set_Collection(WebApiProjectCollectionRef value);
    [CompilerGeneratedAttribute]
public WebApiTeamRef get_DefaultTeam();
    [CompilerGeneratedAttribute]
public void set_DefaultTeam(WebApiTeamRef value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, Dictionary`2<string, string>> get_Capabilities();
    [CompilerGeneratedAttribute]
public void set_Capabilities(Dictionary`2<string, Dictionary`2<string, string>> value);
    [CompilerGeneratedAttribute]
public string get_TfsUri();
    [CompilerGeneratedAttribute]
public void set_TfsUri(string value);
}
[DataContractAttribute]
public class Microsoft.TeamFoundation.Core.WebApi.WebApiProjectCollection : WebApiProjectCollectionRef {
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <State>k__BackingField;
    [DataMemberAttribute]
public string Description { get; public set; }
    [DataMemberAttribute]
public string State { get; public set; }
    public WebApiProjectCollection(WebApiProjectCollectionRef projectCollectionRef);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public string get_State();
    [CompilerGeneratedAttribute]
public void set_State(string value);
}
[DataContractAttribute]
public class Microsoft.TeamFoundation.Core.WebApi.WebApiProjectCollectionRef : object {
    [CompilerGeneratedAttribute]
private Guid <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CollectionUrl>k__BackingField;
    [DataMemberAttribute]
public Guid Id { get; public set; }
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public string Url { get; public set; }
    [DataMemberAttribute]
public string CollectionUrl { get; public set; }
    [CompilerGeneratedAttribute]
public Guid get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(Guid value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
    [CompilerGeneratedAttribute]
public string get_CollectionUrl();
    [CompilerGeneratedAttribute]
public void set_CollectionUrl(string value);
}
internal static class Microsoft.TeamFoundation.Core.WebApi.WebApiResources : object {
    private static ResourceManager s_resMgr;
    public static ResourceManager Manager { get; }
    private static WebApiResources();
    public static ResourceManager get_Manager();
    private static string Get(string resourceName);
    private static string Get(string resourceName, CultureInfo culture);
    public static int GetInt(string resourceName);
    public static int GetInt(string resourceName, CultureInfo culture);
    public static bool GetBool(string resourceName);
    public static bool GetBool(string resourceName, CultureInfo culture);
    private static string Format(string resourceName, Object[] args);
    private static string Format(string resourceName, CultureInfo culture, Object[] args);
    public static string CSS_EMPTY_ARGUMENT(object arg0);
    public static string CSS_EMPTY_ARGUMENT(object arg0, CultureInfo culture);
    public static string CSS_INVALID_NAME(object arg0);
    public static string CSS_INVALID_NAME(object arg0, CultureInfo culture);
    public static string CSS_INVALID_PROJECT_PROPERTY_NAME();
    public static string CSS_INVALID_PROJECT_PROPERTY_NAME(CultureInfo culture);
    public static string CSS_INVALID_URI(object arg0, object arg1);
    public static string CSS_INVALID_URI(object arg0, object arg1, CultureInfo culture);
    public static string ProjectUriIdError(object arg0);
    public static string ProjectUriIdError(object arg0, CultureInfo culture);
    public static string CSS_PROJECT_WORK_PENDING(object arg0);
    public static string CSS_PROJECT_WORK_PENDING(object arg0, CultureInfo culture);
    public static string ProjectDoesNotExist(object arg0);
    public static string ProjectDoesNotExist(object arg0, CultureInfo culture);
    public static string CSS_PROJECT_DOES_NOT_EXIST_NAME(object arg0);
    public static string CSS_PROJECT_DOES_NOT_EXIST_NAME(object arg0, CultureInfo culture);
    public static string CSS_PROJECT_DOES_NOT_EXIST_URI(object arg0);
    public static string CSS_PROJECT_DOES_NOT_EXIST_URI(object arg0, CultureInfo culture);
    public static string CSS_PROJECT_ALREADY_EXISTS(object arg0);
    public static string CSS_PROJECT_ALREADY_EXISTS(object arg0, CultureInfo culture);
    public static string InvalidNameNotRecognized(object arg0);
    public static string InvalidNameNotRecognized(object arg0, CultureInfo culture);
    public static string ProjectPropertyValueTypeUnsupported(object arg0);
    public static string ProjectPropertyValueTypeUnsupported(object arg0, CultureInfo culture);
    public static string ProjectPropertyValueTooLong(object arg0);
    public static string ProjectPropertyValueTooLong(object arg0, CultureInfo culture);
    public static string InvalidHostedHardDeleteProjectError();
    public static string InvalidHostedHardDeleteProjectError(CultureInfo culture);
    public static string InvalidLegacyDeleteProjectError();
    public static string InvalidLegacyDeleteProjectError(CultureInfo culture);
}
[DataContractAttribute]
public class Microsoft.TeamFoundation.Core.WebApi.WebApiTagDefinition : object {
    [CompilerGeneratedAttribute]
private Guid <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Active>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    private ISecuredObject m_securedObject;
    [DataMemberAttribute]
public Guid Id { get; public set; }
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> Active { get; public set; }
    [DataMemberAttribute]
public string Url { get; public set; }
    [IgnoreDataMemberAttribute]
private Guid Microsoft.VisualStudio.Services.WebApi.ISecuredObject.NamespaceId { get; }
    [IgnoreDataMemberAttribute]
private int Microsoft.VisualStudio.Services.WebApi.ISecuredObject.RequiredPermissions { get; }
    public WebApiTagDefinition(ISecuredObject securedObject);
    public void SetSecuredObject(ISecuredObject securedObject);
    [CompilerGeneratedAttribute]
public Guid get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(Guid value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Active();
    [CompilerGeneratedAttribute]
public void set_Active(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
    private sealed virtual override Guid Microsoft.VisualStudio.Services.WebApi.ISecuredObject.get_NamespaceId();
    private sealed virtual override int Microsoft.VisualStudio.Services.WebApi.ISecuredObject.get_RequiredPermissions();
    private sealed virtual override string Microsoft.VisualStudio.Services.WebApi.ISecuredObject.GetToken();
}
public class Microsoft.TeamFoundation.Core.WebApi.WebApiTagDefinitionList : List`1<WebApiTagDefinition> {
    public WebApiTagDefinitionList(IEnumerable`1<WebApiTagDefinition> collection);
}
[DataContractAttribute]
public class Microsoft.TeamFoundation.Core.WebApi.WebApiTeam : WebApiTeamRef {
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IdentityUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectName>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <ProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private Identity <Identity>k__BackingField;
    [DataMemberAttribute]
public string Description { get; public set; }
    [DataMemberAttribute]
public string IdentityUrl { get; public set; }
    [DataMemberAttribute]
public string ProjectName { get; public set; }
    [DataMemberAttribute]
public Guid ProjectId { get; public set; }
    [DataMemberAttribute]
public Identity Identity { get; public set; }
    public WebApiTeam(WebApiTeamRef teamRef);
    public WebApiTeam(WebApiTeam copy, ISecuredObject securedObject);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public string get_IdentityUrl();
    [CompilerGeneratedAttribute]
public void set_IdentityUrl(string value);
    [CompilerGeneratedAttribute]
public string get_ProjectName();
    [CompilerGeneratedAttribute]
public void set_ProjectName(string value);
    [CompilerGeneratedAttribute]
public Guid get_ProjectId();
    [CompilerGeneratedAttribute]
public void set_ProjectId(Guid value);
    [CompilerGeneratedAttribute]
public Identity get_Identity();
    [CompilerGeneratedAttribute]
public void set_Identity(Identity value);
}
[DataContractAttribute]
public class Microsoft.TeamFoundation.Core.WebApi.WebApiTeamRef : object {
    [CompilerGeneratedAttribute]
private Guid <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    private ISecuredObject m_securedObject;
    [DataMemberAttribute]
public Guid Id { get; public set; }
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public string Url { get; public set; }
    private Guid Microsoft.VisualStudio.Services.WebApi.ISecuredObject.NamespaceId { get; }
    private int Microsoft.VisualStudio.Services.WebApi.ISecuredObject.RequiredPermissions { get; }
    public WebApiTeamRef(ISecuredObject securedObject);
    public WebApiTeamRef(WebApiTeamRef teamRef, ISecuredObject securedObject);
    [CompilerGeneratedAttribute]
public Guid get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(Guid value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
    private sealed virtual override Guid Microsoft.VisualStudio.Services.WebApi.ISecuredObject.get_NamespaceId();
    private sealed virtual override int Microsoft.VisualStudio.Services.WebApi.ISecuredObject.get_RequiredPermissions();
    private sealed virtual override string Microsoft.VisualStudio.Services.WebApi.ISecuredObject.GetToken();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
