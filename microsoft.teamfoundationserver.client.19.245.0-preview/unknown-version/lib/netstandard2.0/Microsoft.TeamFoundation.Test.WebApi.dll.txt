[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
public enum Microsoft.TeamFoundation.Test.WebApi.AutomatedTestRunSliceStatus : Enum {
    public int value__;
    public static AutomatedTestRunSliceStatus None;
    public static AutomatedTestRunSliceStatus Pending;
    public static AutomatedTestRunSliceStatus Allocated;
    public static AutomatedTestRunSliceStatus Completed;
    public static AutomatedTestRunSliceStatus Aborted;
    public static AutomatedTestRunSliceStatus Cancelled;
}
public enum Microsoft.TeamFoundation.Test.WebApi.AutomatedTestRunSliceType : Enum {
    public int value__;
    public static AutomatedTestRunSliceType None;
    public static AutomatedTestRunSliceType Discovery;
    public static AutomatedTestRunSliceType Execution;
    public static AutomatedTestRunSliceType SessionStart;
    public static AutomatedTestRunSliceType SessionStop;
}
[DataContractAttribute]
public class Microsoft.TeamFoundation.Test.WebApi.DistributedTestRun : object {
    [CompilerGeneratedAttribute]
private string <EnvironmentUri>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TestRunId>k__BackingField;
    [CompilerGeneratedAttribute]
private DistributedTestRunCreateModel <DistributedTestRunCreateModel>k__BackingField;
    [DataMemberAttribute]
public string EnvironmentUri { get; public set; }
    [DataMemberAttribute]
public int TestRunId { get; public set; }
    [DataMemberAttribute]
public DistributedTestRunCreateModel DistributedTestRunCreateModel { get; public set; }
    [CompilerGeneratedAttribute]
public string get_EnvironmentUri();
    [CompilerGeneratedAttribute]
public void set_EnvironmentUri(string value);
    [CompilerGeneratedAttribute]
public int get_TestRunId();
    [CompilerGeneratedAttribute]
public void set_TestRunId(int value);
    [CompilerGeneratedAttribute]
public DistributedTestRunCreateModel get_DistributedTestRunCreateModel();
    [CompilerGeneratedAttribute]
public void set_DistributedTestRunCreateModel(DistributedTestRunCreateModel value);
}
[DataContractAttribute]
public class Microsoft.TeamFoundation.Test.WebApi.DistributedTestRunCreateModel : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private ShallowReference <Build>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Automated>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SourceFilter>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TestCaseFilter>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EnvironmentUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AutEnvironmentUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BuildDropLocation>k__BackingField;
    [CompilerGeneratedAttribute]
private ShallowReference <TestSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BuildPlatform>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BuildFlavor>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TestConfigurationsMapping>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ReleaseUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ReleaseEnvironmentUri>k__BackingField;
    [CompilerGeneratedAttribute]
private Int32[] <PointIds>k__BackingField;
    [CompilerGeneratedAttribute]
private Int32[] <ConfigurationIds>k__BackingField;
    [CompilerGeneratedAttribute]
private ShallowReference <Plan>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <RunTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private RunProperties <RunProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private TestReportingSettings <TestReportingSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private TfsSpecificProperties <TfsSpecificProperties>k__BackingField;
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public ShallowReference Build { get; public set; }
    [DataMemberAttribute]
public string Type { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> Automated { get; public set; }
    [DataMemberAttribute]
public string SourceFilter { get; public set; }
    [DataMemberAttribute]
public string TestCaseFilter { get; public set; }
    [DataMemberAttribute]
public string EnvironmentUrl { get; public set; }
    [DataMemberAttribute]
public string AutEnvironmentUrl { get; public set; }
    [DataMemberAttribute]
public string BuildDropLocation { get; public set; }
    [DataMemberAttribute]
public ShallowReference TestSettings { get; public set; }
    [DataMemberAttribute]
public string BuildPlatform { get; public set; }
    [DataMemberAttribute]
public string BuildFlavor { get; public set; }
    [DataMemberAttribute]
public string TestConfigurationsMapping { get; public set; }
    [DataMemberAttribute]
public string ReleaseUri { get; public set; }
    [DataMemberAttribute]
public string ReleaseEnvironmentUri { get; public set; }
    [DataMemberAttribute]
public Int32[] PointIds { get; public set; }
    [DataMemberAttribute]
public Int32[] ConfigurationIds { get; public set; }
    [DataMemberAttribute]
public ShallowReference Plan { get; public set; }
    [DataMemberAttribute]
public TimeSpan RunTimeout { get; public set; }
    [DataMemberAttribute]
public RunProperties RunProperties { get; public set; }
    [DataMemberAttribute]
public TestReportingSettings TestReportingSettings { get; public set; }
    [DataMemberAttribute]
public TfsSpecificProperties TfsSpecificProperties { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public ShallowReference get_Build();
    [CompilerGeneratedAttribute]
public void set_Build(ShallowReference value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Automated();
    [CompilerGeneratedAttribute]
public void set_Automated(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_SourceFilter();
    [CompilerGeneratedAttribute]
public void set_SourceFilter(string value);
    [CompilerGeneratedAttribute]
public string get_TestCaseFilter();
    [CompilerGeneratedAttribute]
public void set_TestCaseFilter(string value);
    [CompilerGeneratedAttribute]
public string get_EnvironmentUrl();
    [CompilerGeneratedAttribute]
public void set_EnvironmentUrl(string value);
    [CompilerGeneratedAttribute]
public string get_AutEnvironmentUrl();
    [CompilerGeneratedAttribute]
public void set_AutEnvironmentUrl(string value);
    [CompilerGeneratedAttribute]
public string get_BuildDropLocation();
    [CompilerGeneratedAttribute]
public void set_BuildDropLocation(string value);
    [CompilerGeneratedAttribute]
public ShallowReference get_TestSettings();
    [CompilerGeneratedAttribute]
public void set_TestSettings(ShallowReference value);
    [CompilerGeneratedAttribute]
public string get_BuildPlatform();
    [CompilerGeneratedAttribute]
public void set_BuildPlatform(string value);
    [CompilerGeneratedAttribute]
public string get_BuildFlavor();
    [CompilerGeneratedAttribute]
public void set_BuildFlavor(string value);
    [CompilerGeneratedAttribute]
public string get_TestConfigurationsMapping();
    [CompilerGeneratedAttribute]
public void set_TestConfigurationsMapping(string value);
    [CompilerGeneratedAttribute]
public string get_ReleaseUri();
    [CompilerGeneratedAttribute]
public void set_ReleaseUri(string value);
    [CompilerGeneratedAttribute]
public string get_ReleaseEnvironmentUri();
    [CompilerGeneratedAttribute]
public void set_ReleaseEnvironmentUri(string value);
    [CompilerGeneratedAttribute]
public Int32[] get_PointIds();
    [CompilerGeneratedAttribute]
public void set_PointIds(Int32[] value);
    [CompilerGeneratedAttribute]
public Int32[] get_ConfigurationIds();
    [CompilerGeneratedAttribute]
public void set_ConfigurationIds(Int32[] value);
    [CompilerGeneratedAttribute]
public ShallowReference get_Plan();
    [CompilerGeneratedAttribute]
public void set_Plan(ShallowReference value);
    [CompilerGeneratedAttribute]
public TimeSpan get_RunTimeout();
    [CompilerGeneratedAttribute]
public void set_RunTimeout(TimeSpan value);
    [CompilerGeneratedAttribute]
public RunProperties get_RunProperties();
    [CompilerGeneratedAttribute]
public void set_RunProperties(RunProperties value);
    [CompilerGeneratedAttribute]
public TestReportingSettings get_TestReportingSettings();
    [CompilerGeneratedAttribute]
public void set_TestReportingSettings(TestReportingSettings value);
    [CompilerGeneratedAttribute]
public TfsSpecificProperties get_TfsSpecificProperties();
    [CompilerGeneratedAttribute]
public void set_TfsSpecificProperties(TfsSpecificProperties value);
}
[EditorBrowsableAttribute("1")]
public interface Microsoft.TeamFoundation.Test.WebApi.ITestHttpClient {
    public HttpClient HttpClient { get; }
    public abstract virtual Task`1<TestAgent> CreateAgentAsync(TestAgent testAgent);
    public abstract virtual Task`1<TestAgent> GetAgentAsync(int id);
    public abstract virtual Task DeleteAgentAsync(int id);
    public abstract virtual Task`1<TestAutomationRunSlice> GetSliceAsync(int testAgentId);
    public abstract virtual Task UpdateSliceAsync(TestAutomationRunSlice sliceUpdatePackage);
    public abstract virtual Task`1<TestExecutionServiceCommand> GetCommandAsync(int testAgentId, Nullable`1<long> lastCommandId, CancellationToken cancellationToken);
    public abstract virtual Task`1<DistributedTestRun> UpdateTestRunAsync(DistributedTestRun distributedTestRun, string project, object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<TestRunExecutionConfiguration> GetRerunConfigurationAsync(TestRunExecutionConfiguration testRunExecutionConfiguration, object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<TestExecutionControlOptions> GetTestExecutionControlOptionsAsync(string envUrl, object userState, CancellationToken cancellationToken);
    public abstract virtual HttpClient get_HttpClient();
}
[DataContractAttribute]
public class Microsoft.TeamFoundation.Test.WebApi.Message : object {
    [CompilerGeneratedAttribute]
private MessageType <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Data>k__BackingField;
    [DataMemberAttribute]
public MessageType Type { get; public set; }
    [DataMemberAttribute]
public string Data { get; public set; }
    [CompilerGeneratedAttribute]
public MessageType get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(MessageType value);
    [CompilerGeneratedAttribute]
public string get_Data();
    [CompilerGeneratedAttribute]
public void set_Data(string value);
}
[DataContractAttribute]
public enum Microsoft.TeamFoundation.Test.WebApi.MessageType : Enum {
    public int value__;
    public static MessageType None;
    public static MessageType Error;
    public static MessageType Warning;
    public static MessageType Info;
}
[DataContractAttribute]
public class Microsoft.TeamFoundation.Test.WebApi.RerunProperties : object {
    [CompilerGeneratedAttribute]
private int <CurrentIteration>k__BackingField;
    [CompilerGeneratedAttribute]
private int <RerunIterationCount>k__BackingField;
    [CompilerGeneratedAttribute]
private int <RerunFailedThreshold>k__BackingField;
    [CompilerGeneratedAttribute]
private int <RerunFailedTestCasesMaxLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowRerunFailedTests>k__BackingField;
    [CompilerGeneratedAttribute]
private int <FailedTestCasesCount>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TotalTestCasesCount>k__BackingField;
    [DataMemberAttribute]
public int CurrentIteration { get; public set; }
    [DataMemberAttribute]
public int RerunIterationCount { get; public set; }
    [DataMemberAttribute]
public int RerunFailedThreshold { get; public set; }
    [DataMemberAttribute]
public int RerunFailedTestCasesMaxLimit { get; public set; }
    [DataMemberAttribute]
public bool AllowRerunFailedTests { get; public set; }
    [DataMemberAttribute]
public int FailedTestCasesCount { get; public set; }
    [DataMemberAttribute]
public int TotalTestCasesCount { get; public set; }
    [CompilerGeneratedAttribute]
public int get_CurrentIteration();
    [CompilerGeneratedAttribute]
public void set_CurrentIteration(int value);
    [CompilerGeneratedAttribute]
public int get_RerunIterationCount();
    [CompilerGeneratedAttribute]
public void set_RerunIterationCount(int value);
    [CompilerGeneratedAttribute]
public int get_RerunFailedThreshold();
    [CompilerGeneratedAttribute]
public void set_RerunFailedThreshold(int value);
    [CompilerGeneratedAttribute]
public int get_RerunFailedTestCasesMaxLimit();
    [CompilerGeneratedAttribute]
public void set_RerunFailedTestCasesMaxLimit(int value);
    [CompilerGeneratedAttribute]
public bool get_AllowRerunFailedTests();
    [CompilerGeneratedAttribute]
public void set_AllowRerunFailedTests(bool value);
    [CompilerGeneratedAttribute]
public int get_FailedTestCasesCount();
    [CompilerGeneratedAttribute]
public void set_FailedTestCasesCount(int value);
    [CompilerGeneratedAttribute]
public int get_TotalTestCasesCount();
    [CompilerGeneratedAttribute]
public void set_TotalTestCasesCount(int value);
}
[DataContractAttribute]
public class Microsoft.TeamFoundation.Test.WebApi.RunFilter : object {
    [CompilerGeneratedAttribute]
private string <SourceFilter>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TestCaseFilter>k__BackingField;
    [DataMemberAttribute]
public string SourceFilter { get; public set; }
    [DataMemberAttribute]
public string TestCaseFilter { get; public set; }
    [CompilerGeneratedAttribute]
public string get_SourceFilter();
    [CompilerGeneratedAttribute]
public void set_SourceFilter(string value);
    [CompilerGeneratedAttribute]
public string get_TestCaseFilter();
    [CompilerGeneratedAttribute]
public void set_TestCaseFilter(string value);
}
[DataContractAttribute]
public class Microsoft.TeamFoundation.Test.WebApi.RunProperties : object {
    [CompilerGeneratedAttribute]
private int <MaxAgents>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsCustomSlicingEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private int <NumberOfTestCasesPerSlice>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsTimeBasedSlicing>k__BackingField;
    [CompilerGeneratedAttribute]
private int <SliceTime>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsTestImpactOn>k__BackingField;
    [CompilerGeneratedAttribute]
private int <BaseLineBuildId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsRerunEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private int <RerunFailedThreshold>k__BackingField;
    [CompilerGeneratedAttribute]
private int <RerunMaxAttempts>k__BackingField;
    [CompilerGeneratedAttribute]
private int <RerunFailedTestCasesMaxLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TestPlanId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TestConfigurationId>k__BackingField;
    [CompilerGeneratedAttribute]
private Int32[] <TestSuiteIds>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TestRunType>k__BackingField;
    [DataMemberAttribute]
public int MaxAgents { get; public set; }
    [DataMemberAttribute]
public bool IsCustomSlicingEnabled { get; public set; }
    [DataMemberAttribute]
public int NumberOfTestCasesPerSlice { get; public set; }
    [DataMemberAttribute]
public bool IsTimeBasedSlicing { get; public set; }
    [DataMemberAttribute]
public int SliceTime { get; public set; }
    [DataMemberAttribute]
public bool IsTestImpactOn { get; public set; }
    [DataMemberAttribute]
public int BaseLineBuildId { get; public set; }
    [DataMemberAttribute]
public bool IsRerunEnabled { get; public set; }
    [DataMemberAttribute]
public int RerunFailedThreshold { get; public set; }
    [DataMemberAttribute]
public int RerunMaxAttempts { get; public set; }
    [DataMemberAttribute]
public int RerunFailedTestCasesMaxLimit { get; public set; }
    [DataMemberAttribute]
public int TestPlanId { get; public set; }
    [DataMemberAttribute]
public int TestConfigurationId { get; public set; }
    [DataMemberAttribute]
public Int32[] TestSuiteIds { get; public set; }
    [DataMemberAttribute]
public string TestRunType { get; public set; }
    [CompilerGeneratedAttribute]
public int get_MaxAgents();
    [CompilerGeneratedAttribute]
public void set_MaxAgents(int value);
    [CompilerGeneratedAttribute]
public bool get_IsCustomSlicingEnabled();
    [CompilerGeneratedAttribute]
public void set_IsCustomSlicingEnabled(bool value);
    [CompilerGeneratedAttribute]
public int get_NumberOfTestCasesPerSlice();
    [CompilerGeneratedAttribute]
public void set_NumberOfTestCasesPerSlice(int value);
    [CompilerGeneratedAttribute]
public bool get_IsTimeBasedSlicing();
    [CompilerGeneratedAttribute]
public void set_IsTimeBasedSlicing(bool value);
    [CompilerGeneratedAttribute]
public int get_SliceTime();
    [CompilerGeneratedAttribute]
public void set_SliceTime(int value);
    [CompilerGeneratedAttribute]
public bool get_IsTestImpactOn();
    [CompilerGeneratedAttribute]
public void set_IsTestImpactOn(bool value);
    [CompilerGeneratedAttribute]
public int get_BaseLineBuildId();
    [CompilerGeneratedAttribute]
public void set_BaseLineBuildId(int value);
    [CompilerGeneratedAttribute]
public bool get_IsRerunEnabled();
    [CompilerGeneratedAttribute]
public void set_IsRerunEnabled(bool value);
    [CompilerGeneratedAttribute]
public int get_RerunFailedThreshold();
    [CompilerGeneratedAttribute]
public void set_RerunFailedThreshold(int value);
    [CompilerGeneratedAttribute]
public int get_RerunMaxAttempts();
    [CompilerGeneratedAttribute]
public void set_RerunMaxAttempts(int value);
    [CompilerGeneratedAttribute]
public int get_RerunFailedTestCasesMaxLimit();
    [CompilerGeneratedAttribute]
public void set_RerunFailedTestCasesMaxLimit(int value);
    [CompilerGeneratedAttribute]
public int get_TestPlanId();
    [CompilerGeneratedAttribute]
public void set_TestPlanId(int value);
    [CompilerGeneratedAttribute]
public int get_TestConfigurationId();
    [CompilerGeneratedAttribute]
public void set_TestConfigurationId(int value);
    [CompilerGeneratedAttribute]
public Int32[] get_TestSuiteIds();
    [CompilerGeneratedAttribute]
public void set_TestSuiteIds(Int32[] value);
    [CompilerGeneratedAttribute]
public string get_TestRunType();
    [CompilerGeneratedAttribute]
public void set_TestRunType(string value);
}
[DataContractAttribute]
public class Microsoft.TeamFoundation.Test.WebApi.ShallowReference : object {
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [DataMemberAttribute]
public int Id { get; public set; }
    [DataMemberAttribute]
public string Url { get; public set; }
    [DataMemberAttribute]
public string Name { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
}
[DataContractAttribute]
public class Microsoft.TeamFoundation.Test.WebApi.SlicedTestData : object {
    [CompilerGeneratedAttribute]
private string <FullyQualifiedName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Source>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ExecutorUri>k__BackingField;
    [CompilerGeneratedAttribute]
private double <AnticipatedExecutionTime>k__BackingField;
    [CompilerGeneratedAttribute]
private int <BaseDefinitionRunId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TestPointId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TestCaseId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TestConfigurationId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TestConfigurationName>k__BackingField;
    [CompilerGeneratedAttribute]
private int <AttemptId>k__BackingField;
    [DataMemberAttribute]
public string FullyQualifiedName { get; public set; }
    [DataMemberAttribute]
public string Source { get; public set; }
    [DataMemberAttribute]
public string ExecutorUri { get; public set; }
    [DataMemberAttribute]
public double AnticipatedExecutionTime { get; public set; }
    [DataMemberAttribute]
public int BaseDefinitionRunId { get; public set; }
    [DataMemberAttribute]
public int TestPointId { get; public set; }
    [DataMemberAttribute]
public int TestCaseId { get; public set; }
    [DataMemberAttribute]
public int TestConfigurationId { get; public set; }
    [DataMemberAttribute]
public string TestConfigurationName { get; public set; }
    [DataMemberAttribute]
public int AttemptId { get; public set; }
    [CompilerGeneratedAttribute]
public string get_FullyQualifiedName();
    [CompilerGeneratedAttribute]
public void set_FullyQualifiedName(string value);
    [CompilerGeneratedAttribute]
public string get_Source();
    [CompilerGeneratedAttribute]
public void set_Source(string value);
    [CompilerGeneratedAttribute]
public string get_ExecutorUri();
    [CompilerGeneratedAttribute]
public void set_ExecutorUri(string value);
    [CompilerGeneratedAttribute]
public double get_AnticipatedExecutionTime();
    [CompilerGeneratedAttribute]
public void set_AnticipatedExecutionTime(double value);
    [CompilerGeneratedAttribute]
public int get_BaseDefinitionRunId();
    [CompilerGeneratedAttribute]
public void set_BaseDefinitionRunId(int value);
    [CompilerGeneratedAttribute]
public int get_TestPointId();
    [CompilerGeneratedAttribute]
public void set_TestPointId(int value);
    [CompilerGeneratedAttribute]
public int get_TestCaseId();
    [CompilerGeneratedAttribute]
public void set_TestCaseId(int value);
    [CompilerGeneratedAttribute]
public int get_TestConfigurationId();
    [CompilerGeneratedAttribute]
public void set_TestConfigurationId(int value);
    [CompilerGeneratedAttribute]
public string get_TestConfigurationName();
    [CompilerGeneratedAttribute]
public void set_TestConfigurationName(string value);
    [CompilerGeneratedAttribute]
public int get_AttemptId();
    [CompilerGeneratedAttribute]
public void set_AttemptId(int value);
}
[DataContractAttribute]
public class Microsoft.TeamFoundation.Test.WebApi.TestAgent : object {
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private ShallowReference <DtlEnvironment>k__BackingField;
    [CompilerGeneratedAttribute]
private ShallowReference <DtlMachine>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Capabilities>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TestRunId>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <LastHeartBeat>k__BackingField;
    [DataMemberAttribute]
public int Id { get; public set; }
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public ShallowReference DtlEnvironment { get; public set; }
    [DataMemberAttribute]
public ShallowReference DtlMachine { get; public set; }
    [DataMemberAttribute]
public String[] Capabilities { get; public set; }
    [DataMemberAttribute]
public int TestRunId { get; public set; }
    [DataMemberAttribute]
public DateTime LastHeartBeat { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public ShallowReference get_DtlEnvironment();
    [CompilerGeneratedAttribute]
public void set_DtlEnvironment(ShallowReference value);
    [CompilerGeneratedAttribute]
public ShallowReference get_DtlMachine();
    [CompilerGeneratedAttribute]
public void set_DtlMachine(ShallowReference value);
    [CompilerGeneratedAttribute]
public String[] get_Capabilities();
    [CompilerGeneratedAttribute]
public void set_Capabilities(String[] value);
    [CompilerGeneratedAttribute]
public int get_TestRunId();
    [CompilerGeneratedAttribute]
public void set_TestRunId(int value);
    [CompilerGeneratedAttribute]
public DateTime get_LastHeartBeat();
    [CompilerGeneratedAttribute]
public void set_LastHeartBeat(DateTime value);
}
public class Microsoft.TeamFoundation.Test.WebApi.TestAgentsQuery : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TestRunId>k__BackingField;
    public string Name { get; public set; }
    public int TestRunId { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public int get_TestRunId();
    [CompilerGeneratedAttribute]
public void set_TestRunId(int value);
}
[DataContractAttribute]
public class Microsoft.TeamFoundation.Test.WebApi.TestAutomationRunSlice : object {
    [CompilerGeneratedAttribute]
private AutomatedTestRunSliceType <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<SlicedTestData> <LastPhaseResults>k__BackingField;
    [CompilerGeneratedAttribute]
private TestRunInformation <TestRunInformation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Results>k__BackingField;
    [CompilerGeneratedAttribute]
private AutomatedTestRunSliceStatus <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Message> <Messages>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TestConfigId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TestConfigurationsMapping>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Requirements>k__BackingField;
    [CompilerGeneratedAttribute]
private int <AssignmentOrder>k__BackingField;
    private static string EmptyRunSettings;
    [DataMemberAttribute]
public AutomatedTestRunSliceType Type { get; public set; }
    [DataMemberAttribute]
public int Id { get; public set; }
    [DataMemberAttribute]
public List`1<SlicedTestData> LastPhaseResults { get; public set; }
    [DataMemberAttribute]
public TestRunInformation TestRunInformation { get; public set; }
    [DataMemberAttribute]
public string Results { get; public set; }
    [DataMemberAttribute]
public AutomatedTestRunSliceStatus Status { get; public set; }
    [DataMemberAttribute]
public List`1<Message> Messages { get; public set; }
    [DataMemberAttribute]
public int TestConfigId { get; public set; }
    [DataMemberAttribute]
public string TestConfigurationsMapping { get; public set; }
    [DataMemberAttribute]
public string Requirements { get; public set; }
    [DataMemberAttribute]
public int AssignmentOrder { get; public set; }
    [CompilerGeneratedAttribute]
public AutomatedTestRunSliceType get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(AutomatedTestRunSliceType value);
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [CompilerGeneratedAttribute]
public List`1<SlicedTestData> get_LastPhaseResults();
    [CompilerGeneratedAttribute]
public void set_LastPhaseResults(List`1<SlicedTestData> value);
    [CompilerGeneratedAttribute]
public TestRunInformation get_TestRunInformation();
    [CompilerGeneratedAttribute]
public void set_TestRunInformation(TestRunInformation value);
    [CompilerGeneratedAttribute]
public string get_Results();
    [CompilerGeneratedAttribute]
public void set_Results(string value);
    [CompilerGeneratedAttribute]
public AutomatedTestRunSliceStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(AutomatedTestRunSliceStatus value);
    [CompilerGeneratedAttribute]
public List`1<Message> get_Messages();
    [CompilerGeneratedAttribute]
public void set_Messages(List`1<Message> value);
    [CompilerGeneratedAttribute]
public int get_TestConfigId();
    [CompilerGeneratedAttribute]
public void set_TestConfigId(int value);
    [CompilerGeneratedAttribute]
public string get_TestConfigurationsMapping();
    [CompilerGeneratedAttribute]
public void set_TestConfigurationsMapping(string value);
    [CompilerGeneratedAttribute]
public string get_Requirements();
    [CompilerGeneratedAttribute]
public void set_Requirements(string value);
    [CompilerGeneratedAttribute]
public int get_AssignmentOrder();
    [CompilerGeneratedAttribute]
public void set_AssignmentOrder(int value);
}
[DataContractAttribute]
public class Microsoft.TeamFoundation.Test.WebApi.TestCase : object {
    [CompilerGeneratedAttribute]
private string <FullyQualifiedName>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <ExecutorUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Source>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TestPointId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TestCaseId>k__BackingField;
    [DataMemberAttribute]
public string FullyQualifiedName { get; public set; }
    [DataMemberAttribute]
public Uri ExecutorUri { get; public set; }
    [DataMemberAttribute]
public string Source { get; public set; }
    [DataMemberAttribute]
public int TestPointId { get; public set; }
    [DataMemberAttribute]
public int TestCaseId { get; public set; }
    [CompilerGeneratedAttribute]
public string get_FullyQualifiedName();
    [CompilerGeneratedAttribute]
public void set_FullyQualifiedName(string value);
    [CompilerGeneratedAttribute]
public Uri get_ExecutorUri();
    [CompilerGeneratedAttribute]
public void set_ExecutorUri(Uri value);
    [CompilerGeneratedAttribute]
public string get_Source();
    [CompilerGeneratedAttribute]
public void set_Source(string value);
    [CompilerGeneratedAttribute]
public int get_TestPointId();
    [CompilerGeneratedAttribute]
public void set_TestPointId(int value);
    [CompilerGeneratedAttribute]
public int get_TestCaseId();
    [CompilerGeneratedAttribute]
public void set_TestCaseId(int value);
}
[ExceptionMappingAttribute("0.0", "3.0", "TestEnvironmentAlreadyExistsException", "Microsoft.TeamFoundation.Test.WebApi.TestEnvironmentAlreadyExistsException, Microsoft.TeamFoundation.Test.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.TeamFoundation.Test.WebApi.TestEnvironmentAlreadyExistsException : TestExecutionServiceException {
    public TestEnvironmentAlreadyExistsException(string message);
    public TestEnvironmentAlreadyExistsException(string message, Exception ex);
}
[ExceptionMappingAttribute("0.0", "3.0", "TestExecutionAccessDeniedException", "Microsoft.TeamFoundation.Test.WebApi.TestExecutionAccessDeniedException, Microsoft.TeamFoundation.Test.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.TeamFoundation.Test.WebApi.TestExecutionAccessDeniedException : TestExecutionServiceException {
    public TestExecutionAccessDeniedException(string message);
}
public enum Microsoft.TeamFoundation.Test.WebApi.TestExecutionCommand : Enum {
    public int value__;
    public static TestExecutionCommand None;
    public static TestExecutionCommand Start;
    public static TestExecutionCommand Stop;
    public static TestExecutionCommand Cancel;
}
[DataContractAttribute]
public class Microsoft.TeamFoundation.Test.WebApi.TestExecutionCommandMessage : object {
    [CompilerGeneratedAttribute]
private TestExecutionCommand <Command>k__BackingField;
    [DataMemberAttribute]
public TestExecutionCommand Command { get; public set; }
    [CompilerGeneratedAttribute]
public TestExecutionCommand get_Command();
    [CompilerGeneratedAttribute]
public void set_Command(TestExecutionCommand value);
}
[DataContractAttribute]
public class Microsoft.TeamFoundation.Test.WebApi.TestExecutionControlOptions : object {
    [CompilerGeneratedAttribute]
private bool <UseTcmService>k__BackingField;
    [DataMemberAttribute]
public bool UseTcmService { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_UseTcmService();
    [CompilerGeneratedAttribute]
public void set_UseTcmService(bool value);
}
[ExceptionMappingAttribute("0.0", "3.0", "TestExecutionObjectAlreadyExistsException", "Microsoft.TeamFoundation.Test.WebApi.TestExecutionObjectAlreadyExistsException, Microsoft.TeamFoundation.Test.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.TeamFoundation.Test.WebApi.TestExecutionObjectAlreadyExistsException : TestExecutionServiceException {
    public TestExecutionObjectAlreadyExistsException(string message, Exception ex);
}
[ExceptionMappingAttribute("0.0", "3.0", "TestExecutionObjectNotFoundException", "Microsoft.TeamFoundation.Test.WebApi.TestExecutionObjectNotFoundException, Microsoft.TeamFoundation.Test.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.TeamFoundation.Test.WebApi.TestExecutionObjectNotFoundException : TestExecutionServiceException {
    public TestExecutionObjectNotFoundException(string message);
    public TestExecutionObjectNotFoundException(string message, Exception ex);
}
[ExceptionMappingAttribute("0.0", "3.0", "TestExecutionRunResourceNotFoundException", "Microsoft.TeamFoundation.Test.WebApi.TestExecutionRunResourceNotFoundException, Microsoft.TeamFoundation.Test.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.TeamFoundation.Test.WebApi.TestExecutionRunResourceNotFoundException : TestExecutionServiceException {
    public TestExecutionRunResourceNotFoundException(string message);
    public TestExecutionRunResourceNotFoundException(string message, Exception ex);
}
[DataContractAttribute]
public class Microsoft.TeamFoundation.Test.WebApi.TestExecutionServiceCommand : object {
    [CompilerGeneratedAttribute]
private long <MessageId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MessageType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Body>k__BackingField;
    [DataMemberAttribute]
public long MessageId { get; public set; }
    [DataMemberAttribute]
public string MessageType { get; public set; }
    [DataMemberAttribute]
public string Body { get; public set; }
    [CompilerGeneratedAttribute]
public long get_MessageId();
    [CompilerGeneratedAttribute]
public void set_MessageId(long value);
    [CompilerGeneratedAttribute]
public string get_MessageType();
    [CompilerGeneratedAttribute]
public void set_MessageType(string value);
    [CompilerGeneratedAttribute]
public string get_Body();
    [CompilerGeneratedAttribute]
public void set_Body(string value);
}
[ExceptionMappingAttribute("0.0", "3.0", "TestExecutionServiceException", "Microsoft.TeamFoundation.Test.WebApi.TestExecutionServiceException, Microsoft.TeamFoundation.Test.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.TeamFoundation.Test.WebApi.TestExecutionServiceException : VssServiceException {
    public TestExecutionServiceException(string message);
    public TestExecutionServiceException(string message, Exception ex);
}
[ExceptionMappingAttribute("0.0", "3.0", "TestExecutionServiceInvalidOperationException", "Microsoft.TeamFoundation.Test.WebApi.TestExecutionServiceInvalidOperationException, Microsoft.TeamFoundation.Test.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.TeamFoundation.Test.WebApi.TestExecutionServiceInvalidOperationException : TestExecutionServiceException {
    public TestExecutionServiceInvalidOperationException(string message, Exception ex);
}
[GenerateAllConstantsAttribute("")]
public static class Microsoft.TeamFoundation.Test.WebApi.TestExecutionServiceResourceIds : object {
    public static string TestExecutionServiceArea;
    public static string TestExecutionServiceAreaId;
    public static string TestExecutionResource;
    public static string AgentResource;
    public static Guid AgentLocationId;
    public static string AutomationRunResource;
    public static Guid AutomationRunLocationId;
    public static string SliceResource;
    public static Guid SliceLocationId;
    public static string CommandResource;
    public static Guid CommandLocationId;
    public static string DistributedTestRunResource;
    public static Guid DistributedTestRunLocationId;
    public static string TestExecutionConfigurationResource;
    public static Guid TestExecutionConfigurationLocationId;
    public static string TestExecutionControlOptionsResource;
    public static Guid TestExecutionControlOptionsLocationId;
    private static TestExecutionServiceResourceIds();
}
[ResourceAreaAttribute("3b95fb80-fdda-4218-b60e-1052d070ae6b")]
public class Microsoft.TeamFoundation.Test.WebApi.TestHttpClient : VssHttpClientBase {
    private static Dictionary`2<string, Type> s_translatedExceptions;
    public static int LongPollTimeOutForMessageQueueInSeconds { get; }
    public HttpClient HttpClient { get; }
    protected IDictionary`2<string, Type> TranslatedExceptions { get; }
    private static TestHttpClient();
    public TestHttpClient(Uri baseUrl, VssCredentials credentials);
    public TestHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public TestHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public TestHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public TestHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    public sealed virtual Task`1<TestAgent> CreateAgentAsync(TestAgent testAgent);
    public sealed virtual Task`1<TestAgent> GetAgentAsync(int id);
    public sealed virtual Task DeleteAgentAsync(int id);
    public sealed virtual Task`1<TestAutomationRunSlice> GetSliceAsync(int testAgentId);
    public sealed virtual Task UpdateSliceAsync(TestAutomationRunSlice sliceUpdatePackage);
    public sealed virtual Task`1<TestExecutionServiceCommand> GetCommandAsync(int testAgentId, Nullable`1<long> lastCommandId, CancellationToken cancellationToken);
    public virtual Task`1<DistributedTestRun> UpdateTestRunAsync(DistributedTestRun distributedTestRun, string project, object userState, CancellationToken cancellationToken);
    public sealed virtual Task`1<TestRunExecutionConfiguration> GetRerunConfigurationAsync(TestRunExecutionConfiguration testRunExecutionConfiguration, object userState, CancellationToken cancellationToken);
    public sealed virtual Task`1<TestExecutionControlOptions> GetTestExecutionControlOptionsAsync(string envUrl, object userState, CancellationToken cancellationToken);
    public static int get_LongPollTimeOutForMessageQueueInSeconds();
    public sealed virtual HttpClient get_HttpClient();
    protected virtual IDictionary`2<string, Type> get_TranslatedExceptions();
}
[DataContractAttribute]
public class Microsoft.TeamFoundation.Test.WebApi.TestMetadata : object {
    [CompilerGeneratedAttribute]
private SlicedTestData <SlicedTestData>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Traits>k__BackingField;
    [DataMemberAttribute]
public SlicedTestData SlicedTestData { get; public set; }
    [DataMemberAttribute]
public String[] Traits { get; public set; }
    [CompilerGeneratedAttribute]
public SlicedTestData get_SlicedTestData();
    [CompilerGeneratedAttribute]
public void set_SlicedTestData(SlicedTestData value);
    [CompilerGeneratedAttribute]
public String[] get_Traits();
    [CompilerGeneratedAttribute]
public void set_Traits(String[] value);
}
[DataContractAttribute]
public class Microsoft.TeamFoundation.Test.WebApi.TestReportingSettings : object {
    [CompilerGeneratedAttribute]
private string <PullRequestTargetBranchName>k__BackingField;
    [DataMemberAttribute]
public string PullRequestTargetBranchName { get; public set; }
    [CompilerGeneratedAttribute]
public string get_PullRequestTargetBranchName();
    [CompilerGeneratedAttribute]
public void set_PullRequestTargetBranchName(string value);
}
[DataContractAttribute]
public class Microsoft.TeamFoundation.Test.WebApi.TestRunExecutionConfiguration : object {
    [CompilerGeneratedAttribute]
private string <ProjectName>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TestRunId>k__BackingField;
    [CompilerGeneratedAttribute]
private RerunProperties <RerunProperties>k__BackingField;
    [DataMemberAttribute]
public string ProjectName { get; public set; }
    [DataMemberAttribute]
public int TestRunId { get; public set; }
    [DataMemberAttribute]
public RerunProperties RerunProperties { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ProjectName();
    [CompilerGeneratedAttribute]
public void set_ProjectName(string value);
    [CompilerGeneratedAttribute]
public int get_TestRunId();
    [CompilerGeneratedAttribute]
public void set_TestRunId(int value);
    [CompilerGeneratedAttribute]
public RerunProperties get_RerunProperties();
    [CompilerGeneratedAttribute]
public void set_RerunProperties(RerunProperties value);
}
[DataContractAttribute]
public class Microsoft.TeamFoundation.Test.WebApi.TestRunInformation : object {
    [CompilerGeneratedAttribute]
private string <TestDropPath>k__BackingField;
    [CompilerGeneratedAttribute]
private ShallowReference <TcmRun>k__BackingField;
    [CompilerGeneratedAttribute]
private RunFilter <Filters>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RunSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private TeamProjectReference <ProjectReference>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsTestRunComplete>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsTestPlanRun>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TestPlanId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <BuildConfigurationId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BuildPlatform>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BuildFlavor>k__BackingField;
    [DataMemberAttribute]
public string TestDropPath { get; public set; }
    [DataMemberAttribute]
public ShallowReference TcmRun { get; public set; }
    [DataMemberAttribute]
public RunFilter Filters { get; public set; }
    [DataMemberAttribute]
public string RunSettings { get; public set; }
    [DataMemberAttribute]
public TeamProjectReference ProjectReference { get; public set; }
    [DataMemberAttribute]
public bool IsTestRunComplete { get; public set; }
    [DataMemberAttribute]
public bool IsTestPlanRun { get; public set; }
    [DataMemberAttribute]
public int TestPlanId { get; public set; }
    [DataMemberAttribute]
public int BuildConfigurationId { get; public set; }
    [DataMemberAttribute]
public string BuildPlatform { get; public set; }
    [DataMemberAttribute]
public string BuildFlavor { get; public set; }
    [CompilerGeneratedAttribute]
public string get_TestDropPath();
    [CompilerGeneratedAttribute]
public void set_TestDropPath(string value);
    [CompilerGeneratedAttribute]
public ShallowReference get_TcmRun();
    [CompilerGeneratedAttribute]
public void set_TcmRun(ShallowReference value);
    [CompilerGeneratedAttribute]
public RunFilter get_Filters();
    [CompilerGeneratedAttribute]
public void set_Filters(RunFilter value);
    [CompilerGeneratedAttribute]
public string get_RunSettings();
    [CompilerGeneratedAttribute]
public void set_RunSettings(string value);
    [CompilerGeneratedAttribute]
public TeamProjectReference get_ProjectReference();
    [CompilerGeneratedAttribute]
public void set_ProjectReference(TeamProjectReference value);
    [CompilerGeneratedAttribute]
public bool get_IsTestRunComplete();
    [CompilerGeneratedAttribute]
public void set_IsTestRunComplete(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsTestPlanRun();
    [CompilerGeneratedAttribute]
public void set_IsTestPlanRun(bool value);
    [CompilerGeneratedAttribute]
public int get_TestPlanId();
    [CompilerGeneratedAttribute]
public void set_TestPlanId(int value);
    [CompilerGeneratedAttribute]
public int get_BuildConfigurationId();
    [CompilerGeneratedAttribute]
public void set_BuildConfigurationId(int value);
    [CompilerGeneratedAttribute]
public string get_BuildPlatform();
    [CompilerGeneratedAttribute]
public void set_BuildPlatform(string value);
    [CompilerGeneratedAttribute]
public string get_BuildFlavor();
    [CompilerGeneratedAttribute]
public void set_BuildFlavor(string value);
}
[DataContractAttribute]
public class Microsoft.TeamFoundation.Test.WebApi.TfsSpecificProperties : object {
    [CompilerGeneratedAttribute]
private string <PhaseName>k__BackingField;
    [CompilerGeneratedAttribute]
private int <PhaseAttempt>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StageName>k__BackingField;
    [CompilerGeneratedAttribute]
private int <StageAttempt>k__BackingField;
    [CompilerGeneratedAttribute]
private string <JobName>k__BackingField;
    [CompilerGeneratedAttribute]
private int <JobAttempt>k__BackingField;
    [DataMemberAttribute]
public string PhaseName { get; public set; }
    [DataMemberAttribute]
public int PhaseAttempt { get; public set; }
    [DataMemberAttribute]
public string StageName { get; public set; }
    [DataMemberAttribute]
public int StageAttempt { get; public set; }
    [DataMemberAttribute]
public string JobName { get; public set; }
    [DataMemberAttribute]
public int JobAttempt { get; public set; }
    [CompilerGeneratedAttribute]
public string get_PhaseName();
    [CompilerGeneratedAttribute]
public void set_PhaseName(string value);
    [CompilerGeneratedAttribute]
public int get_PhaseAttempt();
    [CompilerGeneratedAttribute]
public void set_PhaseAttempt(int value);
    [CompilerGeneratedAttribute]
public string get_StageName();
    [CompilerGeneratedAttribute]
public void set_StageName(string value);
    [CompilerGeneratedAttribute]
public int get_StageAttempt();
    [CompilerGeneratedAttribute]
public void set_StageAttempt(int value);
    [CompilerGeneratedAttribute]
public string get_JobName();
    [CompilerGeneratedAttribute]
public void set_JobName(string value);
    [CompilerGeneratedAttribute]
public int get_JobAttempt();
    [CompilerGeneratedAttribute]
public void set_JobAttempt(int value);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
