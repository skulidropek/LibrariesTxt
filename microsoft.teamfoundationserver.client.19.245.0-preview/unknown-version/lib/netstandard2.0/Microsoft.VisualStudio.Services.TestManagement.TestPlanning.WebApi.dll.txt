[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.BuildDefinitionReference : object {
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [DataMemberAttribute]
public int Id { get; public set; }
    [DataMemberAttribute]
public string Name { get; public set; }
    public BuildDefinitionReference(int id, string name);
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.CloneOperationCommonResponse : object {
    [CompilerGeneratedAttribute]
private CloneStatistics <cloneStatistics>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <completionDate>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <creationDate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <message>k__BackingField;
    [CompilerGeneratedAttribute]
private int <opId>k__BackingField;
    [CompilerGeneratedAttribute]
private CloneOperationState <state>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceLinks <links>k__BackingField;
    [DataMemberAttribute]
public CloneStatistics cloneStatistics { get; public set; }
    [DataMemberAttribute]
public DateTime completionDate { get; public set; }
    [DataMemberAttribute]
public DateTime creationDate { get; public set; }
    [DataMemberAttribute]
public string message { get; public set; }
    [DataMemberAttribute]
public int opId { get; public set; }
    [DataMemberAttribute]
public CloneOperationState state { get; public set; }
    [DataMemberAttribute]
public ReferenceLinks links { get; public set; }
    [CompilerGeneratedAttribute]
public CloneStatistics get_cloneStatistics();
    [CompilerGeneratedAttribute]
public void set_cloneStatistics(CloneStatistics value);
    [CompilerGeneratedAttribute]
public DateTime get_completionDate();
    [CompilerGeneratedAttribute]
public void set_completionDate(DateTime value);
    [CompilerGeneratedAttribute]
public DateTime get_creationDate();
    [CompilerGeneratedAttribute]
public void set_creationDate(DateTime value);
    [CompilerGeneratedAttribute]
public string get_message();
    [CompilerGeneratedAttribute]
public void set_message(string value);
    [CompilerGeneratedAttribute]
public int get_opId();
    [CompilerGeneratedAttribute]
public void set_opId(int value);
    [CompilerGeneratedAttribute]
public CloneOperationState get_state();
    [CompilerGeneratedAttribute]
public void set_state(CloneOperationState value);
    [CompilerGeneratedAttribute]
public ReferenceLinks get_links();
    [CompilerGeneratedAttribute]
public void set_links(ReferenceLinks value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.CloneTestCaseOperationInformation : object {
    [CompilerGeneratedAttribute]
private SourceTestSuiteResponse <sourceTestSuite>k__BackingField;
    [CompilerGeneratedAttribute]
private TestSuiteReferenceWithProject <destinationTestSuite>k__BackingField;
    [CompilerGeneratedAttribute]
private CloneTestCaseOptions <cloneOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private CloneOperationCommonResponse <cloneOperationResponse>k__BackingField;
    [DataMemberAttribute]
public SourceTestSuiteResponse sourceTestSuite { get; public set; }
    [DataMemberAttribute]
public TestSuiteReferenceWithProject destinationTestSuite { get; public set; }
    [DataMemberAttribute]
public CloneTestCaseOptions cloneOptions { get; public set; }
    [DataMemberAttribute]
public CloneOperationCommonResponse cloneOperationResponse { get; public set; }
    [CompilerGeneratedAttribute]
public SourceTestSuiteResponse get_sourceTestSuite();
    [CompilerGeneratedAttribute]
public void set_sourceTestSuite(SourceTestSuiteResponse value);
    [CompilerGeneratedAttribute]
public TestSuiteReferenceWithProject get_destinationTestSuite();
    [CompilerGeneratedAttribute]
public void set_destinationTestSuite(TestSuiteReferenceWithProject value);
    [CompilerGeneratedAttribute]
public CloneTestCaseOptions get_cloneOptions();
    [CompilerGeneratedAttribute]
public void set_cloneOptions(CloneTestCaseOptions value);
    [CompilerGeneratedAttribute]
public CloneOperationCommonResponse get_cloneOperationResponse();
    [CompilerGeneratedAttribute]
public void set_cloneOperationResponse(CloneOperationCommonResponse value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.CloneTestCaseParams : object {
    [CompilerGeneratedAttribute]
private TestPlanReference <sourceTestPlan>k__BackingField;
    [CompilerGeneratedAttribute]
private TestPlanReference <destinationTestPlan>k__BackingField;
    [CompilerGeneratedAttribute]
private SourceTestSuiteInfo <sourceTestSuite>k__BackingField;
    [CompilerGeneratedAttribute]
private DestinationTestSuiteInfo <destinationTestSuite>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<int> <testCaseIds>k__BackingField;
    [CompilerGeneratedAttribute]
private CloneTestCaseOptions <cloneOptions>k__BackingField;
    [DataMemberAttribute]
public TestPlanReference sourceTestPlan { get; public set; }
    [DataMemberAttribute]
public TestPlanReference destinationTestPlan { get; public set; }
    [DataMemberAttribute]
public SourceTestSuiteInfo sourceTestSuite { get; public set; }
    [DataMemberAttribute]
public DestinationTestSuiteInfo destinationTestSuite { get; public set; }
    [DataMemberAttribute]
public List`1<int> testCaseIds { get; public set; }
    [DataMemberAttribute]
public CloneTestCaseOptions cloneOptions { get; public set; }
    [CompilerGeneratedAttribute]
public TestPlanReference get_sourceTestPlan();
    [CompilerGeneratedAttribute]
public void set_sourceTestPlan(TestPlanReference value);
    [CompilerGeneratedAttribute]
public TestPlanReference get_destinationTestPlan();
    [CompilerGeneratedAttribute]
public void set_destinationTestPlan(TestPlanReference value);
    [CompilerGeneratedAttribute]
public SourceTestSuiteInfo get_sourceTestSuite();
    [CompilerGeneratedAttribute]
public void set_sourceTestSuite(SourceTestSuiteInfo value);
    [CompilerGeneratedAttribute]
public DestinationTestSuiteInfo get_destinationTestSuite();
    [CompilerGeneratedAttribute]
public void set_destinationTestSuite(DestinationTestSuiteInfo value);
    [CompilerGeneratedAttribute]
public List`1<int> get_testCaseIds();
    [CompilerGeneratedAttribute]
public void set_testCaseIds(List`1<int> value);
    [CompilerGeneratedAttribute]
public CloneTestCaseOptions get_cloneOptions();
    [CompilerGeneratedAttribute]
public void set_cloneOptions(CloneTestCaseOptions value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.CloneTestPlanOperationInformation : object {
    [CompilerGeneratedAttribute]
private SourceTestplanResponse <sourceTestPlan>k__BackingField;
    [CompilerGeneratedAttribute]
private TestPlan <destinationTestPlan>k__BackingField;
    [CompilerGeneratedAttribute]
private CloneOptions <cloneOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private CloneOperationCommonResponse <cloneOperationResponse>k__BackingField;
    [DataMemberAttribute]
public SourceTestplanResponse sourceTestPlan { get; public set; }
    [DataMemberAttribute]
public TestPlan destinationTestPlan { get; public set; }
    [DataMemberAttribute]
public CloneOptions cloneOptions { get; public set; }
    [DataMemberAttribute]
public CloneOperationCommonResponse cloneOperationResponse { get; public set; }
    [CompilerGeneratedAttribute]
public SourceTestplanResponse get_sourceTestPlan();
    [CompilerGeneratedAttribute]
public void set_sourceTestPlan(SourceTestplanResponse value);
    [CompilerGeneratedAttribute]
public TestPlan get_destinationTestPlan();
    [CompilerGeneratedAttribute]
public void set_destinationTestPlan(TestPlan value);
    [CompilerGeneratedAttribute]
public CloneOptions get_cloneOptions();
    [CompilerGeneratedAttribute]
public void set_cloneOptions(CloneOptions value);
    [CompilerGeneratedAttribute]
public CloneOperationCommonResponse get_cloneOperationResponse();
    [CompilerGeneratedAttribute]
public void set_cloneOperationResponse(CloneOperationCommonResponse value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.CloneTestPlanParams : object {
    [CompilerGeneratedAttribute]
private SourceTestPlanInfo <sourceTestPlan>k__BackingField;
    [CompilerGeneratedAttribute]
private DestinationTestPlanCloneParams <destinationTestPlan>k__BackingField;
    [CompilerGeneratedAttribute]
private CloneOptions <cloneOptions>k__BackingField;
    [DataMemberAttribute]
public SourceTestPlanInfo sourceTestPlan { get; public set; }
    [DataMemberAttribute]
public DestinationTestPlanCloneParams destinationTestPlan { get; public set; }
    [DataMemberAttribute]
public CloneOptions cloneOptions { get; public set; }
    [CompilerGeneratedAttribute]
public SourceTestPlanInfo get_sourceTestPlan();
    [CompilerGeneratedAttribute]
public void set_sourceTestPlan(SourceTestPlanInfo value);
    [CompilerGeneratedAttribute]
public DestinationTestPlanCloneParams get_destinationTestPlan();
    [CompilerGeneratedAttribute]
public void set_destinationTestPlan(DestinationTestPlanCloneParams value);
    [CompilerGeneratedAttribute]
public CloneOptions get_cloneOptions();
    [CompilerGeneratedAttribute]
public void set_cloneOptions(CloneOptions value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.CloneTestSuiteOperationInformation : object {
    [CompilerGeneratedAttribute]
private TestSuiteReferenceWithProject <sourceTestSuite>k__BackingField;
    [CompilerGeneratedAttribute]
private TestSuiteReferenceWithProject <destinationTestSuite>k__BackingField;
    [CompilerGeneratedAttribute]
private TestSuiteReferenceWithProject <clonedTestSuite>k__BackingField;
    [CompilerGeneratedAttribute]
private CloneOptions <cloneOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private CloneOperationCommonResponse <cloneOperationResponse>k__BackingField;
    [DataMemberAttribute]
public TestSuiteReferenceWithProject sourceTestSuite { get; public set; }
    [DataMemberAttribute]
public TestSuiteReferenceWithProject destinationTestSuite { get; public set; }
    [DataMemberAttribute]
public TestSuiteReferenceWithProject clonedTestSuite { get; public set; }
    [DataMemberAttribute]
public CloneOptions cloneOptions { get; public set; }
    [DataMemberAttribute]
public CloneOperationCommonResponse cloneOperationResponse { get; public set; }
    [CompilerGeneratedAttribute]
public TestSuiteReferenceWithProject get_sourceTestSuite();
    [CompilerGeneratedAttribute]
public void set_sourceTestSuite(TestSuiteReferenceWithProject value);
    [CompilerGeneratedAttribute]
public TestSuiteReferenceWithProject get_destinationTestSuite();
    [CompilerGeneratedAttribute]
public void set_destinationTestSuite(TestSuiteReferenceWithProject value);
    [CompilerGeneratedAttribute]
public TestSuiteReferenceWithProject get_clonedTestSuite();
    [CompilerGeneratedAttribute]
public void set_clonedTestSuite(TestSuiteReferenceWithProject value);
    [CompilerGeneratedAttribute]
public CloneOptions get_cloneOptions();
    [CompilerGeneratedAttribute]
public void set_cloneOptions(CloneOptions value);
    [CompilerGeneratedAttribute]
public CloneOperationCommonResponse get_cloneOperationResponse();
    [CompilerGeneratedAttribute]
public void set_cloneOperationResponse(CloneOperationCommonResponse value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.CloneTestSuiteParams : object {
    [CompilerGeneratedAttribute]
private SourceTestSuiteInfo <sourceTestSuite>k__BackingField;
    [CompilerGeneratedAttribute]
private DestinationTestSuiteInfo <destinationTestSuite>k__BackingField;
    [CompilerGeneratedAttribute]
private CloneOptions <cloneOptions>k__BackingField;
    [DataMemberAttribute]
public SourceTestSuiteInfo sourceTestSuite { get; public set; }
    [DataMemberAttribute]
public DestinationTestSuiteInfo destinationTestSuite { get; public set; }
    [DataMemberAttribute]
public CloneOptions cloneOptions { get; public set; }
    [CompilerGeneratedAttribute]
public SourceTestSuiteInfo get_sourceTestSuite();
    [CompilerGeneratedAttribute]
public void set_sourceTestSuite(SourceTestSuiteInfo value);
    [CompilerGeneratedAttribute]
public DestinationTestSuiteInfo get_destinationTestSuite();
    [CompilerGeneratedAttribute]
public void set_destinationTestSuite(DestinationTestSuiteInfo value);
    [CompilerGeneratedAttribute]
public CloneOptions get_cloneOptions();
    [CompilerGeneratedAttribute]
public void set_cloneOptions(CloneOptions value);
}
public class Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.Configuration : object {
    [CompilerGeneratedAttribute]
private int <ConfigurationId>k__BackingField;
    [DataMemberAttribute]
public int ConfigurationId { get; public set; }
    [CompilerGeneratedAttribute]
public int get_ConfigurationId();
    [CompilerGeneratedAttribute]
public void set_ConfigurationId(int value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.DestinationTestPlanCloneParams : TestPlanCreateParams {
    [CompilerGeneratedAttribute]
private string <Project>k__BackingField;
    [DataMemberAttribute]
public string Project { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Project();
    [CompilerGeneratedAttribute]
public void set_Project(string value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.DestinationTestSuiteInfo : object {
    [CompilerGeneratedAttribute]
private string <Project>k__BackingField;
    [CompilerGeneratedAttribute]
private int <id>k__BackingField;
    [DataMemberAttribute]
public string Project { get; public set; }
    [DataMemberAttribute]
public int id { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Project();
    [CompilerGeneratedAttribute]
public void set_Project(string value);
    [CompilerGeneratedAttribute]
public int get_id();
    [CompilerGeneratedAttribute]
public void set_id(int value);
}
[FlagsAttribute]
public enum Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.ExcludeFlags : Enum {
    public int value__;
    public static ExcludeFlags None;
    public static ExcludeFlags PointAssignments;
    public static ExcludeFlags ExtraInformation;
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.ExportTestCaseParams : object {
    [CompilerGeneratedAttribute]
private int <testPlanId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <testSuiteId>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<int> <testCaseIds>k__BackingField;
    [DataMemberAttribute]
public int testPlanId { get; public set; }
    [DataMemberAttribute]
public int testSuiteId { get; public set; }
    [DataMemberAttribute]
public List`1<int> testCaseIds { get; public set; }
    [CompilerGeneratedAttribute]
public int get_testPlanId();
    [CompilerGeneratedAttribute]
public void set_testPlanId(int value);
    [CompilerGeneratedAttribute]
public int get_testSuiteId();
    [CompilerGeneratedAttribute]
public void set_testSuiteId(int value);
    [CompilerGeneratedAttribute]
public List`1<int> get_testCaseIds();
    [CompilerGeneratedAttribute]
public void set_testCaseIds(List`1<int> value);
}
public enum Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.FailureType : Enum {
    public byte value__;
    public static FailureType None;
    public static FailureType Regression;
    public static FailureType New_Issue;
    public static FailureType Known_Issue;
    public static FailureType Unknown;
    public static FailureType Null_Value;
    public static FailureType MaxValue;
}
public enum Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.LastResolutionState : Enum {
    public byte value__;
    public static LastResolutionState None;
    public static LastResolutionState NeedsInvestigation;
    public static LastResolutionState TestIssue;
    public static LastResolutionState ProductIssue;
    public static LastResolutionState ConfigurationIssue;
    public static LastResolutionState NullValue;
    public static LastResolutionState MaxValue;
}
[GenerateAllConstantsAttribute("")]
public enum Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.LibraryTestCasesDataReturnCode : Enum {
    public int value__;
    public static LibraryTestCasesDataReturnCode Success;
    public static LibraryTestCasesDataReturnCode Error;
}
[DataContractAttribute]
[ClientIncludeModelAttribute]
public class Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.LibraryWorkItemsData : object {
    [CompilerGeneratedAttribute]
private IList`1<WorkItemDetails> <WorkItems>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<int> <WorkItemIds>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasMoreElements>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ExceededWorkItemQueryLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContinuationToken>k__BackingField;
    [CompilerGeneratedAttribute]
private LibraryTestCasesDataReturnCode <ReturnCode>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <ColumnOptions>k__BackingField;
    [DataMemberAttribute]
public IList`1<WorkItemDetails> WorkItems { get; public set; }
    [DataMemberAttribute]
public IList`1<int> WorkItemIds { get; public set; }
    [DataMemberAttribute]
public bool HasMoreElements { get; public set; }
    [DataMemberAttribute]
public bool ExceededWorkItemQueryLimit { get; public set; }
    [DataMemberAttribute]
public string ContinuationToken { get; public set; }
    [DataMemberAttribute]
public LibraryTestCasesDataReturnCode ReturnCode { get; public set; }
    [DataMemberAttribute]
public List`1<string> ColumnOptions { get; public set; }
    [CompilerGeneratedAttribute]
public IList`1<WorkItemDetails> get_WorkItems();
    [CompilerGeneratedAttribute]
public void set_WorkItems(IList`1<WorkItemDetails> value);
    [CompilerGeneratedAttribute]
public IList`1<int> get_WorkItemIds();
    [CompilerGeneratedAttribute]
public void set_WorkItemIds(IList`1<int> value);
    [CompilerGeneratedAttribute]
public bool get_HasMoreElements();
    [CompilerGeneratedAttribute]
public void set_HasMoreElements(bool value);
    [CompilerGeneratedAttribute]
public bool get_ExceededWorkItemQueryLimit();
    [CompilerGeneratedAttribute]
public void set_ExceededWorkItemQueryLimit(bool value);
    [CompilerGeneratedAttribute]
public string get_ContinuationToken();
    [CompilerGeneratedAttribute]
public void set_ContinuationToken(string value);
    [CompilerGeneratedAttribute]
public LibraryTestCasesDataReturnCode get_ReturnCode();
    [CompilerGeneratedAttribute]
public void set_ReturnCode(LibraryTestCasesDataReturnCode value);
    [CompilerGeneratedAttribute]
public List`1<string> get_ColumnOptions();
    [CompilerGeneratedAttribute]
public void set_ColumnOptions(List`1<string> value);
}
[DataContractAttribute]
[ClientIncludeModelAttribute]
public class Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.LibraryWorkItemsDataProviderRequest : object {
    [CompilerGeneratedAttribute]
private TestPlansLibraryQuery <LibraryQueryType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContinuationToken>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<int> <WorkItemIds>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OrderByField>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsAscending>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<TestPlansLibraryWorkItemFilter> <FilterValues>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <ColumnOptions>k__BackingField;
    [DataMemberAttribute]
public TestPlansLibraryQuery LibraryQueryType { get; public set; }
    [DataMemberAttribute]
public string ContinuationToken { get; public set; }
    [DataMemberAttribute]
public IList`1<int> WorkItemIds { get; public set; }
    [DataMemberAttribute]
public string OrderByField { get; public set; }
    [DataMemberAttribute]
public bool IsAscending { get; public set; }
    [DataMemberAttribute]
public List`1<TestPlansLibraryWorkItemFilter> FilterValues { get; public set; }
    [DataMemberAttribute]
public String[] ColumnOptions { get; public set; }
    [CompilerGeneratedAttribute]
public TestPlansLibraryQuery get_LibraryQueryType();
    [CompilerGeneratedAttribute]
public void set_LibraryQueryType(TestPlansLibraryQuery value);
    [CompilerGeneratedAttribute]
public string get_ContinuationToken();
    [CompilerGeneratedAttribute]
public void set_ContinuationToken(string value);
    [CompilerGeneratedAttribute]
public IList`1<int> get_WorkItemIds();
    [CompilerGeneratedAttribute]
public void set_WorkItemIds(IList`1<int> value);
    [CompilerGeneratedAttribute]
public string get_OrderByField();
    [CompilerGeneratedAttribute]
public void set_OrderByField(string value);
    [CompilerGeneratedAttribute]
public bool get_IsAscending();
    [CompilerGeneratedAttribute]
public void set_IsAscending(bool value);
    [CompilerGeneratedAttribute]
public List`1<TestPlansLibraryWorkItemFilter> get_FilterValues();
    [CompilerGeneratedAttribute]
public void set_FilterValues(List`1<TestPlansLibraryWorkItemFilter> value);
    [CompilerGeneratedAttribute]
public String[] get_ColumnOptions();
    [CompilerGeneratedAttribute]
public void set_ColumnOptions(String[] value);
}
public enum Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.Outcome : Enum {
    public byte value__;
    public static Outcome Unspecified;
    public static Outcome None;
    public static Outcome Passed;
    public static Outcome Failed;
    public static Outcome Inconclusive;
    public static Outcome Timeout;
    public static Outcome Aborted;
    public static Outcome Blocked;
    public static Outcome NotExecuted;
    public static Outcome Warning;
    public static Outcome Error;
    public static Outcome NotApplicable;
    public static Outcome Paused;
    public static Outcome InProgress;
    public static Outcome NotImpacted;
    public static Outcome MaxValue;
}
public class Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.PointAssignment : Configuration {
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ConfigurationName>k__BackingField;
    [CompilerGeneratedAttribute]
private IdentityRef <Tester>k__BackingField;
    [DataMemberAttribute]
public int Id { get; public set; }
    [DataMemberAttribute]
public string ConfigurationName { get; public set; }
    [DataMemberAttribute]
public IdentityRef Tester { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [CompilerGeneratedAttribute]
public string get_ConfigurationName();
    [CompilerGeneratedAttribute]
public void set_ConfigurationName(string value);
    [CompilerGeneratedAttribute]
public IdentityRef get_Tester();
    [CompilerGeneratedAttribute]
public void set_Tester(IdentityRef value);
}
public enum Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.PointState : Enum {
    public byte value__;
    public static PointState None;
    public static PointState Ready;
    public static PointState Completed;
    public static PointState NotReady;
    public static PointState InProgress;
    public static PointState MaxValue;
}
public class Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.Results : object {
    [CompilerGeneratedAttribute]
private Outcome <Outcome>k__BackingField;
    public Outcome Outcome { get; public set; }
    [CompilerGeneratedAttribute]
public Outcome get_Outcome();
    [CompilerGeneratedAttribute]
public void set_Outcome(Outcome value);
}
public enum Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.ResultState : Enum {
    public byte value__;
    public static ResultState Unspecified;
    public static ResultState Pending;
    public static ResultState Queued;
    public static ResultState InProgress;
    public static ResultState Paused;
    public static ResultState Completed;
    public static ResultState MaxValue;
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.SourceTestPlanInfo : object {
    [CompilerGeneratedAttribute]
private int <id>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<int> <suiteIds>k__BackingField;
    [DataMemberAttribute]
public int id { get; public set; }
    [DataMemberAttribute]
public List`1<int> suiteIds { get; public set; }
    [CompilerGeneratedAttribute]
public int get_id();
    [CompilerGeneratedAttribute]
public void set_id(int value);
    [CompilerGeneratedAttribute]
public List`1<int> get_suiteIds();
    [CompilerGeneratedAttribute]
public void set_suiteIds(List`1<int> value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.SourceTestplanResponse : TestPlanReference {
    [CompilerGeneratedAttribute]
private TeamProjectReference <Project>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<int> <suiteIds>k__BackingField;
    [DataMemberAttribute]
public TeamProjectReference Project { get; public set; }
    [DataMemberAttribute]
public List`1<int> suiteIds { get; public set; }
    [CompilerGeneratedAttribute]
public TeamProjectReference get_Project();
    [CompilerGeneratedAttribute]
public void set_Project(TeamProjectReference value);
    [CompilerGeneratedAttribute]
public List`1<int> get_suiteIds();
    [CompilerGeneratedAttribute]
public void set_suiteIds(List`1<int> value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.SourceTestSuiteInfo : object {
    [CompilerGeneratedAttribute]
private int <id>k__BackingField;
    [DataMemberAttribute]
public int id { get; public set; }
    [CompilerGeneratedAttribute]
public int get_id();
    [CompilerGeneratedAttribute]
public void set_id(int value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.SourceTestSuiteResponse : TestSuiteReference {
    [CompilerGeneratedAttribute]
private TeamProjectReference <Project>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<int> <testCaseIds>k__BackingField;
    [DataMemberAttribute]
public TeamProjectReference Project { get; public set; }
    [DataMemberAttribute]
public List`1<int> testCaseIds { get; public set; }
    [CompilerGeneratedAttribute]
public TeamProjectReference get_Project();
    [CompilerGeneratedAttribute]
public void set_Project(TeamProjectReference value);
    [CompilerGeneratedAttribute]
public List`1<int> get_testCaseIds();
    [CompilerGeneratedAttribute]
public void set_testCaseIds(List`1<int> value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.SuiteEntry : SuiteEntryUpdateParams {
    [CompilerGeneratedAttribute]
private int <SuiteId>k__BackingField;
    [DataMemberAttribute]
public int SuiteId { get; public set; }
    [CompilerGeneratedAttribute]
public int get_SuiteId();
    [CompilerGeneratedAttribute]
public void set_SuiteId(int value);
}
public enum Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.SuiteEntryTypes : Enum {
    public int value__;
    public static SuiteEntryTypes TestCase;
    public static SuiteEntryTypes Suite;
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.SuiteEntryUpdateParams : object {
    [CompilerGeneratedAttribute]
private int <SequenceNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private SuiteEntryTypes <SuiteEntryType>k__BackingField;
    [DataMemberAttribute]
public int SequenceNumber { get; public set; }
    [DataMemberAttribute]
public int Id { get; public set; }
    [DataMemberAttribute]
public SuiteEntryTypes SuiteEntryType { get; public set; }
    [CompilerGeneratedAttribute]
public int get_SequenceNumber();
    [CompilerGeneratedAttribute]
public void set_SequenceNumber(int value);
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [CompilerGeneratedAttribute]
public SuiteEntryTypes get_SuiteEntryType();
    [CompilerGeneratedAttribute]
public void set_SuiteEntryType(SuiteEntryTypes value);
}
[FlagsAttribute]
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.SuiteExpand : Enum {
    public int value__;
    public static SuiteExpand None;
    public static SuiteExpand Children;
    public static SuiteExpand DefaultTesters;
}
public class Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.SuiteTestCaseCreateUpdateParameters : object {
    [CompilerGeneratedAttribute]
private WorkItem <workItem>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Configuration> <PointAssignments>k__BackingField;
    public WorkItem workItem { get; public set; }
    public List`1<Configuration> PointAssignments { get; public set; }
    [CompilerGeneratedAttribute]
public WorkItem get_workItem();
    [CompilerGeneratedAttribute]
public void set_workItem(WorkItem value);
    [CompilerGeneratedAttribute]
public List`1<Configuration> get_PointAssignments();
    [CompilerGeneratedAttribute]
public void set_PointAssignments(List`1<Configuration> value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.TestCase : object {
    [CompilerGeneratedAttribute]
private TestPlanReference <TestPlan>k__BackingField;
    [CompilerGeneratedAttribute]
private TeamProjectReference <Project>k__BackingField;
    [CompilerGeneratedAttribute]
private TestSuiteReference <TestSuite>k__BackingField;
    [CompilerGeneratedAttribute]
private WorkItemDetails <workItem>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Order>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<PointAssignment> <PointAssignments>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceLinks <links>k__BackingField;
    [DataMemberAttribute]
public TestPlanReference TestPlan { get; public set; }
    [DataMemberAttribute]
public TeamProjectReference Project { get; public set; }
    [DataMemberAttribute]
public TestSuiteReference TestSuite { get; public set; }
    [DataMemberAttribute]
public WorkItemDetails workItem { get; public set; }
    [DataMemberAttribute]
public int Order { get; public set; }
    [DataMemberAttribute]
public List`1<PointAssignment> PointAssignments { get; public set; }
    [DataMemberAttribute]
public ReferenceLinks links { get; public set; }
    [CompilerGeneratedAttribute]
public TestPlanReference get_TestPlan();
    [CompilerGeneratedAttribute]
public void set_TestPlan(TestPlanReference value);
    [CompilerGeneratedAttribute]
public TeamProjectReference get_Project();
    [CompilerGeneratedAttribute]
public void set_Project(TeamProjectReference value);
    [CompilerGeneratedAttribute]
public TestSuiteReference get_TestSuite();
    [CompilerGeneratedAttribute]
public void set_TestSuite(TestSuiteReference value);
    [CompilerGeneratedAttribute]
public WorkItemDetails get_workItem();
    [CompilerGeneratedAttribute]
public void set_workItem(WorkItemDetails value);
    [CompilerGeneratedAttribute]
public int get_Order();
    [CompilerGeneratedAttribute]
public void set_Order(int value);
    [CompilerGeneratedAttribute]
public List`1<PointAssignment> get_PointAssignments();
    [CompilerGeneratedAttribute]
public void set_PointAssignments(List`1<PointAssignment> value);
    [CompilerGeneratedAttribute]
public ReferenceLinks get_links();
    [CompilerGeneratedAttribute]
public void set_links(ReferenceLinks value);
}
[DataContractAttribute]
[ClientIncludeModelAttribute]
public class Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.TestCaseAssociatedResult : object {
    [CompilerGeneratedAttribute]
private int <RunId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ResultId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <PointId>k__BackingField;
    [CompilerGeneratedAttribute]
private TestConfigurationReference <Configuration>k__BackingField;
    [CompilerGeneratedAttribute]
private TestPlanReference <Plan>k__BackingField;
    [CompilerGeneratedAttribute]
private TestSuiteReference <Suite>k__BackingField;
    [CompilerGeneratedAttribute]
private IdentityRef <RunBy>k__BackingField;
    [CompilerGeneratedAttribute]
private IdentityRef <Tester>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <CompletedDate>k__BackingField;
    [CompilerGeneratedAttribute]
private UserFriendlyTestOutcome <Outcome>k__BackingField;
    [DataMemberAttribute]
public int RunId { get; public set; }
    [DataMemberAttribute]
public int ResultId { get; public set; }
    [DataMemberAttribute]
public int PointId { get; public set; }
    [DataMemberAttribute]
public TestConfigurationReference Configuration { get; public set; }
    [DataMemberAttribute]
public TestPlanReference Plan { get; public set; }
    [DataMemberAttribute]
public TestSuiteReference Suite { get; public set; }
    [DataMemberAttribute]
public IdentityRef RunBy { get; public set; }
    [DataMemberAttribute]
public IdentityRef Tester { get; public set; }
    [DataMemberAttribute]
public DateTime CompletedDate { get; public set; }
    [DataMemberAttribute]
public UserFriendlyTestOutcome Outcome { get; public set; }
    [CompilerGeneratedAttribute]
public int get_RunId();
    [CompilerGeneratedAttribute]
public void set_RunId(int value);
    [CompilerGeneratedAttribute]
public int get_ResultId();
    [CompilerGeneratedAttribute]
public void set_ResultId(int value);
    [CompilerGeneratedAttribute]
public int get_PointId();
    [CompilerGeneratedAttribute]
public void set_PointId(int value);
    [CompilerGeneratedAttribute]
public TestConfigurationReference get_Configuration();
    [CompilerGeneratedAttribute]
public void set_Configuration(TestConfigurationReference value);
    [CompilerGeneratedAttribute]
public TestPlanReference get_Plan();
    [CompilerGeneratedAttribute]
public void set_Plan(TestPlanReference value);
    [CompilerGeneratedAttribute]
public TestSuiteReference get_Suite();
    [CompilerGeneratedAttribute]
public void set_Suite(TestSuiteReference value);
    [CompilerGeneratedAttribute]
public IdentityRef get_RunBy();
    [CompilerGeneratedAttribute]
public void set_RunBy(IdentityRef value);
    [CompilerGeneratedAttribute]
public IdentityRef get_Tester();
    [CompilerGeneratedAttribute]
public void set_Tester(IdentityRef value);
    [CompilerGeneratedAttribute]
public DateTime get_CompletedDate();
    [CompilerGeneratedAttribute]
public void set_CompletedDate(DateTime value);
    [CompilerGeneratedAttribute]
public UserFriendlyTestOutcome get_Outcome();
    [CompilerGeneratedAttribute]
public void set_Outcome(UserFriendlyTestOutcome value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.TestCaseReference : object {
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private IdentityRef <AssignedTo>k__BackingField;
    [CompilerGeneratedAttribute]
private string <State>k__BackingField;
    [DataMemberAttribute]
public int Id { get; public set; }
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public IdentityRef AssignedTo { get; public set; }
    [DataMemberAttribute]
public string State { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public IdentityRef get_AssignedTo();
    [CompilerGeneratedAttribute]
public void set_AssignedTo(IdentityRef value);
    [CompilerGeneratedAttribute]
public string get_State();
    [CompilerGeneratedAttribute]
public void set_State(string value);
}
[DataContractAttribute]
[ClientIncludeModelAttribute]
public class Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.TestCaseResultsData : object {
    [CompilerGeneratedAttribute]
private IList`1<TestCaseAssociatedResult> <Results>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TestCaseName>k__BackingField;
    [CompilerGeneratedAttribute]
private TestPointDetailedReference <ContextPoint>k__BackingField;
    [DataMemberAttribute]
public IList`1<TestCaseAssociatedResult> Results { get; public set; }
    [DataMemberAttribute]
public string TestCaseName { get; public set; }
    [DataMemberAttribute]
public TestPointDetailedReference ContextPoint { get; public set; }
    [CompilerGeneratedAttribute]
public IList`1<TestCaseAssociatedResult> get_Results();
    [CompilerGeneratedAttribute]
public void set_Results(IList`1<TestCaseAssociatedResult> value);
    [CompilerGeneratedAttribute]
public string get_TestCaseName();
    [CompilerGeneratedAttribute]
public void set_TestCaseName(string value);
    [CompilerGeneratedAttribute]
public TestPointDetailedReference get_ContextPoint();
    [CompilerGeneratedAttribute]
public void set_ContextPoint(TestPointDetailedReference value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.TestConfiguration : TestConfigurationCreateUpdateParameters {
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private TeamProjectReference <Project>k__BackingField;
    [DataMemberAttribute]
public int Id { get; public set; }
    [DataMemberAttribute]
public TeamProjectReference Project { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [CompilerGeneratedAttribute]
public TeamProjectReference get_Project();
    [CompilerGeneratedAttribute]
public void set_Project(TeamProjectReference value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.TestConfigurationCreateUpdateParameters : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDefault>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<NameValuePair> <Values>k__BackingField;
    [CompilerGeneratedAttribute]
private TestConfigurationState <State>k__BackingField;
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public string Description { get; public set; }
    [DataMemberAttribute]
public bool IsDefault { get; public set; }
    [DataMemberAttribute]
public IList`1<NameValuePair> Values { get; public set; }
    [DataMemberAttribute]
public TestConfigurationState State { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public bool get_IsDefault();
    [CompilerGeneratedAttribute]
public void set_IsDefault(bool value);
    [CompilerGeneratedAttribute]
public IList`1<NameValuePair> get_Values();
    [CompilerGeneratedAttribute]
public void set_Values(IList`1<NameValuePair> value);
    [CompilerGeneratedAttribute]
public TestConfigurationState get_State();
    [CompilerGeneratedAttribute]
public void set_State(TestConfigurationState value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.TestConfigurationReference : object {
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [DataMemberAttribute]
public int Id { get; public set; }
    [DataMemberAttribute]
public string Name { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
}
public class Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.TestEntityCount : object {
    [CompilerGeneratedAttribute]
private int <Count>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TotalCount>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TestPlanId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TestSuiteId>k__BackingField;
    public int Count { get; public set; }
    public int TotalCount { get; public set; }
    public int TestPlanId { get; public set; }
    public int TestSuiteId { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Count();
    [CompilerGeneratedAttribute]
public void set_Count(int value);
    [CompilerGeneratedAttribute]
public int get_TotalCount();
    [CompilerGeneratedAttribute]
public void set_TotalCount(int value);
    [CompilerGeneratedAttribute]
public int get_TestPlanId();
    [CompilerGeneratedAttribute]
public void set_TestPlanId(int value);
    [CompilerGeneratedAttribute]
public int get_TestSuiteId();
    [CompilerGeneratedAttribute]
public void set_TestSuiteId(int value);
}
public enum Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.TestEntityTypes : Enum {
    public int value__;
    public static TestEntityTypes TestCase;
    public static TestEntityTypes TestPoint;
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.TestPlan : TestPlanUpdateParams {
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private TeamProjectReference <Project>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <UpdatedDate>k__BackingField;
    [CompilerGeneratedAttribute]
private IdentityRef <UpdatedBy>k__BackingField;
    [CompilerGeneratedAttribute]
private int <PreviousBuildId>k__BackingField;
    [CompilerGeneratedAttribute]
private TestSuiteReference <RootSuite>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceLinks <Links>k__BackingField;
    [DataMemberAttribute]
public int Id { get; public set; }
    [DataMemberAttribute]
public TeamProjectReference Project { get; public set; }
    [DataMemberAttribute]
public DateTime UpdatedDate { get; public set; }
    [DataMemberAttribute]
public IdentityRef UpdatedBy { get; public set; }
    [DataMemberAttribute]
public int PreviousBuildId { get; public set; }
    [DataMemberAttribute]
public TestSuiteReference RootSuite { get; public set; }
    [DataMemberAttribute]
public ReferenceLinks Links { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [CompilerGeneratedAttribute]
public TeamProjectReference get_Project();
    [CompilerGeneratedAttribute]
public void set_Project(TeamProjectReference value);
    [CompilerGeneratedAttribute]
public DateTime get_UpdatedDate();
    [CompilerGeneratedAttribute]
public void set_UpdatedDate(DateTime value);
    [CompilerGeneratedAttribute]
public IdentityRef get_UpdatedBy();
    [CompilerGeneratedAttribute]
public void set_UpdatedBy(IdentityRef value);
    [CompilerGeneratedAttribute]
public int get_PreviousBuildId();
    [CompilerGeneratedAttribute]
public void set_PreviousBuildId(int value);
    [CompilerGeneratedAttribute]
public TestSuiteReference get_RootSuite();
    [CompilerGeneratedAttribute]
public void set_RootSuite(TestSuiteReference value);
    [CompilerGeneratedAttribute]
public ReferenceLinks get_Links();
    [CompilerGeneratedAttribute]
public void set_Links(ReferenceLinks value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.TestPlanAndSuiteRestoreModel : object {
    [CompilerGeneratedAttribute]
private bool <IsDeleted>k__BackingField;
    [DataMemberAttribute]
public bool IsDeleted { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_IsDeleted();
    [CompilerGeneratedAttribute]
public void set_IsDeleted(bool value);
}
public static class Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.TestPlanConstants : object {
    public static string RestoreTestPlanFeatureFlag;
    public static string RestoreTestSuiteFeatureFlag;
    public static string GetDeletedTestPlans;
    public static string PayloadCannotBeEmptyExceptionString;
    public static string TestPlanRestoredSuccessfulMessage;
    public static string TestSuiteRestoredSuccessfulMessage;
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.TestPlanCreateParams : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AreaPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <StartDate>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <EndDate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Iteration>k__BackingField;
    [CompilerGeneratedAttribute]
private IdentityRef <Owner>k__BackingField;
    [CompilerGeneratedAttribute]
private string <State>k__BackingField;
    [CompilerGeneratedAttribute]
private int <BuildId>k__BackingField;
    [CompilerGeneratedAttribute]
private BuildDefinitionReference <BuildDefinition>k__BackingField;
    [CompilerGeneratedAttribute]
private ReleaseEnvironmentDefinitionReference <ReleaseEnvironmentDefinition>k__BackingField;
    [CompilerGeneratedAttribute]
private int <YamlBuildDefinitionId>k__BackingField;
    [CompilerGeneratedAttribute]
private TestOutcomeSettings <TestOutcomeSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private TestEnvironment <AutomatedTestEnvironment>k__BackingField;
    [CompilerGeneratedAttribute]
private TestEnvironment <ManualTestEnvironment>k__BackingField;
    [CompilerGeneratedAttribute]
private TestSettings <ManualTestSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private TestSettings <AutomatedTestSettings>k__BackingField;
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public string AreaPath { get; public set; }
    [DataMemberAttribute]
public string Description { get; public set; }
    [DataMemberAttribute]
public Nullable`1<DateTime> StartDate { get; public set; }
    [DataMemberAttribute]
public Nullable`1<DateTime> EndDate { get; public set; }
    [DataMemberAttribute]
public string Iteration { get; public set; }
    [DataMemberAttribute]
public IdentityRef Owner { get; public set; }
    [DataMemberAttribute]
public string State { get; public set; }
    [DataMemberAttribute]
public int BuildId { get; public set; }
    [DataMemberAttribute]
public BuildDefinitionReference BuildDefinition { get; public set; }
    [DataMemberAttribute]
public ReleaseEnvironmentDefinitionReference ReleaseEnvironmentDefinition { get; public set; }
    [DataMemberAttribute]
public int YamlBuildDefinitionId { get; public set; }
    [DataMemberAttribute]
public TestOutcomeSettings TestOutcomeSettings { get; public set; }
    [ClientInternalUseOnlyAttribute("False")]
[DataMemberAttribute]
public TestEnvironment AutomatedTestEnvironment { get; public set; }
    [ClientInternalUseOnlyAttribute("False")]
[DataMemberAttribute]
public TestEnvironment ManualTestEnvironment { get; public set; }
    [ClientInternalUseOnlyAttribute("False")]
[DataMemberAttribute]
public TestSettings ManualTestSettings { get; public set; }
    [ClientInternalUseOnlyAttribute("False")]
[DataMemberAttribute]
public TestSettings AutomatedTestSettings { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_AreaPath();
    [CompilerGeneratedAttribute]
public void set_AreaPath(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_StartDate();
    [CompilerGeneratedAttribute]
public void set_StartDate(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_EndDate();
    [CompilerGeneratedAttribute]
public void set_EndDate(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public string get_Iteration();
    [CompilerGeneratedAttribute]
public void set_Iteration(string value);
    [CompilerGeneratedAttribute]
public IdentityRef get_Owner();
    [CompilerGeneratedAttribute]
public void set_Owner(IdentityRef value);
    [CompilerGeneratedAttribute]
public string get_State();
    [CompilerGeneratedAttribute]
public void set_State(string value);
    [CompilerGeneratedAttribute]
public int get_BuildId();
    [CompilerGeneratedAttribute]
public void set_BuildId(int value);
    [CompilerGeneratedAttribute]
public BuildDefinitionReference get_BuildDefinition();
    [CompilerGeneratedAttribute]
public void set_BuildDefinition(BuildDefinitionReference value);
    [CompilerGeneratedAttribute]
public ReleaseEnvironmentDefinitionReference get_ReleaseEnvironmentDefinition();
    [CompilerGeneratedAttribute]
public void set_ReleaseEnvironmentDefinition(ReleaseEnvironmentDefinitionReference value);
    [CompilerGeneratedAttribute]
public int get_YamlBuildDefinitionId();
    [CompilerGeneratedAttribute]
public void set_YamlBuildDefinitionId(int value);
    [CompilerGeneratedAttribute]
public TestOutcomeSettings get_TestOutcomeSettings();
    [CompilerGeneratedAttribute]
public void set_TestOutcomeSettings(TestOutcomeSettings value);
    [CompilerGeneratedAttribute]
public TestEnvironment get_AutomatedTestEnvironment();
    [CompilerGeneratedAttribute]
public void set_AutomatedTestEnvironment(TestEnvironment value);
    [CompilerGeneratedAttribute]
public TestEnvironment get_ManualTestEnvironment();
    [CompilerGeneratedAttribute]
public void set_ManualTestEnvironment(TestEnvironment value);
    [CompilerGeneratedAttribute]
public TestSettings get_ManualTestSettings();
    [CompilerGeneratedAttribute]
public void set_ManualTestSettings(TestSettings value);
    [CompilerGeneratedAttribute]
public TestSettings get_AutomatedTestSettings();
    [CompilerGeneratedAttribute]
public void set_AutomatedTestSettings(TestSettings value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.TestPlanDetailedReference : TestPlanReference {
    [CompilerGeneratedAttribute]
private string <AreaPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Iteration>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <StartDate>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <EndDate>k__BackingField;
    [CompilerGeneratedAttribute]
private int <RootSuiteId>k__BackingField;
    [DataMemberAttribute]
public string AreaPath { get; public set; }
    [DataMemberAttribute]
public string Iteration { get; public set; }
    [DataMemberAttribute]
public Nullable`1<DateTime> StartDate { get; public set; }
    [DataMemberAttribute]
public Nullable`1<DateTime> EndDate { get; public set; }
    [DataMemberAttribute]
public int RootSuiteId { get; public set; }
    [CompilerGeneratedAttribute]
public string get_AreaPath();
    [CompilerGeneratedAttribute]
public void set_AreaPath(string value);
    [CompilerGeneratedAttribute]
public string get_Iteration();
    [CompilerGeneratedAttribute]
public void set_Iteration(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_StartDate();
    [CompilerGeneratedAttribute]
public void set_StartDate(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_EndDate();
    [CompilerGeneratedAttribute]
public void set_EndDate(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public int get_RootSuiteId();
    [CompilerGeneratedAttribute]
public void set_RootSuiteId(int value);
}
[ResourceAreaAttribute("E4C27205-9D23-4C98-B958-D798BC3F9CD4")]
public class Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.TestPlanHttpClient : TestPlanHttpClientBase {
    private static Dictionary`2<string, Type> s_translatedExceptions;
    protected IDictionary`2<string, Type> TranslatedExceptions { get; }
    public TestPlanHttpClient(Uri baseUrl, VssCredentials credentials);
    public TestPlanHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public TestPlanHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public TestPlanHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public TestPlanHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    private static TestPlanHttpClient();
    public virtual Task`1<PagedList`1<TestConfiguration>> GetTestConfigurationsWithContinuationTokenAsync(string project, string continuationToken, object userState, CancellationToken cancellationToken);
    public virtual Task`1<PagedList`1<TestConfiguration>> GetTestConfigurationsWithContinuationTokenAsync(Guid project, string continuationToken, object userState, CancellationToken cancellationToken);
    public virtual Task`1<PagedList`1<TestPlan>> GetTestPlansWithContinuationTokenAsync(string project, string owner, string continuationToken, Nullable`1<bool> includePlanDetails, Nullable`1<bool> filterActivePlans, object userState, CancellationToken cancellationToken);
    public virtual Task`1<PagedList`1<TestPlan>> GetTestPlansWithContinuationTokenAsync(Guid project, string owner, string continuationToken, Nullable`1<bool> includePlanDetails, Nullable`1<bool> filterActivePlans, object userState, CancellationToken cancellationToken);
    public virtual Task`1<PagedList`1<TestSuite>> GetTestSuitesForPlanWithContinuationTokenAsync(string project, int planId, Nullable`1<SuiteExpand> expand, string continuationToken, Nullable`1<bool> asTreeView, object userState, CancellationToken cancellationToken);
    public virtual Task`1<PagedList`1<TestSuite>> GetTestSuitesForPlanWithContinuationTokenAsync(Guid project, int planId, Nullable`1<SuiteExpand> expand, string continuationToken, Nullable`1<bool> asTreeView, object userState, CancellationToken cancellationToken);
    public virtual Task`1<PagedList`1<TestCase>> GetTestCaseListWithContinuationTokenAsync(string project, int planId, int suiteId, string testIds, string configurationIds, string witFields, string continuationToken, object userState, CancellationToken cancellationToken);
    public virtual Task`1<PagedList`1<TestCase>> GetTestCaseListWithContinuationTokenAsync(Guid project, int planId, int suiteId, string testIds, string configurationIds, string witFields, string continuationToken, object userState, CancellationToken cancellationToken);
    public virtual Task`1<PagedList`1<TestPoint>> GetPointsListWithContinuationTokenAsync(string project, int planId, int suiteId, string testPointIds, string testCaseId, string continuationToken, object userState, Nullable`1<bool> includePointDetails, CancellationToken cancellationToken);
    public virtual Task`1<PagedList`1<TestPoint>> GetPointsListWithContinuationTokenAsync(Guid project, int planId, int suiteId, string testPointIds, string testCaseId, string continuationToken, object userState, Nullable`1<bool> includePointDetails, CancellationToken cancellationToken);
    public virtual Task`1<PagedList`1<TestVariable>> GetTestVariablesWithContinuationTokenAsync(string project, string continuationToken, object userState, CancellationToken cancellationToken);
    public virtual Task`1<PagedList`1<TestVariable>> GetTestVariablesWithContinuationTokenAsync(Guid project, string continuationToken, object userState, CancellationToken cancellationToken);
    protected Task`1<T> SendAsync(HttpMethod method, Guid locationId, object routeValues, ApiResourceVersion version, HttpContent content, IEnumerable`1<KeyValuePair`2<string, string>> queryParameters, object userState, CancellationToken cancellationToken, Func`3<HttpResponseMessage, CancellationToken, Task`1<T>> processResponse);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.TestPlanHttpClient/<SendAsync>d__19`1")]
protected Task`1<T> SendAsync(HttpMethod method, IEnumerable`1<KeyValuePair`2<string, string>> additionalHeaders, Guid locationId, object routeValues, ApiResourceVersion version, HttpContent content, IEnumerable`1<KeyValuePair`2<string, string>> queryParameters, object userState, CancellationToken cancellationToken, Func`3<HttpResponseMessage, CancellationToken, Task`1<T>> processResponse);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.TestPlanHttpClient/<SendAsync>d__20`1")]
protected Task`1<T> SendAsync(HttpRequestMessage message, object userState, CancellationToken cancellationToken, Func`3<HttpResponseMessage, CancellationToken, Task`1<T>> processResponse);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.TestPlanHttpClient/<GetPagedList>d__21`1")]
protected Task`1<PagedList`1<T>> GetPagedList(HttpResponseMessage responseMessage, CancellationToken cancellationToken);
    protected string GetContinuationToken(HttpResponseMessage responseMessage);
    protected virtual IDictionary`2<string, Type> get_TranslatedExceptions();
}
[ResourceAreaAttribute("E4C27205-9D23-4C98-B958-D798BC3F9CD4")]
public abstract class Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.TestPlanHttpClientBase : VssHttpClientBase {
    public TestPlanHttpClientBase(Uri baseUrl, VssCredentials credentials);
    public TestPlanHttpClientBase(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public TestPlanHttpClientBase(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public TestPlanHttpClientBase(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public TestPlanHttpClientBase(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    public virtual Task`1<TestConfiguration> CreateTestConfigurationAsync(TestConfigurationCreateUpdateParameters testConfigurationCreateUpdateParameters, string project, object userState, CancellationToken cancellationToken);
    public virtual Task`1<TestConfiguration> CreateTestConfigurationAsync(TestConfigurationCreateUpdateParameters testConfigurationCreateUpdateParameters, Guid project, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.TestPlanHttpClientBase/<DeleteTestConfgurationAsync>d__7")]
public virtual Task DeleteTestConfgurationAsync(string project, int testConfiguartionId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.TestPlanHttpClientBase/<DeleteTestConfgurationAsync>d__8")]
public virtual Task DeleteTestConfgurationAsync(Guid project, int testConfiguartionId, object userState, CancellationToken cancellationToken);
    public virtual Task`1<TestConfiguration> GetTestConfigurationByIdAsync(string project, int testConfigurationId, object userState, CancellationToken cancellationToken);
    public virtual Task`1<TestConfiguration> GetTestConfigurationByIdAsync(Guid project, int testConfigurationId, object userState, CancellationToken cancellationToken);
    public virtual Task`1<PagedList`1<TestConfiguration>> GetTestConfigurationsAsync(string project, string continuationToken, object userState, CancellationToken cancellationToken);
    public virtual Task`1<PagedList`1<TestConfiguration>> GetTestConfigurationsAsync(Guid project, string continuationToken, object userState, CancellationToken cancellationToken);
    public virtual Task`1<TestConfiguration> UpdateTestConfigurationAsync(TestConfigurationCreateUpdateParameters testConfigurationCreateUpdateParameters, string project, int testConfiguartionId, object userState, CancellationToken cancellationToken);
    public virtual Task`1<TestConfiguration> UpdateTestConfigurationAsync(TestConfigurationCreateUpdateParameters testConfigurationCreateUpdateParameters, Guid project, int testConfiguartionId, object userState, CancellationToken cancellationToken);
    [EditorBrowsableAttribute("1")]
public virtual Task`1<List`1<TestEntityCount>> GetTestEntityCountByPlanIdAsync(string project, int planId, string states, Nullable`1<UserFriendlyTestOutcome> outcome, string configurations, string testers, string assignedTo, Nullable`1<TestEntityTypes> entity, object userState, CancellationToken cancellationToken);
    [EditorBrowsableAttribute("1")]
public virtual Task`1<List`1<TestEntityCount>> GetTestEntityCountByPlanIdAsync(Guid project, int planId, string states, Nullable`1<UserFriendlyTestOutcome> outcome, string configurations, string testers, string assignedTo, Nullable`1<TestEntityTypes> entity, object userState, CancellationToken cancellationToken);
    public virtual Task`1<TestPlan> CreateTestPlanAsync(TestPlanCreateParams testPlanCreateParams, string project, object userState, CancellationToken cancellationToken);
    public virtual Task`1<TestPlan> CreateTestPlanAsync(TestPlanCreateParams testPlanCreateParams, Guid project, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.TestPlanHttpClientBase/<DeleteTestPlanAsync>d__19")]
public virtual Task DeleteTestPlanAsync(string project, int planId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.TestPlanHttpClientBase/<DeleteTestPlanAsync>d__20")]
public virtual Task DeleteTestPlanAsync(Guid project, int planId, object userState, CancellationToken cancellationToken);
    public virtual Task`1<TestPlan> GetTestPlanByIdAsync(string project, int planId, object userState, CancellationToken cancellationToken);
    public virtual Task`1<TestPlan> GetTestPlanByIdAsync(Guid project, int planId, object userState, CancellationToken cancellationToken);
    public virtual Task`1<PagedList`1<TestPlan>> GetTestPlansAsync(string project, string owner, string continuationToken, Nullable`1<bool> includePlanDetails, Nullable`1<bool> filterActivePlans, object userState, CancellationToken cancellationToken);
    public virtual Task`1<PagedList`1<TestPlan>> GetTestPlansAsync(Guid project, string owner, string continuationToken, Nullable`1<bool> includePlanDetails, Nullable`1<bool> filterActivePlans, object userState, CancellationToken cancellationToken);
    public virtual Task`1<TestPlan> UpdateTestPlanAsync(TestPlanUpdateParams testPlanUpdateParams, string project, int planId, object userState, CancellationToken cancellationToken);
    public virtual Task`1<TestPlan> UpdateTestPlanAsync(TestPlanUpdateParams testPlanUpdateParams, Guid project, int planId, object userState, CancellationToken cancellationToken);
    public virtual Task`1<List`1<SuiteEntry>> GetSuiteEntriesAsync(string project, int suiteId, Nullable`1<SuiteEntryTypes> suiteEntryType, object userState, CancellationToken cancellationToken);
    public virtual Task`1<List`1<SuiteEntry>> GetSuiteEntriesAsync(Guid project, int suiteId, Nullable`1<SuiteEntryTypes> suiteEntryType, object userState, CancellationToken cancellationToken);
    public virtual Task`1<List`1<SuiteEntry>> ReorderSuiteEntriesAsync(IEnumerable`1<SuiteEntryUpdateParams> suiteEntries, string project, int suiteId, object userState, CancellationToken cancellationToken);
    public virtual Task`1<List`1<SuiteEntry>> ReorderSuiteEntriesAsync(IEnumerable`1<SuiteEntryUpdateParams> suiteEntries, Guid project, int suiteId, object userState, CancellationToken cancellationToken);
    [EditorBrowsableAttribute("1")]
public virtual Task`1<List`1<TestSuite>> CreateBulkTestSuitesAsync(TestSuiteCreateParams[] testSuiteCreateParams, string project, int planId, int parentSuiteId, object userState, CancellationToken cancellationToken);
    [EditorBrowsableAttribute("1")]
public virtual Task`1<List`1<TestSuite>> CreateBulkTestSuitesAsync(TestSuiteCreateParams[] testSuiteCreateParams, Guid project, int planId, int parentSuiteId, object userState, CancellationToken cancellationToken);
    public virtual Task`1<TestSuite> CreateTestSuiteAsync(TestSuiteCreateParams testSuiteCreateParams, string project, int planId, object userState, CancellationToken cancellationToken);
    public virtual Task`1<TestSuite> CreateTestSuiteAsync(TestSuiteCreateParams testSuiteCreateParams, Guid project, int planId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.TestPlanHttpClientBase/<DeleteTestSuiteAsync>d__35")]
public virtual Task DeleteTestSuiteAsync(string project, int planId, int suiteId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.TestPlanHttpClientBase/<DeleteTestSuiteAsync>d__36")]
public virtual Task DeleteTestSuiteAsync(Guid project, int planId, int suiteId, object userState, CancellationToken cancellationToken);
    public virtual Task`1<TestSuite> GetTestSuiteByIdAsync(string project, int planId, int suiteId, Nullable`1<SuiteExpand> expand, object userState, CancellationToken cancellationToken);
    public virtual Task`1<TestSuite> GetTestSuiteByIdAsync(Guid project, int planId, int suiteId, Nullable`1<SuiteExpand> expand, object userState, CancellationToken cancellationToken);
    public virtual Task`1<PagedList`1<TestSuite>> GetTestSuitesForPlanAsync(string project, int planId, Nullable`1<SuiteExpand> expand, string continuationToken, Nullable`1<bool> asTreeView, object userState, CancellationToken cancellationToken);
    public virtual Task`1<PagedList`1<TestSuite>> GetTestSuitesForPlanAsync(Guid project, int planId, Nullable`1<SuiteExpand> expand, string continuationToken, Nullable`1<bool> asTreeView, object userState, CancellationToken cancellationToken);
    public virtual Task`1<TestSuite> UpdateTestSuiteAsync(TestSuiteUpdateParams testSuiteUpdateParams, string project, int planId, int suiteId, object userState, CancellationToken cancellationToken);
    public virtual Task`1<TestSuite> UpdateTestSuiteAsync(TestSuiteUpdateParams testSuiteUpdateParams, Guid project, int planId, int suiteId, object userState, CancellationToken cancellationToken);
    public virtual Task`1<List`1<TestSuite>> GetSuitesByTestCaseIdAsync(int testCaseId, object userState, CancellationToken cancellationToken);
    public virtual Task`1<List`1<TestCase>> AddTestCasesToSuiteAsync(IEnumerable`1<SuiteTestCaseCreateUpdateParameters> suiteTestCaseCreateUpdateParameters, string project, int planId, int suiteId, object userState, CancellationToken cancellationToken);
    public virtual Task`1<List`1<TestCase>> AddTestCasesToSuiteAsync(IEnumerable`1<SuiteTestCaseCreateUpdateParameters> suiteTestCaseCreateUpdateParameters, Guid project, int planId, int suiteId, object userState, CancellationToken cancellationToken);
    public virtual Task`1<List`1<TestCase>> GetTestCaseAsync(string project, int planId, int suiteId, string testCaseId, string witFields, Nullable`1<bool> returnIdentityRef, object userState, CancellationToken cancellationToken);
    public virtual Task`1<List`1<TestCase>> GetTestCaseAsync(Guid project, int planId, int suiteId, string testCaseId, string witFields, Nullable`1<bool> returnIdentityRef, object userState, CancellationToken cancellationToken);
    public virtual Task`1<PagedList`1<TestCase>> GetTestCaseListAsync(string project, int planId, int suiteId, string testIds, string configurationIds, string witFields, string continuationToken, Nullable`1<bool> returnIdentityRef, Nullable`1<bool> expand, Nullable`1<ExcludeFlags> excludeFlags, Nullable`1<bool> isRecursive, object userState, CancellationToken cancellationToken);
    public virtual Task`1<PagedList`1<TestCase>> GetTestCaseListAsync(Guid project, int planId, int suiteId, string testIds, string configurationIds, string witFields, string continuationToken, Nullable`1<bool> returnIdentityRef, Nullable`1<bool> expand, Nullable`1<ExcludeFlags> excludeFlags, Nullable`1<bool> isRecursive, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.TestPlanHttpClientBase/<RemoveTestCasesFromSuiteAsync>d__50")]
public virtual Task RemoveTestCasesFromSuiteAsync(string project, int planId, int suiteId, string testCaseIds, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.TestPlanHttpClientBase/<RemoveTestCasesFromSuiteAsync>d__51")]
public virtual Task RemoveTestCasesFromSuiteAsync(Guid project, int planId, int suiteId, string testCaseIds, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.TestPlanHttpClientBase/<RemoveTestCasesListFromSuiteAsync>d__52")]
public virtual Task RemoveTestCasesListFromSuiteAsync(string project, int planId, int suiteId, string testIds, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.TestPlanHttpClientBase/<RemoveTestCasesListFromSuiteAsync>d__53")]
public virtual Task RemoveTestCasesListFromSuiteAsync(Guid project, int planId, int suiteId, string testIds, object userState, CancellationToken cancellationToken);
    public virtual Task`1<List`1<TestCase>> UpdateSuiteTestCasesAsync(IEnumerable`1<SuiteTestCaseCreateUpdateParameters> suiteTestCaseCreateUpdateParameters, string project, int planId, int suiteId, object userState, CancellationToken cancellationToken);
    public virtual Task`1<List`1<TestCase>> UpdateSuiteTestCasesAsync(IEnumerable`1<SuiteTestCaseCreateUpdateParameters> suiteTestCaseCreateUpdateParameters, Guid project, int planId, int suiteId, object userState, CancellationToken cancellationToken);
    public virtual Task`1<CloneTestCaseOperationInformation> CloneTestCaseAsync(CloneTestCaseParams cloneRequestBody, string project, object userState, CancellationToken cancellationToken);
    public virtual Task`1<CloneTestCaseOperationInformation> CloneTestCaseAsync(CloneTestCaseParams cloneRequestBody, Guid project, object userState, CancellationToken cancellationToken);
    public virtual Task`1<CloneTestCaseOperationInformation> GetTestCaseCloneInformationAsync(string project, int cloneOperationId, object userState, CancellationToken cancellationToken);
    public virtual Task`1<CloneTestCaseOperationInformation> GetTestCaseCloneInformationAsync(Guid project, int cloneOperationId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.TestPlanHttpClientBase/<ExportTestCasesAsync>d__60")]
[EditorBrowsableAttribute("1")]
public virtual Task`1<Stream> ExportTestCasesAsync(ExportTestCaseParams exportTestCaseRequestBody, string project, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.TestPlanHttpClientBase/<ExportTestCasesAsync>d__61")]
[EditorBrowsableAttribute("1")]
public virtual Task`1<Stream> ExportTestCasesAsync(ExportTestCaseParams exportTestCaseRequestBody, Guid project, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.TestPlanHttpClientBase/<DeleteTestCaseAsync>d__62")]
public virtual Task DeleteTestCaseAsync(string project, int testCaseId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.TestPlanHttpClientBase/<DeleteTestCaseAsync>d__63")]
public virtual Task DeleteTestCaseAsync(Guid project, int testCaseId, object userState, CancellationToken cancellationToken);
    [EditorBrowsableAttribute("1")]
public virtual Task`1<PagedList`1<TestPlan>> GetDeletedTestPlansAsync(string project, string continuationToken, object userState, CancellationToken cancellationToken);
    [EditorBrowsableAttribute("1")]
public virtual Task`1<PagedList`1<TestPlan>> GetDeletedTestPlansAsync(Guid project, string continuationToken, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.TestPlanHttpClientBase/<RestoreDeletedTestPlanAsync>d__66")]
[EditorBrowsableAttribute("1")]
public virtual Task RestoreDeletedTestPlanAsync(TestPlanAndSuiteRestoreModel restoreModel, string project, int planId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.TestPlanHttpClientBase/<RestoreDeletedTestPlanAsync>d__67")]
[EditorBrowsableAttribute("1")]
public virtual Task RestoreDeletedTestPlanAsync(TestPlanAndSuiteRestoreModel restoreModel, Guid project, int planId, object userState, CancellationToken cancellationToken);
    public virtual Task`1<CloneTestPlanOperationInformation> CloneTestPlanAsync(CloneTestPlanParams cloneRequestBody, string project, Nullable`1<bool> deepClone, object userState, CancellationToken cancellationToken);
    public virtual Task`1<CloneTestPlanOperationInformation> CloneTestPlanAsync(CloneTestPlanParams cloneRequestBody, Guid project, Nullable`1<bool> deepClone, object userState, CancellationToken cancellationToken);
    public virtual Task`1<CloneTestPlanOperationInformation> GetCloneInformationAsync(string project, int cloneOperationId, object userState, CancellationToken cancellationToken);
    public virtual Task`1<CloneTestPlanOperationInformation> GetCloneInformationAsync(Guid project, int cloneOperationId, object userState, CancellationToken cancellationToken);
    public virtual Task`1<List`1<TestPoint>> GetPointsAsync(string project, int planId, int suiteId, string pointId, Nullable`1<bool> returnIdentityRef, Nullable`1<bool> includePointDetails, object userState, CancellationToken cancellationToken);
    public virtual Task`1<List`1<TestPoint>> GetPointsAsync(Guid project, int planId, int suiteId, string pointId, Nullable`1<bool> returnIdentityRef, Nullable`1<bool> includePointDetails, object userState, CancellationToken cancellationToken);
    public virtual Task`1<PagedList`1<TestPoint>> GetPointsListAsync(string project, int planId, int suiteId, string testPointIds, string testCaseId, string continuationToken, Nullable`1<bool> returnIdentityRef, Nullable`1<bool> includePointDetails, Nullable`1<bool> isRecursive, object userState, CancellationToken cancellationToken);
    public virtual Task`1<PagedList`1<TestPoint>> GetPointsListAsync(Guid project, int planId, int suiteId, string testPointIds, string testCaseId, string continuationToken, Nullable`1<bool> returnIdentityRef, Nullable`1<bool> includePointDetails, Nullable`1<bool> isRecursive, object userState, CancellationToken cancellationToken);
    public virtual Task`1<List`1<TestPoint>> UpdateTestPointsAsync(IEnumerable`1<TestPointUpdateParams> testPointUpdateParams, string project, int planId, int suiteId, Nullable`1<bool> includePointDetails, Nullable`1<bool> returnIdentityRef, object userState, CancellationToken cancellationToken);
    public virtual Task`1<List`1<TestPoint>> UpdateTestPointsAsync(IEnumerable`1<TestPointUpdateParams> testPointUpdateParams, Guid project, int planId, int suiteId, Nullable`1<bool> includePointDetails, Nullable`1<bool> returnIdentityRef, object userState, CancellationToken cancellationToken);
    [EditorBrowsableAttribute("1")]
public virtual Task`1<PagedList`1<TestSuite>> GetDeletedTestSuitesForPlanAsync(string project, int planId, Nullable`1<SuiteExpand> expand, string continuationToken, Nullable`1<bool> asTreeView, object userState, CancellationToken cancellationToken);
    [EditorBrowsableAttribute("1")]
public virtual Task`1<PagedList`1<TestSuite>> GetDeletedTestSuitesForPlanAsync(Guid project, int planId, Nullable`1<SuiteExpand> expand, string continuationToken, Nullable`1<bool> asTreeView, object userState, CancellationToken cancellationToken);
    [EditorBrowsableAttribute("1")]
public virtual Task`1<PagedList`1<TestSuite>> GetDeletedTestSuitesForProjectAsync(string project, Nullable`1<SuiteExpand> expand, string continuationToken, Nullable`1<bool> asTreeView, object userState, CancellationToken cancellationToken);
    [EditorBrowsableAttribute("1")]
public virtual Task`1<PagedList`1<TestSuite>> GetDeletedTestSuitesForProjectAsync(Guid project, Nullable`1<SuiteExpand> expand, string continuationToken, Nullable`1<bool> asTreeView, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.TestPlanHttpClientBase/<RestoreDeletedTestSuiteAsync>d__82")]
[EditorBrowsableAttribute("1")]
public virtual Task RestoreDeletedTestSuiteAsync(TestPlanAndSuiteRestoreModel payload, string project, int suiteId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.TestPlanHttpClientBase/<RestoreDeletedTestSuiteAsync>d__83")]
[EditorBrowsableAttribute("1")]
public virtual Task RestoreDeletedTestSuiteAsync(TestPlanAndSuiteRestoreModel payload, Guid project, int suiteId, object userState, CancellationToken cancellationToken);
    public virtual Task`1<CloneTestSuiteOperationInformation> CloneTestSuiteAsync(CloneTestSuiteParams cloneRequestBody, string project, Nullable`1<bool> deepClone, object userState, CancellationToken cancellationToken);
    public virtual Task`1<CloneTestSuiteOperationInformation> CloneTestSuiteAsync(CloneTestSuiteParams cloneRequestBody, Guid project, Nullable`1<bool> deepClone, object userState, CancellationToken cancellationToken);
    public virtual Task`1<CloneTestSuiteOperationInformation> GetSuiteCloneInformationAsync(string project, int cloneOperationId, object userState, CancellationToken cancellationToken);
    public virtual Task`1<CloneTestSuiteOperationInformation> GetSuiteCloneInformationAsync(Guid project, int cloneOperationId, object userState, CancellationToken cancellationToken);
    public virtual Task`1<TestVariable> CreateTestVariableAsync(TestVariableCreateUpdateParameters testVariableCreateUpdateParameters, string project, object userState, CancellationToken cancellationToken);
    public virtual Task`1<TestVariable> CreateTestVariableAsync(TestVariableCreateUpdateParameters testVariableCreateUpdateParameters, Guid project, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.TestPlanHttpClientBase/<DeleteTestVariableAsync>d__90")]
public virtual Task DeleteTestVariableAsync(string project, int testVariableId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.TestPlanHttpClientBase/<DeleteTestVariableAsync>d__91")]
public virtual Task DeleteTestVariableAsync(Guid project, int testVariableId, object userState, CancellationToken cancellationToken);
    public virtual Task`1<TestVariable> GetTestVariableByIdAsync(string project, int testVariableId, object userState, CancellationToken cancellationToken);
    public virtual Task`1<TestVariable> GetTestVariableByIdAsync(Guid project, int testVariableId, object userState, CancellationToken cancellationToken);
    public virtual Task`1<PagedList`1<TestVariable>> GetTestVariablesAsync(string project, string continuationToken, object userState, CancellationToken cancellationToken);
    public virtual Task`1<PagedList`1<TestVariable>> GetTestVariablesAsync(Guid project, string continuationToken, object userState, CancellationToken cancellationToken);
    public virtual Task`1<TestVariable> UpdateTestVariableAsync(TestVariableCreateUpdateParameters testVariableCreateUpdateParameters, string project, int testVariableId, object userState, CancellationToken cancellationToken);
    public virtual Task`1<TestVariable> UpdateTestVariableAsync(TestVariableCreateUpdateParameters testVariableCreateUpdateParameters, Guid project, int testVariableId, object userState, CancellationToken cancellationToken);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.TestPlanReference : object {
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [DataMemberAttribute]
public int Id { get; public set; }
    [DataMemberAttribute]
public string Name { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
}
public static class Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.TestPlanResourceIds : object {
    public static string AreaId;
    public static string AreaName;
    public static string TestVariableResource;
    public static string TestVariableLocationIdString;
    public static Guid TestVariable;
    public static string TestConfigurationResource;
    public static string TestConfigurationLocationIdString;
    public static Guid TestConfiguration;
    public static string TestPlanResource;
    public static string TestPlanLocationIdString;
    public static Guid TestPlan;
    public static string TestCountResource;
    public static string TestCountLocationIdString;
    public static Guid TestCount;
    public static string TestSuiteResource;
    public static string TestSuiteProjectLocationIdString;
    public static Guid TestSuiteProject;
    public static string TestSuiteBulkLocationIdString;
    public static Guid TestSuiteBulk;
    public static string TestSuiteByCaseString;
    public static Guid TestSuiteByCase;
    public static string TestSuiteEntryResource;
    public static string TestSuiteEntryProjectLocationIdString;
    public static Guid TestSuiteEntryProject;
    public static string TestCaseResource;
    public static string TestCaseProjectLocationIdString;
    public static Guid TestCaseProject;
    public static string TestPlanCloneResource;
    public static string TestPlanCloneOperationLocationIdString;
    public static Guid TestPlanClone;
    public static string TestSuiteCloneResource;
    public static string TestSuiteCloneOperationLocationIdString;
    public static Guid TestSuiteClone;
    public static string TestCaseCloneResource;
    public static string TestCaseCloneOperationLocationIdString;
    public static Guid TestCaseClone;
    public static string TestPointResource;
    public static string TestPointLocationIdString;
    public static Guid TestPoint;
    public static string SuiteTestCaseResource;
    public static string SuiteTestCaseLocationIdString;
    public static Guid SuiteTestCase;
    public static string TestCaseExportResource;
    public static string TestCaseExportOperationLocationIdString;
    public static Guid TestCaseExport;
    public static string TestPlanRecycleBinResource;
    public static string TestPlanRecycleBinLocationIdString;
    public static Guid TestPlanRecycleBin;
    public static string TestSuiteRecycleBinResource;
    public static string TestSuiteRecycleBinLocationIdString;
    public static Guid TestSuiteRecycleBin;
    public static string TestPlanScopedTestSuiteRecycleBinLocationIdString;
    public static Guid TestPlanScopedTestSuiteRecycleBin;
    private static TestPlanResourceIds();
}
[DataContractAttribute]
[ClientIncludeModelAttribute]
public class Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.TestPlansHubRefreshData : object {
    [CompilerGeneratedAttribute]
private TestPlanDetailedReference <TestPlan>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<TestSuite> <TestSuites>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TestCasePageSize>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TestPointPageSize>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TestSuitesContinuationToken>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<TestCase> <TestCases>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TestCasesContinuationToken>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<TestPoint> <TestPoints>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TestPointsContinuationToken>k__BackingField;
    [CompilerGeneratedAttribute]
private int <SelectedSuiteId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsAdvancedExtensionEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <ExecuteColumnOptionFields>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <DefineColumnOptionFields>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <DefineTabCustomColumnFieldMap>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <ExecuteTabCustomColumnFieldMap>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SelectedPivotId>k__BackingField;
    [DataMemberAttribute]
public TestPlanDetailedReference TestPlan { get; public set; }
    [DataMemberAttribute]
public List`1<TestSuite> TestSuites { get; public set; }
    [DataMemberAttribute]
public int TestCasePageSize { get; public set; }
    [DataMemberAttribute]
public int TestPointPageSize { get; public set; }
    [DataMemberAttribute]
public string TestSuitesContinuationToken { get; public set; }
    [DataMemberAttribute]
public List`1<TestCase> TestCases { get; public set; }
    [DataMemberAttribute]
public string TestCasesContinuationToken { get; public set; }
    [DataMemberAttribute]
public List`1<TestPoint> TestPoints { get; public set; }
    [DataMemberAttribute]
public string TestPointsContinuationToken { get; public set; }
    [DataMemberAttribute]
public int SelectedSuiteId { get; public set; }
    [DataMemberAttribute]
public bool IsAdvancedExtensionEnabled { get; public set; }
    [DataMemberAttribute]
public String[] ExecuteColumnOptionFields { get; public set; }
    [DataMemberAttribute]
public String[] DefineColumnOptionFields { get; public set; }
    [DataMemberAttribute]
public Dictionary`2<string, string> DefineTabCustomColumnFieldMap { get; public set; }
    [DataMemberAttribute]
public Dictionary`2<string, string> ExecuteTabCustomColumnFieldMap { get; public set; }
    [DataMemberAttribute]
public string ErrorMessage { get; public set; }
    [DataMemberAttribute]
public string SelectedPivotId { get; public set; }
    [CompilerGeneratedAttribute]
public TestPlanDetailedReference get_TestPlan();
    [CompilerGeneratedAttribute]
public void set_TestPlan(TestPlanDetailedReference value);
    [CompilerGeneratedAttribute]
public List`1<TestSuite> get_TestSuites();
    [CompilerGeneratedAttribute]
public void set_TestSuites(List`1<TestSuite> value);
    [CompilerGeneratedAttribute]
public int get_TestCasePageSize();
    [CompilerGeneratedAttribute]
public void set_TestCasePageSize(int value);
    [CompilerGeneratedAttribute]
public int get_TestPointPageSize();
    [CompilerGeneratedAttribute]
public void set_TestPointPageSize(int value);
    [CompilerGeneratedAttribute]
public string get_TestSuitesContinuationToken();
    [CompilerGeneratedAttribute]
public void set_TestSuitesContinuationToken(string value);
    [CompilerGeneratedAttribute]
public List`1<TestCase> get_TestCases();
    [CompilerGeneratedAttribute]
public void set_TestCases(List`1<TestCase> value);
    [CompilerGeneratedAttribute]
public string get_TestCasesContinuationToken();
    [CompilerGeneratedAttribute]
public void set_TestCasesContinuationToken(string value);
    [CompilerGeneratedAttribute]
public List`1<TestPoint> get_TestPoints();
    [CompilerGeneratedAttribute]
public void set_TestPoints(List`1<TestPoint> value);
    [CompilerGeneratedAttribute]
public string get_TestPointsContinuationToken();
    [CompilerGeneratedAttribute]
public void set_TestPointsContinuationToken(string value);
    [CompilerGeneratedAttribute]
public int get_SelectedSuiteId();
    [CompilerGeneratedAttribute]
public void set_SelectedSuiteId(int value);
    [CompilerGeneratedAttribute]
public bool get_IsAdvancedExtensionEnabled();
    [CompilerGeneratedAttribute]
public void set_IsAdvancedExtensionEnabled(bool value);
    [CompilerGeneratedAttribute]
public String[] get_ExecuteColumnOptionFields();
    [CompilerGeneratedAttribute]
public void set_ExecuteColumnOptionFields(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_DefineColumnOptionFields();
    [CompilerGeneratedAttribute]
public void set_DefineColumnOptionFields(String[] value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_DefineTabCustomColumnFieldMap();
    [CompilerGeneratedAttribute]
public void set_DefineTabCustomColumnFieldMap(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_ExecuteTabCustomColumnFieldMap();
    [CompilerGeneratedAttribute]
public void set_ExecuteTabCustomColumnFieldMap(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public string get_ErrorMessage();
    [CompilerGeneratedAttribute]
public void set_ErrorMessage(string value);
    [CompilerGeneratedAttribute]
public string get_SelectedPivotId();
    [CompilerGeneratedAttribute]
public void set_SelectedPivotId(string value);
}
[GenerateAllConstantsAttribute("")]
public enum Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.TestPlansLibraryQuery : Enum {
    public int value__;
    public static TestPlansLibraryQuery None;
    public static TestPlansLibraryQuery AllTestCases;
    public static TestPlansLibraryQuery TestCasesWithActiveBugs;
    public static TestPlansLibraryQuery TestCasesNotLinkedToRequirements;
    public static TestPlansLibraryQuery TestCasesLinkedToRequirements;
    public static TestPlansLibraryQuery AllSharedSteps;
    public static TestPlansLibraryQuery SharedStepsNotLinkedToRequirement;
}
[DataContractAttribute]
[ClientIncludeModelAttribute]
public class Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.TestPlansLibraryWorkItemFilter : object {
    [CompilerGeneratedAttribute]
private string <FieldName>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <FieldValues>k__BackingField;
    [CompilerGeneratedAttribute]
private TestPlansLibraryWorkItemFilterMode <FilterMode>k__BackingField;
    [DataMemberAttribute]
public string FieldName { get; public set; }
    [DataMemberAttribute]
public List`1<string> FieldValues { get; public set; }
    [DataMemberAttribute]
public TestPlansLibraryWorkItemFilterMode FilterMode { get; public set; }
    [CompilerGeneratedAttribute]
public string get_FieldName();
    [CompilerGeneratedAttribute]
public void set_FieldName(string value);
    [CompilerGeneratedAttribute]
public List`1<string> get_FieldValues();
    [CompilerGeneratedAttribute]
public void set_FieldValues(List`1<string> value);
    [CompilerGeneratedAttribute]
public TestPlansLibraryWorkItemFilterMode get_FilterMode();
    [CompilerGeneratedAttribute]
public void set_FilterMode(TestPlansLibraryWorkItemFilterMode value);
}
[GenerateAllConstantsAttribute("")]
public enum Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.TestPlansLibraryWorkItemFilterMode : Enum {
    public int value__;
    public static TestPlansLibraryWorkItemFilterMode Or;
    public static TestPlansLibraryWorkItemFilterMode And;
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.TestPlanUpdateParams : TestPlanCreateParams {
    [CompilerGeneratedAttribute]
private int <Revision>k__BackingField;
    [DataMemberAttribute]
public int Revision { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Revision();
    [CompilerGeneratedAttribute]
public void set_Revision(int value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.TestPoint : object {
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private IdentityRef <Tester>k__BackingField;
    [CompilerGeneratedAttribute]
private TestConfigurationReference <Configuration>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Comment>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsAutomated>k__BackingField;
    [CompilerGeneratedAttribute]
private TeamProjectReference <Project>k__BackingField;
    [CompilerGeneratedAttribute]
private TestPlanReference <TestPlan>k__BackingField;
    [CompilerGeneratedAttribute]
private TestSuiteReference <TestSuite>k__BackingField;
    [CompilerGeneratedAttribute]
private IdentityRef <LastUpdatedBy>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <LastUpdatedDate>k__BackingField;
    [CompilerGeneratedAttribute]
private TestPointResults <Results>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <LastResetToActive>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsActive>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceLinks <links>k__BackingField;
    [CompilerGeneratedAttribute]
private TestCaseReference <testCaseReference>k__BackingField;
    [DataMemberAttribute]
public int Id { get; public set; }
    [DataMemberAttribute]
public IdentityRef Tester { get; public set; }
    [DataMemberAttribute]
public TestConfigurationReference Configuration { get; public set; }
    [DataMemberAttribute]
public string Comment { get; public set; }
    [DataMemberAttribute]
public bool IsAutomated { get; public set; }
    [DataMemberAttribute]
public TeamProjectReference Project { get; public set; }
    [DataMemberAttribute]
public TestPlanReference TestPlan { get; public set; }
    [DataMemberAttribute]
public TestSuiteReference TestSuite { get; public set; }
    [DataMemberAttribute]
public IdentityRef LastUpdatedBy { get; public set; }
    [DataMemberAttribute]
public DateTime LastUpdatedDate { get; public set; }
    [DataMemberAttribute]
public TestPointResults Results { get; public set; }
    [DataMemberAttribute]
public DateTime LastResetToActive { get; public set; }
    [DataMemberAttribute]
public bool IsActive { get; public set; }
    [DataMemberAttribute]
public ReferenceLinks links { get; public set; }
    [DataMemberAttribute]
public TestCaseReference testCaseReference { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [CompilerGeneratedAttribute]
public IdentityRef get_Tester();
    [CompilerGeneratedAttribute]
public void set_Tester(IdentityRef value);
    [CompilerGeneratedAttribute]
public TestConfigurationReference get_Configuration();
    [CompilerGeneratedAttribute]
public void set_Configuration(TestConfigurationReference value);
    [CompilerGeneratedAttribute]
public string get_Comment();
    [CompilerGeneratedAttribute]
public void set_Comment(string value);
    [CompilerGeneratedAttribute]
public bool get_IsAutomated();
    [CompilerGeneratedAttribute]
public void set_IsAutomated(bool value);
    [CompilerGeneratedAttribute]
public TeamProjectReference get_Project();
    [CompilerGeneratedAttribute]
public void set_Project(TeamProjectReference value);
    [CompilerGeneratedAttribute]
public TestPlanReference get_TestPlan();
    [CompilerGeneratedAttribute]
public void set_TestPlan(TestPlanReference value);
    [CompilerGeneratedAttribute]
public TestSuiteReference get_TestSuite();
    [CompilerGeneratedAttribute]
public void set_TestSuite(TestSuiteReference value);
    [CompilerGeneratedAttribute]
public IdentityRef get_LastUpdatedBy();
    [CompilerGeneratedAttribute]
public void set_LastUpdatedBy(IdentityRef value);
    [CompilerGeneratedAttribute]
public DateTime get_LastUpdatedDate();
    [CompilerGeneratedAttribute]
public void set_LastUpdatedDate(DateTime value);
    [CompilerGeneratedAttribute]
public TestPointResults get_Results();
    [CompilerGeneratedAttribute]
public void set_Results(TestPointResults value);
    [CompilerGeneratedAttribute]
public DateTime get_LastResetToActive();
    [CompilerGeneratedAttribute]
public void set_LastResetToActive(DateTime value);
    [CompilerGeneratedAttribute]
public bool get_IsActive();
    [CompilerGeneratedAttribute]
public void set_IsActive(bool value);
    [CompilerGeneratedAttribute]
public ReferenceLinks get_links();
    [CompilerGeneratedAttribute]
public void set_links(ReferenceLinks value);
    [CompilerGeneratedAttribute]
public TestCaseReference get_testCaseReference();
    [CompilerGeneratedAttribute]
public void set_testCaseReference(TestCaseReference value);
}
[DataContractAttribute]
[ClientIncludeModelAttribute]
public class Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.TestPointDetailedReference : object {
    [CompilerGeneratedAttribute]
private int <PointId>k__BackingField;
    [CompilerGeneratedAttribute]
private TestConfigurationReference <Configuration>k__BackingField;
    [CompilerGeneratedAttribute]
private TestPlanReference <Plan>k__BackingField;
    [CompilerGeneratedAttribute]
private TestSuiteReference <Suite>k__BackingField;
    [CompilerGeneratedAttribute]
private IdentityRef <Tester>k__BackingField;
    [DataMemberAttribute]
public int PointId { get; public set; }
    [DataMemberAttribute]
public TestConfigurationReference Configuration { get; public set; }
    [DataMemberAttribute]
public TestPlanReference Plan { get; public set; }
    [DataMemberAttribute]
public TestSuiteReference Suite { get; public set; }
    [DataMemberAttribute]
public IdentityRef Tester { get; public set; }
    [CompilerGeneratedAttribute]
public int get_PointId();
    [CompilerGeneratedAttribute]
public void set_PointId(int value);
    [CompilerGeneratedAttribute]
public TestConfigurationReference get_Configuration();
    [CompilerGeneratedAttribute]
public void set_Configuration(TestConfigurationReference value);
    [CompilerGeneratedAttribute]
public TestPlanReference get_Plan();
    [CompilerGeneratedAttribute]
public void set_Plan(TestPlanReference value);
    [CompilerGeneratedAttribute]
public TestSuiteReference get_Suite();
    [CompilerGeneratedAttribute]
public void set_Suite(TestSuiteReference value);
    [CompilerGeneratedAttribute]
public IdentityRef get_Tester();
    [CompilerGeneratedAttribute]
public void set_Tester(IdentityRef value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.TestPointResults : object {
    [CompilerGeneratedAttribute]
private LastResultDetails <LastResultDetails>k__BackingField;
    [CompilerGeneratedAttribute]
private int <LastResultId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LastRunBuildNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private PointState <State>k__BackingField;
    [CompilerGeneratedAttribute]
private ResultState <LastResultState>k__BackingField;
    [CompilerGeneratedAttribute]
private Outcome <Outcome>k__BackingField;
    [CompilerGeneratedAttribute]
private FailureType <FailureType>k__BackingField;
    [CompilerGeneratedAttribute]
private LastResolutionState <LastResolutionState>k__BackingField;
    [CompilerGeneratedAttribute]
private int <LastTestRunId>k__BackingField;
    [DataMemberAttribute]
public LastResultDetails LastResultDetails { get; public set; }
    [DataMemberAttribute]
public int LastResultId { get; public set; }
    [DataMemberAttribute]
public string LastRunBuildNumber { get; public set; }
    [DataMemberAttribute]
public PointState State { get; public set; }
    [DataMemberAttribute]
public ResultState LastResultState { get; public set; }
    [DataMemberAttribute]
public Outcome Outcome { get; public set; }
    [DataMemberAttribute]
public FailureType FailureType { get; public set; }
    [DataMemberAttribute]
public LastResolutionState LastResolutionState { get; public set; }
    [DataMemberAttribute]
public int LastTestRunId { get; public set; }
    [CompilerGeneratedAttribute]
public LastResultDetails get_LastResultDetails();
    [CompilerGeneratedAttribute]
public void set_LastResultDetails(LastResultDetails value);
    [CompilerGeneratedAttribute]
public int get_LastResultId();
    [CompilerGeneratedAttribute]
public void set_LastResultId(int value);
    [CompilerGeneratedAttribute]
public string get_LastRunBuildNumber();
    [CompilerGeneratedAttribute]
public void set_LastRunBuildNumber(string value);
    [CompilerGeneratedAttribute]
public PointState get_State();
    [CompilerGeneratedAttribute]
public void set_State(PointState value);
    [CompilerGeneratedAttribute]
public ResultState get_LastResultState();
    [CompilerGeneratedAttribute]
public void set_LastResultState(ResultState value);
    [CompilerGeneratedAttribute]
public Outcome get_Outcome();
    [CompilerGeneratedAttribute]
public void set_Outcome(Outcome value);
    [CompilerGeneratedAttribute]
public FailureType get_FailureType();
    [CompilerGeneratedAttribute]
public void set_FailureType(FailureType value);
    [CompilerGeneratedAttribute]
public LastResolutionState get_LastResolutionState();
    [CompilerGeneratedAttribute]
public void set_LastResolutionState(LastResolutionState value);
    [CompilerGeneratedAttribute]
public int get_LastTestRunId();
    [CompilerGeneratedAttribute]
public void set_LastTestRunId(int value);
}
public class Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.TestPointUpdateParams : object {
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private Results <Results>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsActive>k__BackingField;
    [CompilerGeneratedAttribute]
private IdentityRef <Tester>k__BackingField;
    public int Id { get; public set; }
    public Results Results { get; public set; }
    public Nullable`1<bool> IsActive { get; public set; }
    public IdentityRef Tester { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [CompilerGeneratedAttribute]
public Results get_Results();
    [CompilerGeneratedAttribute]
public void set_Results(Results value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IsActive();
    [CompilerGeneratedAttribute]
public void set_IsActive(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public IdentityRef get_Tester();
    [CompilerGeneratedAttribute]
public void set_Tester(IdentityRef value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.TestSuite : TestSuiteCreateParams {
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Revision>k__BackingField;
    [CompilerGeneratedAttribute]
private TeamProjectReference <Project>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <LastPopulatedDate>k__BackingField;
    [CompilerGeneratedAttribute]
private IdentityRef <LastUpdatedBy>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <LastUpdatedDate>k__BackingField;
    [CompilerGeneratedAttribute]
private TestPlanReference <Plan>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<TestSuite> <Children>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasChildren>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LastError>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceLinks <Links>k__BackingField;
    [DataMemberAttribute]
public int Id { get; public set; }
    [DataMemberAttribute]
public int Revision { get; public set; }
    [DataMemberAttribute]
public TeamProjectReference Project { get; public set; }
    [DataMemberAttribute]
public DateTime LastPopulatedDate { get; public set; }
    [DataMemberAttribute]
public IdentityRef LastUpdatedBy { get; public set; }
    [DataMemberAttribute]
[DefaultValueAttribute("System.DateTime", "1-1-0001")]
public DateTime LastUpdatedDate { get; public set; }
    [DataMemberAttribute]
public TestPlanReference Plan { get; public set; }
    [DataMemberAttribute]
public List`1<TestSuite> Children { get; public set; }
    [DataMemberAttribute]
public bool HasChildren { get; public set; }
    [DataMemberAttribute]
public string LastError { get; public set; }
    [DataMemberAttribute]
public ReferenceLinks Links { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [CompilerGeneratedAttribute]
public int get_Revision();
    [CompilerGeneratedAttribute]
public void set_Revision(int value);
    [CompilerGeneratedAttribute]
public TeamProjectReference get_Project();
    [CompilerGeneratedAttribute]
public void set_Project(TeamProjectReference value);
    [CompilerGeneratedAttribute]
public DateTime get_LastPopulatedDate();
    [CompilerGeneratedAttribute]
public void set_LastPopulatedDate(DateTime value);
    [CompilerGeneratedAttribute]
public IdentityRef get_LastUpdatedBy();
    [CompilerGeneratedAttribute]
public void set_LastUpdatedBy(IdentityRef value);
    [CompilerGeneratedAttribute]
public DateTime get_LastUpdatedDate();
    [CompilerGeneratedAttribute]
public void set_LastUpdatedDate(DateTime value);
    [CompilerGeneratedAttribute]
public TestPlanReference get_Plan();
    [CompilerGeneratedAttribute]
public void set_Plan(TestPlanReference value);
    [CompilerGeneratedAttribute]
public List`1<TestSuite> get_Children();
    [CompilerGeneratedAttribute]
public void set_Children(List`1<TestSuite> value);
    [CompilerGeneratedAttribute]
public bool get_HasChildren();
    [CompilerGeneratedAttribute]
public void set_HasChildren(bool value);
    [CompilerGeneratedAttribute]
public string get_LastError();
    [CompilerGeneratedAttribute]
public void set_LastError(string value);
    [CompilerGeneratedAttribute]
public ReferenceLinks get_Links();
    [CompilerGeneratedAttribute]
public void set_Links(ReferenceLinks value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.TestSuiteCreateParams : TestSuiteCreateUpdateCommonParams {
    [CompilerGeneratedAttribute]
private TestSuiteType <SuiteType>k__BackingField;
    [CompilerGeneratedAttribute]
private int <RequirementId>k__BackingField;
    [DataMemberAttribute]
public TestSuiteType SuiteType { get; public set; }
    [DataMemberAttribute]
public int RequirementId { get; public set; }
    [CompilerGeneratedAttribute]
public TestSuiteType get_SuiteType();
    [CompilerGeneratedAttribute]
public void set_SuiteType(TestSuiteType value);
    [CompilerGeneratedAttribute]
public int get_RequirementId();
    [CompilerGeneratedAttribute]
public void set_RequirementId(int value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.TestSuiteCreateUpdateCommonParams : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private TestSuiteReference <ParentSuite>k__BackingField;
    [CompilerGeneratedAttribute]
private string <QueryString>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <InheritDefaultConfigurations>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<TestConfigurationReference> <DefaultConfigurations>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<IdentityRef> <DefaultTesters>k__BackingField;
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public TestSuiteReference ParentSuite { get; public set; }
    [DataMemberAttribute]
public string QueryString { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> InheritDefaultConfigurations { get; public set; }
    [DataMemberAttribute]
public List`1<TestConfigurationReference> DefaultConfigurations { get; public set; }
    [DataMemberAttribute]
public List`1<IdentityRef> DefaultTesters { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public TestSuiteReference get_ParentSuite();
    [CompilerGeneratedAttribute]
public void set_ParentSuite(TestSuiteReference value);
    [CompilerGeneratedAttribute]
public string get_QueryString();
    [CompilerGeneratedAttribute]
public void set_QueryString(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_InheritDefaultConfigurations();
    [CompilerGeneratedAttribute]
public void set_InheritDefaultConfigurations(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public List`1<TestConfigurationReference> get_DefaultConfigurations();
    [CompilerGeneratedAttribute]
public void set_DefaultConfigurations(List`1<TestConfigurationReference> value);
    [CompilerGeneratedAttribute]
public List`1<IdentityRef> get_DefaultTesters();
    [CompilerGeneratedAttribute]
public void set_DefaultTesters(List`1<IdentityRef> value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.TestSuiteDetailedReference : TestSuiteReference {
    [CompilerGeneratedAttribute]
private int <PlanId>k__BackingField;
    [CompilerGeneratedAttribute]
private TestSuiteType <SuiteType>k__BackingField;
    [CompilerGeneratedAttribute]
private int <RequirementId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <QueryString>k__BackingField;
    [DataMemberAttribute]
public int PlanId { get; public set; }
    [DataMemberAttribute]
public TestSuiteType SuiteType { get; public set; }
    [DataMemberAttribute]
public int RequirementId { get; public set; }
    [DataMemberAttribute]
public string QueryString { get; public set; }
    [CompilerGeneratedAttribute]
public int get_PlanId();
    [CompilerGeneratedAttribute]
public void set_PlanId(int value);
    [CompilerGeneratedAttribute]
public TestSuiteType get_SuiteType();
    [CompilerGeneratedAttribute]
public void set_SuiteType(TestSuiteType value);
    [CompilerGeneratedAttribute]
public int get_RequirementId();
    [CompilerGeneratedAttribute]
public void set_RequirementId(int value);
    [CompilerGeneratedAttribute]
public string get_QueryString();
    [CompilerGeneratedAttribute]
public void set_QueryString(string value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.TestSuiteReference : object {
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [DataMemberAttribute]
public int Id { get; public set; }
    [DataMemberAttribute]
public string Name { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.TestSuiteReferenceWithProject : TestSuiteReference {
    [CompilerGeneratedAttribute]
private TeamProjectReference <Project>k__BackingField;
    [DataMemberAttribute]
public TeamProjectReference Project { get; public set; }
    [CompilerGeneratedAttribute]
public TeamProjectReference get_Project();
    [CompilerGeneratedAttribute]
public void set_Project(TeamProjectReference value);
}
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.TestSuiteType : Enum {
    public int value__;
    public static TestSuiteType None;
    public static TestSuiteType DynamicTestSuite;
    public static TestSuiteType StaticTestSuite;
    public static TestSuiteType RequirementTestSuite;
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.TestSuiteUpdateParams : TestSuiteCreateUpdateCommonParams {
    [CompilerGeneratedAttribute]
private int <Revision>k__BackingField;
    [DataMemberAttribute]
public int Revision { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Revision();
    [CompilerGeneratedAttribute]
public void set_Revision(int value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.TestVariable : TestVariableCreateUpdateParameters {
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private TeamProjectReference <Project>k__BackingField;
    [DataMemberAttribute]
public int Id { get; public set; }
    [DataMemberAttribute]
public TeamProjectReference Project { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [CompilerGeneratedAttribute]
public TeamProjectReference get_Project();
    [CompilerGeneratedAttribute]
public void set_Project(TeamProjectReference value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.TestVariableCreateUpdateParameters : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <Values>k__BackingField;
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public string Description { get; public set; }
    [DataMemberAttribute]
public List`1<string> Values { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public List`1<string> get_Values();
    [CompilerGeneratedAttribute]
public void set_Values(List`1<string> value);
}
public enum Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.UserFriendlyTestOutcome : Enum {
    public byte value__;
    public static UserFriendlyTestOutcome InProgress;
    public static UserFriendlyTestOutcome Blocked;
    public static UserFriendlyTestOutcome Failed;
    public static UserFriendlyTestOutcome Passed;
    public static UserFriendlyTestOutcome Ready;
    public static UserFriendlyTestOutcome NotApplicable;
    public static UserFriendlyTestOutcome Paused;
    public static UserFriendlyTestOutcome Timeout;
    public static UserFriendlyTestOutcome Warning;
    public static UserFriendlyTestOutcome Error;
    public static UserFriendlyTestOutcome NotExecuted;
    public static UserFriendlyTestOutcome Inconclusive;
    public static UserFriendlyTestOutcome Aborted;
    public static UserFriendlyTestOutcome None;
    public static UserFriendlyTestOutcome NotImpacted;
    public static UserFriendlyTestOutcome Unspecified;
    public static UserFriendlyTestOutcome MaxValue;
}
public class Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.WorkItem : object {
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    public int Id { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.TestManagement.TestPlanning.WebApi.WorkItemDetails : object {
    [DataMemberAttribute]
public int Id;
    [DataMemberAttribute]
public string Name;
    [DataMemberAttribute]
public List`1<object> WorkItemFields;
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
