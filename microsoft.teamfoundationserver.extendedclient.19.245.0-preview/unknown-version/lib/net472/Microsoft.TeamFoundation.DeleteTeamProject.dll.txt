[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[ComVisibleAttribute("False")]
public class Microsoft.TeamFoundation.Client.DeletionException : TeamFoundationServerException {
    public DeletionException(string message);
    public DeletionException(string message, Exception innerException);
    protected DeletionException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.TeamFoundation.Client.TeamProjectDeleter : object {
    private static string IProjectMaintenance;
    private int m_componentsDeletedSoFar;
    private int m_componentsToDelete;
    private ICommonStructureService m_css;
    private bool m_useLegacyMode;
    private List`1<Exception> m_exceptions;
    private bool m_force;
    private bool m_isInitialized;
    private ProjectHttpClient m_projectClient;
    private Guid m_projectId;
    private string m_projectName;
    private TeamProjectSettings m_projectSettings;
    private string m_projectUri;
    private IRegistration m_registrationService;
    private ReportingService m_reportingService;
    private TfsTeamProjectCollection m_tfs;
    private bool m_useNewDeleteWorkflow;
    private Nullable`1<bool> m_hardDelete;
    [CompilerGeneratedAttribute]
private DeleteComponentEventHandler DeleteComponentEvent;
    [CompilerGeneratedAttribute]
private StatusEventHandler StatusEvent;
    [CompilerGeneratedAttribute]
private bool <ExcludeWss>k__BackingField;
    public List`1<Exception> IssuesDeletingProject { get; }
    public bool HasWssToDelete { get; }
    public bool ExcludeWss { get; public set; }
    public TeamProjectDeleter(TfsTeamProjectCollection projectCollection, string name, bool force);
    public TeamProjectDeleter(TfsTeamProjectCollection projectCollection, string name, bool force, bool useLegacyMode);
    public TeamProjectDeleter(TfsTeamProjectCollection projectCollection, string name, bool force, bool useLegacyMode, bool hardDelete);
    private static TeamProjectDeleter();
    [CompilerGeneratedAttribute]
internal void add_DeleteComponentEvent(DeleteComponentEventHandler value);
    [CompilerGeneratedAttribute]
internal void remove_DeleteComponentEvent(DeleteComponentEventHandler value);
    [CompilerGeneratedAttribute]
public void add_StatusEvent(StatusEventHandler value);
    [CompilerGeneratedAttribute]
public void remove_StatusEvent(StatusEventHandler value);
    public List`1<Exception> get_IssuesDeletingProject();
    private void OnStatus(string message);
    private void OnDeleteComponent();
    private void LogIssue(Exception e);
    public bool get_HasWssToDelete();
    [CompilerGeneratedAttribute]
public bool get_ExcludeWss();
    [CompilerGeneratedAttribute]
public void set_ExcludeWss(bool value);
    private void Initialize();
    public void Delete();
    private void DeleteUsingNewWorkflow();
    private void DeleteUsingOldWorkflow();
    private void DoProjectServerDelete(string projectUri);
    private void DoRosettaDelete();
    private void DoWssDelete();
    private void DetachWssSite();
    private bool DoServiceDelete(string localizedEntryTypeName, string serviceUri, string projectUri);
    private bool ReportSiteExists();
    private void InitializeWss();
    private void InitializeRosetta();
    private string GetLocalizedDeleteOperationStatus(OperationStatus operationStatus);
    private void OnOperationStatus(OperationStatus status);
    private string GetLocalizedEntryTypeName(string entryTypeName);
}
internal class Microsoft.TeamFoundation.Server.ProjectMaintenance : TfsHttpClient {
    protected string ComponentName { get; }
    protected string ServiceType { get; }
    protected Guid CollectionServiceIdentifier { get; }
    internal ProjectMaintenance(TfsTeamProjectCollection server, string url);
    internal ProjectMaintenance(TfsTeamProjectCollection server);
    protected virtual string get_ComponentName();
    protected virtual string get_ServiceType();
    protected virtual Guid get_CollectionServiceIdentifier();
    public bool DeleteProject(string projectUri);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
