[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
public class Microsoft.TeamFoundation.ProcessConfiguration.Client.AddPanelConfiguration : object {
    internal Field[] m_fields;
    public Field[] Fields { get; public set; }
    public Field[] get_Fields();
    public void set_Fields(Field[] value);
    [EditorBrowsableAttribute("1")]
public static AddPanelConfiguration FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    [EditorBrowsableAttribute("1")]
public void ToXml(XmlWriter writer, string element);
    [EditorBrowsableAttribute("1")]
public static void ToXml(XmlWriter writer, string element, AddPanelConfiguration obj);
}
public class Microsoft.TeamFoundation.ProcessConfiguration.Client.AgileProjectConfiguration : object {
    private IterationBacklogConfiguration m_iterationBacklog;
    private ProductBacklogConfiguration m_productBacklog;
    public IterationBacklogConfiguration IterationBacklog { get; public set; }
    public ProductBacklogConfiguration ProductBacklog { get; public set; }
    public IterationBacklogConfiguration get_IterationBacklog();
    public void set_IterationBacklog(IterationBacklogConfiguration value);
    public ProductBacklogConfiguration get_ProductBacklog();
    public void set_ProductBacklog(ProductBacklogConfiguration value);
    [EditorBrowsableAttribute("1")]
public static AgileProjectConfiguration FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    [EditorBrowsableAttribute("1")]
public void ToXml(XmlWriter writer, string element);
    [EditorBrowsableAttribute("1")]
public static void ToXml(XmlWriter writer, string element, AgileProjectConfiguration obj);
}
public class Microsoft.TeamFoundation.ProcessConfiguration.Client.BacklogCategoryConfiguration : CategoryConfiguration {
    private AddPanelConfiguration m_addPanel;
    internal Column[] m_columns;
    private string m_parentCategoryReferenceName;
    private int m_workItemCountLimit;
    public AddPanelConfiguration AddPanel { get; public set; }
    public Column[] Columns { get; public set; }
    public string ParentCategoryReferenceName { get; public set; }
    public int WorkItemCountLimit { get; public set; }
    public AddPanelConfiguration get_AddPanel();
    public void set_AddPanel(AddPanelConfiguration value);
    public Column[] get_Columns();
    public void set_Columns(Column[] value);
    public string get_ParentCategoryReferenceName();
    public void set_ParentCategoryReferenceName(string value);
    public int get_WorkItemCountLimit();
    public void set_WorkItemCountLimit(int value);
    [EditorBrowsableAttribute("1")]
public static BacklogCategoryConfiguration FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    [EditorBrowsableAttribute("1")]
public virtual void ToXml(XmlWriter writer, string element);
    [EditorBrowsableAttribute("1")]
public static void ToXml(XmlWriter writer, string element, BacklogCategoryConfiguration obj);
}
public class Microsoft.TeamFoundation.ProcessConfiguration.Client.CategoryConfiguration : object {
    protected string m_categoryReferenceName;
    protected string m_pluralName;
    protected string m_singularName;
    internal State[] m_states;
    public string CategoryReferenceName { get; public set; }
    public string PluralName { get; public set; }
    public string SingularName { get; public set; }
    public State[] States { get; public set; }
    public string get_CategoryReferenceName();
    public void set_CategoryReferenceName(string value);
    public string get_PluralName();
    public void set_PluralName(string value);
    public string get_SingularName();
    public void set_SingularName(string value);
    public State[] get_States();
    public void set_States(State[] value);
    [EditorBrowsableAttribute("1")]
public static CategoryConfiguration FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    [EditorBrowsableAttribute("1")]
public virtual void ToXml(XmlWriter writer, string element);
    [EditorBrowsableAttribute("1")]
public static void ToXml(XmlWriter writer, string element, CategoryConfiguration obj);
}
public class Microsoft.TeamFoundation.ProcessConfiguration.Client.Column : object {
    private int m_columnWidth;
    private string m_fieldName;
    public int ColumnWidth { get; public set; }
    public string FieldName { get; public set; }
    public int get_ColumnWidth();
    public void set_ColumnWidth(int value);
    public string get_FieldName();
    public void set_FieldName(string value);
    [EditorBrowsableAttribute("1")]
public static Column FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    [EditorBrowsableAttribute("1")]
public void ToXml(XmlWriter writer, string element);
    [EditorBrowsableAttribute("1")]
public static void ToXml(XmlWriter writer, string element, Column obj);
}
public class Microsoft.TeamFoundation.ProcessConfiguration.Client.CommonProjectConfiguration : object {
    private WorkItemCategory m_bugWorkItems;
    private WorkItemCategory m_feedbackRequestWorkItems;
    private WorkItemCategory m_feedbackResponseWorkItems;
    private WorkItemCategory m_feedbackWorkItems;
    private WorkItemCategory m_requirementWorkItems;
    private WorkItemCategory m_taskWorkItems;
    internal TypeField[] m_typeFields;
    internal DayOfWeek[] m_weekends;
    public WorkItemCategory BugWorkItems { get; public set; }
    public WorkItemCategory FeedbackRequestWorkItems { get; public set; }
    public WorkItemCategory FeedbackResponseWorkItems { get; public set; }
    public WorkItemCategory FeedbackWorkItems { get; public set; }
    public WorkItemCategory RequirementWorkItems { get; public set; }
    public WorkItemCategory TaskWorkItems { get; public set; }
    public TypeField[] TypeFields { get; public set; }
    public DayOfWeek[] Weekends { get; public set; }
    public WorkItemCategory get_BugWorkItems();
    public void set_BugWorkItems(WorkItemCategory value);
    public WorkItemCategory get_FeedbackRequestWorkItems();
    public void set_FeedbackRequestWorkItems(WorkItemCategory value);
    public WorkItemCategory get_FeedbackResponseWorkItems();
    public void set_FeedbackResponseWorkItems(WorkItemCategory value);
    public WorkItemCategory get_FeedbackWorkItems();
    public void set_FeedbackWorkItems(WorkItemCategory value);
    public WorkItemCategory get_RequirementWorkItems();
    public void set_RequirementWorkItems(WorkItemCategory value);
    public WorkItemCategory get_TaskWorkItems();
    public void set_TaskWorkItems(WorkItemCategory value);
    public TypeField[] get_TypeFields();
    public void set_TypeFields(TypeField[] value);
    public DayOfWeek[] get_Weekends();
    public void set_Weekends(DayOfWeek[] value);
    [EditorBrowsableAttribute("1")]
public static CommonProjectConfiguration FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    [EditorBrowsableAttribute("1")]
public void ToXml(XmlWriter writer, string element);
    [EditorBrowsableAttribute("1")]
public static void ToXml(XmlWriter writer, string element, CommonProjectConfiguration obj);
}
internal abstract class Microsoft.TeamFoundation.ProcessConfiguration.Client.CommonProjectConfigurationConverter : object {
    private CommonProjectConfigurationConverter m_nextConverter;
    private CommonProjectConfigurationVersion m_supportedVersion;
    public CommonProjectConfigurationConverter(CommonProjectConfigurationVersion supportedVersion, CommonProjectConfigurationConverter nextConverter);
    public void Convert(CommonProjectConfiguration config, CommonProjectConfigurationVersion targetVersion);
    public void Convert(ProjectProcessConfiguration config, CommonProjectConfigurationVersion targetVersion);
    public abstract virtual void DoConversion(CommonProjectConfiguration config);
    public abstract virtual void DoConversion(ProjectProcessConfiguration config);
}
internal static class Microsoft.TeamFoundation.ProcessConfiguration.Client.CommonProjectConfigurationConverterFactory : object {
    public static CommonProjectConfigurationConverter CreateConverterChain(CommonProjectConfigurationVersion minSupportedVersion);
}
internal enum Microsoft.TeamFoundation.ProcessConfiguration.Client.CommonProjectConfigurationVersion : Enum {
    public int value__;
    public static CommonProjectConfigurationVersion None;
    public static CommonProjectConfigurationVersion V1;
    public static CommonProjectConfigurationVersion V2;
    public static CommonProjectConfigurationVersion V3;
    public static CommonProjectConfigurationVersion V4;
}
public class Microsoft.TeamFoundation.ProcessConfiguration.Client.Field : object {
    protected string m_name;
    public string Name { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    [EditorBrowsableAttribute("1")]
public static Field FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    [EditorBrowsableAttribute("1")]
public virtual void ToXml(XmlWriter writer, string element);
    [EditorBrowsableAttribute("1")]
public static void ToXml(XmlWriter writer, string element, Field obj);
}
public enum Microsoft.TeamFoundation.ProcessConfiguration.Client.FieldTypeEnum : Enum {
    public int value__;
    public static FieldTypeEnum Activity;
    public static FieldTypeEnum ApplicationLaunchInstructions;
    public static FieldTypeEnum ApplicationStartInformation;
    public static FieldTypeEnum ApplicationType;
    public static FieldTypeEnum ClosedDate;
    public static FieldTypeEnum Effort;
    public static FieldTypeEnum FeedbackNotes;
    public static FieldTypeEnum Order;
    public static FieldTypeEnum RemainingWork;
    public static FieldTypeEnum Requestor;
    public static FieldTypeEnum Team;
}
internal static class Microsoft.TeamFoundation.ProcessConfiguration.Client.Helper : object {
    private static BacklogCategoryConfiguration[] m_zeroLengthArrayOfBacklogCategoryConfiguration;
    private static Column[] m_zeroLengthArrayOfColumn;
    private static DayOfWeek[] m_zeroLengthArrayOfDayOfWeek;
    private static Field[] m_zeroLengthArrayOfField;
    private static Guid[] m_zeroLengthArrayOfGuid;
    private static State[] m_zeroLengthArrayOfState;
    private static String[] m_zeroLengthArrayOfString;
    private static TeamConfiguration[] m_zeroLengthArrayOfTeamConfiguration;
    private static TeamFieldValue[] m_zeroLengthArrayOfTeamFieldValue;
    private static TypeField[] m_zeroLengthArrayOfTypeField;
    private static TypeFieldValue[] m_zeroLengthArrayOfTypeFieldValue;
    private static WorkItemColor[] m_zeroLengthArrayOfWorkItemColor;
    internal static BacklogCategoryConfiguration[] ZeroLengthArrayOfBacklogCategoryConfiguration { get; }
    internal static Column[] ZeroLengthArrayOfColumn { get; }
    internal static DayOfWeek[] ZeroLengthArrayOfDayOfWeek { get; }
    internal static Field[] ZeroLengthArrayOfField { get; }
    internal static Guid[] ZeroLengthArrayOfGuid { get; }
    internal static State[] ZeroLengthArrayOfState { get; }
    internal static String[] ZeroLengthArrayOfString { get; }
    internal static TeamConfiguration[] ZeroLengthArrayOfTeamConfiguration { get; }
    internal static TeamFieldValue[] ZeroLengthArrayOfTeamFieldValue { get; }
    internal static TypeField[] ZeroLengthArrayOfTypeField { get; }
    internal static TypeFieldValue[] ZeroLengthArrayOfTypeFieldValue { get; }
    internal static WorkItemColor[] ZeroLengthArrayOfWorkItemColor { get; }
    internal static BacklogCategoryConfiguration[] get_ZeroLengthArrayOfBacklogCategoryConfiguration();
    internal static Column[] get_ZeroLengthArrayOfColumn();
    internal static DayOfWeek[] get_ZeroLengthArrayOfDayOfWeek();
    internal static Field[] get_ZeroLengthArrayOfField();
    internal static Guid[] get_ZeroLengthArrayOfGuid();
    internal static State[] get_ZeroLengthArrayOfState();
    internal static String[] get_ZeroLengthArrayOfString();
    internal static TeamConfiguration[] get_ZeroLengthArrayOfTeamConfiguration();
    internal static TeamFieldValue[] get_ZeroLengthArrayOfTeamFieldValue();
    internal static TypeField[] get_ZeroLengthArrayOfTypeField();
    internal static TypeFieldValue[] get_ZeroLengthArrayOfTypeFieldValue();
    internal static WorkItemColor[] get_ZeroLengthArrayOfWorkItemColor();
    internal static BacklogCategoryConfiguration[] ArrayOfBacklogCategoryConfigurationFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static Column[] ArrayOfColumnFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static DayOfWeek[] ArrayOfDayOfWeekFromXml(XmlReader reader, bool inline);
    internal static Field[] ArrayOfFieldFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static Guid[] ArrayOfGuidFromXml(XmlReader reader, bool inline);
    internal static State[] ArrayOfStateFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static String[] ArrayOfStringFromXml(XmlReader reader, bool inline);
    internal static TeamConfiguration[] ArrayOfTeamConfigurationFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static TeamFieldValue[] ArrayOfTeamFieldValueFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static TypeField[] ArrayOfTypeFieldFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static TypeFieldValue[] ArrayOfTypeFieldValueFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static WorkItemColor[] ArrayOfWorkItemColorFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static Property[] ArrayOfPropertyFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static string ArrayToString(T[] array);
    internal static void StringToXmlElement(XmlWriter writer, string element, string str);
    internal static void ToXml(XmlWriter writer, string arrayName, BacklogCategoryConfiguration[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, BacklogCategoryConfiguration[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, Column[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, Column[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, DayOfWeek[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, DayOfWeek[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, Field[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, Field[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, Guid[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, Guid[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, State[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, State[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, String[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, String[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, TeamConfiguration[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, TeamConfiguration[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, TeamFieldValue[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, TeamFieldValue[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, TypeFieldValue[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, TypeFieldValue[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, TypeField[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, TypeField[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, WorkItemColor[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, WorkItemColor[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, Property[] array, bool inline, bool allowEmptyArrays);
}
public class Microsoft.TeamFoundation.ProcessConfiguration.Client.IterationBacklogConfiguration : object {
    internal Column[] m_columns;
    private int m_workItemCountLimit;
    public Column[] Columns { get; public set; }
    public int WorkItemCountLimit { get; public set; }
    public Column[] get_Columns();
    public void set_Columns(Column[] value);
    public int get_WorkItemCountLimit();
    public void set_WorkItemCountLimit(int value);
    [EditorBrowsableAttribute("1")]
public static IterationBacklogConfiguration FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    [EditorBrowsableAttribute("1")]
public void ToXml(XmlWriter writer, string element);
    [EditorBrowsableAttribute("1")]
public static void ToXml(XmlWriter writer, string element, IterationBacklogConfiguration obj);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.TeamFoundation.ProcessConfiguration.Client.ProcessConfigurationHelpers : object {
    private static string CommonSchema;
    private static string AgileProcessConfigurationSchema;
    private static string CommonProcessConfigurationSchema;
    private static string ProjectProcessConfigurationSchema;
    public static CommonProjectConfiguration LoadCommonConfiguration(TfsTeamProjectCollection tpc, string xmlDefinition);
    public static AgileProjectConfiguration LoadAgileConfiguration(TfsTeamProjectCollection tpc, string xmlDefinition);
    public static ProjectProcessConfiguration LoadProcessConfiguration(TfsTeamProjectCollection tpc, string xmlDefinition);
    private static T GetConfigurationObject(string definition, string schemaName, Func`2<XmlReader, T> creator);
    private static XmlReaderSettings GetReaderSettings(string schemaName);
    private static XmlSchema GetSchema(string schemaName);
}
public class Microsoft.TeamFoundation.ProcessConfiguration.Client.ProcessConfigurationService : TfsHttpClient {
    protected Guid CollectionServiceIdentifier { get; }
    protected string ComponentName { get; }
    protected string ServiceType { get; }
    protected TfsClientOperation GetCommonConfigurationOperation { get; }
    protected TfsClientOperation SetCommonConfigurationOperation { get; }
    protected TfsClientOperation ValidateCommonConfigurationOperation { get; }
    protected TfsClientOperation GetAgileConfigurationOperation { get; }
    protected TfsClientOperation SetAgileConfigurationOperation { get; }
    protected TfsClientOperation ValidateAgileConfigurationOperation { get; }
    public ProcessConfigurationService(TfsTeamProjectCollection connection);
    protected virtual Guid get_CollectionServiceIdentifier();
    protected virtual string get_ComponentName();
    protected virtual string get_ServiceType();
    public AgileProjectConfiguration GetAgileConfiguration(string projectUri);
    public CommonProjectConfiguration GetCommonConfiguration(string projectUri);
    public void SetAgileConfiguration(string projectUri, AgileProjectConfiguration agileConfiguration);
    public void SetCommonConfiguration(string projectUri, CommonProjectConfiguration commonConfiguration);
    public void ValidateAgileConfiguration(string projectUri, AgileProjectConfiguration agileConfiguration);
    public void ValidateCommonConfiguration(string projectUri, CommonProjectConfiguration commonConfiguration);
    protected virtual TfsClientOperation get_GetCommonConfigurationOperation();
    protected virtual TfsClientOperation get_SetCommonConfigurationOperation();
    protected virtual TfsClientOperation get_ValidateCommonConfigurationOperation();
    protected virtual TfsClientOperation get_GetAgileConfigurationOperation();
    protected virtual TfsClientOperation get_SetAgileConfigurationOperation();
    protected virtual TfsClientOperation get_ValidateAgileConfigurationOperation();
}
internal class Microsoft.TeamFoundation.ProcessConfiguration.Client.ProcessConfigurationService2 : ProcessConfigurationService {
    protected Guid CollectionServiceIdentifier { get; }
    protected string ComponentName { get; }
    protected string ServiceType { get; }
    protected TfsClientOperation GetCommonConfigurationOperation { get; }
    protected TfsClientOperation SetCommonConfigurationOperation { get; }
    protected TfsClientOperation ValidateCommonConfigurationOperation { get; }
    protected TfsClientOperation GetAgileConfigurationOperation { get; }
    protected TfsClientOperation SetAgileConfigurationOperation { get; }
    protected TfsClientOperation ValidateAgileConfigurationOperation { get; }
    internal ProcessConfigurationService2(TfsTeamProjectCollection connection);
    protected virtual Guid get_CollectionServiceIdentifier();
    protected virtual string get_ComponentName();
    protected virtual string get_ServiceType();
    protected virtual TfsClientOperation get_GetCommonConfigurationOperation();
    protected virtual TfsClientOperation get_SetCommonConfigurationOperation();
    protected virtual TfsClientOperation get_ValidateCommonConfigurationOperation();
    protected virtual TfsClientOperation get_GetAgileConfigurationOperation();
    protected virtual TfsClientOperation get_SetAgileConfigurationOperation();
    protected virtual TfsClientOperation get_ValidateAgileConfigurationOperation();
}
internal class Microsoft.TeamFoundation.ProcessConfiguration.Client.ProcessConfigurationService3 : ProcessConfigurationService2 {
    protected Guid CollectionServiceIdentifier { get; }
    protected string ComponentName { get; }
    protected string ServiceType { get; }
    public ProcessConfigurationService3(TfsTeamProjectCollection connection);
    protected virtual Guid get_CollectionServiceIdentifier();
    protected virtual string get_ComponentName();
    protected virtual string get_ServiceType();
    public virtual ProjectProcessConfiguration GetProjectProcessConfiguration(string projectUri);
    public virtual void SetProjectProcessConfiguration(string projectUri, ProjectProcessConfiguration processConfiguration);
    public virtual void ValidateProjectProcessConfiguration(string projectUri, ProjectProcessConfiguration processConfiguration);
}
internal class Microsoft.TeamFoundation.ProcessConfiguration.Client.ProcessConfigurationService4 : ProcessConfigurationService3 {
    protected Guid CollectionServiceIdentifier { get; }
    protected string ComponentName { get; }
    protected string ServiceType { get; }
    public ProcessConfigurationService4(TfsTeamProjectCollection connection);
    protected virtual Guid get_CollectionServiceIdentifier();
    protected virtual string get_ComponentName();
    protected virtual string get_ServiceType();
    public virtual ProjectProcessConfiguration GetProjectProcessConfiguration(string projectUri);
    public virtual void SetProjectProcessConfiguration(string projectUri, ProjectProcessConfiguration processConfiguration);
    public virtual void ValidateProjectProcessConfiguration(string projectUri, ProjectProcessConfiguration processConfiguration);
}
public class Microsoft.TeamFoundation.ProcessConfiguration.Client.ProductBacklogConfiguration : object {
    private AddPanelConfiguration m_addPanel;
    internal Column[] m_columns;
    public AddPanelConfiguration AddPanel { get; public set; }
    public Column[] Columns { get; public set; }
    public AddPanelConfiguration get_AddPanel();
    public void set_AddPanel(AddPanelConfiguration value);
    public Column[] get_Columns();
    public void set_Columns(Column[] value);
    [EditorBrowsableAttribute("1")]
public static ProductBacklogConfiguration FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    [EditorBrowsableAttribute("1")]
public void ToXml(XmlWriter writer, string element);
    [EditorBrowsableAttribute("1")]
public static void ToXml(XmlWriter writer, string element, ProductBacklogConfiguration obj);
}
internal enum Microsoft.TeamFoundation.ProcessConfiguration.Client.ProjectConfigurationServiceVersion : Enum {
    public int value__;
    public static ProjectConfigurationServiceVersion None;
    public static ProjectConfigurationServiceVersion V1;
    public static ProjectConfigurationServiceVersion V2;
    public static ProjectConfigurationServiceVersion V3;
    public static ProjectConfigurationServiceVersion V4;
}
public class Microsoft.TeamFoundation.ProcessConfiguration.Client.ProjectProcessConfiguration : object {
    private CategoryConfiguration m_bugWorkItems;
    private CategoryConfiguration m_testPlanWorkItems;
    private CategoryConfiguration m_testSuiteWorkItems;
    private CategoryConfiguration m_feedbackRequestWorkItems;
    private CategoryConfiguration m_feedbackResponseWorkItems;
    private CategoryConfiguration m_feedbackWorkItems;
    internal BacklogCategoryConfiguration[] m_portfolioBacklogs;
    private BacklogCategoryConfiguration m_requirementBacklog;
    private BacklogCategoryConfiguration m_taskBacklog;
    internal TypeField[] m_typeFields;
    internal DayOfWeek[] m_weekends;
    private Property[] m_properties;
    internal WorkItemColor[] m_workItemColors;
    private CategoryConfiguration m_releaseWorkItems;
    private CategoryConfiguration m_releaseStageWorkItems;
    private CategoryConfiguration m_stageSignoffTaskWorkItems;
    public CategoryConfiguration BugWorkItems { get; public set; }
    public CategoryConfiguration TestPlanWorkItems { get; public set; }
    public CategoryConfiguration TestSuiteWorkItems { get; public set; }
    public CategoryConfiguration FeedbackRequestWorkItems { get; public set; }
    public CategoryConfiguration FeedbackResponseWorkItems { get; public set; }
    public CategoryConfiguration FeedbackWorkItems { get; public set; }
    public BacklogCategoryConfiguration[] PortfolioBacklogs { get; public set; }
    public BacklogCategoryConfiguration RequirementBacklog { get; public set; }
    public BacklogCategoryConfiguration TaskBacklog { get; public set; }
    public TypeField[] TypeFields { get; public set; }
    public DayOfWeek[] Weekends { get; public set; }
    public Property[] Properties { get; public set; }
    public WorkItemColor[] WorkItemColors { get; public set; }
    public CategoryConfiguration ReleaseWorkItems { get; public set; }
    public CategoryConfiguration ReleaseStageWorkItems { get; public set; }
    public CategoryConfiguration StageSignoffTaskWorkItems { get; public set; }
    public CategoryConfiguration get_BugWorkItems();
    public void set_BugWorkItems(CategoryConfiguration value);
    public CategoryConfiguration get_TestPlanWorkItems();
    public void set_TestPlanWorkItems(CategoryConfiguration value);
    public CategoryConfiguration get_TestSuiteWorkItems();
    public void set_TestSuiteWorkItems(CategoryConfiguration value);
    public CategoryConfiguration get_FeedbackRequestWorkItems();
    public void set_FeedbackRequestWorkItems(CategoryConfiguration value);
    public CategoryConfiguration get_FeedbackResponseWorkItems();
    public void set_FeedbackResponseWorkItems(CategoryConfiguration value);
    public CategoryConfiguration get_FeedbackWorkItems();
    public void set_FeedbackWorkItems(CategoryConfiguration value);
    public BacklogCategoryConfiguration[] get_PortfolioBacklogs();
    public void set_PortfolioBacklogs(BacklogCategoryConfiguration[] value);
    public BacklogCategoryConfiguration get_RequirementBacklog();
    public void set_RequirementBacklog(BacklogCategoryConfiguration value);
    public BacklogCategoryConfiguration get_TaskBacklog();
    public void set_TaskBacklog(BacklogCategoryConfiguration value);
    public TypeField[] get_TypeFields();
    public void set_TypeFields(TypeField[] value);
    public DayOfWeek[] get_Weekends();
    public void set_Weekends(DayOfWeek[] value);
    public Property[] get_Properties();
    public void set_Properties(Property[] value);
    public WorkItemColor[] get_WorkItemColors();
    public void set_WorkItemColors(WorkItemColor[] value);
    public CategoryConfiguration get_ReleaseWorkItems();
    public void set_ReleaseWorkItems(CategoryConfiguration value);
    public CategoryConfiguration get_ReleaseStageWorkItems();
    public void set_ReleaseStageWorkItems(CategoryConfiguration value);
    public CategoryConfiguration get_StageSignoffTaskWorkItems();
    public void set_StageSignoffTaskWorkItems(CategoryConfiguration value);
    [EditorBrowsableAttribute("1")]
public static ProjectProcessConfiguration FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    [EditorBrowsableAttribute("1")]
public void ToXml(XmlWriter writer, string element);
    [EditorBrowsableAttribute("1")]
public static void ToXml(XmlWriter writer, string element, ProjectProcessConfiguration obj);
}
public class Microsoft.TeamFoundation.ProcessConfiguration.Client.ProjectProcessConfigurationService : object {
    private TfsTeamProjectCollection m_teamProjectCollection;
    private ProcessConfigurationService m_internalService;
    private ProjectConfigurationServiceVersion m_version;
    public bool SupportsProcessConfiguration { get; }
    public bool SupportsProperties { get; }
    [EditorBrowsableAttribute("1")]
public ProcessConfigurationService Service { get; }
    private sealed virtual override void Microsoft.TeamFoundation.Client.ITfsTeamProjectCollectionObject.Initialize(TfsTeamProjectCollection teamProjectCollection);
    public bool get_SupportsProcessConfiguration();
    public bool get_SupportsProperties();
    public CommonProjectConfiguration GetCommonConfiguration(string projectUri);
    public void SetCommonConfiguration(string projectUri, CommonProjectConfiguration commonConfiguration);
    public void ValidateCommonConfiguration(string projectUri, CommonProjectConfiguration commonConfiguration);
    public AgileProjectConfiguration GetAgileConfiguration(string projectUri);
    public void SetAgileConfiguration(string projectUri, AgileProjectConfiguration agileConfiguration);
    public void ValidateAgileConfiguration(string projectUri, AgileProjectConfiguration agileConfiguration);
    public virtual ProjectProcessConfiguration GetProcessConfiguration(string projectUri);
    public void SetProcessConfiguration(string projectUri, ProjectProcessConfiguration processConfiguration);
    public void ValidateProcessConfiguration(string projectUri, ProjectProcessConfiguration processConfiguration);
    public ProcessConfigurationService get_Service();
}
public class Microsoft.TeamFoundation.ProcessConfiguration.Client.Property : object {
    private string m_name;
    private string m_value;
    public string Name { get; public set; }
    public string Value { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    public string get_Value();
    public void set_Value(string value);
    [EditorBrowsableAttribute("1")]
public static Property FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    [EditorBrowsableAttribute("1")]
public void ToXml(XmlWriter writer, string element);
    [EditorBrowsableAttribute("1")]
public static void ToXml(XmlWriter writer, string element, Property obj);
}
public class Microsoft.TeamFoundation.ProcessConfiguration.Client.State : object {
    private StateTypeEnum m_type;
    private string m_value;
    public StateTypeEnum Type { get; public set; }
    public string Value { get; public set; }
    public StateTypeEnum get_Type();
    public void set_Type(StateTypeEnum value);
    public string get_Value();
    public void set_Value(string value);
    [EditorBrowsableAttribute("1")]
public static State FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    [EditorBrowsableAttribute("1")]
public void ToXml(XmlWriter writer, string element);
    [EditorBrowsableAttribute("1")]
public static void ToXml(XmlWriter writer, string element, State obj);
}
public enum Microsoft.TeamFoundation.ProcessConfiguration.Client.StateTypeEnum : Enum {
    public int value__;
    public static StateTypeEnum Complete;
    public static StateTypeEnum Declined;
    public static StateTypeEnum InProgress;
    public static StateTypeEnum Proposed;
    public static StateTypeEnum Received;
    public static StateTypeEnum Requested;
    public static StateTypeEnum Resolved;
    public static StateTypeEnum Reviewed;
}
public class Microsoft.TeamFoundation.ProcessConfiguration.Client.TeamConfiguration : object {
    private bool m_isDefaultTeam;
    private string m_projectUri;
    private Guid m_teamId;
    private string m_teamName;
    private TeamSettings m_teamSettings;
    public bool IsDefaultTeam { get; }
    public string ProjectUri { get; }
    public Guid TeamId { get; }
    public string TeamName { get; }
    public TeamSettings TeamSettings { get; }
    public bool get_IsDefaultTeam();
    public string get_ProjectUri();
    public Guid get_TeamId();
    public string get_TeamName();
    public TeamSettings get_TeamSettings();
    [EditorBrowsableAttribute("1")]
public static TeamConfiguration FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    [EditorBrowsableAttribute("1")]
public void ToXml(XmlWriter writer, string element);
    [EditorBrowsableAttribute("1")]
public static void ToXml(XmlWriter writer, string element, TeamConfiguration obj);
}
internal class Microsoft.TeamFoundation.ProcessConfiguration.Client.TeamConfigurationService : TfsHttpClient {
    protected Guid CollectionServiceIdentifier { get; }
    protected string ComponentName { get; }
    protected string ServiceType { get; }
    public TeamConfigurationService(TfsTeamProjectCollection connection);
    protected virtual Guid get_CollectionServiceIdentifier();
    protected virtual string get_ComponentName();
    protected virtual string get_ServiceType();
    public TeamConfiguration[] GetTeamConfigurations(Guid[] teamIds);
    public TeamConfiguration[] GetTeamConfigurationsForUser(String[] projectUris);
    public void SetTeamSettings(Guid teamId, TeamSettings teamSettings);
}
public class Microsoft.TeamFoundation.ProcessConfiguration.Client.TeamFieldValue : object {
    private bool m_includeChildren;
    private string m_value;
    public bool IncludeChildren { get; public set; }
    public string Value { get; public set; }
    public bool get_IncludeChildren();
    public void set_IncludeChildren(bool value);
    public string get_Value();
    public void set_Value(string value);
    [EditorBrowsableAttribute("1")]
public static TeamFieldValue FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    [EditorBrowsableAttribute("1")]
public void ToXml(XmlWriter writer, string element);
    [EditorBrowsableAttribute("1")]
public static void ToXml(XmlWriter writer, string element, TeamFieldValue obj);
}
public class Microsoft.TeamFoundation.ProcessConfiguration.Client.TeamSettings : object {
    private string m_backlogIterationPath;
    private string m_currentIterationPath;
    internal String[] m_iterationPaths;
    private string m_teamField;
    internal TeamFieldValue[] m_teamFieldValues;
    public string BacklogIterationPath { get; public set; }
    public string CurrentIterationPath { get; }
    public String[] IterationPaths { get; public set; }
    public string TeamField { get; }
    public TeamFieldValue[] TeamFieldValues { get; public set; }
    public string get_BacklogIterationPath();
    public void set_BacklogIterationPath(string value);
    public string get_CurrentIterationPath();
    public String[] get_IterationPaths();
    public void set_IterationPaths(String[] value);
    public string get_TeamField();
    public TeamFieldValue[] get_TeamFieldValues();
    public void set_TeamFieldValues(TeamFieldValue[] value);
    [EditorBrowsableAttribute("1")]
public static TeamSettings FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    [EditorBrowsableAttribute("1")]
public void ToXml(XmlWriter writer, string element);
    [EditorBrowsableAttribute("1")]
public static void ToXml(XmlWriter writer, string element, TeamSettings obj);
}
public class Microsoft.TeamFoundation.ProcessConfiguration.Client.TeamSettingsConfigurationService : object {
    private TeamConfigurationService m_internalService;
    private sealed virtual override void Microsoft.TeamFoundation.Client.ITfsTeamProjectCollectionObject.Initialize(TfsTeamProjectCollection teamProjectCollection);
    public virtual IEnumerable`1<TeamConfiguration> GetTeamConfigurations(IEnumerable`1<Guid> teamIds);
    public virtual IEnumerable`1<TeamConfiguration> GetTeamConfigurationsForUser(IEnumerable`1<string> projectUris);
    public void SetTeamSettings(Guid teamId, TeamSettings settings);
}
public class Microsoft.TeamFoundation.ProcessConfiguration.Client.TypeField : Field {
    private string m_format;
    private FieldTypeEnum m_type;
    internal TypeFieldValue[] m_typeFieldValues;
    public string Format { get; public set; }
    public FieldTypeEnum Type { get; public set; }
    public TypeFieldValue[] TypeFieldValues { get; public set; }
    public string get_Format();
    public void set_Format(string value);
    public FieldTypeEnum get_Type();
    public void set_Type(FieldTypeEnum value);
    public TypeFieldValue[] get_TypeFieldValues();
    public void set_TypeFieldValues(TypeFieldValue[] value);
    [EditorBrowsableAttribute("1")]
public static TypeField FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    [EditorBrowsableAttribute("1")]
public virtual void ToXml(XmlWriter writer, string element);
    [EditorBrowsableAttribute("1")]
public static void ToXml(XmlWriter writer, string element, TypeField obj);
}
public class Microsoft.TeamFoundation.ProcessConfiguration.Client.TypeFieldValue : object {
    private string m_type;
    private string m_value;
    public string Type { get; public set; }
    public string Value { get; public set; }
    public string get_Type();
    public void set_Type(string value);
    public string get_Value();
    public void set_Value(string value);
    [EditorBrowsableAttribute("1")]
public static TypeFieldValue FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    [EditorBrowsableAttribute("1")]
public void ToXml(XmlWriter writer, string element);
    [EditorBrowsableAttribute("1")]
public static void ToXml(XmlWriter writer, string element, TypeFieldValue obj);
}
internal class Microsoft.TeamFoundation.ProcessConfiguration.Client.V2CommonProjectConfigurationConverter : CommonProjectConfigurationConverter {
    public V2CommonProjectConfigurationConverter(CommonProjectConfigurationVersion minSupportedVersion, CommonProjectConfigurationConverter nextConverter);
    public virtual void DoConversion(CommonProjectConfiguration config);
    public virtual void DoConversion(ProjectProcessConfiguration config);
}
public class Microsoft.TeamFoundation.ProcessConfiguration.Client.WorkItemCategory : object {
    private string m_categoryName;
    private string m_pluralName;
    internal State[] m_states;
    public string CategoryName { get; public set; }
    public string PluralName { get; public set; }
    public State[] States { get; public set; }
    public string get_CategoryName();
    public void set_CategoryName(string value);
    public string get_PluralName();
    public void set_PluralName(string value);
    public State[] get_States();
    public void set_States(State[] value);
    [EditorBrowsableAttribute("1")]
public static WorkItemCategory FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    [EditorBrowsableAttribute("1")]
public void ToXml(XmlWriter writer, string element);
    [EditorBrowsableAttribute("1")]
public static void ToXml(XmlWriter writer, string element, WorkItemCategory obj);
}
public class Microsoft.TeamFoundation.ProcessConfiguration.Client.WorkItemColor : object {
    private string m_primaryColor;
    private string m_secondaryColor;
    private string m_workItemTypeName;
    public string PrimaryColor { get; public set; }
    public string SecondaryColor { get; public set; }
    public string WorkItemTypeName { get; public set; }
    public string get_PrimaryColor();
    public void set_PrimaryColor(string value);
    public string get_SecondaryColor();
    public void set_SecondaryColor(string value);
    public string get_WorkItemTypeName();
    public void set_WorkItemTypeName(string value);
    [EditorBrowsableAttribute("1")]
public static WorkItemColor FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    [EditorBrowsableAttribute("1")]
public void ToXml(XmlWriter writer, string element);
    [EditorBrowsableAttribute("1")]
public static void ToXml(XmlWriter writer, string element, WorkItemColor obj);
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class Microsoft.TeamFoundation.ProjectManagement.Resources : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string OperationNotSuported { get; }
    internal static string ProcessConfigOnOldServerNotSupported { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_OperationNotSuported();
    internal static string get_ProcessConfigOnOldServerNotSupported();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
