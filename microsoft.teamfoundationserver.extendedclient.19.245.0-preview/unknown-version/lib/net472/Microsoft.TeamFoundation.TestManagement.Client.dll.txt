[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
public static class Microsoft.TeamFoundation.TestManagement.ArtifactTypeName : object {
    public static string ReleaseManagementEnvironment;
}
public static class Microsoft.TeamFoundation.TestManagement.AttachmentConstants : object {
    public static int DatabaseChunkSizeInBytes;
    public static int UploadChunkMaxFileCount;
    public static int UploadChunkSizeInBytes;
    public static string NullHashValue;
    public static int ThiryPercentPositiveRange;
    public static int FiftyPercentPositiveRange;
    public static int ThiryPercentNegativeRange;
}
public static class Microsoft.TeamFoundation.TestManagement.AttachmentUploadFields : object {
    public static string ProjectName;
    public static string TestRunId;
    public static string TestResultId;
    public static string SessionId;
    public static string AttachmentId;
    public static string UncompressedLength;
    public static string CompressionType;
    public static string HashValue;
    public static string DefaultAfnStripFlag;
    public static string Range;
    public static string File;
    public static string MultiFilesUpload;
    public static string AttachmentIds;
    public static string TestResultIds;
    public static string UncompressedLengths;
    public static string StreamLengths;
    public static string CompressionTypes;
    public static string HashValues;
    public static string DefaultAfnStripFlags;
    public static string MultiValueSeparator;
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public class Microsoft.TeamFoundation.TestManagement.Client.AccessDeniedException : TestManagementException {
    protected AccessDeniedException(SerializationInfo info, StreamingContext context);
    public AccessDeniedException(string message);
    public AccessDeniedException(string message, Exception ex);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal static class Microsoft.TeamFoundation.TestManagement.Client.ActionPathHelper : object {
    internal static int CharsPerElement;
    internal static string Prepend(string child, int actionId);
    internal static string Combine(string parent, int actionId);
    internal static int LastElementOf(string path);
    internal static int LengthOf(string path);
    internal static bool IsDescendant(string parent, string child);
    internal static bool IsValid(string path);
    [IteratorStateMachineAttribute("Microsoft.TeamFoundation.TestManagement.Client.ActionPathHelper/<ElementsOf>d__6")]
internal static IEnumerable`1<int> ElementsOf(string path);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.ActionRecordingHelper : object {
    private TestManagementTeamProject m_project;
    public ActionRecordingHelper(TestManagementTeamProject project);
    public sealed virtual ITestAttachment Create(string fileName);
    public sealed virtual ITestAttachment GetDefaultForTestCase(int testCaseId);
    public sealed virtual void SetDefaultForTestCase(int testCaseId, ITestAttachment actionRecording);
    public sealed virtual IList`1<bool> CheckActionRecordingExists(IList`1<int> testCaseIds);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.AsyncUploadHandler : object {
    private HttpWebRequest m_request;
    private Stream m_requestStream;
    private Exception m_exception;
    private Boolean modreq(System.Runtime.CompilerServices.IsVolatile) m_disposed;
    private object m_lockObjectDisposing;
    private AsyncCallback m_callback;
    private object m_state;
    private ManualResetEvent m_uploadChunkWaitHandle;
    private ManualResetEvent m_uploadAttachmentWaitHandle;
    public Exception Exception { get; }
    public object AsyncState { get; }
    public WaitHandle AsyncWaitHandle { get; }
    public bool CompletedSynchronously { get; }
    public bool IsCompleted { get; }
    public void BeginUploadAttachment(TestResultAttachment attachment);
    public void BeginUploadAttachments(IList`1<TestResultAttachment> attachments, AsyncCallback callback, object state);
    public void BeginUploadChunk(TestResultAttachment attachment, Stream contentStream, int bytesToUpload, AsyncCallback callback, object state);
    public void EndUploadAttachment();
    public void EndUploadAttachments();
    public void EndUploadChunk();
    private void PrepareUploadRequest(TestManagementTeamProject project);
    private void ExecuteUploadRequest(IList`1<MimePart> mimeParts, AsyncCallback callback, object state);
    private void RequestCallback(IAsyncResult asynchronousResult);
    private void WriteCallback(IAsyncResult asynchronousResult);
    private void LastWriteCallback(IAsyncResult asynchronousResult);
    private void ResponseCallback(IAsyncResult asynchronousResult);
    private void EndUploadInternal(WaitHandle waitHandle);
    private Exception TranslateWebException(WebException e);
    private void Fail(Exception e);
    private void Complete();
    private void UploadAttachmentThread(object state);
    public Exception get_Exception();
    public sealed virtual object get_AsyncState();
    public sealed virtual WaitHandle get_AsyncWaitHandle();
    public sealed virtual bool get_CompletedSynchronously();
    public sealed virtual bool get_IsCompleted();
    public sealed virtual void Dispose();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.AttachmentChunkMimePart : MimePart {
    public AttachmentChunkMimePart(Stream contentStream, int bytesToUpload);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.AttachmentFileHeaderMimePart : MimePart {
    public AttachmentFileHeaderMimePart(TestResultAttachment attachment);
    private void BuildData(TestResultAttachment attachment);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.AttachmentFooterMimePart : MimePart {
    private void BuildData();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.AttachmentHeaderMimePart : MimePart {
    public AttachmentHeaderMimePart(TestResultAttachment attachment, Stream contentStream, int bytesToUpload);
    private void BuildData(TestResultAttachment attachment, Stream contentStream, int bytesToUpload);
}
[DefaultMemberAttribute("Item")]
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.AttachmentList : object {
    [CompilerGeneratedAttribute]
private NotifyCollectionChangedEventHandler CollectionChanged;
    private List`1<int> m_idsToDelete;
    private List`1<TestResultAttachment> m_list;
    private TestManagementTeamProject m_teamProject;
    private IAttachmentOwnerInternal m_owner;
    public int Count { get; }
    public bool IsReadOnly { get; }
    public ITestAttachment Item { get; }
    internal TestManagementTeamProject TeamProject { get; }
    internal IAttachmentOwnerInternal Owner { get; }
    internal AttachmentList(IAttachmentOwnerInternal owner, TestManagementTeamProject teamProject, TestResultAttachment[] attachments);
    internal void PreSave(SubResults subResults, TestResultIdentity identity);
    internal void PostSave();
    public sealed virtual void Add(ITestAttachment item);
    public sealed virtual void Clear();
    public void RemoveDirtyAttachments();
    public sealed virtual bool Contains(ITestAttachment item);
    public sealed virtual void CopyTo(ITestAttachment[] array, int arrayIndex);
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual bool Remove(ITestAttachment item);
    [IteratorStateMachineAttribute("Microsoft.TeamFoundation.TestManagement.Client.AttachmentList/<GetEnumerator>d__13")]
public sealed virtual IEnumerator`1<ITestAttachment> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public sealed virtual ITestAttachment get_Item(int index);
    public sealed virtual void RemoveAt(int index);
    internal TestManagementTeamProject get_TeamProject();
    private void QueueForDeletion(TestResultAttachment attachment);
    protected void NotifyCollectionChanged(NotifyCollectionChangedEventArgs eventArgs);
    [CompilerGeneratedAttribute]
public sealed virtual void add_CollectionChanged(NotifyCollectionChangedEventHandler value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_CollectionChanged(NotifyCollectionChangedEventHandler value);
    internal IAttachmentOwnerInternal get_Owner();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.AttachmentUploadEntry : object {
    [CompilerGeneratedAttribute]
private DateTime <LastChunkSentTimeStamp>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <LastChunkAcknowledgedTimeStamp>k__BackingField;
    [CompilerGeneratedAttribute]
private PropertyChangedEventHandler PropertyChanged;
    private static string c_tagEntry;
    private TestResultAttachment m_attachment;
    private AsyncUploadHandler m_uploadHandler;
    private AttachmentUploadManager m_owner;
    private DateTime m_nextAttempt;
    private Stream m_stream;
    private int m_attachmentId;
    private int m_failureCount;
    private long m_bytesTransferred;
    private long m_length;
    private bool m_deleteAfterUpload;
    private DateTime m_fileTime;
    private DateTime m_started;
    private DateTime m_completed;
    private string m_localFileName;
    private string m_projectName;
    private UploadPauseReason m_reason;
    private string m_serverId;
    private UploadState m_state;
    private int m_testRunId;
    private int m_sessionId;
    private int m_testResultId;
    private int m_processId;
    private bool m_collectOnUploadDone;
    public ITestAttachment Attachment { get; }
    public long Length { get; }
    internal TestResultAttachment ResultAttachment { get; private set; }
    internal AsyncUploadHandler UploadHandler { get; }
    public Stream Stream { get; public set; }
    public int AttachmentId { get; }
    public int FailureCount { get; public set; }
    public DateTime DateCompleted { get; public set; }
    public DateTime DateStarted { get; public set; }
    public long BytesTransferred { get; public set; }
    public UploadState UploadState { get; public set; }
    public UploadPauseReason PauseReason { get; public set; }
    public string Server { get; public set; }
    public string ProjectName { get; public set; }
    public int TestRunId { get; public set; }
    public int SessionId { get; public set; }
    public int TestResultId { get; public set; }
    public bool IsMarkedForDeletion { get; public set; }
    public string LocalFileName { get; public set; }
    public DateTime LastChunkSentTimeStamp { get; public set; }
    public DateTime LastChunkAcknowledgedTimeStamp { get; public set; }
    internal DateTime LocalFileTime { get; internal set; }
    internal int ProcessId { get; internal set; }
    internal DateTime NextAttempt { get; internal set; }
    public bool Cleanable { get; }
    public AttachmentUploadEntry(AttachmentUploadManager owner, XmlReader reader);
    public AttachmentUploadEntry(AttachmentUploadManager owner, TestResultAttachment attachment);
    public sealed virtual ITestAttachment get_Attachment();
    public sealed virtual long get_Length();
    internal TestResultAttachment get_ResultAttachment();
    private void set_ResultAttachment(TestResultAttachment value);
    internal AsyncUploadHandler get_UploadHandler();
    public Stream get_Stream();
    public void set_Stream(Stream value);
    public int get_AttachmentId();
    public int get_FailureCount();
    public void set_FailureCount(int value);
    public sealed virtual DateTime get_DateCompleted();
    public void set_DateCompleted(DateTime value);
    public sealed virtual DateTime get_DateStarted();
    public void set_DateStarted(DateTime value);
    public sealed virtual long get_BytesTransferred();
    public void set_BytesTransferred(long value);
    public sealed virtual UploadState get_UploadState();
    public void set_UploadState(UploadState value);
    public sealed virtual UploadPauseReason get_PauseReason();
    public void set_PauseReason(UploadPauseReason value);
    public sealed virtual string get_Server();
    public void set_Server(string value);
    public sealed virtual string get_ProjectName();
    public void set_ProjectName(string value);
    public sealed virtual int get_TestRunId();
    public void set_TestRunId(int value);
    public int get_SessionId();
    public void set_SessionId(int value);
    public sealed virtual int get_TestResultId();
    public void set_TestResultId(int value);
    public sealed virtual bool get_IsMarkedForDeletion();
    public void set_IsMarkedForDeletion(bool value);
    public sealed virtual string get_LocalFileName();
    public void set_LocalFileName(string value);
    [CompilerGeneratedAttribute]
public DateTime get_LastChunkSentTimeStamp();
    [CompilerGeneratedAttribute]
public void set_LastChunkSentTimeStamp(DateTime value);
    [CompilerGeneratedAttribute]
public DateTime get_LastChunkAcknowledgedTimeStamp();
    [CompilerGeneratedAttribute]
public void set_LastChunkAcknowledgedTimeStamp(DateTime value);
    internal DateTime get_LocalFileTime();
    internal void set_LocalFileTime(DateTime value);
    internal int get_ProcessId();
    internal void set_ProcessId(int value);
    internal DateTime get_NextAttempt();
    internal void set_NextAttempt(DateTime value);
    internal void InitializeAttachment(TestManagementTeamProject project);
    public sealed virtual void Pause();
    public sealed virtual void Enqueue();
    public sealed virtual void Cancel();
    public void OpenStream();
    public void CloseStream();
    public sealed virtual void FromXml(XmlReader reader);
    public sealed virtual void ToXml(XmlWriter writer);
    public bool IsSame(AttachmentUploadEntry entry);
    public bool IsSameIdentity(AttachmentUploadEntry entry);
    internal bool UpdatePersistedFrom(AttachmentUploadEntry entry);
    public bool get_Cleanable();
    public sealed virtual void Dispose();
    public virtual string ToString();
    private string ReasonToString(UploadPauseReason reason);
    private string StateToString(UploadState state);
    private static UploadPauseReason StringToReason(string str);
    private static UploadState StringToState(string str);
    private void Setter(string property, T& oldValue, T newValue);
    [CompilerGeneratedAttribute]
public sealed virtual void add_PropertyChanged(PropertyChangedEventHandler value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_PropertyChanged(PropertyChangedEventHandler value);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.AttachmentUploadManager : object {
    [CompilerGeneratedAttribute]
private UploadManagerEventHandler Changed;
    private DateTime m_nextClearStuckSlotAttempt;
    private static string c_tagQueue;
    private static string c_attrVersion;
    private static int c_maxUploadFailureCount;
    private static int c_dispatcherSleepTime;
    private static double c_clearSlotAttemptWaitInMinutes;
    private static string c_internalName;
    private static string c_primaryFileName;
    private static string c_backupFileName;
    private static int s_processId;
    private static string m_primaryFilePath;
    private static string m_backupFilePath;
    private AutoResetEvent m_workerEvent;
    private Thread m_worker;
    private TestManagementTeamProject m_project;
    private bool m_isReady;
    private string m_tfsServer;
    private string m_tfsProject;
    private int m_updateCounter;
    private InterProcessLock m_lock;
    private string m_lastLockedFor;
    private static XmlReaderSettings s_xmlReaderSettings;
    private static XmlWriterSettings s_xmlWriterSettings;
    private static int c_maxUploads;
    private UploadSlot[] m_uploadSlots;
    private int m_version;
    private object m_entriesLock;
    private object m_sendChunkRequestLock;
    private object m_sendChunkCompletionLock;
    private object m_clearStuckSlotFlagLock;
    private List`1<AttachmentUploadEntry> m_entries;
    private Queue`1<UploadManagerEventArgs> m_changes;
    private IMeasurementBlockProxy m_mb;
    private bool m_isUploadPaused;
    private object m_isUploadPausedLock;
    internal DateTime NextStuckSlotClearAttempt { get; internal set; }
    internal int Version { get; }
    public bool UploadsPending { get; }
    public bool IsReady { get; }
    public IEnumerable`1<IAttachmentUploadEntry> Entries { get; }
    private XmlReaderSettings XmlReaderSettings { get; }
    private XmlWriterSettings XmlWriterSettings { get; }
    private string PrimaryFile { get; }
    private string BackupFile { get; }
    private bool IsUploadPaused { get; private set; }
    internal AttachmentUploadManager(TestManagementTeamProject project);
    internal DateTime get_NextStuckSlotClearAttempt();
    internal void set_NextStuckSlotClearAttempt(DateTime value);
    internal int get_Version();
    public sealed virtual bool get_UploadsPending();
    public sealed virtual bool get_IsReady();
    public sealed virtual IEnumerable`1<IAttachmentUploadEntry> get_Entries();
    public virtual string ToString();
    internal void QueueAttachment(TestResultAttachment attachment);
    public sealed virtual void AbandonAllUploads();
    public sealed virtual void RemoveCompletedEntries();
    public sealed virtual void ResumeUploads();
    public sealed virtual void PauseUploads();
    public sealed virtual long GetRemainingBytesToUpload();
    [CompilerGeneratedAttribute]
public sealed virtual void add_Changed(UploadManagerEventHandler value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_Changed(UploadManagerEventHandler value);
    public sealed virtual void FromXml(XmlReader reader);
    public sealed virtual void ToXml(XmlWriter writer);
    internal bool IsSame(AttachmentUploadManager other);
    public sealed virtual void Dispose();
    internal void QueueEntry(AttachmentUploadEntry entry);
    internal void CancelEntry(AttachmentUploadEntry entry);
    internal void PauseEntry(AttachmentUploadEntry entry);
    internal void Diagnostics(string message);
    internal void Diagnostics(string format, Object[] values);
    internal void SignalPowerResume();
    private void SystemEvents_PowerModeChanged(object sender, PowerModeChangedEventArgs e);
    private void PerformInitialUpdate();
    private XmlReaderSettings get_XmlReaderSettings();
    private XmlWriterSettings get_XmlWriterSettings();
    private void MoveBackupToPrimary();
    private void ReadFileWithRecovery();
    private void ReadFile(bool useBackup);
    private void Read();
    private void WriteFileSafely();
    private void BeginUpdate(string reason);
    private void OnFailedToGetInterProcessLock();
    private void EndUpdate();
    private bool HandleFileWriteException(Exception e);
    private void Clear();
    private bool IsCandidate(AttachmentUploadEntry entry);
    private AttachmentUploadEntry FindNewEntryToProcess();
    private AttachmentUploadEntry FindZombieUpload();
    private void PendChange(AttachmentUploadEntry entry, UploadManagerEventType eventType);
    private void QueueEntryInternal(AttachmentUploadEntry entry);
    private void PauseEntryInternal(AttachmentUploadEntry entry);
    private string get_PrimaryFile();
    private string get_BackupFile();
    private bool get_IsUploadPaused();
    private void set_IsUploadPaused(bool value);
    private void Update(int version, List`1<AttachmentUploadEntry> newEntries);
    private void SetAttachmentFor(AttachmentUploadEntry entry);
    private void OnCompletion(AttachmentUploadEntry entry);
    private void FirePendingEvents(Queue`1<UploadManagerEventArgs> events);
    private AttachmentUploadEntry FindByIdentity(AttachmentUploadEntry newEntry);
    private bool EntryExists(AttachmentUploadEntry entry);
    private static AttachmentUploadEntry FindByIdentity(List`1<AttachmentUploadEntry> entries, AttachmentUploadEntry newEntry);
    private void SendChunk(UploadSlot slot);
    private void SendChunkCompletion(IAsyncResult result);
    private UploadState GetNewStateOnCompletionFailure(AttachmentUploadEntry entry, Exception e);
    private void StampChunkUploadRequest(AttachmentUploadEntry entry);
    private void StampChunkUploadResponse(AttachmentUploadEntry entry);
    private void ReleaseSlot(UploadSlot slot);
    private void ChangeState(AttachmentUploadEntry entry, UploadState newState);
    private bool StartUpload(UploadSlot slot, AttachmentUploadEntry entry);
    private bool isRunningProcess(int id);
    private void DispatcherThread();
    private void CheckAndClearStuckSlots();
    private void ClearStuckSlots();
    private bool CheckFileTime(AttachmentUploadEntry entry);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public class Microsoft.TeamFoundation.TestManagement.Client.AttachmentUploadManagerException : TestManagementException {
    public AttachmentUploadManagerException(string message);
    public AttachmentUploadManagerException(string message, Exception innerException);
    protected AttachmentUploadManagerException(SerializationInfo info, StreamingContext context);
}
internal enum Microsoft.TeamFoundation.TestManagement.Client.AuditAction : Enum {
    public int value__;
    public static AuditAction None;
    public static AuditAction Delete;
    public static AuditAction Reset;
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.BlockedPointProperties : UpdatedProperties {
    private int m_lastTestResultId;
    private int m_lastTestRunId;
    public int LastTestResultId { get; public set; }
    public int LastTestRunId { get; public set; }
    public int get_LastTestResultId();
    public void set_LastTestResultId(int value);
    public int get_LastTestRunId();
    public void set_LastTestRunId(int value);
    internal static BlockedPointProperties FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal virtual void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, BlockedPointProperties obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.BugFieldMapping : SimpleClientObject {
    private string m_bugWorkItem;
    private Dictionary`2<GeneratedBugFields, string> m_bugFieldMapping;
    private WitHelper m_witHelper;
    private static string BugFillerMappingName;
    private static string WorkItemTypeToCreateName;
    private static string ReproStepsName;
    private static string SystemInfoName;
    private static string BuildFoundInName;
    private static string defaultReproSteps;
    private static string defaultSystemInfo;
    private static string defaultBuildFoundIn;
    private Guid m_createdBy;
    private string m_createdByName;
    private DateTime m_createdDate;
    private string m_fieldMapping;
    private DateTime m_lastUpdated;
    private Guid m_lastUpdatedBy;
    private string m_lastUpdatedByName;
    public ObjectTypes ObjectType { get; }
    public TeamFoundationIdentity CreatedBy { get; }
    public string CreatedByName { get; }
    public DateTime CreatedDate { get; internal set; }
    public TeamFoundationIdentity LastUpdatedBy { get; }
    public string LastUpdatedByName { get; }
    public DateTime LastUpdated { get; internal set; }
    public string BugWorkItem { get; public set; }
    public IDictionary`2<GeneratedBugFields, string> FieldMappings { get; }
    internal BugFieldMapping(BugFieldMappingHelper helper);
    internal BugFieldMapping(BugFieldMapping bugFieldMapping);
    private static BugFieldMapping();
    internal BugFieldMapping Convert();
    public virtual ObjectTypes get_ObjectType();
    public sealed virtual TeamFoundationIdentity get_CreatedBy();
    public sealed virtual string get_CreatedByName();
    public sealed virtual DateTime get_CreatedDate();
    internal void set_CreatedDate(DateTime value);
    public sealed virtual TeamFoundationIdentity get_LastUpdatedBy();
    public sealed virtual string get_LastUpdatedByName();
    public sealed virtual DateTime get_LastUpdated();
    internal void set_LastUpdated(DateTime value);
    public sealed virtual string get_BugWorkItem();
    public sealed virtual void set_BugWorkItem(string value);
    public sealed virtual IDictionary`2<GeneratedBugFields, string> get_FieldMappings();
    public virtual void Refresh();
    internal virtual void RefreshFrom(object source);
    internal void PostLoad(BugFieldMappingHelper helper);
    public virtual void Save();
    public sealed virtual void Export(string fileName);
    internal virtual void DeleteFromServer(DeleteAction action);
    internal virtual void OnDeletion();
    internal void SetDefaultValues();
    internal string CreateXmlFromProperties();
    internal void ConvertXmlToProperties(string xmlMapping);
    internal void Parse(XmlDocument doc, bool validate);
    internal static BugFieldMapping FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, BugFieldMapping obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.BugFieldMappingHelper : object {
    [CompilerGeneratedAttribute]
private TestManagementTeamProject <Project>k__BackingField;
    [CompilerGeneratedAttribute]
private Log <Log>k__BackingField;
    public TestManagementTeamProject Project { get; public set; }
    public Log Log { get; public set; }
    internal BugFieldMappingHelper(TestManagementTeamProject project);
    public sealed virtual IBugFieldMapping Create();
    public sealed virtual IBugFieldMapping CreateFromFile(string fileName);
    public sealed virtual IBugFieldMapping Query();
    public sealed virtual void Update(IBugFieldMapping bugFieldMapping);
    [CompilerGeneratedAttribute]
public sealed virtual TestManagementTeamProject get_Project();
    [CompilerGeneratedAttribute]
public void set_Project(TestManagementTeamProject value);
    [CompilerGeneratedAttribute]
public sealed virtual Log get_Log();
    [CompilerGeneratedAttribute]
public void set_Log(Log value);
    public sealed virtual void EnsureIdentitiesInCache(IEnumerable`1<Guid> teamFoundationIds);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.BuildConfiguration : SimpleClientObject {
    private string m_buildFlavor;
    private string m_buildPlatform;
    private string m_buildUri;
    private string m_teamProjectName;
    public ObjectTypes ObjectType { get; }
    public Uri BuildUri { get; }
    public string BuildPlatform { get; }
    public string BuildFlavor { get; }
    public string TeamProjectName { get; }
    internal BuildConfiguration(ITestRun testRun);
    internal BuildConfiguration(BuildConfiguration config);
    public virtual ObjectTypes get_ObjectType();
    public sealed virtual Uri get_BuildUri();
    public sealed virtual string get_BuildPlatform();
    public sealed virtual string get_BuildFlavor();
    public sealed virtual string get_TeamProjectName();
    public virtual void Save();
    public virtual void Refresh();
    internal virtual void DeleteFromServer(DeleteAction action);
    internal virtual void OnDeletion();
    internal static BuildConfiguration FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, BuildConfiguration obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.BuildCoverage : Coverage {
    private BuildConfiguration m_configuration;
    public IBuildConfiguration Configuration { get; public set; }
    internal BuildCoverage(BuildConfiguration configuration);
    public sealed virtual IBuildConfiguration get_Configuration();
    public void set_Configuration(IBuildConfiguration value);
    internal static BuildCoverage FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal virtual void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, BuildCoverage obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.ClientConstants : object {
    internal static string TCMFolder;
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal abstract class Microsoft.TeamFoundation.TestManagement.Client.ClientObject`1 : PropertyOwner {
    private bool m_isFetchNeeded;
    private ClientObjectIdRev`1<TKey> m_idRev;
    private IClientObjectHelper m_helper;
    private IClientObjectCollection m_collection;
    private object m_userData;
    public TKey Id { get; internal set; }
    public int Revision { get; internal set; }
    internal ClientObjectIdRev`1<TKey> IdRev { get; }
    public object UserData { get; public set; }
    public ObjectTypes ObjectType { get; }
    internal bool IsFetchNeeded { get; internal set; }
    internal IClientObjectHelper ClientObjectHelper { get; }
    internal TestManagementTeamProject Project { get; }
    private ITestManagementTeamProject Microsoft.TeamFoundation.TestManagement.Client.ITestObject<TKey>.Project { get; }
    internal Log Log { get; }
    internal IClientObjectCollection ClientObjectCollection { get; internal set; }
    internal ClientObject`1(IClientObjectHelper helper);
    internal ClientObject`1(IClientObjectHelper helper, TKey id);
    public virtual TKey get_Id();
    internal virtual void set_Id(TKey value);
    public virtual int get_Revision();
    internal virtual void set_Revision(int value);
    internal virtual ClientObjectIdRev`1<TKey> get_IdRev();
    public sealed virtual object get_UserData();
    public sealed virtual void set_UserData(object value);
    public abstract virtual ObjectTypes get_ObjectType();
    internal void PostLoad(IClientObjectHelper helper);
    public abstract virtual void Save();
    public abstract virtual void Refresh();
    public sealed virtual void Delete();
    public sealed virtual void Delete(DeleteAction action);
    internal abstract virtual void DeleteFromServer(DeleteAction action);
    internal abstract virtual void OnDeletion();
    internal void SilentRefreshFrom(object source);
    internal virtual void RefreshFrom(object source);
    protected void UserSetter(string tfIdProperty, string stringProperty, string guidProperty, Guid& oldGuidValue, Guid newGuidValue, string newStringValue, bool markDirty);
    internal bool get_IsFetchNeeded();
    internal void set_IsFetchNeeded(bool value);
    internal void FetchIfNeeded();
    internal IClientObjectHelper get_ClientObjectHelper();
    internal TestManagementTeamProject get_Project();
    private sealed virtual override ITestManagementTeamProject Microsoft.TeamFoundation.TestManagement.Client.ITestObject<TKey>.get_Project();
    internal virtual string SafeToString();
    public virtual string ToString();
    internal Log get_Log();
    internal IClientObjectCollection get_ClientObjectCollection();
    internal void set_ClientObjectCollection(IClientObjectCollection value);
    internal void EnsureIdentitiesInCache(IEnumerable`1<Guid> teamFoundationIds);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal abstract class Microsoft.TeamFoundation.TestManagement.Client.ClientObjectCollection`3 : GenericCollection`2<TInterface, TClass> {
    [CompilerGeneratedAttribute]
private ClientObjectHelper`3<TInterface, TClass, TKey> <Helper>k__BackingField;
    protected int m_pageSize;
    internal ClientObjectHelper`3<TInterface, TClass, TKey> Helper { get; private set; }
    internal ClientObjectCollection`3(ClientObjectHelper`3<TInterface, TClass, TKey> helper);
    [CompilerGeneratedAttribute]
internal ClientObjectHelper`3<TInterface, TClass, TKey> get_Helper();
    [CompilerGeneratedAttribute]
private void set_Helper(ClientObjectHelper`3<TInterface, TClass, TKey> value);
    internal void Initialize(IEnumerable`1<TClass> items);
    internal void Initialize(IEnumerable`1<TClass> items, ICollection`1<Guid> identities);
    private List`1<TClass> FindItemsInPage(TClass source);
    public sealed virtual void FetchPage(object sourceItem);
    internal virtual TKey[] Fetch(Dictionary`2<TKey, TClass> itemsByKey);
    private void EnsureIdentities(ICollection`1<Guid> identities);
    internal abstract virtual TClass[] Fetch(ClientObjectIdRev`1[] ids, TKey[]& deleted, ICollection`1& identities);
    protected virtual void InsertItem(int index, TClass item);
    protected virtual void SetItem(int index, TClass newItem);
    protected virtual void RemoveItem(int index);
    protected virtual void ClearItems();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal abstract class Microsoft.TeamFoundation.TestManagement.Client.ClientObjectHelper`3 : object {
    [CompilerGeneratedAttribute]
private TestManagementTeamProject <Project>k__BackingField;
    [CompilerGeneratedAttribute]
private Log <Log>k__BackingField;
    public TestManagementTeamProject Project { get; public set; }
    public Log Log { get; public set; }
    internal int PageSize { get; }
    internal ClientObjectHelper`3(TestManagementTeamProject project);
    public abstract virtual TInterface Create();
    [CompilerGeneratedAttribute]
public sealed virtual TestManagementTeamProject get_Project();
    [CompilerGeneratedAttribute]
public void set_Project(TestManagementTeamProject value);
    [CompilerGeneratedAttribute]
public sealed virtual Log get_Log();
    [CompilerGeneratedAttribute]
public void set_Log(Log value);
    internal virtual int get_PageSize();
    private sealed virtual override void Microsoft.TeamFoundation.TestManagement.Client.IClientObjectHelper.EnsureIdentitiesInCache(IEnumerable`1<Guid> teamFoundationIds);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.ClientObjectIdRev`1 : ValueType {
    private TKey m_id;
    private int m_revision;
    internal TKey Id { get; internal set; }
    internal int Revision { get; internal set; }
    internal ClientObjectIdRev`1(TKey id, int revision);
    internal ClientObjectIdRev`1(TKey id);
    internal static ClientObjectIdRev`1[] IdToIdRevArray(TKey[] ids);
    internal TKey get_Id();
    internal void set_Id(TKey value);
    internal int get_Revision();
    internal void set_Revision(int value);
}
public enum Microsoft.TeamFoundation.TestManagement.Client.CloneItemType : Enum {
    public byte value__;
    public static CloneItemType TestCase;
    public static CloneItemType SharedStep;
    public static CloneItemType Requirement;
    public static CloneItemType Suites;
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public class Microsoft.TeamFoundation.TestManagement.Client.CloneOperationInformation : object {
    internal TestManagementTeamProject m_project;
    private int m_clonedRequirementsCount;
    private int m_clonedSharedStepCount;
    private int m_clonedTestCaseCount;
    private DateTime m_completionDate;
    private DateTime m_creationDate;
    private string m_destinationProjectName;
    private string m_message;
    private int m_opId;
    private int m_resultObjectId;
    private string m_resultObjectName;
    private ResultObjectType m_resultObjectType;
    private int m_sourceObjectId;
    private string m_sourceObjectName;
    private int m_sourcePlanId;
    private string m_sourcePlanName;
    private string m_sourceProjectName;
    private CloneOperationState m_state;
    private int m_targetPlanId;
    private string m_targetPlanName;
    private Guid m_teamFoundationUserId;
    private string m_teamFoundationUserName;
    private int m_totalRequirementsCount;
    private int m_totalTestCaseCount;
    public TeamFoundationIdentity StartedBy { get; }
    public string StartedByName { get; }
    public int ClonedRequirementsCount { get; public set; }
    public int ClonedSharedStepCount { get; public set; }
    public int ClonedTestCaseCount { get; public set; }
    public DateTime CompletionDate { get; public set; }
    public DateTime CreationDate { get; public set; }
    public string DestinationProjectName { get; public set; }
    public string Message { get; public set; }
    public int OpId { get; public set; }
    public int ResultObjectId { get; public set; }
    public string ResultObjectName { get; public set; }
    public ResultObjectType ResultObjectType { get; public set; }
    public int SourceObjectId { get; public set; }
    public string SourceObjectName { get; public set; }
    public int SourcePlanId { get; public set; }
    public string SourcePlanName { get; public set; }
    public string SourceProjectName { get; public set; }
    public CloneOperationState State { get; public set; }
    public int TargetPlanId { get; public set; }
    public string TargetPlanName { get; public set; }
    public int TotalRequirementsCount { get; public set; }
    public int TotalTestCaseCount { get; public set; }
    public TeamFoundationIdentity get_StartedBy();
    public string get_StartedByName();
    internal void PostLoad(TestManagementTeamProject project);
    public int get_ClonedRequirementsCount();
    public void set_ClonedRequirementsCount(int value);
    public int get_ClonedSharedStepCount();
    public void set_ClonedSharedStepCount(int value);
    public int get_ClonedTestCaseCount();
    public void set_ClonedTestCaseCount(int value);
    public DateTime get_CompletionDate();
    public void set_CompletionDate(DateTime value);
    public DateTime get_CreationDate();
    public void set_CreationDate(DateTime value);
    public string get_DestinationProjectName();
    public void set_DestinationProjectName(string value);
    public string get_Message();
    public void set_Message(string value);
    public int get_OpId();
    public void set_OpId(int value);
    public int get_ResultObjectId();
    public void set_ResultObjectId(int value);
    public string get_ResultObjectName();
    public void set_ResultObjectName(string value);
    public ResultObjectType get_ResultObjectType();
    public void set_ResultObjectType(ResultObjectType value);
    public int get_SourceObjectId();
    public void set_SourceObjectId(int value);
    public string get_SourceObjectName();
    public void set_SourceObjectName(string value);
    public int get_SourcePlanId();
    public void set_SourcePlanId(int value);
    public string get_SourcePlanName();
    public void set_SourcePlanName(string value);
    public string get_SourceProjectName();
    public void set_SourceProjectName(string value);
    public CloneOperationState get_State();
    public void set_State(CloneOperationState value);
    public int get_TargetPlanId();
    public void set_TargetPlanId(int value);
    public string get_TargetPlanName();
    public void set_TargetPlanName(string value);
    public int get_TotalRequirementsCount();
    public void set_TotalRequirementsCount(int value);
    public int get_TotalTestCaseCount();
    public void set_TotalTestCaseCount(int value);
    [EditorBrowsableAttribute("1")]
public static CloneOperationInformation FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    [EditorBrowsableAttribute("1")]
public void ToXml(XmlWriter writer, string element);
    [EditorBrowsableAttribute("1")]
public static void ToXml(XmlWriter writer, string element, CloneOperationInformation obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public enum Microsoft.TeamFoundation.TestManagement.Client.CloneOperationState : Enum {
    public int value__;
    public static CloneOperationState Failed;
    public static CloneOperationState InProgress;
    public static CloneOperationState Queued;
    public static CloneOperationState Succeeded;
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public class Microsoft.TeamFoundation.TestManagement.Client.CloneOptions : object {
    private bool m_cloneRequirements;
    private bool m_copyAllSuites;
    private bool m_copyAncestorHierarchy;
    private string m_destinationWorkItemType;
    internal NameValuePair[] m_overrideFieldDetails;
    private string m_overrideFieldName;
    private string m_overrideFieldValue;
    private string m_relatedLinkComment;
    public bool CloneRequirements { get; public set; }
    public bool CopyAllSuites { get; public set; }
    public bool CopyAncestorHierarchy { get; public set; }
    public string DestinationWorkItemType { get; public set; }
    public NameValuePair[] OverrideFieldDetails { get; public set; }
    public string OverrideFieldName { get; public set; }
    public string OverrideFieldValue { get; public set; }
    public string RelatedLinkComment { get; public set; }
    public bool get_CloneRequirements();
    public void set_CloneRequirements(bool value);
    public bool get_CopyAllSuites();
    public void set_CopyAllSuites(bool value);
    public bool get_CopyAncestorHierarchy();
    public void set_CopyAncestorHierarchy(bool value);
    public string get_DestinationWorkItemType();
    public void set_DestinationWorkItemType(string value);
    public NameValuePair[] get_OverrideFieldDetails();
    public void set_OverrideFieldDetails(NameValuePair[] value);
    public string get_OverrideFieldName();
    public void set_OverrideFieldName(string value);
    public string get_OverrideFieldValue();
    public void set_OverrideFieldValue(string value);
    public string get_RelatedLinkComment();
    public void set_RelatedLinkComment(string value);
    [EditorBrowsableAttribute("1")]
public static CloneOptions FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    [EditorBrowsableAttribute("1")]
public void ToXml(XmlWriter writer, string element);
    [EditorBrowsableAttribute("1")]
public static void ToXml(XmlWriter writer, string element, CloneOptions obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.CompatHelper : object {
    private ServerVersion m_version;
    private static CompatHelper s_instance;
    public static CompatHelper Instance { get; }
    public ServerVersion ServerVersion { get; }
    public bool IsDev10Server { get; }
    private static CompatHelper();
    public static CompatHelper get_Instance();
    public ServerVersion get_ServerVersion();
    public bool get_IsDev10Server();
    public void Initialize(ServerVersion version);
    public void Cleanup();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.Coverage : object {
    protected string m_lastError;
    internal ModuleCoverage[] m_modules;
    protected byte m_state;
    public IModuleCoverage[] Modules { get; public set; }
    public CoverageState State { get; public set; }
    public string LastError { get; public set; }
    public sealed virtual IModuleCoverage[] get_Modules();
    public void set_Modules(IModuleCoverage[] value);
    public sealed virtual CoverageState get_State();
    public void set_State(CoverageState value);
    public sealed virtual string get_LastError();
    public void set_LastError(string value);
    internal static Coverage FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal virtual void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, Coverage obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.CoverageAnalysisManager : object {
    private TestManagementTeamProject m_project;
    internal CoverageAnalysisManager(TestManagementTeamProject project);
    public sealed virtual IBuildCoverage[] QueryBuildCoverage(string buildUri, CoverageQueryFlags flags);
    public sealed virtual ITestRunCoverage[] QueryTestRunCoverage(int testRunId, CoverageQueryFlags flags);
}
[FlagsAttribute]
public enum Microsoft.TeamFoundation.TestManagement.Client.CoverageQueryFlags : Enum {
    public int value__;
    public static CoverageQueryFlags Modules;
    public static CoverageQueryFlags Functions;
    public static CoverageQueryFlags BlockData;
}
public enum Microsoft.TeamFoundation.TestManagement.Client.CoverageState : Enum {
    public int value__;
    public static CoverageState Completed;
    public static CoverageState Pending;
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.CoverageStatistics : object {
    private int m_blocksCovered;
    private int m_blocksNotCovered;
    private int m_linesCovered;
    private int m_linesNotCovered;
    private int m_linesPartiallyCovered;
    public int BlocksCovered { get; public set; }
    public int BlocksNotCovered { get; public set; }
    public int LinesCovered { get; public set; }
    public int LinesNotCovered { get; public set; }
    public int LinesPartiallyCovered { get; public set; }
    public sealed virtual int get_BlocksCovered();
    public void set_BlocksCovered(int value);
    public sealed virtual int get_BlocksNotCovered();
    public void set_BlocksNotCovered(int value);
    public sealed virtual int get_LinesCovered();
    public void set_LinesCovered(int value);
    public sealed virtual int get_LinesNotCovered();
    public void set_LinesNotCovered(int value);
    public sealed virtual int get_LinesPartiallyCovered();
    public void set_LinesPartiallyCovered(int value);
    internal static CoverageStatistics FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, CoverageStatistics obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.CssStylesheet : object {
    private List`1<StyleDefinition> _styleDefinitions;
    public CssStylesheet(XmlElement htmlElement);
    public void DiscoverStyleDefinitions(XmlElement htmlElement);
    private string RemoveComments(string text);
    public void AddStyleDefinition(string selector, string definition);
    public string GetStyle(string elementName, List`1<XmlElement> sourceContext);
    private bool MatchSelectorLevel(string selectorLevel, XmlElement xmlElement);
}
internal enum Microsoft.TeamFoundation.TestManagement.Client.DatabaseConstants : Enum {
    public int value__;
    public static DatabaseConstants None;
    public static DatabaseConstants MaximumSuiteHierarchyDepth;
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.DataCollectorHelper : object {
    private TestManagementService m_service;
    private Guid TpcRoot { get; }
    internal DataCollectorHelper(TestManagementService service);
    public sealed virtual IDataCollectorInformation Create();
    public sealed virtual IDataCollectorInformationCollection Query();
    public sealed virtual IDataCollectorInformation Find(Uri uri);
    public sealed virtual void Register(IEnumerable`1<IDataCollectorInformation> dataCollectors);
    private static DataCollectorInformation[] PreSave(IEnumerable`1<IDataCollectorInformation> dataCollectors);
    private static void CheckIdsNull(DataCollectorInformation[] collectors);
    private static void CheckIdsNotNull(DataCollectorInformation[] collectors);
    public sealed virtual void Unregister(IEnumerable`1<IDataCollectorInformation> dataCollectors);
    public sealed virtual void Update(IEnumerable`1<IDataCollectorInformation> dataCollectors);
    private Guid get_TpcRoot();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.DataCollectorInformation : PropertyOwner {
    private DataCollectorHelper m_helper;
    private string m_assemblyQualifiedName;
    private Uri m_configurationEditorTypeUri;
    private Uri m_configurationHelpUri;
    private string m_displayName;
    private bool m_isEnabledByDefault;
    private bool m_isEnabledOnCollectionOnlyAgents;
    private bool m_requiresOutOfProcessCollection;
    private Dictionary`2<string, string> m_userProperties;
    private static string PropertyName_AssemblyQualifiedName;
    private static string PropertyName_ConfigurationEditorConfiguration;
    private static string PropertyName_ConfigurationEditorTypeUri;
    private static string PropertyName_ConfigurationHelpUri;
    private static string PropertyName_DefaultConfiguration;
    private static string PropertyName_DisplayName;
    private static string PropertyName_IsEnabledByDefault;
    private static string PropertyName_IsEnabledOnCollectionOnlyAgents;
    private static string PropertyName_RequiresOutOfProcessCollection;
    private XmlNode m_configurationEditorConfiguration;
    private XmlNode m_defaultConfiguration;
    private string m_description;
    private Guid m_id;
    internal NameValuePair[] m_properties;
    private string m_typeUri;
    public Guid Id { get; }
    public Uri TypeUri { get; public set; }
    public string DisplayName { get; public set; }
    public string Description { get; public set; }
    public string AssemblyQualifiedName { get; public set; }
    public bool IsEnabledOnCollectionOnlyAgents { get; public set; }
    public bool IsEnabledByDefault { get; public set; }
    public bool RequiresOutOfProcessCollection { get; public set; }
    public XmlElement DefaultConfiguration { get; public set; }
    public Uri ConfigurationEditorTypeUri { get; public set; }
    public Uri ConfigurationHelpUri { get; public set; }
    public XmlElement ConfigurationEditorConfiguration { get; public set; }
    public IDictionary`2<string, string> Properties { get; }
    internal DataCollectorInformation(DataCollectorHelper helper);
    internal DataCollectorInformation(DataCollectorInformation dataCollectorInformation);
    internal DataCollectorInformation Convert();
    public sealed virtual Guid get_Id();
    public sealed virtual void Register();
    public sealed virtual void Unregister();
    public sealed virtual void Update();
    public sealed virtual Uri get_TypeUri();
    public sealed virtual void set_TypeUri(Uri value);
    public sealed virtual string get_DisplayName();
    public sealed virtual void set_DisplayName(string value);
    public sealed virtual string get_Description();
    public sealed virtual void set_Description(string value);
    public sealed virtual string get_AssemblyQualifiedName();
    public sealed virtual void set_AssemblyQualifiedName(string value);
    public sealed virtual bool get_IsEnabledOnCollectionOnlyAgents();
    public sealed virtual void set_IsEnabledOnCollectionOnlyAgents(bool value);
    public sealed virtual bool get_IsEnabledByDefault();
    public sealed virtual void set_IsEnabledByDefault(bool value);
    public sealed virtual bool get_RequiresOutOfProcessCollection();
    public sealed virtual void set_RequiresOutOfProcessCollection(bool value);
    public sealed virtual XmlElement get_DefaultConfiguration();
    public sealed virtual void set_DefaultConfiguration(XmlElement value);
    public sealed virtual Uri get_ConfigurationEditorTypeUri();
    public sealed virtual void set_ConfigurationEditorTypeUri(Uri value);
    public sealed virtual Uri get_ConfigurationHelpUri();
    public sealed virtual void set_ConfigurationHelpUri(Uri value);
    public sealed virtual XmlElement get_ConfigurationEditorConfiguration();
    public sealed virtual void set_ConfigurationEditorConfiguration(XmlElement value);
    public sealed virtual IDictionary`2<string, string> get_Properties();
    internal void PostLoad(DataCollectorHelper helper);
    internal void PreSave();
    internal void PostSave(DataCollectorInformation newInfo);
    private void PackProperties();
    private void UnpackProperties();
    internal static DataCollectorInformation FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, DataCollectorInformation obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.DataCollectorInformationCollection : GenericCollection`2<IDataCollectorInformation, DataCollectorInformation> {
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.DefaultAfnStripBinding : object {
    private int m_testCaseId;
    private int m_testResultId;
    private int m_testRunId;
    internal int TestResultId { get; }
    internal int TestRunId { get; }
    internal int TestCaseId { get; }
    internal DefaultAfnStripBinding(int testCaseId, int testRunId, int testResultId);
    internal int get_TestResultId();
    internal int get_TestRunId();
    internal int get_TestCaseId();
    internal static DefaultAfnStripBinding FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, DefaultAfnStripBinding obj);
}
public enum Microsoft.TeamFoundation.TestManagement.Client.DeleteAction : Enum {
    public int value__;
    public static DeleteAction None;
    public static DeleteAction ForceDeletion;
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.DynamicTestSuite : DynamicTestSuiteBase {
    private string m_queryString;
    private ITestCaseQuery m_query;
    public ITestCaseQuery Query { get; public set; }
    public TestSuiteType TestSuiteType { get; }
    internal DynamicTestSuite(TestSuiteHelper helper, TestPlan plan);
    protected internal DynamicTestSuite(TestSuiteHelper helper, TestPlan plan, int id, bool isPartial);
    public sealed virtual ITestCaseQuery get_Query();
    public sealed virtual void set_Query(ITestCaseQuery value);
    public virtual TestSuiteType get_TestSuiteType();
    internal virtual void CopyPropertiesFromServerSuite(ServerTestSuite serverSuite);
    protected internal virtual ServerTestSuite PreSave();
    internal virtual void Validate();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal abstract class Microsoft.TeamFoundation.TestManagement.Client.DynamicTestSuiteBase : TestSuite {
    private DateTime m_lastPopulate;
    private string m_lastError;
    private static List`1<TestSuite> s_emptySuiteList;
    public DateTime LastPopulated { get; }
    public string LastError { get; }
    internal DynamicTestSuiteBase(TestSuiteHelper helper, TestPlan plan);
    protected internal DynamicTestSuiteBase(TestSuiteHelper helper, TestPlan plan, int id, bool isPartial);
    private static DynamicTestSuiteBase();
    public sealed virtual DateTime get_LastPopulated();
    public sealed virtual string get_LastError();
    public sealed virtual void Repopulate();
    internal virtual void CopyPropertiesFromServerSuite(ServerTestSuite serverSuite);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public enum Microsoft.TeamFoundation.TestManagement.Client.EnvironmentParentTypes : Enum {
    public int value__;
    public static EnvironmentParentTypes TeamProject;
    public static EnvironmentParentTypes TestController;
}
public enum Microsoft.TeamFoundation.TestManagement.Client.FailureAnalysisClassification : Enum {
    public int value__;
    public static FailureAnalysisClassification None;
    public static FailureAnalysisClassification Critical;
    public static FailureAnalysisClassification System;
    public static FailureAnalysisClassification Discounted;
}
public enum Microsoft.TeamFoundation.TestManagement.Client.FailureType : Enum {
    public int value__;
    public static FailureType None;
    public static FailureType Regression;
    public static FailureType NewIssue;
    public static FailureType KnownIssue;
    public static FailureType Unknown;
    public static FailureType NullValue;
    public static FailureType MaxValue;
}
[DefaultMemberAttribute("Item")]
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.FilteredAttachmentList : object {
    [CompilerGeneratedAttribute]
private NotifyCollectionChangedEventHandler CollectionChanged;
    private AttachmentCollection m_ownerCollection;
    private List`1<TestCaseAttachment> m_attachments;
    private ITestManagementTeamProject m_project;
    private bool m_connected;
    private string m_metaString;
    internal List`1<TestCaseAttachment> Attachments { get; }
    public ITestAttachment Item { get; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    internal bool Connected { get; internal set; }
    public FilteredAttachmentList(string tag, AttachmentCollection ownerCollection, bool connected, ITestManagementTeamProject project);
    internal List`1<TestCaseAttachment> get_Attachments();
    public int IndexOf(ITestAttachment item);
    public sealed virtual void RemoveAt(int index);
    private void RemoveFromOwner(TestCaseAttachment attachment);
    private void AddToOwner(TestCaseAttachment attachment);
    public sealed virtual ITestAttachment get_Item(int index);
    public sealed virtual void Add(ITestAttachment item);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(ITestAttachment item);
    public sealed virtual void CopyTo(ITestAttachment[] array, int arrayIndex);
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual bool Remove(ITestAttachment item);
    [IteratorStateMachineAttribute("Microsoft.TeamFoundation.TestManagement.Client.FilteredAttachmentList/<System-Collections-IEnumerable-GetEnumerator>d__18")]
private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    [IteratorStateMachineAttribute("Microsoft.TeamFoundation.TestManagement.Client.FilteredAttachmentList/<GetEnumerator>d__19")]
public sealed virtual IEnumerator`1<ITestAttachment> GetEnumerator();
    private TestCaseAttachment CreateWrapper(Attachment attachment);
    internal bool get_Connected();
    internal void set_Connected(bool value);
    private void AddListedToOwner();
    internal void RemoveListedFromOwner();
    protected void NotifyCollectionChanged(NotifyCollectionChangedEventArgs eventArgs);
    [CompilerGeneratedAttribute]
public sealed virtual void add_CollectionChanged(NotifyCollectionChangedEventHandler value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_CollectionChanged(NotifyCollectionChangedEventHandler value);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.FunctionCoverage : object {
    private string m_class;
    private string m_name;
    private string m_namespace;
    private string m_sourceFile;
    private CoverageStatistics m_statistics;
    public ICoverageStatistics Statistics { get; public set; }
    public string Class { get; public set; }
    public string Name { get; public set; }
    public string Namespace { get; public set; }
    public string SourceFile { get; public set; }
    public sealed virtual ICoverageStatistics get_Statistics();
    public void set_Statistics(ICoverageStatistics value);
    public sealed virtual string get_Class();
    public void set_Class(string value);
    public sealed virtual string get_Name();
    public void set_Name(string value);
    public sealed virtual string get_Namespace();
    public void set_Namespace(string value);
    public sealed virtual string get_SourceFile();
    public void set_SourceFile(string value);
    internal static FunctionCoverage FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, FunctionCoverage obj);
}
public enum Microsoft.TeamFoundation.TestManagement.Client.GeneratedBugFields : Enum {
    public int value__;
    public static GeneratedBugFields None;
    public static GeneratedBugFields ReproSteps;
    public static GeneratedBugFields SystemInfo;
    public static GeneratedBugFields BuildFoundIn;
}
[DefaultMemberAttribute("Item")]
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.GenericCollection`2 : object {
    [CompilerGeneratedAttribute]
private NotifyCollectionChangedEventHandler CollectionChanged;
    [CompilerGeneratedAttribute]
private PropertyChangedEventHandler PropertyChanged;
    private bool m_isReadOnly;
    private List`1<TClass> m_list;
    private object m_sync;
    public object SyncRoot { get; }
    internal bool IsReadOnly { get; internal set; }
    private bool System.Collections.Generic.ICollection<TInterface>.IsReadOnly { get; }
    internal TClass Item { get; internal set; }
    private TInterface System.Collections.Generic.IList<TInterface>.Item { get; private set; }
    public int Count { get; }
    internal IEnumerable`1<TClass> InnerItems { get; }
    private bool System.Collections.ICollection.IsSynchronized { get; }
    private object System.Collections.ICollection.SyncRoot { get; }
    private bool System.Collections.IList.IsFixedSize { get; }
    private bool System.Collections.IList.IsReadOnly { get; }
    private object System.Collections.IList.Item { get; private set; }
    internal GenericCollection`2(IEnumerable`1<TClass> items);
    internal TClass[] ToArray();
    public sealed virtual object get_SyncRoot();
    internal bool get_IsReadOnly();
    internal void set_IsReadOnly(bool value);
    private sealed virtual override bool System.Collections.Generic.ICollection<TInterface>.get_IsReadOnly();
    public sealed virtual int IndexOf(TInterface item);
    public sealed virtual void Insert(int index, TInterface item);
    public sealed virtual void RemoveAt(int index);
    public sealed virtual void Move(int fromIndex, int toIndex);
    internal TClass get_Item(int index);
    internal void set_Item(int index, TClass value);
    private sealed virtual override TInterface System.Collections.Generic.IList<TInterface>.get_Item(int index);
    private sealed virtual override void System.Collections.Generic.IList<TInterface>.set_Item(int index, TInterface value);
    internal void AddRange(IEnumerable`1<TClass> items);
    public sealed virtual void Add(TInterface item);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(TInterface item);
    public sealed virtual void CopyTo(TInterface[] array, int arrayIndex);
    public sealed virtual int get_Count();
    public sealed virtual bool Remove(TInterface item);
    [IteratorStateMachineAttribute("Microsoft.TeamFoundation.TestManagement.Client.GenericCollection`2/<get_InnerItems>d__29")]
internal IEnumerable`1<TClass> get_InnerItems();
    public sealed virtual IEnumerator`1<TInterface> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override void System.Collections.ICollection.CopyTo(Array array, int index);
    private sealed virtual override bool System.Collections.ICollection.get_IsSynchronized();
    private sealed virtual override object System.Collections.ICollection.get_SyncRoot();
    private sealed virtual override int System.Collections.IList.Add(object value);
    private sealed virtual override void System.Collections.IList.Clear();
    private sealed virtual override bool System.Collections.IList.Contains(object value);
    private sealed virtual override int System.Collections.IList.IndexOf(object value);
    private sealed virtual override void System.Collections.IList.Insert(int index, object value);
    private sealed virtual override bool System.Collections.IList.get_IsFixedSize();
    private sealed virtual override bool System.Collections.IList.get_IsReadOnly();
    private sealed virtual override void System.Collections.IList.Remove(object value);
    private sealed virtual override void System.Collections.IList.RemoveAt(int index);
    private sealed virtual override object System.Collections.IList.get_Item(int index);
    private sealed virtual override void System.Collections.IList.set_Item(int index, object value);
    protected virtual void ClearItems();
    protected virtual void InsertItem(int index, TClass item);
    protected virtual void MoveItem(int fromIndex, int toIndex);
    protected virtual void RemoveItem(int index);
    protected virtual void SetItem(int index, TClass newItem);
    [CompilerGeneratedAttribute]
public sealed virtual void add_CollectionChanged(NotifyCollectionChangedEventHandler value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_CollectionChanged(NotifyCollectionChangedEventHandler value);
    private void AttemptWrite();
    internal void NotifyPropertyChanged(string property);
    [CompilerGeneratedAttribute]
public sealed virtual void add_PropertyChanged(PropertyChangedEventHandler value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_PropertyChanged(PropertyChangedEventHandler value);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.GenericCollectionEnumerator`2 : object {
    private int m_current;
    private GenericCollection`2<TInterface, TClass> m_container;
    public TInterface Current { get; }
    private object System.Collections.IEnumerator.Current { get; }
    internal GenericCollectionEnumerator`2(GenericCollection`2<TInterface, TClass> container);
    public sealed virtual TInterface get_Current();
    private sealed virtual override object System.Collections.IEnumerator.get_Current();
    public sealed virtual bool MoveNext();
    public sealed virtual void Reset();
    public sealed virtual void Dispose();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal static class Microsoft.TeamFoundation.TestManagement.Client.Helper : object {
    internal static Int32[][] ZeroLengthArrayOfArrayOfInt32 { get; }
    internal static BlockedPointProperties[] ZeroLengthArrayOfBlockedPointProperties { get; }
    internal static Boolean[] ZeroLengthArrayOfBoolean { get; }
    internal static BuildCoverage[] ZeroLengthArrayOfBuildCoverage { get; }
    internal static CloneOperationInformation[] ZeroLengthArrayOfCloneOperationInformation { get; }
    internal static DataCollectorInformation[] ZeroLengthArrayOfDataCollectorInformation { get; }
    internal static DefaultAfnStripBinding[] ZeroLengthArrayOfDefaultAfnStripBinding { get; }
    internal static FunctionCoverage[] ZeroLengthArrayOfFunctionCoverage { get; }
    internal static IdAndRev[] ZeroLengthArrayOfIdAndRev { get; }
    internal static ImpactedPoint[] ZeroLengthArrayOfImpactedPoint { get; }
    internal static Int32[] ZeroLengthArrayOfInt32 { get; }
    internal static MachineRole[] ZeroLengthArrayOfMachineRole { get; }
    internal static ModuleCoverage[] ZeroLengthArrayOfModuleCoverage { get; }
    internal static NameValuePair[] ZeroLengthArrayOfNameValuePair { get; }
    internal static Object[] ZeroLengthArrayOfObject { get; }
    internal static ResultUpdateRequest[] ZeroLengthArrayOfResultUpdateRequest { get; }
    internal static ResultUpdateResponse[] ZeroLengthArrayOfResultUpdateResponse { get; }
    internal static ServerTestSuite[] ZeroLengthArrayOfServerTestSuite { get; }
    internal static Session[] ZeroLengthArrayOfSession { get; }
    internal static SessionBookmark[] ZeroLengthArrayOfSessionBookmark { get; }
    internal static SessionNote[] ZeroLengthArrayOfSessionNote { get; }
    internal static SkinnyPlan[] ZeroLengthArrayOfSkinnyPlan { get; }
    internal static String[] ZeroLengthArrayOfString { get; }
    internal static SuiteIdAndType[] ZeroLengthArrayOfSuiteIdAndType { get; }
    internal static SuitePointCount[] ZeroLengthArrayOfSuitePointCount { get; }
    internal static TestActionResult[] ZeroLengthArrayOfTestActionResult { get; }
    internal static TestCaseAndOwner[] ZeroLengthArrayOfTestCaseAndOwner { get; }
    internal static TestCaseResult[] ZeroLengthArrayOfTestCaseResult { get; }
    internal static TestCaseResultIdAndRev[] ZeroLengthArrayOfTestCaseResultIdAndRev { get; }
    internal static TestCaseResultIdentifier[] ZeroLengthArrayOfTestCaseResultIdentifier { get; }
    internal static TestConfiguration[] ZeroLengthArrayOfTestConfiguration { get; }
    internal static TestController[] ZeroLengthArrayOfTestController { get; }
    internal static TestEnvironment[] ZeroLengthArrayOfTestEnvironment { get; }
    internal static TestExternalLink[] ZeroLengthArrayOfTestExternalLink { get; }
    internal static TestFailureType[] ZeroLengthArrayOfTestFailureType { get; }
    internal static TestMessageLogEntry[] ZeroLengthArrayOfTestMessageLogEntry { get; }
    internal static TestPlan[] ZeroLengthArrayOfTestPlan { get; }
    internal static TestPoint[] ZeroLengthArrayOfTestPoint { get; }
    internal static TestPointAssignment[] ZeroLengthArrayOfTestPointAssignment { get; }
    internal static TestPointStatistic[] ZeroLengthArrayOfTestPointStatistic { get; }
    internal static TestPointStatisticPivotItem[] ZeroLengthArrayOfTestPointStatisticPivotItem { get; }
    internal static TestPointStatisticsByPivotType[] ZeroLengthArrayOfTestPointStatisticsByPivotType { get; }
    internal static TestPointStatisticsQueryPivotType[] ZeroLengthArrayOfTestPointStatisticsQueryPivotType { get; }
    internal static TestResolutionState[] ZeroLengthArrayOfTestResolutionState { get; }
    internal static TestResultAttachment[] ZeroLengthArrayOfTestResultAttachment { get; }
    internal static TestResultAttachmentIdentity[] ZeroLengthArrayOfTestResultAttachmentIdentity { get; }
    internal static TestResultParameter[] ZeroLengthArrayOfTestResultParameter { get; }
    internal static TestRun[] ZeroLengthArrayOfTestRun { get; }
    internal static TestRunCoverage[] ZeroLengthArrayOfTestRunCoverage { get; }
    internal static TestRunStatistic[] ZeroLengthArrayOfTestRunStatistic { get; }
    internal static TestSettings[] ZeroLengthArrayOfTestSettings { get; }
    internal static TestSettingsMachineRole[] ZeroLengthArrayOfTestSettingsMachineRole { get; }
    internal static TestSuiteEntry[] ZeroLengthArrayOfTestSuiteEntry { get; }
    internal static TestVariable[] ZeroLengthArrayOfTestVariable { get; }
    internal static UpdatedProperties[] ZeroLengthArrayOfUpdatedProperties { get; }
    internal static Int32[][] get_ZeroLengthArrayOfArrayOfInt32();
    internal static BlockedPointProperties[] get_ZeroLengthArrayOfBlockedPointProperties();
    internal static Boolean[] get_ZeroLengthArrayOfBoolean();
    internal static BuildCoverage[] get_ZeroLengthArrayOfBuildCoverage();
    internal static CloneOperationInformation[] get_ZeroLengthArrayOfCloneOperationInformation();
    internal static DataCollectorInformation[] get_ZeroLengthArrayOfDataCollectorInformation();
    internal static DefaultAfnStripBinding[] get_ZeroLengthArrayOfDefaultAfnStripBinding();
    internal static FunctionCoverage[] get_ZeroLengthArrayOfFunctionCoverage();
    internal static IdAndRev[] get_ZeroLengthArrayOfIdAndRev();
    internal static ImpactedPoint[] get_ZeroLengthArrayOfImpactedPoint();
    internal static Int32[] get_ZeroLengthArrayOfInt32();
    internal static MachineRole[] get_ZeroLengthArrayOfMachineRole();
    internal static ModuleCoverage[] get_ZeroLengthArrayOfModuleCoverage();
    internal static NameValuePair[] get_ZeroLengthArrayOfNameValuePair();
    internal static Object[] get_ZeroLengthArrayOfObject();
    internal static ResultUpdateRequest[] get_ZeroLengthArrayOfResultUpdateRequest();
    internal static ResultUpdateResponse[] get_ZeroLengthArrayOfResultUpdateResponse();
    internal static ServerTestSuite[] get_ZeroLengthArrayOfServerTestSuite();
    internal static Session[] get_ZeroLengthArrayOfSession();
    internal static SessionBookmark[] get_ZeroLengthArrayOfSessionBookmark();
    internal static SessionNote[] get_ZeroLengthArrayOfSessionNote();
    internal static SkinnyPlan[] get_ZeroLengthArrayOfSkinnyPlan();
    internal static String[] get_ZeroLengthArrayOfString();
    internal static SuiteIdAndType[] get_ZeroLengthArrayOfSuiteIdAndType();
    internal static SuitePointCount[] get_ZeroLengthArrayOfSuitePointCount();
    internal static TestActionResult[] get_ZeroLengthArrayOfTestActionResult();
    internal static TestCaseAndOwner[] get_ZeroLengthArrayOfTestCaseAndOwner();
    internal static TestCaseResult[] get_ZeroLengthArrayOfTestCaseResult();
    internal static TestCaseResultIdAndRev[] get_ZeroLengthArrayOfTestCaseResultIdAndRev();
    internal static TestCaseResultIdentifier[] get_ZeroLengthArrayOfTestCaseResultIdentifier();
    internal static TestConfiguration[] get_ZeroLengthArrayOfTestConfiguration();
    internal static TestController[] get_ZeroLengthArrayOfTestController();
    internal static TestEnvironment[] get_ZeroLengthArrayOfTestEnvironment();
    internal static TestExternalLink[] get_ZeroLengthArrayOfTestExternalLink();
    internal static TestFailureType[] get_ZeroLengthArrayOfTestFailureType();
    internal static TestMessageLogEntry[] get_ZeroLengthArrayOfTestMessageLogEntry();
    internal static TestPlan[] get_ZeroLengthArrayOfTestPlan();
    internal static TestPoint[] get_ZeroLengthArrayOfTestPoint();
    internal static TestPointAssignment[] get_ZeroLengthArrayOfTestPointAssignment();
    internal static TestPointStatistic[] get_ZeroLengthArrayOfTestPointStatistic();
    internal static TestPointStatisticPivotItem[] get_ZeroLengthArrayOfTestPointStatisticPivotItem();
    internal static TestPointStatisticsByPivotType[] get_ZeroLengthArrayOfTestPointStatisticsByPivotType();
    internal static TestPointStatisticsQueryPivotType[] get_ZeroLengthArrayOfTestPointStatisticsQueryPivotType();
    internal static TestResolutionState[] get_ZeroLengthArrayOfTestResolutionState();
    internal static TestResultAttachment[] get_ZeroLengthArrayOfTestResultAttachment();
    internal static TestResultAttachmentIdentity[] get_ZeroLengthArrayOfTestResultAttachmentIdentity();
    internal static TestResultParameter[] get_ZeroLengthArrayOfTestResultParameter();
    internal static TestRun[] get_ZeroLengthArrayOfTestRun();
    internal static TestRunCoverage[] get_ZeroLengthArrayOfTestRunCoverage();
    internal static TestRunStatistic[] get_ZeroLengthArrayOfTestRunStatistic();
    internal static TestSettings[] get_ZeroLengthArrayOfTestSettings();
    internal static TestSettingsMachineRole[] get_ZeroLengthArrayOfTestSettingsMachineRole();
    internal static TestSuiteEntry[] get_ZeroLengthArrayOfTestSuiteEntry();
    internal static TestVariable[] get_ZeroLengthArrayOfTestVariable();
    internal static UpdatedProperties[] get_ZeroLengthArrayOfUpdatedProperties();
    internal static Int32[][] ArrayOfArrayOfInt32FromXml(XmlReader reader, bool inline);
    internal static BlockedPointProperties[] ArrayOfBlockedPointPropertiesFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static Boolean[] ArrayOfBooleanFromXml(XmlReader reader, bool inline);
    internal static BuildCoverage[] ArrayOfBuildCoverageFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static CloneOperationInformation[] ArrayOfCloneOperationInformationFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static DataCollectorInformation[] ArrayOfDataCollectorInformationFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static DefaultAfnStripBinding[] ArrayOfDefaultAfnStripBindingFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static FunctionCoverage[] ArrayOfFunctionCoverageFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static IdAndRev[] ArrayOfIdAndRevFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static ImpactedPoint[] ArrayOfImpactedPointFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static Int32[] ArrayOfInt32FromXml(XmlReader reader, bool inline);
    internal static Int32[] ArrayOfInt32FromXml(XmlReader reader);
    internal static MachineRole[] ArrayOfMachineRoleFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static ModuleCoverage[] ArrayOfModuleCoverageFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static NameValuePair[] ArrayOfNameValuePairFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static Object[] ArrayOfObjectFromXml(XmlReader reader, bool inline);
    internal static ResultUpdateRequest[] ArrayOfResultUpdateRequestFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static ResultUpdateResponse[] ArrayOfResultUpdateResponseFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static ServerTestSuite[] ArrayOfServerTestSuiteFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static SessionBookmark[] ArrayOfSessionBookmarkFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static Session[] ArrayOfSessionFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static SessionNote[] ArrayOfSessionNoteFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static SkinnyPlan[] ArrayOfSkinnyPlanFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static StateTypeEnumAndStateString[] ArrayOfStateTypeEnumAndStateStringFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static String[] ArrayOfStringFromXml(XmlReader reader, bool inline);
    internal static SuiteIdAndType[] ArrayOfSuiteIdAndTypeFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static SuitePointCount[] ArrayOfSuitePointCountFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static TestActionResult[] ArrayOfTestActionResultFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static TestCaseAndOwner[] ArrayOfTestCaseAndOwnerFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static TestCaseResult[] ArrayOfTestCaseResultFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static TestCaseResultIdAndRev[] ArrayOfTestCaseResultIdAndRevFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static TestCaseResultIdentifier[] ArrayOfTestCaseResultIdentifierFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static TestConfiguration[] ArrayOfTestConfigurationFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static TestController[] ArrayOfTestControllerFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static TestEnvironment[] ArrayOfTestEnvironmentFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static TestExternalLink[] ArrayOfTestExternalLinkFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static TestFailureType[] ArrayOfTestFailureTypeFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static TestMessageLogEntry[] ArrayOfTestMessageLogEntryFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static TestPlan[] ArrayOfTestPlanFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static TestPointAssignment[] ArrayOfTestPointAssignmentFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static TestPoint[] ArrayOfTestPointFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static TestPointStatistic[] ArrayOfTestPointStatisticFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static TestPointStatisticPivotItem[] ArrayOfTestPointStatisticPivotItemFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static TestPointStatisticsByPivotType[] ArrayOfTestPointStatisticsByPivotTypeFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static TestPointStatisticsQueryPivotType[] ArrayOfTestPointStatisticsQueryPivotTypeFromXml(XmlReader reader, bool inline);
    internal static TestResolutionState[] ArrayOfTestResolutionStateFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static TestResultAttachment[] ArrayOfTestResultAttachmentFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static TestResultAttachmentIdentity[] ArrayOfTestResultAttachmentIdentityFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static TestResultParameter[] ArrayOfTestResultParameterFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static TestRunCoverage[] ArrayOfTestRunCoverageFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static TestRun[] ArrayOfTestRunFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static TestRunStatistic[] ArrayOfTestRunStatisticFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static TestSettings[] ArrayOfTestSettingsFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static TestSettingsMachineRole[] ArrayOfTestSettingsMachineRoleFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static TestSuiteEntry[] ArrayOfTestSuiteEntryFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static TestVariable[] ArrayOfTestVariableFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static UpdatedProperties[] ArrayOfUpdatedPropertiesFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static string ArrayToString(T[] array);
    internal static void StringToXmlElement(XmlWriter writer, string element, string str);
    internal static void ToXml(XmlWriter writer, string arrayName, BlockedPointProperties[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, BlockedPointProperties[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, Boolean[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, Boolean[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, BuildCoverage[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, BuildCoverage[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, CloneOperationInformation[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, CloneOperationInformation[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, DataCollectorInformation[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, DataCollectorInformation[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, DefaultAfnStripBinding[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, DefaultAfnStripBinding[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, FunctionCoverage[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, FunctionCoverage[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, IdAndRev[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, IdAndRev[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, ImpactedPoint[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, ImpactedPoint[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, Int32[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, Int32[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, MachineRole[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, MachineRole[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, ModuleCoverage[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, ModuleCoverage[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, NameValuePair[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, NameValuePair[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, Object[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, Object[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, ResultUpdateRequest[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, ResultUpdateRequest[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, ResultUpdateResponse[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, ResultUpdateResponse[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, ServerTestSuite[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, ServerTestSuite[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, SessionBookmark[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, SessionBookmark[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, SessionNote[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, SessionNote[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, Session[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, Session[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, SkinnyPlan[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, SkinnyPlan[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, String[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, String[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, SuiteIdAndType[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, SuiteIdAndType[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, SuitePointCount[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, SuitePointCount[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, TestActionResult[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, TestActionResult[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, TestCaseAndOwner[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, TestCaseAndOwner[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, TestCaseResultIdAndRev[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, TestCaseResultIdAndRev[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, TestCaseResultIdentifier[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, TestCaseResultIdentifier[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, TestCaseResult[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, TestCaseResult[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, TestConfiguration[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, TestConfiguration[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, TestController[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, TestController[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, TestEnvironment[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, TestEnvironment[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, TestExternalLink[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, TestExternalLink[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, TestFailureType[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, TestFailureType[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, TestMessageLogEntry[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, TestMessageLogEntry[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, TestPlan[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, TestPlan[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, TestPointAssignment[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, TestPointAssignment[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, TestPointStatisticPivotItem[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, TestPointStatisticPivotItem[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, TestPointStatistic[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, TestPointStatistic[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, TestPointStatisticsByPivotType[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, TestPointStatisticsByPivotType[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, TestPointStatisticsQueryPivotType[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, TestPointStatisticsQueryPivotType[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, TestPoint[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, TestPoint[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, TestResolutionState[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, TestResolutionState[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, TestResultAttachmentIdentity[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, TestResultAttachmentIdentity[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, TestResultAttachment[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, TestResultAttachment[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, TestResultParameter[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, TestResultParameter[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, TestRunCoverage[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, TestRunCoverage[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, TestRunStatistic[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, TestRunStatistic[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, TestRun[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, TestRun[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, TestSettingsMachineRole[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, TestSettingsMachineRole[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, TestSettings[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, TestSettings[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, TestSuiteEntry[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, TestSuiteEntry[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, TestVariable[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, TestVariable[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, UpdatedProperties[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, UpdatedProperties[] array, bool inline, bool allowEmptyArrays);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public class Microsoft.TeamFoundation.TestManagement.Client.HierarchyEntry : object {
    private ITestSuiteBase m_suite;
    private IDictionary`2<int, int> m_allowedSuites;
    private List`1<HierarchyEntry> m_children;
    private int m_pointCount;
    private HierarchyEntry m_parent;
    public int SuiteId { get; }
    public string SuiteTitle { get; }
    public TestSuiteType SuiteType { get; }
    public ITestSuiteBase Suite { get; }
    public int PointCount { get; }
    public IList`1<HierarchyEntry> Children { get; }
    public HierarchyEntry Parent { get; }
    internal HierarchyEntry(IDictionary`2<int, int> allowedSuites, ITestSuiteBase suite, HierarchyEntry parent);
    public int get_SuiteId();
    public string get_SuiteTitle();
    public TestSuiteType get_SuiteType();
    public ITestSuiteBase get_Suite();
    public int get_PointCount();
    public IList`1<HierarchyEntry> get_Children();
    public HierarchyEntry get_Parent();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal static class Microsoft.TeamFoundation.TestManagement.Client.HtmlCssParser : object {
    private static String[] _colors;
    private static String[] _systemColors;
    private static String[] _fontGenericFamilies;
    private static String[] _fontStyles;
    private static String[] _fontVariants;
    private static String[] _fontWeights;
    private static String[] _fontAbsoluteSizes;
    private static String[] _fontRelativeSizes;
    private static String[] _fontSizeUnits;
    private static String[] _flowDirections;
    private static String[] _listStyleTypes;
    private static String[] _listStylePositions;
    private static String[] _textDecorations;
    private static String[] _textTransforms;
    private static String[] _textAligns;
    private static String[] _verticalAligns;
    private static String[] _floats;
    private static String[] _clears;
    private static String[] _borderStyles;
    private static String[] _blocks;
    private static HtmlCssParser();
    internal static void GetElementPropertiesFromCssAttributes(XmlElement htmlElement, string elementName, CssStylesheet stylesheet, Hashtable localProperties, List`1<XmlElement> sourceContext);
    private static void ParseWhiteSpace(string styleValue, Int32& nextIndex);
    private static bool ParseWord(string word, string styleValue, Int32& nextIndex);
    private static string ParseWordEnumeration(String[] words, string styleValue, Int32& nextIndex);
    private static void ParseWordEnumeration(String[] words, string styleValue, Int32& nextIndex, Hashtable localProperties, string attributeName);
    private static string ParseCssSize(string styleValue, Int32& nextIndex, bool mustBeNonNegative);
    private static void ParseCssSize(string styleValue, Int32& nextIndex, Hashtable localValues, string propertyName, bool mustBeNonNegative);
    private static string ParseCssColor(string styleValue, Int32& nextIndex);
    private static void ParseCssColor(string styleValue, Int32& nextIndex, Hashtable localValues, string propertyName);
    private static void ParseCssFont(string styleValue, Hashtable localProperties);
    private static void ParseCssFontStyle(string styleValue, Int32& nextIndex, Hashtable localProperties);
    private static void ParseCssFontVariant(string styleValue, Int32& nextIndex, Hashtable localProperties);
    private static void ParseCssFontWeight(string styleValue, Int32& nextIndex, Hashtable localProperties);
    private static void ParseCssFontFamily(string styleValue, Int32& nextIndex, Hashtable localProperties);
    private static void ParseCssListStyle(string styleValue, Hashtable localProperties);
    private static string ParseCssListStyleType(string styleValue, Int32& nextIndex);
    private static string ParseCssListStylePosition(string styleValue, Int32& nextIndex);
    private static string ParseCssListStyleImage(string styleValue, Int32& nextIndex);
    private static void ParseCssTextDecoration(string styleValue, Int32& nextIndex, Hashtable localProperties);
    private static void ParseCssTextTransform(string styleValue, Int32& nextIndex, Hashtable localProperties);
    private static void ParseCssTextAlign(string styleValue, Int32& nextIndex, Hashtable localProperties);
    private static void ParseCssVerticalAlign(string styleValue, Int32& nextIndex, Hashtable localProperties);
    private static void ParseCssFloat(string styleValue, Int32& nextIndex, Hashtable localProperties);
    private static void ParseCssClear(string styleValue, Int32& nextIndex, Hashtable localProperties);
    private static bool ParseCssRectangleProperty(string styleValue, Int32& nextIndex, Hashtable localProperties, string propertyName);
    private static void ParseCssBorder(string styleValue, Int32& nextIndex, Hashtable localProperties);
    private static string ParseCssBorderStyle(string styleValue, Int32& nextIndex);
    private static void ParseCssBackground(string styleValue, Int32& nextIndex, Hashtable localValues);
    private static void ParseCssDir(string styleValue, Int32& nextIndex, Hashtable localProperties);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal static class Microsoft.TeamFoundation.TestManagement.Client.HtmlFromXamlConverter : object {
    internal static string ConvertXamlToHtml(string xamlString);
    private static bool WriteFlowDocument(XmlTextReader xamlReader, XmlTextWriter htmlWriter);
    private static void WriteElementProperties(XmlTextReader xamlReader, XmlTextWriter htmlWriter, StringBuilder inlineStyle);
    private static string GetFlowDirection(string flowDirection);
    private static string ParseXamlColor(string color);
    private static string ParseXamlThickness(string thickness);
    private static void WriteElementContent(XmlTextReader xamlReader, XmlTextWriter htmlWriter, StringBuilder inlineStyle);
    private static void AddComplexProperty(XmlTextReader xamlReader, StringBuilder inlineStyle);
    private static void WriteElement(XmlTextReader xamlReader, XmlTextWriter htmlWriter, StringBuilder inlineStyle);
    private static bool ReadNextToken(XmlReader xamlReader);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.HtmlLexicalAnalyzer : object {
    private StringReader _inputStringReader;
    private int _nextCharacterCode;
    private char _nextCharacter;
    private int _lookAheadCharacterCode;
    private char _lookAheadCharacter;
    private char _previousCharacter;
    private bool _isNextCharacterEntity;
    private StringBuilder _nextToken;
    private HtmlTokenType _nextTokenType;
    internal HtmlTokenType NextTokenType { get; }
    internal string NextToken { get; }
    private char NextCharacter { get; }
    private bool IsAtEndOfStream { get; }
    private bool IsAtTagStart { get; }
    private bool IsAtTagEnd { get; }
    private bool IsAtDirectiveStart { get; }
    private bool IsNextCharacterEntity { get; }
    internal HtmlLexicalAnalyzer(string inputTextString);
    internal void GetNextContentToken();
    internal void GetNextTagToken();
    internal void GetNextEqualSignToken();
    internal void GetNextAtomToken();
    internal HtmlTokenType get_NextTokenType();
    internal string get_NextToken();
    private void GetNextCharacter();
    private void ReadLookAheadCharacter();
    private void SkipWhiteSpace();
    private bool IsGoodForNameStart(char character);
    private bool IsGoodForName(char character);
    private bool IsCombiningCharacter(char character);
    private bool IsExtender(char character);
    private void ReadDynamicContent();
    private void ReadComment();
    private void ReadUnknownDirective();
    private void SkipProcessingDirective();
    private char get_NextCharacter();
    private bool get_IsAtEndOfStream();
    private bool get_IsAtTagStart();
    private bool get_IsAtTagEnd();
    private bool get_IsAtDirectiveStart();
    private bool get_IsNextCharacterEntity();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.HtmlParser : object {
    internal static string XhtmlNamespace;
    private HtmlLexicalAnalyzer _htmlLexicalAnalyzer;
    private XmlDocument _document;
    private Stack`1<XmlElement> _openedElements;
    private Stack`1<XmlElement> _pendingInlineElements;
    private HtmlParser(string inputString);
    internal static XmlElement ParseHtml(string htmlString);
    private XmlElement ParseHtmlContent();
    private XmlElement CreateElementCopy(XmlElement htmlElement);
    private void AddEmptyElement(XmlElement htmlEmptyElement);
    private void OpenInlineElement(XmlElement htmlInlineElement);
    private void OpenStructuringElement(XmlElement htmlElement);
    private bool IsElementOpened(string htmlElementName);
    private void CloseElement(string htmlElementName);
    private void AddTextContent(string textContent);
    private void AddComment(string comment);
    private void OpenPendingInlineElements();
    private void ParseAttributes(XmlElement xmlElement);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.HtmlSchema : object {
    private static ArrayList _htmlInlineElements;
    private static ArrayList _htmlBlockElements;
    private static ArrayList _htmlOtherOpenableElements;
    private static ArrayList _htmlEmptyElements;
    private static ArrayList _htmlElementsClosingOnParentElementEnd;
    private static ArrayList _htmlElementsClosingColgroup;
    private static ArrayList _htmlElementsClosingDD;
    private static ArrayList _htmlElementsClosingDT;
    private static ArrayList _htmlElementsClosingLI;
    private static ArrayList _htmlElementsClosingTbody;
    private static ArrayList _htmlElementsClosingTD;
    private static ArrayList _htmlElementsClosingTfoot;
    private static ArrayList _htmlElementsClosingThead;
    private static ArrayList _htmlElementsClosingTH;
    private static ArrayList _htmlElementsClosingTR;
    private static Hashtable _htmlCharacterEntities;
    private static HtmlSchema();
    internal static bool IsEmptyElement(string xmlElementName);
    internal static bool IsBlockElement(string xmlElementName);
    internal static bool IsInlineElement(string xmlElementName);
    internal static bool IsKnownOpenableElement(string xmlElementName);
    internal static bool ClosesOnParentElementEnd(string xmlElementName);
    internal static bool ClosesOnNextElementStart(string currentElementName, string nextElementName);
    internal static bool IsEntity(string entityName);
    internal static char EntityCharacterValue(string entityName);
    private static void InitializeInlineElements();
    private static void InitializeBlockElements();
    private static void InitializeEmptyElements();
    private static void InitializeOtherOpenableElements();
    private static void InitializeElementsClosingOnParentElementEnd();
    private static void InitializeElementsClosingOnNewElementStart();
    private static void InitializeHtmlCharacterEntities();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.HtmlToFlowDocumentConverterConstants : object {
    internal static string HtmlFlowDirection_RightToLeft;
    internal static string HtmlFlowDirection_LeftToRight;
    internal static string LangAttribute;
    internal static string HtmlDirectionAttribute;
    internal static string XamlFlowDirection_RightToLeft;
    internal static string XamlFlowDirection_LeftToRight;
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal enum Microsoft.TeamFoundation.TestManagement.Client.HtmlTokenType : Enum {
    public int value__;
    public static HtmlTokenType OpeningTagStart;
    public static HtmlTokenType ClosingTagStart;
    public static HtmlTokenType TagEnd;
    public static HtmlTokenType EmptyTagEnd;
    public static HtmlTokenType EqualSign;
    public static HtmlTokenType Name;
    public static HtmlTokenType Atom;
    public static HtmlTokenType Text;
    public static HtmlTokenType Comment;
    public static HtmlTokenType EOF;
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal static class Microsoft.TeamFoundation.TestManagement.Client.HtmlToXamlConverter : object {
    private static XmlElement InlineFragmentParentElement;
    public static string Xaml_FlowDocument;
    public static string Xaml_Run;
    public static string Xaml_Span;
    public static string Xaml_Hyperlink;
    public static string Xaml_Hyperlink_NavigateUri;
    public static string Xaml_Hyperlink_TargetName;
    public static string Xaml_Section;
    public static string Xaml_List;
    public static string Xaml_List_MarkerStyle;
    public static string Xaml_List_MarkerStyle_None;
    public static string Xaml_List_MarkerStyle_Decimal;
    public static string Xaml_List_MarkerStyle_Disc;
    public static string Xaml_List_MarkerStyle_Circle;
    public static string Xaml_List_MarkerStyle_Square;
    public static string Xaml_List_MarkerStyle_Box;
    public static string Xaml_List_MarkerStyle_LowerLatin;
    public static string Xaml_List_MarkerStyle_UpperLatin;
    public static string Xaml_List_MarkerStyle_LowerRoman;
    public static string Xaml_List_MarkerStyle_UpperRoman;
    public static string Xaml_ListItem;
    public static string Xaml_LineBreak;
    public static string Xaml_Paragraph;
    public static string Xaml_Margin;
    public static string Xaml_Padding;
    public static string Xaml_BorderBrush;
    public static string Xaml_BorderThickness;
    public static string Xaml_Table;
    public static string Xaml_TableColumns;
    public static string Xaml_TableColumn;
    public static string Xaml_TableRowGroup;
    public static string Xaml_TableRow;
    public static string Xaml_TableCell;
    public static string Xaml_TableCell_BorderThickness;
    public static string Xaml_TableCell_BorderBrush;
    public static string Xaml_TableCell_ColumnSpan;
    public static string Xaml_TableCell_RowSpan;
    public static string Xaml_Width;
    public static string Xaml_Brushes_Black;
    public static string Xaml_FontFamily;
    public static string Xaml_FontSize;
    public static string Xaml_FontSize_XXLarge;
    public static string Xaml_FontSize_XLarge;
    public static string Xaml_FontSize_Large;
    public static string Xaml_FontSize_Medium;
    public static string Xaml_FontSize_Small;
    public static string Xaml_FontSize_XSmall;
    public static string Xaml_FontSize_XXSmall;
    public static string Xaml_FontWeight;
    public static string Xaml_FontWeight_Bold;
    public static string Xaml_FontStyle;
    public static string Xaml_Foreground;
    public static string Xaml_Background;
    public static string Xaml_TextDecorations;
    public static string Xaml_TextDecorations_Underline;
    public static string Xaml_TextIndent;
    public static string Xaml_TextAlignment;
    public static string Xaml_FlowDirection;
    private static string _xamlNamespace;
    private static HtmlToXamlConverter();
    public static string ConvertHtmlToXaml(string htmlString, bool asFlowDocument);
    public static string GetAttribute(XmlElement element, string attributeName);
    internal static string UnQuote(string value);
    private static XmlNode AddBlock(XmlElement xamlParentElement, XmlNode htmlNode, Hashtable inheritedProperties, CssStylesheet stylesheet, List`1<XmlElement> sourceContext);
    private static void AddBreak(XmlElement xamlParentElement, string htmlElementName);
    private static void AddSection(XmlElement xamlParentElement, XmlElement htmlElement, Hashtable inheritedProperties, CssStylesheet stylesheet, List`1<XmlElement> sourceContext);
    private static void AddParagraph(XmlElement xamlParentElement, XmlElement htmlElement, Hashtable inheritedProperties, CssStylesheet stylesheet, List`1<XmlElement> sourceContext);
    private static XmlNode AddImplicitParagraph(XmlElement xamlParentElement, XmlNode htmlNode, Hashtable inheritedProperties, CssStylesheet stylesheet, List`1<XmlElement> sourceContext);
    private static void AddInline(XmlElement xamlParentElement, XmlNode htmlNode, Hashtable inheritedProperties, CssStylesheet stylesheet, List`1<XmlElement> sourceContext);
    private static void AddSpanOrRun(XmlElement xamlParentElement, XmlElement htmlElement, Hashtable inheritedProperties, CssStylesheet stylesheet, List`1<XmlElement> sourceContext);
    private static void AddTextRun(XmlElement xamlElement, string textData, Hashtable inheritedProperties);
    private static void AddHyperlink(XmlElement xamlParentElement, XmlElement htmlElement, Hashtable inheritedProperties, CssStylesheet stylesheet, List`1<XmlElement> sourceContext);
    private static void DefineInlineFragmentParent(XmlComment htmlComment, XmlElement xamlParentElement);
    private static XmlElement ExtractInlineFragment(XmlElement xamlFlowDocumentElement);
    private static void AddImage(XmlElement xamlParentElement, XmlElement htmlElement, Hashtable inheritedProperties, CssStylesheet stylesheet, List`1<XmlElement> sourceContext);
    private static void AddList(XmlElement xamlParentElement, XmlElement htmlListElement, Hashtable inheritedProperties, CssStylesheet stylesheet, List`1<XmlElement> sourceContext);
    private static XmlElement AddOrphanListItems(XmlElement xamlParentElement, XmlElement htmlLIElement, Hashtable inheritedProperties, CssStylesheet stylesheet, List`1<XmlElement> sourceContext);
    private static void AddListItem(XmlElement xamlListElement, XmlElement htmlLIElement, Hashtable inheritedProperties, CssStylesheet stylesheet, List`1<XmlElement> sourceContext);
    private static void AddTable(XmlElement xamlParentElement, XmlElement htmlTableElement, Hashtable inheritedProperties, CssStylesheet stylesheet, List`1<XmlElement> sourceContext);
    private static XmlElement GetCellFromSingleCellTable(XmlElement htmlTableElement);
    private static void AddColumnInformation(XmlElement htmlTableElement, XmlElement xamlTableElement, ArrayList columnStartsAllRows, Hashtable currentProperties, CssStylesheet stylesheet, List`1<XmlElement> sourceContext);
    private static void AddTableColumnGroup(XmlElement xamlTableElement, XmlElement htmlColgroupElement, Hashtable inheritedProperties, CssStylesheet stylesheet, List`1<XmlElement> sourceContext);
    private static void AddTableColumn(XmlElement xamlTableElement, XmlElement htmlColElement, Hashtable inheritedProperties, CssStylesheet stylesheet, List`1<XmlElement> sourceContext);
    private static XmlNode AddTableRowsToTableBody(XmlElement xamlTableBodyElement, XmlNode htmlTRStartNode, Hashtable currentProperties, ArrayList columnStarts, CssStylesheet stylesheet, List`1<XmlElement> sourceContext);
    private static XmlNode AddTableCellsToTableRow(XmlElement xamlTableRowElement, XmlNode htmlTDStartNode, Hashtable currentProperties, ArrayList columnStarts, ArrayList activeRowSpans, CssStylesheet stylesheet, List`1<XmlElement> sourceContext);
    private static void AddDataToTableCell(XmlElement xamlTableCellElement, XmlNode htmlDataStartNode, Hashtable currentProperties, CssStylesheet stylesheet, List`1<XmlElement> sourceContext);
    private static ArrayList AnalyzeTableStructure(XmlElement htmlTableElement, CssStylesheet stylesheet);
    private static double AnalyzeTbodyStructure(XmlElement htmlTbodyElement, ArrayList columnStarts, ArrayList activeRowSpans, double tableWidth, CssStylesheet stylesheet);
    private static double AnalyzeTRStructure(XmlElement htmlTRElement, ArrayList columnStarts, ArrayList activeRowSpans, double tableWidth, CssStylesheet stylesheet);
    private static int GetRowSpan(XmlElement htmlTDElement);
    private static int GetNextColumnIndex(int columnIndex, double columnWidth, ArrayList columnStarts, ArrayList activeRowSpans);
    private static void ClearActiveRowSpans(ArrayList activeRowSpans);
    private static void InitializeActiveRowSpans(ArrayList activeRowSpans, int count);
    private static double GetNextColumnStart(XmlElement htmlTDElement, double columnStart);
    private static double GetColumnWidth(XmlElement htmlTDElement);
    private static int CalculateColumnSpan(int columnIndex, double columnWidth, ArrayList columnStarts);
    private static void VerifyColumnStartsAscendingOrder(ArrayList columnStarts);
    private static void ApplyLocalProperties(XmlElement xamlElement, Hashtable localProperties, bool isBlock);
    private static void SetForegroundProperty(XmlElement xamlElement, string value);
    private static string GetFlowDirection(string property);
    private static void ComposeThicknessProperty(XmlElement xamlElement, string propertyName, string left, string right, string top, string bottom);
    private static void SetPropertyValue(XmlElement xamlElement, DependencyProperty property, string stringValue);
    private static Hashtable GetElementProperties(XmlElement htmlElement, Hashtable inheritedProperties, Hashtable& localProperties, CssStylesheet stylesheet, List`1<XmlElement> sourceContext);
    private static string GetCssAttribute(string cssStyle, string attributeName);
    private static bool TryGetLengthValue(string lengthAsString, Double& length);
    private static string GetColorValue(string colorValue);
    private static void ApplyPropertiesToTableCellElement(XmlElement htmlChildNode, XmlElement xamlTableCellElement);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.IActionRecordingHelper {
    public abstract virtual ITestAttachment Create(string fileName);
    public abstract virtual ITestAttachment GetDefaultForTestCase(int testCaseId);
    public abstract virtual IList`1<bool> CheckActionRecordingExists(IList`1<int> testCaseIds);
    public abstract virtual void SetDefaultForTestCase(int testCaseId, ITestAttachment actionRecording);
}
[DefaultMemberAttribute("Item")]
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.IAttachmentCollection {
    public ITestAttachment Item { get; }
    public abstract virtual ITestAttachment get_Item(int index);
    public abstract virtual void RemoveAt(int index);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.IAttachmentOwner {
    public IAttachmentCollection Attachments { get; }
    public abstract virtual ITestAttachment CreateAttachment(string localFileName);
    public abstract virtual ITestAttachment CreateAttachment(string sourceFileName, SourceFileAction deleteOnCompletion);
    public abstract virtual IAttachmentCollection get_Attachments();
    [CompilerGeneratedAttribute]
public abstract virtual void add_AttachmentUploadCompleted(UploadCompletionEventHandler value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_AttachmentUploadCompleted(UploadCompletionEventHandler value);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal interface Microsoft.TeamFoundation.TestManagement.Client.IAttachmentOwnerInternal {
    public abstract virtual void FireAttachmentUploadCompleted(ITestAttachment attachment);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.IAttachmentUploadEntry {
    public ITestAttachment Attachment { get; }
    public DateTime DateCompleted { get; }
    public DateTime DateStarted { get; }
    public long BytesTransferred { get; }
    public long Length { get; }
    public UploadState UploadState { get; }
    public UploadPauseReason PauseReason { get; }
    public string Server { get; }
    public string ProjectName { get; }
    public int TestRunId { get; }
    public int TestResultId { get; }
    public bool IsMarkedForDeletion { get; }
    public string LocalFileName { get; }
    public abstract virtual ITestAttachment get_Attachment();
    public abstract virtual DateTime get_DateCompleted();
    public abstract virtual DateTime get_DateStarted();
    public abstract virtual long get_BytesTransferred();
    public abstract virtual long get_Length();
    public abstract virtual UploadState get_UploadState();
    public abstract virtual void Pause();
    public abstract virtual UploadPauseReason get_PauseReason();
    public abstract virtual void Enqueue();
    public abstract virtual void Cancel();
    public abstract virtual string get_Server();
    public abstract virtual string get_ProjectName();
    public abstract virtual int get_TestRunId();
    public abstract virtual int get_TestResultId();
    public abstract virtual bool get_IsMarkedForDeletion();
    public abstract virtual string get_LocalFileName();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.IAttachmentUploadManager {
    public IEnumerable`1<IAttachmentUploadEntry> Entries { get; }
    public bool UploadsPending { get; }
    public bool IsReady { get; }
    public abstract virtual IEnumerable`1<IAttachmentUploadEntry> get_Entries();
    public abstract virtual void RemoveCompletedEntries();
    public abstract virtual void PauseUploads();
    public abstract virtual void ResumeUploads();
    public abstract virtual long GetRemainingBytesToUpload();
    public abstract virtual void AbandonAllUploads();
    public abstract virtual bool get_UploadsPending();
    public abstract virtual bool get_IsReady();
    [CompilerGeneratedAttribute]
public abstract virtual void add_Changed(UploadManagerEventHandler value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_Changed(UploadManagerEventHandler value);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.IBugFieldMapping {
    public TeamFoundationIdentity CreatedBy { get; }
    public string CreatedByName { get; }
    public DateTime CreatedDate { get; }
    public string BugWorkItem { get; public set; }
    public IDictionary`2<GeneratedBugFields, string> FieldMappings { get; }
    public int Revision { get; }
    public TeamFoundationIdentity LastUpdatedBy { get; }
    public string LastUpdatedByName { get; }
    public DateTime LastUpdated { get; }
    public abstract virtual TeamFoundationIdentity get_CreatedBy();
    public abstract virtual string get_CreatedByName();
    public abstract virtual DateTime get_CreatedDate();
    public abstract virtual string get_BugWorkItem();
    public abstract virtual void set_BugWorkItem(string value);
    public abstract virtual IDictionary`2<GeneratedBugFields, string> get_FieldMappings();
    public abstract virtual int get_Revision();
    public abstract virtual TeamFoundationIdentity get_LastUpdatedBy();
    public abstract virtual string get_LastUpdatedByName();
    public abstract virtual DateTime get_LastUpdated();
    public abstract virtual void Refresh();
    public abstract virtual void Export(string fileName);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.IBugFieldMappingHelper {
    public abstract virtual IBugFieldMapping Create();
    public abstract virtual IBugFieldMapping CreateFromFile(string fileName);
    public abstract virtual IBugFieldMapping Query();
    public abstract virtual void Update(IBugFieldMapping bugFieldMapping);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.IBuildConfiguration {
    public Uri BuildUri { get; }
    public string BuildPlatform { get; }
    public string BuildFlavor { get; }
    public string TeamProjectName { get; }
    public abstract virtual Uri get_BuildUri();
    public abstract virtual string get_BuildPlatform();
    public abstract virtual string get_BuildFlavor();
    public abstract virtual string get_TeamProjectName();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.IBuildCoverage {
    public IBuildConfiguration Configuration { get; }
    public abstract virtual IBuildConfiguration get_Configuration();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.IBuildFilter {
    public string BuildDefinition { get; public set; }
    public string BuildQuality { get; public set; }
    public abstract virtual string get_BuildDefinition();
    public abstract virtual void set_BuildDefinition(string value);
    public abstract virtual string get_BuildQuality();
    public abstract virtual void set_BuildQuality(string value);
    public abstract virtual IBuildDetailSpec GetBuildDetailSpec();
    public abstract virtual IBuildDetailSpec QueryBuildsSince(Uri buildUri);
    public abstract virtual IBuildDetailSpec QueryBuildsBefore(Uri buildUri);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal interface Microsoft.TeamFoundation.TestManagement.Client.IClientObjectCollection {
    public abstract virtual void FetchPage(object item);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal interface Microsoft.TeamFoundation.TestManagement.Client.IClientObjectHelper {
    public TestManagementTeamProject Project { get; }
    public Log Log { get; }
    public abstract virtual TestManagementTeamProject get_Project();
    public abstract virtual Log get_Log();
    public abstract virtual void EnsureIdentitiesInCache(IEnumerable`1<Guid> teamFoundationIds);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ICoverage {
    public string LastError { get; }
    public IModuleCoverage[] Modules { get; }
    public CoverageState State { get; }
    public abstract virtual string get_LastError();
    public abstract virtual IModuleCoverage[] get_Modules();
    public abstract virtual CoverageState get_State();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ICoverageAnalysisManager {
    public abstract virtual IBuildCoverage[] QueryBuildCoverage(string buildUri, CoverageQueryFlags flags);
    public abstract virtual ITestRunCoverage[] QueryTestRunCoverage(int testRunId, CoverageQueryFlags flags);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ICoverageStatistics {
    public int BlocksCovered { get; }
    public int BlocksNotCovered { get; }
    public int LinesCovered { get; }
    public int LinesNotCovered { get; }
    public int LinesPartiallyCovered { get; }
    public abstract virtual int get_BlocksCovered();
    public abstract virtual int get_BlocksNotCovered();
    public abstract virtual int get_LinesCovered();
    public abstract virtual int get_LinesNotCovered();
    public abstract virtual int get_LinesPartiallyCovered();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public class Microsoft.TeamFoundation.TestManagement.Client.IdAndName : ValueType {
    private int m_id;
    private string m_name;
    public int Id { get; }
    public string Name { get; }
    public IdAndName(int id, string name);
    public int get_Id();
    public string get_Name();
    public virtual int GetHashCode();
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(IdAndName other);
    public static bool op_Equality(IdAndName left, IdAndName right);
    public static bool op_Inequality(IdAndName left, IdAndName right);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.IdAndRev : object {
    private int m_id;
    private int m_revision;
    public int Id { get; public set; }
    public int Revision { get; public set; }
    internal IdAndRev(int id, int revision);
    internal IdAndRev(ClientObjectIdRev`1<int> id);
    internal static IdAndRev[] Single(int id);
    internal static IdAndRev[] Single(int id, int revision);
    internal static IdAndRev[] Convert(Int32[] ids);
    internal static IdAndRev[] Convert(ClientObjectIdRev`1[] ids);
    public int get_Id();
    public void set_Id(int value);
    public int get_Revision();
    public void set_Revision(int value);
    internal static IdAndRev FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, IdAndRev obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.IDataCollectorHelper {
    public abstract virtual IDataCollectorInformation Create();
    public abstract virtual IDataCollectorInformationCollection Query();
    public abstract virtual IDataCollectorInformation Find(Uri uri);
    public abstract virtual void Register(IEnumerable`1<IDataCollectorInformation> dataCollectors);
    public abstract virtual void Unregister(IEnumerable`1<IDataCollectorInformation> dataCollectors);
    public abstract virtual void Update(IEnumerable`1<IDataCollectorInformation> dataCollectors);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.IDataCollectorInformation {
    public Guid Id { get; }
    public Uri TypeUri { get; public set; }
    public string DisplayName { get; public set; }
    public string Description { get; public set; }
    public string AssemblyQualifiedName { get; public set; }
    public bool IsEnabledOnCollectionOnlyAgents { get; public set; }
    public bool IsEnabledByDefault { get; public set; }
    public bool RequiresOutOfProcessCollection { get; public set; }
    public XmlElement DefaultConfiguration { get; public set; }
    public Uri ConfigurationEditorTypeUri { get; public set; }
    public Uri ConfigurationHelpUri { get; public set; }
    public XmlElement ConfigurationEditorConfiguration { get; public set; }
    public IDictionary`2<string, string> Properties { get; }
    public abstract virtual Guid get_Id();
    public abstract virtual void Register();
    public abstract virtual void Unregister();
    public abstract virtual void Update();
    public abstract virtual Uri get_TypeUri();
    public abstract virtual void set_TypeUri(Uri value);
    public abstract virtual string get_DisplayName();
    public abstract virtual void set_DisplayName(string value);
    public abstract virtual string get_Description();
    public abstract virtual void set_Description(string value);
    public abstract virtual string get_AssemblyQualifiedName();
    public abstract virtual void set_AssemblyQualifiedName(string value);
    public abstract virtual bool get_IsEnabledOnCollectionOnlyAgents();
    public abstract virtual void set_IsEnabledOnCollectionOnlyAgents(bool value);
    public abstract virtual bool get_IsEnabledByDefault();
    public abstract virtual void set_IsEnabledByDefault(bool value);
    public abstract virtual bool get_RequiresOutOfProcessCollection();
    public abstract virtual void set_RequiresOutOfProcessCollection(bool value);
    public abstract virtual XmlElement get_DefaultConfiguration();
    public abstract virtual void set_DefaultConfiguration(XmlElement value);
    public abstract virtual Uri get_ConfigurationEditorTypeUri();
    public abstract virtual void set_ConfigurationEditorTypeUri(Uri value);
    public abstract virtual Uri get_ConfigurationHelpUri();
    public abstract virtual void set_ConfigurationHelpUri(Uri value);
    public abstract virtual XmlElement get_ConfigurationEditorConfiguration();
    public abstract virtual void set_ConfigurationEditorConfiguration(XmlElement value);
    public abstract virtual IDictionary`2<string, string> get_Properties();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.IDataCollectorInformationCollection {
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.IDynamicTestSuite {
    public ITestCaseQuery Query { get; public set; }
    public abstract virtual ITestCaseQuery get_Query();
    public abstract virtual void set_Query(ITestCaseQuery value);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.IDynamicTestSuite2 {
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.IDynamicTestSuiteBase {
    public DateTime LastPopulated { get; }
    public string LastError { get; }
    public abstract virtual DateTime get_LastPopulated();
    public abstract virtual string get_LastError();
    public abstract virtual void Repopulate();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.IDynamicTestSuiteBase2 {
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.IFunctionCoverage {
    public string Class { get; }
    public string Name { get; }
    public string Namespace { get; }
    public string SourceFile { get; }
    public ICoverageStatistics Statistics { get; }
    public abstract virtual string get_Class();
    public abstract virtual string get_Name();
    public abstract virtual string get_Namespace();
    public abstract virtual string get_SourceFile();
    public abstract virtual ICoverageStatistics get_Statistics();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.IIdentifiable`1 {
    public TKey Id { get; }
    public abstract virtual TKey get_Id();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.IImpactedTestPoint {
    public int TestCaseId { get; }
    public IList`1<Uri> Builds { get; }
    public ITestPoint TestPoint { get; }
    public ITestCase TestCase { get; }
    public string SuiteName { get; }
    public abstract virtual int get_TestCaseId();
    public abstract virtual IList`1<Uri> get_Builds();
    public abstract virtual ITestPoint get_TestPoint();
    public abstract virtual ITestCase get_TestCase();
    public abstract virtual string get_SuiteName();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.IImpactedTestPointCollection {
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.IMachineRole {
    public Guid Id { get; }
    public string Name { get; public set; }
    public abstract virtual Guid get_Id();
    public abstract virtual string get_Name();
    public abstract virtual void set_Name(string value);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.IMachineRoleCollection {
    public abstract virtual IMachineRole Create();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.IMeasurementBlockProxy {
    public bool IsRunning { get; }
    public abstract virtual bool get_IsRunning();
    public abstract virtual void Begin();
    public abstract virtual void Begin(long l);
    public abstract virtual void Begin(long l, string s);
    public abstract virtual void Step();
    public abstract virtual void Step(long l);
    public abstract virtual void Step(long l, string s);
    public abstract virtual void End();
    public abstract virtual void End(long l);
    public abstract virtual void End(long l, string s);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.IModuleCoverage {
    public IFunctionCoverage[] Functions { get; }
    public string Name { get; }
    public Guid Signature { get; }
    public int SignatureAge { get; }
    public ICoverageStatistics Statistics { get; }
    public abstract virtual IFunctionCoverage[] get_Functions();
    public abstract virtual string get_Name();
    public abstract virtual Guid get_Signature();
    public abstract virtual int get_SignatureAge();
    public abstract virtual ICoverageStatistics get_Statistics();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.ImpactedPoint : object {
    private Uri m_impactBuildUri;
    private string m_buildUri;
    private byte m_confidence;
    private int m_pointId;
    private byte m_state;
    private string m_suiteName;
    private int m_testCaseId;
    public Uri BuildUri { get; internal set; }
    public byte Confidence { get; public set; }
    public int PointId { get; public set; }
    public byte State { get; public set; }
    public string SuiteName { get; public set; }
    public int TestCaseId { get; public set; }
    public Uri get_BuildUri();
    internal void set_BuildUri(Uri value);
    public byte get_Confidence();
    public void set_Confidence(byte value);
    public int get_PointId();
    public void set_PointId(int value);
    public byte get_State();
    public void set_State(byte value);
    public string get_SuiteName();
    public void set_SuiteName(string value);
    public int get_TestCaseId();
    public void set_TestCaseId(int value);
    internal static ImpactedPoint FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, ImpactedPoint obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.ImpactedTestPoint : SimpleClientObject {
    private TestManagementTeamProject m_project;
    private List`1<Uri> m_builds;
    private TestPoint m_point;
    private string m_suiteName;
    public ObjectTypes ObjectType { get; }
    public int TestCaseId { get; }
    public TestPointState TestPointState { get; }
    public ITestCase TestCase { get; }
    public ITestPoint TestPoint { get; }
    public IList`1<Uri> Builds { get; }
    public string SuiteName { get; }
    internal ImpactedTestPoint(TestManagementTeamProject project, TestPoint point, string suiteName);
    public virtual ObjectTypes get_ObjectType();
    public sealed virtual int get_TestCaseId();
    public TestPointState get_TestPointState();
    public sealed virtual ITestCase get_TestCase();
    public sealed virtual ITestPoint get_TestPoint();
    public sealed virtual IList`1<Uri> get_Builds();
    public sealed virtual string get_SuiteName();
    public virtual void Save();
    public virtual void Refresh();
    internal virtual void DeleteFromServer(DeleteAction action);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.ImpactedTestPointCollection : ClientObjectCollection`3<IImpactedTestPoint, ImpactedTestPoint, int> {
    internal ImpactedTestPointCollection(TestManagementTeamProject project);
    internal virtual ImpactedTestPoint[] Fetch(ClientObjectIdRev`1[] ids, Int32[]& deleted, ICollection`1& identities);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.ImpactedTestPointHelper : ClientObjectHelper`3<IImpactedTestPoint, ImpactedTestPoint, int> {
    internal ImpactedTestPointHelper(TestManagementTeamProject project);
    public virtual IImpactedTestPoint Create();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.INewBuildStatistics {
    public int BuildCount { get; }
    public int ResolvedBugCount { get; }
    public int CompletedRequirementCount { get; }
    public abstract virtual int get_BuildCount();
    public abstract virtual int get_ResolvedBugCount();
    public abstract virtual int get_CompletedRequirementCount();
}
[EditorBrowsableAttribute("1")]
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public static class Microsoft.TeamFoundation.TestManagement.Client.Internal.BuildCoverageCompat : object {
    public static IBuildCoverage GetBuildConverageFromBuildConfiguration(IConfigurationSummary buildConfigSummary);
}
public class Microsoft.TeamFoundation.TestManagement.Client.Internal.FlowDocumentSealedClass : FlowDocument {
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
[EditorBrowsableAttribute("1")]
public interface Microsoft.TeamFoundation.TestManagement.Client.Internal.IPropertyValidator {
    public IEnumerable`1<string> InvalidProperties { get; }
    public abstract virtual void SetPropertyError(string propertyName, string errorMessage);
    public abstract virtual void ClearPropertyError(string propertyName);
    public abstract virtual IEnumerable`1<string> get_InvalidProperties();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
[EditorBrowsableAttribute("1")]
public interface Microsoft.TeamFoundation.TestManagement.Client.Internal.ITestManagementServerArtifact {
    public Uri ArtifactUri { get; }
    public string OutboundType { get; }
    public abstract virtual Uri get_ArtifactUri();
    public abstract virtual string get_OutboundType();
    public abstract virtual void AssociateWorkItem(WorkItem workItem);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
[EditorBrowsableAttribute("1")]
public interface Microsoft.TeamFoundation.TestManagement.Client.Internal.ITestManagementTeamProjectInternal {
    public string AreaRootPath { get; }
    public string IterationRootPath { get; }
    public abstract virtual string get_AreaRootPath();
    public abstract virtual string get_IterationRootPath();
    public abstract virtual void SetTestGroupPermissions(string projectName);
    public abstract virtual void SetTestCaseQueryHintForPlan(ITestPlan plan, string queryHint);
    public abstract virtual void SetTestCaseWorkItem(ITestCase testCaseOwner, WorkItem workItem);
    public abstract virtual void DeleteTestCaseParameter(ITestCase testCaseOwner, string parameter);
    public abstract virtual void RemoveTestCaseParameterReference(ITestCase testCaseOwner, string parameter);
    public abstract virtual string GetTestCaseWorkItemField(ITestCase testCaseOwner, string fieldName);
    public abstract virtual void SetTestCaseWorkItemField(ITestCase testCaseOwner, string fieldName, string fieldValue);
    public abstract virtual void StartCachingSharedStepWorkItems(ISharedStepHelper sharedSteps);
    public abstract virtual void StopCachingSharedStepWorkItems(ISharedStepHelper sharedSteps);
    public abstract virtual void SetTestCaseResultImplementation(ITestCaseResult result, ITmiTestImplementation implementation);
    public abstract virtual string GetTestRunLegacySharePath(ITestRun run);
    public abstract virtual void SetTestRunPostProcessState(ITestRun run, PostProcessState state);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
[EditorBrowsableAttribute("1")]
public interface Microsoft.TeamFoundation.TestManagement.Client.Internal.ITestResultAttachment {
    public int Id { get; }
    public int TestRunId { get; }
    public int TestResultId { get; }
    public Guid TmiRunId { get; public set; }
    public abstract virtual int get_Id();
    public abstract virtual int get_TestRunId();
    public abstract virtual int get_TestResultId();
    public abstract virtual Guid get_TmiRunId();
    public abstract virtual void set_TmiRunId(Guid value);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
[EditorBrowsableAttribute("1")]
public static class Microsoft.TeamFoundation.TestManagement.Client.Internal.ProjectCreationHelper : object {
    public static void Parse(ObjectTypes objectType, string fileName);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
[EditorBrowsableAttribute("1")]
public class Microsoft.TeamFoundation.TestManagement.Client.Internal.PropertyOwner : object {
    public static string PropertyNameIsDirty;
    private static List`1<string> s_emptyList;
    [CompilerGeneratedAttribute]
private PropertyChangedEventHandler PropertyChanged;
    private bool m_isDirty;
    private Dictionary`2<string, string> m_properties;
    private int m_notifyOffNesting;
    protected int TotalInvalidProperties { get; }
    private string System.ComponentModel.IDataErrorInfo.Error { get; }
    private string System.ComponentModel.IDataErrorInfo.Item { get; }
    public IEnumerable`1<string> InvalidProperties { get; }
    internal bool IsNotifying { get; }
    public bool IsDirty { get; public set; }
    private static PropertyOwner();
    public sealed virtual void SetPropertyError(string propertyName, string errorMessage);
    public sealed virtual void ClearPropertyError(string propertyName);
    protected int get_TotalInvalidProperties();
    private sealed virtual override string System.ComponentModel.IDataErrorInfo.get_Error();
    private sealed virtual override string System.ComponentModel.IDataErrorInfo.get_Item(string columnName);
    public sealed virtual IEnumerable`1<string> get_InvalidProperties();
    internal void NotifyPropertyChanged(string property, P oldValue, P newValue);
    public void NotifyPropertyChanged(string property);
    internal void NotifyOn();
    internal void NotifyOff();
    internal bool get_IsNotifying();
    protected void Setter(string property, P& oldValue, P newValue, bool markDirty);
    public sealed virtual bool get_IsDirty();
    public void set_IsDirty(bool value);
    internal void SetFromDictionary(Dictionary`2<string, string> dict, string propertyName, string keyName, String& property);
    internal void SetFromDictionary(Dictionary`2<string, string> dict, string propertyName, string keyName, Boolean& property);
    internal void SetFromDictionary(Dictionary`2<string, string> dict, string propertyName, string keyName, Uri& property);
    internal void SetFromDictionary(Dictionary`2<string, string> dict, string propertyName, string keyName, DateTime& property);
    internal void SetFromDictionary(Dictionary`2<string, string> dict, string propertyName, string keyName, Guid& property);
    internal static NameValuePair[] MergeProperties(NameValuePair[] predefinedProperties, Dictionary`2<string, string> userProperties);
    [CompilerGeneratedAttribute]
public sealed virtual void add_PropertyChanged(PropertyChangedEventHandler value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_PropertyChanged(PropertyChangedEventHandler value);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
[EditorBrowsableAttribute("1")]
public class Microsoft.TeamFoundation.TestManagement.Client.Internal.RichTextRangeFormattingInfo : object {
    private object m_isBold;
    private object m_fontStyle;
    private object m_fontSize;
    private object m_fontFamily;
    private object m_isUnderLined;
    private object m_foreGround;
    public RichTextRangeFormattingInfo(TextRange textRange);
    public void Restore(TextRange textRange);
    private void ApplyFormattingProperty(TextRange range, DependencyProperty property, object value);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
[EditorBrowsableAttribute("1")]
public static class Microsoft.TeamFoundation.TestManagement.Client.Internal.RichTextUtilities : object {
    private static string IsFormattedAttributeName;
    private static string RichTextSupportString;
    public static string ToPlainText(string flowDocumentString);
    public static string FromHtml(string htmlString);
    public static string ToHtml(string flowDocumentString);
    public static bool IsRichTextSupported();
    public static string Replace(string flowDocumentString, string findString, string replaceString);
    public static FlowDocument GetFlowDocumentFromString(string flowDocumentString);
    internal static bool IsElementFormatted(XmlReader reader);
    internal static void SetFormattedDataAttribute(XmlWriter writer);
    internal static string ToRTF(string flowDocumentString);
    internal static string ToRTF(FlowDocument flowDocument);
    private static string GetNextWord(TextPointer currentPointer, TextPointer& startPosition, TextPointer& endPosition);
    private static void ReplaceWord(string word, string findString, string replaceString, TextPointer startPosition, TextPointer& endPosition);
    private static bool DoesStringExist(FlowDocument flowDocument, string findString);
    private static bool IsPositionNextToWordBreak(TextPointer position, Char& currentChar);
    private static bool IsNonBreak(char character);
    private static FlowDocument CreateFlowDocumentFromXaml(string xamlContent);
    private static FlowDocument CreateFlowDocumentFromText(string textContent);
    private static Stream GetMemoryStreamFromString(string stringContent);
    private static bool IsLikelyAFlowDocument(string textContent);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
[EditorBrowsableAttribute("1")]
public static class Microsoft.TeamFoundation.TestManagement.Client.Internal.TestManagementConstants : object {
    public static int TestManagementDefaultPageSize;
    public static int TestManagementDefaultPageSizeForPoints;
    public static int TestManagementDefaultPageSizeForWorkItem;
    private static TestManagementConstants();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
[EditorBrowsableAttribute("1")]
public static class Microsoft.TeamFoundation.TestManagement.Client.Internal.Validator : object {
    private static DateTime s_minSqlTime;
    private static DateTime s_maxSqlTime;
    private static Validator();
    public static void CheckId(int id, string argumentName);
    public static void CheckNotNull(object argument, string argumentName);
    public static void Check(bool condition, string message, Object[] parameters);
    public static void CheckId(int value, string propertyName, IPropertyValidator propertyValidator);
    public static bool CheckAndTrimString(String& value, string propertyName, IPropertyValidator propertyValidator, int maxLength);
    public static bool CheckAndTrimString(String& value, string propertyName, string displayPropertyName, IPropertyValidator propertyValidator, int maxLength);
    public static bool CheckAndTrimString(String& value, string propertyName, string displayPropertyName, IPropertyValidator propertyValidator, int maxLength, bool canBeEmpty);
    public static bool CheckString(string value, string propertyName, IPropertyValidator propertyValidator, int maxLength);
    public static bool CheckString(string value, string propertyName, string displayPropertyName, IPropertyValidator propertyValidator, int maxLength);
    public static bool CheckString(string value, string propertyName, string displayPropertyName, IPropertyValidator propertyValidator, int maxLength, bool canBeEmpty);
    public static void CheckFileName(string fileName);
    internal static void CheckIds(IList`1<int> ids, string argumentName);
    internal static void CheckResultId(int id, string argumentName);
    internal static void CheckName(string name, string argumentName);
    internal static void CheckNotNullNorEmpty(string argument, string argumentName);
    internal static void CheckSaved(int id);
    internal static void CheckStartEndDatesInOrder(DateTime startDate, DateTime endDate);
    internal static void QualifyDateTime(DateTime& datetime, string memberName, bool allowsNull);
    internal static void CheckForLegalXmlCharacters(string argument);
    internal static void PreventUpdateAfterSave(int id, string propertyName);
    internal static void PreventUpdateBeforeSave(int id, string propertyName);
    internal static void CheckPlanDates(string propertyName, bool isStartDate, TestPlan plan);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.InterProcessLock : object {
    private bool m_created;
    private Mutex m_mutex;
    public bool IsCreator { get; }
    private string UserName { get; }
    private MutexSecurity MutexSecurity { get; }
    public InterProcessLock(string name, bool initiallyOwned);
    public bool get_IsCreator();
    private string get_UserName();
    private MutexSecurity get_MutexSecurity();
    public void EnterLock();
    public void ExitLock();
    public bool TryEnterLock(int millisecondsTimeout);
    public sealed virtual void Dispose();
}
public enum Microsoft.TeamFoundation.TestManagement.Client.IntRange : Enum {
    public int value__;
    public static IntRange MinValue;
    public static IntRange MaxValue;
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public class Microsoft.TeamFoundation.TestManagement.Client.InvalidParameterNameException : TestManagementValidationException {
    private string m_name;
    public string Name { get; }
    public InvalidParameterNameException(string message, string name);
    public InvalidParameterNameException(string message, string name, Exception innerException);
    protected InvalidParameterNameException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    public string get_Name();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public class Microsoft.TeamFoundation.TestManagement.Client.InvalidQueryException : TestManagementValidationException {
    private string m_queryText;
    public string QueryText { get; }
    public InvalidQueryException(string message, Exception innerException, string queryText);
    public InvalidQueryException(string message, string queryText);
    protected InvalidQueryException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    public string get_QueryText();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public class Microsoft.TeamFoundation.TestManagement.Client.InvalidResultUpdateRequestException : TestManagementValidationException {
    public InvalidResultUpdateRequestException(string message);
    public InvalidResultUpdateRequestException(string message, Exception ex);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public class Microsoft.TeamFoundation.TestManagement.Client.InvalidStructurePathException : TestManagementValidationException {
    public InvalidStructurePathException(string message);
    public InvalidStructurePathException(string message, Exception ex);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public class Microsoft.TeamFoundation.TestManagement.Client.InvalidWorkItemTypeException : TestManagementValidationException {
    private string m_expected;
    private string m_actual;
    public string Expected { get; }
    public string Actual { get; }
    public InvalidWorkItemTypeException(string message, string expected, string actual);
    public InvalidWorkItemTypeException(string message, Exception innerException, string expected, string actual);
    protected InvalidWorkItemTypeException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    public string get_Expected();
    public string get_Actual();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.IPropertyOwner {
    public bool IsDirty { get; }
    public IEnumerable`1<string> InvalidProperties { get; }
    public abstract virtual bool get_IsDirty();
    public abstract virtual IEnumerable`1<string> get_InvalidProperties();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.IRequirementTestSuite {
    public int RequirementId { get; }
    public abstract virtual int get_RequirementId();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.IRequirementTestSuite2 {
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ISession {
    public TimeSpan Duration { get; public set; }
    public SessionState State { get; public set; }
    public string Sprint { get; public set; }
    public string ComputerName { get; public set; }
    public int UserStoryId { get; public set; }
    public int CharterId { get; public set; }
    public int FeedbackId { get; public set; }
    public string UserStoryTitle { get; }
    public SessionPropertyCollection`1<ISessionNote> Notes { get; }
    public SessionPropertyCollection`1<ISessionBookmark> Bookmarks { get; }
    public int TestConfigurationId { get; public set; }
    public string TestConfigurationName { get; public set; }
    public abstract virtual TimeSpan get_Duration();
    public abstract virtual void set_Duration(TimeSpan value);
    public abstract virtual SessionState get_State();
    public abstract virtual void set_State(SessionState value);
    public abstract virtual string get_Sprint();
    public abstract virtual void set_Sprint(string value);
    public abstract virtual string get_ComputerName();
    public abstract virtual void set_ComputerName(string value);
    public abstract virtual int get_UserStoryId();
    public abstract virtual void set_UserStoryId(int value);
    public abstract virtual int get_CharterId();
    public abstract virtual void set_CharterId(int value);
    public abstract virtual int get_FeedbackId();
    public abstract virtual void set_FeedbackId(int value);
    public abstract virtual string get_UserStoryTitle();
    public abstract virtual SessionPropertyCollection`1<ISessionNote> get_Notes();
    public abstract virtual SessionPropertyCollection`1<ISessionBookmark> get_Bookmarks();
    public abstract virtual int get_TestConfigurationId();
    public abstract virtual void set_TestConfigurationId(int value);
    public abstract virtual string get_TestConfigurationName();
    public abstract virtual void set_TestConfigurationName(string value);
    public abstract virtual void AssociateWorkItem(WorkItem workItem);
    public abstract virtual void DisassociateWorkItem(WorkItem workItem);
    public abstract virtual Int32[] QueryAssociatedWorkItems();
    public abstract virtual ISessionNote CreateNote();
    public abstract virtual ISessionBookmark CreateBookmark();
    public abstract virtual void Save(bool uploadInBackground);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ISessionBookmark {
    public Uri ArtifactUri { get; public set; }
    public abstract virtual Uri get_ArtifactUri();
    public abstract virtual void set_ArtifactUri(Uri value);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ISessionHelper {
    public abstract virtual ISession Create();
    public abstract virtual ISession Create(int testPlanId);
    public abstract virtual ISession Find(int sessionId);
    public abstract virtual ISession FindByLink(Uri artifactUri);
    public abstract virtual IEnumerable`1<ISession> Query(string queryText);
    public abstract virtual int Count(string queryText);
    public abstract virtual void Delete(IEnumerable`1<ISession> sessions);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ISessionNote {
    public TimeSpan CreationTime { get; public set; }
    public string Comment { get; public set; }
    public abstract virtual TimeSpan get_CreationTime();
    public abstract virtual void set_CreationTime(TimeSpan value);
    public abstract virtual string get_Comment();
    public abstract virtual void set_Comment(string value);
}
[EditorBrowsableAttribute("1")]
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ISharedParameterDataSet {
    [DebuggerBrowsableAttribute("0")]
public string Title { get; }
    [DebuggerBrowsableAttribute("0")]
public LinkCollection Links { get; }
    [DebuggerBrowsableAttribute("0")]
public IList`1<string> ParameterNames { get; }
    [DebuggerBrowsableAttribute("0")]
public ISharedParameterData ParameterData { get; }
    [DebuggerBrowsableAttribute("0")]
public string Area { get; public set; }
    [DebuggerBrowsableAttribute("0")]
public string Description { get; public set; }
    public abstract virtual string get_Title();
    public abstract virtual LinkCollection get_Links();
    public abstract virtual IList`1<string> get_ParameterNames();
    public abstract virtual ISharedParameterData get_ParameterData();
    public abstract virtual string get_Area();
    public abstract virtual void set_Area(string value);
    public abstract virtual string get_Description();
    public abstract virtual void set_Description(string value);
    public abstract virtual void Save();
    public abstract virtual void Refresh();
    public abstract virtual void Flush();
}
[EditorBrowsableAttribute("1")]
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ISharedParameterDataSetHelper {
    public abstract virtual ISharedParameterDataSet Find(int sharedParameterDataSetId);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ISharedStep {
    public ITestAttachment ActionRecording { get; public set; }
    public ITestCaseCollection TestCaseReferences { get; }
    public abstract virtual ITestAttachment CreateActionRecording(string localFileName);
    public abstract virtual ITestAttachment get_ActionRecording();
    public abstract virtual void set_ActionRecording(ITestAttachment value);
    public abstract virtual ITestCaseCollection get_TestCaseReferences();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ISharedStepCollection {
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ISharedStepHelper {
    public abstract virtual ISharedStep Create();
    public abstract virtual ISharedStep Find(int sharedStepId);
    public abstract virtual ISharedStep Find(int sharedStepId, int revision);
    public abstract virtual IEnumerable`1<ISharedStep> Query(string queryText);
    public abstract virtual IEnumerable`1<ISharedStep> Query(string queryText, IDictionary context);
    public abstract virtual int Count(string queryText);
    public abstract virtual int Count(string queryText, IDictionary wiqlContext);
    public abstract virtual bool IsWorkItemCompatible(WorkItem workItem);
    public abstract virtual bool DoRequiredFieldsExist();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ISharedStepReference {
    public int SharedStepId { get; public set; }
    public abstract virtual int get_SharedStepId();
    public abstract virtual void set_SharedStepId(int value);
    public abstract virtual ISharedStep FindSharedStep();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ISharedStepResult {
    public int SharedStepId { get; public set; }
    public int SharedStepRevision { get; public set; }
    public TestActionResultCollection Actions { get; }
    public abstract virtual int get_SharedStepId();
    public abstract virtual void set_SharedStepId(int value);
    public abstract virtual int get_SharedStepRevision();
    public abstract virtual void set_SharedStepRevision(int value);
    public abstract virtual TestActionResultCollection get_Actions();
    public abstract virtual ISharedStep GetSharedStep();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.IStaticTestSuite {
    public ITestSuiteEntryCollection Entries { get; }
    public TestManagementException EntriesException { get; }
    public ITestSuiteCollection SubSuites { get; }
    public abstract virtual ITestSuiteEntryCollection get_Entries();
    public abstract virtual TestManagementException get_EntriesException();
    public abstract virtual ITestSuiteCollection get_SubSuites();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.IStaticTestSuite2 {
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestAction {
    public int Id { get; }
    public ITestActionGroup Parent { get; }
    public ITestBase Owner { get; }
    public abstract virtual int get_Id();
    public abstract virtual ITestActionGroup get_Parent();
    public abstract virtual ITestBase get_Owner();
    public abstract virtual ITestAction CopyToNewOwner(ITestBase newOwner);
    public abstract virtual void MoveToNewOwner(ITestBase newOwner);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestActionGroup {
    public string Name { get; public set; }
    public TestActionCollection Actions { get; }
    public abstract virtual string get_Name();
    public abstract virtual void set_Name(string value);
    public abstract virtual TestActionCollection get_Actions();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal interface Microsoft.TeamFoundation.TestManagement.Client.ITestActionOwner {
    public abstract virtual int GetNextAvailableActionId();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestActionResult {
    public int ActionId { get; public set; }
    public abstract virtual int get_ActionId();
    public abstract virtual void set_ActionId(int value);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestAttachment {
    public string Comment { get; public set; }
    public string Name { get; public set; }
    public long Length { get; }
    public string AttachmentType { get; public set; }
    public Uri Uri { get; }
    public bool IsComplete { get; }
    public Uri ArtifactUri { get; }
    public abstract virtual string get_Comment();
    public abstract virtual void set_Comment(string value);
    public abstract virtual string get_Name();
    public abstract virtual void set_Name(string value);
    public abstract virtual long get_Length();
    public abstract virtual string get_AttachmentType();
    public abstract virtual void set_AttachmentType(string value);
    public abstract virtual void DownloadToArray(Byte[] contents, int offset);
    public abstract virtual void DownloadToFile(string localFileName);
    public abstract virtual Uri get_Uri();
    public abstract virtual void AssociateWorkItem(WorkItem workItem);
    public abstract virtual void DisassociateWorkItem(WorkItem workItem);
    public abstract virtual bool get_IsComplete();
    public abstract virtual Uri get_ArtifactUri();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestBase {
    public string Title { get; public set; }
    public LinkCollection Links { get; }
    public FieldCollection CustomFields { get; }
    public WorkItem WorkItem { get; }
    public TeamFoundationIdentity Owner { get; public set; }
    public string OwnerName { get; }
    public Guid OwnerTeamFoundationId { get; public set; }
    public int Priority { get; public set; }
    public string Area { get; public set; }
    public string Description { get; public set; }
    public string State { get; public set; }
    public string Reason { get; public set; }
    public bool Exists { get; }
    public TestActionCollection Actions { get; }
    public DateTime DateModified { get; }
    public DateTime DateCreated { get; }
    public TestParameterCollection TestParameters { get; }
    public abstract virtual string get_Title();
    public abstract virtual void set_Title(string value);
    public abstract virtual LinkCollection get_Links();
    public abstract virtual FieldCollection get_CustomFields();
    public abstract virtual WorkItem get_WorkItem();
    public abstract virtual TeamFoundationIdentity get_Owner();
    public abstract virtual void set_Owner(TeamFoundationIdentity value);
    public abstract virtual string get_OwnerName();
    public abstract virtual Guid get_OwnerTeamFoundationId();
    public abstract virtual void set_OwnerTeamFoundationId(Guid value);
    public abstract virtual int get_Priority();
    public abstract virtual void set_Priority(int value);
    public abstract virtual string get_Area();
    public abstract virtual void set_Area(string value);
    public abstract virtual string get_Description();
    public abstract virtual void set_Description(string value);
    public abstract virtual string get_State();
    public abstract virtual void set_State(string value);
    public abstract virtual string get_Reason();
    public abstract virtual void set_Reason(string value);
    public abstract virtual bool get_Exists();
    public abstract virtual void Flush();
    public abstract virtual void Save();
    public abstract virtual void Refresh();
    public abstract virtual ITestStep CreateTestStep();
    public abstract virtual ITestActionGroup CreateTestActionGroup();
    public abstract virtual ISharedStepReference CreateSharedStepReference();
    public abstract virtual TestActionCollection get_Actions();
    public abstract virtual ITestAction FindAction(int id);
    public abstract virtual void OverrideParameter(string parameterName);
    public abstract virtual void RenameParameter(string fromName, string toName);
    public abstract virtual void ReplaceParameter(string parameterName, string text);
    public abstract virtual DateTime get_DateModified();
    public abstract virtual DateTime get_DateCreated();
    public abstract virtual TestParameterCollection get_TestParameters();
    [CompilerGeneratedAttribute]
public abstract virtual void add_TestParameterDeletingEvent(TestParameterDeletingEventEventHandler value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_TestParameterDeletingEvent(TestParameterDeletingEventEventHandler value);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestCase {
    public bool IsAutomated { get; }
    public ITestImplementation Implementation { get; public set; }
    public DataSet Data { get; }
    public DataTable DefaultTable { get; }
    public DataSet DataReadOnly { get; }
    public DataTable DefaultTableReadOnly { get; }
    public ITestSuiteEntry TestSuiteEntry { get; }
    public abstract virtual bool get_IsAutomated();
    public abstract virtual ITestImplementation get_Implementation();
    public abstract virtual void set_Implementation(ITestImplementation value);
    public abstract virtual DataSet get_Data();
    public abstract virtual DataTable get_DefaultTable();
    public abstract virtual DataSet get_DataReadOnly();
    public abstract virtual DataTable get_DefaultTableReadOnly();
    public abstract virtual ITestAttachment CreateAttachment(Byte[] contents, int offset, int length);
    public abstract virtual ITestSuiteEntry get_TestSuiteEntry();
    public abstract virtual ISharedStep GetReferencedSharedStep(int sharedStepId);
    public abstract virtual ISharedStep GetReferencedSharedStep(int sharedStepId, int sharedStepRevision);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestCase2 {
    public bool ReferencesSharedParameterDataSet { get; }
    public int DefaultSharedParameterDataSetWorkItemId { get; }
    public abstract virtual bool get_ReferencesSharedParameterDataSet();
    public abstract virtual int get_DefaultSharedParameterDataSetWorkItemId();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestCase3 {
    public ISharedParameterDataSet DefaultSharedParameterDataSet { get; }
    public abstract virtual ISharedParameterDataSet get_DefaultSharedParameterDataSet();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestCaseCollection {
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestCaseHelper {
    public abstract virtual ITestCase Create();
    public abstract virtual ITestCase Create(WorkItemType workItemType);
    public abstract virtual ITestCase Find(int testCaseId);
    public abstract virtual ITestCase Find(int testCaseId, int revision);
    public abstract virtual IEnumerable`1<ITestCase> Query(string queryText);
    public abstract virtual IEnumerable`1<ITestCase> Query(string queryText, IDictionary wiqlContext);
    public abstract virtual int Count(string queryText);
    public abstract virtual int Count(string queryText, IDictionary wiqlContext);
    public abstract virtual IEnumerable`1<ITestCase> InPlans(string queryText, bool isInPlans);
    public abstract virtual bool IsWorkItemCompatible(WorkItem workItem);
    public abstract virtual bool DoRequiredFieldsExist();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestCaseProperties {
    public Guid Owner { get; public set; }
    public byte Priority { get; public set; }
    public string FullyQualifiedTestName { get; public set; }
    public abstract virtual Guid get_Owner();
    public abstract virtual void set_Owner(Guid value);
    public abstract virtual byte get_Priority();
    public abstract virtual void set_Priority(byte value);
    public abstract virtual string get_FullyQualifiedTestName();
    public abstract virtual void set_FullyQualifiedTestName(string value);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestCaseQuery {
    public string Name { get; }
    public string Owner { get; }
    public string QueryText { get; }
    public abstract virtual string get_Name();
    public abstract virtual string get_Owner();
    public abstract virtual string get_QueryText();
    public abstract virtual IEnumerable`1<ITestCase> Execute();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResult {
    public int TestRunId { get; }
    public int TestResultId { get; }
    public int TestCaseId { get; }
    public int TestConfigurationId { get; }
    public string TestConfigurationName { get; }
    public int TestPointId { get; }
    public TestResultState State { get; public set; }
    public int ResolutionStateId { get; public set; }
    public Uri ArtifactUri { get; }
    public DateTime LastUpdated { get; }
    public TeamFoundationIdentity LastUpdatedBy { get; }
    public string LastUpdatedByName { get; }
    public TeamFoundationIdentity Owner { get; public set; }
    public Guid OwnerTeamFoundationId { get; public set; }
    public string OwnerName { get; }
    public TeamFoundationIdentity RunBy { get; public set; }
    public Guid RunByTeamFoundationId { get; public set; }
    public string RunByName { get; }
    public int Priority { get; public set; }
    public string TestCaseTitle { get; }
    public string TestCaseArea { get; }
    public string ComputerName { get; public set; }
    public int TestCaseRevision { get; public set; }
    public ITestAttachment ActionRecording { get; public set; }
    public int ResetCount { get; }
    [ObsoleteAttribute("This property is deprecated. FailureTypeId should be used instead.")]
public FailureType FailureType { get; public set; }
    public int FailureTypeId { get; public set; }
    public ITestImplementation Implementation { get; }
    public int Revision { get; }
    public bool IsFinished { get; }
    public string BuildNumber { get; }
    public ITestIterationResultCollection Iterations { get; }
    public abstract virtual int get_TestRunId();
    public abstract virtual int get_TestResultId();
    public abstract virtual int get_TestCaseId();
    public abstract virtual int get_TestConfigurationId();
    public abstract virtual string get_TestConfigurationName();
    public abstract virtual int get_TestPointId();
    public abstract virtual TestResultState get_State();
    public abstract virtual void set_State(TestResultState value);
    public abstract virtual int get_ResolutionStateId();
    public abstract virtual void set_ResolutionStateId(int value);
    public abstract virtual Uri get_ArtifactUri();
    public abstract virtual DateTime get_LastUpdated();
    public abstract virtual TeamFoundationIdentity get_LastUpdatedBy();
    public abstract virtual string get_LastUpdatedByName();
    public abstract virtual TeamFoundationIdentity get_Owner();
    public abstract virtual void set_Owner(TeamFoundationIdentity value);
    public abstract virtual Guid get_OwnerTeamFoundationId();
    public abstract virtual void set_OwnerTeamFoundationId(Guid value);
    public abstract virtual string get_OwnerName();
    public abstract virtual TeamFoundationIdentity get_RunBy();
    public abstract virtual void set_RunBy(TeamFoundationIdentity value);
    public abstract virtual Guid get_RunByTeamFoundationId();
    public abstract virtual void set_RunByTeamFoundationId(Guid value);
    public abstract virtual string get_RunByName();
    public abstract virtual int get_Priority();
    public abstract virtual void set_Priority(int value);
    public abstract virtual string get_TestCaseTitle();
    public abstract virtual string get_TestCaseArea();
    public abstract virtual string get_ComputerName();
    public abstract virtual void set_ComputerName(string value);
    public abstract virtual int get_TestCaseRevision();
    public abstract virtual void set_TestCaseRevision(int value);
    public abstract virtual ITestAttachment get_ActionRecording();
    public abstract virtual void set_ActionRecording(ITestAttachment value);
    public abstract virtual int get_ResetCount();
    public abstract virtual FailureType get_FailureType();
    public abstract virtual void set_FailureType(FailureType value);
    public abstract virtual int get_FailureTypeId();
    public abstract virtual void set_FailureTypeId(int value);
    public abstract virtual ITestImplementation get_Implementation();
    public abstract virtual int get_Revision();
    public abstract virtual bool get_IsFinished();
    public abstract virtual string get_BuildNumber();
    public abstract virtual ITestAttachment CreateAttachment(Byte[] contents, int offset, int length);
    public abstract virtual ITestIterationResult CreateIteration(int iterationId);
    public abstract virtual ITestIterationResultCollection get_Iterations();
    public abstract virtual ITestCase GetTestCase();
    public abstract virtual ITestRun GetTestRun();
    public abstract virtual void AssociateWorkItem(WorkItem workItem);
    public abstract virtual void DisassociateWorkItem(WorkItem workItem);
    public abstract virtual Int32[] QueryAssociatedWorkItems();
    public abstract virtual Artifact[] QueryAssociatedWorkItemArtifacts();
    public abstract virtual void Refresh();
    public abstract virtual void Reset();
    public abstract virtual void Save();
    public abstract virtual void Save(bool uploadInBackground);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResultCollection {
    public abstract virtual void Save(bool uploadInBackground);
    public abstract virtual Int32[] QueryAssociatedWorkItems();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResultHelper {
    public abstract virtual ITestCaseResult CreateForUpdate(int testRunId, int testResultId);
    public abstract virtual ITestCaseResult Find(int testRunId, int testResultId);
    public abstract virtual ITestCaseResult FindByLink(Uri artifactUri, ITestAttachment& testAttachment);
    public abstract virtual ITestCaseResultCollection Query(string queryText);
    public abstract virtual ITestCaseResultCollection ByTestId(int testCaseId);
    public abstract virtual void Reset(ITestCaseResult[] results);
    public abstract virtual void Save(ITestCaseResult[] results, bool uploadInBackground);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestCaseResultIdentifier {
    public int TestRunId { get; }
    public int TestResultId { get; }
    public abstract virtual int get_TestRunId();
    public abstract virtual int get_TestResultId();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestConfiguration {
    public string Name { get; public set; }
    public string Description { get; public set; }
    public TestConfigurationState State { get; public set; }
    public string AreaPath { get; public set; }
    public bool IsDefault { get; public set; }
    public IDictionary`2<string, string> Values { get; }
    public TeamFoundationIdentity LastUpdatedBy { get; }
    public string LastUpdatedByName { get; }
    public DateTime LastUpdated { get; }
    public int Revision { get; }
    public abstract virtual string get_Name();
    public abstract virtual void set_Name(string value);
    public abstract virtual string get_Description();
    public abstract virtual void set_Description(string value);
    public abstract virtual TestConfigurationState get_State();
    public abstract virtual void set_State(TestConfigurationState value);
    public abstract virtual string get_AreaPath();
    public abstract virtual void set_AreaPath(string value);
    public abstract virtual bool get_IsDefault();
    public abstract virtual void set_IsDefault(bool value);
    public abstract virtual IDictionary`2<string, string> get_Values();
    public abstract virtual TeamFoundationIdentity get_LastUpdatedBy();
    public abstract virtual string get_LastUpdatedByName();
    public abstract virtual DateTime get_LastUpdated();
    public abstract virtual int get_Revision();
    public abstract virtual void Delete();
    public abstract virtual void Refresh();
    public abstract virtual void Save();
    public abstract virtual void Save(bool updateInUse);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestConfigurationCollection {
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestConfigurationHelper {
    public abstract virtual ITestConfiguration Create();
    public abstract virtual ITestConfiguration Find(int testConfigurationId);
    public abstract virtual ITestConfigurationCollection Query(string queryText);
    public abstract virtual ITestConfigurationCollection Query(string queryText, int planId);
    public abstract virtual ITestConfigurationCollection Query(string queryText, IDictionary context);
    public abstract virtual int Count(string queryText);
    public abstract virtual ITestConfigurationCollection CreateFromFile(string fileName);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestController {
    public string DisplayName { get; public set; }
    public string Name { get; public set; }
    public string Description { get; public set; }
    public TestControllerState State { get; }
    public string GroupId { get; public set; }
    public IDictionary`2<string, string> Properties { get; }
    public ITestEnvironmentHelper TestEnvironments { get; }
    public abstract virtual string get_DisplayName();
    public abstract virtual void set_DisplayName(string value);
    public abstract virtual string get_Name();
    public abstract virtual void set_Name(string value);
    public abstract virtual string get_Description();
    public abstract virtual void set_Description(string value);
    public abstract virtual TestControllerState get_State();
    public abstract virtual string get_GroupId();
    public abstract virtual void set_GroupId(string value);
    public abstract virtual IDictionary`2<string, string> get_Properties();
    public abstract virtual ITestEnvironmentHelper get_TestEnvironments();
    public abstract virtual void Register();
    public abstract virtual void Unregister();
    public abstract virtual void Update();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestControllerHelper {
    public abstract virtual ITestController Create();
    public abstract virtual IEnumerable`1<ITestController> Query();
    public abstract virtual IEnumerable`1<ITestController> Query(string groupId);
    public abstract virtual ITestController Find(string testControllerName);
    public abstract virtual void Register(IEnumerable`1<ITestController> testControllers);
    public abstract virtual void Unregister(IEnumerable`1<ITestController> testControllers);
    public abstract virtual void Update(IEnumerable`1<ITestController> testControllers);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestEnvironment {
    public Guid Id { get; public set; }
    public string Name { get; public set; }
    public string DisplayName { get; public set; }
    public string Description { get; public set; }
    public ITestManagementTeamProject TeamProject { get; }
    public string ControllerName { get; }
    public string ControllerDisplayName { get; }
    public ITestController TestController { get; }
    public string EnvironmentType { get; public set; }
    public TeamFoundationIdentity Owner { get; public set; }
    public DateTime DateCreated { get; }
    public Uri LabEnvironmentUri { get; public set; }
    public Uri LabServerUri { get; public set; }
    public Guid ControllerEnvironmentId { get; public set; }
    public IMachineRoleCollection MachineRoles { get; }
    public IDictionary`2<string, string> Properties { get; }
    public abstract virtual Guid get_Id();
    public abstract virtual void set_Id(Guid value);
    public abstract virtual string get_Name();
    public abstract virtual void set_Name(string value);
    public abstract virtual string get_DisplayName();
    public abstract virtual void set_DisplayName(string value);
    public abstract virtual string get_Description();
    public abstract virtual void set_Description(string value);
    public abstract virtual ITestManagementTeamProject get_TeamProject();
    public abstract virtual string get_ControllerName();
    public abstract virtual string get_ControllerDisplayName();
    public abstract virtual ITestController get_TestController();
    public abstract virtual string get_EnvironmentType();
    public abstract virtual void set_EnvironmentType(string value);
    public abstract virtual TeamFoundationIdentity get_Owner();
    public abstract virtual void set_Owner(TeamFoundationIdentity value);
    public abstract virtual DateTime get_DateCreated();
    public abstract virtual Uri get_LabEnvironmentUri();
    public abstract virtual void set_LabEnvironmentUri(Uri value);
    public abstract virtual Uri get_LabServerUri();
    public abstract virtual void set_LabServerUri(Uri value);
    public abstract virtual Guid get_ControllerEnvironmentId();
    public abstract virtual void set_ControllerEnvironmentId(Guid value);
    public abstract virtual IMachineRoleCollection get_MachineRoles();
    public abstract virtual IDictionary`2<string, string> get_Properties();
    public abstract virtual void Register();
    public abstract virtual void Unregister();
    public abstract virtual void Update();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestEnvironmentHelper {
    public object Parent { get; }
    public abstract virtual object get_Parent();
    public abstract virtual ITestEnvironment Create();
    public abstract virtual ITestEnvironment Create(ITestManagementTeamProject teamProject, ITestController testController);
    public abstract virtual IEnumerable`1<ITestEnvironment> Query();
    public abstract virtual ITestEnvironment Find(Guid environmentId);
    public abstract virtual void Register(IEnumerable`1<ITestEnvironment> testEnvironments);
    public abstract virtual void Unregister(IEnumerable`1<ITestEnvironment> testEnvironments);
    public abstract virtual void Update(IEnumerable`1<ITestEnvironment> testEnvironments);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestExternalLink {
    public Uri Uri { get; public set; }
    public string Description { get; public set; }
    public abstract virtual Uri get_Uri();
    public abstract virtual void set_Uri(Uri value);
    public abstract virtual string get_Description();
    public abstract virtual void set_Description(string value);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestExternalLinkCollection {
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestFailureType {
    public string Name { get; public set; }
    public ITestManagementTeamProject Project { get; }
    public abstract virtual string get_Name();
    public abstract virtual void set_Name(string value);
    public abstract virtual ITestManagementTeamProject get_Project();
    public abstract virtual void Delete();
    public abstract virtual void Refresh();
    public abstract virtual void Save();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestFailureTypeHelper {
    public abstract virtual ITestFailureType Create();
    public abstract virtual ITestFailureType Find(int failureTypeId);
    public abstract virtual IEnumerable`1<ITestFailureType> Query();
    public abstract virtual IEnumerable`1<ITestFailureType> ImportFromFile(string fileName);
    public abstract virtual IEnumerable`1<ITestFailureType> CreateFromFile(string fileName);
    public abstract virtual void Export(IEnumerable`1<ITestFailureType> testFailureTypes, string fileName);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestImplementation {
    public string DisplayText { get; }
    public abstract virtual string get_DisplayText();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestIterationResult {
    public TestActionResultCollection Actions { get; }
    public int IterationId { get; }
    public TestResultParameterCollection Parameters { get; }
    public abstract virtual TestActionResultCollection get_Actions();
    public abstract virtual ITestStepResult CreateStepResult(int actionId);
    public abstract virtual ISharedStepResult CreateSharedStepResult(int actionId, int sharedStepId);
    public abstract virtual int get_IterationId();
    public abstract virtual ITestActionResult FindActionResult(ITestAction action);
    public abstract virtual TestResultParameterCollection get_Parameters();
}
[DefaultMemberAttribute("Item")]
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestIterationResultCollection {
    public ITestIterationResult Item { get; }
    public abstract virtual bool Contains(int iterationId);
    public abstract virtual bool Remove(int iterationId);
    public abstract virtual ITestIterationResult get_Item(int iterationId);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestManagementService {
    public TeamFoundationIdentity AuthorizedIdentity { get; }
    public IDataCollectorHelper DataCollectors { get; }
    public ITestControllerHelper TestControllers { get; }
    public ITfsIdentityStore TfsIdentityStore { get; }
    public abstract virtual TeamFoundationIdentity get_AuthorizedIdentity();
    public abstract virtual IDataCollectorHelper get_DataCollectors();
    public abstract virtual ITestControllerHelper get_TestControllers();
    public abstract virtual ITfsIdentityStore get_TfsIdentityStore();
    public abstract virtual ITestManagementTeamProject GetTeamProject(string projectName);
    public abstract virtual ITestManagementTeamProject GetTeamProject(Project project);
    public abstract virtual IEnumerable`1<ITestRun> QueryTestRuns(string queryText);
    public abstract virtual ITestRun FindTestRunByTmiRunId(Guid tmiRunId);
    public abstract virtual ITestCaseResult FindTestResultByLink(Uri artifactUri, ITestAttachment& testAttachment);
    public abstract virtual bool IsSupported();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestManagementService2 {
    public abstract virtual ITestManagementTeamProject2 GetTeamProject(string projectName);
    public abstract virtual ITestManagementTeamProject2 GetTeamProject(Project project);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject {
    public string TeamProjectName { get; }
    public ITestManagementService TestManagementService { get; }
    public int DefaultPageSize { get; public set; }
    public int DefaultPageSizeForTestPoints { get; public set; }
    public bool IsValid { get; }
    public IActionRecordingHelper ActionRecordings { get; }
    public IAttachmentUploadManager AttachmentUploadManager { get; }
    public IList`1<ITestCaseQuery> Queries { get; }
    public ITestCaseHelper TestCases { get; }
    public ISharedStepHelper SharedSteps { get; }
    public ITestPlanHelper TestPlans { get; }
    public ITestSuiteHelper TestSuites { get; }
    public ITestRunHelper TestRuns { get; }
    public ITestConfigurationHelper TestConfigurations { get; }
    public ITestResolutionStateHelper TestResolutionStates { get; }
    public ITestFailureTypeHelper TestFailureTypes { get; }
    public ITestVariableHelper TestVariables { get; }
    public ITestSettingsHelper TestSettings { get; }
    public ITestCaseResultHelper TestResults { get; }
    public ITestEnvironmentHelper TestEnvironments { get; }
    public IBugFieldMappingHelper BugFieldMappings { get; }
    public ISessionHelper Sessions { get; }
    public ITestPointHelper TestPoints { get; }
    public Project WitProject { get; }
    [ObsoleteAttribute("This property is deprecated. Use TestManagementServiceVersion instead")]
public ServerVersion ServerVersion { get; }
    public ITfsIdentityStore TfsIdentityStore { get; }
    public ICoverageAnalysisManager CoverageAnalysisManager { get; }
    public bool FetchIdentitiesInline { get; public set; }
    public string AttachmentDownloadUri { get; }
    public abstract virtual string get_TeamProjectName();
    public abstract virtual ITestManagementService get_TestManagementService();
    public abstract virtual int get_DefaultPageSize();
    public abstract virtual void set_DefaultPageSize(int value);
    public abstract virtual int get_DefaultPageSizeForTestPoints();
    public abstract virtual void set_DefaultPageSizeForTestPoints(int value);
    public abstract virtual bool get_IsValid();
    public abstract virtual IActionRecordingHelper get_ActionRecordings();
    public abstract virtual IAttachmentUploadManager get_AttachmentUploadManager();
    public abstract virtual IList`1<ITestCaseQuery> get_Queries();
    public abstract virtual IList`1<ITestAttachment> QueryAttachments(string queryText);
    public abstract virtual IList`1<ITestAttachment> QueryAttachmentsByLink(Uri artifactUri, ITestAttachment& attachment, bool getSiblingAttachments);
    public abstract virtual void DeleteAttachments(IEnumerable`1<ITestAttachment> attachments);
    public abstract virtual void DownloadAttachments(IList`1<ITestAttachment> attachments, IList`1<string> localFiles);
    public abstract virtual ITestCaseHelper get_TestCases();
    public abstract virtual ISharedStepHelper get_SharedSteps();
    public abstract virtual ITestPlanHelper get_TestPlans();
    public abstract virtual ITestSuiteHelper get_TestSuites();
    public abstract virtual ITestRunHelper get_TestRuns();
    public abstract virtual ITestConfigurationHelper get_TestConfigurations();
    public abstract virtual ITestResolutionStateHelper get_TestResolutionStates();
    public abstract virtual ITestFailureTypeHelper get_TestFailureTypes();
    public abstract virtual ITestVariableHelper get_TestVariables();
    public abstract virtual ITestSettingsHelper get_TestSettings();
    public abstract virtual ITestCaseResultHelper get_TestResults();
    public abstract virtual ITestEnvironmentHelper get_TestEnvironments();
    public abstract virtual IBugFieldMappingHelper get_BugFieldMappings();
    public abstract virtual ISessionHelper get_Sessions();
    public abstract virtual ITestPointHelper get_TestPoints();
    public abstract virtual ITestCaseQuery CreateTestQuery(string query);
    public abstract virtual ITestCaseQuery CreateTestQuery(Int32[] ids);
    public abstract virtual ITestCaseQuery CreateTestQuery(Int32[] ids, string queryHint);
    public abstract virtual ITestCaseQuery CreateTestQuery(Int32[] ids, Int32[] revs, string queryHint);
    public abstract virtual ITmiTestImplementation CreateTmiTestImplementation(string testName, string testType, Guid testTypeId, string storage, Guid testId);
    public abstract virtual ITmiTestImplementation CreateTmiTestImplementation(string testName, string testType, string storage, Guid testId);
    public abstract virtual ITestBase CreateFromWorkItem(WorkItem workItem);
    public abstract virtual String[] WorkItemTypesFor(string categoryRefName);
    public abstract virtual Project get_WitProject();
    public abstract virtual ServerVersion get_ServerVersion();
    public abstract virtual ITfsIdentityStore get_TfsIdentityStore();
    public abstract virtual ICoverageAnalysisManager get_CoverageAnalysisManager();
    public abstract virtual bool get_FetchIdentitiesInline();
    public abstract virtual void set_FetchIdentitiesInline(bool value);
    public abstract virtual string get_AttachmentDownloadUri();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject2 {
    public ISharedParameterDataSetHelper SharedParameterDataSets { get; }
    public bool HasSupportForSharedParameterDataSets { get; }
    public TestManagementServiceVersion TestManagementServiceVersion { get; }
    public abstract virtual ISharedParameterDataSetHelper get_SharedParameterDataSets();
    public abstract virtual bool get_HasSupportForSharedParameterDataSets();
    public abstract virtual TestManagementServiceVersion get_TestManagementServiceVersion();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject3 {
    public abstract virtual ITestCaseProperties CreateTestCaseProperties(string testMethodName, string fullyQualifiedName, string testType, string storage, Guid testId);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestMessageLogEntry {
    public int TestMessageLogId { get; }
    public int EntryId { get; }
    public TeamFoundationIdentity User { get; }
    public string UserName { get; }
    public DateTime DateCreated { get; }
    public TestMessageLogEntryLevel LogLevel { get; }
    public string Message { get; }
    public abstract virtual int get_TestMessageLogId();
    public abstract virtual int get_EntryId();
    public abstract virtual TeamFoundationIdentity get_User();
    public abstract virtual string get_UserName();
    public abstract virtual DateTime get_DateCreated();
    public abstract virtual TestMessageLogEntryLevel get_LogLevel();
    public abstract virtual string get_Message();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestMessageLogOwner {
    public TestMessageLogEntryCollection TestMessageLogEntries { get; }
    public abstract virtual TestMessageLogEntryCollection get_TestMessageLogEntries();
    public abstract virtual void CreateLogEntry(string message, TestMessageLogEntryLevel level);
    public abstract virtual void RefreshLogEntries();
    public abstract virtual void SaveLogEntries();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestObject`1 {
    public int Revision { get; }
    public ITestManagementTeamProject Project { get; }
    public object UserData { get; public set; }
    public abstract virtual int get_Revision();
    public abstract virtual ITestManagementTeamProject get_Project();
    public abstract virtual object get_UserData();
    public abstract virtual void set_UserData(object value);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestObjectCollection`1 {
    public object SyncRoot { get; }
    public abstract virtual object get_SyncRoot();
    public abstract virtual void Move(int fromIndex, int toIndex);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestParameter {
    public string Name { get; }
    public IDictionary`2<string, string> Tags { get; }
    public bool IsDataBound { get; public set; }
    public bool IsReference { get; public set; }
    public bool IsOverridden { get; public set; }
    public bool IsOutput { get; }
    public string Value { get; public set; }
    public abstract virtual string get_Name();
    public abstract virtual IDictionary`2<string, string> get_Tags();
    public abstract virtual bool get_IsDataBound();
    public abstract virtual void set_IsDataBound(bool value);
    public abstract virtual bool get_IsReference();
    public abstract virtual void set_IsReference(bool value);
    public abstract virtual bool get_IsOverridden();
    public abstract virtual void set_IsOverridden(bool value);
    public abstract virtual bool get_IsOutput();
    public abstract virtual string get_Value();
    public abstract virtual void set_Value(string value);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestPlan {
    public string Name { get; public set; }
    public string Description { get; public set; }
    public TeamFoundationIdentity Owner { get; public set; }
    public Guid OwnerTeamFoundationId { get; public set; }
    public string OwnerName { get; }
    [ObsoleteAttribute("This property is obsolete. Status property in ITestPlan2 should be used instead.")]
public TestPlanState State { get; public set; }
    public DateTime StartDate { get; public set; }
    public DateTime EndDate { get; public set; }
    public int ManualTestSettingsId { get; public set; }
    public Guid ManualTestEnvironmentId { get; public set; }
    public int AutomatedTestSettingsId { get; public set; }
    public Guid AutomatedTestEnvironmentId { get; public set; }
    public IStaticTestSuite RootSuite { get; }
    public string AreaPath { get; public set; }
    public string Iteration { get; public set; }
    public IBuildFilter BuildFilter { get; }
    public Uri BuildUri { get; public set; }
    public string BuildNumber { get; }
    public string BuildDirectory { get; }
    public Uri PreviousBuildUri { get; }
    public DateTime BuildTakenDate { get; }
    public INewBuildStatistics NewBuildStatistics { get; }
    public ITestExternalLinkCollection Links { get; }
    public TeamFoundationIdentity LastUpdatedBy { get; }
    public string LastUpdatedByName { get; }
    public DateTime LastUpdated { get; }
    public abstract virtual string get_Name();
    public abstract virtual void set_Name(string value);
    public abstract virtual string get_Description();
    public abstract virtual void set_Description(string value);
    public abstract virtual TeamFoundationIdentity get_Owner();
    public abstract virtual void set_Owner(TeamFoundationIdentity value);
    public abstract virtual Guid get_OwnerTeamFoundationId();
    public abstract virtual void set_OwnerTeamFoundationId(Guid value);
    public abstract virtual string get_OwnerName();
    public abstract virtual TestPlanState get_State();
    public abstract virtual void set_State(TestPlanState value);
    public abstract virtual DateTime get_StartDate();
    public abstract virtual void set_StartDate(DateTime value);
    public abstract virtual DateTime get_EndDate();
    public abstract virtual void set_EndDate(DateTime value);
    public abstract virtual int get_ManualTestSettingsId();
    public abstract virtual void set_ManualTestSettingsId(int value);
    public abstract virtual Guid get_ManualTestEnvironmentId();
    public abstract virtual void set_ManualTestEnvironmentId(Guid value);
    public abstract virtual int get_AutomatedTestSettingsId();
    public abstract virtual void set_AutomatedTestSettingsId(int value);
    public abstract virtual Guid get_AutomatedTestEnvironmentId();
    public abstract virtual void set_AutomatedTestEnvironmentId(Guid value);
    public abstract virtual IStaticTestSuite get_RootSuite();
    public abstract virtual string get_AreaPath();
    public abstract virtual void set_AreaPath(string value);
    public abstract virtual string get_Iteration();
    public abstract virtual void set_Iteration(string value);
    public abstract virtual IBuildFilter get_BuildFilter();
    public abstract virtual Uri get_BuildUri();
    public abstract virtual void set_BuildUri(Uri value);
    public abstract virtual string get_BuildNumber();
    public abstract virtual string get_BuildDirectory();
    public abstract virtual Uri get_PreviousBuildUri();
    public abstract virtual DateTime get_BuildTakenDate();
    public abstract virtual INewBuildStatistics get_NewBuildStatistics();
    public abstract virtual ITestExternalLinkCollection get_Links();
    public abstract virtual TeamFoundationIdentity get_LastUpdatedBy();
    public abstract virtual string get_LastUpdatedByName();
    public abstract virtual DateTime get_LastUpdated();
    public abstract virtual ITestExternalLink CreateLink();
    public abstract virtual ITestRun CreateTestRun(bool isAutomated);
    public abstract virtual void Save();
    public abstract virtual void Refresh();
    public abstract virtual void RefreshRootSuite();
    public abstract virtual ITestPlan Clone();
    public abstract virtual void CopyPropertiesFrom(ITestPlan testPlan);
    public abstract virtual void Delete();
    public abstract virtual void Delete(DeleteAction action);
    public abstract virtual void SetBuildInfo(string number, string directory);
    public abstract virtual void RefreshTestCase(int testCaseId);
    public abstract virtual IImpactedTestPointCollection QueryImpactedPoints(Uri buildUri);
    public abstract virtual IImpactedTestPointCollection QueryImpactedPoints(Uri buildUri, string testCaseFieldText);
    public abstract virtual ITestPoint FindTestPoint(int testPointId);
    public abstract virtual ITestPoint FindTestPoint(int testPointId, string testCaseFieldText);
    public abstract virtual ITestPointCollection QueryTestPoints(string queryText);
    public abstract virtual ITestPointCollection QueryTestPointsAndStatistics(string queryText, string testCaseFieldText, ITestPointStatistics& statistics);
    public abstract virtual ITestPointCollection QueryTestPointsAndStatistics(string queryText, string testCaseFieldText, String[] testCaseProperties, ITestPointStatistics& statistics);
    public abstract virtual ITestPointCollection QueryTestPoints(string pointQueryText, string testCaseFieldText);
    public abstract virtual ITestPointCollection QueryTestPoints(string pointQueryText, string testCaseFieldText, String[] testCaseProperties, bool fetchFirstPage);
    public abstract virtual ITestPointStatistics QueryTestPointStatistics(string queryText);
    public abstract virtual ITestPointStatisticsByPivot QueryTestPointStatisticsByPivot(string queryText, List`1<TestPointStatisticsQueryPivotType> pivotList);
    public abstract virtual HierarchyEntry QueryTestPointHierarchy(string queryText);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestPlan2 {
    public string Status { get; public set; }
    public abstract virtual string get_Status();
    public abstract virtual void set_Status(string value);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestPlanCollection {
    public string QueryText { get; public set; }
    public abstract virtual void Refresh();
    public abstract virtual void RefreshStatistics();
    public abstract virtual string get_QueryText();
    public abstract virtual void set_QueryText(string value);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestPlanHelper {
    public abstract virtual ITestPlan Create();
    public abstract virtual ITestPlan Find(int testPlanId);
    public abstract virtual ITestPlanCollection Query(string queryText);
    public abstract virtual ITestPlanCollection Query(string queryText, IDictionary context);
    public abstract virtual int BeginCloneOperation(int sourcePlanId, ITestPlan destinationPlan, List`1<int> sourceSuiteIds, string projectName, CloneOptions options);
    public abstract virtual IList`1<CloneOperationInformation> FetchCloneInformation(int testPlanId);
    public abstract virtual CloneOperationInformation GetCloneOperationInformation(int opId);
    public abstract virtual IList`1<int> FetchPlanIdsWithCloneHistory();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestPlanHelper2 {
    public abstract virtual ITestPlan Find2(int testPlanId, bool excludePlansWithNoRootSuite);
    public abstract virtual ITestPlanCollection Query2(string queryText, bool excludePlansWithNoRootSuite);
    public abstract virtual ITestPlan CreateFromWorkItem(int workItemId);
}
[DefaultMemberAttribute("Item")]
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestPoint {
    public ITestPlan Plan { get; }
    public int SuiteId { get; }
    public int ConfigurationId { get; }
    public string ConfigurationName { get; }
    public ITestCase TestCaseWorkItem { get; }
    public int TestCaseId { get; }
    public bool TestCaseExists { get; }
    public TeamFoundationIdentity AssignedTo { get; public set; }
    public Guid AssignedToTeamFoundationId { get; public set; }
    public string AssignedToName { get; }
    public ITestCaseResult MostRecentResult { get; }
    public ReadOnlyObservableCollection`1<ITestPointProperties> History { get; }
    public bool IsTestCaseAutomated { get; }
    public bool HasCachedProperties { get; }
    public object Item { get; }
    public object UserData { get; public set; }
    public abstract virtual ITestPlan get_Plan();
    public abstract virtual int get_SuiteId();
    public abstract virtual int get_ConfigurationId();
    public abstract virtual string get_ConfigurationName();
    public abstract virtual ITestCase get_TestCaseWorkItem();
    public abstract virtual int get_TestCaseId();
    public abstract virtual bool get_TestCaseExists();
    public abstract virtual TeamFoundationIdentity get_AssignedTo();
    public abstract virtual void set_AssignedTo(TeamFoundationIdentity value);
    public abstract virtual Guid get_AssignedToTeamFoundationId();
    public abstract virtual void set_AssignedToTeamFoundationId(Guid value);
    public abstract virtual string get_AssignedToName();
    public abstract virtual ITestCaseResult get_MostRecentResult();
    public abstract virtual ReadOnlyObservableCollection`1<ITestPointProperties> get_History();
    public abstract virtual bool get_IsTestCaseAutomated();
    public abstract virtual bool get_HasCachedProperties();
    public abstract virtual object get_Item(string propertyName);
    public abstract virtual object get_UserData();
    public abstract virtual void set_UserData(object value);
    public abstract virtual void Block();
    public abstract virtual void Unblock();
    public abstract virtual void Save();
    public abstract virtual void Refresh();
    public abstract virtual Int32[] QueryAssociatedWorkItemsFromResults();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestPointAssignment {
    public int TestCaseId { get; public set; }
    public int ConfigurationId { get; public set; }
    public TeamFoundationIdentity AssignedTo { get; public set; }
    public Guid AssignedToTeamFoundationId { get; public set; }
    public string AssignedToName { get; }
    public abstract virtual int get_TestCaseId();
    public abstract virtual void set_TestCaseId(int value);
    public abstract virtual int get_ConfigurationId();
    public abstract virtual void set_ConfigurationId(int value);
    public abstract virtual TeamFoundationIdentity get_AssignedTo();
    public abstract virtual void set_AssignedTo(TeamFoundationIdentity value);
    public abstract virtual Guid get_AssignedToTeamFoundationId();
    public abstract virtual void set_AssignedToTeamFoundationId(Guid value);
    public abstract virtual string get_AssignedToName();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestPointCollection {
    public abstract virtual void Refresh(Int32[] pointIds, bool refreshTestCases);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestPointHelper {
    public abstract virtual void BlockTestPoints(ITestPoint[] pointsToBlock);
    public abstract virtual void UnblockTestPoints(ITestPoint[] pointsToUnblock);
    public abstract virtual void SaveTestPoints(ITestPoint[] pointsToSave);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestPointProperties {
    public TestPointState State { get; public set; }
    public string Comment { get; public set; }
    public int Revision { get; }
    public TeamFoundationIdentity LastUpdatedBy { get; }
    public string LastUpdatedByName { get; }
    public DateTime LastUpdated { get; }
    public int MostRecentRunId { get; }
    public int MostRecentResultId { get; }
    public TestResultState MostRecentResultState { get; }
    public TestOutcome MostRecentResultOutcome { get; }
    [ObsoleteAttribute("This property is deprecated. MostRecentFailureTypeId should be used instead.")]
public FailureType MostRecentFailureType { get; }
    public int MostRecentFailureTypeId { get; }
    public int MostRecentResolutionStateId { get; }
    public abstract virtual TestPointState get_State();
    public abstract virtual void set_State(TestPointState value);
    public abstract virtual string get_Comment();
    public abstract virtual void set_Comment(string value);
    public abstract virtual int get_Revision();
    public abstract virtual TeamFoundationIdentity get_LastUpdatedBy();
    public abstract virtual string get_LastUpdatedByName();
    public abstract virtual DateTime get_LastUpdated();
    public abstract virtual int get_MostRecentRunId();
    public abstract virtual int get_MostRecentResultId();
    public abstract virtual TestResultState get_MostRecentResultState();
    public abstract virtual TestOutcome get_MostRecentResultOutcome();
    public abstract virtual FailureType get_MostRecentFailureType();
    public abstract virtual int get_MostRecentFailureTypeId();
    public abstract virtual int get_MostRecentResolutionStateId();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestPointStatistic {
    public TestPointState PointState { get; }
    public TestResultState ResultState { get; }
    public TestOutcome ResultOutcome { get; }
    [ObsoleteAttribute("This property is deprecated. FailureTypeId should be used instead.")]
public FailureType FailureType { get; }
    public int FailureTypeId { get; }
    public int ResultResolutionStateId { get; }
    public int Count { get; }
    public abstract virtual TestPointState get_PointState();
    public abstract virtual TestResultState get_ResultState();
    public abstract virtual TestOutcome get_ResultOutcome();
    public abstract virtual FailureType get_FailureType();
    public abstract virtual int get_FailureTypeId();
    public abstract virtual int get_ResultResolutionStateId();
    public abstract virtual int get_Count();
}
[DefaultMemberAttribute("Item")]
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestPointStatistics {
    public int Item { get; }
    public int Item { get; }
    public int Item { get; }
    [ObsoleteAttribute("This indexer property is deprecated. FailureTypeStatistics should be used instead.")]
public int Item { get; }
    public IDictionary`2<int, int> FailureTypeStatistics { get; }
    public int Item { get; }
    public int TotalCount { get; }
    public abstract virtual int get_Item(TestPointState state);
    public abstract virtual int get_Item(TestResultState state);
    public abstract virtual int get_Item(TestOutcome state);
    public abstract virtual int get_Item(FailureType failureType);
    public abstract virtual IDictionary`2<int, int> get_FailureTypeStatistics();
    public abstract virtual int get_Item(int testResolutionState);
    public abstract virtual int get_TotalCount();
    public abstract virtual void Refresh();
    public abstract virtual ITestPointStatistic[] GetStatistics();
}
[DefaultMemberAttribute("Item")]
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestPointStatisticsByPivot {
    public List`1<ITestPointStatisticsPivotItem> Item { get; }
    public abstract virtual List`1<ITestPointStatisticsPivotItem> get_Item(TestPointStatisticsQueryPivotType key);
    public abstract virtual void Refresh();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestPointStatisticsPivotItem {
    public string Pivot { get; }
    public ITestPointStatistics Statistics { get; }
    public abstract virtual string get_Pivot();
    public abstract virtual ITestPointStatistics get_Statistics();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal interface Microsoft.TeamFoundation.TestManagement.Client.ITestRequirement {
    public int WorkItemId { get; }
    public WorkItem WorkItem { get; }
    public int TestCaseCount { get; }
    public TestPlanCollection Plans { get; }
    public abstract virtual int get_WorkItemId();
    public abstract virtual WorkItem get_WorkItem();
    public abstract virtual int get_TestCaseCount();
    public abstract virtual TestPlanCollection get_Plans();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestResolutionState {
    public string Name { get; public set; }
    public ITestManagementTeamProject Project { get; }
    public abstract virtual string get_Name();
    public abstract virtual void set_Name(string value);
    public abstract virtual ITestManagementTeamProject get_Project();
    public abstract virtual void Delete();
    public abstract virtual void Refresh();
    public abstract virtual void Save();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestResolutionStateHelper {
    public abstract virtual ITestResolutionState Create();
    public abstract virtual ITestResolutionState Find(int stateId);
    public abstract virtual IEnumerable`1<ITestResolutionState> Query();
    public abstract virtual IEnumerable`1<ITestResolutionState> ImportFromFile(string fileName);
    public abstract virtual IEnumerable`1<ITestResolutionState> CreateFromFile(string fileName);
    public abstract virtual void Export(IEnumerable`1<ITestResolutionState> testResolutionStates, string fileName);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestResolutionStateStatistic {
    public int Count { get; }
    public ITestResolutionState State { get; }
    public abstract virtual int get_Count();
    public abstract virtual ITestResolutionState get_State();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestResult {
    public DateTime DateCreated { get; }
    public DateTime DateCompleted { get; public set; }
    public DateTime DateStarted { get; public set; }
    public TimeSpan Duration { get; public set; }
    public List`1<string> CollectorsEnabled { get; }
    public TestOutcome Outcome { get; public set; }
    public string ErrorMessage { get; public set; }
    public string Comment { get; public set; }
    public abstract virtual DateTime get_DateCreated();
    public abstract virtual DateTime get_DateCompleted();
    public abstract virtual void set_DateCompleted(DateTime value);
    public abstract virtual DateTime get_DateStarted();
    public abstract virtual void set_DateStarted(DateTime value);
    public abstract virtual TimeSpan get_Duration();
    public abstract virtual void set_Duration(TimeSpan value);
    public abstract virtual List`1<string> get_CollectorsEnabled();
    public abstract virtual TestOutcome get_Outcome();
    public abstract virtual void set_Outcome(TestOutcome value);
    public abstract virtual string get_ErrorMessage();
    public abstract virtual void set_ErrorMessage(string value);
    public abstract virtual string get_Comment();
    public abstract virtual void set_Comment(string value);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestResultParameter {
    public string Name { get; public set; }
    public string ExpectedValue { get; public set; }
    public string ActualValue { get; public set; }
    public abstract virtual string get_Name();
    public abstract virtual void set_Name(string value);
    public abstract virtual string get_ExpectedValue();
    public abstract virtual void set_ExpectedValue(string value);
    public abstract virtual string get_ActualValue();
    public abstract virtual void set_ActualValue(string value);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestRun {
    public string BuildDirectory { get; public set; }
    public string BuildPlatform { get; public set; }
    public string BuildFlavor { get; public set; }
    public ITestManagementTeamProject Project { get; }
    public TestRunState State { get; public set; }
    public PostProcessState PostProcessState { get; }
    public string ErrorMessage { get; public set; }
    public DateTime DateDue { get; public set; }
    public ITestRunStatistics Statistics { get; }
    public string Iteration { get; public set; }
    public int BuildConfigurationId { get; }
    public TestRunType Type { get; public set; }
    public bool IsAutomated { get; public set; }
    public int Version { get; }
    public bool IsBvt { get; public set; }
    public int TotalTests { get; }
    public int IncompleteTests { get; }
    public int NotApplicableTests { get; }
    public int PassedTests { get; }
    public int UnanalyzedTests { get; }
    public abstract virtual string get_BuildDirectory();
    public abstract virtual void set_BuildDirectory(string value);
    public abstract virtual string get_BuildPlatform();
    public abstract virtual void set_BuildPlatform(string value);
    public abstract virtual string get_BuildFlavor();
    public abstract virtual void set_BuildFlavor(string value);
    public abstract virtual ITestManagementTeamProject get_Project();
    public abstract virtual TestRunState get_State();
    public abstract virtual void set_State(TestRunState value);
    public abstract virtual PostProcessState get_PostProcessState();
    public abstract virtual string get_ErrorMessage();
    public abstract virtual void set_ErrorMessage(string value);
    public abstract virtual DateTime get_DateDue();
    public abstract virtual void set_DateDue(DateTime value);
    public abstract virtual ITestRunStatistics get_Statistics();
    public abstract virtual string get_Iteration();
    public abstract virtual void set_Iteration(string value);
    public abstract virtual int get_BuildConfigurationId();
    public abstract virtual TestRunType get_Type();
    public abstract virtual void set_Type(TestRunType value);
    public abstract virtual bool get_IsAutomated();
    public abstract virtual void set_IsAutomated(bool value);
    public abstract virtual int get_Version();
    public abstract virtual bool get_IsBvt();
    public abstract virtual void set_IsBvt(bool value);
    public abstract virtual int get_TotalTests();
    public abstract virtual int get_IncompleteTests();
    public abstract virtual int get_NotApplicableTests();
    public abstract virtual int get_PassedTests();
    public abstract virtual int get_UnanalyzedTests();
    public abstract virtual ITestCaseResult AddTest(int configurationId, string testCaseTitle, string testCaseAreaUri, ITmiTestImplementation implementation);
    public abstract virtual ITestCaseResult AddTest(string testName);
    public abstract virtual void AddTest(int testCaseId, int configurationId, TeamFoundationIdentity owner);
    public abstract virtual void AddTestPoint(ITestPoint point, TeamFoundationIdentity owner);
    public abstract virtual ITestCaseResultCollection AddTestPoints(IEnumerable`1<ITestPoint> points, TeamFoundationIdentity owner);
    public abstract virtual ITestCaseResultCollection QueryResultsByOwner(TeamFoundationIdentity owner);
    public abstract virtual ITestCaseResultCollection QueryResults();
    public abstract virtual ITestCaseResultCollection QueryResults(bool includeActionResults);
    public abstract virtual ITestCaseResultCollection QueryResultsByOutcome(TestOutcome outcome);
    public abstract virtual ITestCaseResultCollection QueryResultsByStatus(TestResultState status);
    public abstract virtual void Abort(TestRunAbortOptions options);
    public abstract virtual void Abort();
    public abstract virtual bool Refresh(DateTime lastUpdated);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestRun2 {
    public abstract virtual void AddTests(IList`1<ITestCaseProperties> testCaseProperties, IList`1<int> configurationIds);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestRunBase {
    public string Title { get; public set; }
    public Uri BuildUri { get; public set; }
    public string BuildNumber { get; public set; }
    public string BuildPlatform { get; public set; }
    public string BuildFlavor { get; public set; }
    public int BuildConfigurationId { get; }
    public DateTime DateCreated { get; }
    public DateTime DateStarted { get; public set; }
    public DateTime DateCompleted { get; public set; }
    public DateTime LastUpdated { get; }
    public TeamFoundationIdentity LastUpdatedBy { get; }
    public string LastUpdatedByName { get; }
    public TeamFoundationIdentity Owner { get; public set; }
    public Guid OwnerTeamFoundationId { get; public set; }
    public string OwnerName { get; }
    public string Controller { get; public set; }
    public int TestSettingsId { get; }
    public Guid TestEnvironmentId { get; public set; }
    public int Revision { get; }
    public int TestPlanId { get; }
    public bool IsDirty { get; }
    public ITestSettings TestSettings { get; }
    public int LinkedWorkItemCount { get; }
    public string Comment { get; public set; }
    public abstract virtual string get_Title();
    public abstract virtual void set_Title(string value);
    public abstract virtual Uri get_BuildUri();
    public abstract virtual void set_BuildUri(Uri value);
    public abstract virtual string get_BuildNumber();
    public abstract virtual void set_BuildNumber(string value);
    public abstract virtual string get_BuildPlatform();
    public abstract virtual void set_BuildPlatform(string value);
    public abstract virtual string get_BuildFlavor();
    public abstract virtual void set_BuildFlavor(string value);
    public abstract virtual int get_BuildConfigurationId();
    public abstract virtual DateTime get_DateCreated();
    public abstract virtual DateTime get_DateStarted();
    public abstract virtual void set_DateStarted(DateTime value);
    public abstract virtual DateTime get_DateCompleted();
    public abstract virtual void set_DateCompleted(DateTime value);
    public abstract virtual DateTime get_LastUpdated();
    public abstract virtual TeamFoundationIdentity get_LastUpdatedBy();
    public abstract virtual string get_LastUpdatedByName();
    public abstract virtual TeamFoundationIdentity get_Owner();
    public abstract virtual void set_Owner(TeamFoundationIdentity value);
    public abstract virtual Guid get_OwnerTeamFoundationId();
    public abstract virtual void set_OwnerTeamFoundationId(Guid value);
    public abstract virtual string get_OwnerName();
    public abstract virtual string get_Controller();
    public abstract virtual void set_Controller(string value);
    public abstract virtual int get_TestSettingsId();
    public abstract virtual Guid get_TestEnvironmentId();
    public abstract virtual void set_TestEnvironmentId(Guid value);
    public abstract virtual int get_Revision();
    public abstract virtual int get_TestPlanId();
    public abstract virtual bool get_IsDirty();
    public abstract virtual ITestSettings get_TestSettings();
    public abstract virtual int get_LinkedWorkItemCount();
    public abstract virtual string get_Comment();
    public abstract virtual void set_Comment(string value);
    public abstract virtual void CopyTestSettings(ITestSettings settings);
    public abstract virtual ITestAttachment CreateAttachment(Byte[] contents, int offset, int length);
    public abstract virtual void Delete();
    public abstract virtual void Refresh();
    public abstract virtual void Save();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestRunCoverage {
    public int TestRunId { get; }
    public abstract virtual int get_TestRunId();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestRunHelper {
    public abstract virtual ITestRun Create();
    public abstract virtual ITestRun Find(int testRunId);
    public abstract virtual IEnumerable`1<ITestRun> Query(string queryText);
    public abstract virtual IEnumerable`1<ITestRun> Query(string queryText, bool includeStats);
    public abstract virtual int Count(string queryText);
    public abstract virtual IEnumerable`1<ITestRun> ByOwner(TeamFoundationIdentity owner);
    public abstract virtual IEnumerable`1<ITestRun> ByBuild(Uri buildUri);
    public abstract virtual void Delete(IEnumerable`1<ITestRun> runs);
    public abstract virtual void DeleteByBuild(Uri buildUri);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestRunStatistic {
    public TestResultState ResultState { get; }
    public TestOutcome ResultOutcome { get; }
    public ITestResolutionState ResolutionState { get; }
    public int Count { get; }
    public abstract virtual TestResultState get_ResultState();
    public abstract virtual TestOutcome get_ResultOutcome();
    public abstract virtual ITestResolutionState get_ResolutionState();
    public abstract virtual int get_Count();
}
[DefaultMemberAttribute("Item")]
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestRunStatistics {
    public int Item { get; }
    public int Item { get; }
    public int TotalTests { get; }
    public int PassedTests { get; }
    public int FailedTests { get; }
    public int InconclusiveTests { get; }
    public int CompletedTests { get; }
    public int InProgressTests { get; }
    public int PendingTests { get; }
    public IList`1<ITestResolutionStateStatistic> TestResolutionStatistics { get; }
    public abstract virtual int get_Item(TestResultState state);
    public abstract virtual int get_Item(TestOutcome state);
    public abstract virtual int get_TotalTests();
    public abstract virtual int get_PassedTests();
    public abstract virtual int get_FailedTests();
    public abstract virtual int get_InconclusiveTests();
    public abstract virtual int get_CompletedTests();
    public abstract virtual int get_InProgressTests();
    public abstract virtual int get_PendingTests();
    public abstract virtual IList`1<ITestResolutionStateStatistic> get_TestResolutionStatistics();
    public abstract virtual void Refresh();
    public abstract virtual ITestRunStatistic[] GetStatistics();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestSettings {
    public string Name { get; public set; }
    public string Description { get; public set; }
    public TeamFoundationIdentity CreatedBy { get; }
    public string CreatedByName { get; }
    public DateTime CreatedDate { get; }
    public XmlElement Settings { get; public set; }
    public ITestSettingsMachineRoleCollection MachineRoles { get; }
    public string AreaPath { get; public set; }
    public bool IsAutomated { get; public set; }
    public int Revision { get; }
    public TeamFoundationIdentity LastUpdatedBy { get; }
    public string LastUpdatedByName { get; }
    public DateTime LastUpdated { get; }
    public abstract virtual string get_Name();
    public abstract virtual void set_Name(string value);
    public abstract virtual string get_Description();
    public abstract virtual void set_Description(string value);
    public abstract virtual TeamFoundationIdentity get_CreatedBy();
    public abstract virtual string get_CreatedByName();
    public abstract virtual DateTime get_CreatedDate();
    public abstract virtual XmlElement get_Settings();
    public abstract virtual void set_Settings(XmlElement value);
    public abstract virtual ITestSettingsMachineRoleCollection get_MachineRoles();
    public abstract virtual string get_AreaPath();
    public abstract virtual void set_AreaPath(string value);
    public abstract virtual bool get_IsAutomated();
    public abstract virtual void set_IsAutomated(bool value);
    public abstract virtual int get_Revision();
    public abstract virtual TeamFoundationIdentity get_LastUpdatedBy();
    public abstract virtual string get_LastUpdatedByName();
    public abstract virtual DateTime get_LastUpdated();
    public abstract virtual void Delete();
    public abstract virtual void Refresh();
    public abstract virtual void Save();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestSettingsHelper {
    public abstract virtual ITestSettings Create();
    public abstract virtual ITestSettings Find(int settingId);
    public abstract virtual IEnumerable`1<ITestSettings> Query(string queryText);
    public abstract virtual int Count(string queryText);
    public abstract virtual IEnumerable`1<ITestSettings> CreateFromFile(string fileName);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestSettingsMachineRole {
    public bool IsExecution { get; public set; }
    public abstract virtual bool get_IsExecution();
    public abstract virtual void set_IsExecution(bool value);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestSettingsMachineRoleCollection {
    public abstract virtual ITestSettingsMachineRole Create();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestStep {
    public ParameterizedString Title { get; public set; }
    public ParameterizedString ExpectedResult { get; public set; }
    public string Description { get; public set; }
    public TestStepType TestStepType { get; public set; }
    public IAttachmentCollection Attachments { get; }
    public abstract virtual ParameterizedString get_Title();
    public abstract virtual void set_Title(ParameterizedString value);
    public abstract virtual ParameterizedString get_ExpectedResult();
    public abstract virtual void set_ExpectedResult(ParameterizedString value);
    public abstract virtual string get_Description();
    public abstract virtual void set_Description(string value);
    public abstract virtual TestStepType get_TestStepType();
    public abstract virtual void set_TestStepType(TestStepType value);
    public abstract virtual ITestAttachment CreateAttachment(string localFileName);
    public abstract virtual IAttachmentCollection get_Attachments();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestStepResult {
    public TestResultParameterCollection Parameters { get; }
    public abstract virtual TestResultParameterCollection get_Parameters();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteBase {
    public ITestPlan Plan { get; }
    public string Title { get; public set; }
    public string Description { get; public set; }
    public IStaticTestSuite Parent { get; }
    public bool IsRoot { get; }
    public IList`1<IdAndName> DefaultConfigurations { get; }
    public ITestSuiteEntryCollection TestCases { get; }
    public int TestCaseCount { get; }
    public ITestCaseCollection AllTestCases { get; }
    public TeamFoundationIdentity LastUpdatedBy { get; }
    public string LastUpdatedByName { get; }
    public DateTime LastUpdated { get; }
    public TestSuiteType TestSuiteType { get; }
    [ObsoleteAttribute("This property is obsolete. Status property in ITestSuiteBase2 should be used instead.")]
public TestSuiteState State { get; public set; }
    public ITestSuiteEntry TestSuiteEntry { get; }
    public abstract virtual ITestPlan get_Plan();
    public abstract virtual string get_Title();
    public abstract virtual void set_Title(string value);
    public abstract virtual string get_Description();
    public abstract virtual void set_Description(string value);
    public abstract virtual IStaticTestSuite get_Parent();
    public abstract virtual bool get_IsRoot();
    public abstract virtual IList`1<IdAndName> get_DefaultConfigurations();
    public abstract virtual ITestPointAssignment CreateTestPointAssignment(int testCaseId, IdAndName configuration, TeamFoundationIdentity assignedTo);
    public abstract virtual ITestPointAssignment CreateTestPointAssignment(int testCaseId, IdAndName configuration, Guid assignedTo);
    public abstract virtual void AssignTestPoints(IEnumerable`1<ITestPointAssignment> assignments);
    public abstract virtual void ClearDefaultConfigurations();
    public abstract virtual void SetDefaultConfigurations(IEnumerable`1<IdAndName> configurations);
    public abstract virtual void SetEntryConfigurations(IEnumerable`1<ITestSuiteEntry> entries, IEnumerable`1<IdAndName> configurations);
    public abstract virtual ITestSuiteEntryCollection get_TestCases();
    public abstract virtual int get_TestCaseCount();
    public abstract virtual ITestCaseCollection get_AllTestCases();
    public abstract virtual TeamFoundationIdentity get_LastUpdatedBy();
    public abstract virtual string get_LastUpdatedByName();
    public abstract virtual DateTime get_LastUpdated();
    public abstract virtual TestSuiteType get_TestSuiteType();
    public abstract virtual TestSuiteState get_State();
    public abstract virtual void set_State(TestSuiteState value);
    public abstract virtual void Refresh();
    public abstract virtual void Refresh(bool force);
    public abstract virtual ITestSuiteEntry get_TestSuiteEntry();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteBase2 {
    public string Status { get; public set; }
    public abstract virtual string get_Status();
    public abstract virtual void set_Status(string value);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteCollection {
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteEntry {
    public string Title { get; public set; }
    public TestSuiteEntryType EntryType { get; }
    public ITestObject`1<int> TestObject { get; }
    public int Id { get; }
    public ITestCase TestCase { get; }
    public ITestSuiteBase TestSuite { get; }
    public ITestSuiteBase ParentTestSuite { get; }
    public IList`1<IdAndName> Configurations { get; }
    public ITestPointAssignment[] PointAssignments { get; }
    public object UserData { get; public set; }
    public abstract virtual string get_Title();
    public abstract virtual void set_Title(string value);
    public abstract virtual TestSuiteEntryType get_EntryType();
    public abstract virtual ITestObject`1<int> get_TestObject();
    public abstract virtual int get_Id();
    public abstract virtual ITestCase get_TestCase();
    public abstract virtual ITestSuiteBase get_TestSuite();
    public abstract virtual ITestSuiteBase get_ParentTestSuite();
    public abstract virtual IList`1<IdAndName> get_Configurations();
    public abstract virtual ITestPointAssignment[] get_PointAssignments();
    public abstract virtual void UseDefaultConfigurations();
    public abstract virtual void SetConfigurations(IEnumerable`1<IdAndName> configurations);
    public abstract virtual object get_UserData();
    public abstract virtual void set_UserData(object value);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteEntryCollection {
    public abstract virtual void AddCases(IEnumerable`1<ITestCase> cases);
    public abstract virtual void AddCases(IEnumerable`1<ITestCase> cases, bool ignoreDuplicates);
    public abstract virtual void InsertCases(int index, IEnumerable`1<ITestCase> cases);
    public abstract virtual void InsertCases(int index, IEnumerable`1<ITestCase> cases, bool ignoreDuplicates);
    public abstract virtual void RemoveCases(IEnumerable`1<ITestCase> cases);
    public abstract virtual void RemoveEntries(IEnumerable`1<ITestSuiteEntry> entries);
    public abstract virtual void BulkMove(int index, IEnumerable`1<ITestSuiteEntry> entries);
    public abstract virtual void BulkMove(ITestSuiteEntryCollection destination, int index, IEnumerable`1<ITestSuiteEntry> entries, bool ignoreDuplicates);
    public abstract virtual void BulkCopy(ITestSuiteEntryCollection destination, int index, IEnumerable`1<ITestSuiteEntry> entries, bool ignoreDuplicates);
    public abstract virtual ITestSuiteEntry Add(ITestSuiteBase suite);
    public abstract virtual ITestSuiteEntry Insert(int index, ITestSuiteBase suite);
    public abstract virtual bool Remove(ITestSuiteBase suite);
    public abstract virtual ITestSuiteEntry Add(ITestCase testCase);
    public abstract virtual ITestSuiteEntry Insert(int index, ITestCase testCase);
    public abstract virtual bool Remove(ITestCase testCase);
    public abstract virtual bool Contains(ITestObject`1<int> testObject);
    public abstract virtual int IndexOf(ITestObject`1<int> testObject);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteHelper {
    public abstract virtual IStaticTestSuite CreateStatic();
    public abstract virtual IStaticTestSuite FetchTestSuitesForPlan(ITestPlan plan, int rootSuiteId);
    public abstract virtual IDynamicTestSuite CreateDynamic();
    public abstract virtual IRequirementTestSuite CreateRequirement(WorkItem requirementWorkItem);
    public abstract virtual ITestSuiteEntry CreateEntry(ITestCase testCase);
    public abstract virtual ITestSuiteEntry CreateEntry(ITestSuiteBase testSuite);
    public abstract virtual ITestSuiteBase Find(int testSuiteId);
    public abstract virtual ITestSuiteCollection Query(string queryText);
    public abstract virtual ITestSuiteCollection Query(string queryText, IDictionary context);
    public abstract virtual ITestSuiteCollection ReferencingTestCase(int testCaseId);
    public abstract virtual int BeginCloneOperation(ITestSuiteBase source, IStaticTestSuite destination, CloneOptions options);
    public abstract virtual int BeginCloneOperation(int sourceSuiteId, int destinationSuiteId, CloneOptions options, string targetProjectName);
    public abstract virtual CloneOperationInformation GetCloneOperationInformation(int opId);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestVariable {
    public string Name { get; public set; }
    public string Description { get; public set; }
    public int Revision { get; }
    public ObservableCollection`1<ITestVariableValue> AllowedValues { get; }
    public abstract virtual string get_Name();
    public abstract virtual void set_Name(string value);
    public abstract virtual string get_Description();
    public abstract virtual void set_Description(string value);
    public abstract virtual int get_Revision();
    public abstract virtual ObservableCollection`1<ITestVariableValue> get_AllowedValues();
    public abstract virtual void Delete();
    public abstract virtual void Refresh();
    public abstract virtual void Save();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestVariableHelper {
    public abstract virtual ITestVariable Create();
    public abstract virtual IEnumerable`1<ITestVariable> Query();
    public abstract virtual IEnumerable`1<ITestVariable> CreateFromFile(string fileName);
    public abstract virtual ITestVariableValue CreateVariableValue(string value);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITestVariableValue {
    public string Value { get; public set; }
    public abstract virtual string get_Value();
    public abstract virtual void set_Value(string value);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITfsIdentityStore {
    public ReadOnlyCollection`1<TeamFoundationIdentity> AllUserIdentities { get; }
    public ReadOnlyCollection`1<TeamFoundationIdentityName> AllUserIdentityNames { get; }
    public ReadOnlyCollection`1<TeamFoundationIdentityName> RecentUserNames { get; }
    [ObsoleteAttribute]
public ReadOnlyCollection`1<TeamFoundationIdentity> AllGlobalAndProjectGroupIdentities { get; }
    public abstract virtual void Refresh();
    public abstract virtual void Close();
    public abstract virtual void Initialize();
    public abstract virtual TeamFoundationIdentity FindByDisplayName(string displayName);
    public abstract virtual Guid FindTeamFoundationIdByDisplayName(string name);
    public abstract virtual TeamFoundationIdentity FindByAccountName(string accountName);
    public abstract virtual TeamFoundationIdentity FindByTeamFoundationId(Guid teamFoundationId);
    public abstract virtual string GetDisplayName(Guid teamFoundationId);
    public abstract virtual void AddDisplayNames(Dictionary`2<Guid, string> names);
    public abstract virtual void AddDisambiguousDisplayName(Guid id, string disambiguousName);
    public abstract virtual void AddDisplayName(Guid id, string name);
    public abstract virtual void EnsureIdentitiesById(IEnumerable`1<Guid> teamFoundationIds);
    public abstract virtual void EnsureIdentitiesByAccountName(IEnumerable`1<string> accountNames);
    public abstract virtual void AddRecentUser(TeamFoundationIdentity user);
    public abstract virtual void AddRecentUser(Guid user);
    public abstract virtual ReadOnlyCollection`1<TeamFoundationIdentity> get_AllUserIdentities();
    public abstract virtual ReadOnlyCollection`1<TeamFoundationIdentityName> get_AllUserIdentityNames();
    public abstract virtual ReadOnlyCollection`1<TeamFoundationIdentityName> get_RecentUserNames();
    public abstract virtual ReadOnlyCollection`1<TeamFoundationIdentity> get_AllGlobalAndProjectGroupIdentities();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public interface Microsoft.TeamFoundation.TestManagement.Client.ITmiTestImplementation {
    public string Storage { get; public set; }
    public Guid TestId { get; public set; }
    public string TestName { get; public set; }
    public string TestType { get; public set; }
    public Guid TestTypeId { get; public set; }
    public abstract virtual string get_Storage();
    public abstract virtual void set_Storage(string value);
    public abstract virtual Guid get_TestId();
    public abstract virtual void set_TestId(Guid value);
    public abstract virtual string get_TestName();
    public abstract virtual void set_TestName(string value);
    public abstract virtual string get_TestType();
    public abstract virtual void set_TestType(string value);
    public abstract virtual Guid get_TestTypeId();
    public abstract virtual void set_TestTypeId(Guid value);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal interface Microsoft.TeamFoundation.TestManagement.Client.IXmlStorage {
    public abstract virtual void FromXml(XmlReader reader);
    public abstract virtual void ToXml(XmlWriter writer);
}
public enum Microsoft.TeamFoundation.TestManagement.Client.LinkOperationType : Enum {
    public int value__;
    public static LinkOperationType Open;
    public static LinkOperationType WebService;
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.Log : object {
    private string m_category;
    private int m_off;
    internal bool IsLogging { get; }
    internal Log(string category);
    internal static string ListToString(string open, IEnumerable list, string close);
    internal IDisposable Enter(Object[] parameters);
    internal bool get_IsLogging();
    internal void Stop();
    internal void Start();
    internal void WriteLine(string text);
    internal void WriteLine(string text, Object[] parameters);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.MachineRole : PropertyOwner {
    private Guid m_id;
    private string m_name;
    public Guid Id { get; internal set; }
    public string Name { get; public set; }
    public sealed virtual Guid get_Id();
    internal void set_Id(Guid value);
    public sealed virtual string get_Name();
    public sealed virtual void set_Name(string value);
    internal void RefreshFrom(MachineRole newData);
    internal static MachineRole FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, MachineRole obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.MachineRoleCollection : GenericCollection`2<IMachineRole, MachineRole> {
    internal MachineRoleCollection(IEnumerable`1<MachineRole> items);
    public sealed virtual IMachineRole Create();
}
public enum Microsoft.TeamFoundation.TestManagement.Client.MachineTimelineType : Enum {
    public int value__;
    public static MachineTimelineType None;
    public static MachineTimelineType Requested;
    public static MachineTimelineType Ready;
    public static MachineTimelineType Released;
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
[EditorBrowsableAttribute("1")]
public static class Microsoft.TeamFoundation.TestManagement.Client.MeasurementBlockProxyFactory : object {
    private static MeasurementBlockProxyCreator m_creator;
    private static MeasurementBlockProxyFactory();
    public static void SetCreator(MeasurementBlockProxyCreator creator);
    internal static IMeasurementBlockProxy BeginNew(string name);
    internal static IMeasurementBlockProxy BeginNew(long length, string name);
}
public enum Microsoft.TeamFoundation.TestManagement.Client.MessageCodes : Enum {
    public int value__;
    public static MessageCodes Success;
    public static MessageCodes GenericError;
    public static MessageCodes ObjectNotFound;
    public static MessageCodes ObjectInUse;
    public static MessageCodes ObjectAlreadyUpdated;
    public static MessageCodes IllegalStateTransition;
    public static MessageCodes CannotMoveChildBelow;
    public static MessageCodes DuplicateSuiteEntry;
    public static MessageCodes TestObjectAlreadyExists;
    public static MessageCodes StartDateAfterEndDate;
    public static MessageCodes ParentSuiteNotFound;
    public static MessageCodes SuiteDepthOverLimit;
    public static MessageCodes CannotMoveSuiteEntriesAcrossPlans;
    public static MessageCodes InvalidArgument;
    public static MessageCodes SourceFileNotFound;
    public static MessageCodes OneTestId;
    public static MessageCodes BuildNotFound;
    public static MessageCodes ObjectNotFound_StringIdentifier;
    public static MessageCodes InvalidOperationId;
    public static MessageCodes SourceAndDestinationCannotBeInSamePlan;
    public static MessageCodes SuitesNotInSamePlan;
    public static MessageCodes ConflictingOperation;
    public static MessageCodes DefaultFailureTypeCreationError;
    public static MessageCodes FailureTypeIdExhausted;
    public static MessageCodes TestArtifactExistsInOfflineMode;
    public static MessageCodes EnvironmentAlreadyInUse;
    public static MessageCodes TestRunAlreadyCanceled;
    public static MessageCodes CannotCancelACompletedTestRun;
    public static MessageCodes ChartDataError;
    public static MessageCodes TestConfigurationInactive;
    public static MessageCodes MaxTestFlakinessBranchLimitExceeded;
    public static MessageCodes RunSummaryNotComputedException;
    public static MessageCodes TestCasesNotInsameSuite;
    public static MessageCodes MaxCustomFieldsLimitExceeded;
    public static MessageCodes InvalidTestPlanId;
    public static MessageCodes TestSuiteIdDoesNotExist;
    public static MessageCodes RootTestSuiteCannotRestore;
    public static MessageCodes AncestorSuiteDeleted;
    public static MessageCodes AncestorSuiteWithoutParent;
    public static MessageCodes WorkItemNotPresentForTestPlanId;
    public static MessageCodes AncestorWorkItemOfTestSuiteNotPresent;
    public static MessageCodes WorkItemNotActiveForPlanId;
    public static MessageCodes WorkItemNotActiveForSuiteParent;
    public static MessageCodes WorkItemNotPresentForSuiteChild;
    public static MessageCodes WorkItemNotActiveForSuiteChildOrSelf;
    public static MessageCodes TestEntityDoesNotDeletedException;
    public static MessageCodes RootSuiteOfTestPlanNotExist;
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal abstract class Microsoft.TeamFoundation.TestManagement.Client.MimePart : object {
    protected Byte[] m_data;
    protected int m_length;
    protected static string MimeSeparator;
    protected static string MimeBoundary;
    protected static string FormDataHeader;
    protected static string AttachmentDataHeader;
    public static string ContentType;
    public int Length { get; }
    public virtual Byte[] GetData();
    public int get_Length();
    protected static string GetContentType(TestResultAttachment attachment);
    protected static string GetCompressionType(TestResultAttachment attachment);
    protected static string GetContentHashValue(TestResultAttachment attachment);
    protected static void WriteMimeField(StreamWriter writer, string name, string value);
    protected static void WriteMimeField(StreamWriter writer, string name, long value);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal static class Microsoft.TeamFoundation.TestManagement.Client.MimePartsBuilder : object {
    private static MimePart s_partNewLine;
    private static MimePart s_partFooter;
    private static MimePartsBuilder();
    internal static IList`1<MimePart> BuildPartsForSingleFileChunkUpload(TestResultAttachment attachment, Stream contentStream, int bytesToUpload);
    internal static IList`1<MimePart> BuildPartsForMultipleFiles(IList`1<TestResultAttachment> attachments);
    private static IList`1<MimePart> BuildPartsForContent(Stream contentStream, int bytesToUpload);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.ModuleCoverage : object {
    private int m_blockCount;
    internal Byte[] m_blockData;
    internal FunctionCoverage[] m_functions;
    private string m_name;
    private Guid m_signature;
    private int m_signatureAge;
    private CoverageStatistics m_statistics;
    public IFunctionCoverage[] Functions { get; public set; }
    public ICoverageStatistics Statistics { get; public set; }
    public int BlockCount { get; public set; }
    public Byte[] BlockData { get; public set; }
    public string Name { get; public set; }
    public Guid Signature { get; public set; }
    public int SignatureAge { get; public set; }
    public sealed virtual IFunctionCoverage[] get_Functions();
    public void set_Functions(IFunctionCoverage[] value);
    public sealed virtual ICoverageStatistics get_Statistics();
    public void set_Statistics(ICoverageStatistics value);
    public int get_BlockCount();
    public void set_BlockCount(int value);
    public Byte[] get_BlockData();
    public void set_BlockData(Byte[] value);
    public sealed virtual string get_Name();
    public void set_Name(string value);
    public sealed virtual Guid get_Signature();
    public void set_Signature(Guid value);
    public sealed virtual int get_SignatureAge();
    public void set_SignatureAge(int value);
    internal static ModuleCoverage FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, ModuleCoverage obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.MultiAttachmentHeaderMimePart : MimePart {
    public MultiAttachmentHeaderMimePart(IList`1<TestResultAttachment> attachments);
    private void BuildData(IList`1<TestResultAttachment> attachments);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public class Microsoft.TeamFoundation.TestManagement.Client.NameValuePair : object {
    private string m_name;
    private string m_value;
    public string Name { get; public set; }
    public string Value { get; public set; }
    public NameValuePair(string name, string value);
    public NameValuePair(string name, DateTime value);
    public NameValuePair(string name, Guid value);
    public NameValuePair(string name, Uri value);
    public NameValuePair(string name, bool value);
    public Guid ToGuid();
    public DateTime ToDateTime();
    public Uri ToUri();
    public string get_Name();
    public void set_Name(string value);
    public string get_Value();
    public void set_Value(string value);
    [EditorBrowsableAttribute("1")]
public static NameValuePair FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    [EditorBrowsableAttribute("1")]
public void ToXml(XmlWriter writer, string element);
    [EditorBrowsableAttribute("1")]
public static void ToXml(XmlWriter writer, string element, NameValuePair obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.NewBuildStatistics : object {
    private TestPlan m_testPlan;
    private int m_buildCount;
    public int BuildCount { get; }
    public int ResolvedBugCount { get; }
    public int CompletedRequirementCount { get; }
    internal NewBuildStatistics(TestPlan testPlan);
    public sealed virtual int get_BuildCount();
    public sealed virtual int get_ResolvedBugCount();
    public sealed virtual int get_CompletedRequirementCount();
    internal void InvalidateCachedData();
    private void GetBuildData();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.NewLineMimePart : MimePart {
    private void BuildData();
}
public enum Microsoft.TeamFoundation.TestManagement.Client.NotificationSeverity : Enum {
    public int value__;
    public static NotificationSeverity Informational;
    public static NotificationSeverity Warning;
    public static NotificationSeverity Error;
    public static NotificationSeverity Critical;
}
[DefaultMemberAttribute("Item")]
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.NotifyingDictionary`2 : object {
    [CompilerGeneratedAttribute]
private NotifyingDictionaryHandler<K, V> NotifyingDictionaryEvent;
    private Dictionary`2<K, V> m_dictionary;
    public ICollection`1<K> Keys { get; }
    public ICollection`1<V> Values { get; }
    public V Item { get; public set; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    internal NotifyingDictionary`2(IEqualityComparer`1<K> comparer);
    [CompilerGeneratedAttribute]
public void add_NotifyingDictionaryEvent(NotifyingDictionaryHandler<K, V> value);
    [CompilerGeneratedAttribute]
public void remove_NotifyingDictionaryEvent(NotifyingDictionaryHandler<K, V> value);
    private void RaiseEvent(EventType<K, V> type, K key, V value);
    public virtual void Add(K key, V value);
    public sealed virtual bool ContainsKey(K key);
    public sealed virtual ICollection`1<K> get_Keys();
    public sealed virtual bool Remove(K key);
    public sealed virtual bool TryGetValue(K key, V& value);
    public sealed virtual ICollection`1<V> get_Values();
    public virtual V get_Item(K key);
    public virtual void set_Item(K key, V value);
    public virtual void Add(KeyValuePair`2<K, V> item);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(KeyValuePair`2<K, V> item);
    public sealed virtual void CopyTo(KeyValuePair`2[] array, int arrayIndex);
    public sealed virtual int get_Count();
    public virtual bool get_IsReadOnly();
    public sealed virtual bool Remove(KeyValuePair`2<K, V> item);
    public sealed virtual IEnumerator`1<KeyValuePair`2<K, V>> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.NullMeasurementBlockProxy : object {
    private static NullMeasurementBlockProxy s_nullProxy;
    public bool IsRunning { get; }
    public static IMeasurementBlockProxy Create(long size, string category);
    public sealed virtual bool get_IsRunning();
    public sealed virtual void Begin();
    public sealed virtual void Begin(long l);
    public sealed virtual void Begin(long l, string s);
    public sealed virtual void Step();
    public sealed virtual void Step(long l);
    public sealed virtual void Step(long l, string s);
    public sealed virtual void End();
    public sealed virtual void End(long l);
    public sealed virtual void End(long l, string s);
    public sealed virtual void Dispose();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.ObjectCache`2 : object {
    private Dictionary`2<Key, WeakReference> m_cache;
    private Creator<Key, Value> m_source;
    private string m_name;
    private object m_sync;
    private Log m_log;
    public object SyncObj { get; }
    public ObjectCache`2(string name, Creator<Key, Value> defaultCreator);
    public ObjectCache`2(string name);
    public Value Remove(Key key);
    public Value Get(Key key);
    public Value Get(Key key, Creator<Key, Value> creator);
    public void Set(Key key, Value value);
    public Value GetWithUpdate(Key key, Updater<Key, Value> updater, Creator<Key, Value> creator);
    public void Clear();
    public object get_SyncObj();
}
public enum Microsoft.TeamFoundation.TestManagement.Client.ObjectTypes : Enum {
    public int value__;
    public static ObjectTypes None;
    public static ObjectTypes TestRun;
    public static ObjectTypes TestConfiguration;
    public static ObjectTypes TestPlan;
    public static ObjectTypes TestPoint;
    public static ObjectTypes TestResult;
    public static ObjectTypes TestVariable;
    public static ObjectTypes TestResolutionState;
    public static ObjectTypes TestSettings;
    public static ObjectTypes Attachment;
    public static ObjectTypes TestSuite;
    public static ObjectTypes TestSuiteEntry;
    public static ObjectTypes TeamProject;
    public static ObjectTypes TestVariableValue;
    public static ObjectTypes TestConfigurationVariable;
    public static ObjectTypes BugFieldMapping;
    public static ObjectTypes Session;
    public static ObjectTypes TestController;
    public static ObjectTypes DataCollector;
    public static ObjectTypes TestCase;
    public static ObjectTypes SharedSteps;
    public static ObjectTypes TestFailureType;
    public static ObjectTypes SharedParameterDataSet;
    public static ObjectTypes CustomTestField;
    public static ObjectTypes ResultRetentionSettings;
    public static ObjectTypes Definition;
    public static ObjectTypes DefinitionRun;
    public static ObjectTypes AssociatedBuild;
    public static ObjectTypes LogStoreStorageAccount;
    public static ObjectTypes LogStoreContainer;
    public static ObjectTypes AssociatedRelease;
    public static ObjectTypes TestPlanClone;
    public static ObjectTypes TestSuiteClone;
    public static ObjectTypes Build;
    public static ObjectTypes Other;
}
[DefaultMemberAttribute("Item")]
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public class Microsoft.TeamFoundation.TestManagement.Client.ParameterizedString : object {
    public static string ElementName;
    private static string TitleElementName;
    private static string ExpectedResultElementName;
    private static string TextParameterName;
    private static string ParameterElementName;
    private static string OutputParameterElementName;
    private static char FirstChar;
    private static string FirstCharString;
    private static char IgnoreValueChar;
    private static string IgnoreValueString;
    internal static string ParameterString;
    private static string parameterCharacters;
    private static string nonParameterCharacters;
    private static Regex s_parameterRefRegex;
    private static Regex s_parameterRegex;
    private string m_flowDocumentFormattedString;
    private ParameterizedStringPart[] m_parts;
    private ReadOnlyCollection`1<string> m_parameterNames;
    private static ParameterizedString s_empty;
    public static ParameterizedString Empty { get; }
    public int Count { get; }
    public ParameterizedStringPart Item { get; }
    private ParameterizedStringPart[] Parts { get; }
    public ReadOnlyCollection`1<string> ParameterNames { get; }
    public string FlowDocumentString { get; }
    public ParameterizedString(string value);
    public ParameterizedString(IEnumerable`1<ParameterizedStringPart> parts);
    public ParameterizedString(XmlReader reader);
    private ParameterizedString(string flowDocumentString, bool isFlowDocument);
    private static ParameterizedString();
    public static ParameterizedString op_Implicit(string value);
    public static string op_Implicit(ParameterizedString value);
    public static ParameterizedString get_Empty();
    public static ParameterizedString FromFlowDocument(string flowDocumentString);
    public int get_Count();
    public ParameterizedStringPart get_Item(int pos);
    private ParameterizedStringPart[] get_Parts();
    [IteratorStateMachineAttribute("Microsoft.TeamFoundation.TestManagement.Client.ParameterizedString/<GetEnumerator>d__22")]
public sealed virtual IEnumerator`1<ParameterizedStringPart> GetEnumerator();
    [IteratorStateMachineAttribute("Microsoft.TeamFoundation.TestManagement.Client.ParameterizedString/<System-Collections-IEnumerable-GetEnumerator>d__23")]
private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public ReadOnlyCollection`1<string> get_ParameterNames();
    public ParameterizedString RenameParameter(string parameterName, string newName);
    public ParameterizedString ReplaceParameter(string name, string replacementText);
    public virtual string ToString();
    public static bool IsValidParameterName(string name);
    public static string GetParameterNamingErrorMessage();
    public string ToPlainText();
    public string get_FlowDocumentString();
    public sealed virtual void FromXml(XmlReader reader);
    public sealed virtual void ToXml(XmlWriter writer);
    private ParameterizedString GetReplacedParameterizedString(string parameterName, string newName);
    private void InitializeFromParts(IEnumerable`1<ParameterizedStringPart> parts);
    private void Parse();
    public virtual int GetHashCode();
    public bool Equals(ParameterizedString other);
    public virtual bool Equals(object obj);
    public static bool op_Equality(ParameterizedString left, ParameterizedString right);
    public static bool op_Inequality(ParameterizedString left, ParameterizedString right);
    public ParameterizedString Copy();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public class Microsoft.TeamFoundation.TestManagement.Client.ParameterizedStringPart : ValueType {
    private static ParameterizedStringPart s_emptyPart;
    private string m_string;
    private bool m_ignoreValue;
    private bool m_isParameter;
    private static string XmlTextEscapeString;
    public string ParameterName { get; }
    public string XmlWrapper { get; private set; }
    public string LiteralValue { get; }
    public bool IgnoreValue { get; }
    public bool IsParameter { get; }
    public static ParameterizedStringPart Empty { get; }
    public ParameterizedStringPart(string literalText);
    public ParameterizedStringPart(string parameterName, bool ignoreValue);
    private static ParameterizedStringPart();
    public string get_ParameterName();
    public string get_XmlWrapper();
    private void set_XmlWrapper(string value);
    public string get_LiteralValue();
    public bool get_IgnoreValue();
    public bool get_IsParameter();
    public bool Equals(ParameterizedStringPart other);
    public virtual bool Equals(object obj);
    public static bool op_Equality(ParameterizedStringPart part1, ParameterizedStringPart part2);
    public static bool op_Inequality(ParameterizedStringPart part1, ParameterizedStringPart part2);
    public virtual int GetHashCode();
    public static ParameterizedStringPart get_Empty();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal static class Microsoft.TeamFoundation.TestManagement.Client.PathHelpers : object {
    internal static string CreateTemporaryFolder();
}
public enum Microsoft.TeamFoundation.TestManagement.Client.PostProcessState : Enum {
    public int value__;
    public static PostProcessState Unspecified;
    public static PostProcessState Pending;
    public static PostProcessState InProgress;
    public static PostProcessState Complete;
    public static PostProcessState Upgrade;
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal abstract class Microsoft.TeamFoundation.TestManagement.Client.ProcessConfigurationBase : object {
    [CompilerGeneratedAttribute]
private ObjectTypes <ObjectType>k__BackingField;
    [CompilerGeneratedAttribute]
private TestManagementTeamProject <Project>k__BackingField;
    protected ObjectTypes ObjectType { get; protected set; }
    protected TestManagementTeamProject Project { get; protected set; }
    internal ProjectProcessConfiguration GetProcessConfiguration();
    internal virtual byte ConvertStatusToState(string newstatus);
    internal virtual string ConvertStateToStatus(byte newstate);
    internal void TraceLog(string message);
    internal State[] ConvertDefaultStatesMap(StateTypeEnumAndStateString[] defaultMap);
    protected abstract virtual State[] GetStatesFromProcessConfiguration();
    protected abstract virtual byte FromMetaState(StateTypeEnum stateType);
    protected abstract virtual StateTypeEnum ToMetaState(byte state);
    [CompilerGeneratedAttribute]
protected ObjectTypes get_ObjectType();
    [CompilerGeneratedAttribute]
protected void set_ObjectType(ObjectTypes value);
    [CompilerGeneratedAttribute]
protected TestManagementTeamProject get_Project();
    [CompilerGeneratedAttribute]
protected void set_Project(TestManagementTeamProject value);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.RequirementTestSuite : DynamicTestSuiteBase {
    private int m_requirementId;
    public int RequirementId { get; }
    public TestSuiteType TestSuiteType { get; }
    internal RequirementTestSuite(TestSuiteHelper helper, TestPlan plan, int requirementId);
    internal RequirementTestSuite(TestSuiteHelper helper, TestPlan plan, int suiteId, int requirementId, bool isPartial);
    public sealed virtual int get_RequirementId();
    public virtual TestSuiteType get_TestSuiteType();
    internal virtual void CopyPropertiesFromServerSuite(ServerTestSuite serverSuite);
    protected internal virtual ServerTestSuite PreSave();
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class Microsoft.TeamFoundation.TestManagement.Client.Resources : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string ArgumentIncorrectType { get; }
    internal static string ArgumentLessThanZero { get; }
    internal static string ArgumentNull { get; }
    internal static string ArgumentNullOrBlank { get; }
    internal static string ArrayLengthsMustMatch { get; }
    internal static string AttachmentDefaultFilename { get; }
    internal static string AttachmentDownloadError { get; }
    internal static string AttachmentDownloadNotComplete { get; }
    internal static string AttachmentDownloadNoUri { get; }
    internal static string AttachmentFileNameError { get; }
    internal static string AttachmentLengthError { get; }
    internal static string AttachmentNotFound { get; }
    internal static string AttachmentUploadError { get; }
    internal static string BugFieldMappingNotFoundError { get; }
    internal static string BugFieldMappingUpdateConflict { get; }
    internal static string BugWorkItemTypeDoesNotExist { get; }
    internal static string CannotAddAction { get; }
    internal static string CannotAddCasesToRun { get; }
    internal static string CannotAddPointsToRun { get; }
    internal static string CannotLoadTestSettingsFromFile { get; }
    internal static string CannotMoveSuiteBelowItsChildren { get; }
    internal static string CannotResetLinkedResult { get; }
    internal static string CannotSetDataBoundParameterValue { get; }
    internal static string CannotSetPropertyAfterCreation { get; }
    internal static string CannotSetPropertyBeforeCreation { get; }
    internal static string CannotSetRootSuiteName { get; }
    internal static string CategoryNotFound { get; }
    internal static string CloneRequirementsNotSupported { get; }
    internal static string DataCollectorMustExistError { get; }
    internal static string DataCollectorMustNotExistError { get; }
    internal static string DateOrderInlineValidation { get; }
    internal static string DeepCopyAcrossProjectsNotSupportedByServer { get; }
    internal static string DestinationWorkItemTypeNotSupported { get; }
    internal static string DisposedTestEntryCollection { get; }
    internal static string DuplicatePivotTypeExceptionMessage { get; }
    internal static string DynamicSuiteQueryNeeded { get; }
    internal static string DynamicSuiteQueryNeedsCategoryCondition { get; }
    internal static string EmptyFieldInlineValidation { get; }
    internal static string EmptyTestRun { get; }
    internal static string FieldDoesNotExistInBugWorkItem { get; }
    internal static string ImportEmptyTesResolutionStateXmlListError { get; }
    internal static string ImportEmptyTestFailureTypeXmlListError { get; }
    internal static string InvalidDateInlineValidation { get; }
    internal static string InvalidDateTime { get; }
    internal static string InvalidId { get; }
    internal static string InvalidParameterName { get; }
    internal static string InvalidQuery { get; }
    internal static string InvalidStatusError { get; }
    internal static string InvalidStepType { get; }
    internal static string InvalidTestCaseId { get; }
    internal static string InvalidTestConfigurationId { get; }
    internal static string InvalidTestPlanStateError { get; }
    internal static string InvalidTestSuiteStateError { get; }
    internal static string InvalidWorkItemTypeOneCategory { get; }
    internal static string InvalidWorkItemTypeTwoCategories { get; }
    internal static string InvalidXmlAttribute { get; }
    internal static string InvalidXmlCharacter { get; }
    internal static string ListItemSeparator { get; }
    internal static string MetadataFileName { get; }
    internal static string MetadataLoggingType { get; }
    internal static string MissingWitField { get; }
    internal static string MoveActionCannotMoveIntoSelf { get; }
    internal static string MoveActionOwnersDifferent { get; }
    internal static string MultipleFieldOverrideNotSupportedError { get; }
    internal static string MultipleWitStatesMappedToSameMetaStateException { get; }
    internal static string MustBeSaved { get; }
    internal static string NoTypeInCategory { get; }
    internal static string ObjectAlreadyAdded { get; }
    internal static string ObjectDeleted { get; }
    internal static string OwnerRequired { get; }
    internal static string PossibleErrorSolutionText { get; }
    internal static string PropertyErrorString { get; }
    internal static string RegistrationError { get; }
    internal static string ReplaceParameterWithEmptyTextErrorMessage { get; }
    internal static string ReplaceParameterWithInvalidTextErrorMessage { get; }
    internal static string ResolutionStateNameIsUnique { get; }
    internal static string RootSuiteCannotInheritConfigs { get; }
    internal static string SaveBugFieldMappingError { get; }
    internal static string SaveDataCollectorError { get; }
    internal static string SaveTestConfigurationError { get; }
    internal static string SaveTestControllerError { get; }
    internal static string SaveTestEnvironmentError { get; }
    internal static string SaveTestFailureTypeError { get; }
    internal static string SaveTestPlanError { get; }
    internal static string SaveTestResolutionStateError { get; }
    internal static string SaveTestSettingsError { get; }
    internal static string SaveTestSuiteError { get; }
    internal static string SaveTestVariableError { get; }
    internal static string SharedStepCannotReferenceShareStep { get; }
    internal static string SharedStepsNotFoundError { get; }
    internal static string StartDateAfterEndDateError { get; }
    internal static string State_None { get; }
    internal static string StoredQueryNotFound { get; }
    internal static string SuiteEntryCollectionUnsupportedOperation { get; }
    internal static string SuiteEntryIsNotInSuite { get; }
    internal static string SuiteEntryMustBeUnique { get; }
    internal static string TeamFoundationCache_UniqueDisplayNameFormat { get; }
    internal static string TeamProjectNotFoundError { get; }
    internal static string TemporaryFolderError { get; }
    internal static string TestAttachmentNotFoundError { get; }
    internal static string TestCaseNotFoundError { get; }
    internal static string TestCaseRequired { get; }
    internal static string TestConfigurationNotFoundError { get; }
    internal static string TestConfigurationUpdateConflict { get; }
    internal static string TestFailureTypeEmpty { get; }
    internal static string TestFailureTypeNameIsUnique { get; }
    internal static string TestManagementAPINotSupportedError { get; }
    internal static string TestPlanNotFoundError { get; }
    internal static string TestPlanState_Active { get; }
    internal static string TestPlanState_InActive { get; }
    internal static string TestPlanUpdateConflict { get; }
    internal static string TestPointNotFoundError { get; }
    internal static string TestPointUpdateConflict { get; }
    internal static string TestResolutionStateEmpty { get; }
    internal static string TestResultNotFoundError { get; }
    internal static string TestResultUpdateConflict { get; }
    internal static string TestRunNotFoundError { get; }
    internal static string TestRunUpdateConflict { get; }
    internal static string TestSessionNotFoundError { get; }
    internal static string TestSessionUpdateConflict { get; }
    internal static string TestSettingsNotFoundError { get; }
    internal static string TestSettingsUpdateConflict { get; }
    internal static string TestSuiteNotFoundError { get; }
    internal static string TestSuiteState_Completed { get; }
    internal static string TestSuiteState_InPlanning { get; }
    internal static string TestSuiteState_InProgress { get; }
    internal static string TestSuiteUpdateConflict { get; }
    internal static string TestVariableAllowedValuesDuplicate { get; }
    internal static string TestVariableAllowedValuesInvalid { get; }
    internal static string TestVariableNotFoundError { get; }
    internal static string TestVariableUpdateConflict { get; }
    internal static string TooLongInlineValidation { get; }
    internal static string UnavailableSuiteTitle { get; }
    internal static string UnexpectedElementName { get; }
    internal static string UploadCannotCancelUnlessQueuedUploadingOrFailed { get; }
    internal static string UploadCannotPauseUnlessQueuedOrUploading { get; }
    internal static string UploadCannotQueueUnlessPausedOrFailed { get; }
    internal static string UriMustBeAbsolute { get; }
    internal static string VerifyTestEnvironmentControllerOwner { get; }
    internal static string VerifyTestEnvironmentProjectOwner { get; }
    internal static string WorkItemNotSaved { get; }
    internal static string WorkItemUpdateConflict { get; }
    internal static string WorkItemValidationFailed { get; }
    internal static string XmlSchemaValidationFailed { get; }
    internal static string XmlTaskNotFound { get; }
    internal static string XmlTestConfigurationIsDefaultInvalid { get; }
    internal static string XmlTestConfigurationStateInvalid { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_ArgumentIncorrectType();
    internal static string get_ArgumentLessThanZero();
    internal static string get_ArgumentNull();
    internal static string get_ArgumentNullOrBlank();
    internal static string get_ArrayLengthsMustMatch();
    internal static string get_AttachmentDefaultFilename();
    internal static string get_AttachmentDownloadError();
    internal static string get_AttachmentDownloadNotComplete();
    internal static string get_AttachmentDownloadNoUri();
    internal static string get_AttachmentFileNameError();
    internal static string get_AttachmentLengthError();
    internal static string get_AttachmentNotFound();
    internal static string get_AttachmentUploadError();
    internal static string get_BugFieldMappingNotFoundError();
    internal static string get_BugFieldMappingUpdateConflict();
    internal static string get_BugWorkItemTypeDoesNotExist();
    internal static string get_CannotAddAction();
    internal static string get_CannotAddCasesToRun();
    internal static string get_CannotAddPointsToRun();
    internal static string get_CannotLoadTestSettingsFromFile();
    internal static string get_CannotMoveSuiteBelowItsChildren();
    internal static string get_CannotResetLinkedResult();
    internal static string get_CannotSetDataBoundParameterValue();
    internal static string get_CannotSetPropertyAfterCreation();
    internal static string get_CannotSetPropertyBeforeCreation();
    internal static string get_CannotSetRootSuiteName();
    internal static string get_CategoryNotFound();
    internal static string get_CloneRequirementsNotSupported();
    internal static string get_DataCollectorMustExistError();
    internal static string get_DataCollectorMustNotExistError();
    internal static string get_DateOrderInlineValidation();
    internal static string get_DeepCopyAcrossProjectsNotSupportedByServer();
    internal static string get_DestinationWorkItemTypeNotSupported();
    internal static string get_DisposedTestEntryCollection();
    internal static string get_DuplicatePivotTypeExceptionMessage();
    internal static string get_DynamicSuiteQueryNeeded();
    internal static string get_DynamicSuiteQueryNeedsCategoryCondition();
    internal static string get_EmptyFieldInlineValidation();
    internal static string get_EmptyTestRun();
    internal static string get_FieldDoesNotExistInBugWorkItem();
    internal static string get_ImportEmptyTesResolutionStateXmlListError();
    internal static string get_ImportEmptyTestFailureTypeXmlListError();
    internal static string get_InvalidDateInlineValidation();
    internal static string get_InvalidDateTime();
    internal static string get_InvalidId();
    internal static string get_InvalidParameterName();
    internal static string get_InvalidQuery();
    internal static string get_InvalidStatusError();
    internal static string get_InvalidStepType();
    internal static string get_InvalidTestCaseId();
    internal static string get_InvalidTestConfigurationId();
    internal static string get_InvalidTestPlanStateError();
    internal static string get_InvalidTestSuiteStateError();
    internal static string get_InvalidWorkItemTypeOneCategory();
    internal static string get_InvalidWorkItemTypeTwoCategories();
    internal static string get_InvalidXmlAttribute();
    internal static string get_InvalidXmlCharacter();
    internal static string get_ListItemSeparator();
    internal static string get_MetadataFileName();
    internal static string get_MetadataLoggingType();
    internal static string get_MissingWitField();
    internal static string get_MoveActionCannotMoveIntoSelf();
    internal static string get_MoveActionOwnersDifferent();
    internal static string get_MultipleFieldOverrideNotSupportedError();
    internal static string get_MultipleWitStatesMappedToSameMetaStateException();
    internal static string get_MustBeSaved();
    internal static string get_NoTypeInCategory();
    internal static string get_ObjectAlreadyAdded();
    internal static string get_ObjectDeleted();
    internal static string get_OwnerRequired();
    internal static string get_PossibleErrorSolutionText();
    internal static string get_PropertyErrorString();
    internal static string get_RegistrationError();
    internal static string get_ReplaceParameterWithEmptyTextErrorMessage();
    internal static string get_ReplaceParameterWithInvalidTextErrorMessage();
    internal static string get_ResolutionStateNameIsUnique();
    internal static string get_RootSuiteCannotInheritConfigs();
    internal static string get_SaveBugFieldMappingError();
    internal static string get_SaveDataCollectorError();
    internal static string get_SaveTestConfigurationError();
    internal static string get_SaveTestControllerError();
    internal static string get_SaveTestEnvironmentError();
    internal static string get_SaveTestFailureTypeError();
    internal static string get_SaveTestPlanError();
    internal static string get_SaveTestResolutionStateError();
    internal static string get_SaveTestSettingsError();
    internal static string get_SaveTestSuiteError();
    internal static string get_SaveTestVariableError();
    internal static string get_SharedStepCannotReferenceShareStep();
    internal static string get_SharedStepsNotFoundError();
    internal static string get_StartDateAfterEndDateError();
    internal static string get_State_None();
    internal static string get_StoredQueryNotFound();
    internal static string get_SuiteEntryCollectionUnsupportedOperation();
    internal static string get_SuiteEntryIsNotInSuite();
    internal static string get_SuiteEntryMustBeUnique();
    internal static string get_TeamFoundationCache_UniqueDisplayNameFormat();
    internal static string get_TeamProjectNotFoundError();
    internal static string get_TemporaryFolderError();
    internal static string get_TestAttachmentNotFoundError();
    internal static string get_TestCaseNotFoundError();
    internal static string get_TestCaseRequired();
    internal static string get_TestConfigurationNotFoundError();
    internal static string get_TestConfigurationUpdateConflict();
    internal static string get_TestFailureTypeEmpty();
    internal static string get_TestFailureTypeNameIsUnique();
    internal static string get_TestManagementAPINotSupportedError();
    internal static string get_TestPlanNotFoundError();
    internal static string get_TestPlanState_Active();
    internal static string get_TestPlanState_InActive();
    internal static string get_TestPlanUpdateConflict();
    internal static string get_TestPointNotFoundError();
    internal static string get_TestPointUpdateConflict();
    internal static string get_TestResolutionStateEmpty();
    internal static string get_TestResultNotFoundError();
    internal static string get_TestResultUpdateConflict();
    internal static string get_TestRunNotFoundError();
    internal static string get_TestRunUpdateConflict();
    internal static string get_TestSessionNotFoundError();
    internal static string get_TestSessionUpdateConflict();
    internal static string get_TestSettingsNotFoundError();
    internal static string get_TestSettingsUpdateConflict();
    internal static string get_TestSuiteNotFoundError();
    internal static string get_TestSuiteState_Completed();
    internal static string get_TestSuiteState_InPlanning();
    internal static string get_TestSuiteState_InProgress();
    internal static string get_TestSuiteUpdateConflict();
    internal static string get_TestVariableAllowedValuesDuplicate();
    internal static string get_TestVariableAllowedValuesInvalid();
    internal static string get_TestVariableNotFoundError();
    internal static string get_TestVariableUpdateConflict();
    internal static string get_TooLongInlineValidation();
    internal static string get_UnavailableSuiteTitle();
    internal static string get_UnexpectedElementName();
    internal static string get_UploadCannotCancelUnlessQueuedUploadingOrFailed();
    internal static string get_UploadCannotPauseUnlessQueuedOrUploading();
    internal static string get_UploadCannotQueueUnlessPausedOrFailed();
    internal static string get_UriMustBeAbsolute();
    internal static string get_VerifyTestEnvironmentControllerOwner();
    internal static string get_VerifyTestEnvironmentProjectOwner();
    internal static string get_WorkItemNotSaved();
    internal static string get_WorkItemUpdateConflict();
    internal static string get_WorkItemValidationFailed();
    internal static string get_XmlSchemaValidationFailed();
    internal static string get_XmlTaskNotFound();
    internal static string get_XmlTestConfigurationIsDefaultInvalid();
    internal static string get_XmlTestConfigurationStateInvalid();
}
public enum Microsoft.TeamFoundation.TestManagement.Client.ResultLinkType : Enum {
    public int value__;
    public static ResultLinkType Unspecified;
    public static ResultLinkType ResultInvestigation;
    public static ResultLinkType TestInfo;
    public static ResultLinkType MoreInfo;
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public enum Microsoft.TeamFoundation.TestManagement.Client.ResultObjectType : Enum {
    public int value__;
    public static ResultObjectType TestPlan;
    public static ResultObjectType TestSuite;
    public static ResultObjectType TestCase;
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.ResultsStoreQuery : object {
    private bool m_dayPrecision;
    private string m_queryText;
    private string m_teamProjectName;
    private string m_timeZone;
    public bool DayPrecision { get; public set; }
    public string QueryText { get; public set; }
    public string TeamProjectName { get; public set; }
    public string TimeZone { get; public set; }
    internal ResultsStoreQuery(string queryText, string teamProjectName, bool dayPrecision);
    public bool get_DayPrecision();
    public void set_DayPrecision(bool value);
    public string get_QueryText();
    public void set_QueryText(string value);
    public string get_TeamProjectName();
    public void set_TeamProjectName(string value);
    public string get_TimeZone();
    public void set_TimeZone(string value);
    internal static ResultsStoreQuery FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, ResultsStoreQuery obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.ResultUpdateRequest : object {
    private TestCaseResult m_localTestCaseResult;
    internal TestActionResult[] m_actionResultDeletes;
    internal TestActionResult[] m_actionResults;
    internal TestResultAttachmentIdentity[] m_attachmentDeletes;
    internal TestResultAttachment[] m_attachments;
    internal TestResultParameter[] m_parameterDeletes;
    internal TestResultParameter[] m_parameters;
    private TestCaseResult m_testCaseResult;
    private int m_testResultId;
    private int m_testRunId;
    internal TestCaseResult LocalTestCaseResult { get; internal set; }
    public TestActionResult[] ActionResultDeletes { get; public set; }
    public TestActionResult[] ActionResults { get; public set; }
    public TestResultAttachmentIdentity[] AttachmentDeletes { get; public set; }
    public TestResultAttachment[] Attachments { get; public set; }
    public TestResultParameter[] ParameterDeletes { get; public set; }
    public TestResultParameter[] Parameters { get; public set; }
    public TestCaseResult TestCaseResult { get; public set; }
    public int TestResultId { get; public set; }
    public int TestRunId { get; public set; }
    internal ResultUpdateRequest(int testRunId, int testResultId);
    internal ResultUpdateRequest(ITestCaseResult result);
    internal TestCaseResult get_LocalTestCaseResult();
    internal void set_LocalTestCaseResult(TestCaseResult value);
    public TestActionResult[] get_ActionResultDeletes();
    public void set_ActionResultDeletes(TestActionResult[] value);
    public TestActionResult[] get_ActionResults();
    public void set_ActionResults(TestActionResult[] value);
    public TestResultAttachmentIdentity[] get_AttachmentDeletes();
    public void set_AttachmentDeletes(TestResultAttachmentIdentity[] value);
    public TestResultAttachment[] get_Attachments();
    public void set_Attachments(TestResultAttachment[] value);
    public TestResultParameter[] get_ParameterDeletes();
    public void set_ParameterDeletes(TestResultParameter[] value);
    public TestResultParameter[] get_Parameters();
    public void set_Parameters(TestResultParameter[] value);
    public TestCaseResult get_TestCaseResult();
    public void set_TestCaseResult(TestCaseResult value);
    public int get_TestResultId();
    public void set_TestResultId(int value);
    public int get_TestRunId();
    public void set_TestRunId(int value);
    internal static ResultUpdateRequest FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, ResultUpdateRequest obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.ResultUpdateResponse : object {
    internal Int32[] m_attachmentIds;
    private DateTime m_lastUpdated;
    private Guid m_lastUpdatedBy;
    private string m_lastUpdatedByName;
    private int m_revision;
    public Int32[] AttachmentIds { get; public set; }
    public DateTime LastUpdated { get; public set; }
    public Guid LastUpdatedBy { get; public set; }
    public int Revision { get; public set; }
    public Int32[] get_AttachmentIds();
    public void set_AttachmentIds(Int32[] value);
    public DateTime get_LastUpdated();
    public void set_LastUpdated(DateTime value);
    public Guid get_LastUpdatedBy();
    public void set_LastUpdatedBy(Guid value);
    public int get_Revision();
    public void set_Revision(int value);
    internal static ResultUpdateResponse FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, ResultUpdateResponse obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal static class Microsoft.TeamFoundation.TestManagement.Client.SchemaValidator : object {
    public static XmlDocument ValidateAndParse(string fileName, ObjectTypes type);
    private static XmlSchema GetSchema(ObjectTypes type);
    private static XmlDocument GetSchemaDocument(ObjectTypes type);
    private static Stream GetStream(ObjectTypes type);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.ServerTestSuite : object {
    internal String[] m_defaultConfigurationNames;
    internal Int32[] m_defaultConfigurations;
    private string m_description;
    private int m_id;
    private bool m_inheritDefaultConfigurations;
    private string m_lastError;
    private DateTime m_lastPopulated;
    private DateTime m_lastUpdated;
    private Guid m_lastUpdatedBy;
    private string m_lastUpdatedByName;
    private int m_parentId;
    private int m_planId;
    private string m_queryString;
    private int m_requirementId;
    private int m_revision;
    internal TestSuiteEntry[] m_serverEntries;
    private byte m_state;
    private string m_status;
    private byte m_suiteType;
    private int m_testCaseCount;
    private string m_title;
    public String[] DefaultConfigurationNames { get; public set; }
    public Int32[] DefaultConfigurations { get; public set; }
    public string Description { get; public set; }
    public int Id { get; public set; }
    public bool InheritDefaultConfigurations { get; public set; }
    public string LastError { get; public set; }
    public DateTime LastPopulated { get; public set; }
    public DateTime LastUpdated { get; public set; }
    public Guid LastUpdatedBy { get; public set; }
    public string LastUpdatedByName { get; public set; }
    public int ParentId { get; public set; }
    public int PlanId { get; public set; }
    public string QueryString { get; public set; }
    public int RequirementId { get; public set; }
    public int Revision { get; public set; }
    public TestSuiteEntry[] ServerEntries { get; public set; }
    public byte State { get; public set; }
    public string Status { get; public set; }
    public byte SuiteType { get; public set; }
    public int TestCaseCount { get; public set; }
    public string Title { get; public set; }
    internal ServerTestSuite Convert();
    public String[] get_DefaultConfigurationNames();
    public void set_DefaultConfigurationNames(String[] value);
    public Int32[] get_DefaultConfigurations();
    public void set_DefaultConfigurations(Int32[] value);
    public string get_Description();
    public void set_Description(string value);
    public int get_Id();
    public void set_Id(int value);
    public bool get_InheritDefaultConfigurations();
    public void set_InheritDefaultConfigurations(bool value);
    public string get_LastError();
    public void set_LastError(string value);
    public DateTime get_LastPopulated();
    public void set_LastPopulated(DateTime value);
    public DateTime get_LastUpdated();
    public void set_LastUpdated(DateTime value);
    public Guid get_LastUpdatedBy();
    public void set_LastUpdatedBy(Guid value);
    public string get_LastUpdatedByName();
    public void set_LastUpdatedByName(string value);
    public int get_ParentId();
    public void set_ParentId(int value);
    public int get_PlanId();
    public void set_PlanId(int value);
    public string get_QueryString();
    public void set_QueryString(string value);
    public int get_RequirementId();
    public void set_RequirementId(int value);
    public int get_Revision();
    public void set_Revision(int value);
    public TestSuiteEntry[] get_ServerEntries();
    public void set_ServerEntries(TestSuiteEntry[] value);
    public byte get_State();
    public void set_State(byte value);
    public string get_Status();
    public void set_Status(string value);
    public byte get_SuiteType();
    public void set_SuiteType(byte value);
    public int get_TestCaseCount();
    public void set_TestCaseCount(int value);
    public string get_Title();
    public void set_Title(string value);
    internal static ServerTestSuite FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, ServerTestSuite obj);
}
public enum Microsoft.TeamFoundation.TestManagement.Client.ServerVersion : Enum {
    public int value__;
    public static ServerVersion VisualStudio2010;
    public static ServerVersion VisualStudio2010SP1;
    public static ServerVersion VisualStudio2012;
    public static ServerVersion VisualStudio2012QU1;
    public static ServerVersion VisualStudio2012QU2;
    public static ServerVersion VisualStudio2013QU1;
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.Session : TestRunBase {
    private Uri m_artifactUri;
    private SessionPropertyCollection`1<ISessionNote> m_sessionNoteCollection;
    private SessionPropertyCollection`1<ISessionBookmark> m_sessionBookmarkCollection;
    private string m_userStoryTitle;
    internal SessionBookmark[] m_bookmarks;
    private int m_charterId;
    private string m_computerName;
    private int m_configurationId;
    private string m_configurationName;
    private long m_duration;
    private int m_feedbackId;
    internal SessionNote[] m_notes;
    private string m_sprint;
    private byte m_state;
    private int m_userStoryId;
    public ObjectTypes ObjectType { get; }
    public TimeSpan Duration { get; public set; }
    public SessionState State { get; public set; }
    public string Sprint { get; public set; }
    public string ComputerName { get; public set; }
    public int UserStoryId { get; public set; }
    public int CharterId { get; public set; }
    public int FeedbackId { get; public set; }
    public SessionPropertyCollection`1<ISessionNote> Notes { get; }
    public SessionPropertyCollection`1<ISessionBookmark> Bookmarks { get; }
    public int TestConfigurationId { get; public set; }
    public string TestConfigurationName { get; public set; }
    public Uri ArtifactUri { get; }
    public string OutboundType { get; }
    internal TestResultIdentity Identity { get; }
    public string UserStoryTitle { get; private set; }
    internal Session(SessionHelper helper);
    public virtual ObjectTypes get_ObjectType();
    public sealed virtual TimeSpan get_Duration();
    public sealed virtual void set_Duration(TimeSpan value);
    public sealed virtual SessionState get_State();
    public sealed virtual void set_State(SessionState value);
    public sealed virtual string get_Sprint();
    public sealed virtual void set_Sprint(string value);
    public sealed virtual string get_ComputerName();
    public sealed virtual void set_ComputerName(string value);
    public sealed virtual int get_UserStoryId();
    public sealed virtual void set_UserStoryId(int value);
    public sealed virtual int get_CharterId();
    public sealed virtual void set_CharterId(int value);
    public sealed virtual int get_FeedbackId();
    public sealed virtual void set_FeedbackId(int value);
    public sealed virtual SessionPropertyCollection`1<ISessionNote> get_Notes();
    public sealed virtual SessionPropertyCollection`1<ISessionBookmark> get_Bookmarks();
    public sealed virtual int get_TestConfigurationId();
    public sealed virtual void set_TestConfigurationId(int value);
    public sealed virtual string get_TestConfigurationName();
    public sealed virtual void set_TestConfigurationName(string value);
    public sealed virtual Uri get_ArtifactUri();
    public sealed virtual string get_OutboundType();
    internal virtual TestResultIdentity get_Identity();
    public sealed virtual string get_UserStoryTitle();
    private void set_UserStoryTitle(string value);
    public sealed virtual ISessionNote CreateNote();
    public sealed virtual ISessionBookmark CreateBookmark();
    private sealed virtual override void Microsoft.TeamFoundation.TestManagement.Client.Internal.ITestManagementServerArtifact.AssociateWorkItem(WorkItem workItem);
    public sealed virtual void AssociateWorkItem(WorkItem workItem);
    public sealed virtual void DisassociateWorkItem(WorkItem workItem);
    public sealed virtual Int32[] QueryAssociatedWorkItems();
    public Artifact[] QueryAssociatedWorkItemArtifacts();
    internal virtual void DeleteFromServer(DeleteAction action);
    public virtual void Refresh();
    internal void PostLoad(TestManagementTeamProject project);
    public sealed virtual void Save(bool uploadInBackground);
    public virtual void Save();
    private void SaveExistingSession(bool uploadInBackground);
    private void SaveNewSession(bool uploadInBackground);
    private Int32[] UpdateAfterSaveNew(bool uploadInBackground, Session newSession);
    private void TryDeleteSession(int sessionId);
    internal virtual void RefreshFrom(object source);
    private void CreateCollectionFromArray(SessionPropertyCollection`1& collection, T[] array);
    protected virtual TestResultAttachment[] FetchAttachmentsFromServer();
    protected virtual bool ValidateComment(string commentPropertyName, string comment);
    internal static Session FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal virtual void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, Session obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.SessionBookmark : SessionNote {
    private string m_artifactUri;
    public Uri ArtifactUri { get; public set; }
    public SessionBookmark(TimeSpan creationTime, string comment, Uri artifactUri, PropertyOwner owner);
    public sealed virtual Uri get_ArtifactUri();
    public sealed virtual void set_ArtifactUri(Uri value);
    public virtual int GetHashCode();
    public virtual bool Equals(object obj);
    internal static SessionBookmark FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal virtual void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, SessionBookmark obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.SessionHelper : ClientObjectHelper`3<ISession, Session, int> {
    internal SessionHelper(TestManagementTeamProject project);
    public virtual ISession Create();
    public sealed virtual ISession Create(int testPlanId);
    public sealed virtual ISession Find(int sessionId);
    public sealed virtual ISession FindByLink(Uri artifactUri);
    public sealed virtual IEnumerable`1<ISession> Query(string queryText);
    public sealed virtual int Count(string queryText);
    public sealed virtual void Delete(IEnumerable`1<ISession> sessions);
    public void Delete(Int32[] ids);
    private Session CreateInternal();
    private ITestAttachment FindSessionAttachment(IAttachmentCollection testAttachments, int testAttachmentId);
    private IEnumerable`1<ISession> GenericSessionQuery(SessionQueryDelegate query);
}
public enum Microsoft.TeamFoundation.TestManagement.Client.SessionLinkType : Enum {
    public int value__;
    public static SessionLinkType None;
    public static SessionLinkType SessionInfo;
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.SessionNote : object {
    [CompilerGeneratedAttribute]
private PropertyOwner <Owner>k__BackingField;
    [CompilerGeneratedAttribute]
private PropertyChangedEventHandler PropertyChanged;
    protected string m_comment;
    protected long m_creationTime;
    public TimeSpan CreationTime { get; public set; }
    public string Comment { get; public set; }
    public PropertyOwner Owner { get; public set; }
    public SessionNote(TimeSpan creationTime, string comment, PropertyOwner owner);
    public sealed virtual TimeSpan get_CreationTime();
    public sealed virtual void set_CreationTime(TimeSpan value);
    public sealed virtual string get_Comment();
    public sealed virtual void set_Comment(string value);
    [CompilerGeneratedAttribute]
public PropertyOwner get_Owner();
    [CompilerGeneratedAttribute]
public void set_Owner(PropertyOwner value);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
public sealed virtual void add_PropertyChanged(PropertyChangedEventHandler value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_PropertyChanged(PropertyChangedEventHandler value);
    protected void NotifyPropertyChanged(string propertyName);
    internal static SessionNote FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal virtual void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, SessionNote obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public class Microsoft.TeamFoundation.TestManagement.Client.SessionPropertyCollection`1 : ObservableCollection`1<T> {
    [CompilerGeneratedAttribute]
private PropertyOwner <Owner>k__BackingField;
    internal PropertyOwner Owner { get; internal set; }
    [CompilerGeneratedAttribute]
internal PropertyOwner get_Owner();
    [CompilerGeneratedAttribute]
internal void set_Owner(PropertyOwner value);
    protected virtual void InsertItem(int index, T item);
    protected virtual void RemoveItem(int index);
    protected virtual void ClearItems();
}
public enum Microsoft.TeamFoundation.TestManagement.Client.SessionState : Enum {
    public int value__;
    public static SessionState Unspecified;
    public static SessionState NotStarted;
    public static SessionState InProgress;
    public static SessionState Paused;
    public static SessionState Completed;
    public static SessionState MaxValue;
}
public enum Microsoft.TeamFoundation.TestManagement.Client.SessionTimelineType : Enum {
    public int value__;
    public static SessionTimelineType None;
    public static SessionTimelineType Queued;
    public static SessionTimelineType Completed;
    public static SessionTimelineType Started;
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.SharedParameterDataSet : SimpleClientObject {
    [CompilerGeneratedAttribute]
private ISharedParameterData <ParameterData>k__BackingField;
    [CompilerGeneratedAttribute]
private WorkItem <WorkItem>k__BackingField;
    [CompilerGeneratedAttribute]
private SharedParameterDataSetHelper <SharedParameterHelper>k__BackingField;
    public int Id { get; }
    public int Revision { get; internal set; }
    public IList`1<string> ParameterNames { get; }
    public string Title { get; }
    public ISharedParameterData ParameterData { get; private set; }
    public WorkItem WorkItem { get; private set; }
    public ObjectTypes ObjectType { get; }
    public LinkCollection Links { get; }
    public string Area { get; public set; }
    public string Description { get; public set; }
    private SharedParameterDataSetHelper SharedParameterHelper { get; private set; }
    public SharedParameterDataSet(SharedParameterDataSetHelper sharedParameterHelper, WorkItem wit);
    public virtual int get_Id();
    public virtual int get_Revision();
    internal virtual void set_Revision(int value);
    public sealed virtual IList`1<string> get_ParameterNames();
    public sealed virtual string get_Title();
    [CompilerGeneratedAttribute]
public sealed virtual ISharedParameterData get_ParameterData();
    [CompilerGeneratedAttribute]
private void set_ParameterData(ISharedParameterData value);
    [CompilerGeneratedAttribute]
public WorkItem get_WorkItem();
    [CompilerGeneratedAttribute]
private void set_WorkItem(WorkItem value);
    public virtual ObjectTypes get_ObjectType();
    public sealed virtual LinkCollection get_Links();
    public sealed virtual string get_Area();
    public sealed virtual void set_Area(string value);
    public sealed virtual string get_Description();
    public sealed virtual void set_Description(string value);
    [CompilerGeneratedAttribute]
private SharedParameterDataSetHelper get_SharedParameterHelper();
    [CompilerGeneratedAttribute]
private void set_SharedParameterHelper(SharedParameterDataSetHelper value);
    private void PopulateParameterData(WorkItem wit);
    public virtual void Save();
    public virtual void Refresh();
    public sealed virtual void Flush();
    internal virtual void DeleteFromServer(DeleteAction action);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.SharedParameterDataSetHelper : ClientObjectHelper`3<ISharedParameterDataSet, SharedParameterDataSet, int> {
    [CompilerGeneratedAttribute]
private WitHelper <WitHelper>k__BackingField;
    public WitHelper WitHelper { get; private set; }
    public SharedParameterDataSetHelper(TestManagementTeamProject project);
    public sealed virtual ISharedParameterDataSet Find(int sharedParameterId);
    public virtual ISharedParameterDataSet Create();
    [CompilerGeneratedAttribute]
public WitHelper get_WitHelper();
    [CompilerGeneratedAttribute]
private void set_WitHelper(WitHelper value);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.SharedStep : TestBase {
    private TestCaseAttachmentList m_attachments;
    private AfnAttachmentList m_afnList;
    public ObjectTypes ObjectType { get; }
    public ITestAttachment ActionRecording { get; public set; }
    public ITestCaseCollection TestCaseReferences { get; }
    public IAttachmentCollection Attachments { get; }
    internal SharedStep(SharedStepHelper helper, WorkItem workItem);
    public virtual string ToString();
    public virtual ObjectTypes get_ObjectType();
    public sealed virtual ITestAttachment CreateActionRecording(string localFileName);
    public sealed virtual ITestAttachment get_ActionRecording();
    public sealed virtual void set_ActionRecording(ITestAttachment value);
    public sealed virtual ITestCaseCollection get_TestCaseReferences();
    private void PopulateAttachmentList();
    public sealed virtual ITestAttachment CreateAttachment(string localFileName);
    public sealed virtual ITestAttachment CreateAttachment(string sourceFileName, SourceFileAction deleteOnCompletion);
    public sealed virtual IAttachmentCollection get_Attachments();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.SharedStepHelper : ClientObjectHelper`3<ISharedStep, SharedStep, int> {
    private Dictionary`2<int, Dictionary`2<int, WorkItem>> m_SharedStepCache;
    private bool m_isCacheOn;
    private String[] SharedStepsRequiredFields;
    private WitHelper m_witHelper;
    internal SharedStepHelper(TestManagementTeamProject project);
    internal void StartCachingSharedStepWorkItems();
    internal void StopCachingSharedStepWorkItems();
    public virtual ISharedStep Create();
    public sealed virtual bool IsWorkItemCompatible(WorkItem workItem);
    public sealed virtual ISharedStep Find(int id);
    public sealed virtual ISharedStep Find(int id, int revision);
    public sealed virtual IEnumerable`1<ISharedStep> Query(string queryText);
    public sealed virtual IEnumerable`1<ISharedStep> Query(string queryText, IDictionary wiqlContext);
    private IEnumerable`1<ISharedStep> ProcessQueryResult(WorkItemCollection items);
    [IteratorStateMachineAttribute("Microsoft.TeamFoundation.TestManagement.Client.SharedStepHelper/<ProcessQueryResultInternal>d__13")]
private IEnumerable`1<ISharedStep> ProcessQueryResultInternal(WorkItemCollection items, bool flag, List`1<ISharedStep> values);
    public sealed virtual int Count(string queryText);
    public sealed virtual int Count(string queryText, IDictionary wiqlContext);
    public sealed virtual bool DoRequiredFieldsExist();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.SharedStepReference : TestAction {
    public static string ElementName;
    private static string SharedStepIdAttributeName;
    private int m_sharedStepReference;
    public int SharedStepId { get; public set; }
    internal SharedStepReference(ITestActionOwner owner);
    internal SharedStepReference(ITestActionOwner owner, int id);
    public virtual string ToString();
    public sealed virtual int get_SharedStepId();
    public sealed virtual void set_SharedStepId(int value);
    public sealed virtual ISharedStep FindSharedStep();
    public virtual void FromXml(XmlReader reader);
    public virtual void ToXml(XmlWriter writer);
    public virtual void MoveToNewOwner(ITestBase newOwner);
    public virtual ITestAction CopyToNewOwner(ITestBase newOwner);
    protected internal virtual void OnConnection(OnConnectionReason reason);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.SharedStepResult : TestActionResult {
    private TestActionResultCollection m_actionResults;
    public TestActionResultCollection Actions { get; }
    public int SharedStepId { get; public set; }
    public int SharedStepRevision { get; public set; }
    internal SharedStepResult(TestCaseResultHelper helper, int actionId, int sharedStepId);
    public sealed virtual TestActionResultCollection get_Actions();
    public sealed virtual int get_SharedStepId();
    public sealed virtual void set_SharedStepId(int value);
    public sealed virtual int get_SharedStepRevision();
    public sealed virtual void set_SharedStepRevision(int value);
    public sealed virtual ISharedStep GetSharedStep();
    internal virtual void PreSave(SubResults subResults, TestResultIdentity parent);
    internal virtual void PostSave();
    internal static SharedStepResult FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal virtual void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, SharedStepResult obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal abstract class Microsoft.TeamFoundation.TestManagement.Client.SimpleClientObject : ClientObject`1<int> {
    public bool IsSaved { get; }
    internal bool IsDeleted { get; }
    internal SimpleClientObject(IClientObjectHelper helper);
    internal SimpleClientObject(IClientObjectHelper helper, int id);
    internal virtual void OnDeletion();
    public bool get_IsSaved();
    internal bool get_IsDeleted();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.SkinnyPlan : object {
    private int m_id;
    public int Id { get; public set; }
    public int get_Id();
    public void set_Id(int value);
    internal static SkinnyPlan FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, SkinnyPlan obj);
}
public enum Microsoft.TeamFoundation.TestManagement.Client.SourceFileAction : Enum {
    public int value__;
    public static SourceFileAction None;
    public static SourceFileAction DeleteOnCompletion;
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.StateTypeEnumAndStateString : object {
    private byte m_stateType;
    private string m_state;
    public byte StateType { get; public set; }
    public string State { get; public set; }
    public byte get_StateType();
    public void set_StateType(byte value);
    public string get_State();
    public void set_State(string value);
    internal static StateTypeEnumAndStateString FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, StateTypeEnumAndStateString obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.StaticTestSuite : TestSuite {
    private TestSuiteCollection m_suiteCollection;
    internal TestSuiteCollection SubSuites { get; internal set; }
    protected IEnumerable`1<TestSuite> Suites { get; }
    private ITestSuiteEntryCollection Microsoft.TeamFoundation.TestManagement.Client.IStaticTestSuite.Entries { get; }
    private ITestSuiteCollection Microsoft.TeamFoundation.TestManagement.Client.IStaticTestSuite.SubSuites { get; }
    public TestSuiteType TestSuiteType { get; }
    internal StaticTestSuite(TestSuiteHelper helper, TestPlan plan);
    protected internal StaticTestSuite(TestSuiteHelper helper, TestPlan plan, int id, bool isPartial);
    internal TestSuiteCollection get_SubSuites();
    internal void set_SubSuites(TestSuiteCollection value);
    internal virtual void RemoveEntry(int index);
    internal virtual void SetEntry(int index, TestSuiteEntry newEntry);
    internal virtual void InsertEntry(int index, TestSuiteEntry item);
    internal virtual void ClearEntries();
    protected virtual void CreateCollections();
    protected virtual void SyncWithServerEntries(TestSuiteEntry[] newEntries, Dictionary`2<int, TestSuiteEntry> suitesEntriesToReuse);
    protected virtual IEnumerable`1<TestSuite> get_Suites();
    private sealed virtual override ITestSuiteEntryCollection Microsoft.TeamFoundation.TestManagement.Client.IStaticTestSuite.get_Entries();
    private sealed virtual override ITestSuiteCollection Microsoft.TeamFoundation.TestManagement.Client.IStaticTestSuite.get_SubSuites();
    public virtual TestSuiteType get_TestSuiteType();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public class Microsoft.TeamFoundation.TestManagement.Client.StoredQueryNotFoundException : TestObjectNotFoundException {
    private string m_name;
    private string m_guid;
    public string Name { get; }
    public string Guid { get; }
    public StoredQueryNotFoundException(string message, string name, string guid);
    public StoredQueryNotFoundException(string message, Exception innerException, string name, string guid);
    protected StoredQueryNotFoundException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    public string get_Name();
    public string get_Guid();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal static class Microsoft.TeamFoundation.TestManagement.Client.StructureServiceHelper : object {
    internal static string CssToWorkItemPath(string cssPath);
    internal static string WorkItemToCssPath(string workItemPath, NodeInfo areaRoot);
    internal static NodeInfo FindAreaRoot(ICommonStructureService css, ProjectInfo project);
    internal static NodeInfo FindIterationRoot(ICommonStructureService css, ProjectInfo project);
    internal static NodeInfo FindAreaRootFromWorkItemPath(ICommonStructureService css, string workItemPath);
    internal static NodeInfo FindStructureRoot(ICommonStructureService css, ProjectInfo project, string structureType);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.SubResults : object {
    private TestCaseResult m_testCaseResult;
    private List`1<TestActionResult> m_actionResults;
    private List`1<TestActionResult> m_actionDeletes;
    private List`1<TestResultParameter> m_parameters;
    private List`1<TestResultParameter> m_parameterDeletes;
    private List`1<TestResultAttachment> m_attachments;
    private List`1<TestResultAttachmentIdentity> m_attachmentDeletes;
    internal List`1<TestActionResult> ActionResults { get; }
    internal List`1<TestActionResult> ActionDeletes { get; }
    internal List`1<TestResultParameter> Parameters { get; }
    internal List`1<TestResultParameter> ParameterDeletes { get; }
    internal TestCaseResult TestCaseResult { get; internal set; }
    internal List`1<TestResultAttachment> Attachments { get; }
    internal List`1<TestResultAttachmentIdentity> AttachmentDeletes { get; }
    internal List`1<TestActionResult> get_ActionResults();
    internal List`1<TestActionResult> get_ActionDeletes();
    internal List`1<TestResultParameter> get_Parameters();
    internal List`1<TestResultParameter> get_ParameterDeletes();
    internal TestCaseResult get_TestCaseResult();
    internal void set_TestCaseResult(TestCaseResult value);
    internal List`1<TestResultAttachment> get_Attachments();
    internal List`1<TestResultAttachmentIdentity> get_AttachmentDeletes();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.SuiteIdAndType : object {
    private int m_suiteId;
    private byte m_suiteType;
    internal int SuiteId { get; }
    internal TestSuiteType SuiteType { get; }
    internal SuiteIdAndType(TestSuiteEntry entry);
    internal SuiteIdAndType(SuiteIdAndType suite);
    internal int get_SuiteId();
    internal TestSuiteType get_SuiteType();
    internal static SuiteIdAndType FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, SuiteIdAndType obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.SuitePointCount : object {
    private int m_pointCount;
    private int m_suiteId;
    public int PointCount { get; public set; }
    public int SuiteId { get; public set; }
    public int get_PointCount();
    public void set_PointCount(int value);
    public int get_SuiteId();
    public void set_SuiteId(int value);
    internal static SuitePointCount FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, SuitePointCount obj);
}
[GenerateAllConstantsAttribute("")]
public enum Microsoft.TeamFoundation.TestManagement.Client.TcmProperty : Enum {
    public int value__;
    public static TcmProperty None;
    public static TcmProperty UsedWebGridViewForAuthoring;
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TeamFoundationIdentityCache : object {
    private ReaderWriterLock m_readerWriterLock;
    private Dictionary`2<Guid, TeamFoundationIdentity> m_cacheById;
    private Dictionary`2<string, TeamFoundationIdentity> m_cacheByDisplayName;
    private Dictionary`2<string, TeamFoundationIdentity> m_cacheByAccountName;
    public ICollection`1<TeamFoundationIdentity> AllUserIdentities { get; }
    public void Add(IEnumerable`1<TeamFoundationIdentity> teamFoundationIdentities);
    public void Add(TeamFoundationIdentity teamFoundationIdentity);
    public void Remove(TeamFoundationIdentity teamFoundationIdentity);
    public TeamFoundationIdentity FindByTeamFoundationId(Guid teamFoundationId);
    public TeamFoundationIdentity FindByDisplayName(string displayName);
    public TeamFoundationIdentity FindByAccountName(string accountName);
    internal void AcquireWriterLock(int millisecondsTimeout);
    internal void ReleaseWriterLock();
    internal void AcquireReaderLock(int millisecondsTimeout);
    internal void ReleaseReaderLock();
    internal IEnumerable`1<Guid> GetUnavailableIdentities(IEnumerable`1<Guid> teamFoundationIds);
    internal IEnumerable`1<string> GetUnavailableIdentities(IEnumerable`1<string> accountNames);
    internal void RefreshFrom(ReadOnlyCollection`1<TeamFoundationIdentity> identities);
    internal void Close();
    private void InternalAdd(TeamFoundationIdentity teamFoundationIdentity);
    private void InternalRemove(TeamFoundationIdentity teamFoundationIdentity);
    private void MakeDisplayNameUnique(TeamFoundationIdentity identity);
    public ICollection`1<TeamFoundationIdentity> get_AllUserIdentities();
    [CompilerGeneratedAttribute]
private bool <GetUnavailableIdentities>b__11_0(Guid id);
    [CompilerGeneratedAttribute]
private bool <GetUnavailableIdentities>b__12_0(string id);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public class Microsoft.TeamFoundation.TestManagement.Client.TeamFoundationIdentityName : object {
    [CompilerGeneratedAttribute]
private Guid <TeamFoundationId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    public Guid TeamFoundationId { get; private set; }
    public string DisplayName { get; private set; }
    public TeamFoundationIdentityName(TeamFoundationIdentity id);
    public TeamFoundationIdentityName(Guid id, string name);
    [CompilerGeneratedAttribute]
public Guid get_TeamFoundationId();
    [CompilerGeneratedAttribute]
private void set_TeamFoundationId(Guid value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
private void set_DisplayName(string value);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public class Microsoft.TeamFoundation.TestManagement.Client.TeamProjectNotFoundException : TestManagementException {
    public TeamProjectNotFoundException(string message);
    public TeamProjectNotFoundException(string message, Exception ex);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public class Microsoft.TeamFoundation.TestManagement.Client.TemporaryFolderException : TestManagementException {
    public TemporaryFolderException(string message);
    public TemporaryFolderException(string message, Exception innerException);
    protected TemporaryFolderException(SerializationInfo info, StreamingContext context);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal abstract class Microsoft.TeamFoundation.TestManagement.Client.TestAction : object {
    [CompilerGeneratedAttribute]
private PropertyChangedEventHandler PropertyChanged;
    private static string IdAttributeName;
    private int m_id;
    private TestActionGroup m_parent;
    protected ITestActionOwner m_owner;
    public int Id { get; }
    public ITestActionGroup Parent { get; internal set; }
    internal ITestActionOwner Owner { get; }
    private ITestBase Microsoft.TeamFoundation.TestManagement.Client.ITestAction.Owner { get; }
    internal bool IsConnectedToRoot { get; }
    internal TestAction(ITestActionOwner owner);
    internal TestAction(ITestActionOwner owner, int id);
    [CompilerGeneratedAttribute]
public sealed virtual void add_PropertyChanged(PropertyChangedEventHandler value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_PropertyChanged(PropertyChangedEventHandler value);
    public sealed virtual int get_Id();
    public abstract virtual ITestAction CopyToNewOwner(ITestBase newOwner);
    public virtual void MoveToNewOwner(ITestBase newOwner);
    internal virtual void OnChanged();
    public abstract virtual void FromXml(XmlReader reader);
    public abstract virtual void ToXml(XmlWriter writer);
    internal static TestAction CreateFromXml(ITestActionOwner owner, XmlReader reader);
    protected void WriteBaseAttributes(XmlWriter writer);
    public sealed virtual ITestActionGroup get_Parent();
    internal void set_Parent(ITestActionGroup value);
    internal ITestActionOwner get_Owner();
    private sealed virtual override ITestBase Microsoft.TeamFoundation.TestManagement.Client.ITestAction.get_Owner();
    internal virtual void SetOwner(ITestActionOwner newOwner);
    internal virtual bool get_IsConnectedToRoot();
    protected internal abstract virtual void OnConnection(OnConnectionReason reason);
    protected void NotifyPropertyChanged(string property);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public class Microsoft.TeamFoundation.TestManagement.Client.TestActionCollection : ObservableCollection`1<ITestAction> {
    private TestActionGroup m_owner;
    internal TestActionCollection(TestActionGroup owner);
    protected virtual void InsertItem(int index, ITestAction item);
    internal void SilentInsertItem(int index, TestAction action);
    protected virtual void MoveItem(int oldIndex, int newIndex);
    protected virtual void RemoveItem(int index);
    protected virtual void ClearItems();
    protected virtual void SetItem(int index, ITestAction item);
    public virtual int GetHashCode();
    private TestAction Check(ITestAction item);
    private int InternalIndexOf(int actionId);
    private void InternalMoveTo(int fromIndex, int toIndex, TestActionCollection newCollection);
    public int IndexOf(int actionId);
    public void MoveTo(int fromIndex, int toIndex, TestActionCollection newCollection);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestActionGroup : TestAction {
    public static string ElementName;
    public static string LastUsedAttributeName;
    public static string NameAttributeName;
    private TestActionCollection m_actions;
    private string m_name;
    public string Name { get; public set; }
    public TestActionCollection Actions { get; }
    internal TestActionGroup(ITestActionOwner owner);
    internal TestActionGroup(ITestActionOwner owner, int id);
    public virtual string ToString();
    public sealed virtual string get_Name();
    public sealed virtual void set_Name(string value);
    public sealed virtual TestActionCollection get_Actions();
    public virtual void FromXml(XmlReader reader);
    public virtual void ToXml(XmlWriter writer);
    protected virtual void ReadAttributes(XmlReader reader);
    protected virtual void WriteAttributes(XmlWriter writer);
    internal void Apply(ActionVisitor visitor);
    internal void Apply(StepVisitor visitor);
    internal TestAction Find(ActionPredicate finder);
    internal TestStep Find(StepPredicate finder);
    internal ITestAction FindAction(int id);
    public virtual ITestAction CopyToNewOwner(ITestBase newOwner);
    internal virtual void SetOwner(ITestActionOwner newOwner);
    internal void FireConnectingToRoot(TestAction action);
    internal void FireDisconnectingFromRoot(TestAction action);
    protected internal virtual void OnConnection(OnConnectionReason reason);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestActionResult : TestResult {
    private int m_actionId;
    private AttachmentList m_attachments;
    private TestActionResultCollection m_owner;
    protected string m_actionPath;
    protected int m_iterationId;
    protected int m_setId;
    protected int m_setRevision;
    public int ActionId { get; public set; }
    public IAttachmentCollection Attachments { get; }
    internal TestResultIdentity Identity { get; internal set; }
    internal TestActionResultCollection Owner { get; internal set; }
    public string ActionPath { get; }
    public int IterationId { get; }
    public int SetId { get; }
    public int SetRevision { get; }
    internal TestActionResult(TestResultIdentity identity);
    internal TestActionResult(TestCaseResultHelper helper);
    internal static TestActionResult Convert(TestActionResult action);
    internal virtual void PostLoad(TestCaseResultHelper helper);
    public sealed virtual int get_ActionId();
    public sealed virtual void set_ActionId(int value);
    public virtual IAttachmentCollection get_Attachments();
    public virtual ITestAttachment CreateAttachment(string localFileName);
    public virtual ITestAttachment CreateAttachment(string sourceFileName, SourceFileAction deleteOnCompletion);
    internal TestResultIdentity get_Identity();
    internal void set_Identity(TestResultIdentity value);
    internal virtual void PreSave(SubResults subResults, TestResultIdentity parent);
    internal virtual void PostSave();
    internal TestActionResultCollection get_Owner();
    internal void set_Owner(TestActionResultCollection value);
    public string get_ActionPath();
    public sealed virtual int get_IterationId();
    public int get_SetId();
    public int get_SetRevision();
    internal static TestActionResult FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal virtual void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, TestActionResult obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public class Microsoft.TeamFoundation.TestManagement.Client.TestActionResultCollection : ObservableCollection`1<ITestActionResult> {
    private Dictionary`2<int, bool> m_deletions;
    internal TestActionResultCollection(TestManagementTeamProject project, TestActionResult[] results);
    protected virtual void InsertItem(int index, ITestActionResult item);
    protected virtual void RemoveItem(int index);
    protected virtual void ClearItems();
    protected virtual void SetItem(int index, ITestActionResult item);
    internal void PreSave(SubResults subResults, TestResultIdentity parent);
    internal void PostSave();
    public int IndexOf(int actionId);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestActionRootGroup : TestActionGroup {
    private int m_lastUsedId;
    private bool m_isDirty;
    internal bool IsDirty { get; internal set; }
    internal bool IsConnectedToRoot { get; }
    internal TestActionRootGroup(ITestActionOwner owner);
    public virtual void FromXml(XmlReader reader);
    public virtual string ToString();
    protected virtual void ReadAttributes(XmlReader reader);
    protected virtual void WriteAttributes(XmlWriter writer);
    internal virtual void OnChanged();
    internal bool get_IsDirty();
    internal void set_IsDirty(bool value);
    internal int GetNextAvailableId();
    public virtual void MoveToNewOwner(ITestBase newOwner);
    public virtual ITestAction CopyToNewOwner(ITestBase newOwner);
    internal virtual bool get_IsConnectedToRoot();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal abstract class Microsoft.TeamFoundation.TestManagement.Client.TestBase : SimpleClientObject {
    private bool m_isRemovingParameters;
    private bool m_isUpdatingReferences;
    private WitHelper m_witHelper;
    private TestActionRootGroup m_actions;
    private TestParameterCollection m_parameters;
    private Guid m_ownerTeamFoundationId;
    private WorkItem m_workItem;
    [CompilerGeneratedAttribute]
private UploadCompletionEventHandler AttachmentUploadCompleted;
    [CompilerGeneratedAttribute]
private TestParameterDeletingEventEventHandler TestParameterDeletingEvent;
    public int Id { get; internal set; }
    internal ClientObjectIdRev`1<int> IdRev { get; }
    public int Revision { get; internal set; }
    public string Title { get; public set; }
    public TeamFoundationIdentity Owner { get; public set; }
    public string OwnerName { get; private set; }
    public Guid OwnerTeamFoundationId { get; public set; }
    public int Priority { get; public set; }
    public LinkCollection Links { get; }
    public FieldCollection CustomFields { get; }
    public string Area { get; public set; }
    public string Description { get; public set; }
    public string State { get; public set; }
    public string Reason { get; public set; }
    public bool Exists { get; }
    public WorkItem WorkItem { get; internal set; }
    public TestActionCollection Actions { get; }
    internal TestActionRootGroup RootGroup { get; }
    public DateTime DateModified { get; }
    public DateTime DateCreated { get; }
    public TestParameterCollection TestParameters { get; }
    protected bool IsActionsModified { get; }
    protected bool IsUpdatingReferences { get; }
    internal TestBase(IClientObjectHelper helper, WorkItem workItem);
    internal TestBase(IClientObjectHelper helper, int workItemId);
    public virtual int get_Id();
    internal virtual void set_Id(int value);
    internal virtual ClientObjectIdRev`1<int> get_IdRev();
    public virtual int get_Revision();
    internal virtual void set_Revision(int value);
    public sealed virtual string get_Title();
    public sealed virtual void set_Title(string value);
    public sealed virtual TeamFoundationIdentity get_Owner();
    public sealed virtual void set_Owner(TeamFoundationIdentity value);
    public sealed virtual string get_OwnerName();
    private void set_OwnerName(string value);
    public sealed virtual Guid get_OwnerTeamFoundationId();
    public sealed virtual void set_OwnerTeamFoundationId(Guid value);
    public sealed virtual int get_Priority();
    public sealed virtual void set_Priority(int value);
    public sealed virtual LinkCollection get_Links();
    public sealed virtual FieldCollection get_CustomFields();
    public sealed virtual string get_Area();
    public sealed virtual void set_Area(string value);
    public sealed virtual string get_Description();
    public sealed virtual void set_Description(string value);
    public sealed virtual string get_State();
    public sealed virtual void set_State(string value);
    public sealed virtual string get_Reason();
    public sealed virtual void set_Reason(string value);
    public sealed virtual bool get_Exists();
    public sealed virtual WorkItem get_WorkItem();
    internal void set_WorkItem(WorkItem value);
    public sealed virtual ITestStep CreateTestStep();
    public sealed virtual ITestActionGroup CreateTestActionGroup();
    public sealed virtual int GetNextAvailableActionId();
    public sealed virtual ISharedStepReference CreateSharedStepReference();
    public sealed virtual TestActionCollection get_Actions();
    internal TestActionRootGroup get_RootGroup();
    public sealed virtual ITestAction FindAction(int id);
    public sealed virtual DateTime get_DateModified();
    public sealed virtual DateTime get_DateCreated();
    public sealed virtual TestParameterCollection get_TestParameters();
    public virtual void Save();
    internal virtual void DeleteFromServer(DeleteAction action);
    internal virtual void OnDeletion();
    public sealed virtual void RenameParameter(string from, string to);
    protected internal virtual bool OnRenameParameter(string oldName, string newName);
    public sealed virtual void ReplaceParameter(string parameterName, string text);
    public virtual void Refresh();
    protected virtual void InternalRefresh();
    internal void RefreshFrom(WorkItem workItem);
    internal void UpdateReferenceParameters();
    public virtual void Flush();
    public sealed virtual void OverrideParameter(string parameterName);
    public virtual int GetHashCode();
    private void LoadParametersAndActions();
    private void LoadExcelActions(string actions);
    protected internal virtual void LoadAdditionalParameters(TestParameterCollection parameters);
    protected internal virtual void OnParametersLoaded();
    internal bool UpdatingSteps(List`1<ParameterizedString> stepStrings);
    protected bool OnParametersDeleting(List`1<string> parameters);
    protected bool get_IsActionsModified();
    protected bool get_IsUpdatingReferences();
    protected string GetStringField(string fieldName);
    protected void SetStringField(string fieldName, string value);
    protected int GetIntField(string fieldName);
    protected void SetIntField(string fieldName, int value);
    protected bool GetBoolField(string fieldName);
    protected void SetBoolField(string fieldName, bool value);
    protected void VerifyNotSharedStep();
    [CompilerGeneratedAttribute]
public sealed virtual void add_AttachmentUploadCompleted(UploadCompletionEventHandler value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_AttachmentUploadCompleted(UploadCompletionEventHandler value);
    [CompilerGeneratedAttribute]
public sealed virtual void add_TestParameterDeletingEvent(TestParameterDeletingEventEventHandler value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_TestParameterDeletingEvent(TestParameterDeletingEventEventHandler value);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestCase : TestBase {
    private TestCaseAttachmentList m_attachments;
    private DataSet m_data;
    private Dictionary`2<int, ISharedStep> m_sharedStepCache;
    private static string c_queryHint;
    private WitHelper m_witHelper;
    private TestCaseParameterDataInfo m_parameterDataInfo;
    private bool m_referencesSharedParameterDataSet;
    private ISharedParameterDataSet m_defaultSharedParameterDataSet;
    public bool IsAutomated { get; }
    public ITestImplementation Implementation { get; public set; }
    public ObjectTypes ObjectType { get; }
    public ITestSuiteEntry TestSuiteEntry { get; }
    public DataSet Data { get; }
    public TestCaseParameterDataInfo ParameterDataInfo { get; }
    public bool ReferencesSharedParameterDataSet { get; private set; }
    public int DefaultSharedParameterDataSetWorkItemId { get; }
    public ISharedParameterDataSet DefaultSharedParameterDataSet { get; }
    public DataTable DefaultTable { get; }
    public DataSet DataReadOnly { get; }
    public DataTable DefaultTableReadOnly { get; }
    public IAttachmentCollection Attachments { get; }
    internal Dictionary`2<int, ISharedStep> SharedStepCache { get; }
    internal TestCase(TestCaseHelper helper, WorkItem workItem);
    private static TestCase();
    public sealed virtual bool get_IsAutomated();
    public sealed virtual ITestImplementation get_Implementation();
    public sealed virtual void set_Implementation(ITestImplementation value);
    public virtual ObjectTypes get_ObjectType();
    public sealed virtual ISharedStep GetReferencedSharedStep(int sharedStepId);
    public sealed virtual ISharedStep GetReferencedSharedStep(int sharedStepId, int revision);
    public sealed virtual ITestSuiteEntry get_TestSuiteEntry();
    protected internal virtual void LoadAdditionalParameters(TestParameterCollection parameters);
    protected internal virtual void OnParametersLoaded();
    private void OnActionCollectionChanged(object sender, NotifyCollectionChangedEventArgs e);
    private void UpdateParameterDataInfo();
    private void OnParameterCollectionChanged(object sender, NotifyCollectionChangedEventArgs e);
    protected virtual void InternalRefresh();
    public sealed virtual DataSet get_Data();
    public TestCaseParameterDataInfo get_ParameterDataInfo();
    public sealed virtual bool get_ReferencesSharedParameterDataSet();
    private void set_ReferencesSharedParameterDataSet(bool value);
    public sealed virtual int get_DefaultSharedParameterDataSetWorkItemId();
    public sealed virtual ISharedParameterDataSet get_DefaultSharedParameterDataSet();
    public sealed virtual DataTable get_DefaultTable();
    public sealed virtual DataSet get_DataReadOnly();
    public sealed virtual DataTable get_DefaultTableReadOnly();
    private void FixDefaultTable();
    internal void DeleteParameterFromDataTable(string paramName);
    internal void UpdateDefaultTable();
    protected internal virtual bool OnRenameParameter(string oldName, string newName);
    private void ReadData(DataSet data);
    private void ReadDataFromJson(DataSet data, string dataFieldValue);
    private TestCaseParameterDataInfo ReadParameterDataInfoFromJson();
    private void ReadDataFromXml(DataSet data, string dataFieldValue, Boolean& exceptionThrown);
    public virtual void Flush();
    private void UpdateDataFieldInWorkItem();
    internal void AddTestCaseLinkIfNeeded(int shareStepSetId);
    private void RemoveSharedStepLink(Dictionary`2<int, ISharedStepReference> sharedSteps);
    public virtual void Save();
    public virtual string ToString();
    public sealed virtual ITestAttachment CreateAttachment(string localFileName);
    public sealed virtual ITestAttachment CreateAttachment(string sourceFileName, SourceFileAction deleteOnCompletion);
    public sealed virtual ITestAttachment CreateAttachment(Byte[] contents, int offset, int length);
    public sealed virtual IAttachmentCollection get_Attachments();
    private bool HasDataSetChanged(string originalDataSet);
    private void FetchAndCacheReferencedSharedSteps();
    private void RemoveUnreferencedSharedStepFromCache(List`1<int> sharedStepIds);
    private string CreateSharedStepQueryText(List`1<int> sharedStepIds);
    internal Dictionary`2<int, ISharedStep> get_SharedStepCache();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestCaseAndOwner : object {
    private int m_id;
    private Guid m_owner;
    public int Id { get; public set; }
    public Guid Owner { get; public set; }
    public int get_Id();
    public void set_Id(int value);
    public Guid get_Owner();
    public void set_Owner(Guid value);
    internal static TestCaseAndOwner FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, TestCaseAndOwner obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestCaseAttachment : object {
    [CompilerGeneratedAttribute]
private PropertyChangedEventHandler PropertyChanged;
    private static Regex s_metaRegex;
    private Attachment m_attachmentImpl;
    private TestManagementTeamProject m_project;
    private string m_fileName;
    private Byte[] m_contents;
    private int m_offset;
    private int m_length;
    private string m_attachmentType;
    public string AttachmentType { get; public set; }
    public string Comment { get; public set; }
    public string Name { get; public set; }
    public long Length { get; }
    public Uri Uri { get; }
    internal Attachment WorkItemAttachment { get; }
    internal string MetaData { get; internal set; }
    internal bool HasMetaData { get; }
    private static Regex MetaRegex { get; }
    public bool IsComplete { get; }
    public Uri ArtifactUri { get; }
    public TestCaseAttachment(string fileName, ITestManagementTeamProject project);
    public TestCaseAttachment(Byte[] contents, int offset, int length, ITestManagementTeamProject project);
    public TestCaseAttachment(Attachment attachment, ITestManagementTeamProject project);
    private static Attachment CreateTempFile(Byte[] contents, int offset, int length);
    public sealed virtual string get_AttachmentType();
    public sealed virtual void set_AttachmentType(string value);
    public sealed virtual string get_Comment();
    public sealed virtual void set_Comment(string value);
    public sealed virtual string get_Name();
    public sealed virtual void set_Name(string value);
    public sealed virtual long get_Length();
    private void DownloadToStream(Stream outputStream, long bytesToCopy);
    public sealed virtual void DownloadToArray(Byte[] contents, int offset);
    public sealed virtual void DownloadToFile(string localFileName);
    public sealed virtual Uri get_Uri();
    internal Attachment get_WorkItemAttachment();
    internal string get_MetaData();
    internal void set_MetaData(string value);
    internal bool get_HasMetaData();
    internal static bool CheckForMetaData(Attachment attachment);
    internal static string GetMetaData(Attachment attachment);
    internal static string GetComment(Attachment attachment);
    internal static string GetCommentAndMetaData(Attachment attachment, String& metaData);
    private void SetCommentAndMetaData(Attachment attachment, string metaData, string comment);
    private static Regex get_MetaRegex();
    private void Setter(string property, T& oldValue, T newValue);
    [CompilerGeneratedAttribute]
public sealed virtual void add_PropertyChanged(PropertyChangedEventHandler value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_PropertyChanged(PropertyChangedEventHandler value);
    public sealed virtual void AssociateWorkItem(WorkItem workItem);
    public sealed virtual void DisassociateWorkItem(WorkItem workItem);
    public sealed virtual bool get_IsComplete();
    public sealed virtual Uri get_ArtifactUri();
}
[DefaultMemberAttribute("Item")]
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestCaseAttachmentList : object {
    [CompilerGeneratedAttribute]
private NotifyCollectionChangedEventHandler CollectionChanged;
    private ObjectCache`2<Attachment, TestCaseAttachment> m_wrappers;
    private AttachmentCollection m_collection;
    private ITestManagementTeamProject m_project;
    public ITestAttachment Item { get; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    public TestCaseAttachmentList(AttachmentCollection collection, ITestManagementTeamProject project);
    public int IndexOf(ITestAttachment item);
    public sealed virtual void RemoveAt(int index);
    public sealed virtual ITestAttachment get_Item(int index);
    public sealed virtual void Add(ITestAttachment item);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(ITestAttachment item);
    public sealed virtual void CopyTo(ITestAttachment[] array, int arrayIndex);
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual bool Remove(ITestAttachment item);
    [IteratorStateMachineAttribute("Microsoft.TeamFoundation.TestManagement.Client.TestCaseAttachmentList/<System-Collections-IEnumerable-GetEnumerator>d__14")]
private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    [IteratorStateMachineAttribute("Microsoft.TeamFoundation.TestManagement.Client.TestCaseAttachmentList/<GetEnumerator>d__15")]
public sealed virtual IEnumerator`1<ITestAttachment> GetEnumerator();
    private int MapToInternalIndex(int index);
    private TestCaseAttachment CreateWrapper(Attachment attachment);
    protected void NotifyCollectionChanged(NotifyCollectionChangedEventArgs eventArgs);
    [CompilerGeneratedAttribute]
public sealed virtual void add_CollectionChanged(NotifyCollectionChangedEventHandler value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_CollectionChanged(NotifyCollectionChangedEventHandler value);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestCaseCollection : ClientObjectCollection`3<ITestCase, TestCase, int> {
    internal TestCaseCollection(TestCaseHelper helper);
    internal virtual TestCase[] Fetch(ClientObjectIdRev`1[] ids, Int32[]& deleted, ICollection`1& identities);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestCaseHelper : ClientObjectHelper`3<ITestCase, TestCase, int> {
    private String[] TestCaseRequiredFields;
    private WitHelper m_witHelper;
    internal TestCaseHelper(TestManagementTeamProject project);
    public virtual ITestCase Create();
    public sealed virtual ITestCase Create(WorkItemType workItemType);
    public sealed virtual bool IsWorkItemCompatible(WorkItem workItem);
    public sealed virtual ITestCase Find(int testCaseId);
    public sealed virtual ITestCase Find(int testCaseId, int revision);
    public sealed virtual IEnumerable`1<ITestCase> Query(string queryText);
    public sealed virtual IEnumerable`1<ITestCase> Query(string queryText, IDictionary wiqlContext);
    private IEnumerable`1<ITestCase> ProcessQueryResult(WorkItemCollection items);
    [IteratorStateMachineAttribute("Microsoft.TeamFoundation.TestManagement.Client.TestCaseHelper/<ProcessQueryResultInternal>d__10")]
private IEnumerable`1<ITestCase> ProcessQueryResultInternal(WorkItemCollection items, bool flag, List`1<ITestCase> values);
    internal IEnumerable`1<ITestCase> Query(Int32[] ids, string queryText);
    internal IEnumerable`1<ITestCase> Query(Int32[] ids, Int32[] revs, string queryText);
    public sealed virtual int Count(string queryText);
    public sealed virtual int Count(string queryText, IDictionary wiqlContext);
    public sealed virtual IEnumerable`1<ITestCase> InPlans(string queryText, bool isInPlans);
    public sealed virtual bool DoRequiredFieldsExist();
    internal List`1<TestCase> Fetch(IEnumerable`1<int> caseIds);
    internal List`1<TestCase> Fetch(IEnumerable`1<int> caseIds, string query);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestCaseIdAndRevQuery : object {
    private TestManagementTeamProject m_project;
    private string m_queryText;
    private Int32[] m_ids;
    private Int32[] m_revs;
    public string Name { get; }
    public string Owner { get; }
    public string QueryText { get; }
    internal TestCaseIdAndRevQuery(TestManagementTeamProject project, Int32[] ids, Int32[] revs, string queryHint);
    public virtual string ToString();
    public sealed virtual string get_Name();
    public sealed virtual string get_Owner();
    public sealed virtual string get_QueryText();
    public sealed virtual IEnumerable`1<ITestCase> Execute();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestCaseIdQuery : object {
    private TestManagementTeamProject m_project;
    private string m_queryText;
    private Int32[] m_ids;
    public string Name { get; }
    public string Owner { get; }
    public string QueryText { get; }
    internal TestCaseIdQuery(TestManagementTeamProject project, Int32[] ids, string queryHint);
    public virtual string ToString();
    public sealed virtual string get_Name();
    public sealed virtual string get_Owner();
    public sealed virtual string get_QueryText();
    public sealed virtual IEnumerable`1<ITestCase> Execute();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestCaseProperties : TmiTestImplementation {
    private string m_fullyQualifiedTestName;
    private byte m_Priority;
    private Guid m_owner;
    public string FullyQualifiedTestName { get; public set; }
    public Guid Owner { get; public set; }
    public byte Priority { get; public set; }
    public sealed virtual string get_FullyQualifiedTestName();
    public sealed virtual void set_FullyQualifiedTestName(string value);
    public sealed virtual Guid get_Owner();
    public sealed virtual void set_Owner(Guid value);
    public sealed virtual byte get_Priority();
    public sealed virtual void set_Priority(byte value);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestCaseResult : TestResult {
    [CompilerGeneratedAttribute]
private bool <ForUpdate>k__BackingField;
    internal static int FirstResultId;
    private Uri m_artifactUri;
    private AttachmentList m_attachments;
    private TestIterationResultCollection m_iterations;
    private bool m_isFromServer;
    private ITestAttachment m_afnStrip;
    private static Int32[] s_emptyIdArray;
    private ITestRun m_testRun;
    private ITestCase m_testCase;
    private int m_afnStripId;
    private string m_automatedTestId;
    private string m_automatedTestName;
    private string m_automatedTestStorage;
    private string m_automatedTestType;
    private string m_automatedTestTypeId;
    private string m_buildNumber;
    private string m_computerName;
    private int m_configurationId;
    private string m_configurationName;
    private byte m_failureType;
    private Guid m_owner;
    private string m_ownerName;
    private byte m_priority;
    private int m_resetCount;
    private int m_resolutionStateId;
    private Guid m_runBy;
    private string m_runByName;
    private byte m_state;
    private string m_testCaseArea;
    private string m_testCaseAreaUri;
    private int m_testCaseId;
    private int m_testCaseRevision;
    private string m_testCaseTitle;
    private int m_testPointId;
    public int TestCaseId { get; }
    public int TestConfigurationId { get; }
    public string TestConfigurationName { get; }
    public int TestPointId { get; }
    public TestResultState State { get; public set; }
    public int ResolutionStateId { get; public set; }
    public TeamFoundationIdentity Owner { get; public set; }
    public Guid OwnerTeamFoundationId { get; public set; }
    public string OwnerName { get; }
    public TeamFoundationIdentity RunBy { get; public set; }
    public Guid RunByTeamFoundationId { get; public set; }
    public string RunByName { get; }
    public int Priority { get; public set; }
    public string TestCaseTitle { get; }
    public string TestCaseArea { get; }
    public string ComputerName { get; public set; }
    public int TestCaseRevision { get; public set; }
    public ITestAttachment ActionRecording { get; public set; }
    public int ResetCount { get; }
    public FailureType FailureType { get; public set; }
    public int FailureTypeId { get; public set; }
    public ITestImplementation Implementation { get; internal set; }
    public string BuildNumber { get; }
    public IAttachmentCollection Attachments { get; }
    public bool IsFinished { get; }
    public Uri ArtifactUri { get; }
    public string OutboundType { get; }
    internal bool ForUpdate { get; private set; }
    internal TestResultIdentity Identity { get; }
    public ITestIterationResultCollection Iterations { get; }
    internal TestCaseResult(TestCaseResultHelper helper, int testRunId, int testResultId, int configurationId, ITestCaseProperties testCaseProperties);
    internal TestCaseResult(TestCaseResultHelper helper, int testRunId, int testResultId, int testCaseId, int configurationId, int testPointId);
    internal TestCaseResult(TestCaseResultHelper helper, int testRunId, int testResultId, int testCaseId, int configurationId, string configurationName, int testPointId);
    internal TestCaseResult(TestCaseResultHelper helper, int testRunId, int testResultId, int testCaseId, int configurationId, int testPointId, bool forUpdate);
    internal TestCaseResult(TestCaseResultHelper helper, int testRunId, int testResultId, int testCaseId, int configurationId, string testCaseTitle, string testCaseAreaUri, ITmiTestImplementation implementation);
    internal TestCaseResult(TestCaseResultHelper helper, int testRunId, int testResultId, string testCaseTitle);
    internal TestCaseResult(TestCaseResultHelper helper, TestCaseResultIdentifier id);
    internal TestCaseResult(TestCaseResult result);
    private static TestCaseResult();
    internal TestCaseResult Convert();
    internal virtual void PostLoad(TestCaseResultHelper helper);
    public sealed virtual int get_TestCaseId();
    public sealed virtual int get_TestConfigurationId();
    public sealed virtual string get_TestConfigurationName();
    public sealed virtual int get_TestPointId();
    public sealed virtual TestResultState get_State();
    public sealed virtual void set_State(TestResultState value);
    public sealed virtual int get_ResolutionStateId();
    public sealed virtual void set_ResolutionStateId(int value);
    public sealed virtual TeamFoundationIdentity get_Owner();
    public sealed virtual void set_Owner(TeamFoundationIdentity value);
    public sealed virtual Guid get_OwnerTeamFoundationId();
    public sealed virtual void set_OwnerTeamFoundationId(Guid value);
    public sealed virtual string get_OwnerName();
    public sealed virtual TeamFoundationIdentity get_RunBy();
    public sealed virtual void set_RunBy(TeamFoundationIdentity value);
    public sealed virtual Guid get_RunByTeamFoundationId();
    public sealed virtual void set_RunByTeamFoundationId(Guid value);
    public sealed virtual string get_RunByName();
    public sealed virtual int get_Priority();
    public sealed virtual void set_Priority(int value);
    public sealed virtual string get_TestCaseTitle();
    public sealed virtual string get_TestCaseArea();
    public sealed virtual string get_ComputerName();
    public sealed virtual void set_ComputerName(string value);
    public sealed virtual int get_TestCaseRevision();
    public sealed virtual void set_TestCaseRevision(int value);
    public sealed virtual ITestAttachment get_ActionRecording();
    public sealed virtual void set_ActionRecording(ITestAttachment value);
    public sealed virtual int get_ResetCount();
    public sealed virtual FailureType get_FailureType();
    public sealed virtual void set_FailureType(FailureType value);
    public sealed virtual int get_FailureTypeId();
    public sealed virtual void set_FailureTypeId(int value);
    public sealed virtual ITestImplementation get_Implementation();
    internal void set_Implementation(ITestImplementation value);
    public sealed virtual string get_BuildNumber();
    public virtual ITestAttachment CreateAttachment(string localFileName);
    public virtual ITestAttachment CreateAttachment(string sourceFileName, SourceFileAction deleteOnCompletion);
    public sealed virtual ITestAttachment CreateAttachment(Byte[] contents, int offset, int length);
    public virtual IAttachmentCollection get_Attachments();
    public sealed virtual ITestCase GetTestCase();
    public sealed virtual ITestRun GetTestRun();
    internal void SetTestRun(ITestRun run);
    public sealed virtual bool get_IsFinished();
    public sealed virtual Uri get_ArtifactUri();
    public sealed virtual string get_OutboundType();
    [CompilerGeneratedAttribute]
internal bool get_ForUpdate();
    [CompilerGeneratedAttribute]
private void set_ForUpdate(bool value);
    private sealed virtual override void Microsoft.TeamFoundation.TestManagement.Client.Internal.ITestManagementServerArtifact.AssociateWorkItem(WorkItem workItem);
    public sealed virtual void AssociateWorkItem(WorkItem workItem);
    public sealed virtual void DisassociateWorkItem(WorkItem workItem);
    public sealed virtual Int32[] QueryAssociatedWorkItems();
    public sealed virtual Artifact[] QueryAssociatedWorkItemArtifacts();
    public virtual void Refresh();
    internal TestResultIdentity get_Identity();
    internal virtual void RefreshFrom(object source);
    internal void RefreshFrom(TestCaseResult newData, bool setAfnStripNull, bool resetResult);
    internal void PreSave(SubResults subResults);
    internal void PostSave(ResultUpdateResponse update);
    public sealed virtual void Save(bool uploadInBackground);
    public virtual void Save();
    public sealed virtual ITestIterationResultCollection get_Iterations();
    public sealed virtual ITestIterationResult CreateIteration(int iterationId);
    public sealed virtual void Reset();
    private FailureType GetFailureTypeFromId(int failureTypeId);
    private TestIterationResultCollection RetrieveIterationsFromServer();
    private TestIterationResultCollection GetIterations(TestActionResult[] results, IEnumerable`1<TestResultParameter> parameters, IEnumerable`1<TestResultAttachment> attachments);
    private TestIterationResult ReadIteration(TestActionResult[] results, Int32& index);
    private TestActionResult ReadAction(TestActionResult[] results, Int32& index);
    internal void ReadIterations(TestActionResult[] actionResults, IEnumerable`1<TestResultParameter> parameters, IEnumerable`1<TestResultAttachment> attachments);
    internal void EnsureIdentitiesInCache();
    internal bool HasUserDisplayName();
    internal static TestCaseResult FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal virtual void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, TestCaseResult obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestCaseResultCollection : ClientObjectCollection`3<ITestCaseResult, TestCaseResult, TestCaseResultIdentifier> {
    private bool m_includeActionResults;
    private TestCaseResultHelper Helper { get; }
    internal TestCaseResultCollection(TestCaseResultHelper helper);
    internal TestCaseResultCollection(IEnumerable`1<TestCaseResult> results, TestCaseResultHelper helper, bool includeActionResults);
    public sealed virtual void Save(bool uploadInBackground);
    public sealed virtual Int32[] QueryAssociatedWorkItems();
    private Artifact[] QueryAssociatedWorkItemArtifacts();
    internal virtual TestCaseResult[] Fetch(ClientObjectIdRev`1[] ids, TestCaseResultIdentifier[]& deleted, ICollection`1& identities);
    private void GatherUserIds(ICollection`1<Guid> identities, IEnumerable`1<TestCaseResult> results);
    private TestCaseResultHelper get_Helper();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestCaseResultHelper : ClientObjectHelper`3<ITestCaseResult, TestCaseResult, TestCaseResultIdentifier> {
    internal TestCaseResultHelper(TestManagementTeamProject project);
    public sealed virtual ITestCaseResult CreateForUpdate(int testRunId, int testResultId);
    public sealed virtual ITestCaseResult Find(int testRunId, int testResultId);
    public sealed virtual ITestCaseResult FindByLink(Uri artifactUri, ITestAttachment& testAttachment);
    internal ITestAttachment FindResultAttachment(ITestCaseResult result, int attachmentId);
    private ITestAttachment FindTestAttachment(IAttachmentOwner attachmentOwner, int attachmentId);
    private ITestAttachment FindTestIterationResultAttachment(ITestIterationResultCollection testIterationResults, int attachmentId);
    private ITestAttachment FindTestActionResultAttachment(TestActionResultCollection testActionResultCollection, int attachmentId);
    internal TestCaseResult[] Fetch(ClientObjectIdRev`1[] ids, TestCaseResultIdentifier[]& deletedIds, bool includeActionResults);
    public sealed virtual ITestCaseResultCollection Query(string queryText);
    public sealed virtual ITestCaseResultCollection ByTestId(int testCaseId);
    internal ITestCaseResultCollection ByRunAndOwner(int testRunId, TeamFoundationIdentity owner);
    internal ITestCaseResultCollection ByRun(ITestRun run, bool includeActionResults);
    internal ITestCaseResultCollection ByRun(int testRunId, bool includeActionResults);
    private TestCaseResult[] QueryTestResultsByRunInternal(int testRunId, int pageSize, string projectName, bool includeActionResults, TestCaseResultIdentifier[]& ids);
    private static void ProcessActionResults(bool includeActionResults, TestActionResult[] actionResults, TestResultParameter[] parameters, TestResultAttachment[] attachments, TestCaseResult[] results, TestCaseResultHelper helper);
    internal ITestCaseResultCollection ByOutcome(int testRunId, TestOutcome outcome);
    internal ITestCaseResultCollection ByRunAndState(int testRunId, TestResultState status);
    internal IEnumerable`1<ITestCaseResult> ByPoint(int testPlanId, int pointId);
    private ITestCaseResultCollection GenericResultQuery(TestResultQueryDelegate query, bool includeActionResults);
    public sealed virtual void Reset(ITestCaseResult[] results);
    public sealed virtual void Save(ITestCaseResult[] results, bool uploadInBackground);
    private void CheckForAssociatedWorkItems(ITestCaseResult[] results);
    private List`1<ResultUpdateRequest> PreSaveResults(ITestCaseResult[] results);
    private void PostSaveResults(List`1<ResultUpdateRequest> requests, ResultUpdateResponse[] responses);
    public virtual ITestCaseResult Create();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestCaseResultIdAndRev : object {
    private TestCaseResultIdentifier m_id;
    private int m_revision;
    public TestCaseResultIdentifier Id { get; public set; }
    public int Revision { get; public set; }
    internal TestCaseResultIdAndRev(TestCaseResultIdentifier id, int revision);
    internal TestCaseResultIdAndRev(ClientObjectIdRev`1<TestCaseResultIdentifier> id);
    internal static TestCaseResultIdAndRev[] Single(int testRunId, int testResultId);
    internal static TestCaseResultIdAndRev[] Single(int testRunId, int testResultId, int revision);
    internal static TestCaseResultIdAndRev[] Single(TestCaseResultIdentifier id);
    internal static TestCaseResultIdAndRev[] Single(TestCaseResultIdentifier id, int revision);
    internal static TestCaseResultIdAndRev[] Convert(ClientObjectIdRev`1[] ids);
    public TestCaseResultIdentifier get_Id();
    public void set_Id(TestCaseResultIdentifier value);
    public int get_Revision();
    public void set_Revision(int value);
    internal static TestCaseResultIdAndRev FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, TestCaseResultIdAndRev obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public class Microsoft.TeamFoundation.TestManagement.Client.TestCaseResultIdentifier : object {
    private int m_testResultId;
    private int m_testRunId;
    public int TestResultId { get; public set; }
    public int TestRunId { get; public set; }
    public TestCaseResultIdentifier(int testRunId, int testResultId);
    internal TestCaseResultIdentifier(TestResultIdentity identity);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public sealed virtual int get_TestResultId();
    public void set_TestResultId(int value);
    public sealed virtual int get_TestRunId();
    public void set_TestRunId(int value);
    internal static TestCaseResultIdentifier FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, TestCaseResultIdentifier obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestCaseStoredQuery : object {
    private TestManagementTeamProject m_project;
    private StoredQuery m_query;
    public string Name { get; }
    public string Owner { get; }
    public string QueryText { get; }
    internal TestCaseStoredQuery(TestManagementTeamProject project, StoredQuery query);
    internal static TestCaseStoredQuery CreateFromString(TestManagementTeamProject project, string value, int startAt);
    public virtual string ToString();
    public sealed virtual string get_Name();
    public sealed virtual string get_Owner();
    public sealed virtual string get_QueryText();
    public sealed virtual IEnumerable`1<ITestCase> Execute();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestCaseTextQuery : object {
    private TestManagementTeamProject m_project;
    private string m_queryText;
    public string Name { get; }
    public string Owner { get; }
    public string QueryText { get; }
    internal TestCaseTextQuery(TestManagementTeamProject project, string queryText);
    public virtual string ToString();
    public sealed virtual string get_Name();
    public sealed virtual string get_Owner();
    public sealed virtual string get_QueryText();
    public sealed virtual IEnumerable`1<ITestCase> Execute();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestConfiguration : SimpleClientObject {
    private ValueDictionary m_valuesDictionary;
    private NameValuePair[] m_localValues;
    private bool m_valuesChanged;
    private string m_areaPath;
    private string m_description;
    private bool m_isDefault;
    private DateTime m_lastUpdated;
    private Guid m_lastUpdatedBy;
    private string m_lastUpdatedByName;
    private string m_name;
    private byte m_state;
    internal NameValuePair[] m_values;
    public ObjectTypes ObjectType { get; }
    public string Name { get; public set; }
    public string Description { get; public set; }
    public string AreaPath { get; public set; }
    public bool IsDefault { get; public set; }
    public TeamFoundationIdentity LastUpdatedBy { get; }
    public string LastUpdatedByName { get; }
    public DateTime LastUpdated { get; internal set; }
    public TestConfigurationState State { get; public set; }
    public IDictionary`2<string, string> Values { get; }
    internal TestConfiguration(TestConfigurationHelper helper);
    internal TestConfiguration(TestConfiguration testConfiguration);
    internal void PostLoad(TestConfigurationHelper helper);
    public virtual ObjectTypes get_ObjectType();
    public sealed virtual string get_Name();
    public sealed virtual void set_Name(string value);
    public sealed virtual string get_Description();
    public sealed virtual void set_Description(string value);
    public sealed virtual string get_AreaPath();
    public sealed virtual void set_AreaPath(string value);
    public sealed virtual bool get_IsDefault();
    public sealed virtual void set_IsDefault(bool value);
    public sealed virtual TeamFoundationIdentity get_LastUpdatedBy();
    public sealed virtual string get_LastUpdatedByName();
    public sealed virtual DateTime get_LastUpdated();
    internal void set_LastUpdated(DateTime value);
    internal virtual void DeleteFromServer(DeleteAction action);
    public virtual void Refresh();
    internal virtual void RefreshFrom(object source);
    public virtual void Save();
    public sealed virtual void Save(bool updateInUse);
    public sealed virtual TestConfigurationState get_State();
    public sealed virtual void set_State(TestConfigurationState value);
    public sealed virtual IDictionary`2<string, string> get_Values();
    private void ValueDictionaryEvent(object sender, NotifyingDictionaryEventArgs<string, string> e);
    internal static TestConfiguration FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, TestConfiguration obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestConfigurationCollection : GenericCollection`2<ITestConfiguration, TestConfiguration> {
    internal TestConfigurationCollection(IEnumerable`1<TestConfiguration> items);
    internal Int32[] ToIdArray();
    internal static Int32[] ToIdArray(IEnumerable`1<ITestConfiguration> configurations);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestConfigurationHelper : ClientObjectHelper`3<ITestConfiguration, TestConfiguration, int> {
    internal TestConfigurationHelper(TestManagementTeamProject project);
    public virtual ITestConfiguration Create();
    public sealed virtual ITestConfiguration Find(int testConfigurationId);
    public sealed virtual ITestConfigurationCollection Query(string queryText);
    public sealed virtual ITestConfigurationCollection Query(string queryText, int planId);
    public sealed virtual int Count(string queryText);
    public sealed virtual ITestConfigurationCollection Query(string queryText, IDictionary context);
    public sealed virtual ITestConfigurationCollection CreateFromFile(string fileName);
    internal static ITestConfigurationCollection Parse(string fileName, TestManagementTeamProject project);
    internal string GetName(int testConfigurationId);
    internal List`1<IdAndName> GetNames(Int32[] testConfigurationIds);
}
public enum Microsoft.TeamFoundation.TestManagement.Client.TestConfigurationState : Enum {
    public int value__;
    public static TestConfigurationState None;
    public static TestConfigurationState Active;
    public static TestConfigurationState Inactive;
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestController : PropertyOwner {
    private static string TCM_Controller_ReservedPropertyName_ControllerDisplayName;
    private string m_displayName;
    private Dictionary`2<string, string> m_userProperties;
    private TestEnvironmentHelper m_environments;
    private TestControllerHelper m_helper;
    private string m_description;
    private string m_groupId;
    private string m_name;
    internal NameValuePair[] m_properties;
    private TestControllerState m_state;
    public string DisplayName { get; public set; }
    public string Name { get; public set; }
    public string Description { get; public set; }
    public TestControllerState State { get; }
    public string GroupId { get; public set; }
    public IDictionary`2<string, string> Properties { get; }
    public ITestEnvironmentHelper TestEnvironments { get; }
    internal TestManagementService TestManager { get; }
    internal TestController(TestControllerHelper helper);
    internal TestController(TestController testController);
    internal TestController Convert();
    public sealed virtual string get_DisplayName();
    public sealed virtual void set_DisplayName(string value);
    public sealed virtual string get_Name();
    public sealed virtual void set_Name(string value);
    public sealed virtual string get_Description();
    public sealed virtual void set_Description(string value);
    public sealed virtual TestControllerState get_State();
    public sealed virtual string get_GroupId();
    public sealed virtual void set_GroupId(string value);
    public sealed virtual IDictionary`2<string, string> get_Properties();
    public sealed virtual ITestEnvironmentHelper get_TestEnvironments();
    internal TestManagementService get_TestManager();
    public sealed virtual void Register();
    public sealed virtual void Unregister();
    public sealed virtual void Update();
    internal void PostLoad(TestControllerHelper helper);
    internal void PreSave();
    private void PackProperties();
    private void UnpackProperties();
    internal static TestController FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, TestController obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestControllerHelper : object {
    [CompilerGeneratedAttribute]
private TestManagementService <TestManager>k__BackingField;
    internal TestManagementService TestManager { get; internal set; }
    internal TestControllerHelper(TestManagementService manager);
    [CompilerGeneratedAttribute]
internal TestManagementService get_TestManager();
    [CompilerGeneratedAttribute]
internal void set_TestManager(TestManagementService value);
    public sealed virtual ITestController Create();
    public sealed virtual IEnumerable`1<ITestController> Query();
    public sealed virtual IEnumerable`1<ITestController> Query(string groupId);
    public sealed virtual ITestController Find(string testControllerName);
    public sealed virtual void Register(IEnumerable`1<ITestController> testControllers);
    public sealed virtual void Unregister(IEnumerable`1<ITestController> testControllers);
    public sealed virtual void Update(IEnumerable`1<ITestController> testControllers);
    private TestController[] PreSave(IEnumerable`1<ITestController> testControllers);
}
public enum Microsoft.TeamFoundation.TestManagement.Client.TestControllerState : Enum {
    public int value__;
    public static TestControllerState None;
    public static TestControllerState Online;
    public static TestControllerState Offline;
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestEnvironment : PropertyOwner {
    private static string TCM_Environment_ReservedPropertyName_EnvironmentType;
    private static string TCM_Environment_ReservedPropertyName_ControllerEnvironmentID;
    private static string TCM_Environment_ReservedPropertyName_DisplayName;
    private static string TCM_Environment_ReservedPropertyName_LabEnvironmentURI;
    private static string TCM_Environment_ReservedPropertyName_LabServerURI;
    private static string TCM_Environment_ReservedPropertyName_Created;
    private static string TCM_Environment_ReservedPropertyName_Owner;
    private TestController m_controller;
    private TestManagementTeamProject m_project;
    private TestEnvironmentHelper m_helper;
    private string m_displayName;
    private string m_environmentType;
    private DateTime m_dateCreated;
    private string m_owner;
    private Uri m_labServerUri;
    private Uri m_labEnvironmentUri;
    private Guid m_controllerEnvironmentId;
    private MachineRoleCollection m_machineRoleCollection;
    private Dictionary`2<string, string> m_userProperties;
    private string m_controllerDisplayName;
    private string m_controllerName;
    private string m_description;
    private Guid m_id;
    internal MachineRole[] m_machineRoles;
    private string m_name;
    private string m_projectName;
    internal NameValuePair[] m_properties;
    public Guid Id { get; public set; }
    public string Name { get; public set; }
    public string Description { get; public set; }
    public ITestManagementTeamProject TeamProject { get; }
    public ITestController TestController { get; }
    internal string ProjectName { get; }
    public string ControllerName { get; }
    public string ControllerDisplayName { get; }
    public string DisplayName { get; public set; }
    public string EnvironmentType { get; public set; }
    public TeamFoundationIdentity Owner { get; public set; }
    public DateTime DateCreated { get; }
    public Uri LabEnvironmentUri { get; public set; }
    public Uri LabServerUri { get; public set; }
    public Guid ControllerEnvironmentId { get; public set; }
    private IMachineRoleCollection Microsoft.TeamFoundation.TestManagement.Client.ITestEnvironment.MachineRoles { get; }
    public IDictionary`2<string, string> Properties { get; }
    internal TestEnvironment(TestManagementTeamProject project, TestEnvironmentHelper helper);
    internal TestEnvironment(TestManagementTeamProject project, TestController controller, TestEnvironmentHelper helper);
    internal TestEnvironment(TestEnvironment testEnvironment);
    internal TestEnvironment Convert();
    public sealed virtual Guid get_Id();
    public sealed virtual void set_Id(Guid value);
    public sealed virtual string get_Name();
    public sealed virtual void set_Name(string value);
    public sealed virtual string get_Description();
    public sealed virtual void set_Description(string value);
    public sealed virtual ITestManagementTeamProject get_TeamProject();
    public sealed virtual ITestController get_TestController();
    internal string get_ProjectName();
    public sealed virtual string get_ControllerName();
    public sealed virtual string get_ControllerDisplayName();
    public sealed virtual string get_DisplayName();
    public sealed virtual void set_DisplayName(string value);
    public sealed virtual string get_EnvironmentType();
    public sealed virtual void set_EnvironmentType(string value);
    public sealed virtual TeamFoundationIdentity get_Owner();
    public sealed virtual void set_Owner(TeamFoundationIdentity value);
    public sealed virtual DateTime get_DateCreated();
    public sealed virtual Uri get_LabEnvironmentUri();
    public sealed virtual void set_LabEnvironmentUri(Uri value);
    public sealed virtual Uri get_LabServerUri();
    public sealed virtual void set_LabServerUri(Uri value);
    public sealed virtual Guid get_ControllerEnvironmentId();
    public sealed virtual void set_ControllerEnvironmentId(Guid value);
    private sealed virtual override IMachineRoleCollection Microsoft.TeamFoundation.TestManagement.Client.ITestEnvironment.get_MachineRoles();
    public sealed virtual IDictionary`2<string, string> get_Properties();
    public sealed virtual void Register();
    public sealed virtual void Unregister();
    public sealed virtual void Update();
    internal void PostLoad(TestEnvironmentHelper helper);
    internal void RefreshFrom(TestEnvironment data);
    internal void PreSave();
    internal void PostSave(TestEnvironment data);
    private void PackProperties();
    private void UnpackProperties();
    internal static TestEnvironment FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, TestEnvironment obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestEnvironmentHelper : object {
    private TestManagementTeamProject m_project;
    private TestController m_controller;
    private TestManagementService m_testManagementService;
    private Guid m_teamProjectCollectionId;
    private string m_parentName;
    private EnvironmentParentTypes m_parentType;
    public object Parent { get; }
    internal TestEnvironmentHelper(TestManagementTeamProject project);
    internal TestEnvironmentHelper(TestController controller);
    public sealed virtual object get_Parent();
    public sealed virtual ITestEnvironment Create();
    public sealed virtual ITestEnvironment Create(ITestManagementTeamProject teamProject, ITestController testController);
    public sealed virtual IEnumerable`1<ITestEnvironment> Query();
    public sealed virtual ITestEnvironment Find(Guid environmentId);
    public sealed virtual void Register(IEnumerable`1<ITestEnvironment> testEnvironments);
    public sealed virtual void Unregister(IEnumerable`1<ITestEnvironment> testEnvironments);
    public sealed virtual void Update(IEnumerable`1<ITestEnvironment> testEnvironments);
    private void ValidateParent(IEnumerable`1<ITestEnvironment> testEnvironments);
    private TestEnvironment[] PreSave(IEnumerable`1<ITestEnvironment> testEnvironments);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestExternalLink : PropertyOwner {
    [CompilerGeneratedAttribute]
private TestExternalLinkCollection <Collection>k__BackingField;
    private string m_description;
    private int m_linkId;
    private string m_uri;
    public Uri Uri { get; public set; }
    public string Description { get; public set; }
    internal int LinkId { get; internal set; }
    internal TestExternalLinkCollection Collection { get; internal set; }
    internal TestExternalLink(TestExternalLink link);
    public sealed virtual Uri get_Uri();
    public sealed virtual void set_Uri(Uri value);
    public sealed virtual string get_Description();
    public sealed virtual void set_Description(string value);
    internal int get_LinkId();
    internal void set_LinkId(int value);
    [CompilerGeneratedAttribute]
internal TestExternalLinkCollection get_Collection();
    [CompilerGeneratedAttribute]
internal void set_Collection(TestExternalLinkCollection value);
    internal void RefreshFrom(TestExternalLink newItem);
    private void MarkCollectionDirty();
    internal static TestExternalLink FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, TestExternalLink obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestExternalLinkCollection : GenericCollection`2<ITestExternalLink, TestExternalLink> {
    [CompilerGeneratedAttribute]
private ItemChangedEventHandler ItemChangedEvent;
    private Dictionary`2<int, TestExternalLink> m_itemsById;
    private bool m_isRefreshing;
    private int m_maxLinkId;
    internal TestExternalLinkCollection(TestExternalLink[] links);
    internal void Refresh(TestExternalLink[] links);
    internal void Refresh(TestExternalLink[] links, bool markDirty);
    internal List`1<TestExternalLink> GetChangedLinks();
    [CompilerGeneratedAttribute]
internal void add_ItemChangedEvent(ItemChangedEventHandler value);
    [CompilerGeneratedAttribute]
internal void remove_ItemChangedEvent(ItemChangedEventHandler value);
    internal void ItemChanged(TestExternalLink item);
    protected virtual void ClearItems();
    protected virtual void InsertItem(int index, TestExternalLink item);
    protected virtual void RemoveItem(int index);
    protected virtual void SetItem(int index, TestExternalLink newItem);
    private void AssociateItem(TestExternalLink item);
    private void DisassociateItem(TestExternalLink item);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestFailureType : SimpleClientObject {
    private string m_name;
    private string m_teamProject;
    public ObjectTypes ObjectType { get; }
    public string Name { get; public set; }
    internal string TeamProject { get; internal set; }
    private ITestManagementTeamProject Microsoft.TeamFoundation.TestManagement.Client.ITestFailureType.Project { get; }
    public TestFailureType(TestFailureTypeHelper helper);
    public virtual ObjectTypes get_ObjectType();
    public sealed virtual string get_Name();
    public sealed virtual void set_Name(string value);
    internal string get_TeamProject();
    internal void set_TeamProject(string value);
    internal virtual void DeleteFromServer(DeleteAction action);
    public virtual void Refresh();
    internal virtual void RefreshFrom(object source);
    internal void CanSave();
    public virtual void Save();
    private sealed virtual override ITestManagementTeamProject Microsoft.TeamFoundation.TestManagement.Client.ITestFailureType.get_Project();
    internal static TestFailureType FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, TestFailureType obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestFailureTypeHelper : ClientObjectHelper`3<ITestFailureType, TestFailureType, int> {
    private static string c_testFailureType;
    private static string c_testFailureTypes;
    private static string c_name;
    internal TestFailureTypeHelper(TestManagementTeamProject project);
    public virtual ITestFailureType Create();
    public sealed virtual ITestFailureType Find(int failureTypeId);
    public sealed virtual IEnumerable`1<ITestFailureType> Query();
    private TestFailureType ConvertFailureTypeEnumToTestFailureTypeObject(FailureType failureType);
    private IEnumerable`1<ITestFailureType> ProcessQueryResult(ITestFailureType[] failureTypes);
    public sealed virtual IEnumerable`1<ITestFailureType> ImportFromFile(string fileName);
    public sealed virtual IEnumerable`1<ITestFailureType> CreateFromFile(string fileName);
    internal static List`1<ITestFailureType> Parse(string fileName, TestManagementTeamProject project);
    private static XmlDocument ValidateXmlSchema(string fileName);
    public sealed virtual void Export(IEnumerable`1<ITestFailureType> testFailureTypes, string fileName);
    private void ValidateFailureTypes(List`1<TestFailureType> testFailureTypes, TestFailureType testFailureType);
    internal string CreateXmlData(IEnumerable`1<ITestFailureType> testFailureTypes);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestIterationResult : TestActionResult {
    private TestActionResultCollection m_actionResults;
    private TestResultParameterCollection m_parameters;
    private TestIterationResultCollection m_owner;
    public TestActionResultCollection Actions { get; }
    public TestResultParameterCollection Parameters { get; }
    internal TestIterationResultCollection Owner { get; internal set; }
    internal TestIterationResult(TestCaseResultHelper helper, int testRunId, int testResultId, int iterationId);
    public sealed virtual TestActionResultCollection get_Actions();
    public sealed virtual ITestStepResult CreateStepResult(int actionId);
    public sealed virtual ISharedStepResult CreateSharedStepResult(int actionId, int sharedStepId);
    public sealed virtual TestResultParameterCollection get_Parameters();
    public sealed virtual ITestActionResult FindActionResult(ITestAction action);
    internal virtual void PreSave(SubResults subResults, TestResultIdentity parent);
    internal virtual void PostLoad(TestCaseResultHelper helper);
    internal virtual void PostSave();
    internal ITestActionResult FindActionResult(string actionPath);
    internal TestIterationResultCollection get_Owner();
    internal void set_Owner(TestIterationResultCollection value);
    internal static TestIterationResult FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal virtual void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, TestIterationResult obj);
}
[DefaultMemberAttribute("Item")]
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestIterationResultCollection : object {
    [CompilerGeneratedAttribute]
private NotifyCollectionChangedEventHandler CollectionChanged;
    private List`1<ITestIterationResult> m_list;
    private Dictionary`2<int, bool> m_deletions;
    public ITestIterationResult Item { get; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    internal TestIterationResultCollection(int capacity);
    public sealed virtual ITestIterationResult get_Item(int iterationId);
    public sealed virtual void Add(ITestIterationResult item);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(ITestIterationResult item);
    public sealed virtual void CopyTo(ITestIterationResult[] array, int arrayIndex);
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual bool Remove(ITestIterationResult item);
    public sealed virtual IEnumerator`1<ITestIterationResult> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private int IndexOf(int iterationid);
    public sealed virtual bool Contains(int iterationId);
    public sealed virtual bool Remove(int iterationId);
    internal void PreSave(SubResults subResults, TestResultIdentity parent);
    internal void PostSave();
    private void AttachItem(ITestIterationResult item);
    private void DetachItem(ITestIterationResult item);
    protected void NotifyCollectionChanged(NotifyCollectionChangedEventArgs eventArgs);
    [CompilerGeneratedAttribute]
public sealed virtual void add_CollectionChanged(NotifyCollectionChangedEventHandler value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_CollectionChanged(NotifyCollectionChangedEventHandler value);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public class Microsoft.TeamFoundation.TestManagement.Client.TestManagementAPINotSupportedException : TestManagementException {
    public TestManagementAPINotSupportedException(string message);
    public TestManagementAPINotSupportedException(string message, Exception ex);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public class Microsoft.TeamFoundation.TestManagement.Client.TestManagementConfigurationException : TestManagementException {
    public TestManagementConfigurationException(string message);
    public TestManagementConfigurationException(string message, Exception innerException);
    protected TestManagementConfigurationException(SerializationInfo info, StreamingContext context);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public class Microsoft.TeamFoundation.TestManagement.Client.TestManagementConflictingOperation : TestManagementException {
    public TestManagementConflictingOperation(string message);
    public TestManagementConflictingOperation(string message, Exception ex);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public class Microsoft.TeamFoundation.TestManagement.Client.TestManagementException : TeamFoundationServerException {
    private TestManagementErrorCodes m_errorCode;
    public TestManagementErrorCodes ErrorCode { get; internal set; }
    public TestManagementException(string message);
    public TestManagementException(string message, Exception innerException);
    protected TestManagementException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    public TestManagementErrorCodes get_ErrorCode();
    internal void set_ErrorCode(TestManagementErrorCodes value);
    internal static Exception ConvertException(SoapException innerException);
    internal static Exception ConvertException(SoapException innerException, bool convertUnknown);
    internal static Exception ConvertException(string exceptionType, string exceptionMessage, Exception innerException, bool convertUnknown);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public class Microsoft.TeamFoundation.TestManagement.Client.TestManagementInvalidOperationException : TestManagementException {
    protected TestManagementInvalidOperationException(SerializationInfo info, StreamingContext context);
    public TestManagementInvalidOperationException(string message);
    public TestManagementInvalidOperationException(string message, Exception ex);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public class Microsoft.TeamFoundation.TestManagement.Client.TestManagementServerException : TestManagementException {
    public TestManagementServerException(string message);
    public TestManagementServerException(string message, Exception innerException);
    protected TestManagementServerException(SerializationInfo info, StreamingContext context);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public class Microsoft.TeamFoundation.TestManagement.Client.TestManagementService : object {
    [CompilerGeneratedAttribute]
private TestManagementServiceVersion <TestManagementServiceVersion>k__BackingField;
    private TestResultsServiceWrapper m_resultsService;
    private TestResultsServiceWrapperEx m_resultsServiceEx;
    private TestManagementWebServiceWrapper m_testManagementService;
    private TestManagementWebService2Wrapper m_testManagementService2;
    private TestManagementWebService3Wrapper m_testManagementService3;
    private TestManagementWebService4Wrapper m_testManagementService4;
    private ICommonStructureService m_commonStructureService;
    private IIdentityManagementService m_identityManagementService;
    private TfsTeamProjectCollection m_server;
    private ServerVersion m_serverVersion;
    private ObjectCache`2<string, TestManagementTeamProject> m_tcmProjects;
    private DataCollectorHelper m_dataCollectors;
    private TestControllerHelper m_controllers;
    private TfsIdentityStore m_tfsIdentityStore;
    private Version m_serviceVersion;
    internal TfsTeamProjectCollection Server { get; }
    internal ServerVersion ServerVersion { get; }
    internal TestManagementServiceVersion TestManagementServiceVersion { get; private set; }
    internal Version ServiceVersion { get; }
    public TeamFoundationIdentity AuthorizedIdentity { get; }
    public IDataCollectorHelper DataCollectors { get; }
    public ITestControllerHelper TestControllers { get; }
    public ITfsIdentityStore TfsIdentityStore { get; }
    internal TestResultsServiceWrapper ResultsService { get; }
    internal TestResultsServiceWrapperEx ResultsServiceEx { get; }
    internal TestManagementWebServiceWrapper TestManagementWebService { get; }
    internal TestManagementWebService2Wrapper TestManagementWebService2 { get; }
    internal TestManagementWebService3Wrapper TestManagementWebService3 { get; }
    internal TestManagementWebService4Wrapper TestManagementWebService4 { get; }
    internal ICommonStructureService CommonStructureService { get; }
    internal IIdentityManagementService IdentityManagementService { get; }
    internal Guid TeamProjectCollectionCatalogResourceId { get; }
    public sealed virtual ITestManagementTeamProject GetTeamProject(string projectName);
    public sealed virtual ITestManagementTeamProject GetTeamProject(Project project);
    private sealed virtual override ITestManagementTeamProject2 Microsoft.TeamFoundation.TestManagement.Client.ITestManagementService2.GetTeamProject(string projectName);
    private sealed virtual override ITestManagementTeamProject2 Microsoft.TeamFoundation.TestManagement.Client.ITestManagementService2.GetTeamProject(Project project);
    public sealed virtual bool IsSupported();
    public sealed virtual void Initialize(TfsTeamProjectCollection server);
    internal TfsTeamProjectCollection get_Server();
    internal ServerVersion get_ServerVersion();
    [CompilerGeneratedAttribute]
internal TestManagementServiceVersion get_TestManagementServiceVersion();
    [CompilerGeneratedAttribute]
private void set_TestManagementServiceVersion(TestManagementServiceVersion value);
    internal Version get_ServiceVersion();
    public sealed virtual TeamFoundationIdentity get_AuthorizedIdentity();
    public sealed virtual IDataCollectorHelper get_DataCollectors();
    public sealed virtual ITestControllerHelper get_TestControllers();
    public sealed virtual ITfsIdentityStore get_TfsIdentityStore();
    internal TestResultsServiceWrapper get_ResultsService();
    internal TestResultsServiceWrapperEx get_ResultsServiceEx();
    internal TestManagementWebServiceWrapper get_TestManagementWebService();
    internal TestManagementWebService2Wrapper get_TestManagementWebService2();
    internal TestManagementWebService3Wrapper get_TestManagementWebService3();
    internal TestManagementWebService4Wrapper get_TestManagementWebService4();
    internal ICommonStructureService get_CommonStructureService();
    internal IIdentityManagementService get_IdentityManagementService();
    internal Guid get_TeamProjectCollectionCatalogResourceId();
    public sealed virtual IEnumerable`1<ITestRun> QueryTestRuns(string queryText);
    public sealed virtual ITestRun FindTestRunByTmiRunId(Guid tmiRunId);
    public sealed virtual ITestCaseResult FindTestResultByLink(Uri artifactUri, ITestAttachment& testAttachment);
    internal TestRun[] WrapRuns(TestRun[] runs);
    internal void UpdateServiceVersion(Version ver);
    [CompilerGeneratedAttribute]
private TestManagementTeamProject <GetTeamProject>b__0_0(string name);
    [CompilerGeneratedAttribute]
private TestManagementTeamProject <Microsoft.TeamFoundation.TestManagement.Client.ITestManagementService2.GetTeamProject>b__2_0(string name);
}
public enum Microsoft.TeamFoundation.TestManagement.Client.TestManagementServiceVersion : Enum {
    public int value__;
    public static TestManagementServiceVersion V1;
    public static TestManagementServiceVersion V2;
    public static TestManagementServiceVersion V3;
    public static TestManagementServiceVersion V4;
    public static TestManagementServiceVersion V5;
    public static TestManagementServiceVersion V6;
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestManagementTeamProject : object {
    [CompilerGeneratedAttribute]
private TestPlanHelper <TestPlans>k__BackingField;
    [CompilerGeneratedAttribute]
private TestPointHelper <TestPoints>k__BackingField;
    [CompilerGeneratedAttribute]
private TestSuiteHelper <TestSuites>k__BackingField;
    [CompilerGeneratedAttribute]
private TestRunHelper <TestRuns>k__BackingField;
    [CompilerGeneratedAttribute]
private SessionHelper <Sessions>k__BackingField;
    [CompilerGeneratedAttribute]
private TestConfigurationHelper <TestConfigurations>k__BackingField;
    [CompilerGeneratedAttribute]
private TestResolutionStateHelper <TestResolutionStates>k__BackingField;
    [CompilerGeneratedAttribute]
private TestFailureTypeHelper <TestFailureTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private TestVariableHelper <TestVariables>k__BackingField;
    [CompilerGeneratedAttribute]
private TestSettingsHelper <TestSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private TestCaseResultHelper <TestResults>k__BackingField;
    [CompilerGeneratedAttribute]
private BugFieldMappingHelper <BugFieldMappings>k__BackingField;
    [CompilerGeneratedAttribute]
private SharedParameterDataSetHelper <SharedParameterDataSets>k__BackingField;
    [CompilerGeneratedAttribute]
private int <DefaultPageSize>k__BackingField;
    [CompilerGeneratedAttribute]
private int <DefaultPageSizeForTestPoints>k__BackingField;
    private bool m_fetchIdentitiesInline;
    private string m_projectName;
    private ServerVersion m_serverVersion;
    private TestManagementServiceVersion m_testManagementServiceVersion;
    private CoverageAnalysisManager m_coverageAnalysisManager;
    private TestManagementService m_manager;
    private ObjectCache`2<Guid, TestCaseStoredQuery> m_storedQueryCache;
    private string m_attachmentUploadUri;
    private string m_attachmentDownloadUri;
    private static LinkFilter s_workItemLinkFilter;
    private IActionRecordingHelper m_actionRecordings;
    private AttachmentUploadManager m_attachmentUploadManager;
    private WitHelper m_witHelper;
    private TestEnvironmentHelper m_environments;
    private string m_iterationRootPath;
    private string m_areaRootPath;
    private TestCaseHelper m_testCases;
    private SharedStepHelper m_sharedSteps;
    private ProjectInfo m_projectInfo;
    public static Version ServiceVersionQU2M42;
    internal TestCaseHelper TestCases { get; }
    internal SharedStepHelper SharedSteps { get; }
    internal string SharedParameterDataSetWorkItemTypeName { get; }
    public bool HasSupportForSharedParameterDataSets { get; }
    public TestManagementServiceVersion TestManagementServiceVersion { get; }
    internal TestPlanHelper TestPlans { get; internal set; }
    internal TestPointHelper TestPoints { get; internal set; }
    internal TestSuiteHelper TestSuites { get; internal set; }
    internal TestRunHelper TestRuns { get; internal set; }
    internal SessionHelper Sessions { get; internal set; }
    internal TestConfigurationHelper TestConfigurations { get; internal set; }
    internal TestResolutionStateHelper TestResolutionStates { get; internal set; }
    internal TestFailureTypeHelper TestFailureTypes { get; internal set; }
    internal TestVariableHelper TestVariables { get; internal set; }
    internal TestSettingsHelper TestSettings { get; internal set; }
    internal TestCaseResultHelper TestResults { get; internal set; }
    internal BugFieldMappingHelper BugFieldMappings { get; internal set; }
    internal SharedParameterDataSetHelper SharedParameterDataSets { get; internal set; }
    private string Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.TeamProjectName { get; }
    private ITestManagementService Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.TestManagementService { get; }
    private ITestCaseHelper Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.TestCases { get; }
    private ITestPointHelper Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.TestPoints { get; }
    private ISharedStepHelper Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.SharedSteps { get; }
    private ITestPlanHelper Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.TestPlans { get; }
    private ITestSuiteHelper Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.TestSuites { get; }
    private ITestRunHelper Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.TestRuns { get; }
    private ITestConfigurationHelper Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.TestConfigurations { get; }
    private ITestResolutionStateHelper Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.TestResolutionStates { get; }
    private ITestFailureTypeHelper Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.TestFailureTypes { get; }
    private ITestVariableHelper Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.TestVariables { get; }
    private ITestSettingsHelper Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.TestSettings { get; }
    private ITestCaseResultHelper Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.TestResults { get; }
    private IBugFieldMappingHelper Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.BugFieldMappings { get; }
    private ISessionHelper Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.Sessions { get; }
    private ISharedParameterDataSetHelper Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject2.SharedParameterDataSets { get; }
    public ITestEnvironmentHelper TestEnvironments { get; }
    public bool IsValid { get; }
    public int DefaultPageSize { get; public set; }
    public int DefaultPageSizeForTestPoints { get; public set; }
    public IActionRecordingHelper ActionRecordings { get; }
    public IAttachmentUploadManager AttachmentUploadManager { get; }
    public IList`1<ITestCaseQuery> Queries { get; }
    public string AttachmentDownloadUri { get; }
    internal string AttachmentUploadUri { get; }
    internal TestResultsServiceWrapper ResultsService { get; }
    internal TestResultsServiceWrapperEx ResultsServiceEx { get; }
    internal TestManagementWebServiceWrapper TestManagementWebService { get; }
    internal TestManagementWebService2Wrapper TestManagementWebService2 { get; }
    internal TestManagementWebService3Wrapper TestManagementWebService3 { get; }
    internal TestManagementWebService4Wrapper TestManagementWebService4 { get; }
    internal string Name { get; }
    internal TestManagementService Manager { get; }
    public string AreaRootPath { get; }
    public string IterationRootPath { get; }
    private ProjectInfo ProjectInfo { get; }
    internal static LinkFilter WorkItemLinkFilter { get; }
    public Project WitProject { get; }
    public ServerVersion ServerVersion { get; }
    public Version ServiceVersion { get; }
    internal WitHelper WitHelper { get; }
    public ITfsIdentityStore TfsIdentityStore { get; }
    public ICoverageAnalysisManager CoverageAnalysisManager { get; }
    public bool FetchIdentitiesInline { get; public set; }
    public TestManagementTeamProject(TestManagementService manager, string projectName);
    public TestManagementTeamProject(TestManagementService manager, Project witProject);
    private static TestManagementTeamProject();
    internal TestCaseHelper get_TestCases();
    internal SharedStepHelper get_SharedSteps();
    internal string get_SharedParameterDataSetWorkItemTypeName();
    public sealed virtual bool get_HasSupportForSharedParameterDataSets();
    public sealed virtual TestManagementServiceVersion get_TestManagementServiceVersion();
    [CompilerGeneratedAttribute]
internal TestPlanHelper get_TestPlans();
    [CompilerGeneratedAttribute]
internal void set_TestPlans(TestPlanHelper value);
    [CompilerGeneratedAttribute]
internal TestPointHelper get_TestPoints();
    [CompilerGeneratedAttribute]
internal void set_TestPoints(TestPointHelper value);
    [CompilerGeneratedAttribute]
internal TestSuiteHelper get_TestSuites();
    [CompilerGeneratedAttribute]
internal void set_TestSuites(TestSuiteHelper value);
    [CompilerGeneratedAttribute]
internal TestRunHelper get_TestRuns();
    [CompilerGeneratedAttribute]
internal void set_TestRuns(TestRunHelper value);
    [CompilerGeneratedAttribute]
internal SessionHelper get_Sessions();
    [CompilerGeneratedAttribute]
internal void set_Sessions(SessionHelper value);
    [CompilerGeneratedAttribute]
internal TestConfigurationHelper get_TestConfigurations();
    [CompilerGeneratedAttribute]
internal void set_TestConfigurations(TestConfigurationHelper value);
    [CompilerGeneratedAttribute]
internal TestResolutionStateHelper get_TestResolutionStates();
    [CompilerGeneratedAttribute]
internal void set_TestResolutionStates(TestResolutionStateHelper value);
    [CompilerGeneratedAttribute]
internal TestFailureTypeHelper get_TestFailureTypes();
    [CompilerGeneratedAttribute]
internal void set_TestFailureTypes(TestFailureTypeHelper value);
    [CompilerGeneratedAttribute]
internal TestVariableHelper get_TestVariables();
    [CompilerGeneratedAttribute]
internal void set_TestVariables(TestVariableHelper value);
    [CompilerGeneratedAttribute]
internal TestSettingsHelper get_TestSettings();
    [CompilerGeneratedAttribute]
internal void set_TestSettings(TestSettingsHelper value);
    [CompilerGeneratedAttribute]
internal TestCaseResultHelper get_TestResults();
    [CompilerGeneratedAttribute]
internal void set_TestResults(TestCaseResultHelper value);
    [CompilerGeneratedAttribute]
internal BugFieldMappingHelper get_BugFieldMappings();
    [CompilerGeneratedAttribute]
internal void set_BugFieldMappings(BugFieldMappingHelper value);
    [CompilerGeneratedAttribute]
internal SharedParameterDataSetHelper get_SharedParameterDataSets();
    [CompilerGeneratedAttribute]
internal void set_SharedParameterDataSets(SharedParameterDataSetHelper value);
    private sealed virtual override string Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.get_TeamProjectName();
    private sealed virtual override ITestManagementService Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.get_TestManagementService();
    private sealed virtual override ITestCaseHelper Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.get_TestCases();
    private sealed virtual override ITestPointHelper Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.get_TestPoints();
    private sealed virtual override ISharedStepHelper Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.get_SharedSteps();
    private sealed virtual override ITestPlanHelper Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.get_TestPlans();
    private sealed virtual override ITestSuiteHelper Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.get_TestSuites();
    private sealed virtual override ITestRunHelper Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.get_TestRuns();
    private sealed virtual override ITestConfigurationHelper Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.get_TestConfigurations();
    private sealed virtual override ITestResolutionStateHelper Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.get_TestResolutionStates();
    private sealed virtual override ITestFailureTypeHelper Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.get_TestFailureTypes();
    private sealed virtual override ITestVariableHelper Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.get_TestVariables();
    private sealed virtual override ITestSettingsHelper Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.get_TestSettings();
    private sealed virtual override ITestCaseResultHelper Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.get_TestResults();
    private sealed virtual override IBugFieldMappingHelper Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.get_BugFieldMappings();
    private sealed virtual override ISessionHelper Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject.get_Sessions();
    private sealed virtual override ISharedParameterDataSetHelper Microsoft.TeamFoundation.TestManagement.Client.ITestManagementTeamProject2.get_SharedParameterDataSets();
    public sealed virtual ITestEnvironmentHelper get_TestEnvironments();
    public sealed virtual bool get_IsValid();
    [CompilerGeneratedAttribute]
public sealed virtual int get_DefaultPageSize();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DefaultPageSize(int value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_DefaultPageSizeForTestPoints();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DefaultPageSizeForTestPoints(int value);
    public sealed virtual String[] WorkItemTypesFor(string categoryRefName);
    public sealed virtual IActionRecordingHelper get_ActionRecordings();
    public sealed virtual IAttachmentUploadManager get_AttachmentUploadManager();
    public sealed virtual ITestCaseQuery CreateTestQuery(string queryString);
    public sealed virtual ITestCaseQuery CreateTestQuery(Int32[] ids);
    public sealed virtual ITestCaseQuery CreateTestQuery(Int32[] ids, string queryHint);
    public sealed virtual ITestCaseQuery CreateTestQuery(Int32[] ids, Int32[] revs, string queryHint);
    public sealed virtual ITmiTestImplementation CreateTmiTestImplementation(string testName, string testType, string storage, Guid testId);
    public sealed virtual ITmiTestImplementation CreateTmiTestImplementation(string testName, string testType, Guid testTypeId, string storage, Guid testId);
    public sealed virtual ITestCaseProperties CreateTestCaseProperties(string testMethodName, string fullyQualifiedName, string testType, string storage, Guid testId);
    public sealed virtual ITestBase CreateFromWorkItem(WorkItem workItem);
    public sealed virtual IList`1<ITestCaseQuery> get_Queries();
    public sealed virtual IList`1<ITestAttachment> QueryAttachmentsByLink(Uri artifactUri, ITestAttachment& attachment, bool getSiblingAttachments);
    public sealed virtual IList`1<ITestAttachment> QueryAttachments(string queryText);
    public sealed virtual void DeleteAttachments(IEnumerable`1<ITestAttachment> attachments);
    public sealed virtual void DownloadAttachments(IList`1<ITestAttachment> attachments, IList`1<string> localFiles);
    public sealed virtual string get_AttachmentDownloadUri();
    internal TestCaseStoredQuery FindStoredQuery(Guid queryGuid);
    internal void SaveAttachments(IEnumerable`1<TestResultAttachment> attachments, Int32[] ids, bool uploadInBackground);
    private sealed virtual override void Microsoft.TeamFoundation.TestManagement.Client.Internal.ITestManagementTeamProjectInternal.SetTestGroupPermissions(string projectName);
    private sealed virtual override void Microsoft.TeamFoundation.TestManagement.Client.Internal.ITestManagementTeamProjectInternal.SetTestCaseQueryHintForPlan(ITestPlan plan, string queryHint);
    private sealed virtual override void Microsoft.TeamFoundation.TestManagement.Client.Internal.ITestManagementTeamProjectInternal.SetTestCaseWorkItem(ITestCase testCaseOwner, WorkItem workItem);
    private sealed virtual override void Microsoft.TeamFoundation.TestManagement.Client.Internal.ITestManagementTeamProjectInternal.DeleteTestCaseParameter(ITestCase testCaseOwner, string parameter);
    private sealed virtual override void Microsoft.TeamFoundation.TestManagement.Client.Internal.ITestManagementTeamProjectInternal.RemoveTestCaseParameterReference(ITestCase testCaseOwner, string parameter);
    private sealed virtual override string Microsoft.TeamFoundation.TestManagement.Client.Internal.ITestManagementTeamProjectInternal.GetTestCaseWorkItemField(ITestCase testCaseOwner, string fieldName);
    private sealed virtual override void Microsoft.TeamFoundation.TestManagement.Client.Internal.ITestManagementTeamProjectInternal.SetTestCaseResultImplementation(ITestCaseResult result, ITmiTestImplementation implementation);
    private sealed virtual override void Microsoft.TeamFoundation.TestManagement.Client.Internal.ITestManagementTeamProjectInternal.SetTestCaseWorkItemField(ITestCase testCaseOwner, string fieldName, string fieldValue);
    private sealed virtual override void Microsoft.TeamFoundation.TestManagement.Client.Internal.ITestManagementTeamProjectInternal.StartCachingSharedStepWorkItems(ISharedStepHelper sharedSteps);
    private sealed virtual override void Microsoft.TeamFoundation.TestManagement.Client.Internal.ITestManagementTeamProjectInternal.StopCachingSharedStepWorkItems(ISharedStepHelper sharedSteps);
    private sealed virtual override string Microsoft.TeamFoundation.TestManagement.Client.Internal.ITestManagementTeamProjectInternal.GetTestRunLegacySharePath(ITestRun run);
    private sealed virtual override void Microsoft.TeamFoundation.TestManagement.Client.Internal.ITestManagementTeamProjectInternal.SetTestRunPostProcessState(ITestRun run, PostProcessState state);
    internal string get_AttachmentUploadUri();
    internal TestResultsServiceWrapper get_ResultsService();
    internal TestResultsServiceWrapperEx get_ResultsServiceEx();
    internal TestManagementWebServiceWrapper get_TestManagementWebService();
    internal TestManagementWebService2Wrapper get_TestManagementWebService2();
    internal TestManagementWebService3Wrapper get_TestManagementWebService3();
    internal TestManagementWebService4Wrapper get_TestManagementWebService4();
    internal string get_Name();
    internal TestManagementService get_Manager();
    public sealed virtual string get_AreaRootPath();
    public sealed virtual string get_IterationRootPath();
    private ProjectInfo get_ProjectInfo();
    private void LookupServiceUris();
    internal void UpdateServiceVersion(Version ver);
    private TestCaseStoredQuery GetStoredQuery(Guid guid);
    internal static LinkFilter get_WorkItemLinkFilter();
    public virtual string ToString();
    internal void DeleteTestConfiguration(int id);
    internal void DeleteTestVariable(int id);
    internal void DeleteTestSettings(int id);
    internal void DeleteTestResolutionState(int id);
    internal void DeleteTestFailureType(int id);
    internal void DeleteTestRun(int id);
    public sealed virtual Project get_WitProject();
    public sealed virtual ServerVersion get_ServerVersion();
    public Version get_ServiceVersion();
    internal WitHelper get_WitHelper();
    private Project GetWitProject();
    public sealed virtual ITfsIdentityStore get_TfsIdentityStore();
    public sealed virtual ICoverageAnalysisManager get_CoverageAnalysisManager();
    public sealed virtual bool get_FetchIdentitiesInline();
    public sealed virtual void set_FetchIdentitiesInline(bool value);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public class Microsoft.TeamFoundation.TestManagement.Client.TestManagementValidationException : TestManagementException {
    public TestManagementValidationException(string message, Object[] parameters);
    public TestManagementValidationException(string message, Exception innerException, Object[] parameters);
    protected TestManagementValidationException(SerializationInfo info, StreamingContext context);
    public TestManagementValidationException(string message);
    public TestManagementValidationException(string message, Exception ex);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestManagementWebService : TfsHttpClient {
    protected Guid CollectionServiceIdentifier { get; }
    protected string ComponentName { get; }
    protected string ServiceType { get; }
    public TestManagementWebService(TfsTeamProjectCollection connection);
    protected virtual Guid get_CollectionServiceIdentifier();
    protected virtual string get_ComponentName();
    protected virtual string get_ServiceType();
    public UpdatedProperties AbortTestRun(int testRunId, int revision, string projectName, int options);
    public UpdatedProperties AddCasesToSuite(IdAndRev parent, TestCaseAndOwner[] testCases, int toIndex, string projectName, Int32[]& configurationIds, String[]& configurationNames);
    public UpdatedProperties AddSuiteToSuite(IdAndRev parent, ServerTestSuite suite, string teamProjectName, UpdatedProperties& newSuiteProperties, int toIndex);
    public void AssignTestPoints(string projectName, int suiteId, TestPointAssignment[] assignments);
    public int BeginCloneOperation(int fromSuiteId, int toSuiteId, string projectName, CloneOptions options);
    public BlockedPointProperties[] BlockTestPoints(TestPoint[] points, string projectName);
    public Boolean[] CheckActionRecordingExists(Int32[] testCaseIds, string projectName);
    protected virtual Exception ConvertException(SoapException exception);
    public int CopyTestSuiteEntries(string teamProjectName, IdAndRev fromSuiteId, TestSuiteEntry[] entries, IdAndRev toSuiteId, int toIndex);
    public void CreateAssociatedWorkItems(TestCaseResultIdentifier[] identifiers, String[] workItemUris);
    public void CreateAssociatedWorkItemsForSessions(Int32[] identifiers, String[] workItemUris);
    public UpdatedProperties CreateBugFieldMapping(BugFieldMapping bugFieldMapping, string teamProjectName);
    public Int32[] CreateLogEntriesForRun(int testRunId, TestMessageLogEntry[] logEntries, string projectName);
    public Session CreateSession(Session session, TestSettings settings, string teamProjectName);
    public TestConfiguration CreateTestConfiguration(TestConfiguration testConfiguration, string teamProjectName);
    public TestPlan CreateTestPlan(TestPlan testPlan, string teamProjectName, TestExternalLink[] links);
    public int CreateTestPlanWithRequirements(int planId, string planName, string teamProjectName, string areaPath, string iteration, string description, DateTime startDate, DateTime endDate, Guid owner, Int32[] requirementIds);
    public int CreateTestResolutionState(TestResolutionState resolutionState, string teamProjectName);
    public void CreateTestResults(TestCaseResult[] results, string projectName);
    public TestRun CreateTestRun(TestRun testRun, TestSettings settings, TestCaseResult[] results, string teamProjectName);
    public UpdatedProperties CreateTestSettings(TestSettings settings, string teamProjectName);
    public int CreateTestVariable(TestVariable variable, string teamProjectName);
    public void DeleteAssociatedWorkItems(TestCaseResultIdentifier[] identifiers, String[] workItemUris);
    public void DeleteAssociatedWorkItemsForSessions(Int32[] identifiers, String[] workItemUris);
    public void DeleteBuild(string projectName, string buildUri);
    public void DeleteSessions(Int32[] sessions, string projectName);
    public void DeleteTestConfiguration(int testConfigurationId, string projectName);
    public void DeleteTestPlan(int testPlanId, string projectName);
    public void DeleteTestResolutionState(int stateId, string projectName);
    public void DeleteTestRun(int testRunId, string projectName);
    public void DeleteTestRuns(Int32[] testRunIds, string projectName);
    public void DeleteTestSettings(int settingsId, string projectName);
    public UpdatedProperties DeleteTestSuiteEntries(IdAndRev parentSuiteId, TestSuiteEntry[] entries, string projectName);
    public void DeleteTestVariable(int variableId, string projectName);
    public TestPlan[] FetchTestPlans(IdAndRev[] idsToFetch, Int32[]& deletedIds, string projectName);
    public TestPoint[] FetchTestPoints(string projectName, int planId, IdAndRev[] idsToFetch, String[] testCaseProperties, Int32[]& deletedIds);
    public TestCaseResult[] FetchTestResults(TestCaseResultIdAndRev[] idsToFetch, string projectName, bool includeActionResults, TestCaseResultIdentifier[]& deletedIds, TestActionResult[]& actionResults, TestResultParameter[]& parameters, TestResultAttachment[]& attachments);
    public ServerTestSuite[] FetchTestSuites(string teamProjectName, IdAndRev[] suiteIds, Int32[]& deletedIds);
    public ServerTestSuite[] FetchTestSuitesForPlan(string teamProjectName, int planId);
    public DataCollectorInformation FindCollector(Guid teamProjectCollectionCatalogResourceId, string typeUri);
    public TestController FindController(Guid teamProjectCollectionCatalogResourceId, string controllerName);
    public TestEnvironment FindEnvironment(string parentName, EnvironmentParentTypes parentType, Guid environmentId);
    public TestCaseResult FindTestResultInMultipleProjects(int testRunId, int testResultId, String& projectName);
    public CloneOperationInformation GetCloneOperationInformation(int opId, string projectName);
    public UpdatedProperties MoveTestSuiteEntries(string teamProjectName, IdAndRev fromSuiteId, TestSuiteEntry[] entries, IdAndRev toSuiteId, UpdatedProperties& newToProps, int toIndex);
    public Int32[][] QueryAssociatedWorkItemsFromResults(Int32[] pointIds, int planId, string projectName);
    public Int32[][] QueryAssociatedWorkItemsFromSessions(Int32[] sessionIds, string projectName);
    public TestResultAttachment[] QueryAttachments(ResultsStoreQuery query);
    public TestResultAttachment[] QueryAttachmentsById(string projectName, int attachmentId, bool getSiblingAttachments);
    public BugFieldMapping QueryBugFieldMapping(string projectName);
    public BuildConfiguration QueryBuildConfigurationById(int buildConfigurationId);
    public BuildCoverage[] QueryBuildCoverage(string projectName, string buildUri, int flags);
    public DataCollectorInformation[] QueryCollectors(Guid teamProjectCollectionCatalogResourceId);
    public TestController[] QueryControllers(Guid teamProjectCollectionCatalogResourceId);
    public TestController[] QueryControllersByGroupId(Guid teamProjectCollectionCatalogResourceId, string groupId);
    public TestResultAttachment[] QueryDefaultStrips(Int32[] testCaseIds, string projectName);
    public TestEnvironment[] QueryEnvironments(string parentName, EnvironmentParentTypes parentType, Guid teamProjectCollectionCatalogResourceId);
    public ImpactedPoint[] QueryImpactedPointsForPlan(string teamProjectName, int planId, string buildUri);
    public TestMessageLogEntry[] QueryLogEntriesForRun(int testRunId, int testMessageLogId, string projectName);
    public TestResultAttachment[] QuerySessionAttachments(int sessionId, string projectName);
    public Session[] QuerySessions(ResultsStoreQuery query);
    public Session[] QuerySessionsById(string teamProjectName, int sessionId);
    public int QuerySessionsCount(ResultsStoreQuery query);
    public Session[] QuerySessionsInMultipleProjects(ResultsStoreQuery query);
    public SuitePointCount[] QuerySuitePointCounts(int planId, ResultsStoreQuery query);
    public TestActionResult[] QueryTestActionResults(TestCaseResultIdentifier identifier, TestResultParameter[]& parameters, TestResultAttachment[]& attachments, string projectName);
    public Int32[] QueryTestCases(string queryText, bool inPlans, string teamProjectName);
    public TestConfiguration QueryTestConfigurationById(int testConfigurationId, string projectName);
    public TestConfiguration[] QueryTestConfigurations(ResultsStoreQuery query);
    public int QueryTestConfigurationsCount(ResultsStoreQuery query);
    public TestConfiguration[] QueryTestConfigurationsForPlan(ResultsStoreQuery query, int planId);
    public TestExternalLink[] QueryTestPlanLinks(string projectName, int planId);
    public SkinnyPlan[] QueryTestPlans(ResultsStoreQuery query);
    public TestPoint[] QueryTestPointHistory(int testPointId, int planId, string projectName);
    public TestPointStatistic[] QueryTestPointStatistics(int planId, ResultsStoreQuery query);
    public TestPointStatisticsByPivotType[] QueryTestPointStatisticsByPivots(int planId, ResultsStoreQuery query, TestPointStatisticsQueryPivotType[] pivotList);
    public TestPointStatisticsByPivotType[] QueryTestPointStatisticsByPivots2(int planId, ResultsStoreQuery query, TestPointStatisticsQueryPivotType[] pivotList);
    public TestPoint[] QueryTestPoints(int planId, ResultsStoreQuery query, int pageSize, String[] testCaseProperties);
    public TestPoint[] QueryTestPointsAndStatistics(int planId, ResultsStoreQuery query, int pageSize, String[] testCaseProperties, TestPointStatistic[]& stats);
    public TestResolutionState[] QueryTestResolutionStateById(int testResolutionStateId, string projectName);
    public TestResolutionState[] QueryTestResolutionStates(string teamProject);
    public TestResultAttachment[] QueryTestResultAttachments(TestCaseResultIdentifier identifier, string projectName);
    public TestCaseResult[] QueryTestResults(ResultsStoreQuery query, int pageSize, TestCaseResultIdentifier[]& excessIds);
    public TestCaseResult[] QueryTestResultsByPoint(string projectName, int planId, int pointId);
    public TestCaseResult[] QueryTestResultsByRun(int testRunId, int pageSize, string projectName, bool includeActionResults, TestCaseResultIdentifier[]& excessIds, TestActionResult[]& actionResults, TestResultParameter[]& parameters, TestResultAttachment[]& attachments);
    public TestCaseResult[] QueryTestResultsByRunAndOutcome(int testRunId, byte outcome, int pageSize, TestCaseResultIdentifier[]& excessIds, string projectName);
    public TestCaseResult[] QueryTestResultsByRunAndOwner(int testRunId, Guid owner, int pageSize, TestCaseResultIdentifier[]& excessIds, string projectName);
    public TestCaseResult[] QueryTestResultsByRunAndState(int testRunId, byte state, int pageSize, TestCaseResultIdentifier[]& excessIds, string projectName);
    public TestResultAttachment[] QueryTestRunAttachments(int testRunId, string projectName);
    public TestRun QueryTestRunByTmiRunId(Guid tmiRunId);
    public TestRunCoverage[] QueryTestRunCoverage(string projectName, int testRunId, int flags);
    public TestRunStatistic[] QueryTestRunStatistics(string projectName, int testRunId);
    public TestRun[] QueryTestRuns(ResultsStoreQuery query, bool includeStatistics);
    public TestRun[] QueryTestRunsByBuild(string teamProjectName, string buildUri);
    public TestRun[] QueryTestRunsById(string teamProjectName, int testRunId);
    public TestRun[] QueryTestRunsByOwner(string teamProjectName, Guid owner);
    public int QueryTestRunsCount(ResultsStoreQuery query);
    public TestRun[] QueryTestRunsInMultipleProjects(ResultsStoreQuery query);
    public TestSettings[] QueryTestSettings(ResultsStoreQuery query, bool omitSettings);
    public TestSettings QueryTestSettingsById(int settingsId, string projectName);
    public int QueryTestSettingsCount(ResultsStoreQuery query);
    public ServerTestSuite[] QueryTestSuites(ResultsStoreQuery query, int pageSize, SuiteIdAndType[]& excessIds);
    public ServerTestSuite[] QueryTestSuitesByTestCaseId(string teamProjectName, int testCaseId, int pageSize, SuiteIdAndType[]& excessIds);
    public TestVariable QueryTestVariableById(int variableId, string projectName);
    public TestVariable[] QueryTestVariables(string teamProjectName);
    public DataCollectorInformation[] RegisterCollectors(DataCollectorInformation[] collectors, Guid teamProjectCollectionCatalogResourceId);
    public void RegisterControllers(TestController[] controllers, Guid teamProjectCollectionCatalogResourceId);
    public TestEnvironment[] RegisterEnvironments(TestEnvironment[] environments, string parentName, EnvironmentParentTypes parentType, Guid teamProjectCollectionCatalogResourceId);
    public void RepopulateTestSuite(string teamProjectName, int suiteId);
    public TestCaseResult[] ResetTestResults(TestCaseResultIdentifier[] identifiers, string projectName);
    public UpdatedProperties SetSuiteEntryConfigurations(string projectName, IdAndRev suite, TestCaseAndOwner[] testCases, Int32[] configIds);
    public void SetTestGroupPermissions(string projectName);
    public void UnregisterCollectors(DataCollectorInformation[] collectors, Guid teamProjectCollectionCatalogResourceId);
    public void UnregisterControllers(TestController[] controllers, Guid teamProjectCollectionCatalogResourceId);
    public void UnregisterEnvironments(TestEnvironment[] environments, string parentName, EnvironmentParentTypes parentType, Guid teamProjectCollectionCatalogResourceId);
    public UpdatedProperties UpdateBugFieldMapping(BugFieldMapping bugFieldMapping, string projectName);
    public void UpdateCollectors(DataCollectorInformation[] collectors, Guid teamProjectCollectionCatalogResourceId);
    public void UpdateControllers(TestController[] controllers, Guid teamProjectCollectionCatalogResourceId);
    public void UpdateDefaultStrips(DefaultAfnStripBinding[] afnStripBindingList, string projectName);
    public TestEnvironment[] UpdateEnvironments(TestEnvironment[] environments, string parentName, EnvironmentParentTypes parentType, Guid teamProjectCollectionCatalogResourceId);
    public UpdatedProperties UpdateSession(Session session, TestResultAttachment[] attachments, TestResultAttachmentIdentity[] attachmentDeletes, Int32[]& attachmentIds, string projectName);
    public UpdatedProperties UpdateTestConfiguration(TestConfiguration testConfiguration, string projectName, bool updateInUse, bool unchangedValues);
    public TestPlan UpdateTestPlan(TestPlan testPlan, string projectName, TestExternalLink[] changedLinks);
    public UpdatedProperties[] UpdateTestPoints(TestPoint[] points, string projectName);
    public void UpdateTestResolutionState(TestResolutionState state, string projectName);
    public ResultUpdateResponse[] UpdateTestResults(ResultUpdateRequest[] requests, string projectName);
    public UpdatedProperties UpdateTestRun(TestRun testRun, TestResultAttachment[] attachments, TestResultAttachmentIdentity[] attachmentDeletes, Int32[]& attachmentIds, string projectName);
    public UpdatedProperties UpdateTestSettings(TestSettings settings, string projectName);
    public UpdatedProperties UpdateTestSuite(ServerTestSuite testSuite, string projectName);
    public int UpdateTestVariable(TestVariable variable, string projectName);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestManagementWebService2 : TfsHttpClient {
    protected Guid CollectionServiceIdentifier { get; }
    protected string ComponentName { get; }
    protected string ServiceType { get; }
    public TestManagementWebService2(TfsTeamProjectCollection connection);
    protected virtual Guid get_CollectionServiceIdentifier();
    protected virtual string get_ComponentName();
    protected virtual string get_ServiceType();
    public int BeginCloneOperation(int fromSuiteId, int toSuiteId, string projectName, string targetProjectName, CloneOptions options);
    protected virtual Exception ConvertException(SoapException exception);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestManagementWebService2Wrapper : TestManagementWebService2 {
    private Nullable`1<bool> m_serviceSupported;
    public bool IsSupported { get; }
    internal TestManagementWebService2Wrapper(TfsTeamProjectCollection server);
    public bool get_IsSupported();
    protected virtual TfsRequestSettings ApplyCustomSettings(TfsRequestSettings settings);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestManagementWebService3 : TfsHttpClient {
    protected Guid CollectionServiceIdentifier { get; }
    protected string ComponentName { get; }
    protected string ServiceType { get; }
    public TestManagementWebService3(TfsTeamProjectCollection connection);
    protected virtual Guid get_CollectionServiceIdentifier();
    protected virtual string get_ComponentName();
    protected virtual string get_ServiceType();
    public int BeginCloneOperation(int sourcePlanId, TestPlan destinationPlan, Int32[] sourceSuiteIds, string projectName, CloneOptions options);
    protected virtual Exception ConvertException(SoapException exception);
    public int CreateTestFailureType(TestFailureType failureType, string teamProjectName);
    public TestRun CreateTestRun(TestRun testRun, TestSettings settings, TestCaseResult[] results, string teamProjectName);
    public void DeleteTestFailureType(int failureTypeId, string projectName);
    public CloneOperationInformation[] FetchCloneInformationForTestPlans(string projectName, int planId);
    public Int32[] FetchPlanIdsContainingCloneHistory(string projectName, Int32[] planIds, bool fetchAllPlans);
    public TestPoint[] FetchTestPoints(string projectName, int planId, IdAndRev[] idsToFetch, String[] testCaseProperties, Int32[]& deletedIds);
    public TestCaseResult[] FetchTestResults(TestCaseResultIdAndRev[] idsToFetch, string projectName, bool includeActionResults, TestCaseResultIdentifier[]& deletedIds, TestActionResult[]& actionResults, TestResultParameter[]& parameters, TestResultAttachment[]& attachments);
    public TestCaseResult FindTestResultInMultipleProjects(int testRunId, int testResultId, String& projectName);
    public TestFailureType[] ImportFailureTypes(TestFailureType[] failureTypes, string projectName);
    public TestResolutionState[] ImportResolutionStates(TestResolutionState[] resolutionStates, string projectName);
    public TestActionResult[] QueryTestActionResults(TestCaseResultIdentifier identifier, TestResultParameter[]& parameters, TestResultAttachment[]& attachments, string projectName);
    public TestFailureType[] QueryTestFailureTypeById(int testFailureTypeId, string projectName);
    public TestFailureType[] QueryTestFailureTypes(string teamProject);
    public TestPoint[] QueryTestPointHistory(int testPointId, int planId, string projectName);
    public TestPointStatistic[] QueryTestPointStatistics(int planId, ResultsStoreQuery query);
    public TestPointStatisticsByPivotType[] QueryTestPointStatisticsByPivots(int planId, ResultsStoreQuery query, TestPointStatisticsQueryPivotType[] pivotList);
    public TestPointStatisticsByPivotType[] QueryTestPointStatisticsByPivots2(int planId, ResultsStoreQuery query, TestPointStatisticsQueryPivotType[] pivotList);
    public TestPoint[] QueryTestPoints(int planId, ResultsStoreQuery query, int pageSize, String[] testCaseProperties);
    public TestPoint[] QueryTestPointsAndStatistics(int planId, ResultsStoreQuery query, int pageSize, String[] testCaseProperties, TestPointStatistic[]& stats);
    public TestCaseResult[] QueryTestResults(ResultsStoreQuery query, int pageSize, TestCaseResultIdentifier[]& excessIds);
    public TestCaseResult[] QueryTestResultsByPoint(string projectName, int planId, int pointId);
    public TestCaseResult[] QueryTestResultsByRun(int testRunId, int pageSize, string projectName, bool includeActionResults, TestCaseResultIdentifier[]& excessIds, TestActionResult[]& actionResults, TestResultParameter[]& parameters, TestResultAttachment[]& attachments);
    public TestCaseResult[] QueryTestResultsByRunAndOutcome(int testRunId, byte outcome, int pageSize, TestCaseResultIdentifier[]& excessIds, string projectName);
    public TestCaseResult[] QueryTestResultsByRunAndOwner(int testRunId, Guid owner, int pageSize, TestCaseResultIdentifier[]& excessIds, string projectName);
    public TestCaseResult[] QueryTestResultsByRunAndState(int testRunId, byte state, int pageSize, TestCaseResultIdentifier[]& excessIds, string projectName);
    public TestRun QueryTestRunByTmiRunId(Guid tmiRunId);
    public TestRunStatistic[] QueryTestRunStatistics(string projectName, int testRunId);
    public TestRun[] QueryTestRuns(ResultsStoreQuery query, bool includeStatistics);
    public TestRun[] QueryTestRunsByBuild(string teamProjectName, string buildUri);
    public TestRun[] QueryTestRunsById(string teamProjectName, int testRunId);
    public TestRun[] QueryTestRunsByOwner(string teamProjectName, Guid owner);
    public TestRun[] QueryTestRunsInMultipleProjects(ResultsStoreQuery query);
    public TestCaseResult[] ResetTestResults(TestCaseResultIdentifier[] identifiers, string projectName);
    public void UpdateTestFailureType(TestFailureType failureType, string projectName);
    public ResultUpdateResponse[] UpdateTestResults(ResultUpdateRequest[] requests, string projectName);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestManagementWebService3Wrapper : TestManagementWebService3 {
    private Nullable`1<bool> m_serviceSupported;
    public bool IsSupported { get; }
    internal TestManagementWebService3Wrapper(TfsTeamProjectCollection server);
    public bool get_IsSupported();
    protected virtual TfsRequestSettings ApplyCustomSettings(TfsRequestSettings settings);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestManagementWebService4 : TfsHttpClient {
    protected Guid CollectionServiceIdentifier { get; }
    protected string ComponentName { get; }
    protected string ServiceType { get; }
    public TestManagementWebService4(TfsTeamProjectCollection connection);
    protected virtual Guid get_CollectionServiceIdentifier();
    protected virtual string get_ComponentName();
    protected virtual string get_ServiceType();
    public UpdatedProperties AddCasesToSuite(IdAndRev parent, TestCaseAndOwner[] testCases, int toIndex, string projectName, Int32[]& configurationIds, String[]& configurationNames);
    public UpdatedProperties AddSuiteToSuite(IdAndRev parent, ServerTestSuite suite, string teamProjectName, UpdatedProperties& newSuiteProperties, int toIndex);
    protected virtual Exception ConvertException(SoapException exception);
    public int CopyTestSuiteEntries(string teamProjectName, IdAndRev fromSuiteId, TestSuiteEntry[] entries, IdAndRev toSuiteId, int toIndex);
    public TestPlan CreateTestPlan(TestPlan testPlan, string teamProjectName, TestExternalLink[] links);
    public TestPlan CreateTestPlanFromExistingWorkItem(string teamProjectName, int workItemId);
    public int CreateTestPlanWithRequirements(int planId, string planName, string teamProjectName, string areaPath, string iteration, string description, DateTime startDate, DateTime endDate, Guid owner, Int32[] requirementIds);
    public UpdatedProperties DeleteTestSuiteEntries(IdAndRev parentSuiteId, TestSuiteEntry[] entries, string projectName);
    public TestPlan[] FetchTestPlans(IdAndRev[] idsToFetch, Int32[]& deletedIds, string projectName);
    public TestPlan[] FetchTestPlans2(IdAndRev[] idsToFetch, Int32[]& deletedIds, string projectName, bool excludePlansWithNoRootSuite);
    public ServerTestSuite[] FetchTestSuites(string teamProjectName, IdAndRev[] suiteIds, Int32[]& deletedIds);
    public ServerTestSuite[] FetchTestSuitesForPlan(string teamProjectName, int planId);
    public StateTypeEnumAndStateString[] GetTestSuiteDefaultStatesMap();
    public StateTypeEnumAndStateString[] GetTestPlanDefaultStatesMap();
    public void MarkTestPlanAsDeleted(int testPlanId, string projectName);
    public UpdatedProperties MoveTestSuiteEntries(string teamProjectName, IdAndRev fromSuiteId, TestSuiteEntry[] entries, IdAndRev toSuiteId, UpdatedProperties& newToProps, int toIndex);
    public TestExternalLink[] QueryTestPlanLinks(string projectName, int planId);
    public SkinnyPlan[] QueryTestPlans(ResultsStoreQuery query);
    public SkinnyPlan[] QueryTestPlans2(ResultsStoreQuery query, bool excludePlansWithNoRootSuite);
    public ServerTestSuite[] QueryTestSuites(ResultsStoreQuery query, int pageSize, SuiteIdAndType[]& excessIds);
    public ServerTestSuite[] QueryTestSuitesByTestCaseId(string teamProjectName, int testCaseId, int pageSize, SuiteIdAndType[]& excessIds);
    public void RepopulateTestSuite(string teamProjectName, int suiteId);
    public UpdatedProperties SetSuiteEntryConfigurations(string projectName, IdAndRev suite, TestCaseAndOwner[] testCases, Int32[] configIds);
    public TestPlan UpdateTestPlan(TestPlan testPlan, string projectName, TestExternalLink[] changedLinks);
    public UpdatedProperties UpdateTestSuite(ServerTestSuite testSuite, string projectName);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestManagementWebService4Wrapper : TestManagementWebService4 {
    private Nullable`1<bool> m_serviceSupported;
    public bool IsSupported { get; }
    internal TestManagementWebService4Wrapper(TfsTeamProjectCollection server);
    public bool get_IsSupported();
    protected virtual TfsRequestSettings ApplyCustomSettings(TfsRequestSettings settings);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestManagementWebServiceWrapper : TestManagementWebService {
    private Nullable`1<bool> m_serviceSupported;
    public bool IsSupported { get; }
    internal TestManagementWebServiceWrapper(TfsTeamProjectCollection server);
    public bool get_IsSupported();
    protected virtual TfsRequestSettings ApplyCustomSettings(TfsRequestSettings settings);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestMessageLogEntry : object {
    private TestManagementTeamProject m_project;
    private DateTime m_dateCreated;
    private int m_entryId;
    private byte m_logLevel;
    private Guid m_logUser;
    private string m_logUserName;
    private string m_message;
    private int m_testMessageLogId;
    unknown Guid LogUser {internal set; }
    public int TestMessageLogId { get; internal set; }
    public int EntryId { get; internal set; }
    public TeamFoundationIdentity User { get; internal set; }
    public string UserName { get; }
    public DateTime DateCreated { get; internal set; }
    public TestMessageLogEntryLevel LogLevel { get; internal set; }
    public string Message { get; internal set; }
    public TestMessageLogEntryIdentity Id { get; }
    internal TestMessageLogEntry(TestManagementTeamProject project);
    internal void set_LogUser(Guid value);
    public sealed virtual int get_TestMessageLogId();
    internal void set_TestMessageLogId(int value);
    public sealed virtual int get_EntryId();
    internal void set_EntryId(int value);
    public sealed virtual TeamFoundationIdentity get_User();
    internal void set_User(TeamFoundationIdentity value);
    public sealed virtual string get_UserName();
    public sealed virtual DateTime get_DateCreated();
    internal void set_DateCreated(DateTime value);
    public sealed virtual TestMessageLogEntryLevel get_LogLevel();
    internal void set_LogLevel(TestMessageLogEntryLevel value);
    public sealed virtual string get_Message();
    internal void set_Message(string value);
    public sealed virtual TestMessageLogEntryIdentity get_Id();
    internal void PostLoad(TestManagementTeamProject project);
    internal static TestMessageLogEntry FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, TestMessageLogEntry obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public class Microsoft.TeamFoundation.TestManagement.Client.TestMessageLogEntryCollection : ReadOnlyObservableCollection`1<ITestMessageLogEntry> {
    internal TestMessageLogEntryCollection(ObservableCollection`1<ITestMessageLogEntry> entries);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public class Microsoft.TeamFoundation.TestManagement.Client.TestMessageLogEntryIdentity : ValueType {
    private int m_testMessageLogId;
    private int m_entryId;
    public int TestMessageLogId { get; }
    public int EntryId { get; }
    public TestMessageLogEntryIdentity(int testMessageLogId, int entryId);
    public int get_TestMessageLogId();
    public int get_EntryId();
    public sealed virtual bool Equals(TestMessageLogEntryIdentity other);
    public static bool op_Equality(TestMessageLogEntryIdentity left, TestMessageLogEntryIdentity right);
    public static bool op_Inequality(TestMessageLogEntryIdentity left, TestMessageLogEntryIdentity right);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
public enum Microsoft.TeamFoundation.TestManagement.Client.TestMessageLogEntryLevel : Enum {
    public int value__;
    public static TestMessageLogEntryLevel Verbose;
    public static TestMessageLogEntryLevel Info;
    public static TestMessageLogEntryLevel Warning;
    public static TestMessageLogEntryLevel Error;
}
public static class Microsoft.TeamFoundation.TestManagement.Client.TestObjectId : object {
    public static int None;
    public static int Deleted;
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public class Microsoft.TeamFoundation.TestManagement.Client.TestObjectInUseException : TestManagementException {
    public TestObjectInUseException(string message);
    public TestObjectInUseException(string message, Exception ex);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public class Microsoft.TeamFoundation.TestManagement.Client.TestObjectMustBeSavedException : TestManagementInvalidOperationException {
    public TestObjectMustBeSavedException(string message);
    public TestObjectMustBeSavedException(string message, Exception innerException);
    protected TestObjectMustBeSavedException(SerializationInfo info, StreamingContext context);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public class Microsoft.TeamFoundation.TestManagement.Client.TestObjectNotFoundException : TestManagementException {
    private Nullable`1<int> m_id;
    private Nullable`1<ObjectTypes> m_objectType;
    public int Id { get; }
    public ObjectTypes ObjectType { get; }
    public TestObjectNotFoundException(string message, ObjectTypes objectType);
    public TestObjectNotFoundException(int id, ObjectTypes objectType);
    protected TestObjectNotFoundException(SerializationInfo info, StreamingContext context);
    public TestObjectNotFoundException(string message);
    public TestObjectNotFoundException(string message, Exception ex);
    [SecurityCriticalAttribute]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    public int get_Id();
    public ObjectTypes get_ObjectType();
    protected void Initialize(int id, ObjectTypes objectType);
    private static string FormatMessage(int id, ObjectTypes objectType);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public class Microsoft.TeamFoundation.TestManagement.Client.TestObjectUpdatedException : TestManagementException {
    private List`1<object> m_objects;
    public List`1<object> Objects { get; }
    public TestObjectUpdatedException(string message, object value);
    public TestObjectUpdatedException(string message, object value, Exception innerException);
    public TestObjectUpdatedException(string message, IEnumerable`1<object> values);
    public TestObjectUpdatedException(string message, IEnumerable`1<object> values, Exception innerException);
    protected TestObjectUpdatedException(SerializationInfo info, StreamingContext context);
    public TestObjectUpdatedException(string message);
    public TestObjectUpdatedException(string message, Exception ex);
    [SecurityCriticalAttribute]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    public List`1<object> get_Objects();
}
[GenerateAllConstantsAttribute("")]
public enum Microsoft.TeamFoundation.TestManagement.Client.TestOutcome : Enum {
    public int value__;
    public static TestOutcome Unspecified;
    public static TestOutcome None;
    public static TestOutcome Passed;
    public static TestOutcome Failed;
    public static TestOutcome Inconclusive;
    public static TestOutcome Timeout;
    public static TestOutcome Aborted;
    public static TestOutcome Blocked;
    public static TestOutcome NotExecuted;
    public static TestOutcome Warning;
    public static TestOutcome Error;
    public static TestOutcome NotApplicable;
    public static TestOutcome Paused;
    public static TestOutcome InProgress;
    public static TestOutcome NotImpacted;
    public static TestOutcome MaxValue;
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestParameter : object {
    [CompilerGeneratedAttribute]
private PropertyChangedEventHandler PropertyChanged;
    private string m_name;
    private TestParameterCollection m_parent;
    private bool m_isDataBound;
    private bool m_isReference;
    private bool m_isOverridden;
    private string m_value;
    private TagDictionary m_tags;
    private int m_refCount;
    public IDictionary`2<string, string> Tags { get; }
    public string Name { get; internal set; }
    public bool IsDataBound { get; public set; }
    public bool IsReference { get; public set; }
    public bool IsOverridden { get; public set; }
    public bool IsOutput { get; }
    internal bool InternalIsDataBound { get; internal set; }
    public string Value { get; public set; }
    internal TestParameterCollection Parent { get; internal set; }
    internal int RefCount { get; internal set; }
    public TestParameter(string name, string value);
    public virtual string ToString();
    public sealed virtual IDictionary`2<string, string> get_Tags();
    private void SetTags(TagDictionary tags);
    private void TagChangeHandler(object sender, NotifyingDictionaryEventArgs<string, string> e);
    public sealed virtual string get_Name();
    internal void set_Name(string value);
    public sealed virtual bool get_IsDataBound();
    public sealed virtual void set_IsDataBound(bool value);
    public sealed virtual bool get_IsReference();
    public sealed virtual void set_IsReference(bool value);
    public sealed virtual bool get_IsOverridden();
    public sealed virtual void set_IsOverridden(bool value);
    public sealed virtual bool get_IsOutput();
    internal bool get_InternalIsDataBound();
    internal void set_InternalIsDataBound(bool value);
    internal void OnChange();
    public sealed virtual string get_Value();
    public sealed virtual void set_Value(string value);
    public sealed virtual void FromXml(XmlReader reader);
    public sealed virtual void ToXml(XmlWriter writer);
    private static void WriteTags(TagDictionary tags, XmlWriter writer);
    private static TagDictionary ReadTags(XmlReader reader);
    internal TestParameterCollection get_Parent();
    internal void set_Parent(TestParameterCollection value);
    internal int get_RefCount();
    internal void set_RefCount(int value);
    private void Setter(string property, T& oldValue, T newValue);
    [CompilerGeneratedAttribute]
public sealed virtual void add_PropertyChanged(PropertyChangedEventHandler value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_PropertyChanged(PropertyChangedEventHandler value);
}
[DefaultMemberAttribute("Item")]
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public class Microsoft.TeamFoundation.TestManagement.Client.TestParameterCollection : ReadOnlyObservableCollection`1<ITestParameter> {
    private static string ElementName;
    private ITestActionOwner m_owner;
    private bool m_isDirty;
    private ObservableCollection`1<ITestParameter> m_parameters;
    internal bool IsDirty { get; internal set; }
    public ITestParameter Item { get; }
    internal TestParameterCollection(ITestActionOwner owner, ObservableCollection`1<ITestParameter> parameters);
    internal ITestParameter AddParameterRef(string name);
    internal ITestParameter AddReferenceParameter(string name);
    internal void RemoveParameterRef(string name);
    internal void RemoveParameterIfRedundant(string name);
    private void RemoveParameterIfRedundant(TestParameter parameter);
    internal void UpdateReferenceParameters(TestParameterCollection newReferenceParameters);
    internal void OnParameterChanged(ITestParameter parameter);
    internal bool CheckParameterRemoval(string name, int references);
    public sealed virtual void FromXml(XmlReader reader);
    public sealed virtual void ToXml(XmlWriter writer);
    internal bool get_IsDirty();
    internal void set_IsDirty(bool value);
    internal ITestParameter GetFromCollection(string name);
    public virtual int GetHashCode();
    public bool ContainsKey(string name);
    public ITestParameter get_Item(string name);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public class Microsoft.TeamFoundation.TestManagement.Client.TestParameterDeletingEventArgs : EventArgs {
    [CompilerGeneratedAttribute]
private bool <Cancel>k__BackingField;
    private List`1<string> m_parameters;
    public List`1<string> Parameters { get; }
    public bool Cancel { get; public set; }
    internal TestParameterDeletingEventArgs(List`1<string> parameters);
    public List`1<string> get_Parameters();
    [CompilerGeneratedAttribute]
public bool get_Cancel();
    [CompilerGeneratedAttribute]
public void set_Cancel(bool value);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public class Microsoft.TeamFoundation.TestManagement.Client.TestParameterDeletingEventEventHandler : MulticastDelegate {
    public TestParameterDeletingEventEventHandler(object object, IntPtr method);
    public virtual void Invoke(object sender, TestParameterDeletingEventArgs e);
    public virtual IAsyncResult BeginInvoke(object sender, TestParameterDeletingEventArgs e, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
public enum Microsoft.TeamFoundation.TestManagement.Client.TestPhase : Enum {
    public int value__;
    public static TestPhase Unspecified;
    public static TestPhase SystemSetup;
    public static TestPhase UserSetup;
    public static TestPhase Test;
    public static TestPhase UserCleanup;
    public static TestPhase SystemCleanup;
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestPlan : SimpleClientObject {
    [CompilerGeneratedAttribute]
private bool <IsBuildChanged>k__BackingField;
    private static Int32[] s_emptyIdArray;
    private static TestExternalLink[] s_emptyLinksArray;
    private StaticTestSuite m_rootSuite;
    private NewBuildStatistics m_newBuildStatistics;
    private BuildFilterImpl m_buildFilter;
    private string m_buildNumber;
    private string m_buildDirectory;
    private string m_testCaseQueryHint;
    private TestExternalLinkCollection m_linkCollection;
    private Version m_version;
    private TestPlanProcessConfigHelper m_processConfigHelper;
    private bool m_buildUriChanged;
    private string m_clientBuildUri;
    private string m_areaPath;
    private Guid m_automatedTestEnvironmentId;
    private int m_automatedTestSettingsId;
    private string m_buildDefinition;
    private string m_buildQuality;
    private DateTime m_buildTakenDate;
    private string m_buildUri;
    private string m_description;
    private DateTime m_endDate;
    private string m_iteration;
    private DateTime m_lastUpdated;
    private Guid m_lastUpdatedBy;
    private string m_lastUpdatedByName;
    private Guid m_manualTestEnvironmentId;
    private string m_name;
    private Guid m_owner;
    private string m_ownerName;
    private string m_previousBuildUri;
    private int m_rootSuiteId;
    private string m_serviceVersion;
    private DateTime m_startDate;
    private byte m_state;
    private string m_status;
    internal ServerTestSuite[] m_suitesMetaData;
    private int m_testSettingsId;
    public ObjectTypes ObjectType { get; }
    public string Name { get; public set; }
    public string Description { get; public set; }
    public TeamFoundationIdentity Owner { get; public set; }
    public string OwnerName { get; }
    public Guid OwnerTeamFoundationId { get; public set; }
    public int ManualTestSettingsId { get; public set; }
    public int AutomatedTestSettingsId { get; public set; }
    public Guid ManualTestEnvironmentId { get; public set; }
    public Guid AutomatedTestEnvironmentId { get; public set; }
    public IStaticTestSuite RootSuite { get; }
    public string AreaPath { get; public set; }
    public TeamFoundationIdentity LastUpdatedBy { get; }
    public string LastUpdatedByName { get; }
    internal Guid LastUpdatedByTeamFoundationId { get; }
    public DateTime LastUpdated { get; internal set; }
    public TestPlanState State { get; public set; }
    public string Status { get; public set; }
    public DateTime StartDate { get; public set; }
    public DateTime EndDate { get; public set; }
    public string Iteration { get; public set; }
    public IBuildFilter BuildFilter { get; }
    internal bool IsBuildChanged { get; private set; }
    public Uri BuildUri { get; public set; }
    public Uri PreviousBuildUri { get; }
    public DateTime BuildTakenDate { get; }
    public string BuildNumber { get; }
    public INewBuildStatistics NewBuildStatistics { get; }
    public string BuildDirectory { get; }
    public ITestExternalLinkCollection Links { get; }
    internal Version ServiceVersion { get; }
    internal TestPlanProcessConfigHelper ProcessConfigHelper { get; }
    internal string TestCaseQueryHint { get; internal set; }
    internal TestPlanHelper TestPlanHelper { get; }
    internal TestPlanCollection TestPlanCollection { get; }
    internal TestPlan(TestPlanHelper helper);
    internal TestPlan(TestPlanHelper helper, SkinnyPlan skinnyPlan);
    internal TestPlan(TestPlan testPlan);
    private static TestPlan();
    private void Initialize();
    private void InitializeState();
    internal void PostLoad(TestPlanHelper helper);
    public virtual ObjectTypes get_ObjectType();
    public sealed virtual string get_Name();
    public sealed virtual void set_Name(string value);
    public sealed virtual string get_Description();
    public sealed virtual void set_Description(string value);
    public sealed virtual TeamFoundationIdentity get_Owner();
    public sealed virtual void set_Owner(TeamFoundationIdentity value);
    public sealed virtual string get_OwnerName();
    public sealed virtual Guid get_OwnerTeamFoundationId();
    public sealed virtual void set_OwnerTeamFoundationId(Guid value);
    public sealed virtual int get_ManualTestSettingsId();
    public sealed virtual void set_ManualTestSettingsId(int value);
    public sealed virtual int get_AutomatedTestSettingsId();
    public sealed virtual void set_AutomatedTestSettingsId(int value);
    public sealed virtual Guid get_ManualTestEnvironmentId();
    public sealed virtual void set_ManualTestEnvironmentId(Guid value);
    public sealed virtual Guid get_AutomatedTestEnvironmentId();
    public sealed virtual void set_AutomatedTestEnvironmentId(Guid value);
    public sealed virtual IStaticTestSuite get_RootSuite();
    public sealed virtual string get_AreaPath();
    public sealed virtual void set_AreaPath(string value);
    public sealed virtual TeamFoundationIdentity get_LastUpdatedBy();
    public sealed virtual string get_LastUpdatedByName();
    internal Guid get_LastUpdatedByTeamFoundationId();
    public sealed virtual DateTime get_LastUpdated();
    internal void set_LastUpdated(DateTime value);
    public sealed virtual TestPlanState get_State();
    public sealed virtual void set_State(TestPlanState value);
    public sealed virtual string get_Status();
    public sealed virtual void set_Status(string value);
    public sealed virtual DateTime get_StartDate();
    public sealed virtual void set_StartDate(DateTime value);
    public sealed virtual DateTime get_EndDate();
    public sealed virtual void set_EndDate(DateTime value);
    public sealed virtual string get_Iteration();
    public sealed virtual void set_Iteration(string value);
    public sealed virtual IBuildFilter get_BuildFilter();
    [CompilerGeneratedAttribute]
internal bool get_IsBuildChanged();
    [CompilerGeneratedAttribute]
private void set_IsBuildChanged(bool value);
    public sealed virtual Uri get_BuildUri();
    public sealed virtual void set_BuildUri(Uri value);
    public sealed virtual Uri get_PreviousBuildUri();
    public sealed virtual DateTime get_BuildTakenDate();
    public sealed virtual string get_BuildNumber();
    public sealed virtual INewBuildStatistics get_NewBuildStatistics();
    public sealed virtual string get_BuildDirectory();
    public sealed virtual ITestExternalLinkCollection get_Links();
    internal Version get_ServiceVersion();
    internal TestPlanProcessConfigHelper get_ProcessConfigHelper();
    private string GetStatusFromTestPlanState();
    private TestPlanState GetTestPlanStateFromStatus();
    private TestExternalLink[] QueryLinks(int planId);
    private void linkCollection_ItemChangedEvent(object sender, TestExternalLink item);
    private void linkCollection_CollectionChanged(object sender, NotifyCollectionChangedEventArgs e);
    internal string get_TestCaseQueryHint();
    internal void set_TestCaseQueryHint(string value);
    public sealed virtual IImpactedTestPointCollection QueryImpactedPoints(Uri buildUri);
    public sealed virtual void SetBuildInfo(string number, string directory);
    public sealed virtual IImpactedTestPointCollection QueryImpactedPoints(Uri buildUri, string testCaseFieldText);
    public virtual void Save();
    internal virtual void DeleteFromServer(DeleteAction action);
    internal void MarkTestPlanAsDeleted();
    public virtual void Refresh();
    public sealed virtual void RefreshRootSuite();
    public sealed virtual ITestPlan Clone();
    public sealed virtual void CopyPropertiesFrom(ITestPlan testPlan);
    internal virtual void RefreshFrom(object source);
    public sealed virtual void RefreshTestCase(int testCaseId);
    public sealed virtual ITestRun CreateTestRun(bool isAutomated);
    public sealed virtual ITestExternalLink CreateLink();
    public sealed virtual ITestPoint FindTestPoint(int testPointId);
    public sealed virtual ITestPoint FindTestPoint(int testPointId, string testCaseFieldText);
    public sealed virtual ITestPointCollection QueryTestPoints(string queryText);
    public sealed virtual ITestPointCollection QueryTestPoints(string queryText, string testCaseFieldText);
    public sealed virtual ITestPointCollection QueryTestPoints(string pointQueryText, string testCaseFieldText, String[] testCaseProperties, bool fetchFirstPage);
    public sealed virtual ITestPointCollection QueryTestPointsAndStatistics(string pointQueryText, string testCaseFieldText, ITestPointStatistics& statistics);
    public sealed virtual ITestPointCollection QueryTestPointsAndStatistics(string pointQueryText, string testCaseFieldText, String[] testCaseProperties, ITestPointStatistics& statistics);
    public sealed virtual ITestPointStatistics QueryTestPointStatistics(string queryText);
    public sealed virtual ITestPointStatisticsByPivot QueryTestPointStatisticsByPivot(string queryText, List`1<TestPointStatisticsQueryPivotType> pivotList);
    public sealed virtual HierarchyEntry QueryTestPointHierarchy(string queryText);
    internal bool HasUserDisplayName();
    internal void EnsureIdentitiesInCache();
    private void SetBuildUri(string newUri, bool markDirty);
    private void FetchBuildInfoIfNeeded();
    private void SaveNewPlan();
    private void SaveExistingPlan();
    private void PromotePlanIfRequired();
    private TestExternalLink[] GetChangedLinks();
    internal TestPlanHelper get_TestPlanHelper();
    internal TestPlanCollection get_TestPlanCollection();
    internal static TestPlan FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, TestPlan obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestPlanCollection : ClientObjectCollection`3<ITestPlan, TestPlan, int> {
    private ResultsStoreQuery m_query;
    private bool m_excludePlansWithNoRootSuite;
    internal ResultsStoreQuery Query { get; internal set; }
    public string QueryText { get; public set; }
    private TestPlanHelper Helper { get; }
    internal TestPlanCollection(TestPlanHelper helper, bool excludePlansWithNoRootSuite);
    internal TestPlanCollection(TestPlanHelper helper, SkinnyPlan[] skinnyPlans, ResultsStoreQuery query, bool excludePlansWithNoRootSuite);
    public sealed virtual void Refresh();
    public sealed virtual void RefreshStatistics();
    internal ResultsStoreQuery get_Query();
    internal void set_Query(ResultsStoreQuery value);
    public sealed virtual string get_QueryText();
    public sealed virtual void set_QueryText(string value);
    internal virtual TestPlan[] Fetch(ClientObjectIdRev`1[] ids, Int32[]& deleted, ICollection`1& identities);
    private TestPlanHelper get_Helper();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestPlanHelper : ClientObjectHelper`3<ITestPlan, TestPlan, int> {
    internal TestPointHelper TestPointHelper { get; }
    internal TestPlanHelper(TestManagementTeamProject project);
    public virtual ITestPlan Create();
    public sealed virtual ITestPlan CreateFromWorkItem(int workItemId);
    public sealed virtual ITestPlan Find(int testPlanId);
    public sealed virtual ITestPlan Find2(int testPlanId, bool excludePlansWithNoRootSuite);
    public sealed virtual ITestPlanCollection Query(string queryText, IDictionary context);
    public sealed virtual ITestPlanCollection Query(string queryText);
    public sealed virtual ITestPlanCollection Query2(string queryText, bool excludePlansWithNoRootSuite);
    public ITestPlanCollection Query(string queryText, IDictionary context, string assignedUser);
    public sealed virtual int BeginCloneOperation(int sourcePlanId, ITestPlan destPlan, List`1<int> sourceSuiteIds, string projectName, CloneOptions options);
    public sealed virtual IList`1<int> FetchPlanIdsWithCloneHistory();
    public sealed virtual IList`1<CloneOperationInformation> FetchCloneInformation(int planId);
    public sealed virtual CloneOperationInformation GetCloneOperationInformation(int opId);
    private void InvokeCloneOperationInformationPostLoad(List`1<CloneOperationInformation> cloneInfoList);
    internal ITestPlan CreateAndSaveTestPlanWithRequirements(int planId, string planName, string teamProjectName, string areaPath, string iteration, string description, DateTime startDate, DateTime endDate, TeamFoundationIdentity owner, Int32[] requirementIds);
    internal TestPlan[] Fetch(ClientObjectIdRev`1[] ids, Int32[]& deletedIds);
    internal TestPlan[] Fetch2(ClientObjectIdRev`1[] ids, Int32[]& deletedIds, bool excludePlansWithNoRootSuite);
    internal void DeleteById(int id);
    private void PostLoadPlans(TestPlan[] plans);
    private void PostLoad(TestPlan plan);
    internal TestPointHelper get_TestPointHelper();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestPlanProcessConfigHelper : ProcessConfigurationBase {
    internal TestPlanProcessConfigHelper(TestManagementTeamProject project);
    internal virtual byte ConvertStatusToState(string newstatus);
    protected virtual State[] GetStatesFromProcessConfiguration();
    protected virtual byte FromMetaState(StateTypeEnum stateType);
    protected virtual StateTypeEnum ToMetaState(byte state);
}
public enum Microsoft.TeamFoundation.TestManagement.Client.TestPlanSource : Enum {
    public int value__;
    public static TestPlanSource Mtm;
    public static TestPlanSource Web;
    public static TestPlanSource KanbanBoard;
}
public enum Microsoft.TeamFoundation.TestManagement.Client.TestPlanState : Enum {
    public int value__;
    public static TestPlanState None;
    public static TestPlanState Active;
    public static TestPlanState Inactive;
}
[DefaultMemberAttribute("Item")]
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestPoint : SimpleClientObject {
    private ITestCaseResult m_result;
    private ReadOnlyObservableCollection`1<ITestPointProperties> m_history;
    private ObservableCollection`1<ITestPointProperties> m_internalHistory;
    private ITestCase m_testCase;
    private TestPointCollection m_testPointCollection;
    private Guid m_assignedTo;
    private Guid m_lastUpdatedBy;
    private Dictionary`2<string, object> m_testCaseProperties;
    private string m_assignedToName;
    private string m_assignedToString;
    private string m_comment;
    private int m_configurationId;
    private string m_configurationName;
    private byte m_failureType;
    private int m_lastResolutionStateId;
    private byte m_lastResultOutcome;
    private byte m_lastResultState;
    private int m_lastTestResultId;
    private int m_lastTestRunId;
    private DateTime m_lastUpdated;
    private string m_lastUpdatedByName;
    private string m_lastUpdatedByString;
    private int m_planId;
    private byte m_state;
    private int m_suiteId;
    private int m_testCaseId;
    internal Object[] m_workItemProperties;
    public ObjectTypes ObjectType { get; }
    public TeamFoundationIdentity LastUpdatedBy { get; }
    public Guid LastUpdatedByTeamFoundationId { get; }
    public string LastUpdatedByName { get; }
    public DateTime LastUpdated { get; internal set; }
    public TestPointState State { get; public set; }
    public string Comment { get; public set; }
    public TeamFoundationIdentity AssignedTo { get; public set; }
    public Guid AssignedToTeamFoundationId { get; public set; }
    public string AssignedToName { get; }
    public int TestCaseId { get; }
    internal int TestCaseIdNoFetch { get; }
    public ITestCase TestCaseWorkItem { get; internal set; }
    public bool TestCaseExists { get; }
    public ITestCaseResult MostRecentResult { get; }
    public int MostRecentRunId { get; }
    public int MostRecentResultId { get; }
    public TestResultState MostRecentResultState { get; }
    public TestOutcome MostRecentResultOutcome { get; internal set; }
    public FailureType MostRecentFailureType { get; }
    public int MostRecentFailureTypeId { get; }
    public int MostRecentResolutionStateId { get; }
    internal TestPointHelper TestPointHelper { get; }
    public ReadOnlyObservableCollection`1<ITestPointProperties> History { get; }
    public ITestPlan Plan { get; }
    public int SuiteId { get; }
    public int ConfigurationId { get; }
    public string ConfigurationName { get; }
    public bool HasCachedProperties { get; }
    public object Item { get; public set; }
    public bool IsTestCaseAutomated { get; }
    public byte FailureType { get; public set; }
    internal TestPoint(TestPointCollection collection, int pointId);
    internal TestPoint(TestPointCollection collection, ImpactedPoint skinnyPoint);
    internal TestPoint(TestPoint x);
    internal void PostLoad(TestPointCollection collection);
    public virtual ObjectTypes get_ObjectType();
    public sealed virtual TeamFoundationIdentity get_LastUpdatedBy();
    public Guid get_LastUpdatedByTeamFoundationId();
    public sealed virtual string get_LastUpdatedByName();
    public sealed virtual DateTime get_LastUpdated();
    internal void set_LastUpdated(DateTime value);
    public sealed virtual TestPointState get_State();
    public sealed virtual void set_State(TestPointState value);
    public sealed virtual void Block();
    public sealed virtual void Unblock();
    internal void CopyBlockedPointProperties(BlockedPointProperties response);
    private void SetLatestFrom(TestPoint newPoint);
    public sealed virtual string get_Comment();
    public sealed virtual void set_Comment(string value);
    public sealed virtual TeamFoundationIdentity get_AssignedTo();
    public sealed virtual void set_AssignedTo(TeamFoundationIdentity value);
    public sealed virtual Guid get_AssignedToTeamFoundationId();
    public sealed virtual void set_AssignedToTeamFoundationId(Guid value);
    public sealed virtual string get_AssignedToName();
    public sealed virtual int get_TestCaseId();
    internal int get_TestCaseIdNoFetch();
    public sealed virtual ITestCase get_TestCaseWorkItem();
    internal void set_TestCaseWorkItem(ITestCase value);
    public sealed virtual bool get_TestCaseExists();
    public sealed virtual ITestCaseResult get_MostRecentResult();
    public sealed virtual int get_MostRecentRunId();
    public sealed virtual int get_MostRecentResultId();
    public sealed virtual TestResultState get_MostRecentResultState();
    public sealed virtual TestOutcome get_MostRecentResultOutcome();
    internal void set_MostRecentResultOutcome(TestOutcome value);
    public sealed virtual FailureType get_MostRecentFailureType();
    public sealed virtual int get_MostRecentFailureTypeId();
    public sealed virtual int get_MostRecentResolutionStateId();
    internal TestPointHelper get_TestPointHelper();
    public sealed virtual ReadOnlyObservableCollection`1<ITestPointProperties> get_History();
    private void GetHistoryFromServer();
    public virtual void Save();
    internal void PostSave(UpdatedProperties properties);
    public virtual void Refresh();
    internal virtual void RefreshFrom(object source);
    internal virtual void DeleteFromServer(DeleteAction action);
    public sealed virtual Int32[] QueryAssociatedWorkItemsFromResults();
    public sealed virtual ITestPlan get_Plan();
    public sealed virtual int get_SuiteId();
    public sealed virtual int get_ConfigurationId();
    public sealed virtual string get_ConfigurationName();
    private void PopulateTestCaseProperties();
    public sealed virtual bool get_HasCachedProperties();
    public sealed virtual object get_Item(string name);
    public void set_Item(string name, object value);
    public sealed virtual bool get_IsTestCaseAutomated();
    internal bool HasUserDisplayName();
    internal void EnsureIdentityDisplayNameInCache();
    private Guid TryConvertToGuid(string guidString);
    public byte get_FailureType();
    public void set_FailureType(byte value);
    internal static TestPoint FromXml(IServiceProvider serviceProvider, XmlReader reader);
    private void FromXmlAttributeHook(XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, TestPoint obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestPointAssignment : object {
    private TestManagementTeamProject m_project;
    private Guid m_assignedTo;
    private string m_assignedToName;
    private int m_configurationId;
    private string m_configurationName;
    private int m_testCaseId;
    public string ConfigurationName { get; }
    public TeamFoundationIdentity AssignedTo { get; public set; }
    public Guid AssignedToTeamFoundationId { get; public set; }
    public string AssignedToName { get; }
    public int ConfigurationId { get; public set; }
    public int TestCaseId { get; public set; }
    internal TestPointAssignment(TestManagementTeamProject project, int testCaseId, IdAndName configuration, Guid assignedTo);
    internal TestPointAssignment(TestPointAssignment x);
    internal void PostLoad(TestManagementTeamProject project);
    public string get_ConfigurationName();
    public sealed virtual TeamFoundationIdentity get_AssignedTo();
    public sealed virtual void set_AssignedTo(TeamFoundationIdentity value);
    public sealed virtual Guid get_AssignedToTeamFoundationId();
    public sealed virtual void set_AssignedToTeamFoundationId(Guid value);
    public sealed virtual string get_AssignedToName();
    public sealed virtual int get_ConfigurationId();
    public sealed virtual void set_ConfigurationId(int value);
    public sealed virtual int get_TestCaseId();
    public sealed virtual void set_TestCaseId(int value);
    internal static TestPointAssignment FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, TestPointAssignment obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestPointCollection : ClientObjectCollection`3<ITestPoint, TestPoint, int> {
    private static string DefaultTestCaseFieldText;
    private TestPlan m_plan;
    private string m_testCaseFieldText;
    private bool m_workItemCreateNeeded;
    private String[] m_testCaseProperties;
    private TestPointHelper Helper { get; }
    internal TestPlan Plan { get; }
    internal String[] TestCaseProperties { get; internal set; }
    internal TestPointCollection(TestPlan plan, string testCaseFieldText);
    public sealed virtual void Refresh(Int32[] pointIds, bool refreshTestCases);
    internal void CreateWorkItems();
    internal virtual TestPoint[] Fetch(ClientObjectIdRev`1[] ids, Int32[]& deleted, ICollection`1& identities);
    internal static void GatherUserIds(TestManagementTeamProject project, ICollection`1<Guid> identities, IEnumerable`1<TestPoint> points);
    private TestPointHelper get_Helper();
    internal TestPlan get_Plan();
    internal String[] get_TestCaseProperties();
    internal void set_TestCaseProperties(String[] value);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestPointHelper : ClientObjectHelper`3<ITestPoint, TestPoint, int> {
    internal int PageSize { get; }
    internal TestPointHelper(TestManagementTeamProject project);
    public virtual ITestPoint Create();
    public sealed virtual void BlockTestPoints(ITestPoint[] pointsToBlock);
    public sealed virtual void UnblockTestPoints(ITestPoint[] pointsToUnblock);
    public sealed virtual void SaveTestPoints(ITestPoint[] pointsToSave);
    private string GetListOfIds(IEnumerable`1<T> items);
    private void HandleNullResponse(IEnumerable`1<TestPoint> points);
    private void HandleConflictingResponses(List`1<ITestPoint> conflictingPoints);
    internal TestPoint[] Fetch(int planId, ClientObjectIdRev`1[] ids, String[] testCaseProperties, Int32[]& deleted);
    internal TestPoint[] QueryPointsForPlan(TestPointCollection collection, ResultsStoreQuery query, TestPointStatistics statistics, bool fetchFirstPage);
    internal virtual int get_PageSize();
}
[GenerateAllConstantsAttribute("")]
public enum Microsoft.TeamFoundation.TestManagement.Client.TestPointState : Enum {
    public int value__;
    public static TestPointState None;
    public static TestPointState Ready;
    public static TestPointState Completed;
    public static TestPointState NotReady;
    public static TestPointState InProgress;
    public static TestPointState MaxValue;
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestPointStatistic : object {
    private int m_count;
    private byte m_failureType;
    private int m_resolutionStateId;
    private byte m_resultOutcome;
    private byte m_resultState;
    private byte m_testPointState;
    public TestPointState PointState { get; }
    public TestResultState ResultState { get; }
    public TestOutcome ResultOutcome { get; internal set; }
    public FailureType FailureType { get; }
    public int FailureTypeId { get; }
    public int ResultResolutionStateId { get; }
    public int Count { get; }
    internal TestPointStatistic(TestPointStatistic x);
    public sealed virtual TestPointState get_PointState();
    public sealed virtual TestResultState get_ResultState();
    public sealed virtual TestOutcome get_ResultOutcome();
    internal void set_ResultOutcome(TestOutcome value);
    public sealed virtual FailureType get_FailureType();
    public sealed virtual int get_FailureTypeId();
    public sealed virtual int get_ResultResolutionStateId();
    public sealed virtual int get_Count();
    internal static TestPointStatistic FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, TestPointStatistic obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestPointStatisticPivotItem : object {
    private string m_pivot;
    internal TestPointStatistic[] m_statistics;
    internal string Pivot { get; internal set; }
    internal TestPointStatistic[] Statistics { get; internal set; }
    internal string get_Pivot();
    internal void set_Pivot(string value);
    internal TestPointStatistic[] get_Statistics();
    internal void set_Statistics(TestPointStatistic[] value);
    internal static TestPointStatisticPivotItem FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, TestPointStatisticPivotItem obj);
}
[DefaultMemberAttribute("Item")]
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestPointStatistics : object {
    private TestPlan m_plan;
    private ResultsStoreQuery m_query;
    private Int32[] m_counters;
    private ITestPointStatistic[] m_statistics;
    private Dictionary`2<int, int> m_resolutionStateCounters;
    private Dictionary`2<int, int> m_failureTypeCounters;
    private bool m_canRefresh;
    private static int TotalIndex;
    private static int PointStateIndex;
    private static int ResultStateIndex;
    private static int OutcomeIndex;
    private static int MaxIndex;
    public int Item { get; }
    public int Item { get; }
    public int Item { get; }
    public int Item { get; }
    public IDictionary`2<int, int> FailureTypeStatistics { get; }
    public int Item { get; }
    public int TotalCount { get; }
    public Dictionary`2<int, string> FailuresByAnalysisState { get; }
    public IDictionary`2<string, int> StatisticCounts { get; }
    internal TestPointStatistics(TestPlan plan, ResultsStoreQuery query, bool initialize);
    internal TestPointStatistics(TestPointStatistic[] statistics);
    public sealed virtual int get_Item(TestPointState state);
    public sealed virtual int get_Item(TestResultState resultState);
    public sealed virtual int get_Item(TestOutcome outcome);
    public sealed virtual int get_Item(FailureType failure);
    public sealed virtual IDictionary`2<int, int> get_FailureTypeStatistics();
    public sealed virtual int get_Item(int resolutionStateId);
    public sealed virtual int get_TotalCount();
    public sealed virtual void Refresh();
    internal void RefreshFrom(TestPointStatistic[] stats);
    public sealed virtual ITestPointStatistic[] GetStatistics();
    public Dictionary`2<int, string> get_FailuresByAnalysisState();
    public IDictionary`2<string, int> get_StatisticCounts();
    private int ToIndex(TestPointState state);
    private int ToIndex(TestResultState resultState);
    private int ToIndex(TestOutcome outcome);
}
[DefaultMemberAttribute("Item")]
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestPointStatisticsByPivot : object {
    private TestPlan m_plan;
    private ResultsStoreQuery m_query;
    private List`1<TestPointStatisticsQueryPivotType> m_pivotList;
    private Dictionary`2<TestPointStatisticsQueryPivotType, List`1<ITestPointStatisticsPivotItem>> m_statistics;
    public List`1<ITestPointStatisticsPivotItem> Item { get; }
    internal TestPointStatisticsByPivot(TestPlan plan, ResultsStoreQuery query, List`1<TestPointStatisticsQueryPivotType> pivotList);
    public sealed virtual List`1<ITestPointStatisticsPivotItem> get_Item(TestPointStatisticsQueryPivotType key);
    private void StoreResults(TestPointStatisticsByPivotType[] results);
    private List`1<ITestPointStatisticsPivotItem> GetTestPointStatisticsPivotItemList(TestPointStatisticPivotItem[] statisticsList);
    public sealed virtual void Refresh();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestPointStatisticsByPivotType : object {
    private TestPointStatisticsQueryPivotType m_pivotType;
    internal TestPointStatisticPivotItem[] m_statistics;
    internal TestPointStatisticsQueryPivotType PivotType { get; internal set; }
    internal TestPointStatisticPivotItem[] Statistics { get; internal set; }
    internal TestPointStatisticsQueryPivotType get_PivotType();
    internal void set_PivotType(TestPointStatisticsQueryPivotType value);
    internal TestPointStatisticPivotItem[] get_Statistics();
    internal void set_Statistics(TestPointStatisticPivotItem[] value);
    internal static TestPointStatisticsByPivotType FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, TestPointStatisticsByPivotType obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestPointStatisticsPivotItem : object {
    [CompilerGeneratedAttribute]
private string <Pivot>k__BackingField;
    [CompilerGeneratedAttribute]
private ITestPointStatistics <Statistics>k__BackingField;
    public string Pivot { get; private set; }
    public ITestPointStatistics Statistics { get; private set; }
    public TestPointStatisticsPivotItem(string pivot, TestPointStatistic[] statistics);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Pivot();
    [CompilerGeneratedAttribute]
private void set_Pivot(string value);
    [CompilerGeneratedAttribute]
public sealed virtual ITestPointStatistics get_Statistics();
    [CompilerGeneratedAttribute]
private void set_Statistics(ITestPointStatistics value);
}
public enum Microsoft.TeamFoundation.TestManagement.Client.TestPointStatisticsQueryPivotType : Enum {
    public int value__;
    public static TestPointStatisticsQueryPivotType Suite;
    public static TestPointStatisticsQueryPivotType Tester;
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestResolutionState : SimpleClientObject {
    private string m_name;
    private string m_teamProject;
    public ObjectTypes ObjectType { get; }
    public string Name { get; public set; }
    internal string TeamProject { get; internal set; }
    private ITestManagementTeamProject Microsoft.TeamFoundation.TestManagement.Client.ITestResolutionState.Project { get; }
    internal TestResolutionState(TestResolutionStateHelper helper);
    internal TestResolutionState(TestResolutionState testResolutionState);
    public virtual ObjectTypes get_ObjectType();
    public sealed virtual string get_Name();
    public sealed virtual void set_Name(string value);
    internal string get_TeamProject();
    internal void set_TeamProject(string value);
    internal virtual void DeleteFromServer(DeleteAction action);
    public virtual void Refresh();
    internal virtual void RefreshFrom(object source);
    internal void CanSave();
    public virtual void Save();
    private sealed virtual override ITestManagementTeamProject Microsoft.TeamFoundation.TestManagement.Client.ITestResolutionState.get_Project();
    internal static TestResolutionState FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, TestResolutionState obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestResolutionStateHelper : ClientObjectHelper`3<ITestResolutionState, TestResolutionState, int> {
    private static string c_testResolutionState;
    private static string c_testResolutionStatesString;
    private static string c_name;
    internal TestResolutionStateHelper(TestManagementTeamProject project);
    public virtual ITestResolutionState Create();
    public sealed virtual ITestResolutionState Find(int stateId);
    public sealed virtual IEnumerable`1<ITestResolutionState> Query();
    public sealed virtual IEnumerable`1<ITestResolutionState> ImportFromFile(string fileName);
    public sealed virtual IEnumerable`1<ITestResolutionState> CreateFromFile(string fileName);
    internal static List`1<ITestResolutionState> Parse(string fileName, TestManagementTeamProject project);
    private static XmlDocument ValidateXmlSchema(string fileName);
    public sealed virtual void Export(IEnumerable`1<ITestResolutionState> testResolutionStates, string fileName);
    private void ValidateResolutionStates(List`1<TestResolutionState> testResolutionStates, TestResolutionState testResolutionstate);
    private IEnumerable`1<ITestResolutionState> ProcessQueryResult(ITestResolutionState[] states);
    private string CreateXmlData(IEnumerable`1<ITestResolutionState> testResolutionStates);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestResolutionStateStatistic : object {
    private ITestResolutionState m_state;
    private int m_count;
    public ITestResolutionState State { get; }
    public int Count { get; }
    internal TestResolutionStateStatistic(ITestResolutionState state, int count);
    public sealed virtual ITestResolutionState get_State();
    public sealed virtual int get_Count();
    internal void Add(int count);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal abstract class Microsoft.TeamFoundation.TestManagement.Client.TestResult : ClientObject`1<TestCaseResultIdentifier> {
    private List`1<string> m_collectorsEnabled;
    private bool m_fromServer;
    [CompilerGeneratedAttribute]
private UploadCompletionEventHandler AttachmentUploadCompleted;
    protected string m_comment;
    protected DateTime m_creationDate;
    protected DateTime m_dateCompleted;
    protected DateTime m_dateStarted;
    protected long m_duration;
    protected string m_errorMessage;
    protected DateTime m_lastUpdated;
    protected Guid m_lastUpdatedBy;
    protected string m_lastUpdatedByName;
    protected byte m_outcome;
    public ObjectTypes ObjectType { get; }
    public int TestResultId { get; }
    public int TestRunId { get; }
    public TestOutcome Outcome { get; public set; }
    public string ErrorMessage { get; public set; }
    public string Comment { get; public set; }
    public TeamFoundationIdentity LastUpdatedBy { get; }
    public string LastUpdatedByName { get; }
    internal Guid LastUpdatedByTeamFoundationId { get; }
    public DateTime DateCreated { get; internal set; }
    public DateTime LastUpdated { get; internal set; }
    public DateTime DateStarted { get; public set; }
    public DateTime DateCompleted { get; public set; }
    public TimeSpan Duration { get; public set; }
    public List`1<string> CollectorsEnabled { get; }
    internal bool IsFromServer { get; internal set; }
    internal TestCaseResultHelper TestResultHelper { get; }
    public IAttachmentCollection Attachments { get; }
    internal TestResult(TestCaseResultHelper helper, int testRunId, int testResultId);
    internal TestResult(TestCaseResultHelper helper, TestCaseResultIdentifier id);
    internal virtual void PostLoad(TestCaseResultHelper helper);
    public virtual ObjectTypes get_ObjectType();
    public sealed virtual int get_TestResultId();
    public sealed virtual int get_TestRunId();
    public sealed virtual TestOutcome get_Outcome();
    public sealed virtual void set_Outcome(TestOutcome value);
    public sealed virtual string get_ErrorMessage();
    public sealed virtual void set_ErrorMessage(string value);
    public sealed virtual string get_Comment();
    public sealed virtual void set_Comment(string value);
    public sealed virtual TeamFoundationIdentity get_LastUpdatedBy();
    public sealed virtual string get_LastUpdatedByName();
    internal Guid get_LastUpdatedByTeamFoundationId();
    public sealed virtual DateTime get_DateCreated();
    internal void set_DateCreated(DateTime value);
    public sealed virtual DateTime get_LastUpdated();
    internal void set_LastUpdated(DateTime value);
    public sealed virtual DateTime get_DateStarted();
    public sealed virtual void set_DateStarted(DateTime value);
    public sealed virtual DateTime get_DateCompleted();
    public sealed virtual void set_DateCompleted(DateTime value);
    public sealed virtual TimeSpan get_Duration();
    public sealed virtual void set_Duration(TimeSpan value);
    public sealed virtual List`1<string> get_CollectorsEnabled();
    private List`1<string> GetCollectorsEnabled();
    internal bool get_IsFromServer();
    internal void set_IsFromServer(bool value);
    internal TestCaseResultHelper get_TestResultHelper();
    public virtual void Save();
    public virtual void Refresh();
    internal virtual void DeleteFromServer(DeleteAction action);
    internal virtual void OnDeletion();
    public abstract virtual ITestAttachment CreateAttachment(string localFileName);
    public abstract virtual ITestAttachment CreateAttachment(string sourceFileName, SourceFileAction deleteOnCompletion);
    public abstract virtual IAttachmentCollection get_Attachments();
    [CompilerGeneratedAttribute]
public sealed virtual void add_AttachmentUploadCompleted(UploadCompletionEventHandler value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_AttachmentUploadCompleted(UploadCompletionEventHandler value);
    public sealed virtual void FireAttachmentUploadCompleted(ITestAttachment attachment);
    internal static TestOutcome ToQU1Outcome(TestOutcome outcome);
    internal static TestOutcome FromQU1Outcome(TestOutcome outcome);
    internal static TestResult FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal abstract virtual void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, TestResult obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestResultAttachment : object {
    [CompilerGeneratedAttribute]
private PropertyChangedEventHandler PropertyChanged;
    private bool m_dirty;
    private Byte[] m_contentBytes;
    private int m_contentOffset;
    private int m_contentLength;
    private string m_contentFile;
    private string m_compressedFile;
    private long m_compressedFileLength;
    private AttachmentList m_owner;
    private bool m_defaultAfnStripFlag;
    private TestManagementTeamProject m_project;
    private bool m_deleteOnCompletion;
    private Uri m_artifactUri;
    private Byte[] m_hashValue;
    private static String[] fileExtensionsToNotCompress;
    private static int c_bulkDownloadBatch;
    private static int c_compressionBufferSize;
    private string m_actionPath;
    private string m_attachmentType;
    private string m_comment;
    private DateTime m_creationDate;
    private string m_downloadQueryString;
    private string m_fileName;
    private int m_id;
    private bool m_isComplete;
    private int m_iterationId;
    private long m_length;
    private int m_sessionId;
    private int m_testResultId;
    private int m_testRunId;
    private Guid m_tmiRunId;
    public string Comment { get; public set; }
    public string Name { get; public set; }
    public long Length { get; }
    public long CompressedLength { get; }
    public long StreamLength { get; }
    public string CompressedFile { get; }
    public bool IsCompressed { get; }
    public Uri Uri { get; }
    public string AttachmentType { get; public set; }
    public int Id { get; internal set; }
    internal bool IsDirty { get; internal set; }
    internal bool DefaultAfnStripFlag { get; internal set; }
    public int TestRunId { get; internal set; }
    public int TestResultId { get; internal set; }
    internal int SessionId { get; internal set; }
    public Guid TmiRunId { get; public set; }
    internal TestManagementTeamProject Project { get; internal set; }
    internal int IterationId { get; internal set; }
    internal string ActionPath { get; internal set; }
    internal AttachmentList Owner { get; internal set; }
    internal string ContentFile { get; internal set; }
    internal bool DeleteOnCompletion { get; }
    public bool IsComplete { get; }
    internal Byte[] HashValue { get; }
    public Uri ArtifactUri { get; }
    public string OutboundType { get; }
    public TestResultAttachment(string fileName, bool deleteOnCompletion);
    public TestResultAttachment(string fileName, bool deleteOnCompletion, bool defaultAfnStripFlag, string attachmentType);
    public TestResultAttachment(Byte[] contents, int offset, int length);
    internal TestResultAttachment(TestResultAttachment testResultAttachment);
    private static TestResultAttachment();
    internal TestResultAttachment Convert();
    public sealed virtual string get_Comment();
    public sealed virtual void set_Comment(string value);
    public sealed virtual string get_Name();
    public sealed virtual void set_Name(string value);
    public sealed virtual long get_Length();
    public long get_CompressedLength();
    public long get_StreamLength();
    public string get_CompressedFile();
    public bool get_IsCompressed();
    public sealed virtual void DownloadToArray(Byte[] contents, int offset);
    public sealed virtual void DownloadToFile(string localFileName);
    internal void CompressFile();
    private bool CanCompressFileType(string fileName);
    public sealed virtual Uri get_Uri();
    public sealed virtual string get_AttachmentType();
    public sealed virtual void set_AttachmentType(string value);
    public sealed virtual int get_Id();
    internal void set_Id(int value);
    internal bool get_IsDirty();
    internal void set_IsDirty(bool value);
    internal bool get_DefaultAfnStripFlag();
    internal void set_DefaultAfnStripFlag(bool value);
    public sealed virtual int get_TestRunId();
    internal void set_TestRunId(int value);
    public sealed virtual int get_TestResultId();
    internal void set_TestResultId(int value);
    internal int get_SessionId();
    internal void set_SessionId(int value);
    public sealed virtual Guid get_TmiRunId();
    public sealed virtual void set_TmiRunId(Guid value);
    internal TestManagementTeamProject get_Project();
    internal void set_Project(TestManagementTeamProject value);
    internal int get_IterationId();
    internal void set_IterationId(int value);
    internal string get_ActionPath();
    internal void set_ActionPath(string value);
    internal void RefreshAttachmentLength();
    private string CreateDownloadUrl();
    private Stream Download();
    private Stream ExecuteDownloadRequest();
    private HttpWebRequest CreateDownloadRequest(TfsConnection connection, CredentialsType credentialType, bool tryProxy, Boolean& isProxyUrl);
    internal void UploadCompleted();
    internal AttachmentList get_Owner();
    internal void set_Owner(AttachmentList value);
    internal Stream OpenCompressedContentStream();
    private Stream OpenContentStream();
    internal static void BulkDownload(TestManagementTeamProject project, List`1<TestResultAttachment> attachments, IList`1<string> localFiles);
    internal static string GetWebExceptionText(WebException e, HttpStatusCode& statusCode);
    private void Diagnostics(string format, Object[] values);
    internal string get_ContentFile();
    internal void set_ContentFile(string value);
    internal bool get_DeleteOnCompletion();
    public sealed virtual bool Equals(TestResultAttachment other);
    private sealed virtual override void Microsoft.TeamFoundation.TestManagement.Client.Internal.ITestManagementServerArtifact.AssociateWorkItem(WorkItem workItem);
    public sealed virtual void AssociateWorkItem(WorkItem workItem);
    public sealed virtual void DisassociateWorkItem(WorkItem workItem);
    public sealed virtual bool get_IsComplete();
    internal Byte[] get_HashValue();
    public sealed virtual Uri get_ArtifactUri();
    public sealed virtual string get_OutboundType();
    private void Setter(string property, T& oldValue, T newValue);
    [CompilerGeneratedAttribute]
public sealed virtual void add_PropertyChanged(PropertyChangedEventHandler value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_PropertyChanged(PropertyChangedEventHandler value);
    internal static TestResultAttachment FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, TestResultAttachment obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestResultAttachmentIdentity : object {
    private int m_attachmentId;
    private int m_sessionId;
    private int m_testResultId;
    private int m_testRunId;
    public int AttachmentId { get; public set; }
    public int SessionId { get; public set; }
    public int TestResultId { get; public set; }
    public int TestRunId { get; public set; }
    internal TestResultAttachmentIdentity(ITestAttachment attachment);
    public int get_AttachmentId();
    public void set_AttachmentId(int value);
    public int get_SessionId();
    public void set_SessionId(int value);
    public int get_TestResultId();
    public void set_TestResultId(int value);
    public int get_TestRunId();
    public void set_TestRunId(int value);
    internal static TestResultAttachmentIdentity FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, TestResultAttachmentIdentity obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestResultIdentity : ValueType {
    private int m_testRunId;
    private int m_testResultId;
    private int m_iterationId;
    private string m_actionPath;
    private int m_sessionId;
    private static int DefaultTestRunId;
    private static int DefaultTestResultId;
    private static int DefaultIterationId;
    private static int DefaultSessionId;
    internal int TestRunId { get; }
    internal int TestResultId { get; }
    internal int IterationId { get; }
    internal string ActionPath { get; }
    internal int SessionId { get; }
    internal TestResultIdentity(int testRunId);
    internal TestResultIdentity(int sessionId, bool isSession);
    internal TestResultIdentity(int testRunId, int testResultId);
    internal TestResultIdentity(TestCaseResultIdentifier id);
    internal TestResultIdentity(int testRunId, int testResultId, int iterationId);
    internal TestResultIdentity(int testRunId, int testResultId, int iterationId, string actionPath, int sessionId);
    internal int get_TestRunId();
    internal int get_TestResultId();
    internal int get_IterationId();
    internal string get_ActionPath();
    internal int get_SessionId();
}
public enum Microsoft.TeamFoundation.TestManagement.Client.TestResultLogFileType : Enum {
    public int value__;
    public static TestResultLogFileType Other;
    public static TestResultLogFileType AutomationLogFile;
    public static TestResultLogFileType Screenshot;
    public static TestResultLogFileType LogFolder;
}
public enum Microsoft.TeamFoundation.TestManagement.Client.TestResultLogPathType : Enum {
    public int value__;
    public static TestResultLogPathType None;
    public static TestResultLogPathType AzureBlobStorage;
    public static TestResultLogPathType URI;
    public static TestResultLogPathType UNC;
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestResultParameter : object {
    [CompilerGeneratedAttribute]
private PropertyChangedEventHandler PropertyChanged;
    private bool m_dirty;
    private string m_expectedValue;
    private string m_actualValue;
    private static Encoding s_encoding;
    private string m_actionPath;
    internal Byte[] m_actual;
    private byte m_dataType;
    internal Byte[] m_expected;
    private int m_iterationId;
    private string m_parameterName;
    private int m_testResultId;
    private int m_testRunId;
    public int TestRunId { get; }
    public int TestResultId { get; }
    public string Name { get; public set; }
    public string ExpectedValue { get; public set; }
    public string ActualValue { get; public set; }
    internal string ActionPath { get; }
    internal int IterationId { get; }
    internal TestResultParameter(string name);
    internal TestResultParameter(TestResultIdentity identity, string name);
    internal TestResultParameter(TestResultParameter x);
    private static TestResultParameter();
    internal TestResultParameter Convert();
    public int get_TestRunId();
    public int get_TestResultId();
    public sealed virtual string get_Name();
    public sealed virtual void set_Name(string value);
    public sealed virtual string get_ExpectedValue();
    public sealed virtual void set_ExpectedValue(string value);
    public sealed virtual string get_ActualValue();
    public sealed virtual void set_ActualValue(string value);
    internal static Byte[] ValueToBytes(string value);
    internal static string BytesToValue(Byte[] bytes);
    internal void PreSave(SubResults results, TestResultIdentity parent);
    internal void PostSave();
    internal void PostLoad(TestManagementTeamProject project);
    private void UpdateIdentity(TestResultIdentity identity);
    private void Setter(string property, T& oldValue, T newValue, bool markDirty);
    [CompilerGeneratedAttribute]
public sealed virtual void add_PropertyChanged(PropertyChangedEventHandler value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_PropertyChanged(PropertyChangedEventHandler value);
    internal string get_ActionPath();
    internal int get_IterationId();
    internal static TestResultParameter FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, TestResultParameter obj);
}
[DefaultMemberAttribute("Item")]
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public class Microsoft.TeamFoundation.TestManagement.Client.TestResultParameterCollection : ObservableCollection`1<ITestResultParameter> {
    private Dictionary`2<string, bool> m_deletes;
    public ITestResultParameter Item { get; }
    protected virtual void RemoveItem(int index);
    protected virtual void ClearItems();
    internal bool Remove(string name);
    internal void PreSave(SubResults subResults, TestResultIdentity owner);
    internal void PostSave();
    internal void PostLoad(TestManagementTeamProject project);
    private ITestResultParameter GetFromCollection(string name);
    public void Add(string name, string expectedValue, string actualValue);
    public bool ContainsKey(string name);
    public ITestResultParameter get_Item(string name);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestResultsServiceWrapper : TestResultsService {
    private Nullable`1<bool> m_serviceSupported;
    public bool IsSupported { get; }
    internal TestResultsServiceWrapper(TfsTeamProjectCollection server);
    public bool get_IsSupported();
    protected virtual TfsRequestSettings ApplyCustomSettings(TfsRequestSettings settings);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestResultsServiceWrapperEx : TestResultsServiceEx {
    private bool m_serviceLookedUp;
    private bool m_serviceSupported;
    public bool IsSupported { get; }
    internal TestResultsServiceWrapperEx(TfsTeamProjectCollection server);
    public bool get_IsSupported();
    protected virtual TfsRequestSettings ApplyCustomSettings(TfsRequestSettings settings);
}
[GenerateAllConstantsAttribute("")]
public enum Microsoft.TeamFoundation.TestManagement.Client.TestResultState : Enum {
    public int value__;
    public static TestResultState Unspecified;
    public static TestResultState Pending;
    public static TestResultState Queued;
    public static TestResultState InProgress;
    public static TestResultState Paused;
    public static TestResultState Completed;
    public static TestResultState MaxValue;
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestRun : TestRunBase {
    private static int s_testRunVersion;
    private TestMessageLogEntryCollection m_logEntries;
    private ObservableCollection`1<ITestMessageLogEntry> m_logCollection;
    private List`1<TestMessageLogEntry> m_logNewEntries;
    private TestRunStatistics m_statistics;
    private List`1<TestCaseResult> m_newResults;
    private static int s_resultsPerChunk;
    private int m_currentTestResultId;
    private string m_dropLocation;
    private DateTime m_dueDate;
    private string m_errorMessage;
    private int m_incompleteTests;
    private bool m_isAutomated;
    private bool m_isBvt;
    private string m_iteration;
    private string m_legacySharePath;
    private int m_notApplicableTests;
    private int m_passedTests;
    private byte m_postProcessState;
    private byte m_state;
    private int m_testMessageLogId;
    internal TestRunStatistic[] m_testRunStatistics;
    private int m_totalTests;
    private byte m_type;
    private int m_unanalyzedTests;
    private int m_version;
    public ObjectTypes ObjectType { get; }
    internal int TestMessageLogId { get; }
    private ITestManagementTeamProject Microsoft.TeamFoundation.TestManagement.Client.ITestRun.Project { get; }
    public string BuildDirectory { get; public set; }
    public TestRunState State { get; public set; }
    public PostProcessState PostProcessState { get; internal set; }
    public DateTime DateDue { get; public set; }
    public ITestRunStatistics Statistics { get; internal set; }
    public string ErrorMessage { get; public set; }
    public string Iteration { get; public set; }
    public string LegacySharePath { get; public set; }
    public TestRunType Type { get; public set; }
    public bool IsAutomated { get; public set; }
    public int Version { get; internal set; }
    public bool IsBvt { get; public set; }
    public int TotalTests { get; }
    public int IncompleteTests { get; }
    public int NotApplicableTests { get; }
    public int PassedTests { get; }
    public int UnanalyzedTests { get; }
    internal TestResultIdentity Identity { get; }
    internal static int ResultsPerChunk { get; private set; }
    public TestMessageLogEntryCollection TestMessageLogEntries { get; }
    internal TestRun(TestRunHelper helper);
    internal TestRun(TestRunHelper helper, TestPlan plan, bool isAutomated);
    internal TestRun(TestRun testRun);
    private static TestRun();
    public virtual ObjectTypes get_ObjectType();
    internal int get_TestMessageLogId();
    private sealed virtual override ITestManagementTeamProject Microsoft.TeamFoundation.TestManagement.Client.ITestRun.get_Project();
    public sealed virtual string get_BuildDirectory();
    public sealed virtual void set_BuildDirectory(string value);
    public sealed virtual TestRunState get_State();
    public sealed virtual void set_State(TestRunState value);
    public sealed virtual PostProcessState get_PostProcessState();
    internal void set_PostProcessState(PostProcessState value);
    public sealed virtual DateTime get_DateDue();
    public sealed virtual void set_DateDue(DateTime value);
    internal void set_Statistics(ITestRunStatistics value);
    public sealed virtual ITestRunStatistics get_Statistics();
    public sealed virtual string get_ErrorMessage();
    public sealed virtual void set_ErrorMessage(string value);
    public sealed virtual string get_Iteration();
    public sealed virtual void set_Iteration(string value);
    public string get_LegacySharePath();
    public void set_LegacySharePath(string value);
    public sealed virtual TestRunType get_Type();
    public sealed virtual void set_Type(TestRunType value);
    public sealed virtual bool get_IsAutomated();
    public sealed virtual void set_IsAutomated(bool value);
    public sealed virtual int get_Version();
    internal void set_Version(int value);
    public sealed virtual bool get_IsBvt();
    public sealed virtual void set_IsBvt(bool value);
    public sealed virtual int get_TotalTests();
    public sealed virtual int get_IncompleteTests();
    public sealed virtual int get_NotApplicableTests();
    public sealed virtual int get_PassedTests();
    public sealed virtual int get_UnanalyzedTests();
    internal virtual TestResultIdentity get_Identity();
    internal static int get_ResultsPerChunk();
    private static void set_ResultsPerChunk(int value);
    public sealed virtual ITestCaseResult AddTest(int configurationId, string testCaseTitle, string testCaseAreaUri, ITmiTestImplementation implementation);
    public sealed virtual ITestCaseResult AddTest(string testName);
    public sealed virtual void AddTest(int testCaseId, int configurationId, TeamFoundationIdentity owner);
    public sealed virtual void AddTests(IList`1<ITestCaseProperties> testCasesProperties, IList`1<int> configurationIds);
    public sealed virtual void AddTestPoint(ITestPoint point, TeamFoundationIdentity owner);
    public sealed virtual ITestCaseResultCollection AddTestPoints(IEnumerable`1<ITestPoint> points, TeamFoundationIdentity owner);
    public sealed virtual ITestCaseResultCollection QueryResultsByOwner(TeamFoundationIdentity owner);
    public sealed virtual ITestCaseResultCollection QueryResults(bool includeActionResults);
    public sealed virtual ITestCaseResultCollection QueryResults();
    public sealed virtual ITestCaseResultCollection QueryResultsByOutcome(TestOutcome outcome);
    public sealed virtual ITestCaseResultCollection QueryResultsByStatus(TestResultState status);
    public sealed virtual void Abort();
    public sealed virtual void Abort(TestRunAbortOptions options);
    public sealed virtual bool Refresh(DateTime lastUpdatedTime);
    public virtual void Refresh();
    internal virtual void DeleteFromServer(DeleteAction action);
    public virtual void Save();
    protected virtual TestResultAttachment[] FetchAttachmentsFromServer();
    protected virtual bool ValidateComment(string commentPropertyName, string comment);
    internal virtual void RefreshFrom(object source);
    private int GetTestResultId();
    private void RefreshFromTestRun(TestRun testRun);
    private void SaveExistingRun(bool uploadInBackground);
    private void SaveNewRun(bool uploadInBackground);
    private Int32[] UpdateAfterSaveNew(bool uploadInBackground, TestRun newRun);
    private void TryDeleteRun(int testRunId);
    private TestRun GetTestRun();
    internal ITestCaseResult InternalAddTestPoint(ITestPoint point, TeamFoundationIdentity owner);
    internal ITestCaseResult InternalAddTest(int testCaseId, int configurationId, string configurationName, int testPointId, Guid owner);
    internal void PostLoad(TestManagementTeamProject project);
    internal static int SetResultsPerChunkForUnitTest(int value);
    public sealed virtual TestMessageLogEntryCollection get_TestMessageLogEntries();
    public sealed virtual void CreateLogEntry(string message, TestMessageLogEntryLevel level);
    public sealed virtual void SaveLogEntries();
    public sealed virtual void RefreshLogEntries();
    internal static TestRun FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal virtual void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, TestRun obj);
}
[FlagsAttribute]
public enum Microsoft.TeamFoundation.TestManagement.Client.TestRunAbortOptions : Enum {
    public int value__;
    public static TestRunAbortOptions None;
    public static TestRunAbortOptions DeleteUnexecutedResults;
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal abstract class Microsoft.TeamFoundation.TestManagement.Client.TestRunBase : SimpleClientObject {
    protected bool m_testSettingsChanged;
    protected TestSettings m_testSettings;
    protected AttachmentList m_attachments;
    [CompilerGeneratedAttribute]
private UploadCompletionEventHandler AttachmentUploadCompleted;
    private Version m_version;
    protected int m_bugsCount;
    protected int m_buildConfigurationId;
    protected string m_buildFlavor;
    protected string m_buildNumber;
    protected string m_buildPlatform;
    protected string m_buildUri;
    protected string m_comment;
    protected DateTime m_completeDate;
    protected string m_controller;
    protected DateTime m_creationDate;
    protected DateTime m_lastUpdated;
    protected Guid m_lastUpdatedBy;
    protected string m_lastUpdatedByName;
    protected Guid m_owner;
    protected string m_ownerName;
    protected int m_publicTestSettingsId;
    protected string m_serviceVersion;
    protected DateTime m_startDate;
    protected string m_teamProject;
    protected Guid m_testEnvironmentId;
    protected int m_testPlanId;
    protected int m_testSettingsId;
    protected string m_title;
    internal int LocalTestSettingsId { get; }
    public string Title { get; public set; }
    public Uri BuildUri { get; public set; }
    public string BuildNumber { get; public set; }
    public int BuildConfigurationId { get; internal set; }
    public string BuildPlatform { get; public set; }
    public string BuildFlavor { get; public set; }
    public DateTime DateCreated { get; internal set; }
    public DateTime DateStarted { get; public set; }
    public DateTime DateCompleted { get; public set; }
    public DateTime LastUpdated { get; internal set; }
    public TeamFoundationIdentity LastUpdatedBy { get; }
    internal Guid LastUpdatedByTeamFoundationId { get; }
    public string LastUpdatedByName { get; }
    public TeamFoundationIdentity Owner { get; public set; }
    public Guid OwnerTeamFoundationId { get; public set; }
    public string OwnerName { get; }
    public int TestPlanId { get; public set; }
    public IAttachmentCollection Attachments { get; }
    public string Controller { get; public set; }
    public int TestSettingsId { get; public set; }
    public Guid TestEnvironmentId { get; public set; }
    private ITestSettings Microsoft.TeamFoundation.TestManagement.Client.ITestRunBase.TestSettings { get; }
    public TestSettings TestSettings { get; }
    internal string ProjectName { get; internal set; }
    public string Comment { get; public set; }
    public int LinkedWorkItemCount { get; }
    internal TestResultIdentity Identity { get; }
    internal Version ServiceVersion { get; }
    internal TestRunBase(IClientObjectHelper helper);
    internal int get_LocalTestSettingsId();
    public sealed virtual string get_Title();
    public sealed virtual void set_Title(string value);
    public sealed virtual Uri get_BuildUri();
    public sealed virtual void set_BuildUri(Uri value);
    public sealed virtual string get_BuildNumber();
    public sealed virtual void set_BuildNumber(string value);
    public sealed virtual int get_BuildConfigurationId();
    internal void set_BuildConfigurationId(int value);
    public sealed virtual string get_BuildPlatform();
    public sealed virtual void set_BuildPlatform(string value);
    public sealed virtual string get_BuildFlavor();
    public sealed virtual void set_BuildFlavor(string value);
    public sealed virtual DateTime get_DateCreated();
    internal void set_DateCreated(DateTime value);
    public sealed virtual DateTime get_DateStarted();
    public sealed virtual void set_DateStarted(DateTime value);
    public sealed virtual DateTime get_DateCompleted();
    public sealed virtual void set_DateCompleted(DateTime value);
    public sealed virtual DateTime get_LastUpdated();
    internal void set_LastUpdated(DateTime value);
    public sealed virtual TeamFoundationIdentity get_LastUpdatedBy();
    internal Guid get_LastUpdatedByTeamFoundationId();
    public sealed virtual string get_LastUpdatedByName();
    public sealed virtual TeamFoundationIdentity get_Owner();
    public sealed virtual void set_Owner(TeamFoundationIdentity value);
    public sealed virtual Guid get_OwnerTeamFoundationId();
    public sealed virtual void set_OwnerTeamFoundationId(Guid value);
    public sealed virtual string get_OwnerName();
    public sealed virtual int get_TestPlanId();
    public void set_TestPlanId(int value);
    public sealed virtual IAttachmentCollection get_Attachments();
    public sealed virtual string get_Controller();
    public sealed virtual void set_Controller(string value);
    public sealed virtual int get_TestSettingsId();
    public void set_TestSettingsId(int value);
    public sealed virtual Guid get_TestEnvironmentId();
    public sealed virtual void set_TestEnvironmentId(Guid value);
    private sealed virtual override ITestSettings Microsoft.TeamFoundation.TestManagement.Client.ITestRunBase.get_TestSettings();
    public TestSettings get_TestSettings();
    internal string get_ProjectName();
    internal void set_ProjectName(string value);
    public sealed virtual string get_Comment();
    public sealed virtual void set_Comment(string value);
    public sealed virtual int get_LinkedWorkItemCount();
    internal abstract virtual TestResultIdentity get_Identity();
    internal Version get_ServiceVersion();
    protected abstract virtual TestResultAttachment[] FetchAttachmentsFromServer();
    protected void CopyTestSettings(int testSettingsId);
    public sealed virtual void CopyTestSettings(ITestSettings settings);
    protected void SaveTestSettings();
    private void FetchTestSettingsIfNeeded();
    protected void CheckPlanExists();
    public sealed virtual ITestAttachment CreateAttachment(string localFileName);
    public sealed virtual ITestAttachment CreateAttachment(string sourceFileName, SourceFileAction deleteOnCompletion);
    public sealed virtual ITestAttachment CreateAttachment(Byte[] contents, int offset, int length);
    public sealed virtual void FireAttachmentUploadCompleted(ITestAttachment attachment);
    protected abstract virtual bool ValidateComment(string commentPropertyName, string comment);
    internal void EnsureIdentitiesInCache();
    internal bool HasUserDisplayName();
    [CompilerGeneratedAttribute]
public sealed virtual void add_AttachmentUploadCompleted(UploadCompletionEventHandler value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_AttachmentUploadCompleted(UploadCompletionEventHandler value);
    internal static TestRunBase FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal abstract virtual void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, TestRunBase obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestRunCoverage : Coverage {
    private int m_testRunId;
    public int TestRunId { get; public set; }
    internal TestRunCoverage(ITestRun testRun);
    public sealed virtual int get_TestRunId();
    public void set_TestRunId(int value);
    internal static TestRunCoverage FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal virtual void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, TestRunCoverage obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestRunHelper : ClientObjectHelper`3<ITestRun, TestRun, int> {
    internal TestRunHelper(TestManagementTeamProject project);
    public virtual ITestRun Create();
    public sealed virtual ITestRun Find(int testRunId);
    public sealed virtual IEnumerable`1<ITestRun> Query(string queryText);
    public sealed virtual IEnumerable`1<ITestRun> Query(string queryText, bool includeStats);
    public sealed virtual int Count(string queryText);
    public sealed virtual IEnumerable`1<ITestRun> ByOwner(TeamFoundationIdentity owner);
    public sealed virtual IEnumerable`1<ITestRun> ByBuild(Uri buildUri);
    public sealed virtual void Delete(IEnumerable`1<ITestRun> runs);
    public sealed virtual void DeleteByBuild(Uri buildUri);
    private void DeleteTestRuns(Int32[] ids);
    private IEnumerable`1<ITestRun> GenericRunQuery(TestRunQueryDelegate query);
}
[GenerateAllConstantsAttribute("")]
public enum Microsoft.TeamFoundation.TestManagement.Client.TestRunState : Enum {
    public int value__;
    public static TestRunState Unspecified;
    public static TestRunState NotStarted;
    public static TestRunState InProgress;
    public static TestRunState Completed;
    public static TestRunState Aborted;
    public static TestRunState Waiting;
    public static TestRunState NeedsInvestigation;
    public static TestRunState MaxValue;
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestRunStatistic : object {
    private int m_count;
    private byte m_outcome;
    private TestResolutionState m_resolutionState;
    private byte m_state;
    public TestResultState ResultState { get; }
    public TestOutcome ResultOutcome { get; internal set; }
    public ITestResolutionState ResolutionState { get; }
    public int Count { get; }
    internal TestRunStatistic(TestRunStatistic x);
    public sealed virtual TestResultState get_ResultState();
    public sealed virtual TestOutcome get_ResultOutcome();
    internal void set_ResultOutcome(TestOutcome value);
    public sealed virtual ITestResolutionState get_ResolutionState();
    public sealed virtual int get_Count();
    internal static TestRunStatistic FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, TestRunStatistic obj);
}
[DefaultMemberAttribute("Item")]
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestRunStatistics : object {
    [CompilerGeneratedAttribute]
private PropertyChangedEventHandler PropertyChanged;
    private Int32[] m_counters;
    private TestManagementTeamProject m_project;
    private Dictionary`2<int, int> m_resolutionStates;
    private int m_testRunId;
    private List`1<ITestResolutionStateStatistic> m_testResolutionStatistics;
    private ITestRunStatistic[] m_statistics;
    private static int TotalIndex;
    private static int ResultStateIndex;
    private static int OutcomeIndex;
    private static int MaxIndex;
    public IList`1<ITestResolutionStateStatistic> TestResolutionStatistics { get; }
    public int Item { get; }
    public int Item { get; }
    public int TotalTests { get; }
    public int PassedTests { get; }
    public int FailedTests { get; }
    public int InconclusiveTests { get; }
    public int CompletedTests { get; }
    public int InProgressTests { get; }
    public int PendingTests { get; }
    internal TestRunStatistics(TestManagementTeamProject project, int testRunId);
    internal TestRunStatistics(TestManagementTeamProject project, int testRunId, ITestRunStatistic[] testRunStatistics);
    public sealed virtual void Refresh();
    private void UpdateCounters();
    public sealed virtual ITestRunStatistic[] GetStatistics();
    public sealed virtual IList`1<ITestResolutionStateStatistic> get_TestResolutionStatistics();
    private void PropertyChange(string property, int oldValue, int newValue);
    [CompilerGeneratedAttribute]
public sealed virtual void add_PropertyChanged(PropertyChangedEventHandler value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_PropertyChanged(PropertyChangedEventHandler value);
    public sealed virtual int get_Item(TestResultState resultState);
    public sealed virtual int get_Item(TestOutcome outcome);
    public sealed virtual int get_TotalTests();
    public sealed virtual int get_PassedTests();
    public sealed virtual int get_FailedTests();
    public sealed virtual int get_InconclusiveTests();
    public sealed virtual int get_CompletedTests();
    public sealed virtual int get_InProgressTests();
    public sealed virtual int get_PendingTests();
    private int ToIndex(TestResultState resultState);
    private int ToIndex(TestOutcome outcome);
}
public enum Microsoft.TeamFoundation.TestManagement.Client.TestRunType : Enum {
    public int value__;
    public static TestRunType Unspecified;
    public static TestRunType Normal;
    public static TestRunType Blocking;
    public static TestRunType Web;
    public static TestRunType MtrRunInitiatedFromWeb;
    public static TestRunType RunWithDtlEnv;
    public static TestRunType NoConfigRun;
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestSettings : SimpleClientObject {
    private TestSettingsMachineRoleCollection m_machineRoleCollection;
    private string m_areaPath;
    private Guid m_createdBy;
    private string m_createdByName;
    private DateTime m_createdDate;
    private string m_description;
    private bool m_isAutomated;
    private bool m_isPublic;
    private DateTime m_lastUpdated;
    private Guid m_lastUpdatedBy;
    private string m_lastUpdatedByName;
    internal TestSettingsMachineRole[] m_machineRoles;
    private string m_name;
    private string m_settings;
    public ObjectTypes ObjectType { get; }
    public bool IsPublic { get; internal set; }
    public bool IsAutomated { get; public set; }
    public string Name { get; public set; }
    public string Description { get; public set; }
    public TeamFoundationIdentity CreatedBy { get; }
    public string CreatedByName { get; }
    public DateTime CreatedDate { get; internal set; }
    public string AreaPath { get; public set; }
    public TeamFoundationIdentity LastUpdatedBy { get; }
    public string LastUpdatedByName { get; }
    public DateTime LastUpdated { get; internal set; }
    public XmlElement Settings { get; public set; }
    public ITestSettingsMachineRoleCollection MachineRoles { get; }
    internal TestSettings(TestSettingsHelper helper);
    internal TestSettings(TestSettingsHelper helper, bool IsPublic);
    internal TestSettings(TestSettings testSettings);
    public virtual ObjectTypes get_ObjectType();
    public bool get_IsPublic();
    internal void set_IsPublic(bool value);
    public sealed virtual bool get_IsAutomated();
    public sealed virtual void set_IsAutomated(bool value);
    public sealed virtual string get_Name();
    public sealed virtual void set_Name(string value);
    public sealed virtual string get_Description();
    public sealed virtual void set_Description(string value);
    public sealed virtual TeamFoundationIdentity get_CreatedBy();
    public sealed virtual string get_CreatedByName();
    public sealed virtual DateTime get_CreatedDate();
    internal void set_CreatedDate(DateTime value);
    public sealed virtual string get_AreaPath();
    public sealed virtual void set_AreaPath(string value);
    public sealed virtual TeamFoundationIdentity get_LastUpdatedBy();
    public sealed virtual string get_LastUpdatedByName();
    public sealed virtual DateTime get_LastUpdated();
    internal void set_LastUpdated(DateTime value);
    public sealed virtual XmlElement get_Settings();
    public sealed virtual void set_Settings(XmlElement value);
    public sealed virtual ITestSettingsMachineRoleCollection get_MachineRoles();
    internal virtual void DeleteFromServer(DeleteAction action);
    public virtual void Refresh();
    internal virtual void RefreshFrom(object source);
    public virtual void Save();
    internal void CopyTestSettings(ITestSettings settings);
    internal static TestSettings FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, TestSettings obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestSettingsHelper : ClientObjectHelper`3<ITestSettings, TestSettings, int> {
    internal TestSettingsHelper(TestManagementTeamProject project);
    public virtual ITestSettings Create();
    public sealed virtual ITestSettings Find(int settingsId);
    [IteratorStateMachineAttribute("Microsoft.TeamFoundation.TestManagement.Client.TestSettingsHelper/<Query>d__3")]
public sealed virtual IEnumerable`1<ITestSettings> Query(string queryText);
    public sealed virtual int Count(string queryText);
    internal ITestSettings Create(bool IsPublic);
    public sealed virtual IEnumerable`1<ITestSettings> CreateFromFile(string fileName);
    internal static List`1<ITestSettings> Parse(string fileName, TestManagementTeamProject project);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestSettingsMachineRole : PropertyOwner {
    private bool m_isExecution;
    private string m_name;
    public Guid Id { get; }
    public bool IsExecution { get; public set; }
    public string Name { get; public set; }
    public sealed virtual Guid get_Id();
    public sealed virtual bool get_IsExecution();
    public sealed virtual void set_IsExecution(bool value);
    public sealed virtual string get_Name();
    public sealed virtual void set_Name(string value);
    internal static TestSettingsMachineRole FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, TestSettingsMachineRole obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestSettingsMachineRoleCollection : GenericCollection`2<ITestSettingsMachineRole, TestSettingsMachineRole> {
    internal TestSettingsMachineRoleCollection(IEnumerable`1<TestSettingsMachineRole> items);
    public sealed virtual ITestSettingsMachineRole Create();
    internal void PreSave();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestStep : TestAction {
    public static string ElementName;
    private static string TypeAttributeName;
    private static string DescriptionElementName;
    private ParameterizedString m_title;
    private ParameterizedString m_expectedResult;
    private string m_description;
    private TestStepType m_stepType;
    private TestStepAttachmentList m_attachments;
    public ParameterizedString Title { get; public set; }
    public ParameterizedString ExpectedResult { get; public set; }
    public string Description { get; public set; }
    public TestStepType TestStepType { get; public set; }
    public IAttachmentCollection Attachments { get; }
    public TestStep(ITestActionOwner owner);
    public TestStep(ITestActionOwner owner, int id);
    public virtual string ToString();
    public sealed virtual ParameterizedString get_Title();
    public sealed virtual void set_Title(ParameterizedString value);
    public sealed virtual ParameterizedString get_ExpectedResult();
    public sealed virtual void set_ExpectedResult(ParameterizedString value);
    public sealed virtual string get_Description();
    public sealed virtual void set_Description(string value);
    public sealed virtual TestStepType get_TestStepType();
    public sealed virtual void set_TestStepType(TestStepType value);
    public sealed virtual ITestAttachment CreateAttachment(string localFileName);
    public sealed virtual IAttachmentCollection get_Attachments();
    private List`1<TestCaseAttachment> CopyAttachmentsForNewOwner(ITestBase newOwner);
    public virtual ITestAction CopyToNewOwner(ITestBase newOwner);
    internal virtual void SetOwner(ITestActionOwner newOwner);
    protected internal virtual void OnConnection(OnConnectionReason reason);
    internal void RenameParameter(string oldName, string newName);
    internal void ReplaceParameter(string name, string replacementText);
    private void AddParameterReferences();
    private void RemoveParameterReferences();
    private void AddParameterReferences(ParameterizedString value);
    private void RemoveParameterReferences(ParameterizedString value);
    public virtual void FromXml(XmlReader reader);
    public virtual void ToXml(XmlWriter writer);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestStepAttachmentList : FilteredAttachmentList {
    private static string MetaPrefix;
    public TestStepAttachmentList(int stepId, AttachmentCollection ownerCollection, bool connected, ITestManagementTeamProject project);
    internal static string GetMetaStringFromId(int id);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestStepResult : TestActionResult {
    private TestResultParameterCollection m_parameters;
    public TestResultParameterCollection Parameters { get; }
    internal TestStepResult(TestCaseResultHelper helper, int actionId);
    public sealed virtual TestResultParameterCollection get_Parameters();
    internal virtual void PreSave(SubResults subResults, TestResultIdentity parent);
    internal virtual void PostLoad(TestCaseResultHelper helper);
    internal virtual void PostSave();
    internal static TestStepResult FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal virtual void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, TestStepResult obj);
}
public enum Microsoft.TeamFoundation.TestManagement.Client.TestStepType : Enum {
    public int value__;
    public static TestStepType ActionStep;
    public static TestStepType ValidateStep;
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal abstract class Microsoft.TeamFoundation.TestManagement.Client.TestSuite : SimpleClientObject {
    private string m_title;
    private string m_description;
    private Guid m_lastUpdatedBy;
    private DateTime m_lastUpdated;
    private int m_testCaseCount;
    private TestSuiteState m_state;
    private string m_status;
    private IList`1<IdAndName> m_defaultConfigurations;
    private bool m_inheritDefaultConfigurations;
    private int m_refreshCount;
    private int m_instance;
    private TestSuiteEntry[] m_serverEntries;
    private TestManagementException m_entryException;
    private TestSuiteEntryCollection m_testCases;
    private TestSuiteEntryCollection m_entryCollection;
    private TestPlan m_plan;
    private TestSuiteProcessConfigHelper m_processConfigHelper;
    private int m_parentId;
    private static int s_instance;
    private StaticTestSuite m_parentSuite;
    private bool m_hasUserDisplayName;
    protected bool m_isPartial;
    public ObjectTypes ObjectType { get; }
    public ITestPlan Plan { get; internal set; }
    internal IdAndRev IdAndRev { get; }
    public bool IsRoot { get; }
    public bool IsStaticTestSuite { get; }
    public bool IsDynamicTestSuite { get; }
    public bool IsRequirementTestSuite { get; }
    public string Title { get; public set; }
    public string Description { get; public set; }
    public TestSuiteState State { get; public set; }
    public string Status { get; public set; }
    public TeamFoundationIdentity LastUpdatedBy { get; }
    public string LastUpdatedByName { get; }
    internal Guid LastUpdatedByGuid { get; }
    public DateTime LastUpdated { get; internal set; }
    public int TestCaseCount { get; internal set; }
    internal TestSuiteProcessConfigHelper ProcessConfigHelper { get; }
    protected bool IsRefreshing { get; }
    public TestManagementException EntriesException { get; internal set; }
    protected IEnumerable`1<TestSuite> Suites { get; }
    public ITestSuiteEntry TestSuiteEntry { get; }
    public TestSuiteType TestSuiteType { get; }
    internal TestSuiteHelper TestSuiteHelper { get; }
    internal StaticTestSuite Parent { get; internal set; }
    internal TestSuite TopSuite { get; }
    private IStaticTestSuite Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteBase.Parent { get; }
    public ITestSuiteEntryCollection TestCases { get; }
    public ITestCaseCollection AllTestCases { get; }
    public IList`1<IdAndName> DefaultConfigurations { get; internal set; }
    internal TestSuite InheritConfigurationsFrom { get; }
    internal TestSuiteEntryCollection Entries { get; }
    internal int ParentId { get; internal set; }
    internal TestSuite(TestSuiteHelper helper, TestPlan plan, int id, bool isPartial);
    internal TestSuite(TestSuiteHelper helper, TestPlan plan);
    public virtual ObjectTypes get_ObjectType();
    public sealed virtual ITestPlan get_Plan();
    internal void set_Plan(ITestPlan value);
    protected void OnCollectionsNeeded();
    protected virtual void CreateCollections();
    protected void CreateCollections(List`1<TestSuiteEntry> childEntriesToReuse);
    internal void SetServerSuite(ServerTestSuite serverSuite, bool noNotify);
    internal virtual void CopyPropertiesFromServerSuite(ServerTestSuite serverSuite);
    internal IdAndRev get_IdAndRev();
    public sealed virtual bool get_IsRoot();
    public bool get_IsStaticTestSuite();
    public bool get_IsDynamicTestSuite();
    public bool get_IsRequirementTestSuite();
    public sealed virtual string get_Title();
    public sealed virtual void set_Title(string value);
    private void SetTitle(string title);
    public sealed virtual string get_Description();
    public sealed virtual void set_Description(string value);
    public sealed virtual TestSuiteState get_State();
    public sealed virtual void set_State(TestSuiteState value);
    public sealed virtual string get_Status();
    public sealed virtual void set_Status(string value);
    public sealed virtual TeamFoundationIdentity get_LastUpdatedBy();
    public sealed virtual string get_LastUpdatedByName();
    internal Guid get_LastUpdatedByGuid();
    public sealed virtual DateTime get_LastUpdated();
    internal void set_LastUpdated(DateTime value);
    public sealed virtual int get_TestCaseCount();
    internal void set_TestCaseCount(int value);
    internal TestSuiteProcessConfigHelper get_ProcessConfigHelper();
    internal void UpdateServer(ServerTestSuite serverSuite);
    private string GetStatusFromTestSuiteState();
    private TestSuiteState GetTestSuiteStateFromStatus(string newStatus);
    internal virtual void UpdateProperties(UpdatedProperties updatedProps);
    internal virtual void DeleteFromServer(DeleteAction deleteAction);
    internal virtual void Validate();
    protected internal virtual ServerTestSuite PreSave();
    internal void RefreshBegin();
    internal void RefreshEnd();
    protected bool get_IsRefreshing();
    public virtual void Refresh();
    public sealed virtual void Refresh(bool force);
    private void RefreshTree(bool force, int selectedSuiteId);
    internal void RefreshSingle();
    private void RefreshTestCases();
    internal Dictionary`2<int, ServerTestSuite> GetRefreshData(bool force, int selectedSuiteId);
    private void RefreshTreePrune(Dictionary`2<int, TestSuiteEntry> orphanSuites, Dictionary`2<int, ServerTestSuite> refreshData);
    private void RefreshTreeRebuild(Dictionary`2<int, TestSuiteEntry> orphans, Dictionary`2<int, ServerTestSuite> refreshData);
    private void InsertChild(int index, TestSuiteEntry entry);
    private void InsertSuiteEntry(int newIndex, TestSuiteEntry entry);
    private void RemoveChild(int index);
    public sealed virtual TestManagementException get_EntriesException();
    internal void set_EntriesException(TestManagementException value);
    internal virtual void OnDeletion();
    internal virtual void OnInsertCases(int index, IEnumerable`1<ITestCase> cases, bool ignoreDuplicates);
    internal virtual void OnRemoveCases(IEnumerable`1<ITestCase> cases);
    internal virtual void OnRemoveEntries(IEnumerable`1<ITestSuiteEntry> entries);
    internal virtual void OnBulkMove(int toIndex, IEnumerable`1<ITestSuiteEntry> entries);
    internal void OnInternalBulkMove(TestSuite destination, int toIndex, IEnumerable`1<ITestSuiteEntry> entries, bool ignoreDuplicates);
    internal void OnInternalBulkCopy(TestSuite destination, int toIndex, IEnumerable`1<ITestSuiteEntry> entries, bool ignoreDuplicates);
    internal virtual void OnClearItems();
    internal virtual void OnInsertItem(int index, ITestSuiteEntry entry);
    internal virtual void OnMoveItem(int oldIndex, int newIndex);
    internal virtual void OnSetItem(int index, ITestSuiteEntry entry);
    internal virtual void OnRemoveItem(int index);
    internal virtual void ClearEntries();
    internal virtual void InsertEntry(int index, TestSuiteEntry entry);
    internal virtual void MoveEntry(int oldIndex, int newIndex);
    internal virtual void RemoveEntry(int index);
    internal virtual void SetEntry(int index, TestSuiteEntry entry);
    private void CasesRemoveEntry(int index);
    private void CasesSetEntry(int index, TestSuiteEntry newEntry);
    private void CasesMoveEntry(int oldIndex, int newIndex);
    private void CasesInsertEntry(int index, TestSuiteEntry item);
    private void CasesClearEntries();
    private int TestCasesIndex(int entriesIndex);
    private int IndexOfEntry(TestSuiteEntry entry);
    private int IndexOfCase(int caseId);
    [IteratorStateMachineAttribute("Microsoft.TeamFoundation.TestManagement.Client.TestSuite/<get_Suites>d__101")]
protected virtual IEnumerable`1<TestSuite> get_Suites();
    internal void OnChildSuiteDelete(TestSuite childSuite);
    internal void OnChildSuiteDeleted(TestSuiteEntry childSuiteEntry);
    [IteratorStateMachineAttribute("Microsoft.TeamFoundation.TestManagement.Client.TestSuite/<GetSuitesInSuite>d__104")]
private IEnumerable`1<TestSuite> GetSuitesInSuite();
    private void GatherAll(Stack`1<ITestSuiteBase> ancestors, Dictionary`2<int, ITestCase> results);
    protected virtual void SyncWithServerEntries(TestSuiteEntry[] newEntries, Dictionary`2<int, TestSuiteEntry> suitesEntriesToReuse);
    internal virtual string SafeToString();
    private void CheckIfChildrenAllowed();
    public sealed virtual ITestSuiteEntry get_TestSuiteEntry();
    public abstract virtual TestSuiteType get_TestSuiteType();
    public virtual void Save();
    internal TestSuiteHelper get_TestSuiteHelper();
    internal StaticTestSuite get_Parent();
    internal void set_Parent(StaticTestSuite value);
    internal TestSuite get_TopSuite();
    private sealed virtual override IStaticTestSuite Microsoft.TeamFoundation.TestManagement.Client.ITestSuiteBase.get_Parent();
    public sealed virtual ITestSuiteEntryCollection get_TestCases();
    public sealed virtual ITestCaseCollection get_AllTestCases();
    public sealed virtual IList`1<IdAndName> get_DefaultConfigurations();
    internal void set_DefaultConfigurations(IList`1<IdAndName> value);
    internal TestSuite get_InheritConfigurationsFrom();
    public sealed virtual void ClearDefaultConfigurations();
    public sealed virtual void SetDefaultConfigurations(IEnumerable`1<IdAndName> configurations);
    internal void RefreshTestCase(int testCaseId);
    public sealed virtual void SetEntryConfigurations(IEnumerable`1<ITestSuiteEntry> entries, IEnumerable`1<IdAndName> configurations);
    internal TestSuiteEntryCollection get_Entries();
    internal int get_ParentId();
    internal void set_ParentId(int value);
    public sealed virtual ITestPointAssignment CreateTestPointAssignment(int testCaseId, IdAndName configuration, TeamFoundationIdentity assignedTo);
    public sealed virtual ITestPointAssignment CreateTestPointAssignment(int testCaseId, IdAndName configuration, Guid assignedTo);
    public sealed virtual void AssignTestPoints(IEnumerable`1<ITestPointAssignment> assignments);
    internal void DumpToLog(string prefix, bool goDeep);
    internal bool HasUserDisplayName();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestSuiteCollection : ClientObjectCollection`3<ITestSuiteBase, TestSuite, int> {
    [CompilerGeneratedAttribute]
private StaticTestSuite <Parent>k__BackingField;
    internal StaticTestSuite Parent { get; internal set; }
    internal TestSuiteHelper Helper { get; }
    internal TestSuiteCollection(TestSuiteHelper helper);
    internal TestSuiteCollection(TestSuiteHelper helper, IEnumerable`1<TestSuite> suites);
    internal static HashSet`1<Guid> GatherUserIds(TestSuiteHelper helper, IEnumerable`1<TestSuite> suites);
    [CompilerGeneratedAttribute]
internal StaticTestSuite get_Parent();
    [CompilerGeneratedAttribute]
internal void set_Parent(StaticTestSuite value);
    internal virtual Int32[] Fetch(Dictionary`2<int, TestSuite> itemsByKey);
    internal virtual TestSuite[] Fetch(ClientObjectIdRev`1[] ids, Int32[]& deleted, ICollection`1& identities);
    internal TestSuiteHelper get_Helper();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestSuiteEntry : PropertyOwner {
    private ITestObject`1<int> m_testObject;
    private TestSuite m_parentSuite;
    private List`1<IdAndName> m_configurations;
    private object m_userData;
    private int m_entryId;
    private byte m_entryType;
    internal TestPointAssignment[] m_pointAssignments;
    public string Title { get; public set; }
    public TestSuiteEntryType EntryType { get; }
    public ITestObject`1<int> TestObject { get; internal set; }
    public int Id { get; }
    internal TestSuite ParentSuite { get; internal set; }
    public ITestCase TestCase { get; }
    public ITestSuiteBase TestSuite { get; }
    public ITestSuiteBase ParentTestSuite { get; }
    public IList`1<IdAndName> Configurations { get; }
    public ITestPointAssignment[] PointAssignments { get; }
    public object UserData { get; public set; }
    internal TestSuiteEntry(TestSuite parent, ITestObject`1<int> item);
    internal TestSuiteEntry(TestSuiteEntry x);
    public virtual bool Equals(object obj);
    public static bool Equals(TestSuiteEntry left, TestSuiteEntry right);
    public bool Equals(TestSuiteEntry other);
    public virtual int GetHashCode();
    public sealed virtual string get_Title();
    public sealed virtual void set_Title(string value);
    public sealed virtual TestSuiteEntryType get_EntryType();
    public sealed virtual ITestObject`1<int> get_TestObject();
    internal void set_TestObject(ITestObject`1<int> value);
    public sealed virtual int get_Id();
    internal void PostLoad(TestSuite parentSuite, ITestObject`1<int> item);
    internal TestSuite get_ParentSuite();
    internal void set_ParentSuite(TestSuite value);
    public sealed virtual ITestCase get_TestCase();
    public sealed virtual ITestSuiteBase get_TestSuite();
    public sealed virtual ITestSuiteBase get_ParentTestSuite();
    public sealed virtual IList`1<IdAndName> get_Configurations();
    public sealed virtual ITestPointAssignment[] get_PointAssignments();
    public sealed virtual object get_UserData();
    public sealed virtual void set_UserData(object value);
    internal void SetPointAssignments(Guid owner, List`1<IdAndName> configs);
    public sealed virtual void UseDefaultConfigurations();
    public sealed virtual void SetConfigurations(IEnumerable`1<IdAndName> configurations);
    internal void RefreshFrom(TestSuiteEntry other);
    internal void UpdatePointAssignments(TestPointAssignment[] array, int index);
    internal static TestSuiteEntry FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, TestSuiteEntry obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestSuiteEntryCollection : GenericCollection`2<ITestSuiteEntry, TestSuiteEntry> {
    private TestSuite m_owner;
    internal TestSuite Owner { get; internal set; }
    internal TestSuiteEntryCollection(TestSuite ownerSuite);
    protected virtual void ClearItems();
    protected virtual void InsertItem(int index, TestSuiteEntry item);
    protected virtual void MoveItem(int oldIndex, int newIndex);
    protected virtual void SetItem(int index, TestSuiteEntry item);
    protected virtual void RemoveItem(int index);
    internal void ReallySetEntry(int index, TestSuiteEntry entry);
    internal void ReallyMoveEntry(int oldIndex, int newIndex);
    internal void ReallyRemoveEntry(int index);
    internal void ReallyInsertEntry(int index, TestSuiteEntry item);
    internal void ReallyClearEntries();
    public sealed virtual void BulkMove(ITestSuiteEntryCollection destination, int index, IEnumerable`1<ITestSuiteEntry> entries, bool ignoreDuplicates);
    public sealed virtual void BulkCopy(ITestSuiteEntryCollection destination, int index, IEnumerable`1<ITestSuiteEntry> entries, bool ignoreDuplicates);
    public sealed virtual void InsertCases(int index, IEnumerable`1<ITestCase> cases, bool ignoreDuplicates);
    public sealed virtual void BulkMove(int index, IEnumerable`1<ITestSuiteEntry> entries);
    public sealed virtual void RemoveCases(IEnumerable`1<ITestCase> cases);
    public sealed virtual void RemoveEntries(IEnumerable`1<ITestSuiteEntry> entries);
    internal TestSuite get_Owner();
    internal void set_Owner(TestSuite value);
    public sealed virtual void AddCases(IEnumerable`1<ITestCase> cases);
    public sealed virtual void AddCases(IEnumerable`1<ITestCase> cases, bool ignoreDuplicates);
    public sealed virtual void InsertCases(int index, IEnumerable`1<ITestCase> cases);
    public void Dispose();
    public sealed virtual ITestSuiteEntry Add(ITestSuiteBase suite);
    public sealed virtual ITestSuiteEntry Insert(int index, ITestSuiteBase suite);
    public sealed virtual bool Remove(ITestSuiteBase suite);
    public sealed virtual ITestSuiteEntry Add(ITestCase testCase);
    public sealed virtual ITestSuiteEntry Insert(int index, ITestCase testCase);
    public sealed virtual bool Remove(ITestCase testCase);
    public sealed virtual bool Contains(ITestObject`1<int> testObject);
    public sealed virtual int IndexOf(ITestObject`1<int> testObject);
}
public enum Microsoft.TeamFoundation.TestManagement.Client.TestSuiteEntryType : Enum {
    public int value__;
    public static TestSuiteEntryType None;
    public static TestSuiteEntryType TestCase;
    public static TestSuiteEntryType StaticTestSuite;
    public static TestSuiteEntryType DynamicTestSuite;
    public static TestSuiteEntryType RequirementTestSuite;
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestSuiteHelper : ClientObjectHelper`3<ITestSuiteBase, TestSuite, int> {
    internal TestSuiteHelper(TestManagementTeamProject project);
    public virtual ITestSuiteBase Create();
    public sealed virtual IStaticTestSuite CreateStatic();
    public sealed virtual IDynamicTestSuite CreateDynamic();
    public sealed virtual IRequirementTestSuite CreateRequirement(WorkItem requirement);
    public sealed virtual ITestSuiteCollection Query(string queryText, IDictionary context);
    public sealed virtual ITestSuiteCollection Query(string queryText);
    public sealed virtual ITestSuiteCollection ReferencingTestCase(int testCaseId);
    private TestSuiteCollection CreateSuiteCollection(ServerTestSuite[] ssuites, SuiteIdAndType[] excess, TestPlan plan);
    public sealed virtual ITestSuiteBase Find(int testSuiteId);
    public sealed virtual IStaticTestSuite FetchTestSuitesForPlan(ITestPlan plan, int rootSuiteId);
    internal StaticTestSuite BuildSuiteHierarchy(ServerTestSuite[] suites, TestPlan plan);
    public sealed virtual ITestSuiteEntry CreateEntry(ITestCase testCase);
    public sealed virtual ITestSuiteEntry CreateEntry(ITestSuiteBase testSuite);
    internal TestSuite CreateFromServerSuite(ServerTestSuite serverSuite, TestPlan plan, bool isPartial);
    internal TestSuite[] CreateFromServerSuites(ServerTestSuite[] serverSuites, TestPlan plan);
    internal TestSuite CreateSkinny(SuiteIdAndType id, TestPlan plan);
    internal void ServerDeleteChildren(TestSuite parent, TestSuiteEntry[] children);
    internal void ServerDeleteOrphan(TestSuite suite);
    internal void ServerMoveTestSuiteEntries(TestSuite source, TestSuite destination, TestSuiteEntry[] entries, int toIndex);
    internal void ServerCopyTestSuiteEntries(TestSuite source, TestSuite destination, TestSuiteEntry[] entries, int toIndex);
    public sealed virtual int BeginCloneOperation(ITestSuiteBase source, IStaticTestSuite destination, CloneOptions options);
    public sealed virtual int BeginCloneOperation(int srcSuiteId, int dstSuiteId, CloneOptions options, string targetProjectName);
    public sealed virtual CloneOperationInformation GetCloneOperationInformation(int opId);
    internal void ServerDeleteTestSuiteEntries(TestSuite parent, TestSuiteEntry[] entries);
    internal void ServerAddCasesToSuite(TestSuite parent, IEnumerable`1<TestSuiteEntry> entries, int toIndex);
    internal void ServerAddSuiteToSuite(TestSuite parent, TestSuite child, int toIndex);
    internal ServerTestSuite[] ServerFetch(IdAndRev[] suiteIds, Int32[]& deleted);
    internal static void ResolveUserNames(TestManagementTeamProject project, ServerTestSuite[] result);
    internal static List`1<TestCaseAndOwner> GetTestCaseAndOwners(IEnumerable`1<TestSuiteEntry> entries);
    internal static List`1<IdAndName> GetIdsAndNames(TestManagementTeamProject project, Int32[] configurationIds, String[] configurationNames);
    private void ValidateCloneOptionsForBackwardCompatibility(CloneOptions options, string destinationProjectName);
    private void TrySuiteOperationWithRefreshAndRetry(Action operation, TestSuite& source, TestSuite& destination);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public class Microsoft.TeamFoundation.TestManagement.Client.TestSuiteInvalidOperationException : TestManagementInvalidOperationException {
    protected TestSuiteInvalidOperationException(SerializationInfo info, StreamingContext context);
    public TestSuiteInvalidOperationException(string message);
    public TestSuiteInvalidOperationException(string message, Exception ex);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestSuiteProcessConfigHelper : ProcessConfigurationBase {
    internal TestSuiteProcessConfigHelper(TestManagementTeamProject project);
    internal virtual byte ConvertStatusToState(string newstatus);
    protected virtual State[] GetStatesFromProcessConfiguration();
    protected virtual StateTypeEnum ToMetaState(byte state);
    protected virtual byte FromMetaState(StateTypeEnum stateType);
}
public enum Microsoft.TeamFoundation.TestManagement.Client.TestSuiteSource : Enum {
    public int value__;
    public static TestSuiteSource Mtm;
    public static TestSuiteSource Web;
    public static TestSuiteSource ShallowCopy;
    public static TestSuiteSource DeepCopy;
    public static TestSuiteSource Job;
    public static TestSuiteSource KanbanBoard;
}
[GenerateAllConstantsAttribute("")]
public enum Microsoft.TeamFoundation.TestManagement.Client.TestSuiteState : Enum {
    public int value__;
    public static TestSuiteState None;
    public static TestSuiteState InPlanning;
    public static TestSuiteState InProgress;
    public static TestSuiteState Completed;
}
[GenerateAllConstantsAttribute("")]
public enum Microsoft.TeamFoundation.TestManagement.Client.TestSuiteType : Enum {
    public int value__;
    public static TestSuiteType None;
    public static TestSuiteType DynamicTestSuite;
    public static TestSuiteType StaticTestSuite;
    public static TestSuiteType RequirementTestSuite;
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestVariable : SimpleClientObject {
    private TestVariableValueCollection m_allowedValues;
    private string m_description;
    private string m_name;
    internal String[] m_values;
    public ObjectTypes ObjectType { get; }
    public string Name { get; public set; }
    public string Description { get; public set; }
    public ObservableCollection`1<ITestVariableValue> AllowedValues { get; }
    internal TestVariable(TestVariableHelper helper);
    internal void PostLoad(TestVariableHelper helper);
    public virtual ObjectTypes get_ObjectType();
    public sealed virtual string get_Name();
    public sealed virtual void set_Name(string value);
    public sealed virtual string get_Description();
    public sealed virtual void set_Description(string value);
    public sealed virtual ObservableCollection`1<ITestVariableValue> get_AllowedValues();
    internal virtual void DeleteFromServer(DeleteAction action);
    public virtual void Refresh();
    public virtual void Save();
    private void CreateValuesArray();
    private void CreateValuesList(String[] values);
    internal virtual void RefreshFrom(object serverObject);
    internal static TestVariable FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, TestVariable obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestVariableHelper : ClientObjectHelper`3<ITestVariable, TestVariable, int> {
    internal TestVariableHelper(TestManagementTeamProject project);
    public virtual ITestVariable Create();
    [IteratorStateMachineAttribute("Microsoft.TeamFoundation.TestManagement.Client.TestVariableHelper/<Query>d__2")]
public sealed virtual IEnumerable`1<ITestVariable> Query();
    public sealed virtual IEnumerable`1<ITestVariable> CreateFromFile(string fileName);
    public sealed virtual ITestVariableValue CreateVariableValue(string value);
    internal static List`1<ITestVariable> Parse(string fileName, TestManagementTeamProject project);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestVariableValue : PropertyOwner {
    private string m_value;
    public string Value { get; public set; }
    public TestVariableValue(string value);
    public sealed virtual string get_Value();
    public sealed virtual void set_Value(string value);
    internal void Validate();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TestVariableValueCollection : ObservableCollection`1<ITestVariableValue> {
    private TestVariable m_owner;
    internal TestVariableValueCollection(TestVariable owner);
    protected virtual void ClearItems();
    protected virtual void InsertItem(int index, ITestVariableValue item);
    protected virtual void SetItem(int index, ITestVariableValue item);
    protected virtual void RemoveItem(int index);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TfsIdentityStore : object {
    private TeamFoundationIdentityCache m_cache;
    private Dictionary`2<Guid, string> m_displayNameCache;
    private ReaderWriterLockSlim m_displayNameCacheLock;
    private TestManagementService m_testManagementService;
    private object m_drainLock;
    private bool m_identitiesDrained;
    private WorkItemStore m_workItemStore;
    private Guid m_projectCollectionId;
    private IList`1<TeamFoundationIdentityName> m_recentUsers;
    private bool m_recentUsersLoaded;
    private bool m_filteredIdServiceExists;
    private TeamFoundationIdentity m_validUserGroupIdentity;
    private HashSet`1<Guid> m_invalidIdentities;
    private static TeamFoundationIdentityCache s_currentCache;
    private static HashSet`1<Guid> s_currentInvalidIdentities;
    private static Guid s_currentServerInstanceId;
    private static object s_currentCacheLockObject;
    private IIdentityManagementService IdentityManagementService { get; }
    public ReadOnlyCollection`1<TeamFoundationIdentity> AllUserIdentities { get; }
    public ReadOnlyCollection`1<TeamFoundationIdentityName> AllUserIdentityNames { get; }
    public ReadOnlyCollection`1<TeamFoundationIdentityName> RecentUserNames { get; }
    public ReadOnlyCollection`1<TeamFoundationIdentity> AllGlobalAndProjectGroupIdentities { get; }
    private TeamFoundationIdentity ValidUserGroupIdentity { get; }
    internal TfsIdentityStore(TestManagementService service);
    private static TfsIdentityStore();
    private void SynchronizeIdentities();
    private IIdentityManagementService get_IdentityManagementService();
    public sealed virtual void Refresh();
    public sealed virtual void Initialize();
    public sealed virtual void Close();
    public sealed virtual TeamFoundationIdentity FindByDisplayName(string displayName);
    public sealed virtual Guid FindTeamFoundationIdByDisplayName(string displayName);
    public sealed virtual TeamFoundationIdentity FindByAccountName(string accountName);
    public sealed virtual TeamFoundationIdentity FindByTeamFoundationId(Guid teamFoundationId);
    public sealed virtual string GetDisplayName(Guid teamFoundationId);
    public sealed virtual void AddDisplayNames(Dictionary`2<Guid, string> names);
    public sealed virtual void AddDisambiguousDisplayName(Guid id, string disambiguousName);
    private void InternalAddDisambiguousDisplayName(Guid id, string disambiguousName);
    public sealed virtual void AddDisplayName(Guid id, string name);
    private void InternalAddDisplayName(Guid id, string name);
    public sealed virtual ReadOnlyCollection`1<TeamFoundationIdentity> get_AllUserIdentities();
    public sealed virtual ReadOnlyCollection`1<TeamFoundationIdentityName> get_AllUserIdentityNames();
    private string MakeDisplayNameUnique(TeamFoundationIdentity identity);
    public sealed virtual ReadOnlyCollection`1<TeamFoundationIdentityName> get_RecentUserNames();
    private void LoadRecentUsers();
    public sealed virtual ReadOnlyCollection`1<TeamFoundationIdentity> get_AllGlobalAndProjectGroupIdentities();
    public sealed virtual void EnsureIdentitiesById(IEnumerable`1<Guid> teamFoundationIds);
    public sealed virtual void EnsureIdentitiesByAccountName(IEnumerable`1<string> accountNames);
    public sealed virtual void AddRecentUser(TeamFoundationIdentity user);
    public sealed virtual void AddRecentUser(Guid teamFoundationId);
    private TeamFoundationIdentity get_ValidUserGroupIdentity();
    private ReadOnlyCollection`1<TeamFoundationIdentity> ReadGlobalGroupIdentities();
    private ReadOnlyCollection`1<TeamFoundationIdentity> ReadAllIdentitiesFromServer();
    private bool IsIdentityValid(TeamFoundationIdentity id);
    private TeamFoundationIdentity SearchByAccountName(string accountName);
    private TeamFoundationIdentity SearchByDisplayName(string displayName);
    private TeamFoundationIdentity SearchByTeamFoundationId(Guid teamFoundationId);
    private TeamFoundationIdentity[] SearchByTeamFoundationIds(Guid[] teamFoundationIds);
    private TeamFoundationIdentity[] SearchByAccountNames(String[] accountNames);
    internal static TeamFoundationIdentityCache GetCache(Guid instanceId, HashSet`1& invalidIdenties);
    [CompilerGeneratedAttribute]
private bool <get_AllUserIdentities>b__18_0(TeamFoundationIdentity id);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.TmiTestImplementation : object {
    [CompilerGeneratedAttribute]
private PropertyChangedEventHandler PropertyChanged;
    private string m_methodName;
    private string m_testType;
    private string m_storage;
    private Guid m_tmiTestId;
    private Guid m_tmiTestTypeId;
    public string Storage { get; public set; }
    public Guid TestId { get; public set; }
    public string TestName { get; public set; }
    public string TestType { get; public set; }
    public Guid TestTypeId { get; public set; }
    public string DisplayText { get; }
    public sealed virtual string get_Storage();
    public sealed virtual void set_Storage(string value);
    public sealed virtual Guid get_TestId();
    public sealed virtual void set_TestId(Guid value);
    public sealed virtual string get_TestName();
    public sealed virtual void set_TestName(string value);
    public sealed virtual string get_TestType();
    public sealed virtual void set_TestType(string value);
    public sealed virtual Guid get_TestTypeId();
    public sealed virtual void set_TestTypeId(Guid value);
    public sealed virtual string get_DisplayText();
    public virtual string ToString();
    internal void Setter(string property, T& oldValue, T newValue);
    [CompilerGeneratedAttribute]
public sealed virtual void add_PropertyChanged(PropertyChangedEventHandler value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_PropertyChanged(PropertyChangedEventHandler value);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.UpdatedProperties : object {
    protected int m_id;
    protected DateTime m_lastUpdated;
    protected Guid m_lastUpdatedBy;
    protected string m_lastUpdatedByName;
    protected int m_revision;
    public int Id { get; public set; }
    public DateTime LastUpdated { get; public set; }
    public Guid LastUpdatedBy { get; public set; }
    public string LastUpdatedByName { get; public set; }
    public int Revision { get; public set; }
    internal static UpdatedProperties Convert(UpdatedProperties prop);
    public int get_Id();
    public void set_Id(int value);
    public DateTime get_LastUpdated();
    public void set_LastUpdated(DateTime value);
    public Guid get_LastUpdatedBy();
    public void set_LastUpdatedBy(Guid value);
    public string get_LastUpdatedByName();
    public void set_LastUpdatedByName(string value);
    public int get_Revision();
    public void set_Revision(int value);
    internal static UpdatedProperties FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal virtual void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, UpdatedProperties obj);
}
internal enum Microsoft.TeamFoundation.TestManagement.Client.UpgradeMigrationState : Enum {
    public int value__;
    public static UpgradeMigrationState NotStarted;
    public static UpgradeMigrationState InProgress;
    public static UpgradeMigrationState Completed;
    public static UpgradeMigrationState Failed;
    public static UpgradeMigrationState Aborted;
    public static UpgradeMigrationState WorkItemsCreated;
    public static UpgradeMigrationState WorkItemCreationFailed;
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public class Microsoft.TeamFoundation.TestManagement.Client.UploadCompletionEventArgs : EventArgs {
    private ITestAttachment m_attachment;
    public ITestAttachment Attachment { get; }
    internal UploadCompletionEventArgs(ITestAttachment attachment);
    public ITestAttachment get_Attachment();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public class Microsoft.TeamFoundation.TestManagement.Client.UploadCompletionEventHandler : MulticastDelegate {
    public UploadCompletionEventHandler(object object, IntPtr method);
    public virtual void Invoke(object sender, UploadCompletionEventArgs e);
    public virtual IAsyncResult BeginInvoke(object sender, UploadCompletionEventArgs e, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal static class Microsoft.TeamFoundation.TestManagement.Client.UploadHandlerHelper : object {
    private static Nullable`1<bool> s_serverSupportsNewAttachmentFeaturesOverriddenForUnitTests;
    public static bool DoesServerSupportsNewAttachmentFeatures(TestManagementTeamProject project);
    public static void UploadAttachments(List`1<TestResultAttachment> attachments, bool serverSupportsMultipleAttachmentsInOneRequestports);
    private static void UploadAttachmentsMultipleAttachmentsPerRequest(IList`1<TestResultAttachment> attachments);
    private static void UploadAttachmentsOneAttachmentPerRequest(IList`1<TestResultAttachment> attachments);
    private static void OnAttachmentUploadComplete(IAsyncResult asynchronousResult);
    internal static void OverrideServerSupportsNewAttachmentFeaturesForUnitTests(Nullable`1<bool> value);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public class Microsoft.TeamFoundation.TestManagement.Client.UploadManagerEventArgs : EventArgs {
    private UploadManagerEventType m_type;
    private IAttachmentUploadEntry m_entry;
    public IAttachmentUploadEntry Entry { get; }
    public UploadManagerEventType EventType { get; }
    internal UploadManagerEventArgs(UploadManagerEventType type, IAttachmentUploadEntry entry);
    public IAttachmentUploadEntry get_Entry();
    public UploadManagerEventType get_EventType();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public class Microsoft.TeamFoundation.TestManagement.Client.UploadManagerEventHandler : MulticastDelegate {
    public UploadManagerEventHandler(object object, IntPtr method);
    public virtual void Invoke(object sender, UploadManagerEventArgs e);
    public virtual IAsyncResult BeginInvoke(object sender, UploadManagerEventArgs e, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public enum Microsoft.TeamFoundation.TestManagement.Client.UploadManagerEventType : Enum {
    public int value__;
    public static UploadManagerEventType EntryAdded;
    public static UploadManagerEventType EntryRemoved;
    public static UploadManagerEventType EntryChanged;
    public static UploadManagerEventType EntryCompleted;
}
public enum Microsoft.TeamFoundation.TestManagement.Client.UploadPauseReason : Enum {
    public int value__;
    public static UploadPauseReason User;
    public static UploadPauseReason FileLock;
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.UploadSlot : object {
    private AttachmentUploadEntry m_entry;
    private static double c_slotStuckTimeOutInMinutes;
    private int m_slotNumber;
    internal int SlotNumber { get; }
    public AttachmentUploadEntry Entry { get; public set; }
    internal UploadSlot(int slotNumber);
    internal int get_SlotNumber();
    public AttachmentUploadEntry get_Entry();
    public void set_Entry(AttachmentUploadEntry value);
    public virtual string ToString();
    internal bool IsStuck();
    internal void Clear();
}
public enum Microsoft.TeamFoundation.TestManagement.Client.UploadState : Enum {
    public int value__;
    public static UploadState Queued;
    public static UploadState Uploading;
    public static UploadState Completed;
    public static UploadState Paused;
    public static UploadState Cancelled;
    public static UploadState Failed;
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client.WitHelper : object {
    private Log m_log;
    private Project m_project;
    private Dictionary`2<string, Category> m_categories;
    private Dictionary`2<string, object> m_wiqlContext;
    internal Dictionary`2<string, object> DefaultWiqlContext { get; }
    internal Project Project { get; }
    internal WitHelper(Project project);
    private void CheckCategory(string categoryRefName);
    private bool HasCategoryCondition(NodeCondition condition);
    internal void CheckTestCaseCategoryCondition(string queryText);
    internal String[] WorkItemTypesFor(string categoryRefName);
    internal WorkItem CreateWorkItem(string categoryRefName);
    internal WorkItem CreateWorkItem(string categoryRefName, WorkItemType workItemType);
    internal WorkItem GetWorkItemFromServer(int id);
    internal WorkItem GetWorkItemFromServer(int id, int revision);
    internal bool IsWorkItemCompatible(string categoryRefName, WorkItem workItem);
    internal Dictionary`2<string, object> get_DefaultWiqlContext();
    internal WorkItemCollection Query(string queryText, IDictionary wiqlContext);
    internal WorkItemCollection Query(Int32[] ids, string queryText, bool stripWiql);
    internal WorkItemCollection Query(Int32[] ids, Int32[] revs, string queryText, bool stripWiql);
    internal string StripWiql(string originalWiql);
    internal bool GetBoolField(WorkItem workItem, string fieldName);
    internal void SetBoolField(WorkItem workItem, string fieldName, bool value);
    internal string GetStringField(WorkItem workItem, string fieldName);
    internal void SetStringField(WorkItem workItem, string fieldName, string value);
    internal int GetIntField(WorkItem workItem, string fieldName);
    internal void SetIntField(WorkItem workItem, string fieldName, int value);
    internal object GetField(WorkItem workItem, string fieldName);
    internal void SetField(WorkItem workItem, string fieldName, object value);
    public ClientObjectIdRev`1<int> Save(object source, WorkItem workItem);
    internal ExternalLink AssociateWorkItem(WorkItem workItem, ITestManagementServerArtifact artifact);
    internal static void DisassociateWorkItem(WorkItem workItem, ITestManagementServerArtifact artifact);
    internal RegisteredLinkType GetLinkType(string outboundType);
    internal bool DoRequiredFieldsExist(String[] requiredFields, string categoryRefName);
    internal bool FieldExistsInWorkItem(string field, string categoryRefName, string workItemType);
    private void ProcessWitError(Exception e);
    internal Project get_Project();
}
[GenerateAllConstantsAttribute("")]
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public static class Microsoft.TeamFoundation.TestManagement.Client.WitLinkTypes : object {
    public static string TestResult;
    public static string TestResultAttachment;
    public static string Session;
    public static string Test;
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal static class Microsoft.TeamFoundation.TestManagement.Client.XmlAttributeNames : object {
    internal static string Name;
    internal static string Description;
    internal static string Value;
    internal static string FileName;
    internal static string AreaPath;
    internal static string State;
    internal static string IsDefault;
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal static class Microsoft.TeamFoundation.TestManagement.Client.XmlAttributeValues : object {
    internal static string Active;
    internal static string Inactive;
    internal static string True;
    internal static string False;
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal static class Microsoft.TeamFoundation.TestManagement.Client.XmlStorageHelper : object {
    private static XmlReaderSettings s_xmlReaderSettings;
    private static XmlWriterSettings s_xmlWriterSettings;
    private static XmlReaderSettings XmlReaderSettings { get; }
    private static XmlWriterSettings XmlWriterSettings { get; }
    internal static string Save(IXmlStorage xmlStorageObject);
    internal static void Load(IXmlStorage xmlStorageObject, string xmlString);
    private static XmlReaderSettings get_XmlReaderSettings();
    private static XmlWriterSettings get_XmlWriterSettings();
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client2010.BlockedPointProperties : UpdatedProperties {
    private int m_lastTestResultId;
    private int m_lastTestRunId;
    public int LastTestResultId { get; public set; }
    public int LastTestRunId { get; public set; }
    public int get_LastTestResultId();
    public void set_LastTestResultId(int value);
    public int get_LastTestRunId();
    public void set_LastTestRunId(int value);
    internal static BlockedPointProperties FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal virtual void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, BlockedPointProperties obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client2010.BugFieldMapping : object {
    private Guid m_createdBy;
    private DateTime m_createdDate;
    private string m_fieldMapping;
    private DateTime m_lastUpdated;
    private Guid m_lastUpdatedBy;
    private int m_revision;
    internal Guid CreatedBy { get; internal set; }
    internal DateTime CreatedDate { get; internal set; }
    internal string FieldMapping { get; internal set; }
    internal DateTime LastUpdated { get; internal set; }
    internal Guid LastUpdatedBy { get; internal set; }
    internal int Revision { get; internal set; }
    internal Guid get_CreatedBy();
    internal void set_CreatedBy(Guid value);
    internal DateTime get_CreatedDate();
    internal void set_CreatedDate(DateTime value);
    internal string get_FieldMapping();
    internal void set_FieldMapping(string value);
    internal DateTime get_LastUpdated();
    internal void set_LastUpdated(DateTime value);
    internal Guid get_LastUpdatedBy();
    internal void set_LastUpdatedBy(Guid value);
    internal int get_Revision();
    internal void set_Revision(int value);
    internal static BugFieldMapping FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, BugFieldMapping obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client2010.BuildConfiguration : object {
    private string m_buildFlavor;
    private string m_buildPlatform;
    private string m_buildUri;
    private int m_id;
    private string m_teamProjectName;
    internal string BuildFlavor { get; internal set; }
    internal string BuildPlatform { get; internal set; }
    internal string BuildUri { get; internal set; }
    internal int Id { get; internal set; }
    internal string TeamProjectName { get; internal set; }
    internal string get_BuildFlavor();
    internal void set_BuildFlavor(string value);
    internal string get_BuildPlatform();
    internal void set_BuildPlatform(string value);
    internal string get_BuildUri();
    internal void set_BuildUri(string value);
    internal int get_Id();
    internal void set_Id(int value);
    internal string get_TeamProjectName();
    internal void set_TeamProjectName(string value);
    internal static BuildConfiguration FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, BuildConfiguration obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client2010.BuildCoverage : Coverage {
    private BuildConfiguration m_configuration;
    internal BuildConfiguration Configuration { get; internal set; }
    internal BuildConfiguration get_Configuration();
    internal void set_Configuration(BuildConfiguration value);
    internal static BuildCoverage FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal virtual void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, BuildCoverage obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client2010.Compat2010Helper : object {
    internal static List`1<TOut> Convert(IEnumerable`1<TIn> inList, Func`2<TIn, TOut> converter);
    private static TOut[] ConvertToArray(IEnumerable`1<TIn> inList, Func`2<TIn, TOut> converter);
    internal static void Convert(IEnumerable`1<TIn> inList, List`1<TOut> outList, Func`2<TIn, TOut> converter);
    internal static TestResultAttachment Convert(TestResultAttachment testResultAttachment);
    internal static TestResultAttachment[] Convert(TestResultAttachment[] testResultAttachment);
    internal static TestResultAttachment[] Convert(TestResultAttachment[] testResultAttachment);
    internal static DefaultAfnStripBinding[] Convert(DefaultAfnStripBinding[] bindings);
    internal static TestResultAttachmentIdentity[] Convert(TestResultAttachmentIdentity[] testResultAttachmentIdentity);
    private static TestResultAttachment Convert(TestResultAttachment attachment);
    private static TestResultAttachmentIdentity Convert(TestResultAttachmentIdentity identity);
    internal static BugFieldMapping Convert(BugFieldMapping bugFieldMapping);
    internal static BugFieldMapping Convert(BugFieldMapping bugFieldMapping);
    internal static UpdatedProperties Convert(UpdatedProperties updatedProperties);
    internal static UpdatedProperties[] Convert(UpdatedProperties[] updatedProperties);
    internal static ResultsStoreQuery Convert(ResultsStoreQuery resultsStoreQuery);
    internal static IdAndRev Convert(IdAndRev idAndRev);
    internal static IdAndRev[] Convert(IdAndRev[] idAndRev);
    internal static BuildCoverage[] Convert(BuildCoverage[] buildCoverage);
    private static ModuleCoverage Convert(ModuleCoverage coverage);
    private static FunctionCoverage Convert(FunctionCoverage m);
    private static ICoverageStatistics Convert(CoverageStatistics coverageStatistics);
    private static IBuildConfiguration Convert(BuildConfiguration buildConfiguration);
    internal static TestRunCoverage[] Convert(TestRunCoverage[] testRunCoverage);
    internal static TestConfiguration Convert(TestConfiguration testConfiguration);
    internal static TestResolutionState[] Convert(TestResolutionState[] testResolutionState);
    internal static TestCaseResultIdentifier Convert(TestCaseResultIdentifier testCaseResultIdentifier);
    internal static TestCaseResultIdentifier[] Convert(TestCaseResultIdentifier[] testCaseResultIdentifier);
    internal static TestCaseResult[] Convert(TestCaseResult[] testCaseResult);
    internal static TestCaseResultIdentifier[] Convert(TestCaseResultIdentifier[] deleted2010);
    internal static TestCaseResultIdAndRev[] Convert(TestCaseResultIdAndRev[] testCaseResultIdAndRev);
    internal static TestActionResult[] Convert(TestActionResult[] testActionResult);
    private static TestActionResult Convert(TestActionResult action);
    private static TestActionResult Convert(TestActionResult action);
    internal static TestCaseResult[] Convert(TestCaseResult[] testCaseResult);
    internal static TestResultParameter[] Convert(TestResultParameter[] parameters);
    private static TestResultParameter Convert(TestResultParameter parameter);
    internal static TestResolutionState Convert(TestResolutionState testResolutionState);
    internal static TestRun Convert(TestRun testRun);
    internal static TestRun Convert(TestRun testRun);
    internal static TestMessageLogEntry[] Convert(TestMessageLogEntry[] testMessageLogEntry);
    internal static TestMessageLogEntry[] Convert(TestMessageLogEntry[] testMessageLogEntry);
    internal static TestRun[] Convert(TestRun[] testRun);
    internal static TestRunStatistic[] Convert(TestRunStatistic[] testRunStatistic);
    internal static TestResolutionState Convert(TestResolutionState testResolutionState);
    internal static TestCaseResult Convert(TestCaseResult testCaseResult);
    private static TestCaseResult Convert(TestCaseResult testCaseResult);
    internal static ResultUpdateRequest[] Convert(ResultUpdateRequest[] resultUpdateRequest);
    internal static ResultUpdateResponse[] Convert(ResultUpdateResponse[] resultUpdateResponse);
    internal static TestCaseResultIdentifier Convert(TestCaseResultIdentifier testCaseResultIdentifier);
    internal static TestVariable[] Convert(TestVariable[] testVariable);
    internal static TestConfiguration Convert(TestConfiguration testConfiguration);
    internal static TestConfiguration[] Convert(TestConfiguration[] testConfiguration);
    internal static TestSettings Convert(TestSettings testSettings);
    internal static TestSettings[] Convert(TestSettings[] testSettings);
    internal static TestSettings Convert(TestSettings testSettings);
    private static TestSettingsMachineRole[] Convert(ITestSettingsMachineRoleCollection testSettingsMachineRoleCollection);
    internal static TestSettingsMachineRole[] Convert(TestSettingsMachineRole[] testSettingsMachineRole);
    internal static TestVariable Convert(TestVariable testVariable);
    internal static TestVariable Convert(TestVariable testVariable);
    internal static ImpactedPoint[] Convert(ImpactedPoint[] impactedPoint);
    internal static TestPlan Convert(TestPlan testPlan);
    internal static TestPlan[] Convert(TestPlan[] testPlan);
    internal static TestPlan Convert(TestPlan testPlan);
    private static string ComputeBuildUri(TestPlan testPlan);
    internal static TestExternalLink[] Convert(TestExternalLink[] testExternalLink);
    internal static TestExternalLink[] Convert(TestExternalLink[] testExternalLink);
    internal static SkinnyPlan[] Convert(SkinnyPlan[] skinnyPlan);
    internal static TestPoint[] Convert(TestPoint[] testPoint);
    internal static BlockedPointProperties[] Convert(BlockedPointProperties[] blockedPointProperties);
    internal static TestPoint[] Convert(TestPoint[] testPoint);
    internal static TestPointStatistic[] Convert(TestPointStatistic[] statArray2010);
    internal static TestCaseAndOwner[] Convert(TestCaseAndOwner[] testCaseAndOwner);
    internal static TestPointAssignment[] Convert(ITestPointAssignment[] array);
    internal static TestPointAssignment[] Convert(TestPointAssignment[] array);
    internal static TestSuiteEntry[] Convert(TestSuiteEntry[] children);
    internal static TestSuiteEntry[] Convert(TestSuiteEntry[] children);
    internal static ServerTestSuite Convert(ServerTestSuite suite);
    internal static ServerTestSuite Convert(ServerTestSuite suite);
    internal static ServerTestSuite[] Convert(ServerTestSuite[] serverTestSuite);
    internal static SuiteIdAndType[] Convert(SuiteIdAndType[] excessIds2);
    internal static SuitePointCount[] Convert(SuitePointCount[] suitePointCount);
    internal static EnvironmentParentTypes Convert(EnvironmentParentTypes m_parentType);
    internal static TestEnvironment[] Convert(TestEnvironment[] testEnvironment);
    internal static TestEnvironment Convert(TestEnvironment testEnvironment);
    internal static TestEnvironment Convert(TestEnvironment testEnvironment);
    internal static TestEnvironment[] Convert(TestEnvironment[] testEnvironment);
    internal static TestController[] Convert(TestController[] testController);
    internal static TestController Convert(TestController testController);
    internal static TestController[] Convert(TestController[] controllers);
    internal static TestController Convert(TestController testController);
    internal static DataCollectorInformation[] Convert(DataCollectorInformation[] dataCollectorInformation);
    internal static DataCollectorInformation Convert(DataCollectorInformation dataCollectorInformation);
    internal static DataCollectorInformation[] Convert(DataCollectorInformation[] collectors);
    internal static MachineRole[] Convert(MachineRole[] machineRole);
    internal static NameValuePair[] Convert(NameValuePair[] nameValuePair);
    internal static NameValuePair[] Convert(NameValuePair[] nameValuePair);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client2010.Coverage : object {
    protected string m_lastError;
    internal ModuleCoverage[] m_modules;
    protected byte m_state;
    public string LastError { get; public set; }
    internal ModuleCoverage[] Modules { get; internal set; }
    internal byte State { get; internal set; }
    public string get_LastError();
    public void set_LastError(string value);
    internal ModuleCoverage[] get_Modules();
    internal void set_Modules(ModuleCoverage[] value);
    internal byte get_State();
    internal void set_State(byte value);
    internal static Coverage FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal virtual void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, Coverage obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client2010.CoverageStatistics : object {
    private int m_blocksCovered;
    private int m_blocksNotCovered;
    private int m_linesCovered;
    private int m_linesNotCovered;
    private int m_linesPartiallyCovered;
    public int BlocksCovered { get; public set; }
    public int BlocksNotCovered { get; public set; }
    public int LinesCovered { get; public set; }
    public int LinesNotCovered { get; public set; }
    public int LinesPartiallyCovered { get; public set; }
    public int get_BlocksCovered();
    public void set_BlocksCovered(int value);
    public int get_BlocksNotCovered();
    public void set_BlocksNotCovered(int value);
    public int get_LinesCovered();
    public void set_LinesCovered(int value);
    public int get_LinesNotCovered();
    public void set_LinesNotCovered(int value);
    public int get_LinesPartiallyCovered();
    public void set_LinesPartiallyCovered(int value);
    internal static CoverageStatistics FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, CoverageStatistics obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client2010.DataCollectorInformation : object {
    private XmlNode m_configurationEditorConfiguration;
    private XmlNode m_defaultConfiguration;
    private string m_description;
    private Guid m_id;
    internal NameValuePair[] m_properties;
    private string m_typeUri;
    internal XmlNode ConfigurationEditorConfiguration { get; internal set; }
    internal XmlNode DefaultConfiguration { get; internal set; }
    internal string Description { get; internal set; }
    internal Guid Id { get; internal set; }
    internal NameValuePair[] Properties { get; internal set; }
    internal string TypeUri { get; internal set; }
    internal XmlNode get_ConfigurationEditorConfiguration();
    internal void set_ConfigurationEditorConfiguration(XmlNode value);
    internal XmlNode get_DefaultConfiguration();
    internal void set_DefaultConfiguration(XmlNode value);
    internal string get_Description();
    internal void set_Description(string value);
    internal Guid get_Id();
    internal void set_Id(Guid value);
    internal NameValuePair[] get_Properties();
    internal void set_Properties(NameValuePair[] value);
    internal string get_TypeUri();
    internal void set_TypeUri(string value);
    internal static DataCollectorInformation FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, DataCollectorInformation obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client2010.DefaultAfnStripBinding : object {
    private int m_testCaseId;
    private int m_testResultId;
    private int m_testRunId;
    internal int TestCaseId { get; internal set; }
    internal int TestResultId { get; internal set; }
    internal int TestRunId { get; internal set; }
    internal int get_TestCaseId();
    internal void set_TestCaseId(int value);
    internal int get_TestResultId();
    internal void set_TestResultId(int value);
    internal int get_TestRunId();
    internal void set_TestRunId(int value);
    internal static DefaultAfnStripBinding FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, DefaultAfnStripBinding obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public enum Microsoft.TeamFoundation.TestManagement.Client2010.EnvironmentParentTypes : Enum {
    public int value__;
    public static EnvironmentParentTypes TeamProject;
    public static EnvironmentParentTypes TestController;
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client2010.FunctionCoverage : object {
    private string m_class;
    private string m_name;
    private string m_namespace;
    private string m_sourceFile;
    private CoverageStatistics m_statistics;
    public string Class { get; public set; }
    public string Name { get; public set; }
    public string Namespace { get; public set; }
    public string SourceFile { get; public set; }
    internal CoverageStatistics Statistics { get; internal set; }
    public string get_Class();
    public void set_Class(string value);
    public string get_Name();
    public void set_Name(string value);
    public string get_Namespace();
    public void set_Namespace(string value);
    public string get_SourceFile();
    public void set_SourceFile(string value);
    internal CoverageStatistics get_Statistics();
    internal void set_Statistics(CoverageStatistics value);
    internal static FunctionCoverage FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, FunctionCoverage obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal static class Microsoft.TeamFoundation.TestManagement.Client2010.Helper : object {
    internal static Int32[][] ZeroLengthArrayOfArrayOfInt32 { get; }
    internal static BlockedPointProperties[] ZeroLengthArrayOfBlockedPointProperties { get; }
    internal static BuildCoverage[] ZeroLengthArrayOfBuildCoverage { get; }
    internal static DataCollectorInformation[] ZeroLengthArrayOfDataCollectorInformation { get; }
    internal static DefaultAfnStripBinding[] ZeroLengthArrayOfDefaultAfnStripBinding { get; }
    internal static FunctionCoverage[] ZeroLengthArrayOfFunctionCoverage { get; }
    internal static IdAndRev[] ZeroLengthArrayOfIdAndRev { get; }
    internal static ImpactedPoint[] ZeroLengthArrayOfImpactedPoint { get; }
    internal static Int32[] ZeroLengthArrayOfInt32 { get; }
    internal static MachineRole[] ZeroLengthArrayOfMachineRole { get; }
    internal static ModuleCoverage[] ZeroLengthArrayOfModuleCoverage { get; }
    internal static NameValuePair[] ZeroLengthArrayOfNameValuePair { get; }
    internal static ResultUpdateRequest[] ZeroLengthArrayOfResultUpdateRequest { get; }
    internal static ResultUpdateResponse[] ZeroLengthArrayOfResultUpdateResponse { get; }
    internal static ServerTestSuite[] ZeroLengthArrayOfServerTestSuite { get; }
    internal static SkinnyPlan[] ZeroLengthArrayOfSkinnyPlan { get; }
    internal static String[] ZeroLengthArrayOfString { get; }
    internal static SuiteIdAndType[] ZeroLengthArrayOfSuiteIdAndType { get; }
    internal static SuitePointCount[] ZeroLengthArrayOfSuitePointCount { get; }
    internal static TestActionResult[] ZeroLengthArrayOfTestActionResult { get; }
    internal static TestCaseAndOwner[] ZeroLengthArrayOfTestCaseAndOwner { get; }
    internal static TestCaseResult[] ZeroLengthArrayOfTestCaseResult { get; }
    internal static TestCaseResultIdAndRev[] ZeroLengthArrayOfTestCaseResultIdAndRev { get; }
    internal static TestCaseResultIdentifier[] ZeroLengthArrayOfTestCaseResultIdentifier { get; }
    internal static TestConfiguration[] ZeroLengthArrayOfTestConfiguration { get; }
    internal static TestController[] ZeroLengthArrayOfTestController { get; }
    internal static TestEnvironment[] ZeroLengthArrayOfTestEnvironment { get; }
    internal static TestExternalLink[] ZeroLengthArrayOfTestExternalLink { get; }
    internal static TestMessageLogEntry[] ZeroLengthArrayOfTestMessageLogEntry { get; }
    internal static TestPlan[] ZeroLengthArrayOfTestPlan { get; }
    internal static TestPoint[] ZeroLengthArrayOfTestPoint { get; }
    internal static TestPointAssignment[] ZeroLengthArrayOfTestPointAssignment { get; }
    internal static TestPointStatistic[] ZeroLengthArrayOfTestPointStatistic { get; }
    internal static TestResolutionState[] ZeroLengthArrayOfTestResolutionState { get; }
    internal static TestResultAttachment[] ZeroLengthArrayOfTestResultAttachment { get; }
    internal static TestResultAttachmentIdentity[] ZeroLengthArrayOfTestResultAttachmentIdentity { get; }
    internal static TestResultParameter[] ZeroLengthArrayOfTestResultParameter { get; }
    internal static TestRun[] ZeroLengthArrayOfTestRun { get; }
    internal static TestRunCoverage[] ZeroLengthArrayOfTestRunCoverage { get; }
    internal static TestRunStatistic[] ZeroLengthArrayOfTestRunStatistic { get; }
    internal static TestSettings[] ZeroLengthArrayOfTestSettings { get; }
    internal static TestSettingsMachineRole[] ZeroLengthArrayOfTestSettingsMachineRole { get; }
    internal static TestSuiteEntry[] ZeroLengthArrayOfTestSuiteEntry { get; }
    internal static TestVariable[] ZeroLengthArrayOfTestVariable { get; }
    internal static UpdatedProperties[] ZeroLengthArrayOfUpdatedProperties { get; }
    internal static Int32[][] get_ZeroLengthArrayOfArrayOfInt32();
    internal static BlockedPointProperties[] get_ZeroLengthArrayOfBlockedPointProperties();
    internal static BuildCoverage[] get_ZeroLengthArrayOfBuildCoverage();
    internal static DataCollectorInformation[] get_ZeroLengthArrayOfDataCollectorInformation();
    internal static DefaultAfnStripBinding[] get_ZeroLengthArrayOfDefaultAfnStripBinding();
    internal static FunctionCoverage[] get_ZeroLengthArrayOfFunctionCoverage();
    internal static IdAndRev[] get_ZeroLengthArrayOfIdAndRev();
    internal static ImpactedPoint[] get_ZeroLengthArrayOfImpactedPoint();
    internal static Int32[] get_ZeroLengthArrayOfInt32();
    internal static MachineRole[] get_ZeroLengthArrayOfMachineRole();
    internal static ModuleCoverage[] get_ZeroLengthArrayOfModuleCoverage();
    internal static NameValuePair[] get_ZeroLengthArrayOfNameValuePair();
    internal static ResultUpdateRequest[] get_ZeroLengthArrayOfResultUpdateRequest();
    internal static ResultUpdateResponse[] get_ZeroLengthArrayOfResultUpdateResponse();
    internal static ServerTestSuite[] get_ZeroLengthArrayOfServerTestSuite();
    internal static SkinnyPlan[] get_ZeroLengthArrayOfSkinnyPlan();
    internal static String[] get_ZeroLengthArrayOfString();
    internal static SuiteIdAndType[] get_ZeroLengthArrayOfSuiteIdAndType();
    internal static SuitePointCount[] get_ZeroLengthArrayOfSuitePointCount();
    internal static TestActionResult[] get_ZeroLengthArrayOfTestActionResult();
    internal static TestCaseAndOwner[] get_ZeroLengthArrayOfTestCaseAndOwner();
    internal static TestCaseResult[] get_ZeroLengthArrayOfTestCaseResult();
    internal static TestCaseResultIdAndRev[] get_ZeroLengthArrayOfTestCaseResultIdAndRev();
    internal static TestCaseResultIdentifier[] get_ZeroLengthArrayOfTestCaseResultIdentifier();
    internal static TestConfiguration[] get_ZeroLengthArrayOfTestConfiguration();
    internal static TestController[] get_ZeroLengthArrayOfTestController();
    internal static TestEnvironment[] get_ZeroLengthArrayOfTestEnvironment();
    internal static TestExternalLink[] get_ZeroLengthArrayOfTestExternalLink();
    internal static TestMessageLogEntry[] get_ZeroLengthArrayOfTestMessageLogEntry();
    internal static TestPlan[] get_ZeroLengthArrayOfTestPlan();
    internal static TestPoint[] get_ZeroLengthArrayOfTestPoint();
    internal static TestPointAssignment[] get_ZeroLengthArrayOfTestPointAssignment();
    internal static TestPointStatistic[] get_ZeroLengthArrayOfTestPointStatistic();
    internal static TestResolutionState[] get_ZeroLengthArrayOfTestResolutionState();
    internal static TestResultAttachment[] get_ZeroLengthArrayOfTestResultAttachment();
    internal static TestResultAttachmentIdentity[] get_ZeroLengthArrayOfTestResultAttachmentIdentity();
    internal static TestResultParameter[] get_ZeroLengthArrayOfTestResultParameter();
    internal static TestRun[] get_ZeroLengthArrayOfTestRun();
    internal static TestRunCoverage[] get_ZeroLengthArrayOfTestRunCoverage();
    internal static TestRunStatistic[] get_ZeroLengthArrayOfTestRunStatistic();
    internal static TestSettings[] get_ZeroLengthArrayOfTestSettings();
    internal static TestSettingsMachineRole[] get_ZeroLengthArrayOfTestSettingsMachineRole();
    internal static TestSuiteEntry[] get_ZeroLengthArrayOfTestSuiteEntry();
    internal static TestVariable[] get_ZeroLengthArrayOfTestVariable();
    internal static UpdatedProperties[] get_ZeroLengthArrayOfUpdatedProperties();
    internal static Int32[][] ArrayOfArrayOfInt32FromXml(XmlReader reader, bool inline);
    internal static BlockedPointProperties[] ArrayOfBlockedPointPropertiesFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static BuildCoverage[] ArrayOfBuildCoverageFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static DataCollectorInformation[] ArrayOfDataCollectorInformationFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static DefaultAfnStripBinding[] ArrayOfDefaultAfnStripBindingFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static FunctionCoverage[] ArrayOfFunctionCoverageFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static IdAndRev[] ArrayOfIdAndRevFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static ImpactedPoint[] ArrayOfImpactedPointFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static Int32[] ArrayOfInt32FromXml(XmlReader reader, bool inline);
    internal static Int32[] ArrayOfInt32FromXml(XmlReader reader);
    internal static MachineRole[] ArrayOfMachineRoleFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static ModuleCoverage[] ArrayOfModuleCoverageFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static NameValuePair[] ArrayOfNameValuePairFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static ResultUpdateRequest[] ArrayOfResultUpdateRequestFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static ResultUpdateResponse[] ArrayOfResultUpdateResponseFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static ServerTestSuite[] ArrayOfServerTestSuiteFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static SkinnyPlan[] ArrayOfSkinnyPlanFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static String[] ArrayOfStringFromXml(XmlReader reader, bool inline);
    internal static SuiteIdAndType[] ArrayOfSuiteIdAndTypeFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static SuitePointCount[] ArrayOfSuitePointCountFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static TestActionResult[] ArrayOfTestActionResultFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static TestCaseAndOwner[] ArrayOfTestCaseAndOwnerFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static TestCaseResult[] ArrayOfTestCaseResultFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static TestCaseResultIdAndRev[] ArrayOfTestCaseResultIdAndRevFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static TestCaseResultIdentifier[] ArrayOfTestCaseResultIdentifierFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static TestConfiguration[] ArrayOfTestConfigurationFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static TestController[] ArrayOfTestControllerFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static TestEnvironment[] ArrayOfTestEnvironmentFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static TestExternalLink[] ArrayOfTestExternalLinkFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static TestMessageLogEntry[] ArrayOfTestMessageLogEntryFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static TestPlan[] ArrayOfTestPlanFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static TestPointAssignment[] ArrayOfTestPointAssignmentFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static TestPoint[] ArrayOfTestPointFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static TestPointStatistic[] ArrayOfTestPointStatisticFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static TestResolutionState[] ArrayOfTestResolutionStateFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static TestResultAttachment[] ArrayOfTestResultAttachmentFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static TestResultAttachmentIdentity[] ArrayOfTestResultAttachmentIdentityFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static TestResultParameter[] ArrayOfTestResultParameterFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static TestRunCoverage[] ArrayOfTestRunCoverageFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static TestRun[] ArrayOfTestRunFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static TestRunStatistic[] ArrayOfTestRunStatisticFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static TestSettings[] ArrayOfTestSettingsFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static TestSettingsMachineRole[] ArrayOfTestSettingsMachineRoleFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static TestSuiteEntry[] ArrayOfTestSuiteEntryFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static TestVariable[] ArrayOfTestVariableFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static UpdatedProperties[] ArrayOfUpdatedPropertiesFromXml(IServiceProvider serviceProvider, XmlReader reader, bool inline);
    internal static string ArrayToString(T[] array);
    internal static void StringToXmlElement(XmlWriter writer, string element, string str);
    internal static void ToXml(XmlWriter writer, string arrayName, BlockedPointProperties[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, BlockedPointProperties[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, BuildCoverage[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, BuildCoverage[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, DataCollectorInformation[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, DataCollectorInformation[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, DefaultAfnStripBinding[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, DefaultAfnStripBinding[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, FunctionCoverage[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, FunctionCoverage[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, IdAndRev[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, IdAndRev[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, ImpactedPoint[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, ImpactedPoint[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, Int32[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, Int32[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, MachineRole[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, MachineRole[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, ModuleCoverage[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, ModuleCoverage[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, NameValuePair[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, NameValuePair[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, ResultUpdateRequest[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, ResultUpdateRequest[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, ResultUpdateResponse[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, ResultUpdateResponse[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, ServerTestSuite[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, ServerTestSuite[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, SkinnyPlan[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, SkinnyPlan[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, String[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, String[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, SuiteIdAndType[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, SuiteIdAndType[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, SuitePointCount[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, SuitePointCount[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, TestActionResult[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, TestActionResult[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, TestCaseAndOwner[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, TestCaseAndOwner[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, TestCaseResultIdAndRev[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, TestCaseResultIdAndRev[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, TestCaseResultIdentifier[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, TestCaseResultIdentifier[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, TestCaseResult[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, TestCaseResult[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, TestConfiguration[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, TestConfiguration[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, TestController[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, TestController[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, TestEnvironment[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, TestEnvironment[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, TestExternalLink[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, TestExternalLink[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, TestMessageLogEntry[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, TestMessageLogEntry[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, TestPlan[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, TestPlan[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, TestPointAssignment[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, TestPointAssignment[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, TestPointStatistic[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, TestPointStatistic[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, TestPoint[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, TestPoint[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, TestResolutionState[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, TestResolutionState[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, TestResultAttachmentIdentity[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, TestResultAttachmentIdentity[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, TestResultAttachment[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, TestResultAttachment[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, TestResultParameter[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, TestResultParameter[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, TestRunCoverage[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, TestRunCoverage[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, TestRunStatistic[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, TestRunStatistic[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, TestRun[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, TestRun[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, TestSettingsMachineRole[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, TestSettingsMachineRole[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, TestSettings[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, TestSettings[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, TestSuiteEntry[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, TestSuiteEntry[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, TestVariable[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, TestVariable[] array, bool inline, bool allowEmptyArrays);
    internal static void ToXml(XmlWriter writer, string arrayName, UpdatedProperties[] array);
    internal static void ToXml(XmlWriter writer, string arrayName, UpdatedProperties[] array, bool inline, bool allowEmptyArrays);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client2010.IdAndRev : object {
    private int m_id;
    private int m_revision;
    public int Id { get; public set; }
    public int Revision { get; public set; }
    public int get_Id();
    public void set_Id(int value);
    public int get_Revision();
    public void set_Revision(int value);
    internal static IdAndRev FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, IdAndRev obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client2010.ImpactedPoint : object {
    private string m_buildUri;
    private byte m_confidence;
    private int m_pointId;
    private byte m_state;
    private string m_suiteName;
    private int m_testCaseId;
    internal string BuildUri { get; internal set; }
    public byte Confidence { get; public set; }
    public int PointId { get; public set; }
    public byte State { get; public set; }
    public string SuiteName { get; public set; }
    public int TestCaseId { get; public set; }
    internal string get_BuildUri();
    internal void set_BuildUri(string value);
    public byte get_Confidence();
    public void set_Confidence(byte value);
    public int get_PointId();
    public void set_PointId(int value);
    public byte get_State();
    public void set_State(byte value);
    public string get_SuiteName();
    public void set_SuiteName(string value);
    public int get_TestCaseId();
    public void set_TestCaseId(int value);
    internal static ImpactedPoint FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, ImpactedPoint obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client2010.MachineRole : object {
    private Guid m_id;
    private string m_name;
    internal Guid Id { get; internal set; }
    internal string Name { get; internal set; }
    internal Guid get_Id();
    internal void set_Id(Guid value);
    internal string get_Name();
    internal void set_Name(string value);
    internal static MachineRole FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, MachineRole obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client2010.ModuleCoverage : object {
    private int m_blockCount;
    internal Byte[] m_blockData;
    internal FunctionCoverage[] m_functions;
    private string m_name;
    private Guid m_signature;
    private int m_signatureAge;
    private CoverageStatistics m_statistics;
    public int BlockCount { get; public set; }
    public Byte[] BlockData { get; public set; }
    internal FunctionCoverage[] Functions { get; internal set; }
    public string Name { get; public set; }
    public Guid Signature { get; public set; }
    public int SignatureAge { get; public set; }
    internal CoverageStatistics Statistics { get; internal set; }
    public int get_BlockCount();
    public void set_BlockCount(int value);
    public Byte[] get_BlockData();
    public void set_BlockData(Byte[] value);
    internal FunctionCoverage[] get_Functions();
    internal void set_Functions(FunctionCoverage[] value);
    public string get_Name();
    public void set_Name(string value);
    public Guid get_Signature();
    public void set_Signature(Guid value);
    public int get_SignatureAge();
    public void set_SignatureAge(int value);
    internal CoverageStatistics get_Statistics();
    internal void set_Statistics(CoverageStatistics value);
    internal static ModuleCoverage FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, ModuleCoverage obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client2010.NameValuePair : object {
    private string m_name;
    private string m_value;
    public string Name { get; public set; }
    public string Value { get; public set; }
    public string get_Name();
    public void set_Name(string value);
    public string get_Value();
    public void set_Value(string value);
    internal static NameValuePair FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, NameValuePair obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client2010.ResultsStoreQuery : object {
    private bool m_dayPrecision;
    private string m_queryText;
    private string m_teamProjectName;
    private string m_timeZone;
    public bool DayPrecision { get; public set; }
    public string QueryText { get; public set; }
    public string TeamProjectName { get; public set; }
    public string TimeZone { get; public set; }
    public bool get_DayPrecision();
    public void set_DayPrecision(bool value);
    public string get_QueryText();
    public void set_QueryText(string value);
    public string get_TeamProjectName();
    public void set_TeamProjectName(string value);
    public string get_TimeZone();
    public void set_TimeZone(string value);
    internal static ResultsStoreQuery FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, ResultsStoreQuery obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client2010.ResultUpdateRequest : object {
    internal TestActionResult[] m_actionResultDeletes;
    internal TestActionResult[] m_actionResults;
    internal TestResultAttachmentIdentity[] m_attachmentDeletes;
    internal TestResultAttachment[] m_attachments;
    internal TestResultParameter[] m_parameterDeletes;
    internal TestResultParameter[] m_parameters;
    private TestCaseResult m_testCaseResult;
    private int m_testResultId;
    private int m_testRunId;
    public TestActionResult[] ActionResultDeletes { get; public set; }
    public TestActionResult[] ActionResults { get; public set; }
    public TestResultAttachmentIdentity[] AttachmentDeletes { get; public set; }
    public TestResultAttachment[] Attachments { get; public set; }
    public TestResultParameter[] ParameterDeletes { get; public set; }
    public TestResultParameter[] Parameters { get; public set; }
    public TestCaseResult TestCaseResult { get; public set; }
    public int TestResultId { get; public set; }
    public int TestRunId { get; public set; }
    public TestActionResult[] get_ActionResultDeletes();
    public void set_ActionResultDeletes(TestActionResult[] value);
    public TestActionResult[] get_ActionResults();
    public void set_ActionResults(TestActionResult[] value);
    public TestResultAttachmentIdentity[] get_AttachmentDeletes();
    public void set_AttachmentDeletes(TestResultAttachmentIdentity[] value);
    public TestResultAttachment[] get_Attachments();
    public void set_Attachments(TestResultAttachment[] value);
    public TestResultParameter[] get_ParameterDeletes();
    public void set_ParameterDeletes(TestResultParameter[] value);
    public TestResultParameter[] get_Parameters();
    public void set_Parameters(TestResultParameter[] value);
    public TestCaseResult get_TestCaseResult();
    public void set_TestCaseResult(TestCaseResult value);
    public int get_TestResultId();
    public void set_TestResultId(int value);
    public int get_TestRunId();
    public void set_TestRunId(int value);
    internal static ResultUpdateRequest FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, ResultUpdateRequest obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client2010.ResultUpdateResponse : object {
    internal Int32[] m_attachmentIds;
    private DateTime m_lastUpdated;
    private Guid m_lastUpdatedBy;
    private int m_revision;
    public Int32[] AttachmentIds { get; public set; }
    public DateTime LastUpdated { get; public set; }
    public Guid LastUpdatedBy { get; public set; }
    public int Revision { get; public set; }
    public Int32[] get_AttachmentIds();
    public void set_AttachmentIds(Int32[] value);
    public DateTime get_LastUpdated();
    public void set_LastUpdated(DateTime value);
    public Guid get_LastUpdatedBy();
    public void set_LastUpdatedBy(Guid value);
    public int get_Revision();
    public void set_Revision(int value);
    internal static ResultUpdateResponse FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, ResultUpdateResponse obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client2010.ServerTestSuite : object {
    internal String[] m_defaultConfigurationNames;
    internal Int32[] m_defaultConfigurations;
    private string m_description;
    private int m_id;
    private bool m_inheritDefaultConfigurations;
    private string m_lastError;
    private DateTime m_lastPopulated;
    private DateTime m_lastUpdated;
    private Guid m_lastUpdatedBy;
    private int m_parentId;
    private int m_planId;
    private string m_queryString;
    private int m_requirementId;
    private int m_revision;
    internal TestSuiteEntry[] m_serverEntries;
    private byte m_state;
    private byte m_suiteType;
    private string m_title;
    public String[] DefaultConfigurationNames { get; public set; }
    public Int32[] DefaultConfigurations { get; public set; }
    public string Description { get; public set; }
    public int Id { get; public set; }
    public bool InheritDefaultConfigurations { get; public set; }
    public string LastError { get; public set; }
    public DateTime LastPopulated { get; public set; }
    public DateTime LastUpdated { get; public set; }
    public Guid LastUpdatedBy { get; public set; }
    public int ParentId { get; public set; }
    public int PlanId { get; public set; }
    public string QueryString { get; public set; }
    public int RequirementId { get; public set; }
    public int Revision { get; public set; }
    public TestSuiteEntry[] ServerEntries { get; public set; }
    public byte State { get; public set; }
    public byte SuiteType { get; public set; }
    public string Title { get; public set; }
    public String[] get_DefaultConfigurationNames();
    public void set_DefaultConfigurationNames(String[] value);
    public Int32[] get_DefaultConfigurations();
    public void set_DefaultConfigurations(Int32[] value);
    public string get_Description();
    public void set_Description(string value);
    public int get_Id();
    public void set_Id(int value);
    public bool get_InheritDefaultConfigurations();
    public void set_InheritDefaultConfigurations(bool value);
    public string get_LastError();
    public void set_LastError(string value);
    public DateTime get_LastPopulated();
    public void set_LastPopulated(DateTime value);
    public DateTime get_LastUpdated();
    public void set_LastUpdated(DateTime value);
    public Guid get_LastUpdatedBy();
    public void set_LastUpdatedBy(Guid value);
    public int get_ParentId();
    public void set_ParentId(int value);
    public int get_PlanId();
    public void set_PlanId(int value);
    public string get_QueryString();
    public void set_QueryString(string value);
    public int get_RequirementId();
    public void set_RequirementId(int value);
    public int get_Revision();
    public void set_Revision(int value);
    public TestSuiteEntry[] get_ServerEntries();
    public void set_ServerEntries(TestSuiteEntry[] value);
    public byte get_State();
    public void set_State(byte value);
    public byte get_SuiteType();
    public void set_SuiteType(byte value);
    public string get_Title();
    public void set_Title(string value);
    internal static ServerTestSuite FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, ServerTestSuite obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client2010.SharedStepResult : TestActionResult {
    internal static SharedStepResult FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal virtual void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, SharedStepResult obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client2010.SkinnyPlan : object {
    private int m_id;
    public int Id { get; public set; }
    public int get_Id();
    public void set_Id(int value);
    internal static SkinnyPlan FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, SkinnyPlan obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client2010.SuiteIdAndType : object {
    private int m_suiteId;
    private byte m_suiteType;
    internal int SuiteId { get; internal set; }
    internal byte SuiteType { get; internal set; }
    internal int get_SuiteId();
    internal void set_SuiteId(int value);
    internal byte get_SuiteType();
    internal void set_SuiteType(byte value);
    internal static SuiteIdAndType FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, SuiteIdAndType obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client2010.SuitePointCount : object {
    private int m_pointCount;
    private int m_suiteId;
    public int PointCount { get; public set; }
    public int SuiteId { get; public set; }
    public int get_PointCount();
    public void set_PointCount(int value);
    public int get_SuiteId();
    public void set_SuiteId(int value);
    internal static SuitePointCount FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, SuitePointCount obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client2010.TestActionResult : TestResult {
    protected string m_actionPath;
    protected int m_iterationId;
    protected int m_setId;
    public string ActionPath { get; internal set; }
    public int IterationId { get; internal set; }
    public int SetId { get; internal set; }
    public string get_ActionPath();
    internal void set_ActionPath(string value);
    public int get_IterationId();
    internal void set_IterationId(int value);
    public int get_SetId();
    internal void set_SetId(int value);
    internal static TestActionResult FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal virtual void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, TestActionResult obj);
    internal static TestActionResult Convert(TestActionResult action);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client2010.TestCaseAndOwner : object {
    private int m_id;
    private Guid m_owner;
    public int Id { get; public set; }
    public Guid Owner { get; public set; }
    public int get_Id();
    public void set_Id(int value);
    public Guid get_Owner();
    public void set_Owner(Guid value);
    internal static TestCaseAndOwner FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, TestCaseAndOwner obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client2010.TestCaseResult : TestResult {
    private int m_afnStripId;
    private string m_automatedTestId;
    private string m_automatedTestName;
    private string m_automatedTestStorage;
    private string m_automatedTestType;
    private string m_automatedTestTypeId;
    private string m_computerName;
    private int m_configurationId;
    private string m_configurationName;
    private byte m_failureType;
    private Guid m_owner;
    private byte m_priority;
    private int m_resetCount;
    private int m_resolutionStateId;
    private int m_revision;
    private Guid m_runBy;
    private byte m_state;
    private string m_testCaseArea;
    private string m_testCaseAreaUri;
    private int m_testCaseId;
    private int m_testCaseRevision;
    private string m_testCaseTitle;
    private int m_testPointId;
    internal int AfnStripId { get; internal set; }
    internal string AutomatedTestId { get; internal set; }
    internal string AutomatedTestName { get; internal set; }
    internal string AutomatedTestStorage { get; internal set; }
    internal string AutomatedTestType { get; internal set; }
    internal string AutomatedTestTypeId { get; internal set; }
    internal string ComputerName { get; internal set; }
    internal int ConfigurationId { get; internal set; }
    internal string ConfigurationName { get; internal set; }
    internal byte FailureType { get; internal set; }
    internal Guid Owner { get; internal set; }
    internal byte Priority { get; internal set; }
    internal int ResetCount { get; internal set; }
    internal int ResolutionStateId { get; internal set; }
    internal int Revision { get; internal set; }
    internal Guid RunBy { get; internal set; }
    internal byte State { get; internal set; }
    internal string TestCaseArea { get; internal set; }
    internal string TestCaseAreaUri { get; internal set; }
    internal int TestCaseId { get; internal set; }
    internal int TestCaseRevision { get; internal set; }
    internal string TestCaseTitle { get; internal set; }
    internal int TestPointId { get; internal set; }
    internal int get_AfnStripId();
    internal void set_AfnStripId(int value);
    internal string get_AutomatedTestId();
    internal void set_AutomatedTestId(string value);
    internal string get_AutomatedTestName();
    internal void set_AutomatedTestName(string value);
    internal string get_AutomatedTestStorage();
    internal void set_AutomatedTestStorage(string value);
    internal string get_AutomatedTestType();
    internal void set_AutomatedTestType(string value);
    internal string get_AutomatedTestTypeId();
    internal void set_AutomatedTestTypeId(string value);
    internal string get_ComputerName();
    internal void set_ComputerName(string value);
    internal int get_ConfigurationId();
    internal void set_ConfigurationId(int value);
    internal string get_ConfigurationName();
    internal void set_ConfigurationName(string value);
    internal byte get_FailureType();
    internal void set_FailureType(byte value);
    internal Guid get_Owner();
    internal void set_Owner(Guid value);
    internal byte get_Priority();
    internal void set_Priority(byte value);
    internal int get_ResetCount();
    internal void set_ResetCount(int value);
    internal int get_ResolutionStateId();
    internal void set_ResolutionStateId(int value);
    internal int get_Revision();
    internal void set_Revision(int value);
    internal Guid get_RunBy();
    internal void set_RunBy(Guid value);
    internal byte get_State();
    internal void set_State(byte value);
    internal string get_TestCaseArea();
    internal void set_TestCaseArea(string value);
    internal string get_TestCaseAreaUri();
    internal void set_TestCaseAreaUri(string value);
    internal int get_TestCaseId();
    internal void set_TestCaseId(int value);
    internal int get_TestCaseRevision();
    internal void set_TestCaseRevision(int value);
    internal string get_TestCaseTitle();
    internal void set_TestCaseTitle(string value);
    internal int get_TestPointId();
    internal void set_TestPointId(int value);
    internal static TestCaseResult FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal virtual void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, TestCaseResult obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client2010.TestCaseResultIdAndRev : object {
    private TestCaseResultIdentifier m_id;
    private int m_revision;
    public TestCaseResultIdentifier Id { get; public set; }
    public int Revision { get; public set; }
    public TestCaseResultIdentifier get_Id();
    public void set_Id(TestCaseResultIdentifier value);
    public int get_Revision();
    public void set_Revision(int value);
    internal static TestCaseResultIdAndRev FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, TestCaseResultIdAndRev obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
public class Microsoft.TeamFoundation.TestManagement.Client2010.TestCaseResultIdentifier : object {
    private int m_testResultId;
    private int m_testRunId;
    public int TestResultId { get; public set; }
    public int TestRunId { get; public set; }
    public int get_TestResultId();
    public void set_TestResultId(int value);
    public int get_TestRunId();
    public void set_TestRunId(int value);
    internal static TestCaseResultIdentifier FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, TestCaseResultIdentifier obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client2010.TestConfiguration : object {
    private string m_areaPath;
    private string m_description;
    private int m_id;
    private bool m_isDefault;
    private DateTime m_lastUpdated;
    private Guid m_lastUpdatedBy;
    private string m_name;
    private int m_revision;
    private byte m_state;
    internal NameValuePair[] m_values;
    internal string AreaPath { get; internal set; }
    internal string Description { get; internal set; }
    internal int Id { get; internal set; }
    internal bool IsDefault { get; internal set; }
    internal DateTime LastUpdated { get; internal set; }
    internal Guid LastUpdatedBy { get; internal set; }
    internal string Name { get; internal set; }
    internal int Revision { get; internal set; }
    internal byte State { get; internal set; }
    internal NameValuePair[] Values { get; internal set; }
    internal string get_AreaPath();
    internal void set_AreaPath(string value);
    internal string get_Description();
    internal void set_Description(string value);
    internal int get_Id();
    internal void set_Id(int value);
    internal bool get_IsDefault();
    internal void set_IsDefault(bool value);
    internal DateTime get_LastUpdated();
    internal void set_LastUpdated(DateTime value);
    internal Guid get_LastUpdatedBy();
    internal void set_LastUpdatedBy(Guid value);
    internal string get_Name();
    internal void set_Name(string value);
    internal int get_Revision();
    internal void set_Revision(int value);
    internal byte get_State();
    internal void set_State(byte value);
    internal NameValuePair[] get_Values();
    internal void set_Values(NameValuePair[] value);
    internal static TestConfiguration FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, TestConfiguration obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client2010.TestController : object {
    private string m_description;
    private string m_groupId;
    private string m_name;
    internal NameValuePair[] m_properties;
    internal string Description { get; internal set; }
    internal string GroupId { get; internal set; }
    internal string Name { get; internal set; }
    internal NameValuePair[] Properties { get; internal set; }
    internal string get_Description();
    internal void set_Description(string value);
    internal string get_GroupId();
    internal void set_GroupId(string value);
    internal string get_Name();
    internal void set_Name(string value);
    internal NameValuePair[] get_Properties();
    internal void set_Properties(NameValuePair[] value);
    internal static TestController FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, TestController obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client2010.TestEnvironment : object {
    private string m_controllerDisplayName;
    private string m_controllerName;
    private string m_description;
    private Guid m_id;
    internal MachineRole[] m_machineRoles;
    private string m_name;
    private string m_projectName;
    internal NameValuePair[] m_properties;
    internal string ControllerDisplayName { get; internal set; }
    internal string ControllerName { get; internal set; }
    internal string Description { get; internal set; }
    internal Guid Id { get; internal set; }
    internal MachineRole[] MachineRoles { get; internal set; }
    internal string Name { get; internal set; }
    internal string ProjectName { get; internal set; }
    internal NameValuePair[] Properties { get; internal set; }
    internal string get_ControllerDisplayName();
    internal void set_ControllerDisplayName(string value);
    internal string get_ControllerName();
    internal void set_ControllerName(string value);
    internal string get_Description();
    internal void set_Description(string value);
    internal Guid get_Id();
    internal void set_Id(Guid value);
    internal MachineRole[] get_MachineRoles();
    internal void set_MachineRoles(MachineRole[] value);
    internal string get_Name();
    internal void set_Name(string value);
    internal string get_ProjectName();
    internal void set_ProjectName(string value);
    internal NameValuePair[] get_Properties();
    internal void set_Properties(NameValuePair[] value);
    internal static TestEnvironment FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, TestEnvironment obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client2010.TestExternalLink : object {
    private string m_description;
    private int m_linkId;
    private string m_uri;
    internal string Description { get; internal set; }
    internal int LinkId { get; internal set; }
    internal string Uri { get; internal set; }
    internal string get_Description();
    internal void set_Description(string value);
    internal int get_LinkId();
    internal void set_LinkId(int value);
    internal string get_Uri();
    internal void set_Uri(string value);
    internal static TestExternalLink FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, TestExternalLink obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client2010.TestIterationResult : TestActionResult {
    internal static TestIterationResult FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal virtual void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, TestIterationResult obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client2010.TestMessageLogEntry : object {
    private DateTime m_dateCreated;
    private int m_entryId;
    private byte m_logLevel;
    private Guid m_logUser;
    private string m_message;
    private int m_testMessageLogId;
    internal DateTime DateCreated { get; internal set; }
    internal int EntryId { get; internal set; }
    internal byte LogLevel { get; internal set; }
    internal Guid LogUser { get; internal set; }
    internal string Message { get; internal set; }
    internal int TestMessageLogId { get; internal set; }
    internal DateTime get_DateCreated();
    internal void set_DateCreated(DateTime value);
    internal int get_EntryId();
    internal void set_EntryId(int value);
    internal byte get_LogLevel();
    internal void set_LogLevel(byte value);
    internal Guid get_LogUser();
    internal void set_LogUser(Guid value);
    internal string get_Message();
    internal void set_Message(string value);
    internal int get_TestMessageLogId();
    internal void set_TestMessageLogId(int value);
    internal static TestMessageLogEntry FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, TestMessageLogEntry obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client2010.TestPlan : object {
    private string m_areaPath;
    private Guid m_automatedTestEnvironmentId;
    private int m_automatedTestSettingsId;
    private string m_buildDefinition;
    private string m_buildQuality;
    private DateTime m_buildTakenDate;
    private string m_buildUri;
    private string m_description;
    private DateTime m_endDate;
    private int m_id;
    private string m_iteration;
    private DateTime m_lastUpdated;
    private Guid m_lastUpdatedBy;
    private Guid m_manualTestEnvironmentId;
    private string m_name;
    private Guid m_owner;
    private string m_previousBuildUri;
    private int m_revision;
    private int m_rootSuiteId;
    private DateTime m_startDate;
    private byte m_state;
    private int m_testSettingsId;
    internal string AreaPath { get; internal set; }
    internal Guid AutomatedTestEnvironmentId { get; internal set; }
    internal int AutomatedTestSettingsId { get; internal set; }
    internal string BuildDefinition { get; internal set; }
    internal string BuildQuality { get; internal set; }
    internal DateTime BuildTakenDate { get; internal set; }
    internal string BuildUri { get; internal set; }
    internal string Description { get; internal set; }
    internal DateTime EndDate { get; internal set; }
    internal int Id { get; internal set; }
    internal string Iteration { get; internal set; }
    internal DateTime LastUpdated { get; internal set; }
    internal Guid LastUpdatedBy { get; internal set; }
    internal Guid ManualTestEnvironmentId { get; internal set; }
    internal string Name { get; internal set; }
    internal Guid Owner { get; internal set; }
    internal string PreviousBuildUri { get; internal set; }
    internal int Revision { get; internal set; }
    internal int RootSuiteId { get; internal set; }
    internal DateTime StartDate { get; internal set; }
    internal byte State { get; internal set; }
    internal int TestSettingsId { get; internal set; }
    internal string get_AreaPath();
    internal void set_AreaPath(string value);
    internal Guid get_AutomatedTestEnvironmentId();
    internal void set_AutomatedTestEnvironmentId(Guid value);
    internal int get_AutomatedTestSettingsId();
    internal void set_AutomatedTestSettingsId(int value);
    internal string get_BuildDefinition();
    internal void set_BuildDefinition(string value);
    internal string get_BuildQuality();
    internal void set_BuildQuality(string value);
    internal DateTime get_BuildTakenDate();
    internal void set_BuildTakenDate(DateTime value);
    internal string get_BuildUri();
    internal void set_BuildUri(string value);
    internal string get_Description();
    internal void set_Description(string value);
    internal DateTime get_EndDate();
    internal void set_EndDate(DateTime value);
    internal int get_Id();
    internal void set_Id(int value);
    internal string get_Iteration();
    internal void set_Iteration(string value);
    internal DateTime get_LastUpdated();
    internal void set_LastUpdated(DateTime value);
    internal Guid get_LastUpdatedBy();
    internal void set_LastUpdatedBy(Guid value);
    internal Guid get_ManualTestEnvironmentId();
    internal void set_ManualTestEnvironmentId(Guid value);
    internal string get_Name();
    internal void set_Name(string value);
    internal Guid get_Owner();
    internal void set_Owner(Guid value);
    internal string get_PreviousBuildUri();
    internal void set_PreviousBuildUri(string value);
    internal int get_Revision();
    internal void set_Revision(int value);
    internal int get_RootSuiteId();
    internal void set_RootSuiteId(int value);
    internal DateTime get_StartDate();
    internal void set_StartDate(DateTime value);
    internal byte get_State();
    internal void set_State(byte value);
    internal int get_TestSettingsId();
    internal void set_TestSettingsId(int value);
    internal static TestPlan FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, TestPlan obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client2010.TestPoint : object {
    private Guid m_assignedTo;
    private string m_comment;
    private int m_configurationId;
    private string m_configurationName;
    private byte m_failureType;
    private int m_id;
    private int m_lastResolutionStateId;
    private byte m_lastResultOutcome;
    private byte m_lastResultState;
    private int m_lastTestResultId;
    private int m_lastTestRunId;
    private DateTime m_lastUpdated;
    private Guid m_lastUpdatedBy;
    private int m_planId;
    private int m_revision;
    private byte m_state;
    private int m_suiteId;
    private int m_testCaseId;
    internal Guid AssignedTo { get; internal set; }
    internal string Comment { get; internal set; }
    internal int ConfigurationId { get; internal set; }
    internal string ConfigurationName { get; internal set; }
    public byte FailureType { get; public set; }
    internal int Id { get; internal set; }
    internal int LastResolutionStateId { get; internal set; }
    internal byte LastResultOutcome { get; internal set; }
    internal byte LastResultState { get; internal set; }
    internal int LastTestResultId { get; internal set; }
    internal int LastTestRunId { get; internal set; }
    internal DateTime LastUpdated { get; internal set; }
    internal Guid LastUpdatedBy { get; internal set; }
    internal int PlanId { get; internal set; }
    internal int Revision { get; internal set; }
    internal byte State { get; internal set; }
    internal int SuiteId { get; internal set; }
    internal int TestCaseId { get; internal set; }
    internal Guid get_AssignedTo();
    internal void set_AssignedTo(Guid value);
    internal string get_Comment();
    internal void set_Comment(string value);
    internal int get_ConfigurationId();
    internal void set_ConfigurationId(int value);
    internal string get_ConfigurationName();
    internal void set_ConfigurationName(string value);
    public byte get_FailureType();
    public void set_FailureType(byte value);
    internal int get_Id();
    internal void set_Id(int value);
    internal int get_LastResolutionStateId();
    internal void set_LastResolutionStateId(int value);
    internal byte get_LastResultOutcome();
    internal void set_LastResultOutcome(byte value);
    internal byte get_LastResultState();
    internal void set_LastResultState(byte value);
    internal int get_LastTestResultId();
    internal void set_LastTestResultId(int value);
    internal int get_LastTestRunId();
    internal void set_LastTestRunId(int value);
    internal DateTime get_LastUpdated();
    internal void set_LastUpdated(DateTime value);
    internal Guid get_LastUpdatedBy();
    internal void set_LastUpdatedBy(Guid value);
    internal int get_PlanId();
    internal void set_PlanId(int value);
    internal int get_Revision();
    internal void set_Revision(int value);
    internal byte get_State();
    internal void set_State(byte value);
    internal int get_SuiteId();
    internal void set_SuiteId(int value);
    internal int get_TestCaseId();
    internal void set_TestCaseId(int value);
    internal static TestPoint FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, TestPoint obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client2010.TestPointAssignment : object {
    private Guid m_assignedTo;
    private int m_configurationId;
    private string m_configurationName;
    private int m_testCaseId;
    internal Guid AssignedTo { get; internal set; }
    public int ConfigurationId { get; public set; }
    internal string ConfigurationName { get; internal set; }
    public int TestCaseId { get; public set; }
    internal Guid get_AssignedTo();
    internal void set_AssignedTo(Guid value);
    public int get_ConfigurationId();
    public void set_ConfigurationId(int value);
    internal string get_ConfigurationName();
    internal void set_ConfigurationName(string value);
    public int get_TestCaseId();
    public void set_TestCaseId(int value);
    internal static TestPointAssignment FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, TestPointAssignment obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client2010.TestPointStatistic : object {
    private int m_count;
    private byte m_failureType;
    private int m_resolutionStateId;
    private byte m_resultOutcome;
    private byte m_resultState;
    private byte m_testPointState;
    internal int Count { get; internal set; }
    internal byte FailureType { get; internal set; }
    internal int ResolutionStateId { get; internal set; }
    internal byte ResultOutcome { get; internal set; }
    internal byte ResultState { get; internal set; }
    internal byte TestPointState { get; internal set; }
    internal int get_Count();
    internal void set_Count(int value);
    internal byte get_FailureType();
    internal void set_FailureType(byte value);
    internal int get_ResolutionStateId();
    internal void set_ResolutionStateId(int value);
    internal byte get_ResultOutcome();
    internal void set_ResultOutcome(byte value);
    internal byte get_ResultState();
    internal void set_ResultState(byte value);
    internal byte get_TestPointState();
    internal void set_TestPointState(byte value);
    internal static TestPointStatistic FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, TestPointStatistic obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client2010.TestResolutionState : object {
    private int m_id;
    private string m_name;
    private string m_teamProject;
    internal int Id { get; internal set; }
    internal string Name { get; internal set; }
    internal string TeamProject { get; internal set; }
    internal int get_Id();
    internal void set_Id(int value);
    internal string get_Name();
    internal void set_Name(string value);
    internal string get_TeamProject();
    internal void set_TeamProject(string value);
    internal static TestResolutionState FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, TestResolutionState obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal abstract class Microsoft.TeamFoundation.TestManagement.Client2010.TestResult : object {
    protected string m_comment;
    protected DateTime m_creationDate;
    protected DateTime m_dateCompleted;
    protected DateTime m_dateStarted;
    protected long m_duration;
    protected string m_errorMessage;
    protected TestCaseResultIdentifier m_id;
    protected DateTime m_lastUpdated;
    protected Guid m_lastUpdatedBy;
    protected byte m_outcome;
    internal string Comment { get; internal set; }
    internal DateTime CreationDate { get; internal set; }
    internal DateTime DateCompleted { get; internal set; }
    internal DateTime DateStarted { get; internal set; }
    internal long Duration { get; internal set; }
    internal string ErrorMessage { get; internal set; }
    internal TestCaseResultIdentifier Id { get; internal set; }
    internal DateTime LastUpdated { get; internal set; }
    internal Guid LastUpdatedBy { get; internal set; }
    internal byte Outcome { get; internal set; }
    internal string get_Comment();
    internal void set_Comment(string value);
    internal DateTime get_CreationDate();
    internal void set_CreationDate(DateTime value);
    internal DateTime get_DateCompleted();
    internal void set_DateCompleted(DateTime value);
    internal DateTime get_DateStarted();
    internal void set_DateStarted(DateTime value);
    internal long get_Duration();
    internal void set_Duration(long value);
    internal string get_ErrorMessage();
    internal void set_ErrorMessage(string value);
    internal TestCaseResultIdentifier get_Id();
    internal void set_Id(TestCaseResultIdentifier value);
    internal DateTime get_LastUpdated();
    internal void set_LastUpdated(DateTime value);
    internal Guid get_LastUpdatedBy();
    internal void set_LastUpdatedBy(Guid value);
    internal byte get_Outcome();
    internal void set_Outcome(byte value);
    internal static TestResult FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal abstract virtual void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, TestResult obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client2010.TestResultAttachment : object {
    private string m_actionPath;
    private string m_attachmentType;
    private string m_comment;
    private DateTime m_creationDate;
    private string m_fileName;
    private int m_id;
    private bool m_isComplete;
    private int m_iterationId;
    private long m_length;
    private int m_testResultId;
    private int m_testRunId;
    private Guid m_tmiRunId;
    internal string ActionPath { get; internal set; }
    internal string AttachmentType { get; internal set; }
    internal string Comment { get; internal set; }
    internal DateTime CreationDate { get; internal set; }
    internal string FileName { get; internal set; }
    internal int Id { get; internal set; }
    internal bool IsComplete { get; internal set; }
    internal int IterationId { get; internal set; }
    internal long Length { get; internal set; }
    internal int TestResultId { get; internal set; }
    internal int TestRunId { get; internal set; }
    internal Guid TmiRunId { get; internal set; }
    internal string get_ActionPath();
    internal void set_ActionPath(string value);
    internal string get_AttachmentType();
    internal void set_AttachmentType(string value);
    internal string get_Comment();
    internal void set_Comment(string value);
    internal DateTime get_CreationDate();
    internal void set_CreationDate(DateTime value);
    internal string get_FileName();
    internal void set_FileName(string value);
    internal int get_Id();
    internal void set_Id(int value);
    internal bool get_IsComplete();
    internal void set_IsComplete(bool value);
    internal int get_IterationId();
    internal void set_IterationId(int value);
    internal long get_Length();
    internal void set_Length(long value);
    internal int get_TestResultId();
    internal void set_TestResultId(int value);
    internal int get_TestRunId();
    internal void set_TestRunId(int value);
    internal Guid get_TmiRunId();
    internal void set_TmiRunId(Guid value);
    internal static TestResultAttachment FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, TestResultAttachment obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client2010.TestResultAttachmentIdentity : object {
    private int m_attachmentId;
    private int m_testResultId;
    private int m_testRunId;
    public int AttachmentId { get; public set; }
    public int TestResultId { get; public set; }
    public int TestRunId { get; public set; }
    public int get_AttachmentId();
    public void set_AttachmentId(int value);
    public int get_TestResultId();
    public void set_TestResultId(int value);
    public int get_TestRunId();
    public void set_TestRunId(int value);
    internal static TestResultAttachmentIdentity FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, TestResultAttachmentIdentity obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client2010.TestResultParameter : object {
    private string m_actionPath;
    internal Byte[] m_actual;
    private byte m_dataType;
    internal Byte[] m_expected;
    private int m_iterationId;
    private string m_parameterName;
    private int m_testResultId;
    private int m_testRunId;
    internal string ActionPath { get; internal set; }
    internal Byte[] Actual { get; internal set; }
    internal byte DataType { get; internal set; }
    internal Byte[] Expected { get; internal set; }
    internal int IterationId { get; internal set; }
    internal string ParameterName { get; internal set; }
    internal int TestResultId { get; internal set; }
    internal int TestRunId { get; internal set; }
    internal string get_ActionPath();
    internal void set_ActionPath(string value);
    internal Byte[] get_Actual();
    internal void set_Actual(Byte[] value);
    internal byte get_DataType();
    internal void set_DataType(byte value);
    internal Byte[] get_Expected();
    internal void set_Expected(Byte[] value);
    internal int get_IterationId();
    internal void set_IterationId(int value);
    internal string get_ParameterName();
    internal void set_ParameterName(string value);
    internal int get_TestResultId();
    internal void set_TestResultId(int value);
    internal int get_TestRunId();
    internal void set_TestRunId(int value);
    internal static TestResultParameter FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, TestResultParameter obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client2010.TestResultsService : TfsHttpClient {
    protected Guid CollectionServiceIdentifier { get; }
    protected string ComponentName { get; }
    protected string ServiceType { get; }
    public TestResultsService(TfsTeamProjectCollection connection);
    protected virtual Guid get_CollectionServiceIdentifier();
    protected virtual string get_ComponentName();
    protected virtual string get_ServiceType();
    protected virtual Exception ConvertException(SoapException exception);
    public UpdatedProperties AbortTestRun(int testRunId, int revision, string projectName, int options);
    public UpdatedProperties AddCasesToSuite(IdAndRev parent, TestCaseAndOwner[] testCases, int toIndex, string projectName, Int32[]& configurationIds, String[]& configurationNames);
    public UpdatedProperties AddSuiteToSuite(IdAndRev parent, ServerTestSuite suite, string teamProjectName, UpdatedProperties& newSuiteProperties, int toIndex);
    public void AssignTestPoints(string projectName, int suiteId, TestPointAssignment[] assignments);
    public BlockedPointProperties[] BlockTestPoints(TestPoint[] points, string projectName);
    public int CopyTestSuiteEntries(string teamProjectName, IdAndRev fromSuiteId, TestSuiteEntry[] entries, IdAndRev toSuiteId, int toIndex);
    public void CreateAssociatedWorkItems(TestCaseResultIdentifier[] identifiers, String[] workItemUris);
    public UpdatedProperties CreateBugFieldMapping(BugFieldMapping bugFieldMapping, string teamProjectName);
    public Int32[] CreateLogEntriesForRun(int testRunId, TestMessageLogEntry[] logEntries, string projectName);
    public TestConfiguration CreateTestConfiguration(TestConfiguration testConfiguration, string teamProjectName);
    public TestPlan CreateTestPlan(TestPlan testPlan, string teamProjectName, TestExternalLink[] links);
    public int CreateTestResolutionState(TestResolutionState resolutionState, string teamProjectName);
    public void CreateTestResults(TestCaseResult[] results, string projectName);
    public TestRun CreateTestRun(TestRun testRun, string teamProjectName);
    public UpdatedProperties CreateTestSettings(TestSettings settings, string teamProjectName);
    public int CreateTestVariable(TestVariable variable, string teamProjectName);
    public void DeleteAssociatedWorkItems(TestCaseResultIdentifier[] identifiers, String[] workItemUris);
    public void DeleteBuild(string projectName, string buildUri);
    public void DeleteTestConfiguration(int testConfigurationId, string projectName);
    public void DeleteTestPlan(int testPlanId, string projectName);
    public void DeleteTestResolutionState(int stateId, string projectName);
    public void DeleteTestRun(int testRunId, string projectName);
    public void DeleteTestRuns(Int32[] testRunIds, string projectName);
    public void DeleteTestSettings(int settingsId, string projectName);
    public UpdatedProperties DeleteTestSuiteEntries(IdAndRev parentSuiteId, TestSuiteEntry[] entries, string projectName);
    public void DeleteTestVariable(int variableId, string projectName);
    public TestPlan[] FetchTestPlans(IdAndRev[] idsToFetch, Int32[]& deletedIds, string projectName);
    public TestPoint[] FetchTestPoints(string projectName, int planId, IdAndRev[] idsToFetch, Int32[]& deletedIds);
    public TestCaseResult[] FetchTestResults(TestCaseResultIdAndRev[] idsToFetch, TestCaseResultIdentifier[]& deletedIds, string projectName);
    public ServerTestSuite[] FetchTestSuites(string teamProjectName, IdAndRev[] suiteIds, Int32[]& deletedIds);
    public DataCollectorInformation FindCollector(Guid teamProjectCollectionCatalogResourceId, string typeUri);
    public TestController FindController(Guid teamProjectCollectionCatalogResourceId, string controllerName);
    public TestEnvironment FindEnvironment(string parentName, EnvironmentParentTypes parentType, Guid environmentId);
    public TestCaseResult FindTestResultInMultipleProjects(int testRunId, int testResultId, String& projectName);
    public UpdatedProperties MoveTestSuiteEntries(string teamProjectName, IdAndRev fromSuiteId, TestSuiteEntry[] entries, IdAndRev toSuiteId, UpdatedProperties& newToProps, int toIndex);
    public Int32[][] QueryAssociatedWorkItemsFromResults(Int32[] pointIds, int planId, string projectName);
    public TestResultAttachment[] QueryAttachments(ResultsStoreQuery query);
    public TestResultAttachment[] QueryAttachmentsById(string projectName, int attachmentId, bool getSiblingAttachments);
    public BugFieldMapping QueryBugFieldMapping(string projectName);
    public BuildConfiguration QueryBuildConfigurationById(int buildConfigurationId);
    public BuildCoverage[] QueryBuildCoverage(string projectName, string buildUri, int flags);
    public DataCollectorInformation[] QueryCollectors(Guid teamProjectCollectionCatalogResourceId);
    public TestController[] QueryControllers(Guid teamProjectCollectionCatalogResourceId);
    public TestController[] QueryControllersByGroupId(Guid teamProjectCollectionCatalogResourceId, string groupId);
    public TestResultAttachment[] QueryDefaultStrips(Int32[] testCaseIds, string projectName);
    public TestEnvironment[] QueryEnvironments(string parentName, EnvironmentParentTypes parentType, Guid teamProjectCollectionCatalogResourceId);
    public ImpactedPoint[] QueryImpactedPointsForPlan(string teamProjectName, int planId, string buildUri);
    public TestMessageLogEntry[] QueryLogEntriesForRun(int testRunId, int testMessageLogId, string projectName);
    public SuitePointCount[] QuerySuitePointCounts(int planId, ResultsStoreQuery query);
    public TestActionResult[] QueryTestActionResults(TestCaseResultIdentifier identifier, TestResultParameter[]& parameters, TestResultAttachment[]& attachments, string projectName);
    public Int32[] QueryTestCases(string queryText, bool inPlans, string teamProjectName);
    public TestConfiguration QueryTestConfigurationById(int testConfigurationId, string projectName);
    public TestConfiguration[] QueryTestConfigurations(ResultsStoreQuery query);
    public int QueryTestConfigurationsCount(ResultsStoreQuery query);
    public TestExternalLink[] QueryTestPlanLinks(string projectName, int planId);
    public SkinnyPlan[] QueryTestPlans(ResultsStoreQuery query);
    public TestPoint[] QueryTestPointHistory(int testPointId, int planId, string projectName);
    public TestPointStatistic[] QueryTestPointStatistics(int planId, ResultsStoreQuery query);
    public TestPoint[] QueryTestPoints(int planId, ResultsStoreQuery query);
    public TestResolutionState[] QueryTestResolutionStateById(int testResolutionStateId, string projectName);
    public TestResolutionState[] QueryTestResolutionStates(string teamProject);
    public TestResultAttachment[] QueryTestResultAttachments(TestCaseResultIdentifier identifier, string projectName);
    public TestCaseResult[] QueryTestResults(ResultsStoreQuery query, int pageSize, TestCaseResultIdentifier[]& excessIds);
    public TestCaseResult[] QueryTestResultsByPoint(string projectName, int planId, int pointId);
    public TestCaseResult[] QueryTestResultsByRun(int testRunId, int pageSize, TestCaseResultIdentifier[]& excessIds, string projectName);
    public TestCaseResult[] QueryTestResultsByRunAndOutcome(int testRunId, byte outcome, int pageSize, TestCaseResultIdentifier[]& excessIds, string projectName);
    public TestCaseResult[] QueryTestResultsByRunAndOwner(int testRunId, Guid owner, int pageSize, TestCaseResultIdentifier[]& excessIds, string projectName);
    public TestCaseResult[] QueryTestResultsByRunAndState(int testRunId, byte state, int pageSize, TestCaseResultIdentifier[]& excessIds, string projectName);
    public TestResultAttachment[] QueryTestRunAttachments(int testRunId, string projectName);
    public TestRun QueryTestRunByTmiRunId(Guid tmiRunId);
    public TestRunCoverage[] QueryTestRunCoverage(string projectName, int testRunId, int flags);
    public TestRunStatistic[] QueryTestRunStatistics(string projectName, int testRunId);
    public TestRun[] QueryTestRuns(ResultsStoreQuery query);
    public TestRun[] QueryTestRunsByBuild(string teamProjectName, string buildUri);
    public TestRun[] QueryTestRunsById(string teamProjectName, int testRunId);
    public TestRun[] QueryTestRunsByOwner(string teamProjectName, Guid owner);
    public int QueryTestRunsCount(ResultsStoreQuery query);
    public TestRun[] QueryTestRunsInMultipleProjects(ResultsStoreQuery query);
    public TestSettings[] QueryTestSettings(ResultsStoreQuery query, bool omitSettings);
    public TestSettings QueryTestSettingsById(int settingsId, string projectName);
    public int QueryTestSettingsCount(ResultsStoreQuery query);
    public ServerTestSuite[] QueryTestSuites(ResultsStoreQuery query, int pageSize, SuiteIdAndType[]& excessIds);
    public ServerTestSuite[] QueryTestSuitesByTestCaseId(string teamProjectName, int testCaseId, int pageSize, SuiteIdAndType[]& excessIds);
    public TestVariable QueryTestVariableById(int variableId, string projectName);
    public TestVariable[] QueryTestVariables(string teamProjectName);
    public DataCollectorInformation[] RegisterCollectors(DataCollectorInformation[] collectors, Guid teamProjectCollectionCatalogResourceId);
    public void RegisterControllers(TestController[] controllers, Guid teamProjectCollectionCatalogResourceId);
    public TestEnvironment[] RegisterEnvironments(TestEnvironment[] environments, string parentName, EnvironmentParentTypes parentType, Guid teamProjectCollectionCatalogResourceId);
    public void RepopulateTestSuite(string teamProjectName, int suiteId);
    public TestCaseResult[] ResetTestResults(TestCaseResultIdentifier[] identifiers, string projectName);
    public UpdatedProperties SetSuiteEntryConfigurations(string projectName, IdAndRev suite, TestCaseAndOwner[] testCases, Int32[] configIds);
    public void SetTestGroupPermissions(string projectName);
    public void UnregisterCollectors(DataCollectorInformation[] collectors, Guid teamProjectCollectionCatalogResourceId);
    public void UnregisterControllers(TestController[] controllers, Guid teamProjectCollectionCatalogResourceId);
    public void UnregisterEnvironments(TestEnvironment[] environments, string parentName, EnvironmentParentTypes parentType, Guid teamProjectCollectionCatalogResourceId);
    public UpdatedProperties UpdateBugFieldMapping(BugFieldMapping bugFieldMapping, string projectName);
    public void UpdateCollectors(DataCollectorInformation[] collectors, Guid teamProjectCollectionCatalogResourceId);
    public void UpdateControllers(TestController[] controllers, Guid teamProjectCollectionCatalogResourceId);
    public void UpdateDefaultStrips(DefaultAfnStripBinding[] afnStripBindingList, string projectName);
    public TestEnvironment[] UpdateEnvironments(TestEnvironment[] environments, string parentName, EnvironmentParentTypes parentType, Guid teamProjectCollectionCatalogResourceId);
    public UpdatedProperties UpdateTestConfiguration(TestConfiguration testConfiguration, string projectName, bool updateInUse, bool unchangedValues);
    public TestPlan UpdateTestPlan(TestPlan testPlan, string projectName, TestExternalLink[] changedLinks);
    public UpdatedProperties[] UpdateTestPoints(TestPoint[] points, string projectName);
    public void UpdateTestResolutionState(TestResolutionState state, string projectName);
    public ResultUpdateResponse[] UpdateTestResults(ResultUpdateRequest[] requests, string projectName);
    public UpdatedProperties UpdateTestRun(TestRun testRun, TestResultAttachment[] attachments, TestResultAttachmentIdentity[] attachmentDeletes, Int32[]& attachmentIds, string projectName);
    public UpdatedProperties UpdateTestSettings(TestSettings settings, string projectName);
    public UpdatedProperties UpdateTestSuite(ServerTestSuite testSuite, string projectName);
    public int UpdateTestVariable(TestVariable variable, string projectName);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client2010.TestResultsServiceEx : TfsHttpClient {
    protected Guid CollectionServiceIdentifier { get; }
    protected string ComponentName { get; }
    protected string ServiceType { get; }
    public TestResultsServiceEx(TfsTeamProjectCollection connection);
    protected virtual Guid get_CollectionServiceIdentifier();
    protected virtual string get_ComponentName();
    protected virtual string get_ServiceType();
    protected virtual Exception ConvertException(SoapException exception);
    public TestRun CreateTestRun2(TestRun testRun, TestSettings settings, TestCaseResult[] results, string teamProjectName);
    public TestPoint[] QueryTestPointsAndStatistics(int planId, ResultsStoreQuery query, int pageSize, TestPointStatistic[]& stats);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client2010.TestRun : object {
    private int m_buildConfigurationId;
    private string m_buildFlavor;
    private string m_buildNumber;
    private string m_buildPlatform;
    private string m_buildUri;
    private string m_comment;
    private DateTime m_completeDate;
    private string m_controller;
    private DateTime m_creationDate;
    private string m_dropLocation;
    private DateTime m_dueDate;
    private string m_errorMessage;
    private int m_id;
    private bool m_isAutomated;
    private bool m_isBvt;
    private string m_iteration;
    private DateTime m_lastUpdated;
    private Guid m_lastUpdatedBy;
    private string m_legacySharePath;
    private Guid m_owner;
    private byte m_postProcessState;
    private int m_publicTestSettingsId;
    private int m_revision;
    private DateTime m_startDate;
    private byte m_state;
    private string m_teamProject;
    private Guid m_testEnvironmentId;
    private int m_testMessageLogId;
    private int m_testPlanId;
    private int m_testSettingsId;
    private string m_title;
    private byte m_type;
    private int m_version;
    internal int BuildConfigurationId { get; internal set; }
    internal string BuildFlavor { get; internal set; }
    internal string BuildNumber { get; internal set; }
    internal string BuildPlatform { get; internal set; }
    internal string BuildUri { get; internal set; }
    internal string Comment { get; internal set; }
    internal DateTime CompleteDate { get; internal set; }
    internal string Controller { get; internal set; }
    internal DateTime CreationDate { get; internal set; }
    internal string DropLocation { get; internal set; }
    internal DateTime DueDate { get; internal set; }
    internal string ErrorMessage { get; internal set; }
    internal int Id { get; internal set; }
    internal bool IsAutomated { get; internal set; }
    internal bool IsBvt { get; internal set; }
    internal string Iteration { get; internal set; }
    internal DateTime LastUpdated { get; internal set; }
    internal Guid LastUpdatedBy { get; internal set; }
    internal string LegacySharePath { get; internal set; }
    internal Guid Owner { get; internal set; }
    internal byte PostProcessState { get; internal set; }
    internal int PublicTestSettingsId { get; internal set; }
    internal int Revision { get; internal set; }
    internal DateTime StartDate { get; internal set; }
    internal byte State { get; internal set; }
    internal string TeamProject { get; internal set; }
    internal Guid TestEnvironmentId { get; internal set; }
    internal int TestMessageLogId { get; internal set; }
    internal int TestPlanId { get; internal set; }
    internal int TestSettingsId { get; internal set; }
    internal string Title { get; internal set; }
    internal byte Type { get; internal set; }
    internal int Version { get; internal set; }
    internal int get_BuildConfigurationId();
    internal void set_BuildConfigurationId(int value);
    internal string get_BuildFlavor();
    internal void set_BuildFlavor(string value);
    internal string get_BuildNumber();
    internal void set_BuildNumber(string value);
    internal string get_BuildPlatform();
    internal void set_BuildPlatform(string value);
    internal string get_BuildUri();
    internal void set_BuildUri(string value);
    internal string get_Comment();
    internal void set_Comment(string value);
    internal DateTime get_CompleteDate();
    internal void set_CompleteDate(DateTime value);
    internal string get_Controller();
    internal void set_Controller(string value);
    internal DateTime get_CreationDate();
    internal void set_CreationDate(DateTime value);
    internal string get_DropLocation();
    internal void set_DropLocation(string value);
    internal DateTime get_DueDate();
    internal void set_DueDate(DateTime value);
    internal string get_ErrorMessage();
    internal void set_ErrorMessage(string value);
    internal int get_Id();
    internal void set_Id(int value);
    internal bool get_IsAutomated();
    internal void set_IsAutomated(bool value);
    internal bool get_IsBvt();
    internal void set_IsBvt(bool value);
    internal string get_Iteration();
    internal void set_Iteration(string value);
    internal DateTime get_LastUpdated();
    internal void set_LastUpdated(DateTime value);
    internal Guid get_LastUpdatedBy();
    internal void set_LastUpdatedBy(Guid value);
    internal string get_LegacySharePath();
    internal void set_LegacySharePath(string value);
    internal Guid get_Owner();
    internal void set_Owner(Guid value);
    internal byte get_PostProcessState();
    internal void set_PostProcessState(byte value);
    internal int get_PublicTestSettingsId();
    internal void set_PublicTestSettingsId(int value);
    internal int get_Revision();
    internal void set_Revision(int value);
    internal DateTime get_StartDate();
    internal void set_StartDate(DateTime value);
    internal byte get_State();
    internal void set_State(byte value);
    internal string get_TeamProject();
    internal void set_TeamProject(string value);
    internal Guid get_TestEnvironmentId();
    internal void set_TestEnvironmentId(Guid value);
    internal int get_TestMessageLogId();
    internal void set_TestMessageLogId(int value);
    internal int get_TestPlanId();
    internal void set_TestPlanId(int value);
    internal int get_TestSettingsId();
    internal void set_TestSettingsId(int value);
    internal string get_Title();
    internal void set_Title(string value);
    internal byte get_Type();
    internal void set_Type(byte value);
    internal int get_Version();
    internal void set_Version(int value);
    internal static TestRun FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, TestRun obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client2010.TestRunCoverage : Coverage {
    private int m_testRunId;
    public int TestRunId { get; public set; }
    public int get_TestRunId();
    public void set_TestRunId(int value);
    internal static TestRunCoverage FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal virtual void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, TestRunCoverage obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client2010.TestRunStatistic : object {
    private int m_count;
    private byte m_outcome;
    private TestResolutionState m_resolutionState;
    private byte m_state;
    internal int Count { get; internal set; }
    internal byte Outcome { get; internal set; }
    internal TestResolutionState ResolutionState { get; internal set; }
    internal byte State { get; internal set; }
    internal int get_Count();
    internal void set_Count(int value);
    internal byte get_Outcome();
    internal void set_Outcome(byte value);
    internal TestResolutionState get_ResolutionState();
    internal void set_ResolutionState(TestResolutionState value);
    internal byte get_State();
    internal void set_State(byte value);
    internal static TestRunStatistic FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, TestRunStatistic obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client2010.TestSettings : object {
    private string m_areaPath;
    private Guid m_createdBy;
    private DateTime m_createdDate;
    private string m_description;
    private int m_id;
    private bool m_isAutomated;
    private bool m_isPublic;
    private DateTime m_lastUpdated;
    private Guid m_lastUpdatedBy;
    internal TestSettingsMachineRole[] m_machineRoles;
    private string m_name;
    private int m_revision;
    private string m_settings;
    internal string AreaPath { get; internal set; }
    internal Guid CreatedBy { get; internal set; }
    internal DateTime CreatedDate { get; internal set; }
    internal string Description { get; internal set; }
    internal int Id { get; internal set; }
    internal bool IsAutomated { get; internal set; }
    internal bool IsPublic { get; internal set; }
    internal DateTime LastUpdated { get; internal set; }
    internal Guid LastUpdatedBy { get; internal set; }
    internal TestSettingsMachineRole[] MachineRoles { get; internal set; }
    internal string Name { get; internal set; }
    internal int Revision { get; internal set; }
    internal string Settings { get; internal set; }
    internal string get_AreaPath();
    internal void set_AreaPath(string value);
    internal Guid get_CreatedBy();
    internal void set_CreatedBy(Guid value);
    internal DateTime get_CreatedDate();
    internal void set_CreatedDate(DateTime value);
    internal string get_Description();
    internal void set_Description(string value);
    internal int get_Id();
    internal void set_Id(int value);
    internal bool get_IsAutomated();
    internal void set_IsAutomated(bool value);
    internal bool get_IsPublic();
    internal void set_IsPublic(bool value);
    internal DateTime get_LastUpdated();
    internal void set_LastUpdated(DateTime value);
    internal Guid get_LastUpdatedBy();
    internal void set_LastUpdatedBy(Guid value);
    internal TestSettingsMachineRole[] get_MachineRoles();
    internal void set_MachineRoles(TestSettingsMachineRole[] value);
    internal string get_Name();
    internal void set_Name(string value);
    internal int get_Revision();
    internal void set_Revision(int value);
    internal string get_Settings();
    internal void set_Settings(string value);
    internal static TestSettings FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, TestSettings obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client2010.TestSettingsMachineRole : object {
    private bool m_isExecution;
    private string m_name;
    internal bool IsExecution { get; internal set; }
    internal string Name { get; internal set; }
    internal bool get_IsExecution();
    internal void set_IsExecution(bool value);
    internal string get_Name();
    internal void set_Name(string value);
    internal static TestSettingsMachineRole FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, TestSettingsMachineRole obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client2010.TestStepResult : TestActionResult {
    internal static TestStepResult FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal virtual void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, TestStepResult obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client2010.TestSuiteEntry : object {
    private int m_entryId;
    private byte m_entryType;
    internal TestPointAssignment[] m_pointAssignments;
    internal int EntryId { get; internal set; }
    internal byte EntryType { get; internal set; }
    internal TestPointAssignment[] PointAssignments { get; internal set; }
    internal int get_EntryId();
    internal void set_EntryId(int value);
    internal byte get_EntryType();
    internal void set_EntryType(byte value);
    internal TestPointAssignment[] get_PointAssignments();
    internal void set_PointAssignments(TestPointAssignment[] value);
    internal static TestSuiteEntry FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, TestSuiteEntry obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client2010.TestVariable : object {
    private string m_description;
    private int m_id;
    private string m_name;
    private int m_revision;
    internal String[] m_values;
    internal string Description { get; internal set; }
    internal int Id { get; internal set; }
    internal string Name { get; internal set; }
    internal int Revision { get; internal set; }
    internal String[] Values { get; internal set; }
    internal string get_Description();
    internal void set_Description(string value);
    internal int get_Id();
    internal void set_Id(int value);
    internal string get_Name();
    internal void set_Name(string value);
    internal int get_Revision();
    internal void set_Revision(int value);
    internal String[] get_Values();
    internal void set_Values(String[] value);
    internal static TestVariable FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, TestVariable obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client2010.UpdatedProperties : object {
    protected int m_id;
    protected DateTime m_lastUpdated;
    protected Guid m_lastUpdatedBy;
    protected int m_revision;
    public int Id { get; public set; }
    public DateTime LastUpdated { get; public set; }
    public Guid LastUpdatedBy { get; public set; }
    public int Revision { get; public set; }
    public int get_Id();
    public void set_Id(int value);
    public DateTime get_LastUpdated();
    public void set_LastUpdated(DateTime value);
    public Guid get_LastUpdatedBy();
    public void set_LastUpdatedBy(Guid value);
    public int get_Revision();
    public void set_Revision(int value);
    internal static UpdatedProperties FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public virtual string ToString();
    internal virtual void ToXml(XmlWriter writer, string element);
    internal static void ToXml(XmlWriter writer, string element, UpdatedProperties obj);
}
[ObsoleteAttribute("Deprecated. For more information please see documentation at http://aka.ms/witclientom", "False")]
internal class Microsoft.TeamFoundation.TestManagement.Client2011QU1.Compat2011QU1Helper : object {
    internal static TestCaseResult[] ConvertFromQU1(TestCaseResult[] testCaseResult);
    internal static TestCaseResult ConvertFromQU1(TestCaseResult testCaseResult);
    internal static TestActionResult[] ConvertFromQU1(TestActionResult[] testActionResult);
    private static TestActionResult ConvertFromQU1(TestActionResult action);
    internal static TestRun[] ConvertFromQU1(TestRun[] testRun);
    internal static TestRun ConvertFromQU1(TestRun testRun);
    internal static ITestRunStatistic[] ConvertFromQU1(ITestRunStatistic[] statistics);
    internal static TestPointStatistic[] ConvertFromQU1(TestPointStatistic[] statistics);
    internal static TestPointStatisticsByPivotType[] ConvertFromQU1(TestPointStatisticsByPivotType[] statistics);
    private static TestPointStatisticsByPivotType ConvertFromQU1(TestPointStatisticsByPivotType statistic);
    private static TestPointStatisticPivotItem ConvertFromQU1(TestPointStatisticPivotItem item);
    internal static TestPoint[] ConvertFromQU1(TestPoint[] points);
    internal static ResultUpdateRequest[] ConvertToQU1(ResultUpdateRequest[] resultUpdateRequest);
    private static ResultUpdateRequest ConvertToQU1(ResultUpdateRequest resultUpdateRequest);
    private static TestCaseResult ConvertToQU1(TestCaseResult testCaseResult);
    private static TestActionResult[] ConvertToQU1(TestActionResult[] testActionResult);
    private static TestActionResult ConvertToQU1(TestActionResult action);
    private static TOut[] ConvertToArray(IEnumerable`1<TIn> inList, Func`2<TIn, TOut> converter);
}
public static class Microsoft.TeamFoundation.TestManagement.CodeCoverageConstants : object {
    public static string FileLevelCoverageReportSuffix;
    public static string FolderViewReportJson;
}
public static class Microsoft.TeamFoundation.TestManagement.CssCacheSQLNotifConstants : object {
    public static Guid RebuildCssCacheEventClass;
    private static CssCacheSQLNotifConstants();
}
public static class Microsoft.TeamFoundation.TestManagement.DTVersion : object {
    public static int Current;
}
public static class Microsoft.TeamFoundation.TestManagement.ExceptionProperties : object {
    public static string ErrorCode;
    public static string Id;
    public static string ObjectType;
    public static int IdNotApplicableForTestObjectNotFoundException;
}
public static class Microsoft.TeamFoundation.TestManagement.GitConstants : object {
    public static string RefsPullPrefix;
    public static string PullRequestBranchName;
}
public static class Microsoft.TeamFoundation.TestManagement.JobDefinitionData : object {
    public static string MigrationJobExtensionName;
    public static string MigrationJobName;
    public static int JobIntervalAfterMigrationCompletion;
    public static int MigrationJobInterval;
    public static string PublishTestResultsJobName;
    public static string PublishTestResultsJobExtensionName;
    public static string TcmPublishTestResultsJobExtensionName;
    public static string CleanupJob;
    public static string SignalProcessorJob;
    public static string CoverageAnalyzerJob;
    public static string CalculateTestInsightsJob;
    public static Dictionary`2<string, Guid> TcmJobDefinitions;
    public static Dictionary`2<string, Guid> TfsJobDefinitions;
    private static JobDefinitionData();
}
public static class Microsoft.TeamFoundation.TestManagement.LMDTVersion : object {
    public static int Previous;
    public static int Current;
}
public static class Microsoft.TeamFoundation.TestManagement.MaxLength : object {
    public static int Name;
    public static int State;
    public static int AreaPath;
    public static int Iteration;
    public static int TestVariableValue;
    public static int Description;
    public static int ErrorMessage;
    public static int Comment;
    public static int SessionComment;
}
public static class Microsoft.TeamFoundation.TestManagement.MigratePlanConstants : object {
    public static int TestSettingsPageSize;
    public static int FetchLimit;
    public static int UpdateArtifactLimit;
    public static int MigratePlanRetryCount;
    public static bool ByPassWitValidationChecks;
    public static int IdReplacementAtrifactLimit;
    public static string XPathToProjectNameInMigratePlansJobData;
    public static string MigratePlansJobExtensionName;
    public static string MigratePlansJobDataXml;
}
public class Microsoft.TeamFoundation.TestManagement.ODataQueryConstants : object {
    public static string Operator_AND;
    public static string Operator_OR;
    public static string Operator_Equal;
    public static string Operator_NotEqual;
    public static string Operator_GreaterThan;
    public static string Operator_GreaterThanEqual;
    public static string Operator_LessThan;
    public static string Operator_LessThanEqual;
    public static string OrderByAsc;
    public static string OrderByDesc;
    private static ODataQueryConstants();
}
public static class Microsoft.TeamFoundation.TestManagement.PipelineConstants : object {
    public static string DefaultNodeName;
}
public static class Microsoft.TeamFoundation.TestManagement.ProtocolConstants : object {
    public static string ExceptionHeader;
}
public static class Microsoft.TeamFoundation.TestManagement.ReleaseEnvironmentsCacheConstants : object {
    public static int ReleaseEnvironmentsCacheMaxElements;
    public static TimeSpan ReleaseEnvironmentsCacheExpirationInterval;
    public static TimeSpan ReleaseEnvironmentsCacheCleanupInterval;
    private static ReleaseEnvironmentsCacheConstants();
}
public static class Microsoft.TeamFoundation.TestManagement.ResultHistoryConstants : object {
    public static int DaysForBuilds;
    public static string GroupByBranchString;
    public static string GroupByEnvironmentString;
}
public static class Microsoft.TeamFoundation.TestManagement.RevisionNumber : object {
    public static int NoUpdate;
    public static int Conflict;
    public static int DoNotCheck;
    public static int StartingRevision;
}
public static class Microsoft.TeamFoundation.TestManagement.ServiceBusConstants : object {
    public static string PlannedTestingServiceBusName;
    public static string TCMServiceBusName;
}
public class Microsoft.TeamFoundation.TestManagement.SQLConstants : object {
    public static string FilterClause_IN;
    public static string Operator_AND;
    public static string Operator_EqualTo;
    public static string Operator_IN;
    private static SQLConstants();
}
public static class Microsoft.TeamFoundation.TestManagement.TestArtifactDeletionConstants : object {
    public static int WaitDaysForCleanupOfTestRunsOnHosted;
    public static int WaitDaysForCleanupOfTestRunsOnOnPrem;
    public static int RunsDeletionBatchSize;
    public static int ResultsDeletionBatchSize;
    public static int RunsDeletionBatchSizeForRetention;
    public static int MaxNumOfRunsToDelete;
    public static int MaxNumOfRunsToCleanup;
    public static int MaxNumOfCleanupRetry;
    public static int WaitDaysForCleanupOfTestPlans;
    public static int WaitDaysForCleanupOfTestPoints;
    public static int WaitDaysForCleanupOfTestSuites;
    public static int PlanArtifactsDeletionBatchSize;
    public static int PointArtifactsDeletionBatchSize;
    public static int SuiteArtifactsDeletionBatchSize;
    public static int SoftDeleteTestPointsForSuiteBatchSize;
    public static int MaxNumOfRunDimensionToDelete;
    public static int ResultsRetainedBeyondDays;
    public static int MaxNumOfCustomFieldsToDelete;
    public static int CustomFieldsDeletionBatchSize;
    public static int CleanupProjectBatchSize;
}
public enum Microsoft.TeamFoundation.TestManagement.TestAttachmentType : Enum {
    public int value__;
    public static TestAttachmentType TestRun;
    public static TestAttachmentType TestResult;
    public static TestAttachmentType TestSubResult;
}
public static class Microsoft.TeamFoundation.TestManagement.TestContributionExtension : object {
    public static string TestManagerAdvancedPublisherName;
    public static string TestManagerAdvancedExtensionName;
    public static string GetExtensionFullName();
}
public static class Microsoft.TeamFoundation.TestManagement.TestExtensionConstants : object {
    public static string CustomFieldName;
    public static string UpdatedCustomFieldName;
}
public static class Microsoft.TeamFoundation.TestManagement.TestExtensionsToLogstoreConstants : object {
    public static string DefaultFieldsToPushToLS;
    public static int DefaultSeekBackDays;
    public static int DefaultResultBatchSize;
    public static TimeSpan DefaultJobExecutionTime;
    public static string DefaultWatermark;
    private static TestExtensionsToLogstoreConstants();
}
public class Microsoft.TeamFoundation.TestManagement.TestFlakyConstants : object {
    public static string Success;
    private static TestFlakyConstants();
}
public static class Microsoft.TeamFoundation.TestManagement.TestManagementSecurityNamespaceConstants : object {
    public static Guid NamespaceId;
    public static string RootToken;
    public static char PathSeparator;
    public static string UserSettings;
    public static int ReadPermission;
    private static TestManagementSecurityNamespaceConstants();
}
public static class Microsoft.TeamFoundation.TestManagement.TestPointConstants : object {
    public static int TestPointsPageSize;
    public static int TestPointQueryFilterBatchSize;
}
public static class Microsoft.TeamFoundation.TestManagement.TestPointFiltersCacheConstants : object {
    public static int TestPointFiltersCacheMaxElements;
    public static TimeSpan TestPointFiltersCacheExpirationInterval;
    public static TimeSpan TestPointFiltersCacheCleanupInterval;
    public static Guid TestPointFiltersTestersChangedEventClass;
    public static Guid TestPointFiltersConfigurationsChangedEventClass;
    private static TestPointFiltersCacheConstants();
}
public class Microsoft.TeamFoundation.TestManagement.TestResultMigrationConstants : object {
    public static int BatchSizePopulateAutomatedTestNameHash;
    private static TestResultMigrationConstants();
}
public static class Microsoft.TeamFoundation.TestManagement.TestResultsConstants : object {
    public static int MaxTestResultsPageSize;
    public static int TestResultsPageSize;
    public static int MaxTestResultsPageSizeIncludingDetails;
    public static int TestResultsPageSizeIncludingDetails;
    public static int TestResultsCommentMaxSize;
    public static int DefaultBuildCountForResultTrend;
    public static int DefaultResultsCountTrend;
    public static int MaxBuildCountForResultTrend;
    public static int MaxDaysForTestResultsTrend;
    public static int MaxDaysForTestResultsWorkItems;
    public static int MaxDaysForTestCaseResultHistory;
    public static int TestHistoryOperatingTestResultBatchLimit;
    public static int MaxWorkItemCountForResults;
    public static int MaxResultCountForTestCaseResultHistory;
    public static int MaxHistoryDaysForResultTrendByBuild;
    public static int DefaultBatchSizeForPublishTestResultsByJob;
    public static int InvalidTestResultId;
    public static int BatchSizeToFetchAssociatedWorkItems;
    public static int TestRunSystemMaxSize;
    public static int PassedOnRerunIntValue;
    public static int TestResultsGroupsPageSize;
    public static int FetchAllTestResultsForBuildOrReleasePageSize;
    public static int TestResultsForBuildOrReleasePageSize;
    public static int DefaultTestResultsNotificationBatchSize;
    public static int SimilarTestResultsBatchSize;
    public static int DefaultTestResultNotificationProcessorJobDelayInSec;
    public static int DefaultTestResultNotificationProcessorJobTimeoutInSec;
    public static int DefaultTestResultNotificationCleanupBatchSize;
    public static int DefaultTestResultNotificationRetentionInDays;
    public static int TestSubResultJsonMaxSize;
    public static int TestResultsByBuildDefinitionMaxNumberOfBuilds;
    public static int MaxNumberOfCustomFields;
    public static int TestSubResultMaxHierarchyLevel;
    public static int TestSubResultMaxSubResultPerLevel;
    public static int MaxSubResultCountForAttachmentInLogStore;
    public static string TestSubResultFileName;
    public static string TestSubResultV2FileName;
    public static string TestSubResultV2LogStoreFilePath;
    public static string TestSubResultV2LogStoreFileName;
    public static string TestSubResultJsonAttachmentType;
    public static string TestRunLogStoreFileName;
    public static string TestRunLogStoreFilePath;
    public static string TestResultLogStoreFileName;
    public static string TestResultLogStoreFilePath;
    public static string TestSubResultLogStoreFileNameNotJson;
    public static string TestResultExtensionLogStoreFilenamePattern;
    public static string TestResultPropertyDuration;
    public static string TestResultPropertyOwner;
    public static string TestResultPropertyTestCaseOwner;
    public static string TestResultPropertyContainer;
    public static string TestResultPropertyDateStarted;
    public static string TestResultPropertyDateCompleted;
    public static string TestResultPropertyPriority;
    public static string TestResultPropertyTestRunId;
    public static string TestResultPropertyTestResultId;
    public static string TestResultPropertyTestCaseRefId;
    public static string DefaultTestRunSystem;
    public static string PassedOnRerun;
    public static string TestResultField;
    public static int RegexTimeOutInMilliSeconds;
    public static string TestRunTitleColumnName;
    public static string GroupByTestRunTitleColumnName;
    public static string TestRunIdColumnName;
    public static string PriorityColumnName;
    public static string TestPointColumnName;
    public static string TestPlanColumnName;
    public static string TestSuiteColumnName;
    public static string TestSuiteTitleColumnName;
    public static string ParentSuiteIdColumnName;
    public static string PlanIdColumnName;
    public static string ContainerColumnName;
    public static string OutcomeColumnName;
    public static string DurationColumnName;
    public static string AutomatedTestNameColumn;
    public static string TestCaseTitleColumnName;
    public static string GroupByTestRunStateColumnName;
    public static string GroupByTestRunCompleteDateColumnName;
    public static string BuildReferenceColumnName;
    public static string ReleaseReferenceColumnName;
    public static string ReleaseEnvironmentIdColumnName;
    public static string ReleaseEnvDefinitionIdColumnName;
    public static string BuildDefinitionIdColumnName;
    public static string ReleaseDefinitionIdColumnName;
    public static string BranchNameColumnName;
    public static string CommentColumnName;
    public static string RequirementColumnName;
    public static string ErrorMessageColumnName;
    public static string OwnerNameColumnName;
    public static string DefaultGroupByFields;
    public static string OwnerFilterName;
    public static string ContainerFilterName;
    public static string DefaultIdentifierProperties;
    public static string DefaultFilterClause;
    public static string TrueCondition;
    public static string FalseCondition;
    public static string OldTestCaseRefId;
    public static HashSet`1<string> TestResultProperties;
    private static TestResultsConstants();
}
public static class Microsoft.TeamFoundation.TestManagement.TestResultsSettingsConstants : object {
    public static string SettingsKeys;
    public static string FlakySettingsKey;
    public static string NewTestResultSettingsKey;
    public static string TestResultsSettingsArtifactGuid;
    public static string TestResultsSettingsMoniker;
    public static int DeleteFlakyTestDataSprocDeletionBatchSize;
    public static int DeleteFlakyTestDataSprocExecTimeOutInSec;
}
public static class Microsoft.TeamFoundation.TestManagement.TestRunsConstants : object {
    public static int TestRunsBatchSize;
    public static int TestRunsPageSize;
    public static int MaxDaysForQueryTestRuns;
    public static int MaxIdsForQueryTestRuns;
    public static int DefaultTestRunCommentMaxSize;
    public static int DefaultTestRunBatchSizeForInsightsCalculation;
    public static int DefaultTestRunBatchSizeForSimilarTestResultJob;
    public static int DefaultMaxRunsToBeProcessedForSimilarTestResultJob;
    public static int DefaultCalculateTestInsightsJobDelayInSec;
    public static int TestRunNoOfTagLimit;
    public static int TestRunNoOfTagLimitForBuild;
    public static int TestRunTagSizeLimit;
    public static int DefaultTestRunErrorMessageMaxSize;
    public static string TestRunAllowedSpecialCharsInTagName;
    public static int CustomFieldValueMaxSizeInBytes;
    public static string TestRunCustomCustomFieldValueMaxSize;
    public static int TestRunCustomCustomFieldValueMaxSizeExpiryInHrs;
    public static string TestRunCacheNameSpaceId;
}
public static class Microsoft.TeamFoundation.TestManagement.TestSuiteCacheConstants : object {
    public static int TestSuiteCacheMaxElements;
    public static TimeSpan TestSuiteCacheExpirationInterval;
    public static TimeSpan TestSuiteCacheCleanupInterval;
    public static Guid TestSuiteChangedEventClass;
    private static TestSuiteCacheConstants();
}
public static class Microsoft.TeamFoundation.TestManagement.TestTabFilteringConstants : object {
    public static int DefaultResultsFetchBatchSize;
    public static int DefaultTotalResultsToFetch;
}
public static class Microsoft.TeamFoundation.TestManagement.TfsServiceNames : object {
    public static string TestResults;
    public static string AttachmentUpload;
    public static string AttachmentDownload;
}
public static class Microsoft.TeamFoundation.TestManagement.VersionConstants : object {
    public static Version Current;
    public static Version NoValue;
    private static VersionConstants();
}
public static class Microsoft.TeamFoundation.TestManagement.WebExploratoryExtension : object {
    public static string BrowserExtensionPublisherName;
    public static string BrowserExtensionName;
    public static string GetExtensionFullName();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
