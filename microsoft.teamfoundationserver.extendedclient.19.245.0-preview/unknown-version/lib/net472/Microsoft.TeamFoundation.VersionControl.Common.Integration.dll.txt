[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
public enum Microsoft.TeamFoundation.VersionControl.Common.ArtifactType : Enum {
    public int value__;
    public static ArtifactType VersionedItem;
    public static ArtifactType LatestItemVersion;
    public static ArtifactType Changeset;
    public static ArtifactType Label;
    public static ArtifactType Shelveset;
    public static ArtifactType ShelvedItem;
}
public class Microsoft.TeamFoundation.VersionControl.Common.ChangesetUri : VersionControlIntegrationUri {
    public string ArtifactTitle { get; }
    public ChangesetUri(string teamFoundationServerUrl, int changeset);
    public ChangesetUri(TfsTeamProjectCollection teamProjectCollection, int changeset);
    public ChangesetUri(TfsTeamProjectCollection teamProjectCollection, int changeset, UriType type);
    public ChangesetUri(string teamFoundationServerUrl, int changeset, UriType type);
    public ChangesetUri(int changeset, UriType type);
    public static void Decode(string changesetArtifactName, Int32& changesetId);
    public virtual string get_ArtifactTitle();
}
[XmlIncludeAttribute("Microsoft.TeamFoundation.VersionControl.Common.CheckinWorkItemInfo")]
[SoapIncludeAttribute("Microsoft.TeamFoundation.VersionControl.Common.CheckinWorkItemInfo")]
[XmlIncludeAttribute("Microsoft.TeamFoundation.VersionControl.Common.NameValuePair")]
[SoapIncludeAttribute("Microsoft.TeamFoundation.VersionControl.Common.NameValuePair")]
[XmlIncludeAttribute("Microsoft.TeamFoundation.VersionControl.Common.ClientArtifact")]
[SoapIncludeAttribute("Microsoft.TeamFoundation.VersionControl.Common.ClientArtifact")]
[NotificationEventBindingsAttribute]
public class Microsoft.TeamFoundation.VersionControl.Common.CheckinEvent : NotificationEvent {
    [XmlArrayAttribute("PolicyFailures")]
[XmlArrayItemAttribute("PolicyFailure")]
public ArrayList PolicyFailures;
    private static int c_maxTitleCharacters;
    private static int c_minCommentCharacters;
    private int m_changeset;
    private string m_committer;
    private string m_committerDisplay;
    private string m_title;
    private string m_contentTitle;
    public string Title { get; public set; }
    public string ContentTitle { get; public set; }
    public string Committer { get; public set; }
    public string CommitterDisplay { get; public set; }
    public int Number { get; public set; }
    [XmlIgnoreAttribute]
public DateTime ChangesetCreationDate { get; public set; }
    public CheckinEvent(int changeset, DateTime creationDate, string owner, string committer, string comment);
    public CheckinEvent(int changeset, DateTime creationDate, string owner, string ownerDisplay, string committer, string committerDisplay, string comment);
    public CheckinEvent(int changeset, DateTime creationDate);
    public sealed virtual object Clone();
    public string get_Title();
    public void set_Title(string value);
    public string get_ContentTitle();
    public void set_ContentTitle(string value);
    public string get_Committer();
    public void set_Committer(string value);
    public string get_CommitterDisplay();
    public void set_CommitterDisplay(string value);
    public int get_Number();
    public void set_Number(int value);
    public DateTime get_ChangesetCreationDate();
    public void set_ChangesetCreationDate(DateTime value);
}
public enum Microsoft.TeamFoundation.VersionControl.Common.CheckinWorkItemCheckinAction : Enum {
    public int value__;
    public static CheckinWorkItemCheckinAction None;
    public static CheckinWorkItemCheckinAction Resolve;
    public static CheckinWorkItemCheckinAction Associate;
}
public class Microsoft.TeamFoundation.VersionControl.Common.CheckinWorkItemInfo : object {
    [XmlAttributeAttribute("Url")]
public string WorkItemUrl;
    [XmlAttributeAttribute("Id")]
public int Id;
    [XmlAttributeAttribute("CheckinAction")]
public CheckinWorkItemCheckinAction CheckinAction;
    [XmlAttributeAttribute("Title")]
public string Title;
    [XmlAttributeAttribute("Type")]
public string Type;
    [XmlAttributeAttribute("State")]
public string State;
    [XmlAttributeAttribute("AssignedTo")]
public string AssignedTo;
    public CheckinWorkItemInfo(int id, CheckinWorkItemCheckinAction checkinAction);
}
public class Microsoft.TeamFoundation.VersionControl.Common.ClientArtifact : object {
    [XmlElementAttribute]
public string Url;
    [XmlAttributeAttribute("ArtifactType")]
public string Type;
    [XmlAttributeAttribute("Item")]
public string Item;
    [XmlAttributeAttribute("Folder")]
public string Folder;
    [XmlAttributeAttribute("TeamProject")]
public string TeamProject;
    [XmlAttributeAttribute("ItemRevision")]
public string ItemVersion;
    [XmlAttributeAttribute("ChangeType")]
public string ChangeType;
    private string m_serverItem;
    [XmlAttributeAttribute("ServerItem")]
public string ServerItem { get; public set; }
    public ClientArtifact(string url, string artifactType);
    public string get_ServerItem();
    public void set_ServerItem(string value);
}
public class Microsoft.TeamFoundation.VersionControl.Common.InvalidArtifactTypeException : TeamFoundationServerException {
    public InvalidArtifactTypeException(string message);
    public InvalidArtifactTypeException(string message, Exception exception);
}
public class Microsoft.TeamFoundation.VersionControl.Common.InvalidUriException : TeamFoundationServerException {
    public InvalidUriException(string message);
    public InvalidUriException(string message, Exception exception);
}
public class Microsoft.TeamFoundation.VersionControl.Common.LabelUri : VersionControlIntegrationUri {
    public LabelUri(string teamFoundationServerUrl, int labelId);
    public LabelUri(TfsTeamProjectCollection teamProjectCollection, int labelId);
}
public class Microsoft.TeamFoundation.VersionControl.Common.LatestItemVersionUri : VersionControlIntegrationUri {
    public LatestItemVersionUri(string teamFoundationServerUrl, int itemId);
    public LatestItemVersionUri(TfsTeamProjectCollection teamProjectCollection, int itemId);
}
public class Microsoft.TeamFoundation.VersionControl.Common.NameValuePair : object {
    private string m_name;
    private string m_value;
    [XmlAttributeAttribute("name")]
public string Name { get; public set; }
    [XmlAttributeAttribute("val")]
public string Value { get; public set; }
    public NameValuePair(string name, string value);
    public string get_Name();
    public void set_Name(string value);
    public string get_Value();
    public void set_Value(string value);
}
[SoapIncludeAttribute("Microsoft.TeamFoundation.VersionControl.Common.CheckinWorkItemInfo")]
[XmlIncludeAttribute("Microsoft.TeamFoundation.VersionControl.Common.NameValuePair")]
[SoapIncludeAttribute("Microsoft.TeamFoundation.VersionControl.Common.NameValuePair")]
[XmlIncludeAttribute("Microsoft.TeamFoundation.VersionControl.Common.ClientArtifact")]
[SoapIncludeAttribute("Microsoft.TeamFoundation.VersionControl.Common.ClientArtifact")]
public abstract class Microsoft.TeamFoundation.VersionControl.Common.NotificationEvent : object {
    public bool AllChangesIncluded;
    public string Notice;
    [ObsoleteAttribute]
public string Subscriber;
    [XmlArrayAttribute("CheckinNotes")]
[XmlArrayItemAttribute("CheckinNote")]
public ArrayList CheckinNotes;
    [XmlArrayAttribute("CheckinInformation")]
[XmlArrayItemAttribute("CheckinInformation")]
public ArrayList CheckinInformation;
    [XmlArrayAttribute("Artifacts")]
[XmlArrayItemAttribute("Artifact")]
public ArrayList Artifacts;
    private string m_policyOverrideComment;
    private string m_comment;
    private string m_owner;
    private string m_ownerDisplay;
    private string m_teamProject;
    private string m_timeZone;
    private string m_timeZoneOffset;
    private DateTime m_creationDate;
    public string Owner { get; public set; }
    public string OwnerDisplay { get; public set; }
    public string CreationDate { get; public set; }
    internal DateTime CreationDateInternal { get; internal set; }
    public string Comment { get; public set; }
    public string TimeZone { get; public set; }
    public string TimeZoneOffset { get; public set; }
    public static string TeamProjectListSeparator { get; }
    public string TeamProject { get; public set; }
    public string PolicyOverrideComment { get; public set; }
    protected NotificationEvent(DateTime creationDate, string owner, string comment);
    protected NotificationEvent(DateTime creationDate, string owner, string ownerDisplay, string comment);
    public string get_Owner();
    public void set_Owner(string value);
    public string get_OwnerDisplay();
    public void set_OwnerDisplay(string value);
    public string get_CreationDate();
    public void set_CreationDate(string value);
    internal DateTime get_CreationDateInternal();
    internal void set_CreationDateInternal(DateTime value);
    public string get_Comment();
    public void set_Comment(string value);
    public string get_TimeZone();
    public void set_TimeZone(string value);
    public string get_TimeZoneOffset();
    public void set_TimeZoneOffset(string value);
    public static string get_TeamProjectListSeparator();
    public string get_TeamProject();
    public void set_TeamProject(string value);
    public string get_PolicyOverrideComment();
    public void set_PolicyOverrideComment(string value);
    protected string CommentText(string comment, int maxCommentChars);
}
public class Microsoft.TeamFoundation.VersionControl.Common.ShelvedItemUri : VersionControlIntegrationUri {
    private string m_serverItem;
    private string m_shelvesetName;
    private string m_shelvesetOwner;
    private UriType m_type;
    public string ArtifactTitle { get; }
    public ShelvedItemUri(string teamFoundationServerUrl, string serverItem, string shelvesetName, string shelvesetOwner);
    public ShelvedItemUri(string teamFoundationServerUrl, string serverItem, string shelvesetName, string shelvesetOwner, UriType type);
    public ShelvedItemUri(TfsTeamProjectCollection teamProjectCollection, string serverItem, string shelvesetName, string shelvesetOwner);
    public ShelvedItemUri(TfsTeamProjectCollection teamProjectCollection, string serverItem, string shelvesetName, string shelvesetOwner, UriType type);
    public ShelvedItemUri(string serverItem, string shelvesetName, string shelvesetOwner, UriType type);
    public static void Decode(string shelvedItemArtifactName, String& serverItem, String& shelvesetName, String& shelvesetOwner);
    public static void Decode(string shelvedItemArtifactName, String& serverItem, String& shelvesetName, String& shelvesetOwner, UriType& type);
    public virtual string get_ArtifactTitle();
    private static string UrlString(string serverItem, string shelvesetName, string shelvesetOwner, UriType type);
}
[XmlIncludeAttribute("Microsoft.TeamFoundation.VersionControl.Common.CheckinWorkItemInfo")]
[SoapIncludeAttribute("Microsoft.TeamFoundation.VersionControl.Common.CheckinWorkItemInfo")]
[XmlIncludeAttribute("Microsoft.TeamFoundation.VersionControl.Common.NameValuePair")]
[SoapIncludeAttribute("Microsoft.TeamFoundation.VersionControl.Common.NameValuePair")]
[XmlIncludeAttribute("Microsoft.TeamFoundation.VersionControl.Common.ClientArtifact")]
[SoapIncludeAttribute("Microsoft.TeamFoundation.VersionControl.Common.ClientArtifact")]
[NotificationEventBindingsAttribute]
public class Microsoft.TeamFoundation.VersionControl.Common.ShelvesetEvent : NotificationEvent {
    private static int c_maxTitleCharacters;
    private static int c_minCommentCharacters;
    private string m_shelvesetName;
    private ShelvesetEventType m_eventType;
    private string m_title;
    private string m_contentTitle;
    public string Name { get; public set; }
    public ShelvesetEventType EventType { get; public set; }
    public string Title { get; public set; }
    public string ContentTitle { get; public set; }
    public ShelvesetEvent(string shelvesetName, DateTime creationDate, string owner, string comment, ShelvesetEventType eventType);
    public ShelvesetEvent(string shelvesetName, DateTime creationDate, string owner, string ownerDisplay, string comment, ShelvesetEventType eventType);
    public sealed virtual object Clone();
    public string get_Name();
    public void set_Name(string value);
    public ShelvesetEventType get_EventType();
    public void set_EventType(ShelvesetEventType value);
    private string GetEventTypeString();
    public string get_Title();
    public void set_Title(string value);
    public string get_ContentTitle();
    public void set_ContentTitle(string value);
}
public enum Microsoft.TeamFoundation.VersionControl.Common.ShelvesetEventType : Enum {
    public int value__;
    public static ShelvesetEventType None;
    public static ShelvesetEventType Created;
    public static ShelvesetEventType Updated;
}
public class Microsoft.TeamFoundation.VersionControl.Common.ShelvesetUri : VersionControlIntegrationUri {
    private string m_shelvesetName;
    private string m_shelvesetOwner;
    public string ArtifactTitle { get; }
    public ShelvesetUri(string teamFoundationServerUrl, string shelvesetName, string shelvesetOwner);
    public ShelvesetUri(TfsTeamProjectCollection teamProjectCollection, string shelvesetName, string shelvesetOwner);
    public ShelvesetUri(TfsTeamProjectCollection teamProjectCollection, string shelvesetName, string shelvesetOwner, UriType type);
    public ShelvesetUri(string teamFoundationServerUrl, string shelvesetName, string shelvesetOwner, UriType type);
    public ShelvesetUri(string shelvesetName, string shelvesetOwner, UriType type);
    public static void Decode(string shelvesetArtifactName, String& shelvesetName, String& shelvesetOwner);
    public static void Decode(string shelvesetArtifactName, String& shelvesetName, String& shelvesetOwner, UriType& type);
    private static string UrlString(string shelvesetName, string shelvesetOwner, UriType type);
    public virtual string get_ArtifactTitle();
}
public enum Microsoft.TeamFoundation.VersionControl.Common.UriType : Enum {
    public int value__;
    public static UriType Extended;
    public static UriType Normal;
}
public static class Microsoft.TeamFoundation.VersionControl.Common.VersionControlIntegrationConstants : object {
    public static string WorkItemToolIdentifier;
    public static string ServerPathExtendedAttributeString;
    public static string RepositoryUrlExtendedAttributeString;
    public static string ChangesetArtifact;
    public static string ChangesetUrlSuffix;
    public static string ChangesetTransformUrlSuffix;
    public static string VersionedItemArtifact;
    public static string VersionedItemUrlSuffix;
    public static string VersionedItemTransformUrlSuffix;
    public static string LatestItemVersionArtifact;
    public static string LatestItemVersionUrlSuffix;
    public static string LatestItemVersionTransformUrlSuffix;
    public static string LabelArtifact;
    public static string LabelUrlSuffix;
    public static string LabelTransformUrlSuffix;
    public static string CheckinNoteArtifact;
    public static string CheckinNoteUrlSuffix;
    public static string ShelvesetArtifact;
    public static string ShelvesetUrlSuffix;
    public static string ShelvesetTransformUrlSuffix;
    public static string ShelvedItemArtifact;
    public static string ShelvedItemUrlSuffix;
    public static string ShelvedItemTransformUrlSuffix;
    public static string ChangesetVersionQueryString;
    public static string ChangesetVersionDelimiter;
    public static string ChangesetVersionQueryUrlString;
    public static string DeletionIdString;
    public static string DeletionIdDelimiter;
    public static string DeletionIdUrlString;
    public static string ShelvesetNameQueryString;
    public static string ShelvesetNameDelimiter;
    public static string ShelvesetNameQueryUrlString;
    public static string ShelvesetOwnerQueryString;
    public static string ShelvesetOwnerDelimiter;
    public static string ShelvesetOwnerQueryUrlString;
    public static string WebViewQueryString;
    public static string VersionedItemExtendedUrl;
    public static string ChangesetExtendedUrl;
    public static string ChangesetNormalUrl;
    public static string ShelvedItemExtendedUrl;
    public static string ShelvesetExtendedUrl;
    public static string ShelvesetNormalUrl;
}
internal static class Microsoft.TeamFoundation.VersionControl.Common.VersionControlIntegrationResources : object {
    private static ResourceManager s_resMgr;
    public static string VersionControlNotRegistered;
    public static string ChangesetFormat;
    public static string CheckinContentTitle;
    public static string CheckinContentTitleNoComment;
    public static string CheckinEmailTitle;
    public static string CheckinEmailTitleTemplate;
    public static string ShelvesetFormat;
    public static string ShelvesetContentTitle;
    public static string ShelvesetContentTitleNoComment;
    public static string ShelvesetEmailTitle;
    public static string ShelvesetEmailTitleTemplate;
    public static string ShelvesetEmailTitleTemplateNoType;
    public static string ShelvesetCreated;
    public static string ShelvesetUpdated;
    public static string ShelvedItem;
    public static string TeamFoundationServerNameMissing;
    public static string TeamProjectListSeparator;
    public static string VersionedItem;
    public static ResourceManager Manager { get; }
    private static VersionControlIntegrationResources();
    public static ResourceManager get_Manager();
    public static string Get(string resourceName);
    public static string Get(string resourceName, CultureInfo culture);
    public static int GetInt(string resourceName);
    public static int GetInt(string resourceName, CultureInfo culture);
    public static bool GetBool(string resourceName);
    public static bool GetBool(string resourceName, CultureInfo culture);
    public static string Format(string resourceName, Object[] args);
    public static string Format(string resourceName, CultureInfo culture, Object[] args);
}
public class Microsoft.TeamFoundation.VersionControl.Common.VersionControlIntegrationUri : object {
    protected static char ParameterDelimiterCharacter;
    protected static char ValueDelimiterCharacter;
    protected static Char[] s_parameterDelimiters;
    private string m_teamFoundationServerUrl;
    private ILinking m_linkingProvider;
    protected ArtifactType m_artifactType;
    protected string m_artifactName;
    public ArtifactType ArtifactType { get; }
    public string TeamFoundationServerUrl { get; }
    public string ArtifactName { get; }
    public string ArtifactTitle { get; }
    public Uri Uri { get; }
    private string ArtifactUrl { get; }
    private string ArtifactUri { get; }
    public ArtifactId ArtifactId { get; }
    public VersionControlIntegrationUri(string teamFoundationServerUrl, ArtifactType artifactType, string artifactName);
    public VersionControlIntegrationUri(TfsTeamProjectCollection teamProjectCollection, ArtifactType artifactType, string artifactName);
    public VersionControlIntegrationUri(ILinking linkingProvider, string artifactUri);
    public VersionControlIntegrationUri(string teamFoundationServerUrl, string artifactUri);
    public VersionControlIntegrationUri(TfsTeamProjectCollection teamProjectCollection, string bisUri);
    public VersionControlIntegrationUri(string artifactUri);
    private static VersionControlIntegrationUri();
    private void InitializeWithLinkingProvider(ILinking linkingProvider, string artifactUri);
    public ArtifactType get_ArtifactType();
    public string get_TeamFoundationServerUrl();
    public string get_ArtifactName();
    public virtual string get_ArtifactTitle();
    public virtual string ToString();
    public Uri get_Uri();
    public string ToUrl();
    private ArtifactType string2artifactType(string artifactType);
    private TfsTeamProjectCollection GetTeamProjectCollection(string teamProjectCollectionUrl);
    private string get_ArtifactUrl();
    private string get_ArtifactUri();
    public ArtifactId get_ArtifactId();
}
public class Microsoft.TeamFoundation.VersionControl.Common.VersionControlNotRegisteredException : TeamFoundationServerException {
    public VersionControlNotRegisteredException(string teamFoundationServerName);
}
public class Microsoft.TeamFoundation.VersionControl.Common.VersionedItemUri : VersionControlIntegrationUri {
    private string m_serverItem;
    private int m_changeset;
    private int m_deletionId;
    private UriType m_type;
    public string ArtifactTitle { get; }
    public VersionedItemUri(string teamFoundationServerUrl, string serverItem, int changeset, int deletionId);
    public VersionedItemUri(string teamFoundationServerUrl, string serverItem, int changeset, int deletionId, UriType type);
    public VersionedItemUri(TfsTeamProjectCollection teamProjectCollection, string serverItem, int changeset, int deletionId);
    public VersionedItemUri(TfsTeamProjectCollection teamProjectCollection, string serverItem, int changeset, int deletionId, UriType type);
    public VersionedItemUri(string serverItem, int changeset, int deletionId, UriType type);
    public static void Decode(string versionedItemArtifactName, String& serverItem);
    public static void Decode(string versionedItemArtifactName, String& serverItem, Int32& changeset, Int32& deletionId);
    public static void Decode(string versionedItemArtifactName, String& serverItem, Int32& changeset, Int32& deletionId, UriType& type);
    public virtual string get_ArtifactTitle();
    private static string UrlString(string serverItem, int changeset, int deletionId, UriType type);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
