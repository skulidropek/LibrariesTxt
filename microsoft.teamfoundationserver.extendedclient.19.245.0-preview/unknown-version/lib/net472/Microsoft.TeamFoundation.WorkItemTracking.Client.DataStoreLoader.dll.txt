[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
internal static class Microsoft.TeamFoundation.WorkItemTracking.Client.DataStore.DataStoreNative : object {
    private static bool s_is32Bit;
    private static DataStoreNative();
    public static void CreateDatastore(IntPtr& handle);
    public static void ReleaseDatastore(IntPtr handle);
    public static void GetUserDisplayMode(IntPtr handle, Int32& v);
    public static void GetLocale(IntPtr handle, Int32& v);
    public static void GetComparisonStyle(IntPtr handle, Int32& v);
    public static void GetNodeUserRights(IntPtr handle, int lObjectID, int lTreeID, int fRecursive, Int32& v);
    public static void GetAllowedValues(IntPtr handle, int lFieldId, int dwType, int lObjectType, int lTreeId, int fScopedToWorkItemType, object varsFilterFieldIDs, object varsFilterFieldTypes, object varsFilterValues, Int32& cValues, IntPtr& pValues);
    public static void SyncToCache(IntPtr handle, Boolean& v);
    public static void BeginDataStoreInit(IntPtr handle, string defaultCachePath, string instanceId, int cacheVersion);
    public static void FinishDataStoreInit(IntPtr handle, int locale, int comparisonStyle, int displayMode, string userSamName, string userFriendlyName, string userSid);
    public static void BrieAccessCheck(IntPtr handle, object callback, int flags, int fieldId);
    public static void BrieInvalidateFields(IntPtr handle, object callback, int fieldId);
    public static void GetMetadataHave(IntPtr handle, int cMax, Int64* prgStamps, UInt32* prgTypes, Int32& cnt, String& dbstamp);
    public static void UpdateMetadata(IntPtr handle, object rowset, string dbstamp, UInt32& changes);
    public static object GetMetadata(IntPtr handle, int sta, Object& v);
}
internal static class Microsoft.TeamFoundation.WorkItemTracking.Client.DataStore.DataStoreNative32 : object {
    public static void CreateDatastore(IntPtr& handle);
    public static void ReleaseDatastore(IntPtr handle);
    public static void GetUserDisplayMode(IntPtr handle, Int32& v);
    public static void GetLocale(IntPtr handle, Int32& v);
    public static void GetComparisonStyle(IntPtr handle, Int32& v);
    public static void GetNodeUserRights(IntPtr handle, int lObjectID, int lTreeID, int fRecursive, Int32& v);
    public static void GetAllowedValues(IntPtr handle, int lFieldId, int dwType, int lObjectType, int lTreeId, int fScopedToWorkItemType, object varsFilterFieldIDs, object varsFilterFieldTypes, object varsFilterValues, Int32& cValues, IntPtr& pValues);
    public static void SyncToCache(IntPtr handle, Boolean& v);
    public static void BeginDataStoreInit(IntPtr handle, string defaultCachePath, string instanceId, int cacheVersion);
    public static void FinishDataStoreInit(IntPtr handle, int locale, int comparisonStyle, int displayMode, string userSamName, string userFriendlyName, string userSid);
    public static void BrieAccessCheck(IntPtr handle, object callback, int flags, int fieldId);
    public static void BrieInvalidateFields(IntPtr handle, object callback, int fieldId);
    public static void GetMetadataHave(IntPtr handle, int cMax, Int64* prgStamps, UInt32* prgTypes, Int32& cnt, String& dbstamp);
    public static void UpdateMetadata(IntPtr handle, object rowset, string dbstamp, UInt32& changes);
    public static object GetMetadata(IntPtr handle, int sta, Object& v);
}
internal static class Microsoft.TeamFoundation.WorkItemTracking.Client.DataStore.DataStoreNative64 : object {
    public static void CreateDatastore(IntPtr& handle);
    public static void ReleaseDatastore(IntPtr handle);
    public static void GetUserDisplayMode(IntPtr handle, Int32& v);
    public static void GetLocale(IntPtr handle, Int32& v);
    public static void GetComparisonStyle(IntPtr handle, Int32& v);
    public static void GetNodeUserRights(IntPtr handle, int lObjectID, int lTreeID, int fRecursive, Int32& v);
    public static void GetAllowedValues(IntPtr handle, int lFieldId, int dwType, int lObjectType, int lTreeId, int fScopedToWorkItemType, object varsFilterFieldIDs, object varsFilterFieldTypes, object varsFilterValues, Int32& cValues, IntPtr& pValues);
    public static void SyncToCache(IntPtr handle, Boolean& v);
    public static void BeginDataStoreInit(IntPtr handle, string defaultCachePath, string instanceId, int cacheVersion);
    public static void FinishDataStoreInit(IntPtr handle, int locale, int comparisonStyle, int displayMode, string userSamName, string userFriendlyName, string userSid);
    public static void BrieAccessCheck(IntPtr handle, object callback, int flags, int fieldId);
    public static void BrieInvalidateFields(IntPtr handle, object callback, int fieldId);
    public static void GetMetadataHave(IntPtr handle, int cMax, Int64* prgStamps, UInt32* prgTypes, Int32& cnt, String& dbstamp);
    public static void UpdateMetadata(IntPtr handle, object rowset, string dbstamp, UInt32& changes);
    public static object GetMetadata(IntPtr handle, int sta, Object& v);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
