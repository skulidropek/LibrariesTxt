public static class Microsoft.VisualStudio.TestPlatform.TestExecutor.UnitTestClient : object {
    public static void CreateDefaultUI();
    public static void Run(string arguments);
    internal static String[] SplitArguments(string commandLine);
}
internal class Microsoft.VisualStudio.TestPlatform.TestHost.DebugAssertException : Exception {
    [CompilerGeneratedAttribute]
private string <StackTrace>k__BackingField;
    public string StackTrace { get; }
    public DebugAssertException(string message, string stackTrace);
    [CompilerGeneratedAttribute]
public virtual string get_StackTrace();
}
internal class Microsoft.VisualStudio.TestPlatform.TestHost.DefaultEngineInvoker : object {
    private static int ClientListenTimeOut;
    private static string EndpointArgument;
    private static string RoleArgument;
    private static string ParentProcessIdArgument;
    private static string LogFileArgument;
    private static string TraceLevelArgument;
    private static string DataCollectionPortArgument;
    private static string TelemetryOptedIn;
    private ITestRequestHandler requestHandler;
    private IDataCollectionTestCaseEventSender dataCollectionTestCaseEventSender;
    private IProcessHelper processHelper;
    internal DefaultEngineInvoker(ITestRequestHandler requestHandler, IDataCollectionTestCaseEventSender dataCollectionTestCaseEventSender, IProcessHelper processHelper);
    public sealed virtual void Invoke(IDictionary`2<string, string> argsDictionary);
    private static RequestData GetRequestData(IDictionary`2<string, string> argsDictionary);
    private void ConnectToDatacollector(int dcPort);
    private void SetParentProcessExitCallback(IDictionary`2<string, string> argsDictionary);
    private static TestHostConnectionInfo GetConnectionInfo(IDictionary`2<string, string> argsDictionary);
    private static void InitializeEqtTrace(IDictionary`2<string, string> argsDictionary);
    private Task StartProcessingAsync(ITestRequestHandler requestHandler, ITestHostManagerFactory managerFactory);
}
public interface Microsoft.VisualStudio.TestPlatform.TestHost.IEngineInvoker {
    public abstract virtual void Invoke(IDictionary`2<string, string> argsDictionary);
}
public class Microsoft.VisualStudio.TestPlatform.TestHost.Program : object {
    private static string TestSourceArgumentString;
    public static void Main(String[] args);
    public static void Run(String[] args);
    private static IEngineInvoker GetEngineInvoker(IDictionary`2<string, string> argsDictionary);
    private static void WaitForDebuggerIfEnabled();
    private static void SetCultureSpecifiedByUser();
    internal static bool IsDebuggerPresent();
    internal static void DebugBreak();
}
internal class Microsoft.VisualStudio.TestPlatform.TestHost.TestHostTraceListener : DefaultTraceListener {
    public static void Setup();
    public virtual void Fail(string message);
    public virtual void Fail(string message, string detailMessage);
    public static void ShowDialog(string stackTrace, string message, string detailMessage, string _);
    private static DebugAssertException GetException(string message);
}
