internal static class Microsoft.Toolkit.Forms.UI.XamlHost.Interop.Win32.NativeDefines : object {
    public static int WM_MOVE;
    public static int WM_SIZE;
    public static int WM_WINDOWPOSCHANGING;
    public static int WM_WINDOWPOSCHANGED;
    public static int WM_SETFOCUS;
    public static int WM_KILLFOCUS;
    public static int WM_KEYDOWN;
    public static int WM_KEYUP;
    public static int WM_DPICHANGED_AFTERPARENT;
    public static UInt32 WS_EX_CONTROLPARENT;
    public static int GWL_STYLE;
    public static int GWL_EXSTYLE;
    [CompilerGeneratedAttribute]
private static IntPtr <HWND_TOP>k__BackingField;
    [CompilerGeneratedAttribute]
private static IntPtr <HWND_TOPMOST>k__BackingField;
    public static IntPtr HWND_TOP { get; }
    public static IntPtr HWND_TOPMOST { get; }
    private static NativeDefines();
    [CompilerGeneratedAttribute]
public static IntPtr get_HWND_TOP();
    [CompilerGeneratedAttribute]
public static IntPtr get_HWND_TOPMOST();
}
internal static class Microsoft.Toolkit.Forms.UI.XamlHost.Interop.Win32.SafeNativeMethods : object {
    public static IntPtr GetFocus();
    internal static IntPtr SetWindowPos(IntPtr hWnd, IntPtr hWndInsertAfter, int x, int y, int cx, int cy, int flags);
    public static UInt32 GetDpiForWindow(IntPtr hWnd);
}
internal static class Microsoft.Toolkit.Forms.UI.XamlHost.Interop.Win32.SetWindowPosFlags : object {
    public static int SHOWWINDOW;
}
internal static class Microsoft.Toolkit.Forms.UI.XamlHost.Interop.Win32.UnsafeNativeMethods : object {
    internal static IntPtr IntSetFocus(IntPtr hWnd);
    internal static int SetWindowLong(IntPtr hWnd, int nIndex, UInt32 dwNewLong);
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class Microsoft.Toolkit.Forms.UI.XamlHost.Properties.Resources : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
}
[DesignerCategoryAttribute("code")]
public class Microsoft.Toolkit.Forms.UI.XamlHost.WindowsXamlHost : WindowsXamlHostBase {
    [CompilerGeneratedAttribute]
private string <InitialTypeName>k__BackingField;
    [ReadOnlyAttribute("False")]
[BrowsableAttribute("True")]
[DefaultValueAttribute("False")]
[CategoryAttribute("Layout")]
[DesignerSerializationVisibilityAttribute("1")]
public bool AutoSize { get; public set; }
    [ReadOnlyAttribute("False")]
[BrowsableAttribute("True")]
[CategoryAttribute("Layout")]
[DesignerSerializationVisibilityAttribute("1")]
public AutoSizeMode AutoSizeMode { get; public set; }
    [BrowsableAttribute("True")]
[CategoryAttribute("XAML")]
public string InitialTypeName { get; public set; }
    [BrowsableAttribute("False")]
[DesignerSerializationVisibilityAttribute("0")]
public UIElement Child { get; public set; }
    public virtual bool get_AutoSize();
    public virtual void set_AutoSize(bool value);
    public AutoSizeMode get_AutoSizeMode();
    public void set_AutoSizeMode(AutoSizeMode value);
    [CompilerGeneratedAttribute]
public string get_InitialTypeName();
    [CompilerGeneratedAttribute]
public void set_InitialTypeName(string value);
    public UIElement get_Child();
    public void set_Child(UIElement value);
    protected virtual void OnHandleCreated(EventArgs e);
}
[DesignerCategoryAttribute("code")]
public abstract class Microsoft.Toolkit.Forms.UI.XamlHost.WindowsXamlHostBase : ContainerControl {
    private static IXamlMetadataContainer _metadataContainer;
    private DesktopWindowXamlSource _xamlSource;
    private UIElement _childInternal;
    private Size _lastXamlContentPreferredSize;
    private IntPtr _xamlIslandWindowHandle;
    private double _lastDpi;
    [CompilerGeneratedAttribute]
private EventHandler ChildChanged;
    private Guid _lastFocusRequest;
    private bool _forceFocusNavigation;
    protected static IXamlMetadataContainer MetadataContainer { get; }
    [BrowsableAttribute("False")]
[DesignerSerializationVisibilityAttribute("0")]
protected UIElement ChildInternal { get; protected set; }
    [ReadOnlyAttribute("False")]
[BrowsableAttribute("True")]
[DefaultValueAttribute("False")]
[CategoryAttribute("Layout")]
[DesignerSerializationVisibilityAttribute("1")]
[DeprecatedAttribute]
public bool DpiScalingRenderTransform { get; public set; }
    public bool Focused { get; }
    protected Size DefaultSize { get; }
    private static WindowsXamlHostBase();
    protected WindowsXamlHostBase(string typeName);
    protected static IXamlMetadataContainer get_MetadataContainer();
    [CompilerGeneratedAttribute]
public void add_ChildChanged(EventHandler value);
    [CompilerGeneratedAttribute]
public void remove_ChildChanged(EventHandler value);
    public object GetUwpInternalObject();
    protected UIElement get_ChildInternal();
    protected void set_ChildInternal(UIElement value);
    protected virtual void SetContent(UIElement newValue);
    public bool get_DpiScalingRenderTransform();
    public void set_DpiScalingRenderTransform(bool value);
    protected virtual void Dispose(bool disposing);
    protected virtual void OnHandleCreated(EventArgs e);
    protected virtual void OnHandleDestroyed(EventArgs e);
    public virtual bool get_Focused();
    protected virtual void Select(bool directed, bool forward);
    protected virtual bool ProcessTabKey(bool forward);
    public virtual bool PreProcessMessage(Message& msg);
    private void OnTakeFocusRequested(DesktopWindowXamlSource sender, DesktopWindowXamlSourceTakeFocusRequestedEventArgs args);
    public virtual Size GetPreferredSize(Size proposedSize);
    protected void UpdateDpiScalingFactor();
    private Size GetRootXamlElementDesiredSize();
    protected virtual Size get_DefaultSize();
    protected void OnChildSizeChanged(object sender, object e);
    protected void OnWindowXamlHostSizeChanged(object sender, EventArgs e);
    private void SetDesktopWindowXamlSourceWindowPos();
    [BrowsableAttribute("False")]
[EditorBrowsableAttribute("1")]
protected virtual void OnPaint(PaintEventArgs e);
    [BrowsableAttribute("False")]
[EditorBrowsableAttribute("1")]
protected virtual void OnPaintBackground(PaintEventArgs pevent);
    protected virtual void WndProc(Message& m);
}
[ExtensionAttribute]
public static class Microsoft.Toolkit.Forms.UI.XamlHost.WrapperLookup : object {
    private static IDictionary`2<UIElement, WeakReference`1<WindowsXamlHostBase>> _controlCollection;
    private static WrapperLookup();
    [ExtensionAttribute]
public static WindowsXamlHostBase GetWrapper(UIElement control);
    [ExtensionAttribute]
public static void SetWrapper(UIElement control, WindowsXamlHostBase wrapper);
    [ExtensionAttribute]
public static void ClearWrapper(UIElement control);
}
internal static class Microsoft.Toolkit.Win32.UI.Controls.Interop.Win32.ExternDll : object {
    internal static string Kernel32;
    internal static string User32;
    internal static string Ntdll;
    internal static string Gdi32;
    internal static string EdgeHtml;
    internal static string ShCore;
}
internal enum Microsoft.Toolkit.Win32.UI.Controls.Interop.Win32.WM : Enum {
    public int value__;
    public static WM NULL;
    public static WM CREATE;
    public static WM DESTROY;
    public static WM MOVE;
    public static WM SIZE;
    public static WM ACTIVATE;
    public static WM SETFOCUS;
    public static WM KILLFOCUS;
    public static WM ENABLE;
    public static WM SETREDRAW;
    public static WM SETTEXT;
    public static WM GETTEXT;
    public static WM GETTEXTLENGTH;
    public static WM PAINT;
    public static WM CLOSE;
    public static WM QUERYENDSESSION;
    public static WM QUIT;
    public static WM QUERYOPEN;
    public static WM ERASEBKGND;
    public static WM SYSCOLORCHANGE;
    public static WM SHOWWINDOW;
    public static WM CTLCOLOR;
    public static WM WININICHANGE;
    public static WM SETTINGCHANGE;
    public static WM ACTIVATEAPP;
    public static WM SETCURSOR;
    public static WM MOUSEACTIVATE;
    public static WM CHILDACTIVATE;
    public static WM QUEUESYNC;
    public static WM GETMINMAXINFO;
    public static WM WINDOWPOSCHANGING;
    public static WM WINDOWPOSCHANGED;
    public static WM CONTEXTMENU;
    public static WM STYLECHANGING;
    public static WM STYLECHANGED;
    public static WM DISPLAYCHANGE;
    public static WM GETICON;
    public static WM SETICON;
    public static WM NCCREATE;
    public static WM NCDESTROY;
    public static WM NCCALCSIZE;
    public static WM NCHITTEST;
    public static WM NCPAINT;
    public static WM NCACTIVATE;
    public static WM GETDLGCODE;
    public static WM SYNCPAINT;
    public static WM NCMOUSEMOVE;
    public static WM NCLBUTTONDOWN;
    public static WM NCLBUTTONUP;
    public static WM NCLBUTTONDBLCLK;
    public static WM NCRBUTTONDOWN;
    public static WM NCRBUTTONUP;
    public static WM NCRBUTTONDBLCLK;
    public static WM NCMBUTTONDOWN;
    public static WM NCMBUTTONUP;
    public static WM NCMBUTTONDBLCLK;
    public static WM KEYDOWN;
    public static WM KEYUP;
    public static WM CHAR;
    public static WM SYSKEYDOWN;
    public static WM SYSKEYUP;
    public static WM SYSCHAR;
    public static WM SYSDEADCHAR;
    public static WM COMMAND;
    public static WM SYSCOMMAND;
    public static WM MOUSEMOVE;
    public static WM LBUTTONDOWN;
    public static WM LBUTTONUP;
    public static WM LBUTTONDBLCLK;
    public static WM RBUTTONDOWN;
    public static WM RBUTTONUP;
    public static WM RBUTTONDBLCLK;
    public static WM MBUTTONDOWN;
    public static WM MBUTTONUP;
    public static WM MBUTTONDBLCLK;
    public static WM MOUSEWHEEL;
    public static WM XBUTTONDOWN;
    public static WM XBUTTONUP;
    public static WM XBUTTONDBLCLK;
    public static WM MOUSEHWHEEL;
    public static WM PARENTNOTIFY;
    public static WM CAPTURECHANGED;
    public static WM POWERBROADCAST;
    public static WM DEVICECHANGE;
    public static WM ENTERSIZEMOVE;
    public static WM EXITSIZEMOVE;
    public static WM IME_SETCONTEXT;
    public static WM IME_NOTIFY;
    public static WM IME_CONTROL;
    public static WM IME_COMPOSITIONFULL;
    public static WM IME_SELECT;
    public static WM IME_CHAR;
    public static WM IME_REQUEST;
    public static WM IME_KEYDOWN;
    public static WM IME_KEYUP;
    public static WM NCMOUSELEAVE;
    public static WM TABLET_DEFBASE;
    public static WM TABLET_ADDED;
    public static WM TABLET_DELETED;
    public static WM TABLET_FLICK;
    public static WM TABLET_QUERYSYSTEMGESTURESTATUS;
    public static WM DPICHANGED_AFTERPARENT;
    public static WM CUT;
    public static WM COPY;
    public static WM PASTE;
    public static WM CLEAR;
    public static WM UNDO;
    public static WM RENDERFORMAT;
    public static WM RENDERALLFORMATS;
    public static WM DESTROYCLIPBOARD;
    public static WM DRAWCLIPBOARD;
    public static WM PAINTCLIPBOARD;
    public static WM VSCROLLCLIPBOARD;
    public static WM SIZECLIPBOARD;
    public static WM ASKCBFORMATNAME;
    public static WM CHANGECBCHAIN;
    public static WM HSCROLLCLIPBOARD;
    public static WM QUERYNEWPALETTE;
    public static WM PALETTEISCHANGING;
    public static WM PALETTECHANGED;
    public static WM HOTKEY;
    public static WM PRINT;
    public static WM PRINTCLIENT;
    public static WM APPCOMMAND;
    public static WM THEMECHANGED;
    public static WM DWMCOMPOSITIONCHANGED;
    public static WM DWMNCRENDERINGCHANGED;
    public static WM DWMCOLORIZATIONCOLORCHANGED;
    public static WM DWMWINDOWMAXIMIZEDCHANGE;
    public static WM GETTITLEBARINFOEX;
    public static WM DWMSENDICONICTHUMBNAIL;
    public static WM DWMSENDICONICLIVEPREVIEWBITMAP;
    public static WM USER;
    public static WM TRAYMOUSEMESSAGE;
    public static WM APP;
}
[CompilerGeneratedAttribute]
[GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "15.7.0.0")]
internal class Microsoft.Toolkit.Win32.UI.Interop.Properties.Settings : ApplicationSettingsBase {
    private static Settings defaultInstance;
    public static Settings Default { get; }
    private static Settings();
    public static Settings get_Default();
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("e3dcd8c7-3057-4692-99c3-7b7720afda31")]
internal interface Microsoft.Toolkit.Win32.UI.XamlHost.IDesktopWindowXamlSourceNative2 {
    public IntPtr WindowHandle { get; }
    public abstract virtual void AttachToWindow(IntPtr parentWnd);
    public abstract virtual IntPtr get_WindowHandle();
    public abstract virtual bool PreTranslateMessage(Message& message);
}
internal class ThisAssembly : object {
    internal static string AssemblyVersion;
    internal static string AssemblyFileVersion;
    internal static string AssemblyInformationalVersion;
    internal static string AssemblyName;
    internal static string AssemblyTitle;
    internal static string AssemblyConfiguration;
    internal static string PublicKey;
    internal static string PublicKeyToken;
    internal static string RootNamespace;
}
