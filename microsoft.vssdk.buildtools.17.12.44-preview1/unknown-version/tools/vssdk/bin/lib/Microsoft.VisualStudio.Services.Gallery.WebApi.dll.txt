public static class Microsoft.VisualStudio.Services.Gallery.GalleryResourceIds : object {
    public static string AreaId;
    public static string GalleryAreaName;
    public static string GalleryAreaNamel2;
    public static string PublishersResource;
    public static string PublisherAssetResource;
    public static string AzurePublisherResource;
    public static string ExtensionsResource;
    public static string ExtensionValidatorResource;
    public static string AccountsResource;
    public static string AccountsByNameResource;
    public static string ExtensionShareResource;
    public static string AssetsResourceName;
    public static string AssetByNameResourceName;
    public static string PrivateAssetResourceName;
    public static string AuthenticatedAssetResourceName;
    public static string PackageResourceName;
    public static string VSPackageResourceName;
    public static string CertificatessResourceName;
    public static string StatisticsResourceName;
    public static string CategoriesResourceName;
    public static string SecuredCategoriesResourceName;
    public static string SigningKeyResourceName;
    public static string PublisherQueryResource;
    public static string ExtensionQueryResource;
    public static string AcquisitionRequestsResource;
    public static string AcquisitionOptionsResource;
    public static string PublisherPermissionsResource;
    public static string ExtensionDraftsResource;
    public static string ExtensionEventsResourceName;
    public static string ExtensionDailyStatisticsResourceName;
    public static string ReviewsResource;
    public static string ExtensionReportsResource;
    public static string NotificationsResource;
    public static string GalleryUserSettingsResource;
    public static string QnAResourceName;
    public static string VerificationLogResourceName;
    public static string ContentVerificationLogResourceName;
    public static string CVSResourceName;
    public static string ExtensionsLocationIdString;
    public static string ExtensionsByPublisherLocationIdString;
    public static string PublisherPermissionsLocationIdString;
    public static string ExtensionPermissionsLocationIdString;
    public static string StatisticsLocationIdString;
    public static string AllCategoriesLocationIdString;
    public static string CategoryLocationIdString;
    public static string RootCategoriesLocationIdString;
    public static string CategoryTreeLocationIdString;
    public static string PublisherLocationIdString;
    public static Guid PublisherLocationId;
    public static Guid AzurePublisherLocationId;
    public static Guid PublisherQueryLocationId;
    public static Guid ExtensionQueryLocationId;
    public static Guid SigningKeyLocationId;
    public static Guid CategoryLocationId;
    public static Guid AllCategoriesLocationId;
    public static Guid RootCategoriesLocationId;
    public static Guid CategoryTreeLocationId;
    public static Guid SecuredCategoryLocationId;
    public static Guid CertificateLocationId;
    public static Guid AssetLocationByIdId;
    public static Guid AssetLocationByNameId;
    public static Guid PrivateAssetLocationId;
    public static Guid AuthenticatedAssetLocationId;
    public static Guid StatisticsLocationId;
    public static Guid PackageLocationId;
    public static Guid VSPackageLocationId;
    public static Guid ExtensionsLocationId;
    public static Guid ExtensionsByPublisherLocationId;
    public static Guid ExtensionShareLocationId;
    public static Guid ExtensionDataLocationId;
    public static Guid AcquisitionRequestLocationId;
    public static Guid AcquisitionOptionLocationId;
    public static Guid PublisherPermissionsLocationId;
    public static Guid ExtensionPermissionsLocationId;
    public static string ExtensionByPublisherShareLocationIdString;
    public static Guid ExtensionByPublisherShareLocationId;
    public static string ExtensionShareByPublisherLocationIdString;
    public static Guid ExtensionShareByPublisherLocationId;
    public static string FeaturedExtensionIdString;
    public static Guid FeaturedExtensionId;
    public static string ExtensionStatisticsL2IdString;
    public static Guid StatisticsExtensionL2Id;
    public static string ReviewsLocationIdString;
    public static Guid ReviewsLocationId;
    public static string ReviewsSummaryLocationIdString;
    public static Guid ReviewsSummaryLocationId;
    public static string ReviewsUpdateLocationIdString;
    public static Guid ReviewsUpdateLocationId;
    public static string ExtensionValidatorIdString;
    public static Guid ExtensionValidatorId;
    public static string GalleryUserSettingsLocationIdString;
    public static Guid GalleryUserSettingsLocationId;
    public static string ExtensionEventsLocationIdString;
    public static Guid ExtensionEventsLocationId;
    public static string ReadExtensionEventsLocationIdString;
    public static Guid ReadExtensionEventsLocationId;
    public static string ExtensionDailyStatisticsLocationIdString;
    public static Guid ExtensionDailyStatisticsLocationId;
    public static string ExtensionReportsLocationIdString;
    public static Guid ExtensionReportsLocationId;
    public static string NotificationsIdString;
    public static Guid NotificationsId;
    public static string PublishExtensionDailyStatisticsLocationIdString;
    public static Guid PublishExtensionDailyStatisticsLocationId;
    public static string ExtensionDailyStatisticsLocationIdStringL2;
    public static Guid ExtensionDailyStatisticsLocationIdL2;
    public static string PublishExtensionDailyStatisticsLocationIdStringL2;
    public static Guid PublishExtensionDailyStatisticsLocationIdL2;
    public static string QnAQuestionLocationIdString;
    public static Guid QnAQuestionLocationId;
    public static string QnAQuestionUpdateLocationIdString;
    public static Guid QnAQuestionUpdateLocationId;
    public static string QnAResponseUpdateLocationIdString;
    public static Guid QnAResponseUpdateLocationId;
    public static string QnAReportQuestionLocationIdString;
    public static Guid QnAReportQuestionLocationId;
    public static string VerificationLogLocationIdString;
    public static Guid VerificationLogLocationId;
    public static string ContentVerificationLogLocationIdString;
    public static Guid ContentVerificationLogLocationId;
    public static string ExtensionDraftByPublisherLocationIdString;
    public static Guid ExtensionDraftByPublisherLocationId;
    public static string ExtensionAssetInDraftByPublisherLocationIdString;
    public static Guid ExtensionAssetInDraftByPublisherLocationId;
    public static string ExtensionDraftByExtensionLocationIdString;
    public static Guid ExtensionDraftByExtensionLocationId;
    public static string ExtensionAssetInDraftByExtensionLocationIdString;
    public static Guid ExtensionAssetInDraftByExtensionLocationId;
    public static string PublisherAssetLocationIdString;
    public static Guid PublisherAssetLocationId;
    public static string CVSLocationIdString;
    public static Guid CVSLocationId;
    private static GalleryResourceIds();
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.AccountCollectionMapping : object {
    [CompilerGeneratedAttribute]
private Guid <AccountId>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <CollectionId>k__BackingField;
    public Guid AccountId { get; public set; }
    public Guid CollectionId { get; public set; }
    [CompilerGeneratedAttribute]
public Guid get_AccountId();
    [CompilerGeneratedAttribute]
public void set_AccountId(Guid value);
    [CompilerGeneratedAttribute]
public Guid get_CollectionId();
    [CompilerGeneratedAttribute]
public void set_CollectionId(Guid value);
}
[GenerateAllConstantsAttribute("")]
public static class Microsoft.VisualStudio.Services.Gallery.WebApi.AcquisitionConstants : object {
    public static string TrialExpiryDate;
    public static string AccountIdParam;
    public static string ItemNameParam;
    public static string TargetIdParam;
    public static string AppIdParam;
    public static string AcquisitionOptionParam;
    public static string BuyString;
    public static string InstallQueryParam;
    public static string FreeInstallQueryParam;
    public static string SkipBuyQueryParam;
    public static string OfferSubscription;
    public static string HasInstallPermission;
    public static string OptedInCookieForNewAcquisitionExperience;
    public static string OptInCookieForNewAcquisitionExperienceForResources;
    public static string OptInCookieForNewAcqExpForFirstPartyPaidExtensions;
    public static string OptInCookieForNewAcqExpForThirdPartyPaidExtensions;
    public static string OptInCookieForNewAcquisitionExperienceForOffers;
    public static string CookieForNewTokenAcquisitionExperience;
    public static string SupportNativeAADUserInMSAOrg;
    public static string CookieForNewTokenAcquisitionExperienceForOffers;
    public static string CookieForNewTokenAcquisitionExperienceForTestManager;
    public static string CookieForJourneyIdForNewAcquisitionExperience;
    public static string EnableNewAcquisitionOnPremExperience;
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.AcquisitionOption.AcquisitionOptions : object {
    [CompilerGeneratedAttribute]
private string <ItemId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Target>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<AcquisitionOperation> <Operations>k__BackingField;
    [CompilerGeneratedAttribute]
private AcquisitionOperation <DefaultOperation>k__BackingField;
    public string ItemId { get; public set; }
    public string Target { get; public set; }
    public List`1<AcquisitionOperation> Operations { get; public set; }
    public AcquisitionOperation DefaultOperation { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ItemId();
    [CompilerGeneratedAttribute]
public void set_ItemId(string value);
    [CompilerGeneratedAttribute]
public string get_Target();
    [CompilerGeneratedAttribute]
public void set_Target(string value);
    [CompilerGeneratedAttribute]
public List`1<AcquisitionOperation> get_Operations();
    [CompilerGeneratedAttribute]
public void set_Operations(List`1<AcquisitionOperation> value);
    [CompilerGeneratedAttribute]
public AcquisitionOperation get_DefaultOperation();
    [CompilerGeneratedAttribute]
public void set_DefaultOperation(AcquisitionOperation value);
}
public enum Microsoft.VisualStudio.Services.Gallery.WebApi.AcquisitionRequest.AcquisitionAssignmentType : Enum {
    public int value__;
    public static AcquisitionAssignmentType None;
    public static AcquisitionAssignmentType Me;
    public static AcquisitionAssignmentType All;
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.AcquisitionRequest.AcquisitionOperation : object {
    [CompilerGeneratedAttribute]
private AcquisitionOperationType <OperationType>k__BackingField;
    [CompilerGeneratedAttribute]
private AcquisitionOperationState <OperationState>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Reason>k__BackingField;
    public AcquisitionOperationType OperationType { get; public set; }
    public AcquisitionOperationState OperationState { get; public set; }
    public string Reason { get; public set; }
    [CompilerGeneratedAttribute]
public AcquisitionOperationType get_OperationType();
    [CompilerGeneratedAttribute]
public void set_OperationType(AcquisitionOperationType value);
    [CompilerGeneratedAttribute]
public AcquisitionOperationState get_OperationState();
    [CompilerGeneratedAttribute]
public void set_OperationState(AcquisitionOperationState value);
    [CompilerGeneratedAttribute]
public string get_Reason();
    [CompilerGeneratedAttribute]
public void set_Reason(string value);
}
public enum Microsoft.VisualStudio.Services.Gallery.WebApi.AcquisitionRequest.AcquisitionOperationState : Enum {
    public int value__;
    public static AcquisitionOperationState Disallow;
    public static AcquisitionOperationState Allow;
    public static AcquisitionOperationState Completed;
}
public enum Microsoft.VisualStudio.Services.Gallery.WebApi.AcquisitionRequest.AcquisitionOperationType : Enum {
    public int value__;
    public static AcquisitionOperationType Get;
    public static AcquisitionOperationType Install;
    public static AcquisitionOperationType Buy;
    public static AcquisitionOperationType Try;
    public static AcquisitionOperationType Request;
    public static AcquisitionOperationType None;
    public static AcquisitionOperationType PurchaseRequest;
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.AcquisitionRequest.ExtensionAcquisitionRequest : object {
    [CompilerGeneratedAttribute]
private string <ItemId>k__BackingField;
    [CompilerGeneratedAttribute]
private AcquisitionOperationType <OperationType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BillingId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Quantity>k__BackingField;
    [CompilerGeneratedAttribute]
private AcquisitionAssignmentType <AssignmentType>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <Targets>k__BackingField;
    [CompilerGeneratedAttribute]
private JObject <Properties>k__BackingField;
    public string ItemId { get; public set; }
    public AcquisitionOperationType OperationType { get; public set; }
    public string BillingId { get; public set; }
    public int Quantity { get; public set; }
    public AcquisitionAssignmentType AssignmentType { get; public set; }
    public List`1<string> Targets { get; public set; }
    public JObject Properties { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ItemId();
    [CompilerGeneratedAttribute]
public void set_ItemId(string value);
    [CompilerGeneratedAttribute]
public AcquisitionOperationType get_OperationType();
    [CompilerGeneratedAttribute]
public void set_OperationType(AcquisitionOperationType value);
    [CompilerGeneratedAttribute]
public string get_BillingId();
    [CompilerGeneratedAttribute]
public void set_BillingId(string value);
    [CompilerGeneratedAttribute]
public int get_Quantity();
    [CompilerGeneratedAttribute]
public void set_Quantity(int value);
    [CompilerGeneratedAttribute]
public AcquisitionAssignmentType get_AssignmentType();
    [CompilerGeneratedAttribute]
public void set_AssignmentType(AcquisitionAssignmentType value);
    [CompilerGeneratedAttribute]
public List`1<string> get_Targets();
    [CompilerGeneratedAttribute]
public void set_Targets(List`1<string> value);
    [CompilerGeneratedAttribute]
public JObject get_Properties();
    [CompilerGeneratedAttribute]
public void set_Properties(JObject value);
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.AnonymouslyReviewReportedException : VssServiceException {
    public AnonymouslyReviewReportedException(string message);
    public AnonymouslyReviewReportedException(string message, Exception innerException);
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.AnonymousQnASubmissionException : VssServiceException {
    public AnonymousQnASubmissionException(string message);
    public AnonymousQnASubmissionException(string message, Exception innerException);
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.AnonymousQnAUpdationException : VssServiceException {
    public AnonymousQnAUpdationException(string message);
    public AnonymousQnAUpdationException(string message, Exception innerException);
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.AnonymousReviewSubmissionException : VssServiceException {
    public AnonymousReviewSubmissionException(string message);
    public AnonymousReviewSubmissionException(string message, Exception innerException);
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.AnonymousReviewUpdationException : VssServiceException {
    public AnonymousReviewUpdationException(string message);
    public AnonymousReviewUpdationException(string message, Exception innerException);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.Answers : object {
    [CompilerGeneratedAttribute]
private string <VSMarketplacePublisherName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VSMarketplaceExtensionName>k__BackingField;
    [JsonPropertyAttribute]
[DataMemberAttribute]
public string VSMarketplacePublisherName { get; public set; }
    [JsonPropertyAttribute]
[DataMemberAttribute]
public string VSMarketplaceExtensionName { get; public set; }
    [CompilerGeneratedAttribute]
public string get_VSMarketplacePublisherName();
    [CompilerGeneratedAttribute]
public void set_VSMarketplacePublisherName(string value);
    [CompilerGeneratedAttribute]
public string get_VSMarketplaceExtensionName();
    [CompilerGeneratedAttribute]
public void set_VSMarketplaceExtensionName(string value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.AssetDetails : object {
    [CompilerGeneratedAttribute]
private Answers <Answers>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PublisherNaturalIdentifier>k__BackingField;
    [JsonPropertyAttribute]
[DataMemberAttribute]
public Answers Answers { get; public set; }
    [JsonPropertyAttribute]
[DataMemberAttribute]
public string PublisherNaturalIdentifier { get; public set; }
    [CompilerGeneratedAttribute]
public Answers get_Answers();
    [CompilerGeneratedAttribute]
public void set_Answers(Answers value);
    [CompilerGeneratedAttribute]
public string get_PublisherNaturalIdentifier();
    [CompilerGeneratedAttribute]
public void set_PublisherNaturalIdentifier(string value);
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.AzurePublisher : object {
    [CompilerGeneratedAttribute]
private string <AzurePublisherId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PublisherName>k__BackingField;
    public string AzurePublisherId { get; public set; }
    public string PublisherName { get; public set; }
    public AzurePublisher(string publisherName, string azurePublisherId);
    [CompilerGeneratedAttribute]
public string get_AzurePublisherId();
    [CompilerGeneratedAttribute]
public void set_AzurePublisherId(string value);
    [CompilerGeneratedAttribute]
public string get_PublisherName();
    [CompilerGeneratedAttribute]
public void set_PublisherName(string value);
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.AzurePublisherDoesNotExistException : VssServiceException {
    public AzurePublisherDoesNotExistException(string message);
    public AzurePublisherDoesNotExistException(string message, Exception innerException);
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.AzurePublisherExistsException : VssServiceException {
    public AzurePublisherExistsException(string message);
    public AzurePublisherExistsException(string message, Exception innerException);
    public AzurePublisherExistsException(string message, Exception innerException, int errorNumber);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.AzureRestApiRequestModel : object {
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PublisherId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AssetId>k__BackingField;
    [CompilerGeneratedAttribute]
private long <AssetVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PlanId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Operation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CustomerSupportEmail>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IntegrationContactEmail>k__BackingField;
    [CompilerGeneratedAttribute]
private AssetDetails <AssetDetails>k__BackingField;
    [JsonPropertyAttribute]
[DataMemberAttribute]
public string Type { get; public set; }
    [JsonPropertyAttribute]
[DataMemberAttribute]
public string PublisherId { get; public set; }
    [JsonPropertyAttribute]
[DataMemberAttribute]
public string AssetId { get; public set; }
    [JsonPropertyAttribute]
[DataMemberAttribute]
public long AssetVersion { get; public set; }
    [JsonPropertyAttribute]
[DataMemberAttribute]
public string PlanId { get; public set; }
    [JsonPropertyAttribute]
[DataMemberAttribute]
public string Operation { get; public set; }
    [JsonPropertyAttribute]
[DataMemberAttribute]
public string CustomerSupportEmail { get; public set; }
    [JsonPropertyAttribute]
[DataMemberAttribute]
public string IntegrationContactEmail { get; public set; }
    [JsonPropertyAttribute]
[DataMemberAttribute]
public AssetDetails AssetDetails { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    [CompilerGeneratedAttribute]
public string get_PublisherId();
    [CompilerGeneratedAttribute]
public void set_PublisherId(string value);
    [CompilerGeneratedAttribute]
public string get_AssetId();
    [CompilerGeneratedAttribute]
public void set_AssetId(string value);
    [CompilerGeneratedAttribute]
public long get_AssetVersion();
    [CompilerGeneratedAttribute]
public void set_AssetVersion(long value);
    [CompilerGeneratedAttribute]
public string get_PlanId();
    [CompilerGeneratedAttribute]
public void set_PlanId(string value);
    [CompilerGeneratedAttribute]
public string get_Operation();
    [CompilerGeneratedAttribute]
public void set_Operation(string value);
    [CompilerGeneratedAttribute]
public string get_CustomerSupportEmail();
    [CompilerGeneratedAttribute]
public void set_CustomerSupportEmail(string value);
    [CompilerGeneratedAttribute]
public string get_IntegrationContactEmail();
    [CompilerGeneratedAttribute]
public void set_IntegrationContactEmail(string value);
    [CompilerGeneratedAttribute]
public AssetDetails get_AssetDetails();
    [CompilerGeneratedAttribute]
public void set_AssetDetails(AssetDetails value);
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.Badge : object {
    public string link;
    public string imgUri;
    public string description;
    public Badge(string link, string imgUri, string description);
}
public static class Microsoft.VisualStudio.Services.Gallery.WebApi.BadgeConstants : object {
    public static string Link;
    public static string ImgUri;
    public static string Description;
    public static int MaxBadgeCount;
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.CategoriesResult : object {
    [CompilerGeneratedAttribute]
private List`1<ExtensionCategory> <Categories>k__BackingField;
    public List`1<ExtensionCategory> Categories { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<ExtensionCategory> get_Categories();
    [CompilerGeneratedAttribute]
public void set_Categories(List`1<ExtensionCategory> value);
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.CategoryLanguageTitle : object {
    [CompilerGeneratedAttribute]
private string <Lang>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Lcid>k__BackingField;
    public string Lang { get; public set; }
    public string Title { get; public set; }
    public int Lcid { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Lang();
    [CompilerGeneratedAttribute]
public void set_Lang(string value);
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(string value);
    [CompilerGeneratedAttribute]
public int get_Lcid();
    [CompilerGeneratedAttribute]
public void set_Lcid(int value);
}
[ExceptionMappingAttribute("0.0", "3.0", "CharacterLimitExceededException", "Microsoft.VisualStudio.Services.Gallery.WebApi.CharacterLimitExceededException, Microsoft.VisualStudio.Services.Gallery.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.CharacterLimitExceededException : VssServiceException {
    public CharacterLimitExceededException(string message);
}
[ExceptionMappingAttribute("0.0", "3.0", "CleanUpLegacyAccountException", "Microsoft.VisualStudio.Services.Gallery.WebApi.CleanUpLegacyAccountException, Microsoft.VisualStudio.Services.Gallery.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.CleanUpLegacyAccountException : VssServiceException {
    public CleanUpLegacyAccountException(string message);
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.Commerce.AzureRestApiConstants : object {
    public static string RequestIdHeaderName;
    public static string ClientRequestIdHeaderName;
    public static string CorrelationRequestIdHeaderName;
    public static string AADAuthenticationSchemeName;
    public static string ApiKeyAuthenticationSchemeName;
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.Commerce.AzureRestApiResponseModel : AzureRestApiRequestModel {
    [CompilerGeneratedAttribute]
private RestApiResponseStatusModel <OperationStatus>k__BackingField;
    [JsonPropertyAttribute]
[DataMemberAttribute]
public RestApiResponseStatusModel OperationStatus { get; public set; }
    [CompilerGeneratedAttribute]
public RestApiResponseStatusModel get_OperationStatus();
    [CompilerGeneratedAttribute]
public void set_OperationStatus(RestApiResponseStatusModel value);
}
public enum Microsoft.VisualStudio.Services.Gallery.WebApi.Commerce.RestApiResponseStatus : Enum {
    public int value__;
    [EnumMemberAttribute]
public static RestApiResponseStatus Completed;
    [EnumMemberAttribute]
public static RestApiResponseStatus Failed;
    [EnumMemberAttribute]
public static RestApiResponseStatus Inprogress;
    [EnumMemberAttribute]
public static RestApiResponseStatus Skipped;
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.Commerce.RestApiResponseStatusModel : object {
    [CompilerGeneratedAttribute]
private string <OperationId>k__BackingField;
    [CompilerGeneratedAttribute]
private RestApiResponseStatus <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StatusMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private int <PercentageCompleted>k__BackingField;
    [CompilerGeneratedAttribute]
private JToken <OperationDetails>k__BackingField;
    [JsonPropertyAttribute]
[DataMemberAttribute]
public string OperationId { get; public set; }
    [JsonPropertyAttribute]
[DataMemberAttribute]
public RestApiResponseStatus Status { get; public set; }
    [JsonPropertyAttribute]
[DataMemberAttribute]
public string StatusMessage { get; public set; }
    [JsonPropertyAttribute]
[DataMemberAttribute]
public int PercentageCompleted { get; public set; }
    [JsonPropertyAttribute]
[DataMemberAttribute]
public JToken OperationDetails { get; public set; }
    [CompilerGeneratedAttribute]
public string get_OperationId();
    [CompilerGeneratedAttribute]
public void set_OperationId(string value);
    [CompilerGeneratedAttribute]
public RestApiResponseStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(RestApiResponseStatus value);
    [CompilerGeneratedAttribute]
public string get_StatusMessage();
    [CompilerGeneratedAttribute]
public void set_StatusMessage(string value);
    [CompilerGeneratedAttribute]
public int get_PercentageCompleted();
    [CompilerGeneratedAttribute]
public void set_PercentageCompleted(int value);
    [CompilerGeneratedAttribute]
public JToken get_OperationDetails();
    [CompilerGeneratedAttribute]
public void set_OperationDetails(JToken value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.Concern : QnAItem {
    [CompilerGeneratedAttribute]
private ConcernCategory <Category>k__BackingField;
    [DataMemberAttribute]
public ConcernCategory Category { get; public set; }
    [CompilerGeneratedAttribute]
public ConcernCategory get_Category();
    [CompilerGeneratedAttribute]
public void set_Category(ConcernCategory value);
}
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.Gallery.WebApi.ConcernCategory : Enum {
    public int value__;
    [EnumMemberAttribute]
public static ConcernCategory General;
    [EnumMemberAttribute]
public static ConcernCategory Abusive;
    [EnumMemberAttribute]
public static ConcernCategory Spam;
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.CustomerContactNotAllowedException : VssServiceException {
    public CustomerContactNotAllowedException(string message);
    public CustomerContactNotAllowedException(string message, Exception innerException);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.CustomerLastContact : object {
    [DataMemberAttribute]
public string Account;
    [DataMemberAttribute]
public DateTime LastContactDate;
}
public enum Microsoft.VisualStudio.Services.Gallery.WebApi.DailyStatType : Enum {
    public int value__;
    public static DailyStatType Buy;
    public static DailyStatType ConnectedBuy;
    public static DailyStatType ConnectedInstall;
    public static DailyStatType WebDownload;
    public static DailyStatType Install;
    public static DailyStatType Try;
    public static DailyStatType Uninstall;
    public static DailyStatType WebPageView;
    public static DailyStatType AverageRating;
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.DefaultImageResizeUtility : object {
    private static string c_layer;
    private Func`2<Exception, bool> m_exceptionHandler;
    private bool m_shouldCreateSmallIcons;
    public string OutputContentType { get; }
    public bool ShouldCreateSmallImages { get; }
    public DefaultImageResizeUtility(Func`2<Exception, bool> exceptionHandler, bool shouldCreateSmallIcons);
    public sealed virtual string get_OutputContentType();
    public sealed virtual bool get_ShouldCreateSmallImages();
    public sealed virtual Stream ResizeImage(Stream stream, int maxHeight, int maxWidth, string contentType);
    private void Scale(Int32& targetWidth, Int32& targetHeight, int maxWidth, int maxHeight);
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.DraftIdDoesNotExistException : VssServiceException {
    public DraftIdDoesNotExistException(string message);
    public DraftIdDoesNotExistException(string message, Exception innerException);
}
public enum Microsoft.VisualStudio.Services.Gallery.WebApi.DraftPatchOperation : Enum {
    public int value__;
    public static DraftPatchOperation Publish;
    public static DraftPatchOperation Cancel;
}
public enum Microsoft.VisualStudio.Services.Gallery.WebApi.DraftStateType : Enum {
    public int value__;
    public static DraftStateType Unpublished;
    public static DraftStateType Published;
    public static DraftStateType Cancelled;
    public static DraftStateType Error;
}
public static class Microsoft.VisualStudio.Services.Gallery.WebApi.EnvironmentTypeConstants : object {
    public static string Hosted;
    public static string OnPremises;
}
public static class Microsoft.VisualStudio.Services.Gallery.WebApi.EqlParams : object {
    public static string Name;
    public static string Publisher;
    public static string Tag;
    public static string Category;
    public static string Target;
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.EventCounts : object {
    [DataMemberAttribute]
[JsonPropertyAttribute]
public long WebPageViews;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public long InstallCount;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public long WebDownloadCount;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public int UninstallCount;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public int BuyCount;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public int TryCount;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public int ConnectedInstallCount;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public int ConnectedBuyCount;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public float AverageRating;
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionAssetAccessNotSupportedException : VssServiceException {
    public ExtensionAssetAccessNotSupportedException(string message);
    public ExtensionAssetAccessNotSupportedException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "ExtensionAssetNotFoundException", "Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionAssetNotFoundException, Microsoft.VisualStudio.Services.Gallery.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionAssetAlreadyExistsException : VssServiceException {
    public ExtensionAssetAlreadyExistsException(string message);
    public ExtensionAssetAlreadyExistsException(string message, Exception innerException);
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionAssetCountLimitExceededException : VssServiceException {
    public ExtensionAssetCountLimitExceededException(string message);
    public ExtensionAssetCountLimitExceededException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "ExtensionAssetNotFoundException", "Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionAssetNotFoundException, Microsoft.VisualStudio.Services.Gallery.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionAssetNotFoundException : VssServiceException {
    public ExtensionAssetNotFoundException(string message);
    public ExtensionAssetNotFoundException(string message, Exception innerException);
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionBadge : object {
    [CompilerGeneratedAttribute]
private string <Link>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ImgUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [XmlAttributeAttribute("Link")]
public string Link { get; public set; }
    [XmlAttributeAttribute("ImgUri")]
public string ImgUri { get; public set; }
    [XmlAttributeAttribute("Description")]
public string Description { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Link();
    [CompilerGeneratedAttribute]
public void set_Link(string value);
    [CompilerGeneratedAttribute]
public string get_ImgUri();
    [CompilerGeneratedAttribute]
public void set_ImgUri(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionCategory : object {
    [CompilerGeneratedAttribute]
private string <CategoryName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ParentCategoryName>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <AssociatedProducts>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MigratedId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ParentId>k__BackingField;
    [CompilerGeneratedAttribute]
private ExtensionCategory <Parent>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Language>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CategoryId>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<CategoryLanguageTitle> <LanguageTitles>k__BackingField;
    public string CategoryName { get; public set; }
    [JsonPropertyAttribute]
public string ParentCategoryName { get; public set; }
    public List`1<string> AssociatedProducts { get; public set; }
    internal int MigratedId { get; internal set; }
    internal int ParentId { get; internal set; }
    internal ExtensionCategory Parent { get; internal set; }
    [JsonPropertyAttribute]
public string Language { get; public set; }
    [JsonPropertyAttribute]
public int CategoryId { get; public set; }
    public List`1<CategoryLanguageTitle> LanguageTitles { get; public set; }
    [CompilerGeneratedAttribute]
public string get_CategoryName();
    [CompilerGeneratedAttribute]
public void set_CategoryName(string value);
    [CompilerGeneratedAttribute]
public string get_ParentCategoryName();
    [CompilerGeneratedAttribute]
public void set_ParentCategoryName(string value);
    [CompilerGeneratedAttribute]
public List`1<string> get_AssociatedProducts();
    [CompilerGeneratedAttribute]
public void set_AssociatedProducts(List`1<string> value);
    [CompilerGeneratedAttribute]
internal int get_MigratedId();
    [CompilerGeneratedAttribute]
internal void set_MigratedId(int value);
    [CompilerGeneratedAttribute]
internal int get_ParentId();
    [CompilerGeneratedAttribute]
internal void set_ParentId(int value);
    [CompilerGeneratedAttribute]
internal ExtensionCategory get_Parent();
    [CompilerGeneratedAttribute]
internal void set_Parent(ExtensionCategory value);
    [CompilerGeneratedAttribute]
public string get_Language();
    [CompilerGeneratedAttribute]
public void set_Language(string value);
    [CompilerGeneratedAttribute]
public int get_CategoryId();
    [CompilerGeneratedAttribute]
public void set_CategoryId(int value);
    [CompilerGeneratedAttribute]
public List`1<CategoryLanguageTitle> get_LanguageTitles();
    [CompilerGeneratedAttribute]
public void set_LanguageTitles(List`1<CategoryLanguageTitle> value);
    internal ExtensionCategory ShallowCopy();
    public string GetCategoryTitleForLanguage(string language);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionDailyStat : object {
    [DataMemberAttribute]
public string Version;
    [DataMemberAttribute]
public DateTime StatisticDate;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public EventCounts Counts;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public IDictionary`2<string, object> ExtendedStats;
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionDailyStats : object {
    [DataMemberAttribute]
public string ExtensionName;
    [DataMemberAttribute]
public string PublisherName;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public Guid ExtensionId;
    [DataMemberAttribute]
public int StatCount;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public List`1<ExtensionDailyStat> DailyStats;
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionDailyStatsAccessDeniedException : VssServiceException {
    public ExtensionDailyStatsAccessDeniedException(string message);
    public ExtensionDailyStatsAccessDeniedException(string message, Exception innerException);
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionDailyStatsAnonymousAccessException : VssServiceException {
    public ExtensionDailyStatsAnonymousAccessException(string message);
    public ExtensionDailyStatsAnonymousAccessException(string message, Exception innerException);
}
public static class Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionDailyStatsConstants : object {
    public static int MaxNDays;
    public static DateTime AverageRatingLoggingStartDate;
    public static int DefaultUninstallEventCount;
    public static string Latest;
    public static string Buy;
    public static string ConnectedBuy;
    public static string ConnectedInstall;
    public static string Download;
    public static string Install;
    public static string Try;
    public static string Uninstall;
    public static string WebPageView;
    public static string InstallCount;
    public static string ColumnWidth;
    public static string TrialEndCount;
    public static string TrialExtendCount;
    public static string NewPurchaseQuantityHosted;
    public static string NewPurchaseQuantityConnected;
    public static string UpgradeQuantityHosted;
    public static string UpgradeQuantityConnected;
    public static string DowngradeQuantityHosted;
    public static string DowngradeQuantityConnected;
    public static string RenewalQuantityHosted;
    public static string RenewalQuantityConnected;
    public static string CanceledQuantityHosted;
    public static string CanceledQuantityConnected;
    public static string CanceledAccountsCountHosted;
    public static string CanceledAccountsCountConnected;
    public static string NewPurchaseAccountsCountHosted;
    public static string NewPurchaseAccountsCountConnected;
    public static string RenewalAccountsCountHosted;
    public static string RenewalAccountsCountConnected;
    public static string UpgradeAccountsCountHosted;
    public static string UpgradeAccountsCountConnected;
    public static string DowngradeAccountsCountHosted;
    public static string DowngradeAccountsCountConnected;
    public static string EventType;
    private static ExtensionDailyStatsConstants();
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionDailyStatsNotSupportedException : VssServiceException {
    public ExtensionDailyStatsNotSupportedException(string message);
    public ExtensionDailyStatsNotSupportedException(string message, Exception innerException);
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionDailyStatsVersionMismatchException : VssServiceException {
    public ExtensionDailyStatsVersionMismatchException(string message);
    public ExtensionDailyStatsVersionMismatchException(string message, Exception innerException);
}
public enum Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionDeploymentTechnology : Enum {
    public int value__;
    public static ExtensionDeploymentTechnology Exe;
    public static ExtensionDeploymentTechnology Msi;
    public static ExtensionDeploymentTechnology Vsix;
    public static ExtensionDeploymentTechnology ReferralLink;
}
[ExceptionMappingAttribute("0.0", "3.0", "ExtensionDoesNotExistException", "Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionDoesNotExistException, Microsoft.VisualStudio.Services.Gallery.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionDoesNotExistException : VssServiceException {
    public ExtensionDoesNotExistException(string message);
    public ExtensionDoesNotExistException(string message, Exception innerException);
    public ExtensionDoesNotExistException(string message, Exception innerException, int errorNumber);
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionDraft : object {
    [CompilerGeneratedAttribute]
private Guid <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <LastUpdated>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <CreatedDate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PublisherName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Product>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ExtensionName>k__BackingField;
    [CompilerGeneratedAttribute]
private ExtensionPayload <Payload>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ExtensionDraftAsset> <Assets>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <ExtensionId>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <UserId>k__BackingField;
    [CompilerGeneratedAttribute]
private DraftStateType <DraftState>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <EditReferenceDate>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<KeyValuePair`2<string, string>> <ValidationErrors>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<KeyValuePair`2<string, string>> <ValidationWarnings>k__BackingField;
    public Guid Id { get; public set; }
    public DateTime LastUpdated { get; public set; }
    public DateTime CreatedDate { get; public set; }
    public string PublisherName { get; public set; }
    public string Product { get; public set; }
    [JsonPropertyAttribute]
public string ExtensionName { get; public set; }
    [JsonPropertyAttribute]
public ExtensionPayload Payload { get; public set; }
    [JsonPropertyAttribute]
public List`1<ExtensionDraftAsset> Assets { get; public set; }
    internal Guid ExtensionId { get; internal set; }
    internal Guid UserId { get; internal set; }
    public DraftStateType DraftState { get; public set; }
    internal DateTime EditReferenceDate { get; internal set; }
    public List`1<KeyValuePair`2<string, string>> ValidationErrors { get; public set; }
    public List`1<KeyValuePair`2<string, string>> ValidationWarnings { get; public set; }
    [CompilerGeneratedAttribute]
public Guid get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(Guid value);
    [CompilerGeneratedAttribute]
public DateTime get_LastUpdated();
    [CompilerGeneratedAttribute]
public void set_LastUpdated(DateTime value);
    [CompilerGeneratedAttribute]
public DateTime get_CreatedDate();
    [CompilerGeneratedAttribute]
public void set_CreatedDate(DateTime value);
    [CompilerGeneratedAttribute]
public string get_PublisherName();
    [CompilerGeneratedAttribute]
public void set_PublisherName(string value);
    [CompilerGeneratedAttribute]
public string get_Product();
    [CompilerGeneratedAttribute]
public void set_Product(string value);
    [CompilerGeneratedAttribute]
public string get_ExtensionName();
    [CompilerGeneratedAttribute]
public void set_ExtensionName(string value);
    [CompilerGeneratedAttribute]
public ExtensionPayload get_Payload();
    [CompilerGeneratedAttribute]
public void set_Payload(ExtensionPayload value);
    [CompilerGeneratedAttribute]
public List`1<ExtensionDraftAsset> get_Assets();
    [CompilerGeneratedAttribute]
public void set_Assets(List`1<ExtensionDraftAsset> value);
    [CompilerGeneratedAttribute]
internal Guid get_ExtensionId();
    [CompilerGeneratedAttribute]
internal void set_ExtensionId(Guid value);
    [CompilerGeneratedAttribute]
internal Guid get_UserId();
    [CompilerGeneratedAttribute]
internal void set_UserId(Guid value);
    [CompilerGeneratedAttribute]
public DraftStateType get_DraftState();
    [CompilerGeneratedAttribute]
public void set_DraftState(DraftStateType value);
    [CompilerGeneratedAttribute]
internal DateTime get_EditReferenceDate();
    [CompilerGeneratedAttribute]
internal void set_EditReferenceDate(DateTime value);
    [CompilerGeneratedAttribute]
public List`1<KeyValuePair`2<string, string>> get_ValidationErrors();
    [CompilerGeneratedAttribute]
public void set_ValidationErrors(List`1<KeyValuePair`2<string, string>> value);
    [CompilerGeneratedAttribute]
public List`1<KeyValuePair`2<string, string>> get_ValidationWarnings();
    [CompilerGeneratedAttribute]
public void set_ValidationWarnings(List`1<KeyValuePair`2<string, string>> value);
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionDraftAsset : ExtensionFile {
    [CompilerGeneratedAttribute]
private bool <IsOldAsset>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsPayloadAsset>k__BackingField;
    internal bool IsOldAsset { get; internal set; }
    internal bool IsPayloadAsset { get; internal set; }
    [CompilerGeneratedAttribute]
internal bool get_IsOldAsset();
    [CompilerGeneratedAttribute]
internal void set_IsOldAsset(bool value);
    [CompilerGeneratedAttribute]
internal bool get_IsPayloadAsset();
    [CompilerGeneratedAttribute]
internal void set_IsPayloadAsset(bool value);
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionDraftNotFoundException : VssServiceException {
    public ExtensionDraftNotFoundException(string message);
    public ExtensionDraftNotFoundException(string message, Exception innerException);
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionDraftPatch : object {
    [CompilerGeneratedAttribute]
private DraftPatchOperation <Operation>k__BackingField;
    [CompilerGeneratedAttribute]
private UnpackagedExtensionData <ExtensionData>k__BackingField;
    public DraftPatchOperation Operation { get; public set; }
    public UnpackagedExtensionData ExtensionData { get; public set; }
    [CompilerGeneratedAttribute]
public DraftPatchOperation get_Operation();
    [CompilerGeneratedAttribute]
public void set_Operation(DraftPatchOperation value);
    [CompilerGeneratedAttribute]
public UnpackagedExtensionData get_ExtensionData();
    [CompilerGeneratedAttribute]
public void set_ExtensionData(UnpackagedExtensionData value);
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionDraftTooManyEditsException : VssServiceException {
    public ExtensionDraftTooManyEditsException(string message);
    public ExtensionDraftTooManyEditsException(string message, Exception innerException);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionEvent : object {
    [DataMemberAttribute]
public long Id;
    [DataMemberAttribute]
public string Version;
    [DataMemberAttribute]
public DateTime StatisticDate;
    [DataMemberAttribute]
public JObject Properties;
}
public static class Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionEventPropertyConstants : object {
    public static string HostId;
    public static string HostName;
    public static string ReasonText;
    public static string ReasonCode;
    public static string Vsid;
    public static string LastContact;
    public static string ReviewDate;
    public static string UserDisplayName;
    public static string UserId;
    public static string ReplyUserId;
    public static string Rating;
    public static string ReviewText;
    public static string ReplyDate;
    public static string ReplyText;
    public static string IsAdminReply;
    public static string EventId;
    public static string EventName;
    public static string OrgranizationId;
    public static string CollectionId;
    public static string CollectionName;
    public static string SubscriptionId;
    public static string MeterName;
    public static string GalleryId;
    public static string CommittedQuantity;
    public static string CurrentQuantity;
    public static string PreviousQuantity;
    public static string IncludedQuantity;
    public static string MaxQuantity;
    public static string RenewalGroup;
    public static string EventSource;
    public static string Environment;
    public static string UserIdentity;
    public static string TrialStartDate;
    public static string TrialEndDate;
    public static string EffectiveDate;
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionEvents : object {
    [DataMemberAttribute]
public string ExtensionName;
    [DataMemberAttribute]
public string PublisherName;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public Guid ExtensionId;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public IDictionary`2<string, IEnumerable`1<ExtensionEvent>> Events;
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionEventsDoNotExistException : VssServiceException {
    public ExtensionEventsDoNotExistException(string message);
    public ExtensionEventsDoNotExistException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "ExtensionExistsException", "Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionExistsException, Microsoft.VisualStudio.Services.Gallery.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionExistsException : VssServiceException {
    public ExtensionExistsException(string message);
    public ExtensionExistsException(string message, Exception innerException);
    public ExtensionExistsException(string message, Exception innerException, int errorNumber);
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionFile : object {
    [CompilerGeneratedAttribute]
private Guid <ReferenceId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AssetType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Language>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Source>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContentType>k__BackingField;
    [CompilerGeneratedAttribute]
private int <FileId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ShortDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDefault>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsPublic>k__BackingField;
    internal Guid ReferenceId { get; internal set; }
    [XmlAttributeAttribute("Type")]
public string AssetType { get; public set; }
    [XmlAttributeAttribute("Lang")]
[JsonPropertyAttribute]
public string Language { get; public set; }
    [JsonPropertyAttribute]
public string Source { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public string Version { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public string ContentType { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public int FileId { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public string ShortDescription { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool IsDefault { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool IsPublic { get; public set; }
    [CompilerGeneratedAttribute]
internal Guid get_ReferenceId();
    [CompilerGeneratedAttribute]
internal void set_ReferenceId(Guid value);
    [CompilerGeneratedAttribute]
public string get_AssetType();
    [CompilerGeneratedAttribute]
public void set_AssetType(string value);
    [CompilerGeneratedAttribute]
public string get_Language();
    [CompilerGeneratedAttribute]
public void set_Language(string value);
    [CompilerGeneratedAttribute]
public string get_Source();
    [CompilerGeneratedAttribute]
public void set_Source(string value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
    [CompilerGeneratedAttribute]
public string get_ContentType();
    [CompilerGeneratedAttribute]
public void set_ContentType(string value);
    [CompilerGeneratedAttribute]
public int get_FileId();
    [CompilerGeneratedAttribute]
public void set_FileId(int value);
    [CompilerGeneratedAttribute]
public string get_ShortDescription();
    [CompilerGeneratedAttribute]
public void set_ShortDescription(string value);
    [CompilerGeneratedAttribute]
public bool get_IsDefault();
    [CompilerGeneratedAttribute]
public void set_IsDefault(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsPublic();
    [CompilerGeneratedAttribute]
public void set_IsPublic(bool value);
    internal ExtensionFile ShallowCopy();
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionFilterResult : object {
    [CompilerGeneratedAttribute]
private List`1<PublishedExtension> <Extensions>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PagingToken>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ExtensionFilterResultMetadata> <ResultMetadata>k__BackingField;
    public List`1<PublishedExtension> Extensions { get; public set; }
    public string PagingToken { get; public set; }
    public List`1<ExtensionFilterResultMetadata> ResultMetadata { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<PublishedExtension> get_Extensions();
    [CompilerGeneratedAttribute]
public void set_Extensions(List`1<PublishedExtension> value);
    [CompilerGeneratedAttribute]
public string get_PagingToken();
    [CompilerGeneratedAttribute]
public void set_PagingToken(string value);
    [CompilerGeneratedAttribute]
public List`1<ExtensionFilterResultMetadata> get_ResultMetadata();
    [CompilerGeneratedAttribute]
public void set_ResultMetadata(List`1<ExtensionFilterResultMetadata> value);
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionFilterResultMetadata : object {
    [CompilerGeneratedAttribute]
private string <MetadataType>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<MetadataItem> <MetadataItems>k__BackingField;
    public string MetadataType { get; public set; }
    public List`1<MetadataItem> MetadataItems { get; public set; }
    [CompilerGeneratedAttribute]
public string get_MetadataType();
    [CompilerGeneratedAttribute]
public void set_MetadataType(string value);
    [CompilerGeneratedAttribute]
public List`1<MetadataItem> get_MetadataItems();
    [CompilerGeneratedAttribute]
public void set_MetadataItems(List`1<MetadataItem> value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionIdentifier : object {
    private static Char[] s_nameSeparator;
    private string m_fullyQualifiedName;
    private string m_publisherName;
    private string m_extensionName;
    [DataMemberAttribute]
public string ExtensionName { get; public set; }
    [DataMemberAttribute]
public string PublisherName { get; public set; }
    public ExtensionIdentifier(string fullyQualifiedName);
    public ExtensionIdentifier(string publisherName, string extensionName);
    private static ExtensionIdentifier();
    public string get_ExtensionName();
    public void set_ExtensionName(string value);
    public string get_PublisherName();
    public void set_PublisherName(string value);
    public virtual string ToString();
    public static bool TryParse(string extensionFullyQualifiedName, ExtensionIdentifier& extensionIdentifier);
}
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionLifecycleEventType : Enum {
    public int value__;
    [EnumMemberAttribute]
public static ExtensionLifecycleEventType Uninstall;
    [EnumMemberAttribute]
public static ExtensionLifecycleEventType Install;
    [EnumMemberAttribute]
public static ExtensionLifecycleEventType Review;
    [EnumMemberAttribute]
public static ExtensionLifecycleEventType Acquisition;
    [EnumMemberAttribute]
public static ExtensionLifecycleEventType Sales;
    [EnumMemberAttribute]
public static ExtensionLifecycleEventType Other;
}
public static class Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionLifecycleWellKnownEvents : object {
    public static string Install;
    public static string Uninstall;
    public static string Review;
    public static string Acquisition;
    public static string Sales;
    public static string Other;
    public static Dictionary`2<string, ExtensionLifecycleEventType> KnownEventsDictionary;
    private static ExtensionLifecycleWellKnownEvents();
}
internal class Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionMetadata : object {
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    public string Key { get; public set; }
    public string Value { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    public ExtensionMetadata ShallowCopy();
}
public static class Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionMetadataConstants : object {
    public static string SourceCodeUrlKey;
}
[ExceptionMappingAttribute("0.0", "3.0", "ExtensionMustBePrivateException", "Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionMustBePrivateException, Microsoft.VisualStudio.Services.Gallery.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionMustBePrivateException : VssServiceException {
    public ExtensionMustBePrivateException(string message);
    public ExtensionMustBePrivateException(string message, Exception innerException);
    public ExtensionMustBePrivateException(string message, Exception innerException, int errorNumber);
}
[ClientIncludeModelAttribute]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionPackage : object {
    [CompilerGeneratedAttribute]
private string <ExtensionManifest>k__BackingField;
    public string ExtensionManifest { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ExtensionManifest();
    [CompilerGeneratedAttribute]
public void set_ExtensionManifest(string value);
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionPayload : object {
    [CompilerGeneratedAttribute]
private string <FileName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private ExtensionDeploymentTechnology <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<KeyValuePair`2<string, string>> <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<InstallationTarget> <InstallationTargets>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsValid>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsSignedByMicrosoft>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsPreview>k__BackingField;
    public string FileName { get; public set; }
    public string DisplayName { get; public set; }
    public string Description { get; public set; }
    public ExtensionDeploymentTechnology Type { get; public set; }
    public List`1<KeyValuePair`2<string, string>> Metadata { get; public set; }
    public List`1<InstallationTarget> InstallationTargets { get; public set; }
    public bool IsValid { get; public set; }
    public bool IsSignedByMicrosoft { get; public set; }
    public bool IsPreview { get; public set; }
    [CompilerGeneratedAttribute]
public string get_FileName();
    [CompilerGeneratedAttribute]
public void set_FileName(string value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public ExtensionDeploymentTechnology get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(ExtensionDeploymentTechnology value);
    [CompilerGeneratedAttribute]
public List`1<KeyValuePair`2<string, string>> get_Metadata();
    [CompilerGeneratedAttribute]
public void set_Metadata(List`1<KeyValuePair`2<string, string>> value);
    [CompilerGeneratedAttribute]
public List`1<InstallationTarget> get_InstallationTargets();
    [CompilerGeneratedAttribute]
public void set_InstallationTargets(List`1<InstallationTarget> value);
    [CompilerGeneratedAttribute]
public bool get_IsValid();
    [CompilerGeneratedAttribute]
public void set_IsValid(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsSignedByMicrosoft();
    [CompilerGeneratedAttribute]
public void set_IsSignedByMicrosoft(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsPreview();
    [CompilerGeneratedAttribute]
public void set_IsPreview(bool value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionPolicy : object {
    [CompilerGeneratedAttribute]
private ExtensionPolicyFlags <Install>k__BackingField;
    [CompilerGeneratedAttribute]
private ExtensionPolicyFlags <Request>k__BackingField;
    [DataMemberAttribute]
public ExtensionPolicyFlags Install { get; public set; }
    [DataMemberAttribute]
public ExtensionPolicyFlags Request { get; public set; }
    [CompilerGeneratedAttribute]
public ExtensionPolicyFlags get_Install();
    [CompilerGeneratedAttribute]
public void set_Install(ExtensionPolicyFlags value);
    [CompilerGeneratedAttribute]
public ExtensionPolicyFlags get_Request();
    [CompilerGeneratedAttribute]
public void set_Request(ExtensionPolicyFlags value);
}
[DataContractAttribute]
[FlagsAttribute]
public enum Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionPolicyFlags : Enum {
    public int value__;
    [EnumMemberAttribute]
public static ExtensionPolicyFlags None;
    [EnumMemberAttribute]
public static ExtensionPolicyFlags Private;
    [EnumMemberAttribute]
public static ExtensionPolicyFlags Public;
    [EnumMemberAttribute]
public static ExtensionPolicyFlags Preview;
    [EnumMemberAttribute]
public static ExtensionPolicyFlags Released;
    [EnumMemberAttribute]
public static ExtensionPolicyFlags FirstParty;
    [EnumMemberAttribute]
public static ExtensionPolicyFlags All;
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionProperty : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [XmlAttributeAttribute("Id")]
public string Id { get; public set; }
    [XmlAttributeAttribute("Value")]
public string Value { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionQuery : object {
    [CompilerGeneratedAttribute]
private List`1<QueryFilter> <Filters>k__BackingField;
    [CompilerGeneratedAttribute]
private ExtensionQueryFlags <Flags>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <AssetTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ExtensionQueryResultMetadataFlags> <MetadataFlags>k__BackingField;
    public List`1<QueryFilter> Filters { get; public set; }
    public ExtensionQueryFlags Flags { get; public set; }
    public List`1<string> AssetTypes { get; public set; }
    internal Nullable`1<ExtensionQueryResultMetadataFlags> MetadataFlags { get; internal set; }
    [CompilerGeneratedAttribute]
public List`1<QueryFilter> get_Filters();
    [CompilerGeneratedAttribute]
public void set_Filters(List`1<QueryFilter> value);
    [CompilerGeneratedAttribute]
public ExtensionQueryFlags get_Flags();
    [CompilerGeneratedAttribute]
public void set_Flags(ExtensionQueryFlags value);
    [CompilerGeneratedAttribute]
public List`1<string> get_AssetTypes();
    [CompilerGeneratedAttribute]
public void set_AssetTypes(List`1<string> value);
    [CompilerGeneratedAttribute]
internal Nullable`1<ExtensionQueryResultMetadataFlags> get_MetadataFlags();
    [CompilerGeneratedAttribute]
internal void set_MetadataFlags(Nullable`1<ExtensionQueryResultMetadataFlags> value);
}
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionQueryFilterType : Enum {
    public int value__;
    [DataMemberAttribute]
public static ExtensionQueryFilterType Tag;
    [DataMemberAttribute]
public static ExtensionQueryFilterType DisplayName;
    [DataMemberAttribute]
public static ExtensionQueryFilterType Private;
    [DataMemberAttribute]
public static ExtensionQueryFilterType Id;
    [DataMemberAttribute]
public static ExtensionQueryFilterType Category;
    [DataMemberAttribute]
public static ExtensionQueryFilterType ContributionType;
    [DataMemberAttribute]
public static ExtensionQueryFilterType Name;
    [DataMemberAttribute]
public static ExtensionQueryFilterType InstallationTarget;
    [DataMemberAttribute]
public static ExtensionQueryFilterType Featured;
    [DataMemberAttribute]
public static ExtensionQueryFilterType SearchText;
    [DataMemberAttribute]
public static ExtensionQueryFilterType FeaturedInCategory;
    [DataMemberAttribute]
public static ExtensionQueryFilterType ExcludeWithFlags;
    [DataMemberAttribute]
public static ExtensionQueryFilterType IncludeWithFlags;
    [DataMemberAttribute]
public static ExtensionQueryFilterType Lcid;
    [DataMemberAttribute]
public static ExtensionQueryFilterType InstallationTargetVersion;
    [DataMemberAttribute]
public static ExtensionQueryFilterType InstallationTargetVersionRange;
    [DataMemberAttribute]
public static ExtensionQueryFilterType VsixMetadata;
    [DataMemberAttribute]
public static ExtensionQueryFilterType PublisherName;
    [DataMemberAttribute]
public static ExtensionQueryFilterType PublisherDisplayName;
    [DataMemberAttribute]
public static ExtensionQueryFilterType IncludeWithPublisherFlags;
    [DataMemberAttribute]
public static ExtensionQueryFilterType OrganizationSharedWith;
}
[FlagsAttribute]
public enum Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionQueryFlags : Enum {
    public int value__;
    public static ExtensionQueryFlags None;
    public static ExtensionQueryFlags IncludeVersions;
    public static ExtensionQueryFlags IncludeFiles;
    public static ExtensionQueryFlags IncludeCategoryAndTags;
    public static ExtensionQueryFlags IncludeSharedAccounts;
    public static ExtensionQueryFlags IncludeVersionProperties;
    public static ExtensionQueryFlags ExcludeNonValidated;
    public static ExtensionQueryFlags IncludeInstallationTargets;
    public static ExtensionQueryFlags IncludeAssetUri;
    public static ExtensionQueryFlags IncludeStatistics;
    public static ExtensionQueryFlags IncludeLatestVersionOnly;
    public static ExtensionQueryFlags UseFallbackAssetUri;
    public static ExtensionQueryFlags IncludeMetadata;
    public static ExtensionQueryFlags IncludeMinimalPayloadForVsIde;
    public static ExtensionQueryFlags IncludeLcids;
    public static ExtensionQueryFlags IncludeSharedOrganizations;
    public static ExtensionQueryFlags AllAttributes;
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionQueryResult : object {
    [CompilerGeneratedAttribute]
private List`1<ExtensionFilterResult> <Results>k__BackingField;
    public List`1<ExtensionFilterResult> Results { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<ExtensionFilterResult> get_Results();
    [CompilerGeneratedAttribute]
public void set_Results(List`1<ExtensionFilterResult> value);
}
[FlagsAttribute]
internal enum Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionQueryResultMetadataFlags : Enum {
    public int value__;
    public static ExtensionQueryResultMetadataFlags None;
    public static ExtensionQueryResultMetadataFlags IncludeResultCount;
    public static ExtensionQueryResultMetadataFlags IncludePreCategoryFilterCategories;
    public static ExtensionQueryResultMetadataFlags IncludeResultSetCategories;
    public static ExtensionQueryResultMetadataFlags IncludeResultSetProjectType;
}
internal static class Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionReportConstants : object {
    public static int DefaultLastNDays;
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionScopesChangedException : VssServiceException {
    public ExtensionScopesChangedException(string message);
    public ExtensionScopesChangedException(string message, Exception innerException);
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionShare : object {
    public static string SharedAccount;
    public static string SharedOrganization;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsOrg>k__BackingField;
    public string Id { get; public set; }
    public string Type { get; public set; }
    public string Name { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<bool> IsOrg { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IsOrg();
    [CompilerGeneratedAttribute]
public void set_IsOrg(Nullable`1<bool> value);
    public ExtensionShare ShallowCopy();
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionSizeExceededException : VssServiceException {
    public ExtensionSizeExceededException(long packageSize, long maxPackageSize);
    public ExtensionSizeExceededException(string message);
    public ExtensionSizeExceededException(string message, Exception innerException);
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionStatistic : object {
    [CompilerGeneratedAttribute]
private string <StatisticName>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Value>k__BackingField;
    public string StatisticName { get; public set; }
    public double Value { get; public set; }
    [CompilerGeneratedAttribute]
public string get_StatisticName();
    [CompilerGeneratedAttribute]
public void set_StatisticName(string value);
    [CompilerGeneratedAttribute]
public double get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(double value);
    public ExtensionStatistic ShallowCopy();
}
public enum Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionStatisticOperation : Enum {
    public int value__;
    public static ExtensionStatisticOperation None;
    public static ExtensionStatisticOperation Set;
    public static ExtensionStatisticOperation Increment;
    public static ExtensionStatisticOperation Decrement;
    public static ExtensionStatisticOperation Delete;
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionStatisticUpdate : object {
    [CompilerGeneratedAttribute]
private string <PublisherName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ExtensionName>k__BackingField;
    [CompilerGeneratedAttribute]
private ExtensionStatisticOperation <Operation>k__BackingField;
    [CompilerGeneratedAttribute]
private ExtensionStatistic <Statistic>k__BackingField;
    public string PublisherName { get; public set; }
    public string ExtensionName { get; public set; }
    public ExtensionStatisticOperation Operation { get; public set; }
    public ExtensionStatistic Statistic { get; public set; }
    [CompilerGeneratedAttribute]
public string get_PublisherName();
    [CompilerGeneratedAttribute]
public void set_PublisherName(string value);
    [CompilerGeneratedAttribute]
public string get_ExtensionName();
    [CompilerGeneratedAttribute]
public void set_ExtensionName(string value);
    [CompilerGeneratedAttribute]
public ExtensionStatisticOperation get_Operation();
    [CompilerGeneratedAttribute]
public void set_Operation(ExtensionStatisticOperation value);
    [CompilerGeneratedAttribute]
public ExtensionStatistic get_Statistic();
    [CompilerGeneratedAttribute]
public void set_Statistic(ExtensionStatistic value);
}
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionStatsAggregateType : Enum {
    public int value__;
    [EnumMemberAttribute]
public static ExtensionStatsAggregateType Daily;
}
[ExceptionMappingAttribute("0.0", "3.0", "ExtensionValidationException", "Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionValidationException, Microsoft.VisualStudio.Services.Gallery.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionValidationException : VssServiceException {
    public ExtensionValidationException(string message);
    public ExtensionValidationException(string message, Exception innerException);
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionVersion : object {
    [CompilerGeneratedAttribute]
private Guid <ExtensionId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private ExtensionVersionFlags <Flags>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <LastUpdated>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VersionDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ValidationResultMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ExtensionFile> <Files>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<KeyValuePair`2<string, string>> <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ExtensionBadge> <Badges>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AssetUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FallbackAssetUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CdnDirectory>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsCdnEnabled>k__BackingField;
    internal Guid ExtensionId { get; internal set; }
    public string Version { get; public set; }
    public ExtensionVersionFlags Flags { get; public set; }
    public DateTime LastUpdated { get; public set; }
    [JsonPropertyAttribute]
public string VersionDescription { get; public set; }
    [JsonPropertyAttribute]
public string ValidationResultMessage { get; public set; }
    [JsonPropertyAttribute]
public List`1<ExtensionFile> Files { get; public set; }
    [JsonPropertyAttribute]
public List`1<KeyValuePair`2<string, string>> Properties { get; public set; }
    [JsonPropertyAttribute]
public List`1<ExtensionBadge> Badges { get; public set; }
    [JsonPropertyAttribute]
public string AssetUri { get; public set; }
    [JsonPropertyAttribute]
public string FallbackAssetUri { get; public set; }
    internal string CdnDirectory { get; internal set; }
    internal bool IsCdnEnabled { get; internal set; }
    [CompilerGeneratedAttribute]
internal Guid get_ExtensionId();
    [CompilerGeneratedAttribute]
internal void set_ExtensionId(Guid value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
    [CompilerGeneratedAttribute]
public ExtensionVersionFlags get_Flags();
    [CompilerGeneratedAttribute]
public void set_Flags(ExtensionVersionFlags value);
    [CompilerGeneratedAttribute]
public DateTime get_LastUpdated();
    [CompilerGeneratedAttribute]
public void set_LastUpdated(DateTime value);
    [CompilerGeneratedAttribute]
public string get_VersionDescription();
    [CompilerGeneratedAttribute]
public void set_VersionDescription(string value);
    [CompilerGeneratedAttribute]
public string get_ValidationResultMessage();
    [CompilerGeneratedAttribute]
public void set_ValidationResultMessage(string value);
    [CompilerGeneratedAttribute]
public List`1<ExtensionFile> get_Files();
    [CompilerGeneratedAttribute]
public void set_Files(List`1<ExtensionFile> value);
    [CompilerGeneratedAttribute]
public List`1<KeyValuePair`2<string, string>> get_Properties();
    [CompilerGeneratedAttribute]
public void set_Properties(List`1<KeyValuePair`2<string, string>> value);
    [CompilerGeneratedAttribute]
public List`1<ExtensionBadge> get_Badges();
    [CompilerGeneratedAttribute]
public void set_Badges(List`1<ExtensionBadge> value);
    [CompilerGeneratedAttribute]
public string get_AssetUri();
    [CompilerGeneratedAttribute]
public void set_AssetUri(string value);
    [CompilerGeneratedAttribute]
public string get_FallbackAssetUri();
    [CompilerGeneratedAttribute]
public void set_FallbackAssetUri(string value);
    [CompilerGeneratedAttribute]
internal string get_CdnDirectory();
    [CompilerGeneratedAttribute]
internal void set_CdnDirectory(string value);
    [CompilerGeneratedAttribute]
internal bool get_IsCdnEnabled();
    [CompilerGeneratedAttribute]
internal void set_IsCdnEnabled(bool value);
    public ExtensionVersion ShallowCopy();
    public string GetCdnDirectory();
}
[FlagsAttribute]
public enum Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionVersionFlags : Enum {
    public int value__;
    public static ExtensionVersionFlags None;
    public static ExtensionVersionFlags Validated;
}
[ExceptionMappingAttribute("0.0", "3.0", "ExtensionVersionNotFoundException", "Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionVersionNotFoundException, Microsoft.VisualStudio.Services.Gallery.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.ExtensionVersionNotFoundException : VssServiceException {
    public ExtensionVersionNotFoundException(string message);
    public ExtensionVersionNotFoundException(string message, Exception innerException);
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.ExternalSearchException : VssServiceException {
    public ExternalSearchException(string message);
    public ExternalSearchException(string message, Exception innerException);
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.FilterCriteria : object {
    [CompilerGeneratedAttribute]
private int <FilterType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    public int FilterType { get; public set; }
    public string Value { get; public set; }
    [CompilerGeneratedAttribute]
public int get_FilterType();
    [CompilerGeneratedAttribute]
public void set_FilterType(int value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
}
[ResourceAreaAttribute("69D21C00-F135-441B-B5CE-3626378E0819")]
public abstract class Microsoft.VisualStudio.Services.Gallery.WebApi.GalleryCompatHttpClientBase : VssHttpClientBase {
    public GalleryCompatHttpClientBase(Uri baseUrl, VssCredentials credentials);
    public GalleryCompatHttpClientBase(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public GalleryCompatHttpClientBase(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public GalleryCompatHttpClientBase(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public GalleryCompatHttpClientBase(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    public Task`1<PublishedExtension> CreateExtensionAsync(ExtensionPackage extensionPackage, object userState, CancellationToken cancellationToken);
    public Task`1<PublishedExtension> UpdateExtensionByIdAsync(ExtensionPackage extensionPackage, Guid extensionId, object userState, CancellationToken cancellationToken);
    public Task`1<PublishedExtension> CreateExtensionWithPublisherAsync(ExtensionPackage extensionPackage, string publisherName, object userState, CancellationToken cancellationToken);
    public Task`1<PublishedExtension> UpdateExtensionAsync(ExtensionPackage extensionPackage, string publisherName, string extensionName, object userState, CancellationToken cancellationToken);
}
public static class Microsoft.VisualStudio.Services.Gallery.WebApi.GalleryConstants : object {
    public static Guid SecurityNamespace;
    public static string ServiceName;
    public static string ServiceOwner;
    public static string RegistrationProperty;
    public static string TaskProperty;
    public static string ServiceEndpointType;
    public static string MarketplaceUrl;
    public static string MarketplaceBrowseUrl;
    public static string MarketplaceManagePublishersUrl;
    public static string VerifyPublisherLink;
    public static string LatestVersion;
    public static string OnPremStatsUpdateParameter;
    public static string ItemDetailsRelativeUrlString;
    public static string ExtensionChangeMessageQueue;
    public static string KeyChangeMessageQueue;
    public static String[] MessageVersions;
    public static string VsoInstallationTarget;
    public static string VSSHostedResourceInstallationTarget;
    public static string VsoHostedInstallationTarget;
    public static string TfsInstallationTarget;
    public static string VsoIntegrationInstallationTarget;
    public static string VsoHostedIntegrationInstallationTarget;
    public static string TfsIntegrationInstallationTarget;
    public static string VsCodeInstallationTarget;
    public static string VsCloudOfferInstallationTarget;
    public static string VsInstallationTarget;
    public static string VsForMacInstallationTarget;
    public static string VsWinDesktopExpressInstallationTarget;
    public static string VsWinExpressInstallationTarget;
    public static string VsVwdExpressInstallationTarget;
    public static string VsCommunityInstallationTarget;
    public static string VsProInstallationTarget;
    public static string VsEnterpriseInstallationTarget;
    public static string VsIntegratedShellInstallationTarget;
    public static string VsIsolatedInstallationTarget;
    public static string VsTestInstallationTarget;
    public static string VsUltimateInstallationTarget;
    public static string VsPremiumInstallationTarget;
    public static string VsVstInstallationTarget;
    public static string VsVslsInstallationTarget;
    public static string VsVpdExpressInstallationTarget;
    public static string GitHubPropertyId;
    public static string SupportLinkProperty;
    public static string GetStartedLinkProperty;
    public static string InstallLinkProperty;
    public static string LearnLinkProperty;
    public static string FeedbackLinkProperty;
    public static string AllCategoriesName;
    public static Guid ExtensionNameArtifactKind;
    public static Guid ExtensionVersionArtifactKind;
    public static DateTime BeginningOfTime;
    public static string TrialDays;
    private static GalleryConstants();
}
public static class Microsoft.VisualStudio.Services.Gallery.WebApi.GalleryCookieConsentConstants : object {
    public static string RenderConsentBanner;
    public static string ConsentMarkupStylesheet;
    public static string ConsentMarkupJavascript;
    public static string ConsentMarkupElement;
}
[ResourceAreaAttribute("69D21C00-F135-441B-B5CE-3626378E0819")]
[ClientCancellationTimeoutAttribute("20")]
[ClientCircuitBreakerSettingsAttribute("10", "50")]
[ClientSensitiveHeaderAttribute("X-Market-AccountToken")]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.GalleryHttpClient : GalleryCompatHttpClientBase {
    public GalleryHttpClient(Uri baseUrl, VssCredentials credentials);
    public GalleryHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public GalleryHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public GalleryHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public GalleryHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Gallery.WebApi.GalleryHttpClient/<ShareExtensionByIdAsync>d__5")]
public Task ShareExtensionByIdAsync(Guid extensionId, string accountName, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Gallery.WebApi.GalleryHttpClient/<UnshareExtensionByIdAsync>d__6")]
public Task UnshareExtensionByIdAsync(Guid extensionId, string accountName, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Gallery.WebApi.GalleryHttpClient/<ShareExtensionAsync>d__7")]
public Task ShareExtensionAsync(string publisherName, string extensionName, string accountName, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Gallery.WebApi.GalleryHttpClient/<UnshareExtensionAsync>d__8")]
public Task UnshareExtensionAsync(string publisherName, string extensionName, string accountName, object userState, CancellationToken cancellationToken);
    public Task`1<AcquisitionOptions> GetAcquisitionOptionsAsync(string itemId, string installationTarget, Nullable`1<bool> testCommerce, Nullable`1<bool> isFreeOrTrialInstall, object userState, CancellationToken cancellationToken);
    public Task`1<ExtensionAcquisitionRequest> RequestAcquisitionAsync(ExtensionAcquisitionRequest acquisitionRequest, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Gallery.WebApi.GalleryHttpClient/<GetAssetByNameAsync>d__11")]
public Task`1<Stream> GetAssetByNameAsync(string publisherName, string extensionName, string version, string assetType, string accountToken, Nullable`1<bool> acceptDefault, string accountTokenHeader, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Gallery.WebApi.GalleryHttpClient/<GetAssetAsync>d__12")]
public Task`1<Stream> GetAssetAsync(Guid extensionId, string version, string assetType, string accountToken, Nullable`1<bool> acceptDefault, string accountTokenHeader, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Gallery.WebApi.GalleryHttpClient/<GetAssetAuthenticatedAsync>d__13")]
public Task`1<Stream> GetAssetAuthenticatedAsync(string publisherName, string extensionName, string version, string assetType, string accountToken, string accountTokenHeader, object userState, CancellationToken cancellationToken);
    public Task`1<AzurePublisher> AssociateAzurePublisherAsync(string publisherName, string azurePublisherId, object userState, CancellationToken cancellationToken);
    public Task`1<AzurePublisher> QueryAssociatedAzurePublisherAsync(string publisherName, object userState, CancellationToken cancellationToken);
    public Task`1<List`1<string>> GetCategoriesAsync(string languages, object userState, CancellationToken cancellationToken);
    public Task`1<CategoriesResult> GetCategoryDetailsAsync(string categoryName, string languages, string product, object userState, CancellationToken cancellationToken);
    public Task`1<ProductCategory> GetCategoryTreeAsync(string product, string categoryId, Nullable`1<int> lcid, string source, string productVersion, string skus, string subSkus, object userState, CancellationToken cancellationToken);
    public Task`1<ProductCategoriesResult> GetRootCategoriesAsync(string product, Nullable`1<int> lcid, string source, string productVersion, string skus, string subSkus, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Gallery.WebApi.GalleryHttpClient/<GetCertificateAsync>d__20")]
public Task`1<Stream> GetCertificateAsync(string publisherName, string extensionName, string version, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Gallery.WebApi.GalleryHttpClient/<GetContentVerificationLogAsync>d__21")]
public Task`1<Stream> GetContentVerificationLogAsync(string publisherName, string extensionName, object userState, CancellationToken cancellationToken);
    public Task`1<ExtensionDraft> CreateDraftForEditExtensionAsync(string publisherName, string extensionName, object userState, CancellationToken cancellationToken);
    public Task`1<ExtensionDraft> PerformEditExtensionDraftOperationAsync(ExtensionDraftPatch draftPatch, string publisherName, string extensionName, Guid draftId, object userState, CancellationToken cancellationToken);
    public Task`1<ExtensionDraft> UpdatePayloadInDraftForEditExtensionAsync(Stream uploadStream, string publisherName, string extensionName, Guid draftId, string fileName, object userState, CancellationToken cancellationToken);
    public Task`1<ExtensionDraftAsset> AddAssetForEditExtensionDraftAsync(Stream uploadStream, string publisherName, string extensionName, Guid draftId, string assetType, object userState, CancellationToken cancellationToken);
    public Task`1<ExtensionDraft> CreateDraftForNewExtensionAsync(Stream uploadStream, string publisherName, string product, string fileName, object userState, CancellationToken cancellationToken);
    public Task`1<ExtensionDraft> PerformNewExtensionDraftOperationAsync(ExtensionDraftPatch draftPatch, string publisherName, Guid draftId, object userState, CancellationToken cancellationToken);
    public Task`1<ExtensionDraft> UpdatePayloadInDraftForNewExtensionAsync(Stream uploadStream, string publisherName, Guid draftId, string fileName, object userState, CancellationToken cancellationToken);
    public Task`1<ExtensionDraftAsset> AddAssetForNewExtensionDraftAsync(Stream uploadStream, string publisherName, Guid draftId, string assetType, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Gallery.WebApi.GalleryHttpClient/<GetAssetFromEditExtensionDraftAsync>d__30")]
public Task`1<Stream> GetAssetFromEditExtensionDraftAsync(string publisherName, Guid draftId, string assetType, string extensionName, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Gallery.WebApi.GalleryHttpClient/<GetAssetFromNewExtensionDraftAsync>d__31")]
public Task`1<Stream> GetAssetFromNewExtensionDraftAsync(string publisherName, Guid draftId, string assetType, object userState, CancellationToken cancellationToken);
    public Task`1<ExtensionEvents> GetExtensionEventsAsync(string publisherName, string extensionName, Nullable`1<int> count, Nullable`1<DateTime> afterDate, string include, string includeProperty, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Gallery.WebApi.GalleryHttpClient/<PublishExtensionEventsAsync>d__33")]
public Task PublishExtensionEventsAsync(IEnumerable`1<ExtensionEvents> extensionEvents, object userState, CancellationToken cancellationToken);
    public Task`1<ExtensionQueryResult> QueryExtensionsAsync(ExtensionQuery extensionQuery, string accountToken, string accountTokenHeader, object userState, CancellationToken cancellationToken);
    public Task`1<PublishedExtension> CreateExtensionAsync(Stream uploadStream, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Gallery.WebApi.GalleryHttpClient/<DeleteExtensionByIdAsync>d__36")]
public Task DeleteExtensionByIdAsync(Guid extensionId, string version, object userState, CancellationToken cancellationToken);
    public Task`1<PublishedExtension> GetExtensionByIdAsync(Guid extensionId, string version, Nullable`1<ExtensionQueryFlags> flags, object userState, CancellationToken cancellationToken);
    public Task`1<PublishedExtension> UpdateExtensionByIdAsync(Guid extensionId, object userState, CancellationToken cancellationToken);
    public Task`1<PublishedExtension> CreateExtensionWithPublisherAsync(Stream uploadStream, string publisherName, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Gallery.WebApi.GalleryHttpClient/<DeleteExtensionAsync>d__40")]
public Task DeleteExtensionAsync(string publisherName, string extensionName, string version, object userState, CancellationToken cancellationToken);
    public Task`1<PublishedExtension> GetExtensionAsync(string publisherName, string extensionName, string version, Nullable`1<ExtensionQueryFlags> flags, string accountToken, string accountTokenHeader, object userState, CancellationToken cancellationToken);
    public Task`1<PublishedExtension> UpdateExtensionAsync(Stream uploadStream, string publisherName, string extensionName, Nullable`1<bool> bypassScopeCheck, object userState, CancellationToken cancellationToken);
    public Task`1<PublishedExtension> UpdateExtensionPropertiesAsync(string publisherName, string extensionName, PublishedExtensionFlags flags, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Gallery.WebApi.GalleryHttpClient/<ShareExtensionWithHostAsync>d__44")]
public Task ShareExtensionWithHostAsync(string publisherName, string extensionName, string hostType, string hostName, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Gallery.WebApi.GalleryHttpClient/<UnshareExtensionWithHostAsync>d__45")]
public Task UnshareExtensionWithHostAsync(string publisherName, string extensionName, string hostType, string hostName, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Gallery.WebApi.GalleryHttpClient/<ExtensionValidatorAsync>d__46")]
public Task ExtensionValidatorAsync(AzureRestApiRequestModel azureRestApiRequestModel, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Gallery.WebApi.GalleryHttpClient/<SendNotificationsAsync>d__47")]
public Task SendNotificationsAsync(NotificationsData notificationData, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Gallery.WebApi.GalleryHttpClient/<GetPackageAsync>d__48")]
public Task`1<Stream> GetPackageAsync(string publisherName, string extensionName, string version, string accountToken, Nullable`1<bool> acceptDefault, string accountTokenHeader, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Gallery.WebApi.GalleryHttpClient/<GetAssetWithTokenAsync>d__49")]
public Task`1<Stream> GetAssetWithTokenAsync(string publisherName, string extensionName, string version, string assetType, string assetToken, string accountToken, Nullable`1<bool> acceptDefault, string accountTokenHeader, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Gallery.WebApi.GalleryHttpClient/<DeletePublisherAssetAsync>d__50")]
public Task DeletePublisherAssetAsync(string publisherName, string assetType, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Gallery.WebApi.GalleryHttpClient/<GetPublisherAssetAsync>d__51")]
public Task`1<Stream> GetPublisherAssetAsync(string publisherName, string assetType, object userState, CancellationToken cancellationToken);
    public Task`1<IReadOnlyDictionary`2<string, string>> UpdatePublisherAssetAsync(Stream uploadStream, string publisherName, string assetType, string fileName, object userState, CancellationToken cancellationToken);
    public Task`1<PublisherQueryResult> QueryPublishersAsync(PublisherQuery publisherQuery, object userState, CancellationToken cancellationToken);
    public Task`1<Publisher> CreatePublisherAsync(Publisher publisher, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Gallery.WebApi.GalleryHttpClient/<DeletePublisherAsync>d__55")]
public Task DeletePublisherAsync(string publisherName, object userState, CancellationToken cancellationToken);
    public Task`1<Publisher> GetPublisherAsync(string publisherName, Nullable`1<int> flags, object userState, CancellationToken cancellationToken);
    public Task`1<Publisher> UpdatePublisherAsync(Publisher publisher, string publisherName, object userState, CancellationToken cancellationToken);
    public Task`1<List`1<PublisherRoleAssignment>> UpdatePublisherMembersAsync(IEnumerable`1<PublisherUserRoleAssignmentRef> roleAssignments, string publisherName, Nullable`1<bool> limitToCallerIdentityDomain, object userState, CancellationToken cancellationToken);
    public Task`1<QuestionsResult> GetQuestionsAsync(string publisherName, string extensionName, Nullable`1<int> count, Nullable`1<int> page, Nullable`1<DateTime> afterDate, object userState, CancellationToken cancellationToken);
    public Task`1<Concern> ReportQuestionAsync(Concern concern, string pubName, string extName, long questionId, object userState, CancellationToken cancellationToken);
    public Task`1<Question> CreateQuestionAsync(Question question, string publisherName, string extensionName, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Gallery.WebApi.GalleryHttpClient/<DeleteQuestionAsync>d__62")]
public Task DeleteQuestionAsync(string publisherName, string extensionName, long questionId, object userState, CancellationToken cancellationToken);
    public Task`1<Question> UpdateQuestionAsync(Question question, string publisherName, string extensionName, long questionId, object userState, CancellationToken cancellationToken);
    public Task`1<Response> CreateResponseAsync(Response response, string publisherName, string extensionName, long questionId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Gallery.WebApi.GalleryHttpClient/<DeleteResponseAsync>d__65")]
public Task DeleteResponseAsync(string publisherName, string extensionName, long questionId, long responseId, object userState, CancellationToken cancellationToken);
    public Task`1<Response> UpdateResponseAsync(Response response, string publisherName, string extensionName, long questionId, long responseId, object userState, CancellationToken cancellationToken);
    public Task`1<Stream> GetExtensionReportsAsync(string publisherName, string extensionName, Nullable`1<int> days, Nullable`1<int> count, Nullable`1<DateTime> afterDate, object userState, CancellationToken cancellationToken);
    public Task`1<ReviewsResult> GetReviewsAsync(string publisherName, string extensionName, Nullable`1<int> count, Nullable`1<ReviewFilterOptions> filterOptions, Nullable`1<DateTime> beforeDate, Nullable`1<DateTime> afterDate, object userState, CancellationToken cancellationToken);
    public Task`1<ReviewSummary> GetReviewsSummaryAsync(string pubName, string extName, Nullable`1<DateTime> beforeDate, Nullable`1<DateTime> afterDate, object userState, CancellationToken cancellationToken);
    public Task`1<Review> CreateReviewAsync(Review review, string pubName, string extName, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Gallery.WebApi.GalleryHttpClient/<DeleteReviewAsync>d__71")]
public Task DeleteReviewAsync(string pubName, string extName, long reviewId, object userState, CancellationToken cancellationToken);
    public Task`1<ReviewPatch> UpdateReviewAsync(ReviewPatch reviewPatch, string pubName, string extName, long reviewId, object userState, CancellationToken cancellationToken);
    public Task`1<ExtensionCategory> CreateCategoryAsync(ExtensionCategory category, object userState, CancellationToken cancellationToken);
    public Task`1<Dictionary`2<string, object>> GetGalleryUserSettingsAsync(string userScope, object userState, CancellationToken cancellationToken);
    public Task`1<Dictionary`2<string, object>> GetGalleryUserSettingsAsync(string userScope, string key, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Gallery.WebApi.GalleryHttpClient/<SetGalleryUserSettingsAsync>d__76")]
public Task SetGalleryUserSettingsAsync(IDictionary`2<string, object> entries, string userScope, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Gallery.WebApi.GalleryHttpClient/<GenerateKeyAsync>d__77")]
public Task GenerateKeyAsync(string keyType, Nullable`1<int> expireCurrentSeconds, object userState, CancellationToken cancellationToken);
    public Task`1<string> GetSigningKeyAsync(string keyType, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Gallery.WebApi.GalleryHttpClient/<UpdateExtensionStatisticsAsync>d__79")]
public Task UpdateExtensionStatisticsAsync(ExtensionStatisticUpdate extensionStatisticsUpdate, string publisherName, string extensionName, object userState, CancellationToken cancellationToken);
    public Task`1<ExtensionDailyStats> GetExtensionDailyStatsAsync(string publisherName, string extensionName, Nullable`1<int> days, Nullable`1<ExtensionStatsAggregateType> aggregate, Nullable`1<DateTime> afterDate, object userState, CancellationToken cancellationToken);
    public Task`1<ExtensionDailyStats> GetExtensionDailyStatsAnonymousAsync(string publisherName, string extensionName, string version, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Gallery.WebApi.GalleryHttpClient/<IncrementExtensionDailyStatAsync>d__82")]
public Task IncrementExtensionDailyStatAsync(string publisherName, string extensionName, string version, string statType, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Gallery.WebApi.GalleryHttpClient/<GetVerificationLogAsync>d__83")]
public Task`1<Stream> GetVerificationLogAsync(string publisherName, string extensionName, string version, object userState, CancellationToken cancellationToken);
}
public static class Microsoft.VisualStudio.Services.Gallery.WebApi.GalleryProductTypes : object {
    public static string VS;
    public static string VSForMac;
    public static string VSCode;
    public static string VSTS;
    public static string VSSubs;
    public static string AzureDevOps;
    public static string All;
}
[ExtensionAttribute]
public static class Microsoft.VisualStudio.Services.Gallery.WebApi.GalleryUtil : object {
    private static HashSet`1<char> s_nameCharacters;
    private static HashSet`1<char> s_categoryNameCharacters;
    private static HashSet`1<char> s_assetTypeCharacters;
    private static HashSet`1<char> s_reservedTagCharacters;
    private static HashSet`1<char> s_publisherNameRestrictedCharacters;
    private static GalleryUtil();
    public static void CheckExtensionName(string extensionName);
    public static void CheckCategoryName(string categoryName);
    public static void CheckPublisherName(string publisherName);
    public static void CheckPublisherDisplayName(string publisherDisplayName);
    public static bool CheckIllegalCharacters(string stringToValidate, HashSet`1<char> nonValidCharacters);
    public static string CreateFullyQualifiedName(string publisherName, string extensionName);
    public static string CreateExtensionIdForExceptionMessage(string publisherName, string extensionName);
    [ExtensionAttribute]
public static string GetFullyQualifiedName(PublishedExtension extension);
    [ExtensionAttribute]
public static bool IsVsExtension(PublishedExtension extension);
    [ExtensionAttribute]
public static bool IsVsForMacExtension(PublishedExtension extension);
    [ExtensionAttribute]
public static bool IsMigratedFromVSGallery(PublishedExtension extension);
    [ExtensionAttribute]
public static bool IsVsCodeExtension(PublishedExtension extension);
    [ExtensionAttribute]
public static bool IsVsOrVsCodeOrVsForMacExtension(PublishedExtension extension);
    [ExtensionAttribute]
public static bool IsVSTSExtensionResourceOrIntegration(PublishedExtension extension);
    public static bool IsVSTSExtensionResourceOrIntegration(IEnumerable`1<InstallationTarget> installationTargets);
    [ExtensionAttribute]
public static bool IsPublic(PublishedExtension extension);
    [ExtensionAttribute]
public static bool IsValidated(PublishedExtension extension);
    [ExtensionAttribute]
public static bool IsBuiltIn(PublishedExtension extension);
    [ExtensionAttribute]
public static bool IsPaid(PublishedExtension extension);
    [ExtensionAttribute]
public static bool IsPreview(PublishedExtension extension);
    [ExtensionAttribute]
public static bool IsTrial(PublishedExtension extension);
    [ExtensionAttribute]
public static bool IsFirstParty(PublishedExtension extension);
    public static bool IsFirstParty(string publisherDisplayName);
    [ExtensionAttribute]
public static bool IsMSExtension(PublishedExtension extension);
    [ExtensionAttribute]
public static bool IsThirdParty(PublishedExtension extension);
    [ExtensionAttribute]
public static bool IsFirstPartyAndPaid(PublishedExtension extension);
    [ExtensionAttribute]
public static bool IsFirstPartyAndPaidVSTS(PublishedExtension extension);
    [ExtensionAttribute]
public static bool IsThirdPartyAndPaid(PublishedExtension extension);
    [ExtensionAttribute]
public static bool ShouldNotDownload(PublishedExtension extension);
    [ExtensionAttribute]
public static bool IsMarketExtension(PublishedExtension extension);
    [ExtensionAttribute]
public static bool IsByolExtension(PublishedExtension extension);
    [ExtensionAttribute]
public static bool IsTrialEnabledForByolExtension(PublishedExtension extension);
    [ExtensionAttribute]
public static bool IsByolEnabledExtension(PublishedExtension extension);
    [ExtensionAttribute]
public static bool IsByolEnforcedExtension(PublishedExtension extension);
    public static bool IsSystemTag(string tagToCheck);
    private static bool HasExtensionTag(IEnumerable`1<string> tagsList, string searchTag);
    public static void CheckAssetType(string assetType);
    public static string FixAssetType(string assetType, char replacement);
    public static void CheckTag(string tag);
    public static bool InstallationTargetsHasVSTS(IEnumerable`1<InstallationTarget> installationTargets);
    public static bool InstallationTargetsHasVSTSResource(IEnumerable`1<InstallationTarget> installationTargets);
    public static bool HasInterestingTargetsForEMS(IEnumerable`1<InstallationTarget> installationTargets);
    public static bool HasInterestingTargets(IEnumerable`1<InstallationTarget> installationTargets, string interestingTargets);
    public static bool IsVSTSOrTFSInstallationTargets(IEnumerable`1<InstallationTarget> installationTargets);
    public static bool IsVSTSOrTFSInstallationTarget(string installationTarget);
    public static bool IsOnPremSupported(IEnumerable`1<InstallationTarget> installationTargets);
    public static bool IsVSTSOrTFSIntegrationTargets(IEnumerable`1<InstallationTarget> installationTargets);
    public static bool IsVSTSOrTFSIntegrationTargets(string installationTarget);
    public static bool IsVSSExtensionInstallationTarget(IEnumerable`1<InstallationTarget> installationTargets);
    public static bool IsOnlyVSTSInstallationTarget(IEnumerable`1<InstallationTarget> installationTargets);
    public static bool IsVSCodeInstallationTargets(IEnumerable`1<InstallationTarget> installationTargets);
    public static bool IsVSCodeInstallationTarget(string installationTarget);
    public static bool IsVSInstallationTargets(IEnumerable`1<InstallationTarget> installationTargets);
    public static bool IsVSInstallationTarget(string installationTarget);
    public static bool IsVSForMacInstallationTargets(IEnumerable`1<InstallationTarget> installationTargets);
    public static bool IsVSForMacInstallationTarget(string installationTarget);
    public static bool IsVSSubsInstallationTarget(IEnumerable`1<InstallationTarget> installationTargets);
    public static bool IsHostedResourceInstallationTarget(IEnumerable`1<InstallationTarget> installationTargets);
    public static bool HasAcquisitionExperience(PublishedExtension extension);
    public static string GetProductTypeForInstallationTargets(IEnumerable`1<InstallationTarget> installationTargets, bool useAzureDevOps);
    public static List`1<string> GetInstallationTargetsForProduct(string productType, bool useAzureDevOps);
    public static void LoadExtensionDeploymentType(PublishedExtension extension);
    public static bool IsVsVsixTypeZipPackage(PackageDetails packageDetails);
    public static string GetProductTypeFromExtensionQuery(ExtensionQuery extensionQuery);
    public static IDictionary`2<string, string> GetExtensionProperties(PublishedExtension extension);
    public static int GetCultureMatchingDistance(CultureInfo cultureA, CultureInfo cultureB);
    public static PublishedExtension CloneExtension(PublishedExtension extension, ExtensionQueryFlags flags);
}
internal static class Microsoft.VisualStudio.Services.Gallery.WebApi.GalleryWebApiResources : object {
    private static ResourceManager s_resMgr;
    public static ResourceManager Manager { get; }
    private static GalleryWebApiResources();
    public static ResourceManager get_Manager();
    private static string Get(string resourceName);
    public static int GetInt(string resourceName);
    public static bool GetBool(string resourceName);
    private static string Format(string resourceName, Object[] args);
    public static string AccountSpecifiedIsInvalid();
    public static string ExtensionAssetNotFound(object arg0, object arg1, object arg2);
    public static string ExtensionVersionNotFound(object arg0, object arg1);
    public static string InvalidElementFormat();
    public static string InvalidElementForToken(object arg0);
    public static string InvalidPackageFormat(object arg0);
    public static string InvalidPrivateTokenFormat();
    public static string InvalidSignedToken(object arg0);
    public static string MissingContributionJson();
    public static string MissingPackageManifest();
    public static string InvalidPackageStream();
    public static string PrivateTokenHasExpired();
    public static string ReviewProductVersionMismatch(object arg0, object arg1);
    public static string SignedTokensMustHaveClaims();
    public static string ThereMustBeElementsAndSignature();
    public static string TheSignatureMustMatchTheElements();
    public static string UseOfResistrictedPart(object arg0);
    public static string MustSupplyQueryValues(object arg0);
    public static string ExtensionDoesNotExist(object arg0);
    public static string CharacterLimitExceeded(object arg0, object arg1);
    public static string PublisherAlreadyExists();
    public static string PublisherDoesNotExist();
    public static string InvalidExtensionVersion(object arg0);
    public static string UnsupportedTokenFormat();
    public static string KeyLengthMustBeDivisibleByEight(object arg0);
    public static string InvalidTokenDate(object arg0);
    public static string VerifiedPublisherRequired(object arg0, object arg1);
    public static string InvalidAssetType(object arg0);
    public static string InvalidPublisherName(object arg0);
    public static string InvalidPublisherDisplayName(object arg0);
    public static string InvalidExtensionName(object arg0);
    public static string ReviewAlreadyExistsException();
    public static string ReviewAlreadyReportedException();
    public static string ReviewDoesNotExistException(object arg0);
    public static string AzurePublisherExistsException(object arg0, object arg1);
    public static string ExtensionInfoDoesNotExist();
    public static string NoAuthorizationToResource(object arg0);
    public static string DeprecatedExtensionCantBeUndeprecated();
    public static string InvalidProductVersion(object arg0);
    public static string ExtensionSizeExceeded(object arg0, object arg1);
    public static string QnAItemDoesNotExistException(object arg0);
    public static string InvalidPackageManifest(object arg0);
    public static string QnAItemAlreadyReportedException();
    public static string ExtensionAlreadyExists();
    public static string InvalidCategoryName(object arg0);
    public static string InvalidExtensionIdentifier(object arg0);
    public static string InvalidTag(object arg0);
    public static string PublicExtensionCantBeShared();
    public static string ExtensionNoVersionFound(object arg0);
}
public interface Microsoft.VisualStudio.Services.Gallery.WebApi.IImageResizeUtility {
    public string OutputContentType { get; }
    public bool ShouldCreateSmallImages { get; }
    public abstract virtual Stream ResizeImage(Stream stream, int height, int width, string contentType);
    public abstract virtual string get_OutputContentType();
    public abstract virtual bool get_ShouldCreateSmallImages();
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.InstallationTarget : object {
    [CompilerGeneratedAttribute]
private string <Target>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TargetVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private Version <MinVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private Version <MaxVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <MinInclusive>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <MaxInclusive>k__BackingField;
    [XmlAttributeAttribute("Id")]
public string Target { get; public set; }
    [XmlAttributeAttribute("Version")]
[JsonPropertyAttribute]
public string TargetVersion { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public Version MinVersion { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public Version MaxVersion { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool MinInclusive { get; public set; }
    [XmlIgnoreAttribute]
[JsonIgnoreAttribute]
public bool MaxInclusive { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Target();
    [CompilerGeneratedAttribute]
public void set_Target(string value);
    [CompilerGeneratedAttribute]
public string get_TargetVersion();
    [CompilerGeneratedAttribute]
public void set_TargetVersion(string value);
    [CompilerGeneratedAttribute]
public Version get_MinVersion();
    [CompilerGeneratedAttribute]
public void set_MinVersion(Version value);
    [CompilerGeneratedAttribute]
public Version get_MaxVersion();
    [CompilerGeneratedAttribute]
public void set_MaxVersion(Version value);
    [CompilerGeneratedAttribute]
public bool get_MinInclusive();
    [CompilerGeneratedAttribute]
public void set_MinInclusive(bool value);
    [CompilerGeneratedAttribute]
public bool get_MaxInclusive();
    [CompilerGeneratedAttribute]
public void set_MaxInclusive(bool value);
    public bool IsApplicableForVersion(Version version, string target);
    public InstallationTarget ShallowCopy();
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.InvalidCategoryException : VssServiceException {
    public InvalidCategoryException(string message);
    public InvalidCategoryException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "InvalidExtensionDefinitionException", "Microsoft.VisualStudio.Services.Gallery.WebApi.InvalidExtensionDefinitionException, Microsoft.VisualStudio.Services.Gallery.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.InvalidExtensionDefinitionException : VssServiceException {
    public InvalidExtensionDefinitionException(string message);
    public InvalidExtensionDefinitionException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "InvalidExtensionQueryException", "Microsoft.VisualStudio.Services.Gallery.WebApi.InvalidExtensionQueryException, Microsoft.VisualStudio.Services.Gallery.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.InvalidExtensionQueryException : VssServiceException {
    public InvalidExtensionQueryException(string message);
    public InvalidExtensionQueryException(string message, Exception innerException);
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.InvalidGDPRServiceBusConnectionStringException : VssServiceException {
    public InvalidGDPRServiceBusConnectionStringException(string message);
    public InvalidGDPRServiceBusConnectionStringException(string message, Exception innerException);
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.InvalidKeyException : VssServiceException {
    public InvalidKeyException(string message);
    public InvalidKeyException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "InvalidPackageException", "Microsoft.VisualStudio.Services.Gallery.WebApi.InvalidPackageException, Microsoft.VisualStudio.Services.Gallery.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.InvalidPackageException : VssServiceException {
    public InvalidPackageException(string message);
}
[ExceptionMappingAttribute("0.0", "3.0", "InvalidPackageFormatException", "Microsoft.VisualStudio.Services.Gallery.WebApi.InvalidPackageFormatException, Microsoft.VisualStudio.Services.Gallery.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.InvalidPackageFormatException : VssServiceException {
    public InvalidPackageFormatException(string message);
    public InvalidPackageFormatException(string message, Exception innerException);
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.InvalidPublisherStateTransition : VssServiceException {
    public InvalidPublisherStateTransition(string message);
    public InvalidPublisherStateTransition(string message, Exception innerException);
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.InvalidScanItemException : VssServiceException {
    public InvalidScanItemException(string message);
    public InvalidScanItemException(string message, Exception innerException);
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.InvalidSettingKeyException : VssServiceException {
    public InvalidSettingKeyException(string message);
    public InvalidSettingKeyException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "InvalidSignatureException", "Microsoft.VisualStudio.Services.Gallery.WebApi.InvalidSignatureException, Microsoft.VisualStudio.Services.Gallery.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.InvalidSignatureException : VssServiceException {
    public InvalidSignatureException(string message);
    public InvalidSignatureException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "InvalidTagException", "Microsoft.VisualStudio.Services.Gallery.WebApi.InvalidTagException, Microsoft.VisualStudio.Services.Gallery.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.InvalidTagException : VssServiceException {
    public InvalidTagException(string message);
    public InvalidTagException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "InvalidTokenException", "Microsoft.VisualStudio.Services.Gallery.WebApi.InvalidTokenException, Microsoft.VisualStudio.Services.Gallery.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.InvalidTokenException : VssServiceException {
    public InvalidTokenException(string message);
    public InvalidTokenException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "InvalidVersionException", "Microsoft.VisualStudio.Services.Gallery.WebApi.InvalidVersionException, Microsoft.VisualStudio.Services.Gallery.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.InvalidVersionException : VssServiceException {
    public InvalidVersionException(string message);
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.JwtClaims : object {
    private Dictionary`2<string, string> m_claims;
    [CompilerGeneratedAttribute]
private string <Issuer>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Subject>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Audience>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <NotBefore>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <IssuedTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Identifier>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <Expiration>k__BackingField;
    public string Issuer { get; public set; }
    public string Subject { get; public set; }
    public string Audience { get; public set; }
    public Nullable`1<DateTime> NotBefore { get; public set; }
    public Nullable`1<DateTime> IssuedTime { get; public set; }
    public string Identifier { get; public set; }
    public Nullable`1<DateTime> Expiration { get; public set; }
    public Dictionary`2<string, string> ExtraClaims { get; public set; }
    public JwtClaims(JwtClaims jwtClaims);
    [CompilerGeneratedAttribute]
public string get_Issuer();
    [CompilerGeneratedAttribute]
public void set_Issuer(string value);
    [CompilerGeneratedAttribute]
public string get_Subject();
    [CompilerGeneratedAttribute]
public void set_Subject(string value);
    [CompilerGeneratedAttribute]
public string get_Audience();
    [CompilerGeneratedAttribute]
public void set_Audience(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_NotBefore();
    [CompilerGeneratedAttribute]
public void set_NotBefore(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_IssuedTime();
    [CompilerGeneratedAttribute]
public void set_IssuedTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public string get_Identifier();
    [CompilerGeneratedAttribute]
public void set_Identifier(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_Expiration();
    [CompilerGeneratedAttribute]
public void set_Expiration(Nullable`1<DateTime> value);
    public Dictionary`2<string, string> get_ExtraClaims();
    public void set_ExtraClaims(Dictionary`2<string, string> value);
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.JwtHeader : object {
    [CompilerGeneratedAttribute]
private string <TokenType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Algorithm>k__BackingField;
    [JsonPropertyAttribute("typ")]
public string TokenType { get; public set; }
    [JsonPropertyAttribute("alg")]
public string Algorithm { get; public set; }
    [CompilerGeneratedAttribute]
public string get_TokenType();
    [CompilerGeneratedAttribute]
public void set_TokenType(string value);
    [CompilerGeneratedAttribute]
public string get_Algorithm();
    [CompilerGeneratedAttribute]
public void set_Algorithm(string value);
}
public static class Microsoft.VisualStudio.Services.Gallery.WebApi.LastContactKeyConstants : object {
    public static string Uninstall;
    public static string SalesAndAcquisition;
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.ManifestFile : ExtensionFile {
    [CompilerGeneratedAttribute]
private string <FullPath>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Addressable>k__BackingField;
    [XmlAttributeAttribute("Path")]
public string FullPath { get; public set; }
    [XmlAttributeAttribute("Addressable")]
public bool Addressable { get; public set; }
    [CompilerGeneratedAttribute]
public string get_FullPath();
    [CompilerGeneratedAttribute]
public void set_FullPath(string value);
    [CompilerGeneratedAttribute]
public bool get_Addressable();
    [CompilerGeneratedAttribute]
public void set_Addressable(bool value);
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.ManifestIdentity : object {
    [CompilerGeneratedAttribute]
private string <PublisherName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ExtensionName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [XmlAttributeAttribute("Publisher")]
public string PublisherName { get; public set; }
    [XmlAttributeAttribute("Id")]
public string ExtensionName { get; public set; }
    [XmlAttributeAttribute("Version")]
public string Version { get; public set; }
    [CompilerGeneratedAttribute]
public string get_PublisherName();
    [CompilerGeneratedAttribute]
public void set_PublisherName(string value);
    [CompilerGeneratedAttribute]
public string get_ExtensionName();
    [CompilerGeneratedAttribute]
public void set_ExtensionName(string value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.ManifestMetadata : object {
    [CompilerGeneratedAttribute]
private ManifestIdentity <Identity>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ReleaseNotes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Categories>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Tags>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IgnoreWarnings>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VsixId>k__BackingField;
    private List`1<ExtensionProperty> m_properties;
    private List`1<ExtensionBadge> m_badges;
    [CompilerGeneratedAttribute]
private PublisherDetails <Publisher>k__BackingField;
    [CompilerGeneratedAttribute]
private PublishedExtensionFlags <Flags>k__BackingField;
    public ManifestIdentity Identity { get; public set; }
    public string DisplayName { get; public set; }
    public string Description { get; public set; }
    public string ReleaseNotes { get; public set; }
    public string Categories { get; public set; }
    public string Tags { get; public set; }
    public string IgnoreWarnings { get; public set; }
    public string VsixId { get; public set; }
    [XmlElementAttribute("PublisherDetails")]
public PublisherDetails Publisher { get; public set; }
    [XmlElementAttribute("GalleryFlags")]
public PublishedExtensionFlags Flags { get; public set; }
    [XmlArrayItemAttribute("Property")]
public List`1<ExtensionProperty> Properties { get; }
    [XmlArrayItemAttribute("Badge")]
public List`1<ExtensionBadge> Badges { get; }
    public ManifestMetadata(ManifestMetadataInternal metadataInternal);
    [CompilerGeneratedAttribute]
public ManifestIdentity get_Identity();
    [CompilerGeneratedAttribute]
public void set_Identity(ManifestIdentity value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public string get_ReleaseNotes();
    [CompilerGeneratedAttribute]
public void set_ReleaseNotes(string value);
    [CompilerGeneratedAttribute]
public string get_Categories();
    [CompilerGeneratedAttribute]
public void set_Categories(string value);
    [CompilerGeneratedAttribute]
public string get_Tags();
    [CompilerGeneratedAttribute]
public void set_Tags(string value);
    [CompilerGeneratedAttribute]
public string get_IgnoreWarnings();
    [CompilerGeneratedAttribute]
public void set_IgnoreWarnings(string value);
    [CompilerGeneratedAttribute]
public string get_VsixId();
    [CompilerGeneratedAttribute]
public void set_VsixId(string value);
    [CompilerGeneratedAttribute]
public PublisherDetails get_Publisher();
    [CompilerGeneratedAttribute]
public void set_Publisher(PublisherDetails value);
    [CompilerGeneratedAttribute]
public PublishedExtensionFlags get_Flags();
    [CompilerGeneratedAttribute]
public void set_Flags(PublishedExtensionFlags value);
    public List`1<ExtensionProperty> get_Properties();
    public List`1<ExtensionBadge> get_Badges();
    private PublishedExtensionFlags ParseFlags(string flagsString);
}
[EditorBrowsableAttribute("1")]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.ManifestMetadataInternal : object {
    [CompilerGeneratedAttribute]
private ManifestIdentity <Identity>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ReleaseNotes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VsixId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IgnoreWarnings>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Categories>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Tags>k__BackingField;
    private List`1<ExtensionProperty> m_properties;
    private List`1<ExtensionBadge> m_badges;
    private string m_flagsString;
    [CompilerGeneratedAttribute]
private PublisherDetails <Publisher>k__BackingField;
    public ManifestIdentity Identity { get; public set; }
    public string DisplayName { get; public set; }
    public string Description { get; public set; }
    public string ReleaseNotes { get; public set; }
    public string VsixId { get; public set; }
    public string IgnoreWarnings { get; public set; }
    public string Categories { get; public set; }
    public string Tags { get; public set; }
    [XmlElementAttribute("PublisherDetails")]
public PublisherDetails Publisher { get; public set; }
    [XmlElementAttribute("GalleryFlags")]
public string FlagsString { get; public set; }
    [XmlArrayItemAttribute("Property")]
public List`1<ExtensionProperty> Properties { get; }
    [XmlArrayItemAttribute("Badge")]
public List`1<ExtensionBadge> Badges { get; }
    [CompilerGeneratedAttribute]
public ManifestIdentity get_Identity();
    [CompilerGeneratedAttribute]
public void set_Identity(ManifestIdentity value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public string get_ReleaseNotes();
    [CompilerGeneratedAttribute]
public void set_ReleaseNotes(string value);
    [CompilerGeneratedAttribute]
public string get_VsixId();
    [CompilerGeneratedAttribute]
public void set_VsixId(string value);
    [CompilerGeneratedAttribute]
public string get_IgnoreWarnings();
    [CompilerGeneratedAttribute]
public void set_IgnoreWarnings(string value);
    [CompilerGeneratedAttribute]
public string get_Categories();
    [CompilerGeneratedAttribute]
public void set_Categories(string value);
    [CompilerGeneratedAttribute]
public string get_Tags();
    [CompilerGeneratedAttribute]
public void set_Tags(string value);
    [CompilerGeneratedAttribute]
public PublisherDetails get_Publisher();
    [CompilerGeneratedAttribute]
public void set_Publisher(PublisherDetails value);
    public string get_FlagsString();
    public void set_FlagsString(string value);
    public List`1<ExtensionProperty> get_Properties();
    public List`1<ExtensionBadge> get_Badges();
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.MetadataItem : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Count>k__BackingField;
    public string Name { get; public set; }
    public int Count { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public int get_Count();
    [CompilerGeneratedAttribute]
public void set_Count(int value);
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.MethodNotAvailableException : VssServiceException {
    public MethodNotAvailableException(string message);
    public MethodNotAvailableException(string message, Exception innerException);
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.NewPublisherExpConstants : object {
    public static string EnableNewPublisherPageExp;
    public static string NewPublisherPageExpQueryParam;
    public static string EnableNewOnPremPublisherPageExp;
    public static string EnablePublisherProfilePage;
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.NotificationsData : object {
    [DataMemberAttribute]
public NotificationTemplateType Type;
    [DataMemberAttribute]
public IDictionary`2<string, object> Identities;
    [DataMemberAttribute]
public IDictionary`2<string, object> Data;
}
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.Gallery.WebApi.NotificationTemplateType : Enum {
    public int value__;
    [EnumMemberAttribute]
public static NotificationTemplateType ReviewNotification;
    [EnumMemberAttribute]
public static NotificationTemplateType QnaNotification;
    [EnumMemberAttribute]
public static NotificationTemplateType CustomerContactNotification;
    [EnumMemberAttribute]
public static NotificationTemplateType PublisherMemberUpdateNotification;
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.PackageDetails : object {
    [CompilerGeneratedAttribute]
private PackageManifest <Manifest>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <Tags>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <Categories>k__BackingField;
    public PackageManifest Manifest { get; public set; }
    public IEnumerable`1<string> Tags { get; public set; }
    public IEnumerable`1<string> Categories { get; public set; }
    [CompilerGeneratedAttribute]
public PackageManifest get_Manifest();
    [CompilerGeneratedAttribute]
public void set_Manifest(PackageManifest value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_Tags();
    [CompilerGeneratedAttribute]
public void set_Tags(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_Categories();
    [CompilerGeneratedAttribute]
public void set_Categories(IEnumerable`1<string> value);
}
[XmlRootAttribute]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.PackageManifest : object {
    private List`1<ManifestFile> m_assets;
    private List`1<InstallationTarget> m_targets;
    [CompilerGeneratedAttribute]
private string <AssetCDNRoot>k__BackingField;
    [CompilerGeneratedAttribute]
private ManifestMetadata <Metadata>k__BackingField;
    internal string AssetCDNRoot { get; internal set; }
    public ManifestMetadata Metadata { get; public set; }
    [XmlArrayItemAttribute("Asset")]
public List`1<ManifestFile> Assets { get; }
    [XmlArrayItemAttribute("InstallationTarget")]
public List`1<InstallationTarget> Installation { get; }
    public PackageManifest(PackageManifestInternal packageManifestInternal);
    [CompilerGeneratedAttribute]
internal string get_AssetCDNRoot();
    [CompilerGeneratedAttribute]
internal void set_AssetCDNRoot(string value);
    [CompilerGeneratedAttribute]
public ManifestMetadata get_Metadata();
    [CompilerGeneratedAttribute]
public void set_Metadata(ManifestMetadata value);
    public List`1<ManifestFile> get_Assets();
    public List`1<InstallationTarget> get_Installation();
}
[XmlRootAttribute]
[EditorBrowsableAttribute("1")]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.PackageManifestInternal : object {
    private List`1<ManifestFile> m_assets;
    private List`1<InstallationTarget> m_targets;
    [CompilerGeneratedAttribute]
private string <AssetCDNRoot>k__BackingField;
    [CompilerGeneratedAttribute]
private ManifestMetadataInternal <Metadata>k__BackingField;
    internal string AssetCDNRoot { get; internal set; }
    public ManifestMetadataInternal Metadata { get; public set; }
    [XmlArrayItemAttribute("Asset")]
public List`1<ManifestFile> Assets { get; }
    [XmlArrayItemAttribute("InstallationTarget")]
public List`1<InstallationTarget> Installation { get; }
    [CompilerGeneratedAttribute]
internal string get_AssetCDNRoot();
    [CompilerGeneratedAttribute]
internal void set_AssetCDNRoot(string value);
    [CompilerGeneratedAttribute]
public ManifestMetadataInternal get_Metadata();
    [CompilerGeneratedAttribute]
public void set_Metadata(ManifestMetadataInternal value);
    public List`1<ManifestFile> get_Assets();
    public List`1<InstallationTarget> get_Installation();
}
[ExceptionMappingAttribute("0.0", "3.0", "PackageValidationWarningException", "Microsoft.VisualStudio.Services.Gallery.WebApi.PackageValidationWarningException, Microsoft.VisualStudio.Services.Gallery.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.PackageValidationWarningException : VssServiceException {
    public PackageValidationWarningException(string message, int errorCode);
}
public enum Microsoft.VisualStudio.Services.Gallery.WebApi.PagingDirection : Enum {
    public int value__;
    public static PagingDirection Backward;
    public static PagingDirection Forward;
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.ProductCategoriesResult : object {
    [CompilerGeneratedAttribute]
private List`1<ProductCategory> <Categories>k__BackingField;
    public List`1<ProductCategory> Categories { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<ProductCategory> get_Categories();
    [CompilerGeneratedAttribute]
public void set_Categories(List`1<ProductCategory> value);
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.ProductCategory : object {
    [CompilerGeneratedAttribute]
private Guid <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasChildren>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ProductCategory> <Children>k__BackingField;
    public Guid Id { get; public set; }
    public string Title { get; public set; }
    public bool HasChildren { get; public set; }
    [JsonPropertyAttribute]
public List`1<ProductCategory> Children { get; public set; }
    [CompilerGeneratedAttribute]
public Guid get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(Guid value);
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(string value);
    [CompilerGeneratedAttribute]
public bool get_HasChildren();
    [CompilerGeneratedAttribute]
public void set_HasChildren(bool value);
    [CompilerGeneratedAttribute]
public List`1<ProductCategory> get_Children();
    [CompilerGeneratedAttribute]
public void set_Children(List`1<ProductCategory> value);
}
public static class Microsoft.VisualStudio.Services.Gallery.WebApi.ProductStatisticType : object {
    public static string AverageRating;
    public static string MinVotesRequired;
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.PublishedExtension : object {
    [CompilerGeneratedAttribute]
private PublisherFacts <Publisher>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <ExtensionId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ExtensionName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private PublishedExtensionFlags <Flags>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <LastUpdated>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <PublishedDate>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <ReleaseDate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ShortDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LongDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ExtensionVersion> <Versions>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <Categories>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <Tags>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ExtensionShare> <SharedWith>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ExtensionStatistic> <Statistics>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<InstallationTarget> <InstallationTargets>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ExtensionMetadata> <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<int> <Lcids>k__BackingField;
    [CompilerGeneratedAttribute]
private ExtensionDeploymentTechnology <DeploymentType>k__BackingField;
    public PublisherFacts Publisher { get; public set; }
    public Guid ExtensionId { get; public set; }
    public string ExtensionName { get; public set; }
    public string DisplayName { get; public set; }
    public PublishedExtensionFlags Flags { get; public set; }
    public DateTime LastUpdated { get; public set; }
    public DateTime PublishedDate { get; public set; }
    [JsonPropertyAttribute]
public DateTime ReleaseDate { get; public set; }
    [JsonPropertyAttribute]
public string ShortDescription { get; public set; }
    [JsonPropertyAttribute]
public string LongDescription { get; public set; }
    [JsonPropertyAttribute]
public List`1<ExtensionVersion> Versions { get; public set; }
    [JsonPropertyAttribute]
public List`1<string> Categories { get; public set; }
    [JsonPropertyAttribute]
public List`1<string> Tags { get; public set; }
    [JsonPropertyAttribute]
public List`1<ExtensionShare> SharedWith { get; public set; }
    [JsonPropertyAttribute]
public List`1<ExtensionStatistic> Statistics { get; public set; }
    [JsonPropertyAttribute]
public List`1<InstallationTarget> InstallationTargets { get; public set; }
    internal List`1<ExtensionMetadata> Metadata { get; internal set; }
    internal List`1<int> Lcids { get; internal set; }
    [JsonPropertyAttribute]
public ExtensionDeploymentTechnology DeploymentType { get; public set; }
    [CompilerGeneratedAttribute]
public PublisherFacts get_Publisher();
    [CompilerGeneratedAttribute]
public void set_Publisher(PublisherFacts value);
    [CompilerGeneratedAttribute]
public Guid get_ExtensionId();
    [CompilerGeneratedAttribute]
public void set_ExtensionId(Guid value);
    [CompilerGeneratedAttribute]
public string get_ExtensionName();
    [CompilerGeneratedAttribute]
public void set_ExtensionName(string value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public PublishedExtensionFlags get_Flags();
    [CompilerGeneratedAttribute]
public void set_Flags(PublishedExtensionFlags value);
    [CompilerGeneratedAttribute]
public DateTime get_LastUpdated();
    [CompilerGeneratedAttribute]
public void set_LastUpdated(DateTime value);
    [CompilerGeneratedAttribute]
public DateTime get_PublishedDate();
    [CompilerGeneratedAttribute]
public void set_PublishedDate(DateTime value);
    [CompilerGeneratedAttribute]
public DateTime get_ReleaseDate();
    [CompilerGeneratedAttribute]
public void set_ReleaseDate(DateTime value);
    [CompilerGeneratedAttribute]
public string get_ShortDescription();
    [CompilerGeneratedAttribute]
public void set_ShortDescription(string value);
    [CompilerGeneratedAttribute]
public string get_LongDescription();
    [CompilerGeneratedAttribute]
public void set_LongDescription(string value);
    [CompilerGeneratedAttribute]
public List`1<ExtensionVersion> get_Versions();
    [CompilerGeneratedAttribute]
public void set_Versions(List`1<ExtensionVersion> value);
    [CompilerGeneratedAttribute]
public List`1<string> get_Categories();
    [CompilerGeneratedAttribute]
public void set_Categories(List`1<string> value);
    [CompilerGeneratedAttribute]
public List`1<string> get_Tags();
    [CompilerGeneratedAttribute]
public void set_Tags(List`1<string> value);
    [CompilerGeneratedAttribute]
public List`1<ExtensionShare> get_SharedWith();
    [CompilerGeneratedAttribute]
public void set_SharedWith(List`1<ExtensionShare> value);
    [CompilerGeneratedAttribute]
public List`1<ExtensionStatistic> get_Statistics();
    [CompilerGeneratedAttribute]
public void set_Statistics(List`1<ExtensionStatistic> value);
    [CompilerGeneratedAttribute]
public List`1<InstallationTarget> get_InstallationTargets();
    [CompilerGeneratedAttribute]
public void set_InstallationTargets(List`1<InstallationTarget> value);
    [CompilerGeneratedAttribute]
internal List`1<ExtensionMetadata> get_Metadata();
    [CompilerGeneratedAttribute]
internal void set_Metadata(List`1<ExtensionMetadata> value);
    [CompilerGeneratedAttribute]
internal List`1<int> get_Lcids();
    [CompilerGeneratedAttribute]
internal void set_Lcids(List`1<int> value);
    [CompilerGeneratedAttribute]
public ExtensionDeploymentTechnology get_DeploymentType();
    [CompilerGeneratedAttribute]
public void set_DeploymentType(ExtensionDeploymentTechnology value);
    public string GetProperty(string version, string propertyName);
    internal PublishedExtension ShallowCopy();
}
[FlagsAttribute]
public enum Microsoft.VisualStudio.Services.Gallery.WebApi.PublishedExtensionFlags : Enum {
    public int value__;
    public static PublishedExtensionFlags None;
    public static PublishedExtensionFlags Disabled;
    public static PublishedExtensionFlags BuiltIn;
    public static PublishedExtensionFlags Validated;
    public static PublishedExtensionFlags Trusted;
    public static PublishedExtensionFlags Paid;
    public static PublishedExtensionFlags Public;
    public static PublishedExtensionFlags MultiVersion;
    public static PublishedExtensionFlags System;
    public static PublishedExtensionFlags Preview;
    public static PublishedExtensionFlags Unpublished;
    public static PublishedExtensionFlags Trial;
    public static PublishedExtensionFlags Locked;
    public static PublishedExtensionFlags Hidden;
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.PublishedExtensionUpdate : object {
    [CompilerGeneratedAttribute]
private string <PublisherName>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <ExtensionId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ExtensionName>k__BackingField;
    public string PublisherName { get; public set; }
    public Guid ExtensionId { get; public set; }
    public string ExtensionName { get; public set; }
    [CompilerGeneratedAttribute]
public string get_PublisherName();
    [CompilerGeneratedAttribute]
public void set_PublisherName(string value);
    [CompilerGeneratedAttribute]
public Guid get_ExtensionId();
    [CompilerGeneratedAttribute]
public void set_ExtensionId(Guid value);
    [CompilerGeneratedAttribute]
public string get_ExtensionName();
    [CompilerGeneratedAttribute]
public void set_ExtensionName(string value);
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.Publisher : PublisherBase {
    private ReferenceLinks links;
    [JsonPropertyAttribute("_links")]
[DataMemberAttribute]
public ReferenceLinks Links { get; public set; }
    public ReferenceLinks get_Links();
    public void set_Links(ReferenceLinks value);
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.PublisherBase : object {
    [CompilerGeneratedAttribute]
private Guid <PublisherId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PublisherName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private PublisherFlags <Flags>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <LastUpdated>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ShortDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LongDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<PublishedExtension> <Extensions>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <EmailAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private PublisherState <State>k__BackingField;
    public Guid PublisherId { get; public set; }
    public string PublisherName { get; public set; }
    public string DisplayName { get; public set; }
    public PublisherFlags Flags { get; public set; }
    public DateTime LastUpdated { get; public set; }
    [JsonPropertyAttribute]
public string ShortDescription { get; public set; }
    [JsonPropertyAttribute]
public string LongDescription { get; public set; }
    [JsonPropertyAttribute]
public List`1<PublishedExtension> Extensions { get; public set; }
    [JsonPropertyAttribute]
public List`1<string> EmailAddress { get; public set; }
    [DefaultValueAttribute("Mono.Cecil.CustomAttributeArgument")]
[JsonPropertyAttribute]
public PublisherState State { get; public set; }
    [CompilerGeneratedAttribute]
public Guid get_PublisherId();
    [CompilerGeneratedAttribute]
public void set_PublisherId(Guid value);
    [CompilerGeneratedAttribute]
public string get_PublisherName();
    [CompilerGeneratedAttribute]
public void set_PublisherName(string value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public PublisherFlags get_Flags();
    [CompilerGeneratedAttribute]
public void set_Flags(PublisherFlags value);
    [CompilerGeneratedAttribute]
public DateTime get_LastUpdated();
    [CompilerGeneratedAttribute]
public void set_LastUpdated(DateTime value);
    [CompilerGeneratedAttribute]
public string get_ShortDescription();
    [CompilerGeneratedAttribute]
public void set_ShortDescription(string value);
    [CompilerGeneratedAttribute]
public string get_LongDescription();
    [CompilerGeneratedAttribute]
public void set_LongDescription(string value);
    [CompilerGeneratedAttribute]
public List`1<PublishedExtension> get_Extensions();
    [CompilerGeneratedAttribute]
public void set_Extensions(List`1<PublishedExtension> value);
    [CompilerGeneratedAttribute]
public List`1<string> get_EmailAddress();
    [CompilerGeneratedAttribute]
public void set_EmailAddress(List`1<string> value);
    [CompilerGeneratedAttribute]
public PublisherState get_State();
    [CompilerGeneratedAttribute]
public void set_State(PublisherState value);
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.PublisherDetails : object {
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    public string DisplayName { get; public set; }
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
}
[ExceptionMappingAttribute("0.0", "3.0", "PublisherDoesNotExistException", "Microsoft.VisualStudio.Services.Gallery.WebApi.PublisherDoesNotExistException, Microsoft.VisualStudio.Services.Gallery.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.PublisherDoesNotExistException : VssServiceException {
    public PublisherDoesNotExistException(string message);
    public PublisherDoesNotExistException(string message, Exception innerException);
    public PublisherDoesNotExistException(string message, Exception innerException, int errorNumber);
}
[ExceptionMappingAttribute("0.0", "3.0", "PublisherExistsException", "Microsoft.VisualStudio.Services.Gallery.WebApi.PublisherExistsException, Microsoft.VisualStudio.Services.Gallery.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.PublisherExistsException : VssServiceException {
    public PublisherExistsException(string message);
    public PublisherExistsException(string message, Exception innerException);
    public PublisherExistsException(string message, Exception innerException, int errorNumber);
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.PublisherFacts : object {
    [CompilerGeneratedAttribute]
private Guid <PublisherId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PublisherName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private PublisherFlags <Flags>k__BackingField;
    public Guid PublisherId { get; public set; }
    public string PublisherName { get; public set; }
    public string DisplayName { get; public set; }
    public PublisherFlags Flags { get; public set; }
    [CompilerGeneratedAttribute]
public Guid get_PublisherId();
    [CompilerGeneratedAttribute]
public void set_PublisherId(Guid value);
    [CompilerGeneratedAttribute]
public string get_PublisherName();
    [CompilerGeneratedAttribute]
public void set_PublisherName(string value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public PublisherFlags get_Flags();
    [CompilerGeneratedAttribute]
public void set_Flags(PublisherFlags value);
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.PublisherFilterResult : object {
    [CompilerGeneratedAttribute]
private List`1<Publisher> <Publishers>k__BackingField;
    public List`1<Publisher> Publishers { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<Publisher> get_Publishers();
    [CompilerGeneratedAttribute]
public void set_Publishers(List`1<Publisher> value);
}
[FlagsAttribute]
public enum Microsoft.VisualStudio.Services.Gallery.WebApi.PublisherFlags : Enum {
    public int value__;
    public static PublisherFlags UnChanged;
    public static PublisherFlags None;
    public static PublisherFlags Disabled;
    public static PublisherFlags Verified;
    public static PublisherFlags Certified;
    public static PublisherFlags ServiceFlags;
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.PublisherMetadataDeserializationException : VssServiceException {
    public PublisherMetadataDeserializationException(string message);
    public PublisherMetadataDeserializationException(string message, Exception innerException);
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.PublisherMetadataLengthExceededMaxLimitException : VssServiceException {
    public PublisherMetadataLengthExceededMaxLimitException(string message);
    public PublisherMetadataLengthExceededMaxLimitException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "PublisherMetadataSerializationException", "Microsoft.VisualStudio.Services.Gallery.WebApi.PublisherMetadataSerializationException, Microsoft.VisualStudio.Services.Gallery.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.PublisherMetadataSerializationException : VssServiceException {
    public PublisherMetadataSerializationException(string message);
    public PublisherMetadataSerializationException(string message, Exception innerException);
}
[FlagsAttribute]
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.Gallery.WebApi.PublisherPermissions : Enum {
    public int value__;
    [DataMemberAttribute]
public static PublisherPermissions Read;
    [DataMemberAttribute]
public static PublisherPermissions UpdateExtension;
    [DataMemberAttribute]
public static PublisherPermissions CreatePublisher;
    [DataMemberAttribute]
public static PublisherPermissions PublishExtension;
    [DataMemberAttribute]
public static PublisherPermissions Admin;
    [DataMemberAttribute]
public static PublisherPermissions TrustedPartner;
    [DataMemberAttribute]
public static PublisherPermissions PrivateRead;
    [DataMemberAttribute]
public static PublisherPermissions DeleteExtension;
    [DataMemberAttribute]
public static PublisherPermissions EditSettings;
    [DataMemberAttribute]
public static PublisherPermissions ViewPermissions;
    [DataMemberAttribute]
public static PublisherPermissions ManagePermissions;
    [DataMemberAttribute]
public static PublisherPermissions DeletePublisher;
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.PublisherQuery : object {
    [CompilerGeneratedAttribute]
private List`1<QueryFilter> <Filters>k__BackingField;
    [CompilerGeneratedAttribute]
private PublisherQueryFlags <Flags>k__BackingField;
    public List`1<QueryFilter> Filters { get; public set; }
    public PublisherQueryFlags Flags { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<QueryFilter> get_Filters();
    [CompilerGeneratedAttribute]
public void set_Filters(List`1<QueryFilter> value);
    [CompilerGeneratedAttribute]
public PublisherQueryFlags get_Flags();
    [CompilerGeneratedAttribute]
public void set_Flags(PublisherQueryFlags value);
}
public enum Microsoft.VisualStudio.Services.Gallery.WebApi.PublisherQueryFilterType : Enum {
    public int value__;
    public static PublisherQueryFilterType Tag;
    public static PublisherQueryFilterType DisplayName;
    public static PublisherQueryFilterType My;
}
[FlagsAttribute]
public enum Microsoft.VisualStudio.Services.Gallery.WebApi.PublisherQueryFlags : Enum {
    public int value__;
    public static PublisherQueryFlags None;
    public static PublisherQueryFlags IncludeExtensions;
    public static PublisherQueryFlags IncludeEmailAddress;
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.PublisherQueryResult : object {
    [CompilerGeneratedAttribute]
private List`1<PublisherFilterResult> <Results>k__BackingField;
    public List`1<PublisherFilterResult> Results { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<PublisherFilterResult> get_Results();
    [CompilerGeneratedAttribute]
public void set_Results(List`1<PublisherFilterResult> value);
}
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.Gallery.WebApi.PublisherRoleAccess : Enum {
    public int value__;
    public static PublisherRoleAccess Assigned;
    public static PublisherRoleAccess Inherited;
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.PublisherRoleAssignment : object {
    [CompilerGeneratedAttribute]
private IdentityRef <Identity>k__BackingField;
    [CompilerGeneratedAttribute]
private PublisherSecurityRole <Role>k__BackingField;
    [CompilerGeneratedAttribute]
private PublisherRoleAccess <Access>k__BackingField;
    [DataMemberAttribute]
public IdentityRef Identity { get; public set; }
    [DataMemberAttribute]
public PublisherSecurityRole Role { get; public set; }
    [DataMemberAttribute]
public PublisherRoleAccess Access { get; public set; }
    [DataMemberAttribute]
public string AccessDisplayName { get; }
    [CompilerGeneratedAttribute]
public IdentityRef get_Identity();
    [CompilerGeneratedAttribute]
public void set_Identity(IdentityRef value);
    [CompilerGeneratedAttribute]
public PublisherSecurityRole get_Role();
    [CompilerGeneratedAttribute]
public void set_Role(PublisherSecurityRole value);
    [CompilerGeneratedAttribute]
public PublisherRoleAccess get_Access();
    [CompilerGeneratedAttribute]
public void set_Access(PublisherRoleAccess value);
    public string get_AccessDisplayName();
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.PublisherSecurityRole : object {
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private int <AllowPermissions>k__BackingField;
    [CompilerGeneratedAttribute]
private int <DenyPermissions>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scope>k__BackingField;
    [DataMemberAttribute]
public string DisplayName { get; public set; }
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public int AllowPermissions { get; public set; }
    [DataMemberAttribute]
public int DenyPermissions { get; public set; }
    [DataMemberAttribute]
public string Identifier { get; }
    [DataMemberAttribute]
public string Description { get; public set; }
    [DataMemberAttribute]
public string Scope { get; public set; }
    public PublisherSecurityRole(string displayName, string name, int allowPermissions, int denyPermissions, string scopeId, string description);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public int get_AllowPermissions();
    [CompilerGeneratedAttribute]
public void set_AllowPermissions(int value);
    [CompilerGeneratedAttribute]
public int get_DenyPermissions();
    [CompilerGeneratedAttribute]
public void set_DenyPermissions(int value);
    public string get_Identifier();
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public string get_Scope();
    [CompilerGeneratedAttribute]
public void set_Scope(string value);
    public static bool Equals(PublisherSecurityRole x, PublisherSecurityRole y);
}
[FlagsAttribute]
public enum Microsoft.VisualStudio.Services.Gallery.WebApi.PublisherState : Enum {
    public int value__;
    public static PublisherState None;
    public static PublisherState VerificationPending;
    public static PublisherState CertificationPending;
    public static PublisherState CertificationRejected;
    public static PublisherState CertificationRevoked;
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.PublisherUserRoleAssignmentRef : object {
    [CompilerGeneratedAttribute]
private Guid <UserId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UniqueName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RoleName>k__BackingField;
    [DataMemberAttribute]
public Guid UserId { get; public set; }
    [DataMemberAttribute]
public string UniqueName { get; public set; }
    [DataMemberAttribute]
public string RoleName { get; public set; }
    [CompilerGeneratedAttribute]
public Guid get_UserId();
    [CompilerGeneratedAttribute]
public void set_UserId(Guid value);
    [CompilerGeneratedAttribute]
public string get_UniqueName();
    [CompilerGeneratedAttribute]
public void set_UniqueName(string value);
    [CompilerGeneratedAttribute]
public string get_RoleName();
    [CompilerGeneratedAttribute]
public void set_RoleName(string value);
}
[ExceptionMappingAttribute("0.0", "3.0", "PublisherVerifiedNameChangeException", "Microsoft.VisualStudio.Services.Gallery.WebApi.PublisherVerifiedNameChangeException, Microsoft.VisualStudio.Services.Gallery.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.PublisherVerifiedNameChangeException : VssServiceException {
    public PublisherVerifiedNameChangeException(string message);
    public PublisherVerifiedNameChangeException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "PuidExistsException", "Microsoft.VisualStudio.Services.Gallery.WebApi.PuidExistsException, Microsoft.VisualStudio.Services.Gallery.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.PuidExistsException : VssServiceException {
    public PuidExistsException(string message);
    public PuidExistsException(string message, Exception innerException);
}
internal static class Microsoft.VisualStudio.Services.Gallery.WebApi.QnAConstants : object {
    public static int DefaultPageSize;
    public static long ParentIdForQuestionItem;
}
[DataContractAttribute]
public abstract class Microsoft.VisualStudio.Services.Gallery.WebApi.QnAItem : object {
    [CompilerGeneratedAttribute]
private long <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    [CompilerGeneratedAttribute]
private UserIdentityRef <User>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <CreatedDate>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <UpdatedDate>k__BackingField;
    [CompilerGeneratedAttribute]
private QnAItemStatus <Status>k__BackingField;
    [DataMemberAttribute]
public long Id { get; public set; }
    [DataMemberAttribute]
public string Text { get; public set; }
    [DataMemberAttribute]
public UserIdentityRef User { get; public set; }
    [DataMemberAttribute]
public DateTime CreatedDate { get; public set; }
    [DataMemberAttribute]
public DateTime UpdatedDate { get; public set; }
    [DataMemberAttribute]
public QnAItemStatus Status { get; public set; }
    [CompilerGeneratedAttribute]
public long get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(long value);
    [CompilerGeneratedAttribute]
public string get_Text();
    [CompilerGeneratedAttribute]
public void set_Text(string value);
    [CompilerGeneratedAttribute]
public UserIdentityRef get_User();
    [CompilerGeneratedAttribute]
public void set_User(UserIdentityRef value);
    [CompilerGeneratedAttribute]
public DateTime get_CreatedDate();
    [CompilerGeneratedAttribute]
public void set_CreatedDate(DateTime value);
    [CompilerGeneratedAttribute]
public DateTime get_UpdatedDate();
    [CompilerGeneratedAttribute]
public void set_UpdatedDate(DateTime value);
    [CompilerGeneratedAttribute]
public QnAItemStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(QnAItemStatus value);
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.QnAItemAlreadyReportedException : VssServiceException {
    public QnAItemAlreadyReportedException(string message);
    public QnAItemAlreadyReportedException(string message, Exception innerException);
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.QnAItemDoesNotExistException : VssServiceException {
    public QnAItemDoesNotExistException(string message);
    public QnAItemDoesNotExistException(string message, Exception innerException);
}
[FlagsAttribute]
public enum Microsoft.VisualStudio.Services.Gallery.WebApi.QnAItemStatus : Enum {
    public int value__;
    [EnumMemberAttribute]
public static QnAItemStatus None;
    [EnumMemberAttribute]
public static QnAItemStatus UserEditable;
    [EnumMemberAttribute]
public static QnAItemStatus PublisherCreated;
}
internal enum Microsoft.VisualStudio.Services.Gallery.WebApi.QnAItemType : Enum {
    public int value__;
    public static QnAItemType Question;
    public static QnAItemType Response;
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.QnAOperationForbidden : VssServiceException {
    public QnAOperationForbidden(string message);
    public QnAOperationForbidden(string message, Exception innerException);
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.QnAQuestionIdNotSpecifiedException : VssServiceException {
    public QnAQuestionIdNotSpecifiedException(string message);
    public QnAQuestionIdNotSpecifiedException(string message, Exception innerException);
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.QnAUnhandledException : VssServiceException {
    public QnAUnhandledException(string message);
    public QnAUnhandledException(string message, Exception innerException);
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.QueryFilter : object {
    [CompilerGeneratedAttribute]
private List`1<FilterCriteria> <Criteria>k__BackingField;
    [CompilerGeneratedAttribute]
private int <PageSize>k__BackingField;
    [CompilerGeneratedAttribute]
private int <PageNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private int <SortBy>k__BackingField;
    [CompilerGeneratedAttribute]
private int <SortOrder>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PagingToken>k__BackingField;
    [CompilerGeneratedAttribute]
private PagingDirection <Direction>k__BackingField;
    [CompilerGeneratedAttribute]
private int <QueryIndex>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ForcePageSize>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DoNotUseCache>k__BackingField;
    public List`1<FilterCriteria> Criteria { get; public set; }
    public int PageSize { get; public set; }
    public int PageNumber { get; public set; }
    public int SortBy { get; public set; }
    public int SortOrder { get; public set; }
    public string PagingToken { get; public set; }
    public PagingDirection Direction { get; public set; }
    internal int QueryIndex { get; internal set; }
    internal bool ForcePageSize { get; internal set; }
    internal bool DoNotUseCache { get; internal set; }
    [CompilerGeneratedAttribute]
public List`1<FilterCriteria> get_Criteria();
    [CompilerGeneratedAttribute]
public void set_Criteria(List`1<FilterCriteria> value);
    [CompilerGeneratedAttribute]
public int get_PageSize();
    [CompilerGeneratedAttribute]
public void set_PageSize(int value);
    [CompilerGeneratedAttribute]
public int get_PageNumber();
    [CompilerGeneratedAttribute]
public void set_PageNumber(int value);
    [CompilerGeneratedAttribute]
public int get_SortBy();
    [CompilerGeneratedAttribute]
public void set_SortBy(int value);
    [CompilerGeneratedAttribute]
public int get_SortOrder();
    [CompilerGeneratedAttribute]
public void set_SortOrder(int value);
    [CompilerGeneratedAttribute]
public string get_PagingToken();
    [CompilerGeneratedAttribute]
public void set_PagingToken(string value);
    [CompilerGeneratedAttribute]
public PagingDirection get_Direction();
    [CompilerGeneratedAttribute]
public void set_Direction(PagingDirection value);
    [CompilerGeneratedAttribute]
internal int get_QueryIndex();
    [CompilerGeneratedAttribute]
internal void set_QueryIndex(int value);
    [CompilerGeneratedAttribute]
internal bool get_ForcePageSize();
    [CompilerGeneratedAttribute]
internal void set_ForcePageSize(bool value);
    [CompilerGeneratedAttribute]
internal bool get_DoNotUseCache();
    [CompilerGeneratedAttribute]
internal void set_DoNotUseCache(bool value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.Question : QnAItem {
    [CompilerGeneratedAttribute]
private List`1<Response> <Responses>k__BackingField;
    [DataMemberAttribute]
public List`1<Response> Responses { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<Response> get_Responses();
    [CompilerGeneratedAttribute]
public void set_Responses(List`1<Response> value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.QuestionsResult : object {
    [DataMemberAttribute]
public List`1<Question> Questions;
    [CompilerGeneratedAttribute]
private bool <HasMoreQuestions>k__BackingField;
    [DataMemberAttribute]
public bool HasMoreQuestions { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_HasMoreQuestions();
    [CompilerGeneratedAttribute]
public void set_HasMoreQuestions(bool value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.RatingCountPerRating : object {
    [CompilerGeneratedAttribute]
private long <RatingCount>k__BackingField;
    [CompilerGeneratedAttribute]
private byte <Rating>k__BackingField;
    [DataMemberAttribute]
public long RatingCount { get; public set; }
    [DataMemberAttribute]
public byte Rating { get; public set; }
    [CompilerGeneratedAttribute]
public long get_RatingCount();
    [CompilerGeneratedAttribute]
public void set_RatingCount(long value);
    [CompilerGeneratedAttribute]
public byte get_Rating();
    [CompilerGeneratedAttribute]
public void set_Rating(byte value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.Response : QnAItem {
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.Review : object {
    [CompilerGeneratedAttribute]
private long <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <UserId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserDisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProductId>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <CreatedDate>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <UpdatedDate>k__BackingField;
    [CompilerGeneratedAttribute]
private byte <Rating>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProductVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDeleted>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsIgnored>k__BackingField;
    [CompilerGeneratedAttribute]
private ReviewReply <Reply>k__BackingField;
    [CompilerGeneratedAttribute]
private ReviewReply <AdminReply>k__BackingField;
    [DataMemberAttribute]
public long Id { get; public set; }
    [DataMemberAttribute]
public Guid UserId { get; public set; }
    [JsonPropertyAttribute]
[DataMemberAttribute]
public string UserDisplayName { get; public set; }
    public string ProductId { get; public set; }
    public DateTime CreatedDate { get; public set; }
    [DataMemberAttribute]
public DateTime UpdatedDate { get; public set; }
    [DataMemberAttribute]
public byte Rating { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string Title { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string Text { get; public set; }
    [DataMemberAttribute]
public string ProductVersion { get; public set; }
    [DataMemberAttribute]
public bool IsDeleted { get; public set; }
    [DataMemberAttribute]
public bool IsIgnored { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public ReviewReply Reply { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public ReviewReply AdminReply { get; public set; }
    [CompilerGeneratedAttribute]
public long get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(long value);
    [CompilerGeneratedAttribute]
public Guid get_UserId();
    [CompilerGeneratedAttribute]
public void set_UserId(Guid value);
    [CompilerGeneratedAttribute]
public string get_UserDisplayName();
    [CompilerGeneratedAttribute]
public void set_UserDisplayName(string value);
    [CompilerGeneratedAttribute]
public string get_ProductId();
    [CompilerGeneratedAttribute]
public void set_ProductId(string value);
    [CompilerGeneratedAttribute]
public DateTime get_CreatedDate();
    [CompilerGeneratedAttribute]
public void set_CreatedDate(DateTime value);
    [CompilerGeneratedAttribute]
public DateTime get_UpdatedDate();
    [CompilerGeneratedAttribute]
public void set_UpdatedDate(DateTime value);
    [CompilerGeneratedAttribute]
public byte get_Rating();
    [CompilerGeneratedAttribute]
public void set_Rating(byte value);
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(string value);
    [CompilerGeneratedAttribute]
public string get_Text();
    [CompilerGeneratedAttribute]
public void set_Text(string value);
    [CompilerGeneratedAttribute]
public string get_ProductVersion();
    [CompilerGeneratedAttribute]
public void set_ProductVersion(string value);
    [CompilerGeneratedAttribute]
public bool get_IsDeleted();
    [CompilerGeneratedAttribute]
public void set_IsDeleted(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsIgnored();
    [CompilerGeneratedAttribute]
public void set_IsIgnored(bool value);
    [CompilerGeneratedAttribute]
public ReviewReply get_Reply();
    [CompilerGeneratedAttribute]
public void set_Reply(ReviewReply value);
    [CompilerGeneratedAttribute]
public ReviewReply get_AdminReply();
    [CompilerGeneratedAttribute]
public void set_AdminReply(ReviewReply value);
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.ReviewAlreadyReportedException : VssServiceException {
    public ReviewAlreadyReportedException(string message);
    public ReviewAlreadyReportedException(string message, Exception innerException);
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.ReviewDoesNotExistException : VssServiceException {
    public ReviewDoesNotExistException(string message);
    public ReviewDoesNotExistException(string message, Exception innerException);
}
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.Gallery.WebApi.ReviewEventOperation : Enum {
    public int value__;
    [EnumMemberAttribute]
public static ReviewEventOperation Create;
    [EnumMemberAttribute]
public static ReviewEventOperation Update;
    [EnumMemberAttribute]
public static ReviewEventOperation Delete;
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.ReviewEventProperties : object {
    [DataMemberAttribute]
public long ReviewId;
    [DataMemberAttribute]
public string ReviewText;
    [DataMemberAttribute]
public string ReplyText;
    [DataMemberAttribute]
public DateTime ReviewDate;
    [DataMemberAttribute]
public Nullable`1<DateTime> ReplyDate;
    [DataMemberAttribute]
public Guid UserId;
    [DataMemberAttribute]
public string UserDisplayName;
    [DataMemberAttribute]
public int Rating;
    [DataMemberAttribute]
public ReviewResourceType ResourceType;
    [DataMemberAttribute]
public ReviewEventOperation EventOperation;
    [DataMemberAttribute]
public Guid ReplyUserId;
    [DataMemberAttribute]
public bool IsAdminReply;
    [DataMemberAttribute]
public bool IsIgnored;
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.ReviewExistsException : VssServiceException {
    public ReviewExistsException(string message);
    public ReviewExistsException(string message, Exception innerException);
}
[FlagsAttribute]
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.Gallery.WebApi.ReviewFilterOptions : Enum {
    public int value__;
    [EnumMemberAttribute]
public static ReviewFilterOptions None;
    [EnumMemberAttribute]
public static ReviewFilterOptions FilterEmptyReviews;
    [EnumMemberAttribute]
public static ReviewFilterOptions FilterEmptyUserNames;
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.ReviewPatch : object {
    [CompilerGeneratedAttribute]
private ReviewPatchOperation <Operation>k__BackingField;
    [CompilerGeneratedAttribute]
private UserReportedConcern <ReportedConcern>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyAttribute]
public Review ReviewItem;
    [DataMemberAttribute]
public ReviewPatchOperation Operation { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public UserReportedConcern ReportedConcern { get; public set; }
    [CompilerGeneratedAttribute]
public ReviewPatchOperation get_Operation();
    [CompilerGeneratedAttribute]
public void set_Operation(ReviewPatchOperation value);
    [CompilerGeneratedAttribute]
public UserReportedConcern get_ReportedConcern();
    [CompilerGeneratedAttribute]
public void set_ReportedConcern(UserReportedConcern value);
}
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.Gallery.WebApi.ReviewPatchOperation : Enum {
    public int value__;
    [EnumMemberAttribute]
public static ReviewPatchOperation FlagReview;
    [EnumMemberAttribute]
public static ReviewPatchOperation UpdateReview;
    [EnumMemberAttribute]
public static ReviewPatchOperation ReplyToReview;
    [EnumMemberAttribute]
public static ReviewPatchOperation AdminResponseForReview;
    [EnumMemberAttribute]
public static ReviewPatchOperation DeleteAdminReply;
    [EnumMemberAttribute]
public static ReviewPatchOperation DeletePublisherReply;
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.ReviewPatchOperationNotSupportedException : VssServiceException {
    public ReviewPatchOperationNotSupportedException(string message);
    public ReviewPatchOperationNotSupportedException(string message, Exception innerException);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.ReviewReply : object {
    [CompilerGeneratedAttribute]
private long <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private long <ReviewId>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <UserId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ReplyText>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <UpdatedDate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProductVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDeleted>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsAdminReply>k__BackingField;
    [DataMemberAttribute]
public long Id { get; public set; }
    [DataMemberAttribute]
public long ReviewId { get; public set; }
    [DataMemberAttribute]
public Guid UserId { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string Title { get; public set; }
    [DataMemberAttribute]
public string ReplyText { get; public set; }
    [DataMemberAttribute]
public DateTime UpdatedDate { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string ProductVersion { get; public set; }
    [DataMemberAttribute]
public bool IsDeleted { get; public set; }
    public bool IsAdminReply { get; public set; }
    [CompilerGeneratedAttribute]
public long get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(long value);
    [CompilerGeneratedAttribute]
public long get_ReviewId();
    [CompilerGeneratedAttribute]
public void set_ReviewId(long value);
    [CompilerGeneratedAttribute]
public Guid get_UserId();
    [CompilerGeneratedAttribute]
public void set_UserId(Guid value);
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(string value);
    [CompilerGeneratedAttribute]
public string get_ReplyText();
    [CompilerGeneratedAttribute]
public void set_ReplyText(string value);
    [CompilerGeneratedAttribute]
public DateTime get_UpdatedDate();
    [CompilerGeneratedAttribute]
public void set_UpdatedDate(DateTime value);
    [CompilerGeneratedAttribute]
public string get_ProductVersion();
    [CompilerGeneratedAttribute]
public void set_ProductVersion(string value);
    [CompilerGeneratedAttribute]
public bool get_IsDeleted();
    [CompilerGeneratedAttribute]
public void set_IsDeleted(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsAdminReply();
    [CompilerGeneratedAttribute]
public void set_IsAdminReply(bool value);
}
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.Gallery.WebApi.ReviewResourceType : Enum {
    public int value__;
    [EnumMemberAttribute]
public static ReviewResourceType Review;
    [EnumMemberAttribute]
public static ReviewResourceType PublisherReply;
    [EnumMemberAttribute]
public static ReviewResourceType AdminReply;
}
internal static class Microsoft.VisualStudio.Services.Gallery.WebApi.ReviewsConstants : object {
    public static int DefaultPageSize;
    public static int MaxReviewsToReturn;
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.ReviewsResult : object {
    [CompilerGeneratedAttribute]
private long <TotalReviewCount>k__BackingField;
    [CompilerGeneratedAttribute]
private long <TotalIgnoredReviewCount>k__BackingField;
    [DataMemberAttribute]
public List`1<Review> Reviews;
    [CompilerGeneratedAttribute]
private bool <HasMoreReviews>k__BackingField;
    [DataMemberAttribute]
public long TotalReviewCount { get; public set; }
    public long TotalIgnoredReviewCount { get; public set; }
    [DataMemberAttribute]
public bool HasMoreReviews { get; public set; }
    [CompilerGeneratedAttribute]
public long get_TotalReviewCount();
    [CompilerGeneratedAttribute]
public void set_TotalReviewCount(long value);
    [CompilerGeneratedAttribute]
public long get_TotalIgnoredReviewCount();
    [CompilerGeneratedAttribute]
public void set_TotalIgnoredReviewCount(long value);
    [CompilerGeneratedAttribute]
public bool get_HasMoreReviews();
    [CompilerGeneratedAttribute]
public void set_HasMoreReviews(bool value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.ReviewSummary : object {
    [CompilerGeneratedAttribute]
private float <AverageRating>k__BackingField;
    [CompilerGeneratedAttribute]
private long <RatingCount>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<RatingCountPerRating> <RatingSplit>k__BackingField;
    [DataMemberAttribute]
public float AverageRating { get; public set; }
    [DataMemberAttribute]
public long RatingCount { get; public set; }
    [DataMemberAttribute]
public List`1<RatingCountPerRating> RatingSplit { get; public set; }
    [CompilerGeneratedAttribute]
public float get_AverageRating();
    [CompilerGeneratedAttribute]
public void set_AverageRating(float value);
    [CompilerGeneratedAttribute]
public long get_RatingCount();
    [CompilerGeneratedAttribute]
public void set_RatingCount(long value);
    [CompilerGeneratedAttribute]
public List`1<RatingCountPerRating> get_RatingSplit();
    [CompilerGeneratedAttribute]
public void set_RatingSplit(List`1<RatingCountPerRating> value);
}
internal class Microsoft.VisualStudio.Services.Gallery.WebApi.SheetColumnData : object {
    public Type ColumnType;
    public double ColumnWidth;
}
public static class Microsoft.VisualStudio.Services.Gallery.WebApi.SigningKey : object {
    public static string AccountSigningKey;
    public static string AssetSigningKey;
}
public enum Microsoft.VisualStudio.Services.Gallery.WebApi.SigningKeyPermissions : Enum {
    public int value__;
    public static SigningKeyPermissions Read;
    public static SigningKeyPermissions Write;
}
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.Gallery.WebApi.SortByType : Enum {
    public int value__;
    [DataMemberAttribute]
public static SortByType Relevance;
    [DataMemberAttribute]
public static SortByType LastUpdatedDate;
    [DataMemberAttribute]
public static SortByType Title;
    [DataMemberAttribute]
public static SortByType Publisher;
    [DataMemberAttribute]
public static SortByType InstallCount;
    [DataMemberAttribute]
public static SortByType PublishedDate;
    [DataMemberAttribute]
public static SortByType AverageRating;
    [DataMemberAttribute]
public static SortByType TrendingDaily;
    [DataMemberAttribute]
public static SortByType TrendingWeekly;
    [DataMemberAttribute]
public static SortByType TrendingMonthly;
    [DataMemberAttribute]
public static SortByType ReleaseDate;
    [DataMemberAttribute]
public static SortByType Author;
    [DataMemberAttribute]
public static SortByType WeightedRating;
}
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.Gallery.WebApi.SortOrderType : Enum {
    public int value__;
    [DataMemberAttribute]
public static SortOrderType Default;
    [DataMemberAttribute]
public static SortOrderType Ascending;
    [DataMemberAttribute]
public static SortOrderType Descending;
}
public static class Microsoft.VisualStudio.Services.Gallery.WebApi.StatisticType : object {
    public static string Install;
    public static string AverageRating;
    public static string RatingCount;
    public static string TrendingDaily;
    public static string TrendingWeekly;
    public static string TrendingMonthly;
    public static string OnPremDownloads;
    public static string MigratedInstallCount;
    public static string UpdateCount;
    public static string DownloadCount;
    public static string WeightedRating;
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.SvgFromNonWhitelistHostException : VssServiceException {
    public SvgFromNonWhitelistHostException(string message);
    public SvgFromNonWhitelistHostException(string message, Exception innerException);
}
public static class Microsoft.VisualStudio.Services.Gallery.WebApi.TokenManagement : object {
    private static string s_encodedHeader;
    private static DateTime s_startTime;
    private static Char[] s_fullTokenSeperator;
    private static string s_IssuerClaim;
    private static string s_SubjectClaim;
    private static string s_AudienceClaim;
    private static string s_ExpirationClaim;
    private static string s_NotBeforeClaim;
    private static string s_IssuedTimeClaim;
    private static string s_IdentifierClaim;
    private static HashSet`1<string> s_restrictedElements;
    private static TokenManagement();
    public static Byte[] CreateSigningKey(int keyLength);
    public static string GenerateJwtToken(JwtClaims jwtClaims, Byte[] signingKey, int expirationInSeconds);
    public static string GenerateJwtToken(JwtClaims jwtClaims, Byte[] signingKey);
    public static JwtClaims ParseJwtToken(string signedToken, Byte[] signingKey);
    private static string GetHashValue(string stringToHash, Byte[] hashKey);
    private static string GetNumericDateValue(DateTime dateTime, string dateName);
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.UnpackagedExtensionData : object {
    [CompilerGeneratedAttribute]
private Guid <DraftId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PublisherName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Product>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ExtensionName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <Tags>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <Categories>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<InstallationTarget> <InstallationTargets>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ReferralUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PricingCategory>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VsixId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RepositoryUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <QnAEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsConvertedToMarkdown>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsPreview>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<KeyValuePair`2<string, string>> <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<int> <Lcids>k__BackingField;
    [CompilerGeneratedAttribute]
private PublishedExtensionFlags <Flags>k__BackingField;
    public Guid DraftId { get; public set; }
    public string PublisherName { get; public set; }
    public string Product { get; public set; }
    public string ExtensionName { get; public set; }
    public string Version { get; public set; }
    public string DisplayName { get; public set; }
    public string Description { get; public set; }
    public List`1<string> Tags { get; public set; }
    public List`1<string> Categories { get; public set; }
    public List`1<InstallationTarget> InstallationTargets { get; public set; }
    [JsonPropertyAttribute]
public string ReferralUrl { get; public set; }
    public string PricingCategory { get; public set; }
    [JsonPropertyAttribute]
public string VsixId { get; public set; }
    [JsonPropertyAttribute]
public string RepositoryUrl { get; public set; }
    public bool QnAEnabled { get; public set; }
    [JsonPropertyAttribute]
public bool IsConvertedToMarkdown { get; public set; }
    [JsonPropertyAttribute]
public bool IsPreview { get; public set; }
    internal List`1<KeyValuePair`2<string, string>> Metadata { get; internal set; }
    internal List`1<int> Lcids { get; internal set; }
    internal PublishedExtensionFlags Flags { get; internal set; }
    [CompilerGeneratedAttribute]
public Guid get_DraftId();
    [CompilerGeneratedAttribute]
public void set_DraftId(Guid value);
    [CompilerGeneratedAttribute]
public string get_PublisherName();
    [CompilerGeneratedAttribute]
public void set_PublisherName(string value);
    [CompilerGeneratedAttribute]
public string get_Product();
    [CompilerGeneratedAttribute]
public void set_Product(string value);
    [CompilerGeneratedAttribute]
public string get_ExtensionName();
    [CompilerGeneratedAttribute]
public void set_ExtensionName(string value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public List`1<string> get_Tags();
    [CompilerGeneratedAttribute]
public void set_Tags(List`1<string> value);
    [CompilerGeneratedAttribute]
public List`1<string> get_Categories();
    [CompilerGeneratedAttribute]
public void set_Categories(List`1<string> value);
    [CompilerGeneratedAttribute]
public List`1<InstallationTarget> get_InstallationTargets();
    [CompilerGeneratedAttribute]
public void set_InstallationTargets(List`1<InstallationTarget> value);
    [CompilerGeneratedAttribute]
public string get_ReferralUrl();
    [CompilerGeneratedAttribute]
public void set_ReferralUrl(string value);
    [CompilerGeneratedAttribute]
public string get_PricingCategory();
    [CompilerGeneratedAttribute]
public void set_PricingCategory(string value);
    [CompilerGeneratedAttribute]
public string get_VsixId();
    [CompilerGeneratedAttribute]
public void set_VsixId(string value);
    [CompilerGeneratedAttribute]
public string get_RepositoryUrl();
    [CompilerGeneratedAttribute]
public void set_RepositoryUrl(string value);
    [CompilerGeneratedAttribute]
public bool get_QnAEnabled();
    [CompilerGeneratedAttribute]
public void set_QnAEnabled(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsConvertedToMarkdown();
    [CompilerGeneratedAttribute]
public void set_IsConvertedToMarkdown(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsPreview();
    [CompilerGeneratedAttribute]
public void set_IsPreview(bool value);
    [CompilerGeneratedAttribute]
internal List`1<KeyValuePair`2<string, string>> get_Metadata();
    [CompilerGeneratedAttribute]
internal void set_Metadata(List`1<KeyValuePair`2<string, string>> value);
    [CompilerGeneratedAttribute]
internal List`1<int> get_Lcids();
    [CompilerGeneratedAttribute]
internal void set_Lcids(List`1<int> value);
    [CompilerGeneratedAttribute]
internal PublishedExtensionFlags get_Flags();
    [CompilerGeneratedAttribute]
internal void set_Flags(PublishedExtensionFlags value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.UserExtensionPolicy : object {
    [CompilerGeneratedAttribute]
private string <UserId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private ExtensionPolicy <Permissions>k__BackingField;
    [DataMemberAttribute]
public string UserId { get; public set; }
    [DataMemberAttribute]
public string DisplayName { get; public set; }
    [DataMemberAttribute]
public ExtensionPolicy Permissions { get; public set; }
    [CompilerGeneratedAttribute]
public string get_UserId();
    [CompilerGeneratedAttribute]
public void set_UserId(string value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public ExtensionPolicy get_Permissions();
    [CompilerGeneratedAttribute]
public void set_Permissions(ExtensionPolicy value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.UserIdentityRef : object {
    [CompilerGeneratedAttribute]
private Guid <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [DataMemberAttribute]
public Guid Id { get; public set; }
    [JsonPropertyAttribute]
[DataMemberAttribute]
public string DisplayName { get; public set; }
    [CompilerGeneratedAttribute]
public Guid get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(Guid value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.UserReportedConcern : object {
    [CompilerGeneratedAttribute]
private long <ReviewId>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <UserId>k__BackingField;
    [CompilerGeneratedAttribute]
private ConcernCategory <Category>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ConcernText>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <SubmittedDate>k__BackingField;
    [DataMemberAttribute]
public long ReviewId { get; public set; }
    [DataMemberAttribute]
public Guid UserId { get; public set; }
    [DataMemberAttribute]
public ConcernCategory Category { get; public set; }
    [DataMemberAttribute]
public string ConcernText { get; public set; }
    [DataMemberAttribute]
public DateTime SubmittedDate { get; public set; }
    [CompilerGeneratedAttribute]
public long get_ReviewId();
    [CompilerGeneratedAttribute]
public void set_ReviewId(long value);
    [CompilerGeneratedAttribute]
public Guid get_UserId();
    [CompilerGeneratedAttribute]
public void set_UserId(Guid value);
    [CompilerGeneratedAttribute]
public ConcernCategory get_Category();
    [CompilerGeneratedAttribute]
public void set_Category(ConcernCategory value);
    [CompilerGeneratedAttribute]
public string get_ConcernText();
    [CompilerGeneratedAttribute]
public void set_ConcernText(string value);
    [CompilerGeneratedAttribute]
public DateTime get_SubmittedDate();
    [CompilerGeneratedAttribute]
public void set_SubmittedDate(DateTime value);
}
internal enum Microsoft.VisualStudio.Services.Gallery.WebApi.ValidationStatusCode : Enum {
    public int value__;
    public static ValidationStatusCode ValidationError;
    public static ValidationStatusCode ValidationWarnings;
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.ValidationStepInvalidParentIdException : VssServiceException {
    public ValidationStepInvalidParentIdException(string message);
    public ValidationStepInvalidParentIdException(string message, Exception innerException);
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.ValidationStepInvalidStepIdException : VssServiceException {
    public ValidationStepInvalidStepIdException(string message);
    public ValidationStepInvalidStepIdException(string message, Exception innerException);
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.VerificationLogNotFoundException : VssServiceException {
    public VerificationLogNotFoundException(string message);
    public VerificationLogNotFoundException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "VerifiedPublisherRequiredException", "Microsoft.VisualStudio.Services.Gallery.WebApi.VerifiedPublisherRequiredException, Microsoft.VisualStudio.Services.Gallery.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.VerifiedPublisherRequiredException : VssServiceException {
    public VerifiedPublisherRequiredException(string message);
    public VerifiedPublisherRequiredException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "VersionMismatchException", "Microsoft.VisualStudio.Services.Gallery.WebApi.VersionMismatchException, Microsoft.VisualStudio.Services.Gallery.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.VersionMismatchException : VssServiceException {
    public VersionMismatchException(string message);
}
[ExceptionMappingAttribute("0.0", "3.0", "VersionNotIncrementedException", "Microsoft.VisualStudio.Services.Gallery.WebApi.VersionNotIncrementedException, Microsoft.VisualStudio.Services.Gallery.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.VersionNotIncrementedException : VssServiceException {
    public VersionNotIncrementedException(string message);
    public VersionNotIncrementedException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "VersionValidationException", "Microsoft.VisualStudio.Services.Gallery.WebApi.VersionValidationException, Microsoft.VisualStudio.Services.Gallery.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Gallery.WebApi.VersionValidationException : VssServiceException {
    public VersionValidationException(string message);
    public VersionValidationException(string message, Exception innerException);
}
public static class Microsoft.VisualStudio.Services.Gallery.WebApi.VSExtensionScenario : object {
    public static string Create;
    public static string Edit;
}
internal enum Microsoft.VisualStudio.Services.Gallery.WebApi.VsExtensionType : Enum {
    public int value__;
    public static VsExtensionType Template;
    public static VsExtensionType Tool;
    public static VsExtensionType Control;
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.VsIdeExtensionNotSupported : VssServiceException {
    public VsIdeExtensionNotSupported(string message);
    public VsIdeExtensionNotSupported(string message, Exception innerException);
}
public class Microsoft.VisualStudio.Services.Gallery.WebApi.VSIXPackage : object {
    public static HashSet`1<string> PersistedAssetTypes;
    private static XmlReaderSettings s_readerSettings;
    private static string ExtensionPartName;
    private static string VSIXPartName;
    private static string SmallIconPartName;
    private static long DefaultMaxPackageSize;
    private static Uri ExtensionPackagePart;
    private static Uri VSIXExtensionPart;
    private static int c_MaxDegreeOfParallelism;
    private static VSIXPackage();
    private static void ValidatePackageDetailsManifest(PackageDetails packageDetails, bool skipVersionCheck);
    public static PackageDetails Parse(Stream packageStream);
    public static PackageDetails Parse(Stream packageStream, Func`3<ManifestFile, Stream, bool> assetAvailable);
    public static PackageDetails Parse(Stream packageStream, IImageResizeUtility imageResizeUtility, Func`3<ManifestFile, Stream, bool> assetAvailable);
    public static PackageDetails Parse(Stream packageStream, IImageResizeUtility imageResizeUtility, bool isMultithreaded, Func`3<ManifestFile, Stream, bool> assetAvailable);
    private static void AddSmallIconAsset(IImageResizeUtility imageResizeUtility, Stream sourceIconStream, ManifestFile sourceIconManifestFile, Func`3<ManifestFile, Stream, bool> assetAvailable, PackageDetails packageDetails);
    private static void AddVSIXManifestAsset(PackagePart packagePart, Func`3<ManifestFile, Stream, bool> assetAvailable, PackageDetails packageDetails);
    public static void ExtractParts(Stream packageStream, Action`3<Uri, string, Stream> partAvailable, FileAccess packageStreamAccess);
    public static void ExtractManifest(Stream packageStream, Action`3<Uri, string, Stream> partAvailable, FileAccess packageStreamAccess);
    public static void ExtractFileByFilename(Stream packageStream, string fileName, Action`1<Stream> fileAvailable);
}
public static class Microsoft.VisualStudio.Services.Gallery.WebApi.WellKnownTags : object {
    public static string Tag_BuiltIn;
    public static string Tag_Featured;
    public static string Tag_FromMS;
    public static string Tag_TopFree;
    public static string Tag_TopPaid;
    public static string Tag_TopRated;
}
