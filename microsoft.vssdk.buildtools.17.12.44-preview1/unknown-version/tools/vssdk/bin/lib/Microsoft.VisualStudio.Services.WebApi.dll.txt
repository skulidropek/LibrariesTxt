[AttributeUsageAttribute("64")]
public class AsyncFixer.BlockCaller : Attribute {
}
[DataContractAttribute]
public class Microsoft.Azure.DevOps.Licensing.WebApi.AccessLevel : object {
    [CompilerGeneratedAttribute]
private LicensingSource <LicensingSource>k__BackingField;
    [CompilerGeneratedAttribute]
private AccountLicenseType <AccountLicenseType>k__BackingField;
    [CompilerGeneratedAttribute]
private MsdnLicenseType <MsdnLicenseType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LicenseDisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private AccountUserStatus <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StatusMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private AssignmentSource <AssignmentSource>k__BackingField;
    [DataMemberAttribute]
public LicensingSource LicensingSource { get; public set; }
    [DataMemberAttribute]
public AccountLicenseType AccountLicenseType { get; public set; }
    [DataMemberAttribute]
public MsdnLicenseType MsdnLicenseType { get; public set; }
    [DataMemberAttribute]
public string LicenseDisplayName { get; public set; }
    [DataMemberAttribute]
public AccountUserStatus Status { get; public set; }
    [DataMemberAttribute]
public string StatusMessage { get; public set; }
    [DataMemberAttribute]
public AssignmentSource AssignmentSource { get; public set; }
    [CompilerGeneratedAttribute]
public LicensingSource get_LicensingSource();
    [CompilerGeneratedAttribute]
public void set_LicensingSource(LicensingSource value);
    [CompilerGeneratedAttribute]
public AccountLicenseType get_AccountLicenseType();
    [CompilerGeneratedAttribute]
public void set_AccountLicenseType(AccountLicenseType value);
    [CompilerGeneratedAttribute]
public MsdnLicenseType get_MsdnLicenseType();
    [CompilerGeneratedAttribute]
public void set_MsdnLicenseType(MsdnLicenseType value);
    [CompilerGeneratedAttribute]
public string get_LicenseDisplayName();
    [CompilerGeneratedAttribute]
public void set_LicenseDisplayName(string value);
    [CompilerGeneratedAttribute]
public AccountUserStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(AccountUserStatus value);
    [CompilerGeneratedAttribute]
public string get_StatusMessage();
    [CompilerGeneratedAttribute]
public void set_StatusMessage(string value);
    [CompilerGeneratedAttribute]
public AssignmentSource get_AssignmentSource();
    [CompilerGeneratedAttribute]
public void set_AssignmentSource(AssignmentSource value);
}
public class Microsoft.Azure.DevOps.Licensing.WebApi.LicensingSettings : object {
    [CompilerGeneratedAttribute]
private AccessLevel <DefaultAccessLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<AccessLevel> <AccessLevelOptions>k__BackingField;
    public AccessLevel DefaultAccessLevel { get; public set; }
    public IList`1<AccessLevel> AccessLevelOptions { get; public set; }
    [CompilerGeneratedAttribute]
public AccessLevel get_DefaultAccessLevel();
    [CompilerGeneratedAttribute]
public void set_DefaultAccessLevel(AccessLevel value);
    [CompilerGeneratedAttribute]
public IList`1<AccessLevel> get_AccessLevelOptions();
    [CompilerGeneratedAttribute]
public void set_AccessLevelOptions(IList`1<AccessLevel> value);
}
[DataContractAttribute]
[FlagsAttribute]
public enum Microsoft.Azure.DevOps.Licensing.WebApi.LicensingSettingsSelectProperty : Enum {
    public int value__;
    public static LicensingSettingsSelectProperty DefaultAccessLevel;
    public static LicensingSettingsSelectProperty AccessLevelOptions;
    public static LicensingSettingsSelectProperty All;
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[GenerateAllConstantsAttribute("")]
public static class Microsoft.TeamFoundation.GraphProfile.WebApi.GraphProfileResourceIds : object {
    public static string AreaId;
    public static string AreaName;
    public static Guid AreaIdGuid;
    private static GraphProfileResourceIds();
}
public class Microsoft.TeamFoundation.PermissionsReport.Client.CreateAndUploadReportsResult : object {
    [CompilerGeneratedAttribute]
private int <SucceededDescriptors>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <FailedDescriptors>k__BackingField;
    [CompilerGeneratedAttribute]
private int <FileId>k__BackingField;
    public int SucceededDescriptors { get; public set; }
    public IEnumerable`1<string> FailedDescriptors { get; public set; }
    public int FileId { get; public set; }
    [CompilerGeneratedAttribute]
public int get_SucceededDescriptors();
    [CompilerGeneratedAttribute]
public void set_SucceededDescriptors(int value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_FailedDescriptors();
    [CompilerGeneratedAttribute]
public void set_FailedDescriptors(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public int get_FileId();
    [CompilerGeneratedAttribute]
public void set_FileId(int value);
}
[DataContractAttribute]
public class Microsoft.TeamFoundation.PermissionsReport.Client.InheritedPermissions : object {
    [CompilerGeneratedAttribute]
private string <InheritedFrom>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PermissionValue>k__BackingField;
    [DataMemberAttribute]
public string InheritedFrom { get; public set; }
    [DataMemberAttribute]
public string PermissionValue { get; public set; }
    public InheritedPermissions(string inheritedFrom, string permissionValue);
    [CompilerGeneratedAttribute]
public string get_InheritedFrom();
    [CompilerGeneratedAttribute]
public void set_InheritedFrom(string value);
    [CompilerGeneratedAttribute]
public string get_PermissionValue();
    [CompilerGeneratedAttribute]
public void set_PermissionValue(string value);
}
[DataContractAttribute]
public class Microsoft.TeamFoundation.PermissionsReport.Client.PermissionsReport : object {
    [CompilerGeneratedAttribute]
private Guid <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ReportName>k__BackingField;
    [CompilerGeneratedAttribute]
private SubjectDescriptor <Requestor>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <RequestedTime>k__BackingField;
    [CompilerGeneratedAttribute]
private PermissionsReportStatus <ReportStatus>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <ReportStatusLastUpdatedTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Error>k__BackingField;
    [DataMemberAttribute]
public Guid Id { get; private set; }
    [DataMemberAttribute]
public string ReportName { get; private set; }
    [DataMemberAttribute]
public SubjectDescriptor Requestor { get; private set; }
    [DataMemberAttribute]
public DateTime RequestedTime { get; private set; }
    [DataMemberAttribute]
public PermissionsReportStatus ReportStatus { get; private set; }
    [DataMemberAttribute]
public DateTime ReportStatusLastUpdatedTime { get; private set; }
    [DataMemberAttribute]
public string Error { get; private set; }
    public PermissionsReport(Guid reportId, string reportName, DateTime requestedTime, SubjectDescriptor requestor, PermissionsReportStatus reportStatus, DateTime reportStatusLastUpdatedTime, string error);
    [CompilerGeneratedAttribute]
public Guid get_Id();
    [CompilerGeneratedAttribute]
private void set_Id(Guid value);
    [CompilerGeneratedAttribute]
public string get_ReportName();
    [CompilerGeneratedAttribute]
private void set_ReportName(string value);
    [CompilerGeneratedAttribute]
public SubjectDescriptor get_Requestor();
    [CompilerGeneratedAttribute]
private void set_Requestor(SubjectDescriptor value);
    [CompilerGeneratedAttribute]
public DateTime get_RequestedTime();
    [CompilerGeneratedAttribute]
private void set_RequestedTime(DateTime value);
    [CompilerGeneratedAttribute]
public PermissionsReportStatus get_ReportStatus();
    [CompilerGeneratedAttribute]
private void set_ReportStatus(PermissionsReportStatus value);
    [CompilerGeneratedAttribute]
public DateTime get_ReportStatusLastUpdatedTime();
    [CompilerGeneratedAttribute]
private void set_ReportStatusLastUpdatedTime(DateTime value);
    [CompilerGeneratedAttribute]
public string get_Error();
    [CompilerGeneratedAttribute]
private void set_Error(string value);
}
[ResourceAreaAttribute("F3E9B8F5-7C1F-46E4-819B-E8A44AB105B8")]
public class Microsoft.TeamFoundation.PermissionsReport.Client.PermissionsReportHttpClient : VssHttpClientBase {
    public PermissionsReportHttpClient(Uri baseUrl, VssCredentials credentials);
    public PermissionsReportHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public PermissionsReportHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public PermissionsReportHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public PermissionsReportHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    public virtual Task`1<ReferenceLinks> CreatePermissionsReportAsync(PermissionsReportRequest permissionsReportRequest, object userState, CancellationToken cancellationToken);
    public virtual Task`1<PermissionsReport> GetPermissionsReportAsync(Guid id, object userState, CancellationToken cancellationToken);
    public virtual Task`1<List`1<PermissionsReport>> GetPermissionsReportsAsync(object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.TeamFoundation.PermissionsReport.Client.PermissionsReportHttpClient/<DownloadAsync>d__8")]
public virtual Task`1<Stream> DownloadAsync(Guid id, object userState, CancellationToken cancellationToken);
}
[DataContractAttribute]
public class Microsoft.TeamFoundation.PermissionsReport.Client.PermissionsReportModel : object {
    [CompilerGeneratedAttribute]
private string <Descriptor>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccountName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private PermissionsReportResource <Resource>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<SimplePermissionModel> <SimplePermissionModels>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Error>k__BackingField;
    [DataMemberAttribute]
public string Descriptor { get; public set; }
    [DataMemberAttribute]
public Guid Id { get; public set; }
    [DataMemberAttribute]
public string AccountName { get; public set; }
    [DataMemberAttribute]
public string DisplayName { get; public set; }
    [DataMemberAttribute]
public PermissionsReportResource Resource { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<SimplePermissionModel> SimplePermissionModels { get; public set; }
    [DataMemberAttribute]
public string Error { get; public set; }
    public PermissionsReportModel(string identityDescriptor, Guid identityId, string displayName, string accountName, PermissionsReportResource resource, IEnumerable`1<SimplePermissionModel> simplePermissionModels, string error);
    [CompilerGeneratedAttribute]
public string get_Descriptor();
    [CompilerGeneratedAttribute]
public void set_Descriptor(string value);
    [CompilerGeneratedAttribute]
public Guid get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(Guid value);
    [CompilerGeneratedAttribute]
public string get_AccountName();
    [CompilerGeneratedAttribute]
public void set_AccountName(string value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public PermissionsReportResource get_Resource();
    [CompilerGeneratedAttribute]
public void set_Resource(PermissionsReportResource value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<SimplePermissionModel> get_SimplePermissionModels();
    [CompilerGeneratedAttribute]
public void set_SimplePermissionModels(IEnumerable`1<SimplePermissionModel> value);
    [CompilerGeneratedAttribute]
public string get_Error();
    [CompilerGeneratedAttribute]
public void set_Error(string value);
}
[DataContractAttribute]
public class Microsoft.TeamFoundation.PermissionsReport.Client.PermissionsReportRequest : object {
    [CompilerGeneratedAttribute]
private string <ReportName>k__BackingField;
    [CompilerGeneratedAttribute]
private PermissionsReportResource[] <Resources>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Descriptors>k__BackingField;
    [DataMemberAttribute]
public string ReportName { get; public set; }
    [DataMemberAttribute]
public PermissionsReportResource[] Resources { get; public set; }
    [DataMemberAttribute]
public String[] Descriptors { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ReportName();
    [CompilerGeneratedAttribute]
public void set_ReportName(string value);
    [CompilerGeneratedAttribute]
public PermissionsReportResource[] get_Resources();
    [CompilerGeneratedAttribute]
public void set_Resources(PermissionsReportResource[] value);
    [CompilerGeneratedAttribute]
public String[] get_Descriptors();
    [CompilerGeneratedAttribute]
public void set_Descriptors(String[] value);
}
[DataContractAttribute]
public class Microsoft.TeamFoundation.PermissionsReport.Client.PermissionsReportResource : object {
    [CompilerGeneratedAttribute]
private ResourceType <ResourceType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResourceId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResourceName>k__BackingField;
    [DataMemberAttribute]
[JsonConverterAttribute("Newtonsoft.Json.Converters.StringEnumConverter")]
public ResourceType ResourceType { get; public set; }
    [DataMemberAttribute]
public string ResourceId { get; public set; }
    [DataMemberAttribute]
public string ResourceName { get; public set; }
    [CompilerGeneratedAttribute]
public ResourceType get_ResourceType();
    [CompilerGeneratedAttribute]
public void set_ResourceType(ResourceType value);
    [CompilerGeneratedAttribute]
public string get_ResourceId();
    [CompilerGeneratedAttribute]
public void set_ResourceId(string value);
    [CompilerGeneratedAttribute]
public string get_ResourceName();
    [CompilerGeneratedAttribute]
public void set_ResourceName(string value);
}
[DataContractAttribute]
public enum Microsoft.TeamFoundation.PermissionsReport.Client.PermissionsReportStatus : Enum {
    public int value__;
    [EnumMemberAttribute]
public static PermissionsReportStatus Created;
    [EnumMemberAttribute]
public static PermissionsReportStatus InProgress;
    [EnumMemberAttribute]
public static PermissionsReportStatus CompletedWithErrors;
    [EnumMemberAttribute]
public static PermissionsReportStatus CompletedSuccessfully;
    [EnumMemberAttribute]
public static PermissionsReportStatus Deleted;
}
[DataContractAttribute]
public enum Microsoft.TeamFoundation.PermissionsReport.Client.ResourceType : Enum {
    public int value__;
    [ClientInternalUseOnlyAttribute("False")]
[EnumMemberAttribute]
public static ResourceType Unspecified;
    [ClientInternalUseOnlyAttribute("False")]
[EnumMemberAttribute]
public static ResourceType Collection;
    [ClientInternalUseOnlyAttribute("False")]
[EnumMemberAttribute]
public static ResourceType Project;
    [EnumMemberAttribute]
public static ResourceType Repo;
    [EnumMemberAttribute]
public static ResourceType Ref;
    [EnumMemberAttribute]
public static ResourceType ProjectGit;
    [EnumMemberAttribute]
public static ResourceType Release;
    [EnumMemberAttribute]
public static ResourceType Tfvc;
}
[DataContractAttribute]
public class Microsoft.TeamFoundation.PermissionsReport.Client.SimplePermissionModel : object {
    [CompilerGeneratedAttribute]
private string <PermissionName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EffectivePermission>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsPermissionInherited>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<InheritedPermissions> <InheritedPermissions>k__BackingField;
    [DataMemberAttribute]
public string PermissionName { get; public set; }
    [DataMemberAttribute]
public string EffectivePermission { get; public set; }
    [DataMemberAttribute]
public bool IsPermissionInherited { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<InheritedPermissions> InheritedPermissions { get; public set; }
    public SimplePermissionModel(string permissionName, string effectivePermission, bool isPermissionInherited, IEnumerable`1<InheritedPermissions> inheritedPermissions);
    [CompilerGeneratedAttribute]
public string get_PermissionName();
    [CompilerGeneratedAttribute]
public void set_PermissionName(string value);
    [CompilerGeneratedAttribute]
public string get_EffectivePermission();
    [CompilerGeneratedAttribute]
public void set_EffectivePermission(string value);
    [CompilerGeneratedAttribute]
public bool get_IsPermissionInherited();
    [CompilerGeneratedAttribute]
public void set_IsPermissionInherited(bool value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<InheritedPermissions> get_InheritedPermissions();
    [CompilerGeneratedAttribute]
public void set_InheritedPermissions(IEnumerable`1<InheritedPermissions> value);
}
public static class Microsoft.TeamFoundation.PermissionsReport.PermissionsReportResourceIds : object {
    public static string AreaName;
    public static string AreaId;
    public static Guid ResourceAreaId;
    public static Guid PermissionsReportResourceLocationId;
    public static Guid PermissionsReportDownloadResourceLocationId;
    public static string PermissionsReportResourceName;
    public static string PermissionsReportDownloadResourceName;
    private static PermissionsReportResourceIds();
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Aad.AadApplication : AadObject {
    [CompilerGeneratedAttribute]
private Guid <AppId>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<AadPasswordCredential> <PasswordCredentials>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <ReplyUrls>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HomePage>k__BackingField;
    [DataMemberAttribute]
public Guid AppId { get; }
    [DataMemberAttribute]
public IList`1<AadPasswordCredential> PasswordCredentials { get; }
    [DataMemberAttribute]
public IList`1<string> ReplyUrls { get; }
    [DataMemberAttribute]
public string HomePage { get; }
    private AadApplication(Guid objectId, string displayName, Guid appId, IList`1<AadPasswordCredential> passwordCredentials, IList`1<string> replyUrls, string homePage);
    [CompilerGeneratedAttribute]
public Guid get_AppId();
    [CompilerGeneratedAttribute]
public IList`1<AadPasswordCredential> get_PasswordCredentials();
    [CompilerGeneratedAttribute]
public IList`1<string> get_ReplyUrls();
    [CompilerGeneratedAttribute]
public string get_HomePage();
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Aad.AadFederatedIdentityCredential : object {
    [CompilerGeneratedAttribute]
private string <Subject>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <Audiences>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <Issuer>k__BackingField;
    [DataMemberAttribute]
public string Subject { get; public set; }
    [DataMemberAttribute]
public List`1<string> Audiences { get; public set; }
    [DataMemberAttribute]
public Uri Issuer { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Subject();
    [CompilerGeneratedAttribute]
public void set_Subject(string value);
    [CompilerGeneratedAttribute]
public List`1<string> get_Audiences();
    [CompilerGeneratedAttribute]
public void set_Audiences(List`1<string> value);
    [CompilerGeneratedAttribute]
public Uri get_Issuer();
    [CompilerGeneratedAttribute]
public void set_Issuer(Uri value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Aad.AadGroup : AadObject {
    [DataMemberAttribute]
private string description;
    [DataMemberAttribute]
private string mailNickname;
    [DataMemberAttribute]
private string mail;
    [DataMemberAttribute]
private string onPremisesSecurityIdentifier;
    public string Description { get; public set; }
    public string MailNickname { get; public set; }
    public string Mail { get; public set; }
    public string OnPremisesSecurityIdentifier { get; }
    private AadGroup(Guid objectId, string displayName, string description, string mailNickname, string mail, string onPremisesSecurityIdentifier);
    public string get_Description();
    public void set_Description(string value);
    public string get_MailNickname();
    public void set_MailNickname(string value);
    public string get_Mail();
    public void set_Mail(string value);
    public string get_OnPremisesSecurityIdentifier();
}
[DataContractAttribute]
public abstract class Microsoft.VisualStudio.Services.Aad.AadObject : object {
    [DataMemberAttribute]
private Guid objectId;
    [DataMemberAttribute]
private string displayName;
    public Guid ObjectId { get; public set; }
    public string DisplayName { get; public set; }
    public AadObject(Guid objectId, string displayName);
    public Guid get_ObjectId();
    public void set_ObjectId(Guid value);
    public string get_DisplayName();
    public void set_DisplayName(string value);
    public virtual bool Equals(object obj);
    private bool Equals(AadObject other);
    public virtual int GetHashCode();
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Aad.AadPasswordCredential : object {
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <StartDate>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <EndDate>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Guid> <KeyId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [DataMemberAttribute]
public Nullable`1<DateTimeOffset> StartDate { get; public set; }
    [DataMemberAttribute]
public Nullable`1<DateTimeOffset> EndDate { get; public set; }
    [DataMemberAttribute]
public Nullable`1<Guid> KeyId { get; public set; }
    [DataMemberAttribute]
public string Value { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_StartDate();
    [CompilerGeneratedAttribute]
public void set_StartDate(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_EndDate();
    [CompilerGeneratedAttribute]
public void set_EndDate(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public Nullable`1<Guid> get_KeyId();
    [CompilerGeneratedAttribute]
public void set_KeyId(Nullable`1<Guid> value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Aad.AadServicePrincipal : AadObject {
    [CompilerGeneratedAttribute]
private Guid <AppId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AccountEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServicePrincipalType>k__BackingField;
    [DataMemberAttribute]
public Guid AppId { get; }
    [DataMemberAttribute]
public bool AccountEnabled { get; }
    [DataMemberAttribute]
public string ServicePrincipalType { get; }
    private AadServicePrincipal(Guid objectId, string displayName, Guid appId, bool accountEnabled, string servicePrincipalType);
    [CompilerGeneratedAttribute]
public Guid get_AppId();
    [CompilerGeneratedAttribute]
public bool get_AccountEnabled();
    [CompilerGeneratedAttribute]
public string get_ServicePrincipalType();
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Aad.AadUser : AadObject {
    [DataMemberAttribute]
private bool accountEnabled;
    [DataMemberAttribute]
private string mail;
    [DataMemberAttribute]
private IEnumerable`1<string> otherMails;
    [DataMemberAttribute]
private string mailNickname;
    [DataMemberAttribute]
private string userPrincipalName;
    [DataMemberAttribute]
private string signInAddress;
    [DataMemberAttribute]
private bool hasThumbnailPhoto;
    [DataMemberAttribute]
private string jobTitle;
    [DataMemberAttribute]
private string department;
    [DataMemberAttribute]
private string physicalDeliveryOfficeName;
    [DataMemberAttribute]
private AadUser manager;
    [DataMemberAttribute]
private IEnumerable`1<AadUser> directReports;
    [DataMemberAttribute]
private string userType;
    [DataMemberAttribute]
private string userState;
    [DataMemberAttribute]
private string surname;
    [DataMemberAttribute]
private string onPremisesSecurityIdentifier;
    [DataMemberAttribute]
private string immutableId;
    [DataMemberAttribute]
private string telephoneNumber;
    [DataMemberAttribute]
private string country;
    [DataMemberAttribute]
private string usageLocation;
    [DataMemberAttribute]
private string originTenantId;
    public bool AccountEnabled { get; public set; }
    public string Mail { get; public set; }
    public IEnumerable`1<string> OtherMails { get; public set; }
    public string MailNickname { get; }
    public string UserPrincipalName { get; public set; }
    public string SignInAddress { get; }
    public bool HasThumbnailPhoto { get; }
    public string JobTitle { get; }
    public string Department { get; }
    public string PhysicalDeliveryOfficeName { get; }
    public AadUser Manager { get; }
    public IEnumerable`1<AadUser> DirectReports { get; }
    public string UserType { get; }
    public string UserState { get; }
    public string Surname { get; }
    public string OnPremisesSecurityIdentifier { get; }
    public string ImmutableId { get; }
    public string TelephoneNumber { get; public set; }
    public string Country { get; public set; }
    public string UsageLocation { get; public set; }
    public string OriginTenantId { get; public set; }
    private AadUser(Guid objectId, string displayName, bool accountEnabled, string mail, IEnumerable`1<string> otherMails, string userPrincipalName, string signInAddress, bool hasThumbnailPhoto, string jobTitle, string department, string physicalDeliveryOfficeName, string mailNickname, AadUser manager, IEnumerable`1<AadUser> directReports, string userType, string userState, string surname, string onPremisesSecurityIdentifier, string immutableId, string telephoneNumber, string country, string usageLocation, string originTenantId);
    public bool get_AccountEnabled();
    public void set_AccountEnabled(bool value);
    public string get_Mail();
    public void set_Mail(string value);
    public IEnumerable`1<string> get_OtherMails();
    public void set_OtherMails(IEnumerable`1<string> value);
    public string get_MailNickname();
    public string get_UserPrincipalName();
    public void set_UserPrincipalName(string value);
    public string get_SignInAddress();
    public bool get_HasThumbnailPhoto();
    public string get_JobTitle();
    public string get_Department();
    public string get_PhysicalDeliveryOfficeName();
    public AadUser get_Manager();
    public IEnumerable`1<AadUser> get_DirectReports();
    public string get_UserType();
    public string get_UserState();
    public string get_Surname();
    public string get_OnPremisesSecurityIdentifier();
    public string get_ImmutableId();
    public string get_TelephoneNumber();
    public void set_TelephoneNumber(string value);
    public string get_Country();
    public void set_Country(string value);
    public string get_UsageLocation();
    public void set_UsageLocation(string value);
    public string get_OriginTenantId();
    public void set_OriginTenantId(string value);
}
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.AadMemberAccessStatus.AadMemberAccessState : Enum {
    public int value__;
    [EnumMemberAttribute]
public static AadMemberAccessState Indeterminate;
    [EnumMemberAttribute]
public static AadMemberAccessState Deleted;
    [EnumMemberAttribute]
public static AadMemberAccessState Disabled;
    [EnumMemberAttribute]
public static AadMemberAccessState Invalid;
    [EnumMemberAttribute]
public static AadMemberAccessState Valid;
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.AadMemberAccessStatus.AadMemberStatus : object {
    [CompilerGeneratedAttribute]
private AadMemberAccessState <MemberState>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <StatusValidUntil>k__BackingField;
    [DataMemberAttribute]
public AadMemberAccessState MemberState { get; public set; }
    [DataMemberAttribute]
public DateTimeOffset StatusValidUntil { get; public set; }
    [CompilerGeneratedAttribute]
public AadMemberAccessState get_MemberState();
    [CompilerGeneratedAttribute]
public void set_MemberState(AadMemberAccessState value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_StatusValidUntil();
    [CompilerGeneratedAttribute]
public void set_StatusValidUntil(DateTimeOffset value);
}
[ExceptionMappingAttribute("0.0", "3.0", "AADGuestUserCannotBeAnAccountOwnerException", "Microsoft.VisualStudio.Services.Account.AADGuestUserCannotBeAnAccountOwnerException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Account.AADGuestUserCannotBeAnAccountOwnerException : AccountException {
    public AADGuestUserCannotBeAnAccountOwnerException(string message);
    public AADGuestUserCannotBeAnAccountOwnerException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "AadTenantNotFoundException", "Microsoft.VisualStudio.Services.Account.AadTenantNotFoundException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Account.AadTenantNotFoundException : AccountException {
    public AadTenantNotFoundException(string message);
    public AadTenantNotFoundException(string message, Exception innerException);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Account.Account : object {
    [CompilerGeneratedAttribute]
private Guid <AccountId>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <NamespaceId>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <AccountUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccountName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OrganizationName>k__BackingField;
    [CompilerGeneratedAttribute]
private AccountType <AccountType>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <AccountOwner>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <CreatedBy>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <CreatedDate>k__BackingField;
    [CompilerGeneratedAttribute]
private AccountStatus <AccountStatus>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StatusReason>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <LastUpdatedBy>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <Revision>k__BackingField;
    [CompilerGeneratedAttribute]
private PropertiesCollection <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <LastUpdatedDate>k__BackingField;
    [DataMemberAttribute]
public Guid AccountId { get; internal set; }
    [DataMemberAttribute]
public Guid NamespaceId { get; public set; }
    [DataMemberAttribute]
public Uri AccountUri { get; public set; }
    [DataMemberAttribute]
public string AccountName { get; public set; }
    [DataMemberAttribute]
public string OrganizationName { get; public set; }
    [DataMemberAttribute]
public AccountType AccountType { get; public set; }
    [DataMemberAttribute]
public Guid AccountOwner { get; public set; }
    [DataMemberAttribute]
public Guid CreatedBy { get; public set; }
    [DataMemberAttribute]
public DateTime CreatedDate { get; internal set; }
    [DataMemberAttribute]
public AccountStatus AccountStatus { get; public set; }
    [DataMemberAttribute]
public string StatusReason { get; internal set; }
    [DataMemberAttribute]
public Guid LastUpdatedBy { get; internal set; }
    [IgnoreDataMemberAttribute]
public Byte[] Revision { get; internal set; }
    [DataMemberAttribute]
public PropertiesCollection Properties { get; private set; }
    [DataMemberAttribute]
public bool HasMoved { get; }
    [DataMemberAttribute]
public Guid NewCollectionId { get; }
    [DataMemberAttribute]
public DateTime LastUpdatedDate { get; internal set; }
    public Account(Guid accountId);
    [CompilerGeneratedAttribute]
public Guid get_AccountId();
    [CompilerGeneratedAttribute]
internal void set_AccountId(Guid value);
    [CompilerGeneratedAttribute]
public Guid get_NamespaceId();
    [CompilerGeneratedAttribute]
public void set_NamespaceId(Guid value);
    [CompilerGeneratedAttribute]
public Uri get_AccountUri();
    [CompilerGeneratedAttribute]
public void set_AccountUri(Uri value);
    [CompilerGeneratedAttribute]
public string get_AccountName();
    [CompilerGeneratedAttribute]
public void set_AccountName(string value);
    [CompilerGeneratedAttribute]
public string get_OrganizationName();
    [CompilerGeneratedAttribute]
public void set_OrganizationName(string value);
    [CompilerGeneratedAttribute]
public AccountType get_AccountType();
    [CompilerGeneratedAttribute]
public void set_AccountType(AccountType value);
    [CompilerGeneratedAttribute]
public Guid get_AccountOwner();
    [CompilerGeneratedAttribute]
public void set_AccountOwner(Guid value);
    [CompilerGeneratedAttribute]
public Guid get_CreatedBy();
    [CompilerGeneratedAttribute]
public void set_CreatedBy(Guid value);
    [CompilerGeneratedAttribute]
public DateTime get_CreatedDate();
    [CompilerGeneratedAttribute]
internal void set_CreatedDate(DateTime value);
    [CompilerGeneratedAttribute]
public AccountStatus get_AccountStatus();
    [CompilerGeneratedAttribute]
public void set_AccountStatus(AccountStatus value);
    [CompilerGeneratedAttribute]
public string get_StatusReason();
    [CompilerGeneratedAttribute]
internal void set_StatusReason(string value);
    [CompilerGeneratedAttribute]
public Guid get_LastUpdatedBy();
    [CompilerGeneratedAttribute]
internal void set_LastUpdatedBy(Guid value);
    [CompilerGeneratedAttribute]
public Byte[] get_Revision();
    [CompilerGeneratedAttribute]
internal void set_Revision(Byte[] value);
    [CompilerGeneratedAttribute]
public PropertiesCollection get_Properties();
    [CompilerGeneratedAttribute]
private void set_Properties(PropertiesCollection value);
    public bool get_HasMoved();
    public Guid get_NewCollectionId();
    [CompilerGeneratedAttribute]
public DateTime get_LastUpdatedDate();
    [CompilerGeneratedAttribute]
internal void set_LastUpdatedDate(DateTime value);
    public object GetProperty(string name);
    public bool TryGetProperty(string name, Object& value);
    public Account Clone();
    public virtual string ToString();
}
[ExceptionMappingAttribute("0.0", "3.0", "AccountAlreadyInTrialException", "Microsoft.VisualStudio.Services.Account.AccountAlreadyInTrialException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Account.AccountAlreadyInTrialException : AccountException {
    public AccountAlreadyInTrialException(string message);
    public AccountAlreadyInTrialException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "AccountAlreadyLinkedException", "Microsoft.VisualStudio.Services.Account.AccountAlreadyLinkedException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Account.AccountAlreadyLinkedException : AccountException {
    public AccountAlreadyLinkedException(string message);
    public AccountAlreadyLinkedException(string message, Exception innerException);
}
public class Microsoft.VisualStudio.Services.Account.AccountEqualityComparer : object {
    [CompilerGeneratedAttribute]
private static AccountEqualityComparer <Instance>k__BackingField;
    public static AccountEqualityComparer Instance { get; }
    private static AccountEqualityComparer();
    private sealed virtual override bool System.Collections.Generic.IEqualityComparer<Microsoft.VisualStudio.Services.Account.Account>.Equals(Account x, Account y);
    private sealed virtual override int System.Collections.Generic.IEqualityComparer<Microsoft.VisualStudio.Services.Account.Account>.GetHashCode(Account obj);
    [CompilerGeneratedAttribute]
public static AccountEqualityComparer get_Instance();
}
[ExceptionMappingAttribute("0.0", "3.0", "AccountException", "Microsoft.VisualStudio.Services.Account.AccountException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Account.AccountException : VssServiceException {
    public AccountException(string message);
    public AccountException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "AccountExistsException", "Microsoft.VisualStudio.Services.Account.AccountExistsException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Account.AccountExistsException : AccountException {
    public AccountExistsException(string accountName);
    public AccountExistsException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "AccountFeatureNotAvailableException", "Microsoft.VisualStudio.Services.Account.AccountFeatureNotAvailableException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Account.AccountFeatureNotAvailableException : AccountException {
    public AccountFeatureNotAvailableException(string message);
    public AccountFeatureNotAvailableException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "AccountHostMappingNotFoundException", "Microsoft.VisualStudio.Services.Account.AccountHostMappingNotFoundException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Account.AccountHostMappingNotFoundException : AccountException {
    public AccountHostMappingNotFoundException(Guid hostId);
    public AccountHostMappingNotFoundException(string hostId);
    public AccountHostMappingNotFoundException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "AccountIsNotActiveException", "Microsoft.VisualStudio.Services.Account.AccountIsNotActiveException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Account.AccountIsNotActiveException : AccountException {
    public AccountIsNotActiveException(string message);
    public AccountIsNotActiveException(string message, Exception innerException);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Account.AccountLicenseInfo : object {
    [CompilerGeneratedAttribute]
private string <LicenseName>k__BackingField;
    [CompilerGeneratedAttribute]
private int <InUseCount>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ConsumedCount>k__BackingField;
    [DataMemberAttribute]
public string LicenseName { get; public set; }
    [DataMemberAttribute]
public int InUseCount { get; public set; }
    [DataMemberAttribute]
public int ConsumedCount { get; public set; }
    public AccountLicenseInfo(string licenseName, int provisioned, int consumed);
    [CompilerGeneratedAttribute]
public string get_LicenseName();
    [CompilerGeneratedAttribute]
public void set_LicenseName(string value);
    [CompilerGeneratedAttribute]
public int get_InUseCount();
    [CompilerGeneratedAttribute]
public void set_InUseCount(int value);
    [CompilerGeneratedAttribute]
public int get_ConsumedCount();
    [CompilerGeneratedAttribute]
public void set_ConsumedCount(int value);
    public AccountLicenseInfo Clone();
    public virtual string ToString();
}
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.Account.AccountLicenseSource : Enum {
    public int value__;
    [EnumMemberAttribute]
public static AccountLicenseSource None;
    [EnumMemberAttribute]
public static AccountLicenseSource VsExpress;
    [EnumMemberAttribute]
public static AccountLicenseSource VsPro;
    [EnumMemberAttribute]
public static AccountLicenseSource VsTestPro;
    [EnumMemberAttribute]
public static AccountLicenseSource VsPremium;
    [EnumMemberAttribute]
public static AccountLicenseSource VsUltimate;
    [EnumMemberAttribute]
public static AccountLicenseSource MSDN;
    [EnumMemberAttribute]
public static AccountLicenseSource MsdnPro;
    [EnumMemberAttribute]
public static AccountLicenseSource MsdnTestPro;
    [EnumMemberAttribute]
public static AccountLicenseSource MsdnPremium;
    [EnumMemberAttribute]
public static AccountLicenseSource MsdnUltimate;
    [EnumMemberAttribute]
public static AccountLicenseSource MsdnPlatforms;
    [EnumMemberAttribute]
public static AccountLicenseSource VSOStandard;
    [EnumMemberAttribute]
public static AccountLicenseSource VSOAdvanced;
    [EnumMemberAttribute]
public static AccountLicenseSource VSOProStandard;
    [EnumMemberAttribute]
public static AccountLicenseSource Win8;
    [EnumMemberAttribute]
public static AccountLicenseSource Desktop;
    [EnumMemberAttribute]
public static AccountLicenseSource Phone;
    [EnumMemberAttribute]
public static AccountLicenseSource VsEarlyAdopter;
}
[ExceptionMappingAttribute("0.0", "3.0", "AccountMarkedForDeletionException", "Microsoft.VisualStudio.Services.Account.CollectionMarkedForDeletionException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Account.AccountMarkedForDeletionException : AccountException {
    public AccountMarkedForDeletionException(string accountId);
    public AccountMarkedForDeletionException(string message, Exception innerException);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Account.AccountNameAvailability : object {
    [CompilerGeneratedAttribute]
private bool <IsValidName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StatusReason>k__BackingField;
    [DataMemberAttribute]
public bool IsValidName { get; }
    [DataMemberAttribute]
public string StatusReason { get; }
    public AccountNameAvailability(bool isValidName, string statusReason);
    [CompilerGeneratedAttribute]
public bool get_IsValidName();
    [CompilerGeneratedAttribute]
public string get_StatusReason();
}
[ExceptionMappingAttribute("0.0", "3.0", "AccountNameReservedException", "Microsoft.VisualStudio.Services.Account.AccountNameReservedException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Account.AccountNameReservedException : AccountException {
    public AccountNameReservedException(string accountName);
    public AccountNameReservedException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "AccountNameTemporarilyReservedException", "Microsoft.VisualStudio.Services.Account.AccountNameTemporarilyReservedException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Account.AccountNameTemporarilyReservedException : AccountExistsException {
    public AccountNameTemporarilyReservedException(string accountName, TimeSpan duration);
    public AccountNameTemporarilyReservedException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "AccountNotFoundException", "Microsoft.VisualStudio.Services.Account.AccountNotFoundException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Account.AccountNotFoundException : AccountException {
    public AccountNotFoundException(Guid accountId);
    public AccountNotFoundException(string accountId);
    public AccountNotFoundException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "AccountNotLinkedException", "Microsoft.VisualStudio.Services.Account.AccountNotLinkedException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Account.AccountNotLinkedException : AccountException {
    public AccountNotLinkedException(string message);
    public AccountNotLinkedException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "AccountNotMarkedForDeletionException", "Microsoft.VisualStudio.Services.Account.CollectionNotMarkedForDeletionException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Account.AccountNotMarkedForDeletionException : AccountException {
    public AccountNotMarkedForDeletionException(string accountId);
    public AccountNotMarkedForDeletionException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "AccountPropertyException", "Microsoft.VisualStudio.Services.Account.AccountPropertyException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Account.AccountPropertyException : AccountException {
    public AccountPropertyException(string message);
    public AccountPropertyException(string message, Exception innerException);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Account.AccountRegion : object {
    [CompilerGeneratedAttribute]
private string <LocationName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDefault>k__BackingField;
    [DataMemberAttribute]
public string LocationName { get; public set; }
    [DataMemberAttribute]
public string DisplayName { get; public set; }
    [DataMemberAttribute]
public bool IsDefault { get; public set; }
    [CompilerGeneratedAttribute]
public string get_LocationName();
    [CompilerGeneratedAttribute]
public void set_LocationName(string value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public bool get_IsDefault();
    [CompilerGeneratedAttribute]
public void set_IsDefault(bool value);
}
public static class Microsoft.VisualStudio.Services.Account.AccountResourceIds : object {
    public static string RegionArea;
    public static string AreaId;
    public static string AccountServiceArea;
    public static Guid Account;
    public static string AccountResource;
    public static Guid AccountUserId;
    public static string AccountUserResource;
    public static string HostMappingsResource;
    public static Guid HostsLocationid;
    public static Guid AccountTenantId;
    public static string AccountTenantResource;
    public static Guid AccountRegionLocationId;
    public static string AccountRegionResource;
    public static Guid AccountNameAvailabilityid;
    public static string AccountNameAvailabilityResource;
    public static Guid AccountSettingsid;
    public static string AccountSettingsResource;
    private static AccountResourceIds();
}
[ExceptionMappingAttribute("0.0", "3.0", "AccountServiceLockDownModeException", "Microsoft.VisualStudio.Services.Account.AccountServiceLockDownModeException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Account.AccountServiceLockDownModeException : AccountException {
    public AccountServiceLockDownModeException(string message);
    public AccountServiceLockDownModeException(string message, Exception innerException);
}
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.Account.AccountServiceRights : Enum {
    public int value__;
    [EnumMemberAttribute]
public static AccountServiceRights StandardLicense;
    [EnumMemberAttribute]
public static AccountServiceRights AdvancedLicense;
    [EnumMemberAttribute]
public static AccountServiceRights ProfessionalLicense;
    [EnumMemberAttribute]
public static AccountServiceRights None;
}
[ExceptionMappingAttribute("0.0", "3.0", "AccountServiceUnavailableException", "Microsoft.VisualStudio.Services.Account.AccountServiceUnavailableException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Account.AccountServiceUnavailableException : AccountException {
    public AccountServiceUnavailableException(string message);
    public AccountServiceUnavailableException(string message, Exception innerException);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.VisualStudio.Services.Account.AccountSettingsConstants : object {
    public static string IsAccountServiceLocked;
    public static string MaximumNumberOfAccountsPerUser;
}
[ExceptionMappingAttribute("0.0", "3.0", "AccountStateNotValidException", "Microsoft.VisualStudio.Services.Account.AccountStateNotValidException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Account.AccountStateNotValidException : AccountException {
    public AccountStateNotValidException(string message);
    public AccountStateNotValidException(string message, Exception innerException);
}
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.Account.AccountStatus : Enum {
    public int value__;
    [EnumMemberAttribute]
public static AccountStatus None;
    [EnumMemberAttribute]
public static AccountStatus Enabled;
    [EnumMemberAttribute]
public static AccountStatus Disabled;
    [EnumMemberAttribute]
public static AccountStatus Deleted;
    [EnumMemberAttribute]
public static AccountStatus Moved;
}
[ExceptionMappingAttribute("0.0", "3.0", "AccountTrialException", "Microsoft.VisualStudio.Services.Account.AccountTrialException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Account.AccountTrialException : AccountException {
    public AccountTrialException(string message);
    public AccountTrialException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "AccountTrialExpiredException", "Microsoft.VisualStudio.Services.Account.AccountTrialExpiredException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Account.AccountTrialExpiredException : AccountException {
    public AccountTrialExpiredException(string message);
    public AccountTrialExpiredException(string message, Exception innerException);
}
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.Account.AccountType : Enum {
    public int value__;
    [EnumMemberAttribute]
public static AccountType Personal;
    [EnumMemberAttribute]
public static AccountType Organization;
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Account.AccountUser : object {
    [CompilerGeneratedAttribute]
private Guid <AccountId>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <UserId>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <CreationDate>k__BackingField;
    [CompilerGeneratedAttribute]
private AccountUserStatus <UserStatus>k__BackingField;
    [CompilerGeneratedAttribute]
private AccountLicenseSource <LicenseSource>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <LastUpdated>k__BackingField;
    [CompilerGeneratedAttribute]
private AccountServiceRights <ServiceRights>k__BackingField;
    [DataMemberAttribute]
public Guid AccountId { get; public set; }
    [DataMemberAttribute]
public Guid UserId { get; public set; }
    [DataMemberAttribute]
public DateTimeOffset CreationDate { get; public set; }
    [DataMemberAttribute]
public AccountUserStatus UserStatus { get; public set; }
    [DataMemberAttribute]
public AccountLicenseSource LicenseSource { get; public set; }
    [DataMemberAttribute]
public DateTimeOffset LastUpdated { get; public set; }
    [DataMemberAttribute]
public AccountServiceRights ServiceRights { get; public set; }
    public AccountUser(Guid accountId, Guid userId);
    [CompilerGeneratedAttribute]
public Guid get_AccountId();
    [CompilerGeneratedAttribute]
public void set_AccountId(Guid value);
    [CompilerGeneratedAttribute]
public Guid get_UserId();
    [CompilerGeneratedAttribute]
public void set_UserId(Guid value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_CreationDate();
    [CompilerGeneratedAttribute]
public void set_CreationDate(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public AccountUserStatus get_UserStatus();
    [CompilerGeneratedAttribute]
public void set_UserStatus(AccountUserStatus value);
    [CompilerGeneratedAttribute]
public AccountLicenseSource get_LicenseSource();
    [CompilerGeneratedAttribute]
public void set_LicenseSource(AccountLicenseSource value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_LastUpdated();
    [CompilerGeneratedAttribute]
public void set_LastUpdated(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public AccountServiceRights get_ServiceRights();
    [CompilerGeneratedAttribute]
public void set_ServiceRights(AccountServiceRights value);
    public AccountUser Clone();
    public virtual string ToString();
}
[ExceptionMappingAttribute("0.0", "3.0", "AccountUserNotFoundException", "Microsoft.VisualStudio.Services.Account.AccountUserNotFoundException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Account.AccountUserNotFoundException : AccountException {
    public AccountUserNotFoundException(string userId, string accountId);
    public AccountUserNotFoundException(string message, Exception innerException);
}
[DataContractAttribute]
[ClientIncludeModelAttribute]
public enum Microsoft.VisualStudio.Services.Account.AccountUserStatus : Enum {
    public int value__;
    [EnumMemberAttribute]
public static AccountUserStatus None;
    [EnumMemberAttribute]
public static AccountUserStatus Active;
    [EnumMemberAttribute]
public static AccountUserStatus Disabled;
    [EnumMemberAttribute]
public static AccountUserStatus Deleted;
    [EnumMemberAttribute]
public static AccountUserStatus Pending;
    [EnumMemberAttribute]
public static AccountUserStatus Expired;
    [EnumMemberAttribute]
public static AccountUserStatus PendingDisabled;
}
[ExceptionMappingAttribute("0.0", "3.0", "BadServiceSettingNameException", "Microsoft.VisualStudio.Services.Account.BadServiceSettingNameException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Account.BadServiceSettingNameException : AccountException {
    public BadServiceSettingNameException(string message);
    public BadServiceSettingNameException(string message, Exception innerException);
}
[DataContractAttribute]
internal class Microsoft.VisualStudio.Services.Account.Client.AccountCreateInfoInternal : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Organization>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <Creator>k__BackingField;
    [CompilerGeneratedAttribute]
private AccountPreferencesInternal <Preferences>k__BackingField;
    [CompilerGeneratedAttribute]
private PropertiesCollection <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<KeyValuePair`2<Guid, Guid>> <ServiceDefinitions>k__BackingField;
    [DataMemberAttribute]
public string Name { get; private set; }
    [DataMemberAttribute]
public string Organization { get; private set; }
    [DataMemberAttribute]
public Guid Creator { get; private set; }
    [DataMemberAttribute]
public AccountPreferencesInternal Preferences { get; private set; }
    [DataMemberAttribute]
public PropertiesCollection Properties { get; private set; }
    [DataMemberAttribute]
public List`1<KeyValuePair`2<Guid, Guid>> ServiceDefinitions { get; public set; }
    internal AccountCreateInfoInternal(string name, string organization, Guid creatorId, CultureInfo language, CultureInfo culture, TimeZoneInfo timeZone, IDictionary`2<string, object> properties);
    internal AccountCreateInfoInternal(string name, string organization, Guid creatorId, List`1<KeyValuePair`2<Guid, Guid>> serviceDefinitions, CultureInfo language, CultureInfo culture, TimeZoneInfo timeZone, IDictionary`2<string, object> properties);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Organization();
    [CompilerGeneratedAttribute]
private void set_Organization(string value);
    [CompilerGeneratedAttribute]
public Guid get_Creator();
    [CompilerGeneratedAttribute]
private void set_Creator(Guid value);
    [CompilerGeneratedAttribute]
public AccountPreferencesInternal get_Preferences();
    [CompilerGeneratedAttribute]
private void set_Preferences(AccountPreferencesInternal value);
    [CompilerGeneratedAttribute]
public PropertiesCollection get_Properties();
    [CompilerGeneratedAttribute]
private void set_Properties(PropertiesCollection value);
    [CompilerGeneratedAttribute]
public List`1<KeyValuePair`2<Guid, Guid>> get_ServiceDefinitions();
    [CompilerGeneratedAttribute]
public void set_ServiceDefinitions(List`1<KeyValuePair`2<Guid, Guid>> value);
}
[ResourceAreaAttribute("0D55247A-1C47-4462-9B1F-5E2125590EE6")]
public class Microsoft.VisualStudio.Services.Account.Client.AccountHttpClient : AccountVersion1HttpClient {
    private static double c_apiVersion;
    public AccountHttpClient(Uri baseUrl, VssCredentials credentials);
    public AccountHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public AccountHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public AccountHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public AccountHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Account.Client.AccountHttpClient/<GetAccountsByOwnerAsync>d__5")]
public Task`1<List`1<Account>> GetAccountsByOwnerAsync(Guid ownerId, IEnumerable`1<string> propertyNameFilter, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Account.Client.AccountHttpClient/<GetAccountsByMemberAsync>d__6")]
public Task`1<List`1<Account>> GetAccountsByMemberAsync(Guid memberId, IEnumerable`1<string> propertyNameFilter, object userState, CancellationToken cancellationToken);
}
[ResourceAreaAttribute("0D55247A-1C47-4462-9B1F-5E2125590EE6")]
public class Microsoft.VisualStudio.Services.Account.Client.AccountVersion1HttpClient : VssHttpClientBase {
    private static Dictionary`2<string, Type> s_translatedExceptions;
    protected ApiResourceVersion CurrentApiVersion;
    private static double c_apiVersion;
    protected IDictionary`2<string, Type> TranslatedExceptions { get; }
    private static AccountVersion1HttpClient();
    internal AccountVersion1HttpClient(Uri baseUrl, VssCredentials credentials);
    internal AccountVersion1HttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    internal AccountVersion1HttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    internal AccountVersion1HttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    internal AccountVersion1HttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Account.Client.AccountVersion1HttpClient/<CreateAccountAsync>d__6")]
[ObsoleteAttribute("Please use appropriate method on Microsoft.VisualStudio.Services.Organization.Client.OrganizationHttpClient instead. See https://dev.azure.com/mseng/AzureDevOps/_wiki/wikis/AzureDevOps.wiki/1931/SDK-M113?anchor=accountservice-obsolescence for more details.")]
public Task`1<Account> CreateAccountAsync(string name, string organization, Guid creatorId, CultureInfo language, CultureInfo culture, TimeZoneInfo timeZone, IDictionary`2<string, object> properties, bool usePrecreated, List`1<KeyValuePair`2<Guid, Guid>> serviceDefinitions, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Account.Client.AccountVersion1HttpClient/<GetAccountsAsync>d__7")]
[ObsoleteAttribute("Please use appropriate method on Microsoft.VisualStudio.Services.UserMapping.Client.UserMappingHttpClient instead. See https://dev.azure.com/mseng/AzureDevOps/_wiki/wikis/AzureDevOps.wiki/1930/SDK-M112?anchor=accountservice-obsolescence for more details.")]
public Task`1<List`1<Account>> GetAccountsAsync(bool includeDisabledAccounts, IEnumerable`1<string> propertyNameFilter, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Account.Client.AccountVersion1HttpClient/<GetAccountsByCreatorAsync>d__8")]
[ObsoleteAttribute("Please use appropriate method on Microsoft.VisualStudio.Services.Organization.Client.OrganizationHttpClient instead. See https://dev.azure.com/mseng/AzureDevOps/_wiki/wikis/AzureDevOps.wiki/1931/SDK-M113?anchor=accountservice-obsolescence for more details.")]
internal Task`1<List`1<Account>> GetAccountsByCreatorAsync(Guid creatorId, bool includeDisabledAccounts, IEnumerable`1<string> propertyNameFilter, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Account.Client.AccountVersion1HttpClient/<GetAccountsByOwnerAsync>d__9")]
public Task`1<List`1<Account>> GetAccountsByOwnerAsync(Guid ownerId, bool includeDisabledAccounts, IEnumerable`1<string> propertyNameFilter, object userState, CancellationToken cancellationToken);
    [EditorBrowsableAttribute("1")]
internal Task`1<List`1<Account>> GetAccountsByMemberAsync(Guid memberId, bool includeOwner, bool includeDisabledAccounts, IEnumerable`1<string> propertyNameFilter, object userState);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Account.Client.AccountVersion1HttpClient/<GetAccountsByMemberAsync>d__11")]
public Task`1<List`1<Account>> GetAccountsByMemberAsync(Guid memberId, bool includeOwner, bool includeDisabledAccounts, IEnumerable`1<string> propertyNameFilter, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Account.Client.AccountVersion1HttpClient/<GetAccountAsync>d__12")]
[ObsoleteAttribute("Please use appropriate method on Microsoft.VisualStudio.Services.Organization.Client.OrganizationHttpClient instead. See https://dev.azure.com/mseng/AzureDevOps/_wiki/wikis/AzureDevOps.wiki/1931/SDK-M113?anchor=accountservice-obsolescence for more details.")]
public Task`1<Account> GetAccountAsync(string accountId, IEnumerable`1<string> propertyNameFilter, object userState, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use appropriate method on Microsoft.VisualStudio.Services.Organization.Client.OrganizationHttpClient instead. See https://dev.azure.com/mseng/AzureDevOps/_wiki/wikis/AzureDevOps.wiki/1931/SDK-M113?anchor=accountservice-obsolescence for more details.")]
public Account GetAccount(string accountId, IEnumerable`1<string> propertyNameFilter, object userState);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Account.Client.AccountVersion1HttpClient/<GetRegionsAsync>d__14")]
[ObsoleteAttribute("Please use appropriate method on Microsoft.VisualStudio.Services.Organization.Client.OrganizationHttpClient instead. See https://dev.azure.com/mseng/AzureDevOps/_wiki/wikis/AzureDevOps.wiki/1931/SDK-M113?anchor=accountservice-obsolescence for more details.")]
public Task`1<IEnumerable`1<AccountRegion>> GetRegionsAsync(object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Account.Client.AccountVersion1HttpClient/<GetAccountNameAvailabilityAsync>d__15")]
[ObsoleteAttribute("Please use appropriate method on Microsoft.VisualStudio.Services.Organization.Client.OrganizationHttpClient instead. See https://dev.azure.com/mseng/AzureDevOps/_wiki/wikis/AzureDevOps.wiki/1931/SDK-M113?anchor=accountservice-obsolescence for more details.")]
public Task`1<AccountNameAvailability> GetAccountNameAvailabilityAsync(string accountName, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Account.Client.AccountVersion1HttpClient/<GetAccountSettingsAsync>d__16")]
[ObsoleteAttribute("Please use appropriate method on Microsoft.VisualStudio.Services.Organization.Client.OrganizationHttpClient instead. See https://dev.azure.com/mseng/AzureDevOps/_wiki/wikis/AzureDevOps.wiki/1931/SDK-M113?anchor=accountservice-obsolescence for more details.")]
public Task`1<IDictionary`2<string, string>> GetAccountSettingsAsync(object userState, CancellationToken cancellationToken);
    protected virtual IDictionary`2<string, Type> get_TranslatedExceptions();
    protected List`1<KeyValuePair`2<string, string>> AppendQueryString(Nullable`1<Guid> creatorId, Nullable`1<Guid> ownerId, Nullable`1<Guid> memberId, Nullable`1<Guid> accountId, Nullable`1<bool> includeOwner, Nullable`1<bool> includeDisabledAccounts, Nullable`1<bool> includeDeletedUsers, IEnumerable`1<string> propertyNames, Nullable`1<bool> usePrecreated, string statusReason);
}
[ExceptionMappingAttribute("0.0", "3.0", "InvalidAccountOwnerException", "Microsoft.VisualStudio.Services.Account.InvalidAccountOwnerException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Account.InvalidAccountOwnerException : AccountException {
    public InvalidAccountOwnerException(string message);
    public InvalidAccountOwnerException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "InvalidUserTypeException", "Microsoft.VisualStudio.Services.Account.InvalidUserTypeException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Account.InvalidUserTypeException : AccountException {
    public InvalidUserTypeException(string message);
    public InvalidUserTypeException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "MaxNumberAccountsException", "Microsoft.VisualStudio.Services.Account.MaxNumberAccountsException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Account.MaxNumberAccountsException : AccountException {
    public MaxNumberAccountsException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "MaxNumberAccountsPerUserException", "Microsoft.VisualStudio.Services.Account.MaxNumberAccountsPerUserException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Account.MaxNumberAccountsPerUserException : AccountException {
    public MaxNumberAccountsPerUserException(string message, Exception innerException);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.VisualStudio.Services.Account.PropertyConstants : object {
    public static string ServiceUrlPrefix;
}
[ExceptionMappingAttribute("0.0", "3.0", "UnableToDeleteAzureLinkedAccountException", "Microsoft.VisualStudio.Services.Account.UnableToDeleteAzureLinkedAccountException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Account.UnableToDeleteAzureLinkedAccountException : AccountException {
}
public static class Microsoft.VisualStudio.Services.ActivityStatistic.ActivityStatisticIds : object {
    public static string ActivityStatisticArea;
    public static string ActivityStatisticResource;
    public static Guid ActivityStatisticId;
    private static ActivityStatisticIds();
}
[DataContractAttribute]
[NotificationEventBindingsAttribute("0", "ms.vss-notifications.audit-event")]
public class Microsoft.VisualStudio.Services.Audit.AuditLogEntry : object {
    [CompilerGeneratedAttribute]
private Guid <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <CorrelationId>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <ActivityId>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <ActorCUID>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <ActorUserId>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <ActorClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ActorUPN>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AuthenticationMechanism>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <Timestamp>k__BackingField;
    [CompilerGeneratedAttribute]
private AuditScopeType <ScopeType>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <ScopeId>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <ProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IPAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserAgent>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ActionId>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <Data>k__BackingField;
    [DataMemberAttribute]
public Guid Id { get; public set; }
    [DataMemberAttribute]
public Guid CorrelationId { get; public set; }
    [DataMemberAttribute]
public Guid ActivityId { get; public set; }
    [DataMemberAttribute]
public Guid ActorCUID { get; public set; }
    [DataMemberAttribute]
public Guid ActorUserId { get; public set; }
    [DataMemberAttribute]
public Guid ActorClientId { get; public set; }
    [DataMemberAttribute]
public string ActorUPN { get; public set; }
    [DataMemberAttribute]
public string AuthenticationMechanism { get; public set; }
    [DataMemberAttribute]
public DateTime Timestamp { get; public set; }
    [DataMemberAttribute]
public AuditScopeType ScopeType { get; public set; }
    [DataMemberAttribute]
public Guid ScopeId { get; public set; }
    [DataMemberAttribute]
public Guid ProjectId { get; public set; }
    [DataMemberAttribute]
public string IPAddress { get; public set; }
    [DataMemberAttribute]
public string UserAgent { get; public set; }
    [DataMemberAttribute]
public string ActionId { get; public set; }
    [DataMemberAttribute]
public IDictionary`2<string, object> Data { get; public set; }
    public AuditLogEntry(AuditLogEntry entry);
    [CompilerGeneratedAttribute]
public Guid get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(Guid value);
    [CompilerGeneratedAttribute]
public Guid get_CorrelationId();
    [CompilerGeneratedAttribute]
public void set_CorrelationId(Guid value);
    [CompilerGeneratedAttribute]
public Guid get_ActivityId();
    [CompilerGeneratedAttribute]
public void set_ActivityId(Guid value);
    [CompilerGeneratedAttribute]
public Guid get_ActorCUID();
    [CompilerGeneratedAttribute]
public void set_ActorCUID(Guid value);
    [CompilerGeneratedAttribute]
public Guid get_ActorUserId();
    [CompilerGeneratedAttribute]
public void set_ActorUserId(Guid value);
    [CompilerGeneratedAttribute]
public Guid get_ActorClientId();
    [CompilerGeneratedAttribute]
public void set_ActorClientId(Guid value);
    [CompilerGeneratedAttribute]
public string get_ActorUPN();
    [CompilerGeneratedAttribute]
public void set_ActorUPN(string value);
    [CompilerGeneratedAttribute]
public string get_AuthenticationMechanism();
    [CompilerGeneratedAttribute]
public void set_AuthenticationMechanism(string value);
    [CompilerGeneratedAttribute]
public DateTime get_Timestamp();
    [CompilerGeneratedAttribute]
public void set_Timestamp(DateTime value);
    [CompilerGeneratedAttribute]
public AuditScopeType get_ScopeType();
    [CompilerGeneratedAttribute]
public void set_ScopeType(AuditScopeType value);
    [CompilerGeneratedAttribute]
public Guid get_ScopeId();
    [CompilerGeneratedAttribute]
public void set_ScopeId(Guid value);
    [CompilerGeneratedAttribute]
public Guid get_ProjectId();
    [CompilerGeneratedAttribute]
public void set_ProjectId(Guid value);
    [CompilerGeneratedAttribute]
public string get_IPAddress();
    [CompilerGeneratedAttribute]
public void set_IPAddress(string value);
    [CompilerGeneratedAttribute]
public string get_UserAgent();
    [CompilerGeneratedAttribute]
public void set_UserAgent(string value);
    [CompilerGeneratedAttribute]
public string get_ActionId();
    [CompilerGeneratedAttribute]
public void set_ActionId(string value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_Data();
    [CompilerGeneratedAttribute]
public void set_Data(IDictionary`2<string, object> value);
    public virtual string ToString();
}
public static class Microsoft.VisualStudio.Services.Audit.AuditLogNotificationTypes : object {
    public static string AuditEvent;
    public static string AuditImplicitSubscription;
    public static string AuditPublisher;
}
[FlagsAttribute]
public enum Microsoft.VisualStudio.Services.Audit.AuditScopeType : Enum {
    public int value__;
    public static AuditScopeType Unknown;
    public static AuditScopeType Deployment;
    public static AuditScopeType Enterprise;
    public static AuditScopeType Organization;
    public static AuditScopeType Project;
}
public class Microsoft.VisualStudio.Services.Audit.InvalidAuditScopeIdException : VssServiceException {
    public InvalidAuditScopeIdException(string message);
    public InvalidAuditScopeIdException(string message, Exception innerException);
}
public static class Microsoft.VisualStudio.Services.Auditing.AuditingResourceIds : object {
    public static string AreaName;
    public static Guid EndpointsLocationId;
    public static string EndpointResourceName;
    private static AuditingResourceIds();
}
public static class Microsoft.VisualStudio.Services.AzureFrontDoor.AfdResourceIds : object {
    public static string AreaName;
    public static string AfdEndpointLookupResource;
    public static Guid EndpointLookupLocationId;
    private static AfdResourceIds();
}
[DataContractAttribute]
[NotificationEventBindingsAttribute("0", "ms.vss-sps-notifications.basic-auth-disabled-event")]
public class Microsoft.VisualStudio.Services.BasicAuthorization.BasicAuthDisabledEvent : object {
}
[DataContractAttribute]
[NotificationEventBindingsAttribute("0", "ms.vss-sps-notifications.basic-auth-password-changed-event")]
public class Microsoft.VisualStudio.Services.BasicAuthorization.BasicAuthPasswordChangedEvent : object {
}
[ExceptionMappingAttribute("0.0", "3.0", "BadClientNotificationSubscriptionRequestException", "Microsoft.VisualStudio.Services.ClientNotification.BadClientNotificationSubscriptionRequestException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.ClientNotification.BadClientNotificationSubscriptionRequestException : ClientNotificationException {
    public BadClientNotificationSubscriptionRequestException(string message);
    public BadClientNotificationSubscriptionRequestException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "BadFormatPostNotificationRequestExpcetion", "Microsoft.VisualStudio.Services.ClientNotification.BadFormatPostNotificationRequestExpcetion, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.ClientNotification.BadFormatPostNotificationRequestExpcetion : ClientNotificationException {
    public BadFormatPostNotificationRequestExpcetion(string message);
    public BadFormatPostNotificationRequestExpcetion(string message, Exception innerException);
}
[ResourceAreaAttribute("C2845FF0-342A-4059-A831-AA7A5BF00FF0")]
[ClientCircuitBreakerSettingsAttribute("10", "80")]
[ClientCancellationTimeoutAttribute("30")]
public class Microsoft.VisualStudio.Services.ClientNotification.Client.ClientNotificationHttpClient : ClientNotificationHttpClientBase {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, Type> <TranslatedExceptions>k__BackingField;
    protected IDictionary`2<string, Type> TranslatedExceptions { get; }
    protected ClientNotificationHttpClient(Uri baseUrl, VssCredentials credentials);
    public ClientNotificationHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public ClientNotificationHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public ClientNotificationHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public ClientNotificationHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    [EditorBrowsableAttribute("1")]
[ObsoleteAttribute("Use GetSubscriptionAsync instead.")]
public virtual Task`1<ClientNotificationSubscription> RegisterNotificationAsync(ClientNotificationHttpContext context, CancellationToken cancellationToken, string id, object userState);
    public virtual Task`1<ClientNotificationSubscription> GetSubscriptionAsync(object userState, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
protected virtual IDictionary`2<string, Type> get_TranslatedExceptions();
}
[ResourceAreaAttribute("C2845FF0-342A-4059-A831-AA7A5BF00FF0")]
public abstract class Microsoft.VisualStudio.Services.ClientNotification.Client.ClientNotificationHttpClientBase : VssHttpClientBase {
    public ClientNotificationHttpClientBase(Uri baseUrl, VssCredentials credentials);
    public ClientNotificationHttpClientBase(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public ClientNotificationHttpClientBase(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public ClientNotificationHttpClientBase(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public ClientNotificationHttpClientBase(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    public virtual Task`1<ClientNotificationSubscription> GetSubscriptionAsync(object userState, CancellationToken cancellationToken);
}
[ExceptionMappingAttribute("0.0", "3.0", "ClientNotificationException", "Microsoft.VisualStudio.Services.ClientNotification.ClientNotificationException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.ClientNotification.ClientNotificationException : VssServiceException {
    [CompilerGeneratedAttribute]
private bool <IsRetryable>k__BackingField;
    public bool IsRetryable { get; public set; }
    public ClientNotificationException(string message);
    public ClientNotificationException(string message, Exception innerException);
    protected ClientNotificationException(SerializationInfo info, StreamingContext context);
    [CompilerGeneratedAttribute]
public bool get_IsRetryable();
    [CompilerGeneratedAttribute]
public void set_IsRetryable(bool value);
}
[EditorBrowsableAttribute("1")]
public class Microsoft.VisualStudio.Services.ClientNotification.ClientNotificationHttpContext : object {
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private NotificationType <NotificationType>k__BackingField;
    public string ClientId { get; public set; }
    public NotificationType NotificationType { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public NotificationType get_NotificationType();
    [CompilerGeneratedAttribute]
public void set_NotificationType(NotificationType value);
}
public static class Microsoft.VisualStudio.Services.ClientNotification.ClientNotificationResourceIds : object {
    public static string AreaId;
    public static string AreaName;
    public static string SubscriptionsResource;
    public static Guid SubscriptionsLocationid;
    public static string NotificationsResource;
    public static Guid NotificationsLocationid;
    private static ClientNotificationResourceIds();
}
[ExceptionMappingAttribute("0.0", "3.0", "ClientNotificationSecurityException", "Microsoft.VisualStudio.Services.ClientNotification.ClientNotificationSecurityException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.ClientNotification.ClientNotificationSecurityException : ClientNotificationException {
    public ClientNotificationSecurityException(string message);
    public ClientNotificationSecurityException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "ClientNotificationServiceNotAvailableException", "Microsoft.VisualStudio.Services.ClientNotification.ClientNotificationServiceNotAvailableException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.ClientNotification.ClientNotificationServiceNotAvailableException : ClientNotificationException {
    public ClientNotificationServiceNotAvailableException(string message);
    public ClientNotificationServiceNotAvailableException(string message, Exception innerException);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.ClientNotification.ClientNotificationSubscription : object {
    [CompilerGeneratedAttribute]
private Guid <IdentityId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServiceUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MessageReceiver>k__BackingField;
    [CompilerGeneratedAttribute]
private int <PrefetchCount>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaxRetriesCount>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseAmqpTransportType>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ReceiveOperationTimeoutInMinutes>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ServiceBusRetryDelayMilliSecounds>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ServiceBusLongRetryDelayMilliSecounds>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientSignatureToken>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientSignatureTokenName>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <ClientSignatureTokenExpiration>k__BackingField;
    [DataMemberAttribute]
public Guid IdentityId { get; public set; }
    [DataMemberAttribute]
public string ServiceUri { get; public set; }
    [DataMemberAttribute]
public string MessageReceiver { get; public set; }
    [DataMemberAttribute]
public int PrefetchCount { get; public set; }
    [DataMemberAttribute]
public int MaxRetriesCount { get; public set; }
    [DataMemberAttribute]
public bool UseAmqpTransportType { get; public set; }
    [DataMemberAttribute]
public int ReceiveOperationTimeoutInMinutes { get; public set; }
    [DataMemberAttribute]
public int ServiceBusRetryDelayMilliSecounds { get; public set; }
    [DataMemberAttribute]
public int ServiceBusLongRetryDelayMilliSecounds { get; public set; }
    [DataMemberAttribute]
public string ClientSignatureToken { get; public set; }
    [DataMemberAttribute]
public string ClientSignatureTokenName { get; public set; }
    [DataMemberAttribute]
public DateTimeOffset ClientSignatureTokenExpiration { get; public set; }
    [CompilerGeneratedAttribute]
public Guid get_IdentityId();
    [CompilerGeneratedAttribute]
public void set_IdentityId(Guid value);
    [CompilerGeneratedAttribute]
public string get_ServiceUri();
    [CompilerGeneratedAttribute]
public void set_ServiceUri(string value);
    [CompilerGeneratedAttribute]
public string get_MessageReceiver();
    [CompilerGeneratedAttribute]
public void set_MessageReceiver(string value);
    [CompilerGeneratedAttribute]
public int get_PrefetchCount();
    [CompilerGeneratedAttribute]
public void set_PrefetchCount(int value);
    [CompilerGeneratedAttribute]
public int get_MaxRetriesCount();
    [CompilerGeneratedAttribute]
public void set_MaxRetriesCount(int value);
    [CompilerGeneratedAttribute]
public bool get_UseAmqpTransportType();
    [CompilerGeneratedAttribute]
public void set_UseAmqpTransportType(bool value);
    [CompilerGeneratedAttribute]
public int get_ReceiveOperationTimeoutInMinutes();
    [CompilerGeneratedAttribute]
public void set_ReceiveOperationTimeoutInMinutes(int value);
    [CompilerGeneratedAttribute]
public int get_ServiceBusRetryDelayMilliSecounds();
    [CompilerGeneratedAttribute]
public void set_ServiceBusRetryDelayMilliSecounds(int value);
    [CompilerGeneratedAttribute]
public int get_ServiceBusLongRetryDelayMilliSecounds();
    [CompilerGeneratedAttribute]
public void set_ServiceBusLongRetryDelayMilliSecounds(int value);
    [CompilerGeneratedAttribute]
public string get_ClientSignatureToken();
    [CompilerGeneratedAttribute]
public void set_ClientSignatureToken(string value);
    [CompilerGeneratedAttribute]
public string get_ClientSignatureTokenName();
    [CompilerGeneratedAttribute]
public void set_ClientSignatureTokenName(string value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_ClientSignatureTokenExpiration();
    [CompilerGeneratedAttribute]
public void set_ClientSignatureTokenExpiration(DateTimeOffset value);
}
[ExceptionMappingAttribute("0.0", "3.0", "NotAuthorizedException", "Microsoft.VisualStudio.Services.ClientNotification.NotAuthorizedException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.ClientNotification.NotAuthorizedException : ClientNotificationException {
    public NotAuthorizedException(string message);
    public NotAuthorizedException(string message, Exception innerException);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.ClientNotification.NotificationMessage : object {
    [CompilerGeneratedAttribute]
private NotificationType <NotificationType>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <TimeStamp>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <Attributes>k__BackingField;
    [DataMemberAttribute]
public NotificationType NotificationType { get; public set; }
    [DataMemberAttribute]
public DateTimeOffset TimeStamp { get; public set; }
    [DataMemberAttribute]
public IDictionary`2<string, object> Attributes { get; public set; }
    [CompilerGeneratedAttribute]
public NotificationType get_NotificationType();
    [CompilerGeneratedAttribute]
public void set_NotificationType(NotificationType value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_TimeStamp();
    [CompilerGeneratedAttribute]
public void set_TimeStamp(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_Attributes();
    [CompilerGeneratedAttribute]
public void set_Attributes(IDictionary`2<string, object> value);
}
public enum Microsoft.VisualStudio.Services.ClientNotification.NotificationType : Enum {
    public int value__;
    public static NotificationType ProfileUpdate;
    public static NotificationType ProfileAttributeUpdate;
    public static NotificationType ProfileCoreAttributeUpdate;
    public static NotificationType UserUpdate;
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.ClientNotification.PostNotificationHttpContext : object {
    [CompilerGeneratedAttribute]
private Guid <IdentityId>k__BackingField;
    [CompilerGeneratedAttribute]
private NotificationMessage <Message>k__BackingField;
    [DataMemberAttribute]
public Guid IdentityId { get; public set; }
    [DataMemberAttribute]
public NotificationMessage Message { get; public set; }
    [CompilerGeneratedAttribute]
public Guid get_IdentityId();
    [CompilerGeneratedAttribute]
public void set_IdentityId(Guid value);
    [CompilerGeneratedAttribute]
public NotificationMessage get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(NotificationMessage value);
}
[ExceptionMappingAttribute("0.0", "3.0", "ServiceIdentityNotSupportedException", "Microsoft.VisualStudio.Services.ClientNotification.ServiceIdentityNotSupportedException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.ClientNotification.ServiceIdentityNotSupportedException : ClientNotificationException {
    public ServiceIdentityNotSupportedException(string message);
    public ServiceIdentityNotSupportedException(string message, Exception innerException);
}
public class Microsoft.VisualStudio.Services.ClientTrace.WebApi.ClientTraceHttpClient : VssHttpClientBase {
    public ClientTraceHttpClient(Uri baseUrl, VssCredentials credentials);
    public ClientTraceHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public ClientTraceHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public ClientTraceHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public ClientTraceHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.ClientTrace.WebApi.ClientTraceHttpClient/<PublishEventsAsync>d__5")]
public Task PublishEventsAsync(ClientTraceEvent[] events, object userState, CancellationToken cancellationToken);
}
[ExceptionMappingAttribute("0.0", "3.0", "CollectionDoesNotExistException", "Microsoft.VisualStudio.Services.Collection.CollectionDoesNotExistException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Collection.CollectionDoesNotExistException : VssServiceException {
    public CollectionDoesNotExistException(string collectionName);
    public CollectionDoesNotExistException(string message, Exception innerException);
}
public enum Microsoft.VisualStudio.Services.Commerce.AccountProviderNamespace : Enum {
    public int value__;
    public static AccountProviderNamespace VisualStudioOnline;
    public static AccountProviderNamespace AppInsights;
    public static AccountProviderNamespace Marketplace;
    public static AccountProviderNamespace OnPremise;
}
[ExceptionMappingAttribute("0.0", "3.0", "AccountQuantityException", "Microsoft.VisualStudio.Services.Commerce.AccountQuantityException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Commerce.AccountQuantityException : CommerceException {
    [CompilerGeneratedAttribute]
private int <ErrorNumber>k__BackingField;
    public int ErrorNumber { get; public set; }
    public AccountQuantityException(string message);
    public AccountQuantityException(string message, Exception innerException);
    public AccountQuantityException(string message, int errorNumber);
    [CompilerGeneratedAttribute]
public int get_ErrorNumber();
    [CompilerGeneratedAttribute]
public void set_ErrorNumber(int value);
}
public class Microsoft.VisualStudio.Services.Commerce.AccountResource : Resource {
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <properties>k__BackingField;
    public Dictionary`2<string, string> properties { get; public set; }
    public AccountResource(string id, string name, string type);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_properties();
    [CompilerGeneratedAttribute]
public void set_properties(Dictionary`2<string, string> value);
    private sealed virtual override bool System.IEquatable<Microsoft.VisualStudio.Services.Commerce.AccountResource>.Equals(AccountResource other);
}
public class Microsoft.VisualStudio.Services.Commerce.AccountResourceListResult : object {
    [CompilerGeneratedAttribute]
private AccountResource[] <Value>k__BackingField;
    public AccountResource[] Value { get; public set; }
    [CompilerGeneratedAttribute]
public AccountResource[] get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(AccountResource[] value);
}
public class Microsoft.VisualStudio.Services.Commerce.AccountResourceRequest : object {
    [CompilerGeneratedAttribute]
private string <Location>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Tags>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private AccountResourceRequestOperationType <OperationType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Upn>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccountName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RequestSource>k__BackingField;
    public string Location { get; public set; }
    public Dictionary`2<string, string> Tags { get; public set; }
    public Dictionary`2<string, string> Properties { get; public set; }
    public AccountResourceRequestOperationType OperationType { get; public set; }
    public string Upn { get; public set; }
    public string AccountName { get; public set; }
    public string RequestSource { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Location();
    [CompilerGeneratedAttribute]
public void set_Location(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Tags();
    [CompilerGeneratedAttribute]
public void set_Tags(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Properties();
    [CompilerGeneratedAttribute]
public void set_Properties(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public AccountResourceRequestOperationType get_OperationType();
    [CompilerGeneratedAttribute]
public void set_OperationType(AccountResourceRequestOperationType value);
    [CompilerGeneratedAttribute]
public string get_Upn();
    [CompilerGeneratedAttribute]
public void set_Upn(string value);
    [CompilerGeneratedAttribute]
public string get_AccountName();
    [CompilerGeneratedAttribute]
public void set_AccountName(string value);
    [CompilerGeneratedAttribute]
public string get_RequestSource();
    [CompilerGeneratedAttribute]
public void set_RequestSource(string value);
}
public enum Microsoft.VisualStudio.Services.Commerce.AccountResourceRequestOperationType : Enum {
    public int value__;
    public static AccountResourceRequestOperationType Unknown;
    public static AccountResourceRequestOperationType Create;
    public static AccountResourceRequestOperationType Update;
    public static AccountResourceRequestOperationType Link;
}
public class Microsoft.VisualStudio.Services.Commerce.AccountTagRequest : object {
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Tags>k__BackingField;
    public Dictionary`2<string, string> Tags { get; public set; }
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Tags();
    [CompilerGeneratedAttribute]
public void set_Tags(Dictionary`2<string, string> value);
}
public class Microsoft.VisualStudio.Services.Commerce.AzureOfferPlanDefinition : object {
    [CompilerGeneratedAttribute]
private int <MeterId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PlanId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Publisher>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OfferName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OfferId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PlanName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PlanVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Quantity>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsPublic>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PublisherName>k__BackingField;
    public int MeterId { get; public set; }
    public string PlanId { get; public set; }
    public string Publisher { get; public set; }
    public string OfferName { get; public set; }
    public string OfferId { get; public set; }
    public string PlanName { get; public set; }
    public string PlanVersion { get; public set; }
    public int Quantity { get; public set; }
    public bool IsPublic { get; public set; }
    public string PublisherName { get; public set; }
    [CompilerGeneratedAttribute]
public int get_MeterId();
    [CompilerGeneratedAttribute]
public void set_MeterId(int value);
    [CompilerGeneratedAttribute]
public string get_PlanId();
    [CompilerGeneratedAttribute]
public void set_PlanId(string value);
    [CompilerGeneratedAttribute]
public string get_Publisher();
    [CompilerGeneratedAttribute]
public void set_Publisher(string value);
    [CompilerGeneratedAttribute]
public string get_OfferName();
    [CompilerGeneratedAttribute]
public void set_OfferName(string value);
    [CompilerGeneratedAttribute]
public string get_OfferId();
    [CompilerGeneratedAttribute]
public void set_OfferId(string value);
    [CompilerGeneratedAttribute]
public string get_PlanName();
    [CompilerGeneratedAttribute]
public void set_PlanName(string value);
    [CompilerGeneratedAttribute]
public string get_PlanVersion();
    [CompilerGeneratedAttribute]
public void set_PlanVersion(string value);
    [CompilerGeneratedAttribute]
public int get_Quantity();
    [CompilerGeneratedAttribute]
public void set_Quantity(int value);
    [CompilerGeneratedAttribute]
public bool get_IsPublic();
    [CompilerGeneratedAttribute]
public void set_IsPublic(bool value);
    [CompilerGeneratedAttribute]
public string get_PublisherName();
    [CompilerGeneratedAttribute]
public void set_PublisherName(string value);
    public sealed virtual bool Equals(AzureOfferPlanDefinition plan);
    public bool Equals(AzureOfferPlanDefinition plan, bool compareForUpdate);
    public virtual int GetHashCode();
    public virtual bool Equals(object obj);
    public AzureOfferPlanDefinition Clone();
    public static bool op_Equality(AzureOfferPlanDefinition left, AzureOfferPlanDefinition right);
    public static bool op_Inequality(AzureOfferPlanDefinition left, AzureOfferPlanDefinition right);
}
public class Microsoft.VisualStudio.Services.Commerce.AzureOfferPlanDefinitionNameComparer : object {
    public sealed virtual bool Equals(AzureOfferPlanDefinition first, AzureOfferPlanDefinition second);
    public sealed virtual int GetHashCode(AzureOfferPlanDefinition obj);
}
public class Microsoft.VisualStudio.Services.Commerce.AzureOfferPlanDefinitionUpdateComparer : object {
    public sealed virtual bool Equals(AzureOfferPlanDefinition first, AzureOfferPlanDefinition second);
    public sealed virtual int GetHashCode(AzureOfferPlanDefinition obj);
}
public enum Microsoft.VisualStudio.Services.Commerce.AzureOfferType : Enum {
    public int value__;
    public static AzureOfferType None;
    public static AzureOfferType Standard;
    public static AzureOfferType Ea;
    public static AzureOfferType Msdn;
    public static AzureOfferType Csp;
    public static AzureOfferType Unsupported;
}
public class Microsoft.VisualStudio.Services.Commerce.AzureRegion : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RegionCode>k__BackingField;
    public string Id { get; public set; }
    public string DisplayName { get; public set; }
    public string RegionCode { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public string get_RegionCode();
    [CompilerGeneratedAttribute]
public void set_RegionCode(string value);
    public virtual int GetHashCode();
    public virtual bool Equals(object obj);
}
public class Microsoft.VisualStudio.Services.Commerce.AzureSubscription : object {
    [CompilerGeneratedAttribute]
private Guid <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <TenantId>k__BackingField;
    [CompilerGeneratedAttribute]
private SubscriptionStatus <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private AccountProviderNamespace <Namespace>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<AzureOfferType> <OfferType>k__BackingField;
    [CompilerGeneratedAttribute]
private SubscriptionSource <Source>k__BackingField;
    [CompilerGeneratedAttribute]
private int <AnniversaryDay>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <Created>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <LastUpdated>k__BackingField;
    public Guid Id { get; public set; }
    public Guid TenantId { get; public set; }
    public SubscriptionStatus Status { get; public set; }
    public AccountProviderNamespace Namespace { get; public set; }
    public Nullable`1<AzureOfferType> OfferType { get; public set; }
    public SubscriptionSource Source { get; public set; }
    public int AnniversaryDay { get; public set; }
    public DateTime Created { get; public set; }
    public DateTime LastUpdated { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Guid get_Id();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Id(Guid value);
    [CompilerGeneratedAttribute]
public Guid get_TenantId();
    [CompilerGeneratedAttribute]
public void set_TenantId(Guid value);
    [CompilerGeneratedAttribute]
public sealed virtual SubscriptionStatus get_Status();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Status(SubscriptionStatus value);
    [CompilerGeneratedAttribute]
public sealed virtual AccountProviderNamespace get_Namespace();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Namespace(AccountProviderNamespace value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<AzureOfferType> get_OfferType();
    [CompilerGeneratedAttribute]
public sealed virtual void set_OfferType(Nullable`1<AzureOfferType> value);
    [CompilerGeneratedAttribute]
public sealed virtual SubscriptionSource get_Source();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Source(SubscriptionSource value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_AnniversaryDay();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AnniversaryDay(int value);
    [CompilerGeneratedAttribute]
public sealed virtual DateTime get_Created();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Created(DateTime value);
    [CompilerGeneratedAttribute]
public sealed virtual DateTime get_LastUpdated();
    [CompilerGeneratedAttribute]
public sealed virtual void set_LastUpdated(DateTime value);
}
public enum Microsoft.VisualStudio.Services.Commerce.BillingProvider : Enum {
    public int value__;
    public static BillingProvider SelfManaged;
    public static BillingProvider AzureStoreManaged;
}
public class Microsoft.VisualStudio.Services.Commerce.CheckNameAvailabilityParameter : object {
    [CompilerGeneratedAttribute]
private string <ResourceType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResourceName>k__BackingField;
    public string ResourceType { get; public set; }
    public string ResourceName { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ResourceType();
    [CompilerGeneratedAttribute]
public void set_ResourceType(string value);
    [CompilerGeneratedAttribute]
public string get_ResourceName();
    [CompilerGeneratedAttribute]
public void set_ResourceName(string value);
}
public class Microsoft.VisualStudio.Services.Commerce.CheckNameAvailabilityResult : object {
    [CompilerGeneratedAttribute]
private bool <NameAvailable>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    public bool NameAvailable { get; public set; }
    public string Message { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_NameAvailable();
    [CompilerGeneratedAttribute]
public void set_NameAvailable(bool value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
}
[ResourceAreaAttribute("365D9DCD-4492-4AE3-B5BA-AD0FF4AB74B3")]
[ClientCircuitBreakerSettingsAttribute("30", "80")]
[ClientCancellationTimeoutAttribute("60")]
public class Microsoft.VisualStudio.Services.Commerce.Client.BillingHttpClient : VssHttpClientBase {
    protected static Version previewApiVersion;
    protected static Version apiVersion40;
    internal static Dictionary`2<string, Type> s_translatedExceptions;
    [ExcludeFromCodeCoverageAttribute]
protected IDictionary`2<string, Type> TranslatedExceptions { get; }
    public BillingHttpClient(Uri baseUrl, VssCredentials credentials);
    public BillingHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public BillingHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public BillingHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public BillingHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    private static BillingHttpClient();
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.Client.BillingHttpClient/<GetResourceUsage>d__5")]
public virtual Task`1<IOfferSubscription> GetResourceUsage(string offerMeterName, ResourceRenewalGroup renewalGroup, bool nextBillingPeriod, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.Client.BillingHttpClient/<GetResourceUsage>d__6")]
public virtual Task`1<IOfferSubscription> GetResourceUsage(string offerMeterName, bool nextBillingPeriod, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.Client.BillingHttpClient/<GetResourceUsage>d__7")]
public virtual Task`1<IEnumerable`1<IOfferSubscription>> GetResourceUsage(bool nextBillingPeriod, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.Client.BillingHttpClient/<GetAllOfferSubscriptionsForUser>d__8")]
public virtual Task`1<IEnumerable`1<IOfferSubscription>> GetAllOfferSubscriptionsForUser(bool validateAzuresubscription, bool nextBillingPeriod, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.Client.BillingHttpClient/<GetOfferSubscriptionsForGalleryItem>d__9")]
public virtual Task`1<IEnumerable`1<IOfferSubscription>> GetOfferSubscriptionsForGalleryItem(Guid azureSubscriptionId, string galleryItemId, bool nextBillingPeriod, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.Client.BillingHttpClient/<SetAccountQuantity>d__10")]
public virtual Task SetAccountQuantity(string offerMeterName, ResourceRenewalGroup renewalGroup, Nullable`1<int> includedQuantity, Nullable`1<int> maximumQuantity, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.Client.BillingHttpClient/<SetAccountQuantity>d__11")]
public virtual Task SetAccountQuantity(string offerMeterName, int includedQuantity, int maximumQuantity, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.Client.BillingHttpClient/<TogglePaidBilling>d__12")]
public virtual Task TogglePaidBilling(string offerMeterName, bool paidBillingStatus, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.Client.BillingHttpClient/<CreateOfferSubscription>d__13")]
public virtual Task CreateOfferSubscription(string offerMeterName, Guid azureSubscriptionId, ResourceRenewalGroup renewalGroup, int quantity, Nullable`1<Guid> billingTarget, object userState, CancellationToken cancellationToken);
    public virtual Task CancelOfferSubscription(string offerMeterName, Guid azureSubscriptionId, ResourceRenewalGroup renewalGroup, string cancelReason, Nullable`1<Guid> billingTarget, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.Client.BillingHttpClient/<CancelOfferSubscription>d__15")]
public virtual Task CancelOfferSubscription(string offerMeterName, Guid azureSubscriptionId, ResourceRenewalGroup renewalGroup, string cancelReason, Nullable`1<Guid> billingTarget, bool immediate, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.Client.BillingHttpClient/<EnableTrialOrPreviewOfferSubscription>d__16")]
public virtual Task EnableTrialOrPreviewOfferSubscription(string offerMeterName, ResourceRenewalGroup renewalGroup, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.Client.BillingHttpClient/<EnableTrialOfferSubscriptionExtension>d__17")]
public virtual Task EnableTrialOfferSubscriptionExtension(string offerMeterName, ResourceRenewalGroup renewalGroup, DateTime endDate, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.Client.BillingHttpClient/<DecreaseResourceQuantity>d__18")]
public virtual Task DecreaseResourceQuantity(string offerMeterName, ResourceRenewalGroup renewalGroup, int quantity, bool shouldBeImmediate, Nullable`1<Guid> azureSubscriptionId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.Client.BillingHttpClient/<CreatePurchaseRequest>d__19")]
public virtual Task CreatePurchaseRequest(PurchaseRequest request, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.Client.BillingHttpClient/<UpdatePurchaseRequest>d__20")]
public virtual Task UpdatePurchaseRequest(PurchaseRequest request, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.Client.BillingHttpClient/<SendAsync>d__21`1")]
[ExcludeFromCodeCoverageAttribute]
public virtual Task`1<T> SendAsync(HttpMethod method, Guid locationId, object routeValues, ApiResourceVersion version, HttpContent content, IEnumerable`1<KeyValuePair`2<string, string>> queryParameters, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.Client.BillingHttpClient/<CreateRequestMessageAsync>d__22")]
internal virtual Task`1<HttpRequestMessage> CreateRequestMessageAsync(HttpMethod method, Guid locationId, object routeValues, ApiResourceVersion version, HttpContent content, List`1<KeyValuePair`2<string, string>> queryParameters, object userState, CancellationToken cancellationToken);
    protected virtual IDictionary`2<string, Type> get_TranslatedExceptions();
}
[ResourceAreaAttribute("365D9DCD-4492-4AE3-B5BA-AD0FF4AB74B3")]
[ClientCancellationTimeoutAttribute("120")]
public class Microsoft.VisualStudio.Services.Commerce.Client.CommerceHostHelperHttpClient : VssHttpClientBase {
    public CommerceHostHelperHttpClient(Uri baseUrl, VssCredentials credentials);
    public CommerceHostHelperHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public CommerceHostHelperHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public CommerceHostHelperHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public CommerceHostHelperHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.Client.CommerceHostHelperHttpClient/<CreateInfrastructureOrganization>d__5")]
public virtual Task`1<Guid> CreateInfrastructureOrganization(string resourceName, string collectionHostName, string hostRegion, string tags, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.Client.CommerceHostHelperHttpClient/<GetInfrastructureOrganizationProperties>d__6")]
public virtual Task`1<List`1<string>> GetInfrastructureOrganizationProperties(Guid propertyKind, IEnumerable`1<string> properties, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.Client.CommerceHostHelperHttpClient/<UpdateCollectionOwner>d__7")]
public virtual Task`1<bool> UpdateCollectionOwner(Guid newOwnerId, Guid ownerDomain, object userState, CancellationToken cancellationToken);
}
[ResourceAreaAttribute("365D9DCD-4492-4AE3-B5BA-AD0FF4AB74B3")]
public class Microsoft.VisualStudio.Services.Commerce.Client.CommercePackageHttpClient : VssHttpClientBase {
    protected static Version currentApiVersion;
    internal static Dictionary`2<string, Type> s_translatedExceptions;
    [ExcludeFromCodeCoverageAttribute]
protected IDictionary`2<string, Type> TranslatedExceptions { get; }
    public CommercePackageHttpClient(Uri baseUrl, VssCredentials credentials);
    public CommercePackageHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public CommercePackageHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public CommercePackageHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public CommercePackageHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    private static CommercePackageHttpClient();
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.Client.CommercePackageHttpClient/<GetCommercePackage>d__6")]
[ObsoleteAttribute]
public virtual Task`1<CommercePackage> GetCommercePackage(object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.Client.CommercePackageHttpClient/<GetCommercePackage>d__7")]
public virtual Task`1<CommercePackage> GetCommercePackage(string version, object userState, CancellationToken cancellationToken);
    protected virtual IDictionary`2<string, Type> get_TranslatedExceptions();
}
[ResourceAreaAttribute("365D9DCD-4492-4AE3-B5BA-AD0FF4AB74B3")]
public class Microsoft.VisualStudio.Services.Commerce.Client.ConnectedServerHttpClient : VssHttpClientBase {
    internal static Dictionary`2<string, Type> s_translatedExceptions;
    protected static Version previewApiVersion;
    protected IDictionary`2<string, Type> TranslatedExceptions { get; }
    public ConnectedServerHttpClient(Uri baseUrl, VssCredentials credentials);
    public ConnectedServerHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public ConnectedServerHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public ConnectedServerHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public ConnectedServerHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    private static ConnectedServerHttpClient();
    public virtual Task`1<ConnectedServer> CreateConnectedServer(ConnectedServer server, object userState, CancellationToken cancellationToken);
    public virtual Task`1<ConnectedServer> ConnectConnectedServer(ConnectedServer server, object userState, CancellationToken cancellationToken);
    protected virtual IDictionary`2<string, Type> get_TranslatedExceptions();
}
public class Microsoft.VisualStudio.Services.Commerce.Client.CsmHttpClient : CsmHttpClientBase {
    public CsmHttpClient(Uri baseUrl, VssCredentials credentials);
    public CsmHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public CsmHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public CsmHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public CsmHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    public virtual Task`1<AccountResource> Accounts_CreateAsync(AccountResourceRequest requestData, Guid subscriptionId, string resourceGroupName, string resourceName, Identity requestor, object userState, CancellationToken cancellationToken);
    public virtual Task`1<AccountResource> Accounts_CreateAsync(AccountResourceRequest requestData, Guid subscriptionId, string resourceGroupName, string resourceName, string principalName, string domain, object userState, CancellationToken cancellationToken);
    [EditorBrowsableAttribute("1")]
public virtual Task`1<AccountResource> Accounts_CreateOrUpdateAsync(AccountResourceRequest requestData, Guid subscriptionId, string resourceGroupName, string resourceName, object userState, CancellationToken cancellationToken);
    public AccountResource Accounts_Get(Guid subscriptionId, string resourceGroupName, string resourceName, object userState, CancellationToken cancellationToken);
}
[ResourceAreaAttribute("365D9DCD-4492-4AE3-B5BA-AD0FF4AB74B3")]
[ClientCircuitBreakerSettingsAttribute("30", "80")]
[ClientCancellationTimeoutAttribute("60")]
public class Microsoft.VisualStudio.Services.Commerce.Client.MeteringHttpClient : VssHttpClientBase {
    protected static Version previewApiVersion;
    internal static Dictionary`2<string, Type> s_translatedExceptions;
    [ExcludeFromCodeCoverageAttribute]
protected IDictionary`2<string, Type> TranslatedExceptions { get; }
    public MeteringHttpClient(Uri baseUrl, VssCredentials credentials);
    public MeteringHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public MeteringHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public MeteringHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public MeteringHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    private static MeteringHttpClient();
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.Client.MeteringHttpClient/<GetResourceStatus>d__5")]
public virtual Task`1<ISubscriptionResource> GetResourceStatus(Nullable`1<ResourceName> resourceName, bool nextBillingPeriod, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.Client.MeteringHttpClient/<GetResourceStatus>d__6")]
public virtual Task`1<IEnumerable`1<ISubscriptionResource>> GetResourceStatus(bool nextBillingPeriod, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.Client.MeteringHttpClient/<SetAccountQuantity>d__7")]
public virtual Task SetAccountQuantity(ResourceName name, int includedQuantity, int maximumQuantity, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.Client.MeteringHttpClient/<TogglePaidBilling>d__8")]
public virtual Task TogglePaidBilling(ResourceName name, bool paidBillingStatus, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.Client.MeteringHttpClient/<ReportUsage>d__9")]
public virtual Task ReportUsage(Guid eventUserId, ResourceName resourceName, int quantity, string eventId, DateTime billingEventDateTime, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.Client.MeteringHttpClient/<GetUsage>d__10")]
public virtual Task`1<IEnumerable`1<IUsageEventAggregate>> GetUsage(DateTime startTime, DateTime endTime, TimeSpan timeSpan, ResourceName resource, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.Client.MeteringHttpClient/<SendAsync>d__11`1")]
[ExcludeFromCodeCoverageAttribute]
public virtual Task`1<T> SendAsync(HttpMethod method, Guid locationId, object routeValues, ApiResourceVersion version, HttpContent content, IEnumerable`1<KeyValuePair`2<string, string>> queryParameters, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.Client.MeteringHttpClient/<CreateRequestMessageAsync>d__12")]
internal virtual Task`1<HttpRequestMessage> CreateRequestMessageAsync(HttpMethod method, Guid locationId, object routeValues, ApiResourceVersion version, HttpContent content, List`1<KeyValuePair`2<string, string>> queryParameters, object userState, CancellationToken cancellationToken);
    protected virtual IDictionary`2<string, Type> get_TranslatedExceptions();
}
[ResourceAreaAttribute("365D9DCD-4492-4AE3-B5BA-AD0FF4AB74B3")]
[ClientCircuitBreakerSettingsAttribute("30", "80")]
[ClientCancellationTimeoutAttribute("60")]
public class Microsoft.VisualStudio.Services.Commerce.Client.OfferMeterHttpClient : VssHttpClientBase {
    protected static Version previewApiVersion;
    internal static Dictionary`2<string, Type> s_translatedExceptions;
    [ExcludeFromCodeCoverageAttribute]
protected IDictionary`2<string, Type> TranslatedExceptions { get; }
    public OfferMeterHttpClient(Uri baseUrl, VssCredentials credentials);
    public OfferMeterHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public OfferMeterHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public OfferMeterHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public OfferMeterHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    private static OfferMeterHttpClient();
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.Client.OfferMeterHttpClient/<GetMeterFromGalleryId>d__5")]
public virtual Task`1<IOfferMeter> GetMeterFromGalleryId(string resourceName, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.Client.OfferMeterHttpClient/<GetMeterFromMeterName>d__6")]
public virtual Task`1<IOfferMeter> GetMeterFromMeterName(string resourceName, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.Client.OfferMeterHttpClient/<GetMeters>d__7")]
public virtual Task`1<List`1<OfferMeter>> GetMeters(object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.Client.OfferMeterHttpClient/<CreateOfferMeterDefinition>d__8")]
public virtual Task CreateOfferMeterDefinition(IOfferMeter meterConfig, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.Client.OfferMeterHttpClient/<GetPurchasableOfferMeter>d__9")]
public virtual Task`1<PurchasableOfferMeter> GetPurchasableOfferMeter(string resourceName, string resourceNameResolveMethod, Nullable`1<Guid> subscriptionId, bool includeMeterPricing, string offerCode, Nullable`1<Guid> tenantId, Nullable`1<Guid> objectId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.Client.OfferMeterHttpClient/<SendAsync>d__10`1")]
[ExcludeFromCodeCoverageAttribute]
public virtual Task`1<T> SendAsync(HttpMethod method, Guid locationId, object routeValues, ApiResourceVersion version, HttpContent content, IEnumerable`1<KeyValuePair`2<string, string>> queryParameters, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.Client.OfferMeterHttpClient/<CreateRequestMessageAsync>d__11")]
internal virtual Task`1<HttpRequestMessage> CreateRequestMessageAsync(HttpMethod method, Guid locationId, object routeValues, ApiResourceVersion version, HttpContent content, List`1<KeyValuePair`2<string, string>> queryParameters, object userState, CancellationToken cancellationToken);
    protected virtual IDictionary`2<string, Type> get_TranslatedExceptions();
}
[ResourceAreaAttribute("365D9DCD-4492-4AE3-B5BA-AD0FF4AB74B3")]
[ClientCircuitBreakerSettingsAttribute("15", "80")]
[ClientCancellationTimeoutAttribute("30")]
public class Microsoft.VisualStudio.Services.Commerce.Client.OfferMeterPriceHttpClient : VssHttpClientBase {
    protected static Version previewApiVersion;
    internal static Dictionary`2<string, Type> s_translatedExceptions;
    protected IDictionary`2<string, Type> TranslatedExceptions { get; }
    public OfferMeterPriceHttpClient(Uri baseUrl, VssCredentials credentials);
    public OfferMeterPriceHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public OfferMeterPriceHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public OfferMeterPriceHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public OfferMeterPriceHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    private static OfferMeterPriceHttpClient();
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.Client.OfferMeterPriceHttpClient/<GetOfferMeterPrice>d__5")]
public virtual Task`1<IList`1<OfferMeterPrice>> GetOfferMeterPrice(string galleryId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.Client.OfferMeterPriceHttpClient/<SendAsync>d__6`1")]
[ExcludeFromCodeCoverageAttribute]
public virtual Task`1<T> SendAsync(HttpMethod method, Guid locationId, object routeValues, ApiResourceVersion version, HttpContent content, IEnumerable`1<KeyValuePair`2<string, string>> queryParameters, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.Client.OfferMeterPriceHttpClient/<CreateRequestMessageAsync>d__7")]
internal virtual Task`1<HttpRequestMessage> CreateRequestMessageAsync(HttpMethod method, Guid locationId, object routeValues, ApiResourceVersion version, HttpContent content, List`1<KeyValuePair`2<string, string>> queryParameters, object userState, CancellationToken cancellationToken);
    protected virtual IDictionary`2<string, Type> get_TranslatedExceptions();
}
[ResourceAreaAttribute("365D9DCD-4492-4AE3-B5BA-AD0FF4AB74B3")]
public class Microsoft.VisualStudio.Services.Commerce.Client.ReportingHttpClient : VssHttpClientBase {
    protected static Version previewApiVersion;
    internal static Dictionary`2<string, Type> s_translatedExceptions;
    [ExcludeFromCodeCoverageAttribute]
protected IDictionary`2<string, Type> TranslatedExceptions { get; }
    public ReportingHttpClient(Uri baseUrl, VssCredentials credentials);
    public ReportingHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public ReportingHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public ReportingHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public ReportingHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    private static ReportingHttpClient();
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.Client.ReportingHttpClient/<GetCommerceEvents>d__5")]
public virtual Task`1<IEnumerable`1<ICommerceEvent>> GetCommerceEvents(string viewName, string resourceName, DateTime startTime, DateTime endTime, string filter, object userState, CancellationToken cancellationToken);
    protected virtual IDictionary`2<string, Type> get_TranslatedExceptions();
}
[ResourceAreaAttribute("365D9DCD-4492-4AE3-B5BA-AD0FF4AB74B3")]
[ClientCircuitBreakerSettingsAttribute("100", "80")]
public class Microsoft.VisualStudio.Services.Commerce.Client.SubscriptionHttpClient : VssHttpClientBase {
    internal static Dictionary`2<string, Type> s_translatedExceptions;
    [ExcludeFromCodeCoverageAttribute]
protected IDictionary`2<string, Type> TranslatedExceptions { get; }
    public SubscriptionHttpClient(Uri baseUrl, VssCredentials credentials);
    public SubscriptionHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public SubscriptionHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public SubscriptionHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public SubscriptionHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    private static SubscriptionHttpClient();
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.Client.SubscriptionHttpClient/<GetAzureSubscriptions>d__5")]
public virtual Task`1<IEnumerable`1<IAzureSubscription>> GetAzureSubscriptions(List`1<Guid> subscriptionIds, AccountProviderNamespace providerNamespaceId, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.Client.SubscriptionHttpClient/<GetAccounts>d__6")]
public virtual Task`1<IEnumerable`1<ISubscriptionAccount>> GetAccounts(Guid subscriptionId, AccountProviderNamespace providerNamespaceId, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.Client.SubscriptionHttpClient/<GetAccounts>d__7")]
public virtual Task`1<IEnumerable`1<ISubscriptionAccount>> GetAccounts(AccountProviderNamespace providerNamespaceId, Guid memberId, bool queryOnlyOwnerAccounts, bool inlcudeDisabledAccounts, bool includeMSAAccounts, IEnumerable`1<Guid> serviceOwners, string galleryId, bool addUnlinkedSubscription, bool queryAccountsByUpn, CancellationToken cancellationToken);
    public virtual Task CreateSubscription(Guid subscriptionId, AccountProviderNamespace providerNamespaceId, int anniversaryDay, SubscriptionStatus status, SubscriptionSource source, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.Client.SubscriptionHttpClient/<LinkAccount>d__9")]
public virtual Task LinkAccount(Guid subscriptionId, AccountProviderNamespace providerNamespaceId, Guid accountId, Guid ownerId, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.Client.SubscriptionHttpClient/<LinkAccount>d__10")]
public virtual Task LinkAccount(Guid subscriptionId, AccountProviderNamespace providerNamespaceId, Guid accountId, Guid ownerId, bool hydrate, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.Client.SubscriptionHttpClient/<UnlinkAccount>d__11")]
public virtual Task UnlinkAccount(Guid subscriptionId, AccountProviderNamespace providerNamespaceId, Guid accountId, Guid ownerId, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.Client.SubscriptionHttpClient/<UnlinkAccount>d__12")]
public virtual Task UnlinkAccount(Guid subscriptionId, AccountProviderNamespace providerNamespaceId, Guid accountId, Guid ownerId, bool hydrate, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.Client.SubscriptionHttpClient/<GetSubscriptionAccount>d__13")]
public virtual Task`1<ISubscriptionAccount> GetSubscriptionAccount(AccountProviderNamespace providerNamespaceId, Guid accountId, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.Client.SubscriptionHttpClient/<GetAzureSubscriptionForPurchase>d__14")]
public virtual Task`1<ISubscriptionAccount> GetAzureSubscriptionForPurchase(Guid subscriptionId, string galleryItemId, Guid accountId, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.Client.SubscriptionHttpClient/<GetAzureSubscriptionForUser>d__15")]
public virtual Task`1<IEnumerable`1<ISubscriptionAccount>> GetAzureSubscriptionForUser(Nullable`1<Guid> subscriptionId, bool queryAcrossTenants, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.Client.SubscriptionHttpClient/<ChangeSubscriptionAccount>d__16")]
public virtual Task ChangeSubscriptionAccount(Guid newSubscriptionId, AccountProviderNamespace providerNamespaceId, Guid accountId, bool hydrate, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.Client.SubscriptionHttpClient/<SendAsync>d__17`1")]
[ExcludeFromCodeCoverageAttribute]
public virtual Task`1<T> SendAsync(HttpMethod method, Guid locationId, object routeValues, ApiResourceVersion version, HttpContent content, IEnumerable`1<KeyValuePair`2<string, string>> queryParameters, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.Client.SubscriptionHttpClient/<CreateRequestMessageAsync>d__18")]
internal virtual Task`1<HttpRequestMessage> CreateRequestMessageAsync(HttpMethod method, Guid locationId, object routeValues, ApiResourceVersion version, HttpContent content, List`1<KeyValuePair`2<string, string>> queryParameters, object userState, CancellationToken cancellationToken);
    protected virtual IDictionary`2<string, Type> get_TranslatedExceptions();
}
public class Microsoft.VisualStudio.Services.Commerce.CommerceEvent : object {
    [CompilerGeneratedAttribute]
private string <EventId>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <EventTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EventName>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <OrganizationId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OrganizationName>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <CollectionId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CollectionName>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <SubscriptionId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MeterName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GalleryId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CommittedQuantity>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CurrentQuantity>k__BackingField;
    [CompilerGeneratedAttribute]
private int <PreviousQuantity>k__BackingField;
    [CompilerGeneratedAttribute]
private double <BilledQuantity>k__BackingField;
    [CompilerGeneratedAttribute]
private int <IncludedQuantity>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <PreviousIncludedQuantity>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaxQuantity>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <PreviousMaxQuantity>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RenewalGroup>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EventSource>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Environment>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <UserIdentity>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <ServiceIdentity>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <TrialStartDate>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <TrialEndDate>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <EffectiveDate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    public string EventId { get; public set; }
    public DateTime EventTime { get; public set; }
    public string EventName { get; public set; }
    public Guid OrganizationId { get; public set; }
    public string OrganizationName { get; public set; }
    public Guid CollectionId { get; public set; }
    public string CollectionName { get; public set; }
    public Guid SubscriptionId { get; public set; }
    public string MeterName { get; public set; }
    public string GalleryId { get; public set; }
    public int CommittedQuantity { get; public set; }
    public int CurrentQuantity { get; public set; }
    public int PreviousQuantity { get; public set; }
    public double BilledQuantity { get; public set; }
    public int IncludedQuantity { get; public set; }
    public Nullable`1<int> PreviousIncludedQuantity { get; public set; }
    public int MaxQuantity { get; public set; }
    public Nullable`1<int> PreviousMaxQuantity { get; public set; }
    public string RenewalGroup { get; public set; }
    public string EventSource { get; public set; }
    public string Environment { get; public set; }
    public Guid UserIdentity { get; public set; }
    public Guid ServiceIdentity { get; public set; }
    public Nullable`1<DateTime> TrialStartDate { get; public set; }
    public Nullable`1<DateTime> TrialEndDate { get; public set; }
    public Nullable`1<DateTime> EffectiveDate { get; public set; }
    public string Version { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_EventId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_EventId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual DateTime get_EventTime();
    [CompilerGeneratedAttribute]
public sealed virtual void set_EventTime(DateTime value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_EventName();
    [CompilerGeneratedAttribute]
public sealed virtual void set_EventName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Guid get_OrganizationId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_OrganizationId(Guid value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_OrganizationName();
    [CompilerGeneratedAttribute]
public sealed virtual void set_OrganizationName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Guid get_CollectionId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CollectionId(Guid value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_CollectionName();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CollectionName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Guid get_SubscriptionId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SubscriptionId(Guid value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_MeterName();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MeterName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_GalleryId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_GalleryId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_CommittedQuantity();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CommittedQuantity(int value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_CurrentQuantity();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CurrentQuantity(int value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_PreviousQuantity();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PreviousQuantity(int value);
    [CompilerGeneratedAttribute]
public sealed virtual double get_BilledQuantity();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BilledQuantity(double value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_IncludedQuantity();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IncludedQuantity(int value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_PreviousIncludedQuantity();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PreviousIncludedQuantity(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_MaxQuantity();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxQuantity(int value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_PreviousMaxQuantity();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PreviousMaxQuantity(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_RenewalGroup();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RenewalGroup(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_EventSource();
    [CompilerGeneratedAttribute]
public sealed virtual void set_EventSource(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Environment();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Environment(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Guid get_UserIdentity();
    [CompilerGeneratedAttribute]
public sealed virtual void set_UserIdentity(Guid value);
    [CompilerGeneratedAttribute]
public sealed virtual Guid get_ServiceIdentity();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ServiceIdentity(Guid value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<DateTime> get_TrialStartDate();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TrialStartDate(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<DateTime> get_TrialEndDate();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TrialEndDate(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<DateTime> get_EffectiveDate();
    [CompilerGeneratedAttribute]
public sealed virtual void set_EffectiveDate(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Version();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Version(string value);
}
[ExceptionMappingAttribute("0.0", "3.0", "CommerceException", "Microsoft.VisualStudio.Services.Commerce.CommerceException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Commerce.CommerceException : VssServiceException {
    public CommerceException(string message);
    public CommerceException(string message, Exception innerException);
    protected CommerceException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.Commerce.CommercePackage : object {
    [CompilerGeneratedAttribute]
private IEnumerable`1<OfferMeter> <OfferMeters>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<OfferSubscription> <OfferSubscriptions>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Configuration>k__BackingField;
    public IEnumerable`1<OfferMeter> OfferMeters { get; public set; }
    public IEnumerable`1<OfferSubscription> OfferSubscriptions { get; public set; }
    public IDictionary`2<string, string> Configuration { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<OfferMeter> get_OfferMeters();
    [CompilerGeneratedAttribute]
public sealed virtual void set_OfferMeters(IEnumerable`1<OfferMeter> value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<OfferSubscription> get_OfferSubscriptions();
    [CompilerGeneratedAttribute]
public sealed virtual void set_OfferSubscriptions(IEnumerable`1<OfferSubscription> value);
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, string> get_Configuration();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Configuration(IDictionary`2<string, string> value);
}
public enum Microsoft.VisualStudio.Services.Commerce.CommerceReportingEventType : Enum {
    public int value__;
    public static CommerceReportingEventType Unknown;
    public static CommerceReportingEventType TrialStart;
    public static CommerceReportingEventType TrialEnd;
    public static CommerceReportingEventType TrialExtend;
    public static CommerceReportingEventType NewPurchase;
    public static CommerceReportingEventType UpgradeQuantity;
    public static CommerceReportingEventType DowngradeQuantity;
    public static CommerceReportingEventType CancelPurchase;
    public static CommerceReportingEventType RenewPurchase;
    public static CommerceReportingEventType QuantityChange;
}
public static class Microsoft.VisualStudio.Services.Commerce.CommerceResourceIds : object {
    public static string AreaId;
    public static string AreaName;
    public static string MeterResource;
    public static Guid MeterLocationid;
    public static string CommercePackageResource;
    public static Guid CommercePackageLocationId;
    public static string UsageEventResource;
    public static Guid UsageEventLocationid;
    public static string ReportingEventResource;
    public static Guid ReportingEventLocationId;
    public static string SubscriptionResource;
    public static Guid SubscriptionLocationId;
    public static string RegionsResource;
    public static Guid RegionsLocationId;
    public static string OfferSubscriptionResource;
    public static Guid OfferSubscriptionResourceId;
    public static string OfferMeterResource;
    public static Guid OfferMeterLocationId;
    public static string OfferMeterPriceResource;
    public static Guid OfferMeterPriceLocationId;
    public static string ConnectedServerResource;
    public static Guid ConnectedServerLocationId;
    public static string PurchaseRequestResource;
    public static Guid PurchaseRequestLocationId;
    public static string ResourceMigrationResource;
    public static Guid ResourceMigrationLocationId;
    public static string CommerceHostHelperResource;
    public static Guid CommerceHostHelperLocationId;
    private static CommerceResourceIds();
}
public static class Microsoft.VisualStudio.Services.Commerce.CommerceResourceVersions : object {
    public static int MeterV1Resources;
    public static int MeterV2Resources;
    public static int BillingV1Resources;
    public static int OfferMeterV1Resources;
    public static int OfferMeterPriceV1Resources;
    public static int CommercePackageV1Resources;
    public static int ReportingV1Resources;
    public static int PurchaseRequestV1Resources;
    public static int ResourceMigrationV1Resources;
    public static int InfrastructureOrganizationV1Resources;
}
[ExceptionMappingAttribute("0.0", "3.0", "CommerceSecurityException", "Microsoft.VisualStudio.Services.Commerce.CommerceSecurityException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Commerce.CommerceSecurityException : CommerceException {
    public CommerceSecurityException(string message);
    public CommerceSecurityException(string message, Exception innerException);
}
public static class Microsoft.VisualStudio.Services.Commerce.CommerceServiceResourceIds : object {
    public static string OfferMeterAreaId;
    public static string OfferMeterAreaName;
    public static string OfferMeterLocationString;
    public static Guid OfferMeterLocationId;
    public static string OfferMeterResource;
    public static string OfferMeterPriceResource;
    public static string OfferMeterPriceLocationString;
    public static Guid OfferMeterPriceLocationId;
    public static string MeterAreaId;
    public static string MetersAreaName;
    public static string MeterResource;
    public static string MeterLocationString;
    public static Guid MeterLocationid;
    public static string CommercePackageAreaName;
    public static string CommercePackageAreaId;
    public static string CommercePackageResource;
    public static string CommercePackageLocationString;
    public static Guid CommercePackageLocationId;
    public static string UsageEventsAreaName;
    public static string UsageEventsAreaId;
    public static string UsageEventsResource;
    public static string UsageEventsLocationString;
    public static Guid UsageEventLocationid;
    public static string ReportingEventsAreaName;
    public static string ReportingEventsAreaId;
    public static string ReportingEventsResource;
    public static string ReportingEventsLocationString;
    public static Guid ReportingEventsLocationId;
    public static string SubscriptionAreaId;
    public static string SubscriptionAreaName;
    public static string SubscriptionResource;
    public static string SubscriptionLocationString;
    public static Guid SubscriptionLocationId;
    public static string AccountDetailsResource;
    public static string AccountDetailsLocationString;
    public static Guid AccountDetailsLocationId;
    public static string RegionsAreaName;
    public static string RegionsAreaId;
    public static string RegionsResource;
    public static string RegionsLocationString;
    public static Guid RegionsLocationId;
    public static string OfferSubscriptionAreaName;
    public static string OfferSubscriptionAreaId;
    public static string OfferSubscriptionResource;
    public static string OfferSubscriptionLocationString;
    public static Guid OfferSubscriptionResourceId;
    public static string ConnectedServerAreaName;
    public static string ConnectedServerAreaId;
    public static string ConnectedServerResource;
    public static string ConnectedServerLocationString;
    public static Guid ConnectedServerLocationId;
    public static string PurchaseRequestAreaName;
    public static string PurchaseRequestAreaId;
    public static string PurchaseRequestResource;
    public static string PurchaseRequestLocationString;
    public static Guid PurchaseRequestLocationId;
    public static string ResourceMigrationAreaName;
    public static string ResourceMigrationAreaId;
    public static string ResourceMigrationResource;
    public static string ResourceMigrationLocationString;
    public static Guid ResourceMigrationLocationId;
    public static string OrganizationBillingAreaName;
    public static string OrganizationBillingAreaId;
    public static string OrganizationBillingResource;
    public static string OrganizationBillingLocationString;
    public static Guid OrganizationBillingLocationId;
    public static string EnterpriseBillingAreaName;
    public static string EnterpriseBillingAreaId;
    public static string EnterpriseBillingResource;
    public static string EnterpriseBillingLocationString;
    public static Guid EnterpriseBillingLocationId;
    public static string DefaultAccessLevelAreaName;
    public static string DefaultAccessLevelAreaId;
    public static string DefaultAccessLevelResource;
    public static string DefaultAccessLevelLocationString;
    public static Guid DefaultAccessLevelLocationId;
    private static CommerceServiceResourceIds();
}
public class Microsoft.VisualStudio.Services.Commerce.ConnectedServer : object {
    [CompilerGeneratedAttribute]
private Guid <SubscriptionId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccountName>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <AccountId>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <ServerId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServerName>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <TargetId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TargetName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpsUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private ConnectedServerAuthorization <Authorization>k__BackingField;
    public Guid SubscriptionId { get; public set; }
    public string AccountName { get; public set; }
    public Guid AccountId { get; public set; }
    public Guid ServerId { get; public set; }
    public string ServerName { get; public set; }
    public Guid TargetId { get; public set; }
    public string TargetName { get; public set; }
    public string SpsUrl { get; public set; }
    public ConnectedServerAuthorization Authorization { get; public set; }
    [CompilerGeneratedAttribute]
public Guid get_SubscriptionId();
    [CompilerGeneratedAttribute]
public void set_SubscriptionId(Guid value);
    [CompilerGeneratedAttribute]
public string get_AccountName();
    [CompilerGeneratedAttribute]
public void set_AccountName(string value);
    [CompilerGeneratedAttribute]
public Guid get_AccountId();
    [CompilerGeneratedAttribute]
public void set_AccountId(Guid value);
    [CompilerGeneratedAttribute]
public Guid get_ServerId();
    [CompilerGeneratedAttribute]
public void set_ServerId(Guid value);
    [CompilerGeneratedAttribute]
public string get_ServerName();
    [CompilerGeneratedAttribute]
public void set_ServerName(string value);
    [CompilerGeneratedAttribute]
public Guid get_TargetId();
    [CompilerGeneratedAttribute]
public void set_TargetId(Guid value);
    [CompilerGeneratedAttribute]
public string get_TargetName();
    [CompilerGeneratedAttribute]
public void set_TargetName(string value);
    [CompilerGeneratedAttribute]
public string get_SpsUrl();
    [CompilerGeneratedAttribute]
public void set_SpsUrl(string value);
    [CompilerGeneratedAttribute]
public ConnectedServerAuthorization get_Authorization();
    [CompilerGeneratedAttribute]
public void set_Authorization(ConnectedServerAuthorization value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Commerce.ConnectedServerAuthorization : object {
    [CompilerGeneratedAttribute]
private Uri <AuthorizationUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PublicKey>k__BackingField;
    [DataMemberAttribute]
public Uri AuthorizationUrl { get; public set; }
    [DataMemberAttribute]
public Guid ClientId { get; public set; }
    [DataMemberAttribute]
public string PublicKey { get; public set; }
    private ConnectedServerAuthorization(ConnectedServerAuthorization objectToBeCloned);
    [CompilerGeneratedAttribute]
public Uri get_AuthorizationUrl();
    [CompilerGeneratedAttribute]
public void set_AuthorizationUrl(Uri value);
    [CompilerGeneratedAttribute]
public Guid get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(Guid value);
    [CompilerGeneratedAttribute]
public string get_PublicKey();
    [CompilerGeneratedAttribute]
public void set_PublicKey(string value);
    public ConnectedServerAuthorization Clone();
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Commerce.ConnectedServerPublicKey : object {
    [CompilerGeneratedAttribute]
private Byte[] <Exponent>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <Modulus>k__BackingField;
    [DataMemberAttribute]
public Byte[] Exponent { get; public set; }
    [DataMemberAttribute]
public Byte[] Modulus { get; public set; }
    public ConnectedServerPublicKey(Byte[] exponent, Byte[] modulus);
    private ConnectedServerPublicKey(ConnectedServerPublicKey objectToBeCloned);
    [CompilerGeneratedAttribute]
public Byte[] get_Exponent();
    [CompilerGeneratedAttribute]
public void set_Exponent(Byte[] value);
    [CompilerGeneratedAttribute]
public Byte[] get_Modulus();
    [CompilerGeneratedAttribute]
public void set_Modulus(Byte[] value);
    public ConnectedServerPublicKey Clone();
}
[ResourceAreaAttribute("B3705FD5-DC18-47FC-BB2F-7B0F19A70822")]
public abstract class Microsoft.VisualStudio.Services.Commerce.CsmHttpClientBase : VssHttpClientBase {
    public CsmHttpClientBase(Uri baseUrl, VssCredentials credentials);
    public CsmHttpClientBase(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public CsmHttpClientBase(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public CsmHttpClientBase(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public CsmHttpClientBase(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    public virtual Task`1<AccountResource> Accounts_CreateOrUpdateAsync(AccountResourceRequest requestData, Guid subscriptionId, string resourceGroupName, string resourceName, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.CsmHttpClientBase/<Accounts_DeleteAsync>d__6")]
public virtual Task Accounts_DeleteAsync(Guid subscriptionId, string resourceGroupName, string resourceName, object userState, CancellationToken cancellationToken);
    public virtual Task`1<AccountResource> Accounts_GetAsync(Guid subscriptionId, string resourceGroupName, string resourceName, object userState, CancellationToken cancellationToken);
    public virtual Task`1<AccountResource> Accounts_UpdateAsync(AccountTagRequest requestData, Guid subscriptionId, string resourceGroupName, string resourceName, object userState, CancellationToken cancellationToken);
    public virtual Task`1<AccountResourceListResult> Accounts_ListByResourceGroupAsync(Guid subscriptionId, string resourceGroupName, object userState, CancellationToken cancellationToken);
    public virtual Task`1<OperationListResult> Operations_ListAsync(object userState, CancellationToken cancellationToken);
    public virtual Task`1<ExtensionResource> Extensions_CreateAsync(ExtensionResourceRequest requestData, Guid subscriptionId, string resourceGroupName, string accountResourceName, string extensionResourceName, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.CsmHttpClientBase/<Extensions_DeleteAsync>d__12")]
public virtual Task Extensions_DeleteAsync(Guid subscriptionId, string resourceGroupName, string accountResourceName, string extensionResourceName, object userState, CancellationToken cancellationToken);
    public virtual Task`1<ExtensionResource> Extensions_GetAsync(Guid subscriptionId, string resourceGroupName, string accountResourceName, string extensionResourceName, object userState, CancellationToken cancellationToken);
    public virtual Task`1<ExtensionResource> Extensions_UpdateAsync(ExtensionResourceRequest requestData, Guid subscriptionId, string resourceGroupName, string accountResourceName, string extensionResourceName, object userState, CancellationToken cancellationToken);
    public virtual Task`1<ExtensionResourceListResult> Extensions_ListByAccountAsync(Guid subscriptionId, string resourceGroupName, string accountResourceName, object userState, CancellationToken cancellationToken);
    public virtual Task`1<CheckNameAvailabilityResult> Accounts_CheckNameAvailabilityAsync(CheckNameAvailabilityParameter request, Guid subscriptionId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.CsmHttpClientBase/<MoveResourcesAsync>d__17")]
public virtual Task MoveResourcesAsync(ResourcesMoveRequest resourcesMoveRequest, Guid subscriptionId, string resourceGroupName, string operationName, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.CsmHttpClientBase/<HandleNotificationAsync>d__18")]
[EditorBrowsableAttribute("1")]
public virtual Task HandleNotificationAsync(CsmSubscriptionRequest requestData, Guid subscriptionId, object userState, CancellationToken cancellationToken);
    public virtual Task`1<CsmSubscriptionResourceListResult> SubscriptionResources_ListAsync(Guid subscriptionId, object userState, CancellationToken cancellationToken);
}
public static class Microsoft.VisualStudio.Services.Commerce.CsmResourceIds : object {
    public static string AreaId;
    public static string AreaName;
    public static string ExtensionResourceResource;
    public static Guid ExtensionResourceLocationId;
    public static string ExtensionResourceGroupResource;
    public static Guid ExtensionResourceGroupLocationId;
    public static string AccountResourceResource;
    public static Guid AccountResourceResourceLocationId;
    public static string AccountResourceGroupResource;
    public static Guid AccountResourceGroupLocationId;
    public static string SubscriptionResourceGroupResource;
    public static Guid SubscriptionResourceGroupLocationId;
    public static string AccountResourceOperationsResource;
    public static Guid AccountResourceOperationsLocationId;
    public static string NameAvailabilityResource;
    public static Guid NameAvailabilityResourceLocationId;
    public static string SubscriptionEventsResource;
    public static Guid SubscriptionEventsLocationId;
    public static string ResourceGroupsResourceName;
    public static Guid ResourceGroupsResourceLocationId;
    private static CsmResourceIds();
}
public class Microsoft.VisualStudio.Services.Commerce.CsmResourceProviderHttpClient : CsmResourceProviderHttpClientBase {
    public CsmResourceProviderHttpClient(Uri baseUrl, VssCredentials credentials);
    public CsmResourceProviderHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public CsmResourceProviderHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public CsmResourceProviderHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    public CsmResourceProviderHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public virtual Task`1<AccountResource> Accounts_CreateOrUpdateAsync(AccountResourceRequest requestData, Guid subscriptionId, string resourceGroupName, string resourceName, object userState, CancellationToken cancellationToken);
    public virtual Task`1<AccountResource> Accounts_CreateAsync(AccountResourceRequest requestData, Guid subscriptionId, string resourceGroupName, string resourceName, string upn, string domain, object userState, CancellationToken cancellationToken);
    public AccountResource Accounts_Get(Guid subscriptionId, string resourceGroupName, string resourceName, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.CsmResourceProviderHttpClient/<MoveResourcesAsync>d__8")]
public virtual Task MoveResourcesAsync(ResourcesMoveRequest resourcesMoveRequest, Guid subscriptionId, string resourceGroupName, string operationName, string upn, string domain, object userState, CancellationToken cancellationToken);
}
[ResourceAreaAttribute("2900E97E-7BBD-4D87-95EE-BE54611B6184")]
public abstract class Microsoft.VisualStudio.Services.Commerce.CsmResourceProviderHttpClientBase : VssHttpClientBase {
    public CsmResourceProviderHttpClientBase(Uri baseUrl, VssCredentials credentials);
    public CsmResourceProviderHttpClientBase(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public CsmResourceProviderHttpClientBase(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public CsmResourceProviderHttpClientBase(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public CsmResourceProviderHttpClientBase(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    public virtual Task`1<AccountResource> Accounts_CreateOrUpdateAsync(AccountResourceRequest requestData, Guid subscriptionId, string resourceGroupName, string resourceName, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.CsmResourceProviderHttpClientBase/<Accounts_DeleteAsync>d__6")]
public virtual Task Accounts_DeleteAsync(Guid subscriptionId, string resourceGroupName, string resourceName, object userState, CancellationToken cancellationToken);
    public virtual Task`1<AccountResource> Accounts_GetAsync(Guid subscriptionId, string resourceGroupName, string resourceName, object userState, CancellationToken cancellationToken);
    public virtual Task`1<AccountResource> Accounts_UpdateAsync(AccountTagRequest requestData, Guid subscriptionId, string resourceGroupName, string resourceName, object userState, CancellationToken cancellationToken);
    public virtual Task`1<AccountResourceListResult> Accounts_ListByResourceGroupAsync(Guid subscriptionId, string resourceGroupName, object userState, CancellationToken cancellationToken);
    public virtual Task`1<OperationListResult> Operations_ListAsync(object userState, CancellationToken cancellationToken);
    public virtual Task`1<ExtensionResource> Extensions_CreateAsync(ExtensionResourceRequest requestData, Guid subscriptionId, string resourceGroupName, string accountResourceName, string extensionResourceName, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.CsmResourceProviderHttpClientBase/<Extensions_DeleteAsync>d__12")]
public virtual Task Extensions_DeleteAsync(Guid subscriptionId, string resourceGroupName, string accountResourceName, string extensionResourceName, object userState, CancellationToken cancellationToken);
    public virtual Task`1<ExtensionResource> Extensions_GetAsync(Guid subscriptionId, string resourceGroupName, string accountResourceName, string extensionResourceName, object userState, CancellationToken cancellationToken);
    public virtual Task`1<ExtensionResource> Extensions_UpdateAsync(ExtensionResourceRequest requestData, Guid subscriptionId, string resourceGroupName, string accountResourceName, string extensionResourceName, object userState, CancellationToken cancellationToken);
    public virtual Task`1<ExtensionResourceListResult> Extensions_ListByAccountAsync(Guid subscriptionId, string resourceGroupName, string accountResourceName, object userState, CancellationToken cancellationToken);
    public virtual Task`1<CheckNameAvailabilityResult> Accounts_CheckNameAvailabilityAsync(CheckNameAvailabilityParameter request, Guid subscriptionId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.CsmResourceProviderHttpClientBase/<MoveResourcesAsync>d__17")]
public virtual Task MoveResourcesAsync(ResourcesMoveRequest resourcesMoveRequest, Guid subscriptionId, string resourceGroupName, string operationName, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Commerce.CsmResourceProviderHttpClientBase/<HandleNotificationAsync>d__18")]
[EditorBrowsableAttribute("1")]
public virtual Task HandleNotificationAsync(CsmSubscriptionRequest requestData, Guid subscriptionId, object userState, CancellationToken cancellationToken);
    public virtual Task`1<CsmSubscriptionResourceListResult> SubscriptionResources_ListAsync(Guid subscriptionId, object userState, CancellationToken cancellationToken);
}
public static class Microsoft.VisualStudio.Services.Commerce.CsmResourceProviderResourceIds : object {
    public static string AreaId;
    public static string AreaName;
    public static string ExtensionResourceResource;
    public static Guid ExtensionResourceLocationId;
    public static string ExtensionResourceGroupResource;
    public static Guid ExtensionResourceGroupLocationId;
    public static string AccountResourceResource;
    public static Guid AccountResourceResourceLocationId;
    public static string AccountResourceGroupResource;
    public static Guid AccountResourceGroupLocationId;
    public static string SubscriptionResourceGroupResource;
    public static Guid SubscriptionResourceGroupLocationId;
    public static string AccountResourceOperationsResource;
    public static Guid AccountResourceOperationsLocationId;
    public static string NameAvailabilityResource;
    public static Guid NameAvailabilityResourceLocationId;
    public static string SubscriptionEventsResource;
    public static Guid SubscriptionEventsLocationId;
    public static string ResourceGroupsResource;
    public static Guid ResourceGroupsResourceLocationId;
    private static CsmResourceProviderResourceIds();
}
public class Microsoft.VisualStudio.Services.Commerce.CsmSubscriptionRequest : object {
    private static string QuotaIdKey;
    private static String[] FreeTierQuotaIdentifiers;
    [CompilerGeneratedAttribute]
private CsmSubscriptionState <State>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <RegistrationDate>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <SubscriptionId>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private string <QuotaId>k__BackingField;
    [CompilerGeneratedAttribute]
private SubscriptionSource <Source>k__BackingField;
    public CsmSubscriptionState State { get; public set; }
    public DateTime RegistrationDate { get; public set; }
    public Guid SubscriptionId { get; public set; }
    public Dictionary`2<string, object> Properties { get; public set; }
    public string QuotaId { get; private set; }
    public SubscriptionSource Source { get; public set; }
    private static CsmSubscriptionRequest();
    [CompilerGeneratedAttribute]
public CsmSubscriptionState get_State();
    [CompilerGeneratedAttribute]
public void set_State(CsmSubscriptionState value);
    [CompilerGeneratedAttribute]
public DateTime get_RegistrationDate();
    [CompilerGeneratedAttribute]
public void set_RegistrationDate(DateTime value);
    [CompilerGeneratedAttribute]
public Guid get_SubscriptionId();
    [CompilerGeneratedAttribute]
public void set_SubscriptionId(Guid value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, object> get_Properties();
    [CompilerGeneratedAttribute]
public void set_Properties(Dictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public string get_QuotaId();
    [CompilerGeneratedAttribute]
private void set_QuotaId(string value);
    [CompilerGeneratedAttribute]
public SubscriptionSource get_Source();
    [CompilerGeneratedAttribute]
public void set_Source(SubscriptionSource value);
    public bool AdjustData();
    public bool IsValid();
    public virtual string ToString();
}
public class Microsoft.VisualStudio.Services.Commerce.CsmSubscriptionResource : Resource {
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <properties>k__BackingField;
    public Dictionary`2<string, string> properties { get; public set; }
    public CsmSubscriptionResource(string id, string name, string type);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_properties();
    [CompilerGeneratedAttribute]
public void set_properties(Dictionary`2<string, string> value);
}
public class Microsoft.VisualStudio.Services.Commerce.CsmSubscriptionResourceListResult : object {
    [CompilerGeneratedAttribute]
private CsmSubscriptionResource[] <Value>k__BackingField;
    public CsmSubscriptionResource[] Value { get; public set; }
    [CompilerGeneratedAttribute]
public CsmSubscriptionResource[] get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(CsmSubscriptionResource[] value);
}
public enum Microsoft.VisualStudio.Services.Commerce.CsmSubscriptionState : Enum {
    public int value__;
    public static CsmSubscriptionState Unknown;
    public static CsmSubscriptionState Registered;
    public static CsmSubscriptionState Unregistered;
    public static CsmSubscriptionState Suspended;
    public static CsmSubscriptionState Deleted;
    public static CsmSubscriptionState Warned;
    public static CsmSubscriptionState PastDue;
    public static CsmSubscriptionState Expired;
}
[DataContractAttribute]
[ClientIncludeModelAttribute]
public enum Microsoft.VisualStudio.Services.Commerce.DefaultAccessLevel : Enum {
    public int value__;
    public static DefaultAccessLevel Stakeholder;
    public static DefaultAccessLevel Basic;
}
public class Microsoft.VisualStudio.Services.Commerce.ExtensionResource : Resource {
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <properties>k__BackingField;
    [CompilerGeneratedAttribute]
private ExtensionResourcePlan <plan>k__BackingField;
    public Dictionary`2<string, string> properties { get; public set; }
    public ExtensionResourcePlan plan { get; public set; }
    public ExtensionResource(string id, string name, string type);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_properties();
    [CompilerGeneratedAttribute]
public void set_properties(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public ExtensionResourcePlan get_plan();
    [CompilerGeneratedAttribute]
public void set_plan(ExtensionResourcePlan value);
}
public class Microsoft.VisualStudio.Services.Commerce.ExtensionResourceListResult : object {
    [CompilerGeneratedAttribute]
private ExtensionResource[] <Value>k__BackingField;
    public ExtensionResource[] Value { get; public set; }
    [CompilerGeneratedAttribute]
public ExtensionResource[] get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(ExtensionResource[] value);
}
public class Microsoft.VisualStudio.Services.Commerce.ExtensionResourcePlan : object {
    [CompilerGeneratedAttribute]
private string <name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <publisher>k__BackingField;
    [CompilerGeneratedAttribute]
private string <product>k__BackingField;
    [CompilerGeneratedAttribute]
private string <promotionCode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <version>k__BackingField;
    public string name { get; public set; }
    public string publisher { get; public set; }
    public string product { get; public set; }
    public string promotionCode { get; public set; }
    public string version { get; public set; }
    [CompilerGeneratedAttribute]
public string get_name();
    [CompilerGeneratedAttribute]
public void set_name(string value);
    [CompilerGeneratedAttribute]
public string get_publisher();
    [CompilerGeneratedAttribute]
public void set_publisher(string value);
    [CompilerGeneratedAttribute]
public string get_product();
    [CompilerGeneratedAttribute]
public void set_product(string value);
    [CompilerGeneratedAttribute]
public string get_promotionCode();
    [CompilerGeneratedAttribute]
public void set_promotionCode(string value);
    [CompilerGeneratedAttribute]
public string get_version();
    [CompilerGeneratedAttribute]
public void set_version(string value);
    public virtual string ToString();
}
public class Microsoft.VisualStudio.Services.Commerce.ExtensionResourceRequest : object {
    [CompilerGeneratedAttribute]
private string <Location>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Tags>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private ExtensionResourcePlan <Plan>k__BackingField;
    public string Location { get; public set; }
    public Dictionary`2<string, string> Tags { get; public set; }
    public Dictionary`2<string, string> Properties { get; public set; }
    public ExtensionResourcePlan Plan { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Location();
    [CompilerGeneratedAttribute]
public void set_Location(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Tags();
    [CompilerGeneratedAttribute]
public void set_Tags(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Properties();
    [CompilerGeneratedAttribute]
public void set_Properties(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public ExtensionResourcePlan get_Plan();
    [CompilerGeneratedAttribute]
public void set_Plan(ExtensionResourcePlan value);
}
public interface Microsoft.VisualStudio.Services.Commerce.IAzureSubscription {
    public Guid Id { get; public set; }
    public SubscriptionStatus Status { get; public set; }
    public AccountProviderNamespace Namespace { get; public set; }
    public Nullable`1<AzureOfferType> OfferType { get; public set; }
    public SubscriptionSource Source { get; public set; }
    public int AnniversaryDay { get; public set; }
    public DateTime Created { get; public set; }
    public DateTime LastUpdated { get; public set; }
    public abstract virtual Guid get_Id();
    public abstract virtual void set_Id(Guid value);
    public abstract virtual SubscriptionStatus get_Status();
    public abstract virtual void set_Status(SubscriptionStatus value);
    public abstract virtual AccountProviderNamespace get_Namespace();
    public abstract virtual void set_Namespace(AccountProviderNamespace value);
    public abstract virtual Nullable`1<AzureOfferType> get_OfferType();
    public abstract virtual void set_OfferType(Nullable`1<AzureOfferType> value);
    public abstract virtual SubscriptionSource get_Source();
    public abstract virtual void set_Source(SubscriptionSource value);
    public abstract virtual int get_AnniversaryDay();
    public abstract virtual void set_AnniversaryDay(int value);
    public abstract virtual DateTime get_Created();
    public abstract virtual void set_Created(DateTime value);
    public abstract virtual DateTime get_LastUpdated();
    public abstract virtual void set_LastUpdated(DateTime value);
}
public interface Microsoft.VisualStudio.Services.Commerce.ICommerceEvent {
    public string EventId { get; public set; }
    public DateTime EventTime { get; public set; }
    public string EventName { get; public set; }
    public Guid OrganizationId { get; public set; }
    public string OrganizationName { get; public set; }
    public Guid CollectionId { get; public set; }
    public string CollectionName { get; public set; }
    public Guid SubscriptionId { get; public set; }
    public string MeterName { get; public set; }
    public string GalleryId { get; public set; }
    public int CommittedQuantity { get; public set; }
    public int CurrentQuantity { get; public set; }
    public int PreviousQuantity { get; public set; }
    public double BilledQuantity { get; public set; }
    public int IncludedQuantity { get; public set; }
    public Nullable`1<int> PreviousIncludedQuantity { get; public set; }
    public int MaxQuantity { get; public set; }
    public Nullable`1<int> PreviousMaxQuantity { get; public set; }
    public string RenewalGroup { get; public set; }
    public string EventSource { get; public set; }
    public string Environment { get; public set; }
    public Guid UserIdentity { get; public set; }
    public Guid ServiceIdentity { get; public set; }
    public Nullable`1<DateTime> TrialStartDate { get; public set; }
    public Nullable`1<DateTime> TrialEndDate { get; public set; }
    public Nullable`1<DateTime> EffectiveDate { get; public set; }
    public string Version { get; public set; }
    public abstract virtual string get_EventId();
    public abstract virtual void set_EventId(string value);
    public abstract virtual DateTime get_EventTime();
    public abstract virtual void set_EventTime(DateTime value);
    public abstract virtual string get_EventName();
    public abstract virtual void set_EventName(string value);
    public abstract virtual Guid get_OrganizationId();
    public abstract virtual void set_OrganizationId(Guid value);
    public abstract virtual string get_OrganizationName();
    public abstract virtual void set_OrganizationName(string value);
    public abstract virtual Guid get_CollectionId();
    public abstract virtual void set_CollectionId(Guid value);
    public abstract virtual string get_CollectionName();
    public abstract virtual void set_CollectionName(string value);
    public abstract virtual Guid get_SubscriptionId();
    public abstract virtual void set_SubscriptionId(Guid value);
    public abstract virtual string get_MeterName();
    public abstract virtual void set_MeterName(string value);
    public abstract virtual string get_GalleryId();
    public abstract virtual void set_GalleryId(string value);
    public abstract virtual int get_CommittedQuantity();
    public abstract virtual void set_CommittedQuantity(int value);
    public abstract virtual int get_CurrentQuantity();
    public abstract virtual void set_CurrentQuantity(int value);
    public abstract virtual int get_PreviousQuantity();
    public abstract virtual void set_PreviousQuantity(int value);
    public abstract virtual double get_BilledQuantity();
    public abstract virtual void set_BilledQuantity(double value);
    public abstract virtual int get_IncludedQuantity();
    public abstract virtual void set_IncludedQuantity(int value);
    public abstract virtual Nullable`1<int> get_PreviousIncludedQuantity();
    public abstract virtual void set_PreviousIncludedQuantity(Nullable`1<int> value);
    public abstract virtual int get_MaxQuantity();
    public abstract virtual void set_MaxQuantity(int value);
    public abstract virtual Nullable`1<int> get_PreviousMaxQuantity();
    public abstract virtual void set_PreviousMaxQuantity(Nullable`1<int> value);
    public abstract virtual string get_RenewalGroup();
    public abstract virtual void set_RenewalGroup(string value);
    public abstract virtual string get_EventSource();
    public abstract virtual void set_EventSource(string value);
    public abstract virtual string get_Environment();
    public abstract virtual void set_Environment(string value);
    public abstract virtual Guid get_UserIdentity();
    public abstract virtual void set_UserIdentity(Guid value);
    public abstract virtual Guid get_ServiceIdentity();
    public abstract virtual void set_ServiceIdentity(Guid value);
    public abstract virtual Nullable`1<DateTime> get_TrialStartDate();
    public abstract virtual void set_TrialStartDate(Nullable`1<DateTime> value);
    public abstract virtual Nullable`1<DateTime> get_TrialEndDate();
    public abstract virtual void set_TrialEndDate(Nullable`1<DateTime> value);
    public abstract virtual Nullable`1<DateTime> get_EffectiveDate();
    public abstract virtual void set_EffectiveDate(Nullable`1<DateTime> value);
    public abstract virtual string get_Version();
    public abstract virtual void set_Version(string value);
}
public interface Microsoft.VisualStudio.Services.Commerce.ICommercePackage {
    public IEnumerable`1<OfferMeter> OfferMeters { get; public set; }
    public IEnumerable`1<OfferSubscription> OfferSubscriptions { get; public set; }
    public IDictionary`2<string, string> Configuration { get; public set; }
    public abstract virtual IEnumerable`1<OfferMeter> get_OfferMeters();
    public abstract virtual void set_OfferMeters(IEnumerable`1<OfferMeter> value);
    public abstract virtual IEnumerable`1<OfferSubscription> get_OfferSubscriptions();
    public abstract virtual void set_OfferSubscriptions(IEnumerable`1<OfferSubscription> value);
    public abstract virtual IDictionary`2<string, string> get_Configuration();
    public abstract virtual void set_Configuration(IDictionary`2<string, string> value);
}
[ExceptionMappingAttribute("0.0", "3.0", "InvalidResourceException", "Microsoft.VisualStudio.Services.Commerce.InvalidResourceException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Commerce.InvalidResourceException : CommerceException {
    public InvalidResourceException(string message);
    public InvalidResourceException(string message, Exception innerException);
}
public interface Microsoft.VisualStudio.Services.Commerce.IOfferMeter {
    public int MeterId { get; public set; }
    public string Name { get; public set; }
    public ResourceBillingMode BillingMode { get; public set; }
    public MeterBillingState BillingState { get; public set; }
    public MeterCategory Category { get; public set; }
    public int CommittedQuantity { get; public set; }
    public int CurrentQuantity { get; public set; }
    public string GalleryId { get; public set; }
    public int IncludedQuantity { get; public set; }
    public int MaximumQuantity { get; public set; }
    public int AbsoluteMaximumQuantity { get; public set; }
    public OfferScope OfferScope { get; public set; }
    public Guid PlatformMeterId { get; public set; }
    public MeterRenewalFrequecy RenewalFrequency { get; public set; }
    public MeterState Status { get; public set; }
    public int TrialCycles { get; public set; }
    public string Unit { get; public set; }
    public OfferMeterAssignmentModel AssignmentModel { get; public set; }
    public Nullable`1<DateTime> BillingStartDate { get; public set; }
    public byte TrialDays { get; public set; }
    public byte PreviewGraceDays { get; public set; }
    public BillingProvider BillingEntity { get; public set; }
    public MinimumRequiredServiceLevel MinimumRequiredAccessLevel { get; public set; }
    public MinimumRequiredServiceLevel IncludedInLicenseLevel { get; public set; }
    public IEnumerable`1<AzureOfferPlanDefinition> FixedQuantityPlans { get; public set; }
    public bool IsFirstParty { get; }
    public bool AutoAssignOnAccess { get; public set; }
    public abstract virtual int get_MeterId();
    public abstract virtual void set_MeterId(int value);
    public abstract virtual string get_Name();
    public abstract virtual void set_Name(string value);
    public abstract virtual ResourceBillingMode get_BillingMode();
    public abstract virtual void set_BillingMode(ResourceBillingMode value);
    public abstract virtual MeterBillingState get_BillingState();
    public abstract virtual void set_BillingState(MeterBillingState value);
    public abstract virtual MeterCategory get_Category();
    public abstract virtual void set_Category(MeterCategory value);
    public abstract virtual int get_CommittedQuantity();
    public abstract virtual void set_CommittedQuantity(int value);
    public abstract virtual int get_CurrentQuantity();
    public abstract virtual void set_CurrentQuantity(int value);
    public abstract virtual string get_GalleryId();
    public abstract virtual void set_GalleryId(string value);
    public abstract virtual int get_IncludedQuantity();
    public abstract virtual void set_IncludedQuantity(int value);
    public abstract virtual int get_MaximumQuantity();
    public abstract virtual void set_MaximumQuantity(int value);
    public abstract virtual int get_AbsoluteMaximumQuantity();
    public abstract virtual void set_AbsoluteMaximumQuantity(int value);
    public abstract virtual OfferScope get_OfferScope();
    public abstract virtual void set_OfferScope(OfferScope value);
    public abstract virtual Guid get_PlatformMeterId();
    public abstract virtual void set_PlatformMeterId(Guid value);
    public abstract virtual MeterRenewalFrequecy get_RenewalFrequency();
    public abstract virtual void set_RenewalFrequency(MeterRenewalFrequecy value);
    public abstract virtual MeterState get_Status();
    public abstract virtual void set_Status(MeterState value);
    public abstract virtual int get_TrialCycles();
    public abstract virtual void set_TrialCycles(int value);
    public abstract virtual string get_Unit();
    public abstract virtual void set_Unit(string value);
    public abstract virtual OfferMeterAssignmentModel get_AssignmentModel();
    public abstract virtual void set_AssignmentModel(OfferMeterAssignmentModel value);
    public abstract virtual Nullable`1<DateTime> get_BillingStartDate();
    public abstract virtual void set_BillingStartDate(Nullable`1<DateTime> value);
    public abstract virtual byte get_TrialDays();
    public abstract virtual void set_TrialDays(byte value);
    public abstract virtual byte get_PreviewGraceDays();
    public abstract virtual void set_PreviewGraceDays(byte value);
    public abstract virtual BillingProvider get_BillingEntity();
    public abstract virtual void set_BillingEntity(BillingProvider value);
    public abstract virtual MinimumRequiredServiceLevel get_MinimumRequiredAccessLevel();
    public abstract virtual void set_MinimumRequiredAccessLevel(MinimumRequiredServiceLevel value);
    public abstract virtual MinimumRequiredServiceLevel get_IncludedInLicenseLevel();
    public abstract virtual void set_IncludedInLicenseLevel(MinimumRequiredServiceLevel value);
    public abstract virtual IEnumerable`1<AzureOfferPlanDefinition> get_FixedQuantityPlans();
    public abstract virtual void set_FixedQuantityPlans(IEnumerable`1<AzureOfferPlanDefinition> value);
    public abstract virtual bool get_IsFirstParty();
    public abstract virtual bool get_AutoAssignOnAccess();
    public abstract virtual void set_AutoAssignOnAccess(bool value);
}
public interface Microsoft.VisualStudio.Services.Commerce.IOfferMeterPrice {
    public string MeterName { get; public set; }
    public string PlanName { get; public set; }
    public string Region { get; public set; }
    public string CurrencyCode { get; public set; }
    public double Quantity { get; public set; }
    public double Price { get; public set; }
    public abstract virtual string get_MeterName();
    public abstract virtual void set_MeterName(string value);
    public abstract virtual string get_PlanName();
    public abstract virtual void set_PlanName(string value);
    public abstract virtual string get_Region();
    public abstract virtual void set_Region(string value);
    public abstract virtual string get_CurrencyCode();
    public abstract virtual void set_CurrencyCode(string value);
    public abstract virtual double get_Quantity();
    public abstract virtual void set_Quantity(double value);
    public abstract virtual double get_Price();
    public abstract virtual void set_Price(double value);
}
public interface Microsoft.VisualStudio.Services.Commerce.IOfferSubscription {
    public OfferMeter OfferMeter { get; }
    public ResourceRenewalGroup RenewalGroup { get; }
    public int CommittedQuantity { get; }
    public Uri DisabledResourceActionLink { get; }
    public ResourceStatusReason DisabledReason { get; }
    public int IncludedQuantity { get; }
    public bool IsUseable { get; }
    public bool IsPaidBillingEnabled { get; }
    public int MaximumQuantity { get; }
    public DateTime ResetDate { get; }
    public Guid AzureSubscriptionId { get; public set; }
    public string AzureSubscriptionName { get; public set; }
    public SubscriptionStatus AzureSubscriptionState { get; public set; }
    public bool IsTrialOrPreview { get; public set; }
    public bool IsPreview { get; public set; }
    public bool IsPurchaseCanceled { get; public set; }
    public bool IsPurchasedDuringTrial { get; public set; }
    public Nullable`1<DateTime> TrialExpiryDate { get; public set; }
    public Nullable`1<DateTime> StartDate { get; public set; }
    public bool AutoAssignOnAccess { get; public set; }
    public abstract virtual OfferMeter get_OfferMeter();
    public abstract virtual ResourceRenewalGroup get_RenewalGroup();
    public abstract virtual int get_CommittedQuantity();
    public abstract virtual Uri get_DisabledResourceActionLink();
    public abstract virtual ResourceStatusReason get_DisabledReason();
    public abstract virtual int get_IncludedQuantity();
    public abstract virtual bool get_IsUseable();
    public abstract virtual bool get_IsPaidBillingEnabled();
    public abstract virtual int get_MaximumQuantity();
    public abstract virtual DateTime get_ResetDate();
    public abstract virtual Guid get_AzureSubscriptionId();
    public abstract virtual void set_AzureSubscriptionId(Guid value);
    public abstract virtual string get_AzureSubscriptionName();
    public abstract virtual void set_AzureSubscriptionName(string value);
    public abstract virtual SubscriptionStatus get_AzureSubscriptionState();
    public abstract virtual void set_AzureSubscriptionState(SubscriptionStatus value);
    public abstract virtual bool get_IsTrialOrPreview();
    public abstract virtual void set_IsTrialOrPreview(bool value);
    public abstract virtual bool get_IsPreview();
    public abstract virtual void set_IsPreview(bool value);
    public abstract virtual bool get_IsPurchaseCanceled();
    public abstract virtual void set_IsPurchaseCanceled(bool value);
    public abstract virtual bool get_IsPurchasedDuringTrial();
    public abstract virtual void set_IsPurchasedDuringTrial(bool value);
    public abstract virtual Nullable`1<DateTime> get_TrialExpiryDate();
    public abstract virtual void set_TrialExpiryDate(Nullable`1<DateTime> value);
    public abstract virtual Nullable`1<DateTime> get_StartDate();
    public abstract virtual void set_StartDate(Nullable`1<DateTime> value);
    public abstract virtual bool get_AutoAssignOnAccess();
    public abstract virtual void set_AutoAssignOnAccess(bool value);
}
public interface Microsoft.VisualStudio.Services.Commerce.IPurchasableOfferMeter {
    public OfferMeter OfferMeterDefinition { get; public set; }
    public IEnumerable`1<KeyValuePair`2<double, double>> MeterPricing { get; public set; }
    public DateTime EstimatedRenewalDate { get; public set; }
    public abstract virtual OfferMeter get_OfferMeterDefinition();
    public abstract virtual void set_OfferMeterDefinition(OfferMeter value);
    public abstract virtual IEnumerable`1<KeyValuePair`2<double, double>> get_MeterPricing();
    public abstract virtual void set_MeterPricing(IEnumerable`1<KeyValuePair`2<double, double>> value);
    public abstract virtual DateTime get_EstimatedRenewalDate();
    public abstract virtual void set_EstimatedRenewalDate(DateTime value);
}
public interface Microsoft.VisualStudio.Services.Commerce.ISubscriptionAccount {
    public Guid AccountId { get; public set; }
    public int AccountHostType { get; public set; }
    public string AccountName { get; public set; }
    public Nullable`1<Guid> SubscriptionId { get; public set; }
    public SubscriptionStatus SubscriptionStatus { get; public set; }
    public string ResourceGroupName { get; public set; }
    public string GeoLocation { get; public set; }
    public string Locale { get; public set; }
    public string RegionDisplayName { get; public set; }
    public IDictionary`2<Guid, Uri> ServiceUrls { get; public set; }
    public Guid AccountTenantId { get; public set; }
    public bool IsAccountOwner { get; public set; }
    public string ResourceName { get; public set; }
    public string SubscriptionName { get; public set; }
    public bool IsEligibleForPurchase { get; public set; }
    public bool IsPrepaidFundSubscription { get; public set; }
    public bool IsPricingAvailable { get; public set; }
    public string SubscriptionOfferCode { get; public set; }
    public Nullable`1<AzureOfferType> OfferType { get; public set; }
    public Nullable`1<Guid> SubscriptionTenantId { get; public set; }
    public Nullable`1<Guid> SubscriptionObjectId { get; public set; }
    public PurchaseErrorReason FailedPurchaseReason { get; public set; }
    public abstract virtual Guid get_AccountId();
    public abstract virtual void set_AccountId(Guid value);
    public abstract virtual int get_AccountHostType();
    public abstract virtual void set_AccountHostType(int value);
    public abstract virtual string get_AccountName();
    public abstract virtual void set_AccountName(string value);
    public abstract virtual Nullable`1<Guid> get_SubscriptionId();
    public abstract virtual void set_SubscriptionId(Nullable`1<Guid> value);
    public abstract virtual SubscriptionStatus get_SubscriptionStatus();
    public abstract virtual void set_SubscriptionStatus(SubscriptionStatus value);
    public abstract virtual string get_ResourceGroupName();
    public abstract virtual void set_ResourceGroupName(string value);
    public abstract virtual string get_GeoLocation();
    public abstract virtual void set_GeoLocation(string value);
    public abstract virtual string get_Locale();
    public abstract virtual void set_Locale(string value);
    public abstract virtual string get_RegionDisplayName();
    public abstract virtual void set_RegionDisplayName(string value);
    public abstract virtual IDictionary`2<Guid, Uri> get_ServiceUrls();
    public abstract virtual void set_ServiceUrls(IDictionary`2<Guid, Uri> value);
    public abstract virtual Guid get_AccountTenantId();
    public abstract virtual void set_AccountTenantId(Guid value);
    public abstract virtual bool get_IsAccountOwner();
    public abstract virtual void set_IsAccountOwner(bool value);
    public abstract virtual string get_ResourceName();
    public abstract virtual void set_ResourceName(string value);
    public abstract virtual string get_SubscriptionName();
    public abstract virtual void set_SubscriptionName(string value);
    public abstract virtual bool get_IsEligibleForPurchase();
    public abstract virtual void set_IsEligibleForPurchase(bool value);
    public abstract virtual bool get_IsPrepaidFundSubscription();
    public abstract virtual void set_IsPrepaidFundSubscription(bool value);
    public abstract virtual bool get_IsPricingAvailable();
    public abstract virtual void set_IsPricingAvailable(bool value);
    public abstract virtual string get_SubscriptionOfferCode();
    public abstract virtual void set_SubscriptionOfferCode(string value);
    public abstract virtual Nullable`1<AzureOfferType> get_OfferType();
    public abstract virtual void set_OfferType(Nullable`1<AzureOfferType> value);
    public abstract virtual Nullable`1<Guid> get_SubscriptionTenantId();
    public abstract virtual void set_SubscriptionTenantId(Nullable`1<Guid> value);
    public abstract virtual Nullable`1<Guid> get_SubscriptionObjectId();
    public abstract virtual void set_SubscriptionObjectId(Nullable`1<Guid> value);
    public abstract virtual PurchaseErrorReason get_FailedPurchaseReason();
    public abstract virtual void set_FailedPurchaseReason(PurchaseErrorReason value);
}
public interface Microsoft.VisualStudio.Services.Commerce.ISubscriptionResource {
    public ResourceName Name { get; }
    public int CommittedQuantity { get; }
    public Uri DisabledResourceActionLink { get; }
    public ResourceStatusReason DisabledReason { get; }
    public int IncludedQuantity { get; }
    public bool IsUseable { get; }
    public bool IsPaidBillingEnabled { get; }
    public int MaximumQuantity { get; }
    public DateTime ResetDate { get; }
    public abstract virtual ResourceName get_Name();
    public abstract virtual int get_CommittedQuantity();
    public abstract virtual Uri get_DisabledResourceActionLink();
    public abstract virtual ResourceStatusReason get_DisabledReason();
    public abstract virtual int get_IncludedQuantity();
    public abstract virtual bool get_IsUseable();
    public abstract virtual bool get_IsPaidBillingEnabled();
    public abstract virtual int get_MaximumQuantity();
    public abstract virtual DateTime get_ResetDate();
}
public interface Microsoft.VisualStudio.Services.Commerce.IUsageEventAggregate {
    public DateTime StartTime { get; public set; }
    public DateTime EndTime { get; public set; }
    public ResourceName Resource { get; public set; }
    public int Value { get; public set; }
    public abstract virtual DateTime get_StartTime();
    public abstract virtual void set_StartTime(DateTime value);
    public abstract virtual DateTime get_EndTime();
    public abstract virtual void set_EndTime(DateTime value);
    public abstract virtual ResourceName get_Resource();
    public abstract virtual void set_Resource(ResourceName value);
    public abstract virtual int get_Value();
    public abstract virtual void set_Value(int value);
}
public enum Microsoft.VisualStudio.Services.Commerce.MeterBillingState : Enum {
    public int value__;
    public static MeterBillingState Free;
    public static MeterBillingState Paid;
}
public enum Microsoft.VisualStudio.Services.Commerce.MeterCategory : Enum {
    public int value__;
    public static MeterCategory Legacy;
    public static MeterCategory Bundle;
    public static MeterCategory Extension;
}
public enum Microsoft.VisualStudio.Services.Commerce.MeterGroupType : Enum {
    public int value__;
    public static MeterGroupType License;
    public static MeterGroupType Build;
    public static MeterGroupType LoadTest;
    public static MeterGroupType Artifacts;
    public static MeterGroupType MSHostedCICDforMacOS;
    public static MeterGroupType MsHostedCICDforWindowsLinux;
}
public enum Microsoft.VisualStudio.Services.Commerce.MeterRenewalFrequecy : Enum {
    public int value__;
    public static MeterRenewalFrequecy None;
    public static MeterRenewalFrequecy Monthly;
    public static MeterRenewalFrequecy Annually;
}
public enum Microsoft.VisualStudio.Services.Commerce.MeterState : Enum {
    public int value__;
    public static MeterState Registered;
    public static MeterState Active;
    public static MeterState Retired;
    public static MeterState Deleted;
}
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.Commerce.MinimumRequiredServiceLevel : Enum {
    public int value__;
    [EnumMemberAttribute]
public static MinimumRequiredServiceLevel None;
    [EnumMemberAttribute]
public static MinimumRequiredServiceLevel Express;
    [EnumMemberAttribute]
public static MinimumRequiredServiceLevel Advanced;
    [EnumMemberAttribute]
public static MinimumRequiredServiceLevel AdvancedPlus;
    [EnumMemberAttribute]
public static MinimumRequiredServiceLevel Stakeholder;
}
[DebuggerDisplayAttribute("{MeterId} | {Name} | {GalleryId}")]
public class Microsoft.VisualStudio.Services.Commerce.OfferMeter : object {
    [CompilerGeneratedAttribute]
private int <MeterId>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <PlatformMeterId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GalleryId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private MeterRenewalFrequecy <RenewalFrequency>k__BackingField;
    [CompilerGeneratedAttribute]
private ResourceBillingMode <BillingMode>k__BackingField;
    [CompilerGeneratedAttribute]
private MeterCategory <Category>k__BackingField;
    [CompilerGeneratedAttribute]
private OfferScope <OfferScope>k__BackingField;
    [CompilerGeneratedAttribute]
private MeterBillingState <BillingState>k__BackingField;
    [CompilerGeneratedAttribute]
private MeterState <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Unit>k__BackingField;
    [CompilerGeneratedAttribute]
private OfferMeterAssignmentModel <AssignmentModel>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <BillingStartDate>k__BackingField;
    [CompilerGeneratedAttribute]
private byte <TrialDays>k__BackingField;
    [CompilerGeneratedAttribute]
private byte <PreviewGraceDays>k__BackingField;
    [CompilerGeneratedAttribute]
private int <IncludedQuantity>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CurrentQuantity>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CommittedQuantity>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaximumQuantity>k__BackingField;
    [CompilerGeneratedAttribute]
private int <AbsoluteMaximumQuantity>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TrialCycles>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AutoAssignOnAccess>k__BackingField;
    [CompilerGeneratedAttribute]
private BillingProvider <BillingEntity>k__BackingField;
    [CompilerGeneratedAttribute]
private MinimumRequiredServiceLevel <MinimumRequiredAccessLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private MinimumRequiredServiceLevel <IncludedInLicenseLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<AzureOfferPlanDefinition> <FixedQuantityPlans>k__BackingField;
    public int MeterId { get; public set; }
    public Guid PlatformMeterId { get; public set; }
    public string GalleryId { get; public set; }
    public string Name { get; public set; }
    public MeterRenewalFrequecy RenewalFrequency { get; public set; }
    public ResourceBillingMode BillingMode { get; public set; }
    public MeterCategory Category { get; public set; }
    public OfferScope OfferScope { get; public set; }
    public MeterBillingState BillingState { get; public set; }
    public MeterState Status { get; public set; }
    public string Unit { get; public set; }
    public OfferMeterAssignmentModel AssignmentModel { get; public set; }
    public Nullable`1<DateTime> BillingStartDate { get; public set; }
    public byte TrialDays { get; public set; }
    public byte PreviewGraceDays { get; public set; }
    public int IncludedQuantity { get; public set; }
    public int CurrentQuantity { get; public set; }
    public int CommittedQuantity { get; public set; }
    public int MaximumQuantity { get; public set; }
    public int AbsoluteMaximumQuantity { get; public set; }
    public int TrialCycles { get; public set; }
    public bool AutoAssignOnAccess { get; public set; }
    public BillingProvider BillingEntity { get; public set; }
    public MinimumRequiredServiceLevel MinimumRequiredAccessLevel { get; public set; }
    public MinimumRequiredServiceLevel IncludedInLicenseLevel { get; public set; }
    public IEnumerable`1<AzureOfferPlanDefinition> FixedQuantityPlans { get; public set; }
    public bool IsFirstParty { get; }
    [CompilerGeneratedAttribute]
public sealed virtual int get_MeterId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MeterId(int value);
    [CompilerGeneratedAttribute]
public sealed virtual Guid get_PlatformMeterId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PlatformMeterId(Guid value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_GalleryId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_GalleryId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Name(string value);
    [CompilerGeneratedAttribute]
public sealed virtual MeterRenewalFrequecy get_RenewalFrequency();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RenewalFrequency(MeterRenewalFrequecy value);
    [CompilerGeneratedAttribute]
public sealed virtual ResourceBillingMode get_BillingMode();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BillingMode(ResourceBillingMode value);
    [CompilerGeneratedAttribute]
public sealed virtual MeterCategory get_Category();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Category(MeterCategory value);
    [CompilerGeneratedAttribute]
public sealed virtual OfferScope get_OfferScope();
    [CompilerGeneratedAttribute]
public sealed virtual void set_OfferScope(OfferScope value);
    [CompilerGeneratedAttribute]
public sealed virtual MeterBillingState get_BillingState();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BillingState(MeterBillingState value);
    [CompilerGeneratedAttribute]
public sealed virtual MeterState get_Status();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Status(MeterState value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Unit();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Unit(string value);
    [CompilerGeneratedAttribute]
public sealed virtual OfferMeterAssignmentModel get_AssignmentModel();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AssignmentModel(OfferMeterAssignmentModel value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<DateTime> get_BillingStartDate();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BillingStartDate(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public sealed virtual byte get_TrialDays();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TrialDays(byte value);
    [CompilerGeneratedAttribute]
public sealed virtual byte get_PreviewGraceDays();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PreviewGraceDays(byte value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_IncludedQuantity();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IncludedQuantity(int value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_CurrentQuantity();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CurrentQuantity(int value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_CommittedQuantity();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CommittedQuantity(int value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_MaximumQuantity();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaximumQuantity(int value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_AbsoluteMaximumQuantity();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AbsoluteMaximumQuantity(int value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_TrialCycles();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TrialCycles(int value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_AutoAssignOnAccess();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AutoAssignOnAccess(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual BillingProvider get_BillingEntity();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BillingEntity(BillingProvider value);
    [CompilerGeneratedAttribute]
public sealed virtual MinimumRequiredServiceLevel get_MinimumRequiredAccessLevel();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MinimumRequiredAccessLevel(MinimumRequiredServiceLevel value);
    [CompilerGeneratedAttribute]
public sealed virtual MinimumRequiredServiceLevel get_IncludedInLicenseLevel();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IncludedInLicenseLevel(MinimumRequiredServiceLevel value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<AzureOfferPlanDefinition> get_FixedQuantityPlans();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FixedQuantityPlans(IEnumerable`1<AzureOfferPlanDefinition> value);
    public sealed virtual bool get_IsFirstParty();
    public sealed virtual bool Equals(OfferMeter meter);
    public OfferMeter Clone();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(OfferMeter left, OfferMeter right);
    public static bool op_Inequality(OfferMeter left, OfferMeter right);
}
public enum Microsoft.VisualStudio.Services.Commerce.OfferMeterAssignmentModel : Enum {
    public int value__;
    public static OfferMeterAssignmentModel Explicit;
    public static OfferMeterAssignmentModel Implicit;
}
[ExceptionMappingAttribute("0.0", "3.0", "OfferMeterNotFoundException", "Microsoft.VisualStudio.Services.Commerce.OfferMeterNotFoundException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Commerce.OfferMeterNotFoundException : CommerceException {
    public OfferMeterNotFoundException(string nameOrGalleryId);
}
public class Microsoft.VisualStudio.Services.Commerce.OfferMeterPrice : object {
    [CompilerGeneratedAttribute]
private string <MeterName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PlanName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Region>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CurrencyCode>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Quantity>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Price>k__BackingField;
    public string MeterName { get; public set; }
    public string PlanName { get; public set; }
    public string Region { get; public set; }
    public string CurrencyCode { get; public set; }
    public double Quantity { get; public set; }
    public double Price { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_MeterName();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MeterName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_PlanName();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PlanName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Region();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Region(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_CurrencyCode();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CurrencyCode(string value);
    [CompilerGeneratedAttribute]
public sealed virtual double get_Quantity();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Quantity(double value);
    [CompilerGeneratedAttribute]
public sealed virtual double get_Price();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Price(double value);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
public enum Microsoft.VisualStudio.Services.Commerce.OfferScope : Enum {
    public int value__;
    public static OfferScope Account;
    public static OfferScope User;
    public static OfferScope UserAccount;
}
[DebuggerDisplayAttribute("{OfferMeter?.Name} | {IncludedQuantity} | {CommittedQuantity}")]
public class Microsoft.VisualStudio.Services.Commerce.OfferSubscription : object {
    [CompilerGeneratedAttribute]
private OfferMeter <OfferMeter>k__BackingField;
    [CompilerGeneratedAttribute]
private ResourceRenewalGroup <RenewalGroup>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CommittedQuantity>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <DisabledResourceActionLink>k__BackingField;
    [CompilerGeneratedAttribute]
private ResourceStatusReason <DisabledReason>k__BackingField;
    [CompilerGeneratedAttribute]
private int <IncludedQuantity>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsUseable>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsPaidBillingEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaximumQuantity>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <ResetDate>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <AzureSubscriptionId>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <OfferSubscriptionId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AzureSubscriptionName>k__BackingField;
    [CompilerGeneratedAttribute]
private SubscriptionStatus <AzureSubscriptionState>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsTrialOrPreview>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsPreview>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsPurchaseCanceled>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsPurchasedDuringTrial>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <TrialExpiryDate>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <StartDate>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AutoAssignOnAccess>k__BackingField;
    public OfferMeter OfferMeter { get; public set; }
    public ResourceRenewalGroup RenewalGroup { get; public set; }
    public int CommittedQuantity { get; public set; }
    public Uri DisabledResourceActionLink { get; public set; }
    public ResourceStatusReason DisabledReason { get; public set; }
    public int IncludedQuantity { get; public set; }
    public bool IsUseable { get; public set; }
    public bool IsPaidBillingEnabled { get; public set; }
    public int MaximumQuantity { get; public set; }
    public DateTime ResetDate { get; public set; }
    public Guid AzureSubscriptionId { get; public set; }
    public Guid OfferSubscriptionId { get; public set; }
    public string AzureSubscriptionName { get; public set; }
    public SubscriptionStatus AzureSubscriptionState { get; public set; }
    public bool IsTrialOrPreview { get; public set; }
    public bool IsPreview { get; public set; }
    public bool IsPurchaseCanceled { get; public set; }
    public bool IsPurchasedDuringTrial { get; public set; }
    public Nullable`1<DateTime> TrialExpiryDate { get; public set; }
    public Nullable`1<DateTime> StartDate { get; public set; }
    public bool AutoAssignOnAccess { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual OfferMeter get_OfferMeter();
    [CompilerGeneratedAttribute]
public void set_OfferMeter(OfferMeter value);
    [CompilerGeneratedAttribute]
public sealed virtual ResourceRenewalGroup get_RenewalGroup();
    [CompilerGeneratedAttribute]
public void set_RenewalGroup(ResourceRenewalGroup value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_CommittedQuantity();
    [CompilerGeneratedAttribute]
public void set_CommittedQuantity(int value);
    [CompilerGeneratedAttribute]
public sealed virtual Uri get_DisabledResourceActionLink();
    [CompilerGeneratedAttribute]
public void set_DisabledResourceActionLink(Uri value);
    [CompilerGeneratedAttribute]
public sealed virtual ResourceStatusReason get_DisabledReason();
    [CompilerGeneratedAttribute]
public void set_DisabledReason(ResourceStatusReason value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_IncludedQuantity();
    [CompilerGeneratedAttribute]
public void set_IncludedQuantity(int value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsUseable();
    [CompilerGeneratedAttribute]
public void set_IsUseable(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsPaidBillingEnabled();
    [CompilerGeneratedAttribute]
public void set_IsPaidBillingEnabled(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_MaximumQuantity();
    [CompilerGeneratedAttribute]
public void set_MaximumQuantity(int value);
    [CompilerGeneratedAttribute]
public sealed virtual DateTime get_ResetDate();
    [CompilerGeneratedAttribute]
public void set_ResetDate(DateTime value);
    [CompilerGeneratedAttribute]
public sealed virtual Guid get_AzureSubscriptionId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AzureSubscriptionId(Guid value);
    [CompilerGeneratedAttribute]
public Guid get_OfferSubscriptionId();
    [CompilerGeneratedAttribute]
public void set_OfferSubscriptionId(Guid value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_AzureSubscriptionName();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AzureSubscriptionName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual SubscriptionStatus get_AzureSubscriptionState();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AzureSubscriptionState(SubscriptionStatus value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsTrialOrPreview();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IsTrialOrPreview(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsPreview();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IsPreview(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsPurchaseCanceled();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IsPurchaseCanceled(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsPurchasedDuringTrial();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IsPurchasedDuringTrial(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<DateTime> get_TrialExpiryDate();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TrialExpiryDate(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<DateTime> get_StartDate();
    [CompilerGeneratedAttribute]
public sealed virtual void set_StartDate(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_AutoAssignOnAccess();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AutoAssignOnAccess(bool value);
}
public class Microsoft.VisualStudio.Services.Commerce.Operation : object {
    private OperationProperties displayProperties;
    [CompilerGeneratedAttribute]
private string <name>k__BackingField;
    public string name { get; public set; }
    public OperationProperties display { get; public set; }
    public Operation(string provider, string resource, string operation, string description);
    [CompilerGeneratedAttribute]
public string get_name();
    [CompilerGeneratedAttribute]
public void set_name(string value);
    public OperationProperties get_display();
    public void set_display(OperationProperties value);
    public static Operation GetOperationDescriptorForRPandAction(ResourceProvider resourceProvider, OperationAction action);
    public static Operation GetOperationDescriptorForRPandAction(ResourceProvider rootResourceProvider, ResourceProvider childResourceProvider, OperationAction action);
}
public enum Microsoft.VisualStudio.Services.Commerce.OperationAction : Enum {
    public int value__;
    public static OperationAction Write;
    public static OperationAction Delete;
    public static OperationAction Read;
    public static OperationAction Action;
}
public class Microsoft.VisualStudio.Services.Commerce.OperationListResult : object {
    [CompilerGeneratedAttribute]
private List`1<Operation> <value>k__BackingField;
    public List`1<Operation> value { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<Operation> get_value();
    [CompilerGeneratedAttribute]
public void set_value(List`1<Operation> value);
}
public class Microsoft.VisualStudio.Services.Commerce.OperationProperties : ValueType {
    public string provider;
    public string resource;
    public string operation;
    public string description;
    public OperationProperties(string providerStr, string resourceStr, string operationStr, string descriptionStr);
}
public class Microsoft.VisualStudio.Services.Commerce.PurchasableOfferMeter : object {
    [CompilerGeneratedAttribute]
private OfferMeter <OfferMeterDefinition>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<KeyValuePair`2<double, double>> <MeterPricing>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <EstimatedRenewalDate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CurrencyCode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LocaleCode>k__BackingField;
    public OfferMeter OfferMeterDefinition { get; public set; }
    public IEnumerable`1<KeyValuePair`2<double, double>> MeterPricing { get; public set; }
    public DateTime EstimatedRenewalDate { get; public set; }
    public string CurrencyCode { get; public set; }
    public string LocaleCode { get; public set; }
    [CompilerGeneratedAttribute]
public OfferMeter get_OfferMeterDefinition();
    [CompilerGeneratedAttribute]
public void set_OfferMeterDefinition(OfferMeter value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<KeyValuePair`2<double, double>> get_MeterPricing();
    [CompilerGeneratedAttribute]
public void set_MeterPricing(IEnumerable`1<KeyValuePair`2<double, double>> value);
    [CompilerGeneratedAttribute]
public DateTime get_EstimatedRenewalDate();
    [CompilerGeneratedAttribute]
public void set_EstimatedRenewalDate(DateTime value);
    [CompilerGeneratedAttribute]
public string get_CurrencyCode();
    [CompilerGeneratedAttribute]
public void set_CurrencyCode(string value);
    [CompilerGeneratedAttribute]
public string get_LocaleCode();
    [CompilerGeneratedAttribute]
public void set_LocaleCode(string value);
}
public enum Microsoft.VisualStudio.Services.Commerce.PurchaseErrorReason : Enum {
    public int value__;
    public static PurchaseErrorReason None;
    public static PurchaseErrorReason MonetaryLimitSet;
    public static PurchaseErrorReason InvalidOfferCode;
    public static PurchaseErrorReason NotAdminOrCoAdmin;
    public static PurchaseErrorReason InvalidRegionPurchase;
    public static PurchaseErrorReason PaymentInstrumentNotCreditCard;
    public static PurchaseErrorReason InvalidOfferRegion;
    public static PurchaseErrorReason UnsupportedSubscription;
    public static PurchaseErrorReason DisabledSubscription;
    public static PurchaseErrorReason InvalidUser;
    public static PurchaseErrorReason NotSubscriptionUser;
    public static PurchaseErrorReason UnsupportedSubscriptionCsp;
    public static PurchaseErrorReason TemporarySpendingLimit;
    public static PurchaseErrorReason AzureServiceError;
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Commerce.PurchaseRequest : object {
    [CompilerGeneratedAttribute]
private string <OfferMeterName>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Quantity>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Reason>k__BackingField;
    [CompilerGeneratedAttribute]
private PurchaseRequestResponse <Response>k__BackingField;
    [DataMemberAttribute]
public string OfferMeterName { get; public set; }
    [DataMemberAttribute]
public int Quantity { get; public set; }
    [DataMemberAttribute]
public string Reason { get; public set; }
    [DataMemberAttribute]
public PurchaseRequestResponse Response { get; public set; }
    [CompilerGeneratedAttribute]
public string get_OfferMeterName();
    [CompilerGeneratedAttribute]
public void set_OfferMeterName(string value);
    [CompilerGeneratedAttribute]
public int get_Quantity();
    [CompilerGeneratedAttribute]
public void set_Quantity(int value);
    [CompilerGeneratedAttribute]
public string get_Reason();
    [CompilerGeneratedAttribute]
public void set_Reason(string value);
    [CompilerGeneratedAttribute]
public PurchaseRequestResponse get_Response();
    [CompilerGeneratedAttribute]
public void set_Response(PurchaseRequestResponse value);
}
public enum Microsoft.VisualStudio.Services.Commerce.PurchaseRequestResponse : Enum {
    public int value__;
    public static PurchaseRequestResponse None;
    public static PurchaseRequestResponse Approved;
    public static PurchaseRequestResponse Denied;
}
public class Microsoft.VisualStudio.Services.Commerce.ReportingEvent : object {
    [CompilerGeneratedAttribute]
private string <EventId>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <EventTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EventName>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <OrganizationId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OrganizationName>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <CollectionId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CollectionName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Environment>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <UserIdentity>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <ServiceIdentity>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private SerializableDictionary`2<string, string> <Properties>k__BackingField;
    public string EventId { get; public set; }
    public DateTime EventTime { get; public set; }
    public string EventName { get; public set; }
    public Guid OrganizationId { get; public set; }
    public string OrganizationName { get; public set; }
    public Guid CollectionId { get; public set; }
    public string CollectionName { get; public set; }
    public string Environment { get; public set; }
    public Guid UserIdentity { get; public set; }
    public Guid ServiceIdentity { get; public set; }
    public string Version { get; public set; }
    public SerializableDictionary`2<string, string> Properties { get; public set; }
    [CompilerGeneratedAttribute]
public string get_EventId();
    [CompilerGeneratedAttribute]
public void set_EventId(string value);
    [CompilerGeneratedAttribute]
public DateTime get_EventTime();
    [CompilerGeneratedAttribute]
public void set_EventTime(DateTime value);
    [CompilerGeneratedAttribute]
public string get_EventName();
    [CompilerGeneratedAttribute]
public void set_EventName(string value);
    [CompilerGeneratedAttribute]
public Guid get_OrganizationId();
    [CompilerGeneratedAttribute]
public void set_OrganizationId(Guid value);
    [CompilerGeneratedAttribute]
public string get_OrganizationName();
    [CompilerGeneratedAttribute]
public void set_OrganizationName(string value);
    [CompilerGeneratedAttribute]
public Guid get_CollectionId();
    [CompilerGeneratedAttribute]
public void set_CollectionId(Guid value);
    [CompilerGeneratedAttribute]
public string get_CollectionName();
    [CompilerGeneratedAttribute]
public void set_CollectionName(string value);
    [CompilerGeneratedAttribute]
public string get_Environment();
    [CompilerGeneratedAttribute]
public void set_Environment(string value);
    [CompilerGeneratedAttribute]
public Guid get_UserIdentity();
    [CompilerGeneratedAttribute]
public void set_UserIdentity(Guid value);
    [CompilerGeneratedAttribute]
public Guid get_ServiceIdentity();
    [CompilerGeneratedAttribute]
public void set_ServiceIdentity(Guid value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
    [CompilerGeneratedAttribute]
public SerializableDictionary`2<string, string> get_Properties();
    [CompilerGeneratedAttribute]
public void set_Properties(SerializableDictionary`2<string, string> value);
}
[ExceptionMappingAttribute("0.0", "3.0", "ReportingViewInvalidFilterException", "Microsoft.VisualStudio.Services.Commerce.ReportingViewInvalidFilterException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Commerce.ReportingViewInvalidFilterException : CommerceException {
    public ReportingViewInvalidFilterException(string message);
    public ReportingViewInvalidFilterException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "ReportingViewNotSupportedException", "Microsoft.VisualStudio.Services.Commerce.ReportingViewNotSupportedException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Commerce.ReportingViewNotSupportedException : CommerceException {
    public ReportingViewNotSupportedException(string message);
    public ReportingViewNotSupportedException(string message, Exception innerException);
}
public class Microsoft.VisualStudio.Services.Commerce.Resource : object {
    [CompilerGeneratedAttribute]
private string <id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <location>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <tags>k__BackingField;
    public string id { get; protected set; }
    public string name { get; protected set; }
    public string type { get; protected set; }
    public string location { get; public set; }
    public Dictionary`2<string, string> tags { get; public set; }
    public Resource(string id, string name, string type);
    [CompilerGeneratedAttribute]
public string get_id();
    [CompilerGeneratedAttribute]
protected void set_id(string value);
    [CompilerGeneratedAttribute]
public string get_name();
    [CompilerGeneratedAttribute]
protected void set_name(string value);
    [CompilerGeneratedAttribute]
public string get_type();
    [CompilerGeneratedAttribute]
protected void set_type(string value);
    [CompilerGeneratedAttribute]
public string get_location();
    [CompilerGeneratedAttribute]
public void set_location(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_tags();
    [CompilerGeneratedAttribute]
public void set_tags(Dictionary`2<string, string> value);
    private sealed virtual override bool System.IEquatable<Microsoft.VisualStudio.Services.Commerce.Resource>.Equals(Resource other);
}
public enum Microsoft.VisualStudio.Services.Commerce.ResourceBillingMode : Enum {
    public int value__;
    public static ResourceBillingMode Committment;
    public static ResourceBillingMode PayAsYouGo;
}
public enum Microsoft.VisualStudio.Services.Commerce.ResourceName : Enum {
    public int value__;
    public static ResourceName StandardLicense;
    public static ResourceName AdvancedLicense;
    public static ResourceName ProfessionalLicense;
    public static ResourceName Build;
    public static ResourceName LoadTest;
    public static ResourceName PremiumBuildAgent;
    public static ResourceName PrivateOtherBuildAgent;
    public static ResourceName PrivateAzureBuildAgent;
    public static ResourceName Artifacts;
    public static ResourceName MSHostedCICDforMacOS;
    public static ResourceName MsHostedCICDforWindowsLinux;
}
public enum Microsoft.VisualStudio.Services.Commerce.ResourceProvider : Enum {
    public int value__;
    public static ResourceProvider Account;
    public static ResourceProvider Project;
    public static ResourceProvider Extension;
    public static ResourceProvider None;
}
public enum Microsoft.VisualStudio.Services.Commerce.ResourceRenewalGroup : Enum {
    public int value__;
    public static ResourceRenewalGroup Monthly;
    public static ResourceRenewalGroup Jan;
    public static ResourceRenewalGroup Feb;
    public static ResourceRenewalGroup Mar;
    public static ResourceRenewalGroup Apr;
    public static ResourceRenewalGroup May;
    public static ResourceRenewalGroup Jun;
    public static ResourceRenewalGroup Jul;
    public static ResourceRenewalGroup Aug;
    public static ResourceRenewalGroup Sep;
    public static ResourceRenewalGroup Oct;
    public static ResourceRenewalGroup Nov;
    public static ResourceRenewalGroup Dec;
}
public class Microsoft.VisualStudio.Services.Commerce.ResourcesMoveRequest : object {
    [CompilerGeneratedAttribute]
private string <TargetResourceGroup>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <Resources>k__BackingField;
    public string TargetResourceGroup { get; public set; }
    public IEnumerable`1<string> Resources { get; public set; }
    [CompilerGeneratedAttribute]
public string get_TargetResourceGroup();
    [CompilerGeneratedAttribute]
public void set_TargetResourceGroup(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_Resources();
    [CompilerGeneratedAttribute]
public void set_Resources(IEnumerable`1<string> value);
}
[FlagsAttribute]
public enum Microsoft.VisualStudio.Services.Commerce.ResourceStatusReason : Enum {
    public int value__;
    public static ResourceStatusReason None;
    public static ResourceStatusReason NoAzureSubscription;
    public static ResourceStatusReason NoIncludedQuantityLeft;
    public static ResourceStatusReason SubscriptionDisabled;
    public static ResourceStatusReason PaidBillingDisabled;
    public static ResourceStatusReason MaximumQuantityReached;
}
public class Microsoft.VisualStudio.Services.Commerce.SubscriptionAccount : object {
    [CompilerGeneratedAttribute]
private Guid <AccountId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <AccountHostType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccountName>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Guid> <SubscriptionId>k__BackingField;
    [CompilerGeneratedAttribute]
private SubscriptionStatus <SubscriptionStatus>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResourceGroupName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GeoLocation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Locale>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RegionDisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<Guid, Uri> <ServiceUrls>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <AccountTenantId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsAccountOwner>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResourceName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SubscriptionName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsEligibleForPurchase>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsPrepaidFundSubscription>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsPricingAvailable>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SubscriptionOfferCode>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<AzureOfferType> <OfferType>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Guid> <SubscriptionTenantId>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Guid> <SubscriptionObjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private PurchaseErrorReason <FailedPurchaseReason>k__BackingField;
    public Guid AccountId { get; public set; }
    public int AccountHostType { get; public set; }
    public string AccountName { get; public set; }
    public Nullable`1<Guid> SubscriptionId { get; public set; }
    public SubscriptionStatus SubscriptionStatus { get; public set; }
    public string ResourceGroupName { get; public set; }
    public string GeoLocation { get; public set; }
    public string Locale { get; public set; }
    public string RegionDisplayName { get; public set; }
    public IDictionary`2<Guid, Uri> ServiceUrls { get; public set; }
    public Guid AccountTenantId { get; public set; }
    public bool IsAccountOwner { get; public set; }
    public string ResourceName { get; public set; }
    public string SubscriptionName { get; public set; }
    public bool IsEligibleForPurchase { get; public set; }
    public bool IsPrepaidFundSubscription { get; public set; }
    public bool IsPricingAvailable { get; public set; }
    public string SubscriptionOfferCode { get; public set; }
    public Nullable`1<AzureOfferType> OfferType { get; public set; }
    public Nullable`1<Guid> SubscriptionTenantId { get; public set; }
    public Nullable`1<Guid> SubscriptionObjectId { get; public set; }
    public PurchaseErrorReason FailedPurchaseReason { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Guid get_AccountId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AccountId(Guid value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_AccountHostType();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AccountHostType(int value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_AccountName();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AccountName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<Guid> get_SubscriptionId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SubscriptionId(Nullable`1<Guid> value);
    [CompilerGeneratedAttribute]
public sealed virtual SubscriptionStatus get_SubscriptionStatus();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SubscriptionStatus(SubscriptionStatus value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ResourceGroupName();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ResourceGroupName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_GeoLocation();
    [CompilerGeneratedAttribute]
public sealed virtual void set_GeoLocation(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Locale();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Locale(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_RegionDisplayName();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RegionDisplayName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<Guid, Uri> get_ServiceUrls();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ServiceUrls(IDictionary`2<Guid, Uri> value);
    [CompilerGeneratedAttribute]
public sealed virtual Guid get_AccountTenantId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AccountTenantId(Guid value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsAccountOwner();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IsAccountOwner(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ResourceName();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ResourceName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SubscriptionName();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SubscriptionName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsEligibleForPurchase();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IsEligibleForPurchase(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsPrepaidFundSubscription();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IsPrepaidFundSubscription(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsPricingAvailable();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IsPricingAvailable(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SubscriptionOfferCode();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SubscriptionOfferCode(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<AzureOfferType> get_OfferType();
    [CompilerGeneratedAttribute]
public sealed virtual void set_OfferType(Nullable`1<AzureOfferType> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<Guid> get_SubscriptionTenantId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SubscriptionTenantId(Nullable`1<Guid> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<Guid> get_SubscriptionObjectId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SubscriptionObjectId(Nullable`1<Guid> value);
    [CompilerGeneratedAttribute]
public sealed virtual PurchaseErrorReason get_FailedPurchaseReason();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FailedPurchaseReason(PurchaseErrorReason value);
}
public enum Microsoft.VisualStudio.Services.Commerce.SubscriptionAuthorizationSource : Enum {
    public int value__;
    public static SubscriptionAuthorizationSource Unauthorized;
    public static SubscriptionAuthorizationSource AdminOrCoAdmin;
    public static SubscriptionAuthorizationSource Rbac;
    public static SubscriptionAuthorizationSource SpecializedLocalPermission;
}
public class Microsoft.VisualStudio.Services.Commerce.SubscriptionResource : object {
    [CompilerGeneratedAttribute]
private ResourceName <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CommittedQuantity>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <DisabledResourceActionLink>k__BackingField;
    [CompilerGeneratedAttribute]
private ResourceStatusReason <DisabledReason>k__BackingField;
    [CompilerGeneratedAttribute]
private int <IncludedQuantity>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsUseable>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsPaidBillingEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaximumQuantity>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <ResetDate>k__BackingField;
    public ResourceName Name { get; public set; }
    public int CommittedQuantity { get; public set; }
    public Uri DisabledResourceActionLink { get; public set; }
    public ResourceStatusReason DisabledReason { get; public set; }
    public int IncludedQuantity { get; public set; }
    public bool IsUseable { get; public set; }
    public bool IsPaidBillingEnabled { get; public set; }
    public int MaximumQuantity { get; public set; }
    public DateTime ResetDate { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual ResourceName get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(ResourceName value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_CommittedQuantity();
    [CompilerGeneratedAttribute]
public void set_CommittedQuantity(int value);
    [CompilerGeneratedAttribute]
public sealed virtual Uri get_DisabledResourceActionLink();
    [CompilerGeneratedAttribute]
public void set_DisabledResourceActionLink(Uri value);
    [CompilerGeneratedAttribute]
public sealed virtual ResourceStatusReason get_DisabledReason();
    [CompilerGeneratedAttribute]
public void set_DisabledReason(ResourceStatusReason value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_IncludedQuantity();
    [CompilerGeneratedAttribute]
public void set_IncludedQuantity(int value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsUseable();
    [CompilerGeneratedAttribute]
public void set_IsUseable(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsPaidBillingEnabled();
    [CompilerGeneratedAttribute]
public void set_IsPaidBillingEnabled(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_MaximumQuantity();
    [CompilerGeneratedAttribute]
public void set_MaximumQuantity(int value);
    [CompilerGeneratedAttribute]
public sealed virtual DateTime get_ResetDate();
    [CompilerGeneratedAttribute]
public void set_ResetDate(DateTime value);
}
public enum Microsoft.VisualStudio.Services.Commerce.SubscriptionRolebasedAccessControlSource : Enum {
    public int value__;
    public static SubscriptionRolebasedAccessControlSource Owner;
    public static SubscriptionRolebasedAccessControlSource Contributor;
    public static SubscriptionRolebasedAccessControlSource Other;
}
public enum Microsoft.VisualStudio.Services.Commerce.SubscriptionSource : Enum {
    public int value__;
    public static SubscriptionSource Normal;
    public static SubscriptionSource EnterpriseAgreement;
    public static SubscriptionSource Internal;
    public static SubscriptionSource Unknown;
    public static SubscriptionSource FreeTier;
}
[ClientIncludeModelAttribute]
public enum Microsoft.VisualStudio.Services.Commerce.SubscriptionSpendingLimit : Enum {
    public int value__;
    public static SubscriptionSpendingLimit On;
    public static SubscriptionSpendingLimit Off;
    public static SubscriptionSpendingLimit CurrentPeriodOff;
}
public enum Microsoft.VisualStudio.Services.Commerce.SubscriptionStatus : Enum {
    public int value__;
    public static SubscriptionStatus Unknown;
    public static SubscriptionStatus Active;
    public static SubscriptionStatus Disabled;
    public static SubscriptionStatus Deleted;
    public static SubscriptionStatus Unregistered;
}
[ExceptionMappingAttribute("0.0", "3.0", "UnsupportedSubscriptionTypeException", "Microsoft.VisualStudio.Services.Commerce.UnsupportedSubscriptionTypeException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Commerce.UnsupportedSubscriptionTypeException : CommerceException {
}
[ExcludeFromCodeCoverageAttribute]
public class Microsoft.VisualStudio.Services.Commerce.UsageEvent : object {
    [CompilerGeneratedAttribute]
private string <MeterName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EventId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccountName>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <AssociatedUser>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Quantity>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <BillableDate>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <EventTimestamp>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <EventUniqueId>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <ServiceIdentity>k__BackingField;
    [CompilerGeneratedAttribute]
private ResourceBillingMode <ResourceBillingMode>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <SubscriptionId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <SubscriptionAnniversaryDay>k__BackingField;
    [CompilerGeneratedAttribute]
private int <PartitionId>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <AccountId>k__BackingField;
    public string MeterName { get; public set; }
    public string EventId { get; public set; }
    public string AccountName { get; public set; }
    public Guid AssociatedUser { get; public set; }
    public int Quantity { get; public set; }
    public DateTime BillableDate { get; public set; }
    public DateTime EventTimestamp { get; public set; }
    public Guid EventUniqueId { get; public set; }
    public Guid ServiceIdentity { get; public set; }
    public ResourceBillingMode ResourceBillingMode { get; public set; }
    public Guid SubscriptionId { get; public set; }
    public int SubscriptionAnniversaryDay { get; public set; }
    public int PartitionId { get; public set; }
    public Guid AccountId { get; public set; }
    [CompilerGeneratedAttribute]
public string get_MeterName();
    [CompilerGeneratedAttribute]
public void set_MeterName(string value);
    [CompilerGeneratedAttribute]
public string get_EventId();
    [CompilerGeneratedAttribute]
public void set_EventId(string value);
    [CompilerGeneratedAttribute]
public string get_AccountName();
    [CompilerGeneratedAttribute]
public void set_AccountName(string value);
    [CompilerGeneratedAttribute]
public Guid get_AssociatedUser();
    [CompilerGeneratedAttribute]
public void set_AssociatedUser(Guid value);
    [CompilerGeneratedAttribute]
public int get_Quantity();
    [CompilerGeneratedAttribute]
public void set_Quantity(int value);
    [CompilerGeneratedAttribute]
public DateTime get_BillableDate();
    [CompilerGeneratedAttribute]
public void set_BillableDate(DateTime value);
    [CompilerGeneratedAttribute]
public DateTime get_EventTimestamp();
    [CompilerGeneratedAttribute]
public void set_EventTimestamp(DateTime value);
    [CompilerGeneratedAttribute]
public Guid get_EventUniqueId();
    [CompilerGeneratedAttribute]
public void set_EventUniqueId(Guid value);
    [CompilerGeneratedAttribute]
public Guid get_ServiceIdentity();
    [CompilerGeneratedAttribute]
public void set_ServiceIdentity(Guid value);
    [CompilerGeneratedAttribute]
public ResourceBillingMode get_ResourceBillingMode();
    [CompilerGeneratedAttribute]
public void set_ResourceBillingMode(ResourceBillingMode value);
    [CompilerGeneratedAttribute]
public Guid get_SubscriptionId();
    [CompilerGeneratedAttribute]
public void set_SubscriptionId(Guid value);
    [CompilerGeneratedAttribute]
public int get_SubscriptionAnniversaryDay();
    [CompilerGeneratedAttribute]
public void set_SubscriptionAnniversaryDay(int value);
    [CompilerGeneratedAttribute]
public int get_PartitionId();
    [CompilerGeneratedAttribute]
public void set_PartitionId(int value);
    [CompilerGeneratedAttribute]
public Guid get_AccountId();
    [CompilerGeneratedAttribute]
public void set_AccountId(Guid value);
}
public class Microsoft.VisualStudio.Services.Commerce.UsageEventAggregate : object {
    [CompilerGeneratedAttribute]
private DateTime <StartTime>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <EndTime>k__BackingField;
    [CompilerGeneratedAttribute]
private ResourceName <Resource>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Value>k__BackingField;
    public DateTime StartTime { get; public set; }
    public DateTime EndTime { get; public set; }
    public ResourceName Resource { get; public set; }
    public int Value { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual DateTime get_StartTime();
    [CompilerGeneratedAttribute]
public sealed virtual void set_StartTime(DateTime value);
    [CompilerGeneratedAttribute]
public sealed virtual DateTime get_EndTime();
    [CompilerGeneratedAttribute]
public sealed virtual void set_EndTime(DateTime value);
    [CompilerGeneratedAttribute]
public sealed virtual ResourceName get_Resource();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Resource(ResourceName value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_Value();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Value(int value);
}
[ExceptionMappingAttribute("0.0", "3.0", "UserIsNotAccountOwnerException", "Microsoft.VisualStudio.Services.Commerce.UserIsNotAccountOwnerException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Commerce.UserIsNotAccountOwnerException : CommerceException {
    [CompilerGeneratedAttribute]
private Identity <Identity>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CollectionName>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <IdentityId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Email>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccountName>k__BackingField;
    public Identity Identity { get; public set; }
    public string CollectionName { get; public set; }
    public Guid IdentityId { get; public set; }
    public string Email { get; public set; }
    public string AccountName { get; public set; }
    public UserIsNotAccountOwnerException(Identity identity, string collectionName);
    public UserIsNotAccountOwnerException(string userEmail, string accountName);
    [CompilerGeneratedAttribute]
public Identity get_Identity();
    [CompilerGeneratedAttribute]
public void set_Identity(Identity value);
    [CompilerGeneratedAttribute]
public string get_CollectionName();
    [CompilerGeneratedAttribute]
public void set_CollectionName(string value);
    [CompilerGeneratedAttribute]
public Guid get_IdentityId();
    [CompilerGeneratedAttribute]
public void set_IdentityId(Guid value);
    [CompilerGeneratedAttribute]
public string get_Email();
    [CompilerGeneratedAttribute]
public void set_Email(string value);
    [CompilerGeneratedAttribute]
public string get_AccountName();
    [CompilerGeneratedAttribute]
public void set_AccountName(string value);
}
[ExceptionMappingAttribute("0.0", "3.0", "UserIsNotSubscriptionAdminException", "Microsoft.VisualStudio.Services.Commerce.UserIsNotSubscriptionAdminException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Commerce.UserIsNotSubscriptionAdminException : CommerceException {
}
[XmlRootAttribute("dictionary")]
public class Microsoft.VisualStudio.Services.Common.SerializableDictionary`2 : Dictionary`2<TKey, TValue> {
    public sealed virtual XmlSchema GetSchema();
    public sealed virtual void ReadXml(XmlReader reader);
    public sealed virtual void WriteXml(XmlWriter writer);
}
[TypeConverterAttribute("Microsoft.VisualStudio.Services.Common.SocialDescriptorConverter")]
public class Microsoft.VisualStudio.Services.Common.SocialDescriptor : ValueType {
    [CompilerGeneratedAttribute]
private string <SocialType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Identifier>k__BackingField;
    [DataMemberAttribute]
public string SocialType { get; private set; }
    [DataMemberAttribute]
public string Identifier { get; private set; }
    public SocialDescriptor(string socialType, string identifier);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_SocialType();
    [CompilerGeneratedAttribute]
private void set_SocialType(string value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_Identifier();
    [CompilerGeneratedAttribute]
private void set_Identifier(string value);
    public virtual string ToString();
    public static SocialDescriptor FromString(string socialDescriptorString);
    public static IEnumerable`1<SocialDescriptor> FromCommaSeperatedStrings(string descriptors);
    public sealed virtual bool Equals(SocialDescriptor socialDescriptor);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(SocialDescriptor left, SocialDescriptor right);
    public static bool op_Inequality(SocialDescriptor left, SocialDescriptor right);
    public static string op_Implicit(SocialDescriptor socialDescriptor);
    internal static int Compare(SocialDescriptor left, SocialDescriptor right);
    private static string NormalizeSocialType(string socialType);
    private static void ValidateSocialType(string socialType);
    private static void ValidateIdentifier(string identifier);
    private sealed virtual override XmlSchema System.Xml.Serialization.IXmlSerializable.GetSchema();
    private sealed virtual override void System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader reader);
    private sealed virtual override void System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter writer);
}
public class Microsoft.VisualStudio.Services.Common.SocialDescriptorComparer : object {
    [CompilerGeneratedAttribute]
private static SocialDescriptorComparer <Instance>k__BackingField;
    public static SocialDescriptorComparer Instance { get; }
    private static SocialDescriptorComparer();
    public sealed virtual int Compare(SocialDescriptor left, SocialDescriptor right);
    public sealed virtual bool Equals(SocialDescriptor left, SocialDescriptor right);
    public sealed virtual int GetHashCode(SocialDescriptor socialDescriptor);
    [CompilerGeneratedAttribute]
public static SocialDescriptorComparer get_Instance();
}
public class Microsoft.VisualStudio.Services.Common.SocialDescriptorConverter : TypeConverter {
    public virtual bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType);
    public virtual bool CanConvertTo(ITypeDescriptorContext context, Type destinationType);
    public virtual object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value);
    public virtual object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType);
}
[ExtensionAttribute]
public static class Microsoft.VisualStudio.Services.Common.SocialDescriptorExtensions : object {
    [ExtensionAttribute]
public static bool IsGitHubSocialType(SocialDescriptor socialDescriptor);
    [ExtensionAttribute]
public static bool IsSocialType(SubjectDescriptor subjectDescriptor);
}
[TypeConverterAttribute("Microsoft.VisualStudio.Services.Common.SubjectDescriptorConverter")]
public class Microsoft.VisualStudio.Services.Common.SubjectDescriptor : ValueType {
    [CompilerGeneratedAttribute]
private string <SubjectType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Identifier>k__BackingField;
    [DataMemberAttribute]
public string SubjectType { get; private set; }
    [DataMemberAttribute]
public string Identifier { get; private set; }
    public SubjectDescriptor(string subjectType, string identifier);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_SubjectType();
    [CompilerGeneratedAttribute]
private void set_SubjectType(string value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_Identifier();
    [CompilerGeneratedAttribute]
private void set_Identifier(string value);
    public virtual string ToString();
    public static SubjectDescriptor FromString(string subjectDescriptorString);
    public static IEnumerable`1<SubjectDescriptor> FromCommaSeperatedStrings(string descriptors);
    public sealed virtual bool Equals(SubjectDescriptor subjectDescriptor);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(SubjectDescriptor left, SubjectDescriptor right);
    public static bool op_Inequality(SubjectDescriptor left, SubjectDescriptor right);
    public static string op_Implicit(SubjectDescriptor subjectDescriptor);
    internal static int Compare(SubjectDescriptor left, SubjectDescriptor right);
    private static string NormalizeSubjectType(string subjectType);
    private static void ValidateSubjectType(string subjectType);
    private static void ValidateIdentifier(string identifier);
    private sealed virtual override XmlSchema System.Xml.Serialization.IXmlSerializable.GetSchema();
    private sealed virtual override void System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader reader);
    private sealed virtual override void System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter writer);
}
public class Microsoft.VisualStudio.Services.Common.SubjectDescriptorComparer : object {
    [CompilerGeneratedAttribute]
private static SubjectDescriptorComparer <Instance>k__BackingField;
    public static SubjectDescriptorComparer Instance { get; }
    private static SubjectDescriptorComparer();
    public sealed virtual int Compare(SubjectDescriptor left, SubjectDescriptor right);
    public sealed virtual bool Equals(SubjectDescriptor left, SubjectDescriptor right);
    public sealed virtual int GetHashCode(SubjectDescriptor subjectDescriptor);
    [CompilerGeneratedAttribute]
public static SubjectDescriptorComparer get_Instance();
}
public class Microsoft.VisualStudio.Services.Common.SubjectDescriptorConverter : TypeConverter {
    public virtual bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType);
    public virtual bool CanConvertTo(ITypeDescriptorContext context, Type destinationType);
    public virtual object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value);
    public virtual object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType);
}
[ExtensionAttribute]
public static class Microsoft.VisualStudio.Services.Common.SubjectDescriptorExtensions : object {
    [ExtensionAttribute]
internal static Guid GetMasterScopeId(SubjectDescriptor subjectDescriptor);
    [ExtensionAttribute]
internal static Guid GetCuid(SubjectDescriptor subjectDescriptor);
    [ExtensionAttribute]
public static bool IsWindowsType(SubjectDescriptor subjectDescriptor);
    [ExtensionAttribute]
public static bool IsGroupType(SubjectDescriptor subjectDescriptor);
    [ExtensionAttribute]
public static bool IsAadGroupType(SubjectDescriptor subjectDescriptor);
    [ExtensionAttribute]
public static bool IsVstsGroupType(SubjectDescriptor subjectDescriptor);
    [ExtensionAttribute]
public static bool IsClaimsUserType(SubjectDescriptor subjectDescriptor);
    [ExtensionAttribute]
public static bool IsAadUserType(SubjectDescriptor subjectDescriptor);
    [ExtensionAttribute]
public static bool IsMsaUserType(SubjectDescriptor subjectDescriptor);
    [ExtensionAttribute]
public static bool IsBindPendingUserType(SubjectDescriptor subjectDescriptor);
    [ExtensionAttribute]
public static bool IsUnauthenticatedIdentityType(SubjectDescriptor subjectDescriptor);
    [ExtensionAttribute]
public static bool IsServiceIdentityType(SubjectDescriptor subjectDescriptor);
    [ExtensionAttribute]
public static bool IsAggregateIdentityType(SubjectDescriptor subjectDescriptor);
    [ExtensionAttribute]
public static bool IsImportedIdentityType(SubjectDescriptor subjectDescriptor);
    [ExtensionAttribute]
public static bool IsGroupScopeType(SubjectDescriptor subjectDescriptor);
    [ExtensionAttribute]
public static bool IsServerTestIdentityType(SubjectDescriptor subjectDescriptor);
    [ExtensionAttribute]
public static bool IsAadServicePrincipalType(SubjectDescriptor subjectDescriptor);
    [ExtensionAttribute]
public static bool IsSystemServicePrincipalType(SubjectDescriptor subjectDescriptor);
    [ExtensionAttribute]
public static bool IsSystemScopeType(SubjectDescriptor subjectDescriptor);
    [ExtensionAttribute]
public static bool IsSystemCspPartnerType(SubjectDescriptor subjectDescriptor);
    [ExtensionAttribute]
public static bool IsSystemLicenseType(SubjectDescriptor subjectDescriptor);
    [ExtensionAttribute]
public static bool IsSystemPublicAccessType(SubjectDescriptor subjectDescriptor);
    [ExtensionAttribute]
public static bool IsSystemAccessControlType(SubjectDescriptor subjectDescriptor);
    [ExtensionAttribute]
public static bool IsSystemType(SubjectDescriptor subjectDescriptor);
    [ExtensionAttribute]
public static bool IsSubjectStoreType(SubjectDescriptor subjectDescriptor);
    [ExtensionAttribute]
public static bool IsCspPartnerIdentityType(SubjectDescriptor subjectDescriptor);
    [ExtensionAttribute]
public static bool IsUnknownSubjectType(SubjectDescriptor subjectDescriptor);
    [ExtensionAttribute]
public static bool IsCuidBased(SubjectDescriptor subjectDescriptor);
    [ExtensionAttribute]
public static bool IsUserType(SubjectDescriptor subjectDescriptor);
    [ExtensionAttribute]
public static bool IsPubliclyAvailableGraphSubjectType(SubjectDescriptor subjectDescriptor);
}
[ObsoleteAttribute("This type is no longer used.")]
public class Microsoft.VisualStudio.Services.Compliance.AccountRightsValidation : object {
    [CompilerGeneratedAttribute]
private AccountEntitlement <AccountEntitlement>k__BackingField;
    [CompilerGeneratedAttribute]
private VisualStudioOnlineServiceLevel <AccountRights>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccountRightsReason>k__BackingField;
    [CompilerGeneratedAttribute]
private ComplianceValidation <ComplianceValidation>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Volatile>k__BackingField;
    public AccountEntitlement AccountEntitlement { get; public set; }
    public VisualStudioOnlineServiceLevel AccountRights { get; public set; }
    public string AccountRightsReason { get; public set; }
    public ComplianceValidation ComplianceValidation { get; public set; }
    public bool Volatile { get; public set; }
    public AccountRightsValidation(ComplianceValidation validation, VisualStudioOnlineServiceLevel accountRights);
    public AccountRightsValidation(ComplianceValidation validation, VisualStudioOnlineServiceLevel accountRights, string accountRightsReason);
    public AccountRightsValidation(ComplianceValidation validation, VisualStudioOnlineServiceLevel accountRights, string accountRightsReason, AccountEntitlement accountEntitlement);
    [CompilerGeneratedAttribute]
public AccountEntitlement get_AccountEntitlement();
    [CompilerGeneratedAttribute]
public void set_AccountEntitlement(AccountEntitlement value);
    [CompilerGeneratedAttribute]
public VisualStudioOnlineServiceLevel get_AccountRights();
    [CompilerGeneratedAttribute]
public void set_AccountRights(VisualStudioOnlineServiceLevel value);
    [CompilerGeneratedAttribute]
public string get_AccountRightsReason();
    [CompilerGeneratedAttribute]
public void set_AccountRightsReason(string value);
    [CompilerGeneratedAttribute]
public ComplianceValidation get_ComplianceValidation();
    [CompilerGeneratedAttribute]
public void set_ComplianceValidation(ComplianceValidation value);
    [CompilerGeneratedAttribute]
public bool get_Volatile();
    [CompilerGeneratedAttribute]
public void set_Volatile(bool value);
}
[ResourceAreaAttribute("7E7BAADD-B7D6-46A0-9CE5-A6F95DDA0E62")]
[ObsoleteAttribute("This type is no longer used.")]
public class Microsoft.VisualStudio.Services.Compliance.Client.ComplianceHttpClient : VssHttpClientBase {
    private static Dictionary`2<string, Type> s_translatedExceptions;
    protected static Version apiVersion;
    protected IDictionary`2<string, Type> TranslatedExceptions { get; }
    public ComplianceHttpClient(Uri baseUrl, VssCredentials credentials);
    public ComplianceHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public ComplianceHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public ComplianceHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public ComplianceHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    private static ComplianceHttpClient();
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Compliance.Client.ComplianceHttpClient/<GetComplianceConfiguration>d__5")]
public virtual Task`1<ComplianceConfiguration> GetComplianceConfiguration(object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Compliance.Client.ComplianceHttpClient/<ValidateAccountRights>d__6")]
public virtual Task`1<AccountRightsValidation> ValidateAccountRights(object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Compliance.Client.ComplianceHttpClient/<ValidateBusinessPolicy>d__7")]
public virtual Task`1<ComplianceValidation> ValidateBusinessPolicy(object userState, CancellationToken cancellationToken);
    protected virtual IDictionary`2<string, Type> get_TranslatedExceptions();
}
[ObsoleteAttribute("This type is no longer used.")]
public class Microsoft.VisualStudio.Services.Compliance.ComplianceConfiguration : object {
    [CompilerGeneratedAttribute]
private TimeSpan <ComplianceGracePeriod>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <ComplianceInvalidated>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ComplianceStateRepositoryStrategy>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <ComplianceStateRevalidationInterval>k__BackingField;
    public TimeSpan ComplianceGracePeriod { get; public set; }
    public DateTimeOffset ComplianceInvalidated { get; public set; }
    public string ComplianceStateRepositoryStrategy { get; public set; }
    public TimeSpan ComplianceStateRevalidationInterval { get; public set; }
    public ComplianceConfiguration(DateTime complianceInvalidated, TimeSpan complianceGracePeriod, TimeSpan complianceStateRevalidationInterval, string complianceStateRepositoryStrategy);
    [CompilerGeneratedAttribute]
public TimeSpan get_ComplianceGracePeriod();
    [CompilerGeneratedAttribute]
public void set_ComplianceGracePeriod(TimeSpan value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_ComplianceInvalidated();
    [CompilerGeneratedAttribute]
public void set_ComplianceInvalidated(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public string get_ComplianceStateRepositoryStrategy();
    [CompilerGeneratedAttribute]
public void set_ComplianceStateRepositoryStrategy(string value);
    [CompilerGeneratedAttribute]
public TimeSpan get_ComplianceStateRevalidationInterval();
    [CompilerGeneratedAttribute]
public void set_ComplianceStateRevalidationInterval(TimeSpan value);
}
public static class Microsoft.VisualStudio.Services.Compliance.ComplianceResourceIds : object {
    public static string AreaId;
    public static string AreaName;
    public static string AccountRightsResource;
    public static Guid AccountRightsLocationId;
    public static string ConfigurationResource;
    public static Guid ConfigurationLocationId;
    public static string ValidationResource;
    public static Guid ValidationLocationId;
    private static ComplianceResourceIds();
}
public static class Microsoft.VisualStudio.Services.Compliance.ComplianceResourceVersions : object {
    public static int AccountRightsResourceVersion;
    public static int ConfigurationResourceVersion;
    public static int ValidationResourceVersion;
}
public class Microsoft.VisualStudio.Services.Compliance.ComplianceValidation : object {
    [CompilerGeneratedAttribute]
private DateTimeOffset <ComplianceValidated>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsValidated>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <RedirectUrl>k__BackingField;
    public DateTimeOffset ComplianceValidated { get; public set; }
    public bool IsValidated { get; public set; }
    public Uri RedirectUrl { get; public set; }
    public ComplianceValidation(DateTime complianceValidated);
    public ComplianceValidation(DateTimeOffset complianceValidated);
    public ComplianceValidation(Uri redirectUrl);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_ComplianceValidated();
    [CompilerGeneratedAttribute]
public void set_ComplianceValidated(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public bool get_IsValidated();
    [CompilerGeneratedAttribute]
public void set_IsValidated(bool value);
    [CompilerGeneratedAttribute]
public Uri get_RedirectUrl();
    [CompilerGeneratedAttribute]
public void set_RedirectUrl(Uri value);
}
public class Microsoft.VisualStudio.Services.Compliance.ExternalUserResolution : object {
    [CompilerGeneratedAttribute]
private Uri <RedirectUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorMessage>k__BackingField;
    public Uri RedirectUri { get; private set; }
    public string ErrorMessage { get; private set; }
    public bool HasError { get; }
    public ExternalUserResolution(Uri redirectUri, string errorMessage);
    [CompilerGeneratedAttribute]
public Uri get_RedirectUri();
    [CompilerGeneratedAttribute]
private void set_RedirectUri(Uri value);
    [CompilerGeneratedAttribute]
public string get_ErrorMessage();
    [CompilerGeneratedAttribute]
private void set_ErrorMessage(string value);
    public bool get_HasError();
}
public static class Microsoft.VisualStudio.Services.ContentSecurityPolicy.ContentSecurityPolicyResourceIds : object {
    public static string CspReportArea;
    public static string CspReportResource;
    public static Guid CspLocationId;
    private static ContentSecurityPolicyResourceIds();
}
public enum Microsoft.VisualStudio.Services.ContentValidation.Client.ContentViolationCategory : Enum {
    public int value__;
    public static ContentViolationCategory Unset;
    public static ContentViolationCategory Child;
    public static ContentViolationCategory ContentInfringement;
    public static ContentViolationCategory Nudity;
    public static ContentViolationCategory Terrorism;
    public static ContentViolationCategory Harassment;
    public static ContentViolationCategory Spam;
    public static ContentViolationCategory Other;
    public static ContentViolationCategory None;
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.ContentValidation.Client.ContentViolationReport : object {
    [CompilerGeneratedAttribute]
private Guid <HostId>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <ContainerId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContentUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private ContentViolationCategory <ViolationCategory>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AdditionalDetails>k__BackingField;
    [DataMemberAttribute]
public Guid HostId { get; public set; }
    [DataMemberAttribute]
public Guid ContainerId { get; public set; }
    [DataMemberAttribute]
public string ContentUrl { get; public set; }
    [DataMemberAttribute]
public ContentViolationCategory ViolationCategory { get; public set; }
    [DataMemberAttribute]
public string AdditionalDetails { get; public set; }
    [CompilerGeneratedAttribute]
public Guid get_HostId();
    [CompilerGeneratedAttribute]
public void set_HostId(Guid value);
    [CompilerGeneratedAttribute]
public Guid get_ContainerId();
    [CompilerGeneratedAttribute]
public void set_ContainerId(Guid value);
    [CompilerGeneratedAttribute]
public string get_ContentUrl();
    [CompilerGeneratedAttribute]
public void set_ContentUrl(string value);
    [CompilerGeneratedAttribute]
public ContentViolationCategory get_ViolationCategory();
    [CompilerGeneratedAttribute]
public void set_ViolationCategory(ContentViolationCategory value);
    [CompilerGeneratedAttribute]
public string get_AdditionalDetails();
    [CompilerGeneratedAttribute]
public void set_AdditionalDetails(string value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.ContentValidation.Client.ContentViolationReportResult : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private ContentViolationReportResultStatus <Status>k__BackingField;
    [DataMemberAttribute]
public string Id { get; public set; }
    [DataMemberAttribute]
public ContentViolationReportResultStatus Status { get; public set; }
    private Guid Microsoft.VisualStudio.Services.WebApi.ISecuredObject.NamespaceId { get; }
    private int Microsoft.VisualStudio.Services.WebApi.ISecuredObject.RequiredPermissions { get; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public ContentViolationReportResultStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(ContentViolationReportResultStatus value);
    private sealed virtual override Guid Microsoft.VisualStudio.Services.WebApi.ISecuredObject.get_NamespaceId();
    private sealed virtual override int Microsoft.VisualStudio.Services.WebApi.ISecuredObject.get_RequiredPermissions();
    private sealed virtual override string Microsoft.VisualStudio.Services.WebApi.ISecuredObject.GetToken();
}
public enum Microsoft.VisualStudio.Services.ContentValidation.Client.ContentViolationReportResultStatus : Enum {
    public int value__;
    public static ContentViolationReportResultStatus InProgress;
    public static ContentViolationReportResultStatus Succeeded;
    public static ContentViolationReportResultStatus Unset;
}
public class Microsoft.VisualStudio.Services.CustomerIntelligence.WebApi.CustomerIntelligenceHttpClient : VssHttpClientBase {
    public CustomerIntelligenceHttpClient(Uri baseUrl, VssCredentials credentials);
    public CustomerIntelligenceHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public CustomerIntelligenceHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public CustomerIntelligenceHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public CustomerIntelligenceHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.CustomerIntelligence.WebApi.CustomerIntelligenceHttpClient/<PublishEventsAsync>d__5")]
public Task PublishEventsAsync(CustomerIntelligenceEvent[] events, object userState, CancellationToken cancellationToken);
}
public static class Microsoft.VisualStudio.Services.CustomHttpResponseHeaders : object {
    public static string ActivityId;
}
public class Microsoft.VisualStudio.Services.DelegatedAuthorization.AccessToken : object {
    [CompilerGeneratedAttribute]
private Guid <AccessId>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <AuthorizationId>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <ValidFrom>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <ValidTo>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <Refreshed>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsRefresh>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsValid>k__BackingField;
    [CompilerGeneratedAttribute]
private JsonWebToken <Token>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TokenType>k__BackingField;
    [CompilerGeneratedAttribute]
private JsonWebToken <RefreshToken>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <RegistrationId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scope>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsFirstPartyClient>k__BackingField;
    [CompilerGeneratedAttribute]
private TokenError <AccessTokenError>k__BackingField;
    [EditorBrowsableAttribute("1")]
public Guid AccessId { get; public set; }
    public Guid AuthorizationId { get; public set; }
    public DateTimeOffset ValidFrom { get; public set; }
    public DateTimeOffset ValidTo { get; public set; }
    [EditorBrowsableAttribute("1")]
public DateTimeOffset Refreshed { get; public set; }
    [EditorBrowsableAttribute("1")]
public bool IsRefresh { get; public set; }
    [EditorBrowsableAttribute("1")]
public bool IsValid { get; public set; }
    public JsonWebToken Token { get; public set; }
    public string TokenType { get; public set; }
    public JsonWebToken RefreshToken { get; public set; }
    [EditorBrowsableAttribute("1")]
internal Guid RegistrationId { get; internal set; }
    [EditorBrowsableAttribute("1")]
internal string Scope { get; internal set; }
    [EditorBrowsableAttribute("1")]
internal bool IsFirstPartyClient { get; internal set; }
    [EditorBrowsableAttribute("1")]
internal TokenError AccessTokenError { get; internal set; }
    [EditorBrowsableAttribute("1")]
internal bool HasError { get; }
    [CompilerGeneratedAttribute]
public Guid get_AccessId();
    [CompilerGeneratedAttribute]
public void set_AccessId(Guid value);
    [CompilerGeneratedAttribute]
public Guid get_AuthorizationId();
    [CompilerGeneratedAttribute]
public void set_AuthorizationId(Guid value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_ValidFrom();
    [CompilerGeneratedAttribute]
public void set_ValidFrom(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_ValidTo();
    [CompilerGeneratedAttribute]
public void set_ValidTo(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_Refreshed();
    [CompilerGeneratedAttribute]
public void set_Refreshed(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public bool get_IsRefresh();
    [CompilerGeneratedAttribute]
public void set_IsRefresh(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsValid();
    [CompilerGeneratedAttribute]
public void set_IsValid(bool value);
    [CompilerGeneratedAttribute]
public JsonWebToken get_Token();
    [CompilerGeneratedAttribute]
public void set_Token(JsonWebToken value);
    [CompilerGeneratedAttribute]
public string get_TokenType();
    [CompilerGeneratedAttribute]
public void set_TokenType(string value);
    [CompilerGeneratedAttribute]
public JsonWebToken get_RefreshToken();
    [CompilerGeneratedAttribute]
public void set_RefreshToken(JsonWebToken value);
    [CompilerGeneratedAttribute]
internal Guid get_RegistrationId();
    [CompilerGeneratedAttribute]
internal void set_RegistrationId(Guid value);
    [CompilerGeneratedAttribute]
internal string get_Scope();
    [CompilerGeneratedAttribute]
internal void set_Scope(string value);
    [CompilerGeneratedAttribute]
internal bool get_IsFirstPartyClient();
    [CompilerGeneratedAttribute]
internal void set_IsFirstPartyClient(bool value);
    [CompilerGeneratedAttribute]
internal TokenError get_AccessTokenError();
    [CompilerGeneratedAttribute]
internal void set_AccessTokenError(TokenError value);
    internal bool get_HasError();
}
[DataContractAttribute]
[ClientIncludeModelAttribute]
public class Microsoft.VisualStudio.Services.DelegatedAuthorization.AccessTokenResult : object {
    [CompilerGeneratedAttribute]
private Guid <AuthorizationId>k__BackingField;
    [CompilerGeneratedAttribute]
private JsonWebToken <AccessToken>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TokenType>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <ValidTo>k__BackingField;
    [CompilerGeneratedAttribute]
private RefreshTokenGrant <RefreshToken>k__BackingField;
    [CompilerGeneratedAttribute]
private TokenError <AccessTokenError>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scope>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsFirstPartyClient>k__BackingField;
    [DataMemberAttribute]
public Guid AuthorizationId { get; public set; }
    [DataMemberAttribute]
public JsonWebToken AccessToken { get; public set; }
    [DataMemberAttribute]
public string TokenType { get; public set; }
    [DataMemberAttribute]
public DateTime ValidTo { get; public set; }
    [DataMemberAttribute]
public RefreshTokenGrant RefreshToken { get; public set; }
    [DataMemberAttribute]
public TokenError AccessTokenError { get; public set; }
    [DataMemberAttribute]
public bool HasError { get; }
    [DataMemberAttribute]
public string ErrorDescription { get; public set; }
    [DataMemberAttribute]
public string Scope { get; public set; }
    [DataMemberAttribute]
internal bool IsFirstPartyClient { get; internal set; }
    [CompilerGeneratedAttribute]
public Guid get_AuthorizationId();
    [CompilerGeneratedAttribute]
public void set_AuthorizationId(Guid value);
    [CompilerGeneratedAttribute]
public JsonWebToken get_AccessToken();
    [CompilerGeneratedAttribute]
public void set_AccessToken(JsonWebToken value);
    [CompilerGeneratedAttribute]
public string get_TokenType();
    [CompilerGeneratedAttribute]
public void set_TokenType(string value);
    [CompilerGeneratedAttribute]
public DateTime get_ValidTo();
    [CompilerGeneratedAttribute]
public void set_ValidTo(DateTime value);
    [CompilerGeneratedAttribute]
public RefreshTokenGrant get_RefreshToken();
    [CompilerGeneratedAttribute]
public void set_RefreshToken(RefreshTokenGrant value);
    [CompilerGeneratedAttribute]
public TokenError get_AccessTokenError();
    [CompilerGeneratedAttribute]
public void set_AccessTokenError(TokenError value);
    public bool get_HasError();
    [CompilerGeneratedAttribute]
public string get_ErrorDescription();
    [CompilerGeneratedAttribute]
public void set_ErrorDescription(string value);
    [CompilerGeneratedAttribute]
public string get_Scope();
    [CompilerGeneratedAttribute]
public void set_Scope(string value);
    [CompilerGeneratedAttribute]
internal bool get_IsFirstPartyClient();
    [CompilerGeneratedAttribute]
internal void set_IsFirstPartyClient(bool value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.DelegatedAuthorization.ApplicationClientRegistration : CommonRegistration {
    [CompilerGeneratedAttribute]
private Uri <RegistrationLocation>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <SetupUri>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsWellKnown>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccessHash>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Guid> <TenantIds>k__BackingField;
    [DataMemberAttribute]
public Uri RegistrationLocation { get; public set; }
    [DataMemberAttribute]
public Uri SetupUri { get; public set; }
    [DataMemberAttribute]
public bool IsWellKnown { get; public set; }
    [DataMemberAttribute]
[EditorBrowsableAttribute("1")]
internal string AccessHash { get; internal set; }
    [DataMemberAttribute]
public List`1<Guid> TenantIds { get; public set; }
    public ApplicationClientRegistration(Registration registration);
    [CompilerGeneratedAttribute]
public Uri get_RegistrationLocation();
    [CompilerGeneratedAttribute]
public void set_RegistrationLocation(Uri value);
    [CompilerGeneratedAttribute]
public Uri get_SetupUri();
    [CompilerGeneratedAttribute]
public void set_SetupUri(Uri value);
    [CompilerGeneratedAttribute]
public bool get_IsWellKnown();
    [CompilerGeneratedAttribute]
public void set_IsWellKnown(bool value);
    [CompilerGeneratedAttribute]
internal string get_AccessHash();
    [CompilerGeneratedAttribute]
internal void set_AccessHash(string value);
    [CompilerGeneratedAttribute]
public List`1<Guid> get_TenantIds();
    [CompilerGeneratedAttribute]
public void set_TenantIds(List`1<Guid> value);
    public virtual Registration ToRegistration();
}
[ExceptionMappingAttribute("0.0", "3.0", "AppSessionTokenCreateException", "Microsoft.VisualStudio.Services.DelegatedAuthorization.AppSessionTokenCreateException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.DelegatedAuthorization.AppSessionTokenCreateException : VssServiceException {
    public AppSessionTokenCreateException(string message);
    public AppSessionTokenCreateException(string message, Exception innerException);
}
public enum Microsoft.VisualStudio.Services.DelegatedAuthorization.AppSessionTokenError : Enum {
    public int value__;
    public static AppSessionTokenError None;
    public static AppSessionTokenError UserIdRequired;
    public static AppSessionTokenError ClientIdRequired;
    public static AppSessionTokenError InvalidUserId;
    public static AppSessionTokenError InvalidUserType;
    public static AppSessionTokenError AccessDenied;
    public static AppSessionTokenError FailedToIssueAppSessionToken;
    public static AppSessionTokenError InvalidClientId;
    public static AppSessionTokenError AuthorizationIsNotSuccessfull;
}
public class Microsoft.VisualStudio.Services.DelegatedAuthorization.AppSessionTokenResult : object {
    [CompilerGeneratedAttribute]
private string <AppSessionToken>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <ExpirationDate>k__BackingField;
    [CompilerGeneratedAttribute]
private AppSessionTokenError <AppSessionTokenError>k__BackingField;
    public string AppSessionToken { get; public set; }
    public DateTime ExpirationDate { get; public set; }
    public AppSessionTokenError AppSessionTokenError { get; public set; }
    public bool HasError { get; }
    [CompilerGeneratedAttribute]
public string get_AppSessionToken();
    [CompilerGeneratedAttribute]
public void set_AppSessionToken(string value);
    [CompilerGeneratedAttribute]
public DateTime get_ExpirationDate();
    [CompilerGeneratedAttribute]
public void set_ExpirationDate(DateTime value);
    [CompilerGeneratedAttribute]
public AppSessionTokenError get_AppSessionTokenError();
    [CompilerGeneratedAttribute]
public void set_AppSessionTokenError(AppSessionTokenError value);
    public bool get_HasError();
}
public class Microsoft.VisualStudio.Services.DelegatedAuthorization.AppTokenSecretPair : object {
    [CompilerGeneratedAttribute]
private string <AppToken>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientSecret>k__BackingField;
    public string AppToken { get; public set; }
    public string ClientSecret { get; public set; }
    [CompilerGeneratedAttribute]
public string get_AppToken();
    [CompilerGeneratedAttribute]
public void set_AppToken(string value);
    [CompilerGeneratedAttribute]
public string get_ClientSecret();
    [CompilerGeneratedAttribute]
public void set_ClientSecret(string value);
}
public class Microsoft.VisualStudio.Services.DelegatedAuthorization.Authorization : object {
    [CompilerGeneratedAttribute]
private Guid <AuthorizationId>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <RedirectUri>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <IdentityId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scopes>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <ValidFrom>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <ValidTo>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <AccessIssued>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsAccessUsed>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsValid>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <RegistrationId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Audience>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Source>k__BackingField;
    public Guid AuthorizationId { get; public set; }
    public Uri RedirectUri { get; public set; }
    public Guid IdentityId { get; public set; }
    public string Scopes { get; public set; }
    public DateTimeOffset ValidFrom { get; public set; }
    public DateTimeOffset ValidTo { get; public set; }
    public DateTimeOffset AccessIssued { get; public set; }
    public bool IsAccessUsed { get; public set; }
    public bool IsValid { get; public set; }
    public Guid RegistrationId { get; public set; }
    public string Audience { get; public set; }
    public string Source { get; public set; }
    [CompilerGeneratedAttribute]
public Guid get_AuthorizationId();
    [CompilerGeneratedAttribute]
public void set_AuthorizationId(Guid value);
    [CompilerGeneratedAttribute]
public Uri get_RedirectUri();
    [CompilerGeneratedAttribute]
public void set_RedirectUri(Uri value);
    [CompilerGeneratedAttribute]
public Guid get_IdentityId();
    [CompilerGeneratedAttribute]
public void set_IdentityId(Guid value);
    [CompilerGeneratedAttribute]
public string get_Scopes();
    [CompilerGeneratedAttribute]
public void set_Scopes(string value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_ValidFrom();
    [CompilerGeneratedAttribute]
public void set_ValidFrom(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_ValidTo();
    [CompilerGeneratedAttribute]
public void set_ValidTo(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_AccessIssued();
    [CompilerGeneratedAttribute]
public void set_AccessIssued(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public bool get_IsAccessUsed();
    [CompilerGeneratedAttribute]
public void set_IsAccessUsed(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsValid();
    [CompilerGeneratedAttribute]
public void set_IsValid(bool value);
    [CompilerGeneratedAttribute]
public Guid get_RegistrationId();
    [CompilerGeneratedAttribute]
public void set_RegistrationId(Guid value);
    [CompilerGeneratedAttribute]
public string get_Audience();
    [CompilerGeneratedAttribute]
public void set_Audience(string value);
    [CompilerGeneratedAttribute]
public string get_Source();
    [CompilerGeneratedAttribute]
public void set_Source(string value);
}
public class Microsoft.VisualStudio.Services.DelegatedAuthorization.AuthorizationDecision : object {
    [CompilerGeneratedAttribute]
private AuthorizationGrant <AuthorizationGrant>k__BackingField;
    [CompilerGeneratedAttribute]
private AuthorizationError <AuthorizationError>k__BackingField;
    [CompilerGeneratedAttribute]
private Authorization <Authorization>k__BackingField;
    public AuthorizationGrant AuthorizationGrant { get; public set; }
    [JsonConverterAttribute("Newtonsoft.Json.Converters.StringEnumConverter")]
public AuthorizationError AuthorizationError { get; public set; }
    public Authorization Authorization { get; public set; }
    public bool IsAuthorized { get; }
    public bool HasError { get; }
    [CompilerGeneratedAttribute]
public AuthorizationGrant get_AuthorizationGrant();
    [CompilerGeneratedAttribute]
public void set_AuthorizationGrant(AuthorizationGrant value);
    [CompilerGeneratedAttribute]
public AuthorizationError get_AuthorizationError();
    [CompilerGeneratedAttribute]
public void set_AuthorizationError(AuthorizationError value);
    [CompilerGeneratedAttribute]
public Authorization get_Authorization();
    [CompilerGeneratedAttribute]
public void set_Authorization(Authorization value);
    public bool get_IsAuthorized();
    public bool get_HasError();
}
public class Microsoft.VisualStudio.Services.DelegatedAuthorization.AuthorizationDescription : object {
    [CompilerGeneratedAttribute]
private Registration <ClientRegistration>k__BackingField;
    [CompilerGeneratedAttribute]
private InitiationError <InitiationError>k__BackingField;
    [CompilerGeneratedAttribute]
private AuthorizationScopeDescription[] <ScopeDescriptions>k__BackingField;
    public Registration ClientRegistration { get; public set; }
    [JsonConverterAttribute("Newtonsoft.Json.Converters.StringEnumConverter")]
public InitiationError InitiationError { get; public set; }
    public AuthorizationScopeDescription[] ScopeDescriptions { get; public set; }
    public bool HasError { get; }
    [CompilerGeneratedAttribute]
public Registration get_ClientRegistration();
    [CompilerGeneratedAttribute]
public void set_ClientRegistration(Registration value);
    [CompilerGeneratedAttribute]
public InitiationError get_InitiationError();
    [CompilerGeneratedAttribute]
public void set_InitiationError(InitiationError value);
    [CompilerGeneratedAttribute]
public AuthorizationScopeDescription[] get_ScopeDescriptions();
    [CompilerGeneratedAttribute]
public void set_ScopeDescriptions(AuthorizationScopeDescription[] value);
    public bool get_HasError();
}
public class Microsoft.VisualStudio.Services.DelegatedAuthorization.AuthorizationDetails : object {
    [CompilerGeneratedAttribute]
private Authorization <Authorization>k__BackingField;
    [CompilerGeneratedAttribute]
private Registration <ClientRegistration>k__BackingField;
    [CompilerGeneratedAttribute]
private AuthorizationScopeDescription[] <ScopeDescriptions>k__BackingField;
    public Authorization Authorization { get; public set; }
    public Registration ClientRegistration { get; public set; }
    public AuthorizationScopeDescription[] ScopeDescriptions { get; public set; }
    [CompilerGeneratedAttribute]
public Authorization get_Authorization();
    [CompilerGeneratedAttribute]
public void set_Authorization(Authorization value);
    [CompilerGeneratedAttribute]
public Registration get_ClientRegistration();
    [CompilerGeneratedAttribute]
public void set_ClientRegistration(Registration value);
    [CompilerGeneratedAttribute]
public AuthorizationScopeDescription[] get_ScopeDescriptions();
    [CompilerGeneratedAttribute]
public void set_ScopeDescriptions(AuthorizationScopeDescription[] value);
}
public enum Microsoft.VisualStudio.Services.DelegatedAuthorization.AuthorizationError : Enum {
    public int value__;
    public static AuthorizationError None;
    public static AuthorizationError ClientIdRequired;
    public static AuthorizationError InvalidClientId;
    public static AuthorizationError ResponseTypeRequired;
    public static AuthorizationError ResponseTypeNotSupported;
    public static AuthorizationError ScopeRequired;
    public static AuthorizationError InvalidScope;
    public static AuthorizationError RedirectUriRequired;
    public static AuthorizationError InsecureRedirectUri;
    public static AuthorizationError InvalidRedirectUri;
    public static AuthorizationError InvalidUserId;
    public static AuthorizationError InvalidUserType;
    public static AuthorizationError AccessDenied;
}
[KnownTypeAttribute("Microsoft.VisualStudio.Services.DelegatedAuthorization.RefreshTokenGrant")]
[KnownTypeAttribute("Microsoft.VisualStudio.Services.DelegatedAuthorization.JwtBearerAuthorizationGrant")]
[JsonConverterAttribute("Microsoft.VisualStudio.Services.DelegatedAuthorization.AuthorizationGrantJsonConverter")]
public abstract class Microsoft.VisualStudio.Services.DelegatedAuthorization.AuthorizationGrant : object {
    [CompilerGeneratedAttribute]
private GrantType <GrantType>k__BackingField;
    [JsonConverterAttribute("Newtonsoft.Json.Converters.StringEnumConverter")]
public GrantType GrantType { get; private set; }
    public AuthorizationGrant(GrantType grantType);
    [CompilerGeneratedAttribute]
public GrantType get_GrantType();
    [CompilerGeneratedAttribute]
private void set_GrantType(GrantType value);
}
public class Microsoft.VisualStudio.Services.DelegatedAuthorization.AuthorizationGrantJsonConverter : VssJsonCreationConverter`1<AuthorizationGrant> {
    protected virtual AuthorizationGrant Create(Type objectType, JObject jsonObject);
}
[ExceptionMappingAttribute("0.0", "3.0", "AuthorizationIdNotFoundException", "Microsoft.VisualStudio.Services.DelegatedAuthorization.AuthorizationIdNotFoundException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.DelegatedAuthorization.AuthorizationIdNotFoundException : VssServiceException {
    public AuthorizationIdNotFoundException(string message);
    public AuthorizationIdNotFoundException(string message, Exception innerException);
}
public class Microsoft.VisualStudio.Services.DelegatedAuthorization.AuthorizationScopeDescription : object {
    public static string FallbackMarket;
    [CompilerGeneratedAttribute]
private string <Market>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    public string Market { get; protected set; }
    public string Title { get; protected set; }
    public string Description { get; protected set; }
    public AuthorizationScopeDescription(string market, string title, string description);
    private static AuthorizationScopeDescription();
    [CompilerGeneratedAttribute]
public string get_Market();
    [CompilerGeneratedAttribute]
protected void set_Market(string value);
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
protected void set_Title(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
protected void set_Description(string value);
}
[ResourceAreaAttribute("0AD75E84-88AE-4325-84B5-EBB30910283C")]
[ObsoleteAttribute("This class has been deprecated. Please use Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.DelegatedAuthorizationHttpClient or Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.TokenHttpClient instead.")]
public class Microsoft.VisualStudio.Services.DelegatedAuthorization.Client.DelegatedAuthorizationHttpClient : VssHttpClientBase {
    private static Dictionary`2<string, Type> s_translatedExceptions;
    private static ApiResourceVersion s_currentApiVersion;
    protected IDictionary`2<string, Type> TranslatedExceptions { get; }
    private static DelegatedAuthorizationHttpClient();
    public DelegatedAuthorizationHttpClient(Uri baseUrl, VssCredentials credentials);
    public DelegatedAuthorizationHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public DelegatedAuthorizationHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public DelegatedAuthorizationHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public DelegatedAuthorizationHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.DelegatedAuthorization.Client.DelegatedAuthorizationHttpClient/<Exchange>d__6")]
[ObsoleteAttribute("This methos has been deprecated. Please use Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.SessionTokenHttpClient.GetAccessTokenAsync instead.")]
public Task`1<AccessToken> Exchange(string key, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.DelegatedAuthorization.Client.DelegatedAuthorizationHttpClient/<Exchange>d__7")]
[ObsoleteAttribute("This methos has been deprecated. Please use Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.SessionTokenHttpClient.GetAccessTokenAsync instead.")]
public virtual Task`1<AccessToken> Exchange(bool isPublic, string key, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.DelegatedAuthorization.Client.DelegatedAuthorizationHttpClient/<CreateSessionToken>d__8")]
[ObsoleteAttribute("This methos has been deprecated. Please use Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.SessionTokenHttpClient.CreateSessionTokenAsync instead.")]
public Task`1<SessionToken> CreateSessionToken(Nullable`1<Guid> clientId, Nullable`1<Guid> userId, string displayName, Nullable`1<DateTime> validTo, string scope, IList`1<Guid> targetAccounts, SessionTokenType tokenType, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.DelegatedAuthorization.Client.DelegatedAuthorizationHttpClient/<CreateSessionToken>d__9")]
[ObsoleteAttribute("This methos has been deprecated. Please use Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.SessionTokenHttpClient.CreateSessionTokenAsync instead.")]
public Task`1<SessionToken> CreateSessionToken(bool isPublic, Nullable`1<Guid> clientId, Nullable`1<Guid> userId, string displayName, Nullable`1<DateTime> validTo, string scope, IList`1<Guid> targetAccounts, SessionTokenType tokenType, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.DelegatedAuthorization.Client.DelegatedAuthorizationHttpClient/<CreateSessionToken>d__10")]
[ObsoleteAttribute("This methos has been deprecated. Please use Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.SessionTokenHttpClient.CreateSessionTokenAsync instead.")]
public Task`1<SessionToken> CreateSessionToken(string source, bool isPublic, Nullable`1<Guid> clientId, Nullable`1<Guid> userId, string displayName, Nullable`1<DateTime> validTo, string scope, IList`1<Guid> targetAccounts, SessionTokenType tokenType, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.DelegatedAuthorization.Client.DelegatedAuthorizationHttpClient/<CreateSessionToken>d__11")]
[ObsoleteAttribute("This methos has been deprecated. Please use Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.SessionTokenHttpClient.CreateSessionTokenAsync instead.")]
public Task`1<SessionToken> CreateSessionToken(string publicData, string source, bool isPublic, Nullable`1<Guid> clientId, Nullable`1<Guid> userId, string displayName, Nullable`1<DateTime> validTo, string scope, IList`1<Guid> targetAccounts, SessionTokenType tokenType, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.DelegatedAuthorization.Client.DelegatedAuthorizationHttpClient/<UpdateSessionToken>d__12")]
[ObsoleteAttribute("This methos has been deprecated. Please use Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.SessionTokenHttpClient.CreateSessionTokenAsync instead.")]
public Task`1<SessionToken> UpdateSessionToken(Guid authorizationId, string displayName, string scope, Nullable`1<DateTime> validTo, IList`1<Guid> targetAccounts, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.DelegatedAuthorization.Client.DelegatedAuthorizationHttpClient/<UpdateSessionToken>d__13")]
[ObsoleteAttribute("This methos has been deprecated. Please use Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.SessionTokenHttpClient.CreateSessionTokenAsync instead.")]
public Task`1<SessionToken> UpdateSessionToken(bool isPublic, Guid authorizationId, string displayName, string scope, Nullable`1<DateTime> validTo, IList`1<Guid> targetAccounts, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.DelegatedAuthorization.Client.DelegatedAuthorizationHttpClient/<ListSessionTokens>d__14")]
[ObsoleteAttribute("This methos has been deprecated. Please use Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.SessionTokenHttpClient.GetSessionTokensAsync instead.")]
public Task`1<List`1<SessionToken>> ListSessionTokens(object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.DelegatedAuthorization.Client.DelegatedAuthorizationHttpClient/<ListSessionTokens>d__15")]
[ObsoleteAttribute("This methos has been deprecated. Please use Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.SessionTokenHttpClient.GetSessionTokensAsync instead.")]
public Task`1<List`1<SessionToken>> ListSessionTokens(bool isPublic, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.DelegatedAuthorization.Client.DelegatedAuthorizationHttpClient/<ListSessionTokens>d__16")]
[ObsoleteAttribute("This methos has been deprecated. Please use Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.SessionTokenHttpClient.GetSessionTokensAsync instead.")]
public Task`1<List`1<SessionToken>> ListSessionTokens(bool includePublicData, bool isPublic, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.DelegatedAuthorization.Client.DelegatedAuthorizationHttpClient/<GetSessionToken>d__17")]
[ObsoleteAttribute("This methos has been deprecated. Please use Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.SessionTokenHttpClient.GetSessionTokenAsync instead.")]
public Task`1<SessionToken> GetSessionToken(Guid authorizationId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.DelegatedAuthorization.Client.DelegatedAuthorizationHttpClient/<GetSessionToken>d__18")]
[ObsoleteAttribute("This methos has been deprecated. Please use Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.SessionTokenHttpClient.GetSessionTokenAsync instead.")]
public Task`1<SessionToken> GetSessionToken(bool isPublic, Guid authorizationId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.DelegatedAuthorization.Client.DelegatedAuthorizationHttpClient/<RemovePublicKey>d__19")]
[ObsoleteAttribute("This methos has been deprecated. Please use Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.SessionTokenHttpClient.RemovePublicKeyAsync instead.")]
public Task RemovePublicKey(string publicKey, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.DelegatedAuthorization.Client.DelegatedAuthorizationHttpClient/<RevokeSessionToken>d__20")]
[ObsoleteAttribute("This methos has been deprecated. Please use Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.SessionTokenHttpClient.RemovePublicKeyAsync instead.")]
public Task RevokeSessionToken(Guid authorizationId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.DelegatedAuthorization.Client.DelegatedAuthorizationHttpClient/<RevokeSessionToken>d__21")]
[ObsoleteAttribute("This methos has been deprecated. Please use Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.SessionTokenHttpClient.RevokeSessionTokenAsync instead.")]
public Task RevokeSessionToken(bool isPublic, Guid authorizationId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.DelegatedAuthorization.Client.DelegatedAuthorizationHttpClient/<InitiateAuthorization>d__22")]
[ObsoleteAttribute("This methos has been deprecated. Please use Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.DelegatedAuthorizationHttpClient.InitiateAuthorizationAsync instead.")]
public Task`1<AuthorizationDescription> InitiateAuthorization(Guid userId, ResponseType responseType, Guid clientId, Uri redirectUri, string scopes, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.DelegatedAuthorization.Client.DelegatedAuthorizationHttpClient/<Authorize>d__23")]
[ObsoleteAttribute("This methos has been deprecated. Please use Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.DelegatedAuthorizationHttpClient.InitiateAuthorizationAsync instead.")]
public Task`1<AuthorizationDecision> Authorize(Guid userId, ResponseType responseType, Guid clientId, Uri redirectUri, string scopes, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.DelegatedAuthorization.Client.DelegatedAuthorizationHttpClient/<RevokeAuthorization>d__24")]
[ObsoleteAttribute("This methos has been deprecated. Please use Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.DelegatedAuthorizationHttpClient.RevokeAuthorizationAsync instead.")]
public Task RevokeAuthorization(Guid userId, Guid authorizationId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.DelegatedAuthorization.Client.DelegatedAuthorizationHttpClient/<GetAuthorizations>d__25")]
[ObsoleteAttribute("This methos has been deprecated. Please use Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.DelegatedAuthorizationHttpClient.GetAuthorizationsAsync instead.")]
public Task`1<IEnumerable`1<AuthorizationDetails>> GetAuthorizations(Guid userId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.DelegatedAuthorization.Client.DelegatedAuthorizationHttpClient/<IssueAppSessionToken>d__26")]
[ObsoleteAttribute("This methos has been deprecated. Please use Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.SessionTokenHttpClient.IssueAppSessionTokenAsync instead.")]
public Task`1<AppSessionTokenResult> IssueAppSessionToken(Guid clientId, Nullable`1<Guid> userId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.DelegatedAuthorization.Client.DelegatedAuthorizationHttpClient/<AuthorizeHost>d__27")]
[ObsoleteAttribute("This methos has been deprecated. Please use Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.DelegatedAuthorizationHttpClient.AuthorizeHostAsync instead.")]
public Task`1<HostAuthorizationDecision> AuthorizeHost(Guid clientId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.DelegatedAuthorization.Client.DelegatedAuthorizationHttpClient/<RevokeHostAuthorization>d__28")]
[ObsoleteAttribute("This methos has been deprecated. Please use Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.DelegatedAuthorizationHttpClient.RevokeHostAuthorizationAsync instead.")]
public Task`1<HttpResponseMessage> RevokeHostAuthorization(Guid clientId, Nullable`1<Guid> hostId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.DelegatedAuthorization.Client.DelegatedAuthorizationHttpClient/<GetHostAuthorizations>d__29")]
[ObsoleteAttribute("This methos has been deprecated. Please use Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.DelegatedAuthorizationHttpClient.GetHostAuthorizationsAsync instead.")]
public Task`1<IList`1<HostAuthorization>> GetHostAuthorizations(Guid hostId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.DelegatedAuthorization.Client.DelegatedAuthorizationHttpClient/<ExchangeAppToken>d__30")]
[ObsoleteAttribute("This methos has been deprecated. Please use Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.SessionTokenHttpClient.ExchangeAppTokenAsync instead.")]
public Task`1<AccessTokenResult> ExchangeAppToken(string appToken, string clientSecret, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.DelegatedAuthorization.Client.DelegatedAuthorizationHttpClient/<CreateRegistration>d__31")]
[ObsoleteAttribute("This methos has been deprecated. Please use Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.DelegatedAuthorizationHttpClient.CreateRegistrationAsync instead.")]
public Task`1<Registration> CreateRegistration(Registration registration, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.DelegatedAuthorization.Client.DelegatedAuthorizationHttpClient/<CreateRegistration>d__32")]
[ObsoleteAttribute("This methos has been deprecated. Please use Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.DelegatedAuthorizationHttpClient.CreateRegistrationAsync instead.")]
public Task`1<Registration> CreateRegistration(Registration registration, bool includeSecret, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.DelegatedAuthorization.Client.DelegatedAuthorizationHttpClient/<UpdateRegistration>d__33")]
[ObsoleteAttribute("This methos has been deprecated. Please use Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.DelegatedAuthorizationHttpClient.UpdateRegistrationAsync instead.")]
public Task`1<Registration> UpdateRegistration(Registration registration, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.DelegatedAuthorization.Client.DelegatedAuthorizationHttpClient/<UpdateRegistration>d__34")]
[ObsoleteAttribute("This methos has been deprecated. Please use Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.DelegatedAuthorizationHttpClient.UpdateRegistrationAsync instead.")]
public Task`1<Registration> UpdateRegistration(Registration registration, bool includeSecret, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.DelegatedAuthorization.Client.DelegatedAuthorizationHttpClient/<Delete>d__35")]
[ObsoleteAttribute("This methos has been deprecated. Please use Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.DelegatedAuthorizationHttpClient.DeleteRegistrationAsync instead.")]
public Task Delete(Guid registrationId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.DelegatedAuthorization.Client.DelegatedAuthorizationHttpClient/<GetRegistration>d__36")]
[ObsoleteAttribute("This methos has been deprecated. Please use Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.DelegatedAuthorizationHttpClient.GetRegistrationAsync instead.")]
public Task`1<Registration> GetRegistration(Guid registrationId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.DelegatedAuthorization.Client.DelegatedAuthorizationHttpClient/<GetRegistration>d__37")]
[ObsoleteAttribute("This methos has been deprecated. Please use Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.DelegatedAuthorizationHttpClient.GetRegistrationAsync instead.")]
public Task`1<Registration> GetRegistration(Guid registrationId, bool includeSecret, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.DelegatedAuthorization.Client.DelegatedAuthorizationHttpClient/<GetSecret>d__38")]
[ObsoleteAttribute("This methos has been deprecated. Please use Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.DelegatedAuthorizationHttpClient.GetSecretAsync instead.")]
public Task`1<JsonWebToken> GetSecret(Guid registrationId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.DelegatedAuthorization.Client.DelegatedAuthorizationHttpClient/<ListRegistrations>d__39")]
[ObsoleteAttribute("This methos has been deprecated. Please use Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.DelegatedAuthorizationHttpClient.GetRegistrationsAsync instead.")]
public Task`1<IList`1<Registration>> ListRegistrations(object userState, CancellationToken cancellationToken);
    protected virtual IDictionary`2<string, Type> get_TranslatedExceptions();
}
[ResourceAreaAttribute("55967393-20EF-45C6-A96C-B5D5D5986A9A")]
public class Microsoft.VisualStudio.Services.DelegatedAuthorization.Client.TokensHttpClient : VssHttpClientBase {
    public TokensHttpClient(Uri baseUrl, VssCredentials credentials);
    public TokensHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public TokensHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public TokensHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public TokensHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    public Task`1<PatTokenResult> CreatePatAsync(PatTokenCreateRequest patTokenCreateRequest, object userState, CancellationToken cancellationToken);
    public Task`1<PatTokenResult> GetPatAsync(Guid authorizationId, object userState, CancellationToken cancellationToken);
    public Task`1<PagedPatTokens> ListPatsAsync(Nullable`1<DisplayFilterOptions> displayFilterOption, Nullable`1<SortByOptions> sortByOption, Nullable`1<bool> isSortAscending, string continuationToken, Nullable`1<int> top, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.DelegatedAuthorization.Client.TokensHttpClient/<RevokeAsync>d__8")]
public Task RevokeAsync(Guid authorizationId, object userState, CancellationToken cancellationToken);
    public Task`1<PatTokenResult> UpdatePatAsync(PatTokenUpdateRequest patTokenUpdateRequest, object userState, CancellationToken cancellationToken);
}
public enum Microsoft.VisualStudio.Services.DelegatedAuthorization.ClientType : Enum {
    public int value__;
    public static ClientType Confidential;
    public static ClientType Public;
    public static ClientType MediumTrust;
    public static ClientType HighTrust;
    public static ClientType FullTrust;
    public static ClientType Application;
}
[DataContractAttribute]
[KnownTypeAttribute("Microsoft.VisualStudio.Services.DelegatedAuthorization.ApplicationClientRegistration")]
[KnownTypeAttribute("Microsoft.VisualStudio.Services.DelegatedAuthorization.ConfidentialClientRegistration")]
[KnownTypeAttribute("Microsoft.VisualStudio.Services.DelegatedAuthorization.FullTrustClientRegistration")]
[KnownTypeAttribute("Microsoft.VisualStudio.Services.DelegatedAuthorization.HighTrustClientRegistration")]
[KnownTypeAttribute("Microsoft.VisualStudio.Services.DelegatedAuthorization.MediumTrustClientRegistration")]
[KnownTypeAttribute("Microsoft.VisualStudio.Services.DelegatedAuthorization.PublicClientRegistration")]
public abstract class Microsoft.VisualStudio.Services.DelegatedAuthorization.CommonRegistration : object {
    [CompilerGeneratedAttribute]
private Guid <RegistrationId>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <IdentityId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RegistrationName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RegistrationDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OrganizationName>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <OrganizationLocation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResponseTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<Uri> <RedirectUris>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scopes>k__BackingField;
    [CompilerGeneratedAttribute]
private ClientType <ClientType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Issuer>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <RegistrationLogoSecureLocation>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <RegistrationTermsOfServiceLocation>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <RegistrationPrivacyStatementLocation>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsValid>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <SecretVersionId>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <ValidFrom>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <SecretValidTo>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Secret>k__BackingField;
    [DataMemberAttribute]
public Guid RegistrationId { get; public set; }
    [DataMemberAttribute]
public Guid IdentityId { get; public set; }
    [DataMemberAttribute]
public string RegistrationName { get; public set; }
    [DataMemberAttribute]
public string RegistrationDescription { get; public set; }
    [DataMemberAttribute]
public string OrganizationName { get; public set; }
    [DataMemberAttribute]
public Uri OrganizationLocation { get; public set; }
    [DataMemberAttribute]
public string ResponseTypes { get; public set; }
    [DataMemberAttribute]
public IList`1<Uri> RedirectUris { get; public set; }
    [DataMemberAttribute]
public string Scopes { get; public set; }
    [DataMemberAttribute]
public ClientType ClientType { get; public set; }
    [DataMemberAttribute]
[EditorBrowsableAttribute("1")]
internal string Issuer { get; internal set; }
    [DataMemberAttribute]
public Uri RegistrationLogoSecureLocation { get; public set; }
    [DataMemberAttribute]
public Uri RegistrationTermsOfServiceLocation { get; public set; }
    [DataMemberAttribute]
public Uri RegistrationPrivacyStatementLocation { get; public set; }
    [DataMemberAttribute]
public bool IsValid { get; public set; }
    [DataMemberAttribute]
public Guid SecretVersionId { get; public set; }
    [DataMemberAttribute]
[EditorBrowsableAttribute("1")]
internal Nullable`1<DateTimeOffset> ValidFrom { get; internal set; }
    [DataMemberAttribute]
[EditorBrowsableAttribute("1")]
internal Nullable`1<DateTimeOffset> SecretValidTo { get; internal set; }
    [DataMemberAttribute]
public string Secret { get; public set; }
    public CommonRegistration(Registration registration);
    [CompilerGeneratedAttribute]
public Guid get_RegistrationId();
    [CompilerGeneratedAttribute]
public void set_RegistrationId(Guid value);
    [CompilerGeneratedAttribute]
public Guid get_IdentityId();
    [CompilerGeneratedAttribute]
public void set_IdentityId(Guid value);
    [CompilerGeneratedAttribute]
public string get_RegistrationName();
    [CompilerGeneratedAttribute]
public void set_RegistrationName(string value);
    [CompilerGeneratedAttribute]
public string get_RegistrationDescription();
    [CompilerGeneratedAttribute]
public void set_RegistrationDescription(string value);
    [CompilerGeneratedAttribute]
public string get_OrganizationName();
    [CompilerGeneratedAttribute]
public void set_OrganizationName(string value);
    [CompilerGeneratedAttribute]
public Uri get_OrganizationLocation();
    [CompilerGeneratedAttribute]
public void set_OrganizationLocation(Uri value);
    [CompilerGeneratedAttribute]
public string get_ResponseTypes();
    [CompilerGeneratedAttribute]
public void set_ResponseTypes(string value);
    [CompilerGeneratedAttribute]
public IList`1<Uri> get_RedirectUris();
    [CompilerGeneratedAttribute]
public void set_RedirectUris(IList`1<Uri> value);
    [CompilerGeneratedAttribute]
public string get_Scopes();
    [CompilerGeneratedAttribute]
public void set_Scopes(string value);
    [CompilerGeneratedAttribute]
public ClientType get_ClientType();
    [CompilerGeneratedAttribute]
public void set_ClientType(ClientType value);
    [CompilerGeneratedAttribute]
internal string get_Issuer();
    [CompilerGeneratedAttribute]
internal void set_Issuer(string value);
    [CompilerGeneratedAttribute]
public Uri get_RegistrationLogoSecureLocation();
    [CompilerGeneratedAttribute]
public void set_RegistrationLogoSecureLocation(Uri value);
    [CompilerGeneratedAttribute]
public Uri get_RegistrationTermsOfServiceLocation();
    [CompilerGeneratedAttribute]
public void set_RegistrationTermsOfServiceLocation(Uri value);
    [CompilerGeneratedAttribute]
public Uri get_RegistrationPrivacyStatementLocation();
    [CompilerGeneratedAttribute]
public void set_RegistrationPrivacyStatementLocation(Uri value);
    [CompilerGeneratedAttribute]
public bool get_IsValid();
    [CompilerGeneratedAttribute]
public void set_IsValid(bool value);
    [CompilerGeneratedAttribute]
public Guid get_SecretVersionId();
    [CompilerGeneratedAttribute]
public void set_SecretVersionId(Guid value);
    [CompilerGeneratedAttribute]
internal Nullable`1<DateTimeOffset> get_ValidFrom();
    [CompilerGeneratedAttribute]
internal void set_ValidFrom(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
internal Nullable`1<DateTimeOffset> get_SecretValidTo();
    [CompilerGeneratedAttribute]
internal void set_SecretValidTo(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public string get_Secret();
    [CompilerGeneratedAttribute]
public void set_Secret(string value);
    public virtual Registration ToRegistration();
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.DelegatedAuthorization.ConfidentialClientRegistration : CommonRegistration {
    [CompilerGeneratedAttribute]
private Uri <RegistrationLocation>k__BackingField;
    [DataMemberAttribute]
public Uri RegistrationLocation { get; public set; }
    public ConfidentialClientRegistration(Registration registration);
    [CompilerGeneratedAttribute]
public Uri get_RegistrationLocation();
    [CompilerGeneratedAttribute]
public void set_RegistrationLocation(Uri value);
    public virtual Registration ToRegistration();
}
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.DelegatedAuthorization.CreatedByOptions : Enum {
    public int value__;
    [EnumMemberAttribute]
public static CreatedByOptions VstsWebUi;
    [EnumMemberAttribute]
public static CreatedByOptions NonVstsWebUi;
    [EnumMemberAttribute]
public static CreatedByOptions All;
}
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.DelegatedAuthorization.DisplayFilterOptions : Enum {
    public int value__;
    [EnumMemberAttribute]
public static DisplayFilterOptions Active;
    [EnumMemberAttribute]
public static DisplayFilterOptions Revoked;
    [EnumMemberAttribute]
public static DisplayFilterOptions Expired;
    [EnumMemberAttribute]
public static DisplayFilterOptions All;
}
public class Microsoft.VisualStudio.Services.DelegatedAuthorization.ExchangeAccessTokenKeyException : VssServiceException {
    public ExchangeAccessTokenKeyException(string message);
}
[ExceptionMappingAttribute("0.0", "3.0", "ExchangeAppTokenCreateException", "Microsoft.VisualStudio.Services.DelegatedAuthorization.ExchangeAppTokenCreateException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.DelegatedAuthorization.ExchangeAppTokenCreateException : VssServiceException {
    public ExchangeAppTokenCreateException(string message);
    public ExchangeAppTokenCreateException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "ExchangeAppTokenNotFoundException", "Microsoft.VisualStudio.Services.DelegatedAuthorization.ExchangeAppTokenNotFoundException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.DelegatedAuthorization.ExchangeAppTokenNotFoundException : VssServiceException {
    public ExchangeAppTokenNotFoundException(string message);
    public ExchangeAppTokenNotFoundException(string message, Exception innerException);
}
public class Microsoft.VisualStudio.Services.DelegatedAuthorization.ExpiringToken : object {
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <AuthorizationId>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <UserId>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <ValidFrom>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <ValidTo>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scopes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Audience>k__BackingField;
    public string DisplayName { get; public set; }
    public Guid AuthorizationId { get; public set; }
    public Guid UserId { get; public set; }
    public DateTime ValidFrom { get; public set; }
    public DateTime ValidTo { get; public set; }
    public string Scopes { get; public set; }
    public string Audience { get; public set; }
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public Guid get_AuthorizationId();
    [CompilerGeneratedAttribute]
public void set_AuthorizationId(Guid value);
    [CompilerGeneratedAttribute]
public Guid get_UserId();
    [CompilerGeneratedAttribute]
public void set_UserId(Guid value);
    [CompilerGeneratedAttribute]
public DateTime get_ValidFrom();
    [CompilerGeneratedAttribute]
public void set_ValidFrom(DateTime value);
    [CompilerGeneratedAttribute]
public DateTime get_ValidTo();
    [CompilerGeneratedAttribute]
public void set_ValidTo(DateTime value);
    [CompilerGeneratedAttribute]
public string get_Scopes();
    [CompilerGeneratedAttribute]
public void set_Scopes(string value);
    [CompilerGeneratedAttribute]
public string get_Audience();
    [CompilerGeneratedAttribute]
public void set_Audience(string value);
    public virtual string ToString();
}
[DataContractAttribute]
[NotificationEventBindingsAttribute("0", "ms.vss-sps-notifications.expiring-token-event")]
public class Microsoft.VisualStudio.Services.DelegatedAuthorization.ExpiringTokenEvent : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scopes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Expiration>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccountUrl>k__BackingField;
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public string Scopes { get; public set; }
    [DataMemberAttribute]
public string Expiration { get; public set; }
    [DataMemberAttribute]
public string AccountUrl { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Scopes();
    [CompilerGeneratedAttribute]
public void set_Scopes(string value);
    [CompilerGeneratedAttribute]
public string get_Expiration();
    [CompilerGeneratedAttribute]
public void set_Expiration(string value);
    [CompilerGeneratedAttribute]
public string get_AccountUrl();
    [CompilerGeneratedAttribute]
public void set_AccountUrl(string value);
}
[ExceptionMappingAttribute("0.0", "3.0", "FailedToIssueAccessTokenException", "Microsoft.VisualStudio.Services.DelegatedAuthorization.FailedToIssueAccessTokenException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.DelegatedAuthorization.FailedToIssueAccessTokenException : VssServiceException {
    public FailedToIssueAccessTokenException(string message);
    public FailedToIssueAccessTokenException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "FailedToReadTenantPoliciesException", "Microsoft.VisualStudio.Services.DelegatedAuthorization.FailedToReadTenantPoliciesException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.DelegatedAuthorization.FailedToReadTenantPoliciesException : VssServiceException {
    public FailedToReadTenantPoliciesException(string message);
    public FailedToReadTenantPoliciesException(string message, Exception innerException);
}
public class Microsoft.VisualStudio.Services.DelegatedAuthorization.FullTrustClientRegistration : CommonRegistration {
    [CompilerGeneratedAttribute]
private Uri <RegistrationLocation>k__BackingField;
    [DataMemberAttribute]
public Uri RegistrationLocation { get; public set; }
    public FullTrustClientRegistration(Registration registration);
    [CompilerGeneratedAttribute]
public Uri get_RegistrationLocation();
    [CompilerGeneratedAttribute]
public void set_RegistrationLocation(Uri value);
    public virtual Registration ToRegistration();
}
public enum Microsoft.VisualStudio.Services.DelegatedAuthorization.GrantType : Enum {
    public int value__;
    public static GrantType None;
    public static GrantType JwtBearer;
    public static GrantType RefreshToken;
    public static GrantType Implicit;
    public static GrantType ClientCredentials;
}
public class Microsoft.VisualStudio.Services.DelegatedAuthorization.HighTrustClientRegistration : CommonRegistration {
    public HighTrustClientRegistration(Registration registration);
}
public class Microsoft.VisualStudio.Services.DelegatedAuthorization.HostAuthorization : object {
    [CompilerGeneratedAttribute]
private Guid <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <RegistrationId>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <HostId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsValid>k__BackingField;
    public Guid Id { get; public set; }
    public Guid RegistrationId { get; public set; }
    public Guid HostId { get; public set; }
    public bool IsValid { get; public set; }
    [CompilerGeneratedAttribute]
public Guid get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(Guid value);
    [CompilerGeneratedAttribute]
public Guid get_RegistrationId();
    [CompilerGeneratedAttribute]
public void set_RegistrationId(Guid value);
    [CompilerGeneratedAttribute]
public Guid get_HostId();
    [CompilerGeneratedAttribute]
public void set_HostId(Guid value);
    [CompilerGeneratedAttribute]
public bool get_IsValid();
    [CompilerGeneratedAttribute]
public void set_IsValid(bool value);
}
[ExceptionMappingAttribute("0.0", "3.0", "HostAuthorizationCreateException", "Microsoft.VisualStudio.Services.DelegatedAuthorization.HostAuthorizationCreateException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.DelegatedAuthorization.HostAuthorizationCreateException : VssServiceException {
    public HostAuthorizationCreateException(string message);
    public HostAuthorizationCreateException(string message, Exception innerException);
}
public class Microsoft.VisualStudio.Services.DelegatedAuthorization.HostAuthorizationDecision : object {
    [CompilerGeneratedAttribute]
private HostAuthorizationError <HostAuthorizationError>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <HostAuthorizationId>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <RegistrationId>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <SetupUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RegistrationName>k__BackingField;
    [CompilerGeneratedAttribute]
private ClientType <ClientType>k__BackingField;
    public HostAuthorizationError HostAuthorizationError { get; public set; }
    public Guid HostAuthorizationId { get; public set; }
    public Guid RegistrationId { get; public set; }
    public Uri SetupUri { get; public set; }
    public string RegistrationName { get; public set; }
    public ClientType ClientType { get; public set; }
    public bool HasError { get; }
    [CompilerGeneratedAttribute]
public HostAuthorizationError get_HostAuthorizationError();
    [CompilerGeneratedAttribute]
public void set_HostAuthorizationError(HostAuthorizationError value);
    [CompilerGeneratedAttribute]
public Guid get_HostAuthorizationId();
    [CompilerGeneratedAttribute]
public void set_HostAuthorizationId(Guid value);
    [CompilerGeneratedAttribute]
public Guid get_RegistrationId();
    [CompilerGeneratedAttribute]
public void set_RegistrationId(Guid value);
    [CompilerGeneratedAttribute]
public Uri get_SetupUri();
    [CompilerGeneratedAttribute]
public void set_SetupUri(Uri value);
    [CompilerGeneratedAttribute]
public string get_RegistrationName();
    [CompilerGeneratedAttribute]
public void set_RegistrationName(string value);
    [CompilerGeneratedAttribute]
public ClientType get_ClientType();
    [CompilerGeneratedAttribute]
public void set_ClientType(ClientType value);
    public bool get_HasError();
}
public enum Microsoft.VisualStudio.Services.DelegatedAuthorization.HostAuthorizationError : Enum {
    public int value__;
    public static HostAuthorizationError None;
    public static HostAuthorizationError ClientIdRequired;
    public static HostAuthorizationError AccessDenied;
    public static HostAuthorizationError FailedToAuthorizeHost;
    public static HostAuthorizationError ClientIdNotFound;
    public static HostAuthorizationError InvalidClientId;
}
public enum Microsoft.VisualStudio.Services.DelegatedAuthorization.InitiationError : Enum {
    public int value__;
    public static InitiationError None;
    public static InitiationError ClientIdRequired;
    public static InitiationError InvalidClientId;
    public static InitiationError ResponseTypeRequired;
    public static InitiationError ResponseTypeNotSupported;
    public static InitiationError ScopeRequired;
    public static InitiationError InvalidScope;
    public static InitiationError RedirectUriRequired;
    public static InitiationError InsecureRedirectUri;
    public static InitiationError InvalidRedirectUri;
}
public class Microsoft.VisualStudio.Services.DelegatedAuthorization.InvalidPersonalAccessTokenException : VssServiceException {
    public InvalidPersonalAccessTokenException(string message);
}
public class Microsoft.VisualStudio.Services.DelegatedAuthorization.InvalidPublicKeyException : VssServiceException {
    public InvalidPublicKeyException(string message);
}
public class Microsoft.VisualStudio.Services.DelegatedAuthorization.JwtBearerAuthorizationGrant : AuthorizationGrant {
    [CompilerGeneratedAttribute]
private JsonWebToken <Jwt>k__BackingField;
    public JsonWebToken Jwt { get; private set; }
    public JwtBearerAuthorizationGrant(JsonWebToken jwt);
    [CompilerGeneratedAttribute]
public JsonWebToken get_Jwt();
    [CompilerGeneratedAttribute]
private void set_Jwt(JsonWebToken value);
    public virtual string ToString();
}
public class Microsoft.VisualStudio.Services.DelegatedAuthorization.MediumTrustClientRegistration : CommonRegistration {
    [CompilerGeneratedAttribute]
private string <PublicKey>k__BackingField;
    [DataMemberAttribute]
public string PublicKey { get; public set; }
    public MediumTrustClientRegistration(Registration registration);
    [CompilerGeneratedAttribute]
public string get_PublicKey();
    [CompilerGeneratedAttribute]
public void set_PublicKey(string value);
    public virtual Registration ToRegistration();
}
public class Microsoft.VisualStudio.Services.DelegatedAuthorization.PagedPatTokens : object {
    [CompilerGeneratedAttribute]
private string <ContinuationToken>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<PatToken> <PatTokens>k__BackingField;
    public string ContinuationToken { get; public set; }
    public IList`1<PatToken> PatTokens { get; public set; }
    public PagedPatTokens(string continuationToken, IList`1<PatToken> patTokens);
    [CompilerGeneratedAttribute]
public string get_ContinuationToken();
    [CompilerGeneratedAttribute]
public void set_ContinuationToken(string value);
    [CompilerGeneratedAttribute]
public IList`1<PatToken> get_PatTokens();
    [CompilerGeneratedAttribute]
public void set_PatTokens(IList`1<PatToken> value);
}
public class Microsoft.VisualStudio.Services.DelegatedAuthorization.PagedSessionTokens : object {
    [CompilerGeneratedAttribute]
private int <NextRowNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<SessionToken> <SessionTokens>k__BackingField;
    public int NextRowNumber { get; public set; }
    public IList`1<SessionToken> SessionTokens { get; public set; }
    [CompilerGeneratedAttribute]
public int get_NextRowNumber();
    [CompilerGeneratedAttribute]
public void set_NextRowNumber(int value);
    [CompilerGeneratedAttribute]
public IList`1<SessionToken> get_SessionTokens();
    [CompilerGeneratedAttribute]
public void set_SessionTokens(IList`1<SessionToken> value);
    public static PagedPatTokens op_Implicit(PagedSessionTokens s);
    public static string EncodeContinuationToken(int nextRowNumber);
    public static int DecodeContinuationToken(string continuationToken);
    private static PatToken ConvertSessionTokenToPatToken(SessionToken s);
}
[DataContractAttribute]
[NotificationEventBindingsAttribute("0", "ms.vss-sps-notifications.pat-added-event")]
public class Microsoft.VisualStudio.Services.DelegatedAuthorization.PATAddedEvent : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scopes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Expiration>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccountUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IPAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserAgent>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AdditionalInfo>k__BackingField;
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public string Scopes { get; public set; }
    [DataMemberAttribute]
public string Expiration { get; public set; }
    [DataMemberAttribute]
public string AccountUrl { get; public set; }
    [DataMemberAttribute]
public string IPAddress { get; public set; }
    [DataMemberAttribute]
public string UserAgent { get; public set; }
    [DataMemberAttribute]
public string AdditionalInfo { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Scopes();
    [CompilerGeneratedAttribute]
public void set_Scopes(string value);
    [CompilerGeneratedAttribute]
public string get_Expiration();
    [CompilerGeneratedAttribute]
public void set_Expiration(string value);
    [CompilerGeneratedAttribute]
public string get_AccountUrl();
    [CompilerGeneratedAttribute]
public void set_AccountUrl(string value);
    [CompilerGeneratedAttribute]
public string get_IPAddress();
    [CompilerGeneratedAttribute]
public void set_IPAddress(string value);
    [CompilerGeneratedAttribute]
public string get_UserAgent();
    [CompilerGeneratedAttribute]
public void set_UserAgent(string value);
    [CompilerGeneratedAttribute]
public string get_AdditionalInfo();
    [CompilerGeneratedAttribute]
public void set_AdditionalInfo(string value);
}
public class Microsoft.VisualStudio.Services.DelegatedAuthorization.PatToken : object {
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <ValidTo>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scope>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<Guid> <TargetAccounts>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <ValidFrom>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <AuthorizationId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Token>k__BackingField;
    public string DisplayName { get; public set; }
    public DateTime ValidTo { get; public set; }
    public string Scope { get; public set; }
    public IList`1<Guid> TargetAccounts { get; public set; }
    public DateTime ValidFrom { get; public set; }
    public Guid AuthorizationId { get; public set; }
    public string Token { get; public set; }
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public DateTime get_ValidTo();
    [CompilerGeneratedAttribute]
public void set_ValidTo(DateTime value);
    [CompilerGeneratedAttribute]
public string get_Scope();
    [CompilerGeneratedAttribute]
public void set_Scope(string value);
    [CompilerGeneratedAttribute]
public IList`1<Guid> get_TargetAccounts();
    [CompilerGeneratedAttribute]
public void set_TargetAccounts(IList`1<Guid> value);
    [CompilerGeneratedAttribute]
public DateTime get_ValidFrom();
    [CompilerGeneratedAttribute]
public void set_ValidFrom(DateTime value);
    [CompilerGeneratedAttribute]
public Guid get_AuthorizationId();
    [CompilerGeneratedAttribute]
public void set_AuthorizationId(Guid value);
    [CompilerGeneratedAttribute]
public string get_Token();
    [CompilerGeneratedAttribute]
public void set_Token(string value);
}
public class Microsoft.VisualStudio.Services.DelegatedAuthorization.PatTokenCreateRequest : object {
    public string DisplayName;
    public string Scope;
    public Nullable`1<DateTime> ValidTo;
    [DefaultValueAttribute("False")]
public bool AllOrgs;
}
public class Microsoft.VisualStudio.Services.DelegatedAuthorization.PatTokenResult : object {
    public PatToken PatToken;
    public SessionTokenError PatTokenError;
}
public class Microsoft.VisualStudio.Services.DelegatedAuthorization.PlatformDelegatedAuthorizationException : VssServiceException {
    public PlatformDelegatedAuthorizationException(string message);
}
public class Microsoft.VisualStudio.Services.DelegatedAuthorization.PublicClientRegistration : CommonRegistration {
    [CompilerGeneratedAttribute]
private Uri <RegistrationLocation>k__BackingField;
    [DataMemberAttribute]
public Uri RegistrationLocation { get; public set; }
    public PublicClientRegistration(Registration registration);
    [CompilerGeneratedAttribute]
public Uri get_RegistrationLocation();
    [CompilerGeneratedAttribute]
public void set_RegistrationLocation(Uri value);
    public virtual Registration ToRegistration();
}
public class Microsoft.VisualStudio.Services.DelegatedAuthorization.RefreshTokenGrant : AuthorizationGrant {
    [CompilerGeneratedAttribute]
private JsonWebToken <Jwt>k__BackingField;
    public JsonWebToken Jwt { get; private set; }
    public RefreshTokenGrant(JsonWebToken jwt);
    [CompilerGeneratedAttribute]
public JsonWebToken get_Jwt();
    [CompilerGeneratedAttribute]
private void set_Jwt(JsonWebToken value);
    public virtual string ToString();
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.DelegatedAuthorization.Registration : object {
    [CompilerGeneratedAttribute]
private Guid <RegistrationId>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <IdentityId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OrganizationName>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <OrganizationLocation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RegistrationName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RegistrationDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <RegistrationLocation>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <RegistrationLogoSecureLocation>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <RegistrationTermsOfServiceLocation>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <RegistrationPrivacyStatementLocation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResponseTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scopes>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <SecretVersionId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsValid>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<Uri> <RedirectUris>k__BackingField;
    [CompilerGeneratedAttribute]
private ClientType <ClientType>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsWellKnown>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <SecretValidTo>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Secret>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <SetupUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Issuer>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <ValidFrom>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccessHash>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PublicKey>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Guid> <TenantIds>k__BackingField;
    [DataMemberAttribute]
public Guid RegistrationId { get; public set; }
    [DataMemberAttribute]
public Guid IdentityId { get; public set; }
    [DataMemberAttribute]
public string OrganizationName { get; public set; }
    [DataMemberAttribute]
public Uri OrganizationLocation { get; public set; }
    [DataMemberAttribute]
public string RegistrationName { get; public set; }
    [DataMemberAttribute]
public string RegistrationDescription { get; public set; }
    [DataMemberAttribute]
public Uri RegistrationLocation { get; public set; }
    [DataMemberAttribute]
public Uri RegistrationLogoSecureLocation { get; public set; }
    [DataMemberAttribute]
public Uri RegistrationTermsOfServiceLocation { get; public set; }
    [DataMemberAttribute]
public Uri RegistrationPrivacyStatementLocation { get; public set; }
    [DataMemberAttribute]
public string ResponseTypes { get; public set; }
    [DataMemberAttribute]
public string Scopes { get; public set; }
    [DataMemberAttribute]
public Guid SecretVersionId { get; public set; }
    [DataMemberAttribute]
public bool IsValid { get; public set; }
    [DataMemberAttribute]
public IList`1<Uri> RedirectUris { get; public set; }
    [DataMemberAttribute]
public ClientType ClientType { get; public set; }
    [DataMemberAttribute]
public bool IsWellKnown { get; public set; }
    [DataMemberAttribute]
[EditorBrowsableAttribute("1")]
internal Nullable`1<DateTimeOffset> SecretValidTo { get; internal set; }
    [DataMemberAttribute]
public string Secret { get; public set; }
    [DataMemberAttribute]
public Uri SetupUri { get; public set; }
    [DataMemberAttribute]
[EditorBrowsableAttribute("1")]
internal string Issuer { get; internal set; }
    [DataMemberAttribute]
[EditorBrowsableAttribute("1")]
internal Nullable`1<DateTimeOffset> ValidFrom { get; internal set; }
    [DataMemberAttribute]
[EditorBrowsableAttribute("1")]
internal string AccessHash { get; internal set; }
    [DataMemberAttribute]
public string PublicKey { get; public set; }
    [DataMemberAttribute]
public List`1<Guid> TenantIds { get; public set; }
    [CompilerGeneratedAttribute]
public Guid get_RegistrationId();
    [CompilerGeneratedAttribute]
public void set_RegistrationId(Guid value);
    [CompilerGeneratedAttribute]
public Guid get_IdentityId();
    [CompilerGeneratedAttribute]
public void set_IdentityId(Guid value);
    [CompilerGeneratedAttribute]
public string get_OrganizationName();
    [CompilerGeneratedAttribute]
public void set_OrganizationName(string value);
    [CompilerGeneratedAttribute]
public Uri get_OrganizationLocation();
    [CompilerGeneratedAttribute]
public void set_OrganizationLocation(Uri value);
    [CompilerGeneratedAttribute]
public string get_RegistrationName();
    [CompilerGeneratedAttribute]
public void set_RegistrationName(string value);
    [CompilerGeneratedAttribute]
public string get_RegistrationDescription();
    [CompilerGeneratedAttribute]
public void set_RegistrationDescription(string value);
    [CompilerGeneratedAttribute]
public Uri get_RegistrationLocation();
    [CompilerGeneratedAttribute]
public void set_RegistrationLocation(Uri value);
    [CompilerGeneratedAttribute]
public Uri get_RegistrationLogoSecureLocation();
    [CompilerGeneratedAttribute]
public void set_RegistrationLogoSecureLocation(Uri value);
    [CompilerGeneratedAttribute]
public Uri get_RegistrationTermsOfServiceLocation();
    [CompilerGeneratedAttribute]
public void set_RegistrationTermsOfServiceLocation(Uri value);
    [CompilerGeneratedAttribute]
public Uri get_RegistrationPrivacyStatementLocation();
    [CompilerGeneratedAttribute]
public void set_RegistrationPrivacyStatementLocation(Uri value);
    [CompilerGeneratedAttribute]
public string get_ResponseTypes();
    [CompilerGeneratedAttribute]
public void set_ResponseTypes(string value);
    [CompilerGeneratedAttribute]
public string get_Scopes();
    [CompilerGeneratedAttribute]
public void set_Scopes(string value);
    [CompilerGeneratedAttribute]
public Guid get_SecretVersionId();
    [CompilerGeneratedAttribute]
public void set_SecretVersionId(Guid value);
    [CompilerGeneratedAttribute]
public bool get_IsValid();
    [CompilerGeneratedAttribute]
public void set_IsValid(bool value);
    [CompilerGeneratedAttribute]
public IList`1<Uri> get_RedirectUris();
    [CompilerGeneratedAttribute]
public void set_RedirectUris(IList`1<Uri> value);
    [CompilerGeneratedAttribute]
public ClientType get_ClientType();
    [CompilerGeneratedAttribute]
public void set_ClientType(ClientType value);
    [CompilerGeneratedAttribute]
public bool get_IsWellKnown();
    [CompilerGeneratedAttribute]
public void set_IsWellKnown(bool value);
    [CompilerGeneratedAttribute]
internal Nullable`1<DateTimeOffset> get_SecretValidTo();
    [CompilerGeneratedAttribute]
internal void set_SecretValidTo(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public string get_Secret();
    [CompilerGeneratedAttribute]
public void set_Secret(string value);
    [CompilerGeneratedAttribute]
public Uri get_SetupUri();
    [CompilerGeneratedAttribute]
public void set_SetupUri(Uri value);
    [CompilerGeneratedAttribute]
internal string get_Issuer();
    [CompilerGeneratedAttribute]
internal void set_Issuer(string value);
    [CompilerGeneratedAttribute]
internal Nullable`1<DateTimeOffset> get_ValidFrom();
    [CompilerGeneratedAttribute]
internal void set_ValidFrom(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
internal string get_AccessHash();
    [CompilerGeneratedAttribute]
internal void set_AccessHash(string value);
    [CompilerGeneratedAttribute]
public string get_PublicKey();
    [CompilerGeneratedAttribute]
public void set_PublicKey(string value);
    [CompilerGeneratedAttribute]
public List`1<Guid> get_TenantIds();
    [CompilerGeneratedAttribute]
public void set_TenantIds(List`1<Guid> value);
    public CommonRegistration ToCommonRegistration();
}
[ExceptionMappingAttribute("0.0", "3.0", "RegistrationAlreadyExistsException", "Microsoft.VisualStudio.Services.DelegatedAuthorization.RegistrationAlreadyExistsException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.DelegatedAuthorization.RegistrationAlreadyExistsException : VssServiceException {
    public RegistrationAlreadyExistsException(string message);
    public RegistrationAlreadyExistsException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "RegistrationCreateException", "Microsoft.VisualStudio.Services.DelegatedAuthorization.RegistrationCreateException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.DelegatedAuthorization.RegistrationCreateException : VssServiceException {
    public RegistrationCreateException(string message);
    public RegistrationCreateException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "RegistrationNotFoundException", "Microsoft.VisualStudio.Services.DelegatedAuthorization.RegistrationNotFoundException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.DelegatedAuthorization.RegistrationNotFoundException : VssServiceException {
    public RegistrationNotFoundException(string message);
    public RegistrationNotFoundException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "RegistrationUpdateException", "Microsoft.VisualStudio.Services.DelegatedAuthorization.RegistrationUpdateException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.DelegatedAuthorization.RegistrationUpdateException : VssServiceException {
    public RegistrationUpdateException(string message);
    public RegistrationUpdateException(string message, Exception innerException);
}
public enum Microsoft.VisualStudio.Services.DelegatedAuthorization.ResponseType : Enum {
    public int value__;
    public static ResponseType None;
    public static ResponseType Assertion;
    public static ResponseType IdToken;
    public static ResponseType TenantPicker;
    public static ResponseType SignoutToken;
    public static ResponseType AppToken;
    public static ResponseType Code;
}
[ClientIncludeModelAttribute]
public class Microsoft.VisualStudio.Services.DelegatedAuthorization.SessionToken : object {
    [CompilerGeneratedAttribute]
private Guid <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <AccessId>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <AuthorizationId>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <HostAuthorizationId>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <UserId>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <ValidFrom>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <ValidTo>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scope>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<Guid> <TargetAccounts>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Token>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AlternateToken>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsValid>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsPublic>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PublicData>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Source>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Claims>k__BackingField;
    public Guid ClientId { get; public set; }
    public Guid AccessId { get; public set; }
    public Guid AuthorizationId { get; public set; }
    public Guid HostAuthorizationId { get; public set; }
    public Guid UserId { get; public set; }
    public DateTime ValidFrom { get; public set; }
    public DateTime ValidTo { get; public set; }
    public string DisplayName { get; public set; }
    public string Scope { get; public set; }
    public IList`1<Guid> TargetAccounts { get; public set; }
    public string Token { get; public set; }
    public string AlternateToken { get; public set; }
    public bool IsValid { get; public set; }
    public bool IsPublic { get; public set; }
    public string PublicData { get; public set; }
    public string Source { get; public set; }
    public IDictionary`2<string, string> Claims { get; public set; }
    [CompilerGeneratedAttribute]
public Guid get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(Guid value);
    [CompilerGeneratedAttribute]
public Guid get_AccessId();
    [CompilerGeneratedAttribute]
public void set_AccessId(Guid value);
    [CompilerGeneratedAttribute]
public Guid get_AuthorizationId();
    [CompilerGeneratedAttribute]
public void set_AuthorizationId(Guid value);
    [CompilerGeneratedAttribute]
public Guid get_HostAuthorizationId();
    [CompilerGeneratedAttribute]
public void set_HostAuthorizationId(Guid value);
    [CompilerGeneratedAttribute]
public Guid get_UserId();
    [CompilerGeneratedAttribute]
public void set_UserId(Guid value);
    [CompilerGeneratedAttribute]
public DateTime get_ValidFrom();
    [CompilerGeneratedAttribute]
public void set_ValidFrom(DateTime value);
    [CompilerGeneratedAttribute]
public DateTime get_ValidTo();
    [CompilerGeneratedAttribute]
public void set_ValidTo(DateTime value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public string get_Scope();
    [CompilerGeneratedAttribute]
public void set_Scope(string value);
    [CompilerGeneratedAttribute]
public IList`1<Guid> get_TargetAccounts();
    [CompilerGeneratedAttribute]
public void set_TargetAccounts(IList`1<Guid> value);
    [CompilerGeneratedAttribute]
public string get_Token();
    [CompilerGeneratedAttribute]
public void set_Token(string value);
    [CompilerGeneratedAttribute]
public string get_AlternateToken();
    [CompilerGeneratedAttribute]
public void set_AlternateToken(string value);
    [CompilerGeneratedAttribute]
public bool get_IsValid();
    [CompilerGeneratedAttribute]
public void set_IsValid(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsPublic();
    [CompilerGeneratedAttribute]
public void set_IsPublic(bool value);
    [CompilerGeneratedAttribute]
public string get_PublicData();
    [CompilerGeneratedAttribute]
public void set_PublicData(string value);
    [CompilerGeneratedAttribute]
public string get_Source();
    [CompilerGeneratedAttribute]
public void set_Source(string value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Claims();
    [CompilerGeneratedAttribute]
public void set_Claims(IDictionary`2<string, string> value);
}
[ExceptionMappingAttribute("0.0", "3.0", "SessionTokenCreateException", "Microsoft.VisualStudio.Services.DelegatedAuthorization.SessionTokenCreateException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.DelegatedAuthorization.SessionTokenCreateException : VssServiceException {
    public SessionTokenCreateException(string message);
    public SessionTokenCreateException(string message, Exception innerException);
}
public enum Microsoft.VisualStudio.Services.DelegatedAuthorization.SessionTokenError : Enum {
    public int value__;
    public static SessionTokenError None;
    public static SessionTokenError DisplayNameRequired;
    public static SessionTokenError InvalidDisplayName;
    public static SessionTokenError InvalidValidTo;
    public static SessionTokenError InvalidScope;
    public static SessionTokenError UserIdRequired;
    public static SessionTokenError InvalidUserId;
    public static SessionTokenError InvalidUserType;
    public static SessionTokenError AccessDenied;
    public static SessionTokenError FailedToIssueAccessToken;
    public static SessionTokenError InvalidClient;
    public static SessionTokenError InvalidClientType;
    public static SessionTokenError InvalidClientId;
    public static SessionTokenError InvalidTargetAccounts;
    public static SessionTokenError HostAuthorizationNotFound;
    public static SessionTokenError AuthorizationNotFound;
    public static SessionTokenError FailedToUpdateAccessToken;
    public static SessionTokenError SourceNotSupported;
    public static SessionTokenError InvalidSourceIP;
    public static SessionTokenError InvalidSource;
    public static SessionTokenError DuplicateHash;
    public static SessionTokenError SSHPolicyDisabled;
    public static SessionTokenError InvalidToken;
    public static SessionTokenError TokenNotFound;
    public static SessionTokenError InvalidAuthorizationId;
    public static SessionTokenError FailedToReadTenantPolicy;
    public static SessionTokenError GlobalPatPolicyViolation;
    public static SessionTokenError FullScopePatPolicyViolation;
    public static SessionTokenError PatLifespanPolicyViolation;
    public static SessionTokenError InvalidTokenType;
    public static SessionTokenError InvalidAudience;
    public static SessionTokenError InvalidSubject;
    public static SessionTokenError DeploymentHostNotSupported;
}
[ExceptionMappingAttribute("0.0", "3.0", "SessionTokenNotFoundException", "Microsoft.VisualStudio.Services.DelegatedAuthorization.SessionTokenNotFoundException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.DelegatedAuthorization.SessionTokenNotFoundException : VssServiceException {
    public SessionTokenNotFoundException(string message);
    public SessionTokenNotFoundException(string message, Exception innerException);
}
public class Microsoft.VisualStudio.Services.DelegatedAuthorization.SessionTokenResult : object {
    [CompilerGeneratedAttribute]
private SessionToken <SessionToken>k__BackingField;
    [CompilerGeneratedAttribute]
private SessionTokenError <SessionTokenError>k__BackingField;
    public SessionToken SessionToken { get; public set; }
    public SessionTokenError SessionTokenError { get; public set; }
    public bool HasError { get; }
    [CompilerGeneratedAttribute]
public SessionToken get_SessionToken();
    [CompilerGeneratedAttribute]
public void set_SessionToken(SessionToken value);
    [CompilerGeneratedAttribute]
public SessionTokenError get_SessionTokenError();
    [CompilerGeneratedAttribute]
public void set_SessionTokenError(SessionTokenError value);
    public bool get_HasError();
    public static PatTokenResult op_Implicit(SessionTokenResult s);
}
public enum Microsoft.VisualStudio.Services.DelegatedAuthorization.SessionTokenType : Enum {
    public int value__;
    public static SessionTokenType SelfDescribing;
    public static SessionTokenType Compact;
    public static SessionTokenType OpenIdConnect;
}
[ExceptionMappingAttribute("0.0", "3.0", "SessionTokenUpdateException", "Microsoft.VisualStudio.Services.DelegatedAuthorization.SessionTokenUpdateException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.DelegatedAuthorization.SessionTokenUpdateException : VssServiceException {
    public SessionTokenUpdateException(string message);
    public SessionTokenUpdateException(string message, Exception innerException);
}
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.DelegatedAuthorization.SortByOptions : Enum {
    public int value__;
    [EnumMemberAttribute]
public static SortByOptions DisplayName;
    [EnumMemberAttribute]
public static SortByOptions DisplayDate;
    [EnumMemberAttribute]
public static SortByOptions Status;
}
[DataContractAttribute]
[NotificationEventBindingsAttribute("0", "ms.vss-sps-notifications.ssh-key-added-event")]
public class Microsoft.VisualStudio.Services.DelegatedAuthorization.SshKeyAddedEvent : object {
    [CompilerGeneratedAttribute]
private string <KeyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <KeySHA>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccountUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IPAddress>k__BackingField;
    [DataMemberAttribute]
public string KeyName { get; public set; }
    [DataMemberAttribute]
public string KeySHA { get; public set; }
    [DataMemberAttribute]
public string AccountUrl { get; public set; }
    [DataMemberAttribute]
public string IPAddress { get; public set; }
    [CompilerGeneratedAttribute]
public string get_KeyName();
    [CompilerGeneratedAttribute]
public void set_KeyName(string value);
    [CompilerGeneratedAttribute]
public string get_KeySHA();
    [CompilerGeneratedAttribute]
public void set_KeySHA(string value);
    [CompilerGeneratedAttribute]
public string get_AccountUrl();
    [CompilerGeneratedAttribute]
public void set_AccountUrl(string value);
    [CompilerGeneratedAttribute]
public string get_IPAddress();
    [CompilerGeneratedAttribute]
public void set_IPAddress(string value);
}
public class Microsoft.VisualStudio.Services.DelegatedAuthorization.SshPublicKey : object {
    public string Value;
}
public enum Microsoft.VisualStudio.Services.DelegatedAuthorization.TokenError : Enum {
    public int value__;
    public static TokenError None;
    public static TokenError GrantTypeRequired;
    public static TokenError AuthorizationGrantRequired;
    public static TokenError ClientSecretRequired;
    public static TokenError RedirectUriRequired;
    public static TokenError InvalidAuthorizationGrant;
    public static TokenError InvalidAuthorizationScopes;
    public static TokenError InvalidRefreshToken;
    public static TokenError AuthorizationNotFound;
    public static TokenError AuthorizationGrantExpired;
    public static TokenError AccessAlreadyIssued;
    public static TokenError InvalidRedirectUri;
    public static TokenError AccessTokenNotFound;
    public static TokenError InvalidAccessToken;
    public static TokenError AccessTokenAlreadyRefreshed;
    public static TokenError InvalidClientSecret;
    public static TokenError ClientSecretExpired;
    public static TokenError ServerError;
    public static TokenError AccessDenied;
    public static TokenError AccessTokenKeyRequired;
    public static TokenError InvalidAccessTokenKey;
    public static TokenError FailedToGetAccessToken;
    public static TokenError InvalidClientId;
    public static TokenError InvalidClient;
    public static TokenError InvalidValidTo;
    public static TokenError InvalidUserId;
    public static TokenError FailedToIssueAccessToken;
    public static TokenError AuthorizationGrantScopeMissing;
    public static TokenError InvalidPublicAccessTokenKey;
    public static TokenError InvalidPublicAccessToken;
    public static TokenError PublicFeatureFlagNotEnabled;
    public static TokenError SSHPolicyDisabled;
    public static TokenError HostAuthorizationNotFound;
    public static TokenError HostAuthorizationIsNotValid;
    public static TokenError InvalidScope;
}
[ExceptionMappingAttribute("0.0", "3.0", "TokenPairCreateException", "Microsoft.VisualStudio.Services.DelegatedAuthorization.TokenPairCreateException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.DelegatedAuthorization.TokenPairCreateException : VssServiceException {
    public TokenPairCreateException(string message);
    public TokenPairCreateException(string message, Exception innerException);
}
[ResourceAreaAttribute("A0848FA1-3593-4AEC-949C-694C73F4C4CE")]
public class Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.DelegatedAuthorizationHttpClient : VssHttpClientBase {
    public DelegatedAuthorizationHttpClient(Uri baseUrl, VssCredentials credentials);
    public DelegatedAuthorizationHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public DelegatedAuthorizationHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public DelegatedAuthorizationHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public DelegatedAuthorizationHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    public Task`1<AuthorizationDecision> AuthorizeAsync(Guid userId, ResponseType responseType, Guid clientId, Uri redirectUri, string scopes, object userState, CancellationToken cancellationToken);
    public Task`1<AuthorizationDecision> AuthorizeAsync(ResponseType responseType, Guid clientId, Uri redirectUri, string scopes, object userState, CancellationToken cancellationToken);
    public Task`1<List`1<AuthorizationDetails>> GetAuthorizationsAsync(Nullable`1<Guid> userId, object userState, CancellationToken cancellationToken);
    public Task`1<AuthorizationDescription> InitiateAuthorizationAsync(Guid userId, ResponseType responseType, Guid clientId, Uri redirectUri, string scopes, object userState, CancellationToken cancellationToken);
    public Task`1<AuthorizationDescription> InitiateAuthorizationAsync(ResponseType responseType, Guid clientId, Uri redirectUri, string scopes, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.DelegatedAuthorizationHttpClient/<RevokeAuthorizationAsync>d__10")]
public Task RevokeAuthorizationAsync(Guid authorizationId, Nullable`1<Guid> userId, object userState, CancellationToken cancellationToken);
    public Task`1<HostAuthorizationDecision> AuthorizeHostAsync(Guid clientId, object userState, CancellationToken cancellationToken);
    public Task`1<List`1<HostAuthorization>> GetHostAuthorizationsAsync(Guid hostId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.DelegatedAuthorizationHttpClient/<RevokeHostAuthorizationAsync>d__13")]
public Task RevokeHostAuthorizationAsync(Guid clientId, Nullable`1<Guid> hostId, object userState, CancellationToken cancellationToken);
    public Task`1<Registration> CreateRegistrationAsync(Registration registration, object userState, CancellationToken cancellationToken);
    public Task`1<Registration> CreateRegistrationAsync(Registration registration, bool includeSecret, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.DelegatedAuthorizationHttpClient/<DeleteRegistrationAsync>d__16")]
public Task DeleteRegistrationAsync(Guid registrationId, object userState, CancellationToken cancellationToken);
    public Task`1<Registration> GetRegistrationAsync(Guid registrationId, object userState, CancellationToken cancellationToken);
    public Task`1<Registration> GetRegistrationAsync(Guid registrationId, bool includeSecret, object userState, CancellationToken cancellationToken);
    public Task`1<List`1<Registration>> GetRegistrationsAsync(object userState, CancellationToken cancellationToken);
    public Task`1<Registration> UpdateRegistrationAsync(Registration registration, object userState, CancellationToken cancellationToken);
    public Task`1<Registration> UpdateRegistrationAsync(Registration registration, bool includeSecret, object userState, CancellationToken cancellationToken);
    public Task`1<JsonWebToken> GetSecretAsync(Guid registrationId, object userState, CancellationToken cancellationToken);
    public Task`1<Registration> RotateSecretAsync(Guid registrationId, object userState, CancellationToken cancellationToken);
}
[ResourceAreaAttribute("0AD75E84-88AE-4325-84B5-EBB30910283C")]
public class Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.TokenHttpClient : VssHttpClientBase {
    public TokenHttpClient(Uri baseUrl, VssCredentials credentials);
    public TokenHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public TokenHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public TokenHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public TokenHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    public Task`1<AccessToken> ExchangeAccessTokenKeyAsync(string accessTokenKey, Nullable`1<bool> isPublic, object userState, CancellationToken cancellationToken);
    [ObsoleteAttribute("Use ExchangeAccessTokenKey instead.  This endpoint should be removed after all services are updated to M123.")]
public Task`1<AccessToken> GetAccessTokenAsync(string key, Nullable`1<bool> isPublic, object userState, CancellationToken cancellationToken);
    public Task`1<AppSessionTokenResult> IssueAppSessionTokenAsync(Guid clientId, Nullable`1<Guid> userId, object userState, CancellationToken cancellationToken);
    public Task`1<AccessTokenResult> ExchangeAppTokenAsync(AppTokenSecretPair appInfo, object userState, CancellationToken cancellationToken);
    public Task`1<SessionToken> CreateSessionTokenAsync(SessionToken sessionToken, Nullable`1<SessionTokenType> tokenType, Nullable`1<bool> isPublic, Nullable`1<bool> isRequestedByTfsPatWebUI, object userState, CancellationToken cancellationToken);
    public Task`1<SessionToken> GetSessionTokenAsync(Guid authorizationId, Nullable`1<bool> isPublic, object userState, CancellationToken cancellationToken);
    public Task`1<List`1<SessionToken>> GetSessionTokensAsync(Nullable`1<bool> isPublic, Nullable`1<bool> includePublicData, object userState, CancellationToken cancellationToken);
    public Task`1<PagedSessionTokens> GetSessionTokensPageAsync(DisplayFilterOptions displayFilterOption, CreatedByOptions createdByOption, SortByOptions sortByOption, bool isSortAscending, int startRowNumber, int pageSize, string pageRequestTimeStamp, Nullable`1<bool> isPublic, Nullable`1<bool> includePublicData, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.TokenHttpClient/<RemovePublicKeyAsync>d__13")]
public Task RemovePublicKeyAsync(SshPublicKey publicData, bool remove, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.TokenHttpClient/<RevokeAllSessionTokensOfUserAsync>d__14")]
public Task RevokeAllSessionTokensOfUserAsync(object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.DelegatedAuthorization.WebApi.TokenHttpClient/<RevokeSessionTokenAsync>d__15")]
public Task RevokeSessionTokenAsync(Guid authorizationId, Nullable`1<bool> isPublic, object userState, CancellationToken cancellationToken);
}
[ExceptionMappingAttribute("0.0", "3.0", "AllowTeamAdminsInvitationsPolicyException", "Microsoft.VisualStudio.Services.Directories.AllowTeamAdminsInvitationsPolicyException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Directories.AllowTeamAdminsInvitationsPolicyException : DirectoryException {
    public AllowTeamAdminsInvitationsPolicyException(string message);
    public AllowTeamAdminsInvitationsPolicyException(string message, Exception innerException);
    public AllowTeamAdminsInvitationsPolicyException(SerializationInfo info, StreamingContext context);
}
[DefaultMemberAttribute("Item")]
[DataContractAttribute]
internal abstract class Microsoft.VisualStudio.Services.Directories.DirectoryEntity : object {
    [CompilerGeneratedAttribute]
private string <EntityId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EntityType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EntityOrigin>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OriginDirectory>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OriginId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LocalDirectory>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LocalId>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <Properties>k__BackingField;
    private static CamelCasePropertyNamesContractResolver CamelCaseResolver;
    [DataMemberAttribute]
public string EntityId { get; internal set; }
    [DataMemberAttribute]
public string EntityType { get; internal set; }
    [DataMemberAttribute]
public string EntityOrigin { get; internal set; }
    [DataMemberAttribute]
public string OriginDirectory { get; internal set; }
    [DataMemberAttribute]
public string OriginId { get; internal set; }
    [DataMemberAttribute]
public string LocalDirectory { get; internal set; }
    [DataMemberAttribute]
public string LocalId { get; internal set; }
    public object Item { get; internal set; }
    public string PrincipalName { get; internal set; }
    public Nullable`1<bool> Active { get; internal set; }
    public string DisplayName { get; internal set; }
    public Nullable`1<SubjectDescriptor> SubjectDescriptor { get; internal set; }
    public string ScopeName { get; internal set; }
    public string LocalDescriptor { get; internal set; }
    internal IDictionary`2<string, object> Properties { get; internal set; }
    [JsonExtensionDataAttribute]
private IDictionary`2<string, object> PropertiesToSerializeOut { get; private set; }
    [JsonConstructorAttribute]
protected DirectoryEntity(string entityId, string entityType, string originDirectory, string originId, string localDirectory, string localId, string principalName, string displayName, Nullable`1<SubjectDescriptor> subjectDescriptor, string scopeName, string localDescriptor, DirectoryPermissionsEntry[] localPermissions, string entityOrigin);
    private static DirectoryEntity();
    [CompilerGeneratedAttribute]
public sealed virtual string get_EntityId();
    [CompilerGeneratedAttribute]
internal void set_EntityId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_EntityType();
    [CompilerGeneratedAttribute]
internal void set_EntityType(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_EntityOrigin();
    [CompilerGeneratedAttribute]
internal void set_EntityOrigin(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_OriginDirectory();
    [CompilerGeneratedAttribute]
internal void set_OriginDirectory(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_OriginId();
    [CompilerGeneratedAttribute]
internal void set_OriginId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_LocalDirectory();
    [CompilerGeneratedAttribute]
internal void set_LocalDirectory(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_LocalId();
    [CompilerGeneratedAttribute]
internal void set_LocalId(string value);
    public sealed virtual object get_Item(string propertyName);
    internal void set_Item(string propertyName, object value);
    public sealed virtual string get_PrincipalName();
    internal void set_PrincipalName(string value);
    public sealed virtual Nullable`1<bool> get_Active();
    internal void set_Active(Nullable`1<bool> value);
    public sealed virtual string get_DisplayName();
    internal void set_DisplayName(string value);
    public sealed virtual Nullable`1<SubjectDescriptor> get_SubjectDescriptor();
    internal void set_SubjectDescriptor(Nullable`1<SubjectDescriptor> value);
    public sealed virtual string get_ScopeName();
    internal void set_ScopeName(string value);
    public sealed virtual string get_LocalDescriptor();
    internal void set_LocalDescriptor(string value);
    public virtual string ToString();
    public bool Equals(DirectoryEntity other);
    public virtual int GetHashCode();
    [CompilerGeneratedAttribute]
internal IDictionary`2<string, object> get_Properties();
    [CompilerGeneratedAttribute]
internal void set_Properties(IDictionary`2<string, object> value);
    private IDictionary`2<string, object> get_PropertiesToSerializeOut();
    private void set_PropertiesToSerializeOut(IDictionary`2<string, object> value);
}
[DefaultMemberAttribute("Item")]
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Directories.DirectoryEntityDescriptor : object {
    [DataMemberAttribute]
private string entityType;
    [DataMemberAttribute]
private string entityOrigin;
    [DataMemberAttribute]
private string originDirectory;
    [DataMemberAttribute]
private string localId;
    [DataMemberAttribute]
private string originId;
    private Lazy`1<IDictionary`2<string, object>> properties;
    private static CamelCasePropertyNamesContractResolver CamelCaseResolver;
    public string EntityType { get; }
    public string OriginDirectory { get; }
    public string EntityOrigin { get; }
    public string OriginId { get; }
    public string LocalDirectory { get; }
    public string LocalId { get; }
    public object Item { get; private set; }
    public string PrincipalName { get; private set; }
    public string DisplayName { get; private set; }
    private IDictionary`2<string, object> Properties { get; }
    [JsonExtensionDataAttribute]
private IDictionary`2<string, object> PropertiesToSerializeOut { get; private set; }
    public DirectoryEntityDescriptor(string entityType, string originDirectory, string originId, string localId, string principalName, string displayName, IReadOnlyDictionary`2<string, object> properties, DirectoryEntityDescriptor baseEntity);
    [JsonConstructorAttribute]
private DirectoryEntityDescriptor(string entityType, string originDirectory, string originId, string localId, string principalName, string displayName, string mail, DirectoryPermissionsEntry[] localPermissions, string invitationMethod, Nullable`1<bool> allowIntroductionOfMembersNotPreviouslyInScope, Nullable`1<bool> rootWithActiveMembership, Nullable`1<bool> createIfNotFound, Nullable`1<bool> includeDeploymentLevelCreation, string homeDirectory, Nullable`1<Guid> masterId, Nullable`1<Guid> userId, Nullable`1<Guid> tenantId, SubjectDescriptor subjectDescriptor, string entityOrigin, string puid);
    private static DirectoryEntityDescriptor();
    public sealed virtual string get_EntityType();
    public sealed virtual string get_OriginDirectory();
    public sealed virtual string get_EntityOrigin();
    public sealed virtual string get_OriginId();
    public sealed virtual string get_LocalDirectory();
    public sealed virtual string get_LocalId();
    public sealed virtual object get_Item(string propertyName);
    private void set_Item(string propertyName, object value);
    public sealed virtual string get_PrincipalName();
    private void set_PrincipalName(string value);
    public sealed virtual string get_DisplayName();
    private void set_DisplayName(string value);
    public virtual string ToString();
    private IDictionary`2<string, object> get_Properties();
    private IDictionary`2<string, object> get_PropertiesToSerializeOut();
    private void set_PropertiesToSerializeOut(IDictionary`2<string, object> value);
}
internal class Microsoft.VisualStudio.Services.Directories.DirectoryEntityJsonConverter : VssSecureJsonConverter {
    private static string EntityTypePropertyName;
    public virtual bool CanConvert(Type objectType);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
}
public static class Microsoft.VisualStudio.Services.Directories.DirectoryEntityMaterializationProperty : object {
    public static string AllowIntroductionOfMembersNotPreviouslyInScope;
    public static string SkipAadDiscovery;
    public static string RootWithActiveMembership;
}
public static class Microsoft.VisualStudio.Services.Directories.DirectoryEntityProperty : object {
    public static string Active;
    public static string DisplayName;
    public static string SubjectDescriptor;
    public static string LocalDescriptor;
    public static string LocalPermissions;
    public static string PrincipalName;
    public static string Puid;
    public static string ScopeName;
    public static string Mail;
    public static string TelephoneNumber;
    public static string TenantId;
    public static string EntityOrigin;
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Directories.DirectoryEntityResult : object {
    [CompilerGeneratedAttribute]
private IDirectoryEntity <Entity>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EntityState>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private Exception <Exception>k__BackingField;
    [DataMemberAttribute]
[JsonConverterAttribute("Microsoft.VisualStudio.Services.Directories.DirectoryEntityJsonConverter")]
public IDirectoryEntity Entity { get; }
    [DataMemberAttribute]
public string EntityState { get; }
    [DataMemberAttribute]
public string Status { get; }
    [DataMemberAttribute]
public Exception Exception { get; }
    public DirectoryEntityResult(IDirectoryEntity entity, string entityState, string status, Exception exception);
    [CompilerGeneratedAttribute]
public IDirectoryEntity get_Entity();
    [CompilerGeneratedAttribute]
public string get_EntityState();
    [CompilerGeneratedAttribute]
public string get_Status();
    [CompilerGeneratedAttribute]
public Exception get_Exception();
}
public static class Microsoft.VisualStudio.Services.Directories.DirectoryEntityState : object {
    public static string LocalFetch;
    public static string LocalCreate;
    public static string RemoteFetch;
}
[GenerateSpecificConstantsAttribute("")]
public static class Microsoft.VisualStudio.Services.Directories.DirectoryEntityType : object {
    [GenerateConstantAttribute("")]
public static string User;
    [GenerateConstantAttribute("")]
public static string Group;
    [GenerateConstantAttribute("")]
public static string ServicePrincipal;
    public static string Any;
}
public class Microsoft.VisualStudio.Services.Directories.DirectoryEntityTypeException : DirectoryException {
    public DirectoryEntityTypeException(string message);
    public DirectoryEntityTypeException(string message, Exception innerException);
    public DirectoryEntityTypeException(SerializationInfo info, StreamingContext context);
}
[ExceptionMappingAttribute("0.0", "3.0", "DirectoryException", "Microsoft.VisualStudio.Services.Directories.DirectoryException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Directories.DirectoryException : VssServiceException {
    public DirectoryException(string message);
    public DirectoryException(string message, Exception innerException);
    public DirectoryException(SerializationInfo info, StreamingContext context);
}
[DataContractAttribute]
internal class Microsoft.VisualStudio.Services.Directories.DirectoryGroup : DirectoryEntity {
    public string Description { get; internal set; }
    public string Mail { get; internal set; }
    public string MailNickname { get; internal set; }
    [JsonConstructorAttribute]
private DirectoryGroup(string entityId, string entityType, string originDirectory, string originId, string localDirectory, string localId, string principalName, string displayName, string scopeName, Nullable`1<SubjectDescriptor> subjectDescriptor, string localDescriptor, DirectoryPermissionsEntry[] localPermissions, string description, string mail, string mailNickname, Nullable`1<bool> active);
    public sealed virtual string get_Description();
    internal void set_Description(string value);
    public sealed virtual string get_Mail();
    internal void set_Mail(string value);
    public sealed virtual string get_MailNickname();
    internal void set_MailNickname(string value);
}
public static class Microsoft.VisualStudio.Services.Directories.DirectoryGroupProperty : object {
    public static string Active;
    public static string Description;
    public static string DisplayName;
    public static string SubjectDescriptor;
    public static string LocalDescriptor;
    public static string Mail;
    public static string MailNickname;
    public static string ScopeName;
    public static string SamAccountName;
}
[ExceptionMappingAttribute("0.0", "3.0", "DirectoryHostTypeNotSupportedException", "Microsoft.VisualStudio.Services.Directories.DirectoryHostTypeNotSupportedException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Directories.DirectoryHostTypeNotSupportedException : DirectoryException {
    public DirectoryHostTypeNotSupportedException(string message);
    public DirectoryHostTypeNotSupportedException(string message, Exception innerException);
    public DirectoryHostTypeNotSupportedException(SerializationInfo info, StreamingContext context);
}
[GenerateSpecificConstantsAttribute("")]
public static class Microsoft.VisualStudio.Services.Directories.DirectoryName : object {
    [GenerateConstantAttribute("")]
public static string VisualStudioDirectory;
    [GenerateConstantAttribute("")]
public static string AzureActiveDirectory;
    public static string ActiveDirectory;
    public static string WindowsMachineDirectory;
    [GenerateConstantAttribute("")]
public static string MicrosoftAccount;
    [GenerateConstantAttribute("")]
public static string GitHub;
    public static string SourceDirectory;
    public static string Any;
}
[ExceptionMappingAttribute("0.0", "3.0", "DirectoryParameterException", "Microsoft.VisualStudio.Services.Directories.DirectoryParameterException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Directories.DirectoryParameterException : DirectoryException {
    public DirectoryParameterException(string message);
    public DirectoryParameterException(string message, Exception innerException);
    public DirectoryParameterException(SerializationInfo info, StreamingContext context);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Directories.DirectoryPermissionsEntry : object {
    [DataMemberAttribute]
private Guid namespaceId;
    [DataMemberAttribute]
private string token;
    [DataMemberAttribute]
private int allow;
    [DataMemberAttribute]
private int deny;
    [DataMemberAttribute]
private bool merge;
    public Guid NamespaceId { get; }
    public string Token { get; }
    public int Allow { get; }
    public int Deny { get; }
    public bool Merge { get; }
    public DirectoryPermissionsEntry(Guid namespaceId, string token, int allow, int deny, bool merge);
    public Guid get_NamespaceId();
    public string get_Token();
    public int get_Allow();
    public int get_Deny();
    public bool get_Merge();
}
[ResourceAreaAttribute("2B98ABE4-FAE0-4B7F-8562-7141C309B9EE")]
public class Microsoft.VisualStudio.Services.Directories.DirectoryService.Client.DirectoryHttpClient : VssHttpClientBase {
    private static Dictionary`2<string, Type> s_translatedExceptions;
    private static ApiResourceVersion s_currentApiVersion;
    private static DirectoryHttpClient();
    public DirectoryHttpClient(Uri baseUrl, VssCredentials credentials);
    public DirectoryHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public DirectoryHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public DirectoryHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public DirectoryHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Directories.DirectoryService.Client.DirectoryHttpClient/<AddMembersAsync>d__8")]
public Task`1<IReadOnlyList`1<DirectoryEntityResult>> AddMembersAsync(IReadOnlyList`1<IDirectoryEntityDescriptor> members, string profile, string license, IEnumerable`1<string> localGroups, IEnumerable`1<string> propertiesToReturn, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Directories.DirectoryService.Client.DirectoryHttpClient/<AddMemberAsync>d__9")]
public Task`1<DirectoryEntityResult> AddMemberAsync(IDirectoryEntityDescriptor member, string profile, string license, IEnumerable`1<string> localGroups, IEnumerable`1<string> propertiesToReturn, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Directories.DirectoryService.Client.DirectoryHttpClient/<AddMemberAsync>d__10")]
public Task`1<DirectoryEntityResult> AddMemberAsync(string member, string profile, string license, IEnumerable`1<string> localGroups, IEnumerable`1<string> propertiesToReturn, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Directories.DirectoryService.Client.DirectoryHttpClient/<GetAadMemberStatusAsync>d__11")]
public Task`1<AadMemberStatus> GetAadMemberStatusAsync(IdentityDescriptor identityDescriptor, Guid oid, Guid tenantId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Directories.DirectoryService.Client.DirectoryHttpClient/<GetAadMemberStatusAsync>d__12")]
public Task`1<AadMemberStatus> GetAadMemberStatusAsync(SubjectDescriptor subjectDescriptor, Guid oid, Guid tenantId, object userState, CancellationToken cancellationToken);
    private List`1<KeyValuePair`2<string, string>> GetQueryParameters(string profile, string license, IEnumerable`1<string> localGroups, IEnumerable`1<string> propertiesToReturn);
    private string EnumerableToCsv(IEnumerable`1<string> values);
}
public static class Microsoft.VisualStudio.Services.Directories.DirectoryService.DirectoryResourceIds : object {
    public static string DirectoryServiceArea;
    public static string DirectoryService;
    public static string MembersResource;
    public static Guid Members;
    public static Guid MemberStatusLocationId;
    private static DirectoryResourceIds();
}
[DataContractAttribute]
internal class Microsoft.VisualStudio.Services.Directories.DirectoryServicePrincipal : DirectoryEntity {
    [DataMemberAttribute]
public string AppId { get; internal set; }
    [JsonConstructorAttribute]
private DirectoryServicePrincipal(string entityId, string entityType, string originDirectory, string originId, string localDirectory, string localId, string principalName, string displayName, Nullable`1<SubjectDescriptor> subjectDescriptor, string scopeName, string localDescriptor, DirectoryPermissionsEntry[] localPermissions, string appId, Nullable`1<bool> active);
    public sealed virtual string get_AppId();
    internal void set_AppId(string value);
}
public static class Microsoft.VisualStudio.Services.Directories.DirectoryServicePrincipalProperty : object {
    public static string Active;
    public static string AppId;
    public static string DisplayName;
    public static string Mail;
    public static string MailNickname;
    public static string ScopeName;
    public static string PrincipalName;
    public static string SignInAddress;
    public static string SamAccountName;
}
public static class Microsoft.VisualStudio.Services.Directories.DirectoryStatus : object {
    public static string AadReadFailed;
    public static string AadGetTokenFailed;
    public static string AadReadTypeUnrecognized;
    public static string ConvertFailed;
    public static string IdConflict;
    public static string IdTranslationConflict;
    public static string IdTranslationFailed;
    public static string UpdateStorageKeysFailed;
    public static string SetMasterIdFailed;
    public static string StorageKeyAssignmentResultCountMismatch;
    public static string StorageKeyAssignmentResultNull;
    public static string StorageKeyAssignmentLocalIdMismatch;
    public static string StorageKeyAssignmentMasterIdMismatch;
    public static string GetOrCreateIdForCuidFailed;
    public static string IdTranslationLocalIdMismatch;
    public static string IdTranslationMasterIdMismatch;
    public static string IdTranslationNotAllowed;
    public static string IdTranslationResultCountMismatch;
    public static string IdTranslationResultNull;
    public static string InvalidHostType;
    public static string InvalidLicenseType;
    public static string InvalidLocalDescriptor;
    public static string InvalidPermissionsProperty;
    public static string InvalidProfileState;
    public static string InvalidRequestEntity;
    public static string LicenseNotAvailable;
    public static string LicenseTargetHostAmbiguous;
    public static string LicenseWriteFailed;
    public static string LocalGroupWriteFailed;
    public static string MsaReadFailed;
    public static string NoResults;
    public static string NotInScope;
    public static string PermissionsNamespaceNotFound;
    public static string PermissionsWriteFailed;
    public static string ProfileWriteFailed;
    public static string ProtectedIdentityConflict;
    public static string ResultCountMismatch;
    public static string ResultMapFailed;
    public static string RootIdentitiesFailed;
    public static string ScopeNotDeterminable;
    public static string Success;
    public static string TooManyResults;
    public static string VsdReadFailed;
    public static string VsdWriteFailed;
    public static string UserServiceWriteFailed;
    public static string GitHubReadFailed;
}
[DataContractAttribute]
internal class Microsoft.VisualStudio.Services.Directories.DirectoryUser : DirectoryEntity {
    public string Department { get; internal set; }
    public Nullable`1<bool> Guest { get; internal set; }
    public string JobTitle { get; internal set; }
    public string Mail { get; internal set; }
    public string MailNickname { get; internal set; }
    public string PhysicalDeliveryOfficeName { get; internal set; }
    public string SignInAddress { get; internal set; }
    public string Surname { get; internal set; }
    public string TelephoneNumber { get; internal set; }
    [JsonConstructorAttribute]
private DirectoryUser(string entityId, string entityType, string originDirectory, string originId, string localDirectory, string localId, string principalName, string displayName, Nullable`1<SubjectDescriptor> subjectDescriptor, string scopeName, string localDescriptor, DirectoryPermissionsEntry[] localPermissions, string department, Nullable`1<bool> guest, string jobTitle, string mail, string mailNickName, string physicalDeliveryOfficeName, string signInAddress, string surname, string telephoneNumber, Nullable`1<bool> active);
    public sealed virtual string get_Department();
    internal void set_Department(string value);
    public sealed virtual Nullable`1<bool> get_Guest();
    internal void set_Guest(Nullable`1<bool> value);
    public sealed virtual string get_JobTitle();
    internal void set_JobTitle(string value);
    public sealed virtual string get_Mail();
    internal void set_Mail(string value);
    public sealed virtual string get_MailNickname();
    internal void set_MailNickname(string value);
    public sealed virtual string get_PhysicalDeliveryOfficeName();
    internal void set_PhysicalDeliveryOfficeName(string value);
    public sealed virtual string get_SignInAddress();
    internal void set_SignInAddress(string value);
    public sealed virtual string get_Surname();
    internal void set_Surname(string value);
    public string get_TelephoneNumber();
    internal void set_TelephoneNumber(string value);
}
public static class Microsoft.VisualStudio.Services.Directories.DirectoryUserLicenseType : object {
    public static string Advanced;
    public static string Basic;
    public static string Stakeholder;
    public static string Msdn;
    public static string None;
    public static string Optimal;
    public static string Standard;
    public static string Full;
    public static string Limited;
}
public static class Microsoft.VisualStudio.Services.Directories.DirectoryUserProfileState : object {
    public static string Compliant;
}
public static class Microsoft.VisualStudio.Services.Directories.DirectoryUserProperty : object {
    public static string Active;
    public static string Department;
    public static string DisplayName;
    public static string SubjectDescriptor;
    public static string Guest;
    public static string JobTitle;
    public static string LocalDescriptor;
    public static string Mail;
    public static string MailNickname;
    public static string PhysicalDeliveryOfficeName;
    public static string PrincipalName;
    public static string ScopeName;
    public static string SignInAddress;
    public static string Surname;
    public static string SamAccountName;
    public static string TelephoneNumber;
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Directories.IdentityDirectoryEntityResult`1 : DirectoryEntityResult {
    [CompilerGeneratedAttribute]
private TIdentity <Identity>k__BackingField;
    [DataMemberAttribute]
public TIdentity Identity { get; }
    public IdentityDirectoryEntityResult`1(DirectoryEntityResult result, TIdentity identity);
    [JsonConstructorAttribute]
public IdentityDirectoryEntityResult`1(TIdentity identity, IDirectoryEntity entity, string entityState, string status, Exception exception);
    [CompilerGeneratedAttribute]
public TIdentity get_Identity();
}
public interface Microsoft.VisualStudio.Services.Directories.IDirectoryEntity {
    public string EntityId { get; }
    public string EntityType { get; }
    public string EntityOrigin { get; }
    public string OriginDirectory { get; }
    public string OriginId { get; }
    public string LocalDirectory { get; }
    public string LocalId { get; }
    public string PrincipalName { get; }
    public string DisplayName { get; }
    public string ScopeName { get; }
    public string LocalDescriptor { get; }
    public Nullable`1<SubjectDescriptor> SubjectDescriptor { get; }
    public Nullable`1<bool> Active { get; }
    public abstract virtual string get_EntityId();
    public abstract virtual string get_EntityType();
    public abstract virtual string get_EntityOrigin();
    public abstract virtual string get_OriginDirectory();
    public abstract virtual string get_OriginId();
    public abstract virtual string get_LocalDirectory();
    public abstract virtual string get_LocalId();
    public abstract virtual string get_PrincipalName();
    public abstract virtual string get_DisplayName();
    public abstract virtual string get_ScopeName();
    public abstract virtual string get_LocalDescriptor();
    public abstract virtual Nullable`1<SubjectDescriptor> get_SubjectDescriptor();
    public abstract virtual Nullable`1<bool> get_Active();
}
[DefaultMemberAttribute("Item")]
public interface Microsoft.VisualStudio.Services.Directories.IDirectoryEntityDescriptor {
    public string EntityType { get; }
    public string EntityOrigin { get; }
    public string OriginDirectory { get; }
    public string OriginId { get; }
    public string LocalDirectory { get; }
    public string LocalId { get; }
    public string PrincipalName { get; }
    public string DisplayName { get; }
    public object Item { get; }
    public abstract virtual string get_EntityType();
    public abstract virtual string get_EntityOrigin();
    public abstract virtual string get_OriginDirectory();
    public abstract virtual string get_OriginId();
    public abstract virtual string get_LocalDirectory();
    public abstract virtual string get_LocalId();
    public abstract virtual string get_PrincipalName();
    public abstract virtual string get_DisplayName();
    public abstract virtual object get_Item(string propertyName);
}
public interface Microsoft.VisualStudio.Services.Directories.IDirectoryGroup {
    public string Description { get; }
    public string Mail { get; }
    public string MailNickname { get; }
    public abstract virtual string get_Description();
    public abstract virtual string get_Mail();
    public abstract virtual string get_MailNickname();
}
public interface Microsoft.VisualStudio.Services.Directories.IDirectoryServicePrincipal {
    public string AppId { get; }
    public abstract virtual string get_AppId();
}
public interface Microsoft.VisualStudio.Services.Directories.IDirectoryUser {
    public string Department { get; }
    public Nullable`1<bool> Guest { get; }
    public string JobTitle { get; }
    public string Mail { get; }
    public string MailNickname { get; }
    public string PhysicalDeliveryOfficeName { get; }
    public string SignInAddress { get; }
    public string Surname { get; }
    public abstract virtual string get_Department();
    public abstract virtual Nullable`1<bool> get_Guest();
    public abstract virtual string get_JobTitle();
    public abstract virtual string get_Mail();
    public abstract virtual string get_MailNickname();
    public abstract virtual string get_PhysicalDeliveryOfficeName();
    public abstract virtual string get_SignInAddress();
    public abstract virtual string get_Surname();
}
public class Microsoft.VisualStudio.Services.Directories.InvalidDirectoryEntityResultException : DirectoryException {
    public InvalidDirectoryEntityResultException(string message);
    public InvalidDirectoryEntityResultException(string message, Exception innerException);
    public InvalidDirectoryEntityResultException(SerializationInfo info, StreamingContext context);
}
public static class Microsoft.VisualStudio.Services.Directories.Telemetry.DirectoryEntityTelemetryProperty : object {
    public static string InvitationMethod;
}
[DataContractAttribute]
[DebuggerDisplayAttribute("{DebuggerDisplay,nq}")]
public class Microsoft.VisualStudio.Services.EnterpriseCatalog.BatchCollectionInfo : object {
    [CompilerGeneratedAttribute]
private Guid <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private CollectionInfo <Info>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ExceptionType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorMessage>k__BackingField;
    [DataMemberAttribute]
public Guid Id { get; public set; }
    [DataMemberAttribute]
public CollectionInfo Info { get; public set; }
    [DataMemberAttribute]
public string ExceptionType { get; public set; }
    [DataMemberAttribute]
public string ErrorMessage { get; public set; }
    private string DebuggerDisplay { get; }
    [CompilerGeneratedAttribute]
public Guid get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(Guid value);
    [CompilerGeneratedAttribute]
public CollectionInfo get_Info();
    [CompilerGeneratedAttribute]
public void set_Info(CollectionInfo value);
    [CompilerGeneratedAttribute]
public string get_ExceptionType();
    [CompilerGeneratedAttribute]
public void set_ExceptionType(string value);
    [CompilerGeneratedAttribute]
public string get_ErrorMessage();
    [CompilerGeneratedAttribute]
public void set_ErrorMessage(string value);
    private string get_DebuggerDisplay();
}
[ResourceAreaAttribute("C001321E-8A1C-44AD-93A4-8F0BC137EF77")]
public class Microsoft.VisualStudio.Services.EnterpriseCatalog.Client.EnterpriseCatalogHttpClient : VssHttpClientBase {
    public EnterpriseCatalogHttpClient(Uri baseUrl, VssCredentials credentials);
    public EnterpriseCatalogHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public EnterpriseCatalogHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public EnterpriseCatalogHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public EnterpriseCatalogHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.EnterpriseCatalog.Client.EnterpriseCatalogHttpClient/<GetCollectionsByTenantIdAsync>d__5")]
public virtual Task`1<Stream> GetCollectionsByTenantIdAsync(Guid tenantId, object userState, CancellationToken cancellationToken);
}
[DataContractAttribute]
[DebuggerDisplayAttribute("{DebuggerDisplay,nq}")]
public class Microsoft.VisualStudio.Services.EnterpriseCatalog.CollectionInfo : object {
    [CompilerGeneratedAttribute]
private Guid <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OwnerSignInAddress>k__BackingField;
    [DataMemberAttribute]
public Guid Id { get; public set; }
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public string Url { get; public set; }
    [DataMemberAttribute]
public string OwnerSignInAddress { get; public set; }
    private string DebuggerDisplay { get; }
    [CompilerGeneratedAttribute]
public Guid get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(Guid value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
    [CompilerGeneratedAttribute]
public string get_OwnerSignInAddress();
    [CompilerGeneratedAttribute]
public void set_OwnerSignInAddress(string value);
    private string get_DebuggerDisplay();
}
public class Microsoft.VisualStudio.Services.EnterpriseCatalog.EnterpriseCatalogBadRequestException : VssServiceException {
    public EnterpriseCatalogBadRequestException(string message);
    public EnterpriseCatalogBadRequestException(string message, Exception innerException);
    protected EnterpriseCatalogBadRequestException(SerializationInfo info, StreamingContext context);
}
public static class Microsoft.VisualStudio.Services.EnterpriseCatalog.EnterpriseCatalogResourceIds : object {
    public static string AreaName;
    public static string AreaId;
    public static Guid ResourceAreaId;
    public static string EnterpriseArea;
    public static Guid OrganizationsResourceLocationId;
    public static string OrganizationsResourceName;
    private static EnterpriseCatalogResourceIds();
}
public class Microsoft.VisualStudio.Services.EnterpriseCatalog.FailedToReachEverySpsException : VssServiceException {
    public FailedToReachEverySpsException(string message);
    public FailedToReachEverySpsException(string message, Exception innerException);
    protected FailedToReachEverySpsException(SerializationInfo info, StreamingContext context);
}
public static class Microsoft.VisualStudio.Services.ExtensionManagementConstants : object {
    public static string Me;
}
[DataContractAttribute]
[ClientInternalUseOnlyAttribute("True")]
public class Microsoft.VisualStudio.Services.ExternalEvent.AzureContainerRegistryPushData : object {
    [CompilerGeneratedAttribute]
private string <Action>k__BackingField;
    [DataMemberAttribute]
public string Action { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Action();
    [CompilerGeneratedAttribute]
public void set_Action(string value);
}
[DataContractAttribute]
[ClientInternalUseOnlyAttribute("True")]
public class Microsoft.VisualStudio.Services.ExternalEvent.AzureContainerRegistryRepository : object {
    [CompilerGeneratedAttribute]
private string <Host>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Tag>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RepoName>k__BackingField;
    [DataMemberAttribute]
public string Host { get; public set; }
    [DataMemberAttribute]
public string Tag { get; public set; }
    [DataMemberAttribute]
public string RepoName { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Host();
    [CompilerGeneratedAttribute]
public void set_Host(string value);
    [CompilerGeneratedAttribute]
public string get_Tag();
    [CompilerGeneratedAttribute]
public void set_Tag(string value);
    [CompilerGeneratedAttribute]
public string get_RepoName();
    [CompilerGeneratedAttribute]
public void set_RepoName(string value);
}
[DataContractAttribute]
[ClientInternalUseOnlyAttribute("True")]
public class Microsoft.VisualStudio.Services.ExternalEvent.DockerHubPushData : object {
    [DataMemberAttribute]
public int PushedAt;
    [DataMemberAttribute]
public string Tag;
    [DataMemberAttribute]
public string Pusher;
}
[DataContractAttribute]
[ClientInternalUseOnlyAttribute("True")]
public class Microsoft.VisualStudio.Services.ExternalEvent.DockerHubRepository : object {
    [DataMemberAttribute]
public string RepoUrl;
    [DataMemberAttribute]
public string Name;
    [DataMemberAttribute]
public string Namespace;
    [DataMemberAttribute]
public string RepoName;
}
[DataContractAttribute]
[ClientIgnoreAttribute]
public class Microsoft.VisualStudio.Services.ExternalEvent.ExternalAnalyticsGitPullRequest : ExternalGitPullRequest {
}
[DataContractAttribute]
[ClientIgnoreAttribute]
public class Microsoft.VisualStudio.Services.ExternalEvent.ExternalAnalyticsGitPush : ExternalGitPush {
}
[DataContractAttribute]
[ClientInternalUseOnlyAttribute("True")]
public class Microsoft.VisualStudio.Services.ExternalEvent.ExternalAzureContainerRegistryPushEvent : object {
    [IgnoreDataMemberAttribute]
public static ApiResourceVersion CurrentVersion;
    [DataMemberAttribute]
public AzureContainerRegistryPushData PushData;
    [DataMemberAttribute]
public AzureContainerRegistryRepository RepositoryData;
    [DataMemberAttribute]
public IDictionary`2<string, string> Properties;
    private static ExternalAzureContainerRegistryPushEvent();
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.ExternalEvent.ExternalBuildCompletionEvent : object {
    [IgnoreDataMemberAttribute]
public static ApiResourceVersion CurrentVersion;
    [DataMemberAttribute]
public string PublisherId;
    [DataMemberAttribute]
public string SourceId;
    [DataMemberAttribute]
public string Id;
    [DataMemberAttribute]
public string Name;
    [DataMemberAttribute]
public ExternalBuildStatus Status;
    [DataMemberAttribute]
public TimeSpan Duration;
    [DataMemberAttribute]
public DateTime StartTime;
    [DataMemberAttribute]
public string StartedBy;
    [DataMemberAttribute]
public string Details;
    [CompilerGeneratedAttribute]
private string <PipelineEventId>k__BackingField;
    [DataMemberAttribute]
public IDictionary`2<string, string> Properties;
    [DataMemberAttribute]
public string PipelineEventId { get; public set; }
    private static ExternalBuildCompletionEvent();
    [CompilerGeneratedAttribute]
public string get_PipelineEventId();
    [CompilerGeneratedAttribute]
public void set_PipelineEventId(string value);
}
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.ExternalEvent.ExternalBuildStatus : Enum {
    public int value__;
    [EnumMemberAttribute]
public static ExternalBuildStatus Unknown;
    [EnumMemberAttribute]
public static ExternalBuildStatus InProgress;
    [EnumMemberAttribute]
public static ExternalBuildStatus Succeeded;
    [EnumMemberAttribute]
public static ExternalBuildStatus Failed;
    [EnumMemberAttribute]
public static ExternalBuildStatus Canceled;
    [EnumMemberAttribute]
public static ExternalBuildStatus NotStarted;
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.ExternalEvent.ExternalCheckRun : object {
    [DataMemberAttribute]
public string Id;
    [DataMemberAttribute]
public string Name;
    [DataMemberAttribute]
public string WorkflowName;
    [DataMemberAttribute]
public Nullable`1<DateTime> StartedAt;
    [DataMemberAttribute]
public Nullable`1<DateTime> CompletedAt;
    [DataMemberAttribute]
public string Status;
    [DataMemberAttribute]
public string Conclusion;
}
public class Microsoft.VisualStudio.Services.ExternalEvent.ExternalCommentEventCommand : object {
    [DataMemberAttribute]
public string CommandKeyword;
    [DataMemberAttribute]
public string RemainingParameters;
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.ExternalEvent.ExternalCommitStatusContext : object {
    [DataMemberAttribute]
public string Id;
    [DataMemberAttribute]
public string State;
    [DataMemberAttribute]
public string Name;
    [DataMemberAttribute]
public DateTime CreatedAt;
    [DataMemberAttribute]
public string Description;
}
[DataContractAttribute]
[ClientInternalUseOnlyAttribute("True")]
public class Microsoft.VisualStudio.Services.ExternalEvent.ExternalDockerHubPushEvent : object {
    [IgnoreDataMemberAttribute]
public static ApiResourceVersion CurrentVersion;
    [DataMemberAttribute]
public DockerHubPushData PushData;
    [DataMemberAttribute]
public DockerHubRepository Repository;
    [DataMemberAttribute]
public string ProjectId;
    [DataMemberAttribute]
public IDictionary`2<string, string> Properties;
    private static ExternalDockerHubPushEvent();
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitComment : object {
    [IgnoreDataMemberAttribute]
public static ApiResourceVersion CurrentVersion;
    [CompilerGeneratedAttribute]
private string <CommentBody>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UpdatedAt>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private ExternalGitUser <CommentedBy>k__BackingField;
    [CompilerGeneratedAttribute]
private ExternalGitRepo <Repo>k__BackingField;
    [CompilerGeneratedAttribute]
private ExternalGitUser <Sender>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <AdditionalProperties>k__BackingField;
    [DataMemberAttribute]
public string CommentBody { get; public set; }
    [DataMemberAttribute]
public string UpdatedAt { get; public set; }
    [DataMemberAttribute]
public string Id { get; public set; }
    [DataMemberAttribute]
public IDictionary`2<string, string> Properties { get; public set; }
    [DataMemberAttribute]
public ExternalGitUser CommentedBy { get; public set; }
    [DataMemberAttribute]
public ExternalGitRepo Repo { get; public set; }
    [DataMemberAttribute]
public ExternalGitUser Sender { get; public set; }
    [DataMemberAttribute]
public IDictionary`2<string, object> AdditionalProperties { get; public set; }
    private static ExternalGitComment();
    [CompilerGeneratedAttribute]
public string get_CommentBody();
    [CompilerGeneratedAttribute]
public void set_CommentBody(string value);
    [CompilerGeneratedAttribute]
public string get_UpdatedAt();
    [CompilerGeneratedAttribute]
public void set_UpdatedAt(string value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Properties();
    [CompilerGeneratedAttribute]
public void set_Properties(IDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public ExternalGitUser get_CommentedBy();
    [CompilerGeneratedAttribute]
public void set_CommentedBy(ExternalGitUser value);
    [CompilerGeneratedAttribute]
public ExternalGitRepo get_Repo();
    [CompilerGeneratedAttribute]
public void set_Repo(ExternalGitRepo value);
    [CompilerGeneratedAttribute]
public ExternalGitUser get_Sender();
    [CompilerGeneratedAttribute]
public void set_Sender(ExternalGitUser value);
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, object> get_AdditionalProperties();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AdditionalProperties(IDictionary`2<string, object> value);
}
public class Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitCommit : object {
    [DataMemberAttribute]
public string Sha;
    [DataMemberAttribute]
public string Message;
    [DataMemberAttribute]
public DateTime CommitedDate;
    [DataMemberAttribute]
public Nullable`1<DateTime> PushedDate;
    [DataMemberAttribute]
public ExternalGitUser Author;
    [DataMemberAttribute]
public ExternalGitRepo Repo;
    [DataMemberAttribute]
public string WebUrl;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <AdditionalProperties>k__BackingField;
    [DataMemberAttribute]
public IDictionary`2<string, object> AdditionalProperties { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, object> get_AdditionalProperties();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AdditionalProperties(IDictionary`2<string, object> value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitCommitComment : ExternalGitComment {
    [CompilerGeneratedAttribute]
private string <CommitId>k__BackingField;
    [DataMemberAttribute]
public string CommitId { get; public set; }
    [CompilerGeneratedAttribute]
public string get_CommitId();
    [CompilerGeneratedAttribute]
public void set_CommitId(string value);
}
public class Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitCommitComparer : object {
    [CompilerGeneratedAttribute]
private static ExternalGitCommitComparer <Instance>k__BackingField;
    public static ExternalGitCommitComparer Instance { get; }
    private static ExternalGitCommitComparer();
    public sealed virtual bool Equals(ExternalGitCommit x, ExternalGitCommit y);
    public sealed virtual int GetHashCode(ExternalGitCommit obj);
    [CompilerGeneratedAttribute]
public static ExternalGitCommitComparer get_Instance();
}
internal static class Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitConstants : object {
    public static string NodeId;
    public static string Name;
    public static string Login;
    public static string RepoNameWithOwner;
    public static string Metadata;
    public static string RepoInternalId;
    public static string PullRequestCommentCount;
    public static string CommentDatabaseId;
    public static string HasAdminPermission;
    public static string IsFork;
    public static string IsPrivate;
    public static string Archived;
    public static string OwnerAvatarUrl;
    public static string DeletedAction;
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitEventReference : object {
    [CompilerGeneratedAttribute]
private string <PipelineEventId>k__BackingField;
    [DataMemberAttribute]
public string PipelineEventId { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_PipelineEventId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PipelineEventId(string value);
}
[ExtensionAttribute]
public static class Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitExtensions : object {
    [ExtensionAttribute]
public static string NodeId(ExternalGitPullRequest externalGitPullRequest);
    [ExtensionAttribute]
public static string NodeId(ExternalGitRepo externalGitRepo);
    [ExtensionAttribute]
public static string NodeId(T artifact);
    [ExtensionAttribute]
public static T SetNodeId(T artifact, string nodeId);
    [ExtensionAttribute]
public static string Name(ExternalGitUser user);
    [ExtensionAttribute]
public static ExternalGitUser SetName(ExternalGitUser user, string name);
    [ExtensionAttribute]
public static string Login(ExternalGitUser user);
    [ExtensionAttribute]
public static ExternalGitUser SetLogin(ExternalGitUser user, string login);
    [ExtensionAttribute]
public static string RepoNameWithOwner(ExternalGitRepo repo);
    [ExtensionAttribute]
public static ExternalGitRepo SetRepoNameWithOwner(ExternalGitRepo externalGitRepo, string repoNameWithOwner);
    [ExtensionAttribute]
public static Guid GetRepoInternalId(ExternalGitRepo artifact);
    [ExtensionAttribute]
public static ExternalGitRepo SetRepoInternalId(ExternalGitRepo artifact, Guid repoInternalId);
    [ExtensionAttribute]
public static T GetMetadata(ExternalGitRepo externalGitRepo);
    [ExtensionAttribute]
public static ExternalGitRepo SetMetadata(ExternalGitRepo externalGitRepo, object data);
    [ExtensionAttribute]
public static string GetSerializedMetadata(ExternalGitRepo externalGitRepo);
    [ExtensionAttribute]
public static string GetCommentDatabaseId(ExternalGitComment externalGitComment);
    [ExtensionAttribute]
public static ExternalGitComment SetCommentDatabaseId(ExternalGitComment externalGitComment, string commentDatabaseId);
    [ExtensionAttribute]
public static bool IsDeleteAction(IExternalAction action);
    [ExtensionAttribute]
private static S GetAdditionalProperty(T artifact, string key);
    [ExtensionAttribute]
private static T SetAdditionalProperty(T artifact, string key, object value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitIssue : object {
    [IgnoreDataMemberAttribute]
public static ApiResourceVersion CurrentVersion;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Number>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [CompilerGeneratedAttribute]
private string <WebUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <State>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UpdatedAt>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CreatedAt>k__BackingField;
    [DataMemberAttribute]
public string ClosedAt;
    [CompilerGeneratedAttribute]
private ExternalGitRepo <Repo>k__BackingField;
    [CompilerGeneratedAttribute]
private ExternalGitUser <Sender>k__BackingField;
    [DataMemberAttribute]
public ICollection`1<ExternalGitUser> Assignees;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <AdditionalProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Action>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Changes>k__BackingField;
    [DataMemberAttribute]
public string Id { get; public set; }
    [DataMemberAttribute]
public string Number { get; public set; }
    [DataMemberAttribute]
public string Title { get; public set; }
    [DataMemberAttribute]
public string Description { get; public set; }
    [DataMemberAttribute]
public string Url { get; public set; }
    [DataMemberAttribute]
public string WebUrl { get; public set; }
    [DataMemberAttribute]
public string State { get; public set; }
    [DataMemberAttribute]
public string UpdatedAt { get; public set; }
    [DataMemberAttribute]
public string CreatedAt { get; public set; }
    [DataMemberAttribute]
public ExternalGitRepo Repo { get; public set; }
    [DataMemberAttribute]
public ExternalGitUser Sender { get; public set; }
    [DataMemberAttribute]
public IDictionary`2<string, object> AdditionalProperties { get; public set; }
    [DataMemberAttribute]
public string Action { get; public set; }
    [DataMemberAttribute]
public IDictionary`2<string, string> Changes { get; public set; }
    private static ExternalGitIssue();
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Number();
    [CompilerGeneratedAttribute]
public void set_Number(string value);
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
    [CompilerGeneratedAttribute]
public string get_WebUrl();
    [CompilerGeneratedAttribute]
public void set_WebUrl(string value);
    [CompilerGeneratedAttribute]
public string get_State();
    [CompilerGeneratedAttribute]
public void set_State(string value);
    [CompilerGeneratedAttribute]
public string get_UpdatedAt();
    [CompilerGeneratedAttribute]
public void set_UpdatedAt(string value);
    [CompilerGeneratedAttribute]
public string get_CreatedAt();
    [CompilerGeneratedAttribute]
public void set_CreatedAt(string value);
    [CompilerGeneratedAttribute]
public ExternalGitRepo get_Repo();
    [CompilerGeneratedAttribute]
public void set_Repo(ExternalGitRepo value);
    [CompilerGeneratedAttribute]
public ExternalGitUser get_Sender();
    [CompilerGeneratedAttribute]
public void set_Sender(ExternalGitUser value);
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, object> get_AdditionalProperties();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AdditionalProperties(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Action();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Action(string value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Changes();
    [CompilerGeneratedAttribute]
public void set_Changes(IDictionary`2<string, string> value);
}
public class Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitIssueComparer : object {
    [CompilerGeneratedAttribute]
private static ExternalGitIssueComparer <Instance>k__BackingField;
    public static ExternalGitIssueComparer Instance { get; }
    private static ExternalGitIssueComparer();
    public sealed virtual bool Equals(ExternalGitIssue x, ExternalGitIssue y);
    public sealed virtual int GetHashCode(ExternalGitIssue obj);
    [CompilerGeneratedAttribute]
public static ExternalGitIssueComparer get_Instance();
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPullRequest : object {
    private static string c_contributorAssociation;
    [IgnoreDataMemberAttribute]
public static ApiResourceVersion CurrentVersion;
    [DataMemberAttribute]
public string Id;
    [DataMemberAttribute]
public string Number;
    [DataMemberAttribute]
public string Title;
    [DataMemberAttribute]
public string Description;
    [DataMemberAttribute]
public string Url;
    [DataMemberAttribute]
public string WebUrl;
    [DataMemberAttribute]
public string MergeRef;
    [DataMemberAttribute]
public string TargetRef;
    [DataMemberAttribute]
public string TargetSha;
    [DataMemberAttribute]
public string SourceRef;
    [DataMemberAttribute]
public string SourceSha;
    [DataMemberAttribute]
public bool IsFork;
    [DataMemberAttribute]
public bool Draft;
    [DataMemberAttribute]
public string State;
    [DataMemberAttribute]
public Nullable`1<bool> IsMergeable;
    [DataMemberAttribute]
public string ReviewDecision;
    [DataMemberAttribute]
public string MergeCommitSha;
    [DataMemberAttribute]
public string MergedAt;
    [DataMemberAttribute]
public string UpdatedAt;
    [DataMemberAttribute]
public string CreatedAt;
    [DataMemberAttribute]
public string ClosedAt;
    [DataMemberAttribute]
public ExternalGitRepo Repo;
    [DataMemberAttribute]
public string ProjectId;
    [DataMemberAttribute]
public ExternalGitUser Sender;
    [DataMemberAttribute]
public IDictionary`2<string, string> Properties;
    [DataMemberAttribute]
public bool IsFromComment;
    [DataMemberAttribute]
public string DefinitionToBuild;
    [DataMemberAttribute]
public string BuildToRetry;
    [DataMemberAttribute]
public ExternalGitCommit LastHeadRefCommit;
    [DataMemberAttribute]
public IEnumerable`1<ExternalGitCommit> Commits;
    [CompilerGeneratedAttribute]
private string <PipelineEventId>k__BackingField;
    [DataMemberAttribute]
public ICollection`1<ExternalGitUser> Assignees;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <AdditionalProperties>k__BackingField;
    [DataMemberAttribute]
public string AuthorAssociation;
    [DataMemberAttribute]
public bool DoesAuthorHaveWriteAccess;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, IEnumerable`1<ExternalCheckRun>> <StatusCheckResults>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, IEnumerable`1<ExternalCommitStatusContext>> <StatusContextRecords>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Action>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Changes>k__BackingField;
    [DataMemberAttribute]
public string PipelineEventId { get; public set; }
    public IDictionary`2<string, object> AdditionalProperties { get; public set; }
    [DataMemberAttribute]
public IDictionary`2<string, IEnumerable`1<ExternalCheckRun>> StatusCheckResults { get; public set; }
    [DataMemberAttribute]
public IDictionary`2<string, IEnumerable`1<ExternalCommitStatusContext>> StatusContextRecords { get; public set; }
    [IgnoreDataMemberAttribute]
public bool AuthorIsRepoContributor { get; }
    [DataMemberAttribute]
public string Action { get; public set; }
    [DataMemberAttribute]
public IDictionary`2<string, string> Changes { get; public set; }
    private static ExternalGitPullRequest();
    [CompilerGeneratedAttribute]
public sealed virtual string get_PipelineEventId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PipelineEventId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, object> get_AdditionalProperties();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AdditionalProperties(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, IEnumerable`1<ExternalCheckRun>> get_StatusCheckResults();
    [CompilerGeneratedAttribute]
public void set_StatusCheckResults(IDictionary`2<string, IEnumerable`1<ExternalCheckRun>> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, IEnumerable`1<ExternalCommitStatusContext>> get_StatusContextRecords();
    [CompilerGeneratedAttribute]
public void set_StatusContextRecords(IDictionary`2<string, IEnumerable`1<ExternalCommitStatusContext>> value);
    public bool get_AuthorIsRepoContributor();
    [CompilerGeneratedAttribute]
public string get_Action();
    [CompilerGeneratedAttribute]
public void set_Action(string value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Changes();
    [CompilerGeneratedAttribute]
public void set_Changes(IDictionary`2<string, string> value);
}
public class Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPullRequestComparer : object {
    [CompilerGeneratedAttribute]
private static ExternalGitPullRequestComparer <Instance>k__BackingField;
    public static ExternalGitPullRequestComparer Instance { get; }
    private static ExternalGitPullRequestComparer();
    public sealed virtual bool Equals(ExternalGitPullRequest x, ExternalGitPullRequest y);
    public sealed virtual int GetHashCode(ExternalGitPullRequest obj);
    [CompilerGeneratedAttribute]
public static ExternalGitPullRequestComparer get_Instance();
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPush : object {
    [IgnoreDataMemberAttribute]
public static ApiResourceVersion CurrentVersion;
    [DataMemberAttribute]
public string Id;
    [DataMemberAttribute]
public string GitRef;
    [DataMemberAttribute]
public string BeforeSha;
    [DataMemberAttribute]
public string AfterSha;
    [DataMemberAttribute]
public IList`1<ExternalGitCommit> Commits;
    [DataMemberAttribute]
public ExternalGitRepo Repo;
    [DataMemberAttribute]
public ExternalGitUser PushedBy;
    [DataMemberAttribute]
public string ProjectId;
    [DataMemberAttribute]
public IDictionary`2<string, string> Properties;
    [DataMemberAttribute]
public string DefinitionToBuild;
    [DataMemberAttribute]
public string BuildToRetry;
    [CompilerGeneratedAttribute]
private string <PipelineEventId>k__BackingField;
    [DataMemberAttribute]
public string PipelineEventId { get; public set; }
    private static ExternalGitPush();
    [CompilerGeneratedAttribute]
public sealed virtual string get_PipelineEventId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PipelineEventId(string value);
}
public static class Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPushConstants : object {
    public static string NoCiMessage;
    public static string HasNoCiPropertyId;
    public static string HasCommitsPropertyId;
    public static IReadOnlyList`1<string> SkipCICheckInKeywords { get; }
    public static IReadOnlyList`1<string> get_SkipCICheckInKeywords();
}
public static class Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitPushHelper : object {
    public static bool IsSkipCIMessagePresent(string message);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitRepo : object {
    [DataMemberAttribute]
public string Id;
    [DataMemberAttribute]
public string Name;
    [DataMemberAttribute]
public string Url;
    [DataMemberAttribute]
public string WebUrl;
    [DataMemberAttribute]
public bool IsPrivate;
    [CompilerGeneratedAttribute]
private string <DefaultBranch>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <AdditionalProperties>k__BackingField;
    [DataMemberAttribute]
public string DefaultBranch { get; public set; }
    [DataMemberAttribute]
public IDictionary`2<string, object> AdditionalProperties { get; public set; }
    [CompilerGeneratedAttribute]
public string get_DefaultBranch();
    [CompilerGeneratedAttribute]
public void set_DefaultBranch(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, object> get_AdditionalProperties();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AdditionalProperties(IDictionary`2<string, object> value);
}
public class Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitRepoComparer : object {
    [CompilerGeneratedAttribute]
private static ExternalGitRepoComparer <Instance>k__BackingField;
    public static ExternalGitRepoComparer Instance { get; }
    private static ExternalGitRepoComparer();
    public sealed virtual bool Equals(ExternalGitRepo x, ExternalGitRepo y);
    public sealed virtual int GetHashCode(ExternalGitRepo obj);
    [CompilerGeneratedAttribute]
public static ExternalGitRepoComparer get_Instance();
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.ExternalEvent.ExternalGitUser : object {
    [DataMemberAttribute]
public string Name;
    [DataMemberAttribute]
public string Email;
    [DataMemberAttribute]
public string AvatarUrl;
    [DataMemberAttribute]
public string Type;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <AdditionalProperties>k__BackingField;
    [DataMemberAttribute]
public IDictionary`2<string, object> AdditionalProperties { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, object> get_AdditionalProperties();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AdditionalProperties(IDictionary`2<string, object> value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.ExternalEvent.ExternalPullRequestCommentEvent : ExternalGitComment {
    [DataMemberAttribute]
public string RepositoryOwner;
    [DataMemberAttribute]
public string PullRequestNumber;
    [DataMemberAttribute]
public string AuthorAssociation;
    [DataMemberAttribute]
public string ProjectId;
    [DataMemberAttribute]
public ExternalCommentEventCommand Command;
    [DataMemberAttribute]
public ExternalGitPullRequest PullRequest;
    [CompilerGeneratedAttribute]
private string <PipelineEventId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Action>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Changes>k__BackingField;
    [DataMemberAttribute]
public string PipelineEventId { get; public set; }
    [DataMemberAttribute]
public string Action { get; public set; }
    [DataMemberAttribute]
public IDictionary`2<string, string> Changes { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_PipelineEventId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PipelineEventId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Action();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Action(string value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Changes();
    [CompilerGeneratedAttribute]
public void set_Changes(IDictionary`2<string, string> value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.ExternalEvent.ExternalRateLimit : object {
    [CompilerGeneratedAttribute]
private int <Limit>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Remaining>k__BackingField;
    [DataMemberAttribute]
public int Limit { get; public set; }
    [DataMemberAttribute]
public int Remaining { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Limit();
    [CompilerGeneratedAttribute]
public void set_Limit(int value);
    [CompilerGeneratedAttribute]
public int get_Remaining();
    [CompilerGeneratedAttribute]
public void set_Remaining(int value);
}
public interface Microsoft.VisualStudio.Services.ExternalEvent.IAdditionalProperties {
    public IDictionary`2<string, object> AdditionalProperties { get; public set; }
    public abstract virtual IDictionary`2<string, object> get_AdditionalProperties();
    public abstract virtual void set_AdditionalProperties(IDictionary`2<string, object> value);
}
public interface Microsoft.VisualStudio.Services.ExternalEvent.IExternalAction {
    public string Action { get; public set; }
    public abstract virtual string get_Action();
    public abstract virtual void set_Action(string value);
}
public interface Microsoft.VisualStudio.Services.ExternalEvent.IExternalArtifact {
}
public interface Microsoft.VisualStudio.Services.ExternalEvent.IExternalGitEvent {
    public string PipelineEventId { get; public set; }
    public abstract virtual string get_PipelineEventId();
    public abstract virtual void set_PipelineEventId(string value);
}
[GenerateAllConstantsAttribute("")]
public static class Microsoft.VisualStudio.Services.FeatureAvailability.FeatureAvailabilityResourceIds : object {
    public static string AreaId;
    public static string FeatureAvailabilityAreaName;
    public static Guid FeatureFlagsLocationId;
    private static FeatureAvailabilityResourceIds();
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.FeatureAvailability.FeatureFlag : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Uri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EffectiveState>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ExplicitState>k__BackingField;
    [DataMemberAttribute]
public string Name { get; private set; }
    [DataMemberAttribute]
public string Description { get; private set; }
    [DataMemberAttribute]
public string Uri { get; private set; }
    [DataMemberAttribute]
public string EffectiveState { get; private set; }
    [DataMemberAttribute]
public string ExplicitState { get; private set; }
    public FeatureFlag(string name, string description, string uri, string effectiveState, string explicitState);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
private void set_Description(string value);
    [CompilerGeneratedAttribute]
public string get_Uri();
    [CompilerGeneratedAttribute]
private void set_Uri(string value);
    [CompilerGeneratedAttribute]
public string get_EffectiveState();
    [CompilerGeneratedAttribute]
private void set_EffectiveState(string value);
    [CompilerGeneratedAttribute]
public string get_ExplicitState();
    [CompilerGeneratedAttribute]
private void set_ExplicitState(string value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.FeatureAvailability.FeatureFlagPatch : object {
    [CompilerGeneratedAttribute]
private string <State>k__BackingField;
    [DataMemberAttribute]
public string State { get; private set; }
    public FeatureFlagPatch(string state);
    [CompilerGeneratedAttribute]
public string get_State();
    [CompilerGeneratedAttribute]
private void set_State(string value);
}
public class Microsoft.VisualStudio.Services.FeatureAvailability.WebApi.FeatureAvailabilityHttpClient : VssHttpClientBase {
    public FeatureAvailabilityHttpClient(Uri baseUrl, VssCredentials credentials);
    public FeatureAvailabilityHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public FeatureAvailabilityHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public FeatureAvailabilityHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public FeatureAvailabilityHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    public Task`1<List`1<FeatureFlag>> GetAllFeatureFlagsAsync(object userState, CancellationToken cancellationToken);
    public Task`1<List`1<FeatureFlag>> GetAllFeatureFlagsAsync(string userEmail, object userState, CancellationToken cancellationToken);
    public Task`1<FeatureFlag> GetFeatureFlagByNameAsync(string name, object userState, CancellationToken cancellationToken);
    public Task`1<FeatureFlag> GetFeatureFlagByNameAsync(string name, bool checkFeatureExists, object userState, CancellationToken cancellationToken);
    public Task`1<FeatureFlag> GetFeatureFlagByNameAndUserEmailAsync(string name, string userEmail, object userState, CancellationToken cancellationToken);
    public Task`1<FeatureFlag> GetFeatureFlagByNameAndUserEmailAsync(string name, string userEmail, bool checkFeatureExists, object userState, CancellationToken cancellationToken);
    public Task`1<FeatureFlag> GetFeatureFlagByNameAndUserIdAsync(string name, Guid userId, object userState, CancellationToken cancellationToken);
    public Task`1<FeatureFlag> GetFeatureFlagByNameAndUserIdAsync(string name, Guid userId, bool checkFeatureExists, object userState, CancellationToken cancellationToken);
    public Task`1<FeatureFlag> UpdateFeatureFlagAsync(FeatureFlagPatch state, string name, Nullable`1<bool> checkFeatureExists, Nullable`1<bool> setAtApplicationLevelAlso, object userState, CancellationToken cancellationToken);
    public Task`1<FeatureFlag> UpdateFeatureFlagAsync(FeatureFlagPatch state, string name, string userEmail, Nullable`1<bool> checkFeatureExists, Nullable`1<bool> setAtApplicationLevelAlso, object userState, CancellationToken cancellationToken);
}
[ExceptionMappingAttribute("0.0", "3.0", "ArtifactUriNotSupportedException", "Microsoft.VisualStudio.Services.FileContainer.ArtifactUriNotSupportedException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.FileContainer.ArtifactUriNotSupportedException : FileContainerException {
    public ArtifactUriNotSupportedException(Uri artifactUri);
    public ArtifactUriNotSupportedException(string message);
    public ArtifactUriNotSupportedException(string message, Exception ex);
}
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.FileContainer.BlobCompressionType : Enum {
    public int value__;
    public static BlobCompressionType None;
    public static BlobCompressionType GZip;
}
public class Microsoft.VisualStudio.Services.FileContainer.Client.FileContainerHttpClient : VssHttpClientBase {
    [CompilerGeneratedAttribute]
private EventHandler`1<ReportTraceEventArgs> UploadFileReportTrace;
    [CompilerGeneratedAttribute]
private EventHandler`1<ReportProgressEventArgs> UploadFileReportProgress;
    private static int c_defaultChunkSize;
    private static int c_defaultChunkRetryTimes;
    private static int c_maxChunkSize;
    private static int c_ContentChunkMultiple;
    private static Dictionary`2<string, Type> s_translatedExceptions;
    private static ApiResourceVersion s_currentApiVersion;
    protected IDictionary`2<string, Type> TranslatedExceptions { get; }
    private static FileContainerHttpClient();
    public FileContainerHttpClient(Uri baseUrl, VssCredentials credentials);
    public FileContainerHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public FileContainerHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public FileContainerHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public FileContainerHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    [CompilerGeneratedAttribute]
public void add_UploadFileReportTrace(EventHandler`1<ReportTraceEventArgs> value);
    [CompilerGeneratedAttribute]
public void remove_UploadFileReportTrace(EventHandler`1<ReportTraceEventArgs> value);
    [CompilerGeneratedAttribute]
public void add_UploadFileReportProgress(EventHandler`1<ReportProgressEventArgs> value);
    [CompilerGeneratedAttribute]
public void remove_UploadFileReportProgress(EventHandler`1<ReportProgressEventArgs> value);
    public Task`1<List`1<FileContainer>> QueryContainersAsync(List`1<Uri> artifactUris, Guid scopeIdentifier, object userState, CancellationToken cancellationToken);
    public Task`1<List`1<FileContainerItem>> QueryContainerItemsAsync(long containerId, Guid scopeIdentifier, string itemPath, object userState, bool includeDownloadTickets, CancellationToken cancellationToken);
    public Task`1<List`1<FileContainerItem>> QueryContainerItemsAsync(long containerId, Guid scopeIdentifier, bool isShallow, string itemPath, object userState, bool includeDownloadTickets, CancellationToken cancellationToken);
    public Task`1<List`1<FileContainerItem>> QueryContainerItemsAsync(long containerId, Guid scopeIdentifier, bool isShallow, bool includeBlobMetadata, string itemPath, object userState, bool includeDownloadTickets, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.FileContainer.Client.FileContainerHttpClient/<CreateItemForArtifactUpload>d__16")]
public Task`1<HttpResponseMessage> CreateItemForArtifactUpload(long containerId, string itemPath, Guid scopeIdentifier, string artifactHash, long fileLength, CancellationToken cancellationToken, object userState);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.FileContainer.Client.FileContainerHttpClient/<UploadFileAsync>d__17")]
public Task`1<HttpResponseMessage> UploadFileAsync(long containerId, string itemPath, Stream fileStream, Guid scopeIdentifier, CancellationToken cancellationToken, int chunkSize, bool uploadFirstChunk, object userState, bool compressStream);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.FileContainer.Client.FileContainerHttpClient/<UploadFileAsync>d__18")]
[EditorBrowsableAttribute("1")]
public Task`1<HttpResponseMessage> UploadFileAsync(long containerId, string itemPath, Stream fileStream, Byte[] contentId, long fileLength, bool isGzipped, Guid scopeIdentifier, CancellationToken cancellationToken, int chunkSize, int chunkRetryTimes, bool uploadFirstChunk, object userState);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.FileContainer.Client.FileContainerHttpClient/<CreateItemsAsync>d__19")]
[EditorBrowsableAttribute("1")]
public Task`1<List`1<FileContainerItem>> CreateItemsAsync(long containerId, List`1<FileContainerItem> items, Guid scopeIdentifier, CancellationToken cancellationToken, object userState);
    [EditorBrowsableAttribute("1")]
public Task`1<HttpResponseMessage> UploadFileToTfsAsync(long containerId, string itemPath, Stream fileStream, Guid scopeIdentifier, CancellationToken cancellationToken, int chunkSize, bool uploadFirstChunk, object userState);
    [EditorBrowsableAttribute("1")]
public Task`1<HttpResponseMessage> DownloadFileFromTfsAsync(Uri requestUri, Stream stream);
    public Task`1<Stream> DownloadFileAsync(long containerId, string itemPath, CancellationToken cancellationToken, Guid scopeIdentifier, object userState);
    public Task`1<Stream> DownloadItemAsZipAsync(long containerId, string itemPath, CancellationToken cancellationToken, Guid scopeIdentifier, object userState);
    public Task DeleteContainerItem(long containerId, string itemPath, Guid scopeIdentifier, CancellationToken cancellationToken, object userState);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.FileContainer.Client.FileContainerHttpClient/<ContainerGetRequestAsync>d__25")]
private Task`1<HttpResponseMessage> ContainerGetRequestAsync(long containerId, string itemPath, string contentType, CancellationToken cancellationToken, Guid scopeIdentifier, object userState);
    private List`1<KeyValuePair`2<string, string>> AppendContainerQueryString(List`1<Uri> artifactUris, Guid scopeIdentifier);
    private List`1<KeyValuePair`2<string, string>> AppendItemQueryString(string itemPath, Guid scopeIdentifier, bool includeDownloadTickets, bool isShallow, bool includeBlobMetadata, bool isMetadata);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.FileContainer.Client.FileContainerHttpClient/<DownloadAsync>d__28")]
private Task`1<Stream> DownloadAsync(long containerId, string itemPath, string contentType, CancellationToken cancellationToken, Guid scopeIdentifier, object userState);
    private void FileUploadTrace(string file, string message);
    private void FileUploadProgress(string file, int currentChunk, int totalChunks);
    protected virtual IDictionary`2<string, Type> get_TranslatedExceptions();
}
public class Microsoft.VisualStudio.Services.FileContainer.Client.ReportProgressEventArgs : EventArgs {
    [CompilerGeneratedAttribute]
private string <File>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CurrentChunk>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TotalChunks>k__BackingField;
    public string File { get; private set; }
    public int CurrentChunk { get; private set; }
    public int TotalChunks { get; private set; }
    public ReportProgressEventArgs(string file, int currentChunk, int totalChunks);
    [CompilerGeneratedAttribute]
public string get_File();
    [CompilerGeneratedAttribute]
private void set_File(string value);
    [CompilerGeneratedAttribute]
public int get_CurrentChunk();
    [CompilerGeneratedAttribute]
private void set_CurrentChunk(int value);
    [CompilerGeneratedAttribute]
public int get_TotalChunks();
    [CompilerGeneratedAttribute]
private void set_TotalChunks(int value);
}
public class Microsoft.VisualStudio.Services.FileContainer.Client.ReportTraceEventArgs : EventArgs {
    [CompilerGeneratedAttribute]
private string <File>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    public string File { get; private set; }
    public string Message { get; private set; }
    public ReportTraceEventArgs(string file, string message);
    [CompilerGeneratedAttribute]
public string get_File();
    [CompilerGeneratedAttribute]
private void set_File(string value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
private void set_Message(string value);
}
[ExceptionMappingAttribute("0.0", "3.0", "ContainerAlreadyExistsException", "Microsoft.VisualStudio.Services.FileContainer.ContainerAlreadyExistsException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.FileContainer.ContainerAlreadyExistsException : FileContainerException {
    public ContainerAlreadyExistsException(string artifactUri);
    public ContainerAlreadyExistsException(string message, Exception ex);
}
[ExceptionMappingAttribute("0.0", "3.0", "ContainerContentIdCollisionException", "Microsoft.VisualStudio.Services.FileContainer.ContainerContentIdCollisionException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.FileContainer.ContainerContentIdCollisionException : FileContainerException {
    public ContainerContentIdCollisionException(string fileId1, string length1, string fileId2, string length2);
    public ContainerContentIdCollisionException(string message);
    public ContainerContentIdCollisionException(string message, Exception ex);
}
[ExceptionMappingAttribute("0.0", "3.0", "ContainerDeleteFailedException", "Microsoft.VisualStudio.Services.FileContainer.ContainerDeleteFailedException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.FileContainer.ContainerDeleteFailedException : FileContainerException {
    public ContainerDeleteFailedException(string targetContainerPath);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.FileContainer.ContainerItemBlobReference : object {
    [CompilerGeneratedAttribute]
private long <ArtifactId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ArtifactHash>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <SessionId>k__BackingField;
    [CompilerGeneratedAttribute]
private BlobCompressionType <CompressionType>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <ScopeIdentifier>k__BackingField;
    [DataMemberAttribute]
public long ArtifactId { get; public set; }
    [DataMemberAttribute]
public string ArtifactHash { get; public set; }
    [DataMemberAttribute]
public Guid SessionId { get; public set; }
    [DataMemberAttribute]
public BlobCompressionType CompressionType { get; public set; }
    [DataMemberAttribute]
public Guid ScopeIdentifier { get; public set; }
    [CompilerGeneratedAttribute]
public long get_ArtifactId();
    [CompilerGeneratedAttribute]
public void set_ArtifactId(long value);
    [CompilerGeneratedAttribute]
public string get_ArtifactHash();
    [CompilerGeneratedAttribute]
public void set_ArtifactHash(string value);
    [CompilerGeneratedAttribute]
public Guid get_SessionId();
    [CompilerGeneratedAttribute]
public void set_SessionId(Guid value);
    [CompilerGeneratedAttribute]
public BlobCompressionType get_CompressionType();
    [CompilerGeneratedAttribute]
public void set_CompressionType(BlobCompressionType value);
    [CompilerGeneratedAttribute]
public Guid get_ScopeIdentifier();
    [CompilerGeneratedAttribute]
public void set_ScopeIdentifier(Guid value);
}
[ExceptionMappingAttribute("0.0", "3.0", "ContainerItemContentException", "Microsoft.VisualStudio.Services.FileContainer.ContainerItemContentException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.FileContainer.ContainerItemContentException : FileContainerException {
    public ContainerItemContentException(string message);
    public ContainerItemContentException(string message, Exception ex);
}
[ExceptionMappingAttribute("0.0", "3.0", "ContainerItemCopyDuplicateTargetsException", "Microsoft.VisualStudio.Services.FileContainer.ContainerItemCopyDuplicateTargetsException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.FileContainer.ContainerItemCopyDuplicateTargetsException : FileContainerException {
    public ContainerItemCopyDuplicateTargetsException(string targetPath);
    public ContainerItemCopyDuplicateTargetsException(string message, Exception ex);
}
[ExceptionMappingAttribute("0.0", "3.0", "ContainerItemCopySourcePendingUploadException", "Microsoft.VisualStudio.Services.FileContainer.ContainerItemCopySourcePendingUploadException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.FileContainer.ContainerItemCopySourcePendingUploadException : FileContainerException {
    public ContainerItemCopySourcePendingUploadException(string sourcePath);
    public ContainerItemCopySourcePendingUploadException(string message, Exception ex);
}
[ExceptionMappingAttribute("0.0", "3.0", "ContainerItemCopyTargetChildOfSourceException", "Microsoft.VisualStudio.Services.FileContainer.ContainerItemCopyTargetChildOfSourceException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.FileContainer.ContainerItemCopyTargetChildOfSourceException : FileContainerException {
    public ContainerItemCopyTargetChildOfSourceException(string targetPath, string sourcePath);
    public ContainerItemCopyTargetChildOfSourceException(string message);
    public ContainerItemCopyTargetChildOfSourceException(string message, Exception ex);
}
[ExceptionMappingAttribute("0.0", "3.0", "ContainerItemCreateDuplicateItemException", "Microsoft.VisualStudio.Services.FileContainer.ContainerItemCreateDuplicateItemException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.FileContainer.ContainerItemCreateDuplicateItemException : FileContainerException {
    public ContainerItemCreateDuplicateItemException(string targetPath);
    public ContainerItemCreateDuplicateItemException(string message, Exception ex);
}
[ExceptionMappingAttribute("0.0", "3.0", "ContainerItemExistsException", "Microsoft.VisualStudio.Services.FileContainer.ContainerItemExistsException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.FileContainer.ContainerItemExistsException : FileContainerException {
    public ContainerItemExistsException(ContainerItemType itemType, string existingPath);
    public ContainerItemExistsException(string message);
    public ContainerItemExistsException(string message, Exception ex);
}
[ExceptionMappingAttribute("0.0", "3.0", "ContainerItemNotFoundException", "Microsoft.VisualStudio.Services.FileContainer.ContainerItemNotFoundException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.FileContainer.ContainerItemNotFoundException : FileContainerException {
    public ContainerItemNotFoundException(long containerId, string path);
    public ContainerItemNotFoundException(ContainerItemType itemType, string existingPath);
    public ContainerItemNotFoundException(string message);
    public ContainerItemNotFoundException(string message, Exception ex);
}
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.FileContainer.ContainerItemStatus : Enum {
    public int value__;
    [EnumMemberAttribute]
public static ContainerItemStatus Created;
    [EnumMemberAttribute]
public static ContainerItemStatus PendingUpload;
}
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.FileContainer.ContainerItemType : Enum {
    public int value__;
    [EnumMemberAttribute]
public static ContainerItemType Any;
    [EnumMemberAttribute]
public static ContainerItemType Folder;
    [EnumMemberAttribute]
public static ContainerItemType File;
}
[ExceptionMappingAttribute("0.0", "3.0", "ContainerItemUpdateFailedException", "Microsoft.VisualStudio.Services.FileContainer.ContainerItemUpdateFailedException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.FileContainer.ContainerItemUpdateFailedException : FileContainerException {
    public ContainerItemUpdateFailedException(string targetPath);
}
[ExceptionMappingAttribute("0.0", "3.0", "ContainerNoContentException", "Microsoft.VisualStudio.Services.FileContainer.ContainerNoContentException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.FileContainer.ContainerNoContentException : FileContainerException {
    public ContainerNoContentException(string message);
    public ContainerNoContentException(string message, Exception ex);
}
[ExceptionMappingAttribute("0.0", "3.0", "ContainerNotFoundException", "Microsoft.VisualStudio.Services.FileContainer.ContainerNotFoundException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.FileContainer.ContainerNotFoundException : FileContainerException {
    public ContainerNotFoundException(long containerId);
    public ContainerNotFoundException(string message);
    public ContainerNotFoundException(string message, Exception ex);
}
[FlagsAttribute]
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.FileContainer.ContainerOptions : Enum {
    public int value__;
    [EnumMemberAttribute]
public static ContainerOptions None;
}
[ExceptionMappingAttribute("0.0", "3.0", "ContainerUnexpectedContentTypeException", "Microsoft.VisualStudio.Services.FileContainer.ContainerUnexpectedContentTypeException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.FileContainer.ContainerUnexpectedContentTypeException : FileContainerException {
    public ContainerUnexpectedContentTypeException(string expectedContent, string actualContent);
    public ContainerUnexpectedContentTypeException(string message);
    public ContainerUnexpectedContentTypeException(string message, Exception ex);
}
[ExceptionMappingAttribute("0.0", "3.0", "ContainerWriteAccessDeniedException", "Microsoft.VisualStudio.Services.FileContainer.ContainerWriteAccessDeniedException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.FileContainer.ContainerWriteAccessDeniedException : FileContainerException {
    public ContainerWriteAccessDeniedException(string message);
    public ContainerWriteAccessDeniedException(string message, Exception ex);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.FileContainer.FileContainer : object {
    [CompilerGeneratedAttribute]
private long <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <ScopeIdentifier>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <ArtifactUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SecurityToken>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Size>k__BackingField;
    [CompilerGeneratedAttribute]
private ContainerOptions <Options>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <SigningKeyId>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <CreatedBy>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <DateCreated>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ItemLocation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContentLocation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LocatorPath>k__BackingField;
    [DataMemberAttribute]
public long Id { get; public set; }
    [DataMemberAttribute]
public Guid ScopeIdentifier { get; public set; }
    [DataMemberAttribute]
public Uri ArtifactUri { get; public set; }
    [DataMemberAttribute]
public string SecurityToken { get; public set; }
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public string Description { get; public set; }
    [DataMemberAttribute]
public long Size { get; public set; }
    [DataMemberAttribute]
public ContainerOptions Options { get; public set; }
    [DataMemberAttribute]
public Guid SigningKeyId { get; public set; }
    [DataMemberAttribute]
public Guid CreatedBy { get; public set; }
    [DataMemberAttribute]
public DateTime DateCreated { get; public set; }
    [DataMemberAttribute]
public string ItemLocation { get; public set; }
    [DataMemberAttribute]
public string ContentLocation { get; public set; }
    [DataMemberAttribute]
public string LocatorPath { get; public set; }
    [CompilerGeneratedAttribute]
public long get_Id();
    [CompilerGeneratedAttribute]
[EditorBrowsableAttribute("1")]
public void set_Id(long value);
    [CompilerGeneratedAttribute]
public Guid get_ScopeIdentifier();
    [CompilerGeneratedAttribute]
[EditorBrowsableAttribute("1")]
public void set_ScopeIdentifier(Guid value);
    [CompilerGeneratedAttribute]
public Uri get_ArtifactUri();
    [CompilerGeneratedAttribute]
[EditorBrowsableAttribute("1")]
public void set_ArtifactUri(Uri value);
    [CompilerGeneratedAttribute]
public string get_SecurityToken();
    [CompilerGeneratedAttribute]
[EditorBrowsableAttribute("1")]
public void set_SecurityToken(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
[EditorBrowsableAttribute("1")]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
[EditorBrowsableAttribute("1")]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public long get_Size();
    [CompilerGeneratedAttribute]
[EditorBrowsableAttribute("1")]
public void set_Size(long value);
    [CompilerGeneratedAttribute]
public ContainerOptions get_Options();
    [CompilerGeneratedAttribute]
[EditorBrowsableAttribute("1")]
public void set_Options(ContainerOptions value);
    [CompilerGeneratedAttribute]
public Guid get_SigningKeyId();
    [CompilerGeneratedAttribute]
[EditorBrowsableAttribute("1")]
public void set_SigningKeyId(Guid value);
    [CompilerGeneratedAttribute]
public Guid get_CreatedBy();
    [CompilerGeneratedAttribute]
[EditorBrowsableAttribute("1")]
public void set_CreatedBy(Guid value);
    [CompilerGeneratedAttribute]
public DateTime get_DateCreated();
    [CompilerGeneratedAttribute]
[EditorBrowsableAttribute("1")]
public void set_DateCreated(DateTime value);
    [CompilerGeneratedAttribute]
public string get_ItemLocation();
    [CompilerGeneratedAttribute]
[EditorBrowsableAttribute("1")]
public void set_ItemLocation(string value);
    [CompilerGeneratedAttribute]
public string get_ContentLocation();
    [CompilerGeneratedAttribute]
[EditorBrowsableAttribute("1")]
public void set_ContentLocation(string value);
    [CompilerGeneratedAttribute]
public string get_LocatorPath();
    [CompilerGeneratedAttribute]
[EditorBrowsableAttribute("1")]
public void set_LocatorPath(string value);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
[ExceptionMappingAttribute("0.0", "3.0", "FileContainerException", "Microsoft.VisualStudio.Services.FileContainer.FileContainerException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public abstract class Microsoft.VisualStudio.Services.FileContainer.FileContainerException : VssServiceException {
    public FileContainerException(string message);
    public FileContainerException(string message, Exception ex);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.FileContainer.FileContainerItem : object {
    [CompilerGeneratedAttribute]
private long <ContainerId>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <ScopeIdentifier>k__BackingField;
    [CompilerGeneratedAttribute]
private ContainerItemType <ItemType>k__BackingField;
    [CompilerGeneratedAttribute]
private ContainerItemStatus <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private long <FileLength>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <FileHash>k__BackingField;
    [CompilerGeneratedAttribute]
private int <FileEncoding>k__BackingField;
    [CompilerGeneratedAttribute]
private int <FileType>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <DateCreated>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <DateLastModified>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <CreatedBy>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <LastModifiedBy>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ItemLocation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContentLocation>k__BackingField;
    [CompilerGeneratedAttribute]
private int <FileId>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <ArtifactId>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <ContentId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Ticket>k__BackingField;
    [CompilerGeneratedAttribute]
private ContainerItemBlobReference <BlobMetadata>k__BackingField;
    private string m_path;
    [DataMemberAttribute]
public long ContainerId { get; public set; }
    [DataMemberAttribute]
public Guid ScopeIdentifier { get; public set; }
    [DataMemberAttribute]
public string Path { get; public set; }
    [DataMemberAttribute]
public ContainerItemType ItemType { get; public set; }
    [DataMemberAttribute]
public ContainerItemStatus Status { get; public set; }
    [DataMemberAttribute]
public long FileLength { get; public set; }
    [DataMemberAttribute]
public Byte[] FileHash { get; public set; }
    [DataMemberAttribute]
public int FileEncoding { get; public set; }
    [DataMemberAttribute]
public int FileType { get; public set; }
    [DataMemberAttribute]
public DateTime DateCreated { get; public set; }
    [DataMemberAttribute]
public DateTime DateLastModified { get; public set; }
    [DataMemberAttribute]
public Guid CreatedBy { get; public set; }
    [DataMemberAttribute]
public Guid LastModifiedBy { get; public set; }
    [DataMemberAttribute]
public string ItemLocation { get; public set; }
    [DataMemberAttribute]
public string ContentLocation { get; public set; }
    [DataMemberAttribute]
[EditorBrowsableAttribute("1")]
public int FileId { get; public set; }
    [DataMemberAttribute]
[EditorBrowsableAttribute("1")]
public Nullable`1<long> ArtifactId { get; public set; }
    [EditorBrowsableAttribute("1")]
[DataMemberAttribute]
public Byte[] ContentId { get; public set; }
    [EditorBrowsableAttribute("1")]
[DataMemberAttribute]
public string Ticket { get; public set; }
    [EditorBrowsableAttribute("1")]
[DataMemberAttribute]
public ContainerItemBlobReference BlobMetadata { get; public set; }
    [CompilerGeneratedAttribute]
public long get_ContainerId();
    [CompilerGeneratedAttribute]
[EditorBrowsableAttribute("1")]
public void set_ContainerId(long value);
    [CompilerGeneratedAttribute]
public Guid get_ScopeIdentifier();
    [CompilerGeneratedAttribute]
[EditorBrowsableAttribute("1")]
public void set_ScopeIdentifier(Guid value);
    public string get_Path();
    [EditorBrowsableAttribute("1")]
public void set_Path(string value);
    [CompilerGeneratedAttribute]
public ContainerItemType get_ItemType();
    [CompilerGeneratedAttribute]
[EditorBrowsableAttribute("1")]
public void set_ItemType(ContainerItemType value);
    [CompilerGeneratedAttribute]
public ContainerItemStatus get_Status();
    [CompilerGeneratedAttribute]
[EditorBrowsableAttribute("1")]
public void set_Status(ContainerItemStatus value);
    [CompilerGeneratedAttribute]
public long get_FileLength();
    [CompilerGeneratedAttribute]
[EditorBrowsableAttribute("1")]
public void set_FileLength(long value);
    [CompilerGeneratedAttribute]
public Byte[] get_FileHash();
    [CompilerGeneratedAttribute]
[EditorBrowsableAttribute("1")]
public void set_FileHash(Byte[] value);
    [CompilerGeneratedAttribute]
public int get_FileEncoding();
    [CompilerGeneratedAttribute]
[EditorBrowsableAttribute("1")]
public void set_FileEncoding(int value);
    [CompilerGeneratedAttribute]
public int get_FileType();
    [CompilerGeneratedAttribute]
[EditorBrowsableAttribute("1")]
public void set_FileType(int value);
    [CompilerGeneratedAttribute]
public DateTime get_DateCreated();
    [CompilerGeneratedAttribute]
[EditorBrowsableAttribute("1")]
public void set_DateCreated(DateTime value);
    [CompilerGeneratedAttribute]
public DateTime get_DateLastModified();
    [CompilerGeneratedAttribute]
[EditorBrowsableAttribute("1")]
public void set_DateLastModified(DateTime value);
    [CompilerGeneratedAttribute]
public Guid get_CreatedBy();
    [CompilerGeneratedAttribute]
[EditorBrowsableAttribute("1")]
public void set_CreatedBy(Guid value);
    [CompilerGeneratedAttribute]
public Guid get_LastModifiedBy();
    [CompilerGeneratedAttribute]
[EditorBrowsableAttribute("1")]
public void set_LastModifiedBy(Guid value);
    [CompilerGeneratedAttribute]
public string get_ItemLocation();
    [CompilerGeneratedAttribute]
[EditorBrowsableAttribute("1")]
public void set_ItemLocation(string value);
    [CompilerGeneratedAttribute]
public string get_ContentLocation();
    [CompilerGeneratedAttribute]
[EditorBrowsableAttribute("1")]
public void set_ContentLocation(string value);
    [CompilerGeneratedAttribute]
public int get_FileId();
    [CompilerGeneratedAttribute]
public void set_FileId(int value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_ArtifactId();
    [CompilerGeneratedAttribute]
public void set_ArtifactId(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public Byte[] get_ContentId();
    [CompilerGeneratedAttribute]
public void set_ContentId(Byte[] value);
    [CompilerGeneratedAttribute]
public string get_Ticket();
    [CompilerGeneratedAttribute]
public void set_Ticket(string value);
    [CompilerGeneratedAttribute]
public ContainerItemBlobReference get_BlobMetadata();
    [CompilerGeneratedAttribute]
public void set_BlobMetadata(ContainerItemBlobReference value);
    public static string EnsurePathFormat(string path);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
public static class Microsoft.VisualStudio.Services.FileContainer.FileContainerResourceIds : object {
    public static string FileContainerServiceArea;
    public static string FileContainerIdString;
    public static string BrowseFileContainerIdString;
    public static Guid FileContainer;
    public static Guid BrowseFileContainer;
    public static string FileContainerResource;
    private static FileContainerResourceIds();
}
[ExceptionMappingAttribute("0.0", "3.0", "PendingUploadNotFoundException", "Microsoft.VisualStudio.Services.FileContainer.PendingUploadNotFoundException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.FileContainer.PendingUploadNotFoundException : FileContainerException {
    public PendingUploadNotFoundException(int uploadId);
    public PendingUploadNotFoundException(string message);
    public PendingUploadNotFoundException(string message, Exception ex);
}
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.FormInput.InputDataType : Enum {
    public int value__;
    [EnumMemberAttribute]
public static InputDataType None;
    [EnumMemberAttribute]
public static InputDataType String;
    [EnumMemberAttribute]
public static InputDataType Number;
    [EnumMemberAttribute]
public static InputDataType Boolean;
    [EnumMemberAttribute]
public static InputDataType Guid;
    [EnumMemberAttribute]
public static InputDataType Uri;
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.FormInput.InputDescriptor : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <SupportedScopes>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private InputMode <InputMode>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsConfidential>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseInDefaultDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GroupName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ValueHint>k__BackingField;
    [CompilerGeneratedAttribute]
private InputValidation <Validation>k__BackingField;
    [CompilerGeneratedAttribute]
private InputValues <Values>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <DependencyInputIds>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasDynamicValueInformation>k__BackingField;
    private Guid m_namespaceId;
    private int m_requiredPermissions;
    private string m_token;
    [DataMemberAttribute]
public string Id { get; public set; }
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public string Description { get; public set; }
    [DataMemberAttribute]
public string Type { get; public set; }
    public List`1<string> SupportedScopes { get; public set; }
    [DataMemberAttribute]
public IDictionary`2<string, object> Properties { get; public set; }
    [DataMemberAttribute]
public InputMode InputMode { get; public set; }
    [DataMemberAttribute]
public bool IsConfidential { get; public set; }
    [DataMemberAttribute]
public bool UseInDefaultDescription { get; public set; }
    [DataMemberAttribute]
public string GroupName { get; public set; }
    [DataMemberAttribute]
public string ValueHint { get; public set; }
    [DataMemberAttribute]
public InputValidation Validation { get; public set; }
    [DataMemberAttribute]
public InputValues Values { get; public set; }
    [DataMemberAttribute]
public IList`1<string> DependencyInputIds { get; public set; }
    [DataMemberAttribute]
public bool HasDynamicValueInformation { get; public set; }
    public Guid NamespaceId { get; }
    public int RequiredPermissions { get; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    [CompilerGeneratedAttribute]
public List`1<string> get_SupportedScopes();
    [CompilerGeneratedAttribute]
public void set_SupportedScopes(List`1<string> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_Properties();
    [CompilerGeneratedAttribute]
public void set_Properties(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public InputMode get_InputMode();
    [CompilerGeneratedAttribute]
public void set_InputMode(InputMode value);
    [CompilerGeneratedAttribute]
public bool get_IsConfidential();
    [CompilerGeneratedAttribute]
public void set_IsConfidential(bool value);
    [CompilerGeneratedAttribute]
public bool get_UseInDefaultDescription();
    [CompilerGeneratedAttribute]
public void set_UseInDefaultDescription(bool value);
    [CompilerGeneratedAttribute]
public string get_GroupName();
    [CompilerGeneratedAttribute]
public void set_GroupName(string value);
    [CompilerGeneratedAttribute]
public string get_ValueHint();
    [CompilerGeneratedAttribute]
public void set_ValueHint(string value);
    [CompilerGeneratedAttribute]
public InputValidation get_Validation();
    [CompilerGeneratedAttribute]
public void set_Validation(InputValidation value);
    [CompilerGeneratedAttribute]
public InputValues get_Values();
    [CompilerGeneratedAttribute]
public void set_Values(InputValues value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_DependencyInputIds();
    [CompilerGeneratedAttribute]
public void set_DependencyInputIds(IList`1<string> value);
    [CompilerGeneratedAttribute]
public bool get_HasDynamicValueInformation();
    [CompilerGeneratedAttribute]
public void set_HasDynamicValueInformation(bool value);
    public void SetSecuredObjectProperties(Guid namespaceId, int requiredPermissions, string token);
    public sealed virtual Guid get_NamespaceId();
    public sealed virtual int get_RequiredPermissions();
    public sealed virtual string GetToken();
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.FormInput.InputFilter : object {
    [CompilerGeneratedAttribute]
private List`1<InputFilterCondition> <Conditions>k__BackingField;
    [DataMemberAttribute]
public List`1<InputFilterCondition> Conditions { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<InputFilterCondition> get_Conditions();
    [CompilerGeneratedAttribute]
public void set_Conditions(List`1<InputFilterCondition> value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.FormInput.InputFilterCondition : object {
    [CompilerGeneratedAttribute]
private string <InputId>k__BackingField;
    [CompilerGeneratedAttribute]
private InputFilterOperator <Operator>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InputValue>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CaseSensitive>k__BackingField;
    [DataMemberAttribute]
public string InputId { get; public set; }
    [DataMemberAttribute]
public InputFilterOperator Operator { get; public set; }
    [DataMemberAttribute]
public string InputValue { get; public set; }
    [DataMemberAttribute]
public bool CaseSensitive { get; public set; }
    [CompilerGeneratedAttribute]
public string get_InputId();
    [CompilerGeneratedAttribute]
public void set_InputId(string value);
    [CompilerGeneratedAttribute]
public InputFilterOperator get_Operator();
    [CompilerGeneratedAttribute]
public void set_Operator(InputFilterOperator value);
    [CompilerGeneratedAttribute]
public string get_InputValue();
    [CompilerGeneratedAttribute]
public void set_InputValue(string value);
    [CompilerGeneratedAttribute]
public bool get_CaseSensitive();
    [CompilerGeneratedAttribute]
public void set_CaseSensitive(bool value);
}
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.FormInput.InputFilterOperator : Enum {
    public int value__;
    [EnumMemberAttribute]
public static InputFilterOperator Equals;
    [EnumMemberAttribute]
public static InputFilterOperator NotEquals;
}
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.FormInput.InputMode : Enum {
    public int value__;
    [EnumMemberAttribute]
public static InputMode None;
    [EnumMemberAttribute]
public static InputMode TextBox;
    [EnumMemberAttribute]
public static InputMode PasswordBox;
    [EnumMemberAttribute]
public static InputMode Combo;
    [EnumMemberAttribute]
public static InputMode RadioButtons;
    [EnumMemberAttribute]
public static InputMode CheckBox;
    [EnumMemberAttribute]
public static InputMode TextArea;
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.FormInput.InputValidation : object {
    [CompilerGeneratedAttribute]
private InputDataType <DataType>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsRequired>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Pattern>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PatternMismatchErrorMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<decimal> <MinValue>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<decimal> <MaxValue>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MinLength>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxLength>k__BackingField;
    private Guid m_namespaceId;
    private int m_requiredPermissions;
    private string m_token;
    [DataMemberAttribute]
public InputDataType DataType { get; public set; }
    [DataMemberAttribute]
public bool IsRequired { get; public set; }
    [DataMemberAttribute]
public string Pattern { get; public set; }
    [DataMemberAttribute]
public string PatternMismatchErrorMessage { get; public set; }
    [DataMemberAttribute]
public Nullable`1<decimal> MinValue { get; public set; }
    [DataMemberAttribute]
public Nullable`1<decimal> MaxValue { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> MinLength { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> MaxLength { get; public set; }
    public Guid NamespaceId { get; }
    public int RequiredPermissions { get; }
    [CompilerGeneratedAttribute]
public InputDataType get_DataType();
    [CompilerGeneratedAttribute]
public void set_DataType(InputDataType value);
    [CompilerGeneratedAttribute]
public bool get_IsRequired();
    [CompilerGeneratedAttribute]
public void set_IsRequired(bool value);
    [CompilerGeneratedAttribute]
public string get_Pattern();
    [CompilerGeneratedAttribute]
public void set_Pattern(string value);
    [CompilerGeneratedAttribute]
public string get_PatternMismatchErrorMessage();
    [CompilerGeneratedAttribute]
public void set_PatternMismatchErrorMessage(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<decimal> get_MinValue();
    [CompilerGeneratedAttribute]
public void set_MinValue(Nullable`1<decimal> value);
    [CompilerGeneratedAttribute]
public Nullable`1<decimal> get_MaxValue();
    [CompilerGeneratedAttribute]
public void set_MaxValue(Nullable`1<decimal> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MinLength();
    [CompilerGeneratedAttribute]
public void set_MinLength(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaxLength();
    [CompilerGeneratedAttribute]
public void set_MaxLength(Nullable`1<int> value);
    public void SetSecuredObjectProperties(Guid namespaceId, int requiredPermissions, string token);
    public sealed virtual Guid get_NamespaceId();
    public sealed virtual int get_RequiredPermissions();
    public sealed virtual string GetToken();
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.FormInput.InputValue : object {
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayValue>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <Data>k__BackingField;
    private Guid m_namespaceId;
    private int m_requiredPermissions;
    private string m_token;
    [DataMemberAttribute]
public string Value { get; public set; }
    [DataMemberAttribute]
public string DisplayValue { get; public set; }
    [DataMemberAttribute]
public IDictionary`2<string, object> Data { get; public set; }
    public Guid NamespaceId { get; }
    public int RequiredPermissions { get; }
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    [CompilerGeneratedAttribute]
public string get_DisplayValue();
    [CompilerGeneratedAttribute]
public void set_DisplayValue(string value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_Data();
    [CompilerGeneratedAttribute]
public void set_Data(IDictionary`2<string, object> value);
    public void SetSecuredObjectProperties(Guid namespaceId, int requiredPermissions, string token);
    public sealed virtual Guid get_NamespaceId();
    public sealed virtual int get_RequiredPermissions();
    public sealed virtual string GetToken();
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.FormInput.InputValues : object {
    [CompilerGeneratedAttribute]
private string <InputId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DefaultValue>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<InputValue> <PossibleValues>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsLimitedToPossibleValues>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDisabled>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsReadOnly>k__BackingField;
    [CompilerGeneratedAttribute]
private InputValuesError <Error>k__BackingField;
    private Guid m_namespaceId;
    private int m_requiredPermissions;
    private string m_token;
    [DataMemberAttribute]
public string InputId { get; public set; }
    [DataMemberAttribute]
public string DefaultValue { get; public set; }
    [DataMemberAttribute]
public IList`1<InputValue> PossibleValues { get; public set; }
    [DataMemberAttribute]
public bool IsLimitedToPossibleValues { get; public set; }
    [DataMemberAttribute]
public bool IsDisabled { get; public set; }
    [DataMemberAttribute]
public bool IsReadOnly { get; public set; }
    [DataMemberAttribute]
public InputValuesError Error { get; public set; }
    public Guid NamespaceId { get; }
    public int RequiredPermissions { get; }
    [CompilerGeneratedAttribute]
public string get_InputId();
    [CompilerGeneratedAttribute]
public void set_InputId(string value);
    [CompilerGeneratedAttribute]
public string get_DefaultValue();
    [CompilerGeneratedAttribute]
public void set_DefaultValue(string value);
    [CompilerGeneratedAttribute]
public IList`1<InputValue> get_PossibleValues();
    [CompilerGeneratedAttribute]
public void set_PossibleValues(IList`1<InputValue> value);
    [CompilerGeneratedAttribute]
public bool get_IsLimitedToPossibleValues();
    [CompilerGeneratedAttribute]
public void set_IsLimitedToPossibleValues(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsDisabled();
    [CompilerGeneratedAttribute]
public void set_IsDisabled(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsReadOnly();
    [CompilerGeneratedAttribute]
public void set_IsReadOnly(bool value);
    [CompilerGeneratedAttribute]
public InputValuesError get_Error();
    [CompilerGeneratedAttribute]
public void set_Error(InputValuesError value);
    public void SetSecuredObjectProperties(Guid namespaceId, int requiredPermissions, string token);
    public sealed virtual Guid get_NamespaceId();
    public sealed virtual int get_RequiredPermissions();
    public sealed virtual string GetToken();
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.FormInput.InputValuesError : object {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    private Guid m_namespaceId;
    private int m_requiredPermissions;
    private string m_token;
    [DataMemberAttribute]
public string Message { get; public set; }
    public Guid NamespaceId { get; }
    public int RequiredPermissions { get; }
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    public void SetSecuredObjectProperties(Guid namespaceId, int requiredPermissions, string token);
    public sealed virtual Guid get_NamespaceId();
    public sealed virtual int get_RequiredPermissions();
    public sealed virtual string GetToken();
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.FormInput.InputValuesQuery : object {
    [CompilerGeneratedAttribute]
private object <Resource>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<InputValues> <InputValues>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <CurrentValues>k__BackingField;
    [DataMemberAttribute]
public object Resource { get; public set; }
    [DataMemberAttribute]
public IList`1<InputValues> InputValues { get; public set; }
    [DataMemberAttribute]
public IDictionary`2<string, string> CurrentValues { get; public set; }
    [CompilerGeneratedAttribute]
public object get_Resource();
    [CompilerGeneratedAttribute]
public void set_Resource(object value);
    [CompilerGeneratedAttribute]
public IList`1<InputValues> get_InputValues();
    [CompilerGeneratedAttribute]
public void set_InputValues(IList`1<InputValues> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_CurrentValues();
    [CompilerGeneratedAttribute]
public void set_CurrentValues(IDictionary`2<string, string> value);
}
public class Microsoft.VisualStudio.Services.GitHubConnector.BadRequestException : GitHubConnectorException {
    public BadRequestException(string message);
    public BadRequestException(string message, Exception innerException);
    protected BadRequestException(SerializationInfo info, StreamingContext context);
}
[ResourceAreaAttribute("85738938-9FAE-4EB4-B4F0-871502E6B549")]
public class Microsoft.VisualStudio.Services.GitHubConnector.Client.GitHubConnectorHttpClient : VssHttpClientBase {
    public GitHubConnectorHttpClient(Uri baseUrl, VssCredentials credentials);
    public GitHubConnectorHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public GitHubConnectorHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public GitHubConnectorHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public GitHubConnectorHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    [EditorBrowsableAttribute("1")]
public Task`1<ConnectionInfo> CreateConnectionAsync(ConnectionCreationContext connectionCreationContext, object userState, CancellationToken cancellationToken);
    [EditorBrowsableAttribute("1")]
public Task`1<ConnectionInfo> GetConnectionInfoAsync(string id, object userState, CancellationToken cancellationToken);
    [EditorBrowsableAttribute("1")]
public Task`1<bool> RemoveConnectionAsync(string id, object userState, CancellationToken cancellationToken);
    [EditorBrowsableAttribute("1")]
public Task`1<InstallationToken> GetOrCreateInstallationTokenAsync(string id, object userState, CancellationToken cancellationToken);
    [EditorBrowsableAttribute("1")]
public Task`1<OAuthUrl> CreateUserOAuthValidationUrlAsync(OAuthUrlCreationContext oAuthUrlCreationContext, object userState, CancellationToken cancellationToken);
}
public class Microsoft.VisualStudio.Services.GitHubConnector.ConnectionCreationContext : object {
    [CompilerGeneratedAttribute]
private string <GitHubInstallationId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GitHubUserOAuthCode>k__BackingField;
    public string GitHubInstallationId { get; public set; }
    public string GitHubUserOAuthCode { get; public set; }
    [CompilerGeneratedAttribute]
public string get_GitHubInstallationId();
    [CompilerGeneratedAttribute]
public void set_GitHubInstallationId(string value);
    [CompilerGeneratedAttribute]
public string get_GitHubUserOAuthCode();
    [CompilerGeneratedAttribute]
public void set_GitHubUserOAuthCode(string value);
}
public class Microsoft.VisualStudio.Services.GitHubConnector.ConnectionExistsException : GitHubConnectorException {
    public ConnectionExistsException(string message);
    public ConnectionExistsException(string message, Exception innerException);
    protected ConnectionExistsException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.GitHubConnector.ConnectionInfo : object {
    [CompilerGeneratedAttribute]
private Guid <ConnectionId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GitHubInstallationId>k__BackingField;
    [CompilerGeneratedAttribute]
private GitHubAccount <GitHubAccount>k__BackingField;
    public Guid ConnectionId { get; public set; }
    public string GitHubInstallationId { get; public set; }
    public GitHubAccount GitHubAccount { get; public set; }
    public ConnectionInfo(Guid connectionId, string gitHubInstallationId, GitHubAccount gitHubAccount);
    [CompilerGeneratedAttribute]
public Guid get_ConnectionId();
    [CompilerGeneratedAttribute]
public void set_ConnectionId(Guid value);
    [CompilerGeneratedAttribute]
public string get_GitHubInstallationId();
    [CompilerGeneratedAttribute]
public void set_GitHubInstallationId(string value);
    [CompilerGeneratedAttribute]
public GitHubAccount get_GitHubAccount();
    [CompilerGeneratedAttribute]
public void set_GitHubAccount(GitHubAccount value);
}
public class Microsoft.VisualStudio.Services.GitHubConnector.GitHubAccount : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private GitHubAccountType <AccountType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Login>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AvatarUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    public string Id { get; public set; }
    public GitHubAccountType AccountType { get; public set; }
    public string Login { get; public set; }
    public string Url { get; public set; }
    public string AvatarUrl { get; public set; }
    public string Description { get; public set; }
    public GitHubAccount(string id, GitHubAccountType accountType, string login, string url, string avatarUrl, string description);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public GitHubAccountType get_AccountType();
    [CompilerGeneratedAttribute]
public void set_AccountType(GitHubAccountType value);
    [CompilerGeneratedAttribute]
public string get_Login();
    [CompilerGeneratedAttribute]
public void set_Login(string value);
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
    [CompilerGeneratedAttribute]
public string get_AvatarUrl();
    [CompilerGeneratedAttribute]
public void set_AvatarUrl(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
}
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.GitHubConnector.GitHubAccountType : Enum {
    public int value__;
    [EnumMemberAttribute]
public static GitHubAccountType Organization;
    [EnumMemberAttribute]
public static GitHubAccountType User;
}
public class Microsoft.VisualStudio.Services.GitHubConnector.GitHubConnectorException : VssServiceException {
    public GitHubConnectorException(string message);
    public GitHubConnectorException(string message, Exception innerException);
    protected GitHubConnectorException(SerializationInfo info, StreamingContext context);
}
public static class Microsoft.VisualStudio.Services.GitHubConnector.GitHubConnectorResourceIds : object {
    public static string AreaId;
    public static string AreaName;
    public static Guid ResourceAreaId;
    public static Guid ConnectionsResourceLocationId;
    public static string ConnectionsResourceName;
    public static Guid InstallationTokensResourceLocationId;
    public static string InstallationTokensResourceName;
    public static Guid WebhookEventsResourceLocationId;
    public static string WebhookEventsResourceName;
    public static Guid UserOAuthUrlsResourceLocationId;
    public static string UserOAuthUrlsResourceName;
    public static string DefaultResourceId;
    private static GitHubConnectorResourceIds();
}
public class Microsoft.VisualStudio.Services.GitHubConnector.InstallationToken : object {
    [CompilerGeneratedAttribute]
private string <AccessToken>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <ExpiryTime>k__BackingField;
    public string AccessToken { get; public set; }
    public DateTime ExpiryTime { get; public set; }
    [CompilerGeneratedAttribute]
public string get_AccessToken();
    [CompilerGeneratedAttribute]
public void set_AccessToken(string value);
    [CompilerGeneratedAttribute]
public DateTime get_ExpiryTime();
    [CompilerGeneratedAttribute]
public void set_ExpiryTime(DateTime value);
}
public class Microsoft.VisualStudio.Services.GitHubConnector.OAuthUrl : object {
    [CompilerGeneratedAttribute]
private Uri <OAuthUri>k__BackingField;
    public Uri OAuthUri { get; public set; }
    [CompilerGeneratedAttribute]
public Uri get_OAuthUri();
    [CompilerGeneratedAttribute]
public void set_OAuthUri(Uri value);
}
public class Microsoft.VisualStudio.Services.GitHubConnector.OAuthUrlCreationContext : object {
    [CompilerGeneratedAttribute]
private Uri <RedirectUrl>k__BackingField;
    public Uri RedirectUrl { get; public set; }
    [CompilerGeneratedAttribute]
public Uri get_RedirectUrl();
    [CompilerGeneratedAttribute]
public void set_RedirectUrl(Uri value);
}
public class Microsoft.VisualStudio.Services.Graph.CannotEditChildrenOfNonGroupException : GraphException {
    public CannotEditChildrenOfNonGroupException(string message);
    public CannotEditChildrenOfNonGroupException(string message, Exception innerException);
    protected CannotEditChildrenOfNonGroupException(SerializationInfo info, StreamingContext context);
    public CannotEditChildrenOfNonGroupException(SubjectDescriptor subjectDescriptor);
}
public class Microsoft.VisualStudio.Services.Graph.CannotUpdateWellKnownGraphGroupException : GraphException {
    public CannotUpdateWellKnownGraphGroupException(string message);
    public CannotUpdateWellKnownGraphGroupException(string message, Exception innerException);
    protected CannotUpdateWellKnownGraphGroupException(SerializationInfo info, StreamingContext context);
}
[DataContractAttribute]
public abstract class Microsoft.VisualStudio.Services.Graph.Client.AadGraphMember : GraphMember {
    [CompilerGeneratedAttribute]
private string <MetaType>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <MetadataUpdateDate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DirectoryAlias>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDeletedInOrigin>k__BackingField;
    [DataMemberAttribute]
public string MetaType { get; private set; }
    [DataMemberAttribute]
[ClientInternalUseOnlyAttribute("True")]
internal DateTime MetadataUpdateDate { get; private set; }
    [DataMemberAttribute]
public string DirectoryAlias { get; private set; }
    [DataMemberAttribute]
public bool IsDeletedInOrigin { get; private set; }
    [EditorBrowsableAttribute("1")]
internal AadGraphMember(string origin, string originId, SubjectDescriptor descriptor, IdentityDescriptor legacyDescriptor, string displayName, ReferenceLinks links, string url, string domain, string principalName, string mailAddress, string metaType, DateTime metadataUpdateDate, bool isDeletedInOrigin, string directoryAlias);
    [CompilerGeneratedAttribute]
public string get_MetaType();
    [CompilerGeneratedAttribute]
private void set_MetaType(string value);
    [CompilerGeneratedAttribute]
internal DateTime get_MetadataUpdateDate();
    [CompilerGeneratedAttribute]
private void set_MetadataUpdateDate(DateTime value);
    [CompilerGeneratedAttribute]
public string get_DirectoryAlias();
    [CompilerGeneratedAttribute]
private void set_DirectoryAlias(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool ShouldSerializeMetadataUpdateDate();
    [CompilerGeneratedAttribute]
public bool get_IsDeletedInOrigin();
    [CompilerGeneratedAttribute]
private void set_IsDeletedInOrigin(bool value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Graph.Client.GraphCachePolicies : object {
    [CompilerGeneratedAttribute]
private int <CacheSize>k__BackingField;
    [DataMemberAttribute]
public int CacheSize { get; public set; }
    [CompilerGeneratedAttribute]
public int get_CacheSize();
    [CompilerGeneratedAttribute]
public void set_CacheSize(int value);
}
[ResourceAreaAttribute("BB1E7EC9-E901-4B68-999A-DE7012B920F8")]
[ClientCircuitBreakerSettingsAttribute("20", "80")]
public class Microsoft.VisualStudio.Services.Graph.Client.GraphCompatHttpClientBase : VssHttpClientBase {
    public GraphCompatHttpClientBase(Uri baseUrl, VssCredentials credentials);
    public GraphCompatHttpClientBase(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public GraphCompatHttpClientBase(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public GraphCompatHttpClientBase(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public GraphCompatHttpClientBase(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Graph.Client.GraphCompatHttpClientBase/<ListUsersAsync>d__5")]
public Task`1<PagedGraphUsers> ListUsersAsync(IEnumerable`1<string> subjectTypes, string continuationToken, object userState, CancellationToken cancellationToken);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Graph.Client.GraphDescriptorResult : object {
    [CompilerGeneratedAttribute]
private SubjectDescriptor <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceLinks <Links>k__BackingField;
    [DataMemberAttribute]
public SubjectDescriptor Value { get; }
    [DataMemberAttribute]
public ReferenceLinks Links { get; private set; }
    [JsonConstructorAttribute]
public GraphDescriptorResult(SubjectDescriptor value, ReferenceLinks links);
    [CompilerGeneratedAttribute]
public SubjectDescriptor get_Value();
    [CompilerGeneratedAttribute]
public ReferenceLinks get_Links();
    [CompilerGeneratedAttribute]
private void set_Links(ReferenceLinks value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Graph.Client.GraphGroup : GraphMember {
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpecialType>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <ScopeId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ScopeType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ScopeName>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <LocalScopeId>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <SecuringHostId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsRestrictedVisible>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsCrossProject>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsGlobalScope>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDeleted>k__BackingField;
    public string SubjectKind { get; }
    [DataMemberAttribute]
public string Description { get; private set; }
    [DataMemberAttribute]
[EditorBrowsableAttribute("1")]
[ClientInternalUseOnlyAttribute("True")]
internal string SpecialType { get; private set; }
    [DataMemberAttribute]
[EditorBrowsableAttribute("1")]
[ClientInternalUseOnlyAttribute("True")]
internal Guid ScopeId { get; private set; }
    [DataMemberAttribute]
[EditorBrowsableAttribute("1")]
[ClientInternalUseOnlyAttribute("True")]
internal string ScopeType { get; private set; }
    [DataMemberAttribute]
[EditorBrowsableAttribute("1")]
[ClientInternalUseOnlyAttribute("True")]
internal string ScopeName { get; private set; }
    [DataMemberAttribute]
[EditorBrowsableAttribute("1")]
[ClientInternalUseOnlyAttribute("True")]
internal Guid LocalScopeId { get; private set; }
    [DataMemberAttribute]
[EditorBrowsableAttribute("1")]
[ClientInternalUseOnlyAttribute("True")]
internal Guid SecuringHostId { get; private set; }
    [DataMemberAttribute]
[EditorBrowsableAttribute("1")]
[ClientInternalUseOnlyAttribute("True")]
internal bool IsRestrictedVisible { get; private set; }
    [DataMemberAttribute]
[EditorBrowsableAttribute("1")]
[ClientInternalUseOnlyAttribute("True")]
internal bool IsCrossProject { get; private set; }
    [DataMemberAttribute]
[EditorBrowsableAttribute("1")]
[ClientInternalUseOnlyAttribute("True")]
internal bool IsGlobalScope { get; private set; }
    [DataMemberAttribute]
[EditorBrowsableAttribute("1")]
[ClientInternalUseOnlyAttribute("True")]
internal bool IsDeleted { get; private set; }
    [EditorBrowsableAttribute("1")]
internal GraphGroup(string origin, string originId, SubjectDescriptor descriptor, IdentityDescriptor legacyDescriptor, string displayName, ReferenceLinks links, string url, string domain, string principalName, string mailAddress, string description, string specialType, Guid scopeId, string scopeType, string scopeName, Guid localScopeId, Guid securingHostId, bool isRestrictedVisible, bool isCrossProject, bool isGlobalScope, bool isDeleted);
    [EditorBrowsableAttribute("1")]
internal GraphGroup(GraphGroup group, string origin, string originId, Nullable`1<SubjectDescriptor> descriptor, IdentityDescriptor legacyDescriptor, string displayName, ReferenceLinks links, string url, string domain, string principalName, string mailAddress, string description, string specialType, Nullable`1<Guid> scopeId, string scopeType, string scopeName, Nullable`1<Guid> localScopeId, Nullable`1<Guid> securingHostId, Nullable`1<bool> isRestrictedVisible, Nullable`1<bool> isCrossProject, Nullable`1<bool> isGlobalScope, Nullable`1<bool> isDeleted);
    public virtual string get_SubjectKind();
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
private void set_Description(string value);
    [CompilerGeneratedAttribute]
internal string get_SpecialType();
    [CompilerGeneratedAttribute]
private void set_SpecialType(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool ShouldSerializeSpecialType();
    [CompilerGeneratedAttribute]
internal Guid get_ScopeId();
    [CompilerGeneratedAttribute]
private void set_ScopeId(Guid value);
    [EditorBrowsableAttribute("1")]
public virtual bool ShouldSerializeScopeId();
    [CompilerGeneratedAttribute]
internal string get_ScopeType();
    [CompilerGeneratedAttribute]
private void set_ScopeType(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool ShouldSerializeScopeType();
    [CompilerGeneratedAttribute]
internal string get_ScopeName();
    [CompilerGeneratedAttribute]
private void set_ScopeName(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool ShouldSerializeScopeName();
    [CompilerGeneratedAttribute]
internal Guid get_LocalScopeId();
    [CompilerGeneratedAttribute]
private void set_LocalScopeId(Guid value);
    [EditorBrowsableAttribute("1")]
public virtual bool ShouldSerializeLocalScopeId();
    [CompilerGeneratedAttribute]
internal Guid get_SecuringHostId();
    [CompilerGeneratedAttribute]
private void set_SecuringHostId(Guid value);
    [EditorBrowsableAttribute("1")]
public virtual bool ShouldSerializeSecuringHostId();
    [CompilerGeneratedAttribute]
internal bool get_IsRestrictedVisible();
    [CompilerGeneratedAttribute]
private void set_IsRestrictedVisible(bool value);
    [EditorBrowsableAttribute("1")]
public virtual bool ShouldSerializeIsRestrictedVisible();
    [CompilerGeneratedAttribute]
internal bool get_IsCrossProject();
    [CompilerGeneratedAttribute]
private void set_IsCrossProject(bool value);
    [EditorBrowsableAttribute("1")]
public virtual bool ShouldSerializeIsIsCrossProject();
    [CompilerGeneratedAttribute]
internal bool get_IsGlobalScope();
    [CompilerGeneratedAttribute]
private void set_IsGlobalScope(bool value);
    [EditorBrowsableAttribute("1")]
public virtual bool ShouldSerializeIsGlobalScope();
    [CompilerGeneratedAttribute]
internal bool get_IsDeleted();
    [CompilerGeneratedAttribute]
private void set_IsDeleted(bool value);
}
[DataContractAttribute]
[JsonConverterAttribute("Microsoft.VisualStudio.Services.Graph.Client.GraphGroupCreationContextJsonConverter")]
public abstract class Microsoft.VisualStudio.Services.Graph.Client.GraphGroupCreationContext : object {
    [CompilerGeneratedAttribute]
private Guid <StorageKey>k__BackingField;
    [DataMemberAttribute]
public Guid StorageKey { get; public set; }
    [CompilerGeneratedAttribute]
public Guid get_StorageKey();
    [CompilerGeneratedAttribute]
public void set_StorageKey(Guid value);
}
public class Microsoft.VisualStudio.Services.Graph.Client.GraphGroupCreationContextJsonConverter : VssJsonCreationConverter`1<GraphGroupCreationContext> {
    protected virtual GraphGroupCreationContext Create(Type objectType, JObject jsonObject);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Graph.Client.GraphGroupMailAddressCreationContext : GraphGroupCreationContext {
    [CompilerGeneratedAttribute]
private string <MailAddress>k__BackingField;
    [DataMemberAttribute]
public string MailAddress { get; public set; }
    [CompilerGeneratedAttribute]
public string get_MailAddress();
    [CompilerGeneratedAttribute]
public void set_MailAddress(string value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Graph.Client.GraphGroupOriginIdCreationContext : GraphGroupCreationContext {
    [CompilerGeneratedAttribute]
private string <OriginId>k__BackingField;
    [DataMemberAttribute]
public string OriginId { get; public set; }
    [CompilerGeneratedAttribute]
public string get_OriginId();
    [CompilerGeneratedAttribute]
public void set_OriginId(string value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Graph.Client.GraphGroupVstsCreationContext : GraphGroupCreationContext {
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private SubjectDescriptor <Descriptor>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CrossProject>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <RestrictedVisibility>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpecialGroupType>k__BackingField;
    [DataMemberAttribute]
public string DisplayName { get; public set; }
    [DataMemberAttribute]
public string Description { get; public set; }
    public SubjectDescriptor Descriptor { get; public set; }
    [DataMemberAttribute]
private string DescriptorString { get; private set; }
    [DataMemberAttribute]
public bool CrossProject { get; public set; }
    [DataMemberAttribute]
public bool RestrictedVisibility { get; public set; }
    [DataMemberAttribute]
public string SpecialGroupType { get; public set; }
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public SubjectDescriptor get_Descriptor();
    [CompilerGeneratedAttribute]
public void set_Descriptor(SubjectDescriptor value);
    private string get_DescriptorString();
    private void set_DescriptorString(string value);
    [CompilerGeneratedAttribute]
public bool get_CrossProject();
    [CompilerGeneratedAttribute]
public void set_CrossProject(bool value);
    [CompilerGeneratedAttribute]
public bool get_RestrictedVisibility();
    [CompilerGeneratedAttribute]
public void set_RestrictedVisibility(bool value);
    [CompilerGeneratedAttribute]
public string get_SpecialGroupType();
    [CompilerGeneratedAttribute]
public void set_SpecialGroupType(string value);
}
[ExcludeFromCodeCoverageAttribute]
[ResourceAreaAttribute("BB1E7EC9-E901-4B68-999A-DE7012B920F8")]
[ClientCircuitBreakerSettingsAttribute("20", "80")]
public class Microsoft.VisualStudio.Services.Graph.Client.GraphHttpClient : GraphCompatHttpClientBase {
    public GraphHttpClient(Uri baseUrl, VssCredentials credentials);
    public GraphHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public GraphHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public GraphHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public GraphHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Graph.Client.GraphHttpClient/<DeleteAvatarAsync>d__5")]
public Task DeleteAvatarAsync(string subjectDescriptor, object userState, CancellationToken cancellationToken);
    public Task`1<Avatar> GetAvatarAsync(string subjectDescriptor, Nullable`1<AvatarSize> size, string format, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Graph.Client.GraphHttpClient/<SetAvatarAsync>d__7")]
public Task SetAvatarAsync(Avatar avatar, string subjectDescriptor, object userState, CancellationToken cancellationToken);
    [EditorBrowsableAttribute("1")]
public Task`1<GraphCachePolicies> GetCachePoliciesAsync(object userState, CancellationToken cancellationToken);
    public Task`1<GraphDescriptorResult> GetDescriptorAsync(Guid storageKey, object userState, CancellationToken cancellationToken);
    [EditorBrowsableAttribute("1")]
public Task`1<GraphFederatedProviderData> GetFederatedProviderDataAsync(SubjectDescriptor subjectDescriptor, string providerName, Nullable`1<long> versionHint, object userState, CancellationToken cancellationToken);
    public Task`1<GraphGroup> CreateGroupAsync(GraphGroupCreationContext creationContext, string scopeDescriptor, IEnumerable`1<SubjectDescriptor> groupDescriptors, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Graph.Client.GraphHttpClient/<DeleteGroupAsync>d__12")]
public Task DeleteGroupAsync(string groupDescriptor, object userState, CancellationToken cancellationToken);
    public Task`1<GraphGroup> GetGroupAsync(string groupDescriptor, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Graph.Client.GraphHttpClient/<ListGroupsAsync>d__14")]
public Task`1<PagedGraphGroups> ListGroupsAsync(string scopeDescriptor, IEnumerable`1<string> subjectTypes, string continuationToken, object userState, CancellationToken cancellationToken);
    public Task`1<GraphGroup> UpdateGroupAsync(string groupDescriptor, JsonPatchDocument patchDocument, object userState, CancellationToken cancellationToken);
    [EditorBrowsableAttribute("1")]
public Task`1<Guid> TranslateAsync(string masterId, string localId, object userState, CancellationToken cancellationToken);
    [EditorBrowsableAttribute("1")]
public Task`1<IReadOnlyDictionary`2<SubjectDescriptor, GraphMember>> LookupMembersAsync(GraphSubjectLookup memberLookup, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Graph.Client.GraphHttpClient/<ListMembersAsync>d__18")]
[EditorBrowsableAttribute("1")]
public Task`1<PagedGraphMembers> ListMembersAsync(string continuationToken, IEnumerable`1<string> subjectTypes, IEnumerable`1<string> subjectKinds, IEnumerable`1<string> metaTypes, string scopeDescriptor, object userState, CancellationToken cancellationToken);
    [EditorBrowsableAttribute("1")]
public Task`1<GraphMember> GetMemberByDescriptorAsync(string memberDescriptor, object userState, CancellationToken cancellationToken);
    public Task`1<GraphMembership> AddMembershipAsync(string subjectDescriptor, string containerDescriptor, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Graph.Client.GraphHttpClient/<CheckMembershipExistenceAsync>d__21")]
public Task`1<bool> CheckMembershipExistenceAsync(string subjectDescriptor, string containerDescriptor, object userState, CancellationToken cancellationToken);
    public Task`1<GraphMembership> GetMembershipAsync(string subjectDescriptor, string containerDescriptor, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Graph.Client.GraphHttpClient/<RemoveMembershipAsync>d__23")]
public Task RemoveMembershipAsync(string subjectDescriptor, string containerDescriptor, object userState, CancellationToken cancellationToken);
    public Task`1<List`1<GraphMembership>> ListMembershipsAsync(string subjectDescriptor, Nullable`1<GraphTraversalDirection> direction, Nullable`1<int> depth, object userState, CancellationToken cancellationToken);
    public Task`1<GraphMembershipState> GetMembershipStateAsync(string subjectDescriptor, object userState, CancellationToken cancellationToken);
    [EditorBrowsableAttribute("1")]
public Task`1<IReadOnlyDictionary`2<SubjectDescriptor, GraphMembershipTraversal>> LookupMembershipTraversalsAsync(GraphSubjectLookup membershipTraversalLookup, Nullable`1<GraphTraversalDirection> direction, Nullable`1<int> depth, object userState, CancellationToken cancellationToken);
    [EditorBrowsableAttribute("1")]
public Task`1<GraphMembershipTraversal> TraverseMembershipsAsync(string subjectDescriptor, Nullable`1<GraphTraversalDirection> direction, Nullable`1<int> depth, object userState, CancellationToken cancellationToken);
    public Task`1<GraphProviderInfo> GetProviderInfoAsync(string userDescriptor, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Graph.Client.GraphHttpClient/<RequestAccessAsync>d__29")]
public Task RequestAccessAsync(JToken jsondocument, object userState, CancellationToken cancellationToken);
    [EditorBrowsableAttribute("1")]
public Task`1<ResolveDisconnectedUsersResponse> ResolveAsync(IdentityMappings mappings, object userState, CancellationToken cancellationToken);
    [EditorBrowsableAttribute("1")]
public Task`1<GraphScope> CreateScopeAsync(GraphScopeCreationContext creationContext, string scopeDescriptor, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Graph.Client.GraphHttpClient/<DeleteScopeAsync>d__32")]
[EditorBrowsableAttribute("1")]
public Task DeleteScopeAsync(string scopeDescriptor, object userState, CancellationToken cancellationToken);
    [EditorBrowsableAttribute("1")]
public Task`1<GraphScope> GetScopeAsync(string scopeDescriptor, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Graph.Client.GraphHttpClient/<UpdateScopeAsync>d__34")]
[EditorBrowsableAttribute("1")]
public Task UpdateScopeAsync(string scopeDescriptor, JsonPatchDocument patchDocument, object userState, CancellationToken cancellationToken);
    public Task`1<GraphServicePrincipal> CreateServicePrincipalAsync(GraphServicePrincipalCreationContext creationContext, IEnumerable`1<SubjectDescriptor> groupDescriptors, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Graph.Client.GraphHttpClient/<DeleteServicePrincipalAsync>d__36")]
public Task DeleteServicePrincipalAsync(string servicePrincipalDescriptor, object userState, CancellationToken cancellationToken);
    public Task`1<GraphServicePrincipal> GetServicePrincipalAsync(string servicePrincipalDescriptor, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Graph.Client.GraphHttpClient/<ListServicePrincipalsAsync>d__38")]
public Task`1<PagedGraphServicePrincipals> ListServicePrincipalsAsync(string continuationToken, string scopeDescriptor, object userState, CancellationToken cancellationToken);
    [EditorBrowsableAttribute("1")]
public Task`1<GraphServicePrincipal> UpdateServicePrincipalAsync(GraphServicePrincipalUpdateContext updateContext, string servicePrincipalDescriptor, object userState, CancellationToken cancellationToken);
    public Task`1<GraphStorageKeyResult> GetStorageKeyAsync(string subjectDescriptor, object userState, CancellationToken cancellationToken);
    public Task`1<IReadOnlyDictionary`2<SubjectDescriptor, GraphSubject>> LookupSubjectsAsync(GraphSubjectLookup subjectLookup, object userState, CancellationToken cancellationToken);
    public Task`1<List`1<GraphSubject>> QuerySubjectsAsync(GraphSubjectQuery subjectQuery, object userState, CancellationToken cancellationToken);
    [EditorBrowsableAttribute("1")]
public Task`1<GraphSubject> GetSubjectAsync(string subjectDescriptor, object userState, CancellationToken cancellationToken);
    public Task`1<GraphUser> CreateUserAsync(GraphUserCreationContext creationContext, IEnumerable`1<SubjectDescriptor> groupDescriptors, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Graph.Client.GraphHttpClient/<DeleteUserAsync>d__45")]
public Task DeleteUserAsync(string userDescriptor, object userState, CancellationToken cancellationToken);
    public Task`1<GraphUser> GetUserAsync(string userDescriptor, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Graph.Client.GraphHttpClient/<ListUsersAsync>d__47")]
public Task`1<PagedGraphUsers> ListUsersAsync(IEnumerable`1<string> subjectTypes, string continuationToken, string scopeDescriptor, object userState, CancellationToken cancellationToken);
    public Task`1<GraphUser> UpdateUserAsync(GraphUserUpdateContext updateContext, string userDescriptor, object userState, CancellationToken cancellationToken);
}
[DataContractAttribute]
public abstract class Microsoft.VisualStudio.Services.Graph.Client.GraphMember : GraphSubject {
    [CompilerGeneratedAttribute]
private string <Domain>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PrincipalName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MailAddress>k__BackingField;
    [DataMemberAttribute]
public string Domain { get; private set; }
    [DataMemberAttribute]
public string PrincipalName { get; private set; }
    [DataMemberAttribute]
public string MailAddress { get; private set; }
    [EditorBrowsableAttribute("1")]
protected GraphMember(string origin, string originId, SubjectDescriptor descriptor, IdentityDescriptor legacyDescriptor, string displayName, ReferenceLinks links, string url, string domain, string principalName, string mailAddress);
    [CompilerGeneratedAttribute]
public string get_Domain();
    [CompilerGeneratedAttribute]
private void set_Domain(string value);
    [CompilerGeneratedAttribute]
public string get_PrincipalName();
    [CompilerGeneratedAttribute]
private void set_PrincipalName(string value);
    [CompilerGeneratedAttribute]
public string get_MailAddress();
    [CompilerGeneratedAttribute]
private void set_MailAddress(string value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Graph.Client.GraphMembership : object {
    [CompilerGeneratedAttribute]
private SubjectDescriptor <ContainerDescriptor>k__BackingField;
    [CompilerGeneratedAttribute]
private SubjectDescriptor <MemberDescriptor>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceLinks <Links>k__BackingField;
    public SubjectDescriptor ContainerDescriptor { get; private set; }
    public SubjectDescriptor MemberDescriptor { get; private set; }
    [DataMemberAttribute]
private string ContainerString { get; private set; }
    [DataMemberAttribute]
private string MemberString { get; private set; }
    [DataMemberAttribute]
public ReferenceLinks Links { get; private set; }
    public GraphMembership(SubjectDescriptor memberDescriptor, SubjectDescriptor containerDescriptor, ReferenceLinks links);
    [CompilerGeneratedAttribute]
public SubjectDescriptor get_ContainerDescriptor();
    [CompilerGeneratedAttribute]
private void set_ContainerDescriptor(SubjectDescriptor value);
    [CompilerGeneratedAttribute]
public SubjectDescriptor get_MemberDescriptor();
    [CompilerGeneratedAttribute]
private void set_MemberDescriptor(SubjectDescriptor value);
    private string get_ContainerString();
    private void set_ContainerString(string value);
    private string get_MemberString();
    private void set_MemberString(string value);
    [CompilerGeneratedAttribute]
public ReferenceLinks get_Links();
    [CompilerGeneratedAttribute]
private void set_Links(ReferenceLinks value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Graph.Client.GraphMembershipState : object {
    [CompilerGeneratedAttribute]
private bool <Active>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceLinks <Links>k__BackingField;
    [DataMemberAttribute]
public bool Active { get; }
    [DataMemberAttribute]
public ReferenceLinks Links { get; private set; }
    public GraphMembershipState(bool active, ReferenceLinks links);
    [CompilerGeneratedAttribute]
public bool get_Active();
    [CompilerGeneratedAttribute]
public ReferenceLinks get_Links();
    [CompilerGeneratedAttribute]
private void set_Links(ReferenceLinks value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Graph.Client.GraphMembershipTraversal : object {
    [CompilerGeneratedAttribute]
private SubjectDescriptor <SubjectDescriptor>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsComplete>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IncompletenessReason>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<SubjectDescriptor> <TraversedSubjects>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<Guid> <TraversedSubjectIds>k__BackingField;
    [DataMemberAttribute]
public SubjectDescriptor SubjectDescriptor { get; public set; }
    [DataMemberAttribute]
public bool IsComplete { get; public set; }
    [DataMemberAttribute]
public string IncompletenessReason { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<SubjectDescriptor> TraversedSubjects { get; public set; }
    [DataMemberAttribute]
internal IEnumerable`1<Guid> TraversedSubjectIds { get; internal set; }
    [CompilerGeneratedAttribute]
public SubjectDescriptor get_SubjectDescriptor();
    [CompilerGeneratedAttribute]
public void set_SubjectDescriptor(SubjectDescriptor value);
    [CompilerGeneratedAttribute]
public bool get_IsComplete();
    [CompilerGeneratedAttribute]
public void set_IsComplete(bool value);
    [CompilerGeneratedAttribute]
public string get_IncompletenessReason();
    [CompilerGeneratedAttribute]
public void set_IncompletenessReason(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<SubjectDescriptor> get_TraversedSubjects();
    [CompilerGeneratedAttribute]
public void set_TraversedSubjects(IEnumerable`1<SubjectDescriptor> value);
    [CompilerGeneratedAttribute]
internal IEnumerable`1<Guid> get_TraversedSubjectIds();
    [CompilerGeneratedAttribute]
internal void set_TraversedSubjectIds(IEnumerable`1<Guid> value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Graph.Client.GraphProviderInfo : object {
    [CompilerGeneratedAttribute]
private string <Domain>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Origin>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OriginId>k__BackingField;
    [CompilerGeneratedAttribute]
private SubjectDescriptor <Descriptor>k__BackingField;
    [DataMemberAttribute]
public string Domain { get; private set; }
    [DataMemberAttribute]
public string Origin { get; private set; }
    [DataMemberAttribute]
public string OriginId { get; private set; }
    public SubjectDescriptor Descriptor { get; private set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
private string DescriptorString { get; private set; }
    internal GraphProviderInfo(string origin, string originId, SubjectDescriptor descriptor, string domain);
    [CompilerGeneratedAttribute]
public string get_Domain();
    [CompilerGeneratedAttribute]
private void set_Domain(string value);
    [CompilerGeneratedAttribute]
public string get_Origin();
    [CompilerGeneratedAttribute]
private void set_Origin(string value);
    [CompilerGeneratedAttribute]
public string get_OriginId();
    [CompilerGeneratedAttribute]
private void set_OriginId(string value);
    [CompilerGeneratedAttribute]
public SubjectDescriptor get_Descriptor();
    [CompilerGeneratedAttribute]
private void set_Descriptor(SubjectDescriptor value);
    private string get_DescriptorString();
    private void set_DescriptorString(string value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Graph.Client.GraphScope : GraphSubject {
    [CompilerGeneratedAttribute]
private SubjectDescriptor <AdministratorDescriptor>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsGlobal>k__BackingField;
    [CompilerGeneratedAttribute]
private SubjectDescriptor <ParentDescriptor>k__BackingField;
    [CompilerGeneratedAttribute]
private SubjectDescriptor <SecuringHostDescriptor>k__BackingField;
    [CompilerGeneratedAttribute]
private GroupScopeType <ScopeType>k__BackingField;
    public string SubjectKind { get; }
    public SubjectDescriptor AdministratorDescriptor { get; private set; }
    [DataMemberAttribute]
private string AdministratorString { get; private set; }
    [DataMemberAttribute]
public bool IsGlobal { get; private set; }
    public SubjectDescriptor ParentDescriptor { get; private set; }
    [DataMemberAttribute]
private string ParentDescriptorString { get; private set; }
    public SubjectDescriptor SecuringHostDescriptor { get; private set; }
    [DataMemberAttribute]
private string SecuringHostDescriptorString { get; private set; }
    [DataMemberAttribute]
public GroupScopeType ScopeType { get; private set; }
    [EditorBrowsableAttribute("1")]
internal GraphScope(string origin, string originId, SubjectDescriptor descriptor, IdentityDescriptor legacyDescriptor, string displayName, ReferenceLinks links, string url, SubjectDescriptor administratorDescriptor, bool isGlobal, SubjectDescriptor parentDescriptor, SubjectDescriptor securingHostDescriptor, GroupScopeType scopeType);
    internal GraphScope(GraphScope scope, string origin, string originId, Nullable`1<SubjectDescriptor> descriptor, IdentityDescriptor legacyDescriptor, string displayName, ReferenceLinks links, string url, Nullable`1<SubjectDescriptor> administrator, Nullable`1<bool> isGlobal, Nullable`1<SubjectDescriptor> parentDescriptor, Nullable`1<SubjectDescriptor> securingHostDescriptor, Nullable`1<GroupScopeType> scopeType);
    public virtual string get_SubjectKind();
    [CompilerGeneratedAttribute]
public SubjectDescriptor get_AdministratorDescriptor();
    [CompilerGeneratedAttribute]
private void set_AdministratorDescriptor(SubjectDescriptor value);
    private string get_AdministratorString();
    private void set_AdministratorString(string value);
    [CompilerGeneratedAttribute]
public bool get_IsGlobal();
    [CompilerGeneratedAttribute]
private void set_IsGlobal(bool value);
    [CompilerGeneratedAttribute]
public SubjectDescriptor get_ParentDescriptor();
    [CompilerGeneratedAttribute]
private void set_ParentDescriptor(SubjectDescriptor value);
    private string get_ParentDescriptorString();
    private void set_ParentDescriptorString(string value);
    [CompilerGeneratedAttribute]
public SubjectDescriptor get_SecuringHostDescriptor();
    [CompilerGeneratedAttribute]
private void set_SecuringHostDescriptor(SubjectDescriptor value);
    private string get_SecuringHostDescriptorString();
    private void set_SecuringHostDescriptorString(string value);
    [CompilerGeneratedAttribute]
public GroupScopeType get_ScopeType();
    [CompilerGeneratedAttribute]
private void set_ScopeType(GroupScopeType value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Graph.Client.GraphScopeCreationContext : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private GroupScopeType <ScopeType>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <StorageKey>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <CreatorId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AdminGroupName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AdminGroupDescription>k__BackingField;
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public GroupScopeType ScopeType { get; public set; }
    [DataMemberAttribute]
public Guid StorageKey { get; public set; }
    [DataMemberAttribute]
public Guid CreatorId { get; public set; }
    [DataMemberAttribute]
public string AdminGroupName { get; public set; }
    [DataMemberAttribute]
public string AdminGroupDescription { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public GroupScopeType get_ScopeType();
    [CompilerGeneratedAttribute]
public void set_ScopeType(GroupScopeType value);
    [CompilerGeneratedAttribute]
public Guid get_StorageKey();
    [CompilerGeneratedAttribute]
public void set_StorageKey(Guid value);
    [CompilerGeneratedAttribute]
public Guid get_CreatorId();
    [CompilerGeneratedAttribute]
public void set_CreatorId(Guid value);
    [CompilerGeneratedAttribute]
public string get_AdminGroupName();
    [CompilerGeneratedAttribute]
public void set_AdminGroupName(string value);
    [CompilerGeneratedAttribute]
public string get_AdminGroupDescription();
    [CompilerGeneratedAttribute]
public void set_AdminGroupDescription(string value);
}
[ExtensionAttribute]
public static class Microsoft.VisualStudio.Services.Graph.Client.GraphScopeExtensions : object {
    [ExtensionAttribute]
public static Guid GetScopeId(GraphScope graphScope);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Graph.Client.GraphServicePrincipal : AadGraphMember {
    [CompilerGeneratedAttribute]
private string <ApplicationId>k__BackingField;
    public string SubjectKind { get; }
    [DataMemberAttribute]
public string ApplicationId { get; private set; }
    [EditorBrowsableAttribute("1")]
internal GraphServicePrincipal(string origin, string originId, SubjectDescriptor descriptor, IdentityDescriptor legacyDescriptor, string displayName, ReferenceLinks links, string url, string domain, string principalName, string mailAddress, string metaType, DateTime metadataUpdateDate, bool isDeletedInOrigin, string directoryAlias, string applicationId);
    internal GraphServicePrincipal(GraphServicePrincipal servicePrincipal, string origin, string originId, Nullable`1<SubjectDescriptor> descriptor, IdentityDescriptor legacyDescriptor, string displayName, ReferenceLinks links, string url, string domain, string principalName, string mailAddress, string metaType, Nullable`1<DateTime> metadataUpdateDate, Nullable`1<bool> isDeletedInOrigin, string directoryAlias, string applicationId);
    public virtual string get_SubjectKind();
    [CompilerGeneratedAttribute]
public string get_ApplicationId();
    [CompilerGeneratedAttribute]
private void set_ApplicationId(string value);
}
[DataContractAttribute]
[JsonConverterAttribute("Microsoft.VisualStudio.Services.Graph.Client.GraphServicePrincipalCreationContextJsonConverter")]
public abstract class Microsoft.VisualStudio.Services.Graph.Client.GraphServicePrincipalCreationContext : object {
    [CompilerGeneratedAttribute]
private Guid <StorageKey>k__BackingField;
    [DataMemberAttribute]
public Guid StorageKey { get; public set; }
    [CompilerGeneratedAttribute]
public Guid get_StorageKey();
    [CompilerGeneratedAttribute]
public void set_StorageKey(Guid value);
}
public class Microsoft.VisualStudio.Services.Graph.Client.GraphServicePrincipalCreationContextJsonConverter : VssJsonCreationConverter`1<GraphServicePrincipalCreationContext> {
    protected virtual GraphServicePrincipalCreationContext Create(Type objectType, JObject jsonObject);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Graph.Client.GraphServicePrincipalOriginIdCreationContext : GraphServicePrincipalCreationContext {
    [CompilerGeneratedAttribute]
private string <OriginId>k__BackingField;
    private static string OriginDirectory;
    [DataMemberAttribute]
public string OriginId { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_OriginId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_OriginId(string value);
    public sealed virtual IDirectoryEntityDescriptor ToDirectoryEntityDescriptor();
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Graph.Client.GraphServicePrincipalOriginIdUpdateContext : GraphServicePrincipalUpdateContext {
    [CompilerGeneratedAttribute]
private string <OriginId>k__BackingField;
    [DataMemberAttribute]
public string OriginId { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_OriginId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_OriginId(string value);
    public sealed virtual IDirectoryEntityDescriptor ToDirectoryEntityDescriptor(string newLocalId);
}
[DataContractAttribute]
[JsonConverterAttribute("Microsoft.VisualStudio.Services.Graph.Client.GraphServicePrincipalUpdateContextJsonConverter")]
public abstract class Microsoft.VisualStudio.Services.Graph.Client.GraphServicePrincipalUpdateContext : object {
    [CompilerGeneratedAttribute]
private Guid <StorageKey>k__BackingField;
    [DataMemberAttribute]
[EditorBrowsableAttribute("1")]
[ObsoleteAttribute]
public Guid StorageKey { get; public set; }
    [CompilerGeneratedAttribute]
public Guid get_StorageKey();
    [CompilerGeneratedAttribute]
public void set_StorageKey(Guid value);
}
public class Microsoft.VisualStudio.Services.Graph.Client.GraphServicePrincipalUpdateContextJsonConverter : VssJsonCreationConverter`1<GraphServicePrincipalOriginIdUpdateContext> {
    protected virtual GraphServicePrincipalOriginIdUpdateContext Create(Type objectType, JObject jsonObject);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Graph.Client.GraphStorageKeyResult : object {
    [CompilerGeneratedAttribute]
private Guid <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceLinks <Links>k__BackingField;
    [DataMemberAttribute]
public Guid Value { get; }
    [DataMemberAttribute]
public ReferenceLinks Links { get; private set; }
    [JsonConstructorAttribute]
public GraphStorageKeyResult(Guid value, ReferenceLinks links);
    [CompilerGeneratedAttribute]
public Guid get_Value();
    [CompilerGeneratedAttribute]
public ReferenceLinks get_Links();
    [CompilerGeneratedAttribute]
private void set_Links(ReferenceLinks value);
}
[DataContractAttribute]
[JsonConverterAttribute("Microsoft.VisualStudio.Services.Graph.Client.GraphSubjectJsonConverter")]
public abstract class Microsoft.VisualStudio.Services.Graph.Client.GraphSubject : GraphSubjectBase {
    [CompilerGeneratedAttribute]
private string <Origin>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OriginId>k__BackingField;
    [CompilerGeneratedAttribute]
private IdentityDescriptor <LegacyDescriptor>k__BackingField;
    [ClientInternalUseOnlyAttribute("True")]
internal bool ShoudSerializeInternals;
    [DataMemberAttribute]
public string SubjectKind { get; }
    [DataMemberAttribute]
public string Origin { get; private set; }
    [DataMemberAttribute]
public string OriginId { get; private set; }
    [ClientInternalUseOnlyAttribute("True")]
internal IdentityDescriptor LegacyDescriptor { get; private set; }
    [DataMemberAttribute]
private string LegacyDescriptorString { get; private set; }
    [EditorBrowsableAttribute("1")]
protected GraphSubject(string origin, string originId, SubjectDescriptor descriptor, IdentityDescriptor legacyDescriptor, string displayName, ReferenceLinks links, string url);
    public abstract virtual string get_SubjectKind();
    [CompilerGeneratedAttribute]
public string get_Origin();
    [CompilerGeneratedAttribute]
private void set_Origin(string value);
    [CompilerGeneratedAttribute]
public string get_OriginId();
    [CompilerGeneratedAttribute]
private void set_OriginId(string value);
    [CompilerGeneratedAttribute]
internal IdentityDescriptor get_LegacyDescriptor();
    [CompilerGeneratedAttribute]
private void set_LegacyDescriptor(IdentityDescriptor value);
    private string get_LegacyDescriptorString();
    private void set_LegacyDescriptorString(string value);
    [EditorBrowsableAttribute("1")]
public virtual bool ShouldSerializeLegacyDescriptorString();
}
[JsonObjectAttribute]
[XmlSerializableDataContractAttribute]
public abstract class Microsoft.VisualStudio.Services.Graph.Client.GraphSubjectBase : object {
    [CompilerGeneratedAttribute]
private SubjectDescriptor <Descriptor>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceLinks <Links>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    public SubjectDescriptor Descriptor { get; protected set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
private string DescriptorString { get; private set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string DisplayName { get; protected set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
[XmlIgnoreAttribute]
public ReferenceLinks Links { get; protected set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string Url { get; protected set; }
    [EditorBrowsableAttribute("1")]
protected GraphSubjectBase(SubjectDescriptor descriptor, string displayName, ReferenceLinks links, string url);
    [CompilerGeneratedAttribute]
public SubjectDescriptor get_Descriptor();
    [CompilerGeneratedAttribute]
protected void set_Descriptor(SubjectDescriptor value);
    private string get_DescriptorString();
    private void set_DescriptorString(string value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
protected void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public ReferenceLinks get_Links();
    [CompilerGeneratedAttribute]
protected void set_Links(ReferenceLinks value);
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
protected void set_Url(string value);
    private sealed virtual override XmlSchema System.Xml.Serialization.IXmlSerializable.GetSchema();
    private sealed virtual override void System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader reader);
    private sealed virtual override void System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter writer);
}
public class Microsoft.VisualStudio.Services.Graph.Client.GraphSubjectJsonConverter : VssJsonCreationConverter`1<GraphSubject> {
    protected virtual GraphSubject Create(Type objectType, JObject jsonObject);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Graph.Client.GraphSubjectLookup : object {
    [CompilerGeneratedAttribute]
private IEnumerable`1<GraphSubjectLookupKey> <LookupKeys>k__BackingField;
    [DataMemberAttribute]
public IEnumerable`1<GraphSubjectLookupKey> LookupKeys { get; private set; }
    public GraphSubjectLookup(IEnumerable`1<GraphSubjectLookupKey> lookupKeys);
    [CompilerGeneratedAttribute]
public IEnumerable`1<GraphSubjectLookupKey> get_LookupKeys();
    [CompilerGeneratedAttribute]
private void set_LookupKeys(IEnumerable`1<GraphSubjectLookupKey> value);
}
[ExtensionAttribute]
public static class Microsoft.VisualStudio.Services.Graph.Client.GraphSubjectLookupExtensions : object {
    [ExtensionAttribute]
public static IEnumerable`1<SubjectDescriptor> ToSubjectDescriptors(GraphSubjectLookup subjectLookup);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Graph.Client.GraphSubjectLookupKey : object {
    [CompilerGeneratedAttribute]
private SubjectDescriptor <Descriptor>k__BackingField;
    [DataMemberAttribute]
public SubjectDescriptor Descriptor { get; private set; }
    public GraphSubjectLookupKey(SubjectDescriptor descriptor);
    [CompilerGeneratedAttribute]
public SubjectDescriptor get_Descriptor();
    [CompilerGeneratedAttribute]
private void set_Descriptor(SubjectDescriptor value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Graph.Client.GraphSubjectQuery : object {
    [CompilerGeneratedAttribute]
private string <Query>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <SubjectKind>k__BackingField;
    [CompilerGeneratedAttribute]
private SubjectDescriptor <ScopeDescriptor>k__BackingField;
    [DataMemberAttribute]
public string Query { get; private set; }
    [DataMemberAttribute]
public IEnumerable`1<string> SubjectKind { get; private set; }
    [DataMemberAttribute]
public SubjectDescriptor ScopeDescriptor { get; private set; }
    public GraphSubjectQuery(string query, IEnumerable`1<string> subjectKind, SubjectDescriptor scopeDescriptor);
    [CompilerGeneratedAttribute]
public string get_Query();
    [CompilerGeneratedAttribute]
private void set_Query(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_SubjectKind();
    [CompilerGeneratedAttribute]
private void set_SubjectKind(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public SubjectDescriptor get_ScopeDescriptor();
    [CompilerGeneratedAttribute]
private void set_ScopeDescriptor(SubjectDescriptor value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Graph.Client.GraphSystemSubject : GraphSubject {
    public string SubjectKind { get; }
    [EditorBrowsableAttribute("1")]
internal GraphSystemSubject(string origin, string originId, SubjectDescriptor descriptor, IdentityDescriptor legacyDescriptor, string displayName, ReferenceLinks links, string url);
    [EditorBrowsableAttribute("1")]
internal GraphSystemSubject(GraphSystemSubject systemSubject, string origin, string originId, Nullable`1<SubjectDescriptor> descriptor, IdentityDescriptor legacyDescriptor, string displayName, ReferenceLinks links, string url);
    public virtual string get_SubjectKind();
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Graph.Client.GraphUser : AadGraphMember {
    public string SubjectKind { get; }
    [EditorBrowsableAttribute("1")]
internal GraphUser(string origin, string originId, SubjectDescriptor descriptor, IdentityDescriptor legacyDescriptor, string displayName, ReferenceLinks links, string url, string domain, string principalName, string mailAddress, string metaType, DateTime metadataUpdateDate, bool isDeletedInOrigin, string directoryAlias);
    internal GraphUser(GraphUser user, string origin, string originId, Nullable`1<SubjectDescriptor> descriptor, IdentityDescriptor legacyDescriptor, string displayName, ReferenceLinks links, string url, string domain, string principalName, string mailAddress, string metaType, Nullable`1<DateTime> metadataUpdateDate, Nullable`1<bool> isDeletedInOrigin, string directoryAlias);
    public virtual string get_SubjectKind();
}
[DataContractAttribute]
[JsonConverterAttribute("Microsoft.VisualStudio.Services.Graph.Client.GraphUserCreationContextJsonConverter")]
public abstract class Microsoft.VisualStudio.Services.Graph.Client.GraphUserCreationContext : object {
    [CompilerGeneratedAttribute]
private Guid <StorageKey>k__BackingField;
    [DataMemberAttribute]
public Guid StorageKey { get; public set; }
    [IgnoreDataMemberAttribute]
protected string LocalId { get; }
    [CompilerGeneratedAttribute]
public Guid get_StorageKey();
    [CompilerGeneratedAttribute]
public void set_StorageKey(Guid value);
    protected string get_LocalId();
}
public class Microsoft.VisualStudio.Services.Graph.Client.GraphUserCreationContextJsonConverter : VssJsonCreationConverter`1<GraphUserCreationContext> {
    protected virtual GraphUserCreationContext Create(Type objectType, JObject jsonObject);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Graph.Client.GraphUserMailAddressCreationContext : GraphUserCreationContext {
    [CompilerGeneratedAttribute]
private string <MailAddress>k__BackingField;
    [DataMemberAttribute]
public string MailAddress { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_MailAddress();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MailAddress(string value);
    public sealed virtual IDirectoryEntityDescriptor ToDirectoryEntityDescriptor();
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Graph.Client.GraphUserOriginIdCreationContext : GraphUserCreationContext {
    [CompilerGeneratedAttribute]
private string <OriginId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Origin>k__BackingField;
    [DataMemberAttribute]
public string OriginId { get; public set; }
    [DataMemberAttribute]
public string Origin { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_OriginId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_OriginId(string value);
    [CompilerGeneratedAttribute]
public string get_Origin();
    [CompilerGeneratedAttribute]
public void set_Origin(string value);
    public sealed virtual IDirectoryEntityDescriptor ToDirectoryEntityDescriptor();
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Graph.Client.GraphUserOriginIdUpdateContext : GraphUserUpdateContext {
    [CompilerGeneratedAttribute]
private string <OriginId>k__BackingField;
    [DataMemberAttribute]
public string OriginId { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_OriginId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_OriginId(string value);
    public sealed virtual IDirectoryEntityDescriptor ToDirectoryEntityDescriptor(string newLocalId);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Graph.Client.GraphUserPrincipalNameCreationContext : GraphUserCreationContext {
    [CompilerGeneratedAttribute]
private string <PrincipalName>k__BackingField;
    [DataMemberAttribute]
public string PrincipalName { get; public set; }
    public GraphUserPrincipalNameCreationContext(string principalName);
    [CompilerGeneratedAttribute]
public sealed virtual string get_PrincipalName();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PrincipalName(string value);
    public sealed virtual IDirectoryEntityDescriptor ToDirectoryEntityDescriptor();
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Graph.Client.GraphUserPrincipalNameUpdateContext : GraphUserUpdateContext {
    [CompilerGeneratedAttribute]
private string <PrincipalName>k__BackingField;
    [DataMemberAttribute]
public string PrincipalName { get; public set; }
    public GraphUserPrincipalNameUpdateContext(string principalName);
    [CompilerGeneratedAttribute]
public string get_PrincipalName();
    [CompilerGeneratedAttribute]
public void set_PrincipalName(string value);
}
[DataContractAttribute]
[JsonConverterAttribute("Microsoft.VisualStudio.Services.Graph.Client.GraphUserUpdateContextJsonConverter")]
public abstract class Microsoft.VisualStudio.Services.Graph.Client.GraphUserUpdateContext : object {
    [CompilerGeneratedAttribute]
private Guid <StorageKey>k__BackingField;
    [DataMemberAttribute]
[EditorBrowsableAttribute("1")]
[ObsoleteAttribute]
public Guid StorageKey { get; public set; }
    [CompilerGeneratedAttribute]
public Guid get_StorageKey();
    [CompilerGeneratedAttribute]
public void set_StorageKey(Guid value);
}
public class Microsoft.VisualStudio.Services.Graph.Client.GraphUserUpdateContextJsonConverter : VssJsonCreationConverter`1<GraphUserUpdateContext> {
    protected virtual GraphUserUpdateContext Create(Type objectType, JObject jsonObject);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Graph.Client.IdentityMapping : object {
    [CompilerGeneratedAttribute]
private UserPrincipalName <Source>k__BackingField;
    [CompilerGeneratedAttribute]
private UserPrincipalName <Target>k__BackingField;
    [DataMemberAttribute]
public UserPrincipalName Source { get; public set; }
    [DataMemberAttribute]
public UserPrincipalName Target { get; public set; }
    [CompilerGeneratedAttribute]
public UserPrincipalName get_Source();
    [CompilerGeneratedAttribute]
public void set_Source(UserPrincipalName value);
    [CompilerGeneratedAttribute]
public UserPrincipalName get_Target();
    [CompilerGeneratedAttribute]
public void set_Target(UserPrincipalName value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Graph.Client.IdentityMappings : object {
    [CompilerGeneratedAttribute]
private List`1<IdentityMapping> <Mappings>k__BackingField;
    [DataMemberAttribute]
public List`1<IdentityMapping> Mappings { get; public set; }
    public IdentityMappings(List`1<IdentityMapping> mappings);
    [CompilerGeneratedAttribute]
public List`1<IdentityMapping> get_Mappings();
    [CompilerGeneratedAttribute]
public void set_Mappings(List`1<IdentityMapping> value);
}
public interface Microsoft.VisualStudio.Services.Graph.Client.IGraphMemberCreationContext {
    public abstract virtual IDirectoryEntityDescriptor ToDirectoryEntityDescriptor();
}
public interface Microsoft.VisualStudio.Services.Graph.Client.IGraphMemberMailAddressCreationContext {
    public string MailAddress { get; public set; }
    public abstract virtual string get_MailAddress();
    public abstract virtual void set_MailAddress(string value);
}
public interface Microsoft.VisualStudio.Services.Graph.Client.IGraphMemberOriginIdCreationContext {
    public string OriginId { get; public set; }
    public abstract virtual string get_OriginId();
    public abstract virtual void set_OriginId(string value);
}
public interface Microsoft.VisualStudio.Services.Graph.Client.IGraphMemberOriginIdUpdateContext {
    public string OriginId { get; public set; }
    public abstract virtual string get_OriginId();
    public abstract virtual void set_OriginId(string value);
}
public interface Microsoft.VisualStudio.Services.Graph.Client.IGraphMemberPrincipalNameCreationContext {
    public string PrincipalName { get; public set; }
    public abstract virtual string get_PrincipalName();
    public abstract virtual void set_PrincipalName(string value);
}
public interface Microsoft.VisualStudio.Services.Graph.Client.IGraphMemberUpdateContext {
    public abstract virtual IDirectoryEntityDescriptor ToDirectoryEntityDescriptor(string newLocalId);
}
public class Microsoft.VisualStudio.Services.Graph.Client.MappingResult : object {
    [CompilerGeneratedAttribute]
private string <Code>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorMessage>k__BackingField;
    [DataMemberAttribute]
public string Code { get; public set; }
    [DataMemberAttribute]
public string ErrorMessage { get; public set; }
    public MappingResult(Nullable`1<HttpStatusCode> code, string errorMessage);
    public MappingResult(Nullable`1<HttpStatusCode> code);
    [CompilerGeneratedAttribute]
public void set_Code(string value);
    [CompilerGeneratedAttribute]
public string get_Code();
    [CompilerGeneratedAttribute]
public void set_ErrorMessage(string value);
    [CompilerGeneratedAttribute]
public string get_ErrorMessage();
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Graph.Client.PagedGraphGroups : object {
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <ContinuationToken>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<GraphGroup> <GraphGroups>k__BackingField;
    [ClientResponseHeaderAttribute("X-MS-ContinuationToken")]
public IEnumerable`1<string> ContinuationToken { get; public set; }
    [ClientResponseContentAttribute]
public IEnumerable`1<GraphGroup> GraphGroups { get; public set; }
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_ContinuationToken();
    [CompilerGeneratedAttribute]
public void set_ContinuationToken(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<GraphGroup> get_GraphGroups();
    [CompilerGeneratedAttribute]
public void set_GraphGroups(IEnumerable`1<GraphGroup> value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Graph.Client.PagedGraphMembers : object {
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <ContinuationToken>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<GraphMember> <GraphMembers>k__BackingField;
    [ClientResponseHeaderAttribute("X-MS-ContinuationToken")]
public IEnumerable`1<string> ContinuationToken { get; public set; }
    [ClientResponseContentAttribute]
public IEnumerable`1<GraphMember> GraphMembers { get; public set; }
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_ContinuationToken();
    [CompilerGeneratedAttribute]
public void set_ContinuationToken(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<GraphMember> get_GraphMembers();
    [CompilerGeneratedAttribute]
public void set_GraphMembers(IEnumerable`1<GraphMember> value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Graph.Client.PagedGraphServicePrincipals : object {
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <ContinuationToken>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<GraphServicePrincipal> <GraphServicePrincipals>k__BackingField;
    [ClientResponseHeaderAttribute("X-MS-ContinuationToken")]
public IEnumerable`1<string> ContinuationToken { get; public set; }
    [ClientResponseContentAttribute]
public IEnumerable`1<GraphServicePrincipal> GraphServicePrincipals { get; public set; }
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_ContinuationToken();
    [CompilerGeneratedAttribute]
public void set_ContinuationToken(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<GraphServicePrincipal> get_GraphServicePrincipals();
    [CompilerGeneratedAttribute]
public void set_GraphServicePrincipals(IEnumerable`1<GraphServicePrincipal> value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Graph.Client.PagedGraphUsers : object {
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <ContinuationToken>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<GraphUser> <GraphUsers>k__BackingField;
    [ClientResponseHeaderAttribute("X-MS-ContinuationToken")]
public IEnumerable`1<string> ContinuationToken { get; public set; }
    [ClientResponseContentAttribute]
public IEnumerable`1<GraphUser> GraphUsers { get; public set; }
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_ContinuationToken();
    [CompilerGeneratedAttribute]
public void set_ContinuationToken(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<GraphUser> get_GraphUsers();
    [CompilerGeneratedAttribute]
public void set_GraphUsers(IEnumerable`1<GraphUser> value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Graph.Client.RequestAccessPayLoad : object {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UrlRequested>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectUri>k__BackingField;
    [DataMemberAttribute]
public string Message { get; public set; }
    [DataMemberAttribute]
public string UrlRequested { get; public set; }
    [DataMemberAttribute]
public string ProjectUri { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_UrlRequested();
    [CompilerGeneratedAttribute]
public void set_UrlRequested(string value);
    [CompilerGeneratedAttribute]
public string get_ProjectUri();
    [CompilerGeneratedAttribute]
public void set_ProjectUri(string value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Graph.Client.ResolveDisconnectedUsersResponse : object {
    [CompilerGeneratedAttribute]
private string <Code>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<MappingResult> <MappingResults>k__BackingField;
    [DataMemberAttribute]
public string Code { get; public set; }
    [DataMemberAttribute]
public string ErrorMessage { get; public set; }
    [DataMemberAttribute]
public List`1<MappingResult> MappingResults { get; public set; }
    public ResolveDisconnectedUsersResponse(Nullable`1<HttpStatusCode> code, string errorMessage);
    public ResolveDisconnectedUsersResponse(Nullable`1<HttpStatusCode> code);
    [CompilerGeneratedAttribute]
public string get_Code();
    [CompilerGeneratedAttribute]
public void set_Code(string value);
    [CompilerGeneratedAttribute]
public string get_ErrorMessage();
    [CompilerGeneratedAttribute]
public void set_ErrorMessage(string value);
    [CompilerGeneratedAttribute]
public List`1<MappingResult> get_MappingResults();
    [CompilerGeneratedAttribute]
public void set_MappingResults(List`1<MappingResult> value);
    public void AddMappingResult(MappingResult result);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Graph.Client.UserPrincipalName : object {
    [CompilerGeneratedAttribute]
private string <PrincipalName>k__BackingField;
    [DataMemberAttribute]
public string PrincipalName { get; public set; }
    [CompilerGeneratedAttribute]
public string get_PrincipalName();
    [CompilerGeneratedAttribute]
public void set_PrincipalName(string value);
}
public static class Microsoft.VisualStudio.Services.Graph.Constants : object {
    public static IReadOnlyDictionary`2<string, string> SubjectTypeMap;
    public static IReadOnlyDictionary`2<string, string> SocialTypeMap;
    public static int MaximumRestResultSize;
    public static string JsonPatchMediaType;
    public static string JsonPatchOperationPathPrefix;
    public static char SubjectListSeparator;
    public static char SubjectDescriptorPartsSeparator;
    public static char SocialListSeparator;
    public static char SocialDescriptorPartsSeparator;
    public static string SocialDescriptorPrefix;
    public static string ForceFilterIdentities;
    public static int ResolveDisconnectedUsersApiLimit;
    private static Constants();
}
public static class Microsoft.VisualStudio.Services.Graph.DirectoryEntityInvitationMethods : object {
    public static string GraphUpdate;
    public static string GraphCreate;
}
public class Microsoft.VisualStudio.Services.Graph.GraphAccountNameCollisionRepairFailedException : GraphException {
    public GraphAccountNameCollisionRepairFailedException(string message);
    public GraphAccountNameCollisionRepairFailedException(string message, Exception innerException);
    protected GraphAccountNameCollisionRepairFailedException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.Graph.GraphAccountNameCollisionRepairUnsafeException : GraphException {
    public GraphAccountNameCollisionRepairUnsafeException(string message);
    public GraphAccountNameCollisionRepairUnsafeException(string message, Exception innerException);
    protected GraphAccountNameCollisionRepairUnsafeException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.Graph.GraphApiUnavailableException : GraphException {
    public GraphApiUnavailableException(string message);
    public GraphApiUnavailableException(string message, Exception innerException);
    protected GraphApiUnavailableException(SerializationInfo info, StreamingContext context);
    public GraphApiUnavailableException(SubjectDescriptor subjectDescriptor);
    public GraphApiUnavailableException(Guid id);
}
public class Microsoft.VisualStudio.Services.Graph.GraphBadRequestException : GraphException {
    public GraphBadRequestException(string message);
    public GraphBadRequestException(string message, Exception innerException);
    protected GraphBadRequestException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.Graph.GraphException : VssServiceException {
    public GraphException(string message);
    public GraphException(string message, Exception innerException);
    protected GraphException(SerializationInfo info, StreamingContext context);
}
[ClientInternalUseOnlyAttribute("True")]
[EditorBrowsableAttribute("1")]
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Graph.GraphFederatedProviderData : object {
    [CompilerGeneratedAttribute]
private SubjectDescriptor <SubjectDescriptor>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProviderName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccessToken>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Version>k__BackingField;
    public SubjectDescriptor SubjectDescriptor { get; private set; }
    [DataMemberAttribute]
private string SubjectDescriptorString { get; private set; }
    [DataMemberAttribute]
public string ProviderName { get; private set; }
    [DataMemberAttribute]
public string AccessToken { get; private set; }
    [DataMemberAttribute]
public long Version { get; private set; }
    public GraphFederatedProviderData(SubjectDescriptor subjectDescriptor, string providerName, string accessToken, long version);
    [CompilerGeneratedAttribute]
public SubjectDescriptor get_SubjectDescriptor();
    [CompilerGeneratedAttribute]
private void set_SubjectDescriptor(SubjectDescriptor value);
    private string get_SubjectDescriptorString();
    private void set_SubjectDescriptorString(string value);
    [CompilerGeneratedAttribute]
public string get_ProviderName();
    [CompilerGeneratedAttribute]
private void set_ProviderName(string value);
    [CompilerGeneratedAttribute]
public string get_AccessToken();
    [CompilerGeneratedAttribute]
private void set_AccessToken(string value);
    [CompilerGeneratedAttribute]
public long get_Version();
    [CompilerGeneratedAttribute]
private void set_Version(long value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Graph.GraphGlobalExtendedPropertyBatch : object {
    [CompilerGeneratedAttribute]
private IEnumerable`1<SubjectDescriptor> <SubjectDescriptors>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <PropertyNameFilters>k__BackingField;
    [DataMemberAttribute]
public IEnumerable`1<SubjectDescriptor> SubjectDescriptors { get; private set; }
    [DataMemberAttribute]
public IEnumerable`1<string> PropertyNameFilters { get; private set; }
    public GraphGlobalExtendedPropertyBatch(IEnumerable`1<SubjectDescriptor> subjectDescriptors, IEnumerable`1<string> propertyNameFilters);
    [CompilerGeneratedAttribute]
public IEnumerable`1<SubjectDescriptor> get_SubjectDescriptors();
    [CompilerGeneratedAttribute]
private void set_SubjectDescriptors(IEnumerable`1<SubjectDescriptor> value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_PropertyNameFilters();
    [CompilerGeneratedAttribute]
private void set_PropertyNameFilters(IEnumerable`1<string> value);
}
public class Microsoft.VisualStudio.Services.Graph.GraphMemberNotFoundException : GraphException {
    public GraphMemberNotFoundException(string message);
    public GraphMemberNotFoundException(string message, Exception innerException);
    protected GraphMemberNotFoundException(SerializationInfo info, StreamingContext context);
    public GraphMemberNotFoundException(SubjectDescriptor subjectDescriptor, SubjectDescriptor containerDescriptor);
}
public class Microsoft.VisualStudio.Services.Graph.GraphMembershipNotFoundException : GraphException {
    public GraphMembershipNotFoundException(string message);
    public GraphMembershipNotFoundException(string message, Exception innerException);
    protected GraphMembershipNotFoundException(SerializationInfo info, StreamingContext context);
    public GraphMembershipNotFoundException(SubjectDescriptor subjectDescriptor, SubjectDescriptor containerDescriptor);
}
public class Microsoft.VisualStudio.Services.Graph.GraphProviderInfoApiUnavailableException : GraphException {
    public GraphProviderInfoApiUnavailableException(string message);
    public GraphProviderInfoApiUnavailableException(string message, Exception innerException);
    protected GraphProviderInfoApiUnavailableException(SerializationInfo info, StreamingContext context);
    public GraphProviderInfoApiUnavailableException(SubjectDescriptor subjectDescriptor);
    public GraphProviderInfoApiUnavailableException(Guid id);
}
public class Microsoft.VisualStudio.Services.Graph.GraphResourceIds : object {
    public static string AreaName;
    public static string AreaId;
    public static Guid AreaIdGuid;
    private static GraphResourceIds();
}
public class Microsoft.VisualStudio.Services.Graph.GraphSubjectNotFoundException : GraphException {
    public GraphSubjectNotFoundException(string message);
    public GraphSubjectNotFoundException(string message, Exception innerException);
    protected GraphSubjectNotFoundException(SerializationInfo info, StreamingContext context);
    public GraphSubjectNotFoundException(SubjectDescriptor subjectDescriptor);
    public GraphSubjectNotFoundException(Guid id);
}
public static class Microsoft.VisualStudio.Services.Graph.GraphToDirectoryService : object {
    public static IReadOnlyDictionary`2<string, object> CommonMemberMaterializationProperties;
    public static IReadOnlyDictionary`2<string, object> CommonUpdateUserProperties;
    private static GraphToDirectoryService();
}
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.Graph.GraphTraversalDirection : Enum {
    public int value__;
    [EnumMemberAttribute]
public static GraphTraversalDirection Unknown;
    [EnumMemberAttribute]
public static GraphTraversalDirection Down;
    [EnumMemberAttribute]
public static GraphTraversalDirection Up;
}
public class Microsoft.VisualStudio.Services.Graph.InvalidGetDescriptorRequestException : GraphException {
    public InvalidGetDescriptorRequestException(string message);
    public InvalidGetDescriptorRequestException(string message, Exception innerException);
    protected InvalidGetDescriptorRequestException(SerializationInfo info, StreamingContext context);
    public InvalidGetDescriptorRequestException(Guid id);
}
public class Microsoft.VisualStudio.Services.Graph.InvalidGraphMemberIdException : GraphException {
    public InvalidGraphMemberIdException(string message);
    public InvalidGraphMemberIdException(string message, Exception innerException);
    protected InvalidGraphMemberIdException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.Graph.InvalidGraphRequestException : GraphException {
    public InvalidGraphRequestException(string message);
    public InvalidGraphRequestException(string message, Exception innerException);
    protected InvalidGraphRequestException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.Graph.InvalidSubjectTypeException : GraphException {
    public InvalidSubjectTypeException(string message);
    public InvalidSubjectTypeException(string message, Exception innerException);
    protected InvalidSubjectTypeException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.Graph.StorageKeyNotFoundException : GraphException {
    public StorageKeyNotFoundException(string message);
    public StorageKeyNotFoundException(string message, Exception innerException);
    protected StorageKeyNotFoundException(SerializationInfo info, StreamingContext context);
    public StorageKeyNotFoundException(SubjectDescriptor descriptor);
}
public class Microsoft.VisualStudio.Services.Graph.SubjectDescriptorNotFoundException : GraphException {
    public SubjectDescriptorNotFoundException(string message);
    public SubjectDescriptorNotFoundException(string message, Exception innerException);
    protected SubjectDescriptorNotFoundException(SerializationInfo info, StreamingContext context);
    public SubjectDescriptorNotFoundException(Guid storageKey);
    public SubjectDescriptorNotFoundException(IdentityDescriptor identityDescriptor);
}
public class Microsoft.VisualStudio.Services.Graph.TooManyRequestedItemsException : GraphException {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <RequestedCount>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxLimit>k__BackingField;
    [DataMemberAttribute]
public Nullable`1<int> RequestedCount { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> MaxLimit { get; public set; }
    public TooManyRequestedItemsException(string message);
    public TooManyRequestedItemsException(string message, Exception innerException);
    protected TooManyRequestedItemsException(SerializationInfo info, StreamingContext context);
    public TooManyRequestedItemsException(int providedCount, int maxCount);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_RequestedCount();
    [CompilerGeneratedAttribute]
public void set_RequestedCount(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaxLimit();
    [CompilerGeneratedAttribute]
public void set_MaxLimit(Nullable`1<int> value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.GroupLicensingRule.ApplicationStatus : object {
    [CompilerGeneratedAttribute]
private OperationStatus <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private RuleOption <Option>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsTruncated>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<LicenseApplicationStatus> <Licenses>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<ExtensionApplicationStatus> <Extensions>k__BackingField;
    [DataMemberAttribute]
public OperationStatus Status { get; public set; }
    [DataMemberAttribute]
public RuleOption Option { get; public set; }
    [DataMemberAttribute]
public bool IsTruncated { get; public set; }
    [DataMemberAttribute]
public ICollection`1<LicenseApplicationStatus> Licenses { get; public set; }
    [DataMemberAttribute]
public ICollection`1<ExtensionApplicationStatus> Extensions { get; public set; }
    public ApplicationStatus(OperationStatus status, RuleOption option);
    [CompilerGeneratedAttribute]
public OperationStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(OperationStatus value);
    [CompilerGeneratedAttribute]
public RuleOption get_Option();
    [CompilerGeneratedAttribute]
public void set_Option(RuleOption value);
    [CompilerGeneratedAttribute]
public bool get_IsTruncated();
    [CompilerGeneratedAttribute]
public void set_IsTruncated(bool value);
    [CompilerGeneratedAttribute]
public ICollection`1<LicenseApplicationStatus> get_Licenses();
    [CompilerGeneratedAttribute]
public void set_Licenses(ICollection`1<LicenseApplicationStatus> value);
    [CompilerGeneratedAttribute]
public ICollection`1<ExtensionApplicationStatus> get_Extensions();
    [CompilerGeneratedAttribute]
public void set_Extensions(ICollection`1<ExtensionApplicationStatus> value);
}
[ExceptionMappingAttribute("0.0", "3.0", "InvalidGroupLicensingOperation", "Microsoft.VisualStudio.Services.Licensing.InvalidGroupLicensingOperation, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.GroupLicensingRule.BadGroupLicensingRequestException : VssServiceException {
    public BadGroupLicensingRequestException(string message);
    public BadGroupLicensingRequestException(string message, Exception innerException);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.GroupLicensingRule.ExtensionApplicationStatus : LicensingApplicationStatus {
    [CompilerGeneratedAttribute]
private string <ExtensionId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Unassigned>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Incompatible>k__BackingField;
    [DataMemberAttribute]
public string ExtensionId { get; public set; }
    [DataMemberAttribute]
public int Unassigned { get; public set; }
    [DataMemberAttribute]
public int Incompatible { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ExtensionId();
    [CompilerGeneratedAttribute]
public void set_ExtensionId(string value);
    [CompilerGeneratedAttribute]
public int get_Unassigned();
    [CompilerGeneratedAttribute]
public void set_Unassigned(int value);
    [CompilerGeneratedAttribute]
public int get_Incompatible();
    [CompilerGeneratedAttribute]
public void set_Incompatible(int value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.GroupLicensingRule.ExtensionRule : object {
    [CompilerGeneratedAttribute]
private string <ExtensionId>k__BackingField;
    [CompilerGeneratedAttribute]
private GroupLicensingRuleStatus <Status>k__BackingField;
    [DataMemberAttribute]
public string ExtensionId { get; public set; }
    [DataMemberAttribute]
public GroupLicensingRuleStatus Status { get; public set; }
    public ExtensionRule(string extensionId);
    [CompilerGeneratedAttribute]
public string get_ExtensionId();
    [CompilerGeneratedAttribute]
public void set_ExtensionId(string value);
    [CompilerGeneratedAttribute]
public GroupLicensingRuleStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(GroupLicensingRuleStatus value);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(ExtensionRule other);
    public virtual int GetHashCode();
    public static bool Equals(ExtensionRule left, ExtensionRule right);
    public static bool op_Equality(ExtensionRule left, ExtensionRule right);
    public static bool op_Inequality(ExtensionRule left, ExtensionRule right);
}
public class Microsoft.VisualStudio.Services.GroupLicensingRule.GroupLicensingApplicationException : VssServiceException {
    public GroupLicensingApplicationException(string message);
    public GroupLicensingApplicationException(string message, Exception innerException);
}
public class Microsoft.VisualStudio.Services.GroupLicensingRule.GroupLicensingEvaluationException : VssServiceException {
    public GroupLicensingEvaluationException(string message);
    public GroupLicensingEvaluationException(string message, Exception innerException);
}
public static class Microsoft.VisualStudio.Services.GroupLicensingRule.GroupLicensingResourceVersions : object {
    public static int GroupLicensingRulesResourceVersion;
    public static int GroupLicensingRulesLookupResourceVersion;
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.GroupLicensingRule.GroupLicensingRule : object {
    [CompilerGeneratedAttribute]
private SubjectDescriptor <SubjectDescriptor>k__BackingField;
    [CompilerGeneratedAttribute]
private LicenseRule <LicenseRule>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<ExtensionRule> <ExtensionRules>k__BackingField;
    [DataMemberAttribute]
public SubjectDescriptor SubjectDescriptor { get; public set; }
    [DataMemberAttribute]
public LicenseRule LicenseRule { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<ExtensionRule> ExtensionRules { get; public set; }
    public GroupLicensingRuleStatus Status { get; }
    [CompilerGeneratedAttribute]
public SubjectDescriptor get_SubjectDescriptor();
    [CompilerGeneratedAttribute]
public void set_SubjectDescriptor(SubjectDescriptor value);
    [CompilerGeneratedAttribute]
public LicenseRule get_LicenseRule();
    [CompilerGeneratedAttribute]
public void set_LicenseRule(LicenseRule value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<ExtensionRule> get_ExtensionRules();
    [CompilerGeneratedAttribute]
public void set_ExtensionRules(IEnumerable`1<ExtensionRule> value);
    public GroupLicensingRuleStatus get_Status();
    public GroupLicensingRule Clone();
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(GroupLicensingRule other);
    public virtual int GetHashCode();
    public static bool Equals(GroupLicensingRule left, GroupLicensingRule right);
    public static bool op_Equality(GroupLicensingRule left, GroupLicensingRule right);
    public static bool op_Inequality(GroupLicensingRule left, GroupLicensingRule right);
}
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.GroupLicensingRule.GroupLicensingRuleStatus : Enum {
    public int value__;
    public static GroupLicensingRuleStatus ApplyPending;
    public static GroupLicensingRuleStatus Applied;
    public static GroupLicensingRuleStatus Incompatible;
    public static GroupLicensingRuleStatus UnableToApply;
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.GroupLicensingRule.GroupLicensingRuleUpdate : object {
    [CompilerGeneratedAttribute]
private SubjectDescriptor <SubjectDescriptor>k__BackingField;
    [CompilerGeneratedAttribute]
private License <License>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <ExtensionsToAdd>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <ExtensionsToRemove>k__BackingField;
    [DataMemberAttribute]
public SubjectDescriptor SubjectDescriptor { get; public set; }
    [DataMemberAttribute]
public License License { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<string> ExtensionsToAdd { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<string> ExtensionsToRemove { get; public set; }
    [CompilerGeneratedAttribute]
public SubjectDescriptor get_SubjectDescriptor();
    [CompilerGeneratedAttribute]
public void set_SubjectDescriptor(SubjectDescriptor value);
    [CompilerGeneratedAttribute]
public License get_License();
    [CompilerGeneratedAttribute]
public void set_License(License value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_ExtensionsToAdd();
    [CompilerGeneratedAttribute]
public void set_ExtensionsToAdd(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_ExtensionsToRemove();
    [CompilerGeneratedAttribute]
public void set_ExtensionsToRemove(IEnumerable`1<string> value);
}
[ExtensionAttribute]
public static class Microsoft.VisualStudio.Services.GroupLicensingRule.GroupRuleStatusExtensions : object {
    [ExtensionAttribute]
public static GroupLicensingRuleStatus HighestSeverity(IEnumerable`1<GroupLicensingRuleStatus> statuses);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.GroupLicensingRule.LicenseApplicationStatus : LicensingApplicationStatus {
    [CompilerGeneratedAttribute]
private License <License>k__BackingField;
    [CompilerGeneratedAttribute]
private AccountUserLicense <AccountUserLicense>k__BackingField;
    [DataMemberAttribute]
public License License { get; public set; }
    [DataMemberAttribute]
public AccountUserLicense AccountUserLicense { get; public set; }
    [CompilerGeneratedAttribute]
public License get_License();
    [CompilerGeneratedAttribute]
public void set_License(License value);
    [CompilerGeneratedAttribute]
public AccountUserLicense get_AccountUserLicense();
    [CompilerGeneratedAttribute]
public void set_AccountUserLicense(AccountUserLicense value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.GroupLicensingRule.LicenseRule : object {
    [CompilerGeneratedAttribute]
private License <license>k__BackingField;
    [CompilerGeneratedAttribute]
private GroupLicensingRuleStatus <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <LastExecuted>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <LastUpdated>k__BackingField;
    [DataMemberAttribute]
private License license { get; private set; }
    [DataMemberAttribute]
public GroupLicensingRuleStatus Status { get; public set; }
    public License License { get; public set; }
    [DataMemberAttribute]
public Nullable`1<DateTimeOffset> LastExecuted { get; public set; }
    [DataMemberAttribute]
public DateTimeOffset LastUpdated { get; public set; }
    public LicenseRule(License license);
    [CompilerGeneratedAttribute]
private License get_license();
    [CompilerGeneratedAttribute]
private void set_license(License value);
    [CompilerGeneratedAttribute]
public GroupLicensingRuleStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(GroupLicensingRuleStatus value);
    public License get_License();
    public void set_License(License value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_LastExecuted();
    [CompilerGeneratedAttribute]
public void set_LastExecuted(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_LastUpdated();
    [CompilerGeneratedAttribute]
public void set_LastUpdated(DateTimeOffset value);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(LicenseRule other);
    public virtual int GetHashCode();
    public static bool Equals(LicenseRule left, LicenseRule right);
    public static bool op_Equality(LicenseRule left, LicenseRule right);
    public static bool op_Inequality(LicenseRule left, LicenseRule right);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.GroupLicensingRule.LicensingApplicationStatus : object {
    [CompilerGeneratedAttribute]
private int <Assigned>k__BackingField;
    [CompilerGeneratedAttribute]
private int <InsufficientResources>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Failed>k__BackingField;
    [DataMemberAttribute]
public int Assigned { get; public set; }
    [DataMemberAttribute]
public int InsufficientResources { get; public set; }
    [DataMemberAttribute]
public int Failed { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Assigned();
    [CompilerGeneratedAttribute]
public void set_Assigned(int value);
    [CompilerGeneratedAttribute]
public int get_InsufficientResources();
    [CompilerGeneratedAttribute]
public void set_InsufficientResources(int value);
    [CompilerGeneratedAttribute]
public int get_Failed();
    [CompilerGeneratedAttribute]
public void set_Failed(int value);
}
[ResourceAreaAttribute("4F9A6C65-A750-4DE3-96D3-E4BCCF3A39B0")]
public class Microsoft.VisualStudio.Services.GroupLicensingRule.LicensingRuleHttpClient : VssHttpClientBase {
    public LicensingRuleHttpClient(Uri baseUrl, VssCredentials credentials);
    public LicensingRuleHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public LicensingRuleHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public LicensingRuleHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public LicensingRuleHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    public Task`1<OperationReference> AddGroupLicensingRuleAsync(GroupLicensingRule licensingRule, Nullable`1<RuleOption> ruleOption, object userState, CancellationToken cancellationToken);
    public Task`1<OperationReference> DeleteGroupLicenseRuleAsync(string subjectDescriptor, Nullable`1<RuleOption> ruleOption, object userState, CancellationToken cancellationToken);
    public Task`1<GroupLicensingRule> GetGroupLicensingRuleAsync(string subjectDescriptor, object userState, CancellationToken cancellationToken);
    public Task`1<List`1<GroupLicensingRule>> GetGroupLicensingRulesAsync(int top, Nullable`1<int> skip, object userState, CancellationToken cancellationToken);
    public Task`1<OperationReference> UpdateGroupLicensingRuleAsync(GroupLicensingRuleUpdate licensingRuleUpdate, Nullable`1<RuleOption> ruleOption, object userState, CancellationToken cancellationToken);
    public Task`1<OperationReference> ApplyGroupLicensingRulesToAllUsersAsync(Nullable`1<RuleOption> ruleOption, object userState, CancellationToken cancellationToken);
    public Task`1<ApplicationStatus> GetApplicationStatusAsync(Nullable`1<Guid> operationId, object userState, CancellationToken cancellationToken);
    public Task`1<string> RetrieveFileAsync(int fileId, object userState, CancellationToken cancellationToken);
    public Task`1<List`1<GroupLicensingRule>> LookupGroupLicensingRulesAsync(GraphSubjectLookup groupRuleLookup, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.GroupLicensingRule.LicensingRuleHttpClient/<ApplyGroupLicensingRulesToUserAsync>d__14")]
public Task ApplyGroupLicensingRulesToUserAsync(Guid userId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.GroupLicensingRule.LicensingRuleHttpClient/<RemoveDirectAssignmentAsync>d__15")]
public Task RemoveDirectAssignmentAsync(Guid userId, object userState, CancellationToken cancellationToken);
}
public static class Microsoft.VisualStudio.Services.GroupLicensingRule.LicensingRuleResourceIds : object {
    public static string AreaId;
    public static string AreaName;
}
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.GroupLicensingRule.RuleOption : Enum {
    public int value__;
    public static RuleOption ApplyGroupRule;
    public static RuleOption TestApplyGroupRule;
}
public static class Microsoft.VisualStudio.Services.Health.HealthResourceIds : object {
    public static string HealthArea;
    public static string HealthResource;
    public static Guid HealthLocationId;
    private static HealthResourceIds();
}
[ResourceAreaAttribute("8E128563-B59C-4A70-964C-A3BD7412183D")]
public class Microsoft.VisualStudio.Services.HostAcquisition.Client.HostAcquisitionHttpClient : VssHttpClientBase {
    public HostAcquisitionHttpClient(Uri baseUrl, VssCredentials credentials);
    public HostAcquisitionHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public HostAcquisitionHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public HostAcquisitionHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public HostAcquisitionHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    public virtual Task`1<Collection> CreateCollectionAsync(IDictionary`2<string, string> properties, string collectionName, string preferredRegion, string ownerDescriptor, object userState, CancellationToken cancellationToken);
    public virtual Task`1<Collection> CreateCollectionAsync(IDictionary`2<string, string> properties, string collectionName, string preferredRegion, string preferredGeography, string ownerDescriptor, object userState, CancellationToken cancellationToken);
    public virtual Task`1<List`1<Geography>> GetGeographiesAsync(object userState, CancellationToken cancellationToken);
    public virtual Task`1<NameAvailability> GetNameAvailabilityAsync(string name, object userState, CancellationToken cancellationToken);
    public virtual Task`1<List`1<Region>> GetRegionsAsync(object userState, CancellationToken cancellationToken);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.HostAcquisition.Geography : object {
    [CompilerGeneratedAttribute]
private string <Code>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Guid> <ServiceInstanceIds>k__BackingField;
    [CompilerGeneratedAttribute]
private int <AvailableHostsCount>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsActive>k__BackingField;
    [DataMemberAttribute]
public string Code { get; public set; }
    [DataMemberAttribute]
public string DisplayName { get; public set; }
    [DataMemberAttribute]
public List`1<Guid> ServiceInstanceIds { get; public set; }
    [DataMemberAttribute]
public int AvailableHostsCount { get; public set; }
    [DataMemberAttribute]
public bool IsActive { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Code();
    [CompilerGeneratedAttribute]
public void set_Code(string value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public List`1<Guid> get_ServiceInstanceIds();
    [CompilerGeneratedAttribute]
public void set_ServiceInstanceIds(List`1<Guid> value);
    [CompilerGeneratedAttribute]
public int get_AvailableHostsCount();
    [CompilerGeneratedAttribute]
public void set_AvailableHostsCount(int value);
    [CompilerGeneratedAttribute]
public bool get_IsActive();
    [CompilerGeneratedAttribute]
public void set_IsActive(bool value);
}
public class Microsoft.VisualStudio.Services.HostAcquisition.GeographyNotAvailableException : HostAcquisitionException {
    public GeographyNotAvailableException(string message);
    public GeographyNotAvailableException(string message, Exception innerException);
    protected GeographyNotAvailableException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.HostAcquisition.HostAcquisitionBadRequestException : VssServiceException {
    public HostAcquisitionBadRequestException(string message);
    public HostAcquisitionBadRequestException(string message, Exception innerException);
    protected HostAcquisitionBadRequestException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.HostAcquisition.HostAcquisitionException : VssServiceException {
    public HostAcquisitionException(string message);
    public HostAcquisitionException(string message, Exception innerException);
    protected HostAcquisitionException(SerializationInfo info, StreamingContext context);
}
public static class Microsoft.VisualStudio.Services.HostAcquisition.HostAcquisitionResourceIds : object {
    public static string AreaName;
    public static string AreaId;
    public static Guid ResourceAreaId;
    public static string HostAcquisitionArea;
    public static Guid CollectionsResourceLocationId;
    public static string CollectionsResourceName;
    public static Guid NameAvailabilityResourceLocationId;
    public static string NameAvailabilityResourceName;
    public static Guid RegionsResourceLocationId;
    public static string RegionsResourceName;
    public static Guid GeographiesResourceLocationId;
    public static string GeographiesResourceName;
    private static HostAcquisitionResourceIds();
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.HostAcquisition.NameAvailability : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsAvailable>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UnavailabilityReason>k__BackingField;
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public bool IsAvailable { get; public set; }
    [DataMemberAttribute]
public string UnavailabilityReason { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public bool get_IsAvailable();
    [CompilerGeneratedAttribute]
public void set_IsAvailable(bool value);
    [CompilerGeneratedAttribute]
public string get_UnavailabilityReason();
    [CompilerGeneratedAttribute]
public void set_UnavailabilityReason(string value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.HostAcquisition.Region : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GeographyCode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GeographyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NameInAzure>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDefault>k__BackingField;
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public string DisplayName { get; public set; }
    [DataMemberAttribute]
public string GeographyCode { get; public set; }
    [DataMemberAttribute]
public string GeographyName { get; public set; }
    [DataMemberAttribute]
public string NameInAzure { get; public set; }
    [DataMemberAttribute]
public bool IsDefault { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public string get_GeographyCode();
    [CompilerGeneratedAttribute]
public void set_GeographyCode(string value);
    [CompilerGeneratedAttribute]
public string get_GeographyName();
    [CompilerGeneratedAttribute]
public void set_GeographyName(string value);
    [CompilerGeneratedAttribute]
public string get_NameInAzure();
    [CompilerGeneratedAttribute]
public void set_NameInAzure(string value);
    [CompilerGeneratedAttribute]
public bool get_IsDefault();
    [CompilerGeneratedAttribute]
public void set_IsDefault(bool value);
}
public class Microsoft.VisualStudio.Services.HostAcquisition.RegionNotAvailableException : HostAcquisitionException {
    public RegionNotAvailableException(string message);
    public RegionNotAvailableException(string message, Exception innerException);
    protected RegionNotAvailableException(SerializationInfo info, StreamingContext context);
}
[ExceptionMappingAttribute("0.0", "3.0", "AccountPreferencesAlreadyExistException", "Microsoft.VisualStudio.Services.Identity.AccountPreferencesAlreadyExistException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.AccountPreferencesAlreadyExistException : IdentityServiceException {
    public AccountPreferencesAlreadyExistException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "AddGroupMemberIllegalInternetIdentityException", "Microsoft.VisualStudio.Services.Identity.AddGroupMemberIllegalInternetIdentityException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.AddGroupMemberIllegalInternetIdentityException : IdentityServiceException {
    public AddGroupMemberIllegalInternetIdentityException(Identity member);
    public AddGroupMemberIllegalInternetIdentityException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "AddGroupMemberIllegalMemberException", "Microsoft.VisualStudio.Services.Identity.AddGroupMemberIllegalMemberException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.AddGroupMemberIllegalMemberException : IdentityServiceException {
    public AddGroupMemberIllegalMemberException(string message);
    public AddGroupMemberIllegalMemberException(string message, Exception innerException);
    protected AddGroupMemberIllegalMemberException(SerializationInfo info, StreamingContext context);
}
[ExceptionMappingAttribute("0.0", "3.0", "AddGroupMemberIllegalWindowsIdentityException", "Microsoft.VisualStudio.Services.Identity.AddGroupMemberIllegalWindowsIdentityException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.AddGroupMemberIllegalWindowsIdentityException : IdentityServiceException {
    public AddGroupMemberIllegalWindowsIdentityException(Identity member);
    public AddGroupMemberIllegalWindowsIdentityException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "AddMemberCyclicMembershipException", "Microsoft.VisualStudio.Services.Identity.AddMemberCyclicMembershipException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.AddMemberCyclicMembershipException : IdentityServiceException {
    public AddMemberCyclicMembershipException(string groupName, string memberName);
    public AddMemberCyclicMembershipException(string message, Exception innerException);
    protected AddMemberCyclicMembershipException(SerializationInfo info, StreamingContext context);
}
[ExceptionMappingAttribute("0.0", "3.0", "AddMemberIdentityAlreadyMemberException", "Microsoft.VisualStudio.Services.Identity.AddMemberIdentityAlreadyMemberException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.AddMemberIdentityAlreadyMemberException : IdentityServiceException {
    public AddMemberIdentityAlreadyMemberException(string groupName, string memberName);
    public AddMemberIdentityAlreadyMemberException(string message, Exception innerException);
    protected AddMemberIdentityAlreadyMemberException(SerializationInfo info, StreamingContext context);
}
[ExceptionMappingAttribute("0.0", "3.0", "AddProjectGroupProjectMismatchException", "Microsoft.VisualStudio.Services.Identity.AddProjectGroupProjectMismatchException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.AddProjectGroupProjectMismatchException : IdentityServiceException {
    public AddProjectGroupProjectMismatchException(string groupName, string memberName);
    public AddProjectGroupProjectMismatchException(string message, Exception innerException);
    protected AddProjectGroupProjectMismatchException(SerializationInfo info, StreamingContext context);
}
[ExceptionMappingAttribute("0.0", "3.0", "AddProjectGroupToGlobalGroupException", "Microsoft.VisualStudio.Services.Identity.AddProjectGroupToGlobalGroupException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.AddProjectGroupToGlobalGroupException : IdentityServiceException {
    public AddProjectGroupToGlobalGroupException(string globalGroupName, string projectGroupName);
    public AddProjectGroupToGlobalGroupException(string message, Exception innerException);
    protected AddProjectGroupToGlobalGroupException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.Identity.CannotFindLegacySpsIdentityStoreException : IdentityServiceException {
    public CannotFindLegacySpsIdentityStoreException(string message);
    public CannotFindLegacySpsIdentityStoreException(string message, Exception innerException);
    protected CannotFindLegacySpsIdentityStoreException(SerializationInfo info, StreamingContext context);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Identity.ChangedIdentities : object {
    [CompilerGeneratedAttribute]
private IList`1<Identity> <Identities>k__BackingField;
    [CompilerGeneratedAttribute]
private ChangedIdentitiesContext <SequenceContext>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <MoreData>k__BackingField;
    [DataMemberAttribute]
public IList`1<Identity> Identities { get; private set; }
    [DataMemberAttribute]
public ChangedIdentitiesContext SequenceContext { get; private set; }
    [DataMemberAttribute]
public bool MoreData { get; private set; }
    public ChangedIdentities(IList`1<Identity> identities, ChangedIdentitiesContext sequenceContext);
    public ChangedIdentities(IList`1<Identity> identities, ChangedIdentitiesContext sequenceContext, bool moreData);
    [CompilerGeneratedAttribute]
public IList`1<Identity> get_Identities();
    [CompilerGeneratedAttribute]
private void set_Identities(IList`1<Identity> value);
    [CompilerGeneratedAttribute]
public ChangedIdentitiesContext get_SequenceContext();
    [CompilerGeneratedAttribute]
private void set_SequenceContext(ChangedIdentitiesContext value);
    [CompilerGeneratedAttribute]
public bool get_MoreData();
    [CompilerGeneratedAttribute]
private void set_MoreData(bool value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Identity.ChangedIdentitiesContext : object {
    [CompilerGeneratedAttribute]
private int <IdentitySequenceId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <GroupSequenceId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <OrganizationIdentitySequenceId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <PageSize>k__BackingField;
    private static int UnspecifiedSequenceId;
    [DataMemberAttribute]
public int IdentitySequenceId { get; private set; }
    [DataMemberAttribute]
public int GroupSequenceId { get; private set; }
    [DataMemberAttribute]
public int OrganizationIdentitySequenceId { get; private set; }
    [DataMemberAttribute]
public int PageSize { get; private set; }
    public ChangedIdentitiesContext(int identitySequenceId, int groupSequenceId);
    public ChangedIdentitiesContext(int identitySequenceId, int groupSequenceId, int organizationIdentitySequenceId);
    public ChangedIdentitiesContext(int identitySequenceId, int groupSequenceId, int organizationIdentitySequenceId, int pageSize);
    private static ChangedIdentitiesContext();
    [CompilerGeneratedAttribute]
public int get_IdentitySequenceId();
    [CompilerGeneratedAttribute]
private void set_IdentitySequenceId(int value);
    [CompilerGeneratedAttribute]
public int get_GroupSequenceId();
    [CompilerGeneratedAttribute]
private void set_GroupSequenceId(int value);
    [CompilerGeneratedAttribute]
public int get_OrganizationIdentitySequenceId();
    [CompilerGeneratedAttribute]
private void set_OrganizationIdentitySequenceId(int value);
    [CompilerGeneratedAttribute]
public int get_PageSize();
    [CompilerGeneratedAttribute]
private void set_PageSize(int value);
}
[ResourceAreaAttribute("0B808CEB-EF49-4C5E-9483-600A4ECF1224")]
public class Microsoft.VisualStudio.Services.Identity.Client.CacheHttpClient : VssHttpClientBase {
    public CacheHttpClient(Uri baseUrl, VssCredentials credentials);
    public CacheHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public CacheHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public CacheHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public CacheHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    public Task`1<string> CacheAsync(object data, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Identity.Client.CacheHttpClient/<DeleteAsync>d__6")]
public Task DeleteAsync(string cacheKey, object userState, CancellationToken cancellationToken);
    public Task`1<object> GetAsync(string cacheKey, object userState, CancellationToken cancellationToken);
}
[ResourceAreaAttribute("8A3D49B8-91F0-46EF-B33D-DDA338C25DB3")]
[ClientCircuitBreakerSettingsAttribute("100", "80")]
public class Microsoft.VisualStudio.Services.Identity.Client.IdentityHttpClient : VssHttpClientBase {
    private static Dictionary`2<string, Type> s_translatedExceptions;
    private static ApiResourceVersion s_currentApiVersion;
    private static int maxDescriptors;
    private static int maxIds;
    protected IDictionary`2<string, Type> TranslatedExceptions { get; }
    private static IdentityHttpClient();
    public IdentityHttpClient(Uri baseUrl, VssCredentials credentials);
    public IdentityHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public IdentityHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public IdentityHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public IdentityHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    public sealed virtual Task`1<IdentitiesCollection> ReadIdentitiesAsync(QueryMembership queryMembership, IEnumerable`1<string> propertyNameFilters, bool includeRestrictedVisibility, object userState, CancellationToken cancellationToken);
    public virtual Task`1<IdentitiesCollection> ReadIdentitiesAsync(IList`1<IdentityDescriptor> descriptors, QueryMembership queryMembership, IEnumerable`1<string> propertyNameFilters, bool includeRestrictedVisibility, object userState, CancellationToken cancellationToken);
    public virtual Task`1<IdentitiesCollection> ReadIdentitiesAsync(IList`1<IdentityDescriptor> descriptors, RequestHeadersContext requestHeadersContext, QueryMembership queryMembership, IEnumerable`1<string> propertyNameFilters, bool includeRestrictedVisibility, object userState, CancellationToken cancellationToken);
    public virtual Task`1<IdentitiesCollection> ReadIdentitiesAsync(IList`1<SocialDescriptor> socialDescriptors, QueryMembership queryMembership, IEnumerable`1<string> propertyNameFilters, bool includeRestrictedVisibility, object userState, CancellationToken cancellationToken);
    internal virtual Task`1<IdentitiesCollection> ReadIdentitiesAsync(IList`1<SocialDescriptor> socialDescriptors, RequestHeadersContext requestHeadersContext, QueryMembership queryMembership, IEnumerable`1<string> propertyNameFilters, bool includeRestrictedVisibility, object userState, CancellationToken cancellationToken);
    public virtual Task`1<IdentitiesCollection> ReadIdentitiesAsync(IList`1<SubjectDescriptor> subjectDescriptors, QueryMembership queryMembership, IEnumerable`1<string> propertyNameFilters, bool includeRestrictedVisibility, object userState, CancellationToken cancellationToken);
    internal virtual Task`1<IdentitiesCollection> ReadIdentitiesAsync(IList`1<SubjectDescriptor> subjectDescriptors, RequestHeadersContext requestHeadersContext, QueryMembership queryMembership, IEnumerable`1<string> propertyNameFilters, bool includeRestrictedVisibility, object userState, CancellationToken cancellationToken);
    public virtual Task`1<IdentitiesCollection> ReadIdentitiesAsync(IList`1<Guid> identityIds, QueryMembership queryMembership, IEnumerable`1<string> propertyNameFilters, bool includeRestrictedVisibility, object userState, CancellationToken cancellationToken);
    internal virtual Task`1<IdentitiesCollection> ReadIdentitiesAsync(IList`1<Guid> identityIds, RequestHeadersContext requestHeadersContext, QueryMembership queryMembership, IEnumerable`1<string> propertyNameFilters, bool includeRestrictedVisibility, object userState, CancellationToken cancellationToken);
    public sealed virtual Task`1<IdentitiesCollection> ReadIdentitiesAsync(IdentitySearchFilter searchFilter, string filterValue, QueryMembership queryMembership, IEnumerable`1<string> propertyNameFilters, object userState, CancellationToken cancellationToken);
    public virtual Task`1<IdentitiesCollection> ReadIdentitiesAsync(IdentitySearchFilter searchFilter, string filterValue, ReadIdentitiesOptions options, QueryMembership queryMembership, IEnumerable`1<string> propertyNameFilters, object userState, CancellationToken cancellationToken);
    public virtual Task`1<IdentitiesCollection> ReadIdentitiesAsync(Guid scopeId, QueryMembership queryMembership, IEnumerable`1<string> propertyNameFilters, object userState, CancellationToken cancellationToken);
    public sealed virtual Task`1<Identity> ReadIdentityAsync(string identityPuid, QueryMembership queryMembership, IEnumerable`1<string> propertyNameFilters, object userState, CancellationToken cancellationToken);
    public sealed virtual Task`1<Identity> ReadIdentityAsync(Guid identityId, QueryMembership queryMembership, IEnumerable`1<string> propertyNameFilters, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Identity.Client.IdentityHttpClient/<UpdateIdentitiesAsync>d__20")]
public sealed virtual Task`1<IEnumerable`1<IdentityUpdateData>> UpdateIdentitiesAsync(IList`1<Identity> identities, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Identity.Client.IdentityHttpClient/<UpdateIdentitiesAsync>d__21")]
public sealed virtual Task`1<IEnumerable`1<IdentityUpdateData>> UpdateIdentitiesAsync(IList`1<Identity> identities, bool allowMetaDataUpdate, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Identity.Client.IdentityHttpClient/<UpdateIdentityAsync>d__22")]
public sealed virtual Task`1<HttpResponseMessage> UpdateIdentityAsync(Identity identity, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Identity.Client.IdentityHttpClient/<SwapIdentityAsync>d__23")]
public sealed virtual Task`1<HttpResponseMessage> SwapIdentityAsync(Guid id1, Guid id2, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Identity.Client.IdentityHttpClient/<GetIdentityChangesAsync>d__24")]
public sealed virtual Task`1<ChangedIdentities> GetIdentityChangesAsync(int identitySequenceId, int groupSequenceId, Guid scopeId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Identity.Client.IdentityHttpClient/<GetIdentityChangesAsync>d__25")]
public sealed virtual Task`1<ChangedIdentities> GetIdentityChangesAsync(int identitySequenceId, int groupSequenceId, int organizationIdentitySequenceId, Guid scopeId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Identity.Client.IdentityHttpClient/<GetIdentityChangesAsync>d__26")]
public virtual Task`1<ChangedIdentities> GetIdentityChangesAsync(int identitySequenceId, int groupSequenceId, int organizationIdentitySequenceId, int pageSize, Guid scopeId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Identity.Client.IdentityHttpClient/<GetUserIdentityIdsByDomainIdAsync>d__27")]
public sealed virtual Task`1<IList`1<Guid>> GetUserIdentityIdsByDomainIdAsync(Guid domainId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Identity.Client.IdentityHttpClient/<GetIdentitySelfAsync>d__28")]
public sealed virtual Task`1<IdentitySelf> GetIdentitySelfAsync(object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Identity.Client.IdentityHttpClient/<GetTenant>d__29")]
public sealed virtual Task`1<TenantInfo> GetTenant(string tenantId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Identity.Client.IdentityHttpClient/<CreateFrameworkIdentityAsync>d__30")]
public sealed virtual Task`1<Identity> CreateFrameworkIdentityAsync(FrameworkIdentityType identityType, string role, string identifier, string displayName, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Identity.Client.IdentityHttpClient/<ListGroupsAsync>d__31")]
public virtual Task`1<IdentitiesCollection> ListGroupsAsync(Guid[] scopeIds, bool recurse, bool deleted, IEnumerable`1<string> propertyNameFilters, object userState, CancellationToken cancellationToken);
    public sealed virtual Task`1<HttpResponseMessage> DeleteGroupAsync(IdentityDescriptor descriptor, object userState, CancellationToken cancellationToken);
    public sealed virtual Task`1<HttpResponseMessage> DeleteGroupAsync(Guid groupId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Identity.Client.IdentityHttpClient/<CreateGroupsAsync>d__34")]
public sealed virtual Task`1<IdentitiesCollection> CreateGroupsAsync(Guid scopeId, IList`1<Identity> groups, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Identity.Client.IdentityHttpClient/<GetScopeAsync>d__35")]
public sealed virtual Task`1<IdentityScope> GetScopeAsync(string scopeName, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Identity.Client.IdentityHttpClient/<GetScopeAsync>d__36")]
public virtual Task`1<IdentityScope> GetScopeAsync(Guid scopeId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Identity.Client.IdentityHttpClient/<CreateScopeAsync>d__37")]
public sealed virtual Task`1<IdentityScope> CreateScopeAsync(Guid scopeId, Guid parentScopeId, GroupScopeType scopeType, string scopeName, string adminGroupName, string adminGroupDescription, Guid creatorId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Identity.Client.IdentityHttpClient/<RenameScopeAsync>d__38")]
public sealed virtual Task`1<HttpResponseMessage> RenameScopeAsync(Guid scopeId, string newName, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Identity.Client.IdentityHttpClient/<DeleteScopeAsync>d__39")]
public sealed virtual Task`1<HttpResponseMessage> DeleteScopeAsync(Guid scopeId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Identity.Client.IdentityHttpClient/<RestoreGroupScopeAsync>d__40")]
public sealed virtual Task`1<HttpResponseMessage> RestoreGroupScopeAsync(Guid scopeId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Identity.Client.IdentityHttpClient/<UpdateScopeAsync>d__41")]
private Task`1<HttpResponseMessage> UpdateScopeAsync(Guid scopeId, string property, object value, object userState, CancellationToken cancellationToken);
    public sealed virtual Task`1<bool> AddMemberToGroupAsync(IdentityDescriptor containerId, Guid memberId, object userState, CancellationToken cancellationToken);
    public sealed virtual Task`1<bool> AddMemberToGroupAsync(IdentityDescriptor containerId, IdentityDescriptor memberId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Identity.Client.IdentityHttpClient/<RemoveMemberFromGroupAsync>d__44")]
public sealed virtual Task`1<bool> RemoveMemberFromGroupAsync(IdentityDescriptor containerId, IdentityDescriptor memberId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Identity.Client.IdentityHttpClient/<ForceRemoveMemberFromGroupAsync>d__45")]
public sealed virtual Task`1<bool> ForceRemoveMemberFromGroupAsync(IdentityDescriptor containerId, IdentityDescriptor memberId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Identity.Client.IdentityHttpClient/<IsMember>d__46")]
public sealed virtual Task`1<bool> IsMember(IdentityDescriptor containerId, IdentityDescriptor memberId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Identity.Client.IdentityHttpClient/<GetIdentitySnapshotAsync>d__47")]
public sealed virtual Task`1<IdentitySnapshot> GetIdentitySnapshotAsync(Guid scopeId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Identity.Client.IdentityHttpClient/<GetSignoutToken>d__48")]
public sealed virtual Task`1<AccessTokenResult> GetSignoutToken(object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Identity.Client.IdentityHttpClient/<GetSignedInToken>d__49")]
public sealed virtual Task`1<AccessTokenResult> GetSignedInToken(object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Identity.Client.IdentityHttpClient/<GetMaxSequenceIdAsync>d__50")]
public sealed virtual Task`1<int> GetMaxSequenceIdAsync(object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Identity.Client.IdentityHttpClient/<CreateOrBindIdentity>d__51")]
public sealed virtual Task`1<Identity> CreateOrBindIdentity(Identity sourceIdentity, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Identity.Client.IdentityHttpClient/<GetDescriptorByIdAsync>d__52")]
public sealed virtual Task`1<IdentityDescriptor> GetDescriptorByIdAsync(Guid id, Nullable`1<bool> isMasterId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Identity.Client.IdentityHttpClient/<TransferIdentityRightsBatchAsync>d__53")]
public sealed virtual Task TransferIdentityRightsBatchAsync(IdentityRightsTransferData identityRightsTransferData, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Identity.Client.IdentityHttpClient/<TransferIdentityRightsSingleAsync>d__54")]
public sealed virtual Task TransferIdentityRightsSingleAsync(Guid sourceId, Guid targetMasterId, Guid sourceMasterId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Identity.Client.IdentityHttpClient/<ListUsersAsync>d__55")]
public sealed virtual Task`1<PagedIdentities> ListUsersAsync(string scopeDescriptor, string continuationToken, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Identity.Client.IdentityHttpClient/<ReadIdentitiesAsyncInternal>d__56")]
private Task`1<IdentitiesCollection> ReadIdentitiesAsyncInternal(List`1<KeyValuePair`2<string, string>> searchQuery, QueryMembership queryMembership, IEnumerable`1<string> propertyNameFilters, bool includeRestrictedVisibility, RequestHeadersContext requestHeadersContext, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Identity.Client.IdentityHttpClient/<ReadIdentitiesBatchAsyncInternal>d__57")]
private Task`1<IdentitiesCollection> ReadIdentitiesBatchAsyncInternal(IList`1<SocialDescriptor> socialDescriptors, QueryMembership queryMembership, IEnumerable`1<string> propertyNameFilters, bool includeRestrictedVisibility, RequestHeadersContext requestHeadersContext, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Identity.Client.IdentityHttpClient/<ReadIdentitiesBatchAsyncInternal>d__58")]
private Task`1<IdentitiesCollection> ReadIdentitiesBatchAsyncInternal(IList`1<SubjectDescriptor> subjectDescriptors, QueryMembership queryMembership, IEnumerable`1<string> propertyNameFilters, bool includeRestrictedVisibility, RequestHeadersContext requestHeadersContext, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Identity.Client.IdentityHttpClient/<ReadIdentitiesBatchAsyncInternal>d__59")]
private Task`1<IdentitiesCollection> ReadIdentitiesBatchAsyncInternal(IList`1<IdentityDescriptor> descriptors, QueryMembership queryMembership, IEnumerable`1<string> propertyNameFilters, bool includeRestrictedVisibility, RequestHeadersContext requestHeadersContext, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Identity.Client.IdentityHttpClient/<ReadIdentitiesBatchAsyncInternal>d__60")]
private Task`1<IdentitiesCollection> ReadIdentitiesBatchAsyncInternal(IList`1<Guid> identityIds, QueryMembership queryMembership, IEnumerable`1<string> propertyNameFilters, bool includeRestrictedVisibility, object userState, RequestHeadersContext requestHeadersContext, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Identity.Client.IdentityHttpClient/<ReadIdentityAsyncInternal>d__61")]
private Task`1<Identity> ReadIdentityAsyncInternal(string identityId, QueryMembership queryMembership, IEnumerable`1<string> propertyNameFilters, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Identity.Client.IdentityHttpClient/<DeleteGroupAsyncInternal>d__62")]
private Task`1<HttpResponseMessage> DeleteGroupAsyncInternal(string groupId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Identity.Client.IdentityHttpClient/<AddMemberToGroupAsyncInternal>d__63")]
public sealed virtual Task`1<bool> AddMemberToGroupAsyncInternal(object routeParams, IEnumerable`1<KeyValuePair`2<string, string>> query, object userState, CancellationToken cancellationToken);
    private void AppendQueryString(List`1<KeyValuePair`2<string, string>> queryParams, QueryMembership queryMembership, IEnumerable`1<string> propertyNameFilters, bool includeRestrictedVisibility);
    private static string SerializeDescriptor(IdentityDescriptor descriptor);
    protected virtual IDictionary`2<string, Type> get_TranslatedExceptions();
}
[ResourceAreaAttribute("8A3D49B8-91F0-46EF-B33D-DDA338C25DB3")]
[VssClientServiceImplementationAttribute("Microsoft.VisualStudio.Services.Identity.Client.IdentityHttpClient")]
public interface Microsoft.VisualStudio.Services.Identity.Client.IIdentityHttpClient {
    public abstract virtual Task`1<bool> AddMemberToGroupAsync(IdentityDescriptor containerId, Guid memberId, object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<bool> AddMemberToGroupAsync(IdentityDescriptor containerId, IdentityDescriptor memberId, object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<bool> AddMemberToGroupAsyncInternal(object routeParams, IEnumerable`1<KeyValuePair`2<string, string>> query, object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<Identity> CreateFrameworkIdentityAsync(FrameworkIdentityType identityType, string role, string identifier, string displayName, object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<IdentitiesCollection> CreateGroupsAsync(Guid scopeId, IList`1<Identity> groups, object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<Identity> CreateOrBindIdentity(Identity sourceIdentity, object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<IdentityScope> CreateScopeAsync(Guid scopeId, Guid parentScopeId, GroupScopeType scopeType, string scopeName, string adminGroupName, string adminGroupDescription, Guid creatorId, object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpResponseMessage> DeleteGroupAsync(Guid groupId, object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpResponseMessage> DeleteGroupAsync(IdentityDescriptor descriptor, object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpResponseMessage> DeleteScopeAsync(Guid scopeId, object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<bool> ForceRemoveMemberFromGroupAsync(IdentityDescriptor containerId, IdentityDescriptor memberId, object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<IdentityDescriptor> GetDescriptorByIdAsync(Guid id, Nullable`1<bool> isMasterId, object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<ChangedIdentities> GetIdentityChangesAsync(int identitySequenceId, int groupSequenceId, Guid scopeId, object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<ChangedIdentities> GetIdentityChangesAsync(int identitySequenceId, int groupSequenceId, int organizationIdentitySequenceId, Guid scopeId, object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<ChangedIdentities> GetIdentityChangesAsync(int identitySequenceId, int groupSequenceId, int organizationIdentitySequenceId, int pageSize, Guid scopeId, object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<IdentitySelf> GetIdentitySelfAsync(object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<IdentitySnapshot> GetIdentitySnapshotAsync(Guid scopeId, object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<int> GetMaxSequenceIdAsync(object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<IdentityScope> GetScopeAsync(Guid scopeId, object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<IdentityScope> GetScopeAsync(string scopeName, object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<AccessTokenResult> GetSignedInToken(object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<AccessTokenResult> GetSignoutToken(object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<TenantInfo> GetTenant(string tenantId, object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<IList`1<Guid>> GetUserIdentityIdsByDomainIdAsync(Guid domainId, object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<bool> IsMember(IdentityDescriptor containerId, IdentityDescriptor memberId, object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<IdentitiesCollection> ListGroupsAsync(Guid[] scopeIds, bool recurse, bool deleted, IEnumerable`1<string> propertyNameFilters, object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<PagedIdentities> ListUsersAsync(string scopeDescriptor, string continuationToken, object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<IdentitiesCollection> ReadIdentitiesAsync(QueryMembership queryMembership, IEnumerable`1<string> propertyNameFilters, bool includeRestrictedVisibility, object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<IdentitiesCollection> ReadIdentitiesAsync(Guid scopeId, QueryMembership queryMembership, IEnumerable`1<string> propertyNameFilters, object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<IdentitiesCollection> ReadIdentitiesAsync(IdentitySearchFilter searchFilter, string filterValue, QueryMembership queryMembership, IEnumerable`1<string> propertyNameFilters, object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<IdentitiesCollection> ReadIdentitiesAsync(IdentitySearchFilter searchFilter, string filterValue, ReadIdentitiesOptions options, QueryMembership queryMembership, IEnumerable`1<string> propertyNameFilters, object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<IdentitiesCollection> ReadIdentitiesAsync(IList`1<Guid> identityIds, QueryMembership queryMembership, IEnumerable`1<string> propertyNameFilters, bool includeRestrictedVisibility, object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<IdentitiesCollection> ReadIdentitiesAsync(IList`1<IdentityDescriptor> descriptors, QueryMembership queryMembership, IEnumerable`1<string> propertyNameFilters, bool includeRestrictedVisibility, object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<IdentitiesCollection> ReadIdentitiesAsync(IList`1<IdentityDescriptor> descriptors, RequestHeadersContext requestHeadersContext, QueryMembership queryMembership, IEnumerable`1<string> propertyNameFilters, bool includeRestrictedVisibility, object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<IdentitiesCollection> ReadIdentitiesAsync(IList`1<SocialDescriptor> socialDescriptors, QueryMembership queryMembership, IEnumerable`1<string> propertyNameFilters, bool includeRestrictedVisibility, object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<IdentitiesCollection> ReadIdentitiesAsync(IList`1<SubjectDescriptor> subjectDescriptors, QueryMembership queryMembership, IEnumerable`1<string> propertyNameFilters, bool includeRestrictedVisibility, object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<Identity> ReadIdentityAsync(Guid identityId, QueryMembership queryMembership, IEnumerable`1<string> propertyNameFilters, object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<Identity> ReadIdentityAsync(string identityPuid, QueryMembership queryMembership, IEnumerable`1<string> propertyNameFilters, object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<bool> RemoveMemberFromGroupAsync(IdentityDescriptor containerId, IdentityDescriptor memberId, object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpResponseMessage> RenameScopeAsync(Guid scopeId, string newName, object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpResponseMessage> RestoreGroupScopeAsync(Guid scopeId, object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpResponseMessage> SwapIdentityAsync(Guid id1, Guid id2, object userState, CancellationToken cancellationToken);
    public abstract virtual Task TransferIdentityRightsBatchAsync(IdentityRightsTransferData identityRightsTransferData, object userState, CancellationToken cancellationToken);
    public abstract virtual Task TransferIdentityRightsSingleAsync(Guid sourceId, Guid targetMasterId, Guid sourceMasterId, object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<IEnumerable`1<IdentityUpdateData>> UpdateIdentitiesAsync(IList`1<Identity> identities, object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<IEnumerable`1<IdentityUpdateData>> UpdateIdentitiesAsync(IList`1<Identity> identities, bool allowMetaDataUpdate, object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<HttpResponseMessage> UpdateIdentityAsync(Identity identity, object userState, CancellationToken cancellationToken);
}
[ResourceAreaAttribute("0B808CEB-EF49-4C5E-9483-600A4ECF1224")]
public class Microsoft.VisualStudio.Services.Identity.Client.PropertyCacheHttpClient : VssHttpClientBase {
    private static Dictionary`2<string, Type> s_translatedExceptions;
    private static ApiResourceVersion s_currentApiVersion;
    protected IDictionary`2<string, Type> TranslatedExceptions { get; }
    private static PropertyCacheHttpClient();
    public PropertyCacheHttpClient(Uri baseUrl, VssCredentials credentials);
    public PropertyCacheHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public PropertyCacheHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public PropertyCacheHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public PropertyCacheHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Identity.Client.PropertyCacheHttpClient/<Cache>d__6`1")]
public Task`1<string> Cache(T value, object userState, CancellationToken cancellationToken);
    protected virtual IDictionary`2<string, Type> get_TranslatedExceptions();
}
public static class Microsoft.VisualStudio.Services.Identity.Client.PropertyCacheResourceIds : object {
    public static string AreaName;
    public static string AreaId;
    public static string PropertyCacheResource;
    public static Guid PropertyCache;
    private static PropertyCacheResourceIds();
}
public class Microsoft.VisualStudio.Services.Identity.CollectionShardingException : IdentityServiceException {
    public CollectionShardingException(string message);
    public CollectionShardingException(string message, Exception innerException);
    protected CollectionShardingException(SerializationInfo info, StreamingContext context);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Identity.CreateGroupsInfo : object {
    [CompilerGeneratedAttribute]
private Guid <ScopeId>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Identity> <Groups>k__BackingField;
    [DataMemberAttribute]
public Guid ScopeId { get; private set; }
    [DataMemberAttribute]
public List`1<Identity> Groups { get; private set; }
    public CreateGroupsInfo(Guid scopeId, IList`1<Identity> groups);
    [CompilerGeneratedAttribute]
public Guid get_ScopeId();
    [CompilerGeneratedAttribute]
private void set_ScopeId(Guid value);
    [CompilerGeneratedAttribute]
public List`1<Identity> get_Groups();
    [CompilerGeneratedAttribute]
private void set_Groups(List`1<Identity> value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Identity.CreateScopeInfo : object {
    [CompilerGeneratedAttribute]
private Guid <ParentScopeId>k__BackingField;
    [CompilerGeneratedAttribute]
private GroupScopeType <ScopeType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ScopeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AdminGroupName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AdminGroupDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <CreatorId>k__BackingField;
    [DataMemberAttribute]
public Guid ParentScopeId { get; private set; }
    [DataMemberAttribute]
public GroupScopeType ScopeType { get; private set; }
    [DataMemberAttribute]
public string ScopeName { get; private set; }
    [DataMemberAttribute]
public string AdminGroupName { get; private set; }
    [DataMemberAttribute]
public string AdminGroupDescription { get; private set; }
    [DataMemberAttribute]
public Guid CreatorId { get; private set; }
    internal CreateScopeInfo(Guid parentScopeId, GroupScopeType scopeType, string scopeName, string adminGroupName, string adminGroupDescription, Guid creatorId);
    [CompilerGeneratedAttribute]
public Guid get_ParentScopeId();
    [CompilerGeneratedAttribute]
private void set_ParentScopeId(Guid value);
    [CompilerGeneratedAttribute]
public GroupScopeType get_ScopeType();
    [CompilerGeneratedAttribute]
private void set_ScopeType(GroupScopeType value);
    [CompilerGeneratedAttribute]
public string get_ScopeName();
    [CompilerGeneratedAttribute]
private void set_ScopeName(string value);
    [CompilerGeneratedAttribute]
public string get_AdminGroupName();
    [CompilerGeneratedAttribute]
private void set_AdminGroupName(string value);
    [CompilerGeneratedAttribute]
public string get_AdminGroupDescription();
    [CompilerGeneratedAttribute]
private void set_AdminGroupDescription(string value);
    [CompilerGeneratedAttribute]
public Guid get_CreatorId();
    [CompilerGeneratedAttribute]
private void set_CreatorId(Guid value);
}
[ExceptionMappingAttribute("0.0", "3.0", "DuplicateIdentitiesFoundException", "Microsoft.VisualStudio.Services.Identity.DuplicateIdentitiesFoundException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.DuplicateIdentitiesFoundException : IdentityServiceException {
    public DuplicateIdentitiesFoundException(string message);
    public DuplicateIdentitiesFoundException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "DynamicIdentityTypeCreationNotSupportedException", "Microsoft.VisualStudio.Services.Identity.DynamicIdentityTypeCreationNotSupportedException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.DynamicIdentityTypeCreationNotSupportedException : IdentityServiceException {
    public DynamicIdentityTypeCreationNotSupportedException(string message, Exception innerException);
}
public class Microsoft.VisualStudio.Services.Identity.FailedTransferIdentityRightsException : IdentityServiceException {
    public FailedTransferIdentityRightsException(string message);
    public FailedTransferIdentityRightsException(string message, Exception innerException);
    protected FailedTransferIdentityRightsException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.Identity.FallbackIdentityOperationNotAllowedException : IdentityServiceException {
    public FallbackIdentityOperationNotAllowedException(string message);
    public FallbackIdentityOperationNotAllowedException(string message, Exception innerException);
    protected FallbackIdentityOperationNotAllowedException(SerializationInfo info, StreamingContext context);
}
[ExceptionMappingAttribute("0.0", "3.0", "FindGroupSidDoesNotExistException", "Microsoft.VisualStudio.Services.Identity.FindGroupSidDoesNotExistException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.FindGroupSidDoesNotExistException : IdentityServiceException {
    public FindGroupSidDoesNotExistException(string sid);
    public FindGroupSidDoesNotExistException(string message, Exception innerException);
    protected FindGroupSidDoesNotExistException(SerializationInfo info, StreamingContext context);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Identity.FrameworkIdentityInfo : object {
    [CompilerGeneratedAttribute]
private FrameworkIdentityType <IdentityType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Role>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Identifier>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [DataMemberAttribute]
public FrameworkIdentityType IdentityType { get; public set; }
    [DataMemberAttribute]
public string Role { get; public set; }
    [DataMemberAttribute]
public string Identifier { get; public set; }
    [DataMemberAttribute]
public string DisplayName { get; public set; }
    [CompilerGeneratedAttribute]
public FrameworkIdentityType get_IdentityType();
    [CompilerGeneratedAttribute]
public void set_IdentityType(FrameworkIdentityType value);
    [CompilerGeneratedAttribute]
public string get_Role();
    [CompilerGeneratedAttribute]
public void set_Role(string value);
    [CompilerGeneratedAttribute]
public string get_Identifier();
    [CompilerGeneratedAttribute]
public void set_Identifier(string value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
}
public enum Microsoft.VisualStudio.Services.Identity.FrameworkIdentityType : Enum {
    public int value__;
    public static FrameworkIdentityType None;
    public static FrameworkIdentityType ServiceIdentity;
    public static FrameworkIdentityType AggregateIdentity;
    public static FrameworkIdentityType ImportedIdentity;
}
[ExceptionMappingAttribute("0.0", "3.0", "GroupCreationException", "Microsoft.VisualStudio.Services.Identity.GroupCreationException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.GroupCreationException : IdentityServiceException {
    public GroupCreationException(string displayName, string projectName);
    public GroupCreationException(string message, Exception innerException);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Identity.GroupMembership : object {
    [CompilerGeneratedAttribute]
private Guid <QueriedId>k__BackingField;
    [CompilerGeneratedAttribute]
private IdentityDescriptor <Descriptor>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Active>k__BackingField;
    private Guid m_id;
    [DataMemberAttribute]
public Guid QueriedId { get; public set; }
    [DataMemberAttribute]
public Guid Id { get; public set; }
    [DataMemberAttribute]
public IdentityDescriptor Descriptor { get; public set; }
    [DataMemberAttribute]
public bool Active { get; public set; }
    public GroupMembership(Guid queriedId, Guid id, IdentityDescriptor descriptor);
    [CompilerGeneratedAttribute]
public Guid get_QueriedId();
    [CompilerGeneratedAttribute]
public void set_QueriedId(Guid value);
    public Guid get_Id();
    public void set_Id(Guid value);
    [CompilerGeneratedAttribute]
public IdentityDescriptor get_Descriptor();
    [CompilerGeneratedAttribute]
public void set_Descriptor(IdentityDescriptor value);
    [CompilerGeneratedAttribute]
public bool get_Active();
    [CompilerGeneratedAttribute]
public void set_Active(bool value);
    public GroupMembership Clone();
    public virtual string ToString();
}
[CollectionDataContractAttribute]
public class Microsoft.VisualStudio.Services.Identity.GroupMembershipCollection : List`1<GroupMembership> {
    public GroupMembershipCollection(IList`1<GroupMembership> source);
}
[ExceptionMappingAttribute("0.0", "3.0", "GroupNameIsReservedBySystemException", "Microsoft.VisualStudio.Services.Identity.GroupNameIsReservedBySystemException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.GroupNameIsReservedBySystemException : IdentityServiceException {
    public GroupNameIsReservedBySystemException(string message);
    public GroupNameIsReservedBySystemException(string message, Exception innerException);
    protected GroupNameIsReservedBySystemException(SerializationInfo info, StreamingContext context);
}
[ExceptionMappingAttribute("0.0", "3.0", "GroupNameNotRecognizedException", "Microsoft.VisualStudio.Services.Identity.GroupNameNotRecognizedException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.GroupNameNotRecognizedException : IdentityServiceException {
    public GroupNameNotRecognizedException(string message, Exception innerException);
    public GroupNameNotRecognizedException(string groupName);
    protected GroupNameNotRecognizedException(SerializationInfo info, StreamingContext context);
}
[ExceptionMappingAttribute("0.0", "3.0", "GroupRenameException", "Microsoft.VisualStudio.Services.Identity.GroupRenameException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.GroupRenameException : IdentityServiceException {
    public GroupRenameException(string displayName);
    public GroupRenameException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "GroupScopeCreationException", "Microsoft.VisualStudio.Services.Identity.GroupScopeCreationException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.GroupScopeCreationException : IdentityServiceException {
    public GroupScopeCreationException(string message, Exception innerException);
    public GroupScopeCreationException(string scopeId);
    protected GroupScopeCreationException(SerializationInfo info, StreamingContext context);
}
[ExceptionMappingAttribute("0.0", "3.0", "GroupScopeDoesNotExistException", "Microsoft.VisualStudio.Services.Identity.GroupScopeDoesNotExistException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.GroupScopeDoesNotExistException : IdentityServiceException {
    public GroupScopeDoesNotExistException(string projectUri);
    public GroupScopeDoesNotExistException(Guid scopeId);
    public GroupScopeDoesNotExistException(string message, Exception innerException);
    protected GroupScopeDoesNotExistException(SerializationInfo info, StreamingContext context);
}
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.Identity.GroupScopeType : Enum {
    public int value__;
    [EnumMemberAttribute]
[XmlEnumAttribute("0")]
public static GroupScopeType Generic;
    [EnumMemberAttribute]
[XmlEnumAttribute("1")]
public static GroupScopeType ServiceHost;
    [EnumMemberAttribute]
[XmlEnumAttribute("2")]
public static GroupScopeType TeamProject;
}
[ExceptionMappingAttribute("0.0", "3.0", "HistoricalIdentityNotFoundException", "Microsoft.VisualStudio.Services.Identity.HistoricalIdentityNotFoundException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.HistoricalIdentityNotFoundException : IdentityServiceException {
    public HistoricalIdentityNotFoundException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "IdenittyInvalidTypeIdException", "Microsoft.VisualStudio.Services.Identity.IdenittyInvalidTypeIdException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
[ObsoleteAttribute("This exception has been renamed to IdentityInvalidTypeIdException")]
public class Microsoft.VisualStudio.Services.Identity.IdenittyInvalidTypeIdException : IdentityServiceException {
    public IdenittyInvalidTypeIdException(string message);
}
[CollectionDataContractAttribute]
public class Microsoft.VisualStudio.Services.Identity.IdentitiesCollection : List`1<Identity> {
    public IdentitiesCollection(IList`1<Identity> source);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Identity.Identity : IdentityBase {
    public Guid NamespaceId { get; }
    public int RequiredPermissions { get; }
    private Identity(PropertiesCollection properties);
    public Identity Clone(bool includeMemberships);
    public Identity Clone();
    internal static Identity FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public sealed virtual Guid get_NamespaceId();
    public sealed virtual int get_RequiredPermissions();
    public sealed virtual string GetToken();
    private static ICollection`1<IdentityDescriptor> CloneDescriptors(IEnumerable`1<IdentityDescriptor> descriptors);
}
[ExceptionMappingAttribute("0.0", "3.0", "IdentityAccountNameAlreadyInUseException", "Microsoft.VisualStudio.Services.Identity.IdentityAccountNameAlreadyInUseException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.IdentityAccountNameAlreadyInUseException : IdentityServiceException {
    public IdentityAccountNameAlreadyInUseException(string oneAccountName, int collisionCount);
    public IdentityAccountNameAlreadyInUseException(string message, Exception innerException);
    private static string BuildExceptionMessage(string oneAccountName, int collisionCount);
}
[ExceptionMappingAttribute("0.0", "3.0", "IdentityAccountNameCollisionRepairFailedException", "Microsoft.VisualStudio.Services.Identity.IdentityAccountNameCollisionRepairFailedException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.IdentityAccountNameCollisionRepairFailedException : IdentityServiceException {
    public IdentityAccountNameCollisionRepairFailedException(string accountName);
    public IdentityAccountNameCollisionRepairFailedException(string accountName, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "IdentityAccountNameCollisionRepairUnsafeException", "Microsoft.VisualStudio.Services.Identity.IdentityAccountNameCollisionRepairUnsafeException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.IdentityAccountNameCollisionRepairUnsafeException : IdentityServiceException {
    public IdentityAccountNameCollisionRepairUnsafeException(string accountName);
    public IdentityAccountNameCollisionRepairUnsafeException(string accountName, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "IdentityAliasAlreadyInUseException", "Microsoft.VisualStudio.Services.Identity.IdentityAliasAlreadyInUseException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.IdentityAliasAlreadyInUseException : IdentityServiceException {
    public IdentityAliasAlreadyInUseException(string conflictingAlias);
    public IdentityAliasAlreadyInUseException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "IdentityAlreadyExistsException", "Microsoft.VisualStudio.Services.Identity.IdentityAlreadyExistsException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.IdentityAlreadyExistsException : IdentityServiceException {
    public IdentityAlreadyExistsException(string message);
    public IdentityAlreadyExistsException(string message, Exception innerException);
}
[DebuggerDisplayAttribute("Name: {DisplayName} ID:{Id}")]
[EditorBrowsableAttribute("1")]
[DataContractAttribute]
public abstract class Microsoft.VisualStudio.Services.Identity.IdentityBase : object {
    [CompilerGeneratedAttribute]
private Guid <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private IdentityDescriptor <Descriptor>k__BackingField;
    [CompilerGeneratedAttribute]
private SubjectDescriptor <SubjectDescriptor>k__BackingField;
    [CompilerGeneratedAttribute]
private SocialDescriptor <SocialDescriptor>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProviderDisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CustomDisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsActive>k__BackingField;
    [CompilerGeneratedAttribute]
private int <UniqueUserId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsContainer>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<IdentityDescriptor> <Members>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<IdentityDescriptor> <MemberOf>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<Guid> <MemberIds>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<Guid> <MemberOfIds>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <MasterId>k__BackingField;
    [CompilerGeneratedAttribute]
private PropertiesCollection <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ResourceVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MetaTypeId>k__BackingField;
    private bool m_hasModifiedProperties;
    [DataMemberAttribute]
public Guid Id { get; public set; }
    [DataMemberAttribute]
public IdentityDescriptor Descriptor { get; public set; }
    [DataMemberAttribute]
public SubjectDescriptor SubjectDescriptor { get; public set; }
    [DataMemberAttribute]
public SocialDescriptor SocialDescriptor { get; public set; }
    [DataMemberAttribute]
public string ProviderDisplayName { get; public set; }
    [DataMemberAttribute]
public string CustomDisplayName { get; public set; }
    public string DisplayName { get; }
    [DataMemberAttribute]
public bool IsActive { get; public set; }
    [DataMemberAttribute]
public int UniqueUserId { get; public set; }
    [DataMemberAttribute]
public bool IsContainer { get; public set; }
    [DataMemberAttribute]
public ICollection`1<IdentityDescriptor> Members { get; public set; }
    [DataMemberAttribute]
public ICollection`1<IdentityDescriptor> MemberOf { get; public set; }
    [DataMemberAttribute]
[EditorBrowsableAttribute("1")]
public ICollection`1<Guid> MemberIds { get; public set; }
    [IgnoreDataMemberAttribute]
[EditorBrowsableAttribute("1")]
public ICollection`1<Guid> MemberOfIds { get; public set; }
    [EditorBrowsableAttribute("1")]
[DataMemberAttribute]
public Guid MasterId { get; public set; }
    [DataMemberAttribute]
public PropertiesCollection Properties { get; private set; }
    [IgnoreDataMemberAttribute]
[EditorBrowsableAttribute("1")]
public bool ValidateProperties { get; public set; }
    [IgnoreDataMemberAttribute]
[EditorBrowsableAttribute("1")]
public bool IsExternalUser { get; }
    [IgnoreDataMemberAttribute]
public Guid LocalScopeId { get; }
    [IgnoreDataMemberAttribute]
[EditorBrowsableAttribute("1")]
public bool IsBindPending { get; }
    [IgnoreDataMemberAttribute]
[EditorBrowsableAttribute("1")]
public bool IsClaims { get; }
    [IgnoreDataMemberAttribute]
[EditorBrowsableAttribute("1")]
public bool IsAADServicePrincipal { get; }
    [IgnoreDataMemberAttribute]
[EditorBrowsableAttribute("1")]
public bool IsImported { get; }
    [IgnoreDataMemberAttribute]
[EditorBrowsableAttribute("1")]
public bool IsServiceIdentity { get; }
    [DataMemberAttribute]
public int ResourceVersion { get; public set; }
    [DataMemberAttribute]
public int MetaTypeId { get; public set; }
    public IdentityMetaType MetaType { get; public set; }
    [IgnoreDataMemberAttribute]
[EditorBrowsableAttribute("1")]
public bool IsCspPartnerUser { get; }
    [EditorBrowsableAttribute("1")]
public bool HasModifiedProperties { get; }
    protected IdentityBase(PropertiesCollection properties);
    [CompilerGeneratedAttribute]
public sealed virtual Guid get_Id();
    [CompilerGeneratedAttribute]
[EditorBrowsableAttribute("1")]
public void set_Id(Guid value);
    [CompilerGeneratedAttribute]
public sealed virtual IdentityDescriptor get_Descriptor();
    [CompilerGeneratedAttribute]
[EditorBrowsableAttribute("1")]
public sealed virtual void set_Descriptor(IdentityDescriptor value);
    [CompilerGeneratedAttribute]
public SubjectDescriptor get_SubjectDescriptor();
    [CompilerGeneratedAttribute]
[EditorBrowsableAttribute("1")]
public void set_SubjectDescriptor(SubjectDescriptor value);
    [CompilerGeneratedAttribute]
public SocialDescriptor get_SocialDescriptor();
    [CompilerGeneratedAttribute]
[EditorBrowsableAttribute("1")]
public void set_SocialDescriptor(SocialDescriptor value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ProviderDisplayName();
    [CompilerGeneratedAttribute]
[EditorBrowsableAttribute("1")]
public sealed virtual void set_ProviderDisplayName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_CustomDisplayName();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CustomDisplayName(string value);
    public sealed virtual string get_DisplayName();
    [CompilerGeneratedAttribute]
public bool get_IsActive();
    [CompilerGeneratedAttribute]
public void set_IsActive(bool value);
    [CompilerGeneratedAttribute]
public int get_UniqueUserId();
    [CompilerGeneratedAttribute]
[EditorBrowsableAttribute("1")]
public void set_UniqueUserId(int value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsContainer();
    [CompilerGeneratedAttribute]
[EditorBrowsableAttribute("1")]
public void set_IsContainer(bool value);
    [CompilerGeneratedAttribute]
public ICollection`1<IdentityDescriptor> get_Members();
    [CompilerGeneratedAttribute]
[EditorBrowsableAttribute("1")]
public void set_Members(ICollection`1<IdentityDescriptor> value);
    [CompilerGeneratedAttribute]
public ICollection`1<IdentityDescriptor> get_MemberOf();
    [CompilerGeneratedAttribute]
[EditorBrowsableAttribute("1")]
public void set_MemberOf(ICollection`1<IdentityDescriptor> value);
    [CompilerGeneratedAttribute]
public ICollection`1<Guid> get_MemberIds();
    [CompilerGeneratedAttribute]
public void set_MemberIds(ICollection`1<Guid> value);
    [CompilerGeneratedAttribute]
public ICollection`1<Guid> get_MemberOfIds();
    [CompilerGeneratedAttribute]
public void set_MemberOfIds(ICollection`1<Guid> value);
    [CompilerGeneratedAttribute]
public Guid get_MasterId();
    [CompilerGeneratedAttribute]
public void set_MasterId(Guid value);
    [CompilerGeneratedAttribute]
public PropertiesCollection get_Properties();
    [CompilerGeneratedAttribute]
private void set_Properties(PropertiesCollection value);
    public bool get_ValidateProperties();
    public void set_ValidateProperties(bool value);
    public sealed virtual bool get_IsExternalUser();
    public Guid get_LocalScopeId();
    public bool get_IsBindPending();
    public bool get_IsClaims();
    public bool get_IsAADServicePrincipal();
    public bool get_IsImported();
    public bool get_IsServiceIdentity();
    [CompilerGeneratedAttribute]
public int get_ResourceVersion();
    [CompilerGeneratedAttribute]
public void set_ResourceVersion(int value);
    [CompilerGeneratedAttribute]
public int get_MetaTypeId();
    [CompilerGeneratedAttribute]
public void set_MetaTypeId(int value);
    public IdentityMetaType get_MetaType();
    public void set_MetaType(IdentityMetaType value);
    public bool get_IsCspPartnerUser();
    public sealed virtual T GetProperty(string name, T defaultValue);
    public bool TryGetProperty(string name, Object& value);
    public sealed virtual void SetProperty(string name, object value);
    public bool get_HasModifiedProperties();
    [EditorBrowsableAttribute("1")]
public void ResetModifiedProperties();
    [EditorBrowsableAttribute("1")]
public void SetAllModifiedProperties();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public virtual string ToString();
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Identity.IdentityBatchInfo : object {
    [CompilerGeneratedAttribute]
private List`1<IdentityDescriptor> <Descriptors>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<SubjectDescriptor> <SubjectDescriptors>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Guid> <IdentityIds>k__BackingField;
    [CompilerGeneratedAttribute]
private QueryMembership <QueryMembership>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <PropertyNames>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IncludeRestrictedVisibility>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<SocialDescriptor> <SocialDescriptors>k__BackingField;
    [DataMemberAttribute]
public List`1<IdentityDescriptor> Descriptors { get; private set; }
    [DataMemberAttribute]
public List`1<SubjectDescriptor> SubjectDescriptors { get; private set; }
    [DataMemberAttribute]
public List`1<Guid> IdentityIds { get; private set; }
    [DataMemberAttribute]
public QueryMembership QueryMembership { get; private set; }
    [DataMemberAttribute]
public IEnumerable`1<string> PropertyNames { get; private set; }
    [DataMemberAttribute]
public bool IncludeRestrictedVisibility { get; private set; }
    [DataMemberAttribute]
public List`1<SocialDescriptor> SocialDescriptors { get; private set; }
    public IdentityBatchInfo(IList`1<SubjectDescriptor> subjectDescriptors, QueryMembership queryMembership, IEnumerable`1<string> propertyNames, bool includeRestrictedVisibility);
    public IdentityBatchInfo(IList`1<IdentityDescriptor> descriptors, QueryMembership queryMembership, IEnumerable`1<string> propertyNames, bool includeRestrictedVisibility);
    public IdentityBatchInfo(IList`1<Guid> identityIds, QueryMembership queryMembership, IEnumerable`1<string> propertyNames, bool includeRestrictedVisibility);
    public IdentityBatchInfo(IList`1<SocialDescriptor> socialDescriptors, QueryMembership queryMembership, IEnumerable`1<string> propertyNames, bool includeRestrictedVisibility);
    [CompilerGeneratedAttribute]
public List`1<IdentityDescriptor> get_Descriptors();
    [CompilerGeneratedAttribute]
private void set_Descriptors(List`1<IdentityDescriptor> value);
    [CompilerGeneratedAttribute]
public List`1<SubjectDescriptor> get_SubjectDescriptors();
    [CompilerGeneratedAttribute]
private void set_SubjectDescriptors(List`1<SubjectDescriptor> value);
    [CompilerGeneratedAttribute]
public List`1<Guid> get_IdentityIds();
    [CompilerGeneratedAttribute]
private void set_IdentityIds(List`1<Guid> value);
    [CompilerGeneratedAttribute]
public QueryMembership get_QueryMembership();
    [CompilerGeneratedAttribute]
private void set_QueryMembership(QueryMembership value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_PropertyNames();
    [CompilerGeneratedAttribute]
private void set_PropertyNames(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public bool get_IncludeRestrictedVisibility();
    [CompilerGeneratedAttribute]
private void set_IncludeRestrictedVisibility(bool value);
    [CompilerGeneratedAttribute]
public List`1<SocialDescriptor> get_SocialDescriptors();
    [CompilerGeneratedAttribute]
private void set_SocialDescriptors(List`1<SocialDescriptor> value);
}
[XmlIncludeAttribute("Microsoft.VisualStudio.Services.Identity.ReadOnlyIdentityDescriptor")]
[KnownTypeAttribute("Microsoft.VisualStudio.Services.Identity.ReadOnlyIdentityDescriptor")]
[TypeConverterAttribute("Microsoft.VisualStudio.Services.Identity.IdentityDescriptorConverter")]
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Identity.IdentityDescriptor : object {
    [CompilerGeneratedAttribute]
private object <Data>k__BackingField;
    protected string m_identityType;
    private string m_identifier;
    private static int MaxIdLength;
    private static int MaxTypeLength;
    [XmlAttributeAttribute("identityType")]
[DataMemberAttribute]
public string IdentityType { get; public set; }
    [XmlAttributeAttribute("identifier")]
[DataMemberAttribute]
public string Identifier { get; public set; }
    [XmlIgnoreAttribute]
public object Data { get; public set; }
    public IdentityDescriptor(string identityType, string identifier, object data);
    public IdentityDescriptor(string identityType, string identifier);
    public IdentityDescriptor(IdentityDescriptor clone);
    public virtual string get_IdentityType();
    public virtual void set_IdentityType(string value);
    public virtual string get_Identifier();
    public virtual void set_Identifier(string value);
    [CompilerGeneratedAttribute]
public virtual object get_Data();
    [CompilerGeneratedAttribute]
public virtual void set_Data(object value);
    public virtual string ToString();
    public static IdentityDescriptor FromString(string identityDescriptorString);
    private static void ValidateIdentityType(string identityType);
    private static string NormalizeIdentityType(string identityType);
    private static void ValidateIdentifier(string identifier);
    internal static IdentityDescriptor FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public sealed virtual bool Equals(IdentityDescriptor other);
    public sealed virtual int CompareTo(IdentityDescriptor other);
    public sealed virtual int CompareTo(object other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(IdentityDescriptor x, IdentityDescriptor y);
    public static bool op_Inequality(IdentityDescriptor x, IdentityDescriptor y);
}
[CollectionDataContractAttribute]
public class Microsoft.VisualStudio.Services.Identity.IdentityDescriptorCollection : List`1<IdentityDescriptor> {
    public IdentityDescriptorCollection(IList`1<IdentityDescriptor> source);
}
public class Microsoft.VisualStudio.Services.Identity.IdentityDescriptorComparer : object {
    [CompilerGeneratedAttribute]
private static IdentityDescriptorComparer <Instance>k__BackingField;
    public static IdentityDescriptorComparer Instance { get; }
    private static IdentityDescriptorComparer();
    public sealed virtual int Compare(IdentityDescriptor x, IdentityDescriptor y);
    public sealed virtual bool Equals(IdentityDescriptor x, IdentityDescriptor y);
    public sealed virtual int GetHashCode(IdentityDescriptor obj);
    [CompilerGeneratedAttribute]
public static IdentityDescriptorComparer get_Instance();
}
public class Microsoft.VisualStudio.Services.Identity.IdentityDescriptorConverter : TypeConverter {
    public virtual bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType);
    public virtual bool CanConvertTo(ITypeDescriptorContext context, Type destinationType);
    public virtual object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value);
    public virtual object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType);
}
[ExtensionAttribute]
public static class Microsoft.VisualStudio.Services.Identity.IdentityDescriptorExtensions : object {
    [ExtensionAttribute]
public static bool IsTeamFoundationType(IdentityDescriptor identityDescriptor);
    [ExtensionAttribute]
public static bool IsWindowsType(IdentityDescriptor identityDescriptor);
    [ExtensionAttribute]
public static bool IsUnknownIdentityType(IdentityDescriptor identityDescriptor);
    [ExtensionAttribute]
public static bool IsSystemServicePrincipalType(IdentityDescriptor identityDescriptor);
    [ExtensionAttribute]
public static bool IsClaimsIdentityType(IdentityDescriptor identityDescriptor);
    [ExtensionAttribute]
public static bool IsAadServicePrincipalType(IdentityDescriptor identityDescriptor);
    [ExtensionAttribute]
public static bool IsImportedIdentityType(IdentityDescriptor identityDescriptor);
    [ExtensionAttribute]
public static bool IsServiceIdentityType(IdentityDescriptor identityDescriptor);
    [ExtensionAttribute]
public static bool IsBindPendingType(IdentityDescriptor identityDescriptor);
    [ExtensionAttribute]
public static bool IsAggregateIdentityType(IdentityDescriptor identityDescriptor);
    [ExtensionAttribute]
public static bool IsUnauthenticatedIdentity(IdentityDescriptor identityDescriptor);
    [ExtensionAttribute]
public static bool IsSubjectStoreType(IdentityDescriptor identityDescriptor);
    [ExtensionAttribute]
public static bool IsIdentityType(IdentityDescriptor identityDescriptor, IEnumerable`1<string> identityTypes);
    [ExtensionAttribute]
public static bool IsIdentityType(IdentityDescriptor identityDescriptor, string identityType);
    [ExtensionAttribute]
public static bool IsCspPartnerIdentityType(IdentityDescriptor identityDescriptor);
    [ExtensionAttribute]
public static bool IsGroupScopeType(IdentityDescriptor identityDescriptor);
    [ExtensionAttribute]
public static bool IsSystemLicenseType(IdentityDescriptor identityDescriptor);
    [ExtensionAttribute]
public static bool IsSystemScopeType(IdentityDescriptor identityDescriptor);
    [ExtensionAttribute]
public static bool IsSystemPublicAccessType(IdentityDescriptor identityDescriptor);
    [ExtensionAttribute]
public static bool IsSystemAccessControlType(IdentityDescriptor identityDescriptor);
    [ExtensionAttribute]
public static bool IsServerTestIdentityType(IdentityDescriptor identityDescriptor);
    [ExtensionAttribute]
public static bool IsSystemCspPartnerType(IdentityDescriptor identityDescriptor);
}
public class Microsoft.VisualStudio.Services.Identity.IdentityDescriptorNotFoundException : IdentityServiceException {
    public IdentityDescriptorNotFoundException(string message);
    public IdentityDescriptorNotFoundException(string message, Exception innerException);
    protected IdentityDescriptorNotFoundException(SerializationInfo info, StreamingContext context);
    public IdentityDescriptorNotFoundException(Guid id, bool isMasterId);
}
[ExceptionMappingAttribute("0.0", "3.0", "IdentityDomainMismatchException", "Microsoft.VisualStudio.Services.Identity.IdentityDomainMismatchException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.IdentityDomainMismatchException : IdentityServiceException {
    public IdentityDomainMismatchException(string incorrectHost, string correctHost);
    public IdentityDomainMismatchException(string message, Exception innerException);
    protected IdentityDomainMismatchException(SerializationInfo info, StreamingContext context);
}
[ExceptionMappingAttribute("0.0", "3.0", "IdentityExpressionException", "Microsoft.VisualStudio.Services.Identity.IdentityExpressionException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.IdentityExpressionException : IdentityServiceException {
    public IdentityExpressionException(string message);
    public IdentityExpressionException(string message, Exception innerException);
}
[CollectionDataContractAttribute]
public class Microsoft.VisualStudio.Services.Identity.IdentityIdCollection : List`1<Guid> {
    public IdentityIdCollection(IList`1<Guid> source);
}
[ExceptionMappingAttribute("0.0", "3.0", "IdentityInvalidTypeIdException", "Microsoft.VisualStudio.Services.Identity.IdentityInvalidTypeIdException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.IdentityInvalidTypeIdException : IdenittyInvalidTypeIdException {
    public IdentityInvalidTypeIdException(string message);
}
public class Microsoft.VisualStudio.Services.Identity.IdentityLoopingLoginException : IdentityServiceException {
    public IdentityLoopingLoginException(string message);
    public IdentityLoopingLoginException(string message, Exception innerException);
    protected IdentityLoopingLoginException(SerializationInfo info, StreamingContext context);
}
[ExceptionMappingAttribute("0.0", "3.0", "IdentityMapReadOnlyException", "Microsoft.VisualStudio.Services.Identity.IdentityMapReadOnlyException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.IdentityMapReadOnlyException : IdentityServiceException {
    public IdentityMapReadOnlyException(Exception innerException);
    public IdentityMapReadOnlyException(string message, Exception innerException);
    protected IdentityMapReadOnlyException(SerializationInfo info, StreamingContext context);
}
[ExceptionMappingAttribute("0.0", "3.0", "IdentityMaterializationFailedException", "Microsoft.VisualStudio.Services.Identity.IdentityMaterializationFailedException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.IdentityMaterializationFailedException : IdentityServiceException {
    public IdentityMaterializationFailedException(string message, Exception innerException);
    public IdentityMaterializationFailedException(string principalName);
    protected IdentityMaterializationFailedException(SerializationInfo info, StreamingContext context);
}
public enum Microsoft.VisualStudio.Services.Identity.IdentityMetaType : Enum {
    public int value__;
    public static IdentityMetaType Member;
    public static IdentityMetaType Guest;
    public static IdentityMetaType CompanyAdministrator;
    public static IdentityMetaType HelpdeskAdministrator;
    public static IdentityMetaType ServiceCloudProvider;
    public static IdentityMetaType Application;
    public static IdentityMetaType ManagedIdentity;
    public static IdentityMetaType Unknown;
}
[ExceptionMappingAttribute("0.0", "3.0", "IdentityNotFoundException", "Microsoft.VisualStudio.Services.Identity.IdentityNotFoundException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.IdentityNotFoundException : IdentityServiceException {
    public IdentityNotFoundException(string message);
    public IdentityNotFoundException(string message, Exception innerException);
    public IdentityNotFoundException(IdentityDescriptor descriptor);
    public IdentityNotFoundException(SubjectDescriptor subjectDescriptor);
    public IdentityNotFoundException(Guid tfid);
}
[ExceptionMappingAttribute("0.0", "3.0", "IdentityNotFoundInCollectionException", "Microsoft.VisualStudio.Services.Identity.IdentityNotFoundInCollectionException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.IdentityNotFoundInCollectionException : IdentityServiceException {
    public IdentityNotFoundInCollectionException(string identityName);
}
public class Microsoft.VisualStudio.Services.Identity.IdentityNotFoundInCurrentDirectoryException : IdentityServiceException {
    public IdentityNotFoundInCurrentDirectoryException(string message);
    public IdentityNotFoundInCurrentDirectoryException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "IdentityNotServiceIdentityException", "Microsoft.VisualStudio.Services.Identity.IdentityNotServiceIdentityException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.IdentityNotServiceIdentityException : IdentityServiceException {
    public IdentityNotServiceIdentityException(string message);
    public IdentityNotServiceIdentityException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "IdentityPropertyRequiredException", "Microsoft.VisualStudio.Services.Identity.IdentityPropertyRequiredException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.IdentityPropertyRequiredException : IdentityServiceException {
    public IdentityPropertyRequiredException(string message);
    public IdentityPropertyRequiredException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "IdentityProviderUnavailableException", "Microsoft.VisualStudio.Services.Identity.IdentityProviderUnavailableException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.IdentityProviderUnavailableException : IdentityServiceException {
    public IdentityProviderUnavailableException(IdentityDescriptor descriptor);
    public IdentityProviderUnavailableException(string message, Exception innerException);
}
public static class Microsoft.VisualStudio.Services.Identity.IdentityResourceIds : object {
    public static string AreaId;
    public static string AreaName;
    public static Guid Identity;
    public static string IdentityResource;
    public static Guid IdentityBatch;
    public static string IdentityBatchResource;
    public static Guid Group;
    public static string GroupResource;
    public static Guid Scope;
    public static string ScopeResource;
    public static string MemberLocationIdString;
    public static Guid Member;
    public static string MemberResource;
    public static string MemberOfLocationIdString;
    public static Guid MemberOf;
    public static string MemberOfResource;
    public static Guid IdentityDebug;
    public static string IdentityDebugResource;
    public static Guid IdentitySnapshot;
    public static string IdentitySnapshotResource;
    public static Guid IdentitySelf;
    public static string IdentitySelfResource;
    public static Guid SignoutToken;
    public static string SignoutTokenResource;
    public static Guid SignedInToken;
    public static string SignedInTokenResource;
    public static Guid IdentityTenant;
    public static string IdentityTenantResource;
    public static Guid FrameworkIdentity;
    public static string FrameworkIdentityResource;
    public static Guid IdentityMaxSequenceId;
    public static string IdentityMaxSequenceIdResource;
    public static Guid Claims;
    public static string ClaimsResource;
    public static Guid Rights;
    public static string RightsResource;
    public static Guid RightsBatch;
    public static string ResolveDisconnectedUsersLocationIdString;
    public static Guid ResolveDisconnectedUsersLocationId;
    public static string ResolveDisconnectedUsersResource;
    public static Guid DescriptorsResourceLocationId;
    public static string DescriptorsResourceName;
    public static Guid SwapLocationId;
    public static string SwapResource;
    public static Guid Users;
    public static string UsersResource;
    private static IdentityResourceIds();
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Identity.IdentityRightsTransferData : object {
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <UserPrincipalNameMappings>k__BackingField;
    [DataMemberAttribute]
public Dictionary`2<string, string> UserPrincipalNameMappings { get; }
    public IdentityRightsTransferData(Dictionary`2<string, string> userPrincipalNameMappings);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_UserPrincipalNameMappings();
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Identity.IdentityScope : object {
    [CompilerGeneratedAttribute]
private Guid <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <LocalScopeId>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <ParentId>k__BackingField;
    [CompilerGeneratedAttribute]
private GroupScopeType <ScopeType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private IdentityDescriptor <Administrators>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsGlobal>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <SecuringHostId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsActive>k__BackingField;
    private SubjectDescriptor subjectDescriptor;
    [DataMemberAttribute]
public Guid Id { get; internal set; }
    [DataMemberAttribute]
internal Guid LocalScopeId { get; internal set; }
    [DataMemberAttribute]
public Guid ParentId { get; internal set; }
    [DataMemberAttribute]
public GroupScopeType ScopeType { get; internal set; }
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public IdentityDescriptor Administrators { get; internal set; }
    [DataMemberAttribute]
public bool IsGlobal { get; internal set; }
    [DataMemberAttribute]
public Guid SecuringHostId { get; internal set; }
    [DataMemberAttribute]
public bool IsActive { get; internal set; }
    [DataMemberAttribute]
public SubjectDescriptor SubjectDescriptor { get; }
    internal IdentityScope(IdentityScope other);
    internal IdentityScope(Guid id, string name);
    [CompilerGeneratedAttribute]
public Guid get_Id();
    [CompilerGeneratedAttribute]
internal void set_Id(Guid value);
    [CompilerGeneratedAttribute]
internal Guid get_LocalScopeId();
    [CompilerGeneratedAttribute]
internal void set_LocalScopeId(Guid value);
    [CompilerGeneratedAttribute]
public Guid get_ParentId();
    [CompilerGeneratedAttribute]
internal void set_ParentId(Guid value);
    [CompilerGeneratedAttribute]
public GroupScopeType get_ScopeType();
    [CompilerGeneratedAttribute]
internal void set_ScopeType(GroupScopeType value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public IdentityDescriptor get_Administrators();
    [CompilerGeneratedAttribute]
internal void set_Administrators(IdentityDescriptor value);
    [CompilerGeneratedAttribute]
public bool get_IsGlobal();
    [CompilerGeneratedAttribute]
internal void set_IsGlobal(bool value);
    [CompilerGeneratedAttribute]
public Guid get_SecuringHostId();
    [CompilerGeneratedAttribute]
internal void set_SecuringHostId(Guid value);
    [CompilerGeneratedAttribute]
public bool get_IsActive();
    [CompilerGeneratedAttribute]
internal void set_IsActive(bool value);
    public IdentityScope Clone();
    public virtual string ToString();
    public SubjectDescriptor get_SubjectDescriptor();
}
[CollectionDataContractAttribute]
public class Microsoft.VisualStudio.Services.Identity.IdentityScopeCollection : List`1<IdentityScope> {
    public IdentityScopeCollection(IList`1<IdentityScope> source);
}
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.Identity.IdentitySearchFilter : Enum {
    public int value__;
    [EnumMemberAttribute]
public static IdentitySearchFilter AccountName;
    [EnumMemberAttribute]
public static IdentitySearchFilter DisplayName;
    [EnumMemberAttribute]
public static IdentitySearchFilter AdministratorsGroup;
    [EnumMemberAttribute]
public static IdentitySearchFilter Identifier;
    [EnumMemberAttribute]
public static IdentitySearchFilter MailAddress;
    [EnumMemberAttribute]
public static IdentitySearchFilter General;
    [EnumMemberAttribute]
public static IdentitySearchFilter Alias;
    [EnumMemberAttribute]
public static IdentitySearchFilter DirectoryAlias;
    [ObsoleteAttribute("Deprecating TeamGroupName, use LocalGroupName instead and filter out non teams groups from the result")]
[EnumMemberAttribute]
public static IdentitySearchFilter TeamGroupName;
    [EnumMemberAttribute]
public static IdentitySearchFilter LocalGroupName;
}
[DebuggerDisplayAttribute("{DisplayName}")]
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Identity.IdentitySelf : object {
    [CompilerGeneratedAttribute]
private Guid <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccountName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Origin>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OriginId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Domain>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<TenantInfo> <Tenants>k__BackingField;
    [DataMemberAttribute]
public Guid Id { get; public set; }
    [DataMemberAttribute]
public string DisplayName { get; public set; }
    [DataMemberAttribute]
public string AccountName { get; public set; }
    [DataMemberAttribute]
public string Origin { get; public set; }
    [DataMemberAttribute]
public string OriginId { get; public set; }
    [DataMemberAttribute]
public string Domain { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<TenantInfo> Tenants { get; public set; }
    [CompilerGeneratedAttribute]
public Guid get_Id();
    [CompilerGeneratedAttribute]
[EditorBrowsableAttribute("1")]
public void set_Id(Guid value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
[EditorBrowsableAttribute("1")]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public string get_AccountName();
    [CompilerGeneratedAttribute]
[EditorBrowsableAttribute("1")]
public void set_AccountName(string value);
    [CompilerGeneratedAttribute]
public string get_Origin();
    [CompilerGeneratedAttribute]
[EditorBrowsableAttribute("1")]
public void set_Origin(string value);
    [CompilerGeneratedAttribute]
public string get_OriginId();
    [CompilerGeneratedAttribute]
[EditorBrowsableAttribute("1")]
public void set_OriginId(string value);
    [CompilerGeneratedAttribute]
public string get_Domain();
    [CompilerGeneratedAttribute]
[EditorBrowsableAttribute("1")]
public void set_Domain(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<TenantInfo> get_Tenants();
    [CompilerGeneratedAttribute]
public void set_Tenants(IEnumerable`1<TenantInfo> value);
}
[ExceptionMappingAttribute("0.0", "3.0", "IdentityServiceException", "Microsoft.VisualStudio.Services.Identity.IdentityServiceException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.IdentityServiceException : VssServiceException {
    public IdentityServiceException(string message);
    public IdentityServiceException(string message, Exception innerException);
    protected IdentityServiceException(SerializationInfo info, StreamingContext context);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Identity.IdentitySnapshot : object {
    [CompilerGeneratedAttribute]
private Guid <ScopeId>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<IdentityScope> <Scopes>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Identity> <Groups>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<GroupMembership> <Memberships>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Guid> <IdentityIds>k__BackingField;
    [DataMemberAttribute]
public Guid ScopeId { get; public set; }
    [DataMemberAttribute]
public List`1<IdentityScope> Scopes { get; public set; }
    [DataMemberAttribute]
public List`1<Identity> Groups { get; public set; }
    [DataMemberAttribute]
public List`1<GroupMembership> Memberships { get; public set; }
    [DataMemberAttribute]
public List`1<Guid> IdentityIds { get; public set; }
    public IdentitySnapshot(Guid scopeId);
    [CompilerGeneratedAttribute]
public Guid get_ScopeId();
    [CompilerGeneratedAttribute]
public void set_ScopeId(Guid value);
    [CompilerGeneratedAttribute]
public List`1<IdentityScope> get_Scopes();
    [CompilerGeneratedAttribute]
public void set_Scopes(List`1<IdentityScope> value);
    [CompilerGeneratedAttribute]
public List`1<Identity> get_Groups();
    [CompilerGeneratedAttribute]
public void set_Groups(List`1<Identity> value);
    [CompilerGeneratedAttribute]
public List`1<GroupMembership> get_Memberships();
    [CompilerGeneratedAttribute]
public void set_Memberships(List`1<GroupMembership> value);
    [CompilerGeneratedAttribute]
public List`1<Guid> get_IdentityIds();
    [CompilerGeneratedAttribute]
public void set_IdentityIds(List`1<Guid> value);
    public IdentitySnapshot Clone();
    public virtual string ToString();
}
[ExceptionMappingAttribute("0.0", "3.0", "IdentityStoreNotAvailableException", "Microsoft.VisualStudio.Services.Identity.IdentityStoreNotAvailableException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.IdentityStoreNotAvailableException : IdentityServiceException {
    public IdentityStoreNotAvailableException(string errorMessage);
}
[ExceptionMappingAttribute("0.0", "3.0", "IdentitySyncException", "Microsoft.VisualStudio.Services.Identity.IdentitySyncException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.IdentitySyncException : IdentityServiceException {
    public IdentitySyncException(string message, Exception innerException);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Identity.IdentityUpdateData : object {
    [CompilerGeneratedAttribute]
private int <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Updated>k__BackingField;
    [DataMemberAttribute]
public int Index { get; public set; }
    [DataMemberAttribute]
public Guid Id { get; public set; }
    [DataMemberAttribute]
public bool Updated { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Index();
    [CompilerGeneratedAttribute]
public void set_Index(int value);
    [CompilerGeneratedAttribute]
public Guid get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(Guid value);
    [CompilerGeneratedAttribute]
public bool get_Updated();
    [CompilerGeneratedAttribute]
public void set_Updated(bool value);
}
[ExceptionMappingAttribute("0.0", "3.0", "IdTranslationsAreMigratedException", "Microsoft.VisualStudio.Services.Identity.IdTranslationsAreMigratedException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.IdTranslationsAreMigratedException : IdentityServiceException {
    public IdTranslationsAreMigratedException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "IllegalAliasException", "Microsoft.VisualStudio.Services.Identity.IllegalAliasException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.IllegalAliasException : IdentityServiceException {
    public IllegalAliasException(string name);
    public IllegalAliasException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "IllegalIdentityException", "Microsoft.VisualStudio.Services.Identity.IllegalIdentityException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.IllegalIdentityException : IdentityServiceException {
    public IllegalIdentityException(string name);
    public IllegalIdentityException(string message, Exception innerException);
}
public class Microsoft.VisualStudio.Services.Identity.IncompatibleScopeException : IdentityServiceException {
    public IncompatibleScopeException(string message);
    public IncompatibleScopeException(string message, Exception innerException);
    public IncompatibleScopeException(string rootScopeId, string scopeIdToCheck);
    protected IncompatibleScopeException(SerializationInfo info, StreamingContext context);
}
[ExceptionMappingAttribute("0.0", "3.0", "InvalidDisplayNameException", "Microsoft.VisualStudio.Services.Identity.InvalidChangedIdentityException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.InvalidChangedIdentityException : IdentityServiceException {
    public InvalidChangedIdentityException(string message);
    public InvalidChangedIdentityException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "InvalidDisplayNameException", "Microsoft.VisualStudio.Services.Identity.InvalidDisplayNameException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.InvalidDisplayNameException : IdentityServiceException {
    public InvalidDisplayNameException(string message);
    public InvalidDisplayNameException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "InvalidIdentityIdTranslationException", "Microsoft.VisualStudio.Services.Identity.InvalidIdentityIdTranslationException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.InvalidIdentityIdTranslationException : IdentityServiceException {
    public InvalidIdentityIdTranslationException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "InvalidIdentityKeyException", "Microsoft.VisualStudio.Services.Identity.InvalidIdentityKeyException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.InvalidIdentityKeyException : IdentityServiceException {
    public InvalidIdentityKeyException(string message);
}
[ExceptionMappingAttribute("0.0", "3.0", "InvalidIdentityKeyMapsException", "Microsoft.VisualStudio.Services.Identity.InvalidIdentityKeyMapsException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.InvalidIdentityKeyMapException : IdentityServiceException {
    public InvalidIdentityKeyMapException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "InvalidIdentityStorageKeyTranslationException", "Microsoft.VisualStudio.Services.Identity.InvalidIdentityStorageKeyTranslationException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.InvalidIdentityStorageKeyTranslationException : IdentityServiceException {
    public InvalidIdentityStorageKeyTranslationException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "InvalidServiceIdentityNameException", "Microsoft.VisualStudio.Services.Identity.InvalidServiceIdentityNameException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.InvalidServiceIdentityNameException : IdentityServiceException {
    public InvalidServiceIdentityNameException(string identityName);
    public InvalidServiceIdentityNameException(string message, Exception innerException);
}
public class Microsoft.VisualStudio.Services.Identity.InvalidTransferIdentityRightsRequestException : IdentityServiceException {
    public InvalidTransferIdentityRightsRequestException(string message);
    public InvalidTransferIdentityRightsRequestException(string message, Exception innerException);
    protected InvalidTransferIdentityRightsRequestException(SerializationInfo info, StreamingContext context);
}
[ExceptionMappingAttribute("0.0", "3.0", "InvalidTypeIdForIdentityStorageKeyException", "Microsoft.VisualStudio.Services.Identity.InvalidTypeIdForIdentityStorageKeyException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.InvalidTypeIdForIdentityKeyMapException : IdentityServiceException {
    public InvalidTypeIdForIdentityKeyMapException(string message, Exception innerException);
}
public class Microsoft.VisualStudio.Services.Identity.InvitationPendingException : TenantSwitchException {
    [CompilerGeneratedAttribute]
private string <AccountName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OrganizationName>k__BackingField;
    public string AccountName { get; }
    public string OrganizationName { get; }
    public InvitationPendingException(string message);
    public InvitationPendingException(string message, Exception innerException);
    protected InvitationPendingException(SerializationInfo info, StreamingContext context);
    public InvitationPendingException(string accountName, string organizationName);
    [CompilerGeneratedAttribute]
public string get_AccountName();
    [CompilerGeneratedAttribute]
public string get_OrganizationName();
}
public interface Microsoft.VisualStudio.Services.Identity.IReadOnlyVssIdentity {
    public Guid Id { get; }
    public IdentityDescriptor Descriptor { get; }
    public bool IsContainer { get; }
    public bool IsExternalUser { get; }
    public string DisplayName { get; }
    public string ProviderDisplayName { get; }
    public string CustomDisplayName { get; }
    public abstract virtual Guid get_Id();
    public abstract virtual IdentityDescriptor get_Descriptor();
    public abstract virtual bool get_IsContainer();
    public abstract virtual bool get_IsExternalUser();
    public abstract virtual string get_DisplayName();
    public abstract virtual string get_ProviderDisplayName();
    public abstract virtual string get_CustomDisplayName();
    public abstract virtual TValue GetProperty(string name, TValue defaultValue);
}
public interface Microsoft.VisualStudio.Services.Identity.IVssIdentity {
    public IdentityDescriptor Descriptor { get; public set; }
    public string ProviderDisplayName { get; public set; }
    public string CustomDisplayName { get; public set; }
    public abstract virtual IdentityDescriptor get_Descriptor();
    public abstract virtual void set_Descriptor(IdentityDescriptor value);
    public abstract virtual string get_ProviderDisplayName();
    public abstract virtual void set_ProviderDisplayName(string value);
    public abstract virtual string get_CustomDisplayName();
    public abstract virtual void set_CustomDisplayName(string value);
    public abstract virtual void SetProperty(string name, object value);
}
internal class Microsoft.VisualStudio.Services.Identity.KeyValueOfStringString : object {
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    public string Key { get; public set; }
    public string Value { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    internal static KeyValueOfStringString FromXml(IServiceProvider serviceProvider, XmlReader reader);
}
[ExceptionMappingAttribute("0.0", "3.0", "ModifyEveryoneGroupException", "Microsoft.VisualStudio.Services.Identity.ModifyEveryoneGroupException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.ModifyEveryoneGroupException : IdentityServiceException {
    public ModifyEveryoneGroupException(string message, Exception innerException);
}
[ResourceAreaAttribute("FC3682BE-3D6C-427A-87C8-E527B16A1D05")]
public class Microsoft.VisualStudio.Services.Identity.Mru.Client.IdentityMruHttpClient : IdentityMruHttpClientBase {
    public IdentityMruHttpClient(Uri baseUrl, VssCredentials credentials);
    public IdentityMruHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public IdentityMruHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public IdentityMruHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public IdentityMruHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
}
[ResourceAreaAttribute("FC3682BE-3D6C-427A-87C8-E527B16A1D05")]
public abstract class Microsoft.VisualStudio.Services.Identity.Mru.Client.IdentityMruHttpClientBase : VssHttpClientBase {
    public IdentityMruHttpClientBase(Uri baseUrl, VssCredentials credentials);
    public IdentityMruHttpClientBase(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public IdentityMruHttpClientBase(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public IdentityMruHttpClientBase(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public IdentityMruHttpClientBase(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    public virtual Task`1<List`1<Guid>> GetMruIdentitiesAsync(string identityId, Guid containerId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Identity.Mru.Client.IdentityMruHttpClientBase/<SetMruIdentitiesAsync>d__6")]
public virtual Task SetMruIdentitiesAsync(IEnumerable`1<Guid> identityIds, string identityId, Guid containerId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Identity.Mru.Client.IdentityMruHttpClientBase/<UpdateMruIdentitiesAsync>d__7")]
[ObsoleteAttribute]
public virtual Task UpdateMruIdentitiesAsync(MruIdentitiesUpdateData updateData, string identityId, Guid containerId, object userState, CancellationToken cancellationToken);
    public virtual Task`1<List`1<Guid>> AddMruIdentitiesAndRemoveInactiveAsync(MruIdentitiesUpdateData updateData, string identityId, Guid containerId, object userState, CancellationToken cancellationToken);
}
[ExceptionMappingAttribute("0.0", "3.0", "IdentityMruBadRequestException", "Microsoft.VisualStudio.Services.Identity.Mru.IdentityMruBadRequestException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.Mru.IdentityMruBadRequestException : IdentityMruException {
    public IdentityMruBadRequestException(string message);
    public IdentityMruBadRequestException(string message, Exception innerException);
    protected IdentityMruBadRequestException(SerializationInfo info, StreamingContext context);
}
[ExceptionMappingAttribute("0.0", "3.0", "IdentityMruException", "Microsoft.VisualStudio.Services.Identity.Mru.IdentityMruException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.Mru.IdentityMruException : VssServiceException {
    public IdentityMruException(string message);
    public IdentityMruException(string message, Exception innerException);
    protected IdentityMruException(SerializationInfo info, StreamingContext context);
}
[ExceptionMappingAttribute("0.0", "3.0", "IdentityMruResourceExistsException", "Microsoft.VisualStudio.Services.Identity.Mru.IdentityMruResourceExistsException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.Mru.IdentityMruResourceExistsException : IdentityMruException {
    public IdentityMruResourceExistsException(string message);
    public IdentityMruResourceExistsException(string message, Exception innerException);
    protected IdentityMruResourceExistsException(SerializationInfo info, StreamingContext context);
}
[GenerateAllConstantsAttribute("")]
public static class Microsoft.VisualStudio.Services.Identity.Mru.IdentityMruResourceIds : object {
    public static string AreaId;
    public static string AreaName;
    public static string MruIdentitiesLocationIdString;
    public static Guid MruIdentitiesLocationId;
    public static string MruIdentitiesV2LocationIdString;
    public static Guid MruIdentitiesV2LocationId;
    public static string MruIdentitiesResource;
    public static string MruIdentitiesResourceV2;
    private static IdentityMruResourceIds();
}
[ExceptionMappingAttribute("0.0", "3.0", "IdentityMruResourceNotFoundException", "Microsoft.VisualStudio.Services.Identity.Mru.IdentityMruResourceNotFoundException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.Mru.IdentityMruResourceNotFoundException : IdentityMruException {
    public IdentityMruResourceNotFoundException(string message);
    public IdentityMruResourceNotFoundException(string message, Exception innerException);
    protected IdentityMruResourceNotFoundException(SerializationInfo info, StreamingContext context);
}
[ExceptionMappingAttribute("0.0", "3.0", "IdentityMruUnauthorizedException", "Microsoft.VisualStudio.Services.Identity.Mru.IdentityMruUnauthorizedException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.Mru.IdentityMruUnauthorizedException : IdentityMruException {
    public IdentityMruUnauthorizedException(string message);
    public IdentityMruUnauthorizedException(string message, Exception innerException);
    protected IdentityMruUnauthorizedException(SerializationInfo info, StreamingContext context);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Identity.Mru.JsonPatchOperationData`1 : object {
    [CompilerGeneratedAttribute]
private string <Op>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private T <Value>k__BackingField;
    [DataMemberAttribute]
public string Op { get; public set; }
    [DataMemberAttribute]
public string Path { get; public set; }
    [DataMemberAttribute]
public T Value { get; public set; }
    public JsonPatchOperationData`1(string op, string path, T value);
    [CompilerGeneratedAttribute]
public string get_Op();
    [CompilerGeneratedAttribute]
public void set_Op(string value);
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(string value);
    [CompilerGeneratedAttribute]
public T get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(T value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Identity.Mru.MruIdentitiesUpdateData : JsonPatchOperationData`1<IList`1<Guid>> {
    public MruIdentitiesUpdateData(IList`1<Guid> identityIds, string operationType);
}
[ExceptionMappingAttribute("0.0", "3.0", "MultipleIdentitiesFoundException", "Microsoft.VisualStudio.Services.Identity.MultipleIdentitiesFoundException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.MultipleIdentitiesFoundException : IdentityServiceException {
    public MultipleIdentitiesFoundException(string identityName, IEnumerable`1<Identity> matchingIdentities);
    public MultipleIdentitiesFoundException(string identityName, IEnumerable`1<IReadOnlyVssIdentity> matchingIdentities);
    public MultipleIdentitiesFoundException(string message, Exception innerException);
    private static string BuildExceptionMessage(string identityName, IEnumerable`1<IReadOnlyVssIdentity> matchingIdentities);
}
[ExceptionMappingAttribute("0.0", "3.0", "NotApplicationGroupException", "Microsoft.VisualStudio.Services.Identity.NotApplicationGroupException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.NotApplicationGroupException : IdentityServiceException {
    public NotApplicationGroupException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "NotASecurityGroupException", "Microsoft.VisualStudio.Services.Identity.NotASecurityGroupException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.NotASecurityGroupException : IdentityServiceException {
    public NotASecurityGroupException(string displayName);
    public NotASecurityGroupException(string message, Exception innerException);
}
public class Microsoft.VisualStudio.Services.Identity.PagedIdentities : object {
    [CompilerGeneratedAttribute]
private IEnumerable`1<Identity> <Identities>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <ContinuationToken>k__BackingField;
    [ClientResponseContentAttribute]
public IEnumerable`1<Identity> Identities { get; public set; }
    [ClientResponseHeaderAttribute("X-MS-ContinuationToken")]
public IEnumerable`1<string> ContinuationToken { get; public set; }
    [CompilerGeneratedAttribute]
public IEnumerable`1<Identity> get_Identities();
    [CompilerGeneratedAttribute]
public void set_Identities(IEnumerable`1<Identity> value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_ContinuationToken();
    [CompilerGeneratedAttribute]
public void set_ContinuationToken(IEnumerable`1<string> value);
}
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.Identity.QueryMembership : Enum {
    public int value__;
    [EnumMemberAttribute]
public static QueryMembership None;
    [EnumMemberAttribute]
public static QueryMembership Direct;
    [EnumMemberAttribute]
public static QueryMembership Expanded;
    [EnumMemberAttribute]
public static QueryMembership ExpandedUp;
    [EnumMemberAttribute]
public static QueryMembership ExpandedDown;
}
[FlagsAttribute]
public enum Microsoft.VisualStudio.Services.Identity.ReadIdentitiesOptions : Enum {
    public int value__;
    public static ReadIdentitiesOptions None;
    public static ReadIdentitiesOptions FilterIllegalMemberships;
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Identity.ReadOnlyIdentityDescriptor : IdentityDescriptor {
    [XmlAttributeAttribute("identityType")]
[DataMemberAttribute]
public string IdentityType { get; public set; }
    [XmlAttributeAttribute("identifier")]
[DataMemberAttribute]
public string Identifier { get; public set; }
    [XmlIgnoreAttribute]
public object Data { get; public set; }
    public ReadOnlyIdentityDescriptor(string identityType, string identifier, object data);
    public virtual string get_IdentityType();
    public virtual void set_IdentityType(string value);
    public virtual string get_Identifier();
    public virtual void set_Identifier(string value);
    public virtual object get_Data();
    public virtual void set_Data(object value);
}
[ExceptionMappingAttribute("0.0", "3.0", "RemoveAccountOwnerFromAdminGroupException", "Microsoft.VisualStudio.Services.Identity.RemoveAccountOwnerFromAdminGroupException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.RemoveAccountOwnerFromAdminGroupException : IdentityServiceException {
    public RemoveAccountOwnerFromAdminGroupException(string message);
    public RemoveAccountOwnerFromAdminGroupException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "RemoveGroupMemberNotMemberException", "Microsoft.VisualStudio.Services.Identity.RemoveGroupMemberNotMemberException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.RemoveGroupMemberNotMemberException : IdentityServiceException {
    public RemoveGroupMemberNotMemberException(string sid);
    public RemoveGroupMemberNotMemberException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "RemoveMemberServiceAccountException", "Microsoft.VisualStudio.Services.Identity.RemoveMemberServiceAccountException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.RemoveMemberServiceAccountException : IdentityServiceException {
    public RemoveMemberServiceAccountException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "RemoveNonexistentGroupException", "Microsoft.VisualStudio.Services.Identity.RemoveNonexistentGroupException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.RemoveNonexistentGroupException : IdentityServiceException {
    public RemoveNonexistentGroupException(string sid);
    public RemoveNonexistentGroupException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "RemoveOrganizationAdminFromAdminGroupException", "Microsoft.VisualStudio.Services.Identity.RemoveOrganizationAdminFromAdminGroupException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
internal class Microsoft.VisualStudio.Services.Identity.RemoveOrganizationAdminFromAdminGroupException : IdentityServiceException {
    public RemoveOrganizationAdminFromAdminGroupException(string message);
    public RemoveOrganizationAdminFromAdminGroupException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "RemoveSelfFromAdminGroupException", "Microsoft.VisualStudio.Services.Identity.RemoveSelfFromAdminGroupException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.RemoveSelfFromAdminGroupException : IdentityServiceException {
    private static string BlockRemovingSelfFromAdminGroup;
    public RemoveSelfFromAdminGroupException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "RemoveServiceAccountsFromAdminGroupException", "Microsoft.VisualStudio.Services.Identity.RemoveServiceAccountsFromAdminGroupException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
internal class Microsoft.VisualStudio.Services.Identity.RemoveServiceAccountsFromAdminGroupException : IdentityServiceException {
    public RemoveServiceAccountsFromAdminGroupException(string message);
    public RemoveServiceAccountsFromAdminGroupException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "RemoveSpecialGroupException", "Microsoft.VisualStudio.Services.Identity.RemoveSpecialGroupException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.RemoveSpecialGroupException : IdentityServiceException {
    public RemoveSpecialGroupException(string sid, SpecialGroupType specialType);
    public RemoveSpecialGroupException(string message, Exception innerException);
    protected static string BuildMessage(string sid, SpecialGroupType specialType);
}
[DataContractAttribute]
[NotificationEventBindingsAttribute("0", "ms.vss-sps-notifications.request-access-event")]
public class Microsoft.VisualStudio.Services.Identity.RequestAccessEvent : object {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RequesterName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RequesterEmail>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OrganizationUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OrganizationName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SettingsUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UrlRequested>k__BackingField;
    [DataMemberAttribute]
public string Message { get; public set; }
    [DataMemberAttribute]
public string RequesterName { get; public set; }
    [DataMemberAttribute]
public string RequesterEmail { get; public set; }
    [DataMemberAttribute]
public string OrganizationUrl { get; public set; }
    [DataMemberAttribute]
public string OrganizationName { get; public set; }
    [DataMemberAttribute]
public string SettingsUrl { get; public set; }
    [DataMemberAttribute]
public string UrlRequested { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_RequesterName();
    [CompilerGeneratedAttribute]
public void set_RequesterName(string value);
    [CompilerGeneratedAttribute]
public string get_RequesterEmail();
    [CompilerGeneratedAttribute]
public void set_RequesterEmail(string value);
    [CompilerGeneratedAttribute]
public string get_OrganizationUrl();
    [CompilerGeneratedAttribute]
public void set_OrganizationUrl(string value);
    [CompilerGeneratedAttribute]
public string get_OrganizationName();
    [CompilerGeneratedAttribute]
public void set_OrganizationName(string value);
    [CompilerGeneratedAttribute]
public string get_SettingsUrl();
    [CompilerGeneratedAttribute]
public void set_SettingsUrl(string value);
    [CompilerGeneratedAttribute]
public string get_UrlRequested();
    [CompilerGeneratedAttribute]
public void set_UrlRequested(string value);
}
public static class Microsoft.VisualStudio.Services.Identity.RequestAccessEventNames : object {
    public static string RequestAccessEventName;
}
public class Microsoft.VisualStudio.Services.Identity.RequestHeadersContext : object {
    [CompilerGeneratedAttribute]
private SequenceContext <SequenceContext>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IgnoreCache>k__BackingField;
    internal SequenceContext SequenceContext { get; internal set; }
    internal bool IgnoreCache { get; internal set; }
    public RequestHeadersContext(SequenceContext sequenceContext);
    public RequestHeadersContext(SequenceContext sequenceContext, bool ignoreCache);
    [CompilerGeneratedAttribute]
internal SequenceContext get_SequenceContext();
    [CompilerGeneratedAttribute]
internal void set_SequenceContext(SequenceContext value);
    [CompilerGeneratedAttribute]
internal bool get_IgnoreCache();
    [CompilerGeneratedAttribute]
internal void set_IgnoreCache(bool value);
    private static bool ParseOrGetDefault(string s);
}
[ExceptionMappingAttribute("0.0", "3.0", "RestoreGroupScopeValidationException", "Microsoft.VisualStudio.Services.Identity.RestoreGroupScopeValidationException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.RestoreGroupScopeValidationException : IdentityServiceException {
    public RestoreGroupScopeValidationException(string validationError);
    public RestoreGroupScopeValidationException(string message, Exception innerException);
    protected RestoreGroupScopeValidationException(SerializationInfo info, StreamingContext context);
}
public enum Microsoft.VisualStudio.Services.Identity.RestoreProjectOptions : Enum {
    public int value__;
    public static RestoreProjectOptions All;
    public static RestoreProjectOptions Visible;
}
public class Microsoft.VisualStudio.Services.Identity.ScopeBadRequestException : IdentityServiceException {
    public ScopeBadRequestException(string message);
    public ScopeBadRequestException(string message, Exception innerException);
    protected ScopeBadRequestException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.Identity.SequenceContext : object {
    [CompilerGeneratedAttribute]
private long <IdentitySequenceId>k__BackingField;
    [CompilerGeneratedAttribute]
private long <GroupSequenceId>k__BackingField;
    [CompilerGeneratedAttribute]
private long <OrganizationIdentitySequenceId>k__BackingField;
    [CompilerGeneratedAttribute]
private long <PageSize>k__BackingField;
    internal static long UnspecifiedSequenceId;
    internal static SequenceContext MaxSequenceContext;
    internal static SequenceContext InitSequenceContext;
    [JsonPropertyAttribute]
internal long IdentitySequenceId { get; }
    [JsonPropertyAttribute]
internal long GroupSequenceId { get; }
    [JsonPropertyAttribute]
internal long OrganizationIdentitySequenceId { get; }
    [JsonPropertyAttribute]
internal long PageSize { get; }
    public bool IsUnspecified { get; }
    public SequenceContext(long identitySequenceId, long groupSequenceId);
    public SequenceContext(long identitySequenceId, long groupSequenceId, long organizationIdentitySequenceId);
    [JsonConstructorAttribute]
public SequenceContext(long identitySequenceId, long groupSequenceId, long organizationIdentitySequenceId, long pageSize);
    private static SequenceContext();
    [CompilerGeneratedAttribute]
internal long get_IdentitySequenceId();
    [CompilerGeneratedAttribute]
internal long get_GroupSequenceId();
    [CompilerGeneratedAttribute]
internal long get_OrganizationIdentitySequenceId();
    [CompilerGeneratedAttribute]
internal long get_PageSize();
    internal SequenceContext Clone();
    public bool get_IsUnspecified();
    public virtual string ToString();
}
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.Identity.SpecialGroupType : Enum {
    public int value__;
    [EnumMemberAttribute]
public static SpecialGroupType Generic;
    [EnumMemberAttribute]
public static SpecialGroupType AdministrativeApplicationGroup;
    [EnumMemberAttribute]
public static SpecialGroupType ServiceApplicationGroup;
    [EnumMemberAttribute]
public static SpecialGroupType EveryoneApplicationGroup;
    [EnumMemberAttribute]
public static SpecialGroupType LicenseesApplicationGroup;
    [EnumMemberAttribute]
public static SpecialGroupType AzureActiveDirectoryApplicationGroup;
    [EnumMemberAttribute]
public static SpecialGroupType AzureActiveDirectoryRole;
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Identity.SwapIdentityInfo : object {
    [CompilerGeneratedAttribute]
private Guid <Id1>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <Id2>k__BackingField;
    [DataMemberAttribute]
public Guid Id1 { get; private set; }
    [DataMemberAttribute]
public Guid Id2 { get; private set; }
    public SwapIdentityInfo(Guid id1, Guid id2);
    [CompilerGeneratedAttribute]
public Guid get_Id1();
    [CompilerGeneratedAttribute]
private void set_Id1(Guid value);
    [CompilerGeneratedAttribute]
public Guid get_Id2();
    [CompilerGeneratedAttribute]
private void set_Id2(Guid value);
}
[DebuggerDisplayAttribute("{TenantName}")]
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Identity.TenantInfo : object {
    [CompilerGeneratedAttribute]
private Guid <TenantId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TenantName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HomeTenant>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <VerifiedDomains>k__BackingField;
    [DataMemberAttribute]
public Guid TenantId { get; public set; }
    [DataMemberAttribute]
public string TenantName { get; public set; }
    [DataMemberAttribute]
public bool HomeTenant { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<string> VerifiedDomains { get; public set; }
    [CompilerGeneratedAttribute]
public Guid get_TenantId();
    [CompilerGeneratedAttribute]
public void set_TenantId(Guid value);
    [CompilerGeneratedAttribute]
public string get_TenantName();
    [CompilerGeneratedAttribute]
public void set_TenantName(string value);
    [CompilerGeneratedAttribute]
public bool get_HomeTenant();
    [CompilerGeneratedAttribute]
public void set_HomeTenant(bool value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_VerifiedDomains();
    [CompilerGeneratedAttribute]
public void set_VerifiedDomains(IEnumerable`1<string> value);
}
public abstract class Microsoft.VisualStudio.Services.Identity.TenantSwitchException : IdentityServiceException {
    public TenantSwitchException(string message);
    public TenantSwitchException(string message, Exception innerException);
    protected TenantSwitchException(SerializationInfo info, StreamingContext context);
}
[ExceptionMappingAttribute("0.0", "3.0", "TooManyIdentitiesReturnedException", "Microsoft.VisualStudio.Services.Identity.TooManyIdentitiesReturnedException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Identity.TooManyIdentitiesReturnedException : IdentityServiceException {
    public TooManyIdentitiesReturnedException(string message, Exception innerException);
}
public class Microsoft.VisualStudio.Services.Identity.WrongWorkOrPersonalException : TenantSwitchException {
    [CompilerGeneratedAttribute]
private string <AccountName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ShouldBePersonal>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ShouldCreatePersonal>k__BackingField;
    public string AccountName { get; }
    public bool ShouldBePersonal { get; }
    public bool ShouldCreatePersonal { get; }
    public WrongWorkOrPersonalException(string message);
    public WrongWorkOrPersonalException(string message, Exception innerException);
    protected WrongWorkOrPersonalException(SerializationInfo info, StreamingContext context);
    public WrongWorkOrPersonalException(string accountName, bool shouldBePersonal, bool shouldCreatePersonal);
    [CompilerGeneratedAttribute]
public string get_AccountName();
    [CompilerGeneratedAttribute]
public bool get_ShouldBePersonal();
    [CompilerGeneratedAttribute]
public bool get_ShouldCreatePersonal();
    private static string GetMessage(bool shouldBePersonal, bool shouldCreatePersonal);
}
public static class Microsoft.VisualStudio.Services.IdentityMruRestApiConstants : object {
    public static string Add;
    public static string Remove;
    public static string Update;
    public static string Me;
}
[GenerateAllConstantsAttribute("")]
public static class Microsoft.VisualStudio.Services.IdentityPicker.CommonIdentityPickerResourceIds : object {
    public static string ServiceArea;
    public static string IdentitiesResource;
    public static Guid IdentitiesLocationId;
    public static Guid IdentityAvatarLocationId;
    public static Guid IdentityFeatureMruLocationId;
    public static Guid IdentityConnectionsLocationId;
    private static CommonIdentityPickerResourceIds();
}
public static class Microsoft.VisualStudio.Services.Invitation.AccountInvitationEmailAttributes : object {
    public static string AccountUrlTracked;
}
[ResourceAreaAttribute("287A6D53-7DC8-4618-8D57-6945B848A4AD")]
public class Microsoft.VisualStudio.Services.Invitation.InvitationCompatHttpClientBase : VssHttpClientBase {
    public InvitationCompatHttpClientBase(Uri baseUrl, VssCredentials credentials);
    public InvitationCompatHttpClientBase(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public InvitationCompatHttpClientBase(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public InvitationCompatHttpClientBase(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public InvitationCompatHttpClientBase(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Invitation.InvitationCompatHttpClientBase/<SendAccountInvitationAsync>d__5")]
[EditorBrowsableAttribute("1")]
[ObsoleteAttribute]
public Task SendAccountInvitationAsync(InvitationData invitationData, Guid userId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Invitation.InvitationCompatHttpClientBase/<SendOrganizationInvitationAsync>d__6")]
[EditorBrowsableAttribute("1")]
[ObsoleteAttribute]
public Task SendOrganizationInvitationAsync(InvitationData invitationData, Guid userId, object userState, CancellationToken cancellationToken);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Invitation.InvitationData : object {
    [CompilerGeneratedAttribute]
private InvitationType <InvitationType>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <SenderId>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Invitee> <Invitees>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Attributes>k__BackingField;
    [DataMemberAttribute]
public InvitationType InvitationType { get; public set; }
    [DataMemberAttribute]
public Guid SenderId { get; public set; }
    [DataMemberAttribute]
public List`1<Invitee> Invitees { get; public set; }
    [DataMemberAttribute]
public Dictionary`2<string, string> Attributes { get; public set; }
    [CompilerGeneratedAttribute]
public InvitationType get_InvitationType();
    [CompilerGeneratedAttribute]
public void set_InvitationType(InvitationType value);
    [CompilerGeneratedAttribute]
public Guid get_SenderId();
    [CompilerGeneratedAttribute]
public void set_SenderId(Guid value);
    [CompilerGeneratedAttribute]
public List`1<Invitee> get_Invitees();
    [CompilerGeneratedAttribute]
public void set_Invitees(List`1<Invitee> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Attributes();
    [CompilerGeneratedAttribute]
public void set_Attributes(Dictionary`2<string, string> value);
}
[ResourceAreaAttribute("287A6D53-7DC8-4618-8D57-6945B848A4AD")]
public class Microsoft.VisualStudio.Services.Invitation.InvitationHttpClient : InvitationCompatHttpClientBase {
    public InvitationHttpClient(Uri baseUrl, VssCredentials credentials);
    public InvitationHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public InvitationHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public InvitationHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public InvitationHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Invitation.InvitationHttpClient/<SendInvitationAsync>d__5")]
public Task SendInvitationAsync(InvitationData invitationData, Guid userId, object userState, CancellationToken cancellationToken);
    public Task`1<SendInvitationsResponse> SendInvitationsAsync(InvitationData invitationData, object userState, CancellationToken cancellationToken);
}
public static class Microsoft.VisualStudio.Services.Invitation.InvitationResourceIds : object {
    public static string AreaId;
    public static string AreaName;
    public static string InvitationsResourceName;
    public static string InvitationsLocationIdString;
    public static Guid InvitationsLocationId;
    private static InvitationResourceIds();
}
public static class Microsoft.VisualStudio.Services.Invitation.InvitationResourceVersions : object {
    public static int InvitationAPIVersion;
}
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.Invitation.InvitationType : Enum {
    public int value__;
    public static InvitationType AccountInvite;
    public static InvitationType DirectoryInvite;
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Invitation.Invitee : object {
    [CompilerGeneratedAttribute]
private Guid <UserId>k__BackingField;
    [CompilerGeneratedAttribute]
private InviteeStatus <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [DataMemberAttribute]
public Guid UserId { get; public set; }
    [DataMemberAttribute]
public InviteeStatus Status { get; public set; }
    [DataMemberAttribute]
public string Message { get; public set; }
    [CompilerGeneratedAttribute]
public Guid get_UserId();
    [CompilerGeneratedAttribute]
public void set_UserId(Guid value);
    [CompilerGeneratedAttribute]
public InviteeStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(InviteeStatus value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
}
public enum Microsoft.VisualStudio.Services.Invitation.InviteeStatus : Enum {
    public int value__;
    public static InviteeStatus None;
    public static InviteeStatus Success;
    public static InviteeStatus Failed;
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Invitation.SendInvitationsResponse : object {
    [CompilerGeneratedAttribute]
private InvitationType <InvitationType>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Invitee> <Invitees>k__BackingField;
    [DataMemberAttribute]
public InvitationType InvitationType { get; public set; }
    [DataMemberAttribute]
public List`1<Invitee> Invitees { get; public set; }
    [CompilerGeneratedAttribute]
public InvitationType get_InvitationType();
    [CompilerGeneratedAttribute]
public void set_InvitationType(InvitationType value);
    [CompilerGeneratedAttribute]
public List`1<Invitee> get_Invitees();
    [CompilerGeneratedAttribute]
public void set_Invitees(List`1<Invitee> value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Licensing.AccountEntitlement : object {
    [CompilerGeneratedAttribute]
private License <license>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <AccountId>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <UserId>k__BackingField;
    [CompilerGeneratedAttribute]
private IdentityRef <User>k__BackingField;
    [CompilerGeneratedAttribute]
private AssignmentSource <AssignmentSource>k__BackingField;
    [CompilerGeneratedAttribute]
private LicensingOrigin <Origin>k__BackingField;
    [CompilerGeneratedAttribute]
private AccountUserStatus <UserStatus>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <AssignmentDate>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <LastAccessedDate>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <DateCreated>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <LastUpdated>k__BackingField;
    [CompilerGeneratedAttribute]
private AccountRights <Rights>k__BackingField;
    [DataMemberAttribute]
private License license { get; private set; }
    [DataMemberAttribute]
public Guid AccountId { get; internal set; }
    [DataMemberAttribute]
public Guid UserId { get; public set; }
    [DataMemberAttribute]
public IdentityRef User { get; internal set; }
    public License License { get; public set; }
    [DataMemberAttribute]
public AssignmentSource AssignmentSource { get; public set; }
    [DataMemberAttribute]
public LicensingOrigin Origin { get; public set; }
    [DataMemberAttribute]
public AccountUserStatus UserStatus { get; public set; }
    [DataMemberAttribute]
public DateTimeOffset AssignmentDate { get; public set; }
    [DataMemberAttribute]
public DateTimeOffset LastAccessedDate { get; public set; }
    [DataMemberAttribute]
public DateTimeOffset DateCreated { get; public set; }
    [DataMemberAttribute]
public DateTimeOffset LastUpdated { get; public set; }
    [DataMemberAttribute]
public AccountRights Rights { get; public set; }
    [CompilerGeneratedAttribute]
private License get_license();
    [CompilerGeneratedAttribute]
private void set_license(License value);
    [CompilerGeneratedAttribute]
public Guid get_AccountId();
    [CompilerGeneratedAttribute]
internal void set_AccountId(Guid value);
    [CompilerGeneratedAttribute]
public Guid get_UserId();
    [CompilerGeneratedAttribute]
public void set_UserId(Guid value);
    [CompilerGeneratedAttribute]
public IdentityRef get_User();
    [CompilerGeneratedAttribute]
internal void set_User(IdentityRef value);
    public License get_License();
    public void set_License(License value);
    [CompilerGeneratedAttribute]
public AssignmentSource get_AssignmentSource();
    [CompilerGeneratedAttribute]
public void set_AssignmentSource(AssignmentSource value);
    [CompilerGeneratedAttribute]
public LicensingOrigin get_Origin();
    [CompilerGeneratedAttribute]
public void set_Origin(LicensingOrigin value);
    [CompilerGeneratedAttribute]
public AccountUserStatus get_UserStatus();
    [CompilerGeneratedAttribute]
public void set_UserStatus(AccountUserStatus value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_AssignmentDate();
    [CompilerGeneratedAttribute]
public void set_AssignmentDate(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_LastAccessedDate();
    [CompilerGeneratedAttribute]
public void set_LastAccessedDate(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_DateCreated();
    [CompilerGeneratedAttribute]
public void set_DateCreated(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_LastUpdated();
    [CompilerGeneratedAttribute]
public void set_LastUpdated(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public AccountRights get_Rights();
    [CompilerGeneratedAttribute]
public void set_Rights(AccountRights value);
    public static bool op_Equality(AccountEntitlement left, AccountEntitlement right);
    public static bool op_Inequality(AccountEntitlement left, AccountEntitlement right);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(AccountEntitlement other);
    public virtual int GetHashCode();
}
[JsonObjectAttribute]
public class Microsoft.VisualStudio.Services.Licensing.AccountEntitlementUpdateModel : object {
    [CompilerGeneratedAttribute]
private License <License>k__BackingField;
    public License License { get; public set; }
    [CompilerGeneratedAttribute]
public License get_License();
    [CompilerGeneratedAttribute]
public void set_License(License value);
}
public class Microsoft.VisualStudio.Services.Licensing.AccountLicense : License {
    public static AccountLicense EarlyAdopter;
    public static AccountLicense Stakeholder;
    public static AccountLicense Express;
    public static AccountLicense Professional;
    public static AccountLicense Advanced;
    public AccountLicenseType License { get; }
    private AccountLicense(AccountLicenseType license);
    private static AccountLicense();
    public AccountLicenseType get_License();
    public sealed virtual int CompareTo(AccountLicense other);
    public static int Compare(AccountLicense left, AccountLicense right);
    public static bool op_GreaterThan(AccountLicense left, AccountLicense right);
    public static bool op_LessThan(AccountLicense left, AccountLicense right);
    public static License GetLicense(AccountLicenseType license);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Licensing.AccountLicenseExtensionUsage : object {
    [CompilerGeneratedAttribute]
private string <ExtensionName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ExtensionId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ProvisionedCount>k__BackingField;
    [CompilerGeneratedAttribute]
private int <IncludedQuantity>k__BackingField;
    [CompilerGeneratedAttribute]
private int <UsedCount>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MsdnUsedCount>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsTrial>k__BackingField;
    [CompilerGeneratedAttribute]
private int <RemainingTrialDays>k__BackingField;
    [CompilerGeneratedAttribute]
private MinimumRequiredServiceLevel <MinimumLicenseRequired>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <TrialExpiryDate>k__BackingField;
    [DataMemberAttribute]
public string ExtensionName { get; public set; }
    [DataMemberAttribute]
public string ExtensionId { get; public set; }
    [DataMemberAttribute]
public int ProvisionedCount { get; public set; }
    [DataMemberAttribute]
public int IncludedQuantity { get; public set; }
    [DataMemberAttribute]
public int UsedCount { get; public set; }
    [DataMemberAttribute]
public int MsdnUsedCount { get; public set; }
    [DataMemberAttribute]
public bool IsTrial { get; public set; }
    [DataMemberAttribute]
public int RemainingTrialDays { get; public set; }
    [DataMemberAttribute]
public MinimumRequiredServiceLevel MinimumLicenseRequired { get; public set; }
    [DataMemberAttribute]
public Nullable`1<DateTime> TrialExpiryDate { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ExtensionName();
    [CompilerGeneratedAttribute]
public void set_ExtensionName(string value);
    [CompilerGeneratedAttribute]
public string get_ExtensionId();
    [CompilerGeneratedAttribute]
public void set_ExtensionId(string value);
    [CompilerGeneratedAttribute]
public int get_ProvisionedCount();
    [CompilerGeneratedAttribute]
public void set_ProvisionedCount(int value);
    [CompilerGeneratedAttribute]
public int get_IncludedQuantity();
    [CompilerGeneratedAttribute]
public void set_IncludedQuantity(int value);
    [CompilerGeneratedAttribute]
public int get_UsedCount();
    [CompilerGeneratedAttribute]
public void set_UsedCount(int value);
    [CompilerGeneratedAttribute]
public int get_MsdnUsedCount();
    [CompilerGeneratedAttribute]
public void set_MsdnUsedCount(int value);
    [CompilerGeneratedAttribute]
public bool get_IsTrial();
    [CompilerGeneratedAttribute]
public void set_IsTrial(bool value);
    [CompilerGeneratedAttribute]
public int get_RemainingTrialDays();
    [CompilerGeneratedAttribute]
public void set_RemainingTrialDays(int value);
    [CompilerGeneratedAttribute]
public MinimumRequiredServiceLevel get_MinimumLicenseRequired();
    [CompilerGeneratedAttribute]
public void set_MinimumLicenseRequired(MinimumRequiredServiceLevel value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_TrialExpiryDate();
    [CompilerGeneratedAttribute]
public void set_TrialExpiryDate(Nullable`1<DateTime> value);
}
[DataContractAttribute]
[ClientIncludeModelAttribute]
public enum Microsoft.VisualStudio.Services.Licensing.AccountLicenseType : Enum {
    public int value__;
    public static AccountLicenseType None;
    public static AccountLicenseType EarlyAdopter;
    public static AccountLicenseType Express;
    public static AccountLicenseType Professional;
    public static AccountLicenseType Advanced;
    public static AccountLicenseType Stakeholder;
}
public class Microsoft.VisualStudio.Services.Licensing.AccountLicenseUsage : object {
    [CompilerGeneratedAttribute]
private AccountUserLicense <License>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ProvisionedCount>k__BackingField;
    [CompilerGeneratedAttribute]
private int <UsedCount>k__BackingField;
    [CompilerGeneratedAttribute]
private int <DisabledCount>k__BackingField;
    [CompilerGeneratedAttribute]
private int <PendingProvisionedCount>k__BackingField;
    public AccountUserLicense License { get; public set; }
    public int ProvisionedCount { get; public set; }
    public int UsedCount { get; public set; }
    public int DisabledCount { get; public set; }
    public int PendingProvisionedCount { get; public set; }
    public AccountLicenseUsage(AccountUserLicense license, int provisionedCount, int usedCount);
    public AccountLicenseUsage(AccountUserLicense license, int provisionedCount, int usedCount, int disabledCount, int pendingProvisionedCount);
    [CompilerGeneratedAttribute]
public virtual AccountUserLicense get_License();
    [CompilerGeneratedAttribute]
public virtual void set_License(AccountUserLicense value);
    [CompilerGeneratedAttribute]
public int get_ProvisionedCount();
    [CompilerGeneratedAttribute]
public void set_ProvisionedCount(int value);
    [CompilerGeneratedAttribute]
public int get_UsedCount();
    [CompilerGeneratedAttribute]
public void set_UsedCount(int value);
    [CompilerGeneratedAttribute]
public int get_DisabledCount();
    [CompilerGeneratedAttribute]
public void set_DisabledCount(int value);
    [CompilerGeneratedAttribute]
public int get_PendingProvisionedCount();
    [CompilerGeneratedAttribute]
public void set_PendingProvisionedCount(int value);
}
public static class Microsoft.VisualStudio.Services.Licensing.AccountLicensingResourceIds : object {
    public static string AreaId;
    public static string AreaName;
    public static string ExtensionRightsResource;
    public static Guid ExtensionRightsLocationId;
    public static string UsageResource;
    public static Guid UsageLocationId;
    public static string EntitlementsBatchResource;
    public static string ExtensionsAssignedToAccountResource;
    public static string ExtensionsAssignedToAccountLocationIdString;
    public static Guid ExtensionsAssignedToAccountLocationId;
    public static string EntitlementsResource;
    public static string EntitlementsLocationIdString;
    public static Guid EntitlementsLocationId;
    public static string UserEntitlementsLocationIdString;
    public static Guid UserEntitlementsLocationId;
    public static string EntitlementsSearchLocationIdString;
    public static Guid EntitlementsSearchLocationId;
    public static string UserEntitlementsBatchLocationIdString;
    public static Guid UserEntitlementsBatchLocationId;
    public static string CurrentUserEntitlementsLocationIdString;
    public static Guid CurrentUserEntitlementsLocationId;
    public static string ExtensionEntitlementsResource;
    public static string UserExtensionEntitlementsLocationIdString;
    public static Guid UserExtensionEntitlementsLocationId;
    public static string ExtensionEntitlementsLocationIdString;
    public static Guid ExtensionEntitlementsLocationId;
    public static string TransferIdentitiesExtensionsResource;
    public static string TransferIdentitiesExtensionsLocationIdString;
    public static Guid TransferIdentitiesExtensionsLocationId;
    public static string ExtensionEntitlementsBatchResource;
    public static string UsersBatchExtensionEntitlementsLocationIdString;
    public static Guid UsersBatchExtensionEntitlementsLocationId;
    public static string LicensingRightsResource;
    public static string LicensingRightsLocationIdString;
    public static Guid LicensingRightsLocationId;
    private static AccountLicensingResourceIds();
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Licensing.AccountRights : object {
    [CompilerGeneratedAttribute]
private VisualStudioOnlineServiceLevel <Level>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Reason>k__BackingField;
    [DataMemberAttribute]
public VisualStudioOnlineServiceLevel Level { get; private set; }
    [DataMemberAttribute]
public string Reason { get; private set; }
    public AccountRights(VisualStudioOnlineServiceLevel level);
    public AccountRights(VisualStudioOnlineServiceLevel level, string reason);
    [CompilerGeneratedAttribute]
public VisualStudioOnlineServiceLevel get_Level();
    [CompilerGeneratedAttribute]
private void set_Level(VisualStudioOnlineServiceLevel value);
    [CompilerGeneratedAttribute]
public string get_Reason();
    [CompilerGeneratedAttribute]
private void set_Reason(string value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Licensing.AccountUserLicense : object {
    [CompilerGeneratedAttribute]
private int <License>k__BackingField;
    [CompilerGeneratedAttribute]
private LicensingSource <Source>k__BackingField;
    [DataMemberAttribute]
public int License { get; public set; }
    [DataMemberAttribute]
public LicensingSource Source { get; public set; }
    public AccountUserLicense(LicensingSource source, int license);
    [CompilerGeneratedAttribute]
public virtual int get_License();
    [CompilerGeneratedAttribute]
public virtual void set_License(int value);
    [CompilerGeneratedAttribute]
public virtual LicensingSource get_Source();
    [CompilerGeneratedAttribute]
public virtual void set_Source(LicensingSource value);
    public virtual string ToString();
}
public class Microsoft.VisualStudio.Services.Licensing.AccountUserLicenseComparer : object {
    [CompilerGeneratedAttribute]
private static AccountUserLicenseComparer <Instance>k__BackingField;
    public static AccountUserLicenseComparer Instance { get; }
    private static AccountUserLicenseComparer();
    public sealed virtual int Compare(AccountUserLicense x, AccountUserLicense y);
    [CompilerGeneratedAttribute]
public static AccountUserLicenseComparer get_Instance();
}
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.Licensing.AssignmentSource : Enum {
    public int value__;
    public static AssignmentSource None;
    public static AssignmentSource Unknown;
    public static AssignmentSource GroupRule;
}
[ResourceAreaAttribute("B002715C-F261-41EB-ACA3-19292F32B62B")]
public class Microsoft.VisualStudio.Services.Licensing.Client.AccountExtensionLicensingHttpClient : VssHttpClientBase {
    protected static Version currentApiVersion;
    public AccountExtensionLicensingHttpClient(Uri baseUrl, VssCredentials credentials);
    public AccountExtensionLicensingHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public AccountExtensionLicensingHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public AccountExtensionLicensingHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public AccountExtensionLicensingHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    private static AccountExtensionLicensingHttpClient();
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.AccountExtensionLicensingHttpClient/<TransferExtensionsForIdentitiesAsync>d__5")]
public virtual Task TransferExtensionsForIdentitiesAsync(IList`1<IdentityMapping> identityMapping, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.AccountExtensionLicensingHttpClient/<AssignExtensionToUsersAsync>d__6")]
public virtual Task`1<ICollection`1<ExtensionOperationResult>> AssignExtensionToUsersAsync(string extensionId, IList`1<Guid> userIds, bool isAutoAssignment, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.AccountExtensionLicensingHttpClient/<GetExtensionsAssignedToUserAsync>d__7")]
public virtual Task`1<IDictionary`2<string, LicensingSource>> GetExtensionsAssignedToUserAsync(Guid userId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.AccountExtensionLicensingHttpClient/<BulkGetExtensionsAssignedToUsersAsync>d__8")]
public virtual Task`1<IDictionary`2<Guid, IList`1<ExtensionSource>>> BulkGetExtensionsAssignedToUsersAsync(IList`1<Guid> userIds, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.AccountExtensionLicensingHttpClient/<GetExtensionsAssignedToUsersBatchAsync>d__9")]
public virtual Task`1<IDictionary`2<Guid, IList`1<string>>> GetExtensionsAssignedToUsersBatchAsync(IList`1<Guid> userIds, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.AccountExtensionLicensingHttpClient/<GetExtensionStatusForUsersAsync>d__10")]
public virtual Task`1<IDictionary`2<Guid, ExtensionAssignmentDetails>> GetExtensionStatusForUsersAsync(string extensionId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.AccountExtensionLicensingHttpClient/<GetExtensionLicenseUsageAsync>d__11")]
public virtual Task`1<IEnumerable`1<AccountLicenseExtensionUsage>> GetExtensionLicenseUsageAsync(object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.AccountExtensionLicensingHttpClient/<UnassignExtensionFromUsersAsync>d__12")]
public virtual Task`1<ICollection`1<ExtensionOperationResult>> UnassignExtensionFromUsersAsync(string extensionId, IList`1<Guid> userIds, LicensingSource source, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.AccountExtensionLicensingHttpClient/<AssignExtensionToAllEligibleUsersAsync>d__13")]
public virtual Task`1<ICollection`1<ExtensionOperationResult>> AssignExtensionToAllEligibleUsersAsync(string extensionId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.AccountExtensionLicensingHttpClient/<GetEligibleUsersForExtensionAsync>d__14")]
public virtual Task`1<IList`1<Guid>> GetEligibleUsersForExtensionAsync(string extensionId, ExtensionFilterOptions options, object userState, CancellationToken cancellationToken);
}
[ResourceAreaAttribute("B002715C-F261-41EB-ACA3-19292F32B62B")]
public class Microsoft.VisualStudio.Services.Licensing.Client.AccountLicensingHttpClient : VssHttpClientBase {
    private static Dictionary`2<string, Type> s_translatedExceptions;
    protected static Version previewApiVersion;
    protected static Version SearchMemberspreviewApiVersion;
    protected IDictionary`2<string, Type> TranslatedExceptions { get; }
    public AccountLicensingHttpClient(Uri baseUrl, VssCredentials credentials);
    public AccountLicensingHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public AccountLicensingHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public AccountLicensingHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public AccountLicensingHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    private static AccountLicensingHttpClient();
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.AccountLicensingHttpClient/<ComputeExtensionRightsAsync>d__5")]
public virtual Task`1<IDictionary`2<string, bool>> ComputeExtensionRightsAsync(IEnumerable`1<string> extensionIds, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.AccountLicensingHttpClient/<GetExtensionRightsAsync>d__6")]
public virtual Task`1<ExtensionRightsResult> GetExtensionRightsAsync(object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.AccountLicensingHttpClient/<GetAccountLicensesUsageAsync>d__7")]
public virtual Task`1<IEnumerable`1<AccountLicenseUsage>> GetAccountLicensesUsageAsync(object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.AccountLicensingHttpClient/<GetAccountEntitlementsAsync>d__8")]
public virtual Task`1<IEnumerable`1<AccountEntitlement>> GetAccountEntitlementsAsync(object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.AccountLicensingHttpClient/<GetAccountEntitlementsAsync>d__9")]
public virtual Task`1<IEnumerable`1<AccountEntitlement>> GetAccountEntitlementsAsync(int top, int skip, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.AccountLicensingHttpClient/<SearchAccountEntitlementsAsync>d__10")]
public virtual Task`1<PagedAccountEntitlements> SearchAccountEntitlementsAsync(string continuation, string filter, string orderBy, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.AccountLicensingHttpClient/<SearchMemberAccountEntitlementsAsync>d__11")]
public virtual Task`1<PagedAccountEntitlements> SearchMemberAccountEntitlementsAsync(string continuation, string filter, string orderBy, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.AccountLicensingHttpClient/<GetAccountEntitlementsAsync>d__12")]
public virtual Task`1<IEnumerable`1<AccountEntitlement>> GetAccountEntitlementsAsync(IList`1<Guid> userIds, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.AccountLicensingHttpClient/<ObtainAvailableAccountEntitlementsAsync>d__13")]
public virtual Task`1<IList`1<AccountEntitlement>> ObtainAvailableAccountEntitlementsAsync(IList`1<Guid> userIds, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.AccountLicensingHttpClient/<GetAccountEntitlementAsync>d__14")]
public virtual Task`1<AccountEntitlement> GetAccountEntitlementAsync(object userState, CancellationToken cancellationToken);
    public virtual Task`1<AccountEntitlement> GetAccountEntitlementAsync(Guid userId, object userState, CancellationToken cancellationToken);
    public virtual Task`1<AccountEntitlement> GetAccountEntitlementAsync(Guid userId, bool determineRights, object userState, CancellationToken cancellationToken);
    public virtual Task`1<AccountEntitlement> GetAccountEntitlementAsync(Guid userId, bool determineRights, bool createIfNotExists, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.AccountLicensingHttpClient/<GetAccountEntitlementAsync>d__18")]
private Task`1<AccountEntitlement> GetAccountEntitlementAsync(Guid userId, List`1<KeyValuePair`2<string, string>> queryParams, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.AccountLicensingHttpClient/<AssignEntitlementAsync>d__19")]
public virtual Task`1<AccountEntitlement> AssignEntitlementAsync(Guid userId, License license, bool dontNotifyUser, LicensingOrigin origin, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.AccountLicensingHttpClient/<AssignAvailableEntitlementAsync>d__20")]
public virtual Task`1<AccountEntitlement> AssignAvailableEntitlementAsync(Guid userId, bool dontNotifyUser, LicensingOrigin origin, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.AccountLicensingHttpClient/<DeleteEntitlementAsync>d__21")]
public virtual Task DeleteEntitlementAsync(Guid userId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.AccountLicensingHttpClient/<TransferIdentityRightsAsync>d__22")]
public virtual Task TransferIdentityRightsAsync(IEnumerable`1<KeyValuePair`2<Guid, Guid>> userIdTransferMap, Nullable`1<bool> validateOnly, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.AccountLicensingHttpClient/<CreateRequestMessageAsync>d__23")]
protected virtual Task`1<HttpRequestMessage> CreateRequestMessageAsync(HttpMethod method, IEnumerable`1<KeyValuePair`2<string, string>> additionalHeaders, Guid locationId, object routeValues, ApiResourceVersion version, HttpContent content, IEnumerable`1<KeyValuePair`2<string, string>> queryParameters, object userState, CancellationToken cancellationToken, string mediaType);
    protected ObjectContent`1<T> CreateContentFor(T value);
    protected virtual IDictionary`2<string, Type> get_TranslatedExceptions();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<HttpRequestMessage> <>n__0(HttpMethod method, IEnumerable`1<KeyValuePair`2<string, string>> additionalHeaders, Guid locationId, object routeValues, ApiResourceVersion version, HttpContent content, IEnumerable`1<KeyValuePair`2<string, string>> queryParameters, object userState, CancellationToken cancellationToken, string mediaType);
}
[ResourceAreaAttribute("C73A23A1-59BB-458C-8CE3-02C83215E015")]
public class Microsoft.VisualStudio.Services.Licensing.Client.ExtensionLicensingHttpClient : VssHttpClientBase {
    protected static Version currentApiVersion;
    public ExtensionLicensingHttpClient(Uri baseUrl, VssCredentials credentials);
    public ExtensionLicensingHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public ExtensionLicensingHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public ExtensionLicensingHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public ExtensionLicensingHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    private static ExtensionLicensingHttpClient();
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.ExtensionLicensingHttpClient/<TransferExtensionsForIdentitiesAsync>d__5")]
public virtual Task TransferExtensionsForIdentitiesAsync(IList`1<IdentityMapping> identityMapping, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.ExtensionLicensingHttpClient/<AssignExtensionToUsersAsync>d__6")]
public virtual Task`1<ICollection`1<ExtensionOperationResult>> AssignExtensionToUsersAsync(string extensionId, IList`1<Guid> userIds, bool isAutoAssignment, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.ExtensionLicensingHttpClient/<GetExtensionsAssignedToUserAsync>d__7")]
public virtual Task`1<IDictionary`2<string, LicensingSource>> GetExtensionsAssignedToUserAsync(Guid userId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.ExtensionLicensingHttpClient/<BulkGetExtensionsAssignedToUsersAsync>d__8")]
public virtual Task`1<IDictionary`2<Guid, IList`1<ExtensionSource>>> BulkGetExtensionsAssignedToUsersAsync(IList`1<Guid> userIds, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.ExtensionLicensingHttpClient/<GetExtensionsAssignedToUsersBatchAsync>d__9")]
public virtual Task`1<IDictionary`2<Guid, IList`1<string>>> GetExtensionsAssignedToUsersBatchAsync(IList`1<Guid> userIds, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.ExtensionLicensingHttpClient/<GetExtensionStatusForUsersAsync>d__10")]
public virtual Task`1<IDictionary`2<Guid, ExtensionAssignmentDetails>> GetExtensionStatusForUsersAsync(string extensionId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.ExtensionLicensingHttpClient/<GetExtensionLicenseUsageAsync>d__11")]
public virtual Task`1<IEnumerable`1<AccountLicenseExtensionUsage>> GetExtensionLicenseUsageAsync(object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.ExtensionLicensingHttpClient/<UnassignExtensionFromUsersAsync>d__12")]
public virtual Task`1<ICollection`1<ExtensionOperationResult>> UnassignExtensionFromUsersAsync(string extensionId, IList`1<Guid> userIds, LicensingSource source, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.ExtensionLicensingHttpClient/<AssignExtensionToAllEligibleUsersAsync>d__13")]
public virtual Task`1<ICollection`1<ExtensionOperationResult>> AssignExtensionToAllEligibleUsersAsync(string extensionId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.ExtensionLicensingHttpClient/<GetEligibleUsersForExtensionAsync>d__14")]
public virtual Task`1<IList`1<Guid>> GetEligibleUsersForExtensionAsync(string extensionId, ExtensionFilterOptions options, object userState, CancellationToken cancellationToken);
}
public interface Microsoft.VisualStudio.Services.Licensing.Client.IAccountExtensionLicensingHttpClient {
    public abstract virtual Task`1<ICollection`1<ExtensionOperationResult>> AssignExtensionToAllEligibleUsersAsync(string extensionId, object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<ICollection`1<ExtensionOperationResult>> AssignExtensionToUsersAsync(string extensionId, IList`1<Guid> userIds, bool isAutoAssignment, object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<IDictionary`2<Guid, IList`1<ExtensionSource>>> BulkGetExtensionsAssignedToUsersAsync(IList`1<Guid> userIds, object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<IList`1<Guid>> GetEligibleUsersForExtensionAsync(string extensionId, ExtensionFilterOptions options, object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<IEnumerable`1<AccountLicenseExtensionUsage>> GetExtensionLicenseUsageAsync(object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<IDictionary`2<string, LicensingSource>> GetExtensionsAssignedToUserAsync(Guid userId, object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<IDictionary`2<Guid, IList`1<string>>> GetExtensionsAssignedToUsersBatchAsync(IList`1<Guid> userIds, object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<IDictionary`2<Guid, ExtensionAssignmentDetails>> GetExtensionStatusForUsersAsync(string extensionId, object userState, CancellationToken cancellationToken);
    public abstract virtual Task TransferExtensionsForIdentitiesAsync(IList`1<IdentityMapping> identityMapping, object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<ICollection`1<ExtensionOperationResult>> UnassignExtensionFromUsersAsync(string extensionId, IList`1<Guid> userIds, LicensingSource source, object userState, CancellationToken cancellationToken);
}
public interface Microsoft.VisualStudio.Services.Licensing.Client.IAccountLicensingHttpClient {
    public abstract virtual Task`1<AccountEntitlement> AssignAvailableEntitlementAsync(Guid userId, bool dontNotifyUser, LicensingOrigin origin, object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<AccountEntitlement> AssignEntitlementAsync(Guid userId, License license, bool dontNotifyUser, LicensingOrigin origin, object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<IDictionary`2<string, bool>> ComputeExtensionRightsAsync(IEnumerable`1<string> extensionIds, object userState, CancellationToken cancellationToken);
    public abstract virtual Task DeleteEntitlementAsync(Guid userId, object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<AccountEntitlement> GetAccountEntitlementAsync(object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<AccountEntitlement> GetAccountEntitlementAsync(Guid userId, object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<AccountEntitlement> GetAccountEntitlementAsync(Guid userId, bool determineRights, object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<AccountEntitlement> GetAccountEntitlementAsync(Guid userId, bool determineRights, bool createIfNotExists, object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<IEnumerable`1<AccountEntitlement>> GetAccountEntitlementsAsync(object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<IEnumerable`1<AccountEntitlement>> GetAccountEntitlementsAsync(IList`1<Guid> userIds, object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<IEnumerable`1<AccountEntitlement>> GetAccountEntitlementsAsync(int top, int skip, object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<IEnumerable`1<AccountLicenseUsage>> GetAccountLicensesUsageAsync(object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<ExtensionRightsResult> GetExtensionRightsAsync(object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<IList`1<AccountEntitlement>> ObtainAvailableAccountEntitlementsAsync(IList`1<Guid> userIds, object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<PagedAccountEntitlements> SearchAccountEntitlementsAsync(string continuation, string filter, string orderBy, object userState, CancellationToken cancellationToken);
    public abstract virtual Task`1<PagedAccountEntitlements> SearchMemberAccountEntitlementsAsync(string continuation, string filter, string orderBy, object userState, CancellationToken cancellationToken);
    public abstract virtual Task TransferIdentityRightsAsync(IEnumerable`1<KeyValuePair`2<Guid, Guid>> userIdTransferMap, Nullable`1<bool> validateOnly, object userState, CancellationToken cancellationToken);
}
[EditorBrowsableAttribute("1")]
public class Microsoft.VisualStudio.Services.Licensing.Client.LicensingCompatHttpClientBase : VssHttpClientBase {
    private static Version previewApiVersion;
    protected LicensingCompatHttpClientBase(Uri baseUrl, VssCredentials credentials);
    protected LicensingCompatHttpClientBase(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    protected LicensingCompatHttpClientBase(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    protected LicensingCompatHttpClientBase(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    protected LicensingCompatHttpClientBase(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    private static LicensingCompatHttpClientBase();
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.LicensingCompatHttpClientBase/<GetUsageRightsAsync>d__5")]
[EditorBrowsableAttribute("1")]
[ObsoleteAttribute]
public virtual Task`1<IEnumerable`1<IUsageRight>> GetUsageRightsAsync(string rightName, object userState);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.LicensingCompatHttpClientBase/<GetUsageRightsAsync>d__6")]
[EditorBrowsableAttribute("1")]
[ObsoleteAttribute]
public virtual Task`1<IEnumerable`1<IUsageRight>> GetUsageRightsAsync(string rightName, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.LicensingCompatHttpClientBase/<GetServiceRightsAsync>d__7")]
[EditorBrowsableAttribute("1")]
[ObsoleteAttribute]
public virtual Task`1<IEnumerable`1<IServiceRight>> GetServiceRightsAsync(string rightName, object userState);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.LicensingCompatHttpClientBase/<GetCertificateAsync>d__8")]
[EditorBrowsableAttribute("1")]
[ObsoleteAttribute]
public virtual Task`1<Byte[]> GetCertificateAsync(object userState);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.LicensingCompatHttpClientBase/<GetCertificateAsync>d__9")]
[EditorBrowsableAttribute("1")]
[ObsoleteAttribute]
public virtual Task`1<Byte[]> GetCertificateAsync(object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.LicensingCompatHttpClientBase/<GetClientRightsContainerAsync>d__10")]
[EditorBrowsableAttribute("1")]
[ObsoleteAttribute]
public virtual Task`1<ClientRightsContainer> GetClientRightsContainerAsync(ClientRightsQueryContext queryContext, ClientRightsTelemetryContext telemetryContext, object userState);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.LicensingCompatHttpClientBase/<GetAccountLicensesUsageAsync>d__11")]
[EditorBrowsableAttribute("1")]
[ObsoleteAttribute]
public virtual Task`1<IEnumerable`1<AccountLicenseUsage>> GetAccountLicensesUsageAsync(object userState);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.LicensingCompatHttpClientBase/<GetAccountEntitlementsAsync>d__12")]
[EditorBrowsableAttribute("1")]
[ObsoleteAttribute]
public virtual Task`1<IEnumerable`1<AccountEntitlement>> GetAccountEntitlementsAsync(object userState);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.LicensingCompatHttpClientBase/<GetAccountEntitlementAsync>d__13")]
[EditorBrowsableAttribute("1")]
[ObsoleteAttribute]
public virtual Task`1<AccountEntitlement> GetAccountEntitlementAsync(object userState);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.LicensingCompatHttpClientBase/<AssignEntitlementAsync>d__14")]
[EditorBrowsableAttribute("1")]
[ObsoleteAttribute]
public virtual Task`1<AccountEntitlement> AssignEntitlementAsync(Guid userId, License license, object userState);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.LicensingCompatHttpClientBase/<AssignEntitlementAsync>d__15")]
[EditorBrowsableAttribute("1")]
[ObsoleteAttribute]
public virtual Task`1<AccountEntitlement> AssignEntitlementAsync(Guid userId, License license, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.LicensingCompatHttpClientBase/<AssignAvailableEntitlementAsync>d__16")]
[EditorBrowsableAttribute("1")]
[ObsoleteAttribute]
public virtual Task`1<AccountEntitlement> AssignAvailableEntitlementAsync(Guid userId, object userState);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.LicensingCompatHttpClientBase/<AssignEntitlementAsync>d__17")]
[EditorBrowsableAttribute("1")]
[ObsoleteAttribute]
public virtual Task`1<AccountEntitlement> AssignEntitlementAsync(Guid userId, License license, bool dontNotifyUser, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.LicensingCompatHttpClientBase/<AssignAvailableEntitlementAsync>d__18")]
[EditorBrowsableAttribute("1")]
[ObsoleteAttribute]
public virtual Task`1<AccountEntitlement> AssignAvailableEntitlementAsync(Guid userId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.LicensingCompatHttpClientBase/<AssignAvailableEntitlementAsync>d__19")]
[EditorBrowsableAttribute("1")]
[ObsoleteAttribute]
public virtual Task`1<AccountEntitlement> AssignAvailableEntitlementAsync(Guid userId, bool dontNotifyUser, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.LicensingCompatHttpClientBase/<ComputeExtensionRightsAsync>d__20")]
[EditorBrowsableAttribute("1")]
[ObsoleteAttribute]
public virtual Task`1<IDictionary`2<string, bool>> ComputeExtensionRightsAsync(IEnumerable`1<string> extensionIds, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.LicensingCompatHttpClientBase/<GetExtensionRightsAsync>d__21")]
[EditorBrowsableAttribute("1")]
[ObsoleteAttribute]
public virtual Task`1<ExtensionRightsResult> GetExtensionRightsAsync(object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.LicensingCompatHttpClientBase/<GetAccountLicensesUsageAsync>d__22")]
[EditorBrowsableAttribute("1")]
[ObsoleteAttribute]
public virtual Task`1<IEnumerable`1<AccountLicenseUsage>> GetAccountLicensesUsageAsync(object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.LicensingCompatHttpClientBase/<GetAccountEntitlementsAsync>d__23")]
[EditorBrowsableAttribute("1")]
[ObsoleteAttribute]
public virtual Task`1<IEnumerable`1<AccountEntitlement>> GetAccountEntitlementsAsync(object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.LicensingCompatHttpClientBase/<GetAccountEntitlementsAsync>d__24")]
[EditorBrowsableAttribute("1")]
[ObsoleteAttribute]
public virtual Task`1<IEnumerable`1<AccountEntitlement>> GetAccountEntitlementsAsync(int top, int skip, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.LicensingCompatHttpClientBase/<SearchAccountEntitlementsAsync>d__25")]
[EditorBrowsableAttribute("1")]
[ObsoleteAttribute]
public virtual Task`1<PagedAccountEntitlements> SearchAccountEntitlementsAsync(string continuation, string filter, string orderBy, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.LicensingCompatHttpClientBase/<GetAccountEntitlementsAsync>d__26")]
[EditorBrowsableAttribute("1")]
[ObsoleteAttribute]
public virtual Task`1<IEnumerable`1<AccountEntitlement>> GetAccountEntitlementsAsync(IList`1<Guid> userIds, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.LicensingCompatHttpClientBase/<ObtainAvailableAccountEntitlementsAsync>d__27")]
[EditorBrowsableAttribute("1")]
[ObsoleteAttribute]
public virtual Task`1<IList`1<AccountEntitlement>> ObtainAvailableAccountEntitlementsAsync(IList`1<Guid> userIds, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.LicensingCompatHttpClientBase/<GetAccountEntitlementAsync>d__28")]
[EditorBrowsableAttribute("1")]
[ObsoleteAttribute]
public virtual Task`1<AccountEntitlement> GetAccountEntitlementAsync(object userState, CancellationToken cancellationToken);
    [EditorBrowsableAttribute("1")]
[ObsoleteAttribute]
public virtual Task`1<AccountEntitlement> GetAccountEntitlementAsync(Guid userId, object userState, CancellationToken cancellationToken);
    [EditorBrowsableAttribute("1")]
[ObsoleteAttribute]
public virtual Task`1<AccountEntitlement> GetAccountEntitlementAsync(Guid userId, bool determineRights, object userState, CancellationToken cancellationToken);
    [EditorBrowsableAttribute("1")]
[ObsoleteAttribute]
public virtual Task`1<AccountEntitlement> GetAccountEntitlementAsync(Guid userId, bool determineRights, bool createIfNotExists, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.LicensingCompatHttpClientBase/<GetAccountEntitlementAsync>d__32")]
[EditorBrowsableAttribute("1")]
[ObsoleteAttribute]
private Task`1<AccountEntitlement> GetAccountEntitlementAsync(Guid userId, List`1<KeyValuePair`2<string, string>> queryParams, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.LicensingCompatHttpClientBase/<AssignEntitlementAsync>d__33")]
[EditorBrowsableAttribute("1")]
[ObsoleteAttribute]
public virtual Task`1<AccountEntitlement> AssignEntitlementAsync(Guid userId, License license, bool dontNotifyUser, LicensingOrigin origin, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.LicensingCompatHttpClientBase/<AssignAvailableEntitlementAsync>d__34")]
[EditorBrowsableAttribute("1")]
[ObsoleteAttribute]
public virtual Task`1<AccountEntitlement> AssignAvailableEntitlementAsync(Guid userId, bool dontNotifyUser, LicensingOrigin origin, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.LicensingCompatHttpClientBase/<DeleteEntitlementAsync>d__35")]
[EditorBrowsableAttribute("1")]
[ObsoleteAttribute]
public virtual Task DeleteEntitlementAsync(Guid userId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.LicensingCompatHttpClientBase/<RegisterExtensionLicenseAsync>d__36")]
[EditorBrowsableAttribute("1")]
[ObsoleteAttribute]
public virtual Task`1<bool> RegisterExtensionLicenseAsync(ExtensionLicenseData extensionLicenseData, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.LicensingCompatHttpClientBase/<GetExtensionLicenseDataAsync>d__37")]
[EditorBrowsableAttribute("1")]
[ObsoleteAttribute]
public virtual Task`1<ExtensionLicenseData> GetExtensionLicenseDataAsync(string extensionId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.LicensingCompatHttpClientBase/<TransferIdentityRightsAsync>d__38")]
[EditorBrowsableAttribute("1")]
[ObsoleteAttribute]
public virtual Task TransferIdentityRightsAsync(IEnumerable`1<KeyValuePair`2<Guid, Guid>> userIdTransferMap, Nullable`1<bool> validateOnly, object userState, CancellationToken cancellationToken);
    protected ObjectContent`1<T> CreateContentFor(T value);
    protected static void ValidateClientRightsQueryContext(ClientRightsQueryContext queryContext);
    protected static void ValidateClientRightsTelemetryContext(ClientRightsTelemetryContext telemetryContext);
    protected static void SerializeTelemetryContextAsOptionalQueryParameters(ClientRightsTelemetryContext telemetryContext, IList`1<KeyValuePair`2<string, string>> queryParameters);
}
[ResourceAreaAttribute("C73A23A1-59BB-458C-8CE3-02C83215E015")]
public class Microsoft.VisualStudio.Services.Licensing.Client.LicensingHttpClient : LicensingCompatHttpClientBase {
    private static Dictionary`2<string, Type> s_translatedExceptions;
    protected static Version previewApiVersion;
    private static Version searchMemberspreviewApiVersion;
    protected IDictionary`2<string, Type> TranslatedExceptions { get; }
    public LicensingHttpClient(Uri baseUrl, VssCredentials credentials);
    public LicensingHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public LicensingHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public LicensingHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public LicensingHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    private static LicensingHttpClient();
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.LicensingHttpClient/<GetServiceRightsAsync>d__5")]
public virtual Task`1<IEnumerable`1<IServiceRight>> GetServiceRightsAsync(string rightName, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.LicensingHttpClient/<GetClientRightsContainerAsync>d__6")]
public virtual Task`1<ClientRightsContainer> GetClientRightsContainerAsync(ClientRightsQueryContext queryContext, ClientRightsTelemetryContext telemetryContext, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.LicensingHttpClient/<GetMsdnEntitlementsAsync>d__7")]
public virtual Task`1<IEnumerable`1<MsdnEntitlement>> GetMsdnEntitlementsAsync(object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Licensing.Client.LicensingHttpClient/<SearchMemberAccountEntitlementsAsync>d__8")]
public virtual Task`1<PagedAccountEntitlements> SearchMemberAccountEntitlementsAsync(string continuation, string filter, string orderBy, object userState, CancellationToken cancellationToken);
    protected virtual IDictionary`2<string, Type> get_TranslatedExceptions();
}
public class Microsoft.VisualStudio.Services.Licensing.ClientRight : object {
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> <Attributes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AuthorizedVSEdition>k__BackingField;
    [CompilerGeneratedAttribute]
private Version <ClientVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <ExpirationDate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LicenseDescriptionId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LicenseFallbackDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LicenseUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LicenseSourceName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Version <Version>k__BackingField;
    public Dictionary`2<string, object> Attributes { get; public set; }
    public string AuthorizedVSEdition { get; public set; }
    public Version ClientVersion { get; public set; }
    public DateTimeOffset ExpirationDate { get; public set; }
    public string LicenseDescriptionId { get; public set; }
    public string LicenseFallbackDescription { get; public set; }
    public string LicenseUrl { get; public set; }
    public string LicenseSourceName { get; public set; }
    public string Name { get; public set; }
    public Version Version { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Dictionary`2<string, object> get_Attributes();
    [CompilerGeneratedAttribute]
public void set_Attributes(Dictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_AuthorizedVSEdition();
    [CompilerGeneratedAttribute]
public void set_AuthorizedVSEdition(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Version get_ClientVersion();
    [CompilerGeneratedAttribute]
public void set_ClientVersion(Version value);
    [CompilerGeneratedAttribute]
public sealed virtual DateTimeOffset get_ExpirationDate();
    [CompilerGeneratedAttribute]
public void set_ExpirationDate(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_LicenseDescriptionId();
    [CompilerGeneratedAttribute]
public void set_LicenseDescriptionId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_LicenseFallbackDescription();
    [CompilerGeneratedAttribute]
public void set_LicenseFallbackDescription(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_LicenseUrl();
    [CompilerGeneratedAttribute]
public void set_LicenseUrl(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_LicenseSourceName();
    [CompilerGeneratedAttribute]
public void set_LicenseSourceName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Version get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(Version value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Licensing.ClientRightsContainer : object {
    [CompilerGeneratedAttribute]
private Byte[] <CertificateBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Token>k__BackingField;
    [DataMemberAttribute]
public Byte[] CertificateBytes { get; public set; }
    [DataMemberAttribute]
public string Token { get; public set; }
    [CompilerGeneratedAttribute]
public Byte[] get_CertificateBytes();
    [CompilerGeneratedAttribute]
public void set_CertificateBytes(Byte[] value);
    [CompilerGeneratedAttribute]
public string get_Token();
    [CompilerGeneratedAttribute]
public void set_Token(string value);
}
public class Microsoft.VisualStudio.Services.Licensing.ClientRightsEnvelope : object {
    [CompilerGeneratedAttribute]
private Guid <ActivityId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Canary>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <CreationDate>k__BackingField;
    [CompilerGeneratedAttribute]
private Version <EnvelopeVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <ExpirationDate>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <RefreshInterval>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<IClientRight> <Rights>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <UserId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserName>k__BackingField;
    public Guid ActivityId { get; public set; }
    public string Canary { get; public set; }
    public DateTimeOffset CreationDate { get; public set; }
    public Version EnvelopeVersion { get; public set; }
    public DateTimeOffset ExpirationDate { get; public set; }
    public TimeSpan RefreshInterval { get; public set; }
    public IList`1<IClientRight> Rights { get; public set; }
    public Guid UserId { get; public set; }
    public string UserName { get; public set; }
    public ClientRightsEnvelope(IList`1<IClientRight> rights);
    [CompilerGeneratedAttribute]
public sealed virtual Guid get_ActivityId();
    [CompilerGeneratedAttribute]
public void set_ActivityId(Guid value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Canary();
    [CompilerGeneratedAttribute]
public void set_Canary(string value);
    [CompilerGeneratedAttribute]
public sealed virtual DateTimeOffset get_CreationDate();
    [CompilerGeneratedAttribute]
public void set_CreationDate(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public sealed virtual Version get_EnvelopeVersion();
    [CompilerGeneratedAttribute]
public void set_EnvelopeVersion(Version value);
    [CompilerGeneratedAttribute]
public sealed virtual DateTimeOffset get_ExpirationDate();
    [CompilerGeneratedAttribute]
public void set_ExpirationDate(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public sealed virtual TimeSpan get_RefreshInterval();
    [CompilerGeneratedAttribute]
public void set_RefreshInterval(TimeSpan value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<IClientRight> get_Rights();
    [CompilerGeneratedAttribute]
public void set_Rights(IList`1<IClientRight> value);
    [CompilerGeneratedAttribute]
public sealed virtual Guid get_UserId();
    [CompilerGeneratedAttribute]
public void set_UserId(Guid value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_UserName();
    [CompilerGeneratedAttribute]
public void set_UserName(string value);
}
internal static class Microsoft.VisualStudio.Services.Licensing.ClientRightsEnvelopeClaims : object {
    internal static string ActivityId;
    internal static string Canary;
    internal static string EnvelopeVersion;
    internal static string RefreshInterval;
    internal static string Rights;
    internal static string UserId;
    internal static string UserName;
}
public class Microsoft.VisualStudio.Services.Licensing.ClientRightsQueryContext : object {
    [CompilerGeneratedAttribute]
private string <Canary>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IncludeCertificate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MachineId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProductEdition>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProductFamily>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProductVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ReleaseType>k__BackingField;
    public string Canary { get; public set; }
    public bool IncludeCertificate { get; public set; }
    public string MachineId { get; public set; }
    public string ProductEdition { get; public set; }
    public string ProductFamily { get; public set; }
    public string ProductVersion { get; public set; }
    public string ReleaseType { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Canary();
    [CompilerGeneratedAttribute]
public void set_Canary(string value);
    [CompilerGeneratedAttribute]
public bool get_IncludeCertificate();
    [CompilerGeneratedAttribute]
public void set_IncludeCertificate(bool value);
    [CompilerGeneratedAttribute]
public string get_MachineId();
    [CompilerGeneratedAttribute]
public void set_MachineId(string value);
    [CompilerGeneratedAttribute]
public string get_ProductEdition();
    [CompilerGeneratedAttribute]
public void set_ProductEdition(string value);
    [CompilerGeneratedAttribute]
public string get_ProductFamily();
    [CompilerGeneratedAttribute]
public void set_ProductFamily(string value);
    [CompilerGeneratedAttribute]
public string get_ProductVersion();
    [CompilerGeneratedAttribute]
public void set_ProductVersion(string value);
    [CompilerGeneratedAttribute]
public string get_ReleaseType();
    [CompilerGeneratedAttribute]
public void set_ReleaseType(string value);
}
public class Microsoft.VisualStudio.Services.Licensing.ClientRightsTelemetryContext : object {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Attributes>k__BackingField;
    public IDictionary`2<string, string> Attributes { get; public set; }
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Attributes();
    [CompilerGeneratedAttribute]
public void set_Attributes(IDictionary`2<string, string> value);
}
[JsonObjectAttribute]
public class Microsoft.VisualStudio.Services.Licensing.ExtensionAssignment : object {
    [CompilerGeneratedAttribute]
private string <ExtensionGalleryId>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<Guid> <UserIds>k__BackingField;
    [CompilerGeneratedAttribute]
private LicensingSource <LicensingSource>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsAutoAssignment>k__BackingField;
    public string ExtensionGalleryId { get; public set; }
    public IList`1<Guid> UserIds { get; public set; }
    public LicensingSource LicensingSource { get; public set; }
    public bool IsAutoAssignment { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ExtensionGalleryId();
    [CompilerGeneratedAttribute]
public void set_ExtensionGalleryId(string value);
    [CompilerGeneratedAttribute]
public IList`1<Guid> get_UserIds();
    [CompilerGeneratedAttribute]
public void set_UserIds(IList`1<Guid> value);
    [CompilerGeneratedAttribute]
public LicensingSource get_LicensingSource();
    [CompilerGeneratedAttribute]
public void set_LicensingSource(LicensingSource value);
    [CompilerGeneratedAttribute]
public bool get_IsAutoAssignment();
    [CompilerGeneratedAttribute]
public void set_IsAutoAssignment(bool value);
}
public class Microsoft.VisualStudio.Services.Licensing.ExtensionAssignmentDetails : object {
    [CompilerGeneratedAttribute]
private ExtensionAssignmentStatus <AssignmentStatus>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SourceCollectionName>k__BackingField;
    public ExtensionAssignmentStatus AssignmentStatus { get; public set; }
    public string SourceCollectionName { get; public set; }
    public ExtensionAssignmentDetails(ExtensionAssignmentStatus assignmentStatus, string sourceCollectionName);
    [CompilerGeneratedAttribute]
public ExtensionAssignmentStatus get_AssignmentStatus();
    [CompilerGeneratedAttribute]
public void set_AssignmentStatus(ExtensionAssignmentStatus value);
    [CompilerGeneratedAttribute]
public string get_SourceCollectionName();
    [CompilerGeneratedAttribute]
public void set_SourceCollectionName(string value);
}
public enum Microsoft.VisualStudio.Services.Licensing.ExtensionAssignmentStatus : Enum {
    public int value__;
    [EnumMemberAttribute]
public static ExtensionAssignmentStatus NotEligible;
    [EnumMemberAttribute]
public static ExtensionAssignmentStatus NotAssigned;
    [EnumMemberAttribute]
public static ExtensionAssignmentStatus AccountAssignment;
    [EnumMemberAttribute]
public static ExtensionAssignmentStatus BundleAssignment;
    [EnumMemberAttribute]
public static ExtensionAssignmentStatus ImplicitAssignment;
    [EnumMemberAttribute]
public static ExtensionAssignmentStatus PendingValidation;
    [EnumMemberAttribute]
public static ExtensionAssignmentStatus TrialAssignment;
    [EnumMemberAttribute]
public static ExtensionAssignmentStatus RoamingAccountAssignment;
}
[FlagsAttribute]
public enum Microsoft.VisualStudio.Services.Licensing.ExtensionFilterOptions : Enum {
    public int value__;
    [EnumMemberAttribute]
public static ExtensionFilterOptions None;
    [EnumMemberAttribute]
public static ExtensionFilterOptions Bundle;
    [EnumMemberAttribute]
public static ExtensionFilterOptions AccountAssignment;
    [EnumMemberAttribute]
public static ExtensionFilterOptions ImplicitAssignment;
    [EnumMemberAttribute]
public static ExtensionFilterOptions All;
}
public enum Microsoft.VisualStudio.Services.Licensing.ExtensionOperation : Enum {
    public int value__;
    [EnumMemberAttribute]
public static ExtensionOperation Assign;
    [EnumMemberAttribute]
public static ExtensionOperation Unassign;
}
public class Microsoft.VisualStudio.Services.Licensing.ExtensionOperationResult : object {
    [CompilerGeneratedAttribute]
private Guid <AccountId>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <UserId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ExtensionId>k__BackingField;
    [CompilerGeneratedAttribute]
private ExtensionOperation <Operation>k__BackingField;
    [CompilerGeneratedAttribute]
private OperationResult <Result>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    public Guid AccountId { get; }
    public Guid UserId { get; public set; }
    public string ExtensionId { get; }
    public ExtensionOperation Operation { get; }
    public OperationResult Result { get; public set; }
    public string Message { get; public set; }
    public ExtensionOperationResult(Guid accountId, Guid userId, string extensionId, ExtensionOperation operation);
    [CompilerGeneratedAttribute]
public Guid get_AccountId();
    [CompilerGeneratedAttribute]
public Guid get_UserId();
    [CompilerGeneratedAttribute]
public void set_UserId(Guid value);
    [CompilerGeneratedAttribute]
public string get_ExtensionId();
    [CompilerGeneratedAttribute]
public ExtensionOperation get_Operation();
    [CompilerGeneratedAttribute]
public OperationResult get_Result();
    [CompilerGeneratedAttribute]
public void set_Result(OperationResult value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    public virtual string ToString();
}
public enum Microsoft.VisualStudio.Services.Licensing.ExtensionRightsReasonCode : Enum {
    public int value__;
    [EnumMemberAttribute]
public static ExtensionRightsReasonCode Normal;
    [EnumMemberAttribute]
public static ExtensionRightsReasonCode FeatureFlagSet;
    [EnumMemberAttribute]
public static ExtensionRightsReasonCode NullIdentity;
    [EnumMemberAttribute]
public static ExtensionRightsReasonCode ServiceIdentity;
    [EnumMemberAttribute]
public static ExtensionRightsReasonCode ErrorCallingService;
}
public class Microsoft.VisualStudio.Services.Licensing.ExtensionRightsResult : object {
    [CompilerGeneratedAttribute]
private Guid <HostId>k__BackingField;
    [CompilerGeneratedAttribute]
private HashSet`1<string> <EntitledExtensions>k__BackingField;
    [CompilerGeneratedAttribute]
private ExtensionRightsResultCode <ResultCode>k__BackingField;
    [CompilerGeneratedAttribute]
private ExtensionRightsReasonCode <ReasonCode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Reason>k__BackingField;
    public Guid HostId { get; public set; }
    public HashSet`1<string> EntitledExtensions { get; public set; }
    public ExtensionRightsResultCode ResultCode { get; public set; }
    public ExtensionRightsReasonCode ReasonCode { get; public set; }
    public string Reason { get; public set; }
    [CompilerGeneratedAttribute]
public Guid get_HostId();
    [CompilerGeneratedAttribute]
public void set_HostId(Guid value);
    [CompilerGeneratedAttribute]
public HashSet`1<string> get_EntitledExtensions();
    [CompilerGeneratedAttribute]
public void set_EntitledExtensions(HashSet`1<string> value);
    [CompilerGeneratedAttribute]
public ExtensionRightsResultCode get_ResultCode();
    [CompilerGeneratedAttribute]
public void set_ResultCode(ExtensionRightsResultCode value);
    [CompilerGeneratedAttribute]
public ExtensionRightsReasonCode get_ReasonCode();
    [CompilerGeneratedAttribute]
public void set_ReasonCode(ExtensionRightsReasonCode value);
    [CompilerGeneratedAttribute]
public string get_Reason();
    [CompilerGeneratedAttribute]
public void set_Reason(string value);
    public virtual string ToString();
}
public enum Microsoft.VisualStudio.Services.Licensing.ExtensionRightsResultCode : Enum {
    public int value__;
    [EnumMemberAttribute]
public static ExtensionRightsResultCode Normal;
    [EnumMemberAttribute]
public static ExtensionRightsResultCode AllFree;
    [EnumMemberAttribute]
public static ExtensionRightsResultCode FreeExtensionsFree;
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Licensing.ExtensionSource : object {
    [CompilerGeneratedAttribute]
private string <ExtensionGalleryId>k__BackingField;
    [CompilerGeneratedAttribute]
private LicensingSource <LicensingSource>k__BackingField;
    [CompilerGeneratedAttribute]
private AssignmentSource <AssignmentSource>k__BackingField;
    [DataMemberAttribute]
public string ExtensionGalleryId { get; public set; }
    [DataMemberAttribute]
public LicensingSource LicensingSource { get; public set; }
    [DataMemberAttribute]
public AssignmentSource AssignmentSource { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ExtensionGalleryId();
    [CompilerGeneratedAttribute]
public void set_ExtensionGalleryId(string value);
    [CompilerGeneratedAttribute]
public LicensingSource get_LicensingSource();
    [CompilerGeneratedAttribute]
public void set_LicensingSource(LicensingSource value);
    [CompilerGeneratedAttribute]
public AssignmentSource get_AssignmentSource();
    [CompilerGeneratedAttribute]
public void set_AssignmentSource(AssignmentSource value);
    public sealed virtual bool Equals(ExtensionSource other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
public interface Microsoft.VisualStudio.Services.Licensing.IClientRight {
    public string AuthorizedVSEdition { get; }
    public Version ClientVersion { get; }
    public string LicenseDescriptionId { get; }
    public string LicenseFallbackDescription { get; }
    public string LicenseUrl { get; }
    public string LicenseSourceName { get; }
    public abstract virtual string get_AuthorizedVSEdition();
    public abstract virtual Version get_ClientVersion();
    public abstract virtual string get_LicenseDescriptionId();
    public abstract virtual string get_LicenseFallbackDescription();
    public abstract virtual string get_LicenseUrl();
    public abstract virtual string get_LicenseSourceName();
}
public interface Microsoft.VisualStudio.Services.Licensing.IClientRightsEnvelope {
    public Guid ActivityId { get; }
    public string Canary { get; }
    public DateTimeOffset CreationDate { get; }
    public Version EnvelopeVersion { get; }
    public DateTimeOffset ExpirationDate { get; }
    public TimeSpan RefreshInterval { get; }
    public IList`1<IClientRight> Rights { get; }
    public Guid UserId { get; }
    public string UserName { get; }
    public abstract virtual Guid get_ActivityId();
    public abstract virtual string get_Canary();
    public abstract virtual DateTimeOffset get_CreationDate();
    public abstract virtual Version get_EnvelopeVersion();
    public abstract virtual DateTimeOffset get_ExpirationDate();
    public abstract virtual TimeSpan get_RefreshInterval();
    public abstract virtual IList`1<IClientRight> get_Rights();
    public abstract virtual Guid get_UserId();
    public abstract virtual string get_UserName();
}
public class Microsoft.VisualStudio.Services.Licensing.IdentityMapping : object {
    [CompilerGeneratedAttribute]
private Identity <SourceIdentity>k__BackingField;
    [CompilerGeneratedAttribute]
private Identity <TargetIdentity>k__BackingField;
    public Identity SourceIdentity { get; public set; }
    public Identity TargetIdentity { get; public set; }
    [CompilerGeneratedAttribute]
public Identity get_SourceIdentity();
    [CompilerGeneratedAttribute]
public void set_SourceIdentity(Identity value);
    [CompilerGeneratedAttribute]
public Identity get_TargetIdentity();
    [CompilerGeneratedAttribute]
public void set_TargetIdentity(Identity value);
}
[ExceptionMappingAttribute("0.0", "3.0", "InvalidClientRightsQueryContextException", "Microsoft.VisualStudio.Services.Licensing.InvalidClientRightsQueryContextException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Licensing.InvalidClientRightsQueryContextException : LicensingException {
    public InvalidClientRightsQueryContextException(string message);
    public InvalidClientRightsQueryContextException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "InvalidClientVersionException", "Microsoft.VisualStudio.Services.Licensing.InvalidClientVersionException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Licensing.InvalidClientVersionException : LicensingException {
    public InvalidClientVersionException(string message);
    public InvalidClientVersionException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "InvalidExtensionIdException", "Microsoft.VisualStudio.Services.Licensing.InvalidExtensionIdException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Licensing.InvalidExtensionIdException : LicensingException {
    public InvalidExtensionIdException(string message);
    public InvalidExtensionIdException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "InvalidLicensingOperation", "Microsoft.VisualStudio.Services.Licensing.InvalidLicensingOperation, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Licensing.InvalidLicensingOperation : LicensingException {
    public InvalidLicensingOperation(string message);
    public InvalidLicensingOperation(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "InvalidRightNameException", "Microsoft.VisualStudio.Services.Licensing.InvalidRightNameException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Licensing.InvalidRightNameException : LicensingException {
    public InvalidRightNameException(string message);
    public InvalidRightNameException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "InvalidVisualStudioOffersQueryContextException", "Microsoft.VisualStudio.Services.Licensing.InvalidVisualStudioOffersQueryContextException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Licensing.InvalidVisualStudioOffersQueryContextException : LicensingException {
    public InvalidVisualStudioOffersQueryContextException(string message);
    public InvalidVisualStudioOffersQueryContextException(string message, Exception innerException);
}
public interface Microsoft.VisualStudio.Services.Licensing.IServiceRight {
    public VisualStudioOnlineServiceLevel ServiceLevel { get; }
    public abstract virtual VisualStudioOnlineServiceLevel get_ServiceLevel();
}
public interface Microsoft.VisualStudio.Services.Licensing.IUsageRight {
    public Dictionary`2<string, object> Attributes { get; }
    public DateTimeOffset ExpirationDate { get; }
    public string Name { get; }
    public Version Version { get; }
    public abstract virtual Dictionary`2<string, object> get_Attributes();
    public abstract virtual DateTimeOffset get_ExpirationDate();
    public abstract virtual string get_Name();
    public abstract virtual Version get_Version();
}
[JsonConverterAttribute("Microsoft.VisualStudio.Services.Licensing.LicenseJsonConverter")]
[TypeConverterAttribute("Microsoft.VisualStudio.Services.Licensing.LicenseTypeConverter")]
[JsonObjectAttribute]
[DebuggerDisplayAttribute("{ToString(), nq}")]
public abstract class Microsoft.VisualStudio.Services.Licensing.License : object {
    public static License None;
    public static License Auto;
    private Type licenseEnumType;
    private int license;
    [CompilerGeneratedAttribute]
private LicensingSource <Source>k__BackingField;
    public LicensingSource Source { get; private set; }
    internal License(LicensingSource source, Type licenseEnumType, int license);
    private static License();
    [CompilerGeneratedAttribute]
public LicensingSource get_Source();
    [CompilerGeneratedAttribute]
private void set_Source(LicensingSource value);
    internal int GetLicenseAsInt32();
    public virtual int GetHashCode();
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(License obj);
    public virtual string ToString();
    public static License Parse(string text);
    public static License Parse(string text, bool ignoreCase);
    public static bool TryParse(string text, License& license);
    public static bool TryParse(string text, bool ignoreCase, License& license);
    public static bool Equals(License left, License right);
    public static bool IsNullOrNone(License license);
    internal static License GetLicense(LicensingSource source, int license);
    public static bool op_Equality(License left, License right);
    public static bool op_Inequality(License left, License right);
    public static bool op_GreaterThan(License left, License right);
    public static bool op_GreaterThanOrEqual(License left, License right);
    public static bool op_LessThan(License left, License right);
    public static bool op_LessThanOrEqual(License left, License right);
}
public class Microsoft.VisualStudio.Services.Licensing.LicenseComparer : object {
    [CompilerGeneratedAttribute]
private static LicenseComparer <Instance>k__BackingField;
    public static LicenseComparer Instance { get; }
    private static LicenseComparer();
    public sealed virtual int Compare(License x, License y);
    public int GetWeight(License license);
    [CompilerGeneratedAttribute]
public static LicenseComparer get_Instance();
}
public class Microsoft.VisualStudio.Services.Licensing.LicensedAccountUser : object {
    [CompilerGeneratedAttribute]
private Guid <AccountId>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <UserId>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<AccountUserLicense> <AvailableLicenses>k__BackingField;
    public Guid AccountId { get; public set; }
    public Guid UserId { get; public set; }
    public List`1<AccountUserLicense> AvailableLicenses { get; public set; }
    public LicensedAccountUser(Guid accountId, Guid userId);
    public LicensedAccountUser(Guid accountId, Guid userId, List`1<AccountUserLicense> availableRights);
    [CompilerGeneratedAttribute]
public Guid get_AccountId();
    [CompilerGeneratedAttribute]
public void set_AccountId(Guid value);
    [CompilerGeneratedAttribute]
public Guid get_UserId();
    [CompilerGeneratedAttribute]
public void set_UserId(Guid value);
    [CompilerGeneratedAttribute]
public List`1<AccountUserLicense> get_AvailableLicenses();
    [CompilerGeneratedAttribute]
public void set_AvailableLicenses(List`1<AccountUserLicense> value);
}
internal class Microsoft.VisualStudio.Services.Licensing.LicenseJsonConverter : VssSecureJsonConverter {
    public virtual bool CanConvert(Type objectType);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
}
[ExceptionMappingAttribute("0.0", "3.0", "LicenseNotAvailableException", "Microsoft.VisualStudio.Services.Licensing.LicenseNotAvailableException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Licensing.LicenseNotAvailableException : LicensingException {
    public LicenseNotAvailableException(string message);
    public LicenseNotAvailableException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "LicenseServiceUnavailableException", "Microsoft.VisualStudio.Services.Licensing.InvalidRightNameException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Licensing.LicenseServiceUnavailableException : VssServiceException {
    public LicenseServiceUnavailableException(string message);
    public LicenseServiceUnavailableException(string message, Exception innerException);
}
internal class Microsoft.VisualStudio.Services.Licensing.LicenseTypeConverter : TypeConverter {
    public virtual bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType);
    public virtual bool CanConvertTo(ITypeDescriptorContext context, Type destinationType);
    public virtual object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value);
    public virtual object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType);
    public virtual bool IsValid(ITypeDescriptorContext context, object value);
}
[ExceptionMappingAttribute("0.0", "3.0", "LicensingException", "Microsoft.VisualStudio.Services.Licensing.LicensingException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public abstract class Microsoft.VisualStudio.Services.Licensing.LicensingException : VssServiceException {
    public LicensingException(string message);
    public LicensingException(string message, Exception innerException);
}
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.Licensing.LicensingOrigin : Enum {
    public int value__;
    public static LicensingOrigin None;
    public static LicensingOrigin OnDemandPrivateProject;
    public static LicensingOrigin OnDemandPublicProject;
    public static LicensingOrigin UserHubInvitation;
    public static LicensingOrigin PrivateProjectInvitation;
    public static LicensingOrigin PublicProjectInvitation;
}
public static class Microsoft.VisualStudio.Services.Licensing.LicensingResourceIds : object {
    public static string AreaId;
    public static string AreaName;
    [ObsoleteAttribute]
public static string CertificateResource;
    [ObsoleteAttribute]
public static Guid CertificateLocationid;
    public static string ClientRightsResource;
    public static Guid ClientRightsLocationid;
    public static string MsdnResource;
    public static string MsdnPresenceLocationIdString;
    public static Guid MsdnPresenceLocationId;
    public static string MsdnEntitlementsLocationIdString;
    public static Guid MsdnEntitlementsLocationId;
    public static string ExtensionRightsResource;
    public static Guid ExtensionRightsLocationId;
    [ObsoleteAttribute]
public static string ExtensionLicenseResource;
    [ObsoleteAttribute]
public static Guid ExtensionLicenseLocationId;
    [ObsoleteAttribute]
public static string UsageRightsResource;
    [ObsoleteAttribute]
public static Guid UsageRightsLocationid;
    public static string ServiceRightsResource;
    public static Guid ServiceRightsLocationid;
    public static string UsageResource;
    public static Guid UsageLocationid;
    public static string EntitlementsResource;
    public static string EntitlementsBatchResource;
    public static string ExtensionsAssignedToAccountResource;
    public static string ExtensionsAssignedToAccountLocationIdString;
    public static Guid ExtensionsAssignedToAccountLocationId;
    public static string EntitlementsLocationIdString;
    public static Guid EntitlementsLocationid;
    public static string UserEntitlementsLocationIdString;
    public static Guid UserEntitlementsLocationId;
    public static string EntitlementsSearchLocationIdString;
    public static Guid EntitlementsSearchLocationId;
    public static string UserEntitlementsBatchLocationIdString;
    public static Guid UserEntitlementsBatchLocationId;
    public static string CurrentUserEntitlementsLocationIdString;
    public static Guid CurrentUserEntitlementsLocationId;
    public static string AssignAvailableEntitlementsLocationIdString;
    public static Guid AssignAvailableEntitlementsLocationId;
    public static string ExtensionEntitlementsResource;
    public static string UserExtensionEntitlementsLocationIdString;
    public static Guid UserExtensionEntitlementsLocationId;
    public static string ExtensionEntitlementsLocationIdString;
    public static Guid ExtensionEntitlementsLocationId;
    public static string TransferIdentitiesExtensionsResource;
    public static string TransferIdentitiesExtensionsLocationIdString;
    public static Guid TransferIdentitiesExtensionsLocationId;
    public static string ExtensionEntitlementsBatchResource;
    public static string UsersBatchExtensionEntitlementsLocationIdString;
    public static Guid UsersBatchExtensionEntitlementsLocationId;
    public static string LicensingRightsResource;
    public static string LicensingRightsLocationIdString;
    public static Guid LicensingRightsLocationId;
    public static string LicensingSettingsResource;
    public static string LicensingSettingsLocationIdString;
    public static Guid LicensingSettingsLocationId;
    private static LicensingResourceIds();
}
public static class Microsoft.VisualStudio.Services.Licensing.LicensingResourceVersions : object {
    public static int AccountRightsResourcePreviewVersion;
    public static int CertificateResourcePreviewVersion;
    public static int ClientRightsResourcePreviewVersion;
    public static int UsageRightsResourcePreviewVersion;
    public static int ServiceRightsResourceRtmVersion;
    public static int AccountUsageResourceRtmVersion;
    public static int EntitlementResourceRtmVersion;
    public static int EntitlementsBatchResourcePreviewVersion;
    public static int LicensingRightsResourceRtmVersion;
    public static int MsdnResourceRtmVersion;
    public static int ExtensionRightsResourceRtmVersion;
    public static int ExtensionLicenseResourceRtmVersion;
    public static int ExtensionEntitlementsResourceRtmVersion;
    public static int ExtensionEntitlementsBatchResourceRtmVersion;
    public static int ExtensionEntitlementsBatch2ResourceRtmVersion;
    public static int TransferExtensionsForIdentitiesRtmVersion;
    public static int LicensingSettingsResourceRtmVersion;
    public static int SearchAccountEntitlementResourceRtmVersion;
}
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.Licensing.LicensingSource : Enum {
    public int value__;
    public static LicensingSource None;
    public static LicensingSource Account;
    public static LicensingSource Msdn;
    public static LicensingSource Profile;
    public static LicensingSource Auto;
    public static LicensingSource Trial;
}
public static class Microsoft.VisualStudio.Services.Licensing.LicensingUtility : object {
    public static IClientRightsEnvelope ParseClientRightsToken(string clientRightsToken, X509Certificate2 certificate);
    internal static IClientRightsEnvelope ParseJwt(JsonWebToken jwt, JsonWebTokenValidationParameters validationParameters);
    private static string GetRequiredClientRightsAttribute(Dictionary`2<string, string> claims, string name);
    private static string GetOptionalClientRightsAttribute(Dictionary`2<string, string> claims, string name, string defaultValue);
}
[ExceptionMappingAttribute("0.0", "3.0", "MaterializationFailedDuringLicensingException", "Microsoft.VisualStudio.Services.Licensing.MaterializationFailedDuringLicensingException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Licensing.MaterializationFailedDuringLicensingException : LicensingException {
    public MaterializationFailedDuringLicensingException(string message);
    public MaterializationFailedDuringLicensingException(string message, Exception innerException);
}
public class Microsoft.VisualStudio.Services.Licensing.MsdnEntitlement : object {
    [CompilerGeneratedAttribute]
private string <EntitlementCode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EntitlementName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EntitlementType>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsEntitlementAvailable>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsActivated>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <SubscriptionExpirationDate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SubscriptionId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SubscriptionLevelCode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SubscriptionLevelName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SubscriptionStatus>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SubscriptionChannel>k__BackingField;
    public string EntitlementCode { get; public set; }
    public string EntitlementName { get; public set; }
    public string EntitlementType { get; public set; }
    public bool IsEntitlementAvailable { get; public set; }
    public Nullable`1<bool> IsActivated { get; public set; }
    public DateTimeOffset SubscriptionExpirationDate { get; public set; }
    public string SubscriptionId { get; public set; }
    public string SubscriptionLevelCode { get; public set; }
    public string SubscriptionLevelName { get; public set; }
    public string SubscriptionStatus { get; public set; }
    public string SubscriptionChannel { get; public set; }
    [CompilerGeneratedAttribute]
public string get_EntitlementCode();
    [CompilerGeneratedAttribute]
public void set_EntitlementCode(string value);
    [CompilerGeneratedAttribute]
public string get_EntitlementName();
    [CompilerGeneratedAttribute]
public void set_EntitlementName(string value);
    [CompilerGeneratedAttribute]
public string get_EntitlementType();
    [CompilerGeneratedAttribute]
public void set_EntitlementType(string value);
    [CompilerGeneratedAttribute]
public bool get_IsEntitlementAvailable();
    [CompilerGeneratedAttribute]
public void set_IsEntitlementAvailable(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IsActivated();
    [CompilerGeneratedAttribute]
public void set_IsActivated(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_SubscriptionExpirationDate();
    [CompilerGeneratedAttribute]
public void set_SubscriptionExpirationDate(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public string get_SubscriptionId();
    [CompilerGeneratedAttribute]
public void set_SubscriptionId(string value);
    [CompilerGeneratedAttribute]
public string get_SubscriptionLevelCode();
    [CompilerGeneratedAttribute]
public void set_SubscriptionLevelCode(string value);
    [CompilerGeneratedAttribute]
public string get_SubscriptionLevelName();
    [CompilerGeneratedAttribute]
public void set_SubscriptionLevelName(string value);
    [CompilerGeneratedAttribute]
public string get_SubscriptionStatus();
    [CompilerGeneratedAttribute]
public void set_SubscriptionStatus(string value);
    [CompilerGeneratedAttribute]
public string get_SubscriptionChannel();
    [CompilerGeneratedAttribute]
public void set_SubscriptionChannel(string value);
    public virtual string ToString();
    public MsdnEntitlement Clone();
    private sealed virtual override object System.ICloneable.Clone();
}
public class Microsoft.VisualStudio.Services.Licensing.MsdnLicense : License {
    public static MsdnLicense Eligible;
    public static MsdnLicense Professional;
    public static MsdnLicense Platforms;
    public static MsdnLicense TestProfessional;
    public static MsdnLicense Premium;
    public static MsdnLicense Ultimate;
    public static MsdnLicense Enterprise;
    public MsdnLicenseType License { get; }
    private MsdnLicense(MsdnLicenseType license);
    private static MsdnLicense();
    public MsdnLicenseType get_License();
    public sealed virtual int CompareTo(MsdnLicense other);
    public static int Compare(MsdnLicense left, MsdnLicense right);
    public static bool op_GreaterThan(MsdnLicense left, MsdnLicense right);
    public static bool op_LessThan(MsdnLicense left, MsdnLicense right);
    public static License GetLicense(MsdnLicenseType license);
}
[DataContractAttribute]
[ClientIncludeModelAttribute]
public enum Microsoft.VisualStudio.Services.Licensing.MsdnLicenseType : Enum {
    public int value__;
    public static MsdnLicenseType None;
    public static MsdnLicenseType Eligible;
    public static MsdnLicenseType Professional;
    public static MsdnLicenseType Platforms;
    public static MsdnLicenseType TestProfessional;
    public static MsdnLicenseType Premium;
    public static MsdnLicenseType Ultimate;
    public static MsdnLicenseType Enterprise;
}
public enum Microsoft.VisualStudio.Services.Licensing.OperationResult : Enum {
    public int value__;
    [EnumMemberAttribute]
public static OperationResult Success;
    [EnumMemberAttribute]
public static OperationResult Warning;
    [EnumMemberAttribute]
public static OperationResult Error;
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Licensing.PagedAccountEntitlements : object {
    [CompilerGeneratedAttribute]
private string <ContinuationToken>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<AccountEntitlement> <AccountEntitlements>k__BackingField;
    [DataMemberAttribute]
public string ContinuationToken { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<AccountEntitlement> AccountEntitlements { get; public set; }
    public PagedAccountEntitlements(IEnumerable`1<AccountEntitlement> list, string continuationToken);
    [CompilerGeneratedAttribute]
public string get_ContinuationToken();
    [CompilerGeneratedAttribute]
public void set_ContinuationToken(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<AccountEntitlement> get_AccountEntitlements();
    [CompilerGeneratedAttribute]
public void set_AccountEntitlements(IEnumerable`1<AccountEntitlement> value);
}
public class Microsoft.VisualStudio.Services.Licensing.ServiceRight : object {
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> <Attributes>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <ExpirationDate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private VisualStudioOnlineServiceLevel <ServiceLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private Version <Version>k__BackingField;
    public Dictionary`2<string, object> Attributes { get; public set; }
    public DateTimeOffset ExpirationDate { get; public set; }
    public string Name { get; public set; }
    public VisualStudioOnlineServiceLevel ServiceLevel { get; public set; }
    public Version Version { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Dictionary`2<string, object> get_Attributes();
    [CompilerGeneratedAttribute]
public void set_Attributes(Dictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public sealed virtual DateTimeOffset get_ExpirationDate();
    [CompilerGeneratedAttribute]
public void set_ExpirationDate(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public sealed virtual VisualStudioOnlineServiceLevel get_ServiceLevel();
    [CompilerGeneratedAttribute]
public void set_ServiceLevel(VisualStudioOnlineServiceLevel value);
    [CompilerGeneratedAttribute]
public sealed virtual Version get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(Version value);
}
[ExceptionMappingAttribute("0.0", "3.0", "TransferUserLicenseException", "Microsoft.VisualStudio.Services.Licensing.InvalidLicensingOperation, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Licensing.TransferUserLicenseException : LicensingException {
    public TransferUserLicenseException(string message);
    public TransferUserLicenseException(string message, Exception innerException);
}
public class Microsoft.VisualStudio.Services.Licensing.UsageRight : object {
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> <Attributes>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <ExpirationDate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Version <Version>k__BackingField;
    public Dictionary`2<string, object> Attributes { get; public set; }
    public DateTimeOffset ExpirationDate { get; public set; }
    public string Name { get; public set; }
    public Version Version { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Dictionary`2<string, object> get_Attributes();
    [CompilerGeneratedAttribute]
public void set_Attributes(Dictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public sealed virtual DateTimeOffset get_ExpirationDate();
    [CompilerGeneratedAttribute]
public void set_ExpirationDate(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Version get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(Version value);
}
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.Licensing.VisualStudioOnlineServiceLevel : Enum {
    public int value__;
    [EnumMemberAttribute]
public static VisualStudioOnlineServiceLevel None;
    [EnumMemberAttribute]
public static VisualStudioOnlineServiceLevel Express;
    [EnumMemberAttribute]
public static VisualStudioOnlineServiceLevel Advanced;
    [EnumMemberAttribute]
public static VisualStudioOnlineServiceLevel AdvancedPlus;
    [EnumMemberAttribute]
public static VisualStudioOnlineServiceLevel Stakeholder;
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Location.AccessMapping : object {
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Moniker>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccessPoint>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <ServiceOwner>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VirtualDirectory>k__BackingField;
    [DataMemberAttribute]
public string DisplayName { get; public set; }
    [DataMemberAttribute]
public string Moniker { get; public set; }
    [DataMemberAttribute]
public string AccessPoint { get; public set; }
    [DataMemberAttribute]
public Guid ServiceOwner { get; public set; }
    [DataMemberAttribute]
public string VirtualDirectory { get; public set; }
    private Guid Microsoft.VisualStudio.Services.WebApi.ISecuredObject.NamespaceId { get; }
    private int Microsoft.VisualStudio.Services.WebApi.ISecuredObject.RequiredPermissions { get; }
    public AccessMapping(string moniker, string displayName, string accessPoint, Guid serviceOwner);
    public AccessMapping(string moniker, string displayName, string accessPoint, Guid serviceOwner, string virtualDirectory);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public string get_Moniker();
    [CompilerGeneratedAttribute]
public void set_Moniker(string value);
    [CompilerGeneratedAttribute]
public string get_AccessPoint();
    [CompilerGeneratedAttribute]
public void set_AccessPoint(string value);
    [CompilerGeneratedAttribute]
public Guid get_ServiceOwner();
    [CompilerGeneratedAttribute]
public void set_ServiceOwner(Guid value);
    [CompilerGeneratedAttribute]
public string get_VirtualDirectory();
    [CompilerGeneratedAttribute]
public void set_VirtualDirectory(string value);
    public AccessMapping Clone();
    internal static AccessMapping FromXml(IServiceProvider serviceProvider, XmlReader reader);
    private sealed virtual override Guid Microsoft.VisualStudio.Services.WebApi.ISecuredObject.get_NamespaceId();
    private sealed virtual override int Microsoft.VisualStudio.Services.WebApi.ISecuredObject.get_RequiredPermissions();
    private sealed virtual override string Microsoft.VisualStudio.Services.WebApi.ISecuredObject.GetToken();
}
[GenerateAllConstantsAttribute("")]
public static class Microsoft.VisualStudio.Services.Location.AccessMappingConstants : object {
    public static string PublicAccessMappingMoniker;
    public static string ServerAccessMappingMoniker;
    public static string ClientAccessMappingMoniker;
    public static string HostGuidAccessMappingMoniker;
    public static string RootDomainMappingMoniker;
    public static string AzureInstanceMappingMoniker;
    public static string ServicePathMappingMoniker;
    public static string ServiceDomainMappingMoniker;
    public static string LegacyPublicAccessMappingMoniker;
    public static string MessageQueueAccessMappingMoniker;
    public static string LegacyAppDotAccessMappingMoniker;
    public static string AffinitizedMultiInstanceAccessMappingMoniker;
    public static string VstsAccessMapping;
    public static string DevOpsAccessMapping;
    [ObsoleteAttribute]
[EditorBrowsableAttribute("1")]
public static string ServiceAccessMappingMoniker;
    private static AccessMappingConstants();
}
[ExceptionMappingAttribute("0.0", "3.0", "ActionDeniedBySubscriberException", "Microsoft.VisualStudio.Services.Location.ActionDeniedBySubscriberException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Location.ActionDeniedBySubscriberException : VssServiceException {
    public ActionDeniedBySubscriberException(string message);
    public ActionDeniedBySubscriberException(string message, Exception ex);
    protected ActionDeniedBySubscriberException(SerializationInfo info, StreamingContext context);
}
[ExceptionMappingAttribute("0.0", "3.0", "CannotChangeParentDefinitionException", "Microsoft.VisualStudio.Services.Location.CannotChangeParentDefinitionException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Location.CannotChangeParentDefinitionException : VssServiceException {
    public CannotChangeParentDefinitionException(string message);
    public CannotChangeParentDefinitionException(string message, Exception ex);
    protected CannotChangeParentDefinitionException(SerializationInfo info, StreamingContext context);
    private static string GetMessage(string message);
}
[ClientCircuitBreakerSettingsAttribute("15", "80")]
[ClientCancellationTimeoutAttribute("30")]
public class Microsoft.VisualStudio.Services.Location.Client.LocationHttpClient : VssHttpClientBase {
    private static Dictionary`2<string, Type> s_translatedExceptions;
    private static string connectSubUrl;
    protected static ApiResourceVersion s_currentApiVersion;
    protected IDictionary`2<string, Type> TranslatedExceptions { get; }
    private static LocationHttpClient();
    public LocationHttpClient(Uri baseUrl, VssCredentials credentials);
    public LocationHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public LocationHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public LocationHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public LocationHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Location.Client.LocationHttpClient/<GetConnectionDataAsync>d__6")]
public virtual Task`1<ConnectionData> GetConnectionDataAsync(ConnectOptions connectOptions, long lastChangeId, CancellationToken cancellationToken, object userState);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Location.Client.LocationHttpClient/<UpdateServiceDefinitionsAsync>d__7")]
public virtual Task UpdateServiceDefinitionsAsync(IEnumerable`1<ServiceDefinition> definitions, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Location.Client.LocationHttpClient/<DeleteServiceDefinitionAsync>d__8")]
public virtual Task`1<HttpResponseMessage> DeleteServiceDefinitionAsync(string serviceType, Guid identifier, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Location.Client.LocationHttpClient/<GetServiceDefinitionsAsync>d__9")]
public virtual Task`1<IEnumerable`1<ServiceDefinition>> GetServiceDefinitionsAsync();
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Location.Client.LocationHttpClient/<GetServiceDefinitionsAsync>d__10")]
public virtual Task`1<IEnumerable`1<ServiceDefinition>> GetServiceDefinitionsAsync(string serviceType);
    public virtual Task`1<ServiceDefinition> GetServiceDefinitionAsync(string serviceType, Guid identifier, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Location.Client.LocationHttpClient/<GetServiceDefinitionAsync>d__12")]
[EditorBrowsableAttribute("1")]
public virtual Task`1<ServiceDefinition> GetServiceDefinitionAsync(string serviceType, Guid identifier, bool allowFaultIn, bool previewFaultIn, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Location.Client.LocationHttpClient/<FlushSpsServiceDefinitionAsync>d__13")]
[EditorBrowsableAttribute("1")]
public virtual Task`1<HttpResponseMessage> FlushSpsServiceDefinitionAsync(Guid hostId, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Location.Client.LocationHttpClient/<GetResourceAreasAsync>d__14")]
public virtual Task`1<IEnumerable`1<ResourceAreaInfo>> GetResourceAreasAsync();
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Location.Client.LocationHttpClient/<GetResourceAreaAsync>d__15")]
public virtual Task`1<ResourceAreaInfo> GetResourceAreaAsync(Guid areaId);
    protected virtual IDictionary`2<string, Type> get_TranslatedExceptions();
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Location.ConnectionData : object {
    [CompilerGeneratedAttribute]
private Identity <AuthenticatedUser>k__BackingField;
    [CompilerGeneratedAttribute]
private Identity <AuthorizedUser>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <InstanceId>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <DeploymentId>k__BackingField;
    [CompilerGeneratedAttribute]
private DeploymentFlags <DeploymentType>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LastUserAccess>k__BackingField;
    [CompilerGeneratedAttribute]
private LocationServiceData <LocationServiceData>k__BackingField;
    [CompilerGeneratedAttribute]
private string <WebApplicationRelativeDirectory>k__BackingField;
    private Guid m_catalogResourceId;
    private int m_serverCapabilities;
    [DataMemberAttribute]
public Identity AuthenticatedUser { get; public set; }
    [DataMemberAttribute]
public Identity AuthorizedUser { get; public set; }
    [DataMemberAttribute]
public Guid InstanceId { get; public set; }
    [DataMemberAttribute]
public Guid DeploymentId { get; public set; }
    [DataMemberAttribute]
public DeploymentFlags DeploymentType { get; public set; }
    [DataMemberAttribute]
public Nullable`1<DateTime> LastUserAccess { get; public set; }
    [DataMemberAttribute]
public LocationServiceData LocationServiceData { get; public set; }
    [DataMemberAttribute]
public string WebApplicationRelativeDirectory { get; public set; }
    private Guid Microsoft.VisualStudio.Services.WebApi.ISecuredObject.NamespaceId { get; }
    private int Microsoft.VisualStudio.Services.WebApi.ISecuredObject.RequiredPermissions { get; }
    [CompilerGeneratedAttribute]
public Identity get_AuthenticatedUser();
    [CompilerGeneratedAttribute]
[EditorBrowsableAttribute("1")]
public void set_AuthenticatedUser(Identity value);
    [CompilerGeneratedAttribute]
public Identity get_AuthorizedUser();
    [CompilerGeneratedAttribute]
[EditorBrowsableAttribute("1")]
public void set_AuthorizedUser(Identity value);
    [CompilerGeneratedAttribute]
public Guid get_InstanceId();
    [CompilerGeneratedAttribute]
[EditorBrowsableAttribute("1")]
public void set_InstanceId(Guid value);
    [CompilerGeneratedAttribute]
public Guid get_DeploymentId();
    [CompilerGeneratedAttribute]
[EditorBrowsableAttribute("1")]
public void set_DeploymentId(Guid value);
    [CompilerGeneratedAttribute]
public DeploymentFlags get_DeploymentType();
    [CompilerGeneratedAttribute]
[EditorBrowsableAttribute("1")]
public void set_DeploymentType(DeploymentFlags value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_LastUserAccess();
    [CompilerGeneratedAttribute]
[EditorBrowsableAttribute("1")]
public void set_LastUserAccess(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public LocationServiceData get_LocationServiceData();
    [CompilerGeneratedAttribute]
[EditorBrowsableAttribute("1")]
public void set_LocationServiceData(LocationServiceData value);
    [CompilerGeneratedAttribute]
public string get_WebApplicationRelativeDirectory();
    [CompilerGeneratedAttribute]
[EditorBrowsableAttribute("1")]
public void set_WebApplicationRelativeDirectory(string value);
    internal static ConnectionData FromXml(IServiceProvider serviceProvider, XmlReader reader);
    private sealed virtual override Guid Microsoft.VisualStudio.Services.WebApi.ISecuredObject.get_NamespaceId();
    private sealed virtual override int Microsoft.VisualStudio.Services.WebApi.ISecuredObject.get_RequiredPermissions();
    private sealed virtual override string Microsoft.VisualStudio.Services.WebApi.ISecuredObject.GetToken();
}
[EditorBrowsableAttribute("1")]
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.Location.InheritLevel : Enum {
    public byte value__;
    public static InheritLevel None;
    public static InheritLevel Deployment;
    public static InheritLevel Account;
    public static InheritLevel Collection;
    public static InheritLevel All;
}
[ExceptionMappingAttribute("0.0", "3.0", "InvalidAccessPointException", "Microsoft.VisualStudio.Services.Location.InvalidAccessPointException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Location.InvalidAccessPointException : VssServiceException {
    public InvalidAccessPointException(string message);
    public InvalidAccessPointException(string message, Exception ex);
    protected InvalidAccessPointException(SerializationInfo info, StreamingContext context);
}
[ExceptionMappingAttribute("0.0", "3.0", "InvalidServiceDefinitionException", "Microsoft.VisualStudio.Services.Location.InvalidServiceDefinitionException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Location.InvalidServiceDefinitionException : VssServiceException {
    public InvalidServiceDefinitionException(string message);
    public InvalidServiceDefinitionException(string message, Exception ex);
    protected InvalidServiceDefinitionException(SerializationInfo info, StreamingContext context);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Location.LocationMapping : object {
    [CompilerGeneratedAttribute]
private string <AccessMappingMoniker>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Location>k__BackingField;
    [DataMemberAttribute]
[XmlAttributeAttribute("accessMappingMoniker")]
public string AccessMappingMoniker { get; public set; }
    [DataMemberAttribute]
[XmlAttributeAttribute("location")]
public string Location { get; public set; }
    private Guid Microsoft.VisualStudio.Services.WebApi.ISecuredObject.NamespaceId { get; }
    private int Microsoft.VisualStudio.Services.WebApi.ISecuredObject.RequiredPermissions { get; }
    public LocationMapping(string accessMappingMoniker, string location);
    [CompilerGeneratedAttribute]
public string get_AccessMappingMoniker();
    [CompilerGeneratedAttribute]
public void set_AccessMappingMoniker(string value);
    [CompilerGeneratedAttribute]
public string get_Location();
    [CompilerGeneratedAttribute]
public void set_Location(string value);
    public virtual string ToString();
    internal static LocationMapping FromXml(IServiceProvider serviceProvider, XmlReader reader);
    private sealed virtual override Guid Microsoft.VisualStudio.Services.WebApi.ISecuredObject.get_NamespaceId();
    private sealed virtual override int Microsoft.VisualStudio.Services.WebApi.ISecuredObject.get_RequiredPermissions();
    private sealed virtual override string Microsoft.VisualStudio.Services.WebApi.ISecuredObject.GetToken();
    public LocationMapping Clone();
}
[GenerateAllConstantsAttribute("")]
public static class Microsoft.VisualStudio.Services.Location.LocationResourceIds : object {
    public static string LocationServiceArea;
    public static string ConnectionDataResource;
    public static Guid ConnectionData;
    public static string ServiceDefinitionsResource;
    public static Guid ServiceDefinitions;
    public static string AccessMappingsResource;
    public static Guid AccessMappings;
    public static string ResourceAreasResource;
    public static Guid ResourceAreas;
    public static string SpsServiceDefintionResource;
    public static Guid SpsServiceDefinition;
    private static LocationResourceIds();
}
public static class Microsoft.VisualStudio.Services.Location.LocationServiceConstants : object {
    public static Guid ApplicationIdentifier;
    public static Guid RootIdentifier;
    public static Guid SelfReferenceIdentifier;
    private static LocationServiceConstants();
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Location.LocationServiceData : object {
    [CompilerGeneratedAttribute]
private Guid <ServiceOwner>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<AccessMapping> <AccessMappings>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ClientCacheFresh>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DefaultAccessMappingMoniker>k__BackingField;
    [CompilerGeneratedAttribute]
private int <LastChangeId>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<ServiceDefinition> <ServiceDefinitions>k__BackingField;
    private int m_clientCacheTimeToLive;
    private bool m_accessPointsDoNotIncludeWebAppRelativeDirectory;
    private long m_lastChangeId64;
    [DataMemberAttribute]
public Guid ServiceOwner { get; public set; }
    [DataMemberAttribute]
public ICollection`1<AccessMapping> AccessMappings { get; public set; }
    [DataMemberAttribute]
public bool ClientCacheFresh { get; public set; }
    [DataMemberAttribute]
[DefaultValueAttribute("3600")]
public int ClientCacheTimeToLive { get; public set; }
    [DataMemberAttribute]
public string DefaultAccessMappingMoniker { get; public set; }
    [DataMemberAttribute]
public int LastChangeId { get; public set; }
    [DataMemberAttribute]
public long LastChangeId64 { get; public set; }
    [DataMemberAttribute]
public ICollection`1<ServiceDefinition> ServiceDefinitions { get; public set; }
    private Guid Microsoft.VisualStudio.Services.WebApi.ISecuredObject.NamespaceId { get; }
    private int Microsoft.VisualStudio.Services.WebApi.ISecuredObject.RequiredPermissions { get; }
    [CompilerGeneratedAttribute]
public Guid get_ServiceOwner();
    [CompilerGeneratedAttribute]
[EditorBrowsableAttribute("1")]
public void set_ServiceOwner(Guid value);
    [CompilerGeneratedAttribute]
public ICollection`1<AccessMapping> get_AccessMappings();
    [CompilerGeneratedAttribute]
[EditorBrowsableAttribute("1")]
public void set_AccessMappings(ICollection`1<AccessMapping> value);
    [CompilerGeneratedAttribute]
public bool get_ClientCacheFresh();
    [CompilerGeneratedAttribute]
[EditorBrowsableAttribute("1")]
public void set_ClientCacheFresh(bool value);
    public int get_ClientCacheTimeToLive();
    [EditorBrowsableAttribute("1")]
public void set_ClientCacheTimeToLive(int value);
    [CompilerGeneratedAttribute]
public string get_DefaultAccessMappingMoniker();
    [CompilerGeneratedAttribute]
[EditorBrowsableAttribute("1")]
public void set_DefaultAccessMappingMoniker(string value);
    [CompilerGeneratedAttribute]
public int get_LastChangeId();
    [CompilerGeneratedAttribute]
[EditorBrowsableAttribute("1")]
public void set_LastChangeId(int value);
    public long get_LastChangeId64();
    [EditorBrowsableAttribute("1")]
public void set_LastChangeId64(long value);
    [CompilerGeneratedAttribute]
public ICollection`1<ServiceDefinition> get_ServiceDefinitions();
    [CompilerGeneratedAttribute]
[EditorBrowsableAttribute("1")]
public void set_ServiceDefinitions(ICollection`1<ServiceDefinition> value);
    private sealed virtual override Guid Microsoft.VisualStudio.Services.WebApi.ISecuredObject.get_NamespaceId();
    private sealed virtual override int Microsoft.VisualStudio.Services.WebApi.ISecuredObject.get_RequiredPermissions();
    private sealed virtual override string Microsoft.VisualStudio.Services.WebApi.ISecuredObject.GetToken();
    internal static LocationServiceData FromXml(IServiceProvider serviceProvider, XmlReader reader);
}
[ExceptionMappingAttribute("0.0", "3.0", "ParentDefinitionNotFoundException", "Microsoft.VisualStudio.Services.Location.ParentDefinitionNotFoundException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Location.ParentDefinitionNotFoundException : VssServiceException {
    public ParentDefinitionNotFoundException(string serviceType, Guid identifier, string parentServiceType, Guid serviceInstance);
    public ParentDefinitionNotFoundException(string message);
    public ParentDefinitionNotFoundException(string message, Exception ex);
    protected ParentDefinitionNotFoundException(SerializationInfo info, StreamingContext context);
}
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.Location.RelativeToSetting : Enum {
    public int value__;
    [EnumMemberAttribute]
public static RelativeToSetting Context;
    [EnumMemberAttribute]
public static RelativeToSetting WebApplication;
    [EnumMemberAttribute]
public static RelativeToSetting FullyQualified;
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Location.ResourceAreaInfo : object {
    [CompilerGeneratedAttribute]
private Guid <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LocationUrl>k__BackingField;
    [DataMemberAttribute]
public Guid Id { get; public set; }
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public string LocationUrl { get; public set; }
    [CompilerGeneratedAttribute]
public Guid get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(Guid value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_LocationUrl();
    [CompilerGeneratedAttribute]
public void set_LocationUrl(string value);
}
[DebuggerDisplayAttribute("{ServiceType}:{Identifier}")]
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Location.ServiceDefinition : object {
    [CompilerGeneratedAttribute]
private string <ServiceType>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <Identifier>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private RelativeToSetting <RelativeToSetting>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RelativePath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <ServiceOwner>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<LocationMapping> <LocationMappings>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToolId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ParentServiceType>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <ParentIdentifier>k__BackingField;
    [CompilerGeneratedAttribute]
private ServiceStatus <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private InheritLevel <InheritLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private PropertiesCollection <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ResourceVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private Version <MinVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private Version <MaxVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private Version <ReleasedVersion>k__BackingField;
    private bool m_isSingleton;
    private bool m_hasModifiedProperties;
    [DataMemberAttribute]
[XmlAttributeAttribute("serviceType")]
public string ServiceType { get; public set; }
    [DataMemberAttribute]
[XmlAttributeAttribute("identifier")]
public Guid Identifier { get; public set; }
    [DataMemberAttribute]
[XmlAttributeAttribute("displayName")]
public string DisplayName { get; public set; }
    [DataMemberAttribute]
public RelativeToSetting RelativeToSetting { get; public set; }
    [XmlAttributeAttribute("relativeToSetting")]
[EditorBrowsableAttribute("1")]
public int RelativeToSettingValue { get; public set; }
    [DataMemberAttribute]
[XmlAttributeAttribute("relativePath")]
public string RelativePath { get; public set; }
    [DataMemberAttribute]
[XmlAttributeAttribute("description")]
public string Description { get; public set; }
    [DataMemberAttribute]
public Guid ServiceOwner { get; public set; }
    [DataMemberAttribute]
public List`1<LocationMapping> LocationMappings { get; public set; }
    [EditorBrowsableAttribute("1")]
[XmlAttributeAttribute("toolId")]
[DataMemberAttribute]
public string ToolId { get; public set; }
    [DataMemberAttribute]
public string ParentServiceType { get; public set; }
    [DataMemberAttribute]
public Guid ParentIdentifier { get; public set; }
    [DefaultValueAttribute("Mono.Cecil.CustomAttributeArgument")]
[DataMemberAttribute]
public ServiceStatus Status { get; public set; }
    [EditorBrowsableAttribute("1")]
[DataMemberAttribute]
[XmlAttributeAttribute("inheritLevel")]
public InheritLevel InheritLevel { get; public set; }
    [DataMemberAttribute]
[XmlIgnoreAttribute]
public PropertiesCollection Properties { get; public set; }
    [EditorBrowsableAttribute("1")]
public bool HasModifiedProperties { get; }
    [XmlAttributeAttribute("resourceVersion")]
[DefaultValueAttribute("0")]
[DataMemberAttribute]
public int ResourceVersion { get; public set; }
    [XmlIgnoreAttribute]
public Version MinVersion { get; public set; }
    [XmlAttributeAttribute("minVersion")]
[DefaultValueAttribute("")]
[DataMemberAttribute]
public string MinVersionString { get; public set; }
    [XmlIgnoreAttribute]
public Version MaxVersion { get; public set; }
    [XmlAttributeAttribute("maxVersion")]
[DefaultValueAttribute("")]
[DataMemberAttribute]
public string MaxVersionString { get; public set; }
    [XmlIgnoreAttribute]
public Version ReleasedVersion { get; public set; }
    [XmlAttributeAttribute("releasedVersion")]
[DefaultValueAttribute("")]
[DataMemberAttribute]
public string ReleasedVersionString { get; public set; }
    private Guid Microsoft.VisualStudio.Services.WebApi.ISecuredObject.NamespaceId { get; }
    private int Microsoft.VisualStudio.Services.WebApi.ISecuredObject.RequiredPermissions { get; }
    [EditorBrowsableAttribute("1")]
public ServiceDefinition(string serviceType, Guid identifier, string displayName, string relativePath, RelativeToSetting relativeToSetting, string description, string toolId, List`1<LocationMapping> locationMappings, Guid serviceOwner);
    [CompilerGeneratedAttribute]
public string get_ServiceType();
    [CompilerGeneratedAttribute]
public void set_ServiceType(string value);
    [CompilerGeneratedAttribute]
public Guid get_Identifier();
    [CompilerGeneratedAttribute]
public void set_Identifier(Guid value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public RelativeToSetting get_RelativeToSetting();
    [CompilerGeneratedAttribute]
public void set_RelativeToSetting(RelativeToSetting value);
    public int get_RelativeToSettingValue();
    public void set_RelativeToSettingValue(int value);
    [CompilerGeneratedAttribute]
public string get_RelativePath();
    [CompilerGeneratedAttribute]
public void set_RelativePath(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public Guid get_ServiceOwner();
    [CompilerGeneratedAttribute]
public void set_ServiceOwner(Guid value);
    [CompilerGeneratedAttribute]
public List`1<LocationMapping> get_LocationMappings();
    [CompilerGeneratedAttribute]
public void set_LocationMappings(List`1<LocationMapping> value);
    [CompilerGeneratedAttribute]
public string get_ToolId();
    [CompilerGeneratedAttribute]
public void set_ToolId(string value);
    [CompilerGeneratedAttribute]
public string get_ParentServiceType();
    [CompilerGeneratedAttribute]
public void set_ParentServiceType(string value);
    [CompilerGeneratedAttribute]
public Guid get_ParentIdentifier();
    [CompilerGeneratedAttribute]
public void set_ParentIdentifier(Guid value);
    [CompilerGeneratedAttribute]
public ServiceStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(ServiceStatus value);
    [CompilerGeneratedAttribute]
public InheritLevel get_InheritLevel();
    [CompilerGeneratedAttribute]
public void set_InheritLevel(InheritLevel value);
    [CompilerGeneratedAttribute]
public PropertiesCollection get_Properties();
    [CompilerGeneratedAttribute]
public void set_Properties(PropertiesCollection value);
    public T GetProperty(string name, T defaultValue);
    public bool TryGetProperty(string name, Object& value);
    public void SetProperty(string name, object value);
    public bool get_HasModifiedProperties();
    [EditorBrowsableAttribute("1")]
public void ResetModifiedProperties();
    [CompilerGeneratedAttribute]
public int get_ResourceVersion();
    [CompilerGeneratedAttribute]
public void set_ResourceVersion(int value);
    [CompilerGeneratedAttribute]
public Version get_MinVersion();
    [CompilerGeneratedAttribute]
public void set_MinVersion(Version value);
    public string get_MinVersionString();
    public void set_MinVersionString(string value);
    [CompilerGeneratedAttribute]
public Version get_MaxVersion();
    [CompilerGeneratedAttribute]
public void set_MaxVersion(Version value);
    public string get_MaxVersionString();
    public void set_MaxVersionString(string value);
    [CompilerGeneratedAttribute]
public Version get_ReleasedVersion();
    [CompilerGeneratedAttribute]
public void set_ReleasedVersion(Version value);
    public string get_ReleasedVersionString();
    public void set_ReleasedVersionString(string value);
    public ServiceDefinition Clone();
    public ServiceDefinition Clone(bool includeLocationMappings);
    internal static ServiceDefinition FromXml(IServiceProvider serviceProvider, XmlReader reader);
    public LocationMapping GetLocationMapping(AccessMapping accessMapping);
    public LocationMapping GetLocationMapping(string accessMappingMoniker);
    public void AddLocationMapping(AccessMapping accessMapping, string location);
    private sealed virtual override Guid Microsoft.VisualStudio.Services.WebApi.ISecuredObject.get_NamespaceId();
    private sealed virtual override int Microsoft.VisualStudio.Services.WebApi.ISecuredObject.get_RequiredPermissions();
    private sealed virtual override string Microsoft.VisualStudio.Services.WebApi.ISecuredObject.GetToken();
}
[ExceptionMappingAttribute("0.0", "3.0", "ServiceDefinitionDoesNotExistException", "Microsoft.VisualStudio.Services.Location.ServiceDefinitionDoesNotExistException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Location.ServiceDefinitionDoesNotExistException : VssServiceException {
    public ServiceDefinitionDoesNotExistException(string message);
    public ServiceDefinitionDoesNotExistException(string message, Exception ex);
    protected ServiceDefinitionDoesNotExistException(SerializationInfo info, StreamingContext context);
}
public static class Microsoft.VisualStudio.Services.Location.ServiceInterfaces : object {
    public static string LocationService2;
    public static string VsService;
    public static string VirtualLocation;
}
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.Location.ServiceStatus : Enum {
    public byte value__;
    [EnumMemberAttribute]
public static ServiceStatus Assigned;
    [EnumMemberAttribute]
public static ServiceStatus Active;
    [EnumMemberAttribute]
public static ServiceStatus Moving;
}
[ResourceAreaAttribute("F4AA2205-FF00-4EEE-8216-C7A73CEE155C")]
[ClientCircuitBreakerSettingsAttribute("15", "50")]
public class Microsoft.VisualStudio.Services.MarketingPreferences.Client.MarketingPreferencesHttpClient : VssHttpClientBase {
    public MarketingPreferencesHttpClient(Uri baseUrl, VssCredentials credentials);
    public MarketingPreferencesHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public MarketingPreferencesHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public MarketingPreferencesHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public MarketingPreferencesHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    [EditorBrowsableAttribute("1")]
public virtual Task`1<bool> GetContactWithOffersAsync(string descriptor, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.MarketingPreferences.Client.MarketingPreferencesHttpClient/<SetContactWithOffersAsync>d__6")]
[EditorBrowsableAttribute("1")]
public virtual Task SetContactWithOffersAsync(string descriptor, bool value, object userState, CancellationToken cancellationToken);
    [EditorBrowsableAttribute("1")]
public virtual Task`1<MarketingPreferences> GetMarketingPreferencesAsync(string descriptor, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.MarketingPreferences.Client.MarketingPreferencesHttpClient/<SetMarketingPreferencesAsync>d__8")]
[EditorBrowsableAttribute("1")]
public virtual Task SetMarketingPreferencesAsync(MarketingPreferences preferences, string descriptor, object userState, CancellationToken cancellationToken);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.MarketingPreferences.MarketingPreferences : object {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <VisualStudio>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <VisualStudioSubscriptions>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AzureDevOps>k__BackingField;
    [DataMemberAttribute]
public Nullable`1<bool> VisualStudio { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> VisualStudioSubscriptions { get; public set; }
    [DataMemberAttribute]
public Nullable`1<bool> AzureDevOps { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_VisualStudio();
    [CompilerGeneratedAttribute]
public void set_VisualStudio(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_VisualStudioSubscriptions();
    [CompilerGeneratedAttribute]
public void set_VisualStudioSubscriptions(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_AzureDevOps();
    [CompilerGeneratedAttribute]
public void set_AzureDevOps(Nullable`1<bool> value);
}
public static class Microsoft.VisualStudio.Services.MarketingPreferences.MarketingPreferencesResourceIds : object {
    public static string AreaId;
    public static string AreaName;
    public static string ContactWithOffersResource;
    public static Guid ContactWithOffersLocationid;
    public static string MarketingPreferencesResource;
    public static Guid MarketingPreferencesLocationId;
    private static MarketingPreferencesResourceIds();
}
public static class Microsoft.VisualStudio.Services.MarketingPreferences.MarketingPreferencesResourceVersions : object {
    public static int GenericResourcePreviewVersion;
}
public class Microsoft.VisualStudio.Services.NameResolution.MultiplePrimaryNameResolutionEntriesException : VssServiceException {
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    public string Value { get; public set; }
    public MultiplePrimaryNameResolutionEntriesException(string message);
    public MultiplePrimaryNameResolutionEntriesException(string message, Exception ex);
    public MultiplePrimaryNameResolutionEntriesException(string value, int dummy);
    protected MultiplePrimaryNameResolutionEntriesException(SerializationInfo info, StreamingContext context);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.NameResolution.NameResolutionEntry : object {
    [CompilerGeneratedAttribute]
private string <Namespace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsPrimary>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Revision>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <ExpiresOn>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Force>k__BackingField;
    [DataMemberAttribute]
public string Namespace { get; public set; }
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public Guid Value { get; public set; }
    [DataMemberAttribute]
public bool IsPrimary { get; public set; }
    [DataMemberAttribute]
public bool IsEnabled { get; public set; }
    [DataMemberAttribute]
public Nullable`1<int> TTL { get; public set; }
    [DataMemberAttribute]
public int Revision { get; public set; }
    [IgnoreDataMemberAttribute]
[EditorBrowsableAttribute("1")]
public Nullable`1<DateTime> ExpiresOn { get; public set; }
    [IgnoreDataMemberAttribute]
public bool HasExpiration { get; }
    [IgnoreDataMemberAttribute]
public bool IsExpired { get; }
    [EditorBrowsableAttribute("1")]
[IgnoreDataMemberAttribute]
public bool Force { get; public set; }
    public NameResolutionEntry(string namespace, string name);
    [CompilerGeneratedAttribute]
public string get_Namespace();
    [CompilerGeneratedAttribute]
public void set_Namespace(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public Guid get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(Guid value);
    [CompilerGeneratedAttribute]
public bool get_IsPrimary();
    [CompilerGeneratedAttribute]
public void set_IsPrimary(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsEnabled();
    [CompilerGeneratedAttribute]
public void set_IsEnabled(bool value);
    public Nullable`1<int> get_TTL();
    public void set_TTL(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public int get_Revision();
    [CompilerGeneratedAttribute]
public void set_Revision(int value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_ExpiresOn();
    [CompilerGeneratedAttribute]
public void set_ExpiresOn(Nullable`1<DateTime> value);
    public bool get_HasExpiration();
    public bool get_IsExpired();
    [CompilerGeneratedAttribute]
public bool get_Force();
    [CompilerGeneratedAttribute]
public void set_Force(bool value);
    public NameResolutionEntry Clone();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public virtual string ToString();
}
public class Microsoft.VisualStudio.Services.NameResolution.NameResolutionEntryAlreadyExistsException : VssServiceException {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ConflictingValue>k__BackingField;
    public string Name { get; public set; }
    public string Value { get; public set; }
    public string ConflictingValue { get; public set; }
    public NameResolutionEntryAlreadyExistsException(string message);
    public NameResolutionEntryAlreadyExistsException(string message, Exception ex);
    public NameResolutionEntryAlreadyExistsException(string name, string value, string conflictingValue);
    protected NameResolutionEntryAlreadyExistsException(SerializationInfo info, StreamingContext context);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    [CompilerGeneratedAttribute]
public string get_ConflictingValue();
    [CompilerGeneratedAttribute]
public void set_ConflictingValue(string value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.NameResolution.NameResolutionQuery : object {
    [CompilerGeneratedAttribute]
private string <Namespace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [DataMemberAttribute]
public string Namespace { get; public set; }
    [DataMemberAttribute]
public string Name { get; public set; }
    public NameResolutionQuery(string namespace, string name);
    [CompilerGeneratedAttribute]
public string get_Namespace();
    [CompilerGeneratedAttribute]
public void set_Namespace(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
[GenerateAllConstantsAttribute("")]
public static class Microsoft.VisualStudio.Services.NameResolution.NameResolutionResourceIds : object {
    public static string AreaId;
    public static string AreaName;
    public static Guid EntriesLocationId;
    public static string EntriesResource;
    private static NameResolutionResourceIds();
}
[ResourceAreaAttribute("BA8495F8-E9EE-4A9E-9CBE-142897543FE9")]
public class Microsoft.VisualStudio.Services.Notification.Client.PersistedNotificationHttpClient : VssHttpClientBase {
    protected static Version previewApiVersion;
    public PersistedNotificationHttpClient(Uri baseUrl, VssCredentials credentials);
    public PersistedNotificationHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public PersistedNotificationHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public PersistedNotificationHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public PersistedNotificationHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    private static PersistedNotificationHttpClient();
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Notification.Client.PersistedNotificationHttpClient/<SaveNotificationsAsync>d__5")]
public virtual Task SaveNotificationsAsync(IEnumerable`1<Notification> notifications, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Notification.Client.PersistedNotificationHttpClient/<GetRecipientNotificationsAsync>d__6")]
public virtual Task`1<IList`1<Notification>> GetRecipientNotificationsAsync(object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Notification.Client.PersistedNotificationHttpClient/<GetRecipientMetadataAsync>d__7")]
public virtual Task`1<RecipientMetadata> GetRecipientMetadataAsync(object userState, CancellationToken cancellationToken);
    public Task`1<RecipientMetadata> UpdateRecipientMetadataAsync(RecipientMetadata metadata, object userState, CancellationToken cancellationToken);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Notification.Notification : object {
    [CompilerGeneratedAttribute]
private long <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <Recipient>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scope>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Content>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Category>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <CreatedTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ActionUrl>k__BackingField;
    [DataMemberAttribute]
public long Id { get; public set; }
    [DataMemberAttribute]
public Guid Recipient { get; public set; }
    [DataMemberAttribute]
public string Scope { get; public set; }
    [DataMemberAttribute]
public string Content { get; public set; }
    [DataMemberAttribute]
public string Category { get; public set; }
    [DataMemberAttribute]
public DateTime CreatedTime { get; public set; }
    [DataMemberAttribute]
public string ActionUrl { get; public set; }
    public Notification(Guid recipient, string scope, string content, string category, DateTime createdTime, string actionUrl);
    public Notification(long id, Guid recipient, string scope, string content, string category, DateTime createdTime, string actionUrl);
    [CompilerGeneratedAttribute]
public long get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(long value);
    [CompilerGeneratedAttribute]
public Guid get_Recipient();
    [CompilerGeneratedAttribute]
public void set_Recipient(Guid value);
    [CompilerGeneratedAttribute]
public string get_Scope();
    [CompilerGeneratedAttribute]
public void set_Scope(string value);
    [CompilerGeneratedAttribute]
public string get_Content();
    [CompilerGeneratedAttribute]
public void set_Content(string value);
    [CompilerGeneratedAttribute]
public string get_Category();
    [CompilerGeneratedAttribute]
public void set_Category(string value);
    [CompilerGeneratedAttribute]
public DateTime get_CreatedTime();
    [CompilerGeneratedAttribute]
public void set_CreatedTime(DateTime value);
    [CompilerGeneratedAttribute]
public string get_ActionUrl();
    [CompilerGeneratedAttribute]
public void set_ActionUrl(string value);
}
public static class Microsoft.VisualStudio.Services.Notification.PersistedNotificationResourceIds : object {
    public static string AreaId;
    public static string AreaName;
    public static Guid NotificationsId;
    public static string NotificationsResource;
    public static Guid RecipientMetadataId;
    public static string RecipientMetadataResource;
    private static PersistedNotificationResourceIds();
}
public static class Microsoft.VisualStudio.Services.Notification.PersistedNotificationResourceVersions : object {
    public static int NotificationsResourcePreviewVersion;
    public static int RecipientMetadataPreviewVersion;
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Notification.RecipientMetadata : object {
    [CompilerGeneratedAttribute]
private Guid <RecipientId>k__BackingField;
    [CompilerGeneratedAttribute]
private long <IdOfMostRecentNotification>k__BackingField;
    [CompilerGeneratedAttribute]
private long <IdOfMostRecentSeenNotification>k__BackingField;
    [CompilerGeneratedAttribute]
private int <NumberOfUnseenNotifications>k__BackingField;
    [DataMemberAttribute]
public Guid RecipientId { get; public set; }
    [DataMemberAttribute]
public long IdOfMostRecentNotification { get; public set; }
    [DataMemberAttribute]
public long IdOfMostRecentSeenNotification { get; public set; }
    [DataMemberAttribute]
public int NumberOfUnseenNotifications { get; public set; }
    public RecipientMetadata(Guid recipientId, long highestUnseenNotificationId, int unseenNotificationCount);
    [CompilerGeneratedAttribute]
public Guid get_RecipientId();
    [CompilerGeneratedAttribute]
public void set_RecipientId(Guid value);
    [CompilerGeneratedAttribute]
public long get_IdOfMostRecentNotification();
    [CompilerGeneratedAttribute]
public void set_IdOfMostRecentNotification(long value);
    [CompilerGeneratedAttribute]
public long get_IdOfMostRecentSeenNotification();
    [CompilerGeneratedAttribute]
public void set_IdOfMostRecentSeenNotification(long value);
    [CompilerGeneratedAttribute]
public int get_NumberOfUnseenNotifications();
    [CompilerGeneratedAttribute]
public void set_NumberOfUnseenNotifications(int value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Notifications.EventActor : object {
    [CompilerGeneratedAttribute]
private string <Role>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <Id>k__BackingField;
    [DataMemberAttribute]
public string Role { get; public set; }
    [DataMemberAttribute]
public Guid Id { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Role();
    [CompilerGeneratedAttribute]
public void set_Role(string value);
    [CompilerGeneratedAttribute]
public Guid get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(Guid value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Notifications.EventScope : object {
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [DataMemberAttribute]
public string Type { get; public set; }
    [DataMemberAttribute]
public Guid Id { get; public set; }
    [DataMemberAttribute]
public string Name { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    [CompilerGeneratedAttribute]
public Guid get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(Guid value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
}
public enum Microsoft.VisualStudio.Services.Notifications.EventSerializerType : Enum {
    public int value__;
    public static EventSerializerType Json;
    public static EventSerializerType Xml;
}
[AttributeUsageAttribute("4")]
public class Microsoft.VisualStudio.Services.Notifications.NotificationEventBindingsAttribute : Attribute {
    [CompilerGeneratedAttribute]
private EventSerializerType <SerializerType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EventType>k__BackingField;
    public EventSerializerType SerializerType { get; }
    public string EventType { get; }
    public NotificationEventBindingsAttribute(EventSerializerType serializerType, string eventType);
    [CompilerGeneratedAttribute]
public EventSerializerType get_SerializerType();
    [CompilerGeneratedAttribute]
public string get_EventType();
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Notifications.VssNotificationEvent : object {
    [CompilerGeneratedAttribute]
private string <EventType>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Data>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <ProcessDelay>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <ExpiresIn>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <SourceEventCreatedTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ItemId>k__BackingField;
    protected DateTime m_createdTime;
    private List`1<EventActor> m_actors;
    private List`1<EventScope> m_scopes;
    private List`1<string> m_artifactUris;
    public static TimeSpan ProcessNow;
    public static TimeSpan DefaultExpiration;
    public static TimeSpan NeverExpire;
    [DataMemberAttribute]
public string EventType { get; public set; }
    [DataMemberAttribute]
public object Data { get; public set; }
    [DataMemberAttribute]
public List`1<EventActor> Actors { get; }
    [DataMemberAttribute]
public List`1<EventScope> Scopes { get; }
    [DataMemberAttribute]
public List`1<string> ArtifactUris { get; }
    [DataMemberAttribute]
public TimeSpan ProcessDelay { get; public set; }
    [DataMemberAttribute]
public TimeSpan ExpiresIn { get; public set; }
    [DataMemberAttribute]
public Nullable`1<DateTime> SourceEventCreatedTime { get; public set; }
    [DataMemberAttribute]
public string ItemId { get; public set; }
    public bool HasActors { get; }
    public bool HasScopes { get; }
    public bool HasArtifactUris { get; }
    public VssNotificationEvent(object data);
    public VssNotificationEvent(string serializedEvent, string eventType);
    private static VssNotificationEvent();
    public void InitFromObject(object data);
    [CompilerGeneratedAttribute]
public string get_EventType();
    [CompilerGeneratedAttribute]
public void set_EventType(string value);
    [CompilerGeneratedAttribute]
public object get_Data();
    [CompilerGeneratedAttribute]
public void set_Data(object value);
    public List`1<EventActor> get_Actors();
    public List`1<EventScope> get_Scopes();
    public List`1<string> get_ArtifactUris();
    [CompilerGeneratedAttribute]
public TimeSpan get_ProcessDelay();
    [CompilerGeneratedAttribute]
public void set_ProcessDelay(TimeSpan value);
    [CompilerGeneratedAttribute]
public TimeSpan get_ExpiresIn();
    [CompilerGeneratedAttribute]
public void set_ExpiresIn(TimeSpan value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_SourceEventCreatedTime();
    [CompilerGeneratedAttribute]
public void set_SourceEventCreatedTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public string get_ItemId();
    [CompilerGeneratedAttribute]
public void set_ItemId(string value);
    public bool get_HasActors();
    public bool get_HasScopes();
    public bool get_HasArtifactUris();
    public void AddActor(string role, Guid id);
    public void AddScope(string type, Guid id);
    public void AddScope(string type, Guid id, string name);
    public void AddArtifactUri(string artificatUri);
    public void AddSystemInitiatorActor();
    public sealed virtual object Clone();
    protected virtual void CloneFrom(VssNotificationEvent other);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.OAuth.AccessTokenErrorResponse : object {
    [CompilerGeneratedAttribute]
private string <Error>k__BackingField;
    [DataMemberAttribute]
public string Error { get; public set; }
    public AccessTokenErrorResponse(string error);
    [CompilerGeneratedAttribute]
public string get_Error();
    [CompilerGeneratedAttribute]
public void set_Error(string value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.OAuth.AccessTokenResponse : object {
    [CompilerGeneratedAttribute]
private string <AccessToken>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TokenType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ExpiresIn>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RefreshToken>k__BackingField;
    [DataMemberAttribute]
public string AccessToken { get; public set; }
    [DataMemberAttribute]
public string TokenType { get; public set; }
    [DataMemberAttribute]
public string ExpiresIn { get; public set; }
    [DataMemberAttribute]
public string RefreshToken { get; public set; }
    public AccessTokenResponse(string accessToken, string expiresIn, string refreshToken);
    [CompilerGeneratedAttribute]
public string get_AccessToken();
    [CompilerGeneratedAttribute]
public void set_AccessToken(string value);
    [CompilerGeneratedAttribute]
public string get_TokenType();
    [CompilerGeneratedAttribute]
public void set_TokenType(string value);
    [CompilerGeneratedAttribute]
public string get_ExpiresIn();
    [CompilerGeneratedAttribute]
public void set_ExpiresIn(string value);
    [CompilerGeneratedAttribute]
public string get_RefreshToken();
    [CompilerGeneratedAttribute]
public void set_RefreshToken(string value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.OAuth.AuthorizationResponse : object {
    [CompilerGeneratedAttribute]
private string <RedirectLocation>k__BackingField;
    [DataMemberAttribute]
public string RedirectLocation { get; public set; }
    public AuthorizationResponse(string redirectLocation);
    [CompilerGeneratedAttribute]
public string get_RedirectLocation();
    [CompilerGeneratedAttribute]
public void set_RedirectLocation(string value);
}
public class Microsoft.VisualStudio.Services.OAuth.Client.OAuthHttpClient : VssHttpClientBase {
    public OAuthHttpClient(Uri baseUrl, VssCredentials credentials);
    public OAuthHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public OAuthHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public OAuthHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public OAuthHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    protected virtual Task HandleResponseAsync(HttpResponseMessage response, CancellationToken cancellationToken);
    public Task`1<AuthorizationResponse> AuthorizeAsync(string clientId, string responseType, string redirectUri, string scope, string state, object userState, CancellationToken cancellationToken);
    public Task`1<AccessTokenResponse> CreateTokenAsync(string grantType, string code, string refreshToken, string scope, string redirectUri, object userState, CancellationToken cancellationToken);
}
public interface Microsoft.VisualStudio.Services.OAuth.IVssOAuthTokenParameterProvider {
    public abstract virtual void SetParameters(IDictionary`2<string, string> parameters);
}
public static class Microsoft.VisualStudio.Services.OAuth.OAuth2ResourceIds : object {
    public static string AreaName;
    public static string AreaId;
    public static string TokenResource;
    public static Guid Token;
    private static OAuth2ResourceIds();
}
public static class Microsoft.VisualStudio.Services.OAuth.TokenOAuth2ResourceIds : object {
    public static string AreaName;
    public static string AreaId;
    public static string TokenResource;
    public static Guid Token;
    private static TokenOAuth2ResourceIds();
}
public class Microsoft.VisualStudio.Services.OAuth.VssOAuthAccessToken : IssuedToken {
    private string m_value;
    private DateTime m_validTo;
    public DateTime ValidTo { get; }
    public string Value { get; }
    protected internal VssCredentialsType CredentialType { get; }
    public VssOAuthAccessToken(string value);
    public VssOAuthAccessToken(string value, DateTime validTo);
    public VssOAuthAccessToken(JsonWebToken value);
    public DateTime get_ValidTo();
    public string get_Value();
    protected internal virtual VssCredentialsType get_CredentialType();
    internal virtual void ApplyTo(IHttpRequest request);
}
public class Microsoft.VisualStudio.Services.OAuth.VssOAuthAccessTokenCredential : FederatedCredential {
    public VssCredentialsType CredentialType { get; }
    public VssOAuthAccessTokenCredential(string accessToken);
    public VssOAuthAccessTokenCredential(JsonWebToken accessToken);
    public VssOAuthAccessTokenCredential(VssOAuthAccessToken accessToken);
    public virtual VssCredentialsType get_CredentialType();
    protected virtual IssuedTokenProvider OnCreateTokenProvider(Uri serverUrl, IHttpResponse response);
}
public abstract class Microsoft.VisualStudio.Services.OAuth.VssOAuthClientCredential : object {
    private bool m_disposed;
    private string m_clientId;
    private VssOAuthClientCredentialType m_type;
    public string ClientId { get; }
    public VssOAuthClientCredentialType CredentialType { get; }
    protected VssOAuthClientCredential(VssOAuthClientCredentialType type, string clientId);
    public string get_ClientId();
    public VssOAuthClientCredentialType get_CredentialType();
    public sealed virtual void Dispose();
    protected virtual void Dispose(bool disposing);
    protected abstract virtual void SetParameters(IDictionary`2<string, string> parameters);
    private sealed virtual override void Microsoft.VisualStudio.Services.OAuth.IVssOAuthTokenParameterProvider.SetParameters(IDictionary`2<string, string> parameters);
}
public class Microsoft.VisualStudio.Services.OAuth.VssOAuthClientCredentialsGrant : VssOAuthGrant {
    protected virtual void SetParameters(IDictionary`2<string, string> parameters);
}
public enum Microsoft.VisualStudio.Services.OAuth.VssOAuthClientCredentialType : Enum {
    public int value__;
    public static VssOAuthClientCredentialType Password;
    public static VssOAuthClientCredentialType JwtBearer;
}
public class Microsoft.VisualStudio.Services.OAuth.VssOAuthCodeGrant : VssOAuthGrant {
    private string m_code;
    public string Code { get; }
    public VssOAuthCodeGrant(string code);
    public string get_Code();
    protected virtual void SetParameters(IDictionary`2<string, string> parameters);
}
public static class Microsoft.VisualStudio.Services.OAuth.VssOAuthConstants : object {
    public static string Assertion;
    public static string AuthorizationCodeGrantType;
    public static string ClientCredentialsGrantType;
    public static string ClientId;
    public static string ClientSecret;
    public static string ClientAssertion;
    public static string ClientAssertionType;
    public static string Code;
    public static string GrantType;
    public static string JwtBearerAuthorizationGrantType;
    public static string JwtBearerClientAssertionType;
    public static string RefreshToken;
    public static string RefreshTokenGrantType;
    public static string Realm;
    public static string Service;
    public static string Scope;
    public static string AccessToken;
    public static string AccessTokenGrantType;
    public static string Tenant;
}
public class Microsoft.VisualStudio.Services.OAuth.VssOAuthCredential : FederatedCredential {
    private VssOAuthTokenParameters m_tokenParameters;
    private Uri m_authorizationUrl;
    private VssOAuthGrant m_grant;
    private VssOAuthClientCredential m_clientCredential;
    public VssCredentialsType CredentialType { get; }
    public Uri AuthorizationUrl { get; }
    public VssOAuthGrant Grant { get; }
    public VssOAuthClientCredential ClientCredential { get; }
    public VssOAuthTokenParameters TokenParameters { get; }
    public VssOAuthCredential(Uri authorizationUrl, VssOAuthGrant grant, VssOAuthClientCredential clientCredential, VssOAuthTokenParameters tokenParameters, VssOAuthAccessToken accessToken);
    public virtual VssCredentialsType get_CredentialType();
    public Uri get_AuthorizationUrl();
    public VssOAuthGrant get_Grant();
    public VssOAuthClientCredential get_ClientCredential();
    public VssOAuthTokenParameters get_TokenParameters();
    public virtual bool IsAuthenticationChallenge(IHttpResponse webResponse);
    protected virtual IssuedTokenProvider OnCreateTokenProvider(Uri serverUrl, IHttpResponse response);
}
public static class Microsoft.VisualStudio.Services.OAuth.VssOAuthErrorCodes : object {
    public static string AccessDenied;
    public static string InvalidClient;
    public static string InvalidGrant;
    public static string InvalidRequest;
    public static string InvalidScope;
    public static string ServerError;
    public static string TemporarilyUnavailable;
    public static string UnauthorizedClient;
    public static string UnsupportedGrantType;
    public static string UnsupportedResponseType;
    private static VssOAuthErrorCodes();
}
public class Microsoft.VisualStudio.Services.OAuth.VssOAuthException : VssServiceException {
    public VssOAuthException(string message);
    public VssOAuthException(string message, Exception innerException);
    protected VssOAuthException(SerializationInfo info, StreamingContext context);
}
public abstract class Microsoft.VisualStudio.Services.OAuth.VssOAuthGrant : object {
    private VssOAuthGrantType m_grantType;
    private static Lazy`1<VssOAuthClientCredentialsGrant> s_clientCredentialsGrant;
    public VssOAuthGrantType GrantType { get; }
    public static VssOAuthClientCredentialsGrant ClientCredentials { get; }
    protected VssOAuthGrant(VssOAuthGrantType grantType);
    private static VssOAuthGrant();
    public VssOAuthGrantType get_GrantType();
    public static VssOAuthClientCredentialsGrant get_ClientCredentials();
    protected abstract virtual void SetParameters(IDictionary`2<string, string> parameters);
    private sealed virtual override void Microsoft.VisualStudio.Services.OAuth.IVssOAuthTokenParameterProvider.SetParameters(IDictionary`2<string, string> parameters);
}
public enum Microsoft.VisualStudio.Services.OAuth.VssOAuthGrantType : Enum {
    public int value__;
    public static VssOAuthGrantType AuthorizationCode;
    public static VssOAuthGrantType ClientCredentials;
    public static VssOAuthGrantType JwtBearer;
    public static VssOAuthGrantType RefreshToken;
}
public class Microsoft.VisualStudio.Services.OAuth.VssOAuthJwtBearerAssertion : object {
    private List`1<Claim> additionalClaims;
    private string m_issuer;
    private string m_subject;
    private string m_audience;
    private JsonWebToken m_bearerToken;
    private VssSigningCredentials m_signingCredentials;
    private static TimeSpan BearerTokenLifetime;
    public string Issuer { get; }
    public string Subject { get; }
    public string Audience { get; }
    public IList`1<Claim> AdditionalClaims { get; }
    public VssOAuthJwtBearerAssertion(JsonWebToken bearerToken);
    public VssOAuthJwtBearerAssertion(string issuer, string subject, string audience, VssSigningCredentials signingCredentials);
    public VssOAuthJwtBearerAssertion(string issuer, string subject, string audience, IList`1<Claim> additionalClaims, VssSigningCredentials signingCredentials);
    private static VssOAuthJwtBearerAssertion();
    public string get_Issuer();
    public string get_Subject();
    public string get_Audience();
    public IList`1<Claim> get_AdditionalClaims();
    public JsonWebToken GetBearerToken();
}
public class Microsoft.VisualStudio.Services.OAuth.VssOAuthJwtBearerClientCredential : VssOAuthClientCredential {
    private VssOAuthJwtBearerAssertion m_assertion;
    public VssOAuthJwtBearerAssertion Assertion { get; }
    public VssOAuthJwtBearerClientCredential(string clientId, string audience, VssSigningCredentials signingCredentials);
    public VssOAuthJwtBearerClientCredential(string clientId, VssOAuthJwtBearerAssertion assertion);
    public VssOAuthJwtBearerAssertion get_Assertion();
    protected virtual void SetParameters(IDictionary`2<string, string> parameters);
}
public class Microsoft.VisualStudio.Services.OAuth.VssOAuthJwtBearerGrant : VssOAuthGrant {
    private VssOAuthJwtBearerAssertion m_assertion;
    public VssOAuthJwtBearerGrant(string issuer, string subject, string audience, VssSigningCredentials signingCredentials);
    public VssOAuthJwtBearerGrant(VssOAuthJwtBearerAssertion assertion);
    protected virtual void SetParameters(IDictionary`2<string, string> parameters);
}
public class Microsoft.VisualStudio.Services.OAuth.VssOAuthPasswordClientCredential : VssOAuthClientCredential {
    private SecureString m_clientSecret;
    public VssOAuthPasswordClientCredential(string clientId, string clientSecret);
    public VssOAuthPasswordClientCredential(string clientId, SecureString clientSecret);
    private static SecureString EncryptSecret(string value);
    private static string DecryptSecret(SecureString value);
    protected virtual void SetParameters(IDictionary`2<string, string> parameters);
}
public class Microsoft.VisualStudio.Services.OAuth.VssOAuthRefreshTokenGrant : VssOAuthGrant {
    private string m_refreshToken;
    public string RefreshToken { get; }
    public VssOAuthRefreshTokenGrant(string refreshToken);
    public string get_RefreshToken();
    protected virtual void SetParameters(IDictionary`2<string, string> parameters);
}
public class Microsoft.VisualStudio.Services.OAuth.VssOAuthTokenHttpClient : object {
    private Uri m_authorizationUrl;
    private MediaTypeFormatter m_formatter;
    public Uri AuthorizationUrl { get; }
    public VssOAuthTokenHttpClient(Uri authorizationUrl);
    public Uri get_AuthorizationUrl();
    public Task`1<VssOAuthTokenResponse> GetTokenAsync(VssOAuthTokenRequest request, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.OAuth.VssOAuthTokenHttpClient/<GetTokenAsync>d__4")]
public Task`1<VssOAuthTokenResponse> GetTokenAsync(VssOAuthGrant grant, VssOAuthClientCredential credential, VssOAuthTokenParameters tokenParameters, CancellationToken cancellationToken);
    private static bool IsValidTokenResponse(HttpResponseMessage response);
    private static HttpMessageHandler CreateMessageHandler(Uri requestUri);
    private static HttpContent CreateRequestContent(IVssOAuthTokenParameterProvider[] parameterProviders);
    private static bool HasContent(HttpResponseMessage response);
    private static bool IsJsonResponse(HttpResponseMessage response);
}
[JsonDictionaryAttribute]
public class Microsoft.VisualStudio.Services.OAuth.VssOAuthTokenParameters : Dictionary`2<string, string> {
    public string RedirectUri { get; public set; }
    public string Resource { get; public set; }
    public string Scope { get; public set; }
    public string get_RedirectUri();
    public void set_RedirectUri(string value);
    public string get_Resource();
    public void set_Resource(string value);
    public string get_Scope();
    public void set_Scope(string value);
    public virtual string ToString();
    private sealed virtual override void Microsoft.VisualStudio.Services.OAuth.IVssOAuthTokenParameterProvider.SetParameters(IDictionary`2<string, string> parameters);
    private string GetValueOrDefault(string key);
    private void RemoveOrSetValue(string key, string value);
}
public class Microsoft.VisualStudio.Services.OAuth.VssOAuthTokenProvider : IssuedTokenProvider {
    private VssOAuthGrant m_grant;
    private VssOAuthCredential m_credential;
    private VssOAuthTokenParameters m_tokenParameters;
    private VssOAuthClientCredential m_clientCredential;
    private static Lazy`1<JsonSerializerSettings> s_traceSettings;
    public VssOAuthGrant Grant { get; }
    public VssOAuthClientCredential ClientCredential { get; }
    public VssOAuthTokenParameters TokenParameters { get; }
    public bool GetTokenIsInteractive { get; }
    protected string AuthenticationParameter { get; }
    protected string AuthenticationScheme { get; }
    public VssOAuthTokenProvider(VssOAuthCredential credential, Uri serverUrl);
    protected VssOAuthTokenProvider(IssuedTokenCredential credential, Uri serverUrl, Uri authorizationUrl, VssOAuthGrant grant, VssOAuthClientCredential clientCrential, VssOAuthTokenParameters tokenParameters);
    private static VssOAuthTokenProvider();
    public VssOAuthGrant get_Grant();
    public VssOAuthClientCredential get_ClientCredential();
    public VssOAuthTokenParameters get_TokenParameters();
    public virtual bool get_GetTokenIsInteractive();
    protected virtual string get_AuthenticationParameter();
    protected virtual string get_AuthenticationScheme();
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.OAuth.VssOAuthTokenProvider/<OnGetTokenAsync>d__14")]
protected virtual Task`1<IssuedToken> OnGetTokenAsync(IssuedToken failedToken, CancellationToken cancellationToken);
    protected virtual IssuedToken CreateIssuedToken(VssOAuthTokenResponse tokenResponse);
    private static JsonSerializerSettings CreateTraceSettings();
}
public class Microsoft.VisualStudio.Services.OAuth.VssOAuthTokenRequest : object {
    private VssOAuthTokenParameters m_tokenParameters;
    private VssOAuthGrant m_grant;
    private VssOAuthClientCredential m_clientCredential;
    public VssOAuthGrant Grant { get; }
    public VssOAuthClientCredential ClientCredential { get; }
    public VssOAuthTokenParameters Parameters { get; }
    public VssOAuthTokenRequest(VssOAuthGrant grant, VssOAuthClientCredential clientCredential);
    public VssOAuthTokenRequest(VssOAuthGrant grant, VssOAuthClientCredential clientCredential, VssOAuthTokenParameters tokenParameters);
    public VssOAuthGrant get_Grant();
    public VssOAuthClientCredential get_ClientCredential();
    public VssOAuthTokenParameters get_Parameters();
    public static VssOAuthTokenRequest FromFormInput(FormDataCollection form);
    private static VssOAuthGrant CreateGrantFromFormInput(FormDataCollection form, ISet`1<string> parsedParameters);
    private static VssOAuthClientCredential CreateClientCredentialFromFormInput(FormDataCollection form, ISet`1<string> parsedParameters);
    private static string GetRequiredValue(FormDataCollection form, string parameterName, string error);
}
public class Microsoft.VisualStudio.Services.OAuth.VssOAuthTokenRequestException : VssOAuthException {
    [CompilerGeneratedAttribute]
private string <Error>k__BackingField;
    public string Error { get; public set; }
    public VssOAuthTokenRequestException(string message);
    public VssOAuthTokenRequestException(string message, Exception innerException);
    protected VssOAuthTokenRequestException(SerializationInfo info, StreamingContext context);
    [CompilerGeneratedAttribute]
public string get_Error();
    [CompilerGeneratedAttribute]
public void set_Error(string value);
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.OAuth.VssOAuthTokenResponse : object {
    [CompilerGeneratedAttribute]
private string <AccessToken>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Error>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ExpiresIn>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RefreshToken>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scope>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TokenType>k__BackingField;
    [DataMemberAttribute]
public string AccessToken { get; public set; }
    [DataMemberAttribute]
public string Error { get; public set; }
    [DataMemberAttribute]
public string ErrorDescription { get; public set; }
    [DataMemberAttribute]
public int ExpiresIn { get; public set; }
    [DataMemberAttribute]
public string RefreshToken { get; public set; }
    [DataMemberAttribute]
public string Scope { get; public set; }
    [DataMemberAttribute]
public string TokenType { get; public set; }
    [CompilerGeneratedAttribute]
public string get_AccessToken();
    [CompilerGeneratedAttribute]
public void set_AccessToken(string value);
    [CompilerGeneratedAttribute]
public string get_Error();
    [CompilerGeneratedAttribute]
public void set_Error(string value);
    [CompilerGeneratedAttribute]
public string get_ErrorDescription();
    [CompilerGeneratedAttribute]
public void set_ErrorDescription(string value);
    [CompilerGeneratedAttribute]
public int get_ExpiresIn();
    [CompilerGeneratedAttribute]
public void set_ExpiresIn(int value);
    [CompilerGeneratedAttribute]
public string get_RefreshToken();
    [CompilerGeneratedAttribute]
public void set_RefreshToken(string value);
    [CompilerGeneratedAttribute]
public string get_Scope();
    [CompilerGeneratedAttribute]
public void set_Scope(string value);
    [CompilerGeneratedAttribute]
public string get_TokenType();
    [CompilerGeneratedAttribute]
public void set_TokenType(string value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.OAuthWhitelist.OAuthWhitelistEntry : object {
    [CompilerGeneratedAttribute]
private Guid <ApplicationId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UpdatedBy>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <UpdateDate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UpdateReason>k__BackingField;
    [DataMemberAttribute]
public Guid ApplicationId { get; public set; }
    [DataMemberAttribute]
public string UpdatedBy { get; public set; }
    [DataMemberAttribute]
public DateTime UpdateDate { get; public set; }
    [DataMemberAttribute]
public string UpdateReason { get; public set; }
    [CompilerGeneratedAttribute]
public Guid get_ApplicationId();
    [CompilerGeneratedAttribute]
public void set_ApplicationId(Guid value);
    [CompilerGeneratedAttribute]
public string get_UpdatedBy();
    [CompilerGeneratedAttribute]
public void set_UpdatedBy(string value);
    [CompilerGeneratedAttribute]
public DateTime get_UpdateDate();
    [CompilerGeneratedAttribute]
public void set_UpdateDate(DateTime value);
    [CompilerGeneratedAttribute]
public string get_UpdateReason();
    [CompilerGeneratedAttribute]
public void set_UpdateReason(string value);
}
[ExceptionMappingAttribute("0.0", "3.0", "OAuthWhitelistEntryAlreadyExistsException", "Microsoft.VisualStudio.Services.OAuthWhitelist.OAuthWhitelistEntryAlreadyExistsException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.OAuthWhitelist.OAuthWhitelistEntryAlreadyExistsException : VssServiceException {
    public OAuthWhitelistEntryAlreadyExistsException(string message);
    public OAuthWhitelistEntryAlreadyExistsException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "OAuthWhitelistEntryNotFoundException", "Microsoft.VisualStudio.Services.OAuthWhitelist.OAuthWhitelistEntryNotFoundException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.OAuthWhitelist.OAuthWhitelistEntryNotFoundException : VssServiceException {
    public OAuthWhitelistEntryNotFoundException(string message);
    public OAuthWhitelistEntryNotFoundException(string message, Exception innerException);
}
public static class Microsoft.VisualStudio.Services.OAuthWhitelist.OAuthWhitelistResourceIds : object {
    public static string AreaId;
    public static string AreaName;
    public static string OAuthWhitelistEntriesResource;
    public static Guid OAuthWhitelistEntriesLocationId;
    private static OAuthWhitelistResourceIds();
}
[ExceptionMappingAttribute("0.0", "3.0", "OAuthWhitelistUpdateNotSupportedException", "Microsoft.VisualStudio.Services.OAuthWhitelist.OAuthWhitelistUpdateNotSupportedException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.OAuthWhitelist.OAuthWhitelistUpdateNotSupportedException : VssServiceException {
    public OAuthWhitelistUpdateNotSupportedException(string message);
    public OAuthWhitelistUpdateNotSupportedException(string message, Exception innerException);
}
[ResourceAreaAttribute("BED1E9DD-AE97-4D73-9E01-4797F66ED0D3")]
public class Microsoft.VisualStudio.Services.OAuthWhitelist.WebApi.OAuthWhitelistHttpClient : VssHttpClientBase {
    public OAuthWhitelistHttpClient(Uri baseUrl, VssCredentials credentials);
    public OAuthWhitelistHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public OAuthWhitelistHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public OAuthWhitelistHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public OAuthWhitelistHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    [EditorBrowsableAttribute("1")]
public Task`1<List`1<OAuthWhitelistEntry>> GetOAuthWhitelistEntriesAsync(object userState, CancellationToken cancellationToken);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Oidc.JsonWebKeyResponse : object {
    [CompilerGeneratedAttribute]
private string <N>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kty>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Kid>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Alg>k__BackingField;
    [CompilerGeneratedAttribute]
private string <E>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Use>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <X5c>k__BackingField;
    [CompilerGeneratedAttribute]
private string <X5t>k__BackingField;
    [DataMemberAttribute]
public string N { get; public set; }
    [DataMemberAttribute]
public string Kty { get; public set; }
    [DataMemberAttribute]
public string Kid { get; public set; }
    [DataMemberAttribute]
public string Alg { get; public set; }
    [DataMemberAttribute]
public string E { get; public set; }
    [DataMemberAttribute]
public string Use { get; public set; }
    [DataMemberAttribute]
public IList`1<string> X5c { get; public set; }
    [DataMemberAttribute]
public string X5t { get; public set; }
    public JsonWebKeyResponse(string kid, string kty);
    [CompilerGeneratedAttribute]
public string get_N();
    [CompilerGeneratedAttribute]
public void set_N(string value);
    [CompilerGeneratedAttribute]
public string get_Kty();
    [CompilerGeneratedAttribute]
public void set_Kty(string value);
    [CompilerGeneratedAttribute]
public string get_Kid();
    [CompilerGeneratedAttribute]
public void set_Kid(string value);
    [CompilerGeneratedAttribute]
public string get_Alg();
    [CompilerGeneratedAttribute]
public void set_Alg(string value);
    [CompilerGeneratedAttribute]
public string get_E();
    [CompilerGeneratedAttribute]
public void set_E(string value);
    [CompilerGeneratedAttribute]
public string get_Use();
    [CompilerGeneratedAttribute]
public void set_Use(string value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_X5c();
    [CompilerGeneratedAttribute]
public void set_X5c(IList`1<string> value);
    [CompilerGeneratedAttribute]
public string get_X5t();
    [CompilerGeneratedAttribute]
public void set_X5t(string value);
}
public static class Microsoft.VisualStudio.Services.Oidc.OidcResourceIds : object {
    public static string AreaName;
    public static string AreaId;
    public static string OrganizationAreaName;
    public static string OrganizationAreaId;
    public static string ConfigurationResource;
    public static Guid Configuration;
    public static Guid OrganizationConfiguration;
    public static string JwksResource;
    public static Guid Jwks;
    private static OidcResourceIds();
}
public static class Microsoft.VisualStudio.Services.Oidc.VssOidcConstants : object {
    public static string IdToken;
    public static string OpenId;
    public static string Public;
    public static string Pairwise;
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Oidc.VssOidcJwksConfigurationResponse : object {
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<JsonWebKeyResponse> <Keys>k__BackingField;
    [DataMemberAttribute]
public IReadOnlyCollection`1<JsonWebKeyResponse> Keys { get; public set; }
    public VssOidcJwksConfigurationResponse(IReadOnlyCollection`1<JsonWebKeyResponse> keys);
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<JsonWebKeyResponse> get_Keys();
    [CompilerGeneratedAttribute]
public void set_Keys(IReadOnlyCollection`1<JsonWebKeyResponse> value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Oidc.VssOidcPublicConfiguration : object {
    [CompilerGeneratedAttribute]
private string <Issuer>k__BackingField;
    [CompilerGeneratedAttribute]
private string <JwksUri>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<string> <SubjectTypesSupported>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<string> <ResponseTypesSupported>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<string> <ClaimsSupported>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<string> <IdTokenSigningAlgValuesSupported>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<string> <ScopesSupported>k__BackingField;
    [DataMemberAttribute]
public string Issuer { get; public set; }
    [DataMemberAttribute]
public string JwksUri { get; public set; }
    [DataMemberAttribute]
public IReadOnlyCollection`1<string> SubjectTypesSupported { get; public set; }
    [DataMemberAttribute]
public IReadOnlyCollection`1<string> ResponseTypesSupported { get; public set; }
    [DataMemberAttribute]
public IReadOnlyCollection`1<string> ClaimsSupported { get; public set; }
    [DataMemberAttribute]
public IReadOnlyCollection`1<string> IdTokenSigningAlgValuesSupported { get; public set; }
    [DataMemberAttribute]
public IReadOnlyCollection`1<string> ScopesSupported { get; public set; }
    public VssOidcPublicConfiguration(string issuer, string jwksUri, IReadOnlyCollection`1<string> subjectTypesSupported, IReadOnlyCollection`1<string> responseTypesSupported, IReadOnlyCollection`1<string> claimsSupported, IReadOnlyCollection`1<string> idTokenSigningAlgValuesSupported, IReadOnlyCollection`1<string> scopesSupported);
    [CompilerGeneratedAttribute]
public string get_Issuer();
    [CompilerGeneratedAttribute]
public void set_Issuer(string value);
    [CompilerGeneratedAttribute]
public string get_JwksUri();
    [CompilerGeneratedAttribute]
public void set_JwksUri(string value);
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<string> get_SubjectTypesSupported();
    [CompilerGeneratedAttribute]
public void set_SubjectTypesSupported(IReadOnlyCollection`1<string> value);
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<string> get_ResponseTypesSupported();
    [CompilerGeneratedAttribute]
public void set_ResponseTypesSupported(IReadOnlyCollection`1<string> value);
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<string> get_ClaimsSupported();
    [CompilerGeneratedAttribute]
public void set_ClaimsSupported(IReadOnlyCollection`1<string> value);
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<string> get_IdTokenSigningAlgValuesSupported();
    [CompilerGeneratedAttribute]
public void set_IdTokenSigningAlgValuesSupported(IReadOnlyCollection`1<string> value);
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<string> get_ScopesSupported();
    [CompilerGeneratedAttribute]
public void set_ScopesSupported(IReadOnlyCollection`1<string> value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Operations.Operation : OperationReference {
    [CompilerGeneratedAttribute]
private ReferenceLinks <Links>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResultMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DetailedMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private OperationResultReference <ResultUrl>k__BackingField;
    [DataMemberAttribute]
public ReferenceLinks Links { get; public set; }
    [DataMemberAttribute]
public string ResultMessage { get; public set; }
    [DataMemberAttribute]
public string DetailedMessage { get; public set; }
    [DataMemberAttribute]
public OperationResultReference ResultUrl { get; public set; }
    public bool Completed { get; }
    public Operation(OperationReference operationReference);
    [CompilerGeneratedAttribute]
public ReferenceLinks get_Links();
    [CompilerGeneratedAttribute]
public void set_Links(ReferenceLinks value);
    [CompilerGeneratedAttribute]
public string get_ResultMessage();
    [CompilerGeneratedAttribute]
public void set_ResultMessage(string value);
    [CompilerGeneratedAttribute]
public string get_DetailedMessage();
    [CompilerGeneratedAttribute]
public void set_DetailedMessage(string value);
    [CompilerGeneratedAttribute]
public OperationResultReference get_ResultUrl();
    [CompilerGeneratedAttribute]
public void set_ResultUrl(OperationResultReference value);
    public bool get_Completed();
    public virtual string ToString();
}
public class Microsoft.VisualStudio.Services.Operations.OperationNotFoundException : VssServiceException {
    public OperationNotFoundException(string message, Exception innerException);
    public OperationNotFoundException(string message);
    public OperationNotFoundException(Guid operationId);
    protected OperationNotFoundException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.Operations.OperationPluginNoPermission : SecurityException {
    public OperationPluginNoPermission(string message, Exception innerException);
    public OperationPluginNoPermission(string message);
    public OperationPluginNoPermission(Guid pluginId, Guid operationId);
}
public class Microsoft.VisualStudio.Services.Operations.OperationPluginNotFoundException : VssServiceException {
    public OperationPluginNotFoundException(string message, Exception innerException);
    public OperationPluginNotFoundException(string message);
    public OperationPluginNotFoundException(Guid pluginId);
    protected OperationPluginNotFoundException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.Operations.OperationPluginWithSameIdException : VssServiceException {
    public OperationPluginWithSameIdException(string message, Exception innerException);
    public OperationPluginWithSameIdException(string message);
    public OperationPluginWithSameIdException(Guid pluginId);
    protected OperationPluginWithSameIdException(SerializationInfo info, StreamingContext context);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Operations.OperationReference : object {
    [CompilerGeneratedAttribute]
private Guid <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private OperationStatus <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <PluginId>k__BackingField;
    [DataMemberAttribute]
public Guid Id { get; public set; }
    [DataMemberAttribute]
public OperationStatus Status { get; public set; }
    [DataMemberAttribute]
public string Url { get; public set; }
    [DataMemberAttribute]
public Guid PluginId { get; public set; }
    [CompilerGeneratedAttribute]
public Guid get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(Guid value);
    [CompilerGeneratedAttribute]
public OperationStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(OperationStatus value);
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
    [CompilerGeneratedAttribute]
public Guid get_PluginId();
    [CompilerGeneratedAttribute]
public void set_PluginId(Guid value);
    public virtual string ToString();
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Operations.OperationResultReference : object {
    [CompilerGeneratedAttribute]
private string <ResultUrl>k__BackingField;
    [DataMemberAttribute]
public string ResultUrl { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ResultUrl();
    [CompilerGeneratedAttribute]
public void set_ResultUrl(string value);
    public virtual string ToString();
}
public class Microsoft.VisualStudio.Services.Operations.OperationsHttpClient : OperationsHttpClientBase {
    public OperationsHttpClient(Uri baseUrl, VssCredentials credentials);
    public OperationsHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public OperationsHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public OperationsHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public OperationsHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    public Task`1<Operation> GetOperation(Guid id, object userState, CancellationToken cancellationToken);
    public Task`1<Operation> GetOperationAsync(OperationReference operationReference, object userState, CancellationToken cancellationToken);
}
public abstract class Microsoft.VisualStudio.Services.Operations.OperationsHttpClientBase : VssHttpClientBase {
    public OperationsHttpClientBase(Uri baseUrl, VssCredentials credentials);
    public OperationsHttpClientBase(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public OperationsHttpClientBase(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public OperationsHttpClientBase(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public OperationsHttpClientBase(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    public virtual Task`1<Operation> GetOperationAsync(Guid operationId, Nullable`1<Guid> pluginId, object userState, CancellationToken cancellationToken);
}
[GenerateAllConstantsAttribute("")]
public static class Microsoft.VisualStudio.Services.Operations.OperationsResourceIds : object {
    public static string AreaName;
    public static string OperationsResource;
    public static string OperationsRouteName;
    public static string OperationsPluginRouteName;
    public static string OperationsApi;
    public static string TagOperationsLocationId;
    public static Guid OperationsLocationId;
    public static string TagOperationsPluginLocationId;
    public static Guid OperationsPluginLocationId;
    private static OperationsResourceIds();
}
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.Operations.OperationStatus : Enum {
    public int value__;
    [EnumMemberAttribute]
public static OperationStatus NotSet;
    [EnumMemberAttribute]
public static OperationStatus Queued;
    [EnumMemberAttribute]
public static OperationStatus InProgress;
    [EnumMemberAttribute]
public static OperationStatus Cancelled;
    [EnumMemberAttribute]
public static OperationStatus Succeeded;
    [EnumMemberAttribute]
public static OperationStatus Failed;
}
public class Microsoft.VisualStudio.Services.Operations.OperationUpdateFailedException : VssServiceException {
    public OperationUpdateFailedException(string message, Exception innerException);
    public OperationUpdateFailedException(string message);
    public OperationUpdateFailedException(Guid operationId);
    protected OperationUpdateFailedException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.Organization.ActivatedOrganizationAlreadyExists : OrganizationException {
    public ActivatedOrganizationAlreadyExists(string message);
    public ActivatedOrganizationAlreadyExists(string message, Exception innerException);
    protected ActivatedOrganizationAlreadyExists(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.Organization.AnotherHostReservedNameException : OrganizationException {
    public AnotherHostReservedNameException(string message);
    public AnotherHostReservedNameException(string message, Exception innerException);
    protected AnotherHostReservedNameException(SerializationInfo info, StreamingContext context);
}
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.Organization.AssignmentStatus : Enum {
    public int value__;
    public static AssignmentStatus Unassignable;
    public static AssignmentStatus Assignable;
    public static AssignmentStatus Assigning;
    public static AssignmentStatus Assigned;
}
public class Microsoft.VisualStudio.Services.Organization.CannotChangePreferredRegionIndirectlyException : VssServiceException {
    public CannotChangePreferredRegionIndirectlyException(string message);
    public CannotChangePreferredRegionIndirectlyException(string message, Exception innerException);
    protected CannotChangePreferredRegionIndirectlyException(SerializationInfo info, StreamingContext context);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Organization.Client.Collection : object {
    [CompilerGeneratedAttribute]
private Guid <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private CollectionStatus <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <Owner>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <TenantId>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <DateCreated>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <LastUpdated>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Revision>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PreferredRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PreferredGeography>k__BackingField;
    [CompilerGeneratedAttribute]
private PropertiesCollection <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <Data>k__BackingField;
    [DataMemberAttribute]
public Guid Id { get; public set; }
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public CollectionStatus Status { get; public set; }
    [DataMemberAttribute]
public Guid Owner { get; public set; }
    [DataMemberAttribute]
public Guid TenantId { get; public set; }
    [DataMemberAttribute]
public DateTime DateCreated { get; public set; }
    [DataMemberAttribute]
public DateTime LastUpdated { get; public set; }
    [IgnoreDataMemberAttribute]
public int Revision { get; public set; }
    [DataMemberAttribute]
public string PreferredRegion { get; public set; }
    [DataMemberAttribute]
public string PreferredGeography { get; public set; }
    [DataMemberAttribute]
public PropertiesCollection Properties { get; public set; }
    [DataMemberAttribute]
public IDictionary`2<string, object> Data { get; public set; }
    [CompilerGeneratedAttribute]
public Guid get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(Guid value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public CollectionStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(CollectionStatus value);
    [CompilerGeneratedAttribute]
public Guid get_Owner();
    [CompilerGeneratedAttribute]
public void set_Owner(Guid value);
    [CompilerGeneratedAttribute]
public Guid get_TenantId();
    [CompilerGeneratedAttribute]
public void set_TenantId(Guid value);
    [CompilerGeneratedAttribute]
public DateTime get_DateCreated();
    [CompilerGeneratedAttribute]
public void set_DateCreated(DateTime value);
    [CompilerGeneratedAttribute]
public DateTime get_LastUpdated();
    [CompilerGeneratedAttribute]
public void set_LastUpdated(DateTime value);
    [CompilerGeneratedAttribute]
public int get_Revision();
    [CompilerGeneratedAttribute]
public void set_Revision(int value);
    [CompilerGeneratedAttribute]
public string get_PreferredRegion();
    [CompilerGeneratedAttribute]
public void set_PreferredRegion(string value);
    [CompilerGeneratedAttribute]
public string get_PreferredGeography();
    [CompilerGeneratedAttribute]
public void set_PreferredGeography(string value);
    [CompilerGeneratedAttribute]
public PropertiesCollection get_Properties();
    [CompilerGeneratedAttribute]
public void set_Properties(PropertiesCollection value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_Data();
    [CompilerGeneratedAttribute]
public void set_Data(IDictionary`2<string, object> value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Organization.Client.Geography : object {
    [CompilerGeneratedAttribute]
private string <Code>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Guid> <ServiceInstanceIds>k__BackingField;
    [CompilerGeneratedAttribute]
private int <AvailableHostsCount>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsActive>k__BackingField;
    [DataMemberAttribute]
public string Code { get; public set; }
    [DataMemberAttribute]
public string DisplayName { get; public set; }
    [DataMemberAttribute]
public List`1<Guid> ServiceInstanceIds { get; public set; }
    [DataMemberAttribute]
public int AvailableHostsCount { get; public set; }
    [DataMemberAttribute]
public bool IsActive { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Code();
    [CompilerGeneratedAttribute]
public void set_Code(string value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public List`1<Guid> get_ServiceInstanceIds();
    [CompilerGeneratedAttribute]
public void set_ServiceInstanceIds(List`1<Guid> value);
    [CompilerGeneratedAttribute]
public int get_AvailableHostsCount();
    [CompilerGeneratedAttribute]
public void set_AvailableHostsCount(int value);
    [CompilerGeneratedAttribute]
public bool get_IsActive();
    [CompilerGeneratedAttribute]
public void set_IsActive(bool value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Organization.Client.Logo : object {
    [CompilerGeneratedAttribute]
private Byte[] <Image>k__BackingField;
    [DataMemberAttribute]
public Byte[] Image { get; public set; }
    [CompilerGeneratedAttribute]
public Byte[] get_Image();
    [CompilerGeneratedAttribute]
public void set_Image(Byte[] value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Organization.Client.Organization : object {
    [CompilerGeneratedAttribute]
private Guid <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private OrganizationType <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private OrganizationStatus <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PreferredRegion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PreferredGeography>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsActivated>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<Collection> <Collections>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <DateCreated>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <LastUpdated>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <CreatorId>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <TenantId>k__BackingField;
    [CompilerGeneratedAttribute]
private Collection <PrimaryCollection>k__BackingField;
    [CompilerGeneratedAttribute]
private PropertiesCollection <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <Data>k__BackingField;
    [DataMemberAttribute]
public Guid Id { get; public set; }
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public OrganizationType Type { get; public set; }
    [DataMemberAttribute]
public OrganizationStatus Status { get; public set; }
    [DataMemberAttribute]
public string PreferredRegion { get; public set; }
    [DataMemberAttribute]
public string PreferredGeography { get; public set; }
    [DataMemberAttribute]
public bool IsActivated { get; public set; }
    [DataMemberAttribute]
public ICollection`1<Collection> Collections { get; public set; }
    [DataMemberAttribute]
public DateTime DateCreated { get; public set; }
    [DataMemberAttribute]
public DateTime LastUpdated { get; public set; }
    [DataMemberAttribute]
public Guid CreatorId { get; public set; }
    [DataMemberAttribute]
public Guid TenantId { get; internal set; }
    [DataMemberAttribute]
public Collection PrimaryCollection { get; public set; }
    [DataMemberAttribute]
public PropertiesCollection Properties { get; public set; }
    [DataMemberAttribute]
public IDictionary`2<string, object> Data { get; public set; }
    [CompilerGeneratedAttribute]
public Guid get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(Guid value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public OrganizationType get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(OrganizationType value);
    [CompilerGeneratedAttribute]
public OrganizationStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(OrganizationStatus value);
    [CompilerGeneratedAttribute]
public string get_PreferredRegion();
    [CompilerGeneratedAttribute]
public void set_PreferredRegion(string value);
    [CompilerGeneratedAttribute]
public string get_PreferredGeography();
    [CompilerGeneratedAttribute]
public void set_PreferredGeography(string value);
    [CompilerGeneratedAttribute]
public bool get_IsActivated();
    [CompilerGeneratedAttribute]
public void set_IsActivated(bool value);
    [CompilerGeneratedAttribute]
public ICollection`1<Collection> get_Collections();
    [CompilerGeneratedAttribute]
public void set_Collections(ICollection`1<Collection> value);
    [CompilerGeneratedAttribute]
public DateTime get_DateCreated();
    [CompilerGeneratedAttribute]
public void set_DateCreated(DateTime value);
    [CompilerGeneratedAttribute]
public DateTime get_LastUpdated();
    [CompilerGeneratedAttribute]
public void set_LastUpdated(DateTime value);
    [CompilerGeneratedAttribute]
public Guid get_CreatorId();
    [CompilerGeneratedAttribute]
public void set_CreatorId(Guid value);
    [CompilerGeneratedAttribute]
public Guid get_TenantId();
    [CompilerGeneratedAttribute]
internal void set_TenantId(Guid value);
    [CompilerGeneratedAttribute]
public Collection get_PrimaryCollection();
    [CompilerGeneratedAttribute]
public void set_PrimaryCollection(Collection value);
    [CompilerGeneratedAttribute]
public PropertiesCollection get_Properties();
    [CompilerGeneratedAttribute]
public void set_Properties(PropertiesCollection value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_Data();
    [CompilerGeneratedAttribute]
public void set_Data(IDictionary`2<string, object> value);
}
public abstract class Microsoft.VisualStudio.Services.Organization.Client.OrganizationCompatHttpClientBase : VssHttpClientBase {
    public OrganizationCompatHttpClientBase(Uri baseUrl, VssCredentials credentials);
    public OrganizationCompatHttpClientBase(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public OrganizationCompatHttpClientBase(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public OrganizationCompatHttpClientBase(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public OrganizationCompatHttpClientBase(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    [EditorBrowsableAttribute("1")]
[ObsoleteAttribute]
public virtual Task`1<bool> DeleteCollectionAsync(Guid collectionId, object userState, CancellationToken cancellationToken);
}
[ResourceAreaAttribute("0D55247A-1C47-4462-9B1F-5E2125590EE6")]
public class Microsoft.VisualStudio.Services.Organization.Client.OrganizationHttpClient : OrganizationCompatHttpClientBase {
    public OrganizationHttpClient(Uri baseUrl, VssCredentials credentials);
    public OrganizationHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public OrganizationHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public OrganizationHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public OrganizationHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Organization.Client.OrganizationHttpClient/<DeleteCollectionAvatarAsync>d__5")]
public virtual Task DeleteCollectionAvatarAsync(Guid collectionId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Organization.Client.OrganizationHttpClient/<UpdateCollectionAvatarAsync>d__6")]
public virtual Task UpdateCollectionAvatarAsync(Guid collectionId, Byte[] imageData, object userState, CancellationToken cancellationToken);
    public virtual Task`1<bool> UpdateCollectionPropertiesAsync(Guid collectionId, JsonPatchDocument patchDocument, object userState, CancellationToken cancellationToken);
    public virtual Task`1<Collection> BackfillPreferredGeographyAsync(Guid collectionId, string geographyName, object userState, CancellationToken cancellationToken);
    public virtual Task`1<Collection> CreateCollectionAsync(Collection resource, object userState, CancellationToken cancellationToken);
    public virtual Task`1<bool> DeleteCollectionAsync(Guid collectionId, Nullable`1<int> gracePeriodToRestoreInHours, Nullable`1<bool> violatedTerms, object userState, CancellationToken cancellationToken);
    public virtual Task`1<Collection> ForceUpdateCollectionOwnerAsync(string forceUpdateReason, Guid collectionId, Guid newOwner, object userState, CancellationToken cancellationToken);
    public virtual Task`1<Collection> GetCollectionAsync(string collectionId, IEnumerable`1<string> propertyNames, object userState, CancellationToken cancellationToken);
    public virtual Task`1<List`1<Collection>> GetCollectionsAsync(object userState, CancellationToken cancellationToken);
    public virtual Task`1<List`1<Collection>> GetCollectionsAsync(CollectionSearchKind searchKind, string searchValue, Nullable`1<bool> includeDeletedCollections, object userState, CancellationToken cancellationToken);
    public virtual Task`1<bool> IsEligibleForTakeOverAsync(Guid collectionId, object userState, CancellationToken cancellationToken);
    public virtual Task`1<bool> RestoreCollectionAsync(Guid collectionId, string collectionName, object userState, CancellationToken cancellationToken);
    public virtual Task`1<Collection> UpdateCollectionAsync(JsonPatchDocument patchDocument, string collectionId, object userState, CancellationToken cancellationToken);
    public virtual Task`1<List`1<Geography>> GetGeographiesAsync(object userState, CancellationToken cancellationToken);
    public virtual Task`1<bool> UpdateOrganizationLogoAsync(Guid organizationId, Logo logo, object userState, CancellationToken cancellationToken);
    public virtual Task`1<OrganizationMigrationBlob> ExportOrganizationMigrationBlobAsync(Guid organizationId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Organization.Client.OrganizationHttpClient/<ImportOrganizationMigrationBlobAsync>d__21")]
public virtual Task ImportOrganizationMigrationBlobAsync(OrganizationMigrationBlob migrationBlob, object userState, CancellationToken cancellationToken);
    public virtual Task`1<bool> UpdateOrganizationPropertiesAsync(Guid organizationId, JsonPatchDocument patchDocument, object userState, CancellationToken cancellationToken);
    public virtual Task`1<Organization> CreateOrganizationAsync(Organization resource, object userState, CancellationToken cancellationToken);
    public virtual Task`1<Organization> GetOldestOrganizationByTenantAsync(Guid tenantId, object userState, CancellationToken cancellationToken);
    public virtual Task`1<Organization> GetOrganizationAsync(string organizationId, IEnumerable`1<string> propertyNames, object userState, CancellationToken cancellationToken);
    public virtual Task`1<List`1<Organization>> GetOrganizationsAsync(OrganizationSearchKind searchKind, string searchValue, Nullable`1<bool> isActivated, object userState, CancellationToken cancellationToken);
    public virtual Task`1<Organization> UpdateOrganizationAsync(JsonPatchDocument patchDocument, string organizationId, object userState, CancellationToken cancellationToken);
    public virtual Task`1<List`1<Region>> GetRegionsAsync(Nullable`1<bool> includeRegionsWithNoAvailableHosts, object userState, CancellationToken cancellationToken);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Organization.Client.OrganizationMigrationBlob : object {
    [CompilerGeneratedAttribute]
private Guid <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BlobAsJson>k__BackingField;
    [DataMemberAttribute]
public Guid Id { get; public set; }
    [DataMemberAttribute]
public string BlobAsJson { get; public set; }
    [CompilerGeneratedAttribute]
public Guid get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(Guid value);
    [CompilerGeneratedAttribute]
public string get_BlobAsJson();
    [CompilerGeneratedAttribute]
public void set_BlobAsJson(string value);
}
public class Microsoft.VisualStudio.Services.Organization.Client.OrganizationPolicyHttpClient : VssHttpClientBase {
    public OrganizationPolicyHttpClient(Uri baseUrl, VssCredentials credentials);
    public OrganizationPolicyHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public OrganizationPolicyHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public OrganizationPolicyHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public OrganizationPolicyHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    [EditorBrowsableAttribute("1")]
public virtual Task`1<Policy> GetPolicyAsync(string policyName, string defaultValue, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Organization.Client.OrganizationPolicyHttpClient/<UpdatePolicyAsync>d__6")]
[EditorBrowsableAttribute("1")]
public virtual Task UpdatePolicyAsync(JsonPatchDocument patchDocument, string policyName, object userState, CancellationToken cancellationToken);
    public virtual Task`1<Dictionary`2<string, Policy>> GetPoliciesAsync(IEnumerable`1<string> policyNames, IEnumerable`1<string> defaultValues, object userState, CancellationToken cancellationToken);
    public virtual Task`1<PolicyInfo> GetPolicyInformationAsync(string policyName, object userState, CancellationToken cancellationToken);
    public virtual Task`1<Dictionary`2<string, PolicyInfo>> GetPolicyInformationsAsync(IEnumerable`1<string> policyNames, object userState, CancellationToken cancellationToken);
}
[DataContractAttribute]
[ClientIncludeModelAttribute]
public class Microsoft.VisualStudio.Services.Organization.Client.Policy : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private object <EffectiveValue>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Enforce>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsValueUndefined>k__BackingField;
    [CompilerGeneratedAttribute]
private Policy <ParentPolicy>k__BackingField;
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public object Value { get; public set; }
    [DataMemberAttribute]
public object EffectiveValue { get; public set; }
    [DataMemberAttribute]
public bool Enforce { get; public set; }
    [DataMemberAttribute]
public bool IsValueUndefined { get; public set; }
    [DataMemberAttribute]
public Policy ParentPolicy { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public object get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(object value);
    [CompilerGeneratedAttribute]
public object get_EffectiveValue();
    [CompilerGeneratedAttribute]
public void set_EffectiveValue(object value);
    [CompilerGeneratedAttribute]
public bool get_Enforce();
    [CompilerGeneratedAttribute]
public void set_Enforce(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsValueUndefined();
    [CompilerGeneratedAttribute]
public void set_IsValueUndefined(bool value);
    [CompilerGeneratedAttribute]
public Policy get_ParentPolicy();
    [CompilerGeneratedAttribute]
public void set_ParentPolicy(Policy value);
}
[DataContractAttribute]
[ClientIncludeModelAttribute]
public class Microsoft.VisualStudio.Services.Organization.Client.PolicyInfo : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <MoreInfoLink>k__BackingField;
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public string Description { get; public set; }
    [DataMemberAttribute]
public Uri MoreInfoLink { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public Uri get_MoreInfoLink();
    [CompilerGeneratedAttribute]
public void set_MoreInfoLink(Uri value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Organization.Client.Region : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NameInAzure>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDefault>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <ServiceInstanceId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <AvailableHostsCount>k__BackingField;
    [CompilerGeneratedAttribute]
private RegionStatus <RegionStatus>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GeographyCode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GeographyName>k__BackingField;
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public string DisplayName { get; public set; }
    [DataMemberAttribute]
public string NameInAzure { get; public set; }
    [DataMemberAttribute]
public bool IsDefault { get; public set; }
    [DataMemberAttribute]
public Guid ServiceInstanceId { get; public set; }
    [DataMemberAttribute]
public int AvailableHostsCount { get; public set; }
    [DataMemberAttribute]
public RegionStatus RegionStatus { get; public set; }
    [DataMemberAttribute]
public string GeographyCode { get; public set; }
    [DataMemberAttribute]
public string GeographyName { get; public set; }
    public Region(Region region);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public string get_NameInAzure();
    [CompilerGeneratedAttribute]
public void set_NameInAzure(string value);
    [CompilerGeneratedAttribute]
public bool get_IsDefault();
    [CompilerGeneratedAttribute]
public void set_IsDefault(bool value);
    [CompilerGeneratedAttribute]
public Guid get_ServiceInstanceId();
    [CompilerGeneratedAttribute]
public void set_ServiceInstanceId(Guid value);
    [CompilerGeneratedAttribute]
public int get_AvailableHostsCount();
    [CompilerGeneratedAttribute]
public void set_AvailableHostsCount(int value);
    [CompilerGeneratedAttribute]
public RegionStatus get_RegionStatus();
    [CompilerGeneratedAttribute]
public void set_RegionStatus(RegionStatus value);
    [CompilerGeneratedAttribute]
public string get_GeographyCode();
    [CompilerGeneratedAttribute]
public void set_GeographyCode(string value);
    [CompilerGeneratedAttribute]
public string get_GeographyName();
    [CompilerGeneratedAttribute]
public void set_GeographyName(string value);
}
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.Organization.Client.RegionStatus : Enum {
    public byte value__;
    [EnumMemberAttribute]
public static RegionStatus Disabled;
    [EnumMemberAttribute]
public static RegionStatus Internal;
    [EnumMemberAttribute]
public static RegionStatus Public;
    [EnumMemberAttribute]
public static RegionStatus Preflight;
    [EnumMemberAttribute]
public static RegionStatus Private;
}
public class Microsoft.VisualStudio.Services.Organization.CollectionAlreadyExistsException : OrganizationException {
    public CollectionAlreadyExistsException(string message);
    public CollectionAlreadyExistsException(string message, Exception innerException);
    protected CollectionAlreadyExistsException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.Organization.CollectionCreationException : OrganizationException {
    public CollectionCreationException(string message);
    public CollectionCreationException(string message, Exception innerException);
    protected CollectionCreationException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.Organization.CollectionCreationLimitsReachedException : OrganizationException {
    public CollectionCreationLimitsReachedException(string message);
    public CollectionCreationLimitsReachedException(string message, Exception innerException);
    protected CollectionCreationLimitsReachedException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.Organization.CollectionCreationRuleFailedException : OrganizationException {
    public CollectionCreationRuleFailedException(string message);
    public CollectionCreationRuleFailedException(string message, Exception innerException);
    protected CollectionCreationRuleFailedException(SerializationInfo info, StreamingContext context);
}
[DataContractAttribute]
[FlagsAttribute]
public enum Microsoft.VisualStudio.Services.Organization.CollectionCreationVerification : Enum {
    public int value__;
    [EnumMemberAttribute]
public static CollectionCreationVerification Unknown;
    [EnumMemberAttribute]
public static CollectionCreationVerification None;
    [EnumMemberAttribute]
public static CollectionCreationVerification AllowedList;
    [EnumMemberAttribute]
public static CollectionCreationVerification Capcha;
    [EnumMemberAttribute]
public static CollectionCreationVerification RiskEngine;
    [EnumMemberAttribute]
public static CollectionCreationVerification TrustedTenant;
}
public class Microsoft.VisualStudio.Services.Organization.CollectionMarkedForDeletionException : OrganizationException {
    public CollectionMarkedForDeletionException(string message);
    public CollectionMarkedForDeletionException(string message, Exception innerException);
    protected CollectionMarkedForDeletionException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.Organization.CollectionNameException : OrganizationException {
    public CollectionNameException(string message);
    public CollectionNameException(string message, Exception innerException);
    protected CollectionNameException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.Organization.CollectionNotFoundException : OrganizationException {
    public CollectionNotFoundException(string message);
    public CollectionNotFoundException(string message, Exception innerException);
    protected CollectionNotFoundException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.Organization.CollectionNotMarkedForDeletionException : OrganizationException {
    public CollectionNotMarkedForDeletionException(string message);
    public CollectionNotMarkedForDeletionException(string message, Exception innerException);
    protected CollectionNotMarkedForDeletionException(SerializationInfo info, StreamingContext context);
}
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.Organization.CollectionSearchKind : Enum {
    public int value__;
    [EnumMemberAttribute]
public static CollectionSearchKind Unknown;
    [EnumMemberAttribute]
public static CollectionSearchKind ById;
    [EnumMemberAttribute]
public static CollectionSearchKind ByName;
    [EnumMemberAttribute]
public static CollectionSearchKind ByTenantId;
}
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.Organization.CollectionStatus : Enum {
    public int value__;
    [EnumMemberAttribute]
public static CollectionStatus Unknown;
    [EnumMemberAttribute]
public static CollectionStatus Initial;
    [EnumMemberAttribute]
public static CollectionStatus Enabled;
    [EnumMemberAttribute]
public static CollectionStatus LogicallyDeleted;
    [EnumMemberAttribute]
public static CollectionStatus MarkedForPhysicalDelete;
}
public class Microsoft.VisualStudio.Services.Organization.GeographyNotAvailableException : OrganizationException {
    public GeographyNotAvailableException(string message);
    public GeographyNotAvailableException(string message, Exception innerException);
    protected GeographyNotAvailableException(SerializationInfo info, StreamingContext context);
}
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.Organization.HostCreationType : Enum {
    public int value__;
    public static HostCreationType None;
    public static HostCreationType PreCreated;
    public static HostCreationType OnDemand;
}
public class Microsoft.VisualStudio.Services.Organization.HostHasPendingRenameException : OrganizationException {
    public HostHasPendingRenameException(string message);
    public HostHasPendingRenameException(string message, Exception innerException);
    protected HostHasPendingRenameException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.Organization.OrganizationAlreadyExistsException : OrganizationException {
    public OrganizationAlreadyExistsException(string message);
    public OrganizationAlreadyExistsException(string message, Exception innerException);
    protected OrganizationAlreadyExistsException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.Organization.OrganizationBadRequestException : OrganizationException {
    public OrganizationBadRequestException(string message);
    public OrganizationBadRequestException(string message, Exception innerException);
    protected OrganizationBadRequestException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.Organization.OrganizationException : VssServiceException {
    public OrganizationException(string message);
    public OrganizationException(string message, Exception innerException);
    protected OrganizationException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.Organization.OrganizationMissingGeographyAndRegionException : OrganizationException {
    public OrganizationMissingGeographyAndRegionException(string message);
    public OrganizationMissingGeographyAndRegionException(string message, Exception innerException);
    protected OrganizationMissingGeographyAndRegionException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.Organization.OrganizationNameException : OrganizationException {
    public OrganizationNameException(string message);
    public OrganizationNameException(string message, Exception innerException);
    protected OrganizationNameException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.Organization.OrganizationNotFoundException : OrganizationException {
    public OrganizationNotFoundException(string message);
    public OrganizationNotFoundException(string message, Exception innerException);
    protected OrganizationNotFoundException(SerializationInfo info, StreamingContext context);
}
public static class Microsoft.VisualStudio.Services.Organization.OrganizationPolicyResourceIds : object {
    public static string OrganizationPolicyArea;
    public static Guid PoliciesLocationId;
    public static string PoliciesResourceName;
    public static Guid PoliciesBatchLocationId;
    public static string PoliciesBatchResourceName;
    public static Guid PolicyInformationLocationId;
    public static string PolicyInformationResourceName;
    private static OrganizationPolicyResourceIds();
}
public static class Microsoft.VisualStudio.Services.Organization.OrganizationResourceIds : object {
    public static string AreaId;
    public static Guid ResourceAreaId;
    public static string OrganizationArea;
    public static string PropertiesResourceName;
    public static string LogoResourceName;
    public static string AvatarResourceName;
    public static Guid OrganizationsResourceLocationId;
    public static string OrganizationsResourceName;
    public static Guid OrganizationPropertiesResourceLocationId;
    public static string OrganizationPropertiesResourceName;
    public static Guid OrganizationLogoResourceLocationId;
    public static string OrganizationLogoResourceName;
    public static Guid OrganizationMigrationBlobsResourceLocationId;
    public static string OrganizationMigrationBlobsResourceName;
    public static Guid CollectionsResourceLocationId;
    public static string CollectionsResourceName;
    public static Guid CollectionPropertiesResourceLocationId;
    public static string CollectionPropertiesResourceName;
    public static Guid CollectionAvatarResourceLocationId;
    public static string CollectionAvatarResourceName;
    public static Guid RegionsResourceLocationId;
    public static string RegionsResourceName;
    public static Guid GeographiesResourceLocationId;
    public static string GeographiesResourceName;
    private static OrganizationResourceIds();
}
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.Organization.OrganizationSearchKind : Enum {
    public int value__;
    [EnumMemberAttribute]
public static OrganizationSearchKind Unknown;
    [EnumMemberAttribute]
public static OrganizationSearchKind ById;
    [EnumMemberAttribute]
public static OrganizationSearchKind ByName;
    [EnumMemberAttribute]
public static OrganizationSearchKind ByTenantId;
}
public class Microsoft.VisualStudio.Services.Organization.OrganizationServiceSecurityException : OrganizationException {
    public OrganizationServiceSecurityException(string message);
    public OrganizationServiceSecurityException(string message, Exception innerException);
    protected OrganizationServiceSecurityException(SerializationInfo info, StreamingContext context);
}
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.Organization.OrganizationStatus : Enum {
    public int value__;
    [EnumMemberAttribute]
public static OrganizationStatus Unknown;
    [EnumMemberAttribute]
public static OrganizationStatus Initial;
    [EnumMemberAttribute]
public static OrganizationStatus Enabled;
    [EnumMemberAttribute]
public static OrganizationStatus MarkedForDelete;
}
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.Organization.OrganizationType : Enum {
    public int value__;
    [EnumMemberAttribute]
public static OrganizationType Unknown;
    [EnumMemberAttribute]
public static OrganizationType Personal;
    [EnumMemberAttribute]
public static OrganizationType Work;
}
public class Microsoft.VisualStudio.Services.Organization.RegionNotAvailableException : OrganizationException {
    public RegionNotAvailableException(string message);
    public RegionNotAvailableException(string message, Exception innerException);
    protected RegionNotAvailableException(SerializationInfo info, StreamingContext context);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Partitioning.Partition : object {
    [CompilerGeneratedAttribute]
private string <PartitionKey>k__BackingField;
    [CompilerGeneratedAttribute]
private PartitionContainer <Container>k__BackingField;
    [DataMemberAttribute]
public string PartitionKey { get; public set; }
    [DataMemberAttribute]
public PartitionContainer Container { get; public set; }
    [CompilerGeneratedAttribute]
public string get_PartitionKey();
    [CompilerGeneratedAttribute]
public void set_PartitionKey(string value);
    [CompilerGeneratedAttribute]
public PartitionContainer get_Container();
    [CompilerGeneratedAttribute]
public void set_Container(PartitionContainer value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Partitioning.PartitionContainer : object {
    [CompilerGeneratedAttribute]
private Guid <ContainerId>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <ContainerType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Address>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InternalAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaxPartitions>k__BackingField;
    [CompilerGeneratedAttribute]
private PartitionContainerStatus <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <Tags>k__BackingField;
    [DataMemberAttribute]
public Guid ContainerId { get; public set; }
    [DataMemberAttribute]
public Guid ContainerType { get; public set; }
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public string Address { get; public set; }
    [DataMemberAttribute]
public string InternalAddress { get; public set; }
    [DataMemberAttribute]
public int MaxPartitions { get; public set; }
    [DataMemberAttribute]
public PartitionContainerStatus Status { get; public set; }
    [DataMemberAttribute]
public List`1<string> Tags { get; public set; }
    [CompilerGeneratedAttribute]
public Guid get_ContainerId();
    [CompilerGeneratedAttribute]
public void set_ContainerId(Guid value);
    [CompilerGeneratedAttribute]
public Guid get_ContainerType();
    [CompilerGeneratedAttribute]
public void set_ContainerType(Guid value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Address();
    [CompilerGeneratedAttribute]
public void set_Address(string value);
    [CompilerGeneratedAttribute]
public string get_InternalAddress();
    [CompilerGeneratedAttribute]
public void set_InternalAddress(string value);
    [CompilerGeneratedAttribute]
public int get_MaxPartitions();
    [CompilerGeneratedAttribute]
public void set_MaxPartitions(int value);
    [CompilerGeneratedAttribute]
public PartitionContainerStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(PartitionContainerStatus value);
    [CompilerGeneratedAttribute]
public List`1<string> get_Tags();
    [CompilerGeneratedAttribute]
public void set_Tags(List`1<string> value);
}
public class Microsoft.VisualStudio.Services.Partitioning.PartitionContainerMustBeOfflineException : VssServiceException {
    public PartitionContainerMustBeOfflineException(string message);
    public PartitionContainerMustBeOfflineException(string message, Exception ex);
    public PartitionContainerMustBeOfflineException(Guid containerId);
    protected PartitionContainerMustBeOfflineException(SerializationInfo info, StreamingContext context);
}
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.Partitioning.PartitionContainerStatus : Enum {
    public int value__;
    [EnumMemberAttribute]
public static PartitionContainerStatus Online;
    [EnumMemberAttribute]
public static PartitionContainerStatus Offline;
}
[GenerateAllConstantsAttribute("")]
public static class Microsoft.VisualStudio.Services.Partitioning.PartitioningResourceIds : object {
    public static string AreaName;
    public static string AreaId;
    public static string PartitionContainersResource;
    public static Guid PartitionContainers;
    public static string PartitionsResource;
    public static Guid Partitions;
    private static PartitioningResourceIds();
}
public class Microsoft.VisualStudio.Services.Partitioning.PartitionNotFoundException : VssServiceException {
    public PartitionNotFoundException(string message);
    public PartitionNotFoundException(string message, Exception ex);
    protected PartitionNotFoundException(SerializationInfo info, StreamingContext context);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Performance.TimingEntry : BaseSecuredObject {
    [CompilerGeneratedAttribute]
private long <ElapsedTicks>k__BackingField;
    [CompilerGeneratedAttribute]
private long <StartOffset>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <Properties>k__BackingField;
    [DataMemberAttribute]
public long ElapsedTicks { get; public set; }
    [DataMemberAttribute]
public long StartOffset { get; public set; }
    [DataMemberAttribute]
public IDictionary`2<string, object> Properties { get; public set; }
    public TimingEntry(ISecuredObject securedObject);
    [CompilerGeneratedAttribute]
public long get_ElapsedTicks();
    [CompilerGeneratedAttribute]
public void set_ElapsedTicks(long value);
    [CompilerGeneratedAttribute]
public long get_StartOffset();
    [CompilerGeneratedAttribute]
public void set_StartOffset(long value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_Properties();
    [CompilerGeneratedAttribute]
public void set_Properties(IDictionary`2<string, object> value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Performance.TimingGroup : BaseSecuredObject {
    [CompilerGeneratedAttribute]
private long <ElapsedTicks>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Count>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<TimingEntry> <Timings>k__BackingField;
    [DataMemberAttribute]
public long ElapsedTicks { get; public set; }
    [DataMemberAttribute]
public int Count { get; public set; }
    [DataMemberAttribute]
public List`1<TimingEntry> Timings { get; private set; }
    public TimingGroup(ISecuredObject securedObject);
    [CompilerGeneratedAttribute]
public long get_ElapsedTicks();
    [CompilerGeneratedAttribute]
public void set_ElapsedTicks(long value);
    [CompilerGeneratedAttribute]
public int get_Count();
    [CompilerGeneratedAttribute]
public void set_Count(int value);
    [CompilerGeneratedAttribute]
public List`1<TimingEntry> get_Timings();
    [CompilerGeneratedAttribute]
private void set_Timings(List`1<TimingEntry> value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.PermissionLevel.Client.PermissionLevelDefinition : object {
    [CompilerGeneratedAttribute]
private Guid <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private PermissionLevelDefinitionType <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private PermissionLevelDefinitionScope <Scope>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <CreationDate>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <LastUpdated>k__BackingField;
    [DataMemberAttribute]
public Guid Id { get; public set; }
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public string Description { get; public set; }
    [DataMemberAttribute]
public PermissionLevelDefinitionType Type { get; public set; }
    [DataMemberAttribute]
public PermissionLevelDefinitionScope Scope { get; public set; }
    [DataMemberAttribute]
public DateTime CreationDate { get; public set; }
    [DataMemberAttribute]
public DateTime LastUpdated { get; public set; }
    [CompilerGeneratedAttribute]
public Guid get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(Guid value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public PermissionLevelDefinitionType get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(PermissionLevelDefinitionType value);
    [CompilerGeneratedAttribute]
public PermissionLevelDefinitionScope get_Scope();
    [CompilerGeneratedAttribute]
public void set_Scope(PermissionLevelDefinitionScope value);
    [CompilerGeneratedAttribute]
public DateTime get_CreationDate();
    [CompilerGeneratedAttribute]
public void set_CreationDate(DateTime value);
    [CompilerGeneratedAttribute]
public DateTime get_LastUpdated();
    [CompilerGeneratedAttribute]
public void set_LastUpdated(DateTime value);
    private bool Equals(PermissionLevelDefinition obj);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
[ResourceAreaAttribute("E97D4D3C-C339-4745-A987-BD6F6C496788")]
public class Microsoft.VisualStudio.Services.PermissionLevel.Client.PermissionLevelHttpClient : VssHttpClientBase {
    public PermissionLevelHttpClient(Uri baseUrl, VssCredentials credentials);
    public PermissionLevelHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public PermissionLevelHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public PermissionLevelHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public PermissionLevelHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    public virtual Task`1<PermissionLevelAssignment> AssignPermissionLevelAsync(string subjectDescriptor, Guid definitionId, string resourceId, object userState, CancellationToken cancellationToken);
    public virtual Task`1<PagedPermissionLevelAssignment> GetPermissionLevelAssignmentsByDefinitionIdAsync(string resourceId, Guid definitionId, Nullable`1<int> pageSize, string continuationToken, object userState, CancellationToken cancellationToken);
    public virtual Task`1<PagedPermissionLevelAssignment> GetPermissionLevelAssignmentsByScopeAsync(string resourceId, PermissionLevelDefinitionScope scope, Nullable`1<int> pageSize, string continuationToken, object userState, CancellationToken cancellationToken);
    public virtual Task`1<List`1<PermissionLevelAssignment>> GetPermissionLevelAssignmentsByScopeAndSubjectAsync(string subjectDescriptor, string resourceId, PermissionLevelDefinitionScope scope, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.PermissionLevel.Client.PermissionLevelHttpClient/<RemovePermissionLevelAssignmentAsync>d__9")]
public virtual Task RemovePermissionLevelAssignmentAsync(string subjectDescriptor, Guid definitionId, string resourceId, object userState, CancellationToken cancellationToken);
    public virtual Task`1<PermissionLevelAssignment> UpdatePermissionLevelAssignmentAsync(string subjectDescriptor, string resourceId, Guid definitionId, Guid newDefinitionId, object userState, CancellationToken cancellationToken);
    public virtual Task`1<Dictionary`2<Guid, PermissionLevelDefinition>> GetPermissionLevelDefinitionsByIdAsync(IEnumerable`1<Guid> definitionIds, object userState, CancellationToken cancellationToken);
    public virtual Task`1<List`1<PermissionLevelDefinition>> GetPermissionLevelDefinitionsByScopeAsync(PermissionLevelDefinitionScope definitionScope, PermissionLevelDefinitionType definitionType, object userState, CancellationToken cancellationToken);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.PermissionLevel.PagedPermissionLevelAssignment : object {
    [CompilerGeneratedAttribute]
private IEnumerable`1<PermissionLevelAssignment> <PermissionLevelAssignments>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContinuationToken>k__BackingField;
    [DataMemberAttribute]
public IEnumerable`1<PermissionLevelAssignment> PermissionLevelAssignments { get; public set; }
    [DataMemberAttribute]
public string ContinuationToken { get; public set; }
    [CompilerGeneratedAttribute]
public IEnumerable`1<PermissionLevelAssignment> get_PermissionLevelAssignments();
    [CompilerGeneratedAttribute]
public void set_PermissionLevelAssignments(IEnumerable`1<PermissionLevelAssignment> value);
    [CompilerGeneratedAttribute]
public string get_ContinuationToken();
    [CompilerGeneratedAttribute]
public void set_ContinuationToken(string value);
}
public class Microsoft.VisualStudio.Services.PermissionLevel.PagedPermissionLevelAssignmentContext : object {
    [CompilerGeneratedAttribute]
private int <StartSequenceId>k__BackingField;
    public int StartSequenceId { get; public set; }
    [CompilerGeneratedAttribute]
public int get_StartSequenceId();
    [CompilerGeneratedAttribute]
public void set_StartSequenceId(int value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.PermissionLevel.PermissionLevelAssignment : object {
    [CompilerGeneratedAttribute]
private Guid <PermissionLevelDefinitionId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResourceId>k__BackingField;
    [CompilerGeneratedAttribute]
private SubjectDescriptor <Subject>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsInherited>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceLinks <Links>k__BackingField;
    [DataMemberAttribute]
public Guid PermissionLevelDefinitionId { get; public set; }
    [DataMemberAttribute]
public string ResourceId { get; public set; }
    [DataMemberAttribute]
public SubjectDescriptor Subject { get; public set; }
    [DataMemberAttribute]
public bool IsInherited { get; public set; }
    [DataMemberAttribute]
public ReferenceLinks Links { get; public set; }
    public PermissionLevelAssignment(Guid permissionLevelDefinitionId, string resourceId, SubjectDescriptor subject);
    public PermissionLevelAssignment(Guid permissionLevelDefinitionId, string resourceId, SubjectDescriptor subject, ReferenceLinks links);
    [CompilerGeneratedAttribute]
public Guid get_PermissionLevelDefinitionId();
    [CompilerGeneratedAttribute]
public void set_PermissionLevelDefinitionId(Guid value);
    [CompilerGeneratedAttribute]
public string get_ResourceId();
    [CompilerGeneratedAttribute]
public void set_ResourceId(string value);
    [CompilerGeneratedAttribute]
public SubjectDescriptor get_Subject();
    [CompilerGeneratedAttribute]
public void set_Subject(SubjectDescriptor value);
    [CompilerGeneratedAttribute]
public bool get_IsInherited();
    [CompilerGeneratedAttribute]
public void set_IsInherited(bool value);
    [CompilerGeneratedAttribute]
public ReferenceLinks get_Links();
    [CompilerGeneratedAttribute]
public void set_Links(ReferenceLinks value);
}
public static class Microsoft.VisualStudio.Services.PermissionLevel.PermissionLevelAssignmentResourceIds : object {
    public static string AreaName;
    public static string AreaId;
    public static Guid ResourceAreaId;
    public static Guid PermissionLevelAssignmentsResourceLocationId;
    public static string PermissionLevelAssignmentsResourceName;
    private static PermissionLevelAssignmentResourceIds();
}
public class Microsoft.VisualStudio.Services.PermissionLevel.PermissionLevelBadRequestException : PermissionLevelException {
    public PermissionLevelBadRequestException(string message);
    public PermissionLevelBadRequestException(string message, Exception innerException);
    private PermissionLevelBadRequestException(SerializationInfo info, StreamingContext context);
}
public static class Microsoft.VisualStudio.Services.PermissionLevel.PermissionLevelDefinitionResourceIds : object {
    public static string AreaName;
    public static string AreaId;
    public static Guid ResourceAreaId;
    public static Guid PermissionLevelDefinitionsResourceLocationId;
    public static string PermissionLevelDefinitionsResourceName;
    private static PermissionLevelDefinitionResourceIds();
}
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.PermissionLevel.PermissionLevelDefinitionScope : Enum {
    public int value__;
    [EnumMemberAttribute]
public static PermissionLevelDefinitionScope Deployment;
    [EnumMemberAttribute]
public static PermissionLevelDefinitionScope Enterprise;
    [EnumMemberAttribute]
public static PermissionLevelDefinitionScope Organization;
    [EnumMemberAttribute]
public static PermissionLevelDefinitionScope Project;
}
[DataContractAttribute]
[FlagsAttribute]
public enum Microsoft.VisualStudio.Services.PermissionLevel.PermissionLevelDefinitionType : Enum {
    public int value__;
    [EnumMemberAttribute]
public static PermissionLevelDefinitionType SystemDefined;
    [EnumMemberAttribute]
public static PermissionLevelDefinitionType RestrictedVisibility;
    [EnumMemberAttribute]
public static PermissionLevelDefinitionType All;
}
public class Microsoft.VisualStudio.Services.PermissionLevel.PermissionLevelException : VssServiceException {
    public PermissionLevelException(string message);
    public PermissionLevelException(string message, Exception innerException);
    protected PermissionLevelException(SerializationInfo info, StreamingContext context);
}
[ExceptionMappingAttribute("0.0", "3.0", "AexServiceUnavailableException", "Microsoft.VisualStudio.Services.Profile.AexServiceUnavailableException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Profile.AexServiceUnavailableException : VssServiceException {
    public AexServiceUnavailableException(string message);
    public AexServiceUnavailableException(string message, Exception innerException);
    protected AexServiceUnavailableException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.Profile.AttributeDescriptor : object {
    private string m_attributeName;
    private string m_containerName;
    [DataMemberAttribute]
public string AttributeName { get; public set; }
    [DataMemberAttribute]
public string ContainerName { get; public set; }
    public AttributeDescriptor(string containerName, string attributeName);
    public string get_AttributeName();
    public void set_AttributeName(string value);
    public string get_ContainerName();
    public void set_ContainerName(string value);
    public sealed virtual int CompareTo(AttributeDescriptor obj);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public sealed virtual object Clone();
    public virtual string ToString();
}
public class Microsoft.VisualStudio.Services.Profile.AttributeDescriptorComparer : object {
    private static AttributeDescriptorComparer s_instance;
    public static AttributeDescriptorComparer Instance { get; }
    private static AttributeDescriptorComparer();
    public sealed virtual int Compare(AttributeDescriptor x, AttributeDescriptor y);
    public sealed virtual bool Equals(AttributeDescriptor x, AttributeDescriptor y);
    public sealed virtual int GetHashCode(AttributeDescriptor obj);
    public static AttributeDescriptorComparer get_Instance();
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Profile.AttributesContainer : object {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, ProfileAttribute> <Attributes>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Revision>k__BackingField;
    private string m_containerName;
    [DataMemberAttribute]
public string ContainerName { get; public set; }
    [DataMemberAttribute]
public IDictionary`2<string, ProfileAttribute> Attributes { get; public set; }
    [DataMemberAttribute]
public int Revision { get; public set; }
    public AttributesContainer(string containerName);
    public string get_ContainerName();
    public void set_ContainerName(string value);
    public sealed virtual object Clone();
    [CompilerGeneratedAttribute]
public IDictionary`2<string, ProfileAttribute> get_Attributes();
    [CompilerGeneratedAttribute]
public void set_Attributes(IDictionary`2<string, ProfileAttribute> value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_Revision();
    [CompilerGeneratedAttribute]
public void set_Revision(int value);
}
public class Microsoft.VisualStudio.Services.Profile.AttributesQueryContext : object {
    [CompilerGeneratedAttribute]
private AttributesScope <Scope>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContainerName>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <ModifiedSince>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ModifiedAfterRevision>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<CoreProfileAttributes> <CoreAttributes>k__BackingField;
    [DataMemberAttribute]
public AttributesScope Scope { get; private set; }
    [DataMemberAttribute]
public string ContainerName { get; private set; }
    [DataMemberAttribute]
public Nullable`1<DateTimeOffset> ModifiedSince { get; private set; }
    [DataMemberAttribute]
public Nullable`1<int> ModifiedAfterRevision { get; private set; }
    [DataMemberAttribute]
public Nullable`1<CoreProfileAttributes> CoreAttributes { get; private set; }
    public AttributesQueryContext(AttributesScope scope, Nullable`1<DateTimeOffset> modifiedSince, Nullable`1<int> modifiedAfterRevision, Nullable`1<CoreProfileAttributes> coreAttributes, string containerName);
    public AttributesQueryContext(AttributesScope scope, string containerName);
    public AttributesQueryContext(AttributesScope scope, DateTimeOffset modifiedSince, string containerName);
    public AttributesQueryContext(AttributesScope scope, int modifiedAfterRevision, string containerName);
    [CompilerGeneratedAttribute]
public AttributesScope get_Scope();
    [CompilerGeneratedAttribute]
private void set_Scope(AttributesScope value);
    [CompilerGeneratedAttribute]
public string get_ContainerName();
    [CompilerGeneratedAttribute]
private void set_ContainerName(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_ModifiedSince();
    [CompilerGeneratedAttribute]
private void set_ModifiedSince(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ModifiedAfterRevision();
    [CompilerGeneratedAttribute]
private void set_ModifiedAfterRevision(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<CoreProfileAttributes> get_CoreAttributes();
    [CompilerGeneratedAttribute]
private void set_CoreAttributes(Nullable`1<CoreProfileAttributes> value);
    public virtual bool Equals(object obj);
    public bool Equals(AttributesQueryContext other);
    public virtual int GetHashCode();
    public sealed virtual object Clone();
}
[DataContractAttribute]
[FlagsAttribute]
public enum Microsoft.VisualStudio.Services.Profile.AttributesScope : Enum {
    public int value__;
    [EnumMemberAttribute]
public static AttributesScope Core;
    [EnumMemberAttribute]
public static AttributesScope Application;
}
[ExceptionMappingAttribute("0.0", "3.0", "AttributeValueTooBigException", "Microsoft.VisualStudio.Services.Profile.AttributeValueTooBigException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Profile.AttributeValueTooBigException : ProfileException {
    public AttributeValueTooBigException(string message);
    public AttributeValueTooBigException(string message, Exception innerException);
    protected AttributeValueTooBigException(SerializationInfo info, StreamingContext context);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Profile.Avatar : object {
    [CompilerGeneratedAttribute]
private Byte[] <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <TimeStamp>k__BackingField;
    [CompilerGeneratedAttribute]
private AvatarSize <Size>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsAutoGenerated>k__BackingField;
    [DataMemberAttribute]
public Byte[] Value { get; public set; }
    [DataMemberAttribute]
public DateTimeOffset TimeStamp { get; public set; }
    [DataMemberAttribute]
public AvatarSize Size { get; internal set; }
    [DataMemberAttribute]
public Nullable`1<bool> IsAutoGenerated { get; internal set; }
    [CompilerGeneratedAttribute]
public Byte[] get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(Byte[] value);
    [CompilerGeneratedAttribute]
public sealed virtual DateTimeOffset get_TimeStamp();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TimeStamp(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public AvatarSize get_Size();
    [CompilerGeneratedAttribute]
internal void set_Size(AvatarSize value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IsAutoGenerated();
    [CompilerGeneratedAttribute]
internal void set_IsAutoGenerated(Nullable`1<bool> value);
    public sealed virtual object Clone();
}
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.Profile.AvatarSize : Enum {
    public int value__;
    public static AvatarSize Small;
    public static AvatarSize Medium;
    public static AvatarSize Large;
}
[ExceptionMappingAttribute("0.0", "3.0", "AvatarTooBigException", "Microsoft.VisualStudio.Services.Profile.AvatarTooBigException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Profile.AvatarTooBigException : ProfileException {
    public AvatarTooBigException(string message);
    public AvatarTooBigException(string message, Exception innerException);
    protected AvatarTooBigException(SerializationInfo info, StreamingContext context);
}
[ExceptionMappingAttribute("0.0", "3.0", "AvatarTooBigException", "Microsoft.VisualStudio.Services.Profile.AvatarTooBigException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Profile.AvatarTooSmallException : ProfileException {
    public AvatarTooSmallException(string message);
    public AvatarTooSmallException(string message, Exception innerException);
    protected AvatarTooSmallException(SerializationInfo info, StreamingContext context);
}
[ExceptionMappingAttribute("0.0", "3.0", "BadAttributeValueException", "Microsoft.VisualStudio.Services.Profile.BadAttributeValueException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Profile.BadAttributeValueException : BadProfileRequestException {
    public BadAttributeValueException(string message);
    public BadAttributeValueException(string message, Exception innerException);
    protected BadAttributeValueException(SerializationInfo info, StreamingContext context);
}
[ExceptionMappingAttribute("0.0", "3.0", "BadAvatarValueException", "Microsoft.VisualStudio.Services.Profile.BadAvatarValueException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Profile.BadAvatarValueException : BadProfileRequestException {
    public BadAvatarValueException(string message);
    public BadAvatarValueException(string message, Exception innerException);
    protected BadAvatarValueException(SerializationInfo info, StreamingContext context);
}
[ExceptionMappingAttribute("0.0", "3.0", "BadCountryNameException", "Microsoft.VisualStudio.Services.Profile.BadCountryNameException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Profile.BadCountryNameException : BadProfileRequestException {
    public BadCountryNameException(string message);
    public BadCountryNameException(string message, Exception innerException);
    protected BadCountryNameException(SerializationInfo info, StreamingContext context);
}
[ExceptionMappingAttribute("0.0", "3.0", "BadDisplayNameException", "Microsoft.VisualStudio.Services.Profile.BadDisplayNameException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Profile.BadDisplayNameException : BadProfileRequestException {
    public BadDisplayNameException(string message);
    public BadDisplayNameException(string message, Exception innerException);
    protected BadDisplayNameException(SerializationInfo info, StreamingContext context);
}
[ExceptionMappingAttribute("0.0", "3.0", "BadEmailAddressException", "Microsoft.VisualStudio.Services.Profile.BadEmailAddressException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Profile.BadEmailAddressException : BadProfileRequestException {
    public BadEmailAddressException(string message);
    public BadEmailAddressException(string message, Exception innerException);
    protected BadEmailAddressException(SerializationInfo info, StreamingContext context);
}
[ExceptionMappingAttribute("0.0", "3.0", "BadProfileRequestException", "Microsoft.VisualStudio.Services.Profile.BadProfileRequestException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Profile.BadProfileRequestException : ProfileException {
    public BadProfileRequestException(string message);
    public BadProfileRequestException(string message, Exception innerException);
    protected BadProfileRequestException(SerializationInfo info, StreamingContext context);
}
[ExceptionMappingAttribute("0.0", "3.0", "BadPublicAliasException", "Microsoft.VisualStudio.Services.Profile.BadPublicAliasException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Profile.BadPublicAliasException : BadProfileRequestException {
    public BadPublicAliasException(string message);
    public BadPublicAliasException(string message, Exception innerException);
    protected BadPublicAliasException(SerializationInfo info, StreamingContext context);
}
[ExceptionMappingAttribute("0.0", "3.0", "BadServiceSettingNameException", "Microsoft.VisualStudio.Services.Profile.BadServiceSettingNameException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Profile.BadServiceSettingNameException : BadProfileRequestException {
    public BadServiceSettingNameException(string message);
    public BadServiceSettingNameException(string message, Exception innerException);
    protected BadServiceSettingNameException(SerializationInfo info, StreamingContext context);
}
[ClientCircuitBreakerSettingsAttribute("100", "80")]
public class Microsoft.VisualStudio.Services.Profile.Client.ProfileHttpClient : ProfileHttpClientBase {
    public static int MaxAttributeValueLength;
    public ProfileHttpClient(Uri baseUrl, VssCredentials credentials);
    public ProfileHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public ProfileHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public ProfileHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public ProfileHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    public virtual Task`1<int> SetAttributeAsync(ProfileAttribute newAttribute, object userState, CancellationToken cancellationToken);
    public virtual Task`1<ProfileAttribute> GetAttributeAsync(AttributeDescriptor descriptor, object userState, CancellationToken cancellationToken);
    public virtual Task`1<int> DeleteAttributeAsync(ProfileAttribute attributeToDelete, object userState, CancellationToken cancellationToken);
    public virtual Task`1<Profile> GetProfileAsync(ProfileQueryContext profileQueryContext, object userState, CancellationToken cancellationToken);
    public virtual Task`1<int> UpdateProfileAsync(Profile profile, object userState, CancellationToken cancellationToken);
    public virtual Task`1<Avatar> GetAvatarAsync(AvatarSize size, object userState, CancellationToken cancellationToken);
    public virtual Task`1<Avatar> GetAvatarAsync(Guid id, AvatarSize size, object userState, CancellationToken cancellationToken);
    public virtual Task`1<Avatar> GetAvatarAsync(Avatar currentCopy, object userState, CancellationToken cancellationToken);
    public virtual Task`1<int> SetAvatarAsync(Avatar newAvatar, object userState, CancellationToken cancellationToken);
    public virtual Task`1<string> GetDisplayNameAsync(object userState);
    public virtual Task`1<string> GetDisplayNameAsync(object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Profile.Client.ProfileHttpClient/<GetDisplayNameImplAsync>d__17")]
private Task`1<string> GetDisplayNameImplAsync(object userState, CancellationToken cancellationToken);
    public virtual Task`1<Tuple`2<IList`1<ProfileAttribute>, IList`1<CoreProfileAttribute>>> GetAttributesAsync(AttributesQueryContext attributesQueryContext, object userState, CancellationToken cancellationToken);
    public virtual Task`1<int> SetAttributesAsync(IList`1<ProfileAttribute> applicationAttributes, IList`1<CoreProfileAttribute> coreAttributes, object userState, CancellationToken cancellationToken);
    public virtual Task`1<string> GetServiceSettingAsync(string settingName, object userState, CancellationToken cancellationToken);
    public virtual Task`1<string> GetProfileLocationsAsync(ProfilePageType profilePageType, object userState, CancellationToken cancellationToken);
    public virtual Task`1<Profile> CreateProfileAsync(CreateProfileContext createProfileContext, Nullable`1<bool> autoCreate, object userState, CancellationToken cancellationToken);
}
[ResourceAreaAttribute("8CCFEF3D-2B87-4E99-8CCB-66E343D2DAA8")]
public abstract class Microsoft.VisualStudio.Services.Profile.Client.ProfileHttpClientBase : VssHttpClientBase {
    [CompilerGeneratedAttribute]
private int <NotificationDelay>k__BackingField;
    private static Dictionary`2<string, Type> s_translatedExceptions;
    protected static Version previewApiVersion;
    internal int NotificationDelay { get; internal set; }
    protected IDictionary`2<string, Type> TranslatedExceptions { get; }
    protected ProfileHttpClientBase(Uri baseUrl, VssCredentials credentials);
    public ProfileHttpClientBase(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public ProfileHttpClientBase(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public ProfileHttpClientBase(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public ProfileHttpClientBase(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    private static ProfileHttpClientBase();
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Profile.Client.ProfileHttpClientBase/<GetAttributeAsync>d__5")]
protected virtual Task`1<ProfileAttribute> GetAttributeAsync(AttributeDescriptor descriptor, string id, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Profile.Client.ProfileHttpClientBase/<SetAttributeAsync>d__6")]
protected virtual Task`1<int> SetAttributeAsync(ProfileAttribute attribute, string id, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Profile.Client.ProfileHttpClientBase/<DeleteAttributeAsync>d__7")]
protected virtual Task`1<int> DeleteAttributeAsync(ProfileAttribute attribute, string id, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Profile.Client.ProfileHttpClientBase/<GetProfileAsync>d__8")]
protected virtual Task`1<Profile> GetProfileAsync(ProfileQueryContext profileQueryContext, string id, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Profile.Client.ProfileHttpClientBase/<UpdateProfileAsync>d__9")]
protected Task`1<int> UpdateProfileAsync(Profile profile, string id, object userState, CancellationToken cancellationToken);
    protected virtual Task`1<Avatar> GetAvatarAsync(AvatarSize size, string id, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Profile.Client.ProfileHttpClientBase/<GetAvatarAsync>d__11")]
protected virtual Task`1<Avatar> GetAvatarAsync(Avatar avatar, string id, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Profile.Client.ProfileHttpClientBase/<SetAvatarAsync>d__12")]
protected virtual Task`1<int> SetAvatarAsync(Avatar avatar, string id, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Profile.Client.ProfileHttpClientBase/<ResetAvatarAsync>d__13")]
protected virtual Task`1<int> ResetAvatarAsync(string id, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Profile.Client.ProfileHttpClientBase/<GetAttributesInternalAsync>d__14")]
internal virtual Task`1<IList`1<ProfileAttributeBase`1<object>>> GetAttributesInternalAsync(AttributesQueryContext attributesQueryContext, string id, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Profile.Client.ProfileHttpClientBase/<GetAttributesAsync>d__15")]
protected virtual Task`1<Tuple`2<IList`1<ProfileAttribute>, IList`1<CoreProfileAttribute>>> GetAttributesAsync(AttributesQueryContext attributesQueryContext, string id, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Profile.Client.ProfileHttpClientBase/<SetAttributesAsync>d__16")]
protected Task`1<int> SetAttributesAsync(IList`1<ProfileAttribute> applicationAttributes, IList`1<CoreProfileAttribute> coreAttributes, string id, object userState, CancellationToken cancellationToken);
    protected virtual Task`1<string> GetProfileLocationsAsync(ProfilePageType profilePageType, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Profile.Client.ProfileHttpClientBase/<GetServiceSettingAsync>d__18")]
protected virtual Task`1<string> GetServiceSettingAsync(string settingName, object userState, CancellationToken cancellationToken);
    protected virtual Task`1<Profile> CreateProfileAsync(CreateProfileContext createProfileContext, Nullable`1<bool> autoCreate, object userState, CancellationToken cancellationToken);
    protected virtual Task`1<HttpResponseMessage> VerifyAndUpdatePreferredEmailAsync(VerifyPreferredEmailContext verifyPreferredEmailContext, object userState, CancellationToken cancellationToken);
    protected virtual Task`1<ProfileRegions> GetRegionsAsync(object userState, CancellationToken cancellationToken);
    private static void ValidateId(string id);
    private static void ValidateAttributeDescriptor(AttributeDescriptor descriptor);
    private static void ValidateAttribute(ProfileAttributeBase`1<T> attribute);
    private static void ValidateProfile(Profile profile);
    private static void ValidateCreateProfileContext(CreateProfileContext createProfileContext);
    private static void ValidateVerifyPreferredEmailContext(VerifyPreferredEmailContext verifyPreferredEmailContext);
    private static void SetIfModifiedSinceHeaders(ITimeStamped timeStampedResource, HttpRequestMessage message);
    private static void SetIfNoneMatchHeaders(string etagContent, HttpRequestMessage message);
    private static void SetIfMatchHeaders(IVersioned versionedResource, HttpRequestMessage message);
    private static void SetIfUnmodifiedSinceHeaders(ITimeStamped timeStampedResource, HttpRequestMessage message);
    private static int ExtractRevisionFromEtagInResponseHeader(HttpResponseMessage response);
    private static string ConvertCoreAttributesFlagsToCommaDelimitedString(CoreProfileAttributes coreAttributes);
    [CompilerGeneratedAttribute]
internal int get_NotificationDelay();
    [CompilerGeneratedAttribute]
internal void set_NotificationDelay(int value);
    protected virtual IDictionary`2<string, Type> get_TranslatedExceptions();
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Profile.CoreProfileAttribute : ProfileAttributeBase`1<object> {
}
[FlagsAttribute]
public enum Microsoft.VisualStudio.Services.Profile.CoreProfileAttributes : Enum {
    public int value__;
    public static CoreProfileAttributes Minimal;
    public static CoreProfileAttributes Email;
    public static CoreProfileAttributes Avatar;
    public static CoreProfileAttributes DisplayName;
    public static CoreProfileAttributes ContactWithOffers;
    public static CoreProfileAttributes All;
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Profile.Country : object {
    [CompilerGeneratedAttribute]
private string <EnglishName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Code>k__BackingField;
    [DataMemberAttribute]
public string EnglishName { get; public set; }
    [DataMemberAttribute]
public string Code { get; public set; }
    [CompilerGeneratedAttribute]
public string get_EnglishName();
    [CompilerGeneratedAttribute]
public void set_EnglishName(string value);
    [CompilerGeneratedAttribute]
public string get_Code();
    [CompilerGeneratedAttribute]
public void set_Code(string value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Profile.CreateProfileContext : object {
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CountryName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EmailAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ContactWithOffers>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <CIData>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Language>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasAccount>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PhoneNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private ProfileState <ProfileState>k__BackingField;
    [DataMemberAttribute]
public string DisplayName { get; public set; }
    [DataMemberAttribute]
public string CountryName { get; public set; }
    [DataMemberAttribute]
public string EmailAddress { get; public set; }
    [DataMemberAttribute]
public bool ContactWithOffers { get; public set; }
    [DataMemberAttribute]
public IDictionary`2<string, object> CIData { get; public set; }
    [DataMemberAttribute]
public string Language { get; public set; }
    [DataMemberAttribute]
public bool HasAccount { get; public set; }
    [DataMemberAttribute]
public string PhoneNumber { get; public set; }
    [DataMemberAttribute]
public ProfileState ProfileState { get; public set; }
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public string get_CountryName();
    [CompilerGeneratedAttribute]
public void set_CountryName(string value);
    [CompilerGeneratedAttribute]
public string get_EmailAddress();
    [CompilerGeneratedAttribute]
public void set_EmailAddress(string value);
    [CompilerGeneratedAttribute]
public bool get_ContactWithOffers();
    [CompilerGeneratedAttribute]
public void set_ContactWithOffers(bool value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_CIData();
    [CompilerGeneratedAttribute]
public void set_CIData(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public string get_Language();
    [CompilerGeneratedAttribute]
public void set_Language(string value);
    [CompilerGeneratedAttribute]
public bool get_HasAccount();
    [CompilerGeneratedAttribute]
public void set_HasAccount(bool value);
    [CompilerGeneratedAttribute]
public string get_PhoneNumber();
    [CompilerGeneratedAttribute]
public void set_PhoneNumber(string value);
    [CompilerGeneratedAttribute]
public ProfileState get_ProfileState();
    [CompilerGeneratedAttribute]
public void set_ProfileState(ProfileState value);
    public bool TryGetCIData(string key, T& value);
}
[DataContractAttribute]
[ClientIncludeModelAttribute]
public class Microsoft.VisualStudio.Services.Profile.GeoRegion : object {
    [CompilerGeneratedAttribute]
private string <RegionCode>k__BackingField;
    [DataMemberAttribute]
public string RegionCode { get; public set; }
    [CompilerGeneratedAttribute]
public string get_RegionCode();
    [CompilerGeneratedAttribute]
public void set_RegionCode(string value);
}
public interface Microsoft.VisualStudio.Services.Profile.ITimeStamped {
    [DataMemberAttribute]
public DateTimeOffset TimeStamp { get; public set; }
    public abstract virtual DateTimeOffset get_TimeStamp();
    public abstract virtual void set_TimeStamp(DateTimeOffset value);
}
public interface Microsoft.VisualStudio.Services.Profile.IVersioned {
    [DataMemberAttribute]
public int Revision { get; }
    public abstract virtual int get_Revision();
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Profile.Model.RemoteProfile : object {
    [DataMemberAttribute]
public string DisplayName;
    [DataMemberAttribute]
public string EmailAddress;
    [DataMemberAttribute]
public Byte[] Avatar;
    [DataMemberAttribute]
public string CountryCode;
}
[ExceptionMappingAttribute("0.0", "3.0", "NewerVersionOfProfileExists", "Microsoft.VisualStudio.Services.Profile.NewerVersionOfProfileExists, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Profile.NewerVersionOfProfileExists : ProfileException {
    public NewerVersionOfProfileExists(string message);
    public NewerVersionOfProfileExists(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "NewerVersionOfResourceExistsException", "Microsoft.VisualStudio.Services.Profile.NewerVersionOfResourceExistsException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Profile.NewerVersionOfResourceExistsException : ProfileException {
    public NewerVersionOfResourceExistsException(string message);
    public NewerVersionOfResourceExistsException(string message, Exception innerException);
    protected NewerVersionOfResourceExistsException(SerializationInfo info, StreamingContext context);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Profile.Profile : object {
    [CompilerGeneratedAttribute]
private AttributesContainer <ApplicationContainer>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, CoreProfileAttribute> <CoreAttributes>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CoreRevision>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <TimeStamp>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Revision>k__BackingField;
    [CompilerGeneratedAttribute]
private ProfileState <ProfileState>k__BackingField;
    internal static string CoreContainerName;
    public string DisplayName { get; public set; }
    public string PublicAlias { get; public set; }
    public string CountryName { get; public set; }
    public string EmailAddress { get; public set; }
    public string UnconfirmedEmailAddress { get; public set; }
    public DateTimeOffset CreatedDateTime { get; public set; }
    public Avatar Avatar { get; public set; }
    [DataMemberAttribute]
public AttributesContainer ApplicationContainer { get; public set; }
    [DataMemberAttribute]
internal IDictionary`2<string, CoreProfileAttribute> CoreAttributes { get; internal set; }
    [DataMemberAttribute]
public int CoreRevision { get; public set; }
    [DataMemberAttribute]
public DateTimeOffset TimeStamp { get; public set; }
    [DataMemberAttribute]
public Guid Id { get; internal set; }
    [DataMemberAttribute]
public int Revision { get; public set; }
    [DataMemberAttribute]
public ProfileState ProfileState { get; public set; }
    public int TermsOfServiceVersion { get; public set; }
    public DateTimeOffset TermsOfServiceAcceptDate { get; public set; }
    public Nullable`1<bool> ContactWithOffers { get; public set; }
    public string get_DisplayName();
    public void set_DisplayName(string value);
    public string get_PublicAlias();
    public void set_PublicAlias(string value);
    public string get_CountryName();
    public void set_CountryName(string value);
    public string get_EmailAddress();
    public void set_EmailAddress(string value);
    public string get_UnconfirmedEmailAddress();
    public void set_UnconfirmedEmailAddress(string value);
    public DateTimeOffset get_CreatedDateTime();
    public void set_CreatedDateTime(DateTimeOffset value);
    public Avatar get_Avatar();
    public void set_Avatar(Avatar value);
    [CompilerGeneratedAttribute]
public AttributesContainer get_ApplicationContainer();
    [CompilerGeneratedAttribute]
public void set_ApplicationContainer(AttributesContainer value);
    [CompilerGeneratedAttribute]
internal IDictionary`2<string, CoreProfileAttribute> get_CoreAttributes();
    [CompilerGeneratedAttribute]
internal void set_CoreAttributes(IDictionary`2<string, CoreProfileAttribute> value);
    [CompilerGeneratedAttribute]
public int get_CoreRevision();
    [CompilerGeneratedAttribute]
public void set_CoreRevision(int value);
    [CompilerGeneratedAttribute]
public sealed virtual DateTimeOffset get_TimeStamp();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TimeStamp(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public Guid get_Id();
    [CompilerGeneratedAttribute]
internal void set_Id(Guid value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_Revision();
    [CompilerGeneratedAttribute]
public void set_Revision(int value);
    [CompilerGeneratedAttribute]
public ProfileState get_ProfileState();
    [CompilerGeneratedAttribute]
public void set_ProfileState(ProfileState value);
    public int get_TermsOfServiceVersion();
    public void set_TermsOfServiceVersion(int value);
    public DateTimeOffset get_TermsOfServiceAcceptDate();
    public void set_TermsOfServiceAcceptDate(DateTimeOffset value);
    public Nullable`1<bool> get_ContactWithOffers();
    public void set_ContactWithOffers(Nullable`1<bool> value);
    private T GetAttributeFromCoreContainer(string attributeName, T defaultValue);
    private void SetAttributeInCoreContainer(string attributeName, object value);
    public CoreProfileAttribute GetCoreAttribute(string attributeName);
    public sealed virtual object Clone();
}
[ExceptionMappingAttribute("0.0", "3.0", "ProfileAlreadyExistsException", "Microsoft.VisualStudio.Services.Profile.ProfileAlreadyExistsException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Profile.ProfileAlreadyExistsException : ProfileException {
    public ProfileAlreadyExistsException(string message);
    public ProfileAlreadyExistsException(string message, Exception innerException);
    protected ProfileAlreadyExistsException(SerializationInfo info, StreamingContext context);
}
public static class Microsoft.VisualStudio.Services.Profile.ProfileArgumentValidation : object {
    private static string Semicolon;
    public static void ValidateAttributeName(string attributeName);
    public static void ValidateContainerName(string containerName);
    public static void ValidateApplicationContainerName(string containerName);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Profile.ProfileAttribute : ProfileAttributeBase`1<string> {
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Profile.ProfileAttributeBase`1 : object {
    [CompilerGeneratedAttribute]
private AttributeDescriptor <Descriptor>k__BackingField;
    [CompilerGeneratedAttribute]
private T <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <TimeStamp>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Revision>k__BackingField;
    [DataMemberAttribute]
public AttributeDescriptor Descriptor { get; public set; }
    [DataMemberAttribute]
public T Value { get; public set; }
    [DataMemberAttribute]
public DateTimeOffset TimeStamp { get; public set; }
    [DataMemberAttribute]
public int Revision { get; public set; }
    [CompilerGeneratedAttribute]
public AttributeDescriptor get_Descriptor();
    [CompilerGeneratedAttribute]
public void set_Descriptor(AttributeDescriptor value);
    [CompilerGeneratedAttribute]
public T get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(T value);
    [CompilerGeneratedAttribute]
public sealed virtual DateTimeOffset get_TimeStamp();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TimeStamp(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_Revision();
    [CompilerGeneratedAttribute]
public void set_Revision(int value);
    public sealed virtual object Clone();
}
[ExceptionMappingAttribute("0.0", "3.0", "ProfileAttributeNotFoundException", "Microsoft.VisualStudio.Services.Profile.ProfileAttributeNotFoundException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Profile.ProfileAttributeNotFoundException : ProfileException {
    public ProfileAttributeNotFoundException(string message);
    public ProfileAttributeNotFoundException(string message, Exception innerException);
    protected ProfileAttributeNotFoundException(SerializationInfo info, StreamingContext context);
}
[ExceptionMappingAttribute("0.0", "3.0", "ProfileDoesNotExistException", "Microsoft.VisualStudio.Services.Profile.ProfileDoesNotExistException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Profile.ProfileDoesNotExistException : ProfileException {
    public ProfileDoesNotExistException(string message);
    public ProfileDoesNotExistException(string message, Exception innerException);
    protected ProfileDoesNotExistException(SerializationInfo info, StreamingContext context);
}
[ExceptionMappingAttribute("0.0", "3.0", "ProfileException", "Microsoft.VisualStudio.Services.Profile.ProfileException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Profile.ProfileException : VssServiceException {
    public ProfileException(string message);
    public ProfileException(string message, Exception innerException);
    protected ProfileException(SerializationInfo info, StreamingContext context);
}
[ExtensionAttribute]
public static class Microsoft.VisualStudio.Services.Profile.ProfileExtensions : object {
    [ExtensionAttribute]
public static void ApplyAttributesChanges(Profile profile, IList`1<ProfileAttribute> changedApplicationAttributes, IList`1<CoreProfileAttribute> changedCoreAttributes);
    private static void UpdateCoreAttributes(Profile profile, IEnumerable`1<CoreProfileAttribute> changedAttributes);
    internal static void UpdateApplicationAttributes(Profile profile, IEnumerable`1<ProfileAttribute> changedAttributes);
    private static void ValidateAttributesApplicability(Profile profile, IEnumerable`1<ProfileAttribute> changedAttributes, IEnumerable`1<CoreProfileAttribute> changedCoreAttributes);
    private static void ValidateProfile(Profile profile);
}
[ExceptionMappingAttribute("0.0", "3.0", "ProfileNotAuthorizedException", "Microsoft.VisualStudio.Services.Profile.ProfileNotAuthorizedException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Profile.ProfileNotAuthorizedException : ProfileException {
    [CompilerGeneratedAttribute]
private string <HelpLink>k__BackingField;
    public string HelpLink { get; public set; }
    public ProfileNotAuthorizedException(string message, string url);
    public ProfileNotAuthorizedException(string message, string url, Exception innerException);
    protected ProfileNotAuthorizedException(SerializationInfo info, StreamingContext context);
    [CompilerGeneratedAttribute]
public sealed virtual string get_HelpLink();
    [CompilerGeneratedAttribute]
public sealed virtual void set_HelpLink(string value);
}
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.Profile.ProfilePageType : Enum {
    public int value__;
    public static ProfilePageType Update;
    public static ProfilePageType Create;
    public static ProfilePageType CreateIDE;
    public static ProfilePageType Review;
    public static ProfilePageType AvatarImageFormat;
}
public class Microsoft.VisualStudio.Services.Profile.ProfileQueryContext : object {
    [CompilerGeneratedAttribute]
private AttributesScope <ContainerScope>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContainerName>k__BackingField;
    [CompilerGeneratedAttribute]
private CoreProfileAttributes <CoreAttributes>k__BackingField;
    [DataMemberAttribute]
public AttributesScope ContainerScope { get; private set; }
    [DataMemberAttribute]
public string ContainerName { get; private set; }
    [DataMemberAttribute]
public CoreProfileAttributes CoreAttributes { get; private set; }
    public ProfileQueryContext(AttributesScope scope, string containerName);
    public ProfileQueryContext(AttributesScope scope, CoreProfileAttributes coreAttributes, string containerName);
    [CompilerGeneratedAttribute]
public AttributesScope get_ContainerScope();
    [CompilerGeneratedAttribute]
private void set_ContainerScope(AttributesScope value);
    [CompilerGeneratedAttribute]
public string get_ContainerName();
    [CompilerGeneratedAttribute]
private void set_ContainerName(string value);
    [CompilerGeneratedAttribute]
public CoreProfileAttributes get_CoreAttributes();
    [CompilerGeneratedAttribute]
private void set_CoreAttributes(CoreProfileAttributes value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Profile.ProfileRegion : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Code>k__BackingField;
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public string Code { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Code();
    [CompilerGeneratedAttribute]
public void set_Code(string value);
}
[DataContractAttribute]
[ClientIncludeModelAttribute]
public class Microsoft.VisualStudio.Services.Profile.ProfileRegions : object {
    [DataMemberAttribute]
public IList`1<ProfileRegion> Regions;
    [CompilerGeneratedAttribute]
private IList`1<string> <NoticeContactConsentRequirementRegions>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <OptOutContactConsentRequirementRegions>k__BackingField;
    [DataMemberAttribute]
public IList`1<string> NoticeContactConsentRequirementRegions { get; public set; }
    [DataMemberAttribute]
public IList`1<string> OptOutContactConsentRequirementRegions { get; public set; }
    [CompilerGeneratedAttribute]
public IList`1<string> get_NoticeContactConsentRequirementRegions();
    [CompilerGeneratedAttribute]
public void set_NoticeContactConsentRequirementRegions(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_OptOutContactConsentRequirementRegions();
    [CompilerGeneratedAttribute]
public void set_OptOutContactConsentRequirementRegions(IList`1<string> value);
}
public static class Microsoft.VisualStudio.Services.Profile.ProfileResourceIds : object {
    public static string AreaId;
    public static string AreaName;
    public static Guid AreaIdGuid;
    public static string ProfileHttpClientV2AreaId;
    public static string ProfileResource;
    public static Guid ProfileLocationid;
    public static string UserDefaultsResource;
    public static Guid UserDefaultsLocationId;
    public static string AttributeResource;
    public static Guid AttributeLocationid;
    public static Guid AttributeLocationId2;
    public static string AvatarResource;
    public static Guid AvatarLocationid;
    public static Guid Avatar2LocationId;
    public static string DisplayNameResource;
    public static Guid DisplayNameLocationid;
    public static string PublicAliasResource;
    public static Guid PublicAliasLocationid;
    public static string EmailAddressResource;
    public static Guid EmailAddressLocationid;
    public static string CountryResource;
    public static Guid CountryLocationid;
    public static string TermsOfServiceResource;
    public static Guid TermsOfServiceLocationid;
    public static string PreferredEmailConfirmationResource;
    public static Guid PreferredEmailConfirmationLocationid;
    public static string CountriesResource;
    public static Guid CountriesLocationid;
    public static string SupportedLcidsResource;
    public static Guid SupportedLcidsLocationId;
    public static string RegionsResource;
    public static Guid RegionsLocationId;
    public static string LocationsResource;
    public static Guid LocationsLocationid;
    public static string LatestTosResource;
    public static Guid LatestTosLocationid;
    public static string SettingsResource;
    public static Guid SettingsLocationid;
    public static string GeoRegionResource;
    public static Guid GeoRegionLocationid;
    public static string MigratingProfilesResource;
    public static Guid MigratingProfilesLocationid;
    private static ProfileResourceIds();
}
[ExceptionMappingAttribute("0.0", "3.0", "ProfileResourceNotFoundException", "Microsoft.VisualStudio.Services.Profile.ProfileResourceNotFoundException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Profile.ProfileResourceNotFoundException : ProfileException {
    public ProfileResourceNotFoundException(string message);
    public ProfileResourceNotFoundException(string message, Exception innerException);
    protected ProfileResourceNotFoundException(SerializationInfo info, StreamingContext context);
}
public static class Microsoft.VisualStudio.Services.Profile.ProfileResourceVersions : object {
    public static int GenericResourcePreviewVersion;
    public static int ProfileResourcePreviewVersion;
    public static int ProfileResourceRcVersion;
    public static int ProfileResourceRtmVersion;
    public static int AttributeResourcePreviewVersion;
    public static int AttributeResourceRcVersion;
}
[ExceptionMappingAttribute("0.0", "3.0", "ProfileServiceSecurityException", "Microsoft.VisualStudio.Services.Profile.ProfileServiceSecurityException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Profile.ProfileServiceSecurityException : ProfileException {
    public ProfileServiceSecurityException(string message);
    public ProfileServiceSecurityException(string message, Exception innerException);
    protected ProfileServiceSecurityException(SerializationInfo info, StreamingContext context);
}
[ExceptionMappingAttribute("0.0", "3.0", "ProfileServiceUnavailableException", "Microsoft.VisualStudio.Services.Profile.ProfileServiceUnavailableException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Profile.ProfileServiceUnavailableException : VssServiceException {
    public ProfileServiceUnavailableException(string message);
    public ProfileServiceUnavailableException(string message, Exception innerException);
    public ProfileServiceUnavailableException(SerializationInfo info, StreamingContext context);
}
public enum Microsoft.VisualStudio.Services.Profile.ProfileState : Enum {
    public int value__;
    public static ProfileState Custom;
    public static ProfileState CustomReadOnly;
    public static ProfileState ReadOnly;
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Profile.ProfileTermsOfService : object {
    [CompilerGeneratedAttribute]
private Guid <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TermsOfServiceUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <ActivatedDate>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <LastModified>k__BackingField;
    [DataMemberAttribute]
public Guid Id { get; internal set; }
    [DataMemberAttribute]
public string TermsOfServiceUrl { get; internal set; }
    [DataMemberAttribute]
public int Version { get; internal set; }
    [DataMemberAttribute]
public DateTime ActivatedDate { get; internal set; }
    [DataMemberAttribute]
public DateTime LastModified { get; internal set; }
    [CompilerGeneratedAttribute]
public Guid get_Id();
    [CompilerGeneratedAttribute]
internal void set_Id(Guid value);
    [CompilerGeneratedAttribute]
public string get_TermsOfServiceUrl();
    [CompilerGeneratedAttribute]
internal void set_TermsOfServiceUrl(string value);
    [CompilerGeneratedAttribute]
public int get_Version();
    [CompilerGeneratedAttribute]
internal void set_Version(int value);
    [CompilerGeneratedAttribute]
public DateTime get_ActivatedDate();
    [CompilerGeneratedAttribute]
internal void set_ActivatedDate(DateTime value);
    [CompilerGeneratedAttribute]
public DateTime get_LastModified();
    [CompilerGeneratedAttribute]
internal void set_LastModified(DateTime value);
}
internal static class Microsoft.VisualStudio.Services.Profile.ProfileUtility : object {
    private static string _attributesBelongingToDifferentContainersErrorMessage;
    private static string _attributeDoesNotBelongToContainerErrorMessage;
    private static string _applicationContainerNameCannotBeErrorMessage;
    private static string _anAplicationAttributesBelongsToContainerErrorMessage;
    private static string _attributeMissingNecessaryInformationErrorMessage;
    private static string _attributeMissingNecessaryInformationDetailedErrorMessage;
    private static string _coreAttributeNotSupported;
    internal static object GetCorrectlyTypedCoreAttribute(string coreAttributeName, object value);
    internal static CoreProfileAttribute ExtractCoreAttribute(ProfileAttributeBase`1<T> attribute);
    internal static ProfileAttribute ExtractApplicationAttribute(ProfileAttributeBase`1<object> attribute);
    internal static void ValidateAttributes(IEnumerable`1<ProfileAttributeBase`1<T>> attributes, string applicationContainerName);
    internal static void ValidateAttributesMetadata(IEnumerable`1<ProfileAttributeBase`1<T>> attributes);
    internal static void ValidateAttributesBelongToCoreContainer(IEnumerable`1<CoreProfileAttribute> coreAttributes);
    private static void ValidateAttributesAreEitherCoreAttributesOrBelongToOneApplicationContainer(IEnumerable`1<ProfileAttributeBase`1<T>> attributes, string applicationContainerName);
    internal static void ValidateAttributesBelongToOneApplicaitonContainer(IEnumerable`1<ProfileAttribute> attributes, string applicationContainerName);
}
[ExceptionMappingAttribute("0.0", "3.0", "PublicAliasAlreadyExistException", "Microsoft.VisualStudio.Services.Profile.PublicAliasAlreadyExistException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Profile.PublicAliasAlreadyExistException : ProfileException {
    public PublicAliasAlreadyExistException(string message);
    public PublicAliasAlreadyExistException(string message, Exception innerException);
    protected PublicAliasAlreadyExistException(SerializationInfo info, StreamingContext context);
}
[ExceptionMappingAttribute("0.0", "3.0", "ServiceSettingNotFoundException", "Microsoft.VisualStudio.Services.Profile.ServiceSettingNotFoundException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Profile.ServiceSettingNotFoundException : ProfileResourceNotFoundException {
    public ServiceSettingNotFoundException(string message);
    public ServiceSettingNotFoundException(string message, Exception innerException);
    protected ServiceSettingNotFoundException(SerializationInfo info, StreamingContext context);
}
public static class Microsoft.VisualStudio.Services.Profile.ServiceSettings : object {
    public static string ProfileRefreshInterval;
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Profile.UserTermsOfService : object {
    [CompilerGeneratedAttribute]
private int <CurrentAcceptedTermsOfService>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <CurrentAcceptedTermsOfServiceDate>k__BackingField;
    [CompilerGeneratedAttribute]
private ProfileTermsOfService <LatestTermsOfService>k__BackingField;
    [DataMemberAttribute]
public int CurrentAcceptedTermsOfService { get; public set; }
    [DataMemberAttribute]
public DateTimeOffset CurrentAcceptedTermsOfServiceDate { get; public set; }
    [DataMemberAttribute]
public ProfileTermsOfService LatestTermsOfService { get; public set; }
    [CompilerGeneratedAttribute]
public int get_CurrentAcceptedTermsOfService();
    [CompilerGeneratedAttribute]
public void set_CurrentAcceptedTermsOfService(int value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_CurrentAcceptedTermsOfServiceDate();
    [CompilerGeneratedAttribute]
public void set_CurrentAcceptedTermsOfServiceDate(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public ProfileTermsOfService get_LatestTermsOfService();
    [CompilerGeneratedAttribute]
public void set_LatestTermsOfService(ProfileTermsOfService value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Profile.VerifyPreferredEmailContext : object {
    [CompilerGeneratedAttribute]
private Guid <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HashCode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EmailAddress>k__BackingField;
    [DataMemberAttribute]
public Guid Id { get; public set; }
    [DataMemberAttribute]
public string HashCode { get; public set; }
    [DataMemberAttribute]
public string EmailAddress { get; public set; }
    [CompilerGeneratedAttribute]
public Guid get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(Guid value);
    [CompilerGeneratedAttribute]
public string get_HashCode();
    [CompilerGeneratedAttribute]
public void set_HashCode(string value);
    [CompilerGeneratedAttribute]
public string get_EmailAddress();
    [CompilerGeneratedAttribute]
public void set_EmailAddress(string value);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.VisualStudio.Services.ProfileRestApiConstants : object {
    public static string Me;
    public static string Value;
}
internal static class Microsoft.VisualStudio.Services.QueryParameters : object {
    internal static string Properties;
    internal static string CreatorId;
    internal static string OwnerId;
    internal static string IncludeDisabledAccounts;
    internal static string IncludeOwner;
    internal static string StatusReason;
    internal static string IncludeDeletedUsers;
    internal static string AccountId;
    internal static string UsePrecreated;
    internal static string UserType;
    internal static string SubjectDescriptors;
    internal static string SocialDescriptors;
    internal static string Descriptors;
    internal static string IdentityIds;
    internal static string SearchFilter;
    internal static string FilterValue;
    internal static string QueryMembership;
    internal static string IdentitySequenceId;
    internal static string GroupSequenceId;
    internal static string OrgIdentitySequenceId;
    internal static string PageSize;
    internal static string ScopeId;
    internal static string ScopeIds;
    internal static string Recurse;
    internal static string Deleted;
    internal static string ScopeName;
    internal static string MemberId;
    internal static string ContainerId;
    internal static string ForceRemove;
    internal static string IncludeRestrictedVisibility;
    internal static string ReadAllIdentities;
    internal static string ReadIdentitiesOptions;
    internal static string DomainId;
    internal static string AllowMetaDataUpdates;
    internal static string UserId;
    internal static string DisplayName;
    internal static string ValidTo;
    internal static string Scope;
    internal static string AccessTokenKey;
    internal static string TokenType;
    internal static string AlwaysAllowAdministrators;
    internal static string Descriptor;
    internal static string IncludeExtendedInfo;
    internal static string LocalOnly;
    internal static string Token;
    internal static string Tokens;
    internal static string Delimiter;
    internal static string OldSequenceId;
    internal static string InheritFlag;
    internal static string UseVsidSubjects;
    internal static string Size;
    internal static string ModifiedSince;
    internal static string ModifiedAfterRevision;
    internal static string Partition;
    internal static string Details;
    internal static string WithCoreAttributes;
    internal static string CoreAttributes;
    internal static string ProfilePageType;
    internal static string IpAddress;
    internal static string ClientId;
    internal static string ArtifactUris;
    internal static string ScopeIdentifier;
    internal static string ItemPath;
    internal static string ArtifactHash;
    internal static string FileLength;
    internal static string includeDownloadTickets;
    internal static string isShallow;
    internal static string includeBlobMetadata;
    internal static string isMetadata;
    internal static string TelemetryPrefix;
}
[ExceptionMappingAttribute("0.0", "3.0", "AccessCheckException", "Microsoft.TeamFoundation.Framework.Server.AccessCheckException, Microsoft.TeamFoundation.Framework.Server, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Security.AccessCheckException : SecurityException {
    [CompilerGeneratedAttribute]
private IdentityDescriptor <Descriptor>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IdentityDisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Token>k__BackingField;
    [CompilerGeneratedAttribute]
private int <RequestedPermissions>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <NamespaceId>k__BackingField;
    [DataMemberAttribute]
public IdentityDescriptor Descriptor { get; private set; }
    [DataMemberAttribute]
public string IdentityDisplayName { get; private set; }
    [DataMemberAttribute]
public string Token { get; private set; }
    [DataMemberAttribute]
public int RequestedPermissions { get; private set; }
    [DataMemberAttribute]
public Guid NamespaceId { get; private set; }
    public AccessCheckException(IdentityDescriptor descriptor, string identityDisplayName, string token, int requestedPermissions, Guid namespaceId, string message);
    public AccessCheckException(IdentityDescriptor descriptor, string token, int requestedPermissions, Guid namespaceId, string message);
    public AccessCheckException(string message);
    public AccessCheckException(string message, Exception ex);
    [CompilerGeneratedAttribute]
public IdentityDescriptor get_Descriptor();
    [CompilerGeneratedAttribute]
private void set_Descriptor(IdentityDescriptor value);
    [CompilerGeneratedAttribute]
public string get_IdentityDisplayName();
    [CompilerGeneratedAttribute]
private void set_IdentityDisplayName(string value);
    [CompilerGeneratedAttribute]
public string get_Token();
    [CompilerGeneratedAttribute]
private void set_Token(string value);
    [CompilerGeneratedAttribute]
public int get_RequestedPermissions();
    [CompilerGeneratedAttribute]
private void set_RequestedPermissions(int value);
    [CompilerGeneratedAttribute]
public Guid get_NamespaceId();
    [CompilerGeneratedAttribute]
private void set_NamespaceId(Guid value);
}
[CollectionDataContractAttribute]
public class Microsoft.VisualStudio.Services.Security.AccessControlEntriesCollection : List`1<AccessControlEntry> {
    public AccessControlEntriesCollection(IEnumerable`1<AccessControlEntry> source);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Security.AccessControlEntry : object {
    [CompilerGeneratedAttribute]
private IdentityDescriptor <Descriptor>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Allow>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Deny>k__BackingField;
    [CompilerGeneratedAttribute]
private AceExtendedInformation <ExtendedInfo>k__BackingField;
    [DataMemberAttribute]
public IdentityDescriptor Descriptor { get; public set; }
    [DataMemberAttribute]
public int Allow { get; public set; }
    [DataMemberAttribute]
public int Deny { get; public set; }
    [DataMemberAttribute]
public AceExtendedInformation ExtendedInfo { get; public set; }
    public AccessControlEntry(IdentityDescriptor descriptor, int allow, int deny, AceExtendedInformation extendedInfo);
    [CompilerGeneratedAttribute]
public IdentityDescriptor get_Descriptor();
    [CompilerGeneratedAttribute]
public void set_Descriptor(IdentityDescriptor value);
    [CompilerGeneratedAttribute]
public int get_Allow();
    [CompilerGeneratedAttribute]
public void set_Allow(int value);
    [CompilerGeneratedAttribute]
public int get_Deny();
    [CompilerGeneratedAttribute]
public void set_Deny(int value);
    [CompilerGeneratedAttribute]
public AceExtendedInformation get_ExtendedInfo();
    [CompilerGeneratedAttribute]
public void set_ExtendedInfo(AceExtendedInformation value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Security.AccessControlList : object {
    [CompilerGeneratedAttribute]
private bool <InheritPermissions>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Token>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<IdentityDescriptor, AccessControlEntry> <AcesDictionary>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IncludeExtendedInfo>k__BackingField;
    [DataMemberAttribute]
public bool InheritPermissions { get; public set; }
    [DataMemberAttribute]
public string Token { get; public set; }
    [DataMemberAttribute]
public Dictionary`2<IdentityDescriptor, AccessControlEntry> AcesDictionary { get; public set; }
    [DataMemberAttribute]
public bool IncludeExtendedInfo { get; public set; }
    public AccessControlList(string token, bool inherit, Dictionary`2<IdentityDescriptor, AccessControlEntry> acesDictionary, bool includeExtendedInfo);
    [CompilerGeneratedAttribute]
public bool get_InheritPermissions();
    [CompilerGeneratedAttribute]
public void set_InheritPermissions(bool value);
    [CompilerGeneratedAttribute]
public string get_Token();
    [CompilerGeneratedAttribute]
public void set_Token(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<IdentityDescriptor, AccessControlEntry> get_AcesDictionary();
    [CompilerGeneratedAttribute]
public void set_AcesDictionary(Dictionary`2<IdentityDescriptor, AccessControlEntry> value);
    [CompilerGeneratedAttribute]
public bool get_IncludeExtendedInfo();
    [CompilerGeneratedAttribute]
public void set_IncludeExtendedInfo(bool value);
}
[CollectionDataContractAttribute]
public class Microsoft.VisualStudio.Services.Security.AccessControlListsCollection : List`1<AccessControlList> {
    public AccessControlListsCollection(IEnumerable`1<AccessControlList> source);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Security.AceExtendedInformation : object {
    [CompilerGeneratedAttribute]
private int <InheritedAllow>k__BackingField;
    [CompilerGeneratedAttribute]
private int <InheritedDeny>k__BackingField;
    [CompilerGeneratedAttribute]
private int <EffectiveAllow>k__BackingField;
    [CompilerGeneratedAttribute]
private int <EffectiveDeny>k__BackingField;
    [DataMemberAttribute]
public int InheritedAllow { get; public set; }
    [DataMemberAttribute]
public int InheritedDeny { get; public set; }
    [DataMemberAttribute]
public int EffectiveAllow { get; public set; }
    [DataMemberAttribute]
public int EffectiveDeny { get; public set; }
    public AceExtendedInformation(int inheritedAllow, int inheritedDeny, int effectiveAllow, int effectiveDeny);
    [CompilerGeneratedAttribute]
public int get_InheritedAllow();
    [CompilerGeneratedAttribute]
public void set_InheritedAllow(int value);
    [CompilerGeneratedAttribute]
public int get_InheritedDeny();
    [CompilerGeneratedAttribute]
public void set_InheritedDeny(int value);
    [CompilerGeneratedAttribute]
public int get_EffectiveAllow();
    [CompilerGeneratedAttribute]
public void set_EffectiveAllow(int value);
    [CompilerGeneratedAttribute]
public int get_EffectiveDeny();
    [CompilerGeneratedAttribute]
public void set_EffectiveDeny(int value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Security.ActionDefinition : object {
    [CompilerGeneratedAttribute]
private int <Bit>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <NamespaceId>k__BackingField;
    [DataMemberAttribute]
public int Bit { get; public set; }
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public string DisplayName { get; public set; }
    [DataMemberAttribute]
public Guid NamespaceId { get; public set; }
    public ActionDefinition(Guid namespaceId, int bit, string name, string displayName);
    [CompilerGeneratedAttribute]
public int get_Bit();
    [CompilerGeneratedAttribute]
public void set_Bit(int value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public Guid get_NamespaceId();
    [CompilerGeneratedAttribute]
public void set_NamespaceId(Guid value);
}
public class Microsoft.VisualStudio.Services.Security.Client.SecurityBackingStoreHttpClient : VssHttpClientBase {
    private static ApiResourceVersion s_apiVersion1;
    private static ApiResourceVersion s_apiVersion2;
    public SecurityBackingStoreHttpClient(Uri baseUrl, VssCredentials credentials);
    public SecurityBackingStoreHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public SecurityBackingStoreHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public SecurityBackingStoreHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public SecurityBackingStoreHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    private static SecurityBackingStoreHttpClient();
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Security.Client.SecurityBackingStoreHttpClient/<QuerySecurityDataAsync>d__5")]
public Task`1<SecurityNamespaceDataCollection> QuerySecurityDataAsync(Guid securityNamespaceId, bool useVsidSubjects, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Security.Client.SecurityBackingStoreHttpClient/<QuerySecurityDataAsync>d__6")]
public Task`1<SecurityNamespaceData> QuerySecurityDataAsync(Guid securityNamespaceId, Guid aclStoreId, long oldSequenceId, bool useVsidSubjects, object userState, CancellationToken cancellationToken);
    public Task`1<long> SetAccessControlListsAsync(Guid securityNamespaceId, IEnumerable`1<AccessControlList> acls, IEnumerable`1<AccessControlEntry> aces, bool throwOnInvalidIdentity, object userState, CancellationToken cancellationToken);
    public Task`1<long> RemoveAccessControlListsAsync(Guid securityNamespaceId, IEnumerable`1<string> tokens, bool recurse, object userState, CancellationToken cancellationToken);
    public Task`1<long> SetPermissionsAsync(Guid securityNamespaceId, string token, IEnumerable`1<AccessControlEntry> permissions, bool merge, bool throwOnInvalidIdentity, object userState, CancellationToken cancellationToken);
    public Task`1<long> RemovePermissionsAsync(Guid securityNamespaceId, string token, IEnumerable`1<Guid> identityIds, object userState, CancellationToken cancellationToken);
    public Task`1<long> SetInheritFlagAsync(Guid securityNamespaceId, string token, bool inheritFlag, object userState, CancellationToken cancellationToken);
    public Task`1<long> RenameTokensAsync(Guid securityNamespaceId, IEnumerable`1<TokenRename> renames, object userState, CancellationToken cancellationToken);
}
[ClientCancellationTimeoutAttribute("60")]
[ClientCircuitBreakerSettingsAttribute("10", "50")]
public class Microsoft.VisualStudio.Services.Security.Client.SecurityHttpClient : VssHttpClientBase {
    private static ApiResourceVersion s_pluralHasPermissionVersion;
    private static ApiResourceVersion s_batchHasPermissionVersion;
    public SecurityHttpClient(Uri baseUrl, VssCredentials credentials);
    public SecurityHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public SecurityHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public SecurityHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public SecurityHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    private static SecurityHttpClient();
    public Task`1<bool> HasPermissionAsync(Guid securityNamespaceId, string token, int requestedPermissions, bool alwaysAllowAdministrators, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Security.Client.SecurityHttpClient/<HasPermissionsAsync>d__6")]
public Task`1<List`1<bool>> HasPermissionsAsync(Guid securityNamespaceId, IEnumerable`1<string> tokens, int requestedPermissions, bool alwaysAllowAdministrators, char wireDelimiter, object userState, CancellationToken cancellationToken);
    public Task`1<AccessControlEntry> RemovePermissionAsync(Guid securityNamespaceId, string token, IdentityDescriptor descriptor, int permissions, object userState, CancellationToken cancellationToken);
    public Task`1<IEnumerable`1<AccessControlEntry>> SetAccessControlEntriesAsync(Guid securityNamespaceId, string token, IEnumerable`1<AccessControlEntry> accessControlEntries, bool merge, object userState, CancellationToken cancellationToken);
    public Task`1<bool> RemoveAccessControlEntriesAsync(Guid securityNamespaceId, string token, IEnumerable`1<IdentityDescriptor> descriptors, object userState, CancellationToken cancellationToken);
    public Task`1<IEnumerable`1<AccessControlList>> QueryAccessControlListsAsync(Guid securityNamespaceId, string token, IEnumerable`1<IdentityDescriptor> descriptors, bool includeExtendedInfo, bool recurse, object userState, CancellationToken cancellationToken);
    public Task`1<HttpResponseMessage> SetAccessControlListsAsync(Guid securityNamespaceId, IEnumerable`1<AccessControlList> accessControlLists, object userState, CancellationToken cancellationToken);
    public Task`1<bool> RemoveAccessControlListsAsync(Guid securityNamespaceId, IEnumerable`1<string> tokens, bool recurse, object userState, CancellationToken cancellationToken);
    public Task`1<IEnumerable`1<SecurityNamespaceDescription>> QuerySecurityNamespacesAsync(Guid securityNamespaceId, bool localOnly, object userState, CancellationToken cancellationToken);
    public Task`1<HttpResponseMessage> SetInheritFlagAsync(Guid securityNamespaceId, string token, bool inherit, object userState, CancellationToken cancellationToken);
}
[ExceptionMappingAttribute("0.0", "3.0", "InvalidAclStoreException", "Microsoft.VisualStudio.Services.Security.InvalidAclStoreException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Security.InvalidAclStoreException : SecurityException {
    public InvalidAclStoreException(Guid namespaceId, Guid aclStoreId);
    public InvalidAclStoreException(string message);
    public InvalidAclStoreException(string message, Exception ex);
}
public class Microsoft.VisualStudio.Services.Security.InvalidPermissionsException : SecurityException {
    public InvalidPermissionsException(Guid namespaceId, int bitmask);
    public InvalidPermissionsException(string message);
    public InvalidPermissionsException(string message, Exception ex);
}
public static class Microsoft.VisualStudio.Services.Security.LocationResourceIds : object {
    public static string SecurityBackingStoreArea;
    public static string SecurityBackingStoreNamespaceResource;
    public static Guid SecurityBackingStoreNamespace;
    public static string SecurityBackingStoreAclStoreResource;
    public static Guid SecurityBackingStoreAclStore;
    public static string SecurityBackingStoreAclsResource;
    public static Guid SecurityBackingStoreAcls;
    public static string SecurityBackingStoreAcesResource;
    public static Guid SecurityBackingStoreAces;
    public static string SecurityBackingStoreInheritResource;
    public static Guid SecurityBackingStoreInherit;
    public static string SecurityBackingStoreTokensResource;
    public static Guid SecurityBackingStoreTokens;
    public static string SecurityServiceArea;
    public static string SecurityPermissionsResource;
    public static Guid SecurityPermissions;
    public static string SecurityPermissionEvaluationBatchResource;
    public static Guid SecurityPermissionEvaluationBatch;
    public static string SecurityAccessControlEntriesResource;
    public static Guid SecurityAccessControlEntries;
    public static string SecurityAccessControlListsResource;
    public static Guid SecurityAccessControlLists;
    public static string SecurityNamespacesResource;
    public static Guid SecurityNamespaces;
    private static LocationResourceIds();
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Security.PermissionEvaluation : object {
    [CompilerGeneratedAttribute]
private Guid <SecurityNamespaceId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Token>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Permissions>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Value>k__BackingField;
    [DataMemberAttribute]
public Guid SecurityNamespaceId { get; public set; }
    [DataMemberAttribute]
public string Token { get; public set; }
    [DataMemberAttribute]
public int Permissions { get; public set; }
    [DataMemberAttribute]
public bool Value { get; public set; }
    public Guid NamespaceId { get; }
    public int RequiredPermissions { get; }
    [CompilerGeneratedAttribute]
public Guid get_SecurityNamespaceId();
    [CompilerGeneratedAttribute]
public void set_SecurityNamespaceId(Guid value);
    [CompilerGeneratedAttribute]
public string get_Token();
    [CompilerGeneratedAttribute]
public void set_Token(string value);
    [CompilerGeneratedAttribute]
public int get_Permissions();
    [CompilerGeneratedAttribute]
public void set_Permissions(int value);
    [CompilerGeneratedAttribute]
public bool get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(bool value);
    public sealed virtual Guid get_NamespaceId();
    public sealed virtual int get_RequiredPermissions();
    public sealed virtual string GetToken();
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Security.PermissionEvaluationBatch : object {
    [CompilerGeneratedAttribute]
private PermissionEvaluation[] <Evaluations>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AlwaysAllowAdministrators>k__BackingField;
    [DataMemberAttribute]
public PermissionEvaluation[] Evaluations { get; public set; }
    [DataMemberAttribute]
public bool AlwaysAllowAdministrators { get; public set; }
    public Guid NamespaceId { get; }
    public int RequiredPermissions { get; }
    [CompilerGeneratedAttribute]
public PermissionEvaluation[] get_Evaluations();
    [CompilerGeneratedAttribute]
public void set_Evaluations(PermissionEvaluation[] value);
    [CompilerGeneratedAttribute]
public bool get_AlwaysAllowAdministrators();
    [CompilerGeneratedAttribute]
public void set_AlwaysAllowAdministrators(bool value);
    public sealed virtual Guid get_NamespaceId();
    public sealed virtual int get_RequiredPermissions();
    public sealed virtual string GetToken();
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Security.RemoteBackingStoreAccessControlEntry : object {
    [CompilerGeneratedAttribute]
private string <Token>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Subject>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Allow>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Deny>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDeleted>k__BackingField;
    [DataMemberAttribute]
public string Token { get; public set; }
    [DataMemberAttribute]
public string Subject { get; public set; }
    [DataMemberAttribute]
public int Allow { get; public set; }
    [DataMemberAttribute]
public int Deny { get; public set; }
    [DataMemberAttribute]
public bool IsDeleted { get; public set; }
    public RemoteBackingStoreAccessControlEntry(string subject, string token, int allow, int deny, bool isDeleted);
    [CompilerGeneratedAttribute]
public string get_Token();
    [CompilerGeneratedAttribute]
public void set_Token(string value);
    [CompilerGeneratedAttribute]
public string get_Subject();
    [CompilerGeneratedAttribute]
public void set_Subject(string value);
    [CompilerGeneratedAttribute]
public int get_Allow();
    [CompilerGeneratedAttribute]
public void set_Allow(int value);
    [CompilerGeneratedAttribute]
public int get_Deny();
    [CompilerGeneratedAttribute]
public void set_Deny(int value);
    [CompilerGeneratedAttribute]
public bool get_IsDeleted();
    [CompilerGeneratedAttribute]
public void set_IsDeleted(bool value);
}
[ExceptionMappingAttribute("0.0", "3.0", "SecurityException", "Microsoft.VisualStudio.Services.Security.SecurityException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public abstract class Microsoft.VisualStudio.Services.Security.SecurityException : VssServiceException {
    public SecurityException(string message);
    public SecurityException(string message, Exception ex);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Security.SecurityNamespaceData : object {
    [CompilerGeneratedAttribute]
private Guid <AclStoreId>k__BackingField;
    [CompilerGeneratedAttribute]
private long <OldSequenceId>k__BackingField;
    [CompilerGeneratedAttribute]
private Int64[] <NewSequenceId>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <IdentityDomain>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<RemoteBackingStoreAccessControlEntry> <AccessControlEntries>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <NoInheritTokens>k__BackingField;
    public bool IsDelta { get; }
    [DataMemberAttribute]
public Guid AclStoreId { get; public set; }
    [DataMemberAttribute]
public long OldSequenceId { get; public set; }
    [DataMemberAttribute]
[JsonConverterAttribute("Microsoft.VisualStudio.Services.Security.SecurityNamespaceData/PluralSequenceIdJsonConverter")]
public Int64[] NewSequenceId { get; public set; }
    [DataMemberAttribute]
public Guid IdentityDomain { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<RemoteBackingStoreAccessControlEntry> AccessControlEntries { get; public set; }
    [DataMemberAttribute]
public IEnumerable`1<string> NoInheritTokens { get; public set; }
    public SecurityNamespaceData(Guid aclStoreId, long oldSequenceId, Int64[] newSequenceId, Guid identityDomain, IEnumerable`1<RemoteBackingStoreAccessControlEntry> accessControlEntries, IEnumerable`1<string> noInheritTokens);
    public bool get_IsDelta();
    [CompilerGeneratedAttribute]
public Guid get_AclStoreId();
    [CompilerGeneratedAttribute]
public void set_AclStoreId(Guid value);
    [CompilerGeneratedAttribute]
public long get_OldSequenceId();
    [CompilerGeneratedAttribute]
public void set_OldSequenceId(long value);
    [CompilerGeneratedAttribute]
public Int64[] get_NewSequenceId();
    [CompilerGeneratedAttribute]
public void set_NewSequenceId(Int64[] value);
    [CompilerGeneratedAttribute]
public Guid get_IdentityDomain();
    [CompilerGeneratedAttribute]
public void set_IdentityDomain(Guid value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<RemoteBackingStoreAccessControlEntry> get_AccessControlEntries();
    [CompilerGeneratedAttribute]
public void set_AccessControlEntries(IEnumerable`1<RemoteBackingStoreAccessControlEntry> value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_NoInheritTokens();
    [CompilerGeneratedAttribute]
public void set_NoInheritTokens(IEnumerable`1<string> value);
}
[CollectionDataContractAttribute]
public class Microsoft.VisualStudio.Services.Security.SecurityNamespaceDataCollection : List`1<SecurityNamespaceData> {
    public SecurityNamespaceDataCollection(IList`1<SecurityNamespaceData> source);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Security.SecurityNamespaceDescription : object {
    [CompilerGeneratedAttribute]
private Guid <NamespaceId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private char <SeparatorValue>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ElementLength>k__BackingField;
    [CompilerGeneratedAttribute]
private int <WritePermission>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ReadPermission>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DataspaceCategory>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ActionDefinition> <Actions>k__BackingField;
    [CompilerGeneratedAttribute]
private int <StructureValue>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ExtensionType>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsRemotable>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseTokenTranslator>k__BackingField;
    [CompilerGeneratedAttribute]
private int <SystemBitMask>k__BackingField;
    [DataMemberAttribute]
public Guid NamespaceId { get; public set; }
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public string DisplayName { get; public set; }
    [DataMemberAttribute]
public char SeparatorValue { get; public set; }
    [DataMemberAttribute]
public int ElementLength { get; public set; }
    [DataMemberAttribute]
public int WritePermission { get; public set; }
    [DataMemberAttribute]
public int ReadPermission { get; public set; }
    [DataMemberAttribute]
public string DataspaceCategory { get; public set; }
    [DataMemberAttribute]
public List`1<ActionDefinition> Actions { get; public set; }
    [DataMemberAttribute]
public int StructureValue { get; public set; }
    [DataMemberAttribute]
public string ExtensionType { get; public set; }
    [DataMemberAttribute]
public bool IsRemotable { get; public set; }
    [DataMemberAttribute]
public bool UseTokenTranslator { get; public set; }
    [DataMemberAttribute]
public int SystemBitMask { get; public set; }
    public SecurityNamespaceDescription(Guid namespaceId, string name, string displayName, string dataspaceCategory, char separatorValue, int elementLength, int structure, int writePermission, int readPermission, List`1<ActionDefinition> actions, string extensionType, bool isRemotable, bool useTokenTranslator, int systemBitMask);
    public SecurityNamespaceDescription(Guid namespaceId, string name, string displayName, string dataspaceCategory, char separatorValue, int elementLength, int structure, int writePermission, int readPermission, List`1<ActionDefinition> actions, string extensionType, bool isRemotable, bool useTokenTranslator);
    [CompilerGeneratedAttribute]
public Guid get_NamespaceId();
    [CompilerGeneratedAttribute]
public void set_NamespaceId(Guid value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public char get_SeparatorValue();
    [CompilerGeneratedAttribute]
public void set_SeparatorValue(char value);
    [CompilerGeneratedAttribute]
public int get_ElementLength();
    [CompilerGeneratedAttribute]
public void set_ElementLength(int value);
    [CompilerGeneratedAttribute]
public int get_WritePermission();
    [CompilerGeneratedAttribute]
public void set_WritePermission(int value);
    [CompilerGeneratedAttribute]
public int get_ReadPermission();
    [CompilerGeneratedAttribute]
public void set_ReadPermission(int value);
    [CompilerGeneratedAttribute]
public string get_DataspaceCategory();
    [CompilerGeneratedAttribute]
public void set_DataspaceCategory(string value);
    [CompilerGeneratedAttribute]
public List`1<ActionDefinition> get_Actions();
    [CompilerGeneratedAttribute]
public void set_Actions(List`1<ActionDefinition> value);
    [CompilerGeneratedAttribute]
public int get_StructureValue();
    [CompilerGeneratedAttribute]
public void set_StructureValue(int value);
    [CompilerGeneratedAttribute]
public string get_ExtensionType();
    [CompilerGeneratedAttribute]
public void set_ExtensionType(string value);
    [CompilerGeneratedAttribute]
public bool get_IsRemotable();
    [CompilerGeneratedAttribute]
public void set_IsRemotable(bool value);
    [CompilerGeneratedAttribute]
public bool get_UseTokenTranslator();
    [CompilerGeneratedAttribute]
public void set_UseTokenTranslator(bool value);
    [CompilerGeneratedAttribute]
public int get_SystemBitMask();
    [CompilerGeneratedAttribute]
public void set_SystemBitMask(int value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Security.SetAccessControlEntriesInfo : object {
    [CompilerGeneratedAttribute]
private string <Token>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Merge>k__BackingField;
    [CompilerGeneratedAttribute]
private AccessControlEntriesCollection <AccessControlEntries>k__BackingField;
    [DataMemberAttribute]
public string Token { get; private set; }
    [DataMemberAttribute]
public bool Merge { get; private set; }
    [DataMemberAttribute]
public AccessControlEntriesCollection AccessControlEntries { get; private set; }
    public SetAccessControlEntriesInfo(string token, IEnumerable`1<AccessControlEntry> accessControlEntries, bool merge);
    [CompilerGeneratedAttribute]
public string get_Token();
    [CompilerGeneratedAttribute]
private void set_Token(string value);
    [CompilerGeneratedAttribute]
public bool get_Merge();
    [CompilerGeneratedAttribute]
private void set_Merge(bool value);
    [CompilerGeneratedAttribute]
public AccessControlEntriesCollection get_AccessControlEntries();
    [CompilerGeneratedAttribute]
private void set_AccessControlEntries(AccessControlEntriesCollection value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Security.SetInheritFlagInfo : object {
    [CompilerGeneratedAttribute]
private string <Token>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Inherit>k__BackingField;
    [DataMemberAttribute]
public string Token { get; private set; }
    [DataMemberAttribute]
public bool Inherit { get; private set; }
    public SetInheritFlagInfo(string token, bool inherit);
    [CompilerGeneratedAttribute]
public string get_Token();
    [CompilerGeneratedAttribute]
private void set_Token(string value);
    [CompilerGeneratedAttribute]
public bool get_Inherit();
    [CompilerGeneratedAttribute]
private void set_Inherit(bool value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Security.TokenRename : object {
    [CompilerGeneratedAttribute]
private string <OldToken>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NewToken>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Copy>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Recurse>k__BackingField;
    [DataMemberAttribute]
public string OldToken { get; public set; }
    [DataMemberAttribute]
public string NewToken { get; public set; }
    [DataMemberAttribute]
public bool Copy { get; public set; }
    [DataMemberAttribute]
public bool Recurse { get; public set; }
    public TokenRename(string oldToken, string newToken, bool copy, bool recurse);
    [CompilerGeneratedAttribute]
public string get_OldToken();
    [CompilerGeneratedAttribute]
public void set_OldToken(string value);
    [CompilerGeneratedAttribute]
public string get_NewToken();
    [CompilerGeneratedAttribute]
public void set_NewToken(string value);
    [CompilerGeneratedAttribute]
public bool get_Copy();
    [CompilerGeneratedAttribute]
public void set_Copy(bool value);
    [CompilerGeneratedAttribute]
public bool get_Recurse();
    [CompilerGeneratedAttribute]
public void set_Recurse(bool value);
}
public static class Microsoft.VisualStudio.Services.Security.WellKnownAclStores : object {
    public static Guid User;
    public static Guid System;
    private static string c_userString;
    private static string c_systemString;
    private static WellKnownAclStores();
}
public static class Microsoft.VisualStudio.Services.ServicePrincipal.ServicePrincipalResourceIds : object {
    public static string AreaName;
    public static string ServicePrincipalsResourceName;
    public static Guid ServicePrincipalsLocationId;
    private static ServicePrincipalResourceIds();
}
[EditorBrowsableAttribute("1")]
public class Microsoft.VisualStudio.Services.Servicing.Client.ServiceLevelHttpClient : VssHttpClientBase {
    public ServiceLevelHttpClient(Uri baseUrl, VssCredentials credentials);
    public ServiceLevelHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public ServiceLevelHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public ServiceLevelHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public ServiceLevelHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Servicing.Client.ServiceLevelHttpClient/<GetServiceLevelAsync>d__5")]
public Task`1<ServiceLevelData> GetServiceLevelAsync();
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Servicing.ServiceLevelData : object {
    [CompilerGeneratedAttribute]
private string <ServicingAreas>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ConfigurationDatabaseServiceLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DeploymentHostServiceLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccountDatabaseServiceLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccountHostServiceLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CollectionDatabaseServiceLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CollectionHostServiceLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BuildServiceLevel>k__BackingField;
    [DataMemberAttribute]
public string ServicingAreas { get; public set; }
    [DataMemberAttribute]
public string ConfigurationDatabaseServiceLevel { get; public set; }
    [DataMemberAttribute]
public string DeploymentHostServiceLevel { get; public set; }
    [DataMemberAttribute]
public string AccountDatabaseServiceLevel { get; public set; }
    [DataMemberAttribute]
public string AccountHostServiceLevel { get; public set; }
    [DataMemberAttribute]
public string CollectionDatabaseServiceLevel { get; public set; }
    [DataMemberAttribute]
public string CollectionHostServiceLevel { get; public set; }
    [DataMemberAttribute]
public string BuildServiceLevel { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ServicingAreas();
    [CompilerGeneratedAttribute]
public void set_ServicingAreas(string value);
    [CompilerGeneratedAttribute]
public string get_ConfigurationDatabaseServiceLevel();
    [CompilerGeneratedAttribute]
public void set_ConfigurationDatabaseServiceLevel(string value);
    [CompilerGeneratedAttribute]
public string get_DeploymentHostServiceLevel();
    [CompilerGeneratedAttribute]
public void set_DeploymentHostServiceLevel(string value);
    [CompilerGeneratedAttribute]
public string get_AccountDatabaseServiceLevel();
    [CompilerGeneratedAttribute]
public void set_AccountDatabaseServiceLevel(string value);
    [CompilerGeneratedAttribute]
public string get_AccountHostServiceLevel();
    [CompilerGeneratedAttribute]
public void set_AccountHostServiceLevel(string value);
    [CompilerGeneratedAttribute]
public string get_CollectionDatabaseServiceLevel();
    [CompilerGeneratedAttribute]
public void set_CollectionDatabaseServiceLevel(string value);
    [CompilerGeneratedAttribute]
public string get_CollectionHostServiceLevel();
    [CompilerGeneratedAttribute]
public void set_CollectionHostServiceLevel(string value);
    [CompilerGeneratedAttribute]
public string get_BuildServiceLevel();
    [CompilerGeneratedAttribute]
public void set_BuildServiceLevel(string value);
}
public static class Microsoft.VisualStudio.Services.Servicing.ServicingResourceIds : object {
    public static string AreaName;
    public static Guid JobsLocationId;
    public static Guid LogsLocationId;
    public static Guid ServiceLevelLocationId;
    public static string JobsResourceName;
    public static string LogsResourceName;
    public static string ServiceLevelResource;
    private static ServicingResourceIds();
}
public class Microsoft.VisualStudio.Services.Settings.InvalidSettingsScopeException : VssServiceException {
    public InvalidSettingsScopeException(string message);
    public InvalidSettingsScopeException(string message, Exception ex);
}
[GenerateAllConstantsAttribute("")]
public static class Microsoft.VisualStudio.Services.Settings.SettingsApiResourceIds : object {
    public static string SettingsAreaName;
    public static string SettingEntriesResource;
    public static string SettingEntriesLocationIdString;
    public static Guid SettingEntriesLocationId;
    public static string NamedScopeSettingEntriesLocationIdString;
    public static Guid NamedScopeSettingEntriesLocationId;
    private static SettingsApiResourceIds();
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Settings.SettingsUserScope : ValueType {
    private static string c_globalMeScopeName;
    private static string c_meScopeName;
    private static string c_hostScopeName;
    public static SettingsUserScope GlobalUser;
    public static SettingsUserScope User;
    public static SettingsUserScope AllUsers;
    [CompilerGeneratedAttribute]
private Guid <UserId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsUserScoped>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsGlobalScoped>k__BackingField;
    [DataMemberAttribute]
public Guid UserId { get; private set; }
    [DataMemberAttribute]
public bool IsUserScoped { get; private set; }
    [DataMemberAttribute]
public bool IsGlobalScoped { get; private set; }
    private SettingsUserScope(bool isGlobalScoped, bool isUserScoped, Guid userId);
    private static SettingsUserScope();
    public static SettingsUserScope SpecificUser(Guid userId);
    public static SettingsUserScope Parse(string identifier);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public Guid get_UserId();
    [CompilerGeneratedAttribute]
private void set_UserId(Guid value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public bool get_IsUserScoped();
    [CompilerGeneratedAttribute]
private void set_IsUserScoped(bool value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public bool get_IsGlobalScoped();
    [CompilerGeneratedAttribute]
private void set_IsGlobalScoped(bool value);
    public virtual string ToString();
}
public class Microsoft.VisualStudio.Services.Settings.WebApi.SettingsHttpClient : VssHttpClientBase {
    public SettingsHttpClient(Uri baseUrl, VssCredentials credentials);
    public SettingsHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public SettingsHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public SettingsHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public SettingsHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    public Task`1<Dictionary`2<string, object>> GetEntriesAsync(string userScope, string key, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Settings.WebApi.SettingsHttpClient/<RemoveEntriesAsync>d__6")]
public Task RemoveEntriesAsync(string userScope, string key, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Settings.WebApi.SettingsHttpClient/<SetEntriesAsync>d__7")]
public Task SetEntriesAsync(IDictionary`2<string, object> entries, string userScope, object userState, CancellationToken cancellationToken);
    public Task`1<Dictionary`2<string, object>> GetEntriesForScopeAsync(string userScope, string scopeName, string scopeValue, string key, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Settings.WebApi.SettingsHttpClient/<RemoveEntriesForScopeAsync>d__9")]
public Task RemoveEntriesForScopeAsync(string userScope, string scopeName, string scopeValue, string key, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Settings.WebApi.SettingsHttpClient/<SetEntriesForScopeAsync>d__10")]
public Task SetEntriesForScopeAsync(IDictionary`2<string, object> entries, string userScope, string scopeName, string scopeValue, object userState, CancellationToken cancellationToken);
}
[EditorBrowsableAttribute("1")]
public interface Microsoft.VisualStudio.Services.SignalR.ISignalRObject {
}
[EditorBrowsableAttribute("1")]
public interface Microsoft.VisualStudio.Services.SignalR.ISignalRObjectContainer {
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.SignalR.SignalRObject : object {
    [CompilerGeneratedAttribute]
private string <Identifier>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [DataMemberAttribute]
public string Identifier { get; public set; }
    [DataMemberAttribute]
public string Version { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Identifier();
    [CompilerGeneratedAttribute]
public void set_Identifier(string value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.SignalR.SignalROperation : object {
    [DataMemberAttribute]
private List`1<SignalRObject> m_objects;
    public List`1<SignalRObject> Operations { get; }
    public List`1<SignalRObject> get_Operations();
}
[DataContractAttribute]
[ClientIncludeModelAttribute]
public class Microsoft.VisualStudio.Services.TenantPolicy.Client.Policy : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Properties>k__BackingField;
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public bool Value { get; public set; }
    [DataMemberAttribute]
public IDictionary`2<string, string> Properties { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public bool get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(bool value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Properties();
    [CompilerGeneratedAttribute]
public void set_Properties(IDictionary`2<string, string> value);
}
[DataContractAttribute]
[ClientIncludeModelAttribute]
public class Microsoft.VisualStudio.Services.TenantPolicy.Client.PolicyInfo : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <MoreInfoLink>k__BackingField;
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public string Description { get; public set; }
    [DataMemberAttribute]
public Uri MoreInfoLink { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public Uri get_MoreInfoLink();
    [CompilerGeneratedAttribute]
public void set_MoreInfoLink(Uri value);
}
[ResourceAreaAttribute("207403F3-B4CE-459A-B6CD-8042D9D309F0")]
public class Microsoft.VisualStudio.Services.TenantPolicy.Client.TenantPolicyHttpClient : VssHttpClientBase {
    public TenantPolicyHttpClient(Uri baseUrl, VssCredentials credentials);
    public TenantPolicyHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public TenantPolicyHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public TenantPolicyHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public TenantPolicyHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    public virtual Task`1<Policy> GetPolicyAsync(string policyName, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.TenantPolicy.Client.TenantPolicyHttpClient/<SetPolicyAsync>d__6")]
public virtual Task SetPolicyAsync(Policy policy, string policyName, object userState, CancellationToken cancellationToken);
    public virtual Task`1<Policy> GetPolicyForTenantAsync(string policyName, Guid tenantId, object userState, CancellationToken cancellationToken);
    public virtual Task`1<PolicyInfo> GetPolicyInfoAsync(string policyName, object userState, CancellationToken cancellationToken);
}
public class Microsoft.VisualStudio.Services.TenantPolicy.TenantAdminRolesNotFoundException : TenantPolicyException {
    public TenantAdminRolesNotFoundException(string message);
    public TenantAdminRolesNotFoundException(string message, Exception innerException);
    protected TenantAdminRolesNotFoundException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.TenantPolicy.TenantPolicyBadRequestException : TenantPolicyException {
    public TenantPolicyBadRequestException(string message);
    public TenantPolicyBadRequestException(string message, Exception innerException);
    protected TenantPolicyBadRequestException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.TenantPolicy.TenantPolicyException : VssServiceException {
    public TenantPolicyException(string message);
    public TenantPolicyException(string message, Exception innerException);
    protected TenantPolicyException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.TenantPolicy.TenantPolicyNotFoundException : VssServiceException {
    public TenantPolicyNotFoundException(string message);
    public TenantPolicyNotFoundException(string message, Exception innerException);
}
public class Microsoft.VisualStudio.Services.TenantPolicy.TenantPolicyPermissionValidationFailedException : TenantPolicyException {
    public TenantPolicyPermissionValidationFailedException(string message);
    public TenantPolicyPermissionValidationFailedException(string message, Exception innerException);
    protected TenantPolicyPermissionValidationFailedException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.TenantPolicy.TenantPolicyPermissionValidatorNotFoundException : TenantPolicyException {
    public TenantPolicyPermissionValidatorNotFoundException(string message);
    public TenantPolicyPermissionValidatorNotFoundException(string message, Exception innerException);
    protected TenantPolicyPermissionValidatorNotFoundException(SerializationInfo info, StreamingContext context);
}
public static class Microsoft.VisualStudio.Services.TenantPolicy.TenantPolicyResourceIds : object {
    public static string TenantPolicyArea;
    public static string AreaId;
    public static string PoliciesLocationIdString;
    public static Guid PoliciesLocationId;
    public static string PoliciesDeploymentLocationIdString;
    public static Guid PoliciesDeploymentLocationId;
    public static string PoliciesResourceName;
    public static string PoliciesDeploymentRouteName;
    public static Guid PolicyInformationLocationId;
    public static string PolicyInformationResourceName;
    private static TenantPolicyResourceIds();
}
public class Microsoft.VisualStudio.Services.TenantPolicy.TenantPolicyUpdateException : VssServiceException {
    public TenantPolicyUpdateException(string message);
    public TenantPolicyUpdateException(string message, Exception innerException);
}
[DataContractAttribute]
[NotificationEventBindingsAttribute("0", "ms.vss-sps-notifications.pat-revoked-event")]
public class Microsoft.VisualStudio.Services.TokenAdmin.Client.PatRevokedEvent : object {
    [CompilerGeneratedAttribute]
private IList`1<string> <PatNames>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AdminName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AdminEmailAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AdminEmailAddressMailTo>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccountUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ManagePatUrl>k__BackingField;
    [DataMemberAttribute]
public IList`1<string> PatNames { get; public set; }
    [DataMemberAttribute]
public string AdminName { get; public set; }
    [DataMemberAttribute]
public string AdminEmailAddress { get; public set; }
    [DataMemberAttribute]
public string AdminEmailAddressMailTo { get; public set; }
    [DataMemberAttribute]
public string AccountUrl { get; public set; }
    [DataMemberAttribute]
public string ManagePatUrl { get; public set; }
    [CompilerGeneratedAttribute]
public IList`1<string> get_PatNames();
    [CompilerGeneratedAttribute]
public void set_PatNames(IList`1<string> value);
    [CompilerGeneratedAttribute]
public string get_AdminName();
    [CompilerGeneratedAttribute]
public void set_AdminName(string value);
    [CompilerGeneratedAttribute]
public string get_AdminEmailAddress();
    [CompilerGeneratedAttribute]
public void set_AdminEmailAddress(string value);
    [CompilerGeneratedAttribute]
public string get_AdminEmailAddressMailTo();
    [CompilerGeneratedAttribute]
public void set_AdminEmailAddressMailTo(string value);
    [CompilerGeneratedAttribute]
public string get_AccountUrl();
    [CompilerGeneratedAttribute]
public void set_AccountUrl(string value);
    [CompilerGeneratedAttribute]
public string get_ManagePatUrl();
    [CompilerGeneratedAttribute]
public void set_ManagePatUrl(string value);
}
[DataContractAttribute]
[NotificationEventBindingsAttribute("0", "ms.vss-token-notifications.pat-revoked-event")]
public class Microsoft.VisualStudio.Services.TokenAdmin.Client.PatTokenRevokedEvent : object {
    [CompilerGeneratedAttribute]
private IList`1<string> <PatNames>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AdminName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AdminEmailAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AdminEmailAddressMailTo>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccountUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ManagePatUrl>k__BackingField;
    [DataMemberAttribute]
public IList`1<string> PatNames { get; public set; }
    [DataMemberAttribute]
public string AdminName { get; public set; }
    [DataMemberAttribute]
public string AdminEmailAddress { get; public set; }
    [DataMemberAttribute]
public string AdminEmailAddressMailTo { get; public set; }
    [DataMemberAttribute]
public string AccountUrl { get; public set; }
    [DataMemberAttribute]
public string ManagePatUrl { get; public set; }
    [CompilerGeneratedAttribute]
public IList`1<string> get_PatNames();
    [CompilerGeneratedAttribute]
public void set_PatNames(IList`1<string> value);
    [CompilerGeneratedAttribute]
public string get_AdminName();
    [CompilerGeneratedAttribute]
public void set_AdminName(string value);
    [CompilerGeneratedAttribute]
public string get_AdminEmailAddress();
    [CompilerGeneratedAttribute]
public void set_AdminEmailAddress(string value);
    [CompilerGeneratedAttribute]
public string get_AdminEmailAddressMailTo();
    [CompilerGeneratedAttribute]
public void set_AdminEmailAddressMailTo(string value);
    [CompilerGeneratedAttribute]
public string get_AccountUrl();
    [CompilerGeneratedAttribute]
public void set_AccountUrl(string value);
    [CompilerGeneratedAttribute]
public string get_ManagePatUrl();
    [CompilerGeneratedAttribute]
public void set_ManagePatUrl(string value);
}
[DataContractAttribute]
[NotificationEventBindingsAttribute("0", "ms.vss-sps-notifications.ssh-revoked-event")]
public class Microsoft.VisualStudio.Services.TokenAdmin.Client.SshRevokedEvent : object {
    [CompilerGeneratedAttribute]
private IList`1<string> <SshNames>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AdminName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AdminEmailAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AdminEmailAddressMailTo>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccountUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ManageSshUrl>k__BackingField;
    [DataMemberAttribute]
public IList`1<string> SshNames { get; public set; }
    [DataMemberAttribute]
public string AdminName { get; public set; }
    [DataMemberAttribute]
public string AdminEmailAddress { get; public set; }
    [DataMemberAttribute]
public string AdminEmailAddressMailTo { get; public set; }
    [DataMemberAttribute]
public string AccountUrl { get; public set; }
    [DataMemberAttribute]
public string ManageSshUrl { get; public set; }
    [CompilerGeneratedAttribute]
public IList`1<string> get_SshNames();
    [CompilerGeneratedAttribute]
public void set_SshNames(IList`1<string> value);
    [CompilerGeneratedAttribute]
public string get_AdminName();
    [CompilerGeneratedAttribute]
public void set_AdminName(string value);
    [CompilerGeneratedAttribute]
public string get_AdminEmailAddress();
    [CompilerGeneratedAttribute]
public void set_AdminEmailAddress(string value);
    [CompilerGeneratedAttribute]
public string get_AdminEmailAddressMailTo();
    [CompilerGeneratedAttribute]
public void set_AdminEmailAddressMailTo(string value);
    [CompilerGeneratedAttribute]
public string get_AccountUrl();
    [CompilerGeneratedAttribute]
public void set_AccountUrl(string value);
    [CompilerGeneratedAttribute]
public string get_ManageSshUrl();
    [CompilerGeneratedAttribute]
public void set_ManageSshUrl(string value);
}
[DataContractAttribute]
[NotificationEventBindingsAttribute("0", "ms.vss-token-notifications.ssh-revoked-event")]
public class Microsoft.VisualStudio.Services.TokenAdmin.Client.SshTokenRevokedEvent : object {
    [CompilerGeneratedAttribute]
private IList`1<string> <SshNames>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AdminName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AdminEmailAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AdminEmailAddressMailTo>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccountUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ManageSshUrl>k__BackingField;
    [DataMemberAttribute]
public IList`1<string> SshNames { get; public set; }
    [DataMemberAttribute]
public string AdminName { get; public set; }
    [DataMemberAttribute]
public string AdminEmailAddress { get; public set; }
    [DataMemberAttribute]
public string AdminEmailAddressMailTo { get; public set; }
    [DataMemberAttribute]
public string AccountUrl { get; public set; }
    [DataMemberAttribute]
public string ManageSshUrl { get; public set; }
    [CompilerGeneratedAttribute]
public IList`1<string> get_SshNames();
    [CompilerGeneratedAttribute]
public void set_SshNames(IList`1<string> value);
    [CompilerGeneratedAttribute]
public string get_AdminName();
    [CompilerGeneratedAttribute]
public void set_AdminName(string value);
    [CompilerGeneratedAttribute]
public string get_AdminEmailAddress();
    [CompilerGeneratedAttribute]
public void set_AdminEmailAddress(string value);
    [CompilerGeneratedAttribute]
public string get_AdminEmailAddressMailTo();
    [CompilerGeneratedAttribute]
public void set_AdminEmailAddressMailTo(string value);
    [CompilerGeneratedAttribute]
public string get_AccountUrl();
    [CompilerGeneratedAttribute]
public void set_AccountUrl(string value);
    [CompilerGeneratedAttribute]
public string get_ManageSshUrl();
    [CompilerGeneratedAttribute]
public void set_ManageSshUrl(string value);
}
public class Microsoft.VisualStudio.Services.TokenAdmin.Client.TokenAdminBadRequestException : TokenAdminException {
    public TokenAdminBadRequestException(string message);
    public TokenAdminBadRequestException(string message, Exception innerException);
    protected TokenAdminBadRequestException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.TokenAdmin.Client.TokenAdminException : VssServiceException {
    public TokenAdminException(string message);
    public TokenAdminException(string message, Exception innerException);
    protected TokenAdminException(SerializationInfo info, StreamingContext context);
}
[ResourceAreaAttribute("af68438b-ed04-4407-9eb6-f1dbae3f922e")]
public class Microsoft.VisualStudio.Services.TokenAdmin.Client.TokenAdminHttpClient : VssHttpClientBase {
    public TokenAdminHttpClient(Uri baseUrl, VssCredentials credentials);
    public TokenAdminHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public TokenAdminHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public TokenAdminHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public TokenAdminHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    public Task`1<TokenAdminPagedSessionTokens> ListPersonalAccessTokensAsync(SubjectDescriptor subjectDescriptor, Nullable`1<int> pageSize, string continuationToken, Nullable`1<bool> isPublic, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.TokenAdmin.Client.TokenAdminHttpClient/<CreateRevocationRuleAsync>d__6")]
public Task CreateRevocationRuleAsync(TokenAdminRevocationRule revocationRule, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.TokenAdmin.Client.TokenAdminHttpClient/<RevokeAuthorizationsAsync>d__7")]
public Task RevokeAuthorizationsAsync(IEnumerable`1<TokenAdminRevocation> revocations, Nullable`1<bool> isPublic, object userState, CancellationToken cancellationToken);
    [EditorBrowsableAttribute("1")]
public Task`1<SessionTokenResult> GetPersonalAccessTokenAsync(string accessTokenKey, bool isPublic, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.TokenAdmin.Client.TokenAdminHttpClient/<RevokePersonalAccessTokenAsync>d__9")]
[EditorBrowsableAttribute("1")]
public Task RevokePersonalAccessTokenAsync(string accessTokenKey, bool isPublic, object userState, CancellationToken cancellationToken);
}
public class Microsoft.VisualStudio.Services.TokenAdmin.Client.TokenAdminInvalidPageSizeException : TokenAdminException {
    public TokenAdminInvalidPageSizeException(string message);
    public TokenAdminInvalidPageSizeException(string message, Exception innerException);
    protected TokenAdminInvalidPageSizeException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.TokenAdmin.Client.TokenAdminNotFoundxception : TokenAdminException {
    public TokenAdminNotFoundxception(string message);
    public TokenAdminNotFoundxception(string message, Exception innerException);
    protected TokenAdminNotFoundxception(SerializationInfo info, StreamingContext context);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.TokenAdmin.Client.TokenAdminPagedSessionTokens : object {
    [CompilerGeneratedAttribute]
private IEnumerable`1<SessionToken> <SessionTokens>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Guid> <ContinuationToken>k__BackingField;
    [DataMemberAttribute]
public IEnumerable`1<SessionToken> SessionTokens { get; public set; }
    [DataMemberAttribute]
public Nullable`1<Guid> ContinuationToken { get; public set; }
    [CompilerGeneratedAttribute]
public IEnumerable`1<SessionToken> get_SessionTokens();
    [CompilerGeneratedAttribute]
public void set_SessionTokens(IEnumerable`1<SessionToken> value);
    [CompilerGeneratedAttribute]
public Nullable`1<Guid> get_ContinuationToken();
    [CompilerGeneratedAttribute]
public void set_ContinuationToken(Nullable`1<Guid> value);
}
public static class Microsoft.VisualStudio.Services.TokenAdmin.Client.TokenAdminResourceIds : object {
    public static string AreaName;
    public static string AreaId;
    public static string PersonalAccessTokensResource;
    public static Guid PersonalAccessTokensLocationId;
    public static string RevocationsResource;
    public static Guid RevocationsLocationId;
    public static string RevocationRulesResource;
    public static Guid RevocationRulesLocationId;
    public static string TokenGetPersonalAccessToken;
    public static Guid TokenGetPersonalAccessTokenId;
    public static string TokenRevokePersonalAccessToken;
    public static Guid TokenRevokePersonalAccessTokenId;
    private static TokenAdminResourceIds();
}
public class Microsoft.VisualStudio.Services.TokenAdmin.Client.TokenAdminRevocation : object {
    [CompilerGeneratedAttribute]
private Guid <AuthorizationId>k__BackingField;
    public Guid AuthorizationId { get; public set; }
    [CompilerGeneratedAttribute]
public Guid get_AuthorizationId();
    [CompilerGeneratedAttribute]
public void set_AuthorizationId(Guid value);
}
public class Microsoft.VisualStudio.Services.TokenAdmin.Client.TokenAdminRevocationRule : object {
    [CompilerGeneratedAttribute]
private string <Scopes>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <CreatedBefore>k__BackingField;
    public string Scopes { get; public set; }
    public Nullable`1<DateTime> CreatedBefore { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Scopes();
    [CompilerGeneratedAttribute]
public void set_Scopes(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_CreatedBefore();
    [CompilerGeneratedAttribute]
public void set_CreatedBefore(Nullable`1<DateTime> value);
}
public class Microsoft.VisualStudio.Services.TokenAdmin.Client.TokenAdminUnauthorizedException : TokenAdminException {
    public TokenAdminUnauthorizedException(string message);
    public TokenAdminUnauthorizedException(string message, Exception innerException);
    protected TokenAdminUnauthorizedException(SerializationInfo info, StreamingContext context);
}
public static class Microsoft.VisualStudio.Services.TokenRevocation.TokenRevocationResourceIds : object {
    public static string AreaName;
    public static string AreaId;
    public static string RulesResourceName;
    public static Guid RulesLocationId;
    private static TokenRevocationResourceIds();
}
public static class Microsoft.VisualStudio.Services.Tokens.DelegatedAuthResourceIds : object {
    public static string AreaName;
    public static string AreaId;
    public static string AuthorizationResource;
    public static Guid Authorization;
    public static string HostAuthorizationResource;
    public static Guid HostAuthorizeId;
    public static string RegistrationResource;
    public static Guid Registration;
    public static string RegistrationSecretResource;
    public static Guid RegistrationSecret;
    private static DelegatedAuthResourceIds();
}
[DataContractAttribute]
[NotificationEventBindingsAttribute("0", "ms.vss-token-notifications.expired-token-event")]
public class Microsoft.VisualStudio.Services.Tokens.ExpiredTokenEvent : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scopes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Expiration>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccountUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OrganizationName>k__BackingField;
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public string Scopes { get; public set; }
    [DataMemberAttribute]
public string Expiration { get; public set; }
    [DataMemberAttribute]
public string AccountUrl { get; public set; }
    [DataMemberAttribute]
public string OrganizationName { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Scopes();
    [CompilerGeneratedAttribute]
public void set_Scopes(string value);
    [CompilerGeneratedAttribute]
public string get_Expiration();
    [CompilerGeneratedAttribute]
public void set_Expiration(string value);
    [CompilerGeneratedAttribute]
public string get_AccountUrl();
    [CompilerGeneratedAttribute]
public void set_AccountUrl(string value);
    [CompilerGeneratedAttribute]
public string get_OrganizationName();
    [CompilerGeneratedAttribute]
public void set_OrganizationName(string value);
}
[DataContractAttribute]
[NotificationEventBindingsAttribute("0", "ms.vss-token-notifications.expiring-token-event")]
public class Microsoft.VisualStudio.Services.Tokens.ExpiringTokenEvent : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scopes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Expiration>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccountUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OrganizationName>k__BackingField;
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public string Scopes { get; public set; }
    [DataMemberAttribute]
public string Expiration { get; public set; }
    [DataMemberAttribute]
public string AccountUrl { get; public set; }
    [DataMemberAttribute]
public string OrganizationName { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Scopes();
    [CompilerGeneratedAttribute]
public void set_Scopes(string value);
    [CompilerGeneratedAttribute]
public string get_Expiration();
    [CompilerGeneratedAttribute]
public void set_Expiration(string value);
    [CompilerGeneratedAttribute]
public string get_AccountUrl();
    [CompilerGeneratedAttribute]
public void set_AccountUrl(string value);
    [CompilerGeneratedAttribute]
public string get_OrganizationName();
    [CompilerGeneratedAttribute]
public void set_OrganizationName(string value);
}
public class Microsoft.VisualStudio.Services.Tokens.GrantTokenSecretPair : object {
    [CompilerGeneratedAttribute]
private string <GrantToken>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientSecret>k__BackingField;
    public string GrantToken { get; public set; }
    public string ClientSecret { get; public set; }
    [CompilerGeneratedAttribute]
public string get_GrantToken();
    [CompilerGeneratedAttribute]
public void set_GrantToken(string value);
    [CompilerGeneratedAttribute]
public string get_ClientSecret();
    [CompilerGeneratedAttribute]
public void set_ClientSecret(string value);
}
[DataContractAttribute]
[NotificationEventBindingsAttribute("0", "ms.vss-token-notifications.pat-added-event")]
public class Microsoft.VisualStudio.Services.Tokens.PATAddedEvent : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scopes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Expiration>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccountUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IPAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserAgent>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AdditionalInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OrganizationName>k__BackingField;
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public string Scopes { get; public set; }
    [DataMemberAttribute]
public string Expiration { get; public set; }
    [DataMemberAttribute]
public string AccountUrl { get; public set; }
    [DataMemberAttribute]
public string IPAddress { get; public set; }
    [DataMemberAttribute]
public string UserAgent { get; public set; }
    [DataMemberAttribute]
public string AdditionalInfo { get; public set; }
    [DataMemberAttribute]
public string OrganizationName { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Scopes();
    [CompilerGeneratedAttribute]
public void set_Scopes(string value);
    [CompilerGeneratedAttribute]
public string get_Expiration();
    [CompilerGeneratedAttribute]
public void set_Expiration(string value);
    [CompilerGeneratedAttribute]
public string get_AccountUrl();
    [CompilerGeneratedAttribute]
public void set_AccountUrl(string value);
    [CompilerGeneratedAttribute]
public string get_IPAddress();
    [CompilerGeneratedAttribute]
public void set_IPAddress(string value);
    [CompilerGeneratedAttribute]
public string get_UserAgent();
    [CompilerGeneratedAttribute]
public void set_UserAgent(string value);
    [CompilerGeneratedAttribute]
public string get_AdditionalInfo();
    [CompilerGeneratedAttribute]
public void set_AdditionalInfo(string value);
    [CompilerGeneratedAttribute]
public string get_OrganizationName();
    [CompilerGeneratedAttribute]
public void set_OrganizationName(string value);
}
public static class Microsoft.VisualStudio.Services.Tokens.PropertyCacheResourceIds : object {
    public static string AreaName;
    public static string AreaId;
    public static string PropertyCacheResource;
    public static Guid PropertyCache;
    private static PropertyCacheResourceIds();
}
public static class Microsoft.VisualStudio.Services.Tokens.PublicPatTokenResourceIds : object {
    public static string AreaName;
    public static string AreaId;
    public static string PatResource;
    public static Guid Pat;
    private static PublicPatTokenResourceIds();
}
[DataContractAttribute]
[NotificationEventBindingsAttribute("0", "ms.vss-token-notifications.registration-updated-event")]
public class Microsoft.VisualStudio.Services.Tokens.RegistrationUpdatedEvent : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OldName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Scopes>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <OldScopes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IPAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserAgent>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OrganizationName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OldOrganizationName>k__BackingField;
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public string OldName { get; public set; }
    [DataMemberAttribute]
public string ClientId { get; public set; }
    [DataMemberAttribute]
public IList`1<string> Scopes { get; public set; }
    [DataMemberAttribute]
public IList`1<string> OldScopes { get; public set; }
    [DataMemberAttribute]
public string IPAddress { get; public set; }
    [DataMemberAttribute]
public string UserAgent { get; public set; }
    [DataMemberAttribute]
public string OrganizationName { get; public set; }
    [DataMemberAttribute]
public string OldOrganizationName { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_OldName();
    [CompilerGeneratedAttribute]
public void set_OldName(string value);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Scopes();
    [CompilerGeneratedAttribute]
public void set_Scopes(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_OldScopes();
    [CompilerGeneratedAttribute]
public void set_OldScopes(IList`1<string> value);
    [CompilerGeneratedAttribute]
public string get_IPAddress();
    [CompilerGeneratedAttribute]
public void set_IPAddress(string value);
    [CompilerGeneratedAttribute]
public string get_UserAgent();
    [CompilerGeneratedAttribute]
public void set_UserAgent(string value);
    [CompilerGeneratedAttribute]
public string get_OrganizationName();
    [CompilerGeneratedAttribute]
public void set_OrganizationName(string value);
    [CompilerGeneratedAttribute]
public string get_OldOrganizationName();
    [CompilerGeneratedAttribute]
public void set_OldOrganizationName(string value);
}
[DataContractAttribute]
[NotificationEventBindingsAttribute("0", "ms.vss-token-notifications.ssh-key-added-event")]
public class Microsoft.VisualStudio.Services.Tokens.SshKeyAddedEvent : object {
    [CompilerGeneratedAttribute]
private string <KeyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <KeySHA>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccountUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IPAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OrganizationName>k__BackingField;
    [DataMemberAttribute]
public string KeyName { get; public set; }
    [DataMemberAttribute]
public string KeySHA { get; public set; }
    [DataMemberAttribute]
public string AccountUrl { get; public set; }
    [DataMemberAttribute]
public string IPAddress { get; public set; }
    [DataMemberAttribute]
public string OrganizationName { get; public set; }
    [CompilerGeneratedAttribute]
public string get_KeyName();
    [CompilerGeneratedAttribute]
public void set_KeyName(string value);
    [CompilerGeneratedAttribute]
public string get_KeySHA();
    [CompilerGeneratedAttribute]
public void set_KeySHA(string value);
    [CompilerGeneratedAttribute]
public string get_AccountUrl();
    [CompilerGeneratedAttribute]
public void set_AccountUrl(string value);
    [CompilerGeneratedAttribute]
public string get_IPAddress();
    [CompilerGeneratedAttribute]
public void set_IPAddress(string value);
    [CompilerGeneratedAttribute]
public string get_OrganizationName();
    [CompilerGeneratedAttribute]
public void set_OrganizationName(string value);
}
[ResourceAreaAttribute("95935461-9E54-44BD-B9FB-04F4DD05D640")]
public class Microsoft.VisualStudio.Services.Tokens.TokenAdmin.Client.TokenAdministrationHttpClient : VssHttpClientBase {
    public TokenAdministrationHttpClient(Uri baseUrl, VssCredentials credentials);
    public TokenAdministrationHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public TokenAdministrationHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public TokenAdministrationHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public TokenAdministrationHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    [EditorBrowsableAttribute("1")]
public Task`1<SessionTokenResult> GetPersonalAccessTokenAsync(string accessTokenKey, bool isPublic, object userState, CancellationToken cancellationToken);
    public Task`1<List`1<Guid>> ListIdentitiesWithGlobalAccessTokensAsync(IEnumerable`1<TokenAdminRevocation> revocations, Nullable`1<bool> isPublic, object userState, CancellationToken cancellationToken);
    public Task`1<TokenAdminPagedSessionTokens> ListPersonalAccessTokensAsync(IEnumerable`1<string> audience, SubjectDescriptor subjectDescriptor, Nullable`1<int> pageSize, string continuationToken, Nullable`1<bool> isPublic, object userState, CancellationToken cancellationToken);
    public Task`1<List`1<SessionToken>> RevokeAuthorizationsAsync(TokenAdministrationRevocation revocations, Guid hostId, Nullable`1<bool> isPublic, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Tokens.TokenAdmin.Client.TokenAdministrationHttpClient/<RevokePersonalAccessTokenAsync>d__9")]
[EditorBrowsableAttribute("1")]
public Task RevokePersonalAccessTokenAsync(string accessTokenKey, bool isPublic, object userState, CancellationToken cancellationToken);
}
public static class Microsoft.VisualStudio.Services.Tokens.TokenAdmin.Client.TokenAdministrationResourceIds : object {
    public static string TokenAreaName;
    public static string TokenAreaId;
    public static string TokenPersonalAccessTokensResource;
    public static Guid TokenPersonalAccessTokensLocationId;
    public static string TokenRevocationsResource;
    public static Guid TokenRevocationsLocationId;
    public static string TokenListGlobalIdentities;
    public static Guid TokenListGlobalIdentitiesId;
    public static string TokenGetPersonalAccessToken;
    public static Guid TokenGetPersonalAccessTokenId;
    public static string TokenRevokePersonalAccessToken;
    public static Guid TokenRevokePersonalAccessTokenId;
    private static TokenAdministrationResourceIds();
}
public class Microsoft.VisualStudio.Services.Tokens.TokenAdmin.TokenAdministrationRevocation : object {
    [CompilerGeneratedAttribute]
private IEnumerable`1<Guid> <AuthorizationIds>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <Audience>k__BackingField;
    public IEnumerable`1<Guid> AuthorizationIds { get; public set; }
    public IEnumerable`1<string> Audience { get; public set; }
    [CompilerGeneratedAttribute]
public IEnumerable`1<Guid> get_AuthorizationIds();
    [CompilerGeneratedAttribute]
public void set_AuthorizationIds(IEnumerable`1<Guid> value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_Audience();
    [CompilerGeneratedAttribute]
public void set_Audience(IEnumerable`1<string> value);
}
public static class Microsoft.VisualStudio.Services.Tokens.TokenAuthResourceIds : object {
    public static string AreaName;
    public static string AreaId;
    public static string AuthorizationResource;
    public static Guid Authorization;
    public static string HostAuthorizationResource;
    public static Guid HostAuthorizeId;
    public static string RegistrationResource;
    public static Guid Registration;
    public static string RegistrationSecretResource;
    public static Guid RegistrationSecret;
    private static TokenAuthResourceIds();
}
public static class Microsoft.VisualStudio.Services.Tokens.TokenIssueResourceIds : object {
    public static string AreaName;
    public static string AreaId;
    public static string AccessTokenResource;
    public static Guid AccessToken;
    public static string SessionTokenResource;
    public static Guid SessionToken;
    public static string AadUserTokenResource;
    public static Guid AadUserToken;
    public static string AadAppTokenResource;
    public static Guid AadAppToken;
    public static string AppSessionTokenResource;
    public static Guid AppSessionToken;
    public static string AppTokenPairResource;
    public static Guid AppTokenPair;
    private static TokenIssueResourceIds();
}
public static class Microsoft.VisualStudio.Services.Tokens.TokenLeakedPatResourceIds : object {
    public static string AreaName;
    public static string AreaId;
    public static string PatsResource;
    public static Guid Pats;
    private static TokenLeakedPatResourceIds();
}
public static class Microsoft.VisualStudio.Services.Tokens.TokenResourceIds : object {
    public static string AreaName;
    public static string AreaId;
    public static string AccessTokenResource;
    public static Guid AccessToken;
    public static string SessionTokenResource;
    public static Guid SessionToken;
    public static string AadUserTokenResource;
    public static Guid AadUserToken;
    public static string AadAppTokenResource;
    public static Guid AadAppToken;
    public static string AppSessionTokenResource;
    public static Guid AppSessionToken;
    public static string AppTokenPairResource;
    public static Guid AppTokenPair;
    private static TokenResourceIds();
}
public static class Microsoft.VisualStudio.Services.Tokens.TokenTokenExpirationResourceIds : object {
    public static string AreaName;
    public static string AreaId;
    public static string TokenExpirationResource;
    public static Guid TokenExpiration;
    private static TokenTokenExpirationResourceIds();
}
[ResourceAreaAttribute("c5a2d98b-985c-432e-825e-3c6971edae87")]
public class Microsoft.VisualStudio.Services.Tokens.WebApi.TokenAuthHttpClient : VssHttpClientBase {
    public TokenAuthHttpClient(Uri baseUrl, VssCredentials credentials);
    public TokenAuthHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public TokenAuthHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public TokenAuthHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public TokenAuthHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    public Task`1<AuthorizationDecision> AuthorizeAsync(Guid userId, ResponseType responseType, Guid clientId, Uri redirectUri, string scopes, Nullable`1<Guid> authorizationId, object userState, CancellationToken cancellationToken);
    public Task`1<AuthorizationDecision> AuthorizeAsync(ResponseType responseType, Guid clientId, Uri redirectUri, string scopes, Nullable`1<Guid> authorizationId, object userState, CancellationToken cancellationToken);
    public Task`1<List`1<AuthorizationDetails>> GetAuthorizationsAsync(Nullable`1<Guid> userId, object userState, CancellationToken cancellationToken);
    public Task`1<AuthorizationDescription> InitiateAuthorizationAsync(Guid userId, ResponseType responseType, Guid clientId, Uri redirectUri, string scopes, object userState, CancellationToken cancellationToken);
    public Task`1<AuthorizationDescription> InitiateAuthorizationAsync(ResponseType responseType, Guid clientId, Uri redirectUri, string scopes, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Tokens.WebApi.TokenAuthHttpClient/<RevokeAuthorizationAsync>d__10")]
public Task RevokeAuthorizationAsync(Guid authorizationId, Nullable`1<Guid> userId, object userState, CancellationToken cancellationToken);
    public Task`1<HostAuthorizationDecision> AuthorizeHostAsync(Guid clientId, Guid hostId, Nullable`1<Guid> newId, object userState, CancellationToken cancellationToken);
    public Task`1<List`1<HostAuthorization>> GetHostAuthorizationsAsync(Guid hostId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Tokens.WebApi.TokenAuthHttpClient/<RevokeHostAuthorizationAsync>d__13")]
public Task RevokeHostAuthorizationAsync(Guid clientId, Nullable`1<Guid> hostId, object userState, CancellationToken cancellationToken);
    public Task`1<Registration> CreateRegistrationAsync(Registration registration, object userState, CancellationToken cancellationToken);
    public Task`1<Registration> CreateRegistrationAsync(Registration registration, bool includeSecret, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Tokens.WebApi.TokenAuthHttpClient/<DeleteRegistrationAsync>d__16")]
public Task DeleteRegistrationAsync(Guid registrationId, object userState, CancellationToken cancellationToken);
    public Task`1<Registration> GetRegistrationAsync(Guid registrationId, object userState, CancellationToken cancellationToken);
    public Task`1<Registration> GetRegistrationAsync(Guid registrationId, bool includeSecret, object userState, CancellationToken cancellationToken);
    public Task`1<List`1<Registration>> GetRegistrationsAsync(object userState, CancellationToken cancellationToken);
    public Task`1<Registration> UpdateRegistrationAsync(Registration registration, object userState, CancellationToken cancellationToken);
    public Task`1<Registration> UpdateRegistrationAsync(Registration registration, bool includeSecret, object userState, CancellationToken cancellationToken);
    public Task`1<JsonWebToken> GetSecretAsync(Guid registrationId, object userState, CancellationToken cancellationToken);
    public Task`1<Registration> RotateSecretAsync(Guid registrationId, object userState, CancellationToken cancellationToken);
}
[ResourceAreaAttribute("6b10046c-829d-44d2-8a1d-02f88f4ff032")]
public class Microsoft.VisualStudio.Services.Tokens.WebApi.TokenExpirationHttpClient : VssHttpClientBase {
    public TokenExpirationHttpClient(Uri baseUrl, VssCredentials credentials);
    public TokenExpirationHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public TokenExpirationHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public TokenExpirationHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public TokenExpirationHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    public Task`1<List`1<ExpiringToken>> GetSessionTokensAsync(DateTime setToExpireOn, object userState, CancellationToken cancellationToken);
}
[ResourceAreaAttribute("6b10046c-829d-44d2-8a1d-02f88f4ff032")]
public class Microsoft.VisualStudio.Services.Tokens.WebApi.TokenIssueHttpClient : VssHttpClientBase {
    public TokenIssueHttpClient(Uri baseUrl, VssCredentials credentials);
    public TokenIssueHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public TokenIssueHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public TokenIssueHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public TokenIssueHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    public Task`1<AccessToken> ExchangeAccessTokenKeyAsync(string accessTokenKey, Nullable`1<bool> isPublic, object userState, CancellationToken cancellationToken);
    public Task`1<AppSessionTokenResult> IssueAppSessionTokenAsync(SubjectDescriptor subjectDescriptor, Guid clientId, Nullable`1<Guid> authorizationId, object userState, CancellationToken cancellationToken);
    public Task`1<AccessTokenResult> ExchangeAppTokenAsync(AppTokenSecretPair appInfo, Nullable`1<Guid> accessId, object userState, CancellationToken cancellationToken);
    public Task`1<SessionToken> CreateSessionTokenAsync(SessionToken sessionToken, Guid hostId, Guid orgHostId, Guid deploymentHostId, Nullable`1<SessionTokenType> tokenType, Nullable`1<bool> isPublic, Nullable`1<bool> isRequestedByTfsPatWebUI, Nullable`1<bool> isImpersonating, string secretToken, Nullable`1<Guid> requestedById, object userState, CancellationToken cancellationToken);
    public Task`1<SessionToken> GetSessionTokenAsync(Guid authorizationId, Nullable`1<bool> isPublic, object userState, CancellationToken cancellationToken);
    public Task`1<List`1<SessionToken>> GetSessionTokensAsync(Nullable`1<bool> isPublic, Nullable`1<bool> includePublicData, object userState, CancellationToken cancellationToken);
    public Task`1<PagedSessionTokens> GetSessionTokensPageAsync(DisplayFilterOptions displayFilterOption, CreatedByOptions createdByOption, SortByOptions sortByOption, bool isSortAscending, int startRowNumber, int pageSize, string pageRequestTimeStamp, Nullable`1<bool> isPublic, Nullable`1<bool> includePublicData, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Tokens.WebApi.TokenIssueHttpClient/<RemovePublicKeyAsync>d__12")]
public Task RemovePublicKeyAsync(SshPublicKey publicData, bool remove, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Tokens.WebApi.TokenIssueHttpClient/<RevokeAllSessionTokensOfUserAsync>d__13")]
public Task RevokeAllSessionTokensOfUserAsync(object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Tokens.WebApi.TokenIssueHttpClient/<RevokeSessionTokenAsync>d__14")]
public Task RevokeSessionTokenAsync(Guid authorizationId, Nullable`1<bool> isPublic, object userState, CancellationToken cancellationToken);
    public Task`1<SessionToken> UpdateSessionTokenAsync(Guid authorizationId, SessionToken sessionToken, Nullable`1<SessionTokenType> tokenType, Nullable`1<bool> isPublic, Nullable`1<bool> isRequestedByTfsPatWebUI, object userState, CancellationToken cancellationToken);
}
[ResourceAreaAttribute("c5a2d98b-985c-432e-825e-3c6971edae87")]
public class Microsoft.VisualStudio.Services.Tokens.WebApi.TokenOauth2HttpClient : VssHttpClientBase {
    public TokenOauth2HttpClient(Uri baseUrl, VssCredentials credentials);
    public TokenOauth2HttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public TokenOauth2HttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public TokenOauth2HttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public TokenOauth2HttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    public Task`1<AccessTokenResult> IssueApplicationTokenAsync(string clientSecret, Guid registrationId, Guid hostId, Nullable`1<Guid> tenantId, string requestedScopes, object userState, CancellationToken cancellationToken);
    public Task`1<AccessTokenResult> IssueTokenAsync(GrantTokenSecretPair tokenSecretPair, GrantType grantType, Guid hostId, Guid orgHostId, Uri audience, Uri redirectUri, Nullable`1<Guid> accessId, object userState, CancellationToken cancellationToken);
}
[ResourceAreaAttribute("{f189ca86-04a2-413c-81a0-abdbd7c472da}")]
public class Microsoft.VisualStudio.Services.TokenSigningKeyLifecycle.Client.TokenSigningKeyHttpClient : VssHttpClientBase {
    private static Dictionary`2<string, Type> s_translatedExceptions;
    private static ApiResourceVersion s_currentApiVersion;
    protected IDictionary`2<string, Type> TranslatedExceptions { get; }
    private static TokenSigningKeyHttpClient();
    public TokenSigningKeyHttpClient(Uri baseUrl, VssCredentials credentials);
    public TokenSigningKeyHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public TokenSigningKeyHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public TokenSigningKeyHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public TokenSigningKeyHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.TokenSigningKeyLifecycle.Client.TokenSigningKeyHttpClient/<GetSigningKeys>d__6")]
public Task`1<TokenSigningKey> GetSigningKeys(string signingKeyNamespaceName, int keyId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.TokenSigningKeyLifecycle.Client.TokenSigningKeyHttpClient/<GetNamespace>d__7")]
public Task`1<TokenSigningKeyNamespace> GetNamespace(string signingKeyNamespaceName, object userState, CancellationToken cancellationToken);
    protected virtual IDictionary`2<string, Type> get_TranslatedExceptions();
}
public class Microsoft.VisualStudio.Services.TokenSigningKeyLifecycle.TokenSigningKey : object {
    [CompilerGeneratedAttribute]
private int <KeyId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SigningKeyNamespace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <KeyData>k__BackingField;
    public int KeyId { get; public set; }
    public string SigningKeyNamespace { get; public set; }
    public string KeyData { get; public set; }
    [CompilerGeneratedAttribute]
public int get_KeyId();
    [CompilerGeneratedAttribute]
public void set_KeyId(int value);
    [CompilerGeneratedAttribute]
public string get_SigningKeyNamespace();
    [CompilerGeneratedAttribute]
public void set_SigningKeyNamespace(string value);
    [CompilerGeneratedAttribute]
public string get_KeyData();
    [CompilerGeneratedAttribute]
public void set_KeyData(string value);
}
public static class Microsoft.VisualStudio.Services.TokenSigningKeyLifecycle.TokenSigningKeyLifecycleResourceIds : object {
    public static string AreaName;
    public static string AreaId;
    public static string SigningKeysResourceName;
    public static Guid SigningKeysLocationId;
    public static string NamespaceResourceName;
    public static Guid NamespaceLocationId;
    private static TokenSigningKeyLifecycleResourceIds();
}
public class Microsoft.VisualStudio.Services.TokenSigningKeyLifecycle.TokenSigningKeyMetadata : object {
    [CompilerGeneratedAttribute]
private int <KeyId>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <ValidFrom>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <SigningValidTo>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <ValidationValidTo>k__BackingField;
    public int KeyId { get; public set; }
    public DateTimeOffset ValidFrom { get; public set; }
    public DateTimeOffset SigningValidTo { get; public set; }
    public DateTimeOffset ValidationValidTo { get; public set; }
    [CompilerGeneratedAttribute]
public int get_KeyId();
    [CompilerGeneratedAttribute]
public void set_KeyId(int value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_ValidFrom();
    [CompilerGeneratedAttribute]
public void set_ValidFrom(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_SigningValidTo();
    [CompilerGeneratedAttribute]
public void set_SigningValidTo(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_ValidationValidTo();
    [CompilerGeneratedAttribute]
public void set_ValidationValidTo(DateTimeOffset value);
}
public class Microsoft.VisualStudio.Services.TokenSigningKeyLifecycle.TokenSigningKeyNamespace : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private int <SigningKeyBatchSize>k__BackingField;
    [CompilerGeneratedAttribute]
private int <SigningLifetimeInDays>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ValidationLifetimeInDays>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<int> <SigningKeyIds>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<int, TokenSigningKeyMetadata> <ValidationKeys>k__BackingField;
    public string Name { get; public set; }
    public int SigningKeyBatchSize { get; public set; }
    public int SigningLifetimeInDays { get; public set; }
    public int ValidationLifetimeInDays { get; public set; }
    public IReadOnlyList`1<int> SigningKeyIds { get; public set; }
    public IReadOnlyDictionary`2<int, TokenSigningKeyMetadata> ValidationKeys { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public int get_SigningKeyBatchSize();
    [CompilerGeneratedAttribute]
public void set_SigningKeyBatchSize(int value);
    [CompilerGeneratedAttribute]
public int get_SigningLifetimeInDays();
    [CompilerGeneratedAttribute]
public void set_SigningLifetimeInDays(int value);
    [CompilerGeneratedAttribute]
public int get_ValidationLifetimeInDays();
    [CompilerGeneratedAttribute]
public void set_ValidationLifetimeInDays(int value);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<int> get_SigningKeyIds();
    [CompilerGeneratedAttribute]
public void set_SigningKeyIds(IReadOnlyList`1<int> value);
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<int, TokenSigningKeyMetadata> get_ValidationKeys();
    [CompilerGeneratedAttribute]
public void set_ValidationKeys(IReadOnlyDictionary`2<int, TokenSigningKeyMetadata> value);
}
public static class Microsoft.VisualStudio.Services.Tracing.TracingResourceIds : object {
    public static string AreaName;
    public static string AreaId;
    public static string FiltersResourceName;
    public static Guid FiltersLocationId;
    private static TracingResourceIds();
}
public class Microsoft.VisualStudio.Services.Tracing.WebApi.TracingHttpClient : VssHttpClientBase {
    public TracingHttpClient(Uri baseUrl, VssCredentials credentials);
    public TracingHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public TracingHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public TracingHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public TracingHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    public Task`1<TraceFilter> AddTraceFilterAsync(TraceFilter traceFilter, object userState, CancellationToken cancellationToken);
    public Task`1<TraceFilter> GetTraceFilterAsync(Guid traceId, object userState, CancellationToken cancellationToken);
    public Task`1<List`1<TraceFilter>> GetTraceFiltersAsync(Nullable`1<Guid> ownerId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Tracing.WebApi.TracingHttpClient/<RemoveTraceFilterAsync>d__8")]
public Task RemoveTraceFilterAsync(Guid traceId, object userState, CancellationToken cancellationToken);
}
[ResourceAreaAttribute("B2F5FAA8-CAAF-436F-B40C-FC45778E174D")]
public abstract class Microsoft.VisualStudio.Services.UserAccountMapping.Client.UserAccountMappingHttpClientBase : VssHttpClientBase {
    public UserAccountMappingHttpClientBase(Uri baseUrl, VssCredentials credentials);
    public UserAccountMappingHttpClientBase(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public UserAccountMappingHttpClientBase(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public UserAccountMappingHttpClientBase(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public UserAccountMappingHttpClientBase(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.UserAccountMapping.Client.UserAccountMappingHttpClientBase/<ActivateUserAccountMappingAsync>d__5")]
protected virtual Task ActivateUserAccountMappingAsync(string descriptor, Guid accountId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.UserAccountMapping.Client.UserAccountMappingHttpClientBase/<ActivateUserAccountMappingAsync>d__6")]
protected virtual Task ActivateUserAccountMappingAsync(string descriptor, Guid accountId, UserRole userRole, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.UserAccountMapping.Client.UserAccountMappingHttpClientBase/<DeactivateUserAccountMappingAsync>d__7")]
protected virtual Task DeactivateUserAccountMappingAsync(string descriptor, Guid accountId, object userState, CancellationToken cancellationToken);
    protected virtual Task`1<bool> HasMappingsAsync(string descriptor, object userState, CancellationToken cancellationToken);
    protected virtual Task`1<List`1<Guid>> QueryAccountIdsAsync(string descriptor, UserRole userRole, Nullable`1<bool> useEqualsCheckForUserRoleMatch, Nullable`1<bool> includeDeletedAccounts, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.UserAccountMapping.Client.UserAccountMappingHttpClientBase/<SetUserAccountLicenseInfoAsync>d__10")]
protected virtual Task SetUserAccountLicenseInfoAsync(string descriptor, Guid accountId, VisualStudioLevel maxVsLevelFromAccountLicense, VisualStudioLevel maxVsLevelFromAccountExtensions, object userState, CancellationToken cancellationToken);
}
public static class Microsoft.VisualStudio.Services.UserAccountMapping.UserAccountMappingResourceIds : object {
    public static string AreaName;
    public static string AreaId;
    public static string UserAccountMappingsResourceName;
    public static Guid UserAccountMappingsResourceLocationId;
    private static UserAccountMappingResourceIds();
}
[FlagsAttribute]
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.UserAccountMapping.UserRole : Enum {
    public int value__;
    public static UserRole Member;
    public static UserRole Owner;
}
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.UserAccountMapping.VisualStudioLevel : Enum {
    public int value__;
    [EnumMemberAttribute]
public static VisualStudioLevel None;
    [EnumMemberAttribute]
public static VisualStudioLevel Professional;
    [EnumMemberAttribute]
public static VisualStudioLevel TestManager;
}
[ResourceAreaAttribute("5B508ADE-4C35-4913-A78E-6312FF28F84E")]
public class Microsoft.VisualStudio.Services.UserLicensing.Client.UserLicensingHttpClient : UserLicensingHttpClientBase {
    public UserLicensingHttpClient(Uri baseUrl, VssCredentials credentials);
    public UserLicensingHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public UserLicensingHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public UserLicensingHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public UserLicensingHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.UserLicensing.Client.UserLicensingHttpClient/<GetCertificateAsync>d__5")]
public virtual Task`1<Stream> GetCertificateAsync(object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.UserLicensing.Client.UserLicensingHttpClient/<GetMsdnEntitlementsAsync>d__6")]
public virtual Task`1<List`1<MsdnEntitlement>> GetMsdnEntitlementsAsync(string descriptor, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.UserLicensing.Client.UserLicensingHttpClient/<GetClientRightsContainerAsync>d__7")]
public virtual Task`1<ClientRightsContainer> GetClientRightsContainerAsync(string descriptor, ClientRightsQueryContext queryContext, ClientRightsTelemetryContext telemetryContext, object userState, CancellationToken cancellationToken);
    public Task SetVisualStudioTrialInfoAsync(SubjectDescriptor descriptor, int majorVersion, int productFamilyId, int productEditionId, DateTime expirationDate, DateTime createdDate, object userState, CancellationToken cancellationToken);
    public Task`1<long> GetVisualStudioTrialExpirationAsync(SubjectDescriptor descriptor, string machineId, int majorVersion, int productFamilyId, int productEditionId, object userState, CancellationToken cancellationToken);
    private static void ValidateClientRightsQueryContext(ClientRightsQueryContext queryContext);
    private static void ValidateClientRightsTelemetryContext(ClientRightsTelemetryContext telemetryContext);
    private static void SerializeTelemetryContextAsOptionalQueryParameters(ClientRightsTelemetryContext telemetryContext, IList`1<KeyValuePair`2<string, string>> queryParameters);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<Stream> <>n__0(object userState, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<List`1<MsdnEntitlement>> <>n__1(string descriptor, object userState, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<ClientRightsContainer> <>n__2(string descriptor, string rightName, string productVersion, string edition, string relType, Nullable`1<bool> includeCertificate, string canary, string machineId, object userState, CancellationToken cancellationToken);
}
[ResourceAreaAttribute("5B508ADE-4C35-4913-A78E-6312FF28F84E")]
public abstract class Microsoft.VisualStudio.Services.UserLicensing.Client.UserLicensingHttpClientBase : VssHttpClientBase {
    public UserLicensingHttpClientBase(Uri baseUrl, VssCredentials credentials);
    public UserLicensingHttpClientBase(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public UserLicensingHttpClientBase(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public UserLicensingHttpClientBase(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public UserLicensingHttpClientBase(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.UserLicensing.Client.UserLicensingHttpClientBase/<GetCertificateAsync>d__5")]
protected virtual Task`1<Stream> GetCertificateAsync(object userState, CancellationToken cancellationToken);
    protected virtual Task`1<ClientRightsContainer> GetClientRightsAsync(string descriptor, string rightName, string productVersion, string edition, string relType, Nullable`1<bool> includeCertificate, string canary, string machineId, object userState, CancellationToken cancellationToken);
    protected virtual Task`1<List`1<MsdnEntitlement>> GetEntitlementsAsync(string descriptor, object userState, CancellationToken cancellationToken);
    protected virtual Task`1<long> GetVisualStudioTrialExpirationAsync(string descriptor, string machineId, int majorVersion, int productFamilyId, int productEditionId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.UserLicensing.Client.UserLicensingHttpClientBase/<SetVisualStudioTrialInfoAsync>d__9")]
protected virtual Task SetVisualStudioTrialInfoAsync(string descriptor, int majorVersion, int productFamilyId, int productEditionId, DateTime expirationDate, DateTime createdDate, object userState, CancellationToken cancellationToken);
}
public static class Microsoft.VisualStudio.Services.UserLicensing.UserLicensingResourceIds : object {
    public static string AreaName;
    public static string AreaId;
    public static string CertificateResourceName;
    public static Guid CertificateResourceLocationId;
    public static string ClientRightsResourceName;
    public static Guid ClientRightsResourceLocationid;
    public static string MsdnResourceName;
    public static string MsdnEntitlementsResourceLocationIdAsString;
    public static Guid MsdnEntitlementsResourceLocationId;
    public static string VsTrialLicenseResourceName;
    public static Guid VsTrialLicenseResourceLocationId;
    private static UserLicensingResourceIds();
}
[ResourceAreaAttribute("C8C8FFD0-2ECF-484A-B7E8-A226955EE7C8")]
public class Microsoft.VisualStudio.Services.UserMapping.Client.UserMappingHttpClient : VssHttpClientBase {
    public UserMappingHttpClient(Uri baseUrl, VssCredentials credentials);
    public UserMappingHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public UserMappingHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public UserMappingHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public UserMappingHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    [EditorBrowsableAttribute("1")]
public Task`1<Guid> GetSyncUserAccountMappingsStatusAsync(object userState, CancellationToken cancellationToken);
    [EditorBrowsableAttribute("1")]
public Task`1<Guid> QueueSyncUserAccountMappingsAsync(object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.UserMapping.Client.UserMappingHttpClient/<ActivateUserAccountMappingAsync>d__7")]
public Task ActivateUserAccountMappingAsync(Guid userId, Guid accountId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.UserMapping.Client.UserMappingHttpClient/<ActivateUserAccountMappingAsync>d__8")]
public Task ActivateUserAccountMappingAsync(Guid userId, Guid accountId, UserType userType, object userState, CancellationToken cancellationToken);
    public Task`1<List`1<Guid>> QueryAccountIdsAsync(string userId, UserType userType, Nullable`1<bool> useEqualsCheckForUserTypeMatch, Nullable`1<bool> includeDeletedAccounts, object userState, CancellationToken cancellationToken);
}
public class Microsoft.VisualStudio.Services.UserMapping.UserAccountMappingNotFoundException : UserMappingException {
    public UserAccountMappingNotFoundException(string message);
    public UserAccountMappingNotFoundException(string message, Exception innerException);
    protected UserAccountMappingNotFoundException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.UserMapping.UserMappingBadRequestException : UserMappingException {
    public UserMappingBadRequestException(string message);
    public UserMappingBadRequestException(string message, Exception innerException);
    protected UserMappingBadRequestException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.UserMapping.UserMappingException : VssServiceException {
    public UserMappingException(string message);
    public UserMappingException(string message, Exception innerException);
    protected UserMappingException(SerializationInfo info, StreamingContext context);
}
public static class Microsoft.VisualStudio.Services.UserMapping.UserMappingResourceIds : object {
    public static string AreaId;
    public static string UserMappingArea;
    public static Guid UserAccountMappingsResourceLocationId;
    public static string UserAccountMappingsResourceName;
    public static Guid UserMappingSyncResourceLocationId;
    public static string UserMappingSyncResourceName;
    private static UserMappingResourceIds();
}
public class Microsoft.VisualStudio.Services.UserMapping.UserMappingServiceSecurityException : UserMappingException {
    public UserMappingServiceSecurityException(string message);
    public UserMappingServiceSecurityException(string message, Exception innerException);
    protected UserMappingServiceSecurityException(SerializationInfo info, StreamingContext context);
}
[FlagsAttribute]
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.UserMapping.UserType : Enum {
    public int value__;
    public static UserType Member;
    public static UserType Owner;
}
public static class Microsoft.VisualStudio.Services.UserRestApiConstants : object {
    public static string Me;
    public static string JsonMergePatchMediaType;
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Users.AccessedHost : object {
    [CompilerGeneratedAttribute]
private Guid <HostId>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <AccessTime>k__BackingField;
    [DataMemberAttribute]
public Guid HostId { get; public set; }
    [DataMemberAttribute]
public DateTime AccessTime { get; public set; }
    public AccessedHost(Guid hostId, DateTime accessTime);
    [CompilerGeneratedAttribute]
public Guid get_HostId();
    [CompilerGeneratedAttribute]
public void set_HostId(Guid value);
    [CompilerGeneratedAttribute]
public DateTime get_AccessTime();
    [CompilerGeneratedAttribute]
public void set_AccessTime(DateTime value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Users.AccessedHostsParameters : object {
    [CompilerGeneratedAttribute]
private SubjectDescriptor <UserDescriptor>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<AccessedHost> <AccessedHosts>k__BackingField;
    [DataMemberAttribute]
public SubjectDescriptor UserDescriptor { get; public set; }
    [DataMemberAttribute]
public IList`1<AccessedHost> AccessedHosts { get; public set; }
    public AccessedHostsParameters(SubjectDescriptor userDescriptor, IList`1<AccessedHost> accessedHosts);
    [CompilerGeneratedAttribute]
public SubjectDescriptor get_UserDescriptor();
    [CompilerGeneratedAttribute]
public void set_UserDescriptor(SubjectDescriptor value);
    [CompilerGeneratedAttribute]
public IList`1<AccessedHost> get_AccessedHosts();
    [CompilerGeneratedAttribute]
public void set_AccessedHosts(IList`1<AccessedHost> value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Users.Avatar : object {
    [CompilerGeneratedAttribute]
private Byte[] <Image>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <LastModified>k__BackingField;
    [CompilerGeneratedAttribute]
private AvatarSize <Size>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsAutoGenerated>k__BackingField;
    [DataMemberAttribute]
public Byte[] Image { get; public set; }
    [DataMemberAttribute]
public DateTimeOffset LastModified { get; public set; }
    [DataMemberAttribute]
public AvatarSize Size { get; internal set; }
    [DataMemberAttribute]
public Nullable`1<bool> IsAutoGenerated { get; internal set; }
    [CompilerGeneratedAttribute]
public Byte[] get_Image();
    [CompilerGeneratedAttribute]
public void set_Image(Byte[] value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_LastModified();
    [CompilerGeneratedAttribute]
public void set_LastModified(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public AvatarSize get_Size();
    [CompilerGeneratedAttribute]
internal void set_Size(AvatarSize value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IsAutoGenerated();
    [CompilerGeneratedAttribute]
internal void set_IsAutoGenerated(Nullable`1<bool> value);
}
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.Users.AvatarSize : Enum {
    public int value__;
    [EnumMemberAttribute]
public static AvatarSize Small;
    [EnumMemberAttribute]
public static AvatarSize Medium;
    [EnumMemberAttribute]
public static AvatarSize Large;
}
public class Microsoft.VisualStudio.Services.Users.BadAvatarValueException : UserException {
    public BadAvatarValueException(string message);
    public BadAvatarValueException(string message, Exception innerException);
    protected BadAvatarValueException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.Users.BadMailAddressException : UserException {
    public BadMailAddressException(string message);
    public BadMailAddressException(string message, Exception innerException);
    protected BadMailAddressException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.Users.BadUserRequestException : UserException {
    public BadUserRequestException(string message);
    public BadUserRequestException(string message, Exception innerException);
    protected BadUserRequestException(SerializationInfo info, StreamingContext context);
}
[EditorBrowsableAttribute("1")]
public abstract class Microsoft.VisualStudio.Services.Users.Client.UserCompatHttpClientBase : VssHttpClientBase {
    public UserCompatHttpClientBase(Uri baseUrl, VssCredentials credentials);
    public UserCompatHttpClientBase(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public UserCompatHttpClientBase(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public UserCompatHttpClientBase(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public UserCompatHttpClientBase(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    [EditorBrowsableAttribute("1")]
[ObsoleteAttribute]
protected virtual Task`1<User> GetUserAsync(string descriptor, Nullable`1<bool> createIfNotExists, Nullable`1<SubjectDescriptor> knownDescriptor, object userState, CancellationToken cancellationToken);
}
[ResourceAreaAttribute("970AA69F-E316-4D78-B7B0-B7137E47A22C")]
[ClientCircuitBreakerSettingsAttribute("100", "80")]
public class Microsoft.VisualStudio.Services.Users.Client.UserHttpClient : UserHttpClientBase {
    public UserHttpClient(Uri baseUrl, VssCredentials credentials);
    public UserHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public UserHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public UserHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public UserHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    public Task DeleteSelfAttributeAsync(string attributeName, object userState, CancellationToken cancellationToken);
    public Task`1<UserAttribute> GetSelfAttributeAsync(string attributeName, object userState, CancellationToken cancellationToken);
    public Task`1<UserAttributes> QuerySelfAttributesAsync(string continuationToken, string queryPattern, Nullable`1<DateTimeOffset> modifiedAfter, object userState, CancellationToken cancellationToken);
    public Task`1<List`1<UserAttribute>> SetSelfAttributesAsync(IEnumerable`1<SetUserAttributeParameters> attributeParametersList, object userState, CancellationToken cancellationToken);
    public Task`1<User> GetSelfAsync(object userState, Nullable`1<bool> createIfNotExists, CancellationToken cancellationToken);
    public virtual Task`1<User> UpdateSelfAsync(UpdateUserParameters userParameters, object userState, CancellationToken cancellationToken);
    public Task`1<Avatar> GetSelfAvatarAsync(Nullable`1<AvatarSize> size, object userState, CancellationToken cancellationToken);
}
[ResourceAreaAttribute("970AA69F-E316-4D78-B7B0-B7137E47A22C")]
public abstract class Microsoft.VisualStudio.Services.Users.Client.UserHttpClientBase : UserCompatHttpClientBase {
    public UserHttpClientBase(Uri baseUrl, VssCredentials credentials);
    public UserHttpClientBase(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public UserHttpClientBase(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public UserHttpClientBase(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public UserHttpClientBase(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Users.Client.UserHttpClientBase/<DeleteAttributeAsync>d__5")]
protected virtual Task DeleteAttributeAsync(string descriptor, string attributeName, object userState, CancellationToken cancellationToken);
    protected virtual Task`1<UserAttribute> GetAttributeAsync(string descriptor, string attributeName, object userState, CancellationToken cancellationToken);
    protected virtual Task`1<UserAttributes> QueryAttributesAsync(string descriptor, string continuationToken, string queryPattern, Nullable`1<DateTimeOffset> modifiedAfter, object userState, CancellationToken cancellationToken);
    protected virtual Task`1<List`1<UserAttribute>> SetAttributesAsync(string descriptor, IEnumerable`1<SetUserAttributeParameters> attributeParametersList, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Users.Client.UserHttpClientBase/<DeleteAvatarAsync>d__9")]
protected virtual Task DeleteAvatarAsync(string descriptor, object userState, CancellationToken cancellationToken);
    protected virtual Task`1<Avatar> GetAvatarAsync(string descriptor, Nullable`1<AvatarSize> size, string format, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Users.Client.UserHttpClientBase/<SetAvatarAsync>d__11")]
protected virtual Task SetAvatarAsync(string descriptor, Avatar avatar, object userState, CancellationToken cancellationToken);
    protected virtual Task`1<Avatar> CreateAvatarPreviewAsync(string descriptor, Avatar avatar, Nullable`1<AvatarSize> size, string displayName, object userState, CancellationToken cancellationToken);
    protected virtual Task`1<SubjectDescriptor> GetDescriptorAsync(string descriptor, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Users.Client.UserHttpClientBase/<DisableUserProfileSyncAsync>d__14")]
public virtual Task DisableUserProfileSyncAsync(SubjectDescriptor descriptor, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Users.Client.UserHttpClientBase/<EnableUserProfileSyncAsync>d__15")]
public virtual Task EnableUserProfileSyncAsync(SubjectDescriptor descriptor, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Users.Client.UserHttpClientBase/<ConfirmMailAsync>d__16")]
protected virtual Task ConfirmMailAsync(string descriptor, MailConfirmationParameters confirmationParameters, object userState, CancellationToken cancellationToken);
    protected virtual Task`1<List`1<AccessedHost>> GetMostRecentlyAccessedHostsAsync(string descriptor, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Users.Client.UserHttpClientBase/<UpdateMostRecentlyAccessedHostsAsync>d__18")]
protected virtual Task UpdateMostRecentlyAccessedHostsAsync(IEnumerable`1<AccessedHostsParameters> parametersList, object userState, CancellationToken cancellationToken);
    protected virtual Task`1<Guid> GetStorageKeyAsync(string descriptor, object userState, CancellationToken cancellationToken);
    protected virtual Task`1<User> GetUserDefaultsAsync(object userState, CancellationToken cancellationToken);
    protected virtual Task`1<User> CreateUserAsync(CreateUserParameters userParameters, Nullable`1<bool> createLocal, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.Users.Client.UserHttpClientBase/<DeleteUserAsync>d__22")]
protected virtual Task DeleteUserAsync(SubjectDescriptor descriptor, object userState, CancellationToken cancellationToken);
    [EditorBrowsableAttribute("1")]
public virtual Task`1<User> GetUserAsync(string descriptor, Nullable`1<bool> createIfNotExists, object userState, CancellationToken cancellationToken);
    protected virtual Task`1<User> UpdateUserAsync(string descriptor, UpdateUserParameters userParameters, object userState, CancellationToken cancellationToken);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Users.CreateUserParameters : object {
    [CompilerGeneratedAttribute]
private SubjectDescriptor <Descriptor>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Mail>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Country>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Region>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <PendingProfileCreation>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> <Data>k__BackingField;
    [DataMemberAttribute]
public SubjectDescriptor Descriptor { get; public set; }
    [DataMemberAttribute]
public string DisplayName { get; public set; }
    [DataMemberAttribute]
public string Mail { get; public set; }
    [DataMemberAttribute]
public string Country { get; public set; }
    [DataMemberAttribute]
public string Region { get; public set; }
    [DataMemberAttribute]
public bool PendingProfileCreation { get; public set; }
    [DataMemberAttribute]
public Dictionary`2<string, object> Data { get; public set; }
    public CreateUserParameters(CreateUserParameters copy);
    [CompilerGeneratedAttribute]
public SubjectDescriptor get_Descriptor();
    [CompilerGeneratedAttribute]
public void set_Descriptor(SubjectDescriptor value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public string get_Mail();
    [CompilerGeneratedAttribute]
public void set_Mail(string value);
    [CompilerGeneratedAttribute]
public string get_Country();
    [CompilerGeneratedAttribute]
public void set_Country(string value);
    [CompilerGeneratedAttribute]
public string get_Region();
    [CompilerGeneratedAttribute]
public void set_Region(string value);
    [CompilerGeneratedAttribute]
public bool get_PendingProfileCreation();
    [CompilerGeneratedAttribute]
public void set_PendingProfileCreation(bool value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, object> get_Data();
    [CompilerGeneratedAttribute]
public void set_Data(Dictionary`2<string, object> value);
    internal CreateUserParameters Clone();
    internal virtual User ToUser();
}
public class Microsoft.VisualStudio.Services.Users.InvalidAttributeNameException : UserException {
    public InvalidAttributeNameException(string message);
    public InvalidAttributeNameException(string message, Exception innerException);
    protected InvalidAttributeNameException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.Users.InvalidAttributeValueException : UserException {
    public InvalidAttributeValueException(string message);
    public InvalidAttributeValueException(string message, Exception innerException);
    protected InvalidAttributeValueException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.Users.InvalidBatchException : UserException {
    public InvalidBatchException(string message);
    public InvalidBatchException(string message, Exception innerException);
    protected InvalidBatchException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.Users.InvalidCountryException : UserException {
    public InvalidCountryException(string message);
    public InvalidCountryException(string message, Exception innerException);
    protected InvalidCountryException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.Users.InvalidMailConfirmationException : UserException {
    public InvalidMailConfirmationException(string message);
    public InvalidMailConfirmationException(string message, Exception innerException);
    protected InvalidMailConfirmationException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.Users.InvalidQueryPatternException : UserException {
    public InvalidQueryPatternException(string message);
    public InvalidQueryPatternException(string message, Exception innerException);
    protected InvalidQueryPatternException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.Users.InvalidSubjectDescriptorException : UserException {
    public InvalidSubjectDescriptorException(string message);
    public InvalidSubjectDescriptorException(string message, Exception innerException);
    protected InvalidSubjectDescriptorException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.Users.InvalidUserCreateException : UserException {
    public InvalidUserCreateException(string message);
    public InvalidUserCreateException(string message, Exception innerException);
    protected InvalidUserCreateException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.Users.InvalidUserUpdateException : UserException {
    public InvalidUserUpdateException(string message);
    public InvalidUserUpdateException(string message, Exception innerException);
    protected InvalidUserUpdateException(SerializationInfo info, StreamingContext context);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Users.MailConfirmationParameters : object {
    [CompilerGeneratedAttribute]
private string <ChallengeCode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MailAddress>k__BackingField;
    [DataMemberAttribute]
public string ChallengeCode { get; public set; }
    [DataMemberAttribute]
public string MailAddress { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ChallengeCode();
    [CompilerGeneratedAttribute]
public void set_ChallengeCode(string value);
    [CompilerGeneratedAttribute]
public string get_MailAddress();
    [CompilerGeneratedAttribute]
public void set_MailAddress(string value);
}
public class Microsoft.VisualStudio.Services.Users.RegionNotSupportedException : UserException {
    public RegionNotSupportedException(string message);
    public RegionNotSupportedException(string message, Exception innerException);
    protected RegionNotSupportedException(SerializationInfo info, StreamingContext context);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Users.SetUserAttributeParameters : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <LastModified>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Revision>k__BackingField;
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public string Value { get; public set; }
    [DataMemberAttribute]
internal DateTimeOffset LastModified { get; internal set; }
    [DataMemberAttribute]
internal int Revision { get; internal set; }
    public SetUserAttributeParameters(string name, string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    [CompilerGeneratedAttribute]
internal DateTimeOffset get_LastModified();
    [CompilerGeneratedAttribute]
internal void set_LastModified(DateTimeOffset value);
    [CompilerGeneratedAttribute]
internal int get_Revision();
    [CompilerGeneratedAttribute]
internal void set_Revision(int value);
}
public class Microsoft.VisualStudio.Services.Users.SetUserAttributesException : UserException {
    public SetUserAttributesException(string message);
    public SetUserAttributesException(string message, Exception innerException);
    protected SetUserAttributesException(SerializationInfo info, StreamingContext context);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Users.UpdateUserParameters : object {
    [CompilerGeneratedAttribute]
private SubjectDescriptor <Descriptor>k__BackingField;
    [CompilerGeneratedAttribute]
private PropertiesCollection <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <LastModified>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Revision>k__BackingField;
    [IgnoreDataMemberAttribute]
public SubjectDescriptor Descriptor { get; public set; }
    [DataMemberAttribute]
public PropertiesCollection Properties { get; private set; }
    [IgnoreDataMemberAttribute]
public string DisplayName { get; public set; }
    [IgnoreDataMemberAttribute]
public string Mail { get; public set; }
    [IgnoreDataMemberAttribute]
public string UnconfirmedMail { get; public set; }
    [IgnoreDataMemberAttribute]
public string Country { get; public set; }
    [IgnoreDataMemberAttribute]
public string Region { get; public set; }
    [IgnoreDataMemberAttribute]
public string Bio { get; public set; }
    [IgnoreDataMemberAttribute]
public string Blog { get; public set; }
    [IgnoreDataMemberAttribute]
public string Company { get; public set; }
    [IgnoreDataMemberAttribute]
public UserProfileSyncState ProfileSyncState { get; public set; }
    [IgnoreDataMemberAttribute]
internal DateTimeOffset LastModified { get; internal set; }
    [IgnoreDataMemberAttribute]
internal int Revision { get; internal set; }
    public UpdateUserParameters(UpdateUserParameters copy);
    [CompilerGeneratedAttribute]
public SubjectDescriptor get_Descriptor();
    [CompilerGeneratedAttribute]
public void set_Descriptor(SubjectDescriptor value);
    [CompilerGeneratedAttribute]
public PropertiesCollection get_Properties();
    [CompilerGeneratedAttribute]
private void set_Properties(PropertiesCollection value);
    public void set_DisplayName(string value);
    public string get_DisplayName();
    public void set_Mail(string value);
    public string get_Mail();
    public void set_UnconfirmedMail(string value);
    public string get_UnconfirmedMail();
    public void set_Country(string value);
    public string get_Country();
    public void set_Region(string value);
    public string get_Region();
    public void set_Bio(string value);
    public string get_Bio();
    public void set_Blog(string value);
    public string get_Blog();
    public void set_Company(string value);
    public string get_Company();
    public void set_ProfileSyncState(UserProfileSyncState value);
    public UserProfileSyncState get_ProfileSyncState();
    [CompilerGeneratedAttribute]
internal DateTimeOffset get_LastModified();
    [CompilerGeneratedAttribute]
internal void set_LastModified(DateTimeOffset value);
    [CompilerGeneratedAttribute]
internal int get_Revision();
    [CompilerGeneratedAttribute]
internal void set_Revision(int value);
    internal UpdateUserParameters Clone();
    internal virtual User ToUser();
    public virtual string ToString();
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Users.User : object {
    [CompilerGeneratedAttribute]
private SubjectDescriptor <Descriptor>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Mail>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UnconfirmedMail>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Bio>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Blog>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Company>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Country>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <DateCreated>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceLinks <Links>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <LastModified>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <ProfileLastSynced>k__BackingField;
    [CompilerGeneratedAttribute]
private UserProfileSyncState <ProfileSyncState>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Revision>k__BackingField;
    [CompilerGeneratedAttribute]
private UserState <State>k__BackingField;
    [DataMemberAttribute]
public SubjectDescriptor Descriptor { get; public set; }
    [DataMemberAttribute]
public string UserName { get; public set; }
    [DataMemberAttribute]
public string DisplayName { get; public set; }
    [DataMemberAttribute]
public string Mail { get; public set; }
    [DataMemberAttribute]
public string UnconfirmedMail { get; public set; }
    [DataMemberAttribute]
public string Bio { get; public set; }
    [DataMemberAttribute]
public string Blog { get; public set; }
    [DataMemberAttribute]
public string Company { get; public set; }
    [DataMemberAttribute]
public string Country { get; public set; }
    [DataMemberAttribute]
public DateTimeOffset DateCreated { get; public set; }
    [DataMemberAttribute]
public ReferenceLinks Links { get; internal set; }
    [DataMemberAttribute]
public DateTimeOffset LastModified { get; internal set; }
    [DataMemberAttribute]
public Nullable`1<DateTimeOffset> ProfileLastSynced { get; internal set; }
    [DataMemberAttribute]
public UserProfileSyncState ProfileSyncState { get; internal set; }
    [DataMemberAttribute]
public int Revision { get; internal set; }
    [DataMemberAttribute]
public UserState State { get; internal set; }
    public User(User copy);
    [CompilerGeneratedAttribute]
public SubjectDescriptor get_Descriptor();
    [CompilerGeneratedAttribute]
public void set_Descriptor(SubjectDescriptor value);
    [CompilerGeneratedAttribute]
public string get_UserName();
    [CompilerGeneratedAttribute]
public void set_UserName(string value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public string get_Mail();
    [CompilerGeneratedAttribute]
public void set_Mail(string value);
    [CompilerGeneratedAttribute]
public string get_UnconfirmedMail();
    [CompilerGeneratedAttribute]
public void set_UnconfirmedMail(string value);
    [CompilerGeneratedAttribute]
public string get_Bio();
    [CompilerGeneratedAttribute]
public void set_Bio(string value);
    [CompilerGeneratedAttribute]
public string get_Blog();
    [CompilerGeneratedAttribute]
public void set_Blog(string value);
    [CompilerGeneratedAttribute]
public string get_Company();
    [CompilerGeneratedAttribute]
public void set_Company(string value);
    [CompilerGeneratedAttribute]
public string get_Country();
    [CompilerGeneratedAttribute]
public void set_Country(string value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_DateCreated();
    [CompilerGeneratedAttribute]
public void set_DateCreated(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public ReferenceLinks get_Links();
    [CompilerGeneratedAttribute]
internal void set_Links(ReferenceLinks value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_LastModified();
    [CompilerGeneratedAttribute]
internal void set_LastModified(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_ProfileLastSynced();
    [CompilerGeneratedAttribute]
internal void set_ProfileLastSynced(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public UserProfileSyncState get_ProfileSyncState();
    [CompilerGeneratedAttribute]
internal void set_ProfileSyncState(UserProfileSyncState value);
    [CompilerGeneratedAttribute]
public int get_Revision();
    [CompilerGeneratedAttribute]
internal void set_Revision(int value);
    [CompilerGeneratedAttribute]
public UserState get_State();
    [CompilerGeneratedAttribute]
internal void set_State(UserState value);
    public static UpdateUserParameters op_Implicit(User user);
    internal virtual void UpdateWith(UpdateUserParameters userParameters);
}
public class Microsoft.VisualStudio.Services.Users.UserAccessCheckException : UserException {
    public UserAccessCheckException(string message);
    public UserAccessCheckException(string message, Exception innerException);
    protected UserAccessCheckException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.Users.UserAccountMappingDoesNotExistException : UserException {
    public UserAccountMappingDoesNotExistException(string message);
    public UserAccountMappingDoesNotExistException(string message, Exception innerException);
    protected UserAccountMappingDoesNotExistException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.Users.UserAlreadyExistsException : UserException {
    public UserAlreadyExistsException(string message);
    public UserAlreadyExistsException(string message, Exception innerException);
    protected UserAlreadyExistsException(SerializationInfo info, StreamingContext context);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Users.UserAttribute : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <LastModified>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Revision>k__BackingField;
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public string Value { get; public set; }
    [DataMemberAttribute]
public DateTimeOffset LastModified { get; internal set; }
    [DataMemberAttribute]
public int Revision { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_LastModified();
    [CompilerGeneratedAttribute]
internal void set_LastModified(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public int get_Revision();
    [CompilerGeneratedAttribute]
internal void set_Revision(int value);
    public static SetUserAttributeParameters op_Implicit(UserAttribute attribute);
    public virtual string ToString();
}
public class Microsoft.VisualStudio.Services.Users.UserAttributeDoesNotExistException : UserException {
    public UserAttributeDoesNotExistException(string message);
    public UserAttributeDoesNotExistException(string message, Exception innerException);
    protected UserAttributeDoesNotExistException(SerializationInfo info, StreamingContext context);
}
[ExtensionAttribute]
public static class Microsoft.VisualStudio.Services.Users.UserAttributeExtensions : object {
    [ExtensionAttribute]
public static UserAttribute ToUserAttribute(SetUserAttributeParameters attributeParameters);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Users.UserAttributes : object {
    [CompilerGeneratedAttribute]
private IList`1<UserAttribute> <Attributes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContinuationToken>k__BackingField;
    [DataMemberAttribute]
public IList`1<UserAttribute> Attributes { get; public set; }
    [DataMemberAttribute]
public string ContinuationToken { get; public set; }
    [CompilerGeneratedAttribute]
public IList`1<UserAttribute> get_Attributes();
    [CompilerGeneratedAttribute]
public void set_Attributes(IList`1<UserAttribute> value);
    [CompilerGeneratedAttribute]
public string get_ContinuationToken();
    [CompilerGeneratedAttribute]
public void set_ContinuationToken(string value);
}
public class Microsoft.VisualStudio.Services.Users.UserBackupDoesNotExistException : UserException {
    public UserBackupDoesNotExistException(string message);
    public UserBackupDoesNotExistException(string message, Exception innerException);
    protected UserBackupDoesNotExistException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.Users.UserDoesNotExistException : UserException {
    public UserDoesNotExistException(string message);
    public UserDoesNotExistException(string message, Exception innerException);
    protected UserDoesNotExistException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.Users.UserException : VssServiceException {
    public UserException(string message);
    public UserException(string message, Exception innerException);
    protected UserException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.Users.UserRequestDiscardedException : UserException {
    public UserRequestDiscardedException(string message);
    public UserRequestDiscardedException(string message, Exception innerException);
    protected UserRequestDiscardedException(SerializationInfo info, StreamingContext context);
}
public static class Microsoft.VisualStudio.Services.Users.UserResourceIds : object {
    public static string AreaName;
    public static string AreaId;
    public static Guid AreaIdGuid;
    public static string UsersResource;
    public static string UsersLocation;
    public static Guid Users;
    public static string AttributesResource;
    public static string AttributesLocation;
    public static Guid Attributes;
    public static string AvatarResource;
    public static string AvatarLocation;
    public static Guid Avatar;
    public static string UserDefaultsResource;
    public static string UserDefaultsLocation;
    public static Guid UserDefaults;
    public static string MailConfirmationResource;
    public static string MailConfirmationLocation;
    public static Guid MailConfirmation;
    public static string DescriptorResource;
    public static string DescriptorLocation;
    public static Guid Descriptor;
    public static string StorageKeyResource;
    public static string StorageKeyLocation;
    public static Guid StorageKey;
    public static string AvatarPreviewResource;
    public static string AvatarPreviewLocation;
    public static Guid AvatarPreview;
    public static string MostRecentlyAccessedHostsResource;
    public static string MostRecentlyAccessedHostsLocation;
    public static Guid MostRecentlyAccessedHosts;
    public static string RecentlyAccessedHostsResource;
    public static string RecentlyAccessedHostsLocation;
    public static Guid RecentlyAccessedHosts;
    public static string EnableUserProfileSyncResource;
    public static string EnableUserProfileSyncLocation;
    public static Guid EnableUserProfileSync;
    public static string DisableUserProfileSyncResource;
    public static string DisableUserProfileSyncLocation;
    public static Guid DisableUserProfileSync;
    public static string UsersL2Resource;
    public static string UsersL2Location;
    public static Guid UsersL2;
    public static string UsersByStorageKeyL2Resource;
    public static string UsersByStorageKeyL2Location;
    public static Guid UsersByStorageKeyL2;
    public static string PrivateAttributesResource;
    public static Guid PrivateAttributesLocationid;
    private static UserResourceIds();
}
public class Microsoft.VisualStudio.Services.Users.UserServiceUnavailableException : UserException {
    public UserServiceUnavailableException(string message);
    public UserServiceUnavailableException(string message, Exception innerException);
    protected UserServiceUnavailableException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.WebApi.Aad.AadAccessException : AadException {
    public AadAccessException(string message);
    public AadAccessException(string message, Exception innerException);
}
public class Microsoft.VisualStudio.Services.WebApi.Aad.AadException : VssServiceException {
    public AadException(string message);
    public AadException(string message, Exception innerException);
}
internal static class Microsoft.VisualStudio.Services.WebApi.AccountResources : object {
    private static ResourceManager s_resMgr;
    public static ResourceManager Manager { get; }
    private static AccountResources();
    public static ResourceManager get_Manager();
    private static string Get(string resourceName);
    private static string Get(string resourceName, CultureInfo culture);
    public static int GetInt(string resourceName);
    public static int GetInt(string resourceName, CultureInfo culture);
    public static bool GetBool(string resourceName);
    public static bool GetBool(string resourceName, CultureInfo culture);
    private static string Format(string resourceName, Object[] args);
    private static string Format(string resourceName, CultureInfo culture, Object[] args);
    public static string AccountExists(object arg0);
    public static string AccountExists(object arg0, CultureInfo culture);
    public static string AccountMarkedForDeletionError(object arg0);
    public static string AccountMarkedForDeletionError(object arg0, CultureInfo culture);
    public static string AccountNotFound();
    public static string AccountNotFound(CultureInfo culture);
    public static string AccountNotFoundByIdError(object arg0);
    public static string AccountNotFoundByIdError(object arg0, CultureInfo culture);
    public static string AccountNotMarkedForDeletion();
    public static string AccountNotMarkedForDeletion(CultureInfo culture);
    public static string MaxNumberOfAccountsExceptions();
    public static string MaxNumberOfAccountsExceptions(CultureInfo culture);
    public static string MaxNumberOfAccountsPerUserException();
    public static string MaxNumberOfAccountsPerUserException(CultureInfo culture);
    public static string AccountNotMarkedForDeletionError(object arg0);
    public static string AccountNotMarkedForDeletionError(object arg0, CultureInfo culture);
    public static string AccountHostmappingNotFoundById(object arg0);
    public static string AccountHostmappingNotFoundById(object arg0, CultureInfo culture);
    public static string AccountServiceLockDownModeException();
    public static string AccountServiceLockDownModeException(CultureInfo culture);
    public static string AccountUserNotFoundException(object arg0, object arg1);
    public static string AccountUserNotFoundException(object arg0, object arg1, CultureInfo culture);
    public static string RegionExists(object arg0);
    public static string RegionExists(object arg0, CultureInfo culture);
    public static string AccountNameReserved(object arg0);
    public static string AccountNameReserved(object arg0, CultureInfo culture);
    public static string AccountServiceUnavailableException();
    public static string AccountServiceUnavailableException(CultureInfo culture);
    public static string AccountNameTemporarilyUnavailable();
    public static string AccountNameTemporarilyUnavailable(CultureInfo culture);
    public static string AccountMustBeUnlinkedBeforeDeletion();
    public static string AccountMustBeUnlinkedBeforeDeletion(CultureInfo culture);
}
[EditorBrowsableAttribute("1")]
public class Microsoft.VisualStudio.Services.WebApi.AcsRetryHelper : HttpRetryHelper {
    public AcsRetryHelper(int maxRetries);
    public static bool CanRetryOnException(Exception ex);
}
public class Microsoft.VisualStudio.Services.WebApi.AnswersDetails : object {
    [CompilerGeneratedAttribute]
private string <VSMarketplacePublisherName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VSMarketplaceExtensionName>k__BackingField;
    public string VSMarketplacePublisherName { get; public set; }
    public string VSMarketplaceExtensionName { get; public set; }
    [CompilerGeneratedAttribute]
public string get_VSMarketplacePublisherName();
    [CompilerGeneratedAttribute]
public void set_VSMarketplacePublisherName(string value);
    [CompilerGeneratedAttribute]
public string get_VSMarketplaceExtensionName();
    [CompilerGeneratedAttribute]
public void set_VSMarketplaceExtensionName(string value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.WebApi.ApiResourceLocation : object {
    [CompilerGeneratedAttribute]
private Guid <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Area>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResourceName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RouteTemplate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RouteName>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ResourceVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private Version <MinVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private Version <MaxVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private Version <ReleasedVersion>k__BackingField;
    [DataMemberAttribute]
public Guid Id { get; public set; }
    [DataMemberAttribute]
public string Area { get; public set; }
    [DataMemberAttribute]
public string ResourceName { get; public set; }
    [DataMemberAttribute]
public string RouteTemplate { get; public set; }
    public string RouteName { get; public set; }
    [DataMemberAttribute]
public int ResourceVersion { get; public set; }
    public Version MinVersion { get; public set; }
    [DataMemberAttribute]
public string MinVersionString { get; private set; }
    public Version MaxVersion { get; public set; }
    [DataMemberAttribute]
public string MaxVersionString { get; private set; }
    public Version ReleasedVersion { get; public set; }
    [DataMemberAttribute]
public string ReleasedVersionString { get; private set; }
    private Guid Microsoft.VisualStudio.Services.WebApi.ISecuredObject.NamespaceId { get; }
    private int Microsoft.VisualStudio.Services.WebApi.ISecuredObject.RequiredPermissions { get; }
    [CompilerGeneratedAttribute]
public Guid get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(Guid value);
    [CompilerGeneratedAttribute]
public string get_Area();
    [CompilerGeneratedAttribute]
public void set_Area(string value);
    [CompilerGeneratedAttribute]
public string get_ResourceName();
    [CompilerGeneratedAttribute]
public void set_ResourceName(string value);
    [CompilerGeneratedAttribute]
public string get_RouteTemplate();
    [CompilerGeneratedAttribute]
public void set_RouteTemplate(string value);
    [CompilerGeneratedAttribute]
public string get_RouteName();
    [CompilerGeneratedAttribute]
public void set_RouteName(string value);
    [CompilerGeneratedAttribute]
public int get_ResourceVersion();
    [CompilerGeneratedAttribute]
public void set_ResourceVersion(int value);
    [CompilerGeneratedAttribute]
public Version get_MinVersion();
    [CompilerGeneratedAttribute]
public void set_MinVersion(Version value);
    public string get_MinVersionString();
    private void set_MinVersionString(string value);
    [CompilerGeneratedAttribute]
public Version get_MaxVersion();
    [CompilerGeneratedAttribute]
public void set_MaxVersion(Version value);
    public string get_MaxVersionString();
    private void set_MaxVersionString(string value);
    [CompilerGeneratedAttribute]
public Version get_ReleasedVersion();
    [CompilerGeneratedAttribute]
public void set_ReleasedVersion(Version value);
    public string get_ReleasedVersionString();
    private void set_ReleasedVersionString(string value);
    public ServiceDefinition ToServiceDefinition(InheritLevel level);
    public static ApiResourceLocation FromServiceDefinition(ServiceDefinition definition);
    public sealed virtual bool Equals(ApiResourceLocation other);
    private sealed virtual override Guid Microsoft.VisualStudio.Services.WebApi.ISecuredObject.get_NamespaceId();
    private sealed virtual override int Microsoft.VisualStudio.Services.WebApi.ISecuredObject.get_RequiredPermissions();
    private sealed virtual override string Microsoft.VisualStudio.Services.WebApi.ISecuredObject.GetToken();
}
public class Microsoft.VisualStudio.Services.WebApi.ApiResourceLocationCollection : object {
    private Dictionary`2<Guid, ApiResourceLocation> m_locationsById;
    private Dictionary`2<string, List`1<ApiResourceLocation>> m_locationsByKey;
    public void AddResourceLocation(ApiResourceLocation location);
    public void AddResourceLocations(IEnumerable`1<ApiResourceLocation> locations);
    private string GetLocationCacheKey(string area, string resourceName);
    public ApiResourceLocation TryGetLocationById(Guid locationId);
    public ApiResourceLocation GetLocationById(Guid locationId);
    public IEnumerable`1<ApiResourceLocation> GetAllLocations();
    public IEnumerable`1<ApiResourceLocation> GetAreaLocations(string area);
    public IEnumerable`1<ApiResourceLocation> GetResourceLocations(string area, string resourceName);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.WebApi.ApiResourceVersion : object {
    private static string c_PreviewStageName;
    [CompilerGeneratedAttribute]
private Version <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ResourceVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsPreview>k__BackingField;
    public Version ApiVersion { get; private set; }
    [DataMemberAttribute]
public string ApiVersionString { get; private set; }
    [DataMemberAttribute]
public int ResourceVersion { get; public set; }
    [DataMemberAttribute]
public bool IsPreview { get; public set; }
    public ApiResourceVersion(double apiVersion, int resourceVersion);
    public ApiResourceVersion(Version apiVersion, int resourceVersion);
    public ApiResourceVersion(string apiResourceVersionString);
    [CompilerGeneratedAttribute]
public Version get_ApiVersion();
    [CompilerGeneratedAttribute]
private void set_ApiVersion(Version value);
    public string get_ApiVersionString();
    private void set_ApiVersionString(string value);
    [CompilerGeneratedAttribute]
public int get_ResourceVersion();
    [CompilerGeneratedAttribute]
public void set_ResourceVersion(int value);
    [CompilerGeneratedAttribute]
public bool get_IsPreview();
    [CompilerGeneratedAttribute]
public void set_IsPreview(bool value);
    public virtual string ToString();
    private void FromVersionString(string apiVersionString);
}
[ExtensionAttribute]
public static class Microsoft.VisualStudio.Services.WebApi.ApiResourceVersionExtensions : object {
    public static string c_apiVersionHeaderKey;
    internal static string c_legacyResourceVersionHeaderKey;
    [ExtensionAttribute]
public static void AddApiResourceVersionValues(ICollection`1<NameValueHeaderValue> headerValues, ApiResourceVersion version);
    [ExtensionAttribute]
public static void AddApiResourceVersionValues(ICollection`1<NameValueHeaderValue> headerValues, ApiResourceVersion version, bool replaceExisting);
    [ExtensionAttribute]
internal static void AddApiResourceVersionValues(ICollection`1<NameValueHeaderValue> headerValues, ApiResourceVersion version, bool replaceExisting, bool useLegacyFormat);
}
public class Microsoft.VisualStudio.Services.WebApi.AssetDetailObject : object {
    [CompilerGeneratedAttribute]
private string <OfferMarketingUrlIdentifier>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PublisherNaturalIdentifier>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServiceNaturalIdentifier>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProductTypeNaturalIdentifier>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PublisherId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PublisherName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OfferId>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, PlanDetails> <AnswersPerPlan>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, List`1<object>> <ServicePlansByMarket>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, LangDetails> <Languages>k__BackingField;
    [CompilerGeneratedAttribute]
private AnswersDetails <Answers>k__BackingField;
    public string OfferMarketingUrlIdentifier { get; public set; }
    public string PublisherNaturalIdentifier { get; public set; }
    public string ServiceNaturalIdentifier { get; public set; }
    public string ProductTypeNaturalIdentifier { get; public set; }
    public string PublisherId { get; public set; }
    public string PublisherName { get; public set; }
    public string OfferId { get; public set; }
    public Dictionary`2<string, PlanDetails> AnswersPerPlan { get; public set; }
    public Dictionary`2<string, List`1<object>> ServicePlansByMarket { get; public set; }
    public Dictionary`2<string, LangDetails> Languages { get; public set; }
    public AnswersDetails Answers { get; public set; }
    [CompilerGeneratedAttribute]
public string get_OfferMarketingUrlIdentifier();
    [CompilerGeneratedAttribute]
public void set_OfferMarketingUrlIdentifier(string value);
    [CompilerGeneratedAttribute]
public string get_PublisherNaturalIdentifier();
    [CompilerGeneratedAttribute]
public void set_PublisherNaturalIdentifier(string value);
    [CompilerGeneratedAttribute]
public string get_ServiceNaturalIdentifier();
    [CompilerGeneratedAttribute]
public void set_ServiceNaturalIdentifier(string value);
    [CompilerGeneratedAttribute]
public string get_ProductTypeNaturalIdentifier();
    [CompilerGeneratedAttribute]
public void set_ProductTypeNaturalIdentifier(string value);
    [CompilerGeneratedAttribute]
public string get_PublisherId();
    [CompilerGeneratedAttribute]
public void set_PublisherId(string value);
    [CompilerGeneratedAttribute]
public string get_PublisherName();
    [CompilerGeneratedAttribute]
public void set_PublisherName(string value);
    [CompilerGeneratedAttribute]
public string get_OfferId();
    [CompilerGeneratedAttribute]
public void set_OfferId(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, PlanDetails> get_AnswersPerPlan();
    [CompilerGeneratedAttribute]
public void set_AnswersPerPlan(Dictionary`2<string, PlanDetails> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, List`1<object>> get_ServicePlansByMarket();
    [CompilerGeneratedAttribute]
public void set_ServicePlansByMarket(Dictionary`2<string, List`1<object>> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, LangDetails> get_Languages();
    [CompilerGeneratedAttribute]
public void set_Languages(Dictionary`2<string, LangDetails> value);
    [CompilerGeneratedAttribute]
public AnswersDetails get_Answers();
    [CompilerGeneratedAttribute]
public void set_Answers(AnswersDetails value);
}
public class Microsoft.VisualStudio.Services.WebApi.AssetDetails : object {
    [CompilerGeneratedAttribute]
private DateTime <ChangedTime>k__BackingField;
    [CompilerGeneratedAttribute]
private Definition <Definition>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private long <OfferTypeChange>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OfferTypeId>k__BackingField;
    [CompilerGeneratedAttribute]
private OfferTypeVersions <OfferTypeVersions>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<object> <PricingNotRecalculatedRegions>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PublisherId>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Version>k__BackingField;
    [JsonPropertyAttribute("ChangedTime")]
public DateTime ChangedTime { get; public set; }
    [JsonPropertyAttribute("Definition")]
public Definition Definition { get; public set; }
    [JsonPropertyAttribute("Id")]
public string Id { get; public set; }
    [JsonPropertyAttribute("OfferTypeChange")]
public long OfferTypeChange { get; public set; }
    [JsonPropertyAttribute("OfferTypeId")]
public string OfferTypeId { get; public set; }
    [JsonPropertyAttribute("OfferTypeVersions")]
public OfferTypeVersions OfferTypeVersions { get; public set; }
    [JsonPropertyAttribute("PricingNotRecalculatedRegions")]
public List`1<object> PricingNotRecalculatedRegions { get; public set; }
    [JsonPropertyAttribute("PublisherId")]
public string PublisherId { get; public set; }
    [JsonPropertyAttribute("Status")]
public long Status { get; public set; }
    [JsonPropertyAttribute("Version")]
public long Version { get; public set; }
    [CompilerGeneratedAttribute]
public DateTime get_ChangedTime();
    [CompilerGeneratedAttribute]
public void set_ChangedTime(DateTime value);
    [CompilerGeneratedAttribute]
public Definition get_Definition();
    [CompilerGeneratedAttribute]
public void set_Definition(Definition value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public long get_OfferTypeChange();
    [CompilerGeneratedAttribute]
public void set_OfferTypeChange(long value);
    [CompilerGeneratedAttribute]
public string get_OfferTypeId();
    [CompilerGeneratedAttribute]
public void set_OfferTypeId(string value);
    [CompilerGeneratedAttribute]
public OfferTypeVersions get_OfferTypeVersions();
    [CompilerGeneratedAttribute]
public void set_OfferTypeVersions(OfferTypeVersions value);
    [CompilerGeneratedAttribute]
public List`1<object> get_PricingNotRecalculatedRegions();
    [CompilerGeneratedAttribute]
public void set_PricingNotRecalculatedRegions(List`1<object> value);
    [CompilerGeneratedAttribute]
public string get_PublisherId();
    [CompilerGeneratedAttribute]
public void set_PublisherId(string value);
    [CompilerGeneratedAttribute]
public long get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(long value);
    [CompilerGeneratedAttribute]
public long get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(long value);
}
[DataContractAttribute]
public abstract class Microsoft.VisualStudio.Services.WebApi.BaseSecuredObject : object {
    internal Guid m_namespaceId;
    internal int m_requiredPermissions;
    internal string m_token;
    private Guid Microsoft.VisualStudio.Services.WebApi.ISecuredObject.NamespaceId { get; }
    private int Microsoft.VisualStudio.Services.WebApi.ISecuredObject.RequiredPermissions { get; }
    protected BaseSecuredObject(ISecuredObject securedObject);
    private sealed virtual override Guid Microsoft.VisualStudio.Services.WebApi.ISecuredObject.get_NamespaceId();
    private sealed virtual override int Microsoft.VisualStudio.Services.WebApi.ISecuredObject.get_RequiredPermissions();
    private sealed virtual override string Microsoft.VisualStudio.Services.WebApi.ISecuredObject.GetToken();
}
public static class Microsoft.VisualStudio.Services.WebApi.BasicAuthBatchResourceIds : object {
    public static string AreaName;
    public static string AreaId;
    public static string BasicAuthBatchResource;
    public static Guid BasicAuthBatch;
    private static BasicAuthBatchResourceIds();
}
public class Microsoft.VisualStudio.Services.WebApi.CannotGetUnattributedClientException : VssException {
    public CannotGetUnattributedClientException(Type clientType);
    public CannotGetUnattributedClientException(string message, Exception innerException);
}
[AttributeUsageAttribute("132")]
public class Microsoft.VisualStudio.Services.WebApi.ClientCancellationTimeoutAttribute : Attribute {
    [CompilerGeneratedAttribute]
private TimeSpan <Timeout>k__BackingField;
    public TimeSpan Timeout { get; private set; }
    public ClientCancellationTimeoutAttribute(int timeoutSeconds);
    [CompilerGeneratedAttribute]
public TimeSpan get_Timeout();
    [CompilerGeneratedAttribute]
private void set_Timeout(TimeSpan value);
}
[AttributeUsageAttribute("4")]
public class Microsoft.VisualStudio.Services.WebApi.ClientCircuitBreakerSettingsAttribute : Attribute {
    [CompilerGeneratedAttribute]
private TimeSpan <Timeout>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ErrorPercentage>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaxConcurrentRequests>k__BackingField;
    public TimeSpan Timeout { get; private set; }
    public int ErrorPercentage { get; private set; }
    public int MaxConcurrentRequests { get; public set; }
    public ClientCircuitBreakerSettingsAttribute(int timeoutSeconds, int failurePercentage);
    [CompilerGeneratedAttribute]
public TimeSpan get_Timeout();
    [CompilerGeneratedAttribute]
private void set_Timeout(TimeSpan value);
    [CompilerGeneratedAttribute]
public int get_ErrorPercentage();
    [CompilerGeneratedAttribute]
private void set_ErrorPercentage(int value);
    [CompilerGeneratedAttribute]
public int get_MaxConcurrentRequests();
    [CompilerGeneratedAttribute]
public void set_MaxConcurrentRequests(int value);
}
[AttributeUsageAttribute("28")]
public class Microsoft.VisualStudio.Services.WebApi.ClientIncludeModelAttribute : Attribute {
    [CompilerGeneratedAttribute]
private RestClientLanguages <Languages>k__BackingField;
    public RestClientLanguages Languages { get; }
    public ClientIncludeModelAttribute(RestClientLanguages languages);
    [CompilerGeneratedAttribute]
public RestClientLanguages get_Languages();
}
[AttributeUsageAttribute("452")]
public class Microsoft.VisualStudio.Services.WebApi.ClientInternalUseOnlyAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <OmitFromTypeScriptDeclareFile>k__BackingField;
    public bool OmitFromTypeScriptDeclareFile { get; public set; }
    public ClientInternalUseOnlyAttribute(bool omitFromTypeScriptDeclareFile);
    [CompilerGeneratedAttribute]
public bool get_OmitFromTypeScriptDeclareFile();
    [CompilerGeneratedAttribute]
public void set_OmitFromTypeScriptDeclareFile(bool value);
}
[AttributeUsageAttribute("128")]
public class Microsoft.VisualStudio.Services.WebApi.ClientResponseContentAttribute : Attribute {
}
[AttributeUsageAttribute("128")]
public class Microsoft.VisualStudio.Services.WebApi.ClientResponseHeaderAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <HeaderName>k__BackingField;
    public string HeaderName { get; private set; }
    public ClientResponseHeaderAttribute(string headerName);
    [CompilerGeneratedAttribute]
public string get_HeaderName();
    [CompilerGeneratedAttribute]
private void set_HeaderName(string value);
}
[AttributeUsageAttribute("4")]
public class Microsoft.VisualStudio.Services.WebApi.ClientSensitiveHeaderAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <HeaderName>k__BackingField;
    public string HeaderName { get; public set; }
    public ClientSensitiveHeaderAttribute(string headerName);
    [CompilerGeneratedAttribute]
public string get_HeaderName();
    [CompilerGeneratedAttribute]
public void set_HeaderName(string value);
}
internal static class Microsoft.VisualStudio.Services.WebApi.CommerceResources : object {
    private static ResourceManager s_resMgr;
    public static ResourceManager Manager { get; }
    private static CommerceResources();
    public static ResourceManager get_Manager();
    private static string Get(string resourceName);
    private static string Get(string resourceName, CultureInfo culture);
    public static int GetInt(string resourceName);
    public static int GetInt(string resourceName, CultureInfo culture);
    public static bool GetBool(string resourceName);
    public static bool GetBool(string resourceName, CultureInfo culture);
    private static string Format(string resourceName, Object[] args);
    private static string Format(string resourceName, CultureInfo culture, Object[] args);
    public static string UnsupportedSubscriptionTypeExceptionMessage();
    public static string UnsupportedSubscriptionTypeExceptionMessage(CultureInfo culture);
    public static string UserIsNotSubscriptionAdmin();
    public static string UserIsNotSubscriptionAdmin(CultureInfo culture);
    public static string UserNotAccountAdministrator(object arg0, object arg1);
    public static string UserNotAccountAdministrator(object arg0, object arg1, CultureInfo culture);
    public static string OfferMeterNotFoundExceptionMessage(object arg0);
    public static string OfferMeterNotFoundExceptionMessage(object arg0, CultureInfo culture);
}
public static class Microsoft.VisualStudio.Services.WebApi.CommonMustacheHelpers : object {
    public static Dictionary`2<string, MustacheTemplateHelperWriter> GetHelpers();
    public static void EqualsHelper(MustacheTemplatedExpression expression, MustacheTextWriter writer, MustacheEvaluationContext context);
    public static void NotEqualsHelper(MustacheTemplatedExpression expression, MustacheTextWriter writer, MustacheEvaluationContext context);
    public static void StringContainsHelper(MustacheTemplatedExpression expression, MustacheTextWriter writer, MustacheEvaluationContext context);
    public static void StringLeftHelper(MustacheTemplatedExpression expression, MustacheTextWriter writer, MustacheEvaluationContext context);
    public static void StringRightHelper(MustacheTemplatedExpression expression, MustacheTextWriter writer, MustacheEvaluationContext context);
    public static void ArrayLengthHelper(MustacheTemplatedExpression expression, MustacheTextWriter writer, MustacheEvaluationContext context);
    public static void DateHelper(MustacheTemplatedExpression expression, MustacheTextWriter writer, MustacheEvaluationContext context);
    public static void StringPadHelper(MustacheTemplatedExpression expression, MustacheTextWriter writer, MustacheEvaluationContext context);
    public static void StringReplaceHelper(MustacheTemplatedExpression expression, MustacheTextWriter writer, MustacheEvaluationContext context);
    public static void StringLowerHelper(MustacheTemplatedExpression expression, MustacheTextWriter writer, MustacheEvaluationContext context);
    public static void StringFormatHelper(MustacheTemplatedExpression expression, MustacheTextWriter writer, MustacheEvaluationContext context);
    public static void LogicalAndHelper(MustacheTemplatedExpression expression, MustacheTextWriter writer, MustacheEvaluationContext context);
    public static void LogicalOrHelper(MustacheTemplatedExpression expression, MustacheTextWriter writer, MustacheEvaluationContext context);
    private static void WriteTruthyOutput(MustacheTemplatedExpression expression, MustacheTextWriter writer, MustacheEvaluationContext context, bool isTruthy);
}
[AttributeUsageAttribute("384")]
public class Microsoft.VisualStudio.Services.WebApi.CompatPropertyAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <OldName>k__BackingField;
    [CompilerGeneratedAttribute]
private Version <MaxApiVersion>k__BackingField;
    public string OldName { get; private set; }
    public Version MaxApiVersion { get; private set; }
    public CompatPropertyAttribute(string oldName, int majorApiVersion, int minorApiVersion);
    [CompilerGeneratedAttribute]
public string get_OldName();
    [CompilerGeneratedAttribute]
private void set_OldName(string value);
    [CompilerGeneratedAttribute]
public Version get_MaxApiVersion();
    [CompilerGeneratedAttribute]
private void set_MaxApiVersion(Version value);
}
[DataContractAttribute]
[FlagsAttribute]
public enum Microsoft.VisualStudio.Services.WebApi.ConnectOptions : Enum {
    public int value__;
    [EnumMemberAttribute]
public static ConnectOptions None;
    [EnumMemberAttribute]
public static ConnectOptions IncludeServices;
    [EnumMemberAttribute]
public static ConnectOptions IncludeLastUserAccess;
    [EnumMemberAttribute]
[EditorBrowsableAttribute("1")]
public static ConnectOptions IncludeInheritedDefinitionsOnly;
    [EnumMemberAttribute]
[EditorBrowsableAttribute("1")]
public static ConnectOptions IncludeNonInheritedDefinitionsOnly;
}
[DataContractAttribute]
[ClientIgnoreAttribute]
public class Microsoft.VisualStudio.Services.WebApi.ContentValidationExternalId : object {
    [CompilerGeneratedAttribute]
private string <FileName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Uri>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <E2EID>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Token>k__BackingField;
    [DataMemberAttribute]
public string FileName { get; public set; }
    [DataMemberAttribute]
public string Uri { get; public set; }
    [DataMemberAttribute]
public Guid E2EID { get; public set; }
    [DataMemberAttribute]
public string Token { get; public set; }
    [CompilerGeneratedAttribute]
public string get_FileName();
    [CompilerGeneratedAttribute]
public void set_FileName(string value);
    [CompilerGeneratedAttribute]
public string get_Uri();
    [CompilerGeneratedAttribute]
public void set_Uri(string value);
    [CompilerGeneratedAttribute]
public Guid get_E2EID();
    [CompilerGeneratedAttribute]
public void set_E2EID(Guid value);
    [CompilerGeneratedAttribute]
public string get_Token();
    [CompilerGeneratedAttribute]
public void set_Token(string value);
}
[DataContractAttribute]
[ClientIgnoreAttribute]
public class Microsoft.VisualStudio.Services.WebApi.ContentValidationIdentity : object {
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private SubjectDescriptor <SubjectDescriptor>k__BackingField;
    [DataMemberAttribute]
public string DisplayName { get; public set; }
    [DataMemberAttribute]
public SubjectDescriptor SubjectDescriptor { get; public set; }
    public ContentValidationIdentity(Identity source);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public SubjectDescriptor get_SubjectDescriptor();
    [CompilerGeneratedAttribute]
public void set_SubjectDescriptor(SubjectDescriptor value);
}
public static class Microsoft.VisualStudio.Services.WebApi.ContentValidationResourceIds : object {
    public static string Area;
    public static string ContentViolationArea;
    public static string CvsCallbackResource;
    public static Guid CvsCallbackLocationId;
    public static string TakedownResource;
    public static Guid TakedownLocationId;
    public static string AvertCallbackResource;
    public static Guid AvertCallbackLocationId;
    public static string ViolationReportsResource;
    public static Guid ViolationReportsLocationId;
    private static ContentValidationResourceIds();
}
public class Microsoft.VisualStudio.Services.WebApi.Contracts.DelegatedAuthorization.PatTokenUpdateRequest : object {
    public Guid AuthorizationId;
    public string DisplayName;
    public string Scope;
    public DateTime ValidTo;
    public Nullable`1<bool> AllOrgs;
}
public class Microsoft.VisualStudio.Services.WebApi.Contracts.ExternalEvent.ExternalGitBranch : object {
    [CompilerGeneratedAttribute]
private string <Ref>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [CompilerGeneratedAttribute]
private ExternalGitRepo <Repo>k__BackingField;
    [CompilerGeneratedAttribute]
private ExternalGitUser <Author>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <CommitDate>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <AdditionalProperties>k__BackingField;
    [DataMemberAttribute]
public string Ref { get; public set; }
    [DataMemberAttribute]
public string Url { get; public set; }
    [DataMemberAttribute]
public ExternalGitRepo Repo { get; public set; }
    [DataMemberAttribute]
public ExternalGitUser Author { get; public set; }
    [DataMemberAttribute]
public Nullable`1<DateTime> CommitDate { get; public set; }
    [DataMemberAttribute]
public IDictionary`2<string, object> AdditionalProperties { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Ref();
    [CompilerGeneratedAttribute]
public void set_Ref(string value);
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
    [CompilerGeneratedAttribute]
public ExternalGitRepo get_Repo();
    [CompilerGeneratedAttribute]
public void set_Repo(ExternalGitRepo value);
    [CompilerGeneratedAttribute]
public ExternalGitUser get_Author();
    [CompilerGeneratedAttribute]
public void set_Author(ExternalGitUser value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_CommitDate();
    [CompilerGeneratedAttribute]
public void set_CommitDate(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, object> get_AdditionalProperties();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AdditionalProperties(IDictionary`2<string, object> value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.WebApi.Contracts.Licensing.ExtensionLicenseData : object {
    [CompilerGeneratedAttribute]
private string <ExtensionId>k__BackingField;
    [CompilerGeneratedAttribute]
private VisualStudioOnlineServiceLevel <MinimumRequiredAccessLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsFree>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <CreatedDate>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <UpdatedDate>k__BackingField;
    [DataMemberAttribute]
public string ExtensionId { get; public set; }
    [DataMemberAttribute]
public VisualStudioOnlineServiceLevel MinimumRequiredAccessLevel { get; public set; }
    [DataMemberAttribute]
public bool IsFree { get; public set; }
    [DataMemberAttribute]
public DateTime CreatedDate { get; public set; }
    [DataMemberAttribute]
public DateTime UpdatedDate { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ExtensionId();
    [CompilerGeneratedAttribute]
public void set_ExtensionId(string value);
    [CompilerGeneratedAttribute]
public VisualStudioOnlineServiceLevel get_MinimumRequiredAccessLevel();
    [CompilerGeneratedAttribute]
public void set_MinimumRequiredAccessLevel(VisualStudioOnlineServiceLevel value);
    [CompilerGeneratedAttribute]
public bool get_IsFree();
    [CompilerGeneratedAttribute]
public void set_IsFree(bool value);
    [CompilerGeneratedAttribute]
public DateTime get_CreatedDate();
    [CompilerGeneratedAttribute]
public void set_CreatedDate(DateTime value);
    [CompilerGeneratedAttribute]
public DateTime get_UpdatedDate();
    [CompilerGeneratedAttribute]
public void set_UpdatedDate(DateTime value);
}
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.WebApi.Contracts.Users.UserProfileBackupState : Enum {
    public int value__;
    [EnumMemberAttribute]
public static UserProfileBackupState Inactive;
    [EnumMemberAttribute]
public static UserProfileBackupState Active;
}
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.WebApi.Contracts.Users.UserProfileSyncState : Enum {
    public int value__;
    [EnumMemberAttribute]
public static UserProfileSyncState None;
    [EnumMemberAttribute]
public static UserProfileSyncState Completed;
    [EnumMemberAttribute]
public static UserProfileSyncState NewProfileDataAndImageRetrieved;
    [EnumMemberAttribute]
public static UserProfileSyncState ProfileDataBackupDone;
    [EnumMemberAttribute]
public static UserProfileSyncState NewProfileDataSet;
    [EnumMemberAttribute]
public static UserProfileSyncState NewProfileDataUpdateFailed;
    [EnumMemberAttribute]
public static UserProfileSyncState NewProfileImageUpdateFailed;
}
public static class Microsoft.VisualStudio.Services.WebApi.CvsFileDownloadResourceIds : object {
    public static string AreaName;
    public static string LocationIdString;
    public static Guid LocationId;
    public static string Resource;
    private static CvsFileDownloadResourceIds();
}
public static class Microsoft.VisualStudio.Services.WebApi.DataImportCiConstants : object {
    public static string Prefix;
    public static string ImportId;
    public static string DatabaseImportJobId;
    public static string ApplicationHostId;
    public static string CollectionHostId;
    public static string ImportResult;
    public static string FailureArea;
    public static string StartTime;
    public static string FinishTime;
    public static string RunTime;
    public static string NumberOfMappedUsers;
    public static string ValidationData;
    public static string RunType;
    public static string WitData;
    public static string LicenseCount;
    public static string RequestedFor;
    public static string AADTenantName;
    public static string UserErrorMessage;
    [ObsoleteAttribute("Import Code are no longer supported")]
public static string ImportCode;
}
public class Microsoft.VisualStudio.Services.WebApi.DataImportClientVersionNotSupportedException : DataImportException {
    public DataImportClientVersionNotSupportedException(string message);
    public DataImportClientVersionNotSupportedException(string message, Exception innerException);
    protected DataImportClientVersionNotSupportedException(SerializationInfo info, StreamingContext context);
}
public static class Microsoft.VisualStudio.Services.WebApi.DataImportDelimiters : object {
    [ObsoleteAttribute("DataImportDelimiters.BetweenServiceInstanceIds should not be used, instead use OverrideServiceInstanceIds")]
public static char BetweenServiceInstanceIds;
    public static char BetweenIdentitiesToImport;
    public static char OverrideServiceInstanceIds;
    public static char ServiceInstanceTypeIds;
    public static string ServiceInstanceTypeIdsString;
    private static DataImportDelimiters();
}
public class Microsoft.VisualStudio.Services.WebApi.DataImportEventTypes : object {
    public static string ImportStatusChangedEvent;
}
public abstract class Microsoft.VisualStudio.Services.WebApi.DataImportException : VssServiceException {
    public DataImportException(string message);
    public DataImportException(string message, Exception innerException);
    protected DataImportException(SerializationInfo info, StreamingContext context);
}
public static class Microsoft.VisualStudio.Services.WebApi.DataImportFeatureFlags : object {
    public static string UpgradeDatabaseSkuForLargeImports;
    private static DataImportFeatureFlags();
}
[ObsoleteAttribute("No longer used in Data Import pipeline")]
[EditorBrowsableAttribute("1")]
public static class Microsoft.VisualStudio.Services.WebApi.DataImportFileSizeLimit : object {
    public static long IdentityMappingSizeLimitInBytes;
}
public static class Microsoft.VisualStudio.Services.WebApi.DataImportPackageConstants : object {
    public static string SourceLocation;
    [ObsoleteAttribute("No longer used in Data Import pipeline")]
[EditorBrowsableAttribute("1")]
public static string SourceIdentityMapping;
    public static string SourceDacpac;
    public static string SourceConnectionString;
    public static string AccountOwner;
    public static string AccountRegion;
    public static string AccountScaleUnit;
    public static string SkipValidation;
    public static string SkipWITImport;
    public static string SkipFileImport;
    public static string SourceDacpacLocation;
    public static string HostToMovePostImport;
    public static string NeighborHostName;
    public static string TargetDatabaseDowngradeSize;
    public static string TryMapADGroupsToAAD;
    public static string ImportType;
    public static string TfsMigratorImportVersion;
    public static string ImportPackage;
    public static string DatabaseTotalSize;
    public static string DatabaseBlobSize;
    public static string DatabaseTableSize;
    public static string ActiveUserCount;
    public static string TfsVersion;
    public static string TfsMigratorVersion;
    public static string Collation;
    public static string CommandExecutionTime;
    public static string CommandExecutionCount;
    public static string Force;
    public static string ServicesToInclude;
    public static string ServicesToExclude;
    public static string ValidationChecksum;
    public static string ValidationChecksumVersion;
    [ObsoleteAttribute("Import Code are no longer supported")]
public static string ImportCode;
}
public static class Microsoft.VisualStudio.Services.WebApi.DataImportPropertyConstants : object {
    public static string Prefix;
    public static string InternalPrefix;
    public static string ComputedPrefix;
    public static string AccountOwner;
    public static string AADTenantName;
    public static string AccountName;
    public static string AccountRegion;
    public static string AccountScaleUnit;
    public static string SourceDacpacLocation;
    public static string HostToMovePostImport;
    public static string TargetDatabaseDowngradeSize;
    public static string UseDevOpsDomainUrls;
    [EditorBrowsableAttribute("1")]
public static string IdentityImportMapping;
    public static string SkipDataImportFileContent;
    public static string SkipDataImportValidation;
    public static string SkipDataImportWIT;
    public static string SkipValidationTfvcInFileService;
    public static string TryMapADGroupsToAADGroupsAutomatically;
    public static string SourceDatabase;
    public static string NeighborHostId;
    public static string CollectionCreationJobId;
    public static string DatabaseImportJobId;
    public static string ActivateImportJobId;
    public static string ObtainDatabaHoldJobId;
    public static string HostMoveCollectionJobId;
    public static string OnlinePostHostUpgradeJobId;
    public static string StopHostAfterUpgradeJobId;
    public static string RemoveImportJobId;
    public static string DehydrateJobId;
    public static string OverrideServiceInstanceIds;
    public static string IgnoreImportStatus;
    public static string KeepRegistryData;
    public static string ImportSourceType;
    public static string RunType;
    public static string ImportOwner;
    public static string OrganizationName;
    public static string CollectionName;
    public static string SourceCollectionId;
    public static string GlobalCollectionId;
    public static string PreferredRegion;
    public static string OwnerId;
    public static string ProcessMode;
    public static string IdentitySidsToImport;
    public static string PermitForNotRules;
    public static string SoftWarningVersionMissmatchInTfsMigrator;
    public static string EnableCommerce;
    public static string DisableLicensingCallsToCommerceV1;
    public static string EnableLicensingDataImportStepPerformer;
    public static string EnableAzCommDataImportStepPerformer;
    public static string DisableLicensingIdentityStepPerformer;
    public static string SkipLicenseCount;
    public static string SkipCopyTcmDataToTfs;
    public static string KnownErrorPrefix;
    public static string EnableClearProcessIdFromProject;
    public static string TargetDatabaseServiceObjective;
    public static string DacPacQueryPropertiesTimeout;
    public static string DacPacDeployTimeout;
    public static string FirewallWaitTime;
    public static string ImportPackage;
    public static string SqlPackageVersion;
    public static string DatabaseTotalSize;
    public static string DatabaseBlobSize;
    public static string DatabaseTableSize;
    public static string ActiveUserCount;
    public static string TfsVersion;
    public static string Collation;
    public static string CommandExecutionTime;
    public static string CommandExecutionCount;
    public static string Force;
    public static string TenantId;
    public static string ServicesToInclude;
    public static string ValidationChecksum;
    public static string FieldMetaDataValidation;
    public static string MaxWorkItemTypesPerProcess;
    public static string MaxCustomWorkItemTypesPerProcess;
    public static string MaxFieldsPerCollection;
    public static string MaxFieldsPerProcessTemplate;
    public static string MaxCategoriesPerProcess;
    public static string MaxGlobalListCountPerProcess;
    public static string MaxGlobalListItemCountPerProcess;
    public static string MaxCustomLinkTypes;
    public static string MaxStatesPerWorkItemType;
    public static string MaxValuesInSingleRuleValuesList;
    public static string MaxSyncNameChangesFieldsPerType;
    public static string MaxFieldsInWorkItemType;
    public static string MaxCustomFieldsPerWorkItemType;
    public static string MaxRulesPerWorkItemType;
    public static string MaxPickListItemsPerList;
    public static string MaxPickListItemLength;
    public static string MaxCustomStatesPerWorkItemType;
    public static string MaxPortfolioBacklogLevels;
    public static string MaxPickListsPerCollection;
    public static string RestrictedMilestones;
    public static string BlockDataImportWithRunningImportEnabled;
    public static string BlockDataImportWithExistingProductionEnabled;
    public static string BlockDataImportWithRecentlyCompletedEnabled;
    public static string RequirePreviousProductionHardDelete;
    public static string TfsMigratorVersion;
    public static string TfsMigratorImportVersion;
    public static string SkipValidationTfsMigratorVersion;
    public static string SkipValidationSourceCollectionId;
    public static string ServicesToImport;
    public static string PreviewServices;
    public static string ServiceMapPrefix;
    public static string DryRunAccountLifeSpan;
    public static string FailedImportLifeSpan;
    public static string CollectionBlockedWarningConfirmed;
    public static string OrchestratingDataImportHostId;
    public static string TfsMigratorBanner;
    public static string NewTfsMigratorVersionMessageAlreadyShown;
    public static string SkipValidationDataImportHistory;
    public static string SkipValidationBlockImportReason;
    public static string CollectionBlockedWarning;
    public static string BlockImportReason;
    public static string PublicImportsEnabled;
    public static string MinTfsMigratorVersionPrefix;
    public static string MinTfsMigratorImportVersionPrefix;
    public static string LatestTfsMigratorVersionPrefix;
    public static string UnsupportedCollations;
    public static string BlockDataImportTenantLimit;
    public static string DisableAutoFix;
    public static string DisabeWorkItemColorsAutoFix;
    public static string AllowCustomTeamField;
    public static string SupportedRegions;
    public static string DeleteActiveDryRunAccounts;
    public static string MinSqlPackageVersion;
    public static string AllowParallelImports;
    public static string BlockLargeDacpacs;
    public static string OverrideProjectLimit;
    public static string ServicesThatUseParallelCopy;
    public static string DenyListedSpsContainerNames;
    public static string SpsInstanceId;
    public static string UseStaticSpsInstance;
    public static string AllowedSpsInstanceRegionStatuses;
    public static string SpsRegionCacheLimit;
    public static string SkipOrganizationCatalogService;
    public static string AllowedSourceMilestones;
    [ObsoleteAttribute("Import Code are no longer supported")]
[EditorBrowsableAttribute("1")]
public static string ImportCode;
    [ObsoleteAttribute("This property has been deprecated")]
[EditorBrowsableAttribute("1")]
public static string CreateImportCodeInput;
    [ObsoleteAttribute("This property has been deprecated")]
[EditorBrowsableAttribute("1")]
public static string HostMoveAccountJobId;
    [ObsoleteAttribute("This property has been deprecated")]
[EditorBrowsableAttribute("1")]
public static string LegacyServicesToImport;
    [ObsoleteAttribute("This property has been deprecated")]
[EditorBrowsableAttribute("1")]
public static string AdditionalMilestone;
    [ObsoleteAttribute("This property has been deprecated")]
[EditorBrowsableAttribute("1")]
public static string NeighborHostName;
    [ObsoleteAttribute("This property has been deprecated")]
[EditorBrowsableAttribute("1")]
public static string AddSidsToImportFile;
    [ObsoleteAttribute("This property has been deprecated")]
[EditorBrowsableAttribute("1")]
public static string StopWritingMappingFile;
    [ObsoleteAttribute("This property has been deprecated")]
[EditorBrowsableAttribute("1")]
public static string ShouldImportFromSidsList;
    [ObsoleteAttribute("This property has been deprecated")]
[EditorBrowsableAttribute("1")]
public static string DisableIdentityDualWriteToDeployment;
}
public static class Microsoft.VisualStudio.Services.WebApi.DataImportPropertyDelimiter : object {
    public static char Underscore;
}
public static class Microsoft.VisualStudio.Services.WebApi.DataImportResources : object {
    private static ResourceManager s_resMgr;
    public static ResourceManager Manager { get; }
    private static DataImportResources();
    public static ResourceManager get_Manager();
    private static string Get(string resourceName);
    private static string Get(string resourceName, CultureInfo culture);
    public static int GetInt(string resourceName);
    public static int GetInt(string resourceName, CultureInfo culture);
    public static bool GetBool(string resourceName);
    public static bool GetBool(string resourceName, CultureInfo culture);
    private static string Format(string resourceName, Object[] args);
    private static string Format(string resourceName, CultureInfo culture, Object[] args);
    public static string SourceIsNotDetachedDatabase();
    public static string SourceIsNotDetachedDatabase(CultureInfo culture);
    public static string ImportInvalidSourceExtendedPropertyValue(object arg0, object arg1, object arg2);
    public static string ImportInvalidSourceExtendedPropertyValue(object arg0, object arg1, object arg2, CultureInfo culture);
    public static string MissingSourceExtendedProperty(object arg0);
    public static string MissingSourceExtendedProperty(object arg0, CultureInfo culture);
    public static string UnsupportedCollectionMilestone(object arg0);
    public static string UnsupportedCollectionMilestone(object arg0, CultureInfo culture);
    public static string UnsupportedCollectionMilestoneForService(object arg0, object arg1, object arg2);
    public static string UnsupportedCollectionMilestoneForService(object arg0, object arg1, object arg2, CultureInfo culture);
    public static string SourceIsTFSConfigurationDatabase();
    public static string SourceIsTFSConfigurationDatabase(CultureInfo culture);
    public static string UnableToExtractDacpacInformation();
    public static string UnableToExtractDacpacInformation(CultureInfo culture);
    public static string SourceDatabaseIsMissingSnapshotTable();
    public static string SourceDatabaseIsMissingSnapshotTable(CultureInfo culture);
    public static string TfsMigratorVersionIsNotSupported();
    public static string TfsMigratorVersionIsNotSupported(CultureInfo culture);
    public static string TfsMigratorVersionIsNotSupportedForPepare();
    public static string TfsMigratorVersionIsNotSupportedForPepare(CultureInfo culture);
    public static string TfsMigratorVersionIsNotSupportedForImport();
    public static string TfsMigratorVersionIsNotSupportedForImport(CultureInfo culture);
    public static string SourceDatabaseContainsExtractedData();
    public static string SourceDatabaseContainsExtractedData(CultureInfo culture);
    public static string SqlPackageVersionNotSupportedException();
    public static string SqlPackageVersionNotSupportedException(CultureInfo culture);
    public static string MaxDacpacSizeExceededException(object arg0, object arg1);
    public static string MaxDacpacSizeExceededException(object arg0, object arg1, CultureInfo culture);
}
public static class Microsoft.VisualStudio.Services.WebApi.DataImportResponseConstants : object {
    public static string Prefix;
    public static string ImportServiceInstances;
    public static string DryRunAccountLifeSpan;
}
public class Microsoft.VisualStudio.Services.WebApi.DataImportSemaphore : object {
    public static string RegistryBase;
    public static string LockKeyName;
}
public static class Microsoft.VisualStudio.Services.WebApi.DataImportServiceInstanceTypes : object {
    public static string DataImportString;
    public static Guid DataImport;
    private static DataImportServiceInstanceTypes();
}
public static class Microsoft.VisualStudio.Services.WebApi.DataImportSourceTypeConstants : object {
    public static string DACPAC;
    public static string AzureSQLVM;
}
public static class Microsoft.VisualStudio.Services.WebApi.DataImportTestMilestones : object {
    public static string SmallMostRecentImportMilestone;
    public static string MostRecentImportMilestone;
    public static string TurkishCollation;
    public static string SmallMostRecentImportMilestoneMinusOne;
    public static string MostRecentImportMilestoneMinusOne;
    public static string SmallMostRecentImportMilestoneMinusTwo;
    public static string OldestServiceLevel;
    public static string OldestImportMilestone;
    public static string StretchServiceLevel;
    public static string StretchMilestone;
    public static string OldStretchServiceLevel;
    public static string OldStretchMilestone;
    [ObsoleteAttribute("This property has been deprecated")]
[EditorBrowsableAttribute("1")]
public static string MostRecent;
}
public class Microsoft.VisualStudio.Services.WebApi.DataImportUserErrorException : DataImportException {
    public DataImportUserErrorException(string message);
    public DataImportUserErrorException(string message, Exception innerException);
    protected DataImportUserErrorException(SerializationInfo info, StreamingContext context);
}
[EditorBrowsableAttribute("1")]
public class Microsoft.VisualStudio.Services.WebApi.DefaultValueOnPublicAccessJsonConverter`1 : PublicAccessJsonConverter`1<T> {
    public virtual object GetDefaultValue();
}
public class Microsoft.VisualStudio.Services.WebApi.Definition : object {
    [CompilerGeneratedAttribute]
private string <DisplayText>k__BackingField;
    [CompilerGeneratedAttribute]
private object <LocalizedValues>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<OfferPlan> <Plans>k__BackingField;
    [JsonPropertyAttribute("DisplayText")]
public string DisplayText { get; public set; }
    [JsonPropertyAttribute("LocalizedValues")]
public object LocalizedValues { get; public set; }
    [JsonPropertyAttribute("plans")]
public List`1<OfferPlan> Plans { get; public set; }
    [CompilerGeneratedAttribute]
public string get_DisplayText();
    [CompilerGeneratedAttribute]
public void set_DisplayText(string value);
    [CompilerGeneratedAttribute]
public object get_LocalizedValues();
    [CompilerGeneratedAttribute]
public void set_LocalizedValues(object value);
    [CompilerGeneratedAttribute]
public List`1<OfferPlan> get_Plans();
    [CompilerGeneratedAttribute]
public void set_Plans(List`1<OfferPlan> value);
}
[DataContractAttribute]
[FlagsAttribute]
public enum Microsoft.VisualStudio.Services.WebApi.DeploymentFlags : Enum {
    public int value__;
    [EnumMemberAttribute]
public static DeploymentFlags None;
    [EnumMemberAttribute]
public static DeploymentFlags Hosted;
    [EnumMemberAttribute]
public static DeploymentFlags OnPremises;
}
public class Microsoft.VisualStudio.Services.WebApi.EmptyImportSourceException : DataImportException {
    public EmptyImportSourceException(string message);
    public EmptyImportSourceException(string message, Exception innerException);
    protected EmptyImportSourceException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.WebApi.Exceptions.AadThrottlingException : TooManyRequestsException {
    public AadThrottlingException(string message, DateTime retryAfterDateTime);
    public AadThrottlingException(string message, DateTime retryAfterDateTime, Exception innerException);
    protected AadThrottlingException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.WebApi.Exceptions.ClientRequestThrottledException : TooManyRequestsException {
    public ClientRequestThrottledException(string message, DateTime retryAfterDateTime);
    public ClientRequestThrottledException(string message, DateTime retryAfterDateTime, Exception innerException);
    protected ClientRequestThrottledException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.WebApi.Exceptions.InvalidQueryStringException : VssServiceException {
    public InvalidQueryStringException(string message);
    public InvalidQueryStringException(string message, Exception innerException);
}
public class Microsoft.VisualStudio.Services.WebApi.Exceptions.MissingRequiredHeaderException : VssServiceException {
    public MissingRequiredHeaderException(string message);
    public MissingRequiredHeaderException(string message, Exception innerException);
    public MissingRequiredHeaderException(SerializationInfo info, StreamingContext context);
}
[ExceptionMappingAttribute("0.0", "3.0", "MissingRequiredParameterException", "Microsoft.VisualStudio.Services.WebApi.Exceptions.MissingRequiredParameterException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.WebApi.Exceptions.MissingRequiredParameterException : VssServiceException {
    public MissingRequiredParameterException(string message);
    public MissingRequiredParameterException(string message, Exception innerException);
    public MissingRequiredParameterException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.WebApi.Exceptions.MultipleHeaderValuesException : VssServiceException {
    public MultipleHeaderValuesException(string message);
    public MultipleHeaderValuesException(string message, Exception innerException);
    public MultipleHeaderValuesException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.WebApi.Exceptions.TooManyRequestsException : VssServiceException {
    [CompilerGeneratedAttribute]
private DateTime <RetryAfterDateTime>k__BackingField;
    public DateTime RetryAfterDateTime { get; public set; }
    public TooManyRequestsException(string message, DateTime retryAfterDateTime);
    public TooManyRequestsException(string message, DateTime retryAfterDateTime, Exception innerException);
    protected TooManyRequestsException(SerializationInfo info, StreamingContext context);
    [CompilerGeneratedAttribute]
public DateTime get_RetryAfterDateTime();
    [CompilerGeneratedAttribute]
public void set_RetryAfterDateTime(DateTime value);
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
[ExceptionMappingAttribute("0.0", "3.0", "VssDeprecatedApiException", "Microsoft.VisualStudio.Services.WebApi.Exceptions.VssDeprecatedApiException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.WebApi.Exceptions.VssDeprecatedApiException : VssServiceException {
    public VssDeprecatedApiException(string message);
    public VssDeprecatedApiException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "ExtensibleServiceTypeNotRegisteredException", "Microsoft.VisualStudio.Services.Client.ExtensibleServiceTypeNotRegisteredException, Microsoft.VisualStudio.Services.Client, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.WebApi.ExtensibleServiceTypeNotRegisteredException : VssException {
    public ExtensibleServiceTypeNotRegisteredException(Type managedType);
    public ExtensibleServiceTypeNotRegisteredException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "ExtensibleServiceTypeNotValidException", "Microsoft.VisualStudio.Services.Client.ExtensibleServiceTypeNotValidException, Microsoft.VisualStudio.Services.Client, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.WebApi.ExtensibleServiceTypeNotValidException : VssException {
    public ExtensibleServiceTypeNotValidException(Type managedType, Type extensibleType);
    public ExtensibleServiceTypeNotValidException(string message, Exception innerException);
}
internal static class Microsoft.VisualStudio.Services.WebApi.FileContainerResources : object {
    private static ResourceManager s_resMgr;
    public static ResourceManager Manager { get; }
    private static FileContainerResources();
    public static ResourceManager get_Manager();
    private static string Get(string resourceName);
    private static string Get(string resourceName, CultureInfo culture);
    public static int GetInt(string resourceName);
    public static int GetInt(string resourceName, CultureInfo culture);
    public static bool GetBool(string resourceName);
    public static bool GetBool(string resourceName, CultureInfo culture);
    private static string Format(string resourceName, Object[] args);
    private static string Format(string resourceName, CultureInfo culture, Object[] args);
    public static string ArtifactUriNotSupportedException(object arg0);
    public static string ArtifactUriNotSupportedException(object arg0, CultureInfo culture);
    public static string ContainerNotFoundException(object arg0);
    public static string ContainerNotFoundException(object arg0, CultureInfo culture);
    public static string ContainerItemNotFoundException(object arg0, object arg1);
    public static string ContainerItemNotFoundException(object arg0, object arg1, CultureInfo culture);
    public static string ContainerItemWithDifferentTypeExists(object arg0, object arg1);
    public static string ContainerItemWithDifferentTypeExists(object arg0, object arg1, CultureInfo culture);
    public static string PendingUploadNotFoundException(object arg0);
    public static string PendingUploadNotFoundException(object arg0, CultureInfo culture);
    public static string ContainerItemDoesNotExist(object arg0, object arg1);
    public static string ContainerItemDoesNotExist(object arg0, object arg1, CultureInfo culture);
    public static string ContainerItemCopySourcePendingUpload(object arg0);
    public static string ContainerItemCopySourcePendingUpload(object arg0, CultureInfo culture);
    public static string ContainerItemCopyTargetChildOfSource(object arg0, object arg1);
    public static string ContainerItemCopyTargetChildOfSource(object arg0, object arg1, CultureInfo culture);
    public static string ContainerItemCopyDuplicateTargets(object arg0);
    public static string ContainerItemCopyDuplicateTargets(object arg0, CultureInfo culture);
    public static string ContainerAlreadyExists(object arg0);
    public static string ContainerAlreadyExists(object arg0, CultureInfo culture);
    public static string UnexpectedContentType(object arg0, object arg1);
    public static string UnexpectedContentType(object arg0, object arg1, CultureInfo culture);
    public static string NoContentReturned();
    public static string NoContentReturned(CultureInfo culture);
    public static string GzipNotSupportedOnServer();
    public static string GzipNotSupportedOnServer(CultureInfo culture);
    public static string BadCompression();
    public static string BadCompression(CultureInfo culture);
    public static string ChunksizeWrongWithContentId(object arg0);
    public static string ChunksizeWrongWithContentId(object arg0, CultureInfo culture);
    public static string ContentIdCollision(object arg0, object arg1, object arg2, object arg3);
    public static string ContentIdCollision(object arg0, object arg1, object arg2, object arg3, CultureInfo culture);
}
internal static class Microsoft.VisualStudio.Services.WebApi.GraphResources : object {
    private static ResourceManager s_resMgr;
    public static ResourceManager Manager { get; }
    private static GraphResources();
    public static ResourceManager get_Manager();
    private static string Get(string resourceName);
    private static string Get(string resourceName, CultureInfo culture);
    public static int GetInt(string resourceName);
    public static int GetInt(string resourceName, CultureInfo culture);
    public static bool GetBool(string resourceName);
    public static bool GetBool(string resourceName, CultureInfo culture);
    private static string Format(string resourceName, Object[] args);
    private static string Format(string resourceName, CultureInfo culture, Object[] args);
    public static string CannotEditChildrenOfNonGroup(object arg0);
    public static string CannotEditChildrenOfNonGroup(object arg0, CultureInfo culture);
    public static string EmptySubjectDescriptorNotAllowed(object arg0);
    public static string EmptySubjectDescriptorNotAllowed(object arg0, CultureInfo culture);
    public static string WellKnownSidNotAllowed(object arg0);
    public static string WellKnownSidNotAllowed(object arg0, CultureInfo culture);
    public static string GraphMembershipNotFound(object arg0, object arg1);
    public static string GraphMembershipNotFound(object arg0, object arg1, CultureInfo culture);
    public static string GraphSubjectNotFound(object arg0);
    public static string GraphSubjectNotFound(object arg0, CultureInfo culture);
    public static string InvalidGraphLegacyDescriptor(object arg0);
    public static string InvalidGraphLegacyDescriptor(object arg0, CultureInfo culture);
    public static string InvalidGraphMemberCuid(object arg0);
    public static string InvalidGraphMemberCuid(object arg0, CultureInfo culture);
    public static string InvalidGraphMemberStorageKey(object arg0);
    public static string InvalidGraphMemberStorageKey(object arg0, CultureInfo culture);
    public static string InvalidGraphSubjectDescriptor(object arg0);
    public static string InvalidGraphSubjectDescriptor(object arg0, CultureInfo culture);
    public static string StorageKeyNotFound(object arg0);
    public static string StorageKeyNotFound(object arg0, CultureInfo culture);
    public static string SubjectDescriptorNotFoundWithIdentityDescriptor(object arg0);
    public static string SubjectDescriptorNotFoundWithIdentityDescriptor(object arg0, CultureInfo culture);
    public static string SubjectDescriptorNotFoundWithStorageKey(object arg0);
    public static string SubjectDescriptorNotFoundWithStorageKey(object arg0, CultureInfo culture);
    public static string IdentifierLengthOutOfRange();
    public static string IdentifierLengthOutOfRange(CultureInfo culture);
    public static string SubjectTypeLengthOutOfRange();
    public static string SubjectTypeLengthOutOfRange(CultureInfo culture);
}
internal static class Microsoft.VisualStudio.Services.WebApi.HandleBarBuiltinHelpers : object {
    internal static Dictionary`2<string, MustacheTemplateHelperWriter> GetHelpers();
    internal static void HandlebarBlockWithHelper(MustacheTemplatedExpression expression, MustacheTextWriter writer, MustacheEvaluationContext context);
    internal static void HandlebarBlockIfHelper(MustacheTemplatedExpression expression, MustacheTextWriter writer, MustacheEvaluationContext context);
    internal static void HandlebarBlockUnlessHelper(MustacheTemplatedExpression expression, MustacheTextWriter writer, MustacheEvaluationContext context);
    internal static void HandlebarBlockEachHelper(MustacheTemplatedExpression expression, MustacheTextWriter writer, MustacheEvaluationContext context);
    internal static void HandlebarBlockLookupHelper(MustacheTemplatedExpression expression, MustacheTextWriter writer, MustacheEvaluationContext context);
    internal static void HandlebarPartialHelper(MustacheTemplatedExpression expression, MustacheTextWriter writer, MustacheEvaluationContext context);
}
[ExtensionAttribute]
[EditorBrowsableAttribute("1")]
public static class Microsoft.VisualStudio.Services.WebApi.HttpClientExtensions : object {
    [ExtensionAttribute]
public static Task`1<HttpResponseMessage> PatchAsync(HttpClient client, string uri, HttpContent content);
    [ExtensionAttribute]
public static Task`1<HttpResponseMessage> PatchAsync(HttpClient client, string uri, HttpContent content, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<HttpResponseMessage> DeleteAsync(HttpClient client, string uri, HttpContent content, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.WebApi.HttpClientExtensions/<DownloadFileFromTfsAsync>d__3")]
[ExtensionAttribute]
public static Task`1<HttpResponseMessage> DownloadFileFromTfsAsync(HttpClient client, Uri requestUri, Stream stream, CancellationToken cancellationToken);
}
[ResourceAreaAttribute("0AD75E84-88AE-4325-84B5-EBB30910283C")]
public class Microsoft.VisualStudio.Services.WebApi.HttpClients.TokenHttpClient : VssHttpClientBase {
    private static ApiResourceVersion DefaultApiResourceVersion;
    private static Dictionary`2<string, Type> TranslatedExceptionsMap;
    protected IDictionary`2<string, Type> TranslatedExceptions { get; }
    private static TokenHttpClient();
    public TokenHttpClient(Uri baseUrl, VssCredentials credentials);
    public TokenHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public TokenHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public TokenHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public TokenHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    protected virtual IDictionary`2<string, Type> get_TranslatedExceptions();
    public virtual Task`1<string> GetAadUserAccessToken(string resource, string tenantId, IdentityDescriptor identityDescriptor, object userState, CancellationToken cancellationToken);
    public virtual Task`1<string> GetAadAppAccessToken(string resource, string tenantId, object userState, CancellationToken cancellationToken);
    public virtual Task`1<string> UpdateRefreshTokenOnBehalfOf(string accessToken, string resource, string tenantId, IdentityDescriptor identityDescriptor, object userState, CancellationToken cancellationToken);
    public virtual Task`1<string> GetUserAccessTokenFromAuthCode(string authCode, string resource, string tenantId, string replyToUri, IdentityDescriptor identityDescriptor, object userState, CancellationToken cancellationToken);
}
[ExtensionAttribute]
public static class Microsoft.VisualStudio.Services.WebApi.HttpHeadersExtensions : object {
    [ExtensionAttribute]
public static bool TryGetSingleValue(HttpHeaders headers, string name, String& value, bool splitOnComma);
}
[ExtensionAttribute]
internal static class Microsoft.VisualStudio.Services.WebApi.HttpMessageExtensions : object {
    private static string tracerKey;
    [ExtensionAttribute]
internal static void Trace(HttpRequestMessage request);
    [ExtensionAttribute]
internal static void Trace(HttpResponseMessage response);
}
[EditorBrowsableAttribute("1")]
public class Microsoft.VisualStudio.Services.WebApi.HttpRetryHelper : object {
    private int m_maxAttempts;
    private Func`2<Exception, bool> m_canRetryDelegate;
    private static TimeSpan s_minBackoff;
    private static TimeSpan s_maxBackoff;
    private static TimeSpan s_deltaBackoff;
    public int MaxAttempts { get; }
    public HttpRetryHelper(int maxAttempts, Func`2<Exception, bool> canRetryDelegate);
    private static HttpRetryHelper();
    public void Invoke(Action action);
    public void Invoke(Action action, Int32& remainingAttempts);
    public TResult Invoke(Func`1<TResult> function);
    public TResult Invoke(Func`1<TResult> function, Int32& remainingAttempts);
    protected virtual void Sleep(int remainingAttempts);
    public int get_MaxAttempts();
}
[JsonObjectAttribute]
[XmlSerializableDataContractAttribute]
public class Microsoft.VisualStudio.Services.WebApi.IdentityRef : GraphSubjectBase {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UniqueName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DirectoryAlias>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProfileUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ImageUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsContainer>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsAadIdentity>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Inactive>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDeletedInOrigin>k__BackingField;
    public SubjectDescriptor Descriptor { get; public set; }
    public string DisplayName { get; public set; }
    public string Url { get; public set; }
    public ReferenceLinks Links { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public string Id { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
[JsonConverterAttribute("Microsoft.VisualStudio.Services.WebApi.DefaultValueOnPublicAccessJsonConverter`1<System.String>")]
public string UniqueName { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
[JsonConverterAttribute("Microsoft.VisualStudio.Services.WebApi.DefaultValueOnPublicAccessJsonConverter`1<System.String>")]
public string DirectoryAlias { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
[JsonConverterAttribute("Microsoft.VisualStudio.Services.WebApi.DefaultValueOnPublicAccessJsonConverter`1<System.String>")]
public string ProfileUrl { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
[JsonConverterAttribute("Microsoft.VisualStudio.Services.WebApi.DefaultValueOnPublicAccessJsonConverter`1<System.String>")]
public string ImageUrl { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool IsContainer { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool IsAadIdentity { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool Inactive { get; public set; }
    [DataMemberAttribute]
[JsonPropertyAttribute]
public bool IsDeletedInOrigin { get; public set; }
    [DataMemberAttribute]
[JsonIgnoreAttribute]
[ObsoleteAttribute]
[EditorBrowsableAttribute("1")]
public string DisplayNameForXmlSerialization { get; public set; }
    [DataMemberAttribute]
[JsonIgnoreAttribute]
[ObsoleteAttribute]
[EditorBrowsableAttribute("1")]
public string UrlForXmlSerialization { get; public set; }
    private Guid Microsoft.VisualStudio.Services.WebApi.ISecuredObject.NamespaceId { get; }
    private int Microsoft.VisualStudio.Services.WebApi.ISecuredObject.RequiredPermissions { get; }
    public SubjectDescriptor get_Descriptor();
    public void set_Descriptor(SubjectDescriptor value);
    public string get_DisplayName();
    public void set_DisplayName(string value);
    public string get_Url();
    public void set_Url(string value);
    public ReferenceLinks get_Links();
    public void set_Links(ReferenceLinks value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_UniqueName();
    [CompilerGeneratedAttribute]
public void set_UniqueName(string value);
    [CompilerGeneratedAttribute]
public string get_DirectoryAlias();
    [CompilerGeneratedAttribute]
public void set_DirectoryAlias(string value);
    [CompilerGeneratedAttribute]
public string get_ProfileUrl();
    [CompilerGeneratedAttribute]
public void set_ProfileUrl(string value);
    [CompilerGeneratedAttribute]
public string get_ImageUrl();
    [CompilerGeneratedAttribute]
public void set_ImageUrl(string value);
    [CompilerGeneratedAttribute]
public bool get_IsContainer();
    [CompilerGeneratedAttribute]
public void set_IsContainer(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsAadIdentity();
    [CompilerGeneratedAttribute]
public void set_IsAadIdentity(bool value);
    [CompilerGeneratedAttribute]
public bool get_Inactive();
    [CompilerGeneratedAttribute]
public void set_Inactive(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsDeletedInOrigin();
    [CompilerGeneratedAttribute]
public void set_IsDeletedInOrigin(bool value);
    public string get_DisplayNameForXmlSerialization();
    public void set_DisplayNameForXmlSerialization(string value);
    public string get_UrlForXmlSerialization();
    public void set_UrlForXmlSerialization(string value);
    private sealed virtual override Guid Microsoft.VisualStudio.Services.WebApi.ISecuredObject.get_NamespaceId();
    private sealed virtual override int Microsoft.VisualStudio.Services.WebApi.ISecuredObject.get_RequiredPermissions();
    private sealed virtual override string Microsoft.VisualStudio.Services.WebApi.ISecuredObject.GetToken();
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.WebApi.IdentityRefWithEmail : IdentityRef {
    [CompilerGeneratedAttribute]
private string <PreferredEmailAddress>k__BackingField;
    [DataMemberAttribute]
public string PreferredEmailAddress { get; public set; }
    [CompilerGeneratedAttribute]
public string get_PreferredEmailAddress();
    [CompilerGeneratedAttribute]
public void set_PreferredEmailAddress(string value);
}
internal static class Microsoft.VisualStudio.Services.WebApi.IdentityResources : object {
    private static ResourceManager s_resMgr;
    public static ResourceManager Manager { get; }
    private static IdentityResources();
    public static ResourceManager get_Manager();
    private static string Get(string resourceName);
    private static string Get(string resourceName, CultureInfo culture);
    public static int GetInt(string resourceName);
    public static int GetInt(string resourceName, CultureInfo culture);
    public static bool GetBool(string resourceName);
    public static bool GetBool(string resourceName, CultureInfo culture);
    private static string Format(string resourceName, Object[] args);
    private static string Format(string resourceName, CultureInfo culture, Object[] args);
    public static string FieldReadOnly(object arg0);
    public static string FieldReadOnly(object arg0, CultureInfo culture);
    public static string GROUPCREATIONERROR(object arg0, object arg1);
    public static string GROUPCREATIONERROR(object arg0, object arg1, CultureInfo culture);
    public static string ADDMEMBERCYCLICMEMBERSHIPERROR(object arg0, object arg1);
    public static string ADDMEMBERCYCLICMEMBERSHIPERROR(object arg0, object arg1, CultureInfo culture);
    public static string GROUPSCOPECREATIONERROR(object arg0);
    public static string GROUPSCOPECREATIONERROR(object arg0, CultureInfo culture);
    public static string ADDMEMBERIDENTITYALREADYMEMBERERROR(object arg0, object arg1);
    public static string ADDMEMBERIDENTITYALREADYMEMBERERROR(object arg0, object arg1, CultureInfo culture);
    public static string REMOVEGROUPMEMBERNOTMEMBERERROR(object arg0);
    public static string REMOVEGROUPMEMBERNOTMEMBERERROR(object arg0, CultureInfo culture);
    public static string REMOVEADMINGROUPERROR();
    public static string REMOVEADMINGROUPERROR(CultureInfo culture);
    public static string REMOVEEVERYONEGROUPERROR();
    public static string REMOVEEVERYONEGROUPERROR(CultureInfo culture);
    public static string REMOVESERVICEGROUPERROR();
    public static string REMOVESERVICEGROUPERROR(CultureInfo culture);
    public static string REMOVESPECIALGROUPERROR();
    public static string REMOVESPECIALGROUPERROR(CultureInfo culture);
    public static string FINDGROUPSIDDOESNOTEXISTERROR(object arg0);
    public static string FINDGROUPSIDDOESNOTEXISTERROR(object arg0, CultureInfo culture);
    public static string GROUPRENAMEERROR(object arg0);
    public static string GROUPRENAMEERROR(object arg0, CultureInfo culture);
    public static string GROUPSCOPEDOESNOTEXISTERROR(object arg0);
    public static string GROUPSCOPEDOESNOTEXISTERROR(object arg0, CultureInfo culture);
    public static string IdentityNotFoundMessage(object arg0);
    public static string IdentityNotFoundMessage(object arg0, CultureInfo culture);
    public static string IdentityNotFoundWithDescriptor(object arg0, object arg1);
    public static string IdentityNotFoundWithDescriptor(object arg0, object arg1, CultureInfo culture);
    public static string IdentityNotFoundSimpleMessage();
    public static string IdentityNotFoundSimpleMessage(CultureInfo culture);
    public static string IdentityNotFoundWithTfid(object arg0);
    public static string IdentityNotFoundWithTfid(object arg0, CultureInfo culture);
    public static string IdentityNotFoundWithName(object arg0);
    public static string IdentityNotFoundWithName(object arg0, CultureInfo culture);
    public static string IdentityNotFoundInCollection(object arg0);
    public static string IdentityNotFoundInCollection(object arg0, CultureInfo culture);
    public static string IdentityAccountNameAlreadyInUseError(object arg0);
    public static string IdentityAccountNameAlreadyInUseError(object arg0, CultureInfo culture);
    public static string IdentityAccountNameCollisionRepairFailedError(object arg0);
    public static string IdentityAccountNameCollisionRepairFailedError(object arg0, CultureInfo culture);
    public static string IdentityAccountNameCollisionRepairUnsafeError(object arg0);
    public static string IdentityAccountNameCollisionRepairUnsafeError(object arg0, CultureInfo culture);
    public static string IdentityAliasAlreadyInUseError(object arg0);
    public static string IdentityAliasAlreadyInUseError(object arg0, CultureInfo culture);
    public static string InvalidNameNotRecognized(object arg0);
    public static string InvalidNameNotRecognized(object arg0, CultureInfo culture);
    public static string IdentityMapReadOnlyException();
    public static string IdentityMapReadOnlyException(CultureInfo culture);
    public static string IdentityAccountNamesAlreadyInUseError(object arg0, object arg1);
    public static string IdentityAccountNamesAlreadyInUseError(object arg0, object arg1, CultureInfo culture);
    public static string InvalidServiceIdentityName(object arg0);
    public static string InvalidServiceIdentityName(object arg0, CultureInfo culture);
    public static string AccountPreferencesAlreadyExist();
    public static string AccountPreferencesAlreadyExist(CultureInfo culture);
    public static string ADDGROUPMEMBERILLEGALINTERNETIDENTITY(object arg0);
    public static string ADDGROUPMEMBERILLEGALINTERNETIDENTITY(object arg0, CultureInfo culture);
    public static string ADDGROUPMEMBERILLEGALWINDOWSIDENTITY(object arg0);
    public static string ADDGROUPMEMBERILLEGALWINDOWSIDENTITY(object arg0, CultureInfo culture);
    public static string ADDPROJECTGROUPTPROJECTMISMATCHERROR(object arg0, object arg1);
    public static string ADDPROJECTGROUPTPROJECTMISMATCHERROR(object arg0, object arg1, CultureInfo culture);
    public static string CANNOT_REMOVE_SERVICE_ACCOUNT();
    public static string CANNOT_REMOVE_SERVICE_ACCOUNT(CultureInfo culture);
    public static string IDENTITYDOMAINDOESNOTEXISTERROR(object arg0);
    public static string IDENTITYDOMAINDOESNOTEXISTERROR(object arg0, CultureInfo culture);
    public static string IDENTITYDOMAINMISMATCHERROR(object arg0, object arg1);
    public static string IDENTITYDOMAINMISMATCHERROR(object arg0, object arg1, CultureInfo culture);
    public static string IdentityProviderUnavailable(object arg0, object arg1);
    public static string IdentityProviderUnavailable(object arg0, object arg1, CultureInfo culture);
    public static string IDENTITY_SYNC_ERROR(object arg0);
    public static string IDENTITY_SYNC_ERROR(object arg0, CultureInfo culture);
    public static string IllegalIdentityException(object arg0);
    public static string IllegalIdentityException(object arg0, CultureInfo culture);
    public static string MODIFYEVERYONEGROUPEXCEPTION();
    public static string MODIFYEVERYONEGROUPEXCEPTION(CultureInfo culture);
    public static string NOT_APPLICATION_GROUP();
    public static string NOT_APPLICATION_GROUP(CultureInfo culture);
    public static string NOT_A_SECURITY_GROUP(object arg0);
    public static string NOT_A_SECURITY_GROUP(object arg0, CultureInfo culture);
    public static string REMOVENONEXISTENTGROUPERROR(object arg0);
    public static string REMOVENONEXISTENTGROUPERROR(object arg0, CultureInfo culture);
    public static string RemoveSelfFromAdminGroupError(object arg0);
    public static string RemoveSelfFromAdminGroupError(object arg0, CultureInfo culture);
    public static string ADDPROJECTGROUPTOGLOBALGROUPERROR(object arg0, object arg1);
    public static string ADDPROJECTGROUPTOGLOBALGROUPERROR(object arg0, object arg1, CultureInfo culture);
    public static string DynamicIdentityTypeCreationNotSupported();
    public static string DynamicIdentityTypeCreationNotSupported(CultureInfo culture);
    public static string TooManyResultsError();
    public static string TooManyResultsError(CultureInfo culture);
    public static string IncompatibleScopeError(object arg0, object arg1);
    public static string IncompatibleScopeError(object arg0, object arg1, CultureInfo culture);
    public static string InvalidIdentityIdTranslations();
    public static string InvalidIdentityIdTranslations(CultureInfo culture);
    public static string MultipleIdentitiesFoundError(object arg0, object arg1);
    public static string MultipleIdentitiesFoundError(object arg0, object arg1, CultureInfo culture);
    public static string IdentityIdTranslationsAreMigrated();
    public static string IdentityIdTranslationsAreMigrated(CultureInfo culture);
    public static string InvalidGetDescriptorRequestWithLocalId(object arg0);
    public static string InvalidGetDescriptorRequestWithLocalId(object arg0, CultureInfo culture);
    public static string IdentityMaterializationFailedMessage(object arg0);
    public static string IdentityMaterializationFailedMessage(object arg0, CultureInfo culture);
    public static string IdentityDescriptorNotFoundWithMasterId(object arg0);
    public static string IdentityDescriptorNotFoundWithMasterId(object arg0, CultureInfo culture);
    public static string IdentityDescriptorNotFoundWithLocalId(object arg0);
    public static string IdentityDescriptorNotFoundWithLocalId(object arg0, CultureInfo culture);
    public static string TooManyRequestedItemsError();
    public static string TooManyRequestedItemsError(CultureInfo culture);
    public static string TooManyRequestedItemsErrorWithCount(object arg0, object arg1);
    public static string TooManyRequestedItemsErrorWithCount(object arg0, object arg1, CultureInfo culture);
    public static string InvalidIdentityKeyMaps();
    public static string InvalidIdentityKeyMaps(CultureInfo culture);
    public static string InvitationPendingMessage(object arg0, object arg1);
    public static string InvitationPendingMessage(object arg0, object arg1, CultureInfo culture);
    public static string ShouldBePersonalAccountMessage();
    public static string ShouldBePersonalAccountMessage(CultureInfo culture);
    public static string ShouldCreatePersonalAccountMessage();
    public static string ShouldCreatePersonalAccountMessage(CultureInfo culture);
    public static string ShouldBeWorkAccountMessage();
    public static string ShouldBeWorkAccountMessage(CultureInfo culture);
    public static string IdentityNotFoundInCurrentDirectory();
    public static string IdentityNotFoundInCurrentDirectory(CultureInfo culture);
    public static string InvalidIdentityIdException(object arg0);
    public static string InvalidIdentityIdException(object arg0, CultureInfo culture);
    public static string InvalidIdentityDescriptorException(object arg0);
    public static string InvalidIdentityDescriptorException(object arg0, CultureInfo culture);
    public static string RestoreGroupScopeValidationError(object arg0);
    public static string RestoreGroupScopeValidationError(object arg0, CultureInfo culture);
    public static string AccountOwnerCannotBeRemovedFromGroup(object arg0);
    public static string AccountOwnerCannotBeRemovedFromGroup(object arg0, CultureInfo culture);
    public static string ProjectCollectionAdministrators();
    public static string ProjectCollectionAdministrators(CultureInfo culture);
}
[ExceptionMappingAttribute("0.0", "3.0", "EmptyImportSourceException", "Microsoft.VisualStudio.Services.WebApi.ImportSourceConnectionTimeoutException, Microsoft.VisualStudio.Services.WebApi, Version=15.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.WebApi.ImportSourceConnectionTimeoutException : DataImportException {
    public ImportSourceConnectionTimeoutException(string message);
    public ImportSourceConnectionTimeoutException(string message, Exception innerException);
    protected ImportSourceConnectionTimeoutException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.WebApi.ImportSourceDacPacTimeoutException : DataImportException {
    public ImportSourceDacPacTimeoutException(string message);
    public ImportSourceDacPacTimeoutException(string message, Exception innerException);
    protected ImportSourceDacPacTimeoutException(SerializationInfo info, StreamingContext context);
}
[AttributeUsageAttribute("16")]
public class Microsoft.VisualStudio.Services.WebApi.Internal.ClientDontGenerateTypeScriptEnumAsConst : Attribute {
}
[AttributeUsageAttribute("2132")]
public class Microsoft.VisualStudio.Services.WebApi.Internal.ClientIgnoreAttribute : Attribute {
}
[AttributeUsageAttribute("2116")]
public class Microsoft.VisualStudio.Services.WebApi.Internal.ClientIncludeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private RestClientLanguages <Languages>k__BackingField;
    public RestClientLanguages Languages { get; private set; }
    public ClientIncludeAttribute(RestClientLanguages languages);
    [CompilerGeneratedAttribute]
public RestClientLanguages get_Languages();
    [CompilerGeneratedAttribute]
private void set_Languages(RestClientLanguages value);
}
[AttributeUsageAttribute("4")]
public class Microsoft.VisualStudio.Services.WebApi.Internal.ClientPreproductionAttribute : Attribute {
}
[FlagsAttribute]
public enum Microsoft.VisualStudio.Services.WebApi.Internal.RestClientLanguages : Enum {
    public int value__;
    public static RestClientLanguages All;
    public static RestClientLanguages CSharp;
    public static RestClientLanguages Java;
    public static RestClientLanguages TypeScript;
    public static RestClientLanguages Nodejs;
    [ObsoleteAttribute("DocMD has been replaced by Swagger generated REST Documentation.")]
public static RestClientLanguages DocMD;
    public static RestClientLanguages Swagger2;
    public static RestClientLanguages Python;
    public static RestClientLanguages TypeScriptWebPlatform;
    public static RestClientLanguages Go;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.VisualStudio.Services.WebApi.Internal.VssConnectionParameterKeys : object {
    public static string User;
    public static string AccessToken;
    public static string VssConnectionMode;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.VisualStudio.Services.WebApi.Internal.VssConnectionParameterOverrideKeys : object {
    public static string AadInstance;
    public static string AadNativeClientIdentifier;
    public static string AadNativeClientRedirect;
    public static string AadApplicationTenant;
    public static string ConnectedUserRoot;
    public static string FederatedAuthenticationMode;
    public static string FederatedAuthenticationUser;
    public static string UseAadWindowsIntegrated;
}
[ExceptionMappingAttribute("0.0", "3.0", "EmptyImportSourceException", "Microsoft.VisualStudio.Services.WebApi.InvalidImportSourceConnectionStringException, Microsoft.VisualStudio.Services.WebApi, Version=15.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.WebApi.InvalidImportSourceConnectionStringException : DataImportException {
    public InvalidImportSourceConnectionStringException(string message);
    public InvalidImportSourceConnectionStringException(string message, Exception innerException);
    protected InvalidImportSourceConnectionStringException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.WebApi.InvalidSASKeyExpirationException : DataImportException {
    public InvalidSASKeyExpirationException(string message);
    public InvalidSASKeyExpirationException(string message, Exception innerException);
    protected InvalidSASKeyExpirationException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.WebApi.InvalidSourceExtendedPropertyValueException : DataImportException {
    public InvalidSourceExtendedPropertyValueException(string propertyName, string expectedValue, string propertyValue);
    public InvalidSourceExtendedPropertyValueException(string message);
    public InvalidSourceExtendedPropertyValueException(string message, Exception innerException);
    protected InvalidSourceExtendedPropertyValueException(SerializationInfo info, StreamingContext context);
}
public interface Microsoft.VisualStudio.Services.WebApi.IPagedList {
    public string ContinuationToken { get; public set; }
    public abstract virtual string get_ContinuationToken();
    public abstract virtual void set_ContinuationToken(string value);
}
public interface Microsoft.VisualStudio.Services.WebApi.IPagedList`1 {
}
[EditorBrowsableAttribute("1")]
public interface Microsoft.VisualStudio.Services.WebApi.ISecuredObject {
    public Guid NamespaceId { get; }
    public int RequiredPermissions { get; }
    public abstract virtual Guid get_NamespaceId();
    public abstract virtual int get_RequiredPermissions();
    public abstract virtual string GetToken();
}
[EditorBrowsableAttribute("1")]
public interface Microsoft.VisualStudio.Services.WebApi.ISecuredObjectContainer {
}
public interface Microsoft.VisualStudio.Services.WebApi.IVssClientService {
    public abstract virtual void Initialize(VssConnection connection);
}
public interface Microsoft.VisualStudio.Services.WebApi.IVssConnection {
    public Identity AuthenticatedIdentity { get; }
    public Identity AuthorizedIdentity { get; }
    public VssCredentials Credentials { get; }
    public IEnumerable`1<DelegatingHandler> DelegatingHandlers { get; }
    public bool HasAuthenticated { get; }
    public VssHttpMessageHandler InnerHandler { get; }
    public IVssConnection ParentConnection { get; }
    public Guid ServerId { get; }
    public Guid ServerType { get; }
    public VssClientHttpRequestSettings Settings { get; }
    public Uri Uri { get; }
    public abstract virtual Identity get_AuthenticatedIdentity();
    public abstract virtual Identity get_AuthorizedIdentity();
    public abstract virtual VssCredentials get_Credentials();
    public abstract virtual IEnumerable`1<DelegatingHandler> get_DelegatingHandlers();
    public abstract virtual bool get_HasAuthenticated();
    public abstract virtual VssHttpMessageHandler get_InnerHandler();
    public abstract virtual IVssConnection get_ParentConnection();
    public abstract virtual Guid get_ServerId();
    public abstract virtual Guid get_ServerType();
    public abstract virtual VssClientHttpRequestSettings get_Settings();
    public abstract virtual Uri get_Uri();
    public abstract virtual Task ConnectAsync(CancellationToken cancellationToken);
    public abstract virtual Task ConnectAsync(VssConnectMode connectMode, CancellationToken cancellationToken);
    public abstract virtual Task ConnectAsync(VssConnectMode connectMode, IDictionary`2<string, string> parameters, CancellationToken cancellationToken);
    public abstract virtual void Disconnect();
    public abstract virtual object GetClient(Type clientType);
    public abstract virtual T GetClient();
    public abstract virtual T GetClient(CancellationToken cancellationToken);
    public abstract virtual T GetClient(Guid serviceIdentifier);
    public abstract virtual T GetClient(Guid serviceIdentifier, CancellationToken cancellationToken);
    public abstract virtual Task`1<T> GetClientAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<T> GetClientAsync(Guid serviceIdentifier, CancellationToken cancellationToken);
    public abstract virtual T GetService();
    public abstract virtual Task`1<T> GetServiceAsync(CancellationToken cancellationToken);
    public abstract virtual bool IsDisposed();
}
public interface Microsoft.VisualStudio.Services.WebApi.IVssHttpClient {
    public Uri BaseAddress { get; }
    public bool ExcludeUrlsHeader { get; public set; }
    public VssResponseContext LastResponseContext { get; }
    public bool LightweightHeader { get; public set; }
    public abstract virtual Uri get_BaseAddress();
    public abstract virtual bool get_ExcludeUrlsHeader();
    public abstract virtual void set_ExcludeUrlsHeader(bool value);
    public abstract virtual VssResponseContext get_LastResponseContext();
    public abstract virtual bool get_LightweightHeader();
    public abstract virtual void set_LightweightHeader(bool value);
    public abstract virtual bool IsDisposed();
    public abstract virtual void SetResourceLocations(ApiResourceLocationCollection resourceLocations);
}
[ExtensionAttribute]
public static class Microsoft.VisualStudio.Services.WebApi.JsonUtility : object {
    private static int FullGzipHeaderLength;
    private static Byte[] GzipHeader;
    private static Encoding s_UTF8NoBOM;
    private static Lazy`1<JsonSerializerSettings> s_serializerSettings;
    private static Lazy`1<JsonSerializerSettings> s_indentSettings;
    private static Lazy`1<JsonSerializer> s_defaultSerializer;
    private static JsonUtility();
    public static JsonSerializer CreateJsonSerializer();
    public static T FromString(string toDeserialize);
    public static T FromString(string toDeserialize, JsonSerializerSettings settings);
    public static void Populate(string toDeserialize, object target);
    public static string ToString(object toSerialize);
    public static string ToString(IList`1<T> toSerialize);
    public static string ToString(object toSerialize, bool indent);
    public static T Deserialize(Stream streamToRead);
    public static T Deserialize(Stream streamToRead, bool leaveOpen);
    public static T Deserialize(Byte[] toDeserialize);
    public static T Deserialize(Byte[] toDeserialize, JsonSerializerSettings settings);
    [ExtensionAttribute]
public static JToken Map(JToken token, Dictionary`2<JTokenType, Func`2<JToken, JToken>> mapFuncs);
    public static Byte[] Serialize(object toSerialize, bool compress);
    public static Byte[] Serialize(object toSerialize, bool compress, Encoding encoding);
    private static bool IsGZipStream(Byte[] data);
}
[ExceptionMappingAttribute("0.0", "3.0", "ActorValidationException", "Microsoft.VisualStudio.Services.WebApi.Jwt.ActorValidationException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.WebApi.Jwt.ActorValidationException : JsonWebTokenValidationException {
}
[ExceptionMappingAttribute("0.0", "3.0", "DigestUnsupportedException", "Microsoft.VisualStudio.Services.WebApi.Jwt.DigestUnsupportedException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.WebApi.Jwt.DigestUnsupportedException : JsonWebTokenException {
    public DigestUnsupportedException(string supportedDigest, string invalidDigest);
}
internal interface Microsoft.VisualStudio.Services.WebApi.Jwt.IJsonWebTokenHeaderProvider {
    public abstract virtual void SetHeaders(IDictionary`2<string, object> headers);
}
[ExceptionMappingAttribute("0.0", "3.0", "InvalidAudienceException", "Microsoft.VisualStudio.Services.WebApi.Jwt.InvalidAudienceException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.WebApi.Jwt.InvalidAudienceException : JsonWebTokenValidationException {
}
[ExceptionMappingAttribute("0.0", "3.0", "InvalidClockSkewException", "Microsoft.VisualStudio.Services.WebApi.Jwt.InvalidClockSkewException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.WebApi.Jwt.InvalidClockSkewException : JsonWebTokenException {
}
[ExceptionMappingAttribute("0.0", "3.0", "InvalidCredentialsException", "Microsoft.VisualStudio.Services.WebApi.Jwt.InvalidCredentialsException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.WebApi.Jwt.InvalidCredentialsException : JsonWebTokenException {
    public InvalidCredentialsException(string message);
}
[ExceptionMappingAttribute("0.0", "3.0", "InvalidIssuerException", "Microsoft.VisualStudio.Services.WebApi.Jwt.InvalidIssuerException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.WebApi.Jwt.InvalidIssuerException : JsonWebTokenValidationException {
}
[ExceptionMappingAttribute("0.0", "3.0", "InvalidScopeException", "Microsoft.VisualStudio.Services.WebApi.Jwt.InvalidScopeException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.WebApi.Jwt.InvalidScopeException : JsonWebTokenValidationException {
}
[ExceptionMappingAttribute("0.0", "3.0", "InvalidTokenException", "Microsoft.VisualStudio.Services.WebApi.Jwt.InvalidTokenException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.WebApi.Jwt.InvalidTokenException : JsonWebTokenValidationException {
    public InvalidTokenException(string message);
}
[ExceptionMappingAttribute("0.0", "3.0", "InvalidValidFromValueException", "Microsoft.VisualStudio.Services.WebApi.Jwt.InvalidValidFromValueException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.WebApi.Jwt.InvalidValidFromValueException : JsonWebTokenException {
}
[ExceptionMappingAttribute("0.0", "3.0", "InvalidValidToValueException", "Microsoft.VisualStudio.Services.WebApi.Jwt.InvalidValidToValueException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.WebApi.Jwt.InvalidValidToValueException : JsonWebTokenException {
}
[DataContractAttribute]
[JsonConverterAttribute("Microsoft.VisualStudio.Services.WebApi.Jwt.JsonWebToken/JsonWebTokenConverter")]
public class Microsoft.VisualStudio.Services.WebApi.Jwt.JsonWebToken : IssuedToken {
    private static int DefaultLifetime;
    private JWTHeader _header;
    private JWTPayload _payload;
    private Byte[] _signature;
    private string _encodedToken;
    protected internal VssCredentialsType CredentialType { get; }
    public string TokenType { get; }
    public JWTAlgorithm Algorithm { get; }
    public string CertificateThumbprint { get; }
    public string Audience { get; }
    public string Issuer { get; }
    public string Subject { get; }
    public string NameIdentifier { get; }
    public string IdentityProvider { get; }
    public DateTime ValidTo { get; }
    public DateTime ValidFrom { get; }
    public DateTime IssuedAt { get; }
    public bool TrustedForDelegation { get; }
    public JsonWebToken Actor { get; }
    public string ApplicationIdentifier { get; }
    public string EncodedToken { get; private set; }
    public string Scopes { get; }
    internal IDictionary`2<string, object> Header { get; }
    internal IDictionary`2<string, object> Payload { get; }
    internal Byte[] Signature { get; }
    private JsonWebToken(JWTHeader header, JWTPayload payload, Byte[] signature);
    public static JsonWebToken Create(string issuer, string audience, DateTime validFrom, DateTime validTo, VssSigningCredentials credentials);
    public static JsonWebToken Create(string issuer, string audience, DateTime validFrom, DateTime validTo, IEnumerable`1<Claim> additionalClaims, JsonWebToken actor);
    public static JsonWebToken Create(string issuer, string audience, DateTime validFrom, DateTime validTo, IEnumerable`1<Claim> additionalClaims, string actorToken);
    public static JsonWebToken Create(string issuer, string audience, DateTime validFrom, DateTime validTo, IEnumerable`1<Claim> additionalClaims, VssSigningCredentials credentials);
    public static JsonWebToken Create(string issuer, string audience, DateTime validFrom, DateTime validTo, IEnumerable`1<Claim> additionalClaims, VssSigningCredentials credentials, bool allowExpiredCertificate);
    public static JsonWebToken Create(string issuer, string audience, DateTime validFrom, DateTime validTo, DateTime issuedAt, IEnumerable`1<Claim> additionalClaims, VssSigningCredentials credentials);
    private static JsonWebToken Create(string issuer, string audience, DateTime validFrom, DateTime validTo, DateTime issuedAt, IEnumerable`1<Claim> additionalClaims, JsonWebToken actor, string actorToken, VssSigningCredentials credentials, bool allowExpiredCertificate, bool includeKeyId);
    public static JsonWebToken Create(string issuer, string audience, DateTime validFrom, DateTime validTo, DateTime issuedAt, IEnumerable`1<Claim> additionalClaims);
    public static JsonWebToken Create(string issuer, string audience, DateTime validFrom, DateTime validTo, DateTime issuedAt, IEnumerable`1<Claim> additionalClaims, VssSigningCredentials credentials, bool allowExpiredCertificate, bool includeKeyId);
    public static JsonWebToken Create(string jwtEncodedString);
    protected internal virtual VssCredentialsType get_CredentialType();
    internal virtual void ApplyTo(IHttpRequest request);
    public string get_TokenType();
    public JWTAlgorithm get_Algorithm();
    public string get_CertificateThumbprint();
    public string get_Audience();
    public string get_Issuer();
    public string get_Subject();
    public string get_NameIdentifier();
    public string get_IdentityProvider();
    public DateTime get_ValidTo();
    public DateTime get_ValidFrom();
    public DateTime get_IssuedAt();
    public bool get_TrustedForDelegation();
    public JsonWebToken get_Actor();
    public string get_ApplicationIdentifier();
    public string get_EncodedToken();
    private void set_EncodedToken(string value);
    public string get_Scopes();
    public virtual string ToString();
    internal IDictionary`2<string, object> get_Header();
    internal IDictionary`2<string, object> get_Payload();
    internal Byte[] get_Signature();
    private static JWTHeader GetHeader(VssSigningCredentials credentials, bool allowExpired, bool includeKeyId);
    private static Byte[] GetSignature(JWTHeader header, JWTPayload payload, VssSigningCredentials credentials, bool allowExpired);
    private static Byte[] GetSignature(JWTHeader header, JWTPayload payload, JWTAlgorithm alg, VssSigningCredentials signingCredentials);
    private string Encode();
    private void OnDeserialized();
}
public static class Microsoft.VisualStudio.Services.WebApi.Jwt.JsonWebTokenClaims : object {
    public static string ActorToken;
    public static string Audience;
    public static string IssuedAt;
    public static string Issuer;
    public static string NameId;
    public static string IdentityProvider;
    public static string ValidTo;
    public static string ValidFrom;
    public static string Scopes;
    public static string Roles;
    public static string RefreshToken;
    public static string Source;
    public static string Subject;
    public static string TrustedForDelegation;
    public static string NameIdLongName;
    public static string IdentityProviderLongName;
    public static string TenantId;
    public static string TenantIdLongName;
    public static string TokenId;
    public static string AppId;
    public static string JobRef;
}
[ExceptionMappingAttribute("0.0", "3.0", "JsonWebTokenDeserializationException", "Microsoft.VisualStudio.Services.WebApi.Jwt.JsonWebTokenDeserializationException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.WebApi.Jwt.JsonWebTokenDeserializationException : JsonWebTokenException {
}
[ExceptionMappingAttribute("0.0", "3.0", "JsonWebTokenException", "Microsoft.VisualStudio.Services.WebApi.Jwt.JsonWebTokenException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.WebApi.Jwt.JsonWebTokenException : VssServiceException {
    public JsonWebTokenException(string message);
    public JsonWebTokenException(string message, Exception innerException);
}
internal static class Microsoft.VisualStudio.Services.WebApi.Jwt.JsonWebTokenHeaderParameters : object {
    internal static string Algorithm;
    internal static string Type;
    internal static string KeyId;
    internal static string X509CertificateThumbprint;
    internal static string JWTType;
    internal static string JWTURNType;
}
[ExceptionMappingAttribute("0.0", "3.0", "JsonWebTokenSerializationException", "Microsoft.VisualStudio.Services.WebApi.Jwt.JsonWebTokenSerializationException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.WebApi.Jwt.JsonWebTokenSerializationException : JsonWebTokenException {
}
[ExtensionAttribute]
public static class Microsoft.VisualStudio.Services.WebApi.Jwt.JsonWebTokenUtilities : object {
    internal static JsonSerializerSettings DefaultSerializerSettings;
    internal static short MinKeySize;
    private static JsonWebTokenUtilities();
    [ExtensionAttribute]
internal static string JsonEncode(T obj);
    internal static string JsonEncode(object o);
    internal static T JsonDecode(string encodedString);
    internal static IDictionary`2<string, object> TranslateToJwtClaims(IEnumerable`1<Claim> claims);
    internal static IEnumerable`1<Claim> TranslateFromJwtClaims(IDictionary`2<string, object> claims);
    [ExtensionAttribute]
internal static IEnumerable`1<Claim> ExtractClaims(JsonWebToken token);
    [ExtensionAttribute]
public static bool IsExpired(JsonWebToken token);
    internal static JWTAlgorithm ValidateSigningCredentials(VssSigningCredentials credentials, bool allowExpiredToken);
    [ExtensionAttribute]
public static ClaimsPrincipal ValidateToken(JsonWebToken token, JsonWebTokenValidationParameters parameters);
    private static ClaimsIdentity ValidateActor(JsonWebToken token, JsonWebTokenValidationParameters parameters);
    private static void ValidateLifetime(JsonWebToken token, JsonWebTokenValidationParameters parameters);
    private static void ValidateAudience(JsonWebToken token, JsonWebTokenValidationParameters parameters);
    private static void ValidateSignature(JsonWebToken token, JsonWebTokenValidationParameters parameters);
    private static void ValidateIssuer(JsonWebToken token, JsonWebTokenValidationParameters parameters);
}
[ExceptionMappingAttribute("0.0", "3.0", "JsonWebTokenValidationException", "Microsoft.VisualStudio.Services.WebApi.Jwt.JsonWebTokenValidationException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.WebApi.Jwt.JsonWebTokenValidationException : JsonWebTokenException {
    public JsonWebTokenValidationException(string message);
    public JsonWebTokenValidationException(string message, Exception innerException);
}
public class Microsoft.VisualStudio.Services.WebApi.Jwt.JsonWebTokenValidationParameters : object {
    [CompilerGeneratedAttribute]
private bool <ValidateActor>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ValidateAudience>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ValidateIssuer>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ValidateExpiration>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ValidateNotBefore>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ValidateSignature>k__BackingField;
    [CompilerGeneratedAttribute]
private JsonWebTokenValidationParameters <ActorValidationParameters>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <AllowedAudiences>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ClockSkewInSeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private VssSigningCredentials <SigningCredentials>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <ValidIssuers>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IdentityNameClaimType>k__BackingField;
    public bool ValidateActor { get; public set; }
    public bool ValidateAudience { get; public set; }
    public bool ValidateIssuer { get; public set; }
    public bool ValidateExpiration { get; public set; }
    public bool ValidateNotBefore { get; public set; }
    public bool ValidateSignature { get; public set; }
    public JsonWebTokenValidationParameters ActorValidationParameters { get; public set; }
    public IEnumerable`1<string> AllowedAudiences { get; public set; }
    public int ClockSkewInSeconds { get; public set; }
    public VssSigningCredentials SigningCredentials { get; public set; }
    public IEnumerable`1<string> ValidIssuers { get; public set; }
    public string IdentityNameClaimType { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_ValidateActor();
    [CompilerGeneratedAttribute]
public void set_ValidateActor(bool value);
    [CompilerGeneratedAttribute]
public bool get_ValidateAudience();
    [CompilerGeneratedAttribute]
public void set_ValidateAudience(bool value);
    [CompilerGeneratedAttribute]
public bool get_ValidateIssuer();
    [CompilerGeneratedAttribute]
public void set_ValidateIssuer(bool value);
    [CompilerGeneratedAttribute]
public bool get_ValidateExpiration();
    [CompilerGeneratedAttribute]
public void set_ValidateExpiration(bool value);
    [CompilerGeneratedAttribute]
public bool get_ValidateNotBefore();
    [CompilerGeneratedAttribute]
public void set_ValidateNotBefore(bool value);
    [CompilerGeneratedAttribute]
public bool get_ValidateSignature();
    [CompilerGeneratedAttribute]
public void set_ValidateSignature(bool value);
    [CompilerGeneratedAttribute]
public JsonWebTokenValidationParameters get_ActorValidationParameters();
    [CompilerGeneratedAttribute]
public void set_ActorValidationParameters(JsonWebTokenValidationParameters value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_AllowedAudiences();
    [CompilerGeneratedAttribute]
public void set_AllowedAudiences(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public int get_ClockSkewInSeconds();
    [CompilerGeneratedAttribute]
public void set_ClockSkewInSeconds(int value);
    [CompilerGeneratedAttribute]
public VssSigningCredentials get_SigningCredentials();
    [CompilerGeneratedAttribute]
public void set_SigningCredentials(VssSigningCredentials value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_ValidIssuers();
    [CompilerGeneratedAttribute]
public void set_ValidIssuers(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public string get_IdentityNameClaimType();
    [CompilerGeneratedAttribute]
public void set_IdentityNameClaimType(string value);
}
[DataContractAttribute]
public enum Microsoft.VisualStudio.Services.WebApi.Jwt.JWTAlgorithm : Enum {
    public int value__;
    [EnumMemberAttribute]
public static JWTAlgorithm None;
    [EnumMemberAttribute]
public static JWTAlgorithm HS256;
    [EnumMemberAttribute]
public static JWTAlgorithm RS256;
}
[ExceptionMappingAttribute("0.0", "3.0", "SignatureAlgorithmUnsupportedException", "Microsoft.VisualStudio.Services.WebApi.Jwt.SignatureAlgorithmUnsupportedException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.WebApi.Jwt.SignatureAlgorithmUnsupportedException : JsonWebTokenException {
    public SignatureAlgorithmUnsupportedException(string invalidAlgorithm);
    public SignatureAlgorithmUnsupportedException(int providerType);
}
[ExceptionMappingAttribute("0.0", "3.0", "SignatureValidationException", "Microsoft.VisualStudio.Services.WebApi.Jwt.SignatureValidationException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.WebApi.Jwt.SignatureValidationException : JsonWebTokenValidationException {
}
[ExceptionMappingAttribute("0.0", "3.0", "TokenExpiredException", "Microsoft.VisualStudio.Services.WebApi.Jwt.TokenExpiredException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.WebApi.Jwt.TokenExpiredException : JsonWebTokenValidationException {
}
[ExceptionMappingAttribute("0.0", "3.0", "TokenNotYetValidException", "Microsoft.VisualStudio.Services.WebApi.Jwt.TokenNotYetValidException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.WebApi.Jwt.TokenNotYetValidException : JsonWebTokenValidationException {
}
internal class Microsoft.VisualStudio.Services.WebApi.Jwt.UnixEpochDateTimeConverter : DateTimeConverterBase {
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
}
[ExceptionMappingAttribute("0.0", "3.0", "ValidFromAfterValidToException", "Microsoft.VisualStudio.Services.WebApi.Jwt.ValidFromAfterValidToException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.WebApi.Jwt.ValidFromAfterValidToException : JsonWebTokenException {
}
internal static class Microsoft.VisualStudio.Services.WebApi.JwtResources : object {
    private static ResourceManager s_resMgr;
    public static ResourceManager Manager { get; }
    private static JwtResources();
    public static ResourceManager get_Manager();
    private static string Get(string resourceName);
    private static string Get(string resourceName, CultureInfo culture);
    public static int GetInt(string resourceName);
    public static int GetInt(string resourceName, CultureInfo culture);
    public static bool GetBool(string resourceName);
    public static bool GetBool(string resourceName, CultureInfo culture);
    private static string Format(string resourceName, Object[] args);
    private static string Format(string resourceName, CultureInfo culture, Object[] args);
    public static string ActorValidationException();
    public static string ActorValidationException(CultureInfo culture);
    public static string DeserializationException();
    public static string DeserializationException(CultureInfo culture);
    public static string DigestUnsupportedException(object arg0, object arg1);
    public static string DigestUnsupportedException(object arg0, object arg1, CultureInfo culture);
    public static string EncodedTokenDataMalformed();
    public static string EncodedTokenDataMalformed(CultureInfo culture);
    public static string InvalidAudienceException();
    public static string InvalidAudienceException(CultureInfo culture);
    public static string InvalidClockSkewException();
    public static string InvalidClockSkewException(CultureInfo culture);
    public static string InvalidIssuerException();
    public static string InvalidIssuerException(CultureInfo culture);
    public static string InvalidSignatureAlgorithm();
    public static string InvalidSignatureAlgorithm(CultureInfo culture);
    public static string InvalidValidFromValueException();
    public static string InvalidValidFromValueException(CultureInfo culture);
    public static string InvalidValidToValueException();
    public static string InvalidValidToValueException(CultureInfo culture);
    public static string ProviderTypeUnsupported(object arg0);
    public static string ProviderTypeUnsupported(object arg0, CultureInfo culture);
    public static string SerializationException();
    public static string SerializationException(CultureInfo culture);
    public static string SignatureAlgorithmUnsupportedException(object arg0);
    public static string SignatureAlgorithmUnsupportedException(object arg0, CultureInfo culture);
    public static string SignatureNotFound();
    public static string SignatureNotFound(CultureInfo culture);
    public static string SignatureValidationException();
    public static string SignatureValidationException(CultureInfo culture);
    public static string SymmetricSecurityKeyNotFound();
    public static string SymmetricSecurityKeyNotFound(CultureInfo culture);
    public static string TokenExpiredException();
    public static string TokenExpiredException(CultureInfo culture);
    public static string TokenNotYetValidException();
    public static string TokenNotYetValidException(CultureInfo culture);
    public static string ValidFromAfterValidToException();
    public static string ValidFromAfterValidToException(CultureInfo culture);
    public static string SigningTokenExpired();
    public static string SigningTokenExpired(CultureInfo culture);
    public static string SigningTokenNoPrivateKey();
    public static string SigningTokenNoPrivateKey(CultureInfo culture);
    public static string SigningTokenKeyTooSmall();
    public static string SigningTokenKeyTooSmall(CultureInfo culture);
    public static string TokenScopeNotAuthorizedException();
    public static string TokenScopeNotAuthorizedException(CultureInfo culture);
}
public class Microsoft.VisualStudio.Services.WebApi.LangDetails : object {
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Summary>k__BackingField;
    public string Title { get; public set; }
    public int Summary { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(string value);
    [CompilerGeneratedAttribute]
public int get_Summary();
    [CompilerGeneratedAttribute]
public void set_Summary(int value);
}
public interface Microsoft.VisualStudio.Services.WebApi.Location.ILocationDataProvider {
    public Guid InstanceId { get; }
    public Guid InstanceType { get; }
    public AccessMapping ClientAccessMapping { get; }
    public AccessMapping DefaultAccessMapping { get; }
    public IEnumerable`1<AccessMapping> ConfiguredAccessMappings { get; }
    public abstract virtual Guid get_InstanceId();
    public abstract virtual Guid get_InstanceType();
    public abstract virtual AccessMapping get_ClientAccessMapping();
    public abstract virtual AccessMapping get_DefaultAccessMapping();
    public abstract virtual IEnumerable`1<AccessMapping> get_ConfiguredAccessMappings();
    public abstract virtual ServiceDefinition FindServiceDefinition(string serviceType, Guid serviceIdentifier);
    public abstract virtual IEnumerable`1<ServiceDefinition> FindServiceDefinitions(string serviceType);
    public abstract virtual string LocationForCurrentConnection(string serviceType, Guid serviceIdentifier);
    public abstract virtual string LocationForCurrentConnection(ServiceDefinition serviceDefinition);
    public abstract virtual string LocationForAccessMapping(string serviceType, Guid serviceIdentifier, AccessMapping accessMapping);
    public abstract virtual string LocationForAccessMapping(ServiceDefinition serviceDefinition, AccessMapping accessMapping);
    public abstract virtual AccessMapping GetAccessMapping(string moniker);
    public abstract virtual ApiResourceLocationCollection GetResourceLocations();
    public abstract virtual Task`1<Guid> GetInstanceIdAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<Guid> GetInstanceTypeAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<AccessMapping> GetClientAccessMappingAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<AccessMapping> GetDefaultAccessMappingAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<IEnumerable`1<AccessMapping>> GetConfiguredAccessMappingsAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<ServiceDefinition> FindServiceDefinitionAsync(string serviceType, Guid serviceIdentifier, CancellationToken cancellationToken);
    public abstract virtual Task`1<IEnumerable`1<ServiceDefinition>> FindServiceDefinitionsAsync(string serviceType, CancellationToken cancellationToken);
    public abstract virtual Task`1<string> LocationForCurrentConnectionAsync(string serviceType, Guid serviceIdentifier, CancellationToken cancellationToken);
    public abstract virtual Task`1<string> LocationForCurrentConnectionAsync(ServiceDefinition serviceDefinition, CancellationToken cancellationToken);
    public abstract virtual Task`1<string> LocationForAccessMappingAsync(string serviceType, Guid serviceIdentifier, AccessMapping accessMapping, CancellationToken cancellationToken);
    public abstract virtual Task`1<string> LocationForAccessMappingAsync(ServiceDefinition serviceDefinition, AccessMapping accessMapping, CancellationToken cancellationToken);
    public abstract virtual Task`1<AccessMapping> GetAccessMappingAsync(string moniker, CancellationToken cancellationToken);
    public abstract virtual Task`1<ApiResourceLocationCollection> GetResourceLocationsAsync(CancellationToken cancellationToken);
}
[VssClientServiceImplementationAttribute("Microsoft.VisualStudio.Services.WebApi.Location.LocationService")]
public interface Microsoft.VisualStudio.Services.WebApi.Location.ILocationService {
    public abstract virtual ILocationDataProvider GetLocationData(Guid locationAreaIdentifier);
    public abstract virtual string GetLocationServiceUrl(Guid locationAreaIdentifier);
    public abstract virtual string GetLocationServiceUrl(Guid locationAreaIdentifier, string accessMappingMoniker);
    public abstract virtual Task`1<ILocationDataProvider> GetLocationDataAsync(Guid locationAreaIdentifier, CancellationToken cancellationToken);
    public abstract virtual Task`1<string> GetLocationServiceUrlAsync(Guid locationAreaIdentifier, string accessMappingMoniker, CancellationToken cancellationToken);
}
public interface Microsoft.VisualStudio.Services.WebApi.Location.IVssServerDataProvider {
    public bool HasConnected { get; }
    public abstract virtual bool get_HasConnected();
    public abstract virtual Task`1<Identity> GetAuthorizedIdentityAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<Identity> GetAuthenticatedIdentityAsync(CancellationToken cancellationToken);
    public abstract virtual Task ConnectAsync(ConnectOptions connectOptions, CancellationToken cancellationToken);
    public abstract virtual Task DisconnectAsync(CancellationToken cancellationToken);
}
internal class Microsoft.VisualStudio.Services.WebApi.Location.LocationCacheManager : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ClientCacheTimeToLive>k__BackingField;
    private Dictionary`2<string, Dictionary`2<Guid, ServiceDefinition>> m_services;
    private HashSet`1<string> m_cachedMisses;
    private Dictionary`2<string, AccessMapping> m_accessMappings;
    private int m_lastChangeId;
    private DateTime m_cacheExpirationDate;
    private ReaderWriterLockSlim m_accessLock;
    private string m_webApplicationRelativeDirectory;
    private static object s_cacheMutex;
    private bool m_cacheLocallyFresh;
    private bool m_cacheAvailable;
    private FileSystemWatcher m_fileSystemWatcher;
    private Uri m_connectionBaseUrl;
    private AccessMapping m_clientAccessMapping;
    private AccessMapping m_defaultAccessMapping;
    private static string s_cacheFileName;
    private string m_cacheFilePath;
    private LocationXmlOperator m_locationXmlOperator;
    private static string s_docStartElement;
    public bool LocalCacheAvailable { get; }
    internal bool CacheDataExpired { get; }
    public AccessMapping ClientAccessMapping { get; }
    public AccessMapping DefaultAccessMapping { get; }
    public string WebApplicationRelativeDirectory { get; public set; }
    public IEnumerable`1<AccessMapping> AccessMappings { get; }
    internal Nullable`1<int> ClientCacheTimeToLive { get; internal set; }
    public LocationCacheManager(Guid serverGuid, Guid serviceOwner, Uri connectionBaseUrl);
    private static LocationCacheManager();
    public bool get_LocalCacheAvailable();
    internal bool get_CacheDataExpired();
    public AccessMapping get_ClientAccessMapping();
    public AccessMapping get_DefaultAccessMapping();
    public string get_WebApplicationRelativeDirectory();
    public void set_WebApplicationRelativeDirectory(string value);
    public void ClearIfCacheNotFresh(int serverLastChangeId);
    public void RemoveServices(IEnumerable`1<ServiceDefinition> serviceDefinitions, int lastChangeId);
    public AccessMapping GetAccessMapping(string moniker);
    public bool TryFindService(string serviceType, Guid serviceIdentifier, ServiceDefinition& serviceDefinition);
    public IEnumerable`1<ServiceDefinition> FindServices(string serviceType);
    public void LoadServicesData(LocationServiceData locationServiceData, bool allServicesIncluded);
    private void DetermineClientAndDefaultZones(string defaultAccessMappingMoniker);
    public IEnumerable`1<AccessMapping> get_AccessMappings();
    public void RemoveAccessMapping(string moniker);
    public void AddCachedMiss(string serviceType, Guid serviceIdentifier, int missedLastChangeId);
    public int GetLastChangeId();
    internal DateTime GetCacheExpirationDate();
    private void SetLastChangeId(int lastChangeId, bool allServicesUpdated);
    private static string BuildCacheMissString(string serviceType, Guid serviceIdentifier);
    internal void EnsureDiskCacheLoaded();
    private void EnsureDiskCacheLoadedHelper();
    private void m_fileSystemWatcher_Changed(object sender, FileSystemEventArgs e);
    private void WriteCacheToDisk();
    [CompilerGeneratedAttribute]
internal Nullable`1<int> get_ClientCacheTimeToLive();
    [CompilerGeneratedAttribute]
internal void set_ClientCacheTimeToLive(Nullable`1<int> value);
}
internal static class Microsoft.VisualStudio.Services.WebApi.Location.LocationServerMapCache : object {
    private static ReaderWriterLockSlim s_accessLock;
    private static Dictionary`2<string, ServerMapData> s_serverMappings;
    private static string s_filePath;
    private static FileSystemWatcher s_fileWatcher;
    private static bool s_cacheFreshLocally;
    private static bool s_cacheUnavailable;
    private static string s_fileName;
    private static string s_documentXmlText;
    private static string s_mappingXmlText;
    private static string s_locationAttribute;
    private static string s_guidAttribute;
    private static string s_ownerAttribute;
    private static object s_cacheMutex;
    private static string FilePath { get; }
    private static LocationServerMapCache();
    public static string ReadServerLocation(Guid serverId, Guid serviceOwner);
    public static ServerMapData ReadServerData(string location);
    public static bool EnsureServerMappingExists(string location, Guid serverId, Guid serviceOwner);
    private static void EnsureCacheLoaded();
    private static void s_fileWatcher_Changed(object sender, FileSystemEventArgs e);
    private static bool TryWriteMappingToDisk(string location, Guid serverGuid, Guid serviceOwner, bool isNew);
    private static void AddMappingNode(XmlNode parentNode, string location, Guid guid, Guid owner);
    private static string get_FilePath();
}
internal class Microsoft.VisualStudio.Services.WebApi.Location.LocationService : object {
    private VssConnection m_connection;
    private ProviderCache m_providerLookup;
    protected ILocationDataProvider LocalDataProvider { get; }
    public virtual void Initialize(VssConnection connection);
    public sealed virtual ILocationDataProvider GetLocationData(Guid locationAreaIdentifier);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.WebApi.Location.LocationService/<GetLocationDataAsync>d__2")]
public sealed virtual Task`1<ILocationDataProvider> GetLocationDataAsync(Guid locationAreaIdentifier, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.WebApi.Location.LocationService/<ResolveLocationDataAsync>d__3")]
private Task`1<ILocationDataProvider> ResolveLocationDataAsync(Guid locationAreaIdentifier, CancellationToken cancellationToken);
    public sealed virtual string GetLocationServiceUrl(Guid locationAreaIdentifier);
    public sealed virtual string GetLocationServiceUrl(Guid locationAreaIdentifier, string accessMappingMoniker);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.WebApi.Location.LocationService/<GetLocationServiceUrlAsync>d__6")]
public sealed virtual Task`1<string> GetLocationServiceUrlAsync(Guid locationAreaIdentifier, string accessMappingMoniker, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.WebApi.Location.LocationService/<CreateDataProviderAsync>d__7")]
protected virtual Task`1<ILocationDataProvider> CreateDataProviderAsync(string location, CancellationToken cancellationToken);
    protected virtual ILocationDataProvider get_LocalDataProvider();
}
internal class Microsoft.VisualStudio.Services.WebApi.Location.LocationXmlOperator : object {
    private Dictionary`2<string, string> m_accessMappingLocationServiceUrls;
    private bool m_isClientCache;
    private static string s_lastChangeId;
    private static string s_cacheExpirationDate;
    private static string s_defaultAccessMappingMoniker;
    private static string s_virtualDirectory;
    private static string s_services;
    private static string s_cachedMisses;
    private static string s_serviceDefinition;
    private static string s_cachedMiss;
    private static string s_serviceType;
    private static string s_identifier;
    private static string s_displayName;
    private static string s_locationServiceUrl;
    private static string s_description;
    private static string s_relativePath;
    private static string s_relativeTo;
    private static string s_parentServiceType;
    private static string s_parentIdentifier;
    private static string s_locationMappings;
    private static string s_locationMapping;
    private static string s_location;
    private static string s_resourceVersion;
    private static string s_minVersion;
    private static string s_maxVersion;
    private static string s_releasedVersion;
    private static string s_accessMappings;
    private static string s_accessMapping;
    private static string s_moniker;
    private static string s_accessPoint;
    public LocationXmlOperator(bool isClientCache);
    private static LocationXmlOperator();
    public List`1<ServiceDefinition> ReadServices(XmlDocument document, Dictionary`2<string, AccessMapping> accessMappings);
    public List`1<string> ReadCachedMisses(XmlDocument document);
    public List`1<AccessMapping> ReadAccessMappings(XmlDocument document);
    public int ReadLastChangeId(XmlDocument document);
    public DateTime ReadCacheExpirationDate(XmlDocument document);
    public string ReadDefaultAccessMappingMoniker(XmlDocument document);
    public string ReadVirtualDirectory(XmlDocument document);
    public void WriteLastChangeId(XmlNode documentNode, int lastChangeId);
    public void WriteCacheExpirationDate(XmlNode documentNode, DateTime cacheExpirationDate);
    public void WriteDefaultAccessMappingMoniker(XmlNode documentNode, string defaultAccessMappingMoniker);
    public void WriteVirtualDirectory(XmlNode documentNode, string virtualDirectory);
    public void WriteAccessMappings(XmlNode documentNode, IEnumerable`1<AccessMapping> accessMappings);
    public void WriteServices(XmlNode documentNode, IEnumerable`1<ServiceDefinition> serviceDefinitions);
    public void WriteCachedMisses(XmlNode documentNode, IEnumerable`1<string> cachedMisses);
    public string GetLocationServiceUrl(string moniker);
    private static void CheckXmlNodeNull(XmlNode node, string nodeName, XmlNode parent);
    private static void CheckXmlNodeNullOrEmpty(XmlNode node, string nodeName, XmlNode parent);
    private static void CheckXmlAttributeNullOrEmpty(XmlAttribute attribute, string attributeName, XmlNode element);
}
internal static class Microsoft.VisualStudio.Services.WebApi.Location.RelativeToEnumCache : object {
    private static Dictionary`2<string, RelativeToSetting> s_relativeToEnums;
    private static RelativeToEnumCache();
    internal static Dictionary`2<string, RelativeToSetting> GetRelativeToEnums();
}
internal class Microsoft.VisualStudio.Services.WebApi.Location.ServerMapData : object {
    [CompilerGeneratedAttribute]
private Guid <ServerId>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <ServiceOwner>k__BackingField;
    public Guid ServerId { get; public set; }
    public Guid ServiceOwner { get; public set; }
    public ServerMapData(Guid serverId, Guid serviceOwner);
    [CompilerGeneratedAttribute]
public Guid get_ServerId();
    [CompilerGeneratedAttribute]
public void set_ServerId(Guid value);
    [CompilerGeneratedAttribute]
public Guid get_ServiceOwner();
    [CompilerGeneratedAttribute]
public void set_ServiceOwner(Guid value);
}
internal class Microsoft.VisualStudio.Services.WebApi.Location.VssServerDataProvider : object {
    private VssConnection m_connection;
    private Uri m_baseUri;
    private string m_fullyQualifiedUrl;
    private Identity m_authenticatedIdentity;
    private Identity m_authorizedIdentity;
    private Guid m_instanceId;
    private Guid m_serviceOwner;
    private LocationHttpClient m_locationClient;
    private ConnectOptions m_validConnectionData;
    private bool m_connectionMade;
    private LocationCacheManager m_locationDataCacheManager;
    private ApiResourceLocationCollection m_resourceLocations;
    private AsyncLock m_connectionLock;
    internal VssConnection Connection { get; }
    public bool HasConnected { get; }
    public Guid InstanceId { get; }
    public Guid InstanceType { get; }
    public AccessMapping DefaultAccessMapping { get; }
    public AccessMapping ClientAccessMapping { get; }
    public IEnumerable`1<AccessMapping> ConfiguredAccessMappings { get; }
    public VssServerDataProvider(VssConnection connection, HttpMessageHandler pipeline, string fullyQualifiedUrl);
    internal VssConnection get_Connection();
    public sealed virtual bool get_HasConnected();
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.WebApi.Location.VssServerDataProvider/<GetAuthorizedIdentityAsync>d__5")]
public sealed virtual Task`1<Identity> GetAuthorizedIdentityAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.WebApi.Location.VssServerDataProvider/<GetAuthenticatedIdentityAsync>d__6")]
public sealed virtual Task`1<Identity> GetAuthenticatedIdentityAsync(CancellationToken cancellationToken);
    public sealed virtual Guid get_InstanceId();
    public sealed virtual Guid get_InstanceType();
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.WebApi.Location.VssServerDataProvider/<GetInstanceIdAsync>d__11")]
public sealed virtual Task`1<Guid> GetInstanceIdAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.WebApi.Location.VssServerDataProvider/<GetInstanceTypeAsync>d__12")]
public sealed virtual Task`1<Guid> GetInstanceTypeAsync(CancellationToken cancellationToken);
    public sealed virtual AccessMapping get_DefaultAccessMapping();
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.WebApi.Location.VssServerDataProvider/<GetDefaultAccessMappingAsync>d__15")]
public sealed virtual Task`1<AccessMapping> GetDefaultAccessMappingAsync(CancellationToken cancellationToken);
    public sealed virtual AccessMapping get_ClientAccessMapping();
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.WebApi.Location.VssServerDataProvider/<GetClientAccessMappingAsync>d__18")]
public sealed virtual Task`1<AccessMapping> GetClientAccessMappingAsync(CancellationToken cancellationToken);
    public sealed virtual IEnumerable`1<AccessMapping> get_ConfiguredAccessMappings();
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.WebApi.Location.VssServerDataProvider/<GetConfiguredAccessMappingsAsync>d__21")]
public sealed virtual Task`1<IEnumerable`1<AccessMapping>> GetConfiguredAccessMappingsAsync(CancellationToken cancellationToken);
    public sealed virtual AccessMapping GetAccessMapping(string moniker);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.WebApi.Location.VssServerDataProvider/<GetAccessMappingAsync>d__23")]
public sealed virtual Task`1<AccessMapping> GetAccessMappingAsync(string moniker, CancellationToken cancellationToken);
    public sealed virtual string LocationForAccessMapping(string serviceType, Guid serviceIdentifier, AccessMapping accessMapping);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.WebApi.Location.VssServerDataProvider/<LocationForAccessMappingAsync>d__25")]
public sealed virtual Task`1<string> LocationForAccessMappingAsync(string serviceType, Guid serviceIdentifier, AccessMapping accessMapping, CancellationToken cancellationToken);
    public sealed virtual string LocationForAccessMapping(ServiceDefinition serviceDefinition, AccessMapping accessMapping);
    public sealed virtual Task`1<string> LocationForAccessMappingAsync(ServiceDefinition serviceDefinition, AccessMapping accessMapping, CancellationToken cancellationToken);
    public sealed virtual string LocationForCurrentConnection(string serviceType, Guid serviceIdentifier);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.WebApi.Location.VssServerDataProvider/<LocationForCurrentConnectionAsync>d__29")]
public sealed virtual Task`1<string> LocationForCurrentConnectionAsync(string serviceType, Guid serviceIdentifier, CancellationToken cancellationToken);
    public sealed virtual string LocationForCurrentConnection(ServiceDefinition serviceDefinition);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.WebApi.Location.VssServerDataProvider/<LocationForCurrentConnectionAsync>d__31")]
public sealed virtual Task`1<string> LocationForCurrentConnectionAsync(ServiceDefinition serviceDefinition, CancellationToken cancellationToken);
    public sealed virtual IEnumerable`1<ServiceDefinition> FindServiceDefinitions(string serviceType);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.WebApi.Location.VssServerDataProvider/<FindServiceDefinitionsAsync>d__33")]
public sealed virtual Task`1<IEnumerable`1<ServiceDefinition>> FindServiceDefinitionsAsync(string serviceType, CancellationToken cancellationToken);
    public sealed virtual ServiceDefinition FindServiceDefinition(string serviceType, Guid serviceIdentifier);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.WebApi.Location.VssServerDataProvider/<FindServiceDefinitionAsync>d__35")]
public sealed virtual Task`1<ServiceDefinition> FindServiceDefinitionAsync(string serviceType, Guid serviceIdentifier, CancellationToken cancellationToken);
    public sealed virtual ApiResourceLocationCollection GetResourceLocations();
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.WebApi.Location.VssServerDataProvider/<GetResourceLocationsAsync>d__37")]
public sealed virtual Task`1<ApiResourceLocationCollection> GetResourceLocationsAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.WebApi.Location.VssServerDataProvider/<CheckForServerUpdatesAsync>d__38")]
private Task CheckForServerUpdatesAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.WebApi.Location.VssServerDataProvider/<EnsureConnectedAsync>d__39")]
private Task`1<bool> EnsureConnectedAsync(ConnectOptions optionsNeeded, CancellationToken cancellationToken);
    private bool NeedToConnect(ConnectOptions optionsNeeded);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.WebApi.Location.VssServerDataProvider/<ConnectAsync>d__41")]
public sealed virtual Task ConnectAsync(ConnectOptions connectOptions, CancellationToken cancellationToken);
    public sealed virtual Task DisconnectAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.WebApi.Location.VssServerDataProvider/<GetConnectionDataAsync>d__56")]
private Task`1<ConnectionData> GetConnectionDataAsync(ConnectOptions connectOptions, int lastChangeId, CancellationToken cancellationToken);
}
public static class Microsoft.VisualStudio.Services.WebApi.LocationResources : object {
    private static ResourceManager s_resMgr;
    public static ResourceManager Manager { get; }
    private static LocationResources();
    public static ResourceManager get_Manager();
    private static string Get(string resourceName);
    private static string Get(string resourceName, CultureInfo culture);
    public static int GetInt(string resourceName);
    public static int GetInt(string resourceName, CultureInfo culture);
    public static bool GetBool(string resourceName);
    public static bool GetBool(string resourceName, CultureInfo culture);
    private static string Format(string resourceName, Object[] args);
    private static string Format(string resourceName, CultureInfo culture, Object[] args);
    public static string CannotChangeParentDefinition(object arg0, object arg1, object arg2, object arg3);
    public static string CannotChangeParentDefinition(object arg0, object arg1, object arg2, object arg3, CultureInfo culture);
    public static string ParentDefinitionNotFound(object arg0, object arg1, object arg2, object arg3);
    public static string ParentDefinitionNotFound(object arg0, object arg1, object arg2, object arg3, CultureInfo culture);
}
public class Microsoft.VisualStudio.Services.WebApi.MarketplaceOfferContract : object {
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AssetId>k__BackingField;
    [CompilerGeneratedAttribute]
private long <AssetVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PlanId>k__BackingField;
    [CompilerGeneratedAttribute]
private RESTApiRequestOperationType <Operation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CustomerSupportEmail>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CustomerSupportPhoneNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IntegrationContactEmail>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IntegrationContactPhoneNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private AssetDetailObject <AssetDetails>k__BackingField;
    [CompilerGeneratedAttribute]
private RestApiResponseStatusModel <operationStatus>k__BackingField;
    public string Type { get; public set; }
    public string AssetId { get; public set; }
    public long AssetVersion { get; public set; }
    public string PlanId { get; public set; }
    public RESTApiRequestOperationType Operation { get; public set; }
    public string CustomerSupportEmail { get; public set; }
    public string CustomerSupportPhoneNumber { get; public set; }
    public string IntegrationContactEmail { get; public set; }
    public string IntegrationContactPhoneNumber { get; public set; }
    public AssetDetailObject AssetDetails { get; public set; }
    public RestApiResponseStatusModel operationStatus { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    [CompilerGeneratedAttribute]
public string get_AssetId();
    [CompilerGeneratedAttribute]
public void set_AssetId(string value);
    [CompilerGeneratedAttribute]
public long get_AssetVersion();
    [CompilerGeneratedAttribute]
public void set_AssetVersion(long value);
    [CompilerGeneratedAttribute]
public string get_PlanId();
    [CompilerGeneratedAttribute]
public void set_PlanId(string value);
    [CompilerGeneratedAttribute]
public RESTApiRequestOperationType get_Operation();
    [CompilerGeneratedAttribute]
public void set_Operation(RESTApiRequestOperationType value);
    [CompilerGeneratedAttribute]
public string get_CustomerSupportEmail();
    [CompilerGeneratedAttribute]
public void set_CustomerSupportEmail(string value);
    [CompilerGeneratedAttribute]
public string get_CustomerSupportPhoneNumber();
    [CompilerGeneratedAttribute]
public void set_CustomerSupportPhoneNumber(string value);
    [CompilerGeneratedAttribute]
public string get_IntegrationContactEmail();
    [CompilerGeneratedAttribute]
public void set_IntegrationContactEmail(string value);
    [CompilerGeneratedAttribute]
public string get_IntegrationContactPhoneNumber();
    [CompilerGeneratedAttribute]
public void set_IntegrationContactPhoneNumber(string value);
    [CompilerGeneratedAttribute]
public AssetDetailObject get_AssetDetails();
    [CompilerGeneratedAttribute]
public void set_AssetDetails(AssetDetailObject value);
    [CompilerGeneratedAttribute]
public RestApiResponseStatusModel get_operationStatus();
    [CompilerGeneratedAttribute]
public void set_operationStatus(RestApiResponseStatusModel value);
}
public class Microsoft.VisualStudio.Services.WebApi.MarketplaceOfferContract2 : object {
    [CompilerGeneratedAttribute]
private AssetDetails <AssetDetails>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AssetId>k__BackingField;
    [CompilerGeneratedAttribute]
private long <AssetVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CustomerSupportEmail>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CustomerSupportPhoneNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IntegrationContactEmail>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IntegrationContactPhoneNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private RESTApiRequestOperationType2 <Operation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PlanId>k__BackingField;
    [CompilerGeneratedAttribute]
private long <PublishVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PublisherDisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PublisherId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private RestApiResponseStatusModel <OperationStatus>k__BackingField;
    [JsonPropertyAttribute("assetDetails")]
public AssetDetails AssetDetails { get; public set; }
    [JsonPropertyAttribute("assetId")]
public string AssetId { get; public set; }
    [JsonPropertyAttribute("assetVersion")]
public long AssetVersion { get; public set; }
    [JsonPropertyAttribute("customerSupportEmail")]
public string CustomerSupportEmail { get; public set; }
    [JsonPropertyAttribute("customerSupportPhoneNumber")]
public string CustomerSupportPhoneNumber { get; public set; }
    [JsonPropertyAttribute("integrationContactEmail")]
public string IntegrationContactEmail { get; public set; }
    [JsonPropertyAttribute("integrationContactPhoneNumber")]
public string IntegrationContactPhoneNumber { get; public set; }
    [JsonPropertyAttribute("operation")]
public RESTApiRequestOperationType2 Operation { get; public set; }
    [JsonPropertyAttribute("planId")]
public string PlanId { get; public set; }
    [JsonPropertyAttribute("publishVersion")]
public long PublishVersion { get; public set; }
    [JsonPropertyAttribute("publisherDisplayName")]
public string PublisherDisplayName { get; public set; }
    [JsonPropertyAttribute("publisherId")]
public string PublisherId { get; public set; }
    [JsonPropertyAttribute("type")]
public string Type { get; public set; }
    [JsonPropertyAttribute("operationStatus")]
public RestApiResponseStatusModel OperationStatus { get; public set; }
    [CompilerGeneratedAttribute]
public AssetDetails get_AssetDetails();
    [CompilerGeneratedAttribute]
public void set_AssetDetails(AssetDetails value);
    [CompilerGeneratedAttribute]
public string get_AssetId();
    [CompilerGeneratedAttribute]
public void set_AssetId(string value);
    [CompilerGeneratedAttribute]
public long get_AssetVersion();
    [CompilerGeneratedAttribute]
public void set_AssetVersion(long value);
    [CompilerGeneratedAttribute]
public string get_CustomerSupportEmail();
    [CompilerGeneratedAttribute]
public void set_CustomerSupportEmail(string value);
    [CompilerGeneratedAttribute]
public string get_CustomerSupportPhoneNumber();
    [CompilerGeneratedAttribute]
public void set_CustomerSupportPhoneNumber(string value);
    [CompilerGeneratedAttribute]
public string get_IntegrationContactEmail();
    [CompilerGeneratedAttribute]
public void set_IntegrationContactEmail(string value);
    [CompilerGeneratedAttribute]
public string get_IntegrationContactPhoneNumber();
    [CompilerGeneratedAttribute]
public void set_IntegrationContactPhoneNumber(string value);
    [CompilerGeneratedAttribute]
public RESTApiRequestOperationType2 get_Operation();
    [CompilerGeneratedAttribute]
public void set_Operation(RESTApiRequestOperationType2 value);
    [CompilerGeneratedAttribute]
public string get_PlanId();
    [CompilerGeneratedAttribute]
public void set_PlanId(string value);
    [CompilerGeneratedAttribute]
public long get_PublishVersion();
    [CompilerGeneratedAttribute]
public void set_PublishVersion(long value);
    [CompilerGeneratedAttribute]
public string get_PublisherDisplayName();
    [CompilerGeneratedAttribute]
public void set_PublisherDisplayName(string value);
    [CompilerGeneratedAttribute]
public string get_PublisherId();
    [CompilerGeneratedAttribute]
public void set_PublisherId(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    [CompilerGeneratedAttribute]
public RestApiResponseStatusModel get_OperationStatus();
    [CompilerGeneratedAttribute]
public void set_OperationStatus(RestApiResponseStatusModel value);
}
public class Microsoft.VisualStudio.Services.WebApi.MaxDacpacSizeExceededException : DataImportException {
    public MaxDacpacSizeExceededException(string dacpacSizeInGB, string thresholdSizeInGB);
    public MaxDacpacSizeExceededException(string message);
    public MaxDacpacSizeExceededException(string message, Exception innerException);
    protected MaxDacpacSizeExceededException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.WebApi.MicrosoftAzureMarketplaceLeadConfiguration : object {
}
public class Microsoft.VisualStudio.Services.WebApi.MilestoneNotSupportedException : DataImportException {
    public MilestoneNotSupportedException(string message);
    public MilestoneNotSupportedException(string message, Exception innerException);
    protected MilestoneNotSupportedException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.WebApi.MissingSourceExtendedPropertyException : DataImportException {
    public MissingSourceExtendedPropertyException(string message);
    public MissingSourceExtendedPropertyException(string message, Exception innerException);
    protected MissingSourceExtendedPropertyException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.WebApi.MonthlyPricing : object {
    [CompilerGeneratedAttribute]
private Multiplier <Multiplier>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, RegionPrice> <RegionPrices>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <Regions>k__BackingField;
    [JsonPropertyAttribute("multiplier")]
public Multiplier Multiplier { get; public set; }
    [JsonPropertyAttribute("regionPrices")]
public Dictionary`2<string, RegionPrice> RegionPrices { get; public set; }
    [JsonPropertyAttribute("regions")]
public List`1<string> Regions { get; public set; }
    [CompilerGeneratedAttribute]
public Multiplier get_Multiplier();
    [CompilerGeneratedAttribute]
public void set_Multiplier(Multiplier value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, RegionPrice> get_RegionPrices();
    [CompilerGeneratedAttribute]
public void set_RegionPrices(Dictionary`2<string, RegionPrice> value);
    [CompilerGeneratedAttribute]
public List`1<string> get_Regions();
    [CompilerGeneratedAttribute]
public void set_Regions(List`1<string> value);
}
public class Microsoft.VisualStudio.Services.WebApi.Multiplier : object {
    [CompilerGeneratedAttribute]
private string <Currency>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Single>k__BackingField;
    [JsonPropertyAttribute("currency")]
public string Currency { get; public set; }
    [JsonPropertyAttribute("single")]
public long Single { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Currency();
    [CompilerGeneratedAttribute]
public void set_Currency(string value);
    [CompilerGeneratedAttribute]
public long get_Single();
    [CompilerGeneratedAttribute]
public void set_Single(long value);
}
public abstract class Microsoft.VisualStudio.Services.WebApi.MustacheAggregateExpression : MustacheExpression {
    [CompilerGeneratedAttribute]
private MustacheAggregateExpression <ParentExpression>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<MustacheExpression> <ChildExpressions>k__BackingField;
    internal MustacheAggregateExpression ParentExpression { get; internal set; }
    internal List`1<MustacheExpression> ChildExpressions { get; internal set; }
    public bool IsContextBased { get; }
    [CompilerGeneratedAttribute]
internal MustacheAggregateExpression get_ParentExpression();
    [CompilerGeneratedAttribute]
internal void set_ParentExpression(MustacheAggregateExpression value);
    [CompilerGeneratedAttribute]
internal List`1<MustacheExpression> get_ChildExpressions();
    [CompilerGeneratedAttribute]
internal void set_ChildExpressions(List`1<MustacheExpression> value);
    public virtual bool get_IsContextBased();
    internal virtual void Evaluate(MustacheEvaluationContext context, MustacheTextWriter writer);
    public string EvaluateChildExpressions(MustacheEvaluationContext context);
    public void EvaluateChildExpressions(MustacheEvaluationContext context, MustacheTextWriter writer);
    public JToken GetCurrentJToken(string selector, MustacheEvaluationContext context);
}
public class Microsoft.VisualStudio.Services.WebApi.MustacheEncodeMethod : MulticastDelegate {
    public MustacheEncodeMethod(object object, IntPtr method);
    public virtual string Invoke(string value);
    public virtual IAsyncResult BeginInvoke(string value, AsyncCallback callback, object object);
    public virtual string EndInvoke(IAsyncResult result);
}
public static class Microsoft.VisualStudio.Services.WebApi.MustacheEncodeMethods : object {
    public static string HtmlEncode(string value);
    public static string JsonEncode(string value);
    public static string NoEncode(string value);
}
public class Microsoft.VisualStudio.Services.WebApi.MustacheEvaluationContext : object {
    private JToken m_replacementToken;
    private IDictionary`2<MustacheTemplatedExpression, bool> m_evaluatedExpressionTruthiness;
    private MustacheOptions m_options;
    [CompilerGeneratedAttribute]
private object <ReplacementObject>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> <AdditionalEvaluationData>k__BackingField;
    [CompilerGeneratedAttribute]
private MustacheEvaluationContext <ParentContext>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CurrentIndex>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ParentItemsCount>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CurrentKey>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, MustacheRootExpression> <PartialExpressions>k__BackingField;
    public object ReplacementObject { get; public set; }
    public Dictionary`2<string, object> AdditionalEvaluationData { get; public set; }
    internal JToken ReplacementToken { get; }
    public MustacheEvaluationContext ParentContext { get; public set; }
    public int CurrentIndex { get; public set; }
    public int ParentItemsCount { get; public set; }
    public string CurrentKey { get; public set; }
    public Dictionary`2<string, MustacheRootExpression> PartialExpressions { get; public set; }
    [EditorBrowsableAttribute("1")]
public MustacheOptions Options { get; public set; }
    [CompilerGeneratedAttribute]
public object get_ReplacementObject();
    [CompilerGeneratedAttribute]
public void set_ReplacementObject(object value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, object> get_AdditionalEvaluationData();
    [CompilerGeneratedAttribute]
public void set_AdditionalEvaluationData(Dictionary`2<string, object> value);
    internal JToken get_ReplacementToken();
    [CompilerGeneratedAttribute]
public MustacheEvaluationContext get_ParentContext();
    [CompilerGeneratedAttribute]
public void set_ParentContext(MustacheEvaluationContext value);
    [CompilerGeneratedAttribute]
public int get_CurrentIndex();
    [CompilerGeneratedAttribute]
public void set_CurrentIndex(int value);
    [CompilerGeneratedAttribute]
public int get_ParentItemsCount();
    [CompilerGeneratedAttribute]
public void set_ParentItemsCount(int value);
    [CompilerGeneratedAttribute]
public string get_CurrentKey();
    [CompilerGeneratedAttribute]
public void set_CurrentKey(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, MustacheRootExpression> get_PartialExpressions();
    [CompilerGeneratedAttribute]
public void set_PartialExpressions(Dictionary`2<string, MustacheRootExpression> value);
    public MustacheOptions get_Options();
    public void set_Options(MustacheOptions value);
    public static void CombinePartialsDictionaries(MustacheEvaluationContext context, MustacheAggregateExpression expression);
    internal void AssertCancellation();
    internal Nullable`1<bool> WasExpressionEvaluatedAsTruthy(MustacheTemplatedExpression expression);
    internal void StoreExpressionTruthiness(MustacheTemplatedExpression expression, bool truthy);
}
public class Microsoft.VisualStudio.Services.WebApi.MustacheEvaluationResultLengthException : MustacheException {
    public MustacheEvaluationResultLengthException(string message);
}
public class Microsoft.VisualStudio.Services.WebApi.MustacheException : VssServiceException {
    public MustacheException(string message);
}
[EditorBrowsableAttribute("1")]
public abstract class Microsoft.VisualStudio.Services.WebApi.MustacheExpression : object {
    [CompilerGeneratedAttribute]
private Dictionary`2<string, MustacheRootExpression> <PartialExpressions>k__BackingField;
    public bool IsContextBased { get; }
    public Dictionary`2<string, MustacheRootExpression> PartialExpressions { get; public set; }
    public abstract virtual bool get_IsContextBased();
    [CompilerGeneratedAttribute]
public Dictionary`2<string, MustacheRootExpression> get_PartialExpressions();
    [CompilerGeneratedAttribute]
public void set_PartialExpressions(Dictionary`2<string, MustacheRootExpression> value);
    internal abstract virtual void Evaluate(MustacheEvaluationContext context, MustacheTextWriter writer);
    public string Evaluate(object replacementObject, Dictionary`2<string, object> additionalEvaluationData, MustacheEvaluationContext parentContext, Dictionary`2<string, MustacheRootExpression> partialExpressions);
    [EditorBrowsableAttribute("1")]
public string Evaluate(object replacementObject, Dictionary`2<string, object> additionalEvaluationData, MustacheEvaluationContext parentContext, Dictionary`2<string, MustacheRootExpression> partialExpressions, MustacheOptions options);
    public void Evaluate(TextWriter writer, object replacementObject, MustacheOptions options, Dictionary`2<string, object> additionalEvaluationData, MustacheEvaluationContext parentContext, Dictionary`2<string, MustacheRootExpression> partialExpressions);
    internal static MustacheRootExpression Parse(string template, Dictionary`2<string, MustacheTemplateHelperWriter> helpers, Dictionary`2<string, MustacheRootExpression> partials, MustacheOptions options, int depth);
    private static void AddTextExpression(MustacheAggregateExpression expression, string text, bool isLastEntry);
}
[ExceptionMappingAttribute("0.0", "3.0", "MustacheExpressionInvalidException", "Microsoft.VisualStudio.Services.WebApi.MustacheExpressionInvalidException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.WebApi.MustacheExpressionInvalidException : MustacheException {
    public MustacheExpressionInvalidException(string message);
}
[ObsoleteAttribute("Obsolete expression type")]
public class Microsoft.VisualStudio.Services.WebApi.MustacheLiteralExpression`1 : MustacheExpression {
    [CompilerGeneratedAttribute]
private T <Value>k__BackingField;
    public T Value { get; }
    public bool IsContextBased { get; }
    public MustacheLiteralExpression`1(T value);
    [CompilerGeneratedAttribute]
public T get_Value();
    public virtual bool get_IsContextBased();
    internal virtual void Evaluate(MustacheEvaluationContext context, MustacheTextWriter writer);
}
[EditorBrowsableAttribute("1")]
public class Microsoft.VisualStudio.Services.WebApi.MustacheOptions : object {
    private MustacheEncodeMethod m_encodeMethod;
    [CompilerGeneratedAttribute]
private CancellationToken <CancellationToken>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DisableInlinePartials>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaxDepth>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaxResultLength>k__BackingField;
    public CancellationToken CancellationToken { get; public set; }
    public bool DisableInlinePartials { get; public set; }
    public MustacheEncodeMethod EncodeMethod { get; public set; }
    public int MaxDepth { get; public set; }
    public int MaxResultLength { get; public set; }
    [CompilerGeneratedAttribute]
public CancellationToken get_CancellationToken();
    [CompilerGeneratedAttribute]
public void set_CancellationToken(CancellationToken value);
    [CompilerGeneratedAttribute]
public bool get_DisableInlinePartials();
    [CompilerGeneratedAttribute]
public void set_DisableInlinePartials(bool value);
    public MustacheEncodeMethod get_EncodeMethod();
    public void set_EncodeMethod(MustacheEncodeMethod value);
    [CompilerGeneratedAttribute]
public int get_MaxDepth();
    [CompilerGeneratedAttribute]
public void set_MaxDepth(int value);
    [CompilerGeneratedAttribute]
public int get_MaxResultLength();
    [CompilerGeneratedAttribute]
public void set_MaxResultLength(int value);
}
[EditorBrowsableAttribute("1")]
internal static class Microsoft.VisualStudio.Services.WebApi.MustacheParsingUtil : object {
    internal static char SafeCharAt(string value, int index);
    internal static string SafeSubstring(string value, int index, int length);
    internal static bool IsConstantAt(string value, int index, string constantValue);
    internal static void EvaluateJToken(MustacheTextWriter writer, JArray token, MustacheEvaluationContext context, MustacheTemplatedExpression expression);
    internal static void AssertDepth(MustacheOptions options, int depth);
}
public class Microsoft.VisualStudio.Services.WebApi.MustacheRootExpression : MustacheAggregateExpression {
    [CompilerGeneratedAttribute]
private Dictionary`2<string, MustacheTemplateHelper> <Helpers>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, MustacheTemplateHelper> <BlockHelpers>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, MustacheTemplateHelperWriter> <TemplateHelpers>k__BackingField;
    [ObsoleteAttribute]
public Dictionary`2<string, MustacheTemplateHelper> Helpers { get; public set; }
    [ObsoleteAttribute]
public Dictionary`2<string, MustacheTemplateHelper> BlockHelpers { get; public set; }
    internal Dictionary`2<string, MustacheTemplateHelperWriter> TemplateHelpers { get; internal set; }
    [CompilerGeneratedAttribute]
public Dictionary`2<string, MustacheTemplateHelper> get_Helpers();
    [CompilerGeneratedAttribute]
public void set_Helpers(Dictionary`2<string, MustacheTemplateHelper> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, MustacheTemplateHelper> get_BlockHelpers();
    [CompilerGeneratedAttribute]
public void set_BlockHelpers(Dictionary`2<string, MustacheTemplateHelper> value);
    [CompilerGeneratedAttribute]
internal Dictionary`2<string, MustacheTemplateHelperWriter> get_TemplateHelpers();
    [CompilerGeneratedAttribute]
internal void set_TemplateHelpers(Dictionary`2<string, MustacheTemplateHelperWriter> value);
}
public class Microsoft.VisualStudio.Services.WebApi.MustacheTemplatedExpression : MustacheAggregateExpression {
    private IList`1<object> m_helperArguments;
    [CompilerGeneratedAttribute]
private MustacheRootExpression <RootExpression>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Expression>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HelperName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Encode>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsBlockExpression>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsNegativeExpression>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsElseBlock>k__BackingField;
    [CompilerGeneratedAttribute]
private MustacheTemplatedExpression <ElseSourceExpression>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsComment>k__BackingField;
    internal MustacheRootExpression RootExpression { get; internal set; }
    public string Expression { get; protected set; }
    public string HelperName { get; public set; }
    public IList`1<object> HelperArguments { get; }
    public bool Encode { get; public set; }
    public bool IsBlockExpression { get; public set; }
    public bool IsNegativeExpression { get; public set; }
    public bool IsElseBlock { get; public set; }
    public MustacheTemplatedExpression ElseSourceExpression { get; public set; }
    public bool IsComment { get; public set; }
    public bool IsContextBased { get; }
    public MustacheTemplatedExpression(string expression, MustacheAggregateExpression parentExpression, MustacheRootExpression rootExpression, bool isBlockExpression, bool isInvertedExpression, bool isElseBlock, bool encode);
    [CompilerGeneratedAttribute]
internal MustacheRootExpression get_RootExpression();
    [CompilerGeneratedAttribute]
internal void set_RootExpression(MustacheRootExpression value);
    [CompilerGeneratedAttribute]
public string get_Expression();
    [CompilerGeneratedAttribute]
protected void set_Expression(string value);
    [CompilerGeneratedAttribute]
public string get_HelperName();
    [CompilerGeneratedAttribute]
public void set_HelperName(string value);
    public IList`1<object> get_HelperArguments();
    [CompilerGeneratedAttribute]
public bool get_Encode();
    [CompilerGeneratedAttribute]
public void set_Encode(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsBlockExpression();
    [CompilerGeneratedAttribute]
public void set_IsBlockExpression(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsNegativeExpression();
    [CompilerGeneratedAttribute]
public void set_IsNegativeExpression(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsElseBlock();
    [CompilerGeneratedAttribute]
public void set_IsElseBlock(bool value);
    [CompilerGeneratedAttribute]
public MustacheTemplatedExpression get_ElseSourceExpression();
    [CompilerGeneratedAttribute]
public void set_ElseSourceExpression(MustacheTemplatedExpression value);
    [CompilerGeneratedAttribute]
public bool get_IsComment();
    [CompilerGeneratedAttribute]
public void set_IsComment(bool value);
    public virtual bool get_IsContextBased();
    public object GetCurrentToken(string selector, MustacheEvaluationContext context);
    public bool IsTokenTruthy(JToken token);
    internal virtual void Evaluate(MustacheEvaluationContext context, MustacheTextWriter writer);
    private void EvaluateInternal(MustacheEvaluationContext context, MustacheTextWriter writer);
    private IList`1<object> ParseArgumentExpressions();
    public string GetRawHelperArgument(int index);
    public T GetHelperArgument(MustacheEvaluationContext context, int index, T defaultValue);
    internal static bool IsHelperArgumentTruthy(MustacheEvaluationContext context, object argValue);
}
[ObsoleteAttribute("Use MustacheTemplateHelperMethod")]
public class Microsoft.VisualStudio.Services.WebApi.MustacheTemplateHelper : MulticastDelegate {
    public MustacheTemplateHelper(object object, IntPtr method);
    public virtual string Invoke(MustacheTemplatedExpression expression, MustacheEvaluationContext context);
    public virtual IAsyncResult BeginInvoke(MustacheTemplatedExpression expression, MustacheEvaluationContext context, AsyncCallback callback, object object);
    public virtual string EndInvoke(IAsyncResult result);
}
public class Microsoft.VisualStudio.Services.WebApi.MustacheTemplateHelperMethod : MulticastDelegate {
    public MustacheTemplateHelperMethod(object object, IntPtr method);
    public virtual object Invoke(MustacheTemplatedExpression expression, MustacheEvaluationContext context);
    public virtual IAsyncResult BeginInvoke(MustacheTemplatedExpression expression, MustacheEvaluationContext context, AsyncCallback callback, object object);
    public virtual object EndInvoke(IAsyncResult result);
}
public class Microsoft.VisualStudio.Services.WebApi.MustacheTemplateHelperWriter : MulticastDelegate {
    public MustacheTemplateHelperWriter(object object, IntPtr method);
    public virtual void Invoke(MustacheTemplatedExpression expression, MustacheTextWriter writer, MustacheEvaluationContext context);
    public virtual IAsyncResult BeginInvoke(MustacheTemplatedExpression expression, MustacheTextWriter writer, MustacheEvaluationContext context, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
public class Microsoft.VisualStudio.Services.WebApi.MustacheTemplateParser : object {
    private static Dictionary`2<string, MustacheTemplateHelperWriter> s_defaultHandlebarHelpers;
    private static Dictionary`2<string, MustacheTemplateHelperWriter> s_commonHelpers;
    private Dictionary`2<string, MustacheTemplateHelperWriter> m_helpers;
    private Dictionary`2<string, MustacheRootExpression> m_partials;
    private MustacheOptions m_options;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, MustacheTemplateHelper> <Helpers>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, MustacheTemplateHelper> <BlockHelpers>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, MustacheRootExpression> <Partials>k__BackingField;
    [ObsoleteAttribute("Use the RegisterHelper method")]
public Dictionary`2<string, MustacheTemplateHelper> Helpers { get; private set; }
    [ObsoleteAttribute("Use the RegisterHelper method")]
public Dictionary`2<string, MustacheTemplateHelper> BlockHelpers { get; private set; }
    [ObsoleteAttribute("Use the RegisterPartial method")]
public Dictionary`2<string, MustacheRootExpression> Partials { get; private set; }
    public MustacheTemplateParser(bool useDefaultHandlebarHelpers, Dictionary`2<string, string> partials);
    public MustacheTemplateParser(bool useDefaultHandlebarHelpers, bool useCommonTemplateHelpers);
    [EditorBrowsableAttribute("1")]
public MustacheTemplateParser(bool useDefaultHandlebarHelpers, bool useCommonTemplateHelpers, Dictionary`2<string, string> partials, MustacheOptions options);
    private static MustacheTemplateParser();
    [CompilerGeneratedAttribute]
public Dictionary`2<string, MustacheTemplateHelper> get_Helpers();
    [CompilerGeneratedAttribute]
private void set_Helpers(Dictionary`2<string, MustacheTemplateHelper> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, MustacheTemplateHelper> get_BlockHelpers();
    [CompilerGeneratedAttribute]
private void set_BlockHelpers(Dictionary`2<string, MustacheTemplateHelper> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, MustacheRootExpression> get_Partials();
    [CompilerGeneratedAttribute]
private void set_Partials(Dictionary`2<string, MustacheRootExpression> value);
    public void RegisterHelper(string helperName, MustacheTemplateHelperMethod helper);
    public void RegisterHelper(string helperName, MustacheTemplateHelperWriter helper);
    public void ParseAndRegisterPartial(string partialName, string partialExpression);
    public void RegisterPartial(string partialName, MustacheRootExpression partialExpression);
    public string ReplaceValues(string template, object replacementContext);
    public MustacheExpression Parse(string template);
}
public class Microsoft.VisualStudio.Services.WebApi.MustacheTextExpression : MustacheExpression {
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    public string Text { get; public set; }
    public bool IsContextBased { get; }
    internal MustacheTextExpression(string text);
    [CompilerGeneratedAttribute]
public string get_Text();
    [CompilerGeneratedAttribute]
public void set_Text(string value);
    public virtual bool get_IsContextBased();
    internal virtual void Evaluate(MustacheEvaluationContext context, MustacheTextWriter writer);
}
public class Microsoft.VisualStudio.Services.WebApi.MustacheTextWriter : TextWriter {
    private TextWriter m_writer;
    private MustacheOptions m_options;
    private int m_resultLength;
    public int ResultLength { get; }
    public Encoding Encoding { get; }
    public MustacheTextWriter(TextWriter writer, MustacheOptions options);
    public int get_ResultLength();
    public virtual Encoding get_Encoding();
    public virtual void Write(char value);
    public void Write(string value, bool encode);
    public virtual void Flush();
    public virtual Task FlushAsync();
    protected virtual void Dispose(bool disposing);
}
internal static class Microsoft.VisualStudio.Services.WebApi.NameResolutionResources : object {
    private static ResourceManager s_resMgr;
    public static ResourceManager Manager { get; }
    private static NameResolutionResources();
    public static ResourceManager get_Manager();
    private static string Get(string resourceName);
    private static string Get(string resourceName, CultureInfo culture);
    public static int GetInt(string resourceName);
    public static int GetInt(string resourceName, CultureInfo culture);
    public static bool GetBool(string resourceName);
    public static bool GetBool(string resourceName, CultureInfo culture);
    private static string Format(string resourceName, Object[] args);
    private static string Format(string resourceName, CultureInfo culture, Object[] args);
    public static string MultiplePrimaryNameResolutionEntriesError(object arg0);
    public static string MultiplePrimaryNameResolutionEntriesError(object arg0, CultureInfo culture);
    public static string NameResolutionEntryAlreadyExistsError(object arg0, object arg1, object arg2);
    public static string NameResolutionEntryAlreadyExistsError(object arg0, object arg1, object arg2, CultureInfo culture);
}
public class Microsoft.VisualStudio.Services.WebApi.OfferPlan : object {
    [CompilerGeneratedAttribute]
private MonthlyPricing <MonthlyPricing>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PlanId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VsMarketplaceExtensionsSkuDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VsMarketplaceExtensionsSkuSummary>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VsMarketplaceExtensionsSkuTitle>k__BackingField;
    [CompilerGeneratedAttribute]
private int <VsMarketplaceExtensionsSkuUsers>k__BackingField;
    [JsonPropertyAttribute("monthlyPricing")]
public MonthlyPricing MonthlyPricing { get; public set; }
    [JsonPropertyAttribute("planId")]
public string PlanId { get; public set; }
    [JsonPropertyAttribute("vs-marketplace-extensions.skuDescription")]
public string VsMarketplaceExtensionsSkuDescription { get; public set; }
    [JsonPropertyAttribute("vs-marketplace-extensions.skuSummary")]
public string VsMarketplaceExtensionsSkuSummary { get; public set; }
    [JsonPropertyAttribute("vs-marketplace-extensions.skuTitle")]
public string VsMarketplaceExtensionsSkuTitle { get; public set; }
    [JsonPropertyAttribute("vs-marketplace-extensions.skuUsers")]
public int VsMarketplaceExtensionsSkuUsers { get; public set; }
    [CompilerGeneratedAttribute]
public MonthlyPricing get_MonthlyPricing();
    [CompilerGeneratedAttribute]
public void set_MonthlyPricing(MonthlyPricing value);
    [CompilerGeneratedAttribute]
public string get_PlanId();
    [CompilerGeneratedAttribute]
public void set_PlanId(string value);
    [CompilerGeneratedAttribute]
public string get_VsMarketplaceExtensionsSkuDescription();
    [CompilerGeneratedAttribute]
public void set_VsMarketplaceExtensionsSkuDescription(string value);
    [CompilerGeneratedAttribute]
public string get_VsMarketplaceExtensionsSkuSummary();
    [CompilerGeneratedAttribute]
public void set_VsMarketplaceExtensionsSkuSummary(string value);
    [CompilerGeneratedAttribute]
public string get_VsMarketplaceExtensionsSkuTitle();
    [CompilerGeneratedAttribute]
public void set_VsMarketplaceExtensionsSkuTitle(string value);
    [CompilerGeneratedAttribute]
public int get_VsMarketplaceExtensionsSkuUsers();
    [CompilerGeneratedAttribute]
public void set_VsMarketplaceExtensionsSkuUsers(int value);
}
public class Microsoft.VisualStudio.Services.WebApi.OfferTypeVersions : object {
    [CompilerGeneratedAttribute]
private long <VsMarketplaceExtensions>k__BackingField;
    [JsonPropertyAttribute("vs-marketplace-extensions")]
public long VsMarketplaceExtensions { get; public set; }
    [CompilerGeneratedAttribute]
public long get_VsMarketplaceExtensions();
    [CompilerGeneratedAttribute]
public void set_VsMarketplaceExtensions(long value);
}
public class Microsoft.VisualStudio.Services.WebApi.PackageLocationNotSupportedException : DataImportException {
    public PackageLocationNotSupportedException(string message);
    public PackageLocationNotSupportedException(string message, Exception innerException);
    protected PackageLocationNotSupportedException(SerializationInfo info, StreamingContext context);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.WebApi.PagedList`1 : List`1<T> {
    [CompilerGeneratedAttribute]
private string <ContinuationToken>k__BackingField;
    [DataMemberAttribute]
public string ContinuationToken { get; public set; }
    public PagedList`1(IEnumerable`1<T> list, string continuationToken);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ContinuationToken();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ContinuationToken(string value);
}
internal static class Microsoft.VisualStudio.Services.WebApi.PartitioningResources : object {
    private static ResourceManager s_resMgr;
    public static ResourceManager Manager { get; }
    private static PartitioningResources();
    public static ResourceManager get_Manager();
    private static string Get(string resourceName);
    private static string Get(string resourceName, CultureInfo culture);
    public static int GetInt(string resourceName);
    public static int GetInt(string resourceName, CultureInfo culture);
    public static bool GetBool(string resourceName);
    public static bool GetBool(string resourceName, CultureInfo culture);
    private static string Format(string resourceName, Object[] args);
    private static string Format(string resourceName, CultureInfo culture, Object[] args);
    public static string PartitionContainerMustBeOfflineError(object arg0);
    public static string PartitionContainerMustBeOfflineError(object arg0, CultureInfo culture);
}
public class Microsoft.VisualStudio.Services.WebApi.Patch.AddPatchOperation`1 : PatchOperation`1<TModel> {
    public AddPatchOperation`1(string path, object value);
    [EditorBrowsableAttribute("1")]
public static PatchOperation`1<TModel> CreateFromJson(JsonPatchOperation operation);
    public virtual void Apply(TModel target);
    [CompilerGeneratedAttribute]
private void <Apply>b__3_0(Type type, object parent, string current);
}
[ExceptionMappingAttribute("0.0", "3.0", "InvalidPatchFieldNameException", "Microsoft.VisualStudio.Services.WebApi.Patch.InvalidPatchFieldNameException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.WebApi.Patch.InvalidPatchFieldNameException : PatchOperationFailedException {
    public InvalidPatchFieldNameException(string message);
}
public interface Microsoft.VisualStudio.Services.WebApi.Patch.IPatchDocument`1 {
    public IEnumerable`1<IPatchOperation`1<TModel>> Operations { get; }
    public abstract virtual IEnumerable`1<IPatchOperation`1<TModel>> get_Operations();
    public abstract virtual void Apply(TModel target);
}
public interface Microsoft.VisualStudio.Services.WebApi.Patch.IPatchOperation`1 {
    public Operation Operation { get; }
    public string Path { get; }
    public IEnumerable`1<string> EvaluatedPath { get; }
    public string From { get; }
    public object Value { get; }
    public abstract virtual Operation get_Operation();
    public abstract virtual string get_Path();
    public abstract virtual IEnumerable`1<string> get_EvaluatedPath();
    public abstract virtual string get_From();
    public abstract virtual object get_Value();
    public abstract virtual void Apply(TModel target);
}
public interface Microsoft.VisualStudio.Services.WebApi.Patch.IPatchOperationApplied {
    [CompilerGeneratedAttribute]
public abstract virtual void add_PatchOperationApplied(PatchOperationAppliedEventHandler value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_PatchOperationApplied(PatchOperationAppliedEventHandler value);
}
public interface Microsoft.VisualStudio.Services.WebApi.Patch.IPatchOperationApplying {
    [CompilerGeneratedAttribute]
public abstract virtual void add_PatchOperationApplying(PatchOperationApplyingEventHandler value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_PatchOperationApplying(PatchOperationApplyingEventHandler value);
}
[ClientIncludeModelAttribute]
public class Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchDocument : List`1<JsonPatchOperation> {
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.WebApi.Patch.Json.JsonPatchOperation : object {
    [CompilerGeneratedAttribute]
private Operation <Operation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private string <From>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Value>k__BackingField;
    [DataMemberAttribute]
public Operation Operation { get; public set; }
    [DataMemberAttribute]
public string Path { get; public set; }
    [DataMemberAttribute]
public string From { get; public set; }
    [DataMemberAttribute]
public object Value { get; public set; }
    [CompilerGeneratedAttribute]
public Operation get_Operation();
    [CompilerGeneratedAttribute]
public void set_Operation(Operation value);
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(string value);
    [CompilerGeneratedAttribute]
public string get_From();
    [CompilerGeneratedAttribute]
public void set_From(string value);
    [CompilerGeneratedAttribute]
public object get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(object value);
}
internal class Microsoft.VisualStudio.Services.WebApi.Patch.ObjectDictionaryConverter : CustomCreationConverter`1<IDictionary`2<string, object>> {
    public virtual IDictionary`2<string, object> Create(Type objectType);
    public virtual bool CanConvert(Type objectType);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
}
public enum Microsoft.VisualStudio.Services.WebApi.Patch.Operation : Enum {
    public int value__;
    public static Operation Add;
    public static Operation Remove;
    public static Operation Replace;
    public static Operation Move;
    public static Operation Copy;
    public static Operation Test;
}
public class Microsoft.VisualStudio.Services.WebApi.Patch.PatchDocument`1 : object {
    [CompilerGeneratedAttribute]
private IEnumerable`1<IPatchOperation`1<TModel>> <Operations>k__BackingField;
    [CompilerGeneratedAttribute]
private PatchOperationApplyingEventHandler PatchOperationApplying;
    [CompilerGeneratedAttribute]
private PatchOperationAppliedEventHandler PatchOperationApplied;
    public IEnumerable`1<IPatchOperation`1<TModel>> Operations { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<IPatchOperation`1<TModel>> get_Operations();
    [CompilerGeneratedAttribute]
public void set_Operations(IEnumerable`1<IPatchOperation`1<TModel>> value);
    [CompilerGeneratedAttribute]
public sealed virtual void add_PatchOperationApplying(PatchOperationApplyingEventHandler value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_PatchOperationApplying(PatchOperationApplyingEventHandler value);
    [CompilerGeneratedAttribute]
public sealed virtual void add_PatchOperationApplied(PatchOperationAppliedEventHandler value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_PatchOperationApplied(PatchOperationAppliedEventHandler value);
    [EditorBrowsableAttribute("1")]
public sealed virtual void Apply(TModel target);
    [EditorBrowsableAttribute("1")]
public static PatchDocument`1<TModel> CreateFromJson(JsonPatchDocument jsonPatchDocument);
}
public abstract class Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperation`1 : object {
    public static string EndOfIndex;
    public static string PathSeparator;
    private static JsonSerializer serializer;
    private IEnumerable`1<string> evaluatedPath;
    [CompilerGeneratedAttribute]
private PatchOperationApplyingEventHandler PatchOperationApplying;
    [CompilerGeneratedAttribute]
private PatchOperationAppliedEventHandler PatchOperationApplied;
    [CompilerGeneratedAttribute]
private Operation <Operation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private string <From>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Value>k__BackingField;
    public Operation Operation { get; protected set; }
    public string Path { get; protected set; }
    public IEnumerable`1<string> EvaluatedPath { get; }
    public string From { get; protected set; }
    public object Value { get; protected set; }
    private static PatchOperation`1();
    [CompilerGeneratedAttribute]
public sealed virtual void add_PatchOperationApplying(PatchOperationApplyingEventHandler value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_PatchOperationApplying(PatchOperationApplyingEventHandler value);
    [CompilerGeneratedAttribute]
public sealed virtual void add_PatchOperationApplied(PatchOperationAppliedEventHandler value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_PatchOperationApplied(PatchOperationAppliedEventHandler value);
    [CompilerGeneratedAttribute]
public sealed virtual Operation get_Operation();
    [CompilerGeneratedAttribute]
protected void set_Operation(Operation value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Path();
    [CompilerGeneratedAttribute]
protected void set_Path(string value);
    public sealed virtual IEnumerable`1<string> get_EvaluatedPath();
    [CompilerGeneratedAttribute]
public sealed virtual string get_From();
    [CompilerGeneratedAttribute]
protected void set_From(string value);
    [CompilerGeneratedAttribute]
public sealed virtual object get_Value();
    [CompilerGeneratedAttribute]
protected void set_Value(object value);
    [EditorBrowsableAttribute("1")]
public abstract virtual void Apply(TModel target);
    [EditorBrowsableAttribute("1")]
public static PatchOperation`1<TModel> CreateFromJson(JsonPatchOperation operation);
    protected static void ValidatePath(JsonPatchOperation operation);
    protected static void ValidateType(JsonPatchOperation operation);
    protected static Type ValidateAndGetType(JsonPatchOperation operation);
    protected static object ValidateAndGetValue(JsonPatchOperation operation);
    private static Type GetType(Type type, string path);
    private static Type GetType(Type type, IEnumerable`1<string> path);
    private static object DeserializeValue(Type type, object jsonValue);
    private static IEnumerable`1<string> SplitPath(string path);
    protected void Apply(object target, Action`3<Type, object, string> actionToApply);
    private void Apply(object target, IEnumerable`1<string> path, Action`3<Type, object, string> actionToApply);
}
public class Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperationAppliedEventArgs : object {
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private Operation <Operation>k__BackingField;
    public IEnumerable`1<string> Path { get; private set; }
    public Operation Operation { get; private set; }
    public PatchOperationAppliedEventArgs(IEnumerable`1<string> path, Operation operation);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_Path();
    [CompilerGeneratedAttribute]
private void set_Path(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public Operation get_Operation();
    [CompilerGeneratedAttribute]
private void set_Operation(Operation value);
}
public class Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperationAppliedEventHandler : MulticastDelegate {
    public PatchOperationAppliedEventHandler(object object, IntPtr method);
    public virtual void Invoke(object sender, PatchOperationAppliedEventArgs e);
    public virtual IAsyncResult BeginInvoke(object sender, PatchOperationAppliedEventArgs e, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
public class Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperationApplyingEventArgs : object {
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private Operation <Operation>k__BackingField;
    public IEnumerable`1<string> Path { get; private set; }
    public Operation Operation { get; private set; }
    public PatchOperationApplyingEventArgs(IEnumerable`1<string> path, Operation operation);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_Path();
    [CompilerGeneratedAttribute]
private void set_Path(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public Operation get_Operation();
    [CompilerGeneratedAttribute]
private void set_Operation(Operation value);
}
public class Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperationApplyingEventHandler : MulticastDelegate {
    public PatchOperationApplyingEventHandler(object object, IntPtr method);
    public virtual void Invoke(object sender, PatchOperationApplyingEventArgs e);
    public virtual IAsyncResult BeginInvoke(object sender, PatchOperationApplyingEventArgs e, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
[ExceptionMappingAttribute("0.0", "3.0", "PatchOperationFailedException", "Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperationFailedException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.WebApi.Patch.PatchOperationFailedException : VssServiceException {
    public PatchOperationFailedException(string message);
    public PatchOperationFailedException(string message, Exception innerException);
    protected PatchOperationFailedException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.WebApi.Patch.RemovePatchOperation`1 : PatchOperation`1<TModel> {
    public RemovePatchOperation`1(string path);
    [EditorBrowsableAttribute("1")]
public static PatchOperation`1<TModel> CreateFromJson(JsonPatchOperation operation);
    public virtual void Apply(TModel target);
    [CompilerGeneratedAttribute]
private void <Apply>b__3_0(Type type, object parent, string current);
}
public class Microsoft.VisualStudio.Services.WebApi.Patch.ReplacePatchOperation`1 : PatchOperation`1<TModel> {
    public ReplacePatchOperation`1(string path, object value);
    [EditorBrowsableAttribute("1")]
public static PatchOperation`1<TModel> CreateFromJson(JsonPatchOperation operation);
    public virtual void Apply(TModel target);
    [CompilerGeneratedAttribute]
private void <Apply>b__3_0(Type type, object parent, string current);
}
[AttributeUsageAttribute("4")]
public class Microsoft.VisualStudio.Services.WebApi.Patch.SkipValidateTypeForRemovePatchOperation : Attribute {
}
public class Microsoft.VisualStudio.Services.WebApi.Patch.TestPatchOperation`1 : PatchOperation`1<TModel> {
    public TestPatchOperation`1(string path, object value);
    public static PatchOperation`1<TModel> CreateFromJson(JsonPatchOperation operation);
    public virtual void Apply(TModel target);
    [CompilerGeneratedAttribute]
private void <Apply>b__3_0(Type type, object parent, string current);
}
[ExceptionMappingAttribute("0.0", "3.0", "TestPatchOperationFailedException", "Microsoft.VisualStudio.Services.WebApi.Patch.TestPatchOperationFailedException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.WebApi.Patch.TestPatchOperationFailedException : PatchOperationFailedException {
    public TestPatchOperationFailedException(string message);
    public TestPatchOperationFailedException(string message, Exception innerException);
    protected TestPatchOperationFailedException(SerializationInfo info, StreamingContext context);
}
internal static class Microsoft.VisualStudio.Services.WebApi.PatchResources : object {
    private static ResourceManager s_resMgr;
    public static ResourceManager Manager { get; }
    private static PatchResources();
    public static ResourceManager get_Manager();
    private static string Get(string resourceName);
    private static string Get(string resourceName, CultureInfo culture);
    public static int GetInt(string resourceName);
    public static int GetInt(string resourceName, CultureInfo culture);
    public static bool GetBool(string resourceName);
    public static bool GetBool(string resourceName, CultureInfo culture);
    private static string Format(string resourceName, Object[] args);
    private static string Format(string resourceName, CultureInfo culture, Object[] args);
    public static string CannotReplaceNonExistantValue(object arg0);
    public static string CannotReplaceNonExistantValue(object arg0, CultureInfo culture);
    public static string IndexOutOfRange(object arg0);
    public static string IndexOutOfRange(object arg0, CultureInfo culture);
    public static string InsertNotSupported(object arg0);
    public static string InsertNotSupported(object arg0, CultureInfo culture);
    public static string InvalidOperation();
    public static string InvalidOperation(CultureInfo culture);
    public static string InvalidValue(object arg0, object arg1);
    public static string InvalidValue(object arg0, object arg1, CultureInfo culture);
    public static string MoveCopyNotImplemented();
    public static string MoveCopyNotImplemented(CultureInfo culture);
    public static string NullOrEmptyOperations();
    public static string NullOrEmptyOperations(CultureInfo culture);
    public static string PathCannotBeNull();
    public static string PathCannotBeNull(CultureInfo culture);
    public static string PathInvalidEndValue();
    public static string PathInvalidEndValue(CultureInfo culture);
    public static string PathInvalidStartValue();
    public static string PathInvalidStartValue(CultureInfo culture);
    public static string TargetCannotBeNull();
    public static string TargetCannotBeNull(CultureInfo culture);
    public static string TestFailed(object arg0, object arg1, object arg2);
    public static string TestFailed(object arg0, object arg1, object arg2, CultureInfo culture);
    public static string TestNotImplementedForDictionary();
    public static string TestNotImplementedForDictionary(CultureInfo culture);
    public static string TestNotImplementedForList();
    public static string TestNotImplementedForList(CultureInfo culture);
    public static string UnableToEvaluatePath(object arg0);
    public static string UnableToEvaluatePath(object arg0, CultureInfo culture);
    public static string ValueCannotBeNull();
    public static string ValueCannotBeNull(CultureInfo culture);
    public static string ValueNotNull();
    public static string ValueNotNull(CultureInfo culture);
    public static string JsonPatchNull();
    public static string JsonPatchNull(CultureInfo culture);
    public static string InvalidFieldName(object arg0);
    public static string InvalidFieldName(object arg0, CultureInfo culture);
}
public class Microsoft.VisualStudio.Services.WebApi.PlanDetails : object {
    [CompilerGeneratedAttribute]
private int <PlanUsers>k__BackingField;
    public int PlanUsers { get; public set; }
    [CompilerGeneratedAttribute]
public int get_PlanUsers();
    [CompilerGeneratedAttribute]
public void set_PlanUsers(int value);
}
[DefaultMemberAttribute("Item")]
[CollectionDataContractAttribute]
[JsonDictionaryAttribute]
public class Microsoft.VisualStudio.Services.WebApi.PropertiesCollection : object {
    private Dictionary`2<string, object> m_innerDictionary;
    [CompilerGeneratedAttribute]
private bool <ValidateNewValues>k__BackingField;
    internal bool ValidateNewValues { get; internal set; }
    public int Count { get; }
    public object Item { get; public set; }
    public KeyCollection<string, object> Keys { get; }
    public ValueCollection<string, object> Values { get; }
    private bool System.Collections.ICollection.IsSynchronized { get; }
    private object System.Collections.ICollection.SyncRoot { get; }
    private bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.IsReadOnly { get; }
    private ICollection`1<string> System.Collections.Generic.IDictionary<System.String,System.Object>.Keys { get; }
    private ICollection`1<object> System.Collections.Generic.IDictionary<System.String,System.Object>.Values { get; }
    public PropertiesCollection(IDictionary`2<string, object> source);
    internal PropertiesCollection(IDictionary`2<string, object> source, bool validateExisting);
    [CompilerGeneratedAttribute]
internal bool get_ValidateNewValues();
    [CompilerGeneratedAttribute]
internal void set_ValidateNewValues(bool value);
    public sealed virtual int get_Count();
    public sealed virtual object get_Item(string key);
    public sealed virtual void set_Item(string key, object value);
    public KeyCollection<string, object> get_Keys();
    public ValueCollection<string, object> get_Values();
    public sealed virtual void Add(string key, object value);
    public sealed virtual void Clear();
    public sealed virtual bool ContainsKey(string key);
    public bool ContainsValue(object value);
    public sealed virtual bool Remove(string key);
    public T GetValue(string key, T defaultValue);
    public sealed virtual bool TryGetValue(string key, Object& value);
    public bool TryGetValue(string key, T& value);
    public virtual bool Equals(object otherObj);
    public virtual int GetHashCode();
    private sealed virtual override void System.Collections.ICollection.CopyTo(Array array, int index);
    private sealed virtual override bool System.Collections.ICollection.get_IsSynchronized();
    private sealed virtual override object System.Collections.ICollection.get_SyncRoot();
    private sealed virtual override void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Add(KeyValuePair`2<string, object> keyValuePair);
    private sealed virtual override bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Contains(KeyValuePair`2<string, object> keyValuePair);
    private sealed virtual override void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.CopyTo(KeyValuePair`2[] array, int index);
    private sealed virtual override bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.get_IsReadOnly();
    private sealed virtual override bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Remove(KeyValuePair`2<string, object> keyValuePair);
    private sealed virtual override ICollection`1<string> System.Collections.Generic.IDictionary<System.String,System.Object>.get_Keys();
    private sealed virtual override ICollection`1<object> System.Collections.Generic.IDictionary<System.String,System.Object>.get_Values();
    private sealed virtual override IEnumerator`1<KeyValuePair`2<string, object>> System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
[ExceptionMappingAttribute("0.0", "3.0", "PropertyCacheServiceNotAvailableException", "Microsoft.VisualStudio.Services.WebApi.PropertyCacheServiceNotAvailableException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.WebApi.PropertyCacheServiceNotAvailableException : VssServiceException {
    public PropertyCacheServiceNotAvailableException(string message);
    public PropertyCacheServiceNotAvailableException(string message, Exception innerException);
}
[ExceptionMappingAttribute("0.0", "3.0", "ProxyAuthenticationRequiredException", "Microsoft.VisualStudio.Services.WebApi.ProxyAuthenticationRequiredException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.WebApi.ProxyAuthenticationRequiredException : VssException {
    private static string HelpLinkUrl;
    public ProxyAuthenticationRequiredException(string message, Exception innerException);
    public ProxyAuthenticationRequiredException(string message);
}
[EditorBrowsableAttribute("1")]
public abstract class Microsoft.VisualStudio.Services.WebApi.PublicAccessJsonConverter : JsonConverter {
    [CompilerGeneratedAttribute]
private static Func`1<bool> <ShouldClearValueFunction>k__BackingField;
    public bool CanRead { get; }
    internal static Func`1<bool> ShouldClearValueFunction { get; internal set; }
    public abstract virtual object GetDefaultValue();
    public virtual bool get_CanRead();
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    [CompilerGeneratedAttribute]
internal static Func`1<bool> get_ShouldClearValueFunction();
    [CompilerGeneratedAttribute]
internal static void set_ShouldClearValueFunction(Func`1<bool> value);
}
[EditorBrowsableAttribute("1")]
public abstract class Microsoft.VisualStudio.Services.WebApi.PublicAccessJsonConverter`1 : PublicAccessJsonConverter {
    public virtual bool CanConvert(Type objectType);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.WebApi.PublicKey : object {
    [CompilerGeneratedAttribute]
private Byte[] <Exponent>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <Modulus>k__BackingField;
    [DataMemberAttribute]
public Byte[] Exponent { get; public set; }
    [DataMemberAttribute]
public Byte[] Modulus { get; public set; }
    public PublicKey(Byte[] exponent, Byte[] modulus);
    private PublicKey(PublicKey objectToBeCloned);
    [CompilerGeneratedAttribute]
public Byte[] get_Exponent();
    [CompilerGeneratedAttribute]
public void set_Exponent(Byte[] value);
    [CompilerGeneratedAttribute]
public Byte[] get_Modulus();
    [CompilerGeneratedAttribute]
public void set_Modulus(Byte[] value);
    public PublicKey Clone();
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.WebApi.Publisher : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <ServiceOwnerId>k__BackingField;
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public Guid ServiceOwnerId { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public Guid get_ServiceOwnerId();
    [CompilerGeneratedAttribute]
public void set_ServiceOwnerId(Guid value);
}
[AttributeUsageAttribute("4")]
public class Microsoft.VisualStudio.Services.WebApi.ReactiveClientToThrottlingAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReactToThrottlingHeaders>k__BackingField;
    public bool ReactToThrottlingHeaders { get; public set; }
    public ReactiveClientToThrottlingAttribute(bool reactToThrottlingHeaders);
    [CompilerGeneratedAttribute]
public bool get_ReactToThrottlingHeaders();
    [CompilerGeneratedAttribute]
public void set_ReactToThrottlingHeaders(bool value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.WebApi.ReferenceLink : object {
    [CompilerGeneratedAttribute]
private string <Href>k__BackingField;
    private ISecuredObject m_securedObject;
    [DataMemberAttribute]
public string Href { get; public set; }
    private Guid Microsoft.VisualStudio.Services.WebApi.ISecuredObject.NamespaceId { get; }
    private int Microsoft.VisualStudio.Services.WebApi.ISecuredObject.RequiredPermissions { get; }
    [EditorBrowsableAttribute("1")]
public ReferenceLink(ISecuredObject securedObject);
    [CompilerGeneratedAttribute]
public string get_Href();
    [CompilerGeneratedAttribute]
public void set_Href(string value);
    private sealed virtual override Guid Microsoft.VisualStudio.Services.WebApi.ISecuredObject.get_NamespaceId();
    private sealed virtual override int Microsoft.VisualStudio.Services.WebApi.ISecuredObject.get_RequiredPermissions();
    private sealed virtual override string Microsoft.VisualStudio.Services.WebApi.ISecuredObject.GetToken();
}
[XmlRootAttribute("ReferenceLinks")]
[JsonConverterAttribute("Microsoft.VisualStudio.Services.WebApi.ReferenceLinks/ReferenceLinksConverter")]
public class Microsoft.VisualStudio.Services.WebApi.ReferenceLinks : object {
    private IDictionary`2<string, object> referenceLinks;
    public IReadOnlyDictionary`2<string, object> Links { get; }
    [EditorBrowsableAttribute("1")]
public void AddLink(string name, string href, ISecuredObject securedObject);
    public void AddLink(string name, string href);
    public void AddLinkIfIsNotEmpty(string name, string href);
    private sealed virtual override object System.ICloneable.Clone();
    public ReferenceLinks Clone();
    public void CopyTo(ReferenceLinks target);
    public void CopyTo(ReferenceLinks target, ISecuredObject securedObject);
    private sealed virtual override XmlSchema System.Xml.Serialization.IXmlSerializable.GetSchema();
    private sealed virtual override void System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader reader);
    private sealed virtual override void System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter writer);
    public IReadOnlyDictionary`2<string, object> get_Links();
}
public class Microsoft.VisualStudio.Services.WebApi.RegionPrice : object {
    [CompilerGeneratedAttribute]
private string <Currency>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Enabled>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Price>k__BackingField;
    [JsonPropertyAttribute("currency")]
public string Currency { get; public set; }
    [JsonPropertyAttribute("enabled")]
public bool Enabled { get; public set; }
    [JsonPropertyAttribute("price")]
public long Price { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Currency();
    [CompilerGeneratedAttribute]
public void set_Currency(string value);
    [CompilerGeneratedAttribute]
public bool get_Enabled();
    [CompilerGeneratedAttribute]
public void set_Enabled(bool value);
    [CompilerGeneratedAttribute]
public long get_Price();
    [CompilerGeneratedAttribute]
public void set_Price(long value);
}
[AttributeUsageAttribute("1028")]
public class Microsoft.VisualStudio.Services.WebApi.ResourceAreaAttribute : Attribute {
    public Guid AreaId;
    public ResourceAreaAttribute(string areaId);
}
public class Microsoft.VisualStudio.Services.WebApi.ResourceContainerTypes : object {
    public static string Account;
    public static string Collection;
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.WebApi.ResourceRef : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    private ISecuredObject m_securedObject;
    [DataMemberAttribute]
public string Id { get; public set; }
    [DataMemberAttribute]
public string Url { get; public set; }
    private ISecuredObject SecuredObject { get; }
    private Guid Microsoft.VisualStudio.Services.WebApi.ISecuredObject.NamespaceId { get; }
    private int Microsoft.VisualStudio.Services.WebApi.ISecuredObject.RequiredPermissions { get; }
    public ResourceRef(ISecuredObject securedObject);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
    public void SetSecuredObject(ISecuredObject securedObject);
    private ISecuredObject get_SecuredObject();
    private sealed virtual override Guid Microsoft.VisualStudio.Services.WebApi.ISecuredObject.get_NamespaceId();
    private sealed virtual override int Microsoft.VisualStudio.Services.WebApi.ISecuredObject.get_RequiredPermissions();
    private sealed virtual override string Microsoft.VisualStudio.Services.WebApi.ISecuredObject.GetToken();
}
public enum Microsoft.VisualStudio.Services.WebApi.RESTApiRequestOperationType : Enum {
    public int value__;
    public static RESTApiRequestOperationType Preview;
    public static RESTApiRequestOperationType Production;
    public static RESTApiRequestOperationType Hide;
    public static RESTApiRequestOperationType Show;
    public static RESTApiRequestOperationType DeletePreview;
    public static RESTApiRequestOperationType DeleteProduction;
}
public enum Microsoft.VisualStudio.Services.WebApi.RESTApiRequestOperationType2 : Enum {
    public int value__;
    public static RESTApiRequestOperationType2 Preview;
    public static RESTApiRequestOperationType2 Production;
    public static RESTApiRequestOperationType2 Hide;
    public static RESTApiRequestOperationType2 Show;
    public static RESTApiRequestOperationType2 DeletePreview;
    public static RESTApiRequestOperationType2 DeleteProduction;
}
public enum Microsoft.VisualStudio.Services.WebApi.RestApiResponseStatus : Enum {
    public int value__;
    public static RestApiResponseStatus Completed;
    public static RestApiResponseStatus Failed;
    public static RestApiResponseStatus Inprogress;
    public static RestApiResponseStatus Skipped;
}
public class Microsoft.VisualStudio.Services.WebApi.RestApiResponseStatusModel : object {
    [CompilerGeneratedAttribute]
private string <OperationId>k__BackingField;
    [CompilerGeneratedAttribute]
private RestApiResponseStatus <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StatusMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private int <PercentageCompleted>k__BackingField;
    public string OperationId { get; public set; }
    public RestApiResponseStatus Status { get; public set; }
    public string StatusMessage { get; public set; }
    public int PercentageCompleted { get; public set; }
    [CompilerGeneratedAttribute]
public string get_OperationId();
    [CompilerGeneratedAttribute]
public void set_OperationId(string value);
    [CompilerGeneratedAttribute]
public RestApiResponseStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(RestApiResponseStatus value);
    [CompilerGeneratedAttribute]
public string get_StatusMessage();
    [CompilerGeneratedAttribute]
public void set_StatusMessage(string value);
    [CompilerGeneratedAttribute]
public int get_PercentageCompleted();
    [CompilerGeneratedAttribute]
public void set_PercentageCompleted(int value);
}
public class Microsoft.VisualStudio.Services.WebApi.RestApiResponseStatusModel2 : object {
    [CompilerGeneratedAttribute]
private string <OperationId>k__BackingField;
    [CompilerGeneratedAttribute]
private RestApiResponseStatus <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StatusMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private int <PercentageCompleted>k__BackingField;
    public string OperationId { get; public set; }
    public RestApiResponseStatus Status { get; public set; }
    public string StatusMessage { get; public set; }
    public int PercentageCompleted { get; public set; }
    [CompilerGeneratedAttribute]
public string get_OperationId();
    [CompilerGeneratedAttribute]
public void set_OperationId(string value);
    [CompilerGeneratedAttribute]
public RestApiResponseStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(RestApiResponseStatus value);
    [CompilerGeneratedAttribute]
public string get_StatusMessage();
    [CompilerGeneratedAttribute]
public void set_StatusMessage(string value);
    [CompilerGeneratedAttribute]
public int get_PercentageCompleted();
    [CompilerGeneratedAttribute]
public void set_PercentageCompleted(int value);
}
[EditorBrowsableAttribute("1")]
[FlagsAttribute]
public enum Microsoft.VisualStudio.Services.WebApi.RouteReplacementOptions : Enum {
    public int value__;
    public static RouteReplacementOptions None;
    public static RouteReplacementOptions EscapeUri;
    public static RouteReplacementOptions AppendUnusedAsQueryParams;
    public static RouteReplacementOptions RequireExplicitRouteParams;
    public static RouteReplacementOptions WildcardAsQueryParams;
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.WebApi.SecuredObject : BaseSecuredObject {
    public SecuredObject(Guid namespaceId, int requiredPermission, string token);
}
internal static class Microsoft.VisualStudio.Services.WebApi.SecurityResources : object {
    private static ResourceManager s_resMgr;
    public static ResourceManager Manager { get; }
    private static SecurityResources();
    public static ResourceManager get_Manager();
    private static string Get(string resourceName);
    private static string Get(string resourceName, CultureInfo culture);
    public static int GetInt(string resourceName);
    public static int GetInt(string resourceName, CultureInfo culture);
    public static bool GetBool(string resourceName);
    public static bool GetBool(string resourceName, CultureInfo culture);
    private static string Format(string resourceName, Object[] args);
    private static string Format(string resourceName, CultureInfo culture, Object[] args);
    public static string InvalidAclStoreException(object arg0, object arg1);
    public static string InvalidAclStoreException(object arg0, object arg1, CultureInfo culture);
    public static string InvalidPermissionsException(object arg0, object arg1);
    public static string InvalidPermissionsException(object arg0, object arg1, CultureInfo culture);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.WebApi.ServiceEvent : object {
    private object m_resource;
    [CompilerGeneratedAttribute]
private string <EventType>k__BackingField;
    [CompilerGeneratedAttribute]
private Publisher <Publisher>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResourceVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> <ResourceContainers>k__BackingField;
    [DataMemberAttribute]
public string EventType { get; public set; }
    [DataMemberAttribute]
public Publisher Publisher { get; public set; }
    [DataMemberAttribute]
public object Resource { get; public set; }
    [DataMemberAttribute]
public string ResourceVersion { get; public set; }
    [DataMemberAttribute]
public Dictionary`2<string, object> ResourceContainers { get; public set; }
    [CompilerGeneratedAttribute]
public string get_EventType();
    [CompilerGeneratedAttribute]
public void set_EventType(string value);
    [CompilerGeneratedAttribute]
public Publisher get_Publisher();
    [CompilerGeneratedAttribute]
public void set_Publisher(Publisher value);
    public object get_Resource();
    public void set_Resource(object value);
    [CompilerGeneratedAttribute]
public string get_ResourceVersion();
    [CompilerGeneratedAttribute]
public void set_ResourceVersion(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, object> get_ResourceContainers();
    [CompilerGeneratedAttribute]
public void set_ResourceContainers(Dictionary`2<string, object> value);
}
[AttributeUsageAttribute("4")]
public class Microsoft.VisualStudio.Services.WebApi.ServiceEventObjectAttribute : Attribute {
}
[GenerateAllConstantsAttribute("")]
public static class Microsoft.VisualStudio.Services.WebApi.ServiceInstanceTypes : object {
    public static string GDPRDeleteString;
    public static Guid GDPRDelete;
    public static string MPSString;
    public static Guid MPS;
    public static string SPSString;
    public static Guid SPS;
    public static string TFSString;
    public static Guid TFS;
    public static string TFSOnPremisesString;
    public static Guid TFSOnPremises;
    [ObsoleteAttribute]
public static string SpsExtensionString;
    [ObsoleteAttribute]
public static Guid SpsExtension;
    public static string SDKSampleString;
    public static Guid SDKSample;
    private static ServiceInstanceTypes();
}
[ExceptionMappingAttribute("0.0", "3.0", "ServiceOperationNotAvailableException", "Microsoft.VisualStudio.Services.WebApi.ServiceOperationNotAvailableException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.WebApi.ServiceOperationNotAvailableException : VssServiceException {
    public ServiceOperationNotAvailableException(string message);
    public ServiceOperationNotAvailableException(string message, Exception innerException);
}
[ExtensionAttribute]
public static class Microsoft.VisualStudio.Services.WebApi.ServicingOrchestrationExceptionExtensions : object {
    private static string c_dontRetryServicingOrchestrationJobMarker;
    private static string c_blockedServicingOrchestrationJobMarker;
    private static string c_userErrorServicingOrchestrationJobMarker;
    [ExtensionAttribute]
public static void MarkAsFatalServicingOrchestrationException(Exception ex);
    [ExtensionAttribute]
public static T AsFatalServicingOrchestrationException(T ex);
    [ExtensionAttribute]
public static bool IsFatalServicingOrchestrationException(Exception ex);
    [ExtensionAttribute]
public static void MarkAsBlockedServicingOrchestrationException(Exception ex);
    [ExtensionAttribute]
public static T AsBlockedServicingOrchestrationException(T ex);
    [ExtensionAttribute]
public static bool IsBlockedServicingOrchestrationException(Exception ex);
    [ExtensionAttribute]
public static void MarkAsUserErrorServicingOrchestrationException(Exception ex, string errorMessage);
    [ExtensionAttribute]
public static T AsUserErrorServicingOrchestrationException(T ex, string errorMessage);
    [ExtensionAttribute]
public static bool IsUserErrorServicingOrchestrationException(Exception ex);
    [ExtensionAttribute]
public static string GetUserErrorServicingOrchestrationExceptionMessage(Exception ex);
    [ExtensionAttribute]
public static bool CheckServicingOrchestrationExceptionForError(Exception ex, string error);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.WebApi.SignedUrl : object {
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <SignatureExpires>k__BackingField;
    [DataMemberAttribute]
public string Url { get; public set; }
    [DataMemberAttribute]
public DateTime SignatureExpires { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
    [CompilerGeneratedAttribute]
public DateTime get_SignatureExpires();
    [CompilerGeneratedAttribute]
public void set_SignatureExpires(DateTime value);
}
public class Microsoft.VisualStudio.Services.WebApi.SourceContainsExportedDataException : DataImportException {
    public SourceContainsExportedDataException(string message);
    public SourceContainsExportedDataException(string message, Exception innerException);
    protected SourceContainsExportedDataException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.WebApi.SourceIsMissingSnapshotTablesException : DataImportException {
    public SourceIsMissingSnapshotTablesException(string message);
    public SourceIsMissingSnapshotTablesException(string message, Exception innerException);
    protected SourceIsMissingSnapshotTablesException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.WebApi.SourceIsNotADetachedDatabaseException : DataImportException {
    public SourceIsNotADetachedDatabaseException(Exception innerException);
    public SourceIsNotADetachedDatabaseException(string message);
    public SourceIsNotADetachedDatabaseException(string message, Exception innerException);
    protected SourceIsNotADetachedDatabaseException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.WebApi.SourceIsTFSConfigurationDatabaseException : DataImportException {
    public SourceIsTFSConfigurationDatabaseException(string message);
    public SourceIsTFSConfigurationDatabaseException(string message, Exception innerException);
    protected SourceIsTFSConfigurationDatabaseException(SerializationInfo info, StreamingContext context);
}
public class Microsoft.VisualStudio.Services.WebApi.SqlPackageVersionNotSupportedException : DataImportException {
    public SqlPackageVersionNotSupportedException(string message);
    public SqlPackageVersionNotSupportedException(string message, Exception innerException);
    protected SqlPackageVersionNotSupportedException(SerializationInfo info, StreamingContext context);
}
[ExtensionAttribute]
[EditorBrowsableAttribute("1")]
public static class Microsoft.VisualStudio.Services.WebApi.TaskExtensions : object {
    [ExtensionAttribute]
[BlockCaller]
public static void SyncResult(Task task);
    [ExtensionAttribute]
[BlockCaller]
public static T SyncResult(Task`1<T> task);
    [ExtensionAttribute]
[BlockCaller]
public static void SyncResultConfigured(Task task);
    [ExtensionAttribute]
[BlockCaller]
public static T SyncResultConfigured(Task`1<T> task);
    [ExtensionAttribute]
[BlockCaller]
public static HttpResponseMessage SyncResult(Task`1<HttpResponseMessage> task);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.WebApi.TeamMember : object {
    [CompilerGeneratedAttribute]
private bool <IsTeamAdmin>k__BackingField;
    [CompilerGeneratedAttribute]
private IdentityRef <Identity>k__BackingField;
    [DataMemberAttribute]
public bool IsTeamAdmin { get; public set; }
    [DataMemberAttribute]
public IdentityRef Identity { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_IsTeamAdmin();
    [CompilerGeneratedAttribute]
public void set_IsTeamAdmin(bool value);
    [CompilerGeneratedAttribute]
public IdentityRef get_Identity();
    [CompilerGeneratedAttribute]
public void set_Identity(IdentityRef value);
}
[EditorBrowsableAttribute("1")]
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.WebApi.TraceFilter : object {
    [CompilerGeneratedAttribute]
private Guid <TraceId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Tracepoint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProcessName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserLogin>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Service>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Method>k__BackingField;
    [CompilerGeneratedAttribute]
private TraceLevel <Level>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Area>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Layer>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserAgent>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Uri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <ServiceHost>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Tags>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ExceptionType>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <TimeCreated>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <OwnerId>k__BackingField;
    [CompilerGeneratedAttribute]
private IdentityRef <Owner>k__BackingField;
    [DataMemberAttribute]
public Guid TraceId { get; public set; }
    [DataMemberAttribute]
public int Tracepoint { get; public set; }
    [DataMemberAttribute]
public string ProcessName { get; public set; }
    [DataMemberAttribute]
public string UserLogin { get; public set; }
    [DataMemberAttribute]
public string Service { get; public set; }
    [DataMemberAttribute]
public string Method { get; public set; }
    [DataMemberAttribute]
public TraceLevel Level { get; public set; }
    [DataMemberAttribute]
public string Area { get; public set; }
    [DataMemberAttribute]
public string Layer { get; public set; }
    [DataMemberAttribute]
public string UserAgent { get; public set; }
    [DataMemberAttribute]
public string Uri { get; public set; }
    [DataMemberAttribute]
public string Path { get; public set; }
    [DataMemberAttribute]
public Guid ServiceHost { get; public set; }
    public String[] Tags { get; public set; }
    [DataMemberAttribute]
public string ExceptionType { get; public set; }
    [DataMemberAttribute]
public DateTime TimeCreated { get; public set; }
    [DataMemberAttribute]
public bool IsEnabled { get; public set; }
    [DataMemberAttribute]
public Guid OwnerId { get; public set; }
    [DataMemberAttribute]
public IdentityRef Owner { get; public set; }
    [CompilerGeneratedAttribute]
public Guid get_TraceId();
    [CompilerGeneratedAttribute]
public void set_TraceId(Guid value);
    [CompilerGeneratedAttribute]
public int get_Tracepoint();
    [CompilerGeneratedAttribute]
public void set_Tracepoint(int value);
    [CompilerGeneratedAttribute]
public string get_ProcessName();
    [CompilerGeneratedAttribute]
public void set_ProcessName(string value);
    [CompilerGeneratedAttribute]
public string get_UserLogin();
    [CompilerGeneratedAttribute]
public void set_UserLogin(string value);
    [CompilerGeneratedAttribute]
public string get_Service();
    [CompilerGeneratedAttribute]
public void set_Service(string value);
    [CompilerGeneratedAttribute]
public string get_Method();
    [CompilerGeneratedAttribute]
public void set_Method(string value);
    [CompilerGeneratedAttribute]
public TraceLevel get_Level();
    [CompilerGeneratedAttribute]
public void set_Level(TraceLevel value);
    [CompilerGeneratedAttribute]
public string get_Area();
    [CompilerGeneratedAttribute]
public void set_Area(string value);
    [CompilerGeneratedAttribute]
public string get_Layer();
    [CompilerGeneratedAttribute]
public void set_Layer(string value);
    [CompilerGeneratedAttribute]
public string get_UserAgent();
    [CompilerGeneratedAttribute]
public void set_UserAgent(string value);
    [CompilerGeneratedAttribute]
public string get_Uri();
    [CompilerGeneratedAttribute]
public void set_Uri(string value);
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(string value);
    [CompilerGeneratedAttribute]
public Guid get_ServiceHost();
    [CompilerGeneratedAttribute]
public void set_ServiceHost(Guid value);
    [CompilerGeneratedAttribute]
public String[] get_Tags();
    [CompilerGeneratedAttribute]
public void set_Tags(String[] value);
    [CompilerGeneratedAttribute]
public string get_ExceptionType();
    [CompilerGeneratedAttribute]
public void set_ExceptionType(string value);
    [CompilerGeneratedAttribute]
public DateTime get_TimeCreated();
    [CompilerGeneratedAttribute]
public void set_TimeCreated(DateTime value);
    [CompilerGeneratedAttribute]
public bool get_IsEnabled();
    [CompilerGeneratedAttribute]
public void set_IsEnabled(bool value);
    [CompilerGeneratedAttribute]
public Guid get_OwnerId();
    [CompilerGeneratedAttribute]
public void set_OwnerId(Guid value);
    [CompilerGeneratedAttribute]
public IdentityRef get_Owner();
    [CompilerGeneratedAttribute]
public void set_Owner(IdentityRef value);
    public sealed virtual bool Equals(TraceFilter other);
}
public class Microsoft.VisualStudio.Services.WebApi.UnableToExtractDacpacInformationException : DataImportException {
    public UnableToExtractDacpacInformationException(Exception innerException);
    public UnableToExtractDacpacInformationException(string message);
    public UnableToExtractDacpacInformationException(string message, Exception innerException);
    protected UnableToExtractDacpacInformationException(SerializationInfo info, StreamingContext context);
}
internal class Microsoft.VisualStudio.Services.WebApi.Utilities.AsyncLock : object {
    private SemaphoreSlim m_semaphore;
    private Task`1<IDisposable> m_releaser;
    public Task`1<IDisposable> LockAsync(CancellationToken cancellationToken);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.VisualStudio.Services.WebApi.Utilities.Internal.ClientSkuNames : object {
    public static string Unknown;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.VisualStudio.Services.WebApi.Utilities.Internal.ClientSkuNumbers : object {
    public static int Unknown;
    public static int FutureOutOfRange;
    public static int Whidbey;
    public static int Orcas;
    public static int Dev10;
    public static int Dev11TeamExplorer;
    public static int Dev11Pro;
    public static int Dev11Premium;
    public static int Dev11Ultimate;
    public static int Dev11Other;
    public static int Dev11TeamExplorerEveryWhere;
    public static int Dev11CrossPlatformCommandline;
    public static int Dev11SdkForJava;
    public static int Dev12TeamExplorer;
    public static int Dev12Pro;
    public static int Dev12Premium;
    public static int Dev12Ultimate;
    public static int Dev12Other;
    public static int Dev12TeamExplorerEveryWhere;
    public static int Dev12CrossPlatformCommandline;
    public static int Dev12SdkForJava;
    public static int Dev14TeamExplorer;
    public static int Dev14Pro;
    public static int Dev14Premium;
    public static int Dev14Ultimate;
    public static int Dev14TeamExplorerEveryWhere;
    public static int Dev14CrossPlatformCommandline;
    public static int Dev14SdkForJava;
    public static int Dev14Enterprise;
    public static int Dev14Community;
    public static int Dev14Other;
    public static int Dev15Pro;
    public static int Dev15TeamExplorerEveryWhere;
    public static int Dev15CrossPlatformCommandline;
    public static int Dev15SdkForJava;
    public static int Dev15Enterprise;
    public static int Dev15Community;
    public static int Dev15TeamExplorer;
    public static int Dev15Sql;
    public static int Dev15IntShell;
    public static int Dev15Other;
    public static int Dev16Pro;
    public static int Dev16TeamExplorerEveryWhere;
    public static int Dev16CrossPlatformCommandline;
    public static int Dev16SdkForJava;
    public static int Dev16Enterprise;
    public static int Dev16Community;
    public static int Dev16TeamExplorer;
    public static int Dev16Sql;
    public static int Dev16IntShell;
    public static int Dev16Other;
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.VisualStudio.Services.WebApi.Utilities.Internal.UserAgentUtility : object {
    private static Lazy`1<List`1<ProductInfoHeaderValue>> s_defaultRestUserAgent;
    private static Lazy`1<string> s_defaultSoapUserAgent;
    private static Dictionary`2<string, Tuple`2<string, int>> s_dev16SkuToAgentStringMap;
    private static UserAgentUtility();
    public static List`1<ProductInfoHeaderValue> GetDefaultRestUserAgent();
    private static List`1<ProductInfoHeaderValue> ConstructDefaultRestUserAgent();
    public static string GetDefaultSoapUserAgent();
    private static string ConstructDefaultSoapUserAgent();
    private static Tuple`2<string, int> GetCurrentSkuInfo();
}
[ExceptionMappingAttribute("0.0", "3.0", "VssApiResourceDuplicateIdException", "Microsoft.VisualStudio.Services.WebApi.VssApiResourceDuplicateIdException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.WebApi.VssApiResourceDuplicateIdException : VssApiRouteRegistrationException {
    public VssApiResourceDuplicateIdException(Guid locationId);
}
[ExceptionMappingAttribute("0.0", "3.0", "VssApiResourceDuplicateRouteNameException", "Microsoft.VisualStudio.Services.WebApi.VssApiResourceDuplicateRouteNameException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.WebApi.VssApiResourceDuplicateRouteNameException : VssApiRouteRegistrationException {
    public VssApiResourceDuplicateRouteNameException(string routeName);
}
[ExceptionMappingAttribute("0.0", "3.0", "VssApiRouteRegistrationException", "Microsoft.VisualStudio.Services.WebApi.VssApiRouteRegistrationException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public abstract class Microsoft.VisualStudio.Services.WebApi.VssApiRouteRegistrationException : VssResourceVersionException {
    public VssApiRouteRegistrationException(string message);
}
public class Microsoft.VisualStudio.Services.WebApi.VssApiUnsafeCrossOriginRequestException : VssServiceException {
    public VssApiUnsafeCrossOriginRequestException(string origin);
}
internal class Microsoft.VisualStudio.Services.WebApi.VssCamelCasePropertyNamesContractResolver : CamelCasePropertyNamesContractResolver {
    protected virtual JsonDictionaryContract CreateDictionaryContract(Type type);
}
internal class Microsoft.VisualStudio.Services.WebApi.VssCamelCasePropertyNamesPreserveEnumsContractResolver : CamelCasePropertyNamesContractResolver {
    protected virtual JsonDictionaryContract CreateDictionaryContract(Type type);
}
[EditorBrowsableAttribute("1")]
public class Microsoft.VisualStudio.Services.WebApi.VssClientCertificateManager : object {
    private Dictionary`2<string, X509Certificate2> m_allClientCertificates;
    private X509Certificate2Collection m_clientCertificates;
    private bool m_refreshNeeded;
    private ReaderWriterLock m_rwLock;
    private object m_refreshLock;
    private static VssClientCertificateManager s_instance;
    private static object s_lock;
    public static string OID_EXTENDED_KEY_USAGE;
    public static string OID_PKIX_KP_CLIENT_AUTH;
    public static string OID_EXTENDED_KEY_USAGE_ANY;
    private static string s_certEnvironmentConfigVar;
    private static string s_clientCertsKeyName;
    private static string s_disableClientCertificatesName;
    private static string s_thumbprintsName;
    private static Char[] s_thumbprintDelimiters;
    public X509Certificate2Collection ClientCertificates { get; }
    public static VssClientCertificateManager Instance { get; }
    private static VssClientCertificateManager();
    public void Invalidate();
    public sealed virtual X509Certificate2Collection get_ClientCertificates();
    public static VssClientCertificateManager get_Instance();
    public static X509Certificate2Collection GetClientAuthCertificates(StoreLocation storeLocation);
    public static bool ReadEffectiveDisableClientCertificates();
    public static String[] ReadEffectiveSpecifiedCertificateThumbprints();
    public static String[] ReadSpecifiedCertificateThumbprints(StoreLocation machineOrUserLevel);
    public static void WriteDisableClientCertificates(bool disableClientCertificates, StoreLocation machineOrUserLevel);
    public static void WriteSpecifiedCertificateThumbprints(String[] thumbprints, StoreLocation machineOrUserLevel);
    private void RefreshIfNeeded();
    private void Refresh();
    private static String[] SplitDelimitedString(string delimitedString);
    private X509Certificate2 GetClientCertificateByThumbprint(string thumbprint);
    private static bool CertificateSupportsClientAuth(X509Certificate2 certificate);
    private static bool IsPrivateKeyAvailable(X509Certificate2 toCheck, Int32& hr);
    private static Nullable`1<bool> GetRegistryBooleanValue(string name, StoreLocation machineOrUserLevel);
    private static Nullable`1<bool> GetAppSettingsBooleanValue(string appSettingKey);
    private static Nullable`1<bool> ParseBoolString(string boolString);
    private static string GetStringValue(string name, StoreLocation machineOrUserLevel);
    private static void WriteStringValue(string name, string value, StoreLocation machineOrUserLevel);
}
[EditorBrowsableAttribute("1")]
internal static class Microsoft.VisualStudio.Services.WebApi.VssClientEnvironment : object {
    private static string InstallDirValueName;
    private static string PrivateAssembliesFolder;
    private static string s_registryKeyPath;
    internal static RegistryKey TryGetUserRegistryRoot();
    internal static RegistryKey TryGetUserSharedRegistryRoot();
    internal static RegistryKey TryGetApplicationRegistryRoot();
    internal static T GetSharedConnectedUserValue(string valueName, T defaultValue);
    public static RegistryKey OpenRootVisualStudioRegistryKey();
    public static RegistryKey OpenOrCreateSharedRootUserRegistryKey();
    public static RegistryKey OpenOrCreateRootUserRegistryKey();
    private static RegistryKey OpenOrCreateRegistryKey(string registryPath);
    public static string GetVisualStudioApplicationDataPath();
    public static string GetVisualStudioLocalApplicationDataPath();
    public static string GetTfsApplicationDataPath();
    public static string GetTfsLocalApplicationDataPath();
    public static string GetTfsSharedFilesPath();
    public static string GetVisualStudioInstallPath();
    public static string GetVisualStudioPrivateAssembliesPath();
}
[EditorBrowsableAttribute("1")]
public class Microsoft.VisualStudio.Services.WebApi.VssClientHttpRequestSettings : VssHttpRequestSettings {
    private static Lazy`1<VssClientHttpRequestSettings> s_defaultSettings;
    private static string c_settingsKey;
    private static string c_settingBypassProxyOnLocal;
    private static string c_settingEnableCompression;
    private static string c_settingsDefaultTimeout;
    private static string c_settingsAgentId;
    public static VssClientHttpRequestSettings Default { get; }
    private VssClientHttpRequestSettings(VssClientHttpRequestSettings settingsToBeCloned);
    private static VssClientHttpRequestSettings();
    public static VssClientHttpRequestSettings get_Default();
    public VssClientHttpRequestSettings Clone();
    internal static void ResetDefaultSettings();
    private static VssClientHttpRequestSettings ConstructDefaultSettings();
}
[AttributeUsageAttribute("1028")]
public class Microsoft.VisualStudio.Services.WebApi.VssClientServiceImplementationAttribute : Attribute {
    [CompilerGeneratedAttribute]
private Type <Type>k__BackingField;
    public Type Type { get; public set; }
    public string TypeName { get; }
    public VssClientServiceImplementationAttribute(Type type);
    [CompilerGeneratedAttribute]
public Type get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(Type value);
    public string get_TypeName();
}
internal static class Microsoft.VisualStudio.Services.WebApi.VssClientSettings : object {
    private static Nullable`1<int> s_clientCacheTimeToLive;
    private static bool s_checkedClientCacheTimeToLive;
    private static string c_cacheSettingsKey;
    private static string c_settingClientCacheTimeToLive;
    internal static string ClientCacheDirectory { get; }
    internal static string ClientSettingsDirectory { get; }
    internal static Nullable`1<int> ClientCacheTimeToLive { get; internal set; }
    internal static string get_ClientCacheDirectory();
    internal static string get_ClientSettingsDirectory();
    internal static Nullable`1<int> get_ClientCacheTimeToLive();
    internal static void set_ClientCacheTimeToLive(Nullable`1<int> value);
    internal static void GetConnectionOverrides(Nullable`1& connectModeOverride, String& userOverride);
}
public class Microsoft.VisualStudio.Services.WebApi.VssConnection : object {
    private bool m_isDisposed;
    private object m_disposeLock;
    private IVssServerDataProvider m_serverDataProvider;
    private VssConnection m_parentConnection;
    private object m_parentConnectionLock;
    private Uri m_baseUrl;
    private HttpMessageHandler m_pipeline;
    private VssHttpMessageHandler m_innerHandler;
    private IEnumerable`1<DelegatingHandler> m_delegatingHandlers;
    private bool m_allowUnattributedClients;
    private ConcurrentDictionary`2<ClientCacheKey, AsyncLock> m_loadingTypes;
    private ConcurrentDictionary`2<ClientCacheKey, object> m_cachedTypes;
    private ConcurrentDictionary`2<string, Type> m_extensibleServiceTypes;
    public Uri Uri { get; }
    public VssHttpMessageHandler InnerHandler { get; }
    public IEnumerable`1<DelegatingHandler> DelegatingHandlers { get; }
    public VssCredentials Credentials { get; }
    public VssClientHttpRequestSettings Settings { get; }
    public Guid ServerId { get; }
    public Guid ServerType { get; }
    public Identity AuthorizedIdentity { get; }
    [EditorBrowsableAttribute("1")]
public Identity AuthenticatedIdentity { get; }
    public bool HasAuthenticated { get; }
    public IVssConnection ParentConnection { get; }
    internal IVssServerDataProvider ServerDataProvider { get; internal set; }
    public VssConnection(Uri baseUrl, VssCredentials credentials);
    public VssConnection(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public VssConnection(Uri baseUrl, VssHttpMessageHandler innerHandler, IEnumerable`1<DelegatingHandler> delegatingHandlers);
    private VssConnection(Uri baseUrl, VssHttpMessageHandler innerHandler, IEnumerable`1<DelegatingHandler> delegatingHandlers, bool allowUnattributedClients);
    public sealed virtual Task ConnectAsync(CancellationToken cancellationToken);
    public sealed virtual Task ConnectAsync(VssConnectMode connectMode, CancellationToken cancellationToken);
    public sealed virtual Task ConnectAsync(VssConnectMode connectMode, IDictionary`2<string, string> parameters, CancellationToken cancellationToken);
    public sealed virtual void Disconnect();
    public sealed virtual T GetService();
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.WebApi.VssConnection/<GetServiceAsync>d__9`1")]
public sealed virtual Task`1<T> GetServiceAsync(CancellationToken cancellationToken);
    public sealed virtual T GetClient();
    public sealed virtual T GetClient(Guid serviceIdentifier);
    public sealed virtual T GetClient(CancellationToken cancellationToken);
    public sealed virtual T GetClient(Guid serviceIdentifier, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.WebApi.VssConnection/<GetClientAsync>d__14`1")]
public sealed virtual Task`1<T> GetClientAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.WebApi.VssConnection/<GetClientAsync>d__15`1")]
public sealed virtual Task`1<T> GetClientAsync(Guid serviceIdentifier, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.WebApi.VssConnection/<CreateAsync>d__16")]
public static Task`1<VssConnection> CreateAsync(string organizationName, VssCredentials credentials, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.WebApi.VssConnection/<CreateAsync>d__17")]
public static Task`1<VssConnection> CreateAsync(string organizationName, VssCredentials credentials, VssHttpRequestSettings settings, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.WebApi.VssConnection/<CreateAsync>d__18")]
public static Task`1<VssConnection> CreateAsync(string organizationName, VssHttpMessageHandler innerHandler, IEnumerable`1<DelegatingHandler> delegatingHandler, CancellationToken cancellationToken);
    public sealed virtual object GetClient(Type clientType);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.WebApi.VssConnection/<GetClientServiceImplAsync>d__20")]
private Task`1<object> GetClientServiceImplAsync(Type requestedType, Guid serviceIdentifier, Func`4<Type, Guid, CancellationToken, Task`1<object>> getInstanceAsync, CancellationToken cancellationToken);
    private Task`1<object> GetClientInstanceAsync(Type managedType, Guid serviceIdentifier, CancellationToken cancellationToken);
    [EditorBrowsableAttribute("1")]
internal Task`1<object> GetClientInstanceAsync(Type managedType, CancellationToken cancellationToken, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.WebApi.VssConnection/<GetClientInstanceAsync>d__23")]
private Task`1<object> GetClientInstanceAsync(Type managedType, Guid serviceIdentifier, CancellationToken cancellationToken, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    private Guid GetServiceIdentifier(Type requestedType);
    private Task`1<object> GetServiceInstanceAsync(Type managedType, Guid serviceIdentifier, CancellationToken cancellationToken);
    private Type GetExtensibleType(Type managedType);
    internal void RegisterExtensibleType(string typeName, Type type);
    internal void RegisterClientServiceInstance(Type type, object instance);
    public sealed virtual void Dispose();
    private void CheckForDisposed();
    public sealed virtual bool IsDisposed();
    public sealed virtual Uri get_Uri();
    public sealed virtual VssHttpMessageHandler get_InnerHandler();
    public sealed virtual IEnumerable`1<DelegatingHandler> get_DelegatingHandlers();
    public sealed virtual VssCredentials get_Credentials();
    public sealed virtual VssClientHttpRequestSettings get_Settings();
    public sealed virtual Guid get_ServerId();
    public sealed virtual Guid get_ServerType();
    public sealed virtual Identity get_AuthorizedIdentity();
    public sealed virtual Identity get_AuthenticatedIdentity();
    public sealed virtual bool get_HasAuthenticated();
    public sealed virtual IVssConnection get_ParentConnection();
    internal IVssServerDataProvider get_ServerDataProvider();
    internal void set_ServerDataProvider(IVssServerDataProvider value);
}
public static class Microsoft.VisualStudio.Services.WebApi.VssConnectionHelper : object {
    private static OrganizationHelper s_organizationHelper;
    private static VssConnectionHelper();
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.WebApi.VssConnectionHelper/<GetOrganizationUrlAsync>d__0")]
public static Task`1<Uri> GetOrganizationUrlAsync(string organizationName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.WebApi.VssConnectionHelper/<GetOrganizationUrlAsync>d__1")]
public static Task`1<Uri> GetOrganizationUrlAsync(Guid organizationId, CancellationToken cancellationToken);
}
public enum Microsoft.VisualStudio.Services.WebApi.VssConnectMode : Enum {
    public int value__;
    public static VssConnectMode Automatic;
    public static VssConnectMode Licensing;
    public static VssConnectMode Profile;
    public static VssConnectMode Secure;
    public static VssConnectMode User;
    public static VssConnectMode Resource;
}
public static class Microsoft.VisualStudio.Services.WebApi.VssEventId : object {
    public static int DefaultEventId;
    public static int ExceptionBaseEventId;
    private static int EtmBaseEventId;
    public static int VssIdentityServiceException;
    public static int AccountException;
    public static int FileContainerBaseEventId;
    private static VssEventId();
}
public abstract class Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase : object {
    private static int c_keepAliveTime;
    private static int c_keepAliveInterval;
    private bool m_isDisposed;
    private object m_disposeLock;
    [CompilerGeneratedAttribute]
private static TimeSpan <TestDelay>k__BackingField;
    private HttpClient m_client;
    private MediaTypeFormatter m_formatter;
    private VssResponseContext m_LastResponseContext;
    private ApiResourceLocationCollection m_resourceLocations;
    private ApiResourceVersion m_defaultApiVersion;
    private bool m_excludeUrlsHeader;
    private bool m_lightweightHeader;
    private Lazy`1<HttpMethod> s_patchMethod;
    private static string c_optionsRelativePath;
    private static string c_optionsRelativePathWithAllHostTypes;
    private static string c_jsonMediaType;
    public static string UserStatePropertyName;
    public Uri BaseAddress { get; }
    public VssResponseContext LastResponseContext { get; }
    protected HttpClient Client { get; }
    protected MediaTypeFormatter Formatter { get; }
    protected IDictionary`2<string, Type> TranslatedExceptions { get; }
    public bool ExcludeUrlsHeader { get; public set; }
    public bool LightweightHeader { get; public set; }
    [EditorBrowsableAttribute("1")]
public static TimeSpan TestDelay { get; public set; }
    internal bool HasResourceLocations { get; }
    protected VssHttpClientBase(Uri baseUrl, VssCredentials credentials);
    protected VssHttpClientBase(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    protected VssHttpClientBase(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    protected VssHttpClientBase(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    protected VssHttpClientBase(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    private static VssHttpClientBase();
    private void SetTokenStorageUrlIfNeeded(HttpMessageHandler handler);
    private static HttpMessageHandler BuildHandler(VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public sealed virtual Uri get_BaseAddress();
    public sealed virtual VssResponseContext get_LastResponseContext();
    protected HttpClient get_Client();
    protected MediaTypeFormatter get_Formatter();
    protected virtual IDictionary`2<string, Type> get_TranslatedExceptions();
    protected HttpResponseMessage Send(HttpRequestMessage message, object userState);
    protected Task`1<HttpResponseMessage> DeleteAsync(Guid locationId, object routeValues, ApiResourceVersion version, IEnumerable`1<KeyValuePair`2<string, string>> queryParameters, object userState, CancellationToken cancellationToken);
    protected Task`1<HttpResponseMessage> GetAsync(Guid locationId, object routeValues, ApiResourceVersion version, IEnumerable`1<KeyValuePair`2<string, string>> queryParameters, object userState, CancellationToken cancellationToken);
    protected Task`1<TResult> GetAsync(Guid locationId, object routeValues, ApiResourceVersion version, IEnumerable`1<KeyValuePair`2<string, string>> queryParameters, object userState, CancellationToken cancellationToken);
    protected Task`1<HttpResponseMessage> PatchAsync(T value, Guid locationId, object routeValues, ApiResourceVersion version, IEnumerable`1<KeyValuePair`2<string, string>> queryParameters, object userState, CancellationToken cancellationToken);
    protected Task`1<TResult> PatchAsync(T value, Guid locationId, object routeValues, ApiResourceVersion version, IEnumerable`1<KeyValuePair`2<string, string>> queryParameters, object userState, CancellationToken cancellationToken);
    protected Task`1<HttpResponseMessage> PostAsync(T value, Guid locationId, object routeValues, ApiResourceVersion version, IEnumerable`1<KeyValuePair`2<string, string>> queryParameters, object userState, CancellationToken cancellationToken);
    protected Task`1<TResult> PostAsync(T value, Guid locationId, object routeValues, ApiResourceVersion version, IEnumerable`1<KeyValuePair`2<string, string>> queryParameters, object userState, CancellationToken cancellationToken);
    protected Task`1<HttpResponseMessage> PutAsync(T value, Guid locationId, object routeValues, ApiResourceVersion version, IEnumerable`1<KeyValuePair`2<string, string>> queryParameters, object userState, CancellationToken cancellationToken);
    protected Task`1<TResult> PutAsync(T value, Guid locationId, object routeValues, ApiResourceVersion version, IEnumerable`1<KeyValuePair`2<string, string>> queryParameters, object userState, CancellationToken cancellationToken);
    protected Task`1<T> SendAsync(HttpMethod method, Guid locationId, object routeValues, ApiResourceVersion version, HttpContent content, IEnumerable`1<KeyValuePair`2<string, string>> queryParameters, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase/<SendAsync>d__28`1")]
protected Task`1<T> SendAsync(HttpMethod method, IEnumerable`1<KeyValuePair`2<string, string>> additionalHeaders, Guid locationId, object routeValues, ApiResourceVersion version, HttpContent content, IEnumerable`1<KeyValuePair`2<string, string>> queryParameters, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase/<SendAsync>d__29")]
protected Task`1<HttpResponseMessage> SendAsync(HttpMethod method, IEnumerable`1<KeyValuePair`2<string, string>> additionalHeaders, Guid locationId, object routeValues, ApiResourceVersion version, HttpContent content, IEnumerable`1<KeyValuePair`2<string, string>> queryParameters, object userState, CancellationToken cancellationToken);
    protected HttpResponseMessage Send(HttpMethod method, Guid locationId, object routeValues, ApiResourceVersion version, HttpContent content, IEnumerable`1<KeyValuePair`2<string, string>> queryParameters, object userState);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase/<SendAsync>d__31")]
protected Task`1<HttpResponseMessage> SendAsync(HttpMethod method, Guid locationId, object routeValues, ApiResourceVersion version, HttpContent content, IEnumerable`1<KeyValuePair`2<string, string>> queryParameters, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase/<SendAsync>d__32")]
protected Task`1<HttpResponseMessage> SendAsync(HttpMethod method, Guid locationId, HttpCompletionOption completionOption, object routeValues, ApiResourceVersion version, HttpContent content, IEnumerable`1<KeyValuePair`2<string, string>> queryParameters, object userState, CancellationToken cancellationToken);
    protected Task`1<HttpRequestMessage> CreateRequestMessageAsync(HttpMethod method, Guid locationId, object routeValues, ApiResourceVersion version, HttpContent content, IEnumerable`1<KeyValuePair`2<string, string>> queryParameters, object userState, CancellationToken cancellationToken, string mediaType);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase/<CreateRequestMessageAsync>d__34")]
protected virtual Task`1<HttpRequestMessage> CreateRequestMessageAsync(HttpMethod method, IEnumerable`1<KeyValuePair`2<string, string>> additionalHeaders, Guid locationId, object routeValues, ApiResourceVersion version, HttpContent content, IEnumerable`1<KeyValuePair`2<string, string>> queryParameters, object userState, CancellationToken cancellationToken, string mediaType);
    protected HttpRequestMessage CreateRequestMessage(HttpMethod method, ApiResourceLocation location, object routeValues, ApiResourceVersion version, HttpContent content, IEnumerable`1<KeyValuePair`2<string, string>> queryParameters, string mediaType);
    protected HttpRequestMessage CreateRequestMessage(HttpMethod method, IEnumerable`1<KeyValuePair`2<string, string>> additionalHeaders, ApiResourceLocation location, object routeValues, ApiResourceVersion version, HttpContent content, IEnumerable`1<KeyValuePair`2<string, string>> queryParameters, string mediaType);
    protected virtual MediaTypeWithQualityHeaderValue CreateAcceptHeader(ApiResourceVersion requestVersion, string mediaType);
    protected virtual void AddModelAsQueryParams(IList`1<KeyValuePair`2<string, string>> queryParams, string parameterName, object model);
    protected virtual void AddIEnumerableAsQueryParams(IList`1<KeyValuePair`2<string, string>> queryParams, string parameterName, object model);
    private void AddModelAsQueryParams(IList`1<KeyValuePair`2<string, string>> queryParams, string parameterName, JObject jObject);
    private void AddModelAsQueryParams(IList`1<KeyValuePair`2<string, string>> queryParams, string key, JProperty property);
    private void AddModelAsQueryParams(IList`1<KeyValuePair`2<string, string>> queryParams, string key, JArray array);
    private void AddModelAsQueryParams(IList`1<KeyValuePair`2<string, string>> queryParams, string key, JToken token);
    protected void AddDateTimeToQueryParams(IList`1<KeyValuePair`2<string, string>> queryParams, string name, DateTime localDateTime);
    protected void AddDateTimeToQueryParams(IList`1<KeyValuePair`2<string, string>> queryParams, string name, DateTimeOffset dateTimeOffset);
    protected void AddDateTimeToHeaders(IList`1<KeyValuePair`2<string, string>> queryParams, string name, DateTimeOffset dateTimeOffset);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase/<SendAsync>d__47`1")]
protected Task`1<T> SendAsync(HttpRequestMessage message, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase/<ReadContentAsAsync>d__48`1")]
protected Task`1<T> ReadContentAsAsync(HttpResponseMessage response, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase/<ReadJsonContentAsync>d__49`1")]
protected virtual Task`1<T> ReadJsonContentAsync(HttpResponseMessage response, CancellationToken cancellationToken);
    protected Task`1<HttpResponseMessage> SendAsync(HttpRequestMessage message, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase/<SendAsync>d__51")]
protected Task`1<HttpResponseMessage> SendAsync(HttpRequestMessage message, HttpCompletionOption completionOption, object userState, CancellationToken cancellationToken);
    [ObsoleteAttribute("Use VssHttpClientBase.HandleResponseAsync instead")]
protected virtual void HandleResponse(HttpResponseMessage response);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase/<HandleResponseAsync>d__53")]
protected virtual Task HandleResponseAsync(HttpResponseMessage response, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase/<UnwrapExceptionAsync>d__54")]
protected Task`1<Exception> UnwrapExceptionAsync(HttpContent content, CancellationToken cancellationToken);
    protected virtual bool ShouldThrowError(HttpResponseMessage response);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase/<NegotiateRequestVersionAsync>d__56")]
protected Task`1<ApiResourceVersion> NegotiateRequestVersionAsync(Guid locationId, ApiResourceVersion version, object userState, CancellationToken cancellationToken);
    protected ApiResourceVersion NegotiateRequestVersion(ApiResourceLocation location, ApiResourceVersion version);
    public sealed virtual void SetResourceLocations(ApiResourceLocationCollection resourceLocations);
    public sealed virtual bool get_ExcludeUrlsHeader();
    public sealed virtual void set_ExcludeUrlsHeader(bool value);
    public sealed virtual bool get_LightweightHeader();
    public sealed virtual void set_LightweightHeader(bool value);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase/<GetResourceLocationAsync>d__65")]
protected Task`1<ApiResourceLocation> GetResourceLocationAsync(Guid locationId, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase/<GetResourceLocationsAsync>d__66")]
internal virtual Task`1<IEnumerable`1<ApiResourceLocation>> GetResourceLocationsAsync(bool allHostTypes, object userState, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase/<EnsureResourceLocationsPopulated>d__67")]
internal Task EnsureResourceLocationsPopulated(object userState, CancellationToken cancellationToken);
    private bool HasContent(HttpResponseMessage response);
    private bool IsJsonResponse(HttpResponseMessage response);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase/<HandleInvalidContentType>d__70`1")]
private Task`1<T> HandleInvalidContentType(HttpResponseMessage response, bool isMismatchedContentType);
    private void SetServicePointOptions();
    public sealed virtual bool IsDisposed();
    [ObsoleteAttribute("This overload of Dispose has been deprecated.  Use the Dispose() method.")]
[EditorBrowsableAttribute("1")]
protected virtual void Dispose(bool disposing);
    public sealed virtual void Dispose();
    private void CheckForDisposed();
    protected IEnumerable`1<string> GetHeaderValue(HttpResponseMessage response, string headerName);
    [CompilerGeneratedAttribute]
public static TimeSpan get_TestDelay();
    [CompilerGeneratedAttribute]
public static void set_TestDelay(TimeSpan value);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.WebApi.VssHttpClientBase/<ProcessDelayAsync>d__85")]
private Task ProcessDelayAsync();
    internal bool get_HasResourceLocations();
}
public static class Microsoft.VisualStudio.Services.WebApi.VssHttpUriUtility : object {
    public static string ReplaceRouteValues(string routeTemplate, Dictionary`2<string, object> routeValues, bool escapeUri, bool appendUnusedAsQueryParams, bool requireExplicitRouteParams);
    [EditorBrowsableAttribute("1")]
public static string ReplaceRouteValues(string routeTemplate, Dictionary`2<string, object> routeValues, RouteReplacementOptions routeReplacementOptions);
    public static Dictionary`2<string, object> ToRouteDictionary(object routeValues, string area, string resourceName);
    public static Uri ConcatUri(Uri baseUri, string relativeUri);
    public static Dictionary`2<string, object> ToRouteDictionary(object values);
    private static void AddRouteValueIfNotPresent(Dictionary`2<string, object> dictionary, string key, object value);
}
[ExceptionMappingAttribute("0.0", "3.0", "VssInvalidApiResourceVersionException", "Microsoft.VisualStudio.Services.WebApi.VssInvalidApiResourceVersionException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.WebApi.VssInvalidApiResourceVersionException : VssResourceVersionException {
    public VssInvalidApiResourceVersionException(string apiResourceVersionString);
}
[ExceptionMappingAttribute("0.0", "3.0", "VssInvalidPreviewVersionException", "Microsoft.VisualStudio.Services.WebApi.VssInvalidPreviewVersionException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.WebApi.VssInvalidPreviewVersionException : VssResourceVersionException {
    public VssInvalidPreviewVersionException(ApiResourceVersion requestedVersion);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.WebApi.VssJsonCollectionWrapper : VssJsonCollectionWrapperBase {
    [DataMemberAttribute]
public IEnumerable Value { get; private set; }
    public VssJsonCollectionWrapper(IEnumerable source);
    public IEnumerable get_Value();
    private void set_Value(IEnumerable value);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.WebApi.VssJsonCollectionWrapper`1 : VssJsonCollectionWrapperBase {
    [DataMemberAttribute]
public T Value { get; private set; }
    public VssJsonCollectionWrapper`1(IEnumerable source);
    public T get_Value();
    private void set_Value(T value);
}
[DataContractAttribute]
public abstract class Microsoft.VisualStudio.Services.WebApi.VssJsonCollectionWrapperBase : object {
    [CompilerGeneratedAttribute]
private int <Count>k__BackingField;
    private IEnumerable _value;
    [DataMemberAttribute]
public int Count { get; private set; }
    protected IEnumerable BaseValue { get; protected set; }
    private Guid Microsoft.VisualStudio.Services.WebApi.ISecuredObject.NamespaceId { get; }
    private int Microsoft.VisualStudio.Services.WebApi.ISecuredObject.RequiredPermissions { get; }
    public VssJsonCollectionWrapperBase(IEnumerable source);
    [CompilerGeneratedAttribute]
public int get_Count();
    [CompilerGeneratedAttribute]
private void set_Count(int value);
    protected IEnumerable get_BaseValue();
    protected void set_BaseValue(IEnumerable value);
    private sealed virtual override Guid Microsoft.VisualStudio.Services.WebApi.ISecuredObject.get_NamespaceId();
    private sealed virtual override int Microsoft.VisualStudio.Services.WebApi.ISecuredObject.get_RequiredPermissions();
    private sealed virtual override string Microsoft.VisualStudio.Services.WebApi.ISecuredObject.GetToken();
}
public abstract class Microsoft.VisualStudio.Services.WebApi.VssJsonCreationConverter`1 : VssSecureJsonConverter {
    public bool CanWrite { get; }
    protected abstract virtual T Create(Type objectType, JObject jsonObject);
    public virtual bool CanConvert(Type objectType);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual bool get_CanWrite();
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
}
public class Microsoft.VisualStudio.Services.WebApi.VssJsonMediaTypeFormatter : JsonMediaTypeFormatter {
    [CompilerGeneratedAttribute]
private HttpRequestMessage <Request>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnumsAsNumbers>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseMsDateFormat>k__BackingField;
    private bool m_bypassSafeArrayWrapping;
    protected HttpRequestMessage Request { get; private set; }
    public bool BypassSafeArrayWrapping { get; public set; }
    public bool EnumsAsNumbers { get; private set; }
    public bool UseMsDateFormat { get; private set; }
    public VssJsonMediaTypeFormatter(bool bypassSafeArrayWrapping);
    public VssJsonMediaTypeFormatter(bool bypassSafeArrayWrapping, bool enumsAsNumbers, bool useMsDateFormat);
    public VssJsonMediaTypeFormatter(HttpRequestMessage request, bool bypassSafeArrayWrapping);
    private void SetSerializerSettings(bool bypassSafeArrayWrapping, bool enumsAsNumbers, bool useMsDateFormat);
    protected virtual IContractResolver GetContractResolver(bool enumsAsNumbers);
    [CompilerGeneratedAttribute]
protected HttpRequestMessage get_Request();
    [CompilerGeneratedAttribute]
private void set_Request(HttpRequestMessage value);
    public bool get_BypassSafeArrayWrapping();
    public void set_BypassSafeArrayWrapping(bool value);
    [CompilerGeneratedAttribute]
public bool get_EnumsAsNumbers();
    [CompilerGeneratedAttribute]
private void set_EnumsAsNumbers(bool value);
    [CompilerGeneratedAttribute]
public bool get_UseMsDateFormat();
    [CompilerGeneratedAttribute]
private void set_UseMsDateFormat(bool value);
    public virtual MediaTypeFormatter GetPerRequestFormatterInstance(Type type, HttpRequestMessage request, MediaTypeHeaderValue mediaType);
    private string GetAcceptHeaderOptionValue(HttpRequestMessage request, string acceptOptionName);
    public virtual bool CanReadType(Type type);
    public virtual Task WriteToStreamAsync(Type type, object value, Stream writeStream, HttpContent content, TransportContext transportContext);
}
public static class Microsoft.VisualStudio.Services.WebApi.VssJsonPatchDocumentFactory : object {
    public static JsonPatchDocument ConstructJsonPatchDocument(Operation operationType, string path, string value);
    public static JsonPatchDocument ConstructJsonPatchDocument(Operation operationType, IDictionary`2<string, object> dict);
    public static JsonPatchDocument ConstructJsonPatchDocument(Operation operationType, IEnumerable`1<string> paths);
    private static string BuildPath(string path);
}
public class Microsoft.VisualStudio.Services.WebApi.VssJsonPatchMediaTypeFormatter : VssJsonMediaTypeFormatter {
    private MediaTypeHeaderValue JsonPatch;
    public virtual bool CanReadType(Type type);
    public virtual bool CanWriteType(Type type);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Services.WebApi.VssJsonPatchMediaTypeFormatter/<ReadFromStreamAsync>d__4")]
public virtual Task`1<object> ReadFromStreamAsync(Type type, Stream readStream, HttpContent content, IFormatterLogger formatterLogger);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<object> <>n__0(Type type, Stream readStream, HttpContent content, IFormatterLogger formatterLogger);
}
public static class Microsoft.VisualStudio.Services.WebApi.VssJsonSerializationConstants : object {
    public static string EnumsAsNumbersHeader;
    public static string MsDateFormatHeader;
    public static string NoArrayWrapHeader;
}
public class Microsoft.VisualStudio.Services.WebApi.VssOAuthWorkloadIdentityFederationCredential : VssOAuthClientCredential {
    private VssOAuthJwtBearerAssertion m_assertion;
    public VssOAuthWorkloadIdentityFederationCredential(string clientId, VssOAuthJwtBearerAssertion assertion);
    protected virtual void SetParameters(IDictionary`2<string, string> parameters);
}
[ExceptionMappingAttribute("0.0", "3.0", "VssRequestContentTypeNotSupportedException", "Microsoft.VisualStudio.Services.WebApi.VssRequestContentTypeNotSupportedException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.WebApi.VssRequestContentTypeNotSupportedException : VssServiceException {
    public VssRequestContentTypeNotSupportedException(string contentType, string httpMethod, IEnumerable`1<string> validContentTypes);
}
[ExtensionAttribute]
internal static class Microsoft.VisualStudio.Services.WebApi.VssRequestLoggingExtensions : object {
    private static string _requestFormat;
    private static string _responseFormat;
    private static string _unknown;
    private static string _apis;
    [ExtensionAttribute]
internal static string GetRequestString(HttpRequestMessage message);
    [ExtensionAttribute]
internal static string GetResponseString(HttpResponseMessage response, long milliseconds);
    private static void ExtractRequestStrings(HttpRequestMessage message, String& verb, String& resource, String& area);
    private static bool TryGetHeaderGuid(HttpHeaders headers, string key, Guid& value);
}
internal class Microsoft.VisualStudio.Services.WebApi.VssRequestTimerTrace : object {
    private Stopwatch _requestTimer;
    private Guid _activityId;
    internal void TraceRequest(HttpRequestMessage message);
    internal void TraceResponse(HttpResponseMessage response);
    internal static UInt32 EventActivityIdControl(int ControlCode, Guid& ActivityId);
}
[ExceptionMappingAttribute("0.0", "3.0", "VssResourceNotFoundException", "Microsoft.VisualStudio.Services.WebApi.VssResourceNotFoundException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.WebApi.VssResourceNotFoundException : VssServiceException {
    public VssResourceNotFoundException(Guid locationId);
    public VssResourceNotFoundException(Guid locationId, Uri serverBaseUri);
    public VssResourceNotFoundException(string message);
}
[ExceptionMappingAttribute("0.0", "3.0", "VssResourceVersionException", "Microsoft.VisualStudio.Services.WebApi.VssResourceVersionException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public abstract class Microsoft.VisualStudio.Services.WebApi.VssResourceVersionException : VssServiceException {
    public VssResourceVersionException(string message);
}
public class Microsoft.VisualStudio.Services.WebApi.VssResponseContext : object {
    [CompilerGeneratedAttribute]
private HttpStatusCode <HttpStatusCode>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <ActivityId>k__BackingField;
    [CompilerGeneratedAttribute]
private Exception <Exception>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, PerformanceTimingGroup> <Timings>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpResponseHeaders <Headers>k__BackingField;
    public HttpStatusCode HttpStatusCode { get; private set; }
    public Guid ActivityId { get; private set; }
    public Exception Exception { get; internal set; }
    public IDictionary`2<string, PerformanceTimingGroup> Timings { get; private set; }
    public HttpResponseHeaders Headers { get; private set; }
    internal VssResponseContext(HttpStatusCode statusCode, HttpResponseHeaders headers);
    public bool TryGetException(Exception& value);
    public bool TryGetErrorCode(String& value);
    [CompilerGeneratedAttribute]
public HttpStatusCode get_HttpStatusCode();
    [CompilerGeneratedAttribute]
private void set_HttpStatusCode(HttpStatusCode value);
    [CompilerGeneratedAttribute]
public Guid get_ActivityId();
    [CompilerGeneratedAttribute]
private void set_ActivityId(Guid value);
    [CompilerGeneratedAttribute]
public Exception get_Exception();
    [CompilerGeneratedAttribute]
internal void set_Exception(Exception value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, PerformanceTimingGroup> get_Timings();
    [CompilerGeneratedAttribute]
private void set_Timings(IDictionary`2<string, PerformanceTimingGroup> value);
    [CompilerGeneratedAttribute]
public HttpResponseHeaders get_Headers();
    [CompilerGeneratedAttribute]
private void set_Headers(HttpResponseHeaders value);
}
public abstract class Microsoft.VisualStudio.Services.WebApi.VssSecureCustomCreationConverter`1 : CustomCreationConverter`1<T> {
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    private void Validate(object value, JsonSerializer serializer);
}
public abstract class Microsoft.VisualStudio.Services.WebApi.VssSecureDateTimeConverterBase : DateTimeConverterBase {
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    private void Validate(object value, JsonSerializer serializer);
}
public abstract class Microsoft.VisualStudio.Services.WebApi.VssSecureJsonConverter : JsonConverter {
    public abstract virtual bool CanConvert(Type objectType);
    public abstract virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    private void Validate(object value, JsonSerializer serializer);
}
[EditorBrowsableAttribute("1")]
public static class Microsoft.VisualStudio.Services.WebApi.VssSecureJsonConverterHelper : object {
    [CompilerGeneratedAttribute]
private static Action`2<object, JsonSerializer> <Validate>k__BackingField;
    public static Action`2<object, JsonSerializer> Validate { get; public set; }
    [CompilerGeneratedAttribute]
public static Action`2<object, JsonSerializer> get_Validate();
    [CompilerGeneratedAttribute]
public static void set_Validate(Action`2<object, JsonSerializer> value);
}
[ExceptionMappingAttribute("0.0", "3.0", "VssServiceResponseException", "Microsoft.VisualStudio.Services.WebApi.VssServiceResponseException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.WebApi.VssServiceResponseException : VssServiceException {
    [CompilerGeneratedAttribute]
private HttpStatusCode <HttpStatusCode>k__BackingField;
    public HttpStatusCode HttpStatusCode { get; private set; }
    public VssServiceResponseException(HttpStatusCode code, string message, Exception innerException);
    protected VssServiceResponseException(SerializationInfo info, StreamingContext context);
    [SecurityCriticalAttribute]
public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
    [CompilerGeneratedAttribute]
public HttpStatusCode get_HttpStatusCode();
    [CompilerGeneratedAttribute]
private void set_HttpStatusCode(HttpStatusCode value);
}
public abstract class Microsoft.VisualStudio.Services.WebApi.VssSigningCredentials : object {
    [CompilerGeneratedAttribute]
private string <KeyId>k__BackingField;
    private static int c_minKeySize;
    private DateTime m_effectiveDate;
    public bool CanSignData { get; }
    public int KeySize { get; }
    public DateTime ValidFrom { get; }
    public DateTime ValidTo { get; }
    public string KeyId { get; }
    public JWTAlgorithm SignatureAlgorithm { get; }
    public abstract virtual bool get_CanSignData();
    public abstract virtual int get_KeySize();
    public virtual DateTime get_ValidFrom();
    public virtual DateTime get_ValidTo();
    [CompilerGeneratedAttribute]
public virtual string get_KeyId();
    public abstract virtual JWTAlgorithm get_SignatureAlgorithm();
    public virtual Byte[] SignData(Byte[] input);
    protected abstract virtual Byte[] GetSignature(Byte[] input);
    public abstract virtual bool VerifySignature(Byte[] input, Byte[] signature);
    public static VssSigningCredentials Create(X509Certificate2 certificate);
    public static VssSigningCredentials Create(Func`1<RSACryptoServiceProvider> factory);
    public static VssSigningCredentials Create(Byte[] key);
}
internal class Microsoft.VisualStudio.Services.WebApi.VssSoapMediaTypeFormatter : MediaTypeFormatter {
    [CompilerGeneratedAttribute]
private string <BodyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResultName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SoapAction>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SoapNamespace>k__BackingField;
    private string BodyName { get; private set; }
    private string ResultName { get; private set; }
    private string SoapAction { get; private set; }
    private string SoapNamespace { get; private set; }
    public VssSoapMediaTypeFormatter(string bodyName, string resultName, string soapAction, string soapNamespace);
    [CompilerGeneratedAttribute]
private string get_BodyName();
    [CompilerGeneratedAttribute]
private void set_BodyName(string value);
    [CompilerGeneratedAttribute]
private string get_ResultName();
    [CompilerGeneratedAttribute]
private void set_ResultName(string value);
    [CompilerGeneratedAttribute]
private string get_SoapAction();
    [CompilerGeneratedAttribute]
private void set_SoapAction(string value);
    [CompilerGeneratedAttribute]
private string get_SoapNamespace();
    [CompilerGeneratedAttribute]
private void set_SoapNamespace(string value);
    public virtual bool CanReadType(Type type);
    public virtual bool CanWriteType(Type type);
    public virtual Task`1<object> ReadFromStreamAsync(Type type, Stream readStream, HttpContent content, IFormatterLogger formatterLogger);
    public virtual Task WriteToStreamAsync(Type type, object value, Stream writeStream, HttpContent content, TransportContext transportContext);
}
[ExceptionMappingAttribute("0.0", "3.0", "VssVersionNotSpecifiedException", "Microsoft.VisualStudio.Services.WebApi.VssVersionNotSpecifiedException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.WebApi.VssVersionNotSpecifiedException : VssResourceVersionException {
    public VssVersionNotSpecifiedException(string httpMethod);
}
[ExceptionMappingAttribute("0.0", "3.0", "VssVersionNotSupportedException", "Microsoft.VisualStudio.Services.WebApi.VssVersionNotSupportedException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.WebApi.VssVersionNotSupportedException : VssResourceVersionException {
    public VssVersionNotSupportedException(ApiResourceLocation location, Version requestedVersion, Version minSupportedVersion, Uri serverBaseUri);
}
public class Microsoft.VisualStudio.Services.WebApi.VssVersionOutOfRangeException : VssResourceVersionException {
    public VssVersionOutOfRangeException(Version requestedVersion, Version maxSupportedVersion);
    public VssVersionOutOfRangeException(ApiResourceVersion requestedApiVersion, string routeMatchedExceptVersion);
    public VssVersionOutOfRangeException(ApiResourceVersion requestedApiVersion, IEnumerable`1<string> routesMatchedExceptVersion);
    public VssVersionOutOfRangeException(string message);
}
internal static class Microsoft.VisualStudio.Services.WebApi.WebApiResources : object {
    private static ResourceManager s_resMgr;
    public static ResourceManager Manager { get; }
    private static WebApiResources();
    public static ResourceManager get_Manager();
    private static string Get(string resourceName);
    private static string Get(string resourceName, CultureInfo culture);
    public static int GetInt(string resourceName);
    public static int GetInt(string resourceName, CultureInfo culture);
    public static bool GetBool(string resourceName);
    public static bool GetBool(string resourceName, CultureInfo culture);
    private static string Format(string resourceName, Object[] args);
    private static string Format(string resourceName, CultureInfo culture, Object[] args);
    public static string UnsupportedContentType(object arg0);
    public static string UnsupportedContentType(object arg0, CultureInfo culture);
    public static string DownloadCorrupted();
    public static string DownloadCorrupted(CultureInfo culture);
    public static string SerializingPhrase();
    public static string SerializingPhrase(CultureInfo culture);
    public static string DeserializationCorrupt();
    public static string DeserializationCorrupt(CultureInfo culture);
    public static string ClientResourceVersionNotSupported(object arg0, object arg1, object arg2, object arg3);
    public static string ClientResourceVersionNotSupported(object arg0, object arg1, object arg2, object arg3, CultureInfo culture);
    public static string ResourceNotFoundOnServerMessage(object arg0, object arg1);
    public static string ResourceNotFoundOnServerMessage(object arg0, object arg1, CultureInfo culture);
    public static string ResourceNotRegisteredMessage(object arg0);
    public static string ResourceNotRegisteredMessage(object arg0, CultureInfo culture);
    public static string ContainerIdMustBeGreaterThanZero();
    public static string ContainerIdMustBeGreaterThanZero(CultureInfo culture);
    public static string FullyQualifiedLocationParameter();
    public static string FullyQualifiedLocationParameter(CultureInfo culture);
    public static string RelativeLocationMappingErrorMessage();
    public static string RelativeLocationMappingErrorMessage(CultureInfo culture);
    public static string InvalidAccessMappingLocationServiceUrl();
    public static string InvalidAccessMappingLocationServiceUrl(CultureInfo culture);
    public static string ServiceDefinitionDoesNotExist(object arg0, object arg1);
    public static string ServiceDefinitionDoesNotExist(object arg0, object arg1, CultureInfo culture);
    public static string ServiceDefinitionWithNoLocations(object arg0);
    public static string ServiceDefinitionWithNoLocations(object arg0, CultureInfo culture);
    public static string JsonParseError(object arg0);
    public static string JsonParseError(object arg0, CultureInfo culture);
    public static string MissingRequiredParameterMessage(object arg0);
    public static string MissingRequiredParameterMessage(object arg0, CultureInfo culture);
    public static string ProxyAuthenticationRequired();
    public static string ProxyAuthenticationRequired(CultureInfo culture);
    public static string InvalidApiVersionStringMessage(object arg0);
    public static string InvalidApiVersionStringMessage(object arg0, CultureInfo culture);
    public static string ApiResourceDuplicateIdMessage(object arg0);
    public static string ApiResourceDuplicateIdMessage(object arg0, CultureInfo culture);
    public static string ApiResourceDuplicateRouteNameMessage(object arg0);
    public static string ApiResourceDuplicateRouteNameMessage(object arg0, CultureInfo culture);
    public static string RequestContentTypeNotSupported(object arg0, object arg1, object arg2);
    public static string RequestContentTypeNotSupported(object arg0, object arg1, object arg2, CultureInfo culture);
    public static string InvalidReferenceLinkFormat();
    public static string InvalidReferenceLinkFormat(CultureInfo culture);
    public static string PreviewVersionNotSuppliedMessage(object arg0);
    public static string PreviewVersionNotSuppliedMessage(object arg0, CultureInfo culture);
    public static string VersionNotSuppliedMessage(object arg0);
    public static string VersionNotSuppliedMessage(object arg0, CultureInfo culture);
    public static string MustacheTemplateInvalidEndBlock(object arg0);
    public static string MustacheTemplateInvalidEndBlock(object arg0, CultureInfo culture);
    public static string MustacheTemplateMissingBlockHelper(object arg0, object arg1);
    public static string MustacheTemplateMissingBlockHelper(object arg0, object arg1, CultureInfo culture);
    public static string MustacheTemplateMissingHelper(object arg0, object arg1);
    public static string MustacheTemplateMissingHelper(object arg0, object arg1, CultureInfo culture);
    public static string MustacheTemplateNonMatchingEndBlock(object arg0, object arg1);
    public static string MustacheTemplateNonMatchingEndBlock(object arg0, object arg1, CultureInfo culture);
    public static string MustacheTemplateBraceCountMismatch(object arg0);
    public static string MustacheTemplateBraceCountMismatch(object arg0, CultureInfo culture);
    public static string MustacheTemplateInvalidEndBraces(object arg0, object arg1);
    public static string MustacheTemplateInvalidEndBraces(object arg0, object arg1, CultureInfo culture);
    public static string MustacheTemplateInvalidStartBraces(object arg0, object arg1, object arg2);
    public static string MustacheTemplateInvalidStartBraces(object arg0, object arg1, object arg2, CultureInfo culture);
    public static string MustacheTemplateInvalidEscapedStringLiteral(object arg0, object arg1);
    public static string MustacheTemplateInvalidEscapedStringLiteral(object arg0, object arg1, CultureInfo culture);
    public static string MustacheTemplateUnterminatedStringLiteral(object arg0, object arg1);
    public static string MustacheTemplateUnterminatedStringLiteral(object arg0, object arg1, CultureInfo culture);
    public static string MustacheTemplateInvalidNumericLiteral(object arg0, object arg1);
    public static string MustacheTemplateInvalidNumericLiteral(object arg0, object arg1, CultureInfo culture);
    public static string OperationNotFoundException(object arg0);
    public static string OperationNotFoundException(object arg0, CultureInfo culture);
    public static string OperationPluginNotFoundException(object arg0);
    public static string OperationPluginNotFoundException(object arg0, CultureInfo culture);
    public static string OperationPluginWithSameIdException(object arg0);
    public static string OperationPluginWithSameIdException(object arg0, CultureInfo culture);
    public static string OperationPluginNoPermission(object arg0, object arg1);
    public static string OperationPluginNoPermission(object arg0, object arg1, CultureInfo culture);
    public static string OperationUpdateException(object arg0);
    public static string OperationUpdateException(object arg0, CultureInfo culture);
    public static string CollectionDoesNotExistException(object arg0);
    public static string CollectionDoesNotExistException(object arg0, CultureInfo culture);
    public static string MissingCloseInlineMessage();
    public static string MissingCloseInlineMessage(CultureInfo culture);
    public static string MissingEndingBracesMessage(object arg0);
    public static string MissingEndingBracesMessage(object arg0, CultureInfo culture);
    public static string NestedInlinePartialsMessage();
    public static string NestedInlinePartialsMessage(CultureInfo culture);
    public static string GetServiceArgumentError(object arg0);
    public static string GetServiceArgumentError(object arg0, CultureInfo culture);
    public static string ExtensibleServiceTypeNotRegistered(object arg0);
    public static string ExtensibleServiceTypeNotRegistered(object arg0, CultureInfo culture);
    public static string ExtensibleServiceTypeNotValid(object arg0, object arg1);
    public static string ExtensibleServiceTypeNotValid(object arg0, object arg1, CultureInfo culture);
    public static string ServerDataProviderNotFound(object arg0);
    public static string ServerDataProviderNotFound(object arg0, CultureInfo culture);
    public static string ClientCertificateMissing(object arg0);
    public static string ClientCertificateMissing(object arg0, CultureInfo culture);
    public static string SmartCardMissing(object arg0);
    public static string SmartCardMissing(object arg0, CultureInfo culture);
    public static string ClientCertificateNoPermission(object arg0);
    public static string ClientCertificateNoPermission(object arg0, CultureInfo culture);
    public static string ClientCertificateErrorReadingStore(object arg0);
    public static string ClientCertificateErrorReadingStore(object arg0, CultureInfo culture);
    public static string CannotAuthenticateAsAnotherUser(object arg0, object arg1);
    public static string CannotAuthenticateAsAnotherUser(object arg0, object arg1, CultureInfo culture);
    public static string MustacheTemplateInvalidPartialReference(object arg0);
    public static string MustacheTemplateInvalidPartialReference(object arg0, CultureInfo culture);
    public static string CannotGetUnattributedClient(object arg0);
    public static string CannotGetUnattributedClient(object arg0, CultureInfo culture);
    public static string UnknownEntityType(object arg0);
    public static string UnknownEntityType(object arg0, CultureInfo culture);
    public static string GraphGroupMissingRequiredFields();
    public static string GraphGroupMissingRequiredFields(CultureInfo culture);
    public static string GraphUserMissingRequiredFields();
    public static string GraphUserMissingRequiredFields(CultureInfo culture);
    public static string GraphServicePrincipalMissingRequiredFields();
    public static string GraphServicePrincipalMissingRequiredFields(CultureInfo culture);
    public static string MustacheEvaluationResultLengthExceeded(object arg0);
    public static string MustacheEvaluationResultLengthExceeded(object arg0, CultureInfo culture);
    public static string MustacheTemplateInlinePartialsNotAllowed();
    public static string MustacheTemplateInlinePartialsNotAllowed(CultureInfo culture);
    public static string MustacheTemplateMaxDepthExceeded(object arg0);
    public static string MustacheTemplateMaxDepthExceeded(object arg0, CultureInfo culture);
    public static string UnexpectedTokenType();
    public static string UnexpectedTokenType(CultureInfo culture);
    public static string ApiVersionOutOfRange(object arg0, object arg1);
    public static string ApiVersionOutOfRange(object arg0, object arg1, CultureInfo culture);
    public static string ApiVersionOutOfRangeForRoute(object arg0, object arg1);
    public static string ApiVersionOutOfRangeForRoute(object arg0, object arg1, CultureInfo culture);
    public static string ApiVersionOutOfRangeForRoutes(object arg0, object arg1);
    public static string ApiVersionOutOfRangeForRoutes(object arg0, object arg1, CultureInfo culture);
    public static string UnsafeCrossOriginRequest(object arg0);
    public static string UnsafeCrossOriginRequest(object arg0, CultureInfo culture);
}
internal static class Microsoft.VisualStudio.Services.WebApi.WebPlatformResources : object {
    private static ResourceManager s_resMgr;
    public static ResourceManager Manager { get; }
    private static WebPlatformResources();
    public static ResourceManager get_Manager();
    private static string Get(string resourceName);
    private static string Get(string resourceName, CultureInfo culture);
    public static int GetInt(string resourceName);
    public static int GetInt(string resourceName, CultureInfo culture);
    public static bool GetBool(string resourceName);
    public static bool GetBool(string resourceName, CultureInfo culture);
    private static string Format(string resourceName, Object[] args);
    private static string Format(string resourceName, CultureInfo culture, Object[] args);
    public static string AppSessionTokenException(object arg0);
    public static string AppSessionTokenException(object arg0, CultureInfo culture);
    public static string SessionTokenException(object arg0);
    public static string SessionTokenException(object arg0, CultureInfo culture);
}
public class Microsoft.VisualStudio.Services.WebApi.WITNonRecoverableImportException : DataImportException {
    public WITNonRecoverableImportException(string message);
    public WITNonRecoverableImportException(string message, Exception innerException);
    protected WITNonRecoverableImportException(SerializationInfo info, StreamingContext context);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.WebApi.WrappedException : object {
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> <CustomProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private WrappedException <InnerException>k__BackingField;
    [CompilerGeneratedAttribute]
private Exception <UnwrappedInnerException>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HelpLink>k__BackingField;
    private Type m_type;
    [CompilerGeneratedAttribute]
private string <TypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TypeKey>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ErrorCode>k__BackingField;
    [CompilerGeneratedAttribute]
private int <EventId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StackTrace>k__BackingField;
    private static int c_backCompatVer;
    private static object syncObject;
    private static Byte[] s_currentAssemblyPublicKeyToken;
    private static Version s_currentAssemblyVersion;
    private static HashSet`1<Assembly> s_assembliesCheckedForExceptionMappings;
    private static Byte[] s_testCodePublicKeyToken;
    private static Dictionary`2<string, Tuple`2<Version, Type>> s_exceptionsWithAttributeMapping;
    private static IDictionary`2<string, Type> baseTranslatedExceptions;
    [DataMemberAttribute]
public Dictionary`2<string, object> CustomProperties { get; public set; }
    [DataMemberAttribute]
public WrappedException InnerException { get; public set; }
    public Exception UnwrappedInnerException { get; public set; }
    [DataMemberAttribute]
public string Message { get; public set; }
    [DataMemberAttribute]
public string HelpLink { get; public set; }
    public Type Type { get; public set; }
    [DataMemberAttribute]
public string TypeName { get; public set; }
    [DataMemberAttribute]
public string TypeKey { get; public set; }
    [DataMemberAttribute]
public int ErrorCode { get; public set; }
    [DataMemberAttribute]
public int EventId { get; public set; }
    [DataMemberAttribute]
public string StackTrace { get; public set; }
    private Guid Microsoft.VisualStudio.Services.WebApi.ISecuredObject.NamespaceId { get; }
    private int Microsoft.VisualStudio.Services.WebApi.ISecuredObject.RequiredPermissions { get; }
    public WrappedException(Exception exception, bool includeErrorDetail, Version restApiVersion);
    private static WrappedException();
    [CompilerGeneratedAttribute]
public Dictionary`2<string, object> get_CustomProperties();
    [CompilerGeneratedAttribute]
public void set_CustomProperties(Dictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public WrappedException get_InnerException();
    [CompilerGeneratedAttribute]
public void set_InnerException(WrappedException value);
    [CompilerGeneratedAttribute]
public Exception get_UnwrappedInnerException();
    [CompilerGeneratedAttribute]
public void set_UnwrappedInnerException(Exception value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_HelpLink();
    [CompilerGeneratedAttribute]
public void set_HelpLink(string value);
    public Type get_Type();
    public void set_Type(Type value);
    [CompilerGeneratedAttribute]
public string get_TypeName();
    [CompilerGeneratedAttribute]
public void set_TypeName(string value);
    [CompilerGeneratedAttribute]
public string get_TypeKey();
    [CompilerGeneratedAttribute]
public void set_TypeKey(string value);
    [CompilerGeneratedAttribute]
public int get_ErrorCode();
    [CompilerGeneratedAttribute]
public void set_ErrorCode(int value);
    [CompilerGeneratedAttribute]
public int get_EventId();
    [CompilerGeneratedAttribute]
public void set_EventId(int value);
    [CompilerGeneratedAttribute]
public string get_StackTrace();
    [CompilerGeneratedAttribute]
public void set_StackTrace(string value);
    public Exception Unwrap(IDictionary`2<string, Type> typeMapping);
    private Exception UnWrap(Exception innerException);
    private ConstructorInfo GetMatchingConstructor(Type[] parameterTypes);
    private static Type LoadType(string typeName);
    private static Assembly ResolveAssembly(AssemblyName asmName);
    private static Type LookupExceptionAttributeMapping(string typeName);
    private static void UpdateExceptionAttributeMappingCache();
    private static bool DoesAssemblyQualify(Assembly assembly);
    private void TryWrapCustomProperties(Exception exception);
    private void TryUnWrapCustomProperties(Exception exception);
    private IEnumerable`1<PropertyInfo> GetCustomPropertiesInfo();
    private sealed virtual override Guid Microsoft.VisualStudio.Services.WebApi.ISecuredObject.get_NamespaceId();
    private sealed virtual override int Microsoft.VisualStudio.Services.WebApi.ISecuredObject.get_RequiredPermissions();
    private sealed virtual override string Microsoft.VisualStudio.Services.WebApi.ISecuredObject.GetToken();
}
[AttributeUsageAttribute("28")]
public class Microsoft.VisualStudio.Services.WebApi.Xml.XmlSerializableDataContractAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <EnableCamelCaseNameCompat>k__BackingField;
    public bool EnableCamelCaseNameCompat { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_EnableCamelCaseNameCompat();
    [CompilerGeneratedAttribute]
public void set_EnableCamelCaseNameCompat(bool value);
}
[ExtensionAttribute]
public static class Microsoft.VisualStudio.Services.WebApi.Xml.XmlSerializableDataContractExtensions : object {
    private static ConcurrentDictionary`2<TypeInfo, SerializableProperties> SerializablePropertiesByType;
    private static ConcurrentDictionary`2<TypeInfo, string> NamespacesByType;
    private static ConcurrentDictionary`2<SerializerKey, XmlSerializer> Serializers;
    private static XmlSerializableDataContractExtensions();
    [ExtensionAttribute]
public static void ReadDataMemberXml(XmlReader reader, T destination);
    [ExtensionAttribute]
public static void WriteDataMemberXml(XmlWriter writer, object source);
    private static string GetNamespace(TypeInfo type);
    private static SerializableProperties GetSerializableProperties(TypeInfo type);
    private static XmlSerializer GetSerializer(string rootNamespace, string elementName, Type elementType);
    [ExtensionAttribute]
private static HashSet`1<TOut> ToHashSet(IEnumerable`1<TIn> source, Func`2<TIn, TOut> selector);
}
internal static class Microsoft.VisualStudio.Services.WebApi.ZeusWebApiResources : object {
    private static ResourceManager s_resMgr;
    public static ResourceManager Manager { get; }
    private static ZeusWebApiResources();
    public static ResourceManager get_Manager();
    private static string Get(string resourceName);
    private static string Get(string resourceName, CultureInfo culture);
    public static int GetInt(string resourceName);
    public static int GetInt(string resourceName, CultureInfo culture);
    public static bool GetBool(string resourceName);
    public static bool GetBool(string resourceName, CultureInfo culture);
    private static string Format(string resourceName, Object[] args);
    private static string Format(string resourceName, CultureInfo culture, Object[] args);
    public static string BlobCopyRequestNotFoundException(object arg0);
    public static string BlobCopyRequestNotFoundException(object arg0, CultureInfo culture);
    public static string DatabaseMigrationNotFoundException(object arg0);
    public static string DatabaseMigrationNotFoundException(object arg0, CultureInfo culture);
}
[ExceptionMappingAttribute("0.0", "3.0", "AppSessionTokenException", "Microsoft.VisualStudio.Services.WebPlatform.AppSessionTokenException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.WebPlatform.AppSessionTokenException : VssServiceException {
    public AppSessionTokenException(AppSessionTokenError error);
}
[GenerateAllConstantsAttribute("")]
public static class Microsoft.VisualStudio.Services.WebPlatform.AuthenticationResourceIds : object {
    public static string AreaId;
    public static string AuthenticationAreaName;
    public static Guid AuthenticationLocationId;
    public static string SessionTokenResource;
    private static AuthenticationResourceIds();
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.WebPlatform.ClientTraceEvent : object {
    [CompilerGeneratedAttribute]
private string <Area>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Feature>k__BackingField;
    [CompilerGeneratedAttribute]
private Level <Level>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Method>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Component>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ExceptionType>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> <Properties>k__BackingField;
    [DataMemberAttribute]
public string Area { get; public set; }
    [DataMemberAttribute]
public string Feature { get; public set; }
    [DataMemberAttribute]
public Level Level { get; public set; }
    [DataMemberAttribute]
public string Method { get; public set; }
    [DataMemberAttribute]
public string Component { get; public set; }
    [DataMemberAttribute]
public string Message { get; public set; }
    [DataMemberAttribute]
public string ExceptionType { get; public set; }
    [DataMemberAttribute]
public Dictionary`2<string, object> Properties { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Area();
    [CompilerGeneratedAttribute]
public void set_Area(string value);
    [CompilerGeneratedAttribute]
public string get_Feature();
    [CompilerGeneratedAttribute]
public void set_Feature(string value);
    [CompilerGeneratedAttribute]
public Level get_Level();
    [CompilerGeneratedAttribute]
public void set_Level(Level value);
    [CompilerGeneratedAttribute]
public string get_Method();
    [CompilerGeneratedAttribute]
public void set_Method(string value);
    [CompilerGeneratedAttribute]
public string get_Component();
    [CompilerGeneratedAttribute]
public void set_Component(string value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_ExceptionType();
    [CompilerGeneratedAttribute]
public void set_ExceptionType(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, object> get_Properties();
    [CompilerGeneratedAttribute]
public void set_Properties(Dictionary`2<string, object> value);
}
[GenerateAllConstantsAttribute("")]
public static class Microsoft.VisualStudio.Services.WebPlatform.ClientTraceResourceIds : object {
    public static string AreaId;
    public static string ClientTraceAreaName;
    public static Guid EventsLocationId;
    public static string ClientTraceEventsResource;
    private static ClientTraceResourceIds();
}
public static class Microsoft.VisualStudio.Services.WebPlatform.ContributionResourceIds : object {
    public static string AreaId;
    public static string AreaName;
    public static string HierarchyLocationIdString;
    public static Guid HierarchyLocationId;
    public static string HierarchyResource;
    public static string HierarchyQueryLocationIdString;
    public static Guid HierarchyQueryLocationId;
    public static string HierarchyQueryResource;
    private static ContributionResourceIds();
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.WebPlatform.CustomerIntelligenceEvent : object {
    [CompilerGeneratedAttribute]
private string <Area>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Feature>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> <Properties>k__BackingField;
    [DataMemberAttribute]
public string Area { get; public set; }
    [DataMemberAttribute]
public string Feature { get; public set; }
    [DataMemberAttribute]
public Dictionary`2<string, object> Properties { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Area();
    [CompilerGeneratedAttribute]
public void set_Area(string value);
    [CompilerGeneratedAttribute]
public string get_Feature();
    [CompilerGeneratedAttribute]
public void set_Feature(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, object> get_Properties();
    [CompilerGeneratedAttribute]
public void set_Properties(Dictionary`2<string, object> value);
}
[GenerateAllConstantsAttribute("")]
public static class Microsoft.VisualStudio.Services.WebPlatform.CustomerIntelligenceResourceIds : object {
    public static string AreaId;
    public static string CustomerIntelligenceAreaName;
    public static Guid EventsLocationId;
    private static CustomerIntelligenceResourceIds();
}
public enum Microsoft.VisualStudio.Services.WebPlatform.DelegatedAppTokenType : Enum {
    public int value__;
    public static DelegatedAppTokenType Session;
    public static DelegatedAppTokenType App;
}
public enum Microsoft.VisualStudio.Services.WebPlatform.Level : Enum {
    public int value__;
    public static Level Off;
    public static Level Error;
    public static Level Warning;
    public static Level Info;
    public static Level Verbose;
}
[ExceptionMappingAttribute("0.0", "3.0", "SessionTokenException", "Microsoft.VisualStudio.Services.WebPlatform.SessionTokenException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.WebPlatform.SessionTokenException : VssServiceException {
    public SessionTokenException(SessionTokenError error);
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.WebPlatform.WebSessionToken : object {
    [CompilerGeneratedAttribute]
private Nullable`1<Guid> <AppId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Token>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Force>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DelegatedAppTokenType> <TokenType>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <ValidTo>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NamedTokenId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PublisherName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ExtensionName>k__BackingField;
    [DataMemberAttribute]
public Nullable`1<Guid> AppId { get; public set; }
    [DataMemberAttribute]
public string Token { get; public set; }
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public bool Force { get; public set; }
    [DataMemberAttribute]
public Nullable`1<DelegatedAppTokenType> TokenType { get; public set; }
    [DataMemberAttribute]
public Nullable`1<DateTime> ValidTo { get; public set; }
    [DataMemberAttribute]
public string NamedTokenId { get; public set; }
    [DataMemberAttribute]
public string PublisherName { get; public set; }
    [DataMemberAttribute]
public string ExtensionName { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<Guid> get_AppId();
    [CompilerGeneratedAttribute]
public void set_AppId(Nullable`1<Guid> value);
    [CompilerGeneratedAttribute]
public string get_Token();
    [CompilerGeneratedAttribute]
public void set_Token(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public bool get_Force();
    [CompilerGeneratedAttribute]
public void set_Force(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<DelegatedAppTokenType> get_TokenType();
    [CompilerGeneratedAttribute]
public void set_TokenType(Nullable`1<DelegatedAppTokenType> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_ValidTo();
    [CompilerGeneratedAttribute]
public void set_ValidTo(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public string get_NamedTokenId();
    [CompilerGeneratedAttribute]
public void set_NamedTokenId(string value);
    [CompilerGeneratedAttribute]
public string get_PublisherName();
    [CompilerGeneratedAttribute]
public void set_PublisherName(string value);
    [CompilerGeneratedAttribute]
public string get_ExtensionName();
    [CompilerGeneratedAttribute]
public void set_ExtensionName(string value);
}
[ResourceAreaAttribute("{8907fe1c-346a-455b-9ab9-dde883687231}")]
public class Microsoft.VisualStudio.Services.Zeus.BlobCopyHttpClient : BlobCopyRequestHttpClientBase {
    public BlobCopyHttpClient(Uri baseUrl, VssCredentials credentials);
    public BlobCopyHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public BlobCopyHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public BlobCopyHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public BlobCopyHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
}
[GenerateAllConstantsAttribute("")]
public static class Microsoft.VisualStudio.Services.Zeus.BlobCopyLocationIds : object {
    public static string ResourceString;
    public static Guid ResourceId;
    public static string ResouceName;
    public static string AreaName;
    private static BlobCopyLocationIds();
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Zeus.BlobCopyRequest : object {
    [CompilerGeneratedAttribute]
private int <RequestId>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <JobId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SourceStorageAccount>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TargetStorageAccount>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Containers>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ContainersCopied>k__BackingField;
    [CompilerGeneratedAttribute]
private BlobCopyRequestStatus <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StatusMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <StartTime>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <QueuedTime>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <EndTime>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CopyOnlyGuids>k__BackingField;
    [DataMemberAttribute]
public int RequestId { get; public set; }
    [DataMemberAttribute]
public Guid JobId { get; public set; }
    [DataMemberAttribute]
public string SourceStorageAccount { get; public set; }
    [DataMemberAttribute]
public string TargetStorageAccount { get; public set; }
    [DataMemberAttribute]
public string Containers { get; public set; }
    [DataMemberAttribute]
public int ContainersCopied { get; public set; }
    [DataMemberAttribute]
public BlobCopyRequestStatus Status { get; public set; }
    [DataMemberAttribute]
public string StatusMessage { get; public set; }
    [DataMemberAttribute]
public Nullable`1<DateTime> StartTime { get; public set; }
    [DataMemberAttribute]
public Nullable`1<DateTime> QueuedTime { get; public set; }
    [DataMemberAttribute]
public Nullable`1<DateTime> EndTime { get; public set; }
    [DataMemberAttribute]
public bool CopyOnlyGuids { get; public set; }
    [CompilerGeneratedAttribute]
public int get_RequestId();
    [CompilerGeneratedAttribute]
public void set_RequestId(int value);
    [CompilerGeneratedAttribute]
public Guid get_JobId();
    [CompilerGeneratedAttribute]
public void set_JobId(Guid value);
    [CompilerGeneratedAttribute]
public string get_SourceStorageAccount();
    [CompilerGeneratedAttribute]
public void set_SourceStorageAccount(string value);
    [CompilerGeneratedAttribute]
public string get_TargetStorageAccount();
    [CompilerGeneratedAttribute]
public void set_TargetStorageAccount(string value);
    [CompilerGeneratedAttribute]
public string get_Containers();
    [CompilerGeneratedAttribute]
public void set_Containers(string value);
    [CompilerGeneratedAttribute]
public int get_ContainersCopied();
    [CompilerGeneratedAttribute]
public void set_ContainersCopied(int value);
    [CompilerGeneratedAttribute]
public BlobCopyRequestStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(BlobCopyRequestStatus value);
    [CompilerGeneratedAttribute]
public string get_StatusMessage();
    [CompilerGeneratedAttribute]
public void set_StatusMessage(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_StartTime();
    [CompilerGeneratedAttribute]
public void set_StartTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_QueuedTime();
    [CompilerGeneratedAttribute]
public void set_QueuedTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_EndTime();
    [CompilerGeneratedAttribute]
public void set_EndTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public bool get_CopyOnlyGuids();
    [CompilerGeneratedAttribute]
public void set_CopyOnlyGuids(bool value);
    public virtual string ToString();
}
[ResourceAreaAttribute("{8907fe1c-346a-455b-9ab9-dde883687231}")]
public abstract class Microsoft.VisualStudio.Services.Zeus.BlobCopyRequestHttpClientBase : VssHttpClientBase {
    public BlobCopyRequestHttpClientBase(Uri baseUrl, VssCredentials credentials);
    public BlobCopyRequestHttpClientBase(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public BlobCopyRequestHttpClientBase(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public BlobCopyRequestHttpClientBase(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public BlobCopyRequestHttpClientBase(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    public virtual Task`1<HttpResponseMessage> DeleteBlobCopyRequestAsync(int requestId, object userState, CancellationToken cancellationToken);
    public virtual Task`1<BlobCopyRequest> GetBlobCopyRequestAsync(int requestId, object userState, CancellationToken cancellationToken);
    public virtual Task`1<List`1<BlobCopyRequest>> GetBlobCopyRequestsAsync(object userState, CancellationToken cancellationToken);
    public virtual Task`1<BlobCopyRequest> QueueBlobCopyRequestAsync(BlobCopyRequest request, object userState, CancellationToken cancellationToken);
    public virtual Task`1<BlobCopyRequest> UpdateBlobCopyRequestAsync(BlobCopyRequest request, object userState, CancellationToken cancellationToken);
}
[ExceptionMappingAttribute("0.0", "3.0", "BlobCopyRequestNotFoundException", "Microsoft.VisualStudio.Services.Zeus.BlobCopyRequestNotFoundException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Zeus.BlobCopyRequestNotFoundException : VssServiceException {
    public BlobCopyRequestNotFoundException(int requestId);
    public BlobCopyRequestNotFoundException(string message, Exception innerException);
    protected BlobCopyRequestNotFoundException(SerializationInfo info, StreamingContext context);
}
public enum Microsoft.VisualStudio.Services.Zeus.BlobCopyRequestStatus : Enum {
    public int value__;
    public static BlobCopyRequestStatus Created;
    public static BlobCopyRequestStatus Running;
    public static BlobCopyRequestStatus Failed;
    public static BlobCopyRequestStatus Completed;
}
[DataContractAttribute]
public class Microsoft.VisualStudio.Services.Zeus.DatabaseMigration : object {
    [CompilerGeneratedAttribute]
private int <MigrationId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SqlInstance>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Password>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StorageAccount>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Container>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Databases>k__BackingField;
    [CompilerGeneratedAttribute]
private DatabaseMigrationType <MigrationType>k__BackingField;
    [CompilerGeneratedAttribute]
private int <DatabasesMigrated>k__BackingField;
    [CompilerGeneratedAttribute]
private DatabaseMigrationStatus <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <StartTime>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <QueuedTime>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <EndTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StatusMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <JobId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DatabasePrefix>k__BackingField;
    [DataMemberAttribute]
public int MigrationId { get; public set; }
    [DataMemberAttribute]
public string SqlInstance { get; public set; }
    [DataMemberAttribute]
public string UserId { get; public set; }
    [DataMemberAttribute]
public string Password { get; public set; }
    [DataMemberAttribute]
public string StorageAccount { get; public set; }
    [DataMemberAttribute]
public string Container { get; public set; }
    [DataMemberAttribute]
public string Databases { get; public set; }
    [DataMemberAttribute]
public DatabaseMigrationType MigrationType { get; public set; }
    [DataMemberAttribute]
public int DatabasesMigrated { get; public set; }
    [DataMemberAttribute]
public DatabaseMigrationStatus Status { get; public set; }
    [DataMemberAttribute]
public Nullable`1<DateTime> StartTime { get; public set; }
    [DataMemberAttribute]
public Nullable`1<DateTime> QueuedTime { get; public set; }
    [DataMemberAttribute]
public Nullable`1<DateTime> EndTime { get; public set; }
    [DataMemberAttribute]
public string StatusMessage { get; public set; }
    [DataMemberAttribute]
public Guid JobId { get; public set; }
    [DataMemberAttribute]
public string DatabasePrefix { get; public set; }
    [CompilerGeneratedAttribute]
public int get_MigrationId();
    [CompilerGeneratedAttribute]
public void set_MigrationId(int value);
    [CompilerGeneratedAttribute]
public string get_SqlInstance();
    [CompilerGeneratedAttribute]
public void set_SqlInstance(string value);
    [CompilerGeneratedAttribute]
public string get_UserId();
    [CompilerGeneratedAttribute]
public void set_UserId(string value);
    [CompilerGeneratedAttribute]
public string get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(string value);
    [CompilerGeneratedAttribute]
public string get_StorageAccount();
    [CompilerGeneratedAttribute]
public void set_StorageAccount(string value);
    [CompilerGeneratedAttribute]
public string get_Container();
    [CompilerGeneratedAttribute]
public void set_Container(string value);
    [CompilerGeneratedAttribute]
public string get_Databases();
    [CompilerGeneratedAttribute]
public void set_Databases(string value);
    [CompilerGeneratedAttribute]
public DatabaseMigrationType get_MigrationType();
    [CompilerGeneratedAttribute]
public void set_MigrationType(DatabaseMigrationType value);
    [CompilerGeneratedAttribute]
public int get_DatabasesMigrated();
    [CompilerGeneratedAttribute]
public void set_DatabasesMigrated(int value);
    [CompilerGeneratedAttribute]
public DatabaseMigrationStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(DatabaseMigrationStatus value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_StartTime();
    [CompilerGeneratedAttribute]
public void set_StartTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_QueuedTime();
    [CompilerGeneratedAttribute]
public void set_QueuedTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_EndTime();
    [CompilerGeneratedAttribute]
public void set_EndTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public string get_StatusMessage();
    [CompilerGeneratedAttribute]
public void set_StatusMessage(string value);
    [CompilerGeneratedAttribute]
public Guid get_JobId();
    [CompilerGeneratedAttribute]
public void set_JobId(Guid value);
    [CompilerGeneratedAttribute]
public string get_DatabasePrefix();
    [CompilerGeneratedAttribute]
public void set_DatabasePrefix(string value);
    public virtual string ToString();
}
[ResourceAreaAttribute("{D56223DF-8CCD-45C9-89B4-EDDF69240000}")]
public class Microsoft.VisualStudio.Services.Zeus.DatabaseMigrationHttpClient : DatabaseMigrationHttpClientBase {
    public DatabaseMigrationHttpClient(Uri baseUrl, VssCredentials credentials);
    public DatabaseMigrationHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public DatabaseMigrationHttpClient(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public DatabaseMigrationHttpClient(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public DatabaseMigrationHttpClient(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
}
[ResourceAreaAttribute("{D56223DF-8CCD-45C9-89B4-EDDF69240000}")]
public abstract class Microsoft.VisualStudio.Services.Zeus.DatabaseMigrationHttpClientBase : VssHttpClientBase {
    public DatabaseMigrationHttpClientBase(Uri baseUrl, VssCredentials credentials);
    public DatabaseMigrationHttpClientBase(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings);
    public DatabaseMigrationHttpClientBase(Uri baseUrl, VssCredentials credentials, DelegatingHandler[] handlers);
    public DatabaseMigrationHttpClientBase(Uri baseUrl, VssCredentials credentials, VssHttpRequestSettings settings, DelegatingHandler[] handlers);
    public DatabaseMigrationHttpClientBase(Uri baseUrl, HttpMessageHandler pipeline, bool disposeHandler);
    public virtual Task`1<HttpResponseMessage> DeleteDatabaseMigrationAsync(int migrationId, object userState, CancellationToken cancellationToken);
    public virtual Task`1<DatabaseMigration> GetDatabaseMigrationAsync(int migrationId, object userState, CancellationToken cancellationToken);
    public virtual Task`1<List`1<DatabaseMigration>> GetDatabaseMigrationsAsync(object userState, CancellationToken cancellationToken);
    public virtual Task`1<DatabaseMigration> QueueDatabaseMigrationAsync(DatabaseMigration migration, object userState, CancellationToken cancellationToken);
    public virtual Task`1<DatabaseMigration> UpdateDatabaseMigrationAsync(DatabaseMigration migration, object userState, CancellationToken cancellationToken);
}
[GenerateAllConstantsAttribute("")]
public static class Microsoft.VisualStudio.Services.Zeus.DatabaseMigrationLocationIds : object {
    public static string ResourceString;
    public static Guid ResourceId;
    public static string ResouceName;
    public static string AreaName;
    private static DatabaseMigrationLocationIds();
}
[ExceptionMappingAttribute("0.0", "3.0", "DatabaseMigrationNotFoundException", "Microsoft.VisualStudio.Services.Zeus.DatabaseMigrationNotFoundException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Zeus.DatabaseMigrationNotFoundException : VssServiceException {
    public DatabaseMigrationNotFoundException(int migrationId);
    public DatabaseMigrationNotFoundException(string message, Exception innerException);
    protected DatabaseMigrationNotFoundException(SerializationInfo info, StreamingContext context);
}
public enum Microsoft.VisualStudio.Services.Zeus.DatabaseMigrationStatus : Enum {
    public int value__;
    public static DatabaseMigrationStatus Created;
    public static DatabaseMigrationStatus Running;
    public static DatabaseMigrationStatus Failed;
    public static DatabaseMigrationStatus Completed;
}
public enum Microsoft.VisualStudio.Services.Zeus.DatabaseMigrationType : Enum {
    public int value__;
    public static DatabaseMigrationType Import;
    public static DatabaseMigrationType Export;
}
[ExceptionMappingAttribute("0.0", "3.0", "DuplicateBlobCopyRequestException", "Microsoft.VisualStudio.Services.Zeus.DuplicateBlobCopyRequestException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Zeus.DuplicateBlobCopyRequestException : VssServiceException {
    public DuplicateBlobCopyRequestException(int requestId);
    public DuplicateBlobCopyRequestException(string message, Exception innerException);
    protected DuplicateBlobCopyRequestException(SerializationInfo info, StreamingContext context);
}
[ExceptionMappingAttribute("0.0", "3.0", "DuplicateDatabaseMigrationException", "Microsoft.VisualStudio.Services.Zeus.DuplicateDatabaseMigrationException, Microsoft.VisualStudio.Services.WebApi, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
public class Microsoft.VisualStudio.Services.Zeus.DuplicateDatabaseMigrationException : VssServiceException {
    public DuplicateDatabaseMigrationException(int migrationId);
    public DuplicateDatabaseMigrationException(string message, Exception innerException);
    protected DuplicateDatabaseMigrationException(SerializationInfo info, StreamingContext context);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
