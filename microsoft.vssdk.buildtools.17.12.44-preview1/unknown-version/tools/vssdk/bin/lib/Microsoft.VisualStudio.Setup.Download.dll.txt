[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.VisualStudio.Setup.Download.AcquireTokenFacade : object {
    private static string VSDropAzureServiceAppIdUri;
    private IPublicClientApplication publicClientApplication;
    private IManagedIdentityApplication managedIdentityApplication;
    private IFetchService fetchService;
    private string IdentityUri { get; }
    public AcquireTokenFacade(IServiceProvider serviceProvider, IPublicClientApplication publicClientApp, IManagedIdentityApplication managedIdentityApplication);
    private string get_IdentityUri();
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Setup.Download.AcquireTokenFacade/<AcquireTokenSilentAsync>d__7")]
public sealed virtual Task`1<AuthenticationResult> AcquireTokenSilentAsync(IEnumerable`1<string> scopes, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Setup.Download.AcquireTokenFacade/<AcquireTokenByIntegratedWindowsAuthAsync>d__8")]
public sealed virtual Task`1<AuthenticationResult> AcquireTokenByIntegratedWindowsAuthAsync(IEnumerable`1<string> scopes, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Setup.Download.AcquireTokenFacade/<AcquireTokenInteractiveAsync>d__9")]
public sealed virtual Task`1<AuthenticationResult> AcquireTokenInteractiveAsync(IEnumerable`1<string> scopes, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Setup.Download.AcquireTokenFacade/<AcquireTokenForManagedIdentityFromIMDSEndpointAsync>d__10")]
public sealed virtual Task`1<AzureManagedIdentityAuthResponse> AcquireTokenForManagedIdentityFromIMDSEndpointAsync(IEnumerable`1<string> scopes, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Setup.Download.AcquireTokenFacade/<AcquireTokenForManagedIdentityAsync>d__11")]
public sealed virtual Task`1<AuthenticationResult> AcquireTokenForManagedIdentityAsync();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.VisualStudio.Setup.Download.Authentication.MSALIdentityLogger : object {
    private static string MSALLogLevelEnvironmentVar;
    private ILogger logger;
    private EventLogLevel minLogLevel;
    public MSALIdentityLogger(IEnvironment environment, ILogger logger);
    public sealed virtual bool IsEnabled(EventLogLevel eventLogLevel);
    public sealed virtual void Log(LogEntry entry);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.VisualStudio.Setup.Download.AuthenticationProvider : AuthenticationProviderBase {
    public AuthenticationProvider(IServiceProvider serviceProvider, IAcquireTokenFacade acquireTokenFacade, ITokenCacheRegistrant tokenCacheRegistrant);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Setup.Download.AuthenticationProvider/<AuthenticateImplAsync>d__1")]
protected virtual Task`1<AuthenticationToken> AuthenticateImplAsync(IEnumerable`1<string> scopes, CancellationToken cancellationToken, ITelemetryOperation telemetryOperation);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Microsoft.VisualStudio.Setup.Download.AuthenticationProviderBase : object {
    private static string LoginUserNameManagedIdentity;
    private Task cacheTask;
    [CompilerGeneratedAttribute]
private IAcquireTokenFacade <AcquireTokenFacade>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private ILogger <Logger>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private ITelemetry <Telemetry>k__BackingField;
    protected IAcquireTokenFacade AcquireTokenFacade { get; }
    [NullableAttribute("2")]
protected ILogger Logger { get; }
    [NullableAttribute("2")]
protected ITelemetry Telemetry { get; }
    public AuthenticationProviderBase(IServiceProvider serviceProvider, IAcquireTokenFacade acquireTokenFacade, ITokenCacheRegistrant tokenCacheRegistrant);
    [CompilerGeneratedAttribute]
protected IAcquireTokenFacade get_AcquireTokenFacade();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
protected ILogger get_Logger();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
protected ITelemetry get_Telemetry();
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Setup.Download.AuthenticationProviderBase/<AuthenticateAsync>d__12")]
public sealed virtual Task`1<AuthenticationToken> AuthenticateAsync(Uri uri, IEnumerable`1<string> scopes, CancellationToken cancellationToken);
    protected abstract virtual Task`1<AuthenticationToken> AuthenticateImplAsync(IEnumerable`1<string> scopes, CancellationToken cancellationToken, ITelemetryOperation telemetryOperation);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Setup.Download.AuthenticationProviderBase/<AcquireTokenFromManagedIdentityAsync>d__14")]
protected Task`1<AuthenticationToken> AcquireTokenFromManagedIdentityAsync(IEnumerable`1<string> scopes, CancellationToken cancellationToken, ITelemetryOperation telemetryOperation);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Setup.Download.AuthenticationProviderBase/<AcquireTokenSilentAsync>d__15")]
protected Task`1<AuthenticationToken> AcquireTokenSilentAsync(IEnumerable`1<string> scopes, CancellationToken cancellationToken, ITelemetryOperation telemetryOperation);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Setup.Download.AuthenticationProviderBase/<AcquireTokenByIntegratedWindowsAuthAsync>d__16")]
protected Task`1<AuthenticationToken> AcquireTokenByIntegratedWindowsAuthAsync(IEnumerable`1<string> scopes, CancellationToken cancellationToken, ITelemetryOperation telemetryOperation);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Setup.Download.AuthenticationProviderBase/<AcquireTokenInteractiveAsync>d__17")]
protected Task`1<AuthenticationToken> AcquireTokenInteractiveAsync(IEnumerable`1<string> scopes, CancellationToken cancellationToken, ITelemetryOperation telemetryOperation);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Microsoft.VisualStudio.Setup.Download.AuthenticationProviderFactory : object {
    public static IAuthenticationProvider Create(IServiceProvider serviceProvider, bool isSilentOrPassive, IntPtr handle);
    private static IAuthenticationProvider CreateProvider(IServiceProvider serviceProvider, bool isSilentOrPassive, IntPtr handle);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.VisualStudio.Setup.Download.AuthenticationSummary : object {
    [CompilerGeneratedAttribute]
private AuthenticationToken <Token>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorMessage>k__BackingField;
    public AuthenticationToken Token { get; }
    public string Message { get; }
    public string ErrorMessage { get; }
    public AuthenticationSummary(AuthenticationToken token, string message, string errorMessage);
    [CompilerGeneratedAttribute]
public AuthenticationToken get_Token();
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public string get_ErrorMessage();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.VisualStudio.Setup.Download.AuthenticationToken : object {
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <LoginUserName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BearerToken>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <ExpiresOn>k__BackingField;
    [NullableAttribute("2")]
public string LoginUserName { get; }
    public string BearerToken { get; }
    public DateTimeOffset ExpiresOn { get; }
    public AuthenticationToken(string bearerToken, DateTimeOffset expiresOn, string loginUserName);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_LoginUserName();
    [CompilerGeneratedAttribute]
public string get_BearerToken();
    [CompilerGeneratedAttribute]
public DateTimeOffset get_ExpiresOn();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
public class Microsoft.VisualStudio.Setup.Download.AzureManagedIdentityAuthResponse : object {
    [CompilerGeneratedAttribute]
private string <AccessToken>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RefreshToken>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ExpiresIn>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ExpiresOn>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NotBefore>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Resource>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TokenType>k__BackingField;
    [DataMemberAttribute]
public string AccessToken { get; public set; }
    [DataMemberAttribute]
public string RefreshToken { get; public set; }
    [DataMemberAttribute]
public string ExpiresIn { get; public set; }
    [DataMemberAttribute]
public string ExpiresOn { get; public set; }
    [DataMemberAttribute]
public string NotBefore { get; public set; }
    [DataMemberAttribute]
public string Resource { get; public set; }
    [DataMemberAttribute]
public string TokenType { get; public set; }
    [CompilerGeneratedAttribute]
public string get_AccessToken();
    [CompilerGeneratedAttribute]
public void set_AccessToken(string value);
    [CompilerGeneratedAttribute]
public string get_RefreshToken();
    [CompilerGeneratedAttribute]
public void set_RefreshToken(string value);
    [CompilerGeneratedAttribute]
public string get_ExpiresIn();
    [CompilerGeneratedAttribute]
public void set_ExpiresIn(string value);
    [CompilerGeneratedAttribute]
public string get_ExpiresOn();
    [CompilerGeneratedAttribute]
public void set_ExpiresOn(string value);
    [CompilerGeneratedAttribute]
public string get_NotBefore();
    [CompilerGeneratedAttribute]
public void set_NotBefore(string value);
    [CompilerGeneratedAttribute]
public string get_Resource();
    [CompilerGeneratedAttribute]
public void set_Resource(string value);
    [CompilerGeneratedAttribute]
public string get_TokenType();
    [CompilerGeneratedAttribute]
public void set_TokenType(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[CLSCompliantAttribute("False")]
internal class Microsoft.VisualStudio.Setup.Download.Bits._BG_FILE_INFO : ValueType {
    public string RemoteName;
    public string LocalName;
}
[CLSCompliantAttribute("False")]
internal class Microsoft.VisualStudio.Setup.Download.Bits._BG_FILE_PROGRESS : ValueType {
    public ulong BytesTotal;
    public ulong BytesTransferred;
    public int Completed;
}
[CLSCompliantAttribute("False")]
internal class Microsoft.VisualStudio.Setup.Download.Bits._BG_JOB_PROGRESS : ValueType {
    public ulong BytesTotal;
    public ulong BytesTransferred;
    public UInt32 FilesTotal;
    public UInt32 FilesTransferred;
}
[CLSCompliantAttribute("False")]
internal class Microsoft.VisualStudio.Setup.Download.Bits._BG_JOB_REPLY_PROGRESS : ValueType {
    public ulong BytesTotal;
    public ulong BytesTransferred;
}
[CLSCompliantAttribute("False")]
internal class Microsoft.VisualStudio.Setup.Download.Bits._BG_JOB_TIMES : ValueType {
    public _FILETIME CreationTime;
    public _FILETIME ModificationTime;
    public _FILETIME TransferCompletionTime;
}
[CLSCompliantAttribute("False")]
internal class Microsoft.VisualStudio.Setup.Download.Bits._FILETIME : ValueType {
    public UInt32 dwLowDateTime;
    public UInt32 dwHighDateTime;
}
[GuidAttribute("4991D34B-80A1-4291-83B6-3328366B9097")]
[ClassInterfaceAttribute("0")]
internal class Microsoft.VisualStudio.Setup.Download.Bits.BackgroundCopyManager : object {
}
[CLSCompliantAttribute("False")]
internal class Microsoft.VisualStudio.Setup.Download.Bits.BG_AUTH_CREDENTIALS : ValueType {
    public BG_AUTH_TARGET Target;
    public BG_AUTH_SCHEME Scheme;
    public BG_AUTH_CREDENTIALS_UNION Credentials;
}
internal class Microsoft.VisualStudio.Setup.Download.Bits.BG_AUTH_CREDENTIALS_UNION : ValueType {
    public BG_BASIC_CREDENTIALS Basic;
}
internal enum Microsoft.VisualStudio.Setup.Download.Bits.BG_AUTH_SCHEME : Enum {
    public int value__;
    public static BG_AUTH_SCHEME BG_AUTH_SCHEME_BASIC;
    public static BG_AUTH_SCHEME BG_AUTH_SCHEME_DIGEST;
    public static BG_AUTH_SCHEME BG_AUTH_SCHEME_NTLM;
    public static BG_AUTH_SCHEME BG_AUTH_SCHEME_NEGOTIATE;
    public static BG_AUTH_SCHEME BG_AUTH_SCHEME_PASSPORT;
}
internal enum Microsoft.VisualStudio.Setup.Download.Bits.BG_AUTH_TARGET : Enum {
    public int value__;
    public static BG_AUTH_TARGET BG_AUTH_TARGET_SERVER;
    public static BG_AUTH_TARGET BG_AUTH_TARGET_PROXY;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.VisualStudio.Setup.Download.Bits.BG_BASIC_CREDENTIALS : ValueType {
    public string UserName;
    public string Password;
}
internal enum Microsoft.VisualStudio.Setup.Download.Bits.BG_CERT_STORE_LOCATION : Enum {
    public int value__;
    public static BG_CERT_STORE_LOCATION BG_CERT_STORE_LOCATION_CURRENT_USER;
    public static BG_CERT_STORE_LOCATION BG_CERT_STORE_LOCATION_LOCAL_MACHINE;
    public static BG_CERT_STORE_LOCATION BG_CERT_STORE_LOCATION_CURRENT_SERVICE;
    public static BG_CERT_STORE_LOCATION BG_CERT_STORE_LOCATION_SERVICES;
    public static BG_CERT_STORE_LOCATION BG_CERT_STORE_LOCATION_USERS;
    public static BG_CERT_STORE_LOCATION BG_CERT_STORE_LOCATION_CURRENT_USER_GROUP_POLICY;
    public static BG_CERT_STORE_LOCATION BG_CERT_STORE_LOCATION_LOCAL_MACHINE_GROUP_POLICY;
    public static BG_CERT_STORE_LOCATION BG_CERT_STORE_LOCATION_LOCAL_MACHINE_ENTERPRISE;
}
internal enum Microsoft.VisualStudio.Setup.Download.Bits.BG_ERROR_CONTEXT : Enum {
    public int value__;
    public static BG_ERROR_CONTEXT BG_ERROR_CONTEXT_NONE;
    public static BG_ERROR_CONTEXT BG_ERROR_CONTEXT_UNKNOWN;
    public static BG_ERROR_CONTEXT BG_ERROR_CONTEXT_GENERAL_QUEUE_MANAGER;
    public static BG_ERROR_CONTEXT BG_ERROR_CONTEXT_QUEUE_MANAGER_NOTIFICATION;
    public static BG_ERROR_CONTEXT BG_ERROR_CONTEXT_LOCAL_FILE;
    public static BG_ERROR_CONTEXT BG_ERROR_CONTEXT_REMOTE_FILE;
    public static BG_ERROR_CONTEXT BG_ERROR_CONTEXT_GENERAL_TRANSPORT;
}
[CLSCompliantAttribute("False")]
internal enum Microsoft.VisualStudio.Setup.Download.Bits.BG_HTTP_SECURITY_FLAGS : Enum {
    public UInt32 value__;
    public static BG_HTTP_SECURITY_FLAGS BG_SSL_ENABLE_CRL_CHECK;
    public static BG_HTTP_SECURITY_FLAGS BG_SSL_IGNORE_CERT_CN_INVALID;
    public static BG_HTTP_SECURITY_FLAGS BG_SSL_IGNORE_CERT_DATE_INVALID;
    public static BG_HTTP_SECURITY_FLAGS BG_SSL_IGNORE_UNKNOWN_CA;
    public static BG_HTTP_SECURITY_FLAGS BG_SSL_IGNORE_CERT_WRONG_USAGE;
    public static BG_HTTP_SECURITY_FLAGS BG_HTTP_REDIRECT_POLICY_ALLOW_SILENT;
    public static BG_HTTP_SECURITY_FLAGS BG_HTTP_REDIRECT_POLICY_ALLOW_REPORT;
    public static BG_HTTP_SECURITY_FLAGS BG_HTTP_REDIRECT_POLICY_DISALLOW;
    public static BG_HTTP_SECURITY_FLAGS BG_HTTP_REDIRECT_POLICY_MASK;
    public static BG_HTTP_SECURITY_FLAGS BG_HTTP_REDIRECT_POLICY_ALLOW_HTTPS_TO_HTTP;
}
[FlagsAttribute]
[CLSCompliantAttribute("False")]
internal enum Microsoft.VisualStudio.Setup.Download.Bits.BG_JOB_NOTIFICATION_TYPE : Enum {
    public UInt32 value__;
    public static BG_JOB_NOTIFICATION_TYPE BG_NOTIFY_JOB_TRANSFERRED;
    public static BG_JOB_NOTIFICATION_TYPE BG_NOTIFY_JOB_ERROR;
    public static BG_JOB_NOTIFICATION_TYPE BG_NOTIFY_DISABLE;
    public static BG_JOB_NOTIFICATION_TYPE BG_NOTIFY_JOB_MODIFICATION;
}
internal enum Microsoft.VisualStudio.Setup.Download.Bits.BG_JOB_PRIORITY : Enum {
    public int value__;
    public static BG_JOB_PRIORITY BG_JOB_PRIORITY_FOREGROUND;
    public static BG_JOB_PRIORITY BG_JOB_PRIORITY_HIGH;
    public static BG_JOB_PRIORITY BG_JOB_PRIORITY_NORMAL;
    public static BG_JOB_PRIORITY BG_JOB_PRIORITY_LOW;
}
internal enum Microsoft.VisualStudio.Setup.Download.Bits.BG_JOB_PROXY_USAGE : Enum {
    public int value__;
    public static BG_JOB_PROXY_USAGE BG_JOB_PROXY_USAGE_PRECONFIG;
    public static BG_JOB_PROXY_USAGE BG_JOB_PROXY_USAGE_NO_PROXY;
    public static BG_JOB_PROXY_USAGE BG_JOB_PROXY_USAGE_OVERRIDE;
    public static BG_JOB_PROXY_USAGE BG_JOB_PROXY_USAGE_AUTODETECT;
}
internal enum Microsoft.VisualStudio.Setup.Download.Bits.BG_JOB_STATE : Enum {
    public int value__;
    public static BG_JOB_STATE BG_JOB_STATE_QUEUED;
    public static BG_JOB_STATE BG_JOB_STATE_CONNECTING;
    public static BG_JOB_STATE BG_JOB_STATE_TRANSFERRING;
    public static BG_JOB_STATE BG_JOB_STATE_SUSPENDED;
    public static BG_JOB_STATE BG_JOB_STATE_ERROR;
    public static BG_JOB_STATE BG_JOB_STATE_TRANSIENT_ERROR;
    public static BG_JOB_STATE BG_JOB_STATE_TRANSFERRED;
    public static BG_JOB_STATE BG_JOB_STATE_ACKNOWLEDGED;
    public static BG_JOB_STATE BG_JOB_STATE_CANCELLED;
    public static BG_JOB_STATE BG_JOB_STATE_UPDATE_AVAILABLE;
    public static BG_JOB_STATE BG_JOB_STATE_VALIDATION_SUCCESS;
    public static BG_JOB_STATE BG_JOB_STATE_VALIDATION_FAILED;
}
internal enum Microsoft.VisualStudio.Setup.Download.Bits.BG_JOB_TYPE : Enum {
    public int value__;
    public static BG_JOB_TYPE BG_JOB_TYPE_DOWNLOAD;
}
internal enum Microsoft.VisualStudio.Setup.Download.Bits.BITS_FILE_PROPERTY_ID : Enum {
    public int value__;
    public static BITS_FILE_PROPERTY_ID BITS_FILE_PROPERTY_ID_HTTP_RESPONSE_HEADERS;
}
internal class Microsoft.VisualStudio.Setup.Download.Bits.BITS_FILE_PROPERTY_VALUE : ValueType {
    public IntPtr String;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.VisualStudio.Setup.Download.Bits.BitsEngine : DownloadEngineBase {
    private Lazy`1<IBackgroundCopyManager> lazyBackgroundCopyManager;
    private IServiceProvider serviceProvider;
    private ILogger logger;
    public BitsEngine(IServiceProvider serviceProvider);
    protected virtual DownloadSummary DownloadCore(Uri uri, Stream outputStream, ProgressUpdateCallback progress, CancellationToken cancellationToken, DownloadContext downloadContext, ITelemetryOperation telemetryOperation);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[CLSCompliantAttribute("False")]
internal class Microsoft.VisualStudio.Setup.Download.Bits.BitsJob : DisposableObject {
    private static int BitsEngineNoProgressTimeout;
    private static int MaxResumeAttempts;
    private IServiceProvider serviceProvider;
    private string displayName;
    private ILogger log;
    private object lockObj;
    [NullableAttribute("2")]
private IBackgroundCopyJob nativeJob;
    [NullableAttribute("2")]
private Exception jobException;
    private _BG_JOB_PROGRESS progress;
    private BG_JOB_STATE state;
    private bool isJobComplete;
    private int resumeAttempts;
    [CompilerGeneratedAttribute]
private int <ErrorCode>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <LastModifiedDate>k__BackingField;
    public int ErrorCode { get; private set; }
    public Nullable`1<DateTimeOffset> LastModifiedDate { get; private set; }
    public BitsJob(IServiceProvider serviceProvider, string displayName, IBackgroundCopyJob job);
    public static BitsJob CreateJob(IServiceProvider serviceProvider, IBackgroundCopyManager backgroundCopyManager, Uri uri, string filePath, string cookie, Nullable`1<DateTimeOffset> ifModifiedSince, string authenticationToken);
    public sealed virtual void JobTransferred(IBackgroundCopyJob job);
    public sealed virtual void JobError(IBackgroundCopyJob job, IBackgroundCopyError error);
    public sealed virtual void JobModification(IBackgroundCopyJob job, UInt32 reserved);
    public void Cancel();
    [NullableContextAttribute("2")]
public void WaitForCompletion(ProgressUpdateCallback callback, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
public int get_ErrorCode();
    [CompilerGeneratedAttribute]
private void set_ErrorCode(int value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_LastModifiedDate();
    [CompilerGeneratedAttribute]
private void set_LastModifiedDate(Nullable`1<DateTimeOffset> value);
    protected virtual void Dispose(bool isDisposing);
    private void CompleteOrCancel();
    private void UpdateJobState();
    private void UpdateProgress();
    private void Resume();
    private bool IsProgressingState(BG_JOB_STATE state);
    private void Invoke(Action func, string displayName, bool throwOnFailure);
    private void InitJob(string remoteUrl, string filePath, string cookie, Nullable`1<DateTimeOffset> ifModifiedSince, string authenticationToken);
    private int GetErrorCode(IBackgroundCopyJob job);
    private Nullable`1<DateTimeOffset> GetLastModifiedDate(IDictionary`2<string, string> headers);
    [NullableContextAttribute("2")]
private IDictionary`2<string, string> GetResponseHeaders(IBackgroundCopyJob job);
    [CompilerGeneratedAttribute]
private void <Cancel>b__17_0();
    [CompilerGeneratedAttribute]
private void <CompleteOrCancel>b__28_0();
    [CompilerGeneratedAttribute]
private void <CompleteOrCancel>b__28_1();
    [CompilerGeneratedAttribute]
private void <UpdateProgress>b__30_0();
    [CompilerGeneratedAttribute]
private void <Resume>b__31_0();
}
[NullableContextAttribute("1")]
[GuidAttribute("97EA99C7-0186-4AD4-8DF9-C5B4E0ED6B22")]
[InterfaceTypeAttribute("1")]
[CLSCompliantAttribute("False")]
internal interface Microsoft.VisualStudio.Setup.Download.Bits.IBackgroundCopyCallback {
    public abstract virtual void JobTransferred(IBackgroundCopyJob pJob);
    public abstract virtual void JobError(IBackgroundCopyJob pJob, IBackgroundCopyError pError);
    public abstract virtual void JobModification(IBackgroundCopyJob pJob, UInt32 dwReserved);
}
[NullableContextAttribute("1")]
[GuidAttribute("19C613A0-FCB8-4F28-81AE-897C3D078F81")]
[InterfaceTypeAttribute("1")]
[CLSCompliantAttribute("False")]
internal interface Microsoft.VisualStudio.Setup.Download.Bits.IBackgroundCopyError {
    public abstract virtual void GetError(BG_ERROR_CONTEXT& pContext, Int32& pCode);
    public abstract virtual void GetFile(IBackgroundCopyFile& pVal);
    public abstract virtual void GetErrorDescription(UInt32 languageId, String& pErrorDescription);
    public abstract virtual void GetErrorContextDescription(UInt32 languageId, String& pContextDescription);
    public abstract virtual void GetProtocol(String& pProtocol);
}
[NullableContextAttribute("1")]
[GuidAttribute("01B7BD23-FB88-4A77-8490-5891D3E4653A")]
[InterfaceTypeAttribute("1")]
[CLSCompliantAttribute("False")]
internal interface Microsoft.VisualStudio.Setup.Download.Bits.IBackgroundCopyFile {
    public abstract virtual void GetRemoteName(String& pVal);
    public abstract virtual void GetLocalName(String& pVal);
    public abstract virtual void GetProgress(_BG_FILE_PROGRESS& pVal);
}
[NullableContextAttribute("1")]
[GuidAttribute("83E81B93-0873-474D-8A8C-F2018B1A939C")]
[InterfaceTypeAttribute("1")]
internal interface Microsoft.VisualStudio.Setup.Download.Bits.IBackgroundCopyFile2 {
    public abstract virtual void GetRemoteName(String& pVal);
    public abstract virtual void GetLocalName(String& pVal);
    public abstract virtual void GetProgress(_BG_FILE_PROGRESS& pVal);
    public abstract virtual void GetFileRanges(UInt32& rangeCount, IntPtr ranges);
    public abstract virtual void SetRemoteName(string val);
}
[NullableContextAttribute("1")]
[GuidAttribute("659CDEAA-489E-11D9-A9CD-000D56965251")]
[InterfaceTypeAttribute("1")]
internal interface Microsoft.VisualStudio.Setup.Download.Bits.IBackgroundCopyFile3 {
    public abstract virtual void GetRemoteName(String& pVal);
    public abstract virtual void GetLocalName(String& pVal);
    public abstract virtual void GetProgress(_BG_FILE_PROGRESS& pVal);
    public abstract virtual void GetFileRanges(UInt32& rangeCount, IntPtr ranges);
    public abstract virtual void SetRemoteName(string val);
    public abstract virtual void GetTemporaryName(String& pFilename);
    public abstract virtual void SetValidationState(int state);
    public abstract virtual void GetValidationState(Int32& pState);
    public abstract virtual void IsDownloadedFromPeer(Int32& pVal);
}
[NullableContextAttribute("1")]
[GuidAttribute("EF7E0655-7888-4960-B0E5-730846E03492")]
[InterfaceTypeAttribute("1")]
internal interface Microsoft.VisualStudio.Setup.Download.Bits.IBackgroundCopyFile4 {
    public abstract virtual void GetRemoteName(String& pVal);
    public abstract virtual void GetLocalName(String& pVal);
    public abstract virtual void GetProgress(_BG_FILE_PROGRESS& pVal);
    public abstract virtual void GetFileRanges(UInt32& rangeCount, IntPtr ranges);
    public abstract virtual void SetRemoteName(string val);
    public abstract virtual void GetTemporaryName(String& pFilename);
    public abstract virtual void SetValidationState(int state);
    public abstract virtual void GetValidationState(Int32& pState);
    public abstract virtual void IsDownloadedFromPeer(Int32& pVal);
    public abstract virtual void GetPeerDownloadStats(UInt64& pFromOrigin, UInt64& pFromPeers);
}
[GuidAttribute("85C1657F-DAFC-40E8-8834-DF18EA25717E")]
[InterfaceTypeAttribute("1")]
internal interface Microsoft.VisualStudio.Setup.Download.Bits.IBackgroundCopyFile5 {
    [NullableContextAttribute("1")]
public abstract virtual void GetRemoteName(String& pVal);
    [NullableContextAttribute("1")]
public abstract virtual void GetLocalName(String& pVal);
    public abstract virtual void GetProgress(_BG_FILE_PROGRESS& pVal);
    public abstract virtual void GetFileRanges(UInt32& rangeCount, IntPtr ranges);
    [NullableContextAttribute("1")]
public abstract virtual void SetRemoteName(string val);
    [NullableContextAttribute("1")]
public abstract virtual void GetTemporaryName(String& pFilename);
    public abstract virtual void SetValidationState(int state);
    public abstract virtual void GetValidationState(Int32& pState);
    public abstract virtual void IsDownloadedFromPeer(Int32& pVal);
    public abstract virtual void GetPeerDownloadStats(UInt64& pFromOrigin, UInt64& pFromPeers);
    internal abstract virtual void SetProperty(BITS_FILE_PROPERTY_ID propertyId, BITS_FILE_PROPERTY_VALUE propertyValue);
    internal abstract virtual void GetProperty(BITS_FILE_PROPERTY_ID propertyId, BITS_FILE_PROPERTY_VALUE& propertyValue);
}
[NullableContextAttribute("1")]
[InterfaceTypeAttribute("1")]
[GuidAttribute("37668D37-507E-4160-9316-26306D150B12")]
[CLSCompliantAttribute("False")]
internal interface Microsoft.VisualStudio.Setup.Download.Bits.IBackgroundCopyJob {
    public abstract virtual void AddFileSet(UInt32 cFileCount, _BG_FILE_INFO& pFileSet);
    public abstract virtual void AddFile(string remoteUrl, string localName);
    public abstract virtual void EnumFiles(IEnumBackgroundCopyFiles& pEnum);
    public abstract virtual void Suspend();
    public abstract virtual void Resume();
    public abstract virtual void Cancel();
    public abstract virtual void Complete();
    public abstract virtual void GetId(Guid& pVal);
    public abstract virtual void GetType(BG_JOB_TYPE& pVal);
    public abstract virtual void GetProgress(_BG_JOB_PROGRESS& pVal);
    public abstract virtual void GetTimes(_BG_JOB_TIMES& pVal);
    public abstract virtual void GetState(BG_JOB_STATE& pVal);
    public abstract virtual void GetError(IBackgroundCopyError& ppError);
    public abstract virtual void GetOwner(String& pVal);
    public abstract virtual void SetDisplayName(string val);
    public abstract virtual void GetDisplayName(String& pVal);
    public abstract virtual void SetDescription(string val);
    public abstract virtual void GetDescription(String& pVal);
    public abstract virtual void SetPriority(BG_JOB_PRIORITY val);
    public abstract virtual void GetPriority(BG_JOB_PRIORITY& pVal);
    public abstract virtual void SetNotifyFlags(UInt32 val);
    public abstract virtual void GetNotifyFlags(UInt32& pVal);
    public abstract virtual void SetNotifyInterface(object val);
    public abstract virtual void GetNotifyInterface(Object& pVal);
    public abstract virtual void SetMinimumRetryDelay(UInt32 seconds);
    public abstract virtual void GetMinimumRetryDelay(UInt32& seconds);
    public abstract virtual void SetNoProgressTimeout(UInt32 seconds);
    public abstract virtual void GetNoProgressTimeout(UInt32& seconds);
    public abstract virtual void GetErrorCount(UInt32& errors);
    [NullableContextAttribute("2")]
public abstract virtual void SetProxySettings(BG_JOB_PROXY_USAGE proxyUsage, string proxyList, string proxyBypassList);
    public abstract virtual void GetProxySettings(BG_JOB_PROXY_USAGE& pProxyUsage, String& pProxyList, String& pProxyBypassList);
    public abstract virtual void TakeOwnership();
}
[NullableContextAttribute("1")]
[InterfaceTypeAttribute("1")]
[GuidAttribute("54B50739-686F-45EB-9DFF-D6A9A0FAA9AF")]
[CLSCompliantAttribute("False")]
internal interface Microsoft.VisualStudio.Setup.Download.Bits.IBackgroundCopyJob2 {
    public abstract virtual void AddFileSet(UInt32 cFileCount, _BG_FILE_INFO& pFileSet);
    public abstract virtual void AddFile(string remoteUrl, string localName);
    public abstract virtual void EnumFiles(IEnumBackgroundCopyFiles& pEnum);
    public abstract virtual void Suspend();
    public abstract virtual void Resume();
    public abstract virtual void Cancel();
    public abstract virtual void Complete();
    public abstract virtual void GetId(Guid& pVal);
    public abstract virtual void GetType(BG_JOB_TYPE& pVal);
    public abstract virtual void GetProgress(_BG_JOB_PROGRESS& pVal);
    public abstract virtual void GetTimes(_BG_JOB_TIMES& pVal);
    public abstract virtual void GetState(BG_JOB_STATE& pVal);
    public abstract virtual void GetError(IBackgroundCopyError& ppError);
    public abstract virtual void GetOwner(String& pVal);
    public abstract virtual void SetDisplayName(string val);
    public abstract virtual void GetDisplayName(String& pVal);
    public abstract virtual void SetDescription(string val);
    public abstract virtual void GetDescription(String& pVal);
    public abstract virtual void SetPriority(BG_JOB_PRIORITY val);
    public abstract virtual void GetPriority(BG_JOB_PRIORITY& pVal);
    public abstract virtual void SetNotifyFlags(BG_JOB_NOTIFICATION_TYPE val);
    public abstract virtual void GetNotifyFlags(UInt32& pVal);
    public abstract virtual void SetNotifyInterface(object val);
    public abstract virtual void GetNotifyInterface(Object& pVal);
    public abstract virtual void SetMinimumRetryDelay(UInt32 seconds);
    public abstract virtual void GetMinimumRetryDelay(UInt32& seconds);
    public abstract virtual void SetNoProgressTimeout(UInt32 seconds);
    public abstract virtual void GetNoProgressTimeout(UInt32& seconds);
    public abstract virtual void GetErrorCount(UInt32& errors);
    public abstract virtual void SetProxySettings(BG_JOB_PROXY_USAGE proxyUsage, string proxyList, string proxyBypassList);
    public abstract virtual void GetProxySettings(BG_JOB_PROXY_USAGE& pProxyUsage, String& pProxyList, String& pProxyBypassList);
    public abstract virtual void TakeOwnership();
    public abstract virtual void SetNotifyCmdLine(string program, string parameters);
    public abstract virtual void GetNotifyCmdLine(String& pProgram, String& pParameters);
    public abstract virtual void GetReplyProgress(_BG_JOB_REPLY_PROGRESS& pProgress);
    public abstract virtual void GetReplyData(IntPtr ppBuffer, UInt64& pLength);
    public abstract virtual void SetReplyFileName(string replyFileName);
    public abstract virtual void GetReplyFileName(String& pReplyFileName);
    public abstract virtual void SetCredentials(BG_AUTH_CREDENTIALS& credentials);
    public abstract virtual void RemoveCredentials(BG_AUTH_TARGET target, BG_AUTH_SCHEME scheme);
}
[NullableContextAttribute("1")]
[InterfaceTypeAttribute("1")]
[GuidAttribute("F1BD1079-9F01-4BDC-8036-F09B70095066")]
[CLSCompliantAttribute("False")]
internal interface Microsoft.VisualStudio.Setup.Download.Bits.IBackgroundCopyJobHttpOptions {
    public abstract virtual void SetClientCertificateByID(BG_CERT_STORE_LOCATION storeLocation, string storeName, Byte& pCertHashBlob);
    public abstract virtual void SetClientCertificateByName(BG_CERT_STORE_LOCATION storeLocation, string storeName, string subjectName);
    public abstract virtual void RemoveClientCertificate();
    public abstract virtual void GetClientCertificate(BG_CERT_STORE_LOCATION& pStoreLocation, String& pStoreName, IntPtr ppCertHashBlob, String& pSubjectName);
    public abstract virtual void SetCustomHeaders(string requestHeaders);
    public abstract virtual void GetCustomHeaders(String& pRequestHeaders);
    public abstract virtual void SetSecurityFlags(BG_HTTP_SECURITY_FLAGS flags);
    public abstract virtual void GetSecurityFlags(BG_HTTP_SECURITY_FLAGS& pFlags);
}
[NullableContextAttribute("1")]
[InterfaceTypeAttribute("1")]
[GuidAttribute("5CE34C0D-0DC9-4C1F-897C-DAA1B78CEE7C")]
[CLSCompliantAttribute("False")]
internal interface Microsoft.VisualStudio.Setup.Download.Bits.IBackgroundCopyManager {
    public abstract virtual void CreateJob(string displayName, BG_JOB_TYPE type, Guid& pJobId, IBackgroundCopyJob& ppJob);
    public abstract virtual void GetJob(Guid& jobID, IBackgroundCopyJob& ppJob);
    public abstract virtual void EnumJobs(UInt32 dwFlags, IEnumBackgroundCopyJobs& ppenum);
    public abstract virtual void GetErrorDescription(int hResult, UInt32 languageId, String& pErrorDescription);
}
[NullableContextAttribute("1")]
[InterfaceTypeAttribute("1")]
[GuidAttribute("CA51E165-C365-424C-8D41-24AAA4FF3C40")]
[CLSCompliantAttribute("False")]
internal interface Microsoft.VisualStudio.Setup.Download.Bits.IEnumBackgroundCopyFiles {
    public abstract virtual void Next(UInt32 celt, IBackgroundCopyFile& rgelt, UInt32& pceltFetched);
    public abstract virtual void Skip(UInt32 celt);
    public abstract virtual void Reset();
    public abstract virtual void Clone(IEnumBackgroundCopyFiles& ppenum);
    public abstract virtual void GetCount(UInt32& puCount);
}
[NullableContextAttribute("1")]
[InterfaceTypeAttribute("1")]
[GuidAttribute("1AF4F612-3B71-466F-8F58-7B6F73AC57AD")]
[CLSCompliantAttribute("False")]
internal interface Microsoft.VisualStudio.Setup.Download.Bits.IEnumBackgroundCopyJobs {
    public abstract virtual void Next(UInt32 celt, IBackgroundCopyJob& rgelt, UInt32& pceltFetched);
    public abstract virtual void Skip(UInt32 celt);
    public abstract virtual void Reset();
    public abstract virtual void Clone(IEnumBackgroundCopyJobs& ppenum);
    public abstract virtual void GetCount(UInt32& puCount);
}
public abstract class Microsoft.VisualStudio.Setup.Download.DisposableObject : object {
    [CompilerGeneratedAttribute]
private bool <IsDisposed>k__BackingField;
    public bool IsDisposed { get; private set; }
    [CompilerGeneratedAttribute]
public bool get_IsDisposed();
    [CompilerGeneratedAttribute]
private void set_IsDisposed(bool value);
    public sealed virtual void Dispose();
    protected virtual void Dispose(bool isDisposing);
    protected void VerifyNotDisposed();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.VisualStudio.Setup.Download.DownloadConstants : object {
    public static UInt32 DOWNLOAD_BUFFER_SIZE;
    public static int DOWNLOAD_TIMEOUT;
    public static int MAX_URL_REDIRECTS;
    public static int MAX_PARALLEL_DOWNLOADS;
    public static string REQUEST_SOURCE_HEADER;
    public static string REQUEST_SOURCE_HEADER_NAME;
    public static string REQUEST_SOURCE_HEADER_VALUE;
    public static string VSINSTALLER_MANAGED_IDENTITY_VSDROPAZURESERVICE_CLIENT_ID;
    public static string VSINSTALLER_MANAGED_IDENTITY_CLIENT_ID_ENVIRONMENT_VARIABLE;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.VisualStudio.Setup.Download.DownloadContext : object {
    [CompilerGeneratedAttribute]
private IPackageIdentity <PackageIdentity>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TelemetryParentCorrelation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TelemetryAncestorWorkloads>k__BackingField;
    [CompilerGeneratedAttribute]
private DownloadCookie <Cookie>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Sha256>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Signer>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDynamicEndpoint>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IList`1<string> <Hashes>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <IfModifiedSince>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AuthenticationToken>k__BackingField;
    public IPackageIdentity PackageIdentity { get; public set; }
    public IPackage Package { get; }
    public string TelemetryParentCorrelation { get; public set; }
    public string TelemetryAncestorWorkloads { get; public set; }
    public DownloadCookie Cookie { get; public set; }
    public string Sha256 { get; public set; }
    public string Signer { get; public set; }
    public bool IsDynamicEndpoint { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IList`1<string> Hashes { get; public set; }
    public Nullable`1<DateTimeOffset> IfModifiedSince { get; public set; }
    public string AuthenticationToken { get; public set; }
    [CompilerGeneratedAttribute]
public IPackageIdentity get_PackageIdentity();
    [CompilerGeneratedAttribute]
public void set_PackageIdentity(IPackageIdentity value);
    public IPackage get_Package();
    [CompilerGeneratedAttribute]
public string get_TelemetryParentCorrelation();
    [CompilerGeneratedAttribute]
public void set_TelemetryParentCorrelation(string value);
    [CompilerGeneratedAttribute]
public string get_TelemetryAncestorWorkloads();
    [CompilerGeneratedAttribute]
public void set_TelemetryAncestorWorkloads(string value);
    [CompilerGeneratedAttribute]
public DownloadCookie get_Cookie();
    [CompilerGeneratedAttribute]
public void set_Cookie(DownloadCookie value);
    [CompilerGeneratedAttribute]
public string get_Sha256();
    [CompilerGeneratedAttribute]
public void set_Sha256(string value);
    [CompilerGeneratedAttribute]
public string get_Signer();
    [CompilerGeneratedAttribute]
public void set_Signer(string value);
    [CompilerGeneratedAttribute]
public bool get_IsDynamicEndpoint();
    [CompilerGeneratedAttribute]
public void set_IsDynamicEndpoint(bool value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Hashes();
    [CompilerGeneratedAttribute]
public void set_Hashes(IList`1<string> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_IfModifiedSince();
    [CompilerGeneratedAttribute]
public void set_IfModifiedSince(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public string get_AuthenticationToken();
    [CompilerGeneratedAttribute]
public void set_AuthenticationToken(string value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.VisualStudio.Setup.Download.DownloadCookie : object {
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    public string Url { get; public set; }
    public string Value { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Microsoft.VisualStudio.Setup.Download.DownloadEngineBase : DisposableObject {
    private DownloadSource[] supportedSources;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public string Name { get; private set; }
    protected DownloadEngineBase(string name, DownloadSource[] supportedSources);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
    public sealed virtual bool IsSupported(DownloadSource source);
    public sealed virtual DownloadSummary Download(Uri uri, Stream outputStream, ProgressUpdateCallback progress, CancellationToken cancellationToken, DownloadContext downloadContext, ITelemetryOperation telemetryOperation);
    protected abstract virtual DownloadSummary DownloadCore(Uri uri, Stream outputStream, ProgressUpdateCallback progress, CancellationToken cancellationToken, DownloadContext downloadContext, ITelemetryOperation telemetryOperation);
    private DownloadSummary DownloadWithBitRate(Uri uri, Stream outputStream, ProgressUpdateCallback progress, CancellationToken cancellationToken, DownloadContext downloadContext, ITelemetryOperation telemetryOperation);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.VisualStudio.Setup.Download.DownloadFailureException : Exception {
    [CompilerGeneratedAttribute]
private IEnumerable`1<DownloadFailureInformation> <DownloadFailures>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ShouldLog>k__BackingField;
    public IEnumerable`1<DownloadFailureInformation> DownloadFailures { get; }
    public bool ShouldLog { get; public set; }
    public string Message { get; }
    public DownloadFailureException(IEnumerable`1<DownloadFailureInformation> downloadFailures);
    protected DownloadFailureException(SerializationInfo info, StreamingContext context);
    [CompilerGeneratedAttribute]
public IEnumerable`1<DownloadFailureInformation> get_DownloadFailures();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_ShouldLog();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ShouldLog(bool value);
    public virtual string get_Message();
    public virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.VisualStudio.Setup.Download.DownloadFailureInformation : object {
    [CompilerGeneratedAttribute]
private Exception <Exception>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Engine>k__BackingField;
    public Exception Exception { get; public set; }
    public string Engine { get; public set; }
    [NullableContextAttribute("1")]
protected DownloadFailureInformation(SerializationInfo info, StreamingContext context);
    [CompilerGeneratedAttribute]
public Exception get_Exception();
    [CompilerGeneratedAttribute]
public void set_Exception(Exception value);
    [CompilerGeneratedAttribute]
public string get_Engine();
    [CompilerGeneratedAttribute]
public void set_Engine(string value);
    [NullableContextAttribute("1")]
public sealed virtual void GetObjectData(SerializationInfo info, StreamingContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.VisualStudio.Setup.Download.DownloadManager : DisposableObject {
    private static int DefaultSleepDuration;
    private IServiceProvider serviceProvider;
    private ILogger logger;
    private ITelemetry telemetry;
    private List`1<IDownloadEngine> allEngines;
    private List`1<IDownloadEngine> defaultEngines;
    private int maxDownloads;
    [NullableAttribute("2")]
private ISignatureVerifierManager verifier;
    [CompilerGeneratedAttribute]
private int <SleepDurationBetweenRetries>k__BackingField;
    public int MaxDownloads { get; public set; }
    public IEnumerable`1<string> DefaultEngines { get; public set; }
    public IEnumerable`1<string> AllEngines { get; }
    public IEnumerable`1<IDownloadEngine> Engines { get; }
    internal int SleepDurationBetweenRetries { get; internal set; }
    public DownloadManager(IServiceProvider serviceProvider);
    private static DownloadManager();
    public sealed virtual int get_MaxDownloads();
    public sealed virtual void set_MaxDownloads(int value);
    public sealed virtual IEnumerable`1<string> get_DefaultEngines();
    public sealed virtual void set_DefaultEngines(IEnumerable`1<string> value);
    public sealed virtual IEnumerable`1<string> get_AllEngines();
    public IEnumerable`1<IDownloadEngine> get_Engines();
    [CompilerGeneratedAttribute]
internal int get_SleepDurationBetweenRetries();
    [CompilerGeneratedAttribute]
internal void set_SleepDurationBetweenRetries(int value);
    public sealed virtual Task`1<DownloadSummary> Download(Uri uri, Stream outputStream, ProgressUpdateCallback progress, CancellationToken cancellationToken, DownloadContext downloadContext, bool verifySignature);
    internal void RemoveAllEngines();
    internal void AddDownloadEngine(IDownloadEngine engine);
    protected virtual void Dispose(bool isDisposing);
    private IEnumerable`1<IDownloadEngine> GetPreferredEngines(IEnumerable`1<IDownloadEngine> engines, IEnumerable`1<string> engineOrder);
    private IDownloadEngine[] GetSuitableEngines(IEnumerable`1<IDownloadEngine> downloadEngines, Uri uri);
    private DownloadSummary DownloadWithRetry(IDownloadEngine[] engines, Uri uri, Stream outputStream, ProgressUpdateCallback progress, CancellationToken cancellationToken, DownloadContext downloadContext, bool verifySignature);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.VisualStudio.Setup.Download.DownloadManagerAuthenticationProxy : object {
    private static string Vsdrop;
    private static string FinalVsdropUri;
    private static string AuthenticationEnvironmentVariable;
    private static string EnvironmentVariableDisabled;
    private static string AkaMs;
    private static string VSDropCorpUrl;
    private static string VSDropUrl;
    private static string GoMicrosoftUrl;
    private IEnumerable`1<string> scopes;
    private SemaphoreSlim semaphore;
    private ITokenCache tokenCache;
    private IDownloadManager downloadManager;
    private IAuthenticationProvider authenticationProvider;
    private IEnvironment environment;
    private ILogger logger;
    private IWebRequestService webRequestService;
    [NullableAttribute("2")]
private ITelemetry telemetry;
    private Lazy`1<bool> lazyAuthenticate;
    public int MaxDownloads { get; public set; }
    public IEnumerable`1<string> DefaultEngines { get; public set; }
    public IEnumerable`1<string> AllEngines { get; }
    public DownloadManagerAuthenticationProxy(IServiceProvider serviceProvider, IAuthenticationProvider authenticationProvider, IDownloadManager downloadManager, ITokenCache tokenCache, IEnvironment environment, IWebRequestService webRequestService);
    public sealed virtual int get_MaxDownloads();
    public sealed virtual void set_MaxDownloads(int value);
    public sealed virtual IEnumerable`1<string> get_DefaultEngines();
    public sealed virtual void set_DefaultEngines(IEnumerable`1<string> value);
    public sealed virtual IEnumerable`1<string> get_AllEngines();
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Setup.Download.DownloadManagerAuthenticationProxy/<Download>d__27")]
public sealed virtual Task`1<DownloadSummary> Download(Uri uri, Stream outputStream, ProgressUpdateCallback progress, CancellationToken cancellationToken, DownloadContext downloadContext, bool verifySignature);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Setup.Download.DownloadManagerAuthenticationProxy/<MungeUriAsync>d__28")]
private Task`1<Uri> MungeUriAsync(Uri uri, CancellationToken cancellationToken);
    private bool ShouldAuthenticateUri(Uri uri);
    private bool InitializeAuthenticationSetting();
}
public static class Microsoft.VisualStudio.Setup.Download.DownloadManagerFactory : object {
    [NullableContextAttribute("1")]
public static IDownloadManager Create(IServiceProvider services, bool shouldAuthenticate, bool isQuietOrPassive, IntPtr handle);
}
public enum Microsoft.VisualStudio.Setup.Download.DownloadSource : Enum {
    public int value__;
    public static DownloadSource File;
    public static DownloadSource Internet;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.VisualStudio.Setup.Download.DownloadSummary : object {
    [CompilerGeneratedAttribute]
private long <DownloadedSize>k__BackingField;
    [CompilerGeneratedAttribute]
private double <BitRate>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <DownloadTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DownloadEngine>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProxyResolution>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FinalUri>k__BackingField;
    [CompilerGeneratedAttribute]
private VerificationInformation <VerificationInformation>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <NotModified>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <LastModifiedDate>k__BackingField;
    [CompilerGeneratedAttribute]
private IWebResponse <WebResponse>k__BackingField;
    public long DownloadedSize { get; internal set; }
    public double BitRate { get; internal set; }
    public TimeSpan DownloadTime { get; internal set; }
    public string DownloadEngine { get; internal set; }
    public string ProxyResolution { get; internal set; }
    public string FinalUri { get; public set; }
    public VerificationInformation VerificationInformation { get; internal set; }
    public bool NotModified { get; internal set; }
    public Nullable`1<DateTimeOffset> LastModifiedDate { get; internal set; }
    public IWebResponse WebResponse { get; internal set; }
    public DownloadSummary(long downloadSize, double bitRate, TimeSpan downloadTime);
    public DownloadSummary(string downloadEngine, long downloadSize, double bitRate, TimeSpan downloadTime);
    public DownloadSummary(string downloadEngine, long downloadSize, double bitRate, TimeSpan downloadTime, VerificationInformation verificationInformation);
    [CompilerGeneratedAttribute]
public long get_DownloadedSize();
    [CompilerGeneratedAttribute]
internal void set_DownloadedSize(long value);
    [CompilerGeneratedAttribute]
public double get_BitRate();
    [CompilerGeneratedAttribute]
internal void set_BitRate(double value);
    [CompilerGeneratedAttribute]
public TimeSpan get_DownloadTime();
    [CompilerGeneratedAttribute]
internal void set_DownloadTime(TimeSpan value);
    [CompilerGeneratedAttribute]
public string get_DownloadEngine();
    [CompilerGeneratedAttribute]
internal void set_DownloadEngine(string value);
    [CompilerGeneratedAttribute]
public string get_ProxyResolution();
    [CompilerGeneratedAttribute]
internal void set_ProxyResolution(string value);
    [CompilerGeneratedAttribute]
public string get_FinalUri();
    [CompilerGeneratedAttribute]
public void set_FinalUri(string value);
    [CompilerGeneratedAttribute]
public VerificationInformation get_VerificationInformation();
    [CompilerGeneratedAttribute]
internal void set_VerificationInformation(VerificationInformation value);
    [CompilerGeneratedAttribute]
public bool get_NotModified();
    [CompilerGeneratedAttribute]
internal void set_NotModified(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_LastModifiedDate();
    [CompilerGeneratedAttribute]
internal void set_LastModifiedDate(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public IWebResponse get_WebResponse();
    [CompilerGeneratedAttribute]
internal void set_WebResponse(IWebResponse value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.VisualStudio.Setup.Download.EnvironmentFacade : object {
    public Version OsVersion { get; }
    public sealed virtual Version get_OsVersion();
    public sealed virtual bool IsOS(OperatingSystemType type);
    public sealed virtual string GetEnvironmentVariable(string variable);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.VisualStudio.Setup.Download.FetchService : object {
    private IWebRequestService webService;
    public FetchService(IWebRequestService webService);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Setup.Download.FetchService/<GetAsync>d__2`1")]
public sealed virtual Task`1<T> GetAsync(Uri uri, WebRequestSettings settings, ISerializer`1<T> serializer, CancellationToken token);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Setup.Download.FetchService/<PostAsync>d__3`1")]
public sealed virtual Task`1<T> PostAsync(Uri uri, WebRequestSettings settings, string contentType, Stream content, ISerializer`1<T> serializer, CancellationToken token);
}
internal class Microsoft.VisualStudio.Setup.Download.FileDownloadEngine : DownloadEngineBase {
    [NullableContextAttribute("1")]
protected virtual DownloadSummary DownloadCore(Uri uri, Stream outputStream, ProgressUpdateCallback progress, CancellationToken cancellationToken, DownloadContext downloadContext, ITelemetryOperation telemetryOperation);
}
[NullableContextAttribute("1")]
public interface Microsoft.VisualStudio.Setup.Download.IAcquireTokenFacade {
    public abstract virtual Task`1<AuthenticationResult> AcquireTokenSilentAsync(IEnumerable`1<string> scopes, CancellationToken cancellationToken);
    public abstract virtual Task`1<AuthenticationResult> AcquireTokenByIntegratedWindowsAuthAsync(IEnumerable`1<string> scopes, CancellationToken cancellationToken);
    public abstract virtual Task`1<AuthenticationResult> AcquireTokenInteractiveAsync(IEnumerable`1<string> scopes, CancellationToken cancellationToken);
    public abstract virtual Task`1<AuthenticationResult> AcquireTokenForManagedIdentityAsync();
    public abstract virtual Task`1<AzureManagedIdentityAuthResponse> AcquireTokenForManagedIdentityFromIMDSEndpointAsync(IEnumerable`1<string> scopes, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
public interface Microsoft.VisualStudio.Setup.Download.IAuthenticationProvider {
    public abstract virtual Task`1<AuthenticationToken> AuthenticateAsync(Uri uri, IEnumerable`1<string> scopes, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
public interface Microsoft.VisualStudio.Setup.Download.IDownloadEngine {
    public string Name { get; }
    public abstract virtual string get_Name();
    public abstract virtual bool IsSupported(DownloadSource source);
    public abstract virtual DownloadSummary Download(Uri uri, Stream outputStream, ProgressUpdateCallback progress, CancellationToken cancellationToken, DownloadContext downloadContext, ITelemetryOperation telemetryOperation);
}
[NullableContextAttribute("1")]
public interface Microsoft.VisualStudio.Setup.Download.IDownloadManager {
    public int MaxDownloads { get; public set; }
    public IEnumerable`1<string> DefaultEngines { get; public set; }
    public IEnumerable`1<string> AllEngines { get; }
    public abstract virtual int get_MaxDownloads();
    public abstract virtual void set_MaxDownloads(int value);
    public abstract virtual IEnumerable`1<string> get_DefaultEngines();
    public abstract virtual void set_DefaultEngines(IEnumerable`1<string> value);
    public abstract virtual IEnumerable`1<string> get_AllEngines();
    public abstract virtual Task`1<DownloadSummary> Download(Uri uri, Stream outputStream, ProgressUpdateCallback progress, CancellationToken cancellationToken, DownloadContext downloadContext, bool verifySignature);
}
[NullableContextAttribute("1")]
public interface Microsoft.VisualStudio.Setup.Download.IEnvironment {
    public Version OsVersion { get; }
    public abstract virtual Version get_OsVersion();
    public abstract virtual bool IsOS(OperatingSystemType type);
    public abstract virtual string GetEnvironmentVariable(string variable);
}
[NullableContextAttribute("1")]
public interface Microsoft.VisualStudio.Setup.Download.IFetchService {
    public abstract virtual Task`1<T> GetAsync(Uri uri, WebRequestSettings settings, ISerializer`1<T> serializer, CancellationToken token);
    public abstract virtual Task`1<T> PostAsync(Uri uri, WebRequestSettings settings, string contentType, Stream content, ISerializer`1<T> serializer, CancellationToken token);
}
[NullableContextAttribute("1")]
public interface Microsoft.VisualStudio.Setup.Download.IManagedIdentityApplicationBuilder {
    public abstract virtual IManagedIdentityApplication BuildApplication();
}
[NullableContextAttribute("1")]
internal interface Microsoft.VisualStudio.Setup.Download.IPublicClientApplicationBuilder {
    public abstract virtual IPublicClientApplication BuildApplication();
}
[NullableContextAttribute("1")]
public interface Microsoft.VisualStudio.Setup.Download.ITokenCache {
    public abstract virtual void CacheToken(Uri uri, AuthenticationToken authToken);
    public abstract virtual bool TryGetToken(Uri uri, AuthenticationToken& authToken);
}
[NullableContextAttribute("1")]
public interface Microsoft.VisualStudio.Setup.Download.ITokenCacheRegistrant {
    public abstract virtual Task RegisterUserTokenCacheAsync();
}
[NullableContextAttribute("1")]
public interface Microsoft.VisualStudio.Setup.Download.IWebRequestService {
    public abstract virtual Task`1<DownloadSummary> InvokeHeadAsync(Uri uri, WebRequestSettings settings, CancellationToken token);
    public abstract virtual Task`1<DownloadSummary> InvokeGetAsync(Uri uri, WebRequestSettings settings, Stream outputStream, CancellationToken token);
    public abstract virtual Task`1<DownloadSummary> InvokePostAsync(Uri uri, WebRequestSettings settings, string contentType, Stream contentStream, Stream outputStream, CancellationToken token);
}
public interface Microsoft.VisualStudio.Setup.Download.IWebResponse {
    public HttpStatusCode StatusCode { get; }
    public abstract virtual HttpStatusCode get_StatusCode();
}
public interface Microsoft.VisualStudio.Setup.Download.IWindowHandler {
    public abstract virtual IntPtr GetForegroundWindow();
    public abstract virtual IntPtr GetConsoleOrTerminalWindow();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.VisualStudio.Setup.Download.LazyAuthenticationProviderProxy : object {
    private Lazy`1<IAuthenticationProvider> providerCreator;
    public LazyAuthenticationProviderProxy(Lazy`1<IAuthenticationProvider> providerCreator);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Setup.Download.LazyAuthenticationProviderProxy/<AuthenticateAsync>d__2")]
public sealed virtual Task`1<AuthenticationToken> AuthenticateAsync(Uri uri, IEnumerable`1<string> scopes, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.VisualStudio.Setup.Download.ManagedIdentityApplicationBuilder : object {
    private IEnvironment environment;
    [NullableAttribute("2")]
private ILogger logger;
    [NullableAttribute("2")]
private ITelemetry telemetry;
    public ManagedIdentityApplicationBuilder(IServiceProvider services, IEnvironment environment);
    public sealed virtual IManagedIdentityApplication BuildApplication();
}
public enum Microsoft.VisualStudio.Setup.Download.OperatingSystemType : Enum {
    public int value__;
    public static OperatingSystemType OS_ANYSERVER;
}
internal class Microsoft.VisualStudio.Setup.Download.PartialDownloadNotSupportedException : Exception {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.VisualStudio.Setup.Download.PreferredDownloadEngines : object {
    private static object SyncRoot;
    private static ConcurrentDictionary`2<string, int> ConcurrentPreferredEngines;
    [NullableAttribute("2")]
private static PreferredDownloadEngines instance;
    private ConcurrentDictionary`2<string, int> preferredEngines;
    [NullableAttribute("2")]
private string lastSuccessfulEngineName;
    public static PreferredDownloadEngines Instance { get; }
    [NullableAttribute("2")]
public string LastSuccessfulEngineName { get; public set; }
    public PreferredDownloadEngines(ConcurrentDictionary`2<string, int> preferredEngines);
    private static PreferredDownloadEngines();
    internal void ClearPreferenceData();
    public static PreferredDownloadEngines get_Instance();
    [NullableContextAttribute("2")]
public string get_LastSuccessfulEngineName();
    [NullableContextAttribute("2")]
public void set_LastSuccessfulEngineName(string value);
    public IEnumerable`1<IDownloadEngine> GetEnginesInPriorityOpder(IEnumerable`1<IDownloadEngine> viableEngines);
}
public class Microsoft.VisualStudio.Setup.Download.ProgressUpdateCallback : MulticastDelegate {
    public ProgressUpdateCallback(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual void Invoke(ProgressUpdateStatus status);
    public virtual IAsyncResult BeginInvoke(ProgressUpdateStatus status, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.VisualStudio.Setup.Download.ProgressUpdateStatus : object {
    [CompilerGeneratedAttribute]
private long <BytesRead>k__BackingField;
    [CompilerGeneratedAttribute]
private long <TotalBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private double <BitRate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DownloadEngine>k__BackingField;
    public long BytesRead { get; private set; }
    public long TotalBytes { get; private set; }
    public double BitRate { get; private set; }
    public string DownloadEngine { get; private set; }
    public ProgressUpdateStatus(long bytesRead, long totalBytes, double bitRate);
    public ProgressUpdateStatus(string downloadEngine, long bytesRead, long totalBytes, double bitRate);
    [CompilerGeneratedAttribute]
public long get_BytesRead();
    [CompilerGeneratedAttribute]
private void set_BytesRead(long value);
    [CompilerGeneratedAttribute]
public long get_TotalBytes();
    [CompilerGeneratedAttribute]
private void set_TotalBytes(long value);
    [CompilerGeneratedAttribute]
public double get_BitRate();
    [CompilerGeneratedAttribute]
private void set_BitRate(double value);
    [CompilerGeneratedAttribute]
public string get_DownloadEngine();
    [CompilerGeneratedAttribute]
private void set_DownloadEngine(string value);
}
internal enum Microsoft.VisualStudio.Setup.Download.ProxyResolution : Enum {
    public int value__;
    public static ProxyResolution Default;
    public static ProxyResolution DefaultCredentialsOrNoAutoProxy;
    public static ProxyResolution NetworkCredentials;
    public static ProxyResolution DirectAccess;
    public static ProxyResolution Error;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.VisualStudio.Setup.Download.PublicClientApplicationBuilder : object {
    private static string ClientId;
    private static string Instance;
    private static string Tenant;
    private Version windowsServer2019Version;
    private Version windows10Version;
    private IServiceProvider serviceProvider;
    [NullableAttribute("2")]
private ILogger logger;
    private IEnvironment environment;
    [NullableAttribute("2")]
private ITelemetry telemetry;
    private IntPtr handle;
    private IWindowHandler windowHandler;
    public PublicClientApplicationBuilder(IServiceProvider services, IEnvironment environment, IntPtr handle);
    public sealed virtual IPublicClientApplication BuildApplication();
    private PublicClientApplicationBuilder CreateDefaultAppBuilder();
    private void AddWAMIfEnabled(PublicClientApplicationBuilder builder, ITelemetryOperation startOperation);
    private void AddWAM(PublicClientApplicationBuilder builder);
    private IntPtr GetWindowHandle();
    [NullableContextAttribute("2")]
private bool EnableWAM(ITelemetryOperation startOperation);
    [NullableContextAttribute("2")]
private bool OSSupportsWAM(ITelemetryOperation startOperation);
    [CompilerGeneratedAttribute]
private IntPtr <AddWAM>b__15_0();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.VisualStudio.Setup.Download.SilentAuthenticationProvider : AuthenticationProviderBase {
    public SilentAuthenticationProvider(IServiceProvider serviceProvider, IAcquireTokenFacade acquireTokenFacade, ITokenCacheRegistrant tokenCacheRegistrant);
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Setup.Download.SilentAuthenticationProvider/<AuthenticateImplAsync>d__1")]
protected virtual Task`1<AuthenticationToken> AuthenticateImplAsync(IEnumerable`1<string> scopes, CancellationToken cancellationToken, ITelemetryOperation telemetryOperation);
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class Microsoft.VisualStudio.Setup.Download.Strings : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string AuthenticationHeaderText { get; }
    internal static string Error_Authentication_Failure { get; }
    internal static string Error_BitsJobFailed { get; }
    internal static string Error_BitsJobFailed_Arg2 { get; }
    internal static string Error_DownloadFailed_SizeMismatch { get; }
    internal static string Error_FileNotFound { get; }
    internal static string Error_InvalidOutputStream_CannotWrite { get; }
    internal static string Error_InvalidResponseCode_Arg1 { get; }
    internal static string Error_InvalidSignatureOnDownload_Arg1 { get; }
    internal static string Error_InvalidSignatureOnDownloadEmptyFile_Arg1 { get; }
    internal static string Error_InvalidUri_Arg1 { get; }
    internal static string Error_NoSuitableEngineFound { get; }
    internal static string Error_NoWeb { get; }
    internal static string Error_SilentAuthentication_Failure { get; }
    internal static string Error_UnknownAuthentication_Failure { get; }
    internal static string Error_UnSupportedUriScheme_Arg1 { get; }
    internal static string Error_WinInet_Failure_Arg3 { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_AuthenticationHeaderText();
    internal static string get_Error_Authentication_Failure();
    internal static string get_Error_BitsJobFailed();
    internal static string get_Error_BitsJobFailed_Arg2();
    internal static string get_Error_DownloadFailed_SizeMismatch();
    internal static string get_Error_FileNotFound();
    internal static string get_Error_InvalidOutputStream_CannotWrite();
    internal static string get_Error_InvalidResponseCode_Arg1();
    internal static string get_Error_InvalidSignatureOnDownload_Arg1();
    internal static string get_Error_InvalidSignatureOnDownloadEmptyFile_Arg1();
    internal static string get_Error_InvalidUri_Arg1();
    internal static string get_Error_NoSuitableEngineFound();
    internal static string get_Error_NoWeb();
    internal static string get_Error_SilentAuthentication_Failure();
    internal static string get_Error_UnknownAuthentication_Failure();
    internal static string get_Error_UnSupportedUriScheme_Arg1();
    internal static string get_Error_WinInet_Failure_Arg3();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.VisualStudio.Setup.Download.TokenCache : object {
    public static ITokenCache Default;
    private IDictionary`2<string, AuthenticationToken> authenticationTokens;
    private static TokenCache();
    public sealed virtual void CacheToken(Uri uri, AuthenticationToken token);
    public sealed virtual bool TryGetToken(Uri uri, AuthenticationToken& authToken);
    private bool IsExpired(AuthenticationToken token);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.VisualStudio.Setup.Download.TokenCacheRegistrant : object {
    private static string cacheFileName;
    private static string cacheDirectory;
    private ILogger logger;
    private IPublicClientApplication publicClientApp;
    internal TokenCacheRegistrant(IServiceProvider serviceProvider, IPublicClientApplication publicClientApp);
    private static TokenCacheRegistrant();
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Setup.Download.TokenCacheRegistrant/<RegisterUserTokenCacheAsync>d__5")]
public sealed virtual Task RegisterUserTokenCacheAsync();
    [AsyncStateMachineAttribute("Microsoft.VisualStudio.Setup.Download.TokenCacheRegistrant/<CreateCacheHelperAsync>d__6")]
private Task`1<MsalCacheHelper> CreateCacheHelperAsync();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.VisualStudio.Setup.Download.Utilities : object {
    internal static string UserAgent;
    private static Utilities();
    public static void DeleteFileIfExists(string filePath);
    public static long CopyFileToStream(string filePath, Stream outStream, ProgressUpdateCallback progress, CancellationToken cancellationToken);
    internal static string AddHeader(string headers, string key, string value);
    internal static string AddHeader(string headers, string headerString);
    internal static string GetIfModifiedSinceHeader(DateTimeOffset ifModifiedSince);
    internal static string GetAuthenticationTokenHeader(string authenticationToken);
    internal static string GetRequestSourceHeader();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.VisualStudio.Setup.Download.WebClientEngine : DownloadEngineBase {
    private static int MaxDownloadAttemptCount;
    private IServiceProvider serviceProvider;
    private ILogger logger;
    private DownloadHelpers helper;
    private static WebClientEngine();
    public WebClientEngine(IServiceProvider serviceProvider);
    protected virtual DownloadSummary DownloadCore(Uri uri, Stream stream, ProgressUpdateCallback progress, CancellationToken cancellationToken, DownloadContext downloadContext, ITelemetryOperation telemetryOperation);
    [NullableContextAttribute("2")]
private HttpWebResponse GetWebResponse(Uri uri, DownloadContext downloadContext, DownloadSummary& downloadSummary, HttpWebRequest& webRequest, String& remoteAddress, CancellationToken cancellationToken, long bytesOffset);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.VisualStudio.Setup.Download.WebRequestService : object {
    private static string LocationResponse;
    [NullableAttribute("2")]
private ILogger logger;
    private DownloadHelpers helper;
    private static WebRequestService();
    public WebRequestService(IServiceProvider services);
    public sealed virtual Task`1<DownloadSummary> InvokeHeadAsync(Uri uri, WebRequestSettings settings, CancellationToken token);
    public sealed virtual Task`1<DownloadSummary> InvokeGetAsync(Uri uri, WebRequestSettings settings, Stream outputStream, CancellationToken token);
    public sealed virtual Task`1<DownloadSummary> InvokePostAsync(Uri uri, WebRequestSettings settings, string contentType, Stream contentStream, Stream outputStream, CancellationToken token);
    private HttpWebRequest GetWebRequest(Uri uri, WebRequestSettings settings, ProxyResolution proxyResolution);
    private Task`1<DownloadSummary> ExecuteWithRetryAsync(Uri uri, WebRequestSettings settings, Action`1<HttpWebRequest> preSendInitialization, Action`1<HttpWebResponse> responseReceived, CancellationToken cancellationToken);
    private void WriteData(HttpWebRequest webRequest, string contentType, Byte[] content);
    private void WriteData(HttpWebRequest webRequest, string contentType, Stream contentStream);
    private void WriteResponse(HttpWebResponse webResponse, Stream stream);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.VisualStudio.Setup.Download.WebRequestSettings : object {
    [CompilerGeneratedAttribute]
private bool <AllowAutoRedirect>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SupportsDecompression>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <KeepAlive>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Timeout>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserAgent>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpRequestCacheLevel <CacheLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private NameValueCollection <Headers>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Cookie>k__BackingField;
    public bool AllowAutoRedirect { get; public set; }
    public bool SupportsDecompression { get; public set; }
    public bool KeepAlive { get; public set; }
    public int Timeout { get; public set; }
    public string UserAgent { get; public set; }
    public HttpRequestCacheLevel CacheLevel { get; public set; }
    public NameValueCollection Headers { get; }
    [NullableAttribute("2")]
public string Cookie { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_AllowAutoRedirect();
    [CompilerGeneratedAttribute]
public void set_AllowAutoRedirect(bool value);
    [CompilerGeneratedAttribute]
public bool get_SupportsDecompression();
    [CompilerGeneratedAttribute]
public void set_SupportsDecompression(bool value);
    [CompilerGeneratedAttribute]
public bool get_KeepAlive();
    [CompilerGeneratedAttribute]
public void set_KeepAlive(bool value);
    [CompilerGeneratedAttribute]
public int get_Timeout();
    [CompilerGeneratedAttribute]
public void set_Timeout(int value);
    [CompilerGeneratedAttribute]
public string get_UserAgent();
    [CompilerGeneratedAttribute]
public void set_UserAgent(string value);
    [CompilerGeneratedAttribute]
public HttpRequestCacheLevel get_CacheLevel();
    [CompilerGeneratedAttribute]
public void set_CacheLevel(HttpRequestCacheLevel value);
    [CompilerGeneratedAttribute]
public NameValueCollection get_Headers();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Cookie();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Cookie(string value);
}
public class Microsoft.VisualStudio.Setup.Download.WebResponse : object {
    [CompilerGeneratedAttribute]
private HttpStatusCode <StatusCode>k__BackingField;
    public HttpStatusCode StatusCode { get; }
    public WebResponse(HttpStatusCode statusCode);
    [NullableContextAttribute("1")]
public WebResponse(HttpWebResponse httpWebResponse);
    [CompilerGeneratedAttribute]
public sealed virtual HttpStatusCode get_StatusCode();
}
public class Microsoft.VisualStudio.Setup.Download.WindowHandlerFacade : object {
    public sealed virtual IntPtr GetForegroundWindow();
    public sealed virtual IntPtr GetConsoleOrTerminalWindow();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.VisualStudio.Setup.Download.WinInet.DownloadHelpers : object {
    [NullableAttribute("2")]
private ILogger logger;
    public DownloadHelpers(IServiceProvider serviceProvider);
    public string GetResponseHeaders(IntPtr inetFileHandle);
    public string GetContentEncoding(IntPtr inetFileHandle);
    public int GetContentLength(IntPtr inetFileHandle);
    public void ThrowGetLastErrorException(string offendingFunction);
    public void ThrowWrappedWebException(int errorCode, string functionName, string message);
    public void ThrowWrappedWebException(UInt32 errorCode, string functionName, string message);
    internal void GetInetErrorInfo(string function, UInt32& errorCode, String& message);
    public void InternetCloseFileHandle(IntPtr fileHandle);
    internal bool HttpQueryInfo(IntPtr inetFileHandle, UInt32 infoLevel, UInt32& bufferLength, Byte[]& info, UInt32 infoIndex);
    [NullableContextAttribute("0")]
private bool HttpQueryInfo(Void* inetFileHandle, UInt32 infoLevel, UInt32& bufferLength, Byte[]& info, UInt32 infoIndex);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.VisualStudio.Setup.Download.WinInet.ManagedWinInet : DisposableObject {
    private static string StatusOkReturnCode;
    private static string StatusMovedReturnCode;
    private static string StatusRedirectReturnCode;
    private static string NotModifiedReturnCode;
    private static string UnAuthorizedReturnCode;
    private IServiceProvider serviceProvider;
    [NullableAttribute("2")]
private ILogger logger;
    private DownloadHelpers helper;
    [NullableAttribute("2")]
private SafeInetHandle inetHandle;
    public ManagedWinInet(IServiceProvider serviceProvider);
    private static ManagedWinInet();
    public void InternetOpen(UInt32 internetAccessType);
    public void InternetClose();
    public void ResetHandle();
    internal DownloadSummary DownloadFile(Uri uri, Stream outStream, ProgressUpdateCallback progressCallback, CancellationToken cancellationToken, DownloadContext downloadContext);
    protected virtual void Dispose(bool disposing);
    private void SetInternetTimeout(IntPtr fileHandle);
    private Stream GetInternetStream(IntPtr inetFile);
    private Stream NewWinInetInternetReadStreamForGZipStream(IntPtr inetFile);
    [NullableContextAttribute("2")]
private string OpenUrlAndFollowRedirects(DownloadCookie cookie, Uri uri, IntPtr& fileHandle, Nullable`1<DateTimeOffset> ifModifiedSince, string authenticationToken, Uri& finalUri);
    private string AddHeaders(Nullable`1<DateTimeOffset> ifModifiedSince, string authenticationToken);
    private string AddBaseHeaders(Nullable`1<DateTimeOffset> ifModifiedSince);
    private Nullable`1<DateTimeOffset> GetLastModifiedDate(IntPtr fileHandle);
}
internal class Microsoft.VisualStudio.Setup.Download.WinInet.SafeInetHandle : SafeHandleZeroOrMinusOneIsInvalid {
    internal SafeInetHandle(IntPtr handle);
    internal Void* ToPointer();
    [ReliabilityContractAttribute("3", "1")]
protected virtual bool ReleaseHandle();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.VisualStudio.Setup.Download.WinInet.WinInetEngine : DownloadEngineBase {
    private IServiceProvider serviceProvider;
    [NullableAttribute("2")]
private ILogger logger;
    public WinInetEngine(IServiceProvider serviceProvider);
    protected virtual DownloadSummary DownloadCore(Uri uri, Stream stream, ProgressUpdateCallback progress, CancellationToken cancellationToken, DownloadContext downloadContext, ITelemetryOperation telemetryOperation);
    private UInt32 GetProxyConfigSetting(ProxyResolution& proxyResolution);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.VisualStudio.Setup.Download.WinInet.WinInetInternetReadStream : Stream {
    private IServiceProvider serviceProvider;
    private DownloadHelpers helper;
    private IntPtr inetFile;
    [NullableAttribute("2")]
private Byte[] localBuffer;
    public bool CanRead { get; }
    public bool CanSeek { get; }
    public bool CanWrite { get; }
    public long Length { get; }
    public long Position { get; public set; }
    internal WinInetInternetReadStream(IServiceProvider serviceProvider, IntPtr inetFile);
    public virtual bool get_CanRead();
    public virtual bool get_CanSeek();
    public virtual bool get_CanWrite();
    public virtual long get_Length();
    public virtual long get_Position();
    public virtual void set_Position(long value);
    public virtual void Flush();
    public virtual int Read(Byte[] buffer, int offset, int count);
    public virtual long Seek(long offset, SeekOrigin origin);
    public virtual void SetLength(long value);
    public virtual void Write(Byte[] buffer, int offset, int count);
    protected virtual void Dispose(bool disposing);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.VisualStudio.Setup.Download.WrappedWebException : WebException {
    public WrappedWebException(int errorCode, string message);
    protected WrappedWebException(SerializationInfo info, StreamingContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.VisualStudio.Setup.NoSuitableEngineException : InvalidOperationException {
    public NoSuitableEngineException(string message);
    protected NoSuitableEngineException(SerializationInfo info, StreamingContext context);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NativeIntegerAttribute : Attribute {
    public Boolean[] TransformFlags;
    public NativeIntegerAttribute(Boolean[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
[GeneratedCodeAttribute("Nerdbank.GitVersioning.Tasks", "3.2.31.56335")]
[ExcludeFromCodeCoverageAttribute]
internal static class ThisAssembly : object {
    internal static string AssemblyVersion;
    internal static string AssemblyFileVersion;
    internal static string AssemblyInformationalVersion;
    internal static string AssemblyName;
    internal static string AssemblyTitle;
    internal static string AssemblyConfiguration;
    internal static string GitCommitId;
    internal static string PublicKey;
    internal static string PublicKeyToken;
    internal static bool IsPublicRelease;
    internal static bool IsPrerelease;
    internal static DateTime GitCommitDate;
    internal static string RootNamespace;
    private static ThisAssembly();
}
[GeneratedCodeAttribute("Microsoft.Windows.CsWin32", "0.3.46-beta+dd815b2b9b")]
internal static class Windows.Win32.DownloadPInvoke : object {
    public static UInt32 INTERNET_OPEN_TYPE_PRECONFIG_WITH_NO_AUTOPROXY;
    private static int ENULANGID;
    private static int STRINGLENGTH;
    private static FORMAT_MESSAGE_OPTIONS FormatMessageOptions;
    internal static UInt32 HTTP_QUERY_CONTENT_ENCODING;
    internal static UInt32 HTTP_QUERY_CONTENT_LENGTH;
    internal static UInt32 HTTP_QUERY_LAST_MODIFIED;
    internal static UInt32 HTTP_QUERY_LOCATION;
    internal static UInt32 HTTP_QUERY_RAW_HEADERS_CRLF;
    internal static UInt32 HTTP_QUERY_STATUS_CODE;
    internal static UInt32 INTERNET_FLAG_NO_AUTO_REDIRECT;
    internal static UInt32 INTERNET_OPTION_CONNECT_TIMEOUT;
    internal static UInt32 INTERNET_OPTION_RECEIVE_TIMEOUT;
    internal static UInt32 INTERNET_OPTION_SEND_TIMEOUT;
    [NullableContextAttribute("1")]
public static string GetMessage(WIN32_ERROR errorCode);
    [NullableContextAttribute("1")]
public static string GetMessage(int errorCode);
    [NullableContextAttribute("1")]
public static string GetMessage(UInt32 errorCode);
    [NullableContextAttribute("1")]
private static string FormatMessageForErrorCode(int errorCode, int langID);
    [DefaultDllImportSearchPathsAttribute("2048")]
internal static UInt32 FormatMessage(FORMAT_MESSAGE_OPTIONS dwFlags, Void* lpSource, UInt32 dwMessageId, UInt32 dwLanguageId, PWSTR lpBuffer, UInt32 nSize, SByte** Arguments);
    [DefaultDllImportSearchPathsAttribute("2048")]
internal static BOOL CloseHandle(HANDLE hObject);
    [DefaultDllImportSearchPathsAttribute("2048")]
internal static HWND GetConsoleWindow();
    internal static HRESULT HRESULT_FROM_WIN32(WIN32_ERROR error);
    [DefaultDllImportSearchPathsAttribute("2048")]
internal static BOOL IsOS(OS dwOS);
    [DefaultDllImportSearchPathsAttribute("2048")]
internal static HWND GetAncestor(HWND hwnd, GET_ANCESTOR_FLAGS gaFlags);
    [DefaultDllImportSearchPathsAttribute("2048")]
internal static HWND GetForegroundWindow();
    internal static BOOL HttpQueryInfo(Void* hRequest, UInt32 dwInfoLevel, Void* lpBuffer, UInt32& lpdwBufferLength, UInt32* lpdwIndex);
    [DefaultDllImportSearchPathsAttribute("2048")]
internal static BOOL HttpQueryInfo(Void* hRequest, UInt32 dwInfoLevel, Void* lpBuffer, UInt32* lpdwBufferLength, UInt32* lpdwIndex);
    [DefaultDllImportSearchPathsAttribute("2048")]
internal static BOOL InternetCloseHandle(Void* hInternet);
    internal static BOOL InternetGetLastResponseInfo(UInt32& lpdwError, PWSTR lpszBuffer, UInt32& lpdwBufferLength);
    [DefaultDllImportSearchPathsAttribute("2048")]
internal static BOOL InternetGetLastResponseInfo(UInt32* lpdwError, PWSTR lpszBuffer, UInt32* lpdwBufferLength);
    internal static Void* InternetOpen(string lpszAgent, UInt32 dwAccessType, string lpszProxy, string lpszProxyBypass, UInt32 dwFlags);
    [DefaultDllImportSearchPathsAttribute("2048")]
internal static Void* InternetOpen(PCWSTR lpszAgent, UInt32 dwAccessType, PCWSTR lpszProxy, PCWSTR lpszProxyBypass, UInt32 dwFlags);
    internal static Void* InternetOpenUrl(Void* hInternet, string lpszUrl, string lpszHeaders, UInt32 dwHeadersLength, UInt32 dwFlags, UIntPtr dwContext);
    [DefaultDllImportSearchPathsAttribute("2048")]
internal static Void* InternetOpenUrl(Void* hInternet, PCWSTR lpszUrl, PCWSTR lpszHeaders, UInt32 dwHeadersLength, UInt32 dwFlags, UIntPtr dwContext);
    internal static BOOL InternetReadFile(Void* hFile, Void* lpBuffer, UInt32 dwNumberOfBytesToRead, UInt32& lpdwNumberOfBytesRead);
    [DefaultDllImportSearchPathsAttribute("2048")]
internal static BOOL InternetReadFile(Void* hFile, Void* lpBuffer, UInt32 dwNumberOfBytesToRead, UInt32* lpdwNumberOfBytesRead);
    internal static BOOL InternetSetCookie(string lpszUrl, string lpszCookieName, string lpszCookieData);
    [DefaultDllImportSearchPathsAttribute("2048")]
internal static BOOL InternetSetCookie(PCWSTR lpszUrl, PCWSTR lpszCookieName, PCWSTR lpszCookieData);
    [DefaultDllImportSearchPathsAttribute("2048")]
internal static BOOL InternetSetOption(Void* hInternet, UInt32 dwOption, Void* lpBuffer, UInt32 dwBufferLength);
}
[IsReadOnlyAttribute]
[DebuggerDisplayAttribute("{Value}")]
[GeneratedCodeAttribute("Microsoft.Windows.CsWin32", "0.3.46-beta+dd815b2b9b")]
internal class Windows.Win32.Foundation.BOOL : ValueType {
    internal int Value;
    internal BOOL(int value);
    internal BOOL(bool value);
    public static int op_Implicit(BOOL value);
    public static BOOL op_Explicit(int value);
    public static bool op_Equality(BOOL left, BOOL right);
    public static bool op_Inequality(BOOL left, BOOL right);
    public sealed virtual bool Equals(BOOL other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public virtual string ToString();
    public static bool op_Implicit(BOOL value);
    public static BOOL op_Implicit(bool value);
}
[IsReadOnlyAttribute]
[DebuggerDisplayAttribute("{Value}")]
[GeneratedCodeAttribute("Microsoft.Windows.CsWin32", "0.3.46-beta+dd815b2b9b")]
internal class Windows.Win32.Foundation.HANDLE : ValueType {
    internal IntPtr Value;
    internal static HANDLE Null { get; }
    internal bool IsNull { get; }
    internal HANDLE(IntPtr value);
    internal static HANDLE get_Null();
    internal bool get_IsNull();
    public static IntPtr op_Implicit(HANDLE value);
    public static HANDLE op_Explicit(IntPtr value);
    public static bool op_Equality(HANDLE left, HANDLE right);
    public static bool op_Inequality(HANDLE left, HANDLE right);
    public sealed virtual bool Equals(HANDLE other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public virtual string ToString();
}
[IsReadOnlyAttribute]
[DebuggerDisplayAttribute("{Value}")]
[GeneratedCodeAttribute("Microsoft.Windows.CsWin32", "0.3.46-beta+dd815b2b9b")]
internal class Windows.Win32.Foundation.HRESULT : ValueType {
    internal int Value;
    [DebuggerBrowsableAttribute("0")]
internal bool Succeeded { get; }
    [DebuggerBrowsableAttribute("0")]
internal bool Failed { get; }
    internal HRESULT(int value);
    public static int op_Implicit(HRESULT value);
    public static HRESULT op_Explicit(int value);
    public static bool op_Equality(HRESULT left, HRESULT right);
    public static bool op_Inequality(HRESULT left, HRESULT right);
    public sealed virtual bool Equals(HRESULT other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public virtual string ToString();
    public static UInt32 op_Implicit(HRESULT value);
    public static HRESULT op_Explicit(UInt32 value);
    internal bool get_Succeeded();
    internal bool get_Failed();
    internal HRESULT ThrowOnFailure(IntPtr errorInfo);
    internal string ToString(string format, IFormatProvider formatProvider);
}
[IsReadOnlyAttribute]
[DebuggerDisplayAttribute("{Value}")]
[GeneratedCodeAttribute("Microsoft.Windows.CsWin32", "0.3.46-beta+dd815b2b9b")]
internal class Windows.Win32.Foundation.HWND : ValueType {
    internal IntPtr Value;
    internal static HWND Null { get; }
    internal bool IsNull { get; }
    internal HWND(IntPtr value);
    internal static HWND get_Null();
    internal bool get_IsNull();
    public static IntPtr op_Implicit(HWND value);
    public static HWND op_Explicit(IntPtr value);
    public static bool op_Equality(HWND left, HWND right);
    public static bool op_Inequality(HWND left, HWND right);
    public sealed virtual bool Equals(HWND other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public virtual string ToString();
    public static HANDLE op_Implicit(HWND value);
}
[IsReadOnlyAttribute]
[DebuggerDisplayAttribute("{DebuggerDisplay}")]
internal class Windows.Win32.Foundation.PCWSTR : ValueType {
    internal Char* Value;
    internal int Length { get; }
    private string DebuggerDisplay { get; }
    internal PCWSTR(Char* value);
    public static Char* op_Explicit(PCWSTR value);
    public static PCWSTR op_Implicit(Char* value);
    public sealed virtual bool Equals(PCWSTR other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    internal int get_Length();
    public virtual string ToString();
    internal ReadOnlySpan`1<char> AsSpan();
    private string get_DebuggerDisplay();
}
[IsReadOnlyAttribute]
[DebuggerDisplayAttribute("{Value}")]
[GeneratedCodeAttribute("Microsoft.Windows.CsWin32", "0.3.46-beta+dd815b2b9b")]
internal class Windows.Win32.Foundation.PWSTR : ValueType {
    internal Char* Value;
    internal int Length { get; }
    private string DebuggerDisplay { get; }
    internal PWSTR(Char* value);
    public static Char* op_Implicit(PWSTR value);
    public static PWSTR op_Implicit(Char* value);
    public static bool op_Equality(PWSTR left, PWSTR right);
    public static bool op_Inequality(PWSTR left, PWSTR right);
    public sealed virtual bool Equals(PWSTR other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public virtual string ToString();
    public static PCWSTR op_Implicit(PWSTR value);
    internal int get_Length();
    internal Span`1<char> AsSpan();
    private string get_DebuggerDisplay();
}
[GeneratedCodeAttribute("Microsoft.Windows.CsWin32", "0.3.46-beta+dd815b2b9b")]
internal enum Windows.Win32.Foundation.WIN32_ERROR : Enum {
    public UInt32 value__;
    public static WIN32_ERROR NO_ERROR;
    public static WIN32_ERROR ERROR_SUCCESS;
    public static WIN32_ERROR ERROR_INVALID_FUNCTION;
    public static WIN32_ERROR ERROR_FILE_NOT_FOUND;
    public static WIN32_ERROR ERROR_PATH_NOT_FOUND;
    public static WIN32_ERROR ERROR_TOO_MANY_OPEN_FILES;
    public static WIN32_ERROR ERROR_ACCESS_DENIED;
    public static WIN32_ERROR ERROR_INVALID_HANDLE;
    public static WIN32_ERROR ERROR_ARENA_TRASHED;
    public static WIN32_ERROR ERROR_NOT_ENOUGH_MEMORY;
    public static WIN32_ERROR ERROR_INVALID_BLOCK;
    public static WIN32_ERROR ERROR_BAD_ENVIRONMENT;
    public static WIN32_ERROR ERROR_BAD_FORMAT;
    public static WIN32_ERROR ERROR_INVALID_ACCESS;
    public static WIN32_ERROR ERROR_INVALID_DATA;
    public static WIN32_ERROR ERROR_OUTOFMEMORY;
    public static WIN32_ERROR ERROR_INVALID_DRIVE;
    public static WIN32_ERROR ERROR_CURRENT_DIRECTORY;
    public static WIN32_ERROR ERROR_NOT_SAME_DEVICE;
    public static WIN32_ERROR ERROR_NO_MORE_FILES;
    public static WIN32_ERROR ERROR_WRITE_PROTECT;
    public static WIN32_ERROR ERROR_BAD_UNIT;
    public static WIN32_ERROR ERROR_NOT_READY;
    public static WIN32_ERROR ERROR_BAD_COMMAND;
    public static WIN32_ERROR ERROR_CRC;
    public static WIN32_ERROR ERROR_BAD_LENGTH;
    public static WIN32_ERROR ERROR_SEEK;
    public static WIN32_ERROR ERROR_NOT_DOS_DISK;
    public static WIN32_ERROR ERROR_SECTOR_NOT_FOUND;
    public static WIN32_ERROR ERROR_OUT_OF_PAPER;
    public static WIN32_ERROR ERROR_WRITE_FAULT;
    public static WIN32_ERROR ERROR_READ_FAULT;
    public static WIN32_ERROR ERROR_GEN_FAILURE;
    public static WIN32_ERROR ERROR_SHARING_VIOLATION;
    public static WIN32_ERROR ERROR_LOCK_VIOLATION;
    public static WIN32_ERROR ERROR_WRONG_DISK;
    public static WIN32_ERROR ERROR_SHARING_BUFFER_EXCEEDED;
    public static WIN32_ERROR ERROR_HANDLE_EOF;
    public static WIN32_ERROR ERROR_HANDLE_DISK_FULL;
    public static WIN32_ERROR ERROR_NOT_SUPPORTED;
    public static WIN32_ERROR ERROR_REM_NOT_LIST;
    public static WIN32_ERROR ERROR_DUP_NAME;
    public static WIN32_ERROR ERROR_BAD_NETPATH;
    public static WIN32_ERROR ERROR_NETWORK_BUSY;
    public static WIN32_ERROR ERROR_DEV_NOT_EXIST;
    public static WIN32_ERROR ERROR_TOO_MANY_CMDS;
    public static WIN32_ERROR ERROR_ADAP_HDW_ERR;
    public static WIN32_ERROR ERROR_BAD_NET_RESP;
    public static WIN32_ERROR ERROR_UNEXP_NET_ERR;
    public static WIN32_ERROR ERROR_BAD_REM_ADAP;
    public static WIN32_ERROR ERROR_PRINTQ_FULL;
    public static WIN32_ERROR ERROR_NO_SPOOL_SPACE;
    public static WIN32_ERROR ERROR_PRINT_CANCELLED;
    public static WIN32_ERROR ERROR_NETNAME_DELETED;
    public static WIN32_ERROR ERROR_NETWORK_ACCESS_DENIED;
    public static WIN32_ERROR ERROR_BAD_DEV_TYPE;
    public static WIN32_ERROR ERROR_BAD_NET_NAME;
    public static WIN32_ERROR ERROR_TOO_MANY_NAMES;
    public static WIN32_ERROR ERROR_TOO_MANY_SESS;
    public static WIN32_ERROR ERROR_SHARING_PAUSED;
    public static WIN32_ERROR ERROR_REQ_NOT_ACCEP;
    public static WIN32_ERROR ERROR_REDIR_PAUSED;
    public static WIN32_ERROR ERROR_FILE_EXISTS;
    public static WIN32_ERROR ERROR_CANNOT_MAKE;
    public static WIN32_ERROR ERROR_FAIL_I24;
    public static WIN32_ERROR ERROR_OUT_OF_STRUCTURES;
    public static WIN32_ERROR ERROR_ALREADY_ASSIGNED;
    public static WIN32_ERROR ERROR_INVALID_PASSWORD;
    public static WIN32_ERROR ERROR_INVALID_PARAMETER;
    public static WIN32_ERROR ERROR_NET_WRITE_FAULT;
    public static WIN32_ERROR ERROR_NO_PROC_SLOTS;
    public static WIN32_ERROR ERROR_TOO_MANY_SEMAPHORES;
    public static WIN32_ERROR ERROR_EXCL_SEM_ALREADY_OWNED;
    public static WIN32_ERROR ERROR_SEM_IS_SET;
    public static WIN32_ERROR ERROR_TOO_MANY_SEM_REQUESTS;
    public static WIN32_ERROR ERROR_INVALID_AT_INTERRUPT_TIME;
    public static WIN32_ERROR ERROR_SEM_OWNER_DIED;
    public static WIN32_ERROR ERROR_SEM_USER_LIMIT;
    public static WIN32_ERROR ERROR_DISK_CHANGE;
    public static WIN32_ERROR ERROR_DRIVE_LOCKED;
    public static WIN32_ERROR ERROR_BROKEN_PIPE;
    public static WIN32_ERROR ERROR_OPEN_FAILED;
    public static WIN32_ERROR ERROR_BUFFER_OVERFLOW;
    public static WIN32_ERROR ERROR_DISK_FULL;
    public static WIN32_ERROR ERROR_NO_MORE_SEARCH_HANDLES;
    public static WIN32_ERROR ERROR_INVALID_TARGET_HANDLE;
    public static WIN32_ERROR ERROR_INVALID_CATEGORY;
    public static WIN32_ERROR ERROR_INVALID_VERIFY_SWITCH;
    public static WIN32_ERROR ERROR_BAD_DRIVER_LEVEL;
    public static WIN32_ERROR ERROR_CALL_NOT_IMPLEMENTED;
    public static WIN32_ERROR ERROR_SEM_TIMEOUT;
    public static WIN32_ERROR ERROR_INSUFFICIENT_BUFFER;
    public static WIN32_ERROR ERROR_INVALID_NAME;
    public static WIN32_ERROR ERROR_INVALID_LEVEL;
    public static WIN32_ERROR ERROR_NO_VOLUME_LABEL;
    public static WIN32_ERROR ERROR_MOD_NOT_FOUND;
    public static WIN32_ERROR ERROR_PROC_NOT_FOUND;
    public static WIN32_ERROR ERROR_WAIT_NO_CHILDREN;
    public static WIN32_ERROR ERROR_CHILD_NOT_COMPLETE;
    public static WIN32_ERROR ERROR_DIRECT_ACCESS_HANDLE;
    public static WIN32_ERROR ERROR_NEGATIVE_SEEK;
    public static WIN32_ERROR ERROR_SEEK_ON_DEVICE;
    public static WIN32_ERROR ERROR_IS_JOIN_TARGET;
    public static WIN32_ERROR ERROR_IS_JOINED;
    public static WIN32_ERROR ERROR_IS_SUBSTED;
    public static WIN32_ERROR ERROR_NOT_JOINED;
    public static WIN32_ERROR ERROR_NOT_SUBSTED;
    public static WIN32_ERROR ERROR_JOIN_TO_JOIN;
    public static WIN32_ERROR ERROR_SUBST_TO_SUBST;
    public static WIN32_ERROR ERROR_JOIN_TO_SUBST;
    public static WIN32_ERROR ERROR_SUBST_TO_JOIN;
    public static WIN32_ERROR ERROR_BUSY_DRIVE;
    public static WIN32_ERROR ERROR_SAME_DRIVE;
    public static WIN32_ERROR ERROR_DIR_NOT_ROOT;
    public static WIN32_ERROR ERROR_DIR_NOT_EMPTY;
    public static WIN32_ERROR ERROR_IS_SUBST_PATH;
    public static WIN32_ERROR ERROR_IS_JOIN_PATH;
    public static WIN32_ERROR ERROR_PATH_BUSY;
    public static WIN32_ERROR ERROR_IS_SUBST_TARGET;
    public static WIN32_ERROR ERROR_SYSTEM_TRACE;
    public static WIN32_ERROR ERROR_INVALID_EVENT_COUNT;
    public static WIN32_ERROR ERROR_TOO_MANY_MUXWAITERS;
    public static WIN32_ERROR ERROR_INVALID_LIST_FORMAT;
    public static WIN32_ERROR ERROR_LABEL_TOO_LONG;
    public static WIN32_ERROR ERROR_TOO_MANY_TCBS;
    public static WIN32_ERROR ERROR_SIGNAL_REFUSED;
    public static WIN32_ERROR ERROR_DISCARDED;
    public static WIN32_ERROR ERROR_NOT_LOCKED;
    public static WIN32_ERROR ERROR_BAD_THREADID_ADDR;
    public static WIN32_ERROR ERROR_BAD_ARGUMENTS;
    public static WIN32_ERROR ERROR_BAD_PATHNAME;
    public static WIN32_ERROR ERROR_SIGNAL_PENDING;
    public static WIN32_ERROR ERROR_MAX_THRDS_REACHED;
    public static WIN32_ERROR ERROR_LOCK_FAILED;
    public static WIN32_ERROR ERROR_BUSY;
    public static WIN32_ERROR ERROR_DEVICE_SUPPORT_IN_PROGRESS;
    public static WIN32_ERROR ERROR_CANCEL_VIOLATION;
    public static WIN32_ERROR ERROR_ATOMIC_LOCKS_NOT_SUPPORTED;
    public static WIN32_ERROR ERROR_INVALID_SEGMENT_NUMBER;
    public static WIN32_ERROR ERROR_INVALID_ORDINAL;
    public static WIN32_ERROR ERROR_ALREADY_EXISTS;
    public static WIN32_ERROR ERROR_INVALID_FLAG_NUMBER;
    public static WIN32_ERROR ERROR_SEM_NOT_FOUND;
    public static WIN32_ERROR ERROR_INVALID_STARTING_CODESEG;
    public static WIN32_ERROR ERROR_INVALID_STACKSEG;
    public static WIN32_ERROR ERROR_INVALID_MODULETYPE;
    public static WIN32_ERROR ERROR_INVALID_EXE_SIGNATURE;
    public static WIN32_ERROR ERROR_EXE_MARKED_INVALID;
    public static WIN32_ERROR ERROR_BAD_EXE_FORMAT;
    public static WIN32_ERROR ERROR_ITERATED_DATA_EXCEEDS_64k;
    public static WIN32_ERROR ERROR_INVALID_MINALLOCSIZE;
    public static WIN32_ERROR ERROR_DYNLINK_FROM_INVALID_RING;
    public static WIN32_ERROR ERROR_IOPL_NOT_ENABLED;
    public static WIN32_ERROR ERROR_INVALID_SEGDPL;
    public static WIN32_ERROR ERROR_AUTODATASEG_EXCEEDS_64k;
    public static WIN32_ERROR ERROR_RING2SEG_MUST_BE_MOVABLE;
    public static WIN32_ERROR ERROR_RELOC_CHAIN_XEEDS_SEGLIM;
    public static WIN32_ERROR ERROR_INFLOOP_IN_RELOC_CHAIN;
    public static WIN32_ERROR ERROR_ENVVAR_NOT_FOUND;
    public static WIN32_ERROR ERROR_NO_SIGNAL_SENT;
    public static WIN32_ERROR ERROR_FILENAME_EXCED_RANGE;
    public static WIN32_ERROR ERROR_RING2_STACK_IN_USE;
    public static WIN32_ERROR ERROR_META_EXPANSION_TOO_LONG;
    public static WIN32_ERROR ERROR_INVALID_SIGNAL_NUMBER;
    public static WIN32_ERROR ERROR_THREAD_1_INACTIVE;
    public static WIN32_ERROR ERROR_LOCKED;
    public static WIN32_ERROR ERROR_TOO_MANY_MODULES;
    public static WIN32_ERROR ERROR_NESTING_NOT_ALLOWED;
    public static WIN32_ERROR ERROR_EXE_MACHINE_TYPE_MISMATCH;
    public static WIN32_ERROR ERROR_EXE_CANNOT_MODIFY_SIGNED_BINARY;
    public static WIN32_ERROR ERROR_EXE_CANNOT_MODIFY_STRONG_SIGNED_BINARY;
    public static WIN32_ERROR ERROR_FILE_CHECKED_OUT;
    public static WIN32_ERROR ERROR_CHECKOUT_REQUIRED;
    public static WIN32_ERROR ERROR_BAD_FILE_TYPE;
    public static WIN32_ERROR ERROR_FILE_TOO_LARGE;
    public static WIN32_ERROR ERROR_FORMS_AUTH_REQUIRED;
    public static WIN32_ERROR ERROR_VIRUS_INFECTED;
    public static WIN32_ERROR ERROR_VIRUS_DELETED;
    public static WIN32_ERROR ERROR_PIPE_LOCAL;
    public static WIN32_ERROR ERROR_BAD_PIPE;
    public static WIN32_ERROR ERROR_PIPE_BUSY;
    public static WIN32_ERROR ERROR_NO_DATA;
    public static WIN32_ERROR ERROR_PIPE_NOT_CONNECTED;
    public static WIN32_ERROR ERROR_MORE_DATA;
    public static WIN32_ERROR ERROR_NO_WORK_DONE;
    public static WIN32_ERROR ERROR_VC_DISCONNECTED;
    public static WIN32_ERROR ERROR_INVALID_EA_NAME;
    public static WIN32_ERROR ERROR_EA_LIST_INCONSISTENT;
    public static WIN32_ERROR ERROR_NO_MORE_ITEMS;
    public static WIN32_ERROR ERROR_CANNOT_COPY;
    public static WIN32_ERROR ERROR_DIRECTORY;
    public static WIN32_ERROR ERROR_EAS_DIDNT_FIT;
    public static WIN32_ERROR ERROR_EA_FILE_CORRUPT;
    public static WIN32_ERROR ERROR_EA_TABLE_FULL;
    public static WIN32_ERROR ERROR_INVALID_EA_HANDLE;
    public static WIN32_ERROR ERROR_EAS_NOT_SUPPORTED;
    public static WIN32_ERROR ERROR_NOT_OWNER;
    public static WIN32_ERROR ERROR_TOO_MANY_POSTS;
    public static WIN32_ERROR ERROR_PARTIAL_COPY;
    public static WIN32_ERROR ERROR_OPLOCK_NOT_GRANTED;
    public static WIN32_ERROR ERROR_INVALID_OPLOCK_PROTOCOL;
    public static WIN32_ERROR ERROR_DISK_TOO_FRAGMENTED;
    public static WIN32_ERROR ERROR_DELETE_PENDING;
    public static WIN32_ERROR ERROR_INCOMPATIBLE_WITH_GLOBAL_SHORT_NAME_REGISTRY_SETTING;
    public static WIN32_ERROR ERROR_SHORT_NAMES_NOT_ENABLED_ON_VOLUME;
    public static WIN32_ERROR ERROR_SECURITY_STREAM_IS_INCONSISTENT;
    public static WIN32_ERROR ERROR_INVALID_LOCK_RANGE;
    public static WIN32_ERROR ERROR_IMAGE_SUBSYSTEM_NOT_PRESENT;
    public static WIN32_ERROR ERROR_NOTIFICATION_GUID_ALREADY_DEFINED;
    public static WIN32_ERROR ERROR_INVALID_EXCEPTION_HANDLER;
    public static WIN32_ERROR ERROR_DUPLICATE_PRIVILEGES;
    public static WIN32_ERROR ERROR_NO_RANGES_PROCESSED;
    public static WIN32_ERROR ERROR_NOT_ALLOWED_ON_SYSTEM_FILE;
    public static WIN32_ERROR ERROR_DISK_RESOURCES_EXHAUSTED;
    public static WIN32_ERROR ERROR_INVALID_TOKEN;
    public static WIN32_ERROR ERROR_DEVICE_FEATURE_NOT_SUPPORTED;
    public static WIN32_ERROR ERROR_MR_MID_NOT_FOUND;
    public static WIN32_ERROR ERROR_SCOPE_NOT_FOUND;
    public static WIN32_ERROR ERROR_UNDEFINED_SCOPE;
    public static WIN32_ERROR ERROR_INVALID_CAP;
    public static WIN32_ERROR ERROR_DEVICE_UNREACHABLE;
    public static WIN32_ERROR ERROR_DEVICE_NO_RESOURCES;
    public static WIN32_ERROR ERROR_DATA_CHECKSUM_ERROR;
    public static WIN32_ERROR ERROR_INTERMIXED_KERNEL_EA_OPERATION;
    public static WIN32_ERROR ERROR_FILE_LEVEL_TRIM_NOT_SUPPORTED;
    public static WIN32_ERROR ERROR_OFFSET_ALIGNMENT_VIOLATION;
    public static WIN32_ERROR ERROR_INVALID_FIELD_IN_PARAMETER_LIST;
    public static WIN32_ERROR ERROR_OPERATION_IN_PROGRESS;
    public static WIN32_ERROR ERROR_BAD_DEVICE_PATH;
    public static WIN32_ERROR ERROR_TOO_MANY_DESCRIPTORS;
    public static WIN32_ERROR ERROR_SCRUB_DATA_DISABLED;
    public static WIN32_ERROR ERROR_NOT_REDUNDANT_STORAGE;
    public static WIN32_ERROR ERROR_RESIDENT_FILE_NOT_SUPPORTED;
    public static WIN32_ERROR ERROR_COMPRESSED_FILE_NOT_SUPPORTED;
    public static WIN32_ERROR ERROR_DIRECTORY_NOT_SUPPORTED;
    public static WIN32_ERROR ERROR_NOT_READ_FROM_COPY;
    public static WIN32_ERROR ERROR_FT_WRITE_FAILURE;
    public static WIN32_ERROR ERROR_FT_DI_SCAN_REQUIRED;
    public static WIN32_ERROR ERROR_INVALID_KERNEL_INFO_VERSION;
    public static WIN32_ERROR ERROR_INVALID_PEP_INFO_VERSION;
    public static WIN32_ERROR ERROR_OBJECT_NOT_EXTERNALLY_BACKED;
    public static WIN32_ERROR ERROR_EXTERNAL_BACKING_PROVIDER_UNKNOWN;
    public static WIN32_ERROR ERROR_COMPRESSION_NOT_BENEFICIAL;
    public static WIN32_ERROR ERROR_STORAGE_TOPOLOGY_ID_MISMATCH;
    public static WIN32_ERROR ERROR_BLOCKED_BY_PARENTAL_CONTROLS;
    public static WIN32_ERROR ERROR_BLOCK_TOO_MANY_REFERENCES;
    public static WIN32_ERROR ERROR_MARKED_TO_DISALLOW_WRITES;
    public static WIN32_ERROR ERROR_ENCLAVE_FAILURE;
    public static WIN32_ERROR ERROR_FAIL_NOACTION_REBOOT;
    public static WIN32_ERROR ERROR_FAIL_SHUTDOWN;
    public static WIN32_ERROR ERROR_FAIL_RESTART;
    public static WIN32_ERROR ERROR_MAX_SESSIONS_REACHED;
    public static WIN32_ERROR ERROR_NETWORK_ACCESS_DENIED_EDP;
    public static WIN32_ERROR ERROR_DEVICE_HINT_NAME_BUFFER_TOO_SMALL;
    public static WIN32_ERROR ERROR_EDP_POLICY_DENIES_OPERATION;
    public static WIN32_ERROR ERROR_EDP_DPL_POLICY_CANT_BE_SATISFIED;
    public static WIN32_ERROR ERROR_CLOUD_FILE_SYNC_ROOT_METADATA_CORRUPT;
    public static WIN32_ERROR ERROR_DEVICE_IN_MAINTENANCE;
    public static WIN32_ERROR ERROR_NOT_SUPPORTED_ON_DAX;
    public static WIN32_ERROR ERROR_DAX_MAPPING_EXISTS;
    public static WIN32_ERROR ERROR_CLOUD_FILE_PROVIDER_NOT_RUNNING;
    public static WIN32_ERROR ERROR_CLOUD_FILE_METADATA_CORRUPT;
    public static WIN32_ERROR ERROR_CLOUD_FILE_METADATA_TOO_LARGE;
    public static WIN32_ERROR ERROR_CLOUD_FILE_PROPERTY_BLOB_TOO_LARGE;
    public static WIN32_ERROR ERROR_CLOUD_FILE_PROPERTY_BLOB_CHECKSUM_MISMATCH;
    public static WIN32_ERROR ERROR_CHILD_PROCESS_BLOCKED;
    public static WIN32_ERROR ERROR_STORAGE_LOST_DATA_PERSISTENCE;
    public static WIN32_ERROR ERROR_FILE_SYSTEM_VIRTUALIZATION_UNAVAILABLE;
    public static WIN32_ERROR ERROR_FILE_SYSTEM_VIRTUALIZATION_METADATA_CORRUPT;
    public static WIN32_ERROR ERROR_FILE_SYSTEM_VIRTUALIZATION_BUSY;
    public static WIN32_ERROR ERROR_FILE_SYSTEM_VIRTUALIZATION_PROVIDER_UNKNOWN;
    public static WIN32_ERROR ERROR_GDI_HANDLE_LEAK;
    public static WIN32_ERROR ERROR_CLOUD_FILE_TOO_MANY_PROPERTY_BLOBS;
    public static WIN32_ERROR ERROR_CLOUD_FILE_PROPERTY_VERSION_NOT_SUPPORTED;
    public static WIN32_ERROR ERROR_NOT_A_CLOUD_FILE;
    public static WIN32_ERROR ERROR_CLOUD_FILE_NOT_IN_SYNC;
    public static WIN32_ERROR ERROR_CLOUD_FILE_ALREADY_CONNECTED;
    public static WIN32_ERROR ERROR_CLOUD_FILE_NOT_SUPPORTED;
    public static WIN32_ERROR ERROR_CLOUD_FILE_INVALID_REQUEST;
    public static WIN32_ERROR ERROR_CLOUD_FILE_READ_ONLY_VOLUME;
    public static WIN32_ERROR ERROR_CLOUD_FILE_CONNECTED_PROVIDER_ONLY;
    public static WIN32_ERROR ERROR_CLOUD_FILE_VALIDATION_FAILED;
    public static WIN32_ERROR ERROR_SMB1_NOT_AVAILABLE;
    public static WIN32_ERROR ERROR_FILE_SYSTEM_VIRTUALIZATION_INVALID_OPERATION;
    public static WIN32_ERROR ERROR_CLOUD_FILE_AUTHENTICATION_FAILED;
    public static WIN32_ERROR ERROR_CLOUD_FILE_INSUFFICIENT_RESOURCES;
    public static WIN32_ERROR ERROR_CLOUD_FILE_NETWORK_UNAVAILABLE;
    public static WIN32_ERROR ERROR_CLOUD_FILE_UNSUCCESSFUL;
    public static WIN32_ERROR ERROR_CLOUD_FILE_NOT_UNDER_SYNC_ROOT;
    public static WIN32_ERROR ERROR_CLOUD_FILE_IN_USE;
    public static WIN32_ERROR ERROR_CLOUD_FILE_PINNED;
    public static WIN32_ERROR ERROR_CLOUD_FILE_REQUEST_ABORTED;
    public static WIN32_ERROR ERROR_CLOUD_FILE_PROPERTY_CORRUPT;
    public static WIN32_ERROR ERROR_CLOUD_FILE_ACCESS_DENIED;
    public static WIN32_ERROR ERROR_CLOUD_FILE_INCOMPATIBLE_HARDLINKS;
    public static WIN32_ERROR ERROR_CLOUD_FILE_PROPERTY_LOCK_CONFLICT;
    public static WIN32_ERROR ERROR_CLOUD_FILE_REQUEST_CANCELED;
    public static WIN32_ERROR ERROR_EXTERNAL_SYSKEY_NOT_SUPPORTED;
    public static WIN32_ERROR ERROR_THREAD_MODE_ALREADY_BACKGROUND;
    public static WIN32_ERROR ERROR_THREAD_MODE_NOT_BACKGROUND;
    public static WIN32_ERROR ERROR_PROCESS_MODE_ALREADY_BACKGROUND;
    public static WIN32_ERROR ERROR_PROCESS_MODE_NOT_BACKGROUND;
    public static WIN32_ERROR ERROR_CLOUD_FILE_PROVIDER_TERMINATED;
    public static WIN32_ERROR ERROR_NOT_A_CLOUD_SYNC_ROOT;
    public static WIN32_ERROR ERROR_FILE_PROTECTED_UNDER_DPL;
    public static WIN32_ERROR ERROR_VOLUME_NOT_CLUSTER_ALIGNED;
    public static WIN32_ERROR ERROR_NO_PHYSICALLY_ALIGNED_FREE_SPACE_FOUND;
    public static WIN32_ERROR ERROR_APPX_FILE_NOT_ENCRYPTED;
    public static WIN32_ERROR ERROR_RWRAW_ENCRYPTED_FILE_NOT_ENCRYPTED;
    public static WIN32_ERROR ERROR_RWRAW_ENCRYPTED_INVALID_EDATAINFO_FILEOFFSET;
    public static WIN32_ERROR ERROR_RWRAW_ENCRYPTED_INVALID_EDATAINFO_FILERANGE;
    public static WIN32_ERROR ERROR_RWRAW_ENCRYPTED_INVALID_EDATAINFO_PARAMETER;
    public static WIN32_ERROR ERROR_LINUX_SUBSYSTEM_NOT_PRESENT;
    public static WIN32_ERROR ERROR_FT_READ_FAILURE;
    public static WIN32_ERROR ERROR_STORAGE_RESERVE_ID_INVALID;
    public static WIN32_ERROR ERROR_STORAGE_RESERVE_DOES_NOT_EXIST;
    public static WIN32_ERROR ERROR_STORAGE_RESERVE_ALREADY_EXISTS;
    public static WIN32_ERROR ERROR_STORAGE_RESERVE_NOT_EMPTY;
    public static WIN32_ERROR ERROR_NOT_A_DAX_VOLUME;
    public static WIN32_ERROR ERROR_NOT_DAX_MAPPABLE;
    public static WIN32_ERROR ERROR_TIME_SENSITIVE_THREAD;
    public static WIN32_ERROR ERROR_DPL_NOT_SUPPORTED_FOR_USER;
    public static WIN32_ERROR ERROR_CASE_DIFFERING_NAMES_IN_DIR;
    public static WIN32_ERROR ERROR_FILE_NOT_SUPPORTED;
    public static WIN32_ERROR ERROR_CLOUD_FILE_REQUEST_TIMEOUT;
    public static WIN32_ERROR ERROR_NO_TASK_QUEUE;
    public static WIN32_ERROR ERROR_SRC_SRV_DLL_LOAD_FAILED;
    public static WIN32_ERROR ERROR_NOT_SUPPORTED_WITH_BTT;
    public static WIN32_ERROR ERROR_ENCRYPTION_DISABLED;
    public static WIN32_ERROR ERROR_ENCRYPTING_METADATA_DISALLOWED;
    public static WIN32_ERROR ERROR_CANT_CLEAR_ENCRYPTION_FLAG;
    public static WIN32_ERROR ERROR_NO_SUCH_DEVICE;
    public static WIN32_ERROR ERROR_CLOUD_FILE_DEHYDRATION_DISALLOWED;
    public static WIN32_ERROR ERROR_FILE_SNAP_IN_PROGRESS;
    public static WIN32_ERROR ERROR_FILE_SNAP_USER_SECTION_NOT_SUPPORTED;
    public static WIN32_ERROR ERROR_FILE_SNAP_MODIFY_NOT_SUPPORTED;
    public static WIN32_ERROR ERROR_FILE_SNAP_IO_NOT_COORDINATED;
    public static WIN32_ERROR ERROR_FILE_SNAP_UNEXPECTED_ERROR;
    public static WIN32_ERROR ERROR_FILE_SNAP_INVALID_PARAMETER;
    public static WIN32_ERROR ERROR_UNSATISFIED_DEPENDENCIES;
    public static WIN32_ERROR ERROR_CASE_SENSITIVE_PATH;
    public static WIN32_ERROR ERROR_UNEXPECTED_NTCACHEMANAGER_ERROR;
    public static WIN32_ERROR ERROR_LINUX_SUBSYSTEM_UPDATE_REQUIRED;
    public static WIN32_ERROR ERROR_DLP_POLICY_WARNS_AGAINST_OPERATION;
    public static WIN32_ERROR ERROR_DLP_POLICY_DENIES_OPERATION;
    public static WIN32_ERROR ERROR_SECURITY_DENIES_OPERATION;
    public static WIN32_ERROR ERROR_UNTRUSTED_MOUNT_POINT;
    public static WIN32_ERROR ERROR_DLP_POLICY_SILENTLY_FAIL;
    public static WIN32_ERROR ERROR_CAPAUTHZ_NOT_DEVUNLOCKED;
    public static WIN32_ERROR ERROR_CAPAUTHZ_CHANGE_TYPE;
    public static WIN32_ERROR ERROR_CAPAUTHZ_NOT_PROVISIONED;
    public static WIN32_ERROR ERROR_CAPAUTHZ_NOT_AUTHORIZED;
    public static WIN32_ERROR ERROR_CAPAUTHZ_NO_POLICY;
    public static WIN32_ERROR ERROR_CAPAUTHZ_DB_CORRUPTED;
    public static WIN32_ERROR ERROR_CAPAUTHZ_SCCD_INVALID_CATALOG;
    public static WIN32_ERROR ERROR_CAPAUTHZ_SCCD_NO_AUTH_ENTITY;
    public static WIN32_ERROR ERROR_CAPAUTHZ_SCCD_PARSE_ERROR;
    public static WIN32_ERROR ERROR_CAPAUTHZ_SCCD_DEV_MODE_REQUIRED;
    public static WIN32_ERROR ERROR_CAPAUTHZ_SCCD_NO_CAPABILITY_MATCH;
    public static WIN32_ERROR ERROR_CIMFS_IMAGE_CORRUPT;
    public static WIN32_ERROR ERROR_CIMFS_IMAGE_VERSION_NOT_SUPPORTED;
    public static WIN32_ERROR ERROR_STORAGE_STACK_ACCESS_DENIED;
    public static WIN32_ERROR ERROR_INSUFFICIENT_VIRTUAL_ADDR_RESOURCES;
    public static WIN32_ERROR ERROR_INDEX_OUT_OF_BOUNDS;
    public static WIN32_ERROR ERROR_CLOUD_FILE_US_MESSAGE_TIMEOUT;
    public static WIN32_ERROR ERROR_PNP_QUERY_REMOVE_DEVICE_TIMEOUT;
    public static WIN32_ERROR ERROR_PNP_QUERY_REMOVE_RELATED_DEVICE_TIMEOUT;
    public static WIN32_ERROR ERROR_PNP_QUERY_REMOVE_UNRELATED_DEVICE_TIMEOUT;
    public static WIN32_ERROR ERROR_DEVICE_HARDWARE_ERROR;
    public static WIN32_ERROR ERROR_INVALID_ADDRESS;
    public static WIN32_ERROR ERROR_HAS_SYSTEM_CRITICAL_FILES;
    public static WIN32_ERROR ERROR_ENCRYPTED_FILE_NOT_SUPPORTED;
    public static WIN32_ERROR ERROR_SPARSE_FILE_NOT_SUPPORTED;
    public static WIN32_ERROR ERROR_PAGEFILE_NOT_SUPPORTED;
    public static WIN32_ERROR ERROR_VOLUME_NOT_SUPPORTED;
    public static WIN32_ERROR ERROR_NOT_SUPPORTED_WITH_BYPASSIO;
    public static WIN32_ERROR ERROR_NO_BYPASSIO_DRIVER_SUPPORT;
    public static WIN32_ERROR ERROR_NOT_SUPPORTED_WITH_ENCRYPTION;
    public static WIN32_ERROR ERROR_NOT_SUPPORTED_WITH_COMPRESSION;
    public static WIN32_ERROR ERROR_NOT_SUPPORTED_WITH_REPLICATION;
    public static WIN32_ERROR ERROR_NOT_SUPPORTED_WITH_DEDUPLICATION;
    public static WIN32_ERROR ERROR_NOT_SUPPORTED_WITH_AUDITING;
    public static WIN32_ERROR ERROR_USER_PROFILE_LOAD;
    public static WIN32_ERROR ERROR_SESSION_KEY_TOO_SHORT;
    public static WIN32_ERROR ERROR_ACCESS_DENIED_APPDATA;
    public static WIN32_ERROR ERROR_NOT_SUPPORTED_WITH_MONITORING;
    public static WIN32_ERROR ERROR_NOT_SUPPORTED_WITH_SNAPSHOT;
    public static WIN32_ERROR ERROR_NOT_SUPPORTED_WITH_VIRTUALIZATION;
    public static WIN32_ERROR ERROR_BYPASSIO_FLT_NOT_SUPPORTED;
    public static WIN32_ERROR ERROR_DEVICE_RESET_REQUIRED;
    public static WIN32_ERROR ERROR_VOLUME_WRITE_ACCESS_DENIED;
    public static WIN32_ERROR ERROR_NOT_SUPPORTED_WITH_CACHED_HANDLE;
    public static WIN32_ERROR ERROR_FS_METADATA_INCONSISTENT;
    public static WIN32_ERROR ERROR_BLOCK_WEAK_REFERENCE_INVALID;
    public static WIN32_ERROR ERROR_BLOCK_SOURCE_WEAK_REFERENCE_INVALID;
    public static WIN32_ERROR ERROR_BLOCK_TARGET_WEAK_REFERENCE_INVALID;
    public static WIN32_ERROR ERROR_BLOCK_SHARED;
    public static WIN32_ERROR ERROR_ARITHMETIC_OVERFLOW;
    public static WIN32_ERROR ERROR_PIPE_CONNECTED;
    public static WIN32_ERROR ERROR_PIPE_LISTENING;
    public static WIN32_ERROR ERROR_VERIFIER_STOP;
    public static WIN32_ERROR ERROR_ABIOS_ERROR;
    public static WIN32_ERROR ERROR_WX86_WARNING;
    public static WIN32_ERROR ERROR_WX86_ERROR;
    public static WIN32_ERROR ERROR_TIMER_NOT_CANCELED;
    public static WIN32_ERROR ERROR_UNWIND;
    public static WIN32_ERROR ERROR_BAD_STACK;
    public static WIN32_ERROR ERROR_INVALID_UNWIND_TARGET;
    public static WIN32_ERROR ERROR_INVALID_PORT_ATTRIBUTES;
    public static WIN32_ERROR ERROR_PORT_MESSAGE_TOO_LONG;
    public static WIN32_ERROR ERROR_INVALID_QUOTA_LOWER;
    public static WIN32_ERROR ERROR_DEVICE_ALREADY_ATTACHED;
    public static WIN32_ERROR ERROR_INSTRUCTION_MISALIGNMENT;
    public static WIN32_ERROR ERROR_PROFILING_NOT_STARTED;
    public static WIN32_ERROR ERROR_PROFILING_NOT_STOPPED;
    public static WIN32_ERROR ERROR_COULD_NOT_INTERPRET;
    public static WIN32_ERROR ERROR_PROFILING_AT_LIMIT;
    public static WIN32_ERROR ERROR_CANT_WAIT;
    public static WIN32_ERROR ERROR_CANT_TERMINATE_SELF;
    public static WIN32_ERROR ERROR_UNEXPECTED_MM_CREATE_ERR;
    public static WIN32_ERROR ERROR_UNEXPECTED_MM_MAP_ERROR;
    public static WIN32_ERROR ERROR_UNEXPECTED_MM_EXTEND_ERR;
    public static WIN32_ERROR ERROR_BAD_FUNCTION_TABLE;
    public static WIN32_ERROR ERROR_NO_GUID_TRANSLATION;
    public static WIN32_ERROR ERROR_INVALID_LDT_SIZE;
    public static WIN32_ERROR ERROR_INVALID_LDT_OFFSET;
    public static WIN32_ERROR ERROR_INVALID_LDT_DESCRIPTOR;
    public static WIN32_ERROR ERROR_TOO_MANY_THREADS;
    public static WIN32_ERROR ERROR_THREAD_NOT_IN_PROCESS;
    public static WIN32_ERROR ERROR_PAGEFILE_QUOTA_EXCEEDED;
    public static WIN32_ERROR ERROR_LOGON_SERVER_CONFLICT;
    public static WIN32_ERROR ERROR_SYNCHRONIZATION_REQUIRED;
    public static WIN32_ERROR ERROR_NET_OPEN_FAILED;
    public static WIN32_ERROR ERROR_IO_PRIVILEGE_FAILED;
    public static WIN32_ERROR ERROR_CONTROL_C_EXIT;
    public static WIN32_ERROR ERROR_MISSING_SYSTEMFILE;
    public static WIN32_ERROR ERROR_UNHANDLED_EXCEPTION;
    public static WIN32_ERROR ERROR_APP_INIT_FAILURE;
    public static WIN32_ERROR ERROR_PAGEFILE_CREATE_FAILED;
    public static WIN32_ERROR ERROR_INVALID_IMAGE_HASH;
    public static WIN32_ERROR ERROR_NO_PAGEFILE;
    public static WIN32_ERROR ERROR_ILLEGAL_FLOAT_CONTEXT;
    public static WIN32_ERROR ERROR_NO_EVENT_PAIR;
    public static WIN32_ERROR ERROR_DOMAIN_CTRLR_CONFIG_ERROR;
    public static WIN32_ERROR ERROR_ILLEGAL_CHARACTER;
    public static WIN32_ERROR ERROR_UNDEFINED_CHARACTER;
    public static WIN32_ERROR ERROR_FLOPPY_VOLUME;
    public static WIN32_ERROR ERROR_BIOS_FAILED_TO_CONNECT_INTERRUPT;
    public static WIN32_ERROR ERROR_BACKUP_CONTROLLER;
    public static WIN32_ERROR ERROR_MUTANT_LIMIT_EXCEEDED;
    public static WIN32_ERROR ERROR_FS_DRIVER_REQUIRED;
    public static WIN32_ERROR ERROR_CANNOT_LOAD_REGISTRY_FILE;
    public static WIN32_ERROR ERROR_DEBUG_ATTACH_FAILED;
    public static WIN32_ERROR ERROR_SYSTEM_PROCESS_TERMINATED;
    public static WIN32_ERROR ERROR_DATA_NOT_ACCEPTED;
    public static WIN32_ERROR ERROR_VDM_HARD_ERROR;
    public static WIN32_ERROR ERROR_DRIVER_CANCEL_TIMEOUT;
    public static WIN32_ERROR ERROR_REPLY_MESSAGE_MISMATCH;
    public static WIN32_ERROR ERROR_LOST_WRITEBEHIND_DATA;
    public static WIN32_ERROR ERROR_CLIENT_SERVER_PARAMETERS_INVALID;
    public static WIN32_ERROR ERROR_NOT_TINY_STREAM;
    public static WIN32_ERROR ERROR_STACK_OVERFLOW_READ;
    public static WIN32_ERROR ERROR_CONVERT_TO_LARGE;
    public static WIN32_ERROR ERROR_FOUND_OUT_OF_SCOPE;
    public static WIN32_ERROR ERROR_ALLOCATE_BUCKET;
    public static WIN32_ERROR ERROR_MARSHALL_OVERFLOW;
    public static WIN32_ERROR ERROR_INVALID_VARIANT;
    public static WIN32_ERROR ERROR_BAD_COMPRESSION_BUFFER;
    public static WIN32_ERROR ERROR_AUDIT_FAILED;
    public static WIN32_ERROR ERROR_TIMER_RESOLUTION_NOT_SET;
    public static WIN32_ERROR ERROR_INSUFFICIENT_LOGON_INFO;
    public static WIN32_ERROR ERROR_BAD_DLL_ENTRYPOINT;
    public static WIN32_ERROR ERROR_BAD_SERVICE_ENTRYPOINT;
    public static WIN32_ERROR ERROR_IP_ADDRESS_CONFLICT1;
    public static WIN32_ERROR ERROR_IP_ADDRESS_CONFLICT2;
    public static WIN32_ERROR ERROR_REGISTRY_QUOTA_LIMIT;
    public static WIN32_ERROR ERROR_NO_CALLBACK_ACTIVE;
    public static WIN32_ERROR ERROR_PWD_TOO_SHORT;
    public static WIN32_ERROR ERROR_PWD_TOO_RECENT;
    public static WIN32_ERROR ERROR_PWD_HISTORY_CONFLICT;
    public static WIN32_ERROR ERROR_UNSUPPORTED_COMPRESSION;
    public static WIN32_ERROR ERROR_INVALID_HW_PROFILE;
    public static WIN32_ERROR ERROR_INVALID_PLUGPLAY_DEVICE_PATH;
    public static WIN32_ERROR ERROR_QUOTA_LIST_INCONSISTENT;
    public static WIN32_ERROR ERROR_EVALUATION_EXPIRATION;
    public static WIN32_ERROR ERROR_ILLEGAL_DLL_RELOCATION;
    public static WIN32_ERROR ERROR_DLL_INIT_FAILED_LOGOFF;
    public static WIN32_ERROR ERROR_VALIDATE_CONTINUE;
    public static WIN32_ERROR ERROR_NO_MORE_MATCHES;
    public static WIN32_ERROR ERROR_RANGE_LIST_CONFLICT;
    public static WIN32_ERROR ERROR_SERVER_SID_MISMATCH;
    public static WIN32_ERROR ERROR_CANT_ENABLE_DENY_ONLY;
    public static WIN32_ERROR ERROR_FLOAT_MULTIPLE_FAULTS;
    public static WIN32_ERROR ERROR_FLOAT_MULTIPLE_TRAPS;
    public static WIN32_ERROR ERROR_NOINTERFACE;
    public static WIN32_ERROR ERROR_DRIVER_FAILED_SLEEP;
    public static WIN32_ERROR ERROR_CORRUPT_SYSTEM_FILE;
    public static WIN32_ERROR ERROR_COMMITMENT_MINIMUM;
    public static WIN32_ERROR ERROR_PNP_RESTART_ENUMERATION;
    public static WIN32_ERROR ERROR_SYSTEM_IMAGE_BAD_SIGNATURE;
    public static WIN32_ERROR ERROR_PNP_REBOOT_REQUIRED;
    public static WIN32_ERROR ERROR_INSUFFICIENT_POWER;
    public static WIN32_ERROR ERROR_MULTIPLE_FAULT_VIOLATION;
    public static WIN32_ERROR ERROR_SYSTEM_SHUTDOWN;
    public static WIN32_ERROR ERROR_PORT_NOT_SET;
    public static WIN32_ERROR ERROR_DS_VERSION_CHECK_FAILURE;
    public static WIN32_ERROR ERROR_RANGE_NOT_FOUND;
    public static WIN32_ERROR ERROR_NOT_SAFE_MODE_DRIVER;
    public static WIN32_ERROR ERROR_FAILED_DRIVER_ENTRY;
    public static WIN32_ERROR ERROR_DEVICE_ENUMERATION_ERROR;
    public static WIN32_ERROR ERROR_MOUNT_POINT_NOT_RESOLVED;
    public static WIN32_ERROR ERROR_INVALID_DEVICE_OBJECT_PARAMETER;
    public static WIN32_ERROR ERROR_MCA_OCCURED;
    public static WIN32_ERROR ERROR_DRIVER_DATABASE_ERROR;
    public static WIN32_ERROR ERROR_SYSTEM_HIVE_TOO_LARGE;
    public static WIN32_ERROR ERROR_DRIVER_FAILED_PRIOR_UNLOAD;
    public static WIN32_ERROR ERROR_VOLSNAP_PREPARE_HIBERNATE;
    public static WIN32_ERROR ERROR_HIBERNATION_FAILURE;
    public static WIN32_ERROR ERROR_PWD_TOO_LONG;
    public static WIN32_ERROR ERROR_FILE_SYSTEM_LIMITATION;
    public static WIN32_ERROR ERROR_ASSERTION_FAILURE;
    public static WIN32_ERROR ERROR_ACPI_ERROR;
    public static WIN32_ERROR ERROR_WOW_ASSERTION;
    public static WIN32_ERROR ERROR_PNP_BAD_MPS_TABLE;
    public static WIN32_ERROR ERROR_PNP_TRANSLATION_FAILED;
    public static WIN32_ERROR ERROR_PNP_IRQ_TRANSLATION_FAILED;
    public static WIN32_ERROR ERROR_PNP_INVALID_ID;
    public static WIN32_ERROR ERROR_WAKE_SYSTEM_DEBUGGER;
    public static WIN32_ERROR ERROR_HANDLES_CLOSED;
    public static WIN32_ERROR ERROR_EXTRANEOUS_INFORMATION;
    public static WIN32_ERROR ERROR_RXACT_COMMIT_NECESSARY;
    public static WIN32_ERROR ERROR_MEDIA_CHECK;
    public static WIN32_ERROR ERROR_GUID_SUBSTITUTION_MADE;
    public static WIN32_ERROR ERROR_STOPPED_ON_SYMLINK;
    public static WIN32_ERROR ERROR_LONGJUMP;
    public static WIN32_ERROR ERROR_PLUGPLAY_QUERY_VETOED;
    public static WIN32_ERROR ERROR_UNWIND_CONSOLIDATE;
    public static WIN32_ERROR ERROR_REGISTRY_HIVE_RECOVERED;
    public static WIN32_ERROR ERROR_DLL_MIGHT_BE_INSECURE;
    public static WIN32_ERROR ERROR_DLL_MIGHT_BE_INCOMPATIBLE;
    public static WIN32_ERROR ERROR_DBG_EXCEPTION_NOT_HANDLED;
    public static WIN32_ERROR ERROR_DBG_REPLY_LATER;
    public static WIN32_ERROR ERROR_DBG_UNABLE_TO_PROVIDE_HANDLE;
    public static WIN32_ERROR ERROR_DBG_TERMINATE_THREAD;
    public static WIN32_ERROR ERROR_DBG_TERMINATE_PROCESS;
    public static WIN32_ERROR ERROR_DBG_CONTROL_C;
    public static WIN32_ERROR ERROR_DBG_PRINTEXCEPTION_C;
    public static WIN32_ERROR ERROR_DBG_RIPEXCEPTION;
    public static WIN32_ERROR ERROR_DBG_CONTROL_BREAK;
    public static WIN32_ERROR ERROR_DBG_COMMAND_EXCEPTION;
    public static WIN32_ERROR ERROR_OBJECT_NAME_EXISTS;
    public static WIN32_ERROR ERROR_THREAD_WAS_SUSPENDED;
    public static WIN32_ERROR ERROR_IMAGE_NOT_AT_BASE;
    public static WIN32_ERROR ERROR_RXACT_STATE_CREATED;
    public static WIN32_ERROR ERROR_SEGMENT_NOTIFICATION;
    public static WIN32_ERROR ERROR_BAD_CURRENT_DIRECTORY;
    public static WIN32_ERROR ERROR_FT_READ_RECOVERY_FROM_BACKUP;
    public static WIN32_ERROR ERROR_FT_WRITE_RECOVERY;
    public static WIN32_ERROR ERROR_IMAGE_MACHINE_TYPE_MISMATCH;
    public static WIN32_ERROR ERROR_RECEIVE_PARTIAL;
    public static WIN32_ERROR ERROR_RECEIVE_EXPEDITED;
    public static WIN32_ERROR ERROR_RECEIVE_PARTIAL_EXPEDITED;
    public static WIN32_ERROR ERROR_EVENT_DONE;
    public static WIN32_ERROR ERROR_EVENT_PENDING;
    public static WIN32_ERROR ERROR_CHECKING_FILE_SYSTEM;
    public static WIN32_ERROR ERROR_FATAL_APP_EXIT;
    public static WIN32_ERROR ERROR_PREDEFINED_HANDLE;
    public static WIN32_ERROR ERROR_WAS_UNLOCKED;
    public static WIN32_ERROR ERROR_SERVICE_NOTIFICATION;
    public static WIN32_ERROR ERROR_WAS_LOCKED;
    public static WIN32_ERROR ERROR_LOG_HARD_ERROR;
    public static WIN32_ERROR ERROR_ALREADY_WIN32;
    public static WIN32_ERROR ERROR_IMAGE_MACHINE_TYPE_MISMATCH_EXE;
    public static WIN32_ERROR ERROR_NO_YIELD_PERFORMED;
    public static WIN32_ERROR ERROR_TIMER_RESUME_IGNORED;
    public static WIN32_ERROR ERROR_ARBITRATION_UNHANDLED;
    public static WIN32_ERROR ERROR_CARDBUS_NOT_SUPPORTED;
    public static WIN32_ERROR ERROR_MP_PROCESSOR_MISMATCH;
    public static WIN32_ERROR ERROR_HIBERNATED;
    public static WIN32_ERROR ERROR_RESUME_HIBERNATION;
    public static WIN32_ERROR ERROR_FIRMWARE_UPDATED;
    public static WIN32_ERROR ERROR_DRIVERS_LEAKING_LOCKED_PAGES;
    public static WIN32_ERROR ERROR_WAKE_SYSTEM;
    public static WIN32_ERROR ERROR_WAIT_1;
    public static WIN32_ERROR ERROR_WAIT_2;
    public static WIN32_ERROR ERROR_WAIT_3;
    public static WIN32_ERROR ERROR_WAIT_63;
    public static WIN32_ERROR ERROR_ABANDONED_WAIT_0;
    public static WIN32_ERROR ERROR_ABANDONED_WAIT_63;
    public static WIN32_ERROR ERROR_USER_APC;
    public static WIN32_ERROR ERROR_KERNEL_APC;
    public static WIN32_ERROR ERROR_ALERTED;
    public static WIN32_ERROR ERROR_ELEVATION_REQUIRED;
    public static WIN32_ERROR ERROR_REPARSE;
    public static WIN32_ERROR ERROR_OPLOCK_BREAK_IN_PROGRESS;
    public static WIN32_ERROR ERROR_VOLUME_MOUNTED;
    public static WIN32_ERROR ERROR_RXACT_COMMITTED;
    public static WIN32_ERROR ERROR_NOTIFY_CLEANUP;
    public static WIN32_ERROR ERROR_PRIMARY_TRANSPORT_CONNECT_FAILED;
    public static WIN32_ERROR ERROR_PAGE_FAULT_TRANSITION;
    public static WIN32_ERROR ERROR_PAGE_FAULT_DEMAND_ZERO;
    public static WIN32_ERROR ERROR_PAGE_FAULT_COPY_ON_WRITE;
    public static WIN32_ERROR ERROR_PAGE_FAULT_GUARD_PAGE;
    public static WIN32_ERROR ERROR_PAGE_FAULT_PAGING_FILE;
    public static WIN32_ERROR ERROR_CACHE_PAGE_LOCKED;
    public static WIN32_ERROR ERROR_CRASH_DUMP;
    public static WIN32_ERROR ERROR_BUFFER_ALL_ZEROS;
    public static WIN32_ERROR ERROR_REPARSE_OBJECT;
    public static WIN32_ERROR ERROR_RESOURCE_REQUIREMENTS_CHANGED;
    public static WIN32_ERROR ERROR_TRANSLATION_COMPLETE;
    public static WIN32_ERROR ERROR_NOTHING_TO_TERMINATE;
    public static WIN32_ERROR ERROR_PROCESS_NOT_IN_JOB;
    public static WIN32_ERROR ERROR_PROCESS_IN_JOB;
    public static WIN32_ERROR ERROR_VOLSNAP_HIBERNATE_READY;
    public static WIN32_ERROR ERROR_FSFILTER_OP_COMPLETED_SUCCESSFULLY;
    public static WIN32_ERROR ERROR_INTERRUPT_VECTOR_ALREADY_CONNECTED;
    public static WIN32_ERROR ERROR_INTERRUPT_STILL_CONNECTED;
    public static WIN32_ERROR ERROR_WAIT_FOR_OPLOCK;
    public static WIN32_ERROR ERROR_DBG_EXCEPTION_HANDLED;
    public static WIN32_ERROR ERROR_DBG_CONTINUE;
    public static WIN32_ERROR ERROR_CALLBACK_POP_STACK;
    public static WIN32_ERROR ERROR_COMPRESSION_DISABLED;
    public static WIN32_ERROR ERROR_CANTFETCHBACKWARDS;
    public static WIN32_ERROR ERROR_CANTSCROLLBACKWARDS;
    public static WIN32_ERROR ERROR_ROWSNOTRELEASED;
    public static WIN32_ERROR ERROR_BAD_ACCESSOR_FLAGS;
    public static WIN32_ERROR ERROR_ERRORS_ENCOUNTERED;
    public static WIN32_ERROR ERROR_NOT_CAPABLE;
    public static WIN32_ERROR ERROR_REQUEST_OUT_OF_SEQUENCE;
    public static WIN32_ERROR ERROR_VERSION_PARSE_ERROR;
    public static WIN32_ERROR ERROR_BADSTARTPOSITION;
    public static WIN32_ERROR ERROR_MEMORY_HARDWARE;
    public static WIN32_ERROR ERROR_DISK_REPAIR_DISABLED;
    public static WIN32_ERROR ERROR_INSUFFICIENT_RESOURCE_FOR_SPECIFIED_SHARED_SECTION_SIZE;
    public static WIN32_ERROR ERROR_SYSTEM_POWERSTATE_TRANSITION;
    public static WIN32_ERROR ERROR_SYSTEM_POWERSTATE_COMPLEX_TRANSITION;
    public static WIN32_ERROR ERROR_MCA_EXCEPTION;
    public static WIN32_ERROR ERROR_ACCESS_AUDIT_BY_POLICY;
    public static WIN32_ERROR ERROR_ACCESS_DISABLED_NO_SAFER_UI_BY_POLICY;
    public static WIN32_ERROR ERROR_ABANDON_HIBERFILE;
    public static WIN32_ERROR ERROR_LOST_WRITEBEHIND_DATA_NETWORK_DISCONNECTED;
    public static WIN32_ERROR ERROR_LOST_WRITEBEHIND_DATA_NETWORK_SERVER_ERROR;
    public static WIN32_ERROR ERROR_LOST_WRITEBEHIND_DATA_LOCAL_DISK_ERROR;
    public static WIN32_ERROR ERROR_BAD_MCFG_TABLE;
    public static WIN32_ERROR ERROR_DISK_REPAIR_REDIRECTED;
    public static WIN32_ERROR ERROR_DISK_REPAIR_UNSUCCESSFUL;
    public static WIN32_ERROR ERROR_CORRUPT_LOG_OVERFULL;
    public static WIN32_ERROR ERROR_CORRUPT_LOG_CORRUPTED;
    public static WIN32_ERROR ERROR_CORRUPT_LOG_UNAVAILABLE;
    public static WIN32_ERROR ERROR_CORRUPT_LOG_DELETED_FULL;
    public static WIN32_ERROR ERROR_CORRUPT_LOG_CLEARED;
    public static WIN32_ERROR ERROR_ORPHAN_NAME_EXHAUSTED;
    public static WIN32_ERROR ERROR_OPLOCK_SWITCHED_TO_NEW_HANDLE;
    public static WIN32_ERROR ERROR_CANNOT_GRANT_REQUESTED_OPLOCK;
    public static WIN32_ERROR ERROR_CANNOT_BREAK_OPLOCK;
    public static WIN32_ERROR ERROR_OPLOCK_HANDLE_CLOSED;
    public static WIN32_ERROR ERROR_NO_ACE_CONDITION;
    public static WIN32_ERROR ERROR_INVALID_ACE_CONDITION;
    public static WIN32_ERROR ERROR_FILE_HANDLE_REVOKED;
    public static WIN32_ERROR ERROR_IMAGE_AT_DIFFERENT_BASE;
    public static WIN32_ERROR ERROR_ENCRYPTED_IO_NOT_POSSIBLE;
    public static WIN32_ERROR ERROR_FILE_METADATA_OPTIMIZATION_IN_PROGRESS;
    public static WIN32_ERROR ERROR_QUOTA_ACTIVITY;
    public static WIN32_ERROR ERROR_HANDLE_REVOKED;
    public static WIN32_ERROR ERROR_CALLBACK_INVOKE_INLINE;
    public static WIN32_ERROR ERROR_CPU_SET_INVALID;
    public static WIN32_ERROR ERROR_ENCLAVE_NOT_TERMINATED;
    public static WIN32_ERROR ERROR_ENCLAVE_VIOLATION;
    public static WIN32_ERROR ERROR_SERVER_TRANSPORT_CONFLICT;
    public static WIN32_ERROR ERROR_CERTIFICATE_VALIDATION_PREFERENCE_CONFLICT;
    public static WIN32_ERROR ERROR_FT_READ_FROM_COPY_FAILURE;
    public static WIN32_ERROR ERROR_SECTION_DIRECT_MAP_ONLY;
    public static WIN32_ERROR ERROR_EA_ACCESS_DENIED;
    public static WIN32_ERROR ERROR_OPERATION_ABORTED;
    public static WIN32_ERROR ERROR_IO_INCOMPLETE;
    public static WIN32_ERROR ERROR_IO_PENDING;
    public static WIN32_ERROR ERROR_NOACCESS;
    public static WIN32_ERROR ERROR_SWAPERROR;
    public static WIN32_ERROR ERROR_STACK_OVERFLOW;
    public static WIN32_ERROR ERROR_INVALID_MESSAGE;
    public static WIN32_ERROR ERROR_CAN_NOT_COMPLETE;
    public static WIN32_ERROR ERROR_INVALID_FLAGS;
    public static WIN32_ERROR ERROR_UNRECOGNIZED_VOLUME;
    public static WIN32_ERROR ERROR_FILE_INVALID;
    public static WIN32_ERROR ERROR_FULLSCREEN_MODE;
    public static WIN32_ERROR ERROR_NO_TOKEN;
    public static WIN32_ERROR ERROR_BADDB;
    public static WIN32_ERROR ERROR_BADKEY;
    public static WIN32_ERROR ERROR_CANTOPEN;
    public static WIN32_ERROR ERROR_CANTREAD;
    public static WIN32_ERROR ERROR_CANTWRITE;
    public static WIN32_ERROR ERROR_REGISTRY_RECOVERED;
    public static WIN32_ERROR ERROR_REGISTRY_CORRUPT;
    public static WIN32_ERROR ERROR_REGISTRY_IO_FAILED;
    public static WIN32_ERROR ERROR_NOT_REGISTRY_FILE;
    public static WIN32_ERROR ERROR_KEY_DELETED;
    public static WIN32_ERROR ERROR_NO_LOG_SPACE;
    public static WIN32_ERROR ERROR_KEY_HAS_CHILDREN;
    public static WIN32_ERROR ERROR_CHILD_MUST_BE_VOLATILE;
    public static WIN32_ERROR ERROR_NOTIFY_ENUM_DIR;
    public static WIN32_ERROR ERROR_DEPENDENT_SERVICES_RUNNING;
    public static WIN32_ERROR ERROR_INVALID_SERVICE_CONTROL;
    public static WIN32_ERROR ERROR_SERVICE_REQUEST_TIMEOUT;
    public static WIN32_ERROR ERROR_SERVICE_NO_THREAD;
    public static WIN32_ERROR ERROR_SERVICE_DATABASE_LOCKED;
    public static WIN32_ERROR ERROR_SERVICE_ALREADY_RUNNING;
    public static WIN32_ERROR ERROR_INVALID_SERVICE_ACCOUNT;
    public static WIN32_ERROR ERROR_SERVICE_DISABLED;
    public static WIN32_ERROR ERROR_CIRCULAR_DEPENDENCY;
    public static WIN32_ERROR ERROR_SERVICE_DOES_NOT_EXIST;
    public static WIN32_ERROR ERROR_SERVICE_CANNOT_ACCEPT_CTRL;
    public static WIN32_ERROR ERROR_SERVICE_NOT_ACTIVE;
    public static WIN32_ERROR ERROR_FAILED_SERVICE_CONTROLLER_CONNECT;
    public static WIN32_ERROR ERROR_EXCEPTION_IN_SERVICE;
    public static WIN32_ERROR ERROR_DATABASE_DOES_NOT_EXIST;
    public static WIN32_ERROR ERROR_SERVICE_SPECIFIC_ERROR;
    public static WIN32_ERROR ERROR_PROCESS_ABORTED;
    public static WIN32_ERROR ERROR_SERVICE_DEPENDENCY_FAIL;
    public static WIN32_ERROR ERROR_SERVICE_LOGON_FAILED;
    public static WIN32_ERROR ERROR_SERVICE_START_HANG;
    public static WIN32_ERROR ERROR_INVALID_SERVICE_LOCK;
    public static WIN32_ERROR ERROR_SERVICE_MARKED_FOR_DELETE;
    public static WIN32_ERROR ERROR_SERVICE_EXISTS;
    public static WIN32_ERROR ERROR_ALREADY_RUNNING_LKG;
    public static WIN32_ERROR ERROR_SERVICE_DEPENDENCY_DELETED;
    public static WIN32_ERROR ERROR_BOOT_ALREADY_ACCEPTED;
    public static WIN32_ERROR ERROR_SERVICE_NEVER_STARTED;
    public static WIN32_ERROR ERROR_DUPLICATE_SERVICE_NAME;
    public static WIN32_ERROR ERROR_DIFFERENT_SERVICE_ACCOUNT;
    public static WIN32_ERROR ERROR_CANNOT_DETECT_DRIVER_FAILURE;
    public static WIN32_ERROR ERROR_CANNOT_DETECT_PROCESS_ABORT;
    public static WIN32_ERROR ERROR_NO_RECOVERY_PROGRAM;
    public static WIN32_ERROR ERROR_SERVICE_NOT_IN_EXE;
    public static WIN32_ERROR ERROR_NOT_SAFEBOOT_SERVICE;
    public static WIN32_ERROR ERROR_END_OF_MEDIA;
    public static WIN32_ERROR ERROR_FILEMARK_DETECTED;
    public static WIN32_ERROR ERROR_BEGINNING_OF_MEDIA;
    public static WIN32_ERROR ERROR_SETMARK_DETECTED;
    public static WIN32_ERROR ERROR_NO_DATA_DETECTED;
    public static WIN32_ERROR ERROR_PARTITION_FAILURE;
    public static WIN32_ERROR ERROR_INVALID_BLOCK_LENGTH;
    public static WIN32_ERROR ERROR_DEVICE_NOT_PARTITIONED;
    public static WIN32_ERROR ERROR_UNABLE_TO_LOCK_MEDIA;
    public static WIN32_ERROR ERROR_UNABLE_TO_UNLOAD_MEDIA;
    public static WIN32_ERROR ERROR_MEDIA_CHANGED;
    public static WIN32_ERROR ERROR_BUS_RESET;
    public static WIN32_ERROR ERROR_NO_MEDIA_IN_DRIVE;
    public static WIN32_ERROR ERROR_NO_UNICODE_TRANSLATION;
    public static WIN32_ERROR ERROR_DLL_INIT_FAILED;
    public static WIN32_ERROR ERROR_SHUTDOWN_IN_PROGRESS;
    public static WIN32_ERROR ERROR_NO_SHUTDOWN_IN_PROGRESS;
    public static WIN32_ERROR ERROR_IO_DEVICE;
    public static WIN32_ERROR ERROR_SERIAL_NO_DEVICE;
    public static WIN32_ERROR ERROR_IRQ_BUSY;
    public static WIN32_ERROR ERROR_MORE_WRITES;
    public static WIN32_ERROR ERROR_COUNTER_TIMEOUT;
    public static WIN32_ERROR ERROR_FLOPPY_ID_MARK_NOT_FOUND;
    public static WIN32_ERROR ERROR_FLOPPY_WRONG_CYLINDER;
    public static WIN32_ERROR ERROR_FLOPPY_UNKNOWN_ERROR;
    public static WIN32_ERROR ERROR_FLOPPY_BAD_REGISTERS;
    public static WIN32_ERROR ERROR_DISK_RECALIBRATE_FAILED;
    public static WIN32_ERROR ERROR_DISK_OPERATION_FAILED;
    public static WIN32_ERROR ERROR_DISK_RESET_FAILED;
    public static WIN32_ERROR ERROR_EOM_OVERFLOW;
    public static WIN32_ERROR ERROR_NOT_ENOUGH_SERVER_MEMORY;
    public static WIN32_ERROR ERROR_POSSIBLE_DEADLOCK;
    public static WIN32_ERROR ERROR_MAPPED_ALIGNMENT;
    public static WIN32_ERROR ERROR_SET_POWER_STATE_VETOED;
    public static WIN32_ERROR ERROR_SET_POWER_STATE_FAILED;
    public static WIN32_ERROR ERROR_TOO_MANY_LINKS;
    public static WIN32_ERROR ERROR_OLD_WIN_VERSION;
    public static WIN32_ERROR ERROR_APP_WRONG_OS;
    public static WIN32_ERROR ERROR_SINGLE_INSTANCE_APP;
    public static WIN32_ERROR ERROR_RMODE_APP;
    public static WIN32_ERROR ERROR_INVALID_DLL;
    public static WIN32_ERROR ERROR_NO_ASSOCIATION;
    public static WIN32_ERROR ERROR_DDE_FAIL;
    public static WIN32_ERROR ERROR_DLL_NOT_FOUND;
    public static WIN32_ERROR ERROR_NO_MORE_USER_HANDLES;
    public static WIN32_ERROR ERROR_MESSAGE_SYNC_ONLY;
    public static WIN32_ERROR ERROR_SOURCE_ELEMENT_EMPTY;
    public static WIN32_ERROR ERROR_DESTINATION_ELEMENT_FULL;
    public static WIN32_ERROR ERROR_ILLEGAL_ELEMENT_ADDRESS;
    public static WIN32_ERROR ERROR_MAGAZINE_NOT_PRESENT;
    public static WIN32_ERROR ERROR_DEVICE_REINITIALIZATION_NEEDED;
    public static WIN32_ERROR ERROR_DEVICE_REQUIRES_CLEANING;
    public static WIN32_ERROR ERROR_DEVICE_DOOR_OPEN;
    public static WIN32_ERROR ERROR_DEVICE_NOT_CONNECTED;
    public static WIN32_ERROR ERROR_NOT_FOUND;
    public static WIN32_ERROR ERROR_NO_MATCH;
    public static WIN32_ERROR ERROR_SET_NOT_FOUND;
    public static WIN32_ERROR ERROR_POINT_NOT_FOUND;
    public static WIN32_ERROR ERROR_NO_TRACKING_SERVICE;
    public static WIN32_ERROR ERROR_NO_VOLUME_ID;
    public static WIN32_ERROR ERROR_UNABLE_TO_REMOVE_REPLACED;
    public static WIN32_ERROR ERROR_UNABLE_TO_MOVE_REPLACEMENT;
    public static WIN32_ERROR ERROR_UNABLE_TO_MOVE_REPLACEMENT_2;
    public static WIN32_ERROR ERROR_JOURNAL_DELETE_IN_PROGRESS;
    public static WIN32_ERROR ERROR_JOURNAL_NOT_ACTIVE;
    public static WIN32_ERROR ERROR_POTENTIAL_FILE_FOUND;
    public static WIN32_ERROR ERROR_JOURNAL_ENTRY_DELETED;
    public static WIN32_ERROR ERROR_PARTITION_TERMINATING;
    public static WIN32_ERROR ERROR_SHUTDOWN_IS_SCHEDULED;
    public static WIN32_ERROR ERROR_SHUTDOWN_USERS_LOGGED_ON;
    public static WIN32_ERROR ERROR_SHUTDOWN_DISKS_NOT_IN_MAINTENANCE_MODE;
    public static WIN32_ERROR ERROR_BAD_DEVICE;
    public static WIN32_ERROR ERROR_CONNECTION_UNAVAIL;
    public static WIN32_ERROR ERROR_DEVICE_ALREADY_REMEMBERED;
    public static WIN32_ERROR ERROR_NO_NET_OR_BAD_PATH;
    public static WIN32_ERROR ERROR_BAD_PROVIDER;
    public static WIN32_ERROR ERROR_CANNOT_OPEN_PROFILE;
    public static WIN32_ERROR ERROR_BAD_PROFILE;
    public static WIN32_ERROR ERROR_NOT_CONTAINER;
    public static WIN32_ERROR ERROR_EXTENDED_ERROR;
    public static WIN32_ERROR ERROR_INVALID_GROUPNAME;
    public static WIN32_ERROR ERROR_INVALID_COMPUTERNAME;
    public static WIN32_ERROR ERROR_INVALID_EVENTNAME;
    public static WIN32_ERROR ERROR_INVALID_DOMAINNAME;
    public static WIN32_ERROR ERROR_INVALID_SERVICENAME;
    public static WIN32_ERROR ERROR_INVALID_NETNAME;
    public static WIN32_ERROR ERROR_INVALID_SHARENAME;
    public static WIN32_ERROR ERROR_INVALID_PASSWORDNAME;
    public static WIN32_ERROR ERROR_INVALID_MESSAGENAME;
    public static WIN32_ERROR ERROR_INVALID_MESSAGEDEST;
    public static WIN32_ERROR ERROR_SESSION_CREDENTIAL_CONFLICT;
    public static WIN32_ERROR ERROR_REMOTE_SESSION_LIMIT_EXCEEDED;
    public static WIN32_ERROR ERROR_DUP_DOMAINNAME;
    public static WIN32_ERROR ERROR_NO_NETWORK;
    public static WIN32_ERROR ERROR_CANCELLED;
    public static WIN32_ERROR ERROR_USER_MAPPED_FILE;
    public static WIN32_ERROR ERROR_CONNECTION_REFUSED;
    public static WIN32_ERROR ERROR_GRACEFUL_DISCONNECT;
    public static WIN32_ERROR ERROR_ADDRESS_ALREADY_ASSOCIATED;
    public static WIN32_ERROR ERROR_ADDRESS_NOT_ASSOCIATED;
    public static WIN32_ERROR ERROR_CONNECTION_INVALID;
    public static WIN32_ERROR ERROR_CONNECTION_ACTIVE;
    public static WIN32_ERROR ERROR_NETWORK_UNREACHABLE;
    public static WIN32_ERROR ERROR_HOST_UNREACHABLE;
    public static WIN32_ERROR ERROR_PROTOCOL_UNREACHABLE;
    public static WIN32_ERROR ERROR_PORT_UNREACHABLE;
    public static WIN32_ERROR ERROR_REQUEST_ABORTED;
    public static WIN32_ERROR ERROR_CONNECTION_ABORTED;
    public static WIN32_ERROR ERROR_RETRY;
    public static WIN32_ERROR ERROR_CONNECTION_COUNT_LIMIT;
    public static WIN32_ERROR ERROR_LOGIN_TIME_RESTRICTION;
    public static WIN32_ERROR ERROR_LOGIN_WKSTA_RESTRICTION;
    public static WIN32_ERROR ERROR_INCORRECT_ADDRESS;
    public static WIN32_ERROR ERROR_ALREADY_REGISTERED;
    public static WIN32_ERROR ERROR_SERVICE_NOT_FOUND;
    public static WIN32_ERROR ERROR_NOT_AUTHENTICATED;
    public static WIN32_ERROR ERROR_NOT_LOGGED_ON;
    public static WIN32_ERROR ERROR_CONTINUE;
    public static WIN32_ERROR ERROR_ALREADY_INITIALIZED;
    public static WIN32_ERROR ERROR_NO_MORE_DEVICES;
    public static WIN32_ERROR ERROR_NO_SUCH_SITE;
    public static WIN32_ERROR ERROR_DOMAIN_CONTROLLER_EXISTS;
    public static WIN32_ERROR ERROR_ONLY_IF_CONNECTED;
    public static WIN32_ERROR ERROR_OVERRIDE_NOCHANGES;
    public static WIN32_ERROR ERROR_BAD_USER_PROFILE;
    public static WIN32_ERROR ERROR_NOT_SUPPORTED_ON_SBS;
    public static WIN32_ERROR ERROR_SERVER_SHUTDOWN_IN_PROGRESS;
    public static WIN32_ERROR ERROR_HOST_DOWN;
    public static WIN32_ERROR ERROR_NON_ACCOUNT_SID;
    public static WIN32_ERROR ERROR_NON_DOMAIN_SID;
    public static WIN32_ERROR ERROR_APPHELP_BLOCK;
    public static WIN32_ERROR ERROR_ACCESS_DISABLED_BY_POLICY;
    public static WIN32_ERROR ERROR_REG_NAT_CONSUMPTION;
    public static WIN32_ERROR ERROR_CSCSHARE_OFFLINE;
    public static WIN32_ERROR ERROR_PKINIT_FAILURE;
    public static WIN32_ERROR ERROR_SMARTCARD_SUBSYSTEM_FAILURE;
    public static WIN32_ERROR ERROR_DOWNGRADE_DETECTED;
    public static WIN32_ERROR ERROR_MACHINE_LOCKED;
    public static WIN32_ERROR ERROR_SMB_GUEST_LOGON_BLOCKED;
    public static WIN32_ERROR ERROR_CALLBACK_SUPPLIED_INVALID_DATA;
    public static WIN32_ERROR ERROR_SYNC_FOREGROUND_REFRESH_REQUIRED;
    public static WIN32_ERROR ERROR_DRIVER_BLOCKED;
    public static WIN32_ERROR ERROR_INVALID_IMPORT_OF_NON_DLL;
    public static WIN32_ERROR ERROR_ACCESS_DISABLED_WEBBLADE;
    public static WIN32_ERROR ERROR_ACCESS_DISABLED_WEBBLADE_TAMPER;
    public static WIN32_ERROR ERROR_RECOVERY_FAILURE;
    public static WIN32_ERROR ERROR_ALREADY_FIBER;
    public static WIN32_ERROR ERROR_ALREADY_THREAD;
    public static WIN32_ERROR ERROR_STACK_BUFFER_OVERRUN;
    public static WIN32_ERROR ERROR_PARAMETER_QUOTA_EXCEEDED;
    public static WIN32_ERROR ERROR_DEBUGGER_INACTIVE;
    public static WIN32_ERROR ERROR_DELAY_LOAD_FAILED;
    public static WIN32_ERROR ERROR_VDM_DISALLOWED;
    public static WIN32_ERROR ERROR_UNIDENTIFIED_ERROR;
    public static WIN32_ERROR ERROR_INVALID_CRUNTIME_PARAMETER;
    public static WIN32_ERROR ERROR_BEYOND_VDL;
    public static WIN32_ERROR ERROR_INCOMPATIBLE_SERVICE_SID_TYPE;
    public static WIN32_ERROR ERROR_DRIVER_PROCESS_TERMINATED;
    public static WIN32_ERROR ERROR_IMPLEMENTATION_LIMIT;
    public static WIN32_ERROR ERROR_PROCESS_IS_PROTECTED;
    public static WIN32_ERROR ERROR_SERVICE_NOTIFY_CLIENT_LAGGING;
    public static WIN32_ERROR ERROR_DISK_QUOTA_EXCEEDED;
    public static WIN32_ERROR ERROR_CONTENT_BLOCKED;
    public static WIN32_ERROR ERROR_INCOMPATIBLE_SERVICE_PRIVILEGE;
    public static WIN32_ERROR ERROR_APP_HANG;
    public static WIN32_ERROR ERROR_INVALID_LABEL;
    public static WIN32_ERROR ERROR_NOT_ALL_ASSIGNED;
    public static WIN32_ERROR ERROR_SOME_NOT_MAPPED;
    public static WIN32_ERROR ERROR_NO_QUOTAS_FOR_ACCOUNT;
    public static WIN32_ERROR ERROR_LOCAL_USER_SESSION_KEY;
    public static WIN32_ERROR ERROR_NULL_LM_PASSWORD;
    public static WIN32_ERROR ERROR_UNKNOWN_REVISION;
    public static WIN32_ERROR ERROR_REVISION_MISMATCH;
    public static WIN32_ERROR ERROR_INVALID_OWNER;
    public static WIN32_ERROR ERROR_INVALID_PRIMARY_GROUP;
    public static WIN32_ERROR ERROR_NO_IMPERSONATION_TOKEN;
    public static WIN32_ERROR ERROR_CANT_DISABLE_MANDATORY;
    public static WIN32_ERROR ERROR_NO_LOGON_SERVERS;
    public static WIN32_ERROR ERROR_NO_SUCH_LOGON_SESSION;
    public static WIN32_ERROR ERROR_NO_SUCH_PRIVILEGE;
    public static WIN32_ERROR ERROR_PRIVILEGE_NOT_HELD;
    public static WIN32_ERROR ERROR_INVALID_ACCOUNT_NAME;
    public static WIN32_ERROR ERROR_USER_EXISTS;
    public static WIN32_ERROR ERROR_NO_SUCH_USER;
    public static WIN32_ERROR ERROR_GROUP_EXISTS;
    public static WIN32_ERROR ERROR_NO_SUCH_GROUP;
    public static WIN32_ERROR ERROR_MEMBER_IN_GROUP;
    public static WIN32_ERROR ERROR_MEMBER_NOT_IN_GROUP;
    public static WIN32_ERROR ERROR_LAST_ADMIN;
    public static WIN32_ERROR ERROR_WRONG_PASSWORD;
    public static WIN32_ERROR ERROR_ILL_FORMED_PASSWORD;
    public static WIN32_ERROR ERROR_PASSWORD_RESTRICTION;
    public static WIN32_ERROR ERROR_LOGON_FAILURE;
    public static WIN32_ERROR ERROR_ACCOUNT_RESTRICTION;
    public static WIN32_ERROR ERROR_INVALID_LOGON_HOURS;
    public static WIN32_ERROR ERROR_INVALID_WORKSTATION;
    public static WIN32_ERROR ERROR_PASSWORD_EXPIRED;
    public static WIN32_ERROR ERROR_ACCOUNT_DISABLED;
    public static WIN32_ERROR ERROR_NONE_MAPPED;
    public static WIN32_ERROR ERROR_TOO_MANY_LUIDS_REQUESTED;
    public static WIN32_ERROR ERROR_LUIDS_EXHAUSTED;
    public static WIN32_ERROR ERROR_INVALID_SUB_AUTHORITY;
    public static WIN32_ERROR ERROR_INVALID_ACL;
    public static WIN32_ERROR ERROR_INVALID_SID;
    public static WIN32_ERROR ERROR_INVALID_SECURITY_DESCR;
    public static WIN32_ERROR ERROR_BAD_INHERITANCE_ACL;
    public static WIN32_ERROR ERROR_SERVER_DISABLED;
    public static WIN32_ERROR ERROR_SERVER_NOT_DISABLED;
    public static WIN32_ERROR ERROR_INVALID_ID_AUTHORITY;
    public static WIN32_ERROR ERROR_ALLOTTED_SPACE_EXCEEDED;
    public static WIN32_ERROR ERROR_INVALID_GROUP_ATTRIBUTES;
    public static WIN32_ERROR ERROR_BAD_IMPERSONATION_LEVEL;
    public static WIN32_ERROR ERROR_CANT_OPEN_ANONYMOUS;
    public static WIN32_ERROR ERROR_BAD_VALIDATION_CLASS;
    public static WIN32_ERROR ERROR_BAD_TOKEN_TYPE;
    public static WIN32_ERROR ERROR_NO_SECURITY_ON_OBJECT;
    public static WIN32_ERROR ERROR_CANT_ACCESS_DOMAIN_INFO;
    public static WIN32_ERROR ERROR_INVALID_SERVER_STATE;
    public static WIN32_ERROR ERROR_INVALID_DOMAIN_STATE;
    public static WIN32_ERROR ERROR_INVALID_DOMAIN_ROLE;
    public static WIN32_ERROR ERROR_NO_SUCH_DOMAIN;
    public static WIN32_ERROR ERROR_DOMAIN_EXISTS;
    public static WIN32_ERROR ERROR_DOMAIN_LIMIT_EXCEEDED;
    public static WIN32_ERROR ERROR_INTERNAL_DB_CORRUPTION;
    public static WIN32_ERROR ERROR_INTERNAL_ERROR;
    public static WIN32_ERROR ERROR_GENERIC_NOT_MAPPED;
    public static WIN32_ERROR ERROR_BAD_DESCRIPTOR_FORMAT;
    public static WIN32_ERROR ERROR_NOT_LOGON_PROCESS;
    public static WIN32_ERROR ERROR_LOGON_SESSION_EXISTS;
    public static WIN32_ERROR ERROR_NO_SUCH_PACKAGE;
    public static WIN32_ERROR ERROR_BAD_LOGON_SESSION_STATE;
    public static WIN32_ERROR ERROR_LOGON_SESSION_COLLISION;
    public static WIN32_ERROR ERROR_INVALID_LOGON_TYPE;
    public static WIN32_ERROR ERROR_CANNOT_IMPERSONATE;
    public static WIN32_ERROR ERROR_RXACT_INVALID_STATE;
    public static WIN32_ERROR ERROR_RXACT_COMMIT_FAILURE;
    public static WIN32_ERROR ERROR_SPECIAL_ACCOUNT;
    public static WIN32_ERROR ERROR_SPECIAL_GROUP;
    public static WIN32_ERROR ERROR_SPECIAL_USER;
    public static WIN32_ERROR ERROR_MEMBERS_PRIMARY_GROUP;
    public static WIN32_ERROR ERROR_TOKEN_ALREADY_IN_USE;
    public static WIN32_ERROR ERROR_NO_SUCH_ALIAS;
    public static WIN32_ERROR ERROR_MEMBER_NOT_IN_ALIAS;
    public static WIN32_ERROR ERROR_MEMBER_IN_ALIAS;
    public static WIN32_ERROR ERROR_ALIAS_EXISTS;
    public static WIN32_ERROR ERROR_LOGON_NOT_GRANTED;
    public static WIN32_ERROR ERROR_TOO_MANY_SECRETS;
    public static WIN32_ERROR ERROR_SECRET_TOO_LONG;
    public static WIN32_ERROR ERROR_INTERNAL_DB_ERROR;
    public static WIN32_ERROR ERROR_TOO_MANY_CONTEXT_IDS;
    public static WIN32_ERROR ERROR_LOGON_TYPE_NOT_GRANTED;
    public static WIN32_ERROR ERROR_NT_CROSS_ENCRYPTION_REQUIRED;
    public static WIN32_ERROR ERROR_NO_SUCH_MEMBER;
    public static WIN32_ERROR ERROR_INVALID_MEMBER;
    public static WIN32_ERROR ERROR_TOO_MANY_SIDS;
    public static WIN32_ERROR ERROR_LM_CROSS_ENCRYPTION_REQUIRED;
    public static WIN32_ERROR ERROR_NO_INHERITANCE;
    public static WIN32_ERROR ERROR_FILE_CORRUPT;
    public static WIN32_ERROR ERROR_DISK_CORRUPT;
    public static WIN32_ERROR ERROR_NO_USER_SESSION_KEY;
    public static WIN32_ERROR ERROR_LICENSE_QUOTA_EXCEEDED;
    public static WIN32_ERROR ERROR_WRONG_TARGET_NAME;
    public static WIN32_ERROR ERROR_MUTUAL_AUTH_FAILED;
    public static WIN32_ERROR ERROR_TIME_SKEW;
    public static WIN32_ERROR ERROR_CURRENT_DOMAIN_NOT_ALLOWED;
    public static WIN32_ERROR ERROR_INVALID_WINDOW_HANDLE;
    public static WIN32_ERROR ERROR_INVALID_MENU_HANDLE;
    public static WIN32_ERROR ERROR_INVALID_CURSOR_HANDLE;
    public static WIN32_ERROR ERROR_INVALID_ACCEL_HANDLE;
    public static WIN32_ERROR ERROR_INVALID_HOOK_HANDLE;
    public static WIN32_ERROR ERROR_INVALID_DWP_HANDLE;
    public static WIN32_ERROR ERROR_TLW_WITH_WSCHILD;
    public static WIN32_ERROR ERROR_CANNOT_FIND_WND_CLASS;
    public static WIN32_ERROR ERROR_WINDOW_OF_OTHER_THREAD;
    public static WIN32_ERROR ERROR_HOTKEY_ALREADY_REGISTERED;
    public static WIN32_ERROR ERROR_CLASS_ALREADY_EXISTS;
    public static WIN32_ERROR ERROR_CLASS_DOES_NOT_EXIST;
    public static WIN32_ERROR ERROR_CLASS_HAS_WINDOWS;
    public static WIN32_ERROR ERROR_INVALID_INDEX;
    public static WIN32_ERROR ERROR_INVALID_ICON_HANDLE;
    public static WIN32_ERROR ERROR_PRIVATE_DIALOG_INDEX;
    public static WIN32_ERROR ERROR_LISTBOX_ID_NOT_FOUND;
    public static WIN32_ERROR ERROR_NO_WILDCARD_CHARACTERS;
    public static WIN32_ERROR ERROR_CLIPBOARD_NOT_OPEN;
    public static WIN32_ERROR ERROR_HOTKEY_NOT_REGISTERED;
    public static WIN32_ERROR ERROR_WINDOW_NOT_DIALOG;
    public static WIN32_ERROR ERROR_CONTROL_ID_NOT_FOUND;
    public static WIN32_ERROR ERROR_INVALID_COMBOBOX_MESSAGE;
    public static WIN32_ERROR ERROR_WINDOW_NOT_COMBOBOX;
    public static WIN32_ERROR ERROR_INVALID_EDIT_HEIGHT;
    public static WIN32_ERROR ERROR_DC_NOT_FOUND;
    public static WIN32_ERROR ERROR_INVALID_HOOK_FILTER;
    public static WIN32_ERROR ERROR_INVALID_FILTER_PROC;
    public static WIN32_ERROR ERROR_HOOK_NEEDS_HMOD;
    public static WIN32_ERROR ERROR_GLOBAL_ONLY_HOOK;
    public static WIN32_ERROR ERROR_JOURNAL_HOOK_SET;
    public static WIN32_ERROR ERROR_HOOK_NOT_INSTALLED;
    public static WIN32_ERROR ERROR_INVALID_LB_MESSAGE;
    public static WIN32_ERROR ERROR_SETCOUNT_ON_BAD_LB;
    public static WIN32_ERROR ERROR_LB_WITHOUT_TABSTOPS;
    public static WIN32_ERROR ERROR_DESTROY_OBJECT_OF_OTHER_THREAD;
    public static WIN32_ERROR ERROR_CHILD_WINDOW_MENU;
    public static WIN32_ERROR ERROR_NO_SYSTEM_MENU;
    public static WIN32_ERROR ERROR_INVALID_MSGBOX_STYLE;
    public static WIN32_ERROR ERROR_INVALID_SPI_VALUE;
    public static WIN32_ERROR ERROR_SCREEN_ALREADY_LOCKED;
    public static WIN32_ERROR ERROR_HWNDS_HAVE_DIFF_PARENT;
    public static WIN32_ERROR ERROR_NOT_CHILD_WINDOW;
    public static WIN32_ERROR ERROR_INVALID_GW_COMMAND;
    public static WIN32_ERROR ERROR_INVALID_THREAD_ID;
    public static WIN32_ERROR ERROR_NON_MDICHILD_WINDOW;
    public static WIN32_ERROR ERROR_POPUP_ALREADY_ACTIVE;
    public static WIN32_ERROR ERROR_NO_SCROLLBARS;
    public static WIN32_ERROR ERROR_INVALID_SCROLLBAR_RANGE;
    public static WIN32_ERROR ERROR_INVALID_SHOWWIN_COMMAND;
    public static WIN32_ERROR ERROR_NO_SYSTEM_RESOURCES;
    public static WIN32_ERROR ERROR_NONPAGED_SYSTEM_RESOURCES;
    public static WIN32_ERROR ERROR_PAGED_SYSTEM_RESOURCES;
    public static WIN32_ERROR ERROR_WORKING_SET_QUOTA;
    public static WIN32_ERROR ERROR_PAGEFILE_QUOTA;
    public static WIN32_ERROR ERROR_COMMITMENT_LIMIT;
    public static WIN32_ERROR ERROR_MENU_ITEM_NOT_FOUND;
    public static WIN32_ERROR ERROR_INVALID_KEYBOARD_HANDLE;
    public static WIN32_ERROR ERROR_HOOK_TYPE_NOT_ALLOWED;
    public static WIN32_ERROR ERROR_REQUIRES_INTERACTIVE_WINDOWSTATION;
    public static WIN32_ERROR ERROR_TIMEOUT;
    public static WIN32_ERROR ERROR_INVALID_MONITOR_HANDLE;
    public static WIN32_ERROR ERROR_INCORRECT_SIZE;
    public static WIN32_ERROR ERROR_SYMLINK_CLASS_DISABLED;
    public static WIN32_ERROR ERROR_SYMLINK_NOT_SUPPORTED;
    public static WIN32_ERROR ERROR_XML_PARSE_ERROR;
    public static WIN32_ERROR ERROR_XMLDSIG_ERROR;
    public static WIN32_ERROR ERROR_RESTART_APPLICATION;
    public static WIN32_ERROR ERROR_WRONG_COMPARTMENT;
    public static WIN32_ERROR ERROR_AUTHIP_FAILURE;
    public static WIN32_ERROR ERROR_NO_NVRAM_RESOURCES;
    public static WIN32_ERROR ERROR_NOT_GUI_PROCESS;
    public static WIN32_ERROR ERROR_EVENTLOG_FILE_CORRUPT;
    public static WIN32_ERROR ERROR_EVENTLOG_CANT_START;
    public static WIN32_ERROR ERROR_LOG_FILE_FULL;
    public static WIN32_ERROR ERROR_EVENTLOG_FILE_CHANGED;
    public static WIN32_ERROR ERROR_CONTAINER_ASSIGNED;
    public static WIN32_ERROR ERROR_JOB_NO_CONTAINER;
    public static WIN32_ERROR ERROR_INVALID_TASK_NAME;
    public static WIN32_ERROR ERROR_INVALID_TASK_INDEX;
    public static WIN32_ERROR ERROR_THREAD_ALREADY_IN_TASK;
    public static WIN32_ERROR ERROR_INSTALL_SERVICE_FAILURE;
    public static WIN32_ERROR ERROR_INSTALL_USEREXIT;
    public static WIN32_ERROR ERROR_INSTALL_FAILURE;
    public static WIN32_ERROR ERROR_INSTALL_SUSPEND;
    public static WIN32_ERROR ERROR_UNKNOWN_PRODUCT;
    public static WIN32_ERROR ERROR_UNKNOWN_FEATURE;
    public static WIN32_ERROR ERROR_UNKNOWN_COMPONENT;
    public static WIN32_ERROR ERROR_UNKNOWN_PROPERTY;
    public static WIN32_ERROR ERROR_INVALID_HANDLE_STATE;
    public static WIN32_ERROR ERROR_BAD_CONFIGURATION;
    public static WIN32_ERROR ERROR_INDEX_ABSENT;
    public static WIN32_ERROR ERROR_INSTALL_SOURCE_ABSENT;
    public static WIN32_ERROR ERROR_INSTALL_PACKAGE_VERSION;
    public static WIN32_ERROR ERROR_PRODUCT_UNINSTALLED;
    public static WIN32_ERROR ERROR_BAD_QUERY_SYNTAX;
    public static WIN32_ERROR ERROR_INVALID_FIELD;
    public static WIN32_ERROR ERROR_DEVICE_REMOVED;
    public static WIN32_ERROR ERROR_INSTALL_ALREADY_RUNNING;
    public static WIN32_ERROR ERROR_INSTALL_PACKAGE_OPEN_FAILED;
    public static WIN32_ERROR ERROR_INSTALL_PACKAGE_INVALID;
    public static WIN32_ERROR ERROR_INSTALL_UI_FAILURE;
    public static WIN32_ERROR ERROR_INSTALL_LOG_FAILURE;
    public static WIN32_ERROR ERROR_INSTALL_LANGUAGE_UNSUPPORTED;
    public static WIN32_ERROR ERROR_INSTALL_TRANSFORM_FAILURE;
    public static WIN32_ERROR ERROR_INSTALL_PACKAGE_REJECTED;
    public static WIN32_ERROR ERROR_FUNCTION_NOT_CALLED;
    public static WIN32_ERROR ERROR_FUNCTION_FAILED;
    public static WIN32_ERROR ERROR_INVALID_TABLE;
    public static WIN32_ERROR ERROR_DATATYPE_MISMATCH;
    public static WIN32_ERROR ERROR_UNSUPPORTED_TYPE;
    public static WIN32_ERROR ERROR_CREATE_FAILED;
    public static WIN32_ERROR ERROR_INSTALL_TEMP_UNWRITABLE;
    public static WIN32_ERROR ERROR_INSTALL_PLATFORM_UNSUPPORTED;
    public static WIN32_ERROR ERROR_INSTALL_NOTUSED;
    public static WIN32_ERROR ERROR_PATCH_PACKAGE_OPEN_FAILED;
    public static WIN32_ERROR ERROR_PATCH_PACKAGE_INVALID;
    public static WIN32_ERROR ERROR_PATCH_PACKAGE_UNSUPPORTED;
    public static WIN32_ERROR ERROR_PRODUCT_VERSION;
    public static WIN32_ERROR ERROR_INVALID_COMMAND_LINE;
    public static WIN32_ERROR ERROR_INSTALL_REMOTE_DISALLOWED;
    public static WIN32_ERROR ERROR_SUCCESS_REBOOT_INITIATED;
    public static WIN32_ERROR ERROR_PATCH_TARGET_NOT_FOUND;
    public static WIN32_ERROR ERROR_PATCH_PACKAGE_REJECTED;
    public static WIN32_ERROR ERROR_INSTALL_TRANSFORM_REJECTED;
    public static WIN32_ERROR ERROR_INSTALL_REMOTE_PROHIBITED;
    public static WIN32_ERROR ERROR_PATCH_REMOVAL_UNSUPPORTED;
    public static WIN32_ERROR ERROR_UNKNOWN_PATCH;
    public static WIN32_ERROR ERROR_PATCH_NO_SEQUENCE;
    public static WIN32_ERROR ERROR_PATCH_REMOVAL_DISALLOWED;
    public static WIN32_ERROR ERROR_INVALID_PATCH_XML;
    public static WIN32_ERROR ERROR_PATCH_MANAGED_ADVERTISED_PRODUCT;
    public static WIN32_ERROR ERROR_INSTALL_SERVICE_SAFEBOOT;
    public static WIN32_ERROR ERROR_FAIL_FAST_EXCEPTION;
    public static WIN32_ERROR ERROR_INSTALL_REJECTED;
    public static WIN32_ERROR ERROR_DYNAMIC_CODE_BLOCKED;
    public static WIN32_ERROR ERROR_NOT_SAME_OBJECT;
    public static WIN32_ERROR ERROR_STRICT_CFG_VIOLATION;
    public static WIN32_ERROR ERROR_SET_CONTEXT_DENIED;
    public static WIN32_ERROR ERROR_CROSS_PARTITION_VIOLATION;
    public static WIN32_ERROR ERROR_RETURN_ADDRESS_HIJACK_ATTEMPT;
    public static WIN32_ERROR ERROR_INVALID_USER_BUFFER;
    public static WIN32_ERROR ERROR_UNRECOGNIZED_MEDIA;
    public static WIN32_ERROR ERROR_NO_TRUST_LSA_SECRET;
    public static WIN32_ERROR ERROR_NO_TRUST_SAM_ACCOUNT;
    public static WIN32_ERROR ERROR_TRUSTED_DOMAIN_FAILURE;
    public static WIN32_ERROR ERROR_TRUSTED_RELATIONSHIP_FAILURE;
    public static WIN32_ERROR ERROR_TRUST_FAILURE;
    public static WIN32_ERROR ERROR_NETLOGON_NOT_STARTED;
    public static WIN32_ERROR ERROR_ACCOUNT_EXPIRED;
    public static WIN32_ERROR ERROR_REDIRECTOR_HAS_OPEN_HANDLES;
    public static WIN32_ERROR ERROR_PRINTER_DRIVER_ALREADY_INSTALLED;
    public static WIN32_ERROR ERROR_UNKNOWN_PORT;
    public static WIN32_ERROR ERROR_UNKNOWN_PRINTER_DRIVER;
    public static WIN32_ERROR ERROR_UNKNOWN_PRINTPROCESSOR;
    public static WIN32_ERROR ERROR_INVALID_SEPARATOR_FILE;
    public static WIN32_ERROR ERROR_INVALID_PRIORITY;
    public static WIN32_ERROR ERROR_INVALID_PRINTER_NAME;
    public static WIN32_ERROR ERROR_PRINTER_ALREADY_EXISTS;
    public static WIN32_ERROR ERROR_INVALID_PRINTER_COMMAND;
    public static WIN32_ERROR ERROR_INVALID_DATATYPE;
    public static WIN32_ERROR ERROR_INVALID_ENVIRONMENT;
    public static WIN32_ERROR ERROR_NOLOGON_INTERDOMAIN_TRUST_ACCOUNT;
    public static WIN32_ERROR ERROR_NOLOGON_WORKSTATION_TRUST_ACCOUNT;
    public static WIN32_ERROR ERROR_NOLOGON_SERVER_TRUST_ACCOUNT;
    public static WIN32_ERROR ERROR_DOMAIN_TRUST_INCONSISTENT;
    public static WIN32_ERROR ERROR_SERVER_HAS_OPEN_HANDLES;
    public static WIN32_ERROR ERROR_RESOURCE_DATA_NOT_FOUND;
    public static WIN32_ERROR ERROR_RESOURCE_TYPE_NOT_FOUND;
    public static WIN32_ERROR ERROR_RESOURCE_NAME_NOT_FOUND;
    public static WIN32_ERROR ERROR_RESOURCE_LANG_NOT_FOUND;
    public static WIN32_ERROR ERROR_NOT_ENOUGH_QUOTA;
    public static WIN32_ERROR ERROR_INVALID_TIME;
    public static WIN32_ERROR ERROR_INVALID_FORM_NAME;
    public static WIN32_ERROR ERROR_INVALID_FORM_SIZE;
    public static WIN32_ERROR ERROR_ALREADY_WAITING;
    public static WIN32_ERROR ERROR_PRINTER_DELETED;
    public static WIN32_ERROR ERROR_INVALID_PRINTER_STATE;
    public static WIN32_ERROR ERROR_PASSWORD_MUST_CHANGE;
    public static WIN32_ERROR ERROR_DOMAIN_CONTROLLER_NOT_FOUND;
    public static WIN32_ERROR ERROR_ACCOUNT_LOCKED_OUT;
    public static WIN32_ERROR ERROR_NO_SITENAME;
    public static WIN32_ERROR ERROR_CANT_ACCESS_FILE;
    public static WIN32_ERROR ERROR_CANT_RESOLVE_FILENAME;
    public static WIN32_ERROR ERROR_KM_DRIVER_BLOCKED;
    public static WIN32_ERROR ERROR_CONTEXT_EXPIRED;
    public static WIN32_ERROR ERROR_PER_USER_TRUST_QUOTA_EXCEEDED;
    public static WIN32_ERROR ERROR_ALL_USER_TRUST_QUOTA_EXCEEDED;
    public static WIN32_ERROR ERROR_USER_DELETE_TRUST_QUOTA_EXCEEDED;
    public static WIN32_ERROR ERROR_AUTHENTICATION_FIREWALL_FAILED;
    public static WIN32_ERROR ERROR_REMOTE_PRINT_CONNECTIONS_BLOCKED;
    public static WIN32_ERROR ERROR_NTLM_BLOCKED;
    public static WIN32_ERROR ERROR_PASSWORD_CHANGE_REQUIRED;
    public static WIN32_ERROR ERROR_LOST_MODE_LOGON_RESTRICTION;
    public static WIN32_ERROR ERROR_INVALID_PIXEL_FORMAT;
    public static WIN32_ERROR ERROR_BAD_DRIVER;
    public static WIN32_ERROR ERROR_INVALID_WINDOW_STYLE;
    public static WIN32_ERROR ERROR_METAFILE_NOT_SUPPORTED;
    public static WIN32_ERROR ERROR_TRANSFORM_NOT_SUPPORTED;
    public static WIN32_ERROR ERROR_CLIPPING_NOT_SUPPORTED;
    public static WIN32_ERROR ERROR_INVALID_CMM;
    public static WIN32_ERROR ERROR_INVALID_PROFILE;
    public static WIN32_ERROR ERROR_TAG_NOT_FOUND;
    public static WIN32_ERROR ERROR_TAG_NOT_PRESENT;
    public static WIN32_ERROR ERROR_DUPLICATE_TAG;
    public static WIN32_ERROR ERROR_PROFILE_NOT_ASSOCIATED_WITH_DEVICE;
    public static WIN32_ERROR ERROR_PROFILE_NOT_FOUND;
    public static WIN32_ERROR ERROR_INVALID_COLORSPACE;
    public static WIN32_ERROR ERROR_ICM_NOT_ENABLED;
    public static WIN32_ERROR ERROR_DELETING_ICM_XFORM;
    public static WIN32_ERROR ERROR_INVALID_TRANSFORM;
    public static WIN32_ERROR ERROR_COLORSPACE_MISMATCH;
    public static WIN32_ERROR ERROR_INVALID_COLORINDEX;
    public static WIN32_ERROR ERROR_PROFILE_DOES_NOT_MATCH_DEVICE;
    public static WIN32_ERROR ERROR_CONNECTED_OTHER_PASSWORD;
    public static WIN32_ERROR ERROR_CONNECTED_OTHER_PASSWORD_DEFAULT;
    public static WIN32_ERROR ERROR_BAD_USERNAME;
    public static WIN32_ERROR ERROR_NOT_CONNECTED;
    public static WIN32_ERROR ERROR_OPEN_FILES;
    public static WIN32_ERROR ERROR_ACTIVE_CONNECTIONS;
    public static WIN32_ERROR ERROR_DEVICE_IN_USE;
    public static WIN32_ERROR ERROR_UNKNOWN_PRINT_MONITOR;
    public static WIN32_ERROR ERROR_PRINTER_DRIVER_IN_USE;
    public static WIN32_ERROR ERROR_SPOOL_FILE_NOT_FOUND;
    public static WIN32_ERROR ERROR_SPL_NO_STARTDOC;
    public static WIN32_ERROR ERROR_SPL_NO_ADDJOB;
    public static WIN32_ERROR ERROR_PRINT_PROCESSOR_ALREADY_INSTALLED;
    public static WIN32_ERROR ERROR_PRINT_MONITOR_ALREADY_INSTALLED;
    public static WIN32_ERROR ERROR_INVALID_PRINT_MONITOR;
    public static WIN32_ERROR ERROR_PRINT_MONITOR_IN_USE;
    public static WIN32_ERROR ERROR_PRINTER_HAS_JOBS_QUEUED;
    public static WIN32_ERROR ERROR_SUCCESS_REBOOT_REQUIRED;
    public static WIN32_ERROR ERROR_SUCCESS_RESTART_REQUIRED;
    public static WIN32_ERROR ERROR_PRINTER_NOT_FOUND;
    public static WIN32_ERROR ERROR_PRINTER_DRIVER_WARNED;
    public static WIN32_ERROR ERROR_PRINTER_DRIVER_BLOCKED;
    public static WIN32_ERROR ERROR_PRINTER_DRIVER_PACKAGE_IN_USE;
    public static WIN32_ERROR ERROR_CORE_DRIVER_PACKAGE_NOT_FOUND;
    public static WIN32_ERROR ERROR_FAIL_REBOOT_REQUIRED;
    public static WIN32_ERROR ERROR_FAIL_REBOOT_INITIATED;
    public static WIN32_ERROR ERROR_PRINTER_DRIVER_DOWNLOAD_NEEDED;
    public static WIN32_ERROR ERROR_PRINT_JOB_RESTART_REQUIRED;
    public static WIN32_ERROR ERROR_INVALID_PRINTER_DRIVER_MANIFEST;
    public static WIN32_ERROR ERROR_PRINTER_NOT_SHAREABLE;
    public static WIN32_ERROR ERROR_SERVER_SERVICE_CALL_REQUIRES_SMB1;
    public static WIN32_ERROR ERROR_NETWORK_AUTHENTICATION_PROMPT_CANCELED;
    public static WIN32_ERROR ERROR_REQUEST_PAUSED;
    public static WIN32_ERROR ERROR_APPEXEC_CONDITION_NOT_SATISFIED;
    public static WIN32_ERROR ERROR_APPEXEC_HANDLE_INVALIDATED;
    public static WIN32_ERROR ERROR_APPEXEC_INVALID_HOST_GENERATION;
    public static WIN32_ERROR ERROR_APPEXEC_UNEXPECTED_PROCESS_REGISTRATION;
    public static WIN32_ERROR ERROR_APPEXEC_INVALID_HOST_STATE;
    public static WIN32_ERROR ERROR_APPEXEC_NO_DONOR;
    public static WIN32_ERROR ERROR_APPEXEC_HOST_ID_MISMATCH;
    public static WIN32_ERROR ERROR_APPEXEC_UNKNOWN_USER;
    public static WIN32_ERROR ERROR_APPEXEC_APP_COMPAT_BLOCK;
    public static WIN32_ERROR ERROR_APPEXEC_CALLER_WAIT_TIMEOUT;
    public static WIN32_ERROR ERROR_APPEXEC_CALLER_WAIT_TIMEOUT_TERMINATION;
    public static WIN32_ERROR ERROR_APPEXEC_CALLER_WAIT_TIMEOUT_LICENSING;
    public static WIN32_ERROR ERROR_APPEXEC_CALLER_WAIT_TIMEOUT_RESOURCES;
    public static WIN32_ERROR ERROR_VRF_VOLATILE_CFG_AND_IO_ENABLED;
    public static WIN32_ERROR ERROR_VRF_VOLATILE_NOT_STOPPABLE;
    public static WIN32_ERROR ERROR_VRF_VOLATILE_SAFE_MODE;
    public static WIN32_ERROR ERROR_VRF_VOLATILE_NOT_RUNNABLE_SYSTEM;
    public static WIN32_ERROR ERROR_VRF_VOLATILE_NOT_SUPPORTED_RULECLASS;
    public static WIN32_ERROR ERROR_VRF_VOLATILE_PROTECTED_DRIVER;
    public static WIN32_ERROR ERROR_VRF_VOLATILE_NMI_REGISTERED;
    public static WIN32_ERROR ERROR_VRF_VOLATILE_SETTINGS_CONFLICT;
    public static WIN32_ERROR ERROR_DIF_IOCALLBACK_NOT_REPLACED;
    public static WIN32_ERROR ERROR_DIF_LIVEDUMP_LIMIT_EXCEEDED;
    public static WIN32_ERROR ERROR_DIF_VOLATILE_SECTION_NOT_LOCKED;
    public static WIN32_ERROR ERROR_DIF_VOLATILE_DRIVER_HOTPATCHED;
    public static WIN32_ERROR ERROR_DIF_VOLATILE_INVALID_INFO;
    public static WIN32_ERROR ERROR_DIF_VOLATILE_DRIVER_IS_NOT_RUNNING;
    public static WIN32_ERROR ERROR_DIF_VOLATILE_PLUGIN_IS_NOT_RUNNING;
    public static WIN32_ERROR ERROR_DIF_VOLATILE_PLUGIN_CHANGE_NOT_ALLOWED;
    public static WIN32_ERROR ERROR_DIF_VOLATILE_NOT_ALLOWED;
    public static WIN32_ERROR ERROR_DIF_BINDING_API_NOT_FOUND;
    public static WIN32_ERROR ERROR_IO_REISSUE_AS_CACHED;
    public static WIN32_ERROR ERROR_WINS_INTERNAL;
    public static WIN32_ERROR ERROR_CAN_NOT_DEL_LOCAL_WINS;
    public static WIN32_ERROR ERROR_STATIC_INIT;
    public static WIN32_ERROR ERROR_INC_BACKUP;
    public static WIN32_ERROR ERROR_FULL_BACKUP;
    public static WIN32_ERROR ERROR_REC_NON_EXISTENT;
    public static WIN32_ERROR ERROR_RPL_NOT_ALLOWED;
    public static WIN32_ERROR ERROR_DHCP_ADDRESS_CONFLICT;
    public static WIN32_ERROR ERROR_WMI_GUID_NOT_FOUND;
    public static WIN32_ERROR ERROR_WMI_INSTANCE_NOT_FOUND;
    public static WIN32_ERROR ERROR_WMI_ITEMID_NOT_FOUND;
    public static WIN32_ERROR ERROR_WMI_TRY_AGAIN;
    public static WIN32_ERROR ERROR_WMI_DP_NOT_FOUND;
    public static WIN32_ERROR ERROR_WMI_UNRESOLVED_INSTANCE_REF;
    public static WIN32_ERROR ERROR_WMI_ALREADY_ENABLED;
    public static WIN32_ERROR ERROR_WMI_GUID_DISCONNECTED;
    public static WIN32_ERROR ERROR_WMI_SERVER_UNAVAILABLE;
    public static WIN32_ERROR ERROR_WMI_DP_FAILED;
    public static WIN32_ERROR ERROR_WMI_INVALID_MOF;
    public static WIN32_ERROR ERROR_WMI_INVALID_REGINFO;
    public static WIN32_ERROR ERROR_WMI_ALREADY_DISABLED;
    public static WIN32_ERROR ERROR_WMI_READ_ONLY;
    public static WIN32_ERROR ERROR_WMI_SET_FAILURE;
    public static WIN32_ERROR ERROR_NOT_APPCONTAINER;
    public static WIN32_ERROR ERROR_APPCONTAINER_REQUIRED;
    public static WIN32_ERROR ERROR_NOT_SUPPORTED_IN_APPCONTAINER;
    public static WIN32_ERROR ERROR_INVALID_PACKAGE_SID_LENGTH;
    public static WIN32_ERROR ERROR_INVALID_MEDIA;
    public static WIN32_ERROR ERROR_INVALID_LIBRARY;
    public static WIN32_ERROR ERROR_INVALID_MEDIA_POOL;
    public static WIN32_ERROR ERROR_DRIVE_MEDIA_MISMATCH;
    public static WIN32_ERROR ERROR_MEDIA_OFFLINE;
    public static WIN32_ERROR ERROR_LIBRARY_OFFLINE;
    public static WIN32_ERROR ERROR_EMPTY;
    public static WIN32_ERROR ERROR_NOT_EMPTY;
    public static WIN32_ERROR ERROR_MEDIA_UNAVAILABLE;
    public static WIN32_ERROR ERROR_RESOURCE_DISABLED;
    public static WIN32_ERROR ERROR_INVALID_CLEANER;
    public static WIN32_ERROR ERROR_UNABLE_TO_CLEAN;
    public static WIN32_ERROR ERROR_OBJECT_NOT_FOUND;
    public static WIN32_ERROR ERROR_DATABASE_FAILURE;
    public static WIN32_ERROR ERROR_DATABASE_FULL;
    public static WIN32_ERROR ERROR_MEDIA_INCOMPATIBLE;
    public static WIN32_ERROR ERROR_RESOURCE_NOT_PRESENT;
    public static WIN32_ERROR ERROR_INVALID_OPERATION;
    public static WIN32_ERROR ERROR_MEDIA_NOT_AVAILABLE;
    public static WIN32_ERROR ERROR_DEVICE_NOT_AVAILABLE;
    public static WIN32_ERROR ERROR_REQUEST_REFUSED;
    public static WIN32_ERROR ERROR_INVALID_DRIVE_OBJECT;
    public static WIN32_ERROR ERROR_LIBRARY_FULL;
    public static WIN32_ERROR ERROR_MEDIUM_NOT_ACCESSIBLE;
    public static WIN32_ERROR ERROR_UNABLE_TO_LOAD_MEDIUM;
    public static WIN32_ERROR ERROR_UNABLE_TO_INVENTORY_DRIVE;
    public static WIN32_ERROR ERROR_UNABLE_TO_INVENTORY_SLOT;
    public static WIN32_ERROR ERROR_UNABLE_TO_INVENTORY_TRANSPORT;
    public static WIN32_ERROR ERROR_TRANSPORT_FULL;
    public static WIN32_ERROR ERROR_CONTROLLING_IEPORT;
    public static WIN32_ERROR ERROR_UNABLE_TO_EJECT_MOUNTED_MEDIA;
    public static WIN32_ERROR ERROR_CLEANER_SLOT_SET;
    public static WIN32_ERROR ERROR_CLEANER_SLOT_NOT_SET;
    public static WIN32_ERROR ERROR_CLEANER_CARTRIDGE_SPENT;
    public static WIN32_ERROR ERROR_UNEXPECTED_OMID;
    public static WIN32_ERROR ERROR_CANT_DELETE_LAST_ITEM;
    public static WIN32_ERROR ERROR_MESSAGE_EXCEEDS_MAX_SIZE;
    public static WIN32_ERROR ERROR_VOLUME_CONTAINS_SYS_FILES;
    public static WIN32_ERROR ERROR_INDIGENOUS_TYPE;
    public static WIN32_ERROR ERROR_NO_SUPPORTING_DRIVES;
    public static WIN32_ERROR ERROR_CLEANER_CARTRIDGE_INSTALLED;
    public static WIN32_ERROR ERROR_IEPORT_FULL;
    public static WIN32_ERROR ERROR_FILE_OFFLINE;
    public static WIN32_ERROR ERROR_REMOTE_STORAGE_NOT_ACTIVE;
    public static WIN32_ERROR ERROR_REMOTE_STORAGE_MEDIA_ERROR;
    public static WIN32_ERROR ERROR_NOT_A_REPARSE_POINT;
    public static WIN32_ERROR ERROR_REPARSE_ATTRIBUTE_CONFLICT;
    public static WIN32_ERROR ERROR_INVALID_REPARSE_DATA;
    public static WIN32_ERROR ERROR_REPARSE_TAG_INVALID;
    public static WIN32_ERROR ERROR_REPARSE_TAG_MISMATCH;
    public static WIN32_ERROR ERROR_REPARSE_POINT_ENCOUNTERED;
    public static WIN32_ERROR ERROR_APP_DATA_NOT_FOUND;
    public static WIN32_ERROR ERROR_APP_DATA_EXPIRED;
    public static WIN32_ERROR ERROR_APP_DATA_CORRUPT;
    public static WIN32_ERROR ERROR_APP_DATA_LIMIT_EXCEEDED;
    public static WIN32_ERROR ERROR_APP_DATA_REBOOT_REQUIRED;
    public static WIN32_ERROR ERROR_SECUREBOOT_ROLLBACK_DETECTED;
    public static WIN32_ERROR ERROR_SECUREBOOT_POLICY_VIOLATION;
    public static WIN32_ERROR ERROR_SECUREBOOT_INVALID_POLICY;
    public static WIN32_ERROR ERROR_SECUREBOOT_POLICY_PUBLISHER_NOT_FOUND;
    public static WIN32_ERROR ERROR_SECUREBOOT_POLICY_NOT_SIGNED;
    public static WIN32_ERROR ERROR_SECUREBOOT_NOT_ENABLED;
    public static WIN32_ERROR ERROR_SECUREBOOT_FILE_REPLACED;
    public static WIN32_ERROR ERROR_SECUREBOOT_POLICY_NOT_AUTHORIZED;
    public static WIN32_ERROR ERROR_SECUREBOOT_POLICY_UNKNOWN;
    public static WIN32_ERROR ERROR_SECUREBOOT_POLICY_MISSING_ANTIROLLBACKVERSION;
    public static WIN32_ERROR ERROR_SECUREBOOT_PLATFORM_ID_MISMATCH;
    public static WIN32_ERROR ERROR_SECUREBOOT_POLICY_ROLLBACK_DETECTED;
    public static WIN32_ERROR ERROR_SECUREBOOT_POLICY_UPGRADE_MISMATCH;
    public static WIN32_ERROR ERROR_SECUREBOOT_REQUIRED_POLICY_FILE_MISSING;
    public static WIN32_ERROR ERROR_SECUREBOOT_NOT_BASE_POLICY;
    public static WIN32_ERROR ERROR_SECUREBOOT_NOT_SUPPLEMENTAL_POLICY;
    public static WIN32_ERROR ERROR_OFFLOAD_READ_FLT_NOT_SUPPORTED;
    public static WIN32_ERROR ERROR_OFFLOAD_WRITE_FLT_NOT_SUPPORTED;
    public static WIN32_ERROR ERROR_OFFLOAD_READ_FILE_NOT_SUPPORTED;
    public static WIN32_ERROR ERROR_OFFLOAD_WRITE_FILE_NOT_SUPPORTED;
    public static WIN32_ERROR ERROR_ALREADY_HAS_STREAM_ID;
    public static WIN32_ERROR ERROR_SMR_GARBAGE_COLLECTION_REQUIRED;
    public static WIN32_ERROR ERROR_WOF_WIM_HEADER_CORRUPT;
    public static WIN32_ERROR ERROR_WOF_WIM_RESOURCE_TABLE_CORRUPT;
    public static WIN32_ERROR ERROR_WOF_FILE_RESOURCE_TABLE_CORRUPT;
    public static WIN32_ERROR ERROR_OBJECT_IS_IMMUTABLE;
    public static WIN32_ERROR ERROR_VOLUME_NOT_SIS_ENABLED;
    public static WIN32_ERROR ERROR_SYSTEM_INTEGRITY_ROLLBACK_DETECTED;
    public static WIN32_ERROR ERROR_SYSTEM_INTEGRITY_POLICY_VIOLATION;
    public static WIN32_ERROR ERROR_SYSTEM_INTEGRITY_INVALID_POLICY;
    public static WIN32_ERROR ERROR_SYSTEM_INTEGRITY_POLICY_NOT_SIGNED;
    public static WIN32_ERROR ERROR_SYSTEM_INTEGRITY_TOO_MANY_POLICIES;
    public static WIN32_ERROR ERROR_SYSTEM_INTEGRITY_SUPPLEMENTAL_POLICY_NOT_AUTHORIZED;
    public static WIN32_ERROR ERROR_SYSTEM_INTEGRITY_REPUTATION_MALICIOUS;
    public static WIN32_ERROR ERROR_SYSTEM_INTEGRITY_REPUTATION_PUA;
    public static WIN32_ERROR ERROR_SYSTEM_INTEGRITY_REPUTATION_DANGEROUS_EXT;
    public static WIN32_ERROR ERROR_SYSTEM_INTEGRITY_REPUTATION_OFFLINE;
    public static WIN32_ERROR ERROR_VSM_NOT_INITIALIZED;
    public static WIN32_ERROR ERROR_VSM_DMA_PROTECTION_NOT_IN_USE;
    public static WIN32_ERROR ERROR_PLATFORM_MANIFEST_NOT_AUTHORIZED;
    public static WIN32_ERROR ERROR_PLATFORM_MANIFEST_INVALID;
    public static WIN32_ERROR ERROR_PLATFORM_MANIFEST_FILE_NOT_AUTHORIZED;
    public static WIN32_ERROR ERROR_PLATFORM_MANIFEST_CATALOG_NOT_AUTHORIZED;
    public static WIN32_ERROR ERROR_PLATFORM_MANIFEST_BINARY_ID_NOT_FOUND;
    public static WIN32_ERROR ERROR_PLATFORM_MANIFEST_NOT_ACTIVE;
    public static WIN32_ERROR ERROR_PLATFORM_MANIFEST_NOT_SIGNED;
    public static WIN32_ERROR ERROR_SYSTEM_INTEGRITY_REPUTATION_UNFRIENDLY_FILE;
    public static WIN32_ERROR ERROR_SYSTEM_INTEGRITY_REPUTATION_UNATTAINABLE;
    public static WIN32_ERROR ERROR_DEPENDENT_RESOURCE_EXISTS;
    public static WIN32_ERROR ERROR_DEPENDENCY_NOT_FOUND;
    public static WIN32_ERROR ERROR_DEPENDENCY_ALREADY_EXISTS;
    public static WIN32_ERROR ERROR_RESOURCE_NOT_ONLINE;
    public static WIN32_ERROR ERROR_HOST_NODE_NOT_AVAILABLE;
    public static WIN32_ERROR ERROR_RESOURCE_NOT_AVAILABLE;
    public static WIN32_ERROR ERROR_RESOURCE_NOT_FOUND;
    public static WIN32_ERROR ERROR_SHUTDOWN_CLUSTER;
    public static WIN32_ERROR ERROR_CANT_EVICT_ACTIVE_NODE;
    public static WIN32_ERROR ERROR_OBJECT_ALREADY_EXISTS;
    public static WIN32_ERROR ERROR_OBJECT_IN_LIST;
    public static WIN32_ERROR ERROR_GROUP_NOT_AVAILABLE;
    public static WIN32_ERROR ERROR_GROUP_NOT_FOUND;
    public static WIN32_ERROR ERROR_GROUP_NOT_ONLINE;
    public static WIN32_ERROR ERROR_HOST_NODE_NOT_RESOURCE_OWNER;
    public static WIN32_ERROR ERROR_HOST_NODE_NOT_GROUP_OWNER;
    public static WIN32_ERROR ERROR_RESMON_CREATE_FAILED;
    public static WIN32_ERROR ERROR_RESMON_ONLINE_FAILED;
    public static WIN32_ERROR ERROR_RESOURCE_ONLINE;
    public static WIN32_ERROR ERROR_QUORUM_RESOURCE;
    public static WIN32_ERROR ERROR_NOT_QUORUM_CAPABLE;
    public static WIN32_ERROR ERROR_CLUSTER_SHUTTING_DOWN;
    public static WIN32_ERROR ERROR_INVALID_STATE;
    public static WIN32_ERROR ERROR_RESOURCE_PROPERTIES_STORED;
    public static WIN32_ERROR ERROR_NOT_QUORUM_CLASS;
    public static WIN32_ERROR ERROR_CORE_RESOURCE;
    public static WIN32_ERROR ERROR_QUORUM_RESOURCE_ONLINE_FAILED;
    public static WIN32_ERROR ERROR_QUORUMLOG_OPEN_FAILED;
    public static WIN32_ERROR ERROR_CLUSTERLOG_CORRUPT;
    public static WIN32_ERROR ERROR_CLUSTERLOG_RECORD_EXCEEDS_MAXSIZE;
    public static WIN32_ERROR ERROR_CLUSTERLOG_EXCEEDS_MAXSIZE;
    public static WIN32_ERROR ERROR_CLUSTERLOG_CHKPOINT_NOT_FOUND;
    public static WIN32_ERROR ERROR_CLUSTERLOG_NOT_ENOUGH_SPACE;
    public static WIN32_ERROR ERROR_QUORUM_OWNER_ALIVE;
    public static WIN32_ERROR ERROR_NETWORK_NOT_AVAILABLE;
    public static WIN32_ERROR ERROR_NODE_NOT_AVAILABLE;
    public static WIN32_ERROR ERROR_ALL_NODES_NOT_AVAILABLE;
    public static WIN32_ERROR ERROR_RESOURCE_FAILED;
    public static WIN32_ERROR ERROR_CLUSTER_INVALID_NODE;
    public static WIN32_ERROR ERROR_CLUSTER_NODE_EXISTS;
    public static WIN32_ERROR ERROR_CLUSTER_JOIN_IN_PROGRESS;
    public static WIN32_ERROR ERROR_CLUSTER_NODE_NOT_FOUND;
    public static WIN32_ERROR ERROR_CLUSTER_LOCAL_NODE_NOT_FOUND;
    public static WIN32_ERROR ERROR_CLUSTER_NETWORK_EXISTS;
    public static WIN32_ERROR ERROR_CLUSTER_NETWORK_NOT_FOUND;
    public static WIN32_ERROR ERROR_CLUSTER_NETINTERFACE_EXISTS;
    public static WIN32_ERROR ERROR_CLUSTER_NETINTERFACE_NOT_FOUND;
    public static WIN32_ERROR ERROR_CLUSTER_INVALID_REQUEST;
    public static WIN32_ERROR ERROR_CLUSTER_INVALID_NETWORK_PROVIDER;
    public static WIN32_ERROR ERROR_CLUSTER_NODE_DOWN;
    public static WIN32_ERROR ERROR_CLUSTER_NODE_UNREACHABLE;
    public static WIN32_ERROR ERROR_CLUSTER_NODE_NOT_MEMBER;
    public static WIN32_ERROR ERROR_CLUSTER_JOIN_NOT_IN_PROGRESS;
    public static WIN32_ERROR ERROR_CLUSTER_INVALID_NETWORK;
    public static WIN32_ERROR ERROR_CLUSTER_NODE_UP;
    public static WIN32_ERROR ERROR_CLUSTER_IPADDR_IN_USE;
    public static WIN32_ERROR ERROR_CLUSTER_NODE_NOT_PAUSED;
    public static WIN32_ERROR ERROR_CLUSTER_NO_SECURITY_CONTEXT;
    public static WIN32_ERROR ERROR_CLUSTER_NETWORK_NOT_INTERNAL;
    public static WIN32_ERROR ERROR_CLUSTER_NODE_ALREADY_UP;
    public static WIN32_ERROR ERROR_CLUSTER_NODE_ALREADY_DOWN;
    public static WIN32_ERROR ERROR_CLUSTER_NETWORK_ALREADY_ONLINE;
    public static WIN32_ERROR ERROR_CLUSTER_NETWORK_ALREADY_OFFLINE;
    public static WIN32_ERROR ERROR_CLUSTER_NODE_ALREADY_MEMBER;
    public static WIN32_ERROR ERROR_CLUSTER_LAST_INTERNAL_NETWORK;
    public static WIN32_ERROR ERROR_CLUSTER_NETWORK_HAS_DEPENDENTS;
    public static WIN32_ERROR ERROR_INVALID_OPERATION_ON_QUORUM;
    public static WIN32_ERROR ERROR_DEPENDENCY_NOT_ALLOWED;
    public static WIN32_ERROR ERROR_CLUSTER_NODE_PAUSED;
    public static WIN32_ERROR ERROR_NODE_CANT_HOST_RESOURCE;
    public static WIN32_ERROR ERROR_CLUSTER_NODE_NOT_READY;
    public static WIN32_ERROR ERROR_CLUSTER_NODE_SHUTTING_DOWN;
    public static WIN32_ERROR ERROR_CLUSTER_JOIN_ABORTED;
    public static WIN32_ERROR ERROR_CLUSTER_INCOMPATIBLE_VERSIONS;
    public static WIN32_ERROR ERROR_CLUSTER_MAXNUM_OF_RESOURCES_EXCEEDED;
    public static WIN32_ERROR ERROR_CLUSTER_SYSTEM_CONFIG_CHANGED;
    public static WIN32_ERROR ERROR_CLUSTER_RESOURCE_TYPE_NOT_FOUND;
    public static WIN32_ERROR ERROR_CLUSTER_RESTYPE_NOT_SUPPORTED;
    public static WIN32_ERROR ERROR_CLUSTER_RESNAME_NOT_FOUND;
    public static WIN32_ERROR ERROR_CLUSTER_NO_RPC_PACKAGES_REGISTERED;
    public static WIN32_ERROR ERROR_CLUSTER_OWNER_NOT_IN_PREFLIST;
    public static WIN32_ERROR ERROR_CLUSTER_DATABASE_SEQMISMATCH;
    public static WIN32_ERROR ERROR_RESMON_INVALID_STATE;
    public static WIN32_ERROR ERROR_CLUSTER_GUM_NOT_LOCKER;
    public static WIN32_ERROR ERROR_QUORUM_DISK_NOT_FOUND;
    public static WIN32_ERROR ERROR_DATABASE_BACKUP_CORRUPT;
    public static WIN32_ERROR ERROR_CLUSTER_NODE_ALREADY_HAS_DFS_ROOT;
    public static WIN32_ERROR ERROR_RESOURCE_PROPERTY_UNCHANGEABLE;
    public static WIN32_ERROR ERROR_NO_ADMIN_ACCESS_POINT;
    public static WIN32_ERROR ERROR_CLUSTER_MEMBERSHIP_INVALID_STATE;
    public static WIN32_ERROR ERROR_CLUSTER_QUORUMLOG_NOT_FOUND;
    public static WIN32_ERROR ERROR_CLUSTER_MEMBERSHIP_HALT;
    public static WIN32_ERROR ERROR_CLUSTER_INSTANCE_ID_MISMATCH;
    public static WIN32_ERROR ERROR_CLUSTER_NETWORK_NOT_FOUND_FOR_IP;
    public static WIN32_ERROR ERROR_CLUSTER_PROPERTY_DATA_TYPE_MISMATCH;
    public static WIN32_ERROR ERROR_CLUSTER_EVICT_WITHOUT_CLEANUP;
    public static WIN32_ERROR ERROR_CLUSTER_PARAMETER_MISMATCH;
    public static WIN32_ERROR ERROR_NODE_CANNOT_BE_CLUSTERED;
    public static WIN32_ERROR ERROR_CLUSTER_WRONG_OS_VERSION;
    public static WIN32_ERROR ERROR_CLUSTER_CANT_CREATE_DUP_CLUSTER_NAME;
    public static WIN32_ERROR ERROR_CLUSCFG_ALREADY_COMMITTED;
    public static WIN32_ERROR ERROR_CLUSCFG_ROLLBACK_FAILED;
    public static WIN32_ERROR ERROR_CLUSCFG_SYSTEM_DISK_DRIVE_LETTER_CONFLICT;
    public static WIN32_ERROR ERROR_CLUSTER_OLD_VERSION;
    public static WIN32_ERROR ERROR_CLUSTER_MISMATCHED_COMPUTER_ACCT_NAME;
    public static WIN32_ERROR ERROR_CLUSTER_NO_NET_ADAPTERS;
    public static WIN32_ERROR ERROR_CLUSTER_POISONED;
    public static WIN32_ERROR ERROR_CLUSTER_GROUP_MOVING;
    public static WIN32_ERROR ERROR_CLUSTER_RESOURCE_TYPE_BUSY;
    public static WIN32_ERROR ERROR_RESOURCE_CALL_TIMED_OUT;
    public static WIN32_ERROR ERROR_INVALID_CLUSTER_IPV6_ADDRESS;
    public static WIN32_ERROR ERROR_CLUSTER_INTERNAL_INVALID_FUNCTION;
    public static WIN32_ERROR ERROR_CLUSTER_PARAMETER_OUT_OF_BOUNDS;
    public static WIN32_ERROR ERROR_CLUSTER_PARTIAL_SEND;
    public static WIN32_ERROR ERROR_CLUSTER_REGISTRY_INVALID_FUNCTION;
    public static WIN32_ERROR ERROR_CLUSTER_INVALID_STRING_TERMINATION;
    public static WIN32_ERROR ERROR_CLUSTER_INVALID_STRING_FORMAT;
    public static WIN32_ERROR ERROR_CLUSTER_DATABASE_TRANSACTION_IN_PROGRESS;
    public static WIN32_ERROR ERROR_CLUSTER_DATABASE_TRANSACTION_NOT_IN_PROGRESS;
    public static WIN32_ERROR ERROR_CLUSTER_NULL_DATA;
    public static WIN32_ERROR ERROR_CLUSTER_PARTIAL_READ;
    public static WIN32_ERROR ERROR_CLUSTER_PARTIAL_WRITE;
    public static WIN32_ERROR ERROR_CLUSTER_CANT_DESERIALIZE_DATA;
    public static WIN32_ERROR ERROR_DEPENDENT_RESOURCE_PROPERTY_CONFLICT;
    public static WIN32_ERROR ERROR_CLUSTER_NO_QUORUM;
    public static WIN32_ERROR ERROR_CLUSTER_INVALID_IPV6_NETWORK;
    public static WIN32_ERROR ERROR_CLUSTER_INVALID_IPV6_TUNNEL_NETWORK;
    public static WIN32_ERROR ERROR_QUORUM_NOT_ALLOWED_IN_THIS_GROUP;
    public static WIN32_ERROR ERROR_DEPENDENCY_TREE_TOO_COMPLEX;
    public static WIN32_ERROR ERROR_EXCEPTION_IN_RESOURCE_CALL;
    public static WIN32_ERROR ERROR_CLUSTER_RHS_FAILED_INITIALIZATION;
    public static WIN32_ERROR ERROR_CLUSTER_NOT_INSTALLED;
    public static WIN32_ERROR ERROR_CLUSTER_RESOURCES_MUST_BE_ONLINE_ON_THE_SAME_NODE;
    public static WIN32_ERROR ERROR_CLUSTER_MAX_NODES_IN_CLUSTER;
    public static WIN32_ERROR ERROR_CLUSTER_TOO_MANY_NODES;
    public static WIN32_ERROR ERROR_CLUSTER_OBJECT_ALREADY_USED;
    public static WIN32_ERROR ERROR_NONCORE_GROUPS_FOUND;
    public static WIN32_ERROR ERROR_FILE_SHARE_RESOURCE_CONFLICT;
    public static WIN32_ERROR ERROR_CLUSTER_EVICT_INVALID_REQUEST;
    public static WIN32_ERROR ERROR_CLUSTER_SINGLETON_RESOURCE;
    public static WIN32_ERROR ERROR_CLUSTER_GROUP_SINGLETON_RESOURCE;
    public static WIN32_ERROR ERROR_CLUSTER_RESOURCE_PROVIDER_FAILED;
    public static WIN32_ERROR ERROR_CLUSTER_RESOURCE_CONFIGURATION_ERROR;
    public static WIN32_ERROR ERROR_CLUSTER_GROUP_BUSY;
    public static WIN32_ERROR ERROR_CLUSTER_NOT_SHARED_VOLUME;
    public static WIN32_ERROR ERROR_CLUSTER_INVALID_SECURITY_DESCRIPTOR;
    public static WIN32_ERROR ERROR_CLUSTER_SHARED_VOLUMES_IN_USE;
    public static WIN32_ERROR ERROR_CLUSTER_USE_SHARED_VOLUMES_API;
    public static WIN32_ERROR ERROR_CLUSTER_BACKUP_IN_PROGRESS;
    public static WIN32_ERROR ERROR_NON_CSV_PATH;
    public static WIN32_ERROR ERROR_CSV_VOLUME_NOT_LOCAL;
    public static WIN32_ERROR ERROR_CLUSTER_WATCHDOG_TERMINATING;
    public static WIN32_ERROR ERROR_CLUSTER_RESOURCE_VETOED_MOVE_INCOMPATIBLE_NODES;
    public static WIN32_ERROR ERROR_CLUSTER_INVALID_NODE_WEIGHT;
    public static WIN32_ERROR ERROR_CLUSTER_RESOURCE_VETOED_CALL;
    public static WIN32_ERROR ERROR_RESMON_SYSTEM_RESOURCES_LACKING;
    public static WIN32_ERROR ERROR_CLUSTER_RESOURCE_VETOED_MOVE_NOT_ENOUGH_RESOURCES_ON_DESTINATION;
    public static WIN32_ERROR ERROR_CLUSTER_RESOURCE_VETOED_MOVE_NOT_ENOUGH_RESOURCES_ON_SOURCE;
    public static WIN32_ERROR ERROR_CLUSTER_GROUP_QUEUED;
    public static WIN32_ERROR ERROR_CLUSTER_RESOURCE_LOCKED_STATUS;
    public static WIN32_ERROR ERROR_CLUSTER_SHARED_VOLUME_FAILOVER_NOT_ALLOWED;
    public static WIN32_ERROR ERROR_CLUSTER_NODE_DRAIN_IN_PROGRESS;
    public static WIN32_ERROR ERROR_CLUSTER_DISK_NOT_CONNECTED;
    public static WIN32_ERROR ERROR_DISK_NOT_CSV_CAPABLE;
    public static WIN32_ERROR ERROR_RESOURCE_NOT_IN_AVAILABLE_STORAGE;
    public static WIN32_ERROR ERROR_CLUSTER_SHARED_VOLUME_REDIRECTED;
    public static WIN32_ERROR ERROR_CLUSTER_SHARED_VOLUME_NOT_REDIRECTED;
    public static WIN32_ERROR ERROR_CLUSTER_CANNOT_RETURN_PROPERTIES;
    public static WIN32_ERROR ERROR_CLUSTER_RESOURCE_CONTAINS_UNSUPPORTED_DIFF_AREA_FOR_SHARED_VOLUMES;
    public static WIN32_ERROR ERROR_CLUSTER_RESOURCE_IS_IN_MAINTENANCE_MODE;
    public static WIN32_ERROR ERROR_CLUSTER_AFFINITY_CONFLICT;
    public static WIN32_ERROR ERROR_CLUSTER_RESOURCE_IS_REPLICA_VIRTUAL_MACHINE;
    public static WIN32_ERROR ERROR_CLUSTER_UPGRADE_INCOMPATIBLE_VERSIONS;
    public static WIN32_ERROR ERROR_CLUSTER_UPGRADE_FIX_QUORUM_NOT_SUPPORTED;
    public static WIN32_ERROR ERROR_CLUSTER_UPGRADE_RESTART_REQUIRED;
    public static WIN32_ERROR ERROR_CLUSTER_UPGRADE_IN_PROGRESS;
    public static WIN32_ERROR ERROR_CLUSTER_UPGRADE_INCOMPLETE;
    public static WIN32_ERROR ERROR_CLUSTER_NODE_IN_GRACE_PERIOD;
    public static WIN32_ERROR ERROR_CLUSTER_CSV_IO_PAUSE_TIMEOUT;
    public static WIN32_ERROR ERROR_NODE_NOT_ACTIVE_CLUSTER_MEMBER;
    public static WIN32_ERROR ERROR_CLUSTER_RESOURCE_NOT_MONITORED;
    public static WIN32_ERROR ERROR_CLUSTER_RESOURCE_DOES_NOT_SUPPORT_UNMONITORED;
    public static WIN32_ERROR ERROR_CLUSTER_RESOURCE_IS_REPLICATED;
    public static WIN32_ERROR ERROR_CLUSTER_NODE_ISOLATED;
    public static WIN32_ERROR ERROR_CLUSTER_NODE_QUARANTINED;
    public static WIN32_ERROR ERROR_CLUSTER_DATABASE_UPDATE_CONDITION_FAILED;
    public static WIN32_ERROR ERROR_CLUSTER_SPACE_DEGRADED;
    public static WIN32_ERROR ERROR_CLUSTER_TOKEN_DELEGATION_NOT_SUPPORTED;
    public static WIN32_ERROR ERROR_CLUSTER_CSV_INVALID_HANDLE;
    public static WIN32_ERROR ERROR_CLUSTER_CSV_SUPPORTED_ONLY_ON_COORDINATOR;
    public static WIN32_ERROR ERROR_GROUPSET_NOT_AVAILABLE;
    public static WIN32_ERROR ERROR_GROUPSET_NOT_FOUND;
    public static WIN32_ERROR ERROR_GROUPSET_CANT_PROVIDE;
    public static WIN32_ERROR ERROR_CLUSTER_FAULT_DOMAIN_PARENT_NOT_FOUND;
    public static WIN32_ERROR ERROR_CLUSTER_FAULT_DOMAIN_INVALID_HIERARCHY;
    public static WIN32_ERROR ERROR_CLUSTER_FAULT_DOMAIN_FAILED_S2D_VALIDATION;
    public static WIN32_ERROR ERROR_CLUSTER_FAULT_DOMAIN_S2D_CONNECTIVITY_LOSS;
    public static WIN32_ERROR ERROR_CLUSTER_INVALID_INFRASTRUCTURE_FILESERVER_NAME;
    public static WIN32_ERROR ERROR_CLUSTERSET_MANAGEMENT_CLUSTER_UNREACHABLE;
    public static WIN32_ERROR ERROR_ENCRYPTION_FAILED;
    public static WIN32_ERROR ERROR_DECRYPTION_FAILED;
    public static WIN32_ERROR ERROR_FILE_ENCRYPTED;
    public static WIN32_ERROR ERROR_NO_RECOVERY_POLICY;
    public static WIN32_ERROR ERROR_NO_EFS;
    public static WIN32_ERROR ERROR_WRONG_EFS;
    public static WIN32_ERROR ERROR_NO_USER_KEYS;
    public static WIN32_ERROR ERROR_FILE_NOT_ENCRYPTED;
    public static WIN32_ERROR ERROR_NOT_EXPORT_FORMAT;
    public static WIN32_ERROR ERROR_FILE_READ_ONLY;
    public static WIN32_ERROR ERROR_DIR_EFS_DISALLOWED;
    public static WIN32_ERROR ERROR_EFS_SERVER_NOT_TRUSTED;
    public static WIN32_ERROR ERROR_BAD_RECOVERY_POLICY;
    public static WIN32_ERROR ERROR_EFS_ALG_BLOB_TOO_BIG;
    public static WIN32_ERROR ERROR_VOLUME_NOT_SUPPORT_EFS;
    public static WIN32_ERROR ERROR_EFS_DISABLED;
    public static WIN32_ERROR ERROR_EFS_VERSION_NOT_SUPPORT;
    public static WIN32_ERROR ERROR_CS_ENCRYPTION_INVALID_SERVER_RESPONSE;
    public static WIN32_ERROR ERROR_CS_ENCRYPTION_UNSUPPORTED_SERVER;
    public static WIN32_ERROR ERROR_CS_ENCRYPTION_EXISTING_ENCRYPTED_FILE;
    public static WIN32_ERROR ERROR_CS_ENCRYPTION_NEW_ENCRYPTED_FILE;
    public static WIN32_ERROR ERROR_CS_ENCRYPTION_FILE_NOT_CSE;
    public static WIN32_ERROR ERROR_ENCRYPTION_POLICY_DENIES_OPERATION;
    public static WIN32_ERROR ERROR_WIP_ENCRYPTION_FAILED;
    public static WIN32_ERROR ERROR_NO_BROWSER_SERVERS_FOUND;
    public static WIN32_ERROR ERROR_CLUSTER_OBJECT_IS_CLUSTER_SET_VM;
    public static WIN32_ERROR ERROR_LOG_SECTOR_INVALID;
    public static WIN32_ERROR ERROR_LOG_SECTOR_PARITY_INVALID;
    public static WIN32_ERROR ERROR_LOG_SECTOR_REMAPPED;
    public static WIN32_ERROR ERROR_LOG_BLOCK_INCOMPLETE;
    public static WIN32_ERROR ERROR_LOG_INVALID_RANGE;
    public static WIN32_ERROR ERROR_LOG_BLOCKS_EXHAUSTED;
    public static WIN32_ERROR ERROR_LOG_READ_CONTEXT_INVALID;
    public static WIN32_ERROR ERROR_LOG_RESTART_INVALID;
    public static WIN32_ERROR ERROR_LOG_BLOCK_VERSION;
    public static WIN32_ERROR ERROR_LOG_BLOCK_INVALID;
    public static WIN32_ERROR ERROR_LOG_READ_MODE_INVALID;
    public static WIN32_ERROR ERROR_LOG_NO_RESTART;
    public static WIN32_ERROR ERROR_LOG_METADATA_CORRUPT;
    public static WIN32_ERROR ERROR_LOG_METADATA_INVALID;
    public static WIN32_ERROR ERROR_LOG_METADATA_INCONSISTENT;
    public static WIN32_ERROR ERROR_LOG_RESERVATION_INVALID;
    public static WIN32_ERROR ERROR_LOG_CANT_DELETE;
    public static WIN32_ERROR ERROR_LOG_CONTAINER_LIMIT_EXCEEDED;
    public static WIN32_ERROR ERROR_LOG_START_OF_LOG;
    public static WIN32_ERROR ERROR_LOG_POLICY_ALREADY_INSTALLED;
    public static WIN32_ERROR ERROR_LOG_POLICY_NOT_INSTALLED;
    public static WIN32_ERROR ERROR_LOG_POLICY_INVALID;
    public static WIN32_ERROR ERROR_LOG_POLICY_CONFLICT;
    public static WIN32_ERROR ERROR_LOG_PINNED_ARCHIVE_TAIL;
    public static WIN32_ERROR ERROR_LOG_RECORD_NONEXISTENT;
    public static WIN32_ERROR ERROR_LOG_RECORDS_RESERVED_INVALID;
    public static WIN32_ERROR ERROR_LOG_SPACE_RESERVED_INVALID;
    public static WIN32_ERROR ERROR_LOG_TAIL_INVALID;
    public static WIN32_ERROR ERROR_LOG_FULL;
    public static WIN32_ERROR ERROR_COULD_NOT_RESIZE_LOG;
    public static WIN32_ERROR ERROR_LOG_MULTIPLEXED;
    public static WIN32_ERROR ERROR_LOG_DEDICATED;
    public static WIN32_ERROR ERROR_LOG_ARCHIVE_NOT_IN_PROGRESS;
    public static WIN32_ERROR ERROR_LOG_ARCHIVE_IN_PROGRESS;
    public static WIN32_ERROR ERROR_LOG_EPHEMERAL;
    public static WIN32_ERROR ERROR_LOG_NOT_ENOUGH_CONTAINERS;
    public static WIN32_ERROR ERROR_LOG_CLIENT_ALREADY_REGISTERED;
    public static WIN32_ERROR ERROR_LOG_CLIENT_NOT_REGISTERED;
    public static WIN32_ERROR ERROR_LOG_FULL_HANDLER_IN_PROGRESS;
    public static WIN32_ERROR ERROR_LOG_CONTAINER_READ_FAILED;
    public static WIN32_ERROR ERROR_LOG_CONTAINER_WRITE_FAILED;
    public static WIN32_ERROR ERROR_LOG_CONTAINER_OPEN_FAILED;
    public static WIN32_ERROR ERROR_LOG_CONTAINER_STATE_INVALID;
    public static WIN32_ERROR ERROR_LOG_STATE_INVALID;
    public static WIN32_ERROR ERROR_LOG_PINNED;
    public static WIN32_ERROR ERROR_LOG_METADATA_FLUSH_FAILED;
    public static WIN32_ERROR ERROR_LOG_INCONSISTENT_SECURITY;
    public static WIN32_ERROR ERROR_LOG_APPENDED_FLUSH_FAILED;
    public static WIN32_ERROR ERROR_LOG_PINNED_RESERVATION;
    public static WIN32_ERROR ERROR_INVALID_TRANSACTION;
    public static WIN32_ERROR ERROR_TRANSACTION_NOT_ACTIVE;
    public static WIN32_ERROR ERROR_TRANSACTION_REQUEST_NOT_VALID;
    public static WIN32_ERROR ERROR_TRANSACTION_NOT_REQUESTED;
    public static WIN32_ERROR ERROR_TRANSACTION_ALREADY_ABORTED;
    public static WIN32_ERROR ERROR_TRANSACTION_ALREADY_COMMITTED;
    public static WIN32_ERROR ERROR_TM_INITIALIZATION_FAILED;
    public static WIN32_ERROR ERROR_RESOURCEMANAGER_READ_ONLY;
    public static WIN32_ERROR ERROR_TRANSACTION_NOT_JOINED;
    public static WIN32_ERROR ERROR_TRANSACTION_SUPERIOR_EXISTS;
    public static WIN32_ERROR ERROR_CRM_PROTOCOL_ALREADY_EXISTS;
    public static WIN32_ERROR ERROR_TRANSACTION_PROPAGATION_FAILED;
    public static WIN32_ERROR ERROR_CRM_PROTOCOL_NOT_FOUND;
    public static WIN32_ERROR ERROR_TRANSACTION_INVALID_MARSHALL_BUFFER;
    public static WIN32_ERROR ERROR_CURRENT_TRANSACTION_NOT_VALID;
    public static WIN32_ERROR ERROR_TRANSACTION_NOT_FOUND;
    public static WIN32_ERROR ERROR_RESOURCEMANAGER_NOT_FOUND;
    public static WIN32_ERROR ERROR_ENLISTMENT_NOT_FOUND;
    public static WIN32_ERROR ERROR_TRANSACTIONMANAGER_NOT_FOUND;
    public static WIN32_ERROR ERROR_TRANSACTIONMANAGER_NOT_ONLINE;
    public static WIN32_ERROR ERROR_TRANSACTIONMANAGER_RECOVERY_NAME_COLLISION;
    public static WIN32_ERROR ERROR_TRANSACTION_NOT_ROOT;
    public static WIN32_ERROR ERROR_TRANSACTION_OBJECT_EXPIRED;
    public static WIN32_ERROR ERROR_TRANSACTION_RESPONSE_NOT_ENLISTED;
    public static WIN32_ERROR ERROR_TRANSACTION_RECORD_TOO_LONG;
    public static WIN32_ERROR ERROR_IMPLICIT_TRANSACTION_NOT_SUPPORTED;
    public static WIN32_ERROR ERROR_TRANSACTION_INTEGRITY_VIOLATED;
    public static WIN32_ERROR ERROR_TRANSACTIONMANAGER_IDENTITY_MISMATCH;
    public static WIN32_ERROR ERROR_RM_CANNOT_BE_FROZEN_FOR_SNAPSHOT;
    public static WIN32_ERROR ERROR_TRANSACTION_MUST_WRITETHROUGH;
    public static WIN32_ERROR ERROR_TRANSACTION_NO_SUPERIOR;
    public static WIN32_ERROR ERROR_HEURISTIC_DAMAGE_POSSIBLE;
    public static WIN32_ERROR ERROR_TRANSACTIONAL_CONFLICT;
    public static WIN32_ERROR ERROR_RM_NOT_ACTIVE;
    public static WIN32_ERROR ERROR_RM_METADATA_CORRUPT;
    public static WIN32_ERROR ERROR_DIRECTORY_NOT_RM;
    public static WIN32_ERROR ERROR_TRANSACTIONS_UNSUPPORTED_REMOTE;
    public static WIN32_ERROR ERROR_LOG_RESIZE_INVALID_SIZE;
    public static WIN32_ERROR ERROR_OBJECT_NO_LONGER_EXISTS;
    public static WIN32_ERROR ERROR_STREAM_MINIVERSION_NOT_FOUND;
    public static WIN32_ERROR ERROR_STREAM_MINIVERSION_NOT_VALID;
    public static WIN32_ERROR ERROR_MINIVERSION_INACCESSIBLE_FROM_SPECIFIED_TRANSACTION;
    public static WIN32_ERROR ERROR_CANT_OPEN_MINIVERSION_WITH_MODIFY_INTENT;
    public static WIN32_ERROR ERROR_CANT_CREATE_MORE_STREAM_MINIVERSIONS;
    public static WIN32_ERROR ERROR_REMOTE_FILE_VERSION_MISMATCH;
    public static WIN32_ERROR ERROR_HANDLE_NO_LONGER_VALID;
    public static WIN32_ERROR ERROR_NO_TXF_METADATA;
    public static WIN32_ERROR ERROR_LOG_CORRUPTION_DETECTED;
    public static WIN32_ERROR ERROR_CANT_RECOVER_WITH_HANDLE_OPEN;
    public static WIN32_ERROR ERROR_RM_DISCONNECTED;
    public static WIN32_ERROR ERROR_ENLISTMENT_NOT_SUPERIOR;
    public static WIN32_ERROR ERROR_RECOVERY_NOT_NEEDED;
    public static WIN32_ERROR ERROR_RM_ALREADY_STARTED;
    public static WIN32_ERROR ERROR_FILE_IDENTITY_NOT_PERSISTENT;
    public static WIN32_ERROR ERROR_CANT_BREAK_TRANSACTIONAL_DEPENDENCY;
    public static WIN32_ERROR ERROR_CANT_CROSS_RM_BOUNDARY;
    public static WIN32_ERROR ERROR_TXF_DIR_NOT_EMPTY;
    public static WIN32_ERROR ERROR_INDOUBT_TRANSACTIONS_EXIST;
    public static WIN32_ERROR ERROR_TM_VOLATILE;
    public static WIN32_ERROR ERROR_ROLLBACK_TIMER_EXPIRED;
    public static WIN32_ERROR ERROR_TXF_ATTRIBUTE_CORRUPT;
    public static WIN32_ERROR ERROR_EFS_NOT_ALLOWED_IN_TRANSACTION;
    public static WIN32_ERROR ERROR_TRANSACTIONAL_OPEN_NOT_ALLOWED;
    public static WIN32_ERROR ERROR_LOG_GROWTH_FAILED;
    public static WIN32_ERROR ERROR_TRANSACTED_MAPPING_UNSUPPORTED_REMOTE;
    public static WIN32_ERROR ERROR_TXF_METADATA_ALREADY_PRESENT;
    public static WIN32_ERROR ERROR_TRANSACTION_SCOPE_CALLBACKS_NOT_SET;
    public static WIN32_ERROR ERROR_TRANSACTION_REQUIRED_PROMOTION;
    public static WIN32_ERROR ERROR_CANNOT_EXECUTE_FILE_IN_TRANSACTION;
    public static WIN32_ERROR ERROR_TRANSACTIONS_NOT_FROZEN;
    public static WIN32_ERROR ERROR_TRANSACTION_FREEZE_IN_PROGRESS;
    public static WIN32_ERROR ERROR_NOT_SNAPSHOT_VOLUME;
    public static WIN32_ERROR ERROR_NO_SAVEPOINT_WITH_OPEN_FILES;
    public static WIN32_ERROR ERROR_DATA_LOST_REPAIR;
    public static WIN32_ERROR ERROR_SPARSE_NOT_ALLOWED_IN_TRANSACTION;
    public static WIN32_ERROR ERROR_TM_IDENTITY_MISMATCH;
    public static WIN32_ERROR ERROR_FLOATED_SECTION;
    public static WIN32_ERROR ERROR_CANNOT_ACCEPT_TRANSACTED_WORK;
    public static WIN32_ERROR ERROR_CANNOT_ABORT_TRANSACTIONS;
    public static WIN32_ERROR ERROR_BAD_CLUSTERS;
    public static WIN32_ERROR ERROR_COMPRESSION_NOT_ALLOWED_IN_TRANSACTION;
    public static WIN32_ERROR ERROR_VOLUME_DIRTY;
    public static WIN32_ERROR ERROR_NO_LINK_TRACKING_IN_TRANSACTION;
    public static WIN32_ERROR ERROR_OPERATION_NOT_SUPPORTED_IN_TRANSACTION;
    public static WIN32_ERROR ERROR_EXPIRED_HANDLE;
    public static WIN32_ERROR ERROR_TRANSACTION_NOT_ENLISTED;
    public static WIN32_ERROR ERROR_CTX_WINSTATION_NAME_INVALID;
    public static WIN32_ERROR ERROR_CTX_INVALID_PD;
    public static WIN32_ERROR ERROR_CTX_PD_NOT_FOUND;
    public static WIN32_ERROR ERROR_CTX_WD_NOT_FOUND;
    public static WIN32_ERROR ERROR_CTX_CANNOT_MAKE_EVENTLOG_ENTRY;
    public static WIN32_ERROR ERROR_CTX_SERVICE_NAME_COLLISION;
    public static WIN32_ERROR ERROR_CTX_CLOSE_PENDING;
    public static WIN32_ERROR ERROR_CTX_NO_OUTBUF;
    public static WIN32_ERROR ERROR_CTX_MODEM_INF_NOT_FOUND;
    public static WIN32_ERROR ERROR_CTX_INVALID_MODEMNAME;
    public static WIN32_ERROR ERROR_CTX_MODEM_RESPONSE_ERROR;
    public static WIN32_ERROR ERROR_CTX_MODEM_RESPONSE_TIMEOUT;
    public static WIN32_ERROR ERROR_CTX_MODEM_RESPONSE_NO_CARRIER;
    public static WIN32_ERROR ERROR_CTX_MODEM_RESPONSE_NO_DIALTONE;
    public static WIN32_ERROR ERROR_CTX_MODEM_RESPONSE_BUSY;
    public static WIN32_ERROR ERROR_CTX_MODEM_RESPONSE_VOICE;
    public static WIN32_ERROR ERROR_CTX_TD_ERROR;
    public static WIN32_ERROR ERROR_CTX_WINSTATION_NOT_FOUND;
    public static WIN32_ERROR ERROR_CTX_WINSTATION_ALREADY_EXISTS;
    public static WIN32_ERROR ERROR_CTX_WINSTATION_BUSY;
    public static WIN32_ERROR ERROR_CTX_BAD_VIDEO_MODE;
    public static WIN32_ERROR ERROR_CTX_GRAPHICS_INVALID;
    public static WIN32_ERROR ERROR_CTX_LOGON_DISABLED;
    public static WIN32_ERROR ERROR_CTX_NOT_CONSOLE;
    public static WIN32_ERROR ERROR_CTX_CLIENT_QUERY_TIMEOUT;
    public static WIN32_ERROR ERROR_CTX_CONSOLE_DISCONNECT;
    public static WIN32_ERROR ERROR_CTX_CONSOLE_CONNECT;
    public static WIN32_ERROR ERROR_CTX_SHADOW_DENIED;
    public static WIN32_ERROR ERROR_CTX_WINSTATION_ACCESS_DENIED;
    public static WIN32_ERROR ERROR_CTX_INVALID_WD;
    public static WIN32_ERROR ERROR_CTX_SHADOW_INVALID;
    public static WIN32_ERROR ERROR_CTX_SHADOW_DISABLED;
    public static WIN32_ERROR ERROR_CTX_CLIENT_LICENSE_IN_USE;
    public static WIN32_ERROR ERROR_CTX_CLIENT_LICENSE_NOT_SET;
    public static WIN32_ERROR ERROR_CTX_LICENSE_NOT_AVAILABLE;
    public static WIN32_ERROR ERROR_CTX_LICENSE_CLIENT_INVALID;
    public static WIN32_ERROR ERROR_CTX_LICENSE_EXPIRED;
    public static WIN32_ERROR ERROR_CTX_SHADOW_NOT_RUNNING;
    public static WIN32_ERROR ERROR_CTX_SHADOW_ENDED_BY_MODE_CHANGE;
    public static WIN32_ERROR ERROR_ACTIVATION_COUNT_EXCEEDED;
    public static WIN32_ERROR ERROR_CTX_WINSTATIONS_DISABLED;
    public static WIN32_ERROR ERROR_CTX_ENCRYPTION_LEVEL_REQUIRED;
    public static WIN32_ERROR ERROR_CTX_SESSION_IN_USE;
    public static WIN32_ERROR ERROR_CTX_NO_FORCE_LOGOFF;
    public static WIN32_ERROR ERROR_CTX_ACCOUNT_RESTRICTION;
    public static WIN32_ERROR ERROR_RDP_PROTOCOL_ERROR;
    public static WIN32_ERROR ERROR_CTX_CDM_CONNECT;
    public static WIN32_ERROR ERROR_CTX_CDM_DISCONNECT;
    public static WIN32_ERROR ERROR_CTX_SECURITY_LAYER_ERROR;
    public static WIN32_ERROR ERROR_TS_INCOMPATIBLE_SESSIONS;
    public static WIN32_ERROR ERROR_TS_VIDEO_SUBSYSTEM_ERROR;
    public static WIN32_ERROR ERROR_DS_NOT_INSTALLED;
    public static WIN32_ERROR ERROR_DS_MEMBERSHIP_EVALUATED_LOCALLY;
    public static WIN32_ERROR ERROR_DS_NO_ATTRIBUTE_OR_VALUE;
    public static WIN32_ERROR ERROR_DS_INVALID_ATTRIBUTE_SYNTAX;
    public static WIN32_ERROR ERROR_DS_ATTRIBUTE_TYPE_UNDEFINED;
    public static WIN32_ERROR ERROR_DS_ATTRIBUTE_OR_VALUE_EXISTS;
    public static WIN32_ERROR ERROR_DS_BUSY;
    public static WIN32_ERROR ERROR_DS_UNAVAILABLE;
    public static WIN32_ERROR ERROR_DS_NO_RIDS_ALLOCATED;
    public static WIN32_ERROR ERROR_DS_NO_MORE_RIDS;
    public static WIN32_ERROR ERROR_DS_INCORRECT_ROLE_OWNER;
    public static WIN32_ERROR ERROR_DS_RIDMGR_INIT_ERROR;
    public static WIN32_ERROR ERROR_DS_OBJ_CLASS_VIOLATION;
    public static WIN32_ERROR ERROR_DS_CANT_ON_NON_LEAF;
    public static WIN32_ERROR ERROR_DS_CANT_ON_RDN;
    public static WIN32_ERROR ERROR_DS_CANT_MOD_OBJ_CLASS;
    public static WIN32_ERROR ERROR_DS_CROSS_DOM_MOVE_ERROR;
    public static WIN32_ERROR ERROR_DS_GC_NOT_AVAILABLE;
    public static WIN32_ERROR ERROR_SHARED_POLICY;
    public static WIN32_ERROR ERROR_POLICY_OBJECT_NOT_FOUND;
    public static WIN32_ERROR ERROR_POLICY_ONLY_IN_DS;
    public static WIN32_ERROR ERROR_PROMOTION_ACTIVE;
    public static WIN32_ERROR ERROR_NO_PROMOTION_ACTIVE;
    public static WIN32_ERROR ERROR_DS_OPERATIONS_ERROR;
    public static WIN32_ERROR ERROR_DS_PROTOCOL_ERROR;
    public static WIN32_ERROR ERROR_DS_TIMELIMIT_EXCEEDED;
    public static WIN32_ERROR ERROR_DS_SIZELIMIT_EXCEEDED;
    public static WIN32_ERROR ERROR_DS_ADMIN_LIMIT_EXCEEDED;
    public static WIN32_ERROR ERROR_DS_COMPARE_FALSE;
    public static WIN32_ERROR ERROR_DS_COMPARE_TRUE;
    public static WIN32_ERROR ERROR_DS_AUTH_METHOD_NOT_SUPPORTED;
    public static WIN32_ERROR ERROR_DS_STRONG_AUTH_REQUIRED;
    public static WIN32_ERROR ERROR_DS_INAPPROPRIATE_AUTH;
    public static WIN32_ERROR ERROR_DS_AUTH_UNKNOWN;
    public static WIN32_ERROR ERROR_DS_REFERRAL;
    public static WIN32_ERROR ERROR_DS_UNAVAILABLE_CRIT_EXTENSION;
    public static WIN32_ERROR ERROR_DS_CONFIDENTIALITY_REQUIRED;
    public static WIN32_ERROR ERROR_DS_INAPPROPRIATE_MATCHING;
    public static WIN32_ERROR ERROR_DS_CONSTRAINT_VIOLATION;
    public static WIN32_ERROR ERROR_DS_NO_SUCH_OBJECT;
    public static WIN32_ERROR ERROR_DS_ALIAS_PROBLEM;
    public static WIN32_ERROR ERROR_DS_INVALID_DN_SYNTAX;
    public static WIN32_ERROR ERROR_DS_IS_LEAF;
    public static WIN32_ERROR ERROR_DS_ALIAS_DEREF_PROBLEM;
    public static WIN32_ERROR ERROR_DS_UNWILLING_TO_PERFORM;
    public static WIN32_ERROR ERROR_DS_LOOP_DETECT;
    public static WIN32_ERROR ERROR_DS_NAMING_VIOLATION;
    public static WIN32_ERROR ERROR_DS_OBJECT_RESULTS_TOO_LARGE;
    public static WIN32_ERROR ERROR_DS_AFFECTS_MULTIPLE_DSAS;
    public static WIN32_ERROR ERROR_DS_SERVER_DOWN;
    public static WIN32_ERROR ERROR_DS_LOCAL_ERROR;
    public static WIN32_ERROR ERROR_DS_ENCODING_ERROR;
    public static WIN32_ERROR ERROR_DS_DECODING_ERROR;
    public static WIN32_ERROR ERROR_DS_FILTER_UNKNOWN;
    public static WIN32_ERROR ERROR_DS_PARAM_ERROR;
    public static WIN32_ERROR ERROR_DS_NOT_SUPPORTED;
    public static WIN32_ERROR ERROR_DS_NO_RESULTS_RETURNED;
    public static WIN32_ERROR ERROR_DS_CONTROL_NOT_FOUND;
    public static WIN32_ERROR ERROR_DS_CLIENT_LOOP;
    public static WIN32_ERROR ERROR_DS_REFERRAL_LIMIT_EXCEEDED;
    public static WIN32_ERROR ERROR_DS_SORT_CONTROL_MISSING;
    public static WIN32_ERROR ERROR_DS_OFFSET_RANGE_ERROR;
    public static WIN32_ERROR ERROR_DS_RIDMGR_DISABLED;
    public static WIN32_ERROR ERROR_DS_ROOT_MUST_BE_NC;
    public static WIN32_ERROR ERROR_DS_ADD_REPLICA_INHIBITED;
    public static WIN32_ERROR ERROR_DS_ATT_NOT_DEF_IN_SCHEMA;
    public static WIN32_ERROR ERROR_DS_MAX_OBJ_SIZE_EXCEEDED;
    public static WIN32_ERROR ERROR_DS_OBJ_STRING_NAME_EXISTS;
    public static WIN32_ERROR ERROR_DS_NO_RDN_DEFINED_IN_SCHEMA;
    public static WIN32_ERROR ERROR_DS_RDN_DOESNT_MATCH_SCHEMA;
    public static WIN32_ERROR ERROR_DS_NO_REQUESTED_ATTS_FOUND;
    public static WIN32_ERROR ERROR_DS_USER_BUFFER_TO_SMALL;
    public static WIN32_ERROR ERROR_DS_ATT_IS_NOT_ON_OBJ;
    public static WIN32_ERROR ERROR_DS_ILLEGAL_MOD_OPERATION;
    public static WIN32_ERROR ERROR_DS_OBJ_TOO_LARGE;
    public static WIN32_ERROR ERROR_DS_BAD_INSTANCE_TYPE;
    public static WIN32_ERROR ERROR_DS_MASTERDSA_REQUIRED;
    public static WIN32_ERROR ERROR_DS_OBJECT_CLASS_REQUIRED;
    public static WIN32_ERROR ERROR_DS_MISSING_REQUIRED_ATT;
    public static WIN32_ERROR ERROR_DS_ATT_NOT_DEF_FOR_CLASS;
    public static WIN32_ERROR ERROR_DS_ATT_ALREADY_EXISTS;
    public static WIN32_ERROR ERROR_DS_CANT_ADD_ATT_VALUES;
    public static WIN32_ERROR ERROR_DS_SINGLE_VALUE_CONSTRAINT;
    public static WIN32_ERROR ERROR_DS_RANGE_CONSTRAINT;
    public static WIN32_ERROR ERROR_DS_ATT_VAL_ALREADY_EXISTS;
    public static WIN32_ERROR ERROR_DS_CANT_REM_MISSING_ATT;
    public static WIN32_ERROR ERROR_DS_CANT_REM_MISSING_ATT_VAL;
    public static WIN32_ERROR ERROR_DS_ROOT_CANT_BE_SUBREF;
    public static WIN32_ERROR ERROR_DS_NO_CHAINING;
    public static WIN32_ERROR ERROR_DS_NO_CHAINED_EVAL;
    public static WIN32_ERROR ERROR_DS_NO_PARENT_OBJECT;
    public static WIN32_ERROR ERROR_DS_PARENT_IS_AN_ALIAS;
    public static WIN32_ERROR ERROR_DS_CANT_MIX_MASTER_AND_REPS;
    public static WIN32_ERROR ERROR_DS_CHILDREN_EXIST;
    public static WIN32_ERROR ERROR_DS_OBJ_NOT_FOUND;
    public static WIN32_ERROR ERROR_DS_ALIASED_OBJ_MISSING;
    public static WIN32_ERROR ERROR_DS_BAD_NAME_SYNTAX;
    public static WIN32_ERROR ERROR_DS_ALIAS_POINTS_TO_ALIAS;
    public static WIN32_ERROR ERROR_DS_CANT_DEREF_ALIAS;
    public static WIN32_ERROR ERROR_DS_OUT_OF_SCOPE;
    public static WIN32_ERROR ERROR_DS_OBJECT_BEING_REMOVED;
    public static WIN32_ERROR ERROR_DS_CANT_DELETE_DSA_OBJ;
    public static WIN32_ERROR ERROR_DS_GENERIC_ERROR;
    public static WIN32_ERROR ERROR_DS_DSA_MUST_BE_INT_MASTER;
    public static WIN32_ERROR ERROR_DS_CLASS_NOT_DSA;
    public static WIN32_ERROR ERROR_DS_INSUFF_ACCESS_RIGHTS;
    public static WIN32_ERROR ERROR_DS_ILLEGAL_SUPERIOR;
    public static WIN32_ERROR ERROR_DS_ATTRIBUTE_OWNED_BY_SAM;
    public static WIN32_ERROR ERROR_DS_NAME_TOO_MANY_PARTS;
    public static WIN32_ERROR ERROR_DS_NAME_TOO_LONG;
    public static WIN32_ERROR ERROR_DS_NAME_VALUE_TOO_LONG;
    public static WIN32_ERROR ERROR_DS_NAME_UNPARSEABLE;
    public static WIN32_ERROR ERROR_DS_NAME_TYPE_UNKNOWN;
    public static WIN32_ERROR ERROR_DS_NOT_AN_OBJECT;
    public static WIN32_ERROR ERROR_DS_SEC_DESC_TOO_SHORT;
    public static WIN32_ERROR ERROR_DS_SEC_DESC_INVALID;
    public static WIN32_ERROR ERROR_DS_NO_DELETED_NAME;
    public static WIN32_ERROR ERROR_DS_SUBREF_MUST_HAVE_PARENT;
    public static WIN32_ERROR ERROR_DS_NCNAME_MUST_BE_NC;
    public static WIN32_ERROR ERROR_DS_CANT_ADD_SYSTEM_ONLY;
    public static WIN32_ERROR ERROR_DS_CLASS_MUST_BE_CONCRETE;
    public static WIN32_ERROR ERROR_DS_INVALID_DMD;
    public static WIN32_ERROR ERROR_DS_OBJ_GUID_EXISTS;
    public static WIN32_ERROR ERROR_DS_NOT_ON_BACKLINK;
    public static WIN32_ERROR ERROR_DS_NO_CROSSREF_FOR_NC;
    public static WIN32_ERROR ERROR_DS_SHUTTING_DOWN;
    public static WIN32_ERROR ERROR_DS_UNKNOWN_OPERATION;
    public static WIN32_ERROR ERROR_DS_INVALID_ROLE_OWNER;
    public static WIN32_ERROR ERROR_DS_COULDNT_CONTACT_FSMO;
    public static WIN32_ERROR ERROR_DS_CROSS_NC_DN_RENAME;
    public static WIN32_ERROR ERROR_DS_CANT_MOD_SYSTEM_ONLY;
    public static WIN32_ERROR ERROR_DS_REPLICATOR_ONLY;
    public static WIN32_ERROR ERROR_DS_OBJ_CLASS_NOT_DEFINED;
    public static WIN32_ERROR ERROR_DS_OBJ_CLASS_NOT_SUBCLASS;
    public static WIN32_ERROR ERROR_DS_NAME_REFERENCE_INVALID;
    public static WIN32_ERROR ERROR_DS_CROSS_REF_EXISTS;
    public static WIN32_ERROR ERROR_DS_CANT_DEL_MASTER_CROSSREF;
    public static WIN32_ERROR ERROR_DS_SUBTREE_NOTIFY_NOT_NC_HEAD;
    public static WIN32_ERROR ERROR_DS_NOTIFY_FILTER_TOO_COMPLEX;
    public static WIN32_ERROR ERROR_DS_DUP_RDN;
    public static WIN32_ERROR ERROR_DS_DUP_OID;
    public static WIN32_ERROR ERROR_DS_DUP_MAPI_ID;
    public static WIN32_ERROR ERROR_DS_DUP_SCHEMA_ID_GUID;
    public static WIN32_ERROR ERROR_DS_DUP_LDAP_DISPLAY_NAME;
    public static WIN32_ERROR ERROR_DS_SEMANTIC_ATT_TEST;
    public static WIN32_ERROR ERROR_DS_SYNTAX_MISMATCH;
    public static WIN32_ERROR ERROR_DS_EXISTS_IN_MUST_HAVE;
    public static WIN32_ERROR ERROR_DS_EXISTS_IN_MAY_HAVE;
    public static WIN32_ERROR ERROR_DS_NONEXISTENT_MAY_HAVE;
    public static WIN32_ERROR ERROR_DS_NONEXISTENT_MUST_HAVE;
    public static WIN32_ERROR ERROR_DS_AUX_CLS_TEST_FAIL;
    public static WIN32_ERROR ERROR_DS_NONEXISTENT_POSS_SUP;
    public static WIN32_ERROR ERROR_DS_SUB_CLS_TEST_FAIL;
    public static WIN32_ERROR ERROR_DS_BAD_RDN_ATT_ID_SYNTAX;
    public static WIN32_ERROR ERROR_DS_EXISTS_IN_AUX_CLS;
    public static WIN32_ERROR ERROR_DS_EXISTS_IN_SUB_CLS;
    public static WIN32_ERROR ERROR_DS_EXISTS_IN_POSS_SUP;
    public static WIN32_ERROR ERROR_DS_RECALCSCHEMA_FAILED;
    public static WIN32_ERROR ERROR_DS_TREE_DELETE_NOT_FINISHED;
    public static WIN32_ERROR ERROR_DS_CANT_DELETE;
    public static WIN32_ERROR ERROR_DS_ATT_SCHEMA_REQ_ID;
    public static WIN32_ERROR ERROR_DS_BAD_ATT_SCHEMA_SYNTAX;
    public static WIN32_ERROR ERROR_DS_CANT_CACHE_ATT;
    public static WIN32_ERROR ERROR_DS_CANT_CACHE_CLASS;
    public static WIN32_ERROR ERROR_DS_CANT_REMOVE_ATT_CACHE;
    public static WIN32_ERROR ERROR_DS_CANT_REMOVE_CLASS_CACHE;
    public static WIN32_ERROR ERROR_DS_CANT_RETRIEVE_DN;
    public static WIN32_ERROR ERROR_DS_MISSING_SUPREF;
    public static WIN32_ERROR ERROR_DS_CANT_RETRIEVE_INSTANCE;
    public static WIN32_ERROR ERROR_DS_CODE_INCONSISTENCY;
    public static WIN32_ERROR ERROR_DS_DATABASE_ERROR;
    public static WIN32_ERROR ERROR_DS_GOVERNSID_MISSING;
    public static WIN32_ERROR ERROR_DS_MISSING_EXPECTED_ATT;
    public static WIN32_ERROR ERROR_DS_NCNAME_MISSING_CR_REF;
    public static WIN32_ERROR ERROR_DS_SECURITY_CHECKING_ERROR;
    public static WIN32_ERROR ERROR_DS_SCHEMA_NOT_LOADED;
    public static WIN32_ERROR ERROR_DS_SCHEMA_ALLOC_FAILED;
    public static WIN32_ERROR ERROR_DS_ATT_SCHEMA_REQ_SYNTAX;
    public static WIN32_ERROR ERROR_DS_GCVERIFY_ERROR;
    public static WIN32_ERROR ERROR_DS_DRA_SCHEMA_MISMATCH;
    public static WIN32_ERROR ERROR_DS_CANT_FIND_DSA_OBJ;
    public static WIN32_ERROR ERROR_DS_CANT_FIND_EXPECTED_NC;
    public static WIN32_ERROR ERROR_DS_CANT_FIND_NC_IN_CACHE;
    public static WIN32_ERROR ERROR_DS_CANT_RETRIEVE_CHILD;
    public static WIN32_ERROR ERROR_DS_SECURITY_ILLEGAL_MODIFY;
    public static WIN32_ERROR ERROR_DS_CANT_REPLACE_HIDDEN_REC;
    public static WIN32_ERROR ERROR_DS_BAD_HIERARCHY_FILE;
    public static WIN32_ERROR ERROR_DS_BUILD_HIERARCHY_TABLE_FAILED;
    public static WIN32_ERROR ERROR_DS_CONFIG_PARAM_MISSING;
    public static WIN32_ERROR ERROR_DS_COUNTING_AB_INDICES_FAILED;
    public static WIN32_ERROR ERROR_DS_HIERARCHY_TABLE_MALLOC_FAILED;
    public static WIN32_ERROR ERROR_DS_INTERNAL_FAILURE;
    public static WIN32_ERROR ERROR_DS_UNKNOWN_ERROR;
    public static WIN32_ERROR ERROR_DS_ROOT_REQUIRES_CLASS_TOP;
    public static WIN32_ERROR ERROR_DS_REFUSING_FSMO_ROLES;
    public static WIN32_ERROR ERROR_DS_MISSING_FSMO_SETTINGS;
    public static WIN32_ERROR ERROR_DS_UNABLE_TO_SURRENDER_ROLES;
    public static WIN32_ERROR ERROR_DS_DRA_GENERIC;
    public static WIN32_ERROR ERROR_DS_DRA_INVALID_PARAMETER;
    public static WIN32_ERROR ERROR_DS_DRA_BUSY;
    public static WIN32_ERROR ERROR_DS_DRA_BAD_DN;
    public static WIN32_ERROR ERROR_DS_DRA_BAD_NC;
    public static WIN32_ERROR ERROR_DS_DRA_DN_EXISTS;
    public static WIN32_ERROR ERROR_DS_DRA_INTERNAL_ERROR;
    public static WIN32_ERROR ERROR_DS_DRA_INCONSISTENT_DIT;
    public static WIN32_ERROR ERROR_DS_DRA_CONNECTION_FAILED;
    public static WIN32_ERROR ERROR_DS_DRA_BAD_INSTANCE_TYPE;
    public static WIN32_ERROR ERROR_DS_DRA_OUT_OF_MEM;
    public static WIN32_ERROR ERROR_DS_DRA_MAIL_PROBLEM;
    public static WIN32_ERROR ERROR_DS_DRA_REF_ALREADY_EXISTS;
    public static WIN32_ERROR ERROR_DS_DRA_REF_NOT_FOUND;
    public static WIN32_ERROR ERROR_DS_DRA_OBJ_IS_REP_SOURCE;
    public static WIN32_ERROR ERROR_DS_DRA_DB_ERROR;
    public static WIN32_ERROR ERROR_DS_DRA_NO_REPLICA;
    public static WIN32_ERROR ERROR_DS_DRA_ACCESS_DENIED;
    public static WIN32_ERROR ERROR_DS_DRA_NOT_SUPPORTED;
    public static WIN32_ERROR ERROR_DS_DRA_RPC_CANCELLED;
    public static WIN32_ERROR ERROR_DS_DRA_SOURCE_DISABLED;
    public static WIN32_ERROR ERROR_DS_DRA_SINK_DISABLED;
    public static WIN32_ERROR ERROR_DS_DRA_NAME_COLLISION;
    public static WIN32_ERROR ERROR_DS_DRA_SOURCE_REINSTALLED;
    public static WIN32_ERROR ERROR_DS_DRA_MISSING_PARENT;
    public static WIN32_ERROR ERROR_DS_DRA_PREEMPTED;
    public static WIN32_ERROR ERROR_DS_DRA_ABANDON_SYNC;
    public static WIN32_ERROR ERROR_DS_DRA_SHUTDOWN;
    public static WIN32_ERROR ERROR_DS_DRA_INCOMPATIBLE_PARTIAL_SET;
    public static WIN32_ERROR ERROR_DS_DRA_SOURCE_IS_PARTIAL_REPLICA;
    public static WIN32_ERROR ERROR_DS_DRA_EXTN_CONNECTION_FAILED;
    public static WIN32_ERROR ERROR_DS_INSTALL_SCHEMA_MISMATCH;
    public static WIN32_ERROR ERROR_DS_DUP_LINK_ID;
    public static WIN32_ERROR ERROR_DS_NAME_ERROR_RESOLVING;
    public static WIN32_ERROR ERROR_DS_NAME_ERROR_NOT_FOUND;
    public static WIN32_ERROR ERROR_DS_NAME_ERROR_NOT_UNIQUE;
    public static WIN32_ERROR ERROR_DS_NAME_ERROR_NO_MAPPING;
    public static WIN32_ERROR ERROR_DS_NAME_ERROR_DOMAIN_ONLY;
    public static WIN32_ERROR ERROR_DS_NAME_ERROR_NO_SYNTACTICAL_MAPPING;
    public static WIN32_ERROR ERROR_DS_CONSTRUCTED_ATT_MOD;
    public static WIN32_ERROR ERROR_DS_WRONG_OM_OBJ_CLASS;
    public static WIN32_ERROR ERROR_DS_DRA_REPL_PENDING;
    public static WIN32_ERROR ERROR_DS_DS_REQUIRED;
    public static WIN32_ERROR ERROR_DS_INVALID_LDAP_DISPLAY_NAME;
    public static WIN32_ERROR ERROR_DS_NON_BASE_SEARCH;
    public static WIN32_ERROR ERROR_DS_CANT_RETRIEVE_ATTS;
    public static WIN32_ERROR ERROR_DS_BACKLINK_WITHOUT_LINK;
    public static WIN32_ERROR ERROR_DS_EPOCH_MISMATCH;
    public static WIN32_ERROR ERROR_DS_SRC_NAME_MISMATCH;
    public static WIN32_ERROR ERROR_DS_SRC_AND_DST_NC_IDENTICAL;
    public static WIN32_ERROR ERROR_DS_DST_NC_MISMATCH;
    public static WIN32_ERROR ERROR_DS_NOT_AUTHORITIVE_FOR_DST_NC;
    public static WIN32_ERROR ERROR_DS_SRC_GUID_MISMATCH;
    public static WIN32_ERROR ERROR_DS_CANT_MOVE_DELETED_OBJECT;
    public static WIN32_ERROR ERROR_DS_PDC_OPERATION_IN_PROGRESS;
    public static WIN32_ERROR ERROR_DS_CROSS_DOMAIN_CLEANUP_REQD;
    public static WIN32_ERROR ERROR_DS_ILLEGAL_XDOM_MOVE_OPERATION;
    public static WIN32_ERROR ERROR_DS_CANT_WITH_ACCT_GROUP_MEMBERSHPS;
    public static WIN32_ERROR ERROR_DS_NC_MUST_HAVE_NC_PARENT;
    public static WIN32_ERROR ERROR_DS_CR_IMPOSSIBLE_TO_VALIDATE;
    public static WIN32_ERROR ERROR_DS_DST_DOMAIN_NOT_NATIVE;
    public static WIN32_ERROR ERROR_DS_MISSING_INFRASTRUCTURE_CONTAINER;
    public static WIN32_ERROR ERROR_DS_CANT_MOVE_ACCOUNT_GROUP;
    public static WIN32_ERROR ERROR_DS_CANT_MOVE_RESOURCE_GROUP;
    public static WIN32_ERROR ERROR_DS_INVALID_SEARCH_FLAG;
    public static WIN32_ERROR ERROR_DS_NO_TREE_DELETE_ABOVE_NC;
    public static WIN32_ERROR ERROR_DS_COULDNT_LOCK_TREE_FOR_DELETE;
    public static WIN32_ERROR ERROR_DS_COULDNT_IDENTIFY_OBJECTS_FOR_TREE_DELETE;
    public static WIN32_ERROR ERROR_DS_SAM_INIT_FAILURE;
    public static WIN32_ERROR ERROR_DS_SENSITIVE_GROUP_VIOLATION;
    public static WIN32_ERROR ERROR_DS_CANT_MOD_PRIMARYGROUPID;
    public static WIN32_ERROR ERROR_DS_ILLEGAL_BASE_SCHEMA_MOD;
    public static WIN32_ERROR ERROR_DS_NONSAFE_SCHEMA_CHANGE;
    public static WIN32_ERROR ERROR_DS_SCHEMA_UPDATE_DISALLOWED;
    public static WIN32_ERROR ERROR_DS_CANT_CREATE_UNDER_SCHEMA;
    public static WIN32_ERROR ERROR_DS_INSTALL_NO_SRC_SCH_VERSION;
    public static WIN32_ERROR ERROR_DS_INSTALL_NO_SCH_VERSION_IN_INIFILE;
    public static WIN32_ERROR ERROR_DS_INVALID_GROUP_TYPE;
    public static WIN32_ERROR ERROR_DS_NO_NEST_GLOBALGROUP_IN_MIXEDDOMAIN;
    public static WIN32_ERROR ERROR_DS_NO_NEST_LOCALGROUP_IN_MIXEDDOMAIN;
    public static WIN32_ERROR ERROR_DS_GLOBAL_CANT_HAVE_LOCAL_MEMBER;
    public static WIN32_ERROR ERROR_DS_GLOBAL_CANT_HAVE_UNIVERSAL_MEMBER;
    public static WIN32_ERROR ERROR_DS_UNIVERSAL_CANT_HAVE_LOCAL_MEMBER;
    public static WIN32_ERROR ERROR_DS_GLOBAL_CANT_HAVE_CROSSDOMAIN_MEMBER;
    public static WIN32_ERROR ERROR_DS_LOCAL_CANT_HAVE_CROSSDOMAIN_LOCAL_MEMBER;
    public static WIN32_ERROR ERROR_DS_HAVE_PRIMARY_MEMBERS;
    public static WIN32_ERROR ERROR_DS_STRING_SD_CONVERSION_FAILED;
    public static WIN32_ERROR ERROR_DS_NAMING_MASTER_GC;
    public static WIN32_ERROR ERROR_DS_DNS_LOOKUP_FAILURE;
    public static WIN32_ERROR ERROR_DS_COULDNT_UPDATE_SPNS;
    public static WIN32_ERROR ERROR_DS_CANT_RETRIEVE_SD;
    public static WIN32_ERROR ERROR_DS_KEY_NOT_UNIQUE;
    public static WIN32_ERROR ERROR_DS_WRONG_LINKED_ATT_SYNTAX;
    public static WIN32_ERROR ERROR_DS_SAM_NEED_BOOTKEY_PASSWORD;
    public static WIN32_ERROR ERROR_DS_SAM_NEED_BOOTKEY_FLOPPY;
    public static WIN32_ERROR ERROR_DS_CANT_START;
    public static WIN32_ERROR ERROR_DS_INIT_FAILURE;
    public static WIN32_ERROR ERROR_DS_NO_PKT_PRIVACY_ON_CONNECTION;
    public static WIN32_ERROR ERROR_DS_SOURCE_DOMAIN_IN_FOREST;
    public static WIN32_ERROR ERROR_DS_DESTINATION_DOMAIN_NOT_IN_FOREST;
    public static WIN32_ERROR ERROR_DS_DESTINATION_AUDITING_NOT_ENABLED;
    public static WIN32_ERROR ERROR_DS_CANT_FIND_DC_FOR_SRC_DOMAIN;
    public static WIN32_ERROR ERROR_DS_SRC_OBJ_NOT_GROUP_OR_USER;
    public static WIN32_ERROR ERROR_DS_SRC_SID_EXISTS_IN_FOREST;
    public static WIN32_ERROR ERROR_DS_SRC_AND_DST_OBJECT_CLASS_MISMATCH;
    public static WIN32_ERROR ERROR_SAM_INIT_FAILURE;
    public static WIN32_ERROR ERROR_DS_DRA_SCHEMA_INFO_SHIP;
    public static WIN32_ERROR ERROR_DS_DRA_SCHEMA_CONFLICT;
    public static WIN32_ERROR ERROR_DS_DRA_EARLIER_SCHEMA_CONFLICT;
    public static WIN32_ERROR ERROR_DS_DRA_OBJ_NC_MISMATCH;
    public static WIN32_ERROR ERROR_DS_NC_STILL_HAS_DSAS;
    public static WIN32_ERROR ERROR_DS_GC_REQUIRED;
    public static WIN32_ERROR ERROR_DS_LOCAL_MEMBER_OF_LOCAL_ONLY;
    public static WIN32_ERROR ERROR_DS_NO_FPO_IN_UNIVERSAL_GROUPS;
    public static WIN32_ERROR ERROR_DS_CANT_ADD_TO_GC;
    public static WIN32_ERROR ERROR_DS_NO_CHECKPOINT_WITH_PDC;
    public static WIN32_ERROR ERROR_DS_SOURCE_AUDITING_NOT_ENABLED;
    public static WIN32_ERROR ERROR_DS_CANT_CREATE_IN_NONDOMAIN_NC;
    public static WIN32_ERROR ERROR_DS_INVALID_NAME_FOR_SPN;
    public static WIN32_ERROR ERROR_DS_FILTER_USES_CONTRUCTED_ATTRS;
    public static WIN32_ERROR ERROR_DS_UNICODEPWD_NOT_IN_QUOTES;
    public static WIN32_ERROR ERROR_DS_MACHINE_ACCOUNT_QUOTA_EXCEEDED;
    public static WIN32_ERROR ERROR_DS_MUST_BE_RUN_ON_DST_DC;
    public static WIN32_ERROR ERROR_DS_SRC_DC_MUST_BE_SP4_OR_GREATER;
    public static WIN32_ERROR ERROR_DS_CANT_TREE_DELETE_CRITICAL_OBJ;
    public static WIN32_ERROR ERROR_DS_INIT_FAILURE_CONSOLE;
    public static WIN32_ERROR ERROR_DS_SAM_INIT_FAILURE_CONSOLE;
    public static WIN32_ERROR ERROR_DS_FOREST_VERSION_TOO_HIGH;
    public static WIN32_ERROR ERROR_DS_DOMAIN_VERSION_TOO_HIGH;
    public static WIN32_ERROR ERROR_DS_FOREST_VERSION_TOO_LOW;
    public static WIN32_ERROR ERROR_DS_DOMAIN_VERSION_TOO_LOW;
    public static WIN32_ERROR ERROR_DS_INCOMPATIBLE_VERSION;
    public static WIN32_ERROR ERROR_DS_LOW_DSA_VERSION;
    public static WIN32_ERROR ERROR_DS_NO_BEHAVIOR_VERSION_IN_MIXEDDOMAIN;
    public static WIN32_ERROR ERROR_DS_NOT_SUPPORTED_SORT_ORDER;
    public static WIN32_ERROR ERROR_DS_NAME_NOT_UNIQUE;
    public static WIN32_ERROR ERROR_DS_MACHINE_ACCOUNT_CREATED_PRENT4;
    public static WIN32_ERROR ERROR_DS_OUT_OF_VERSION_STORE;
    public static WIN32_ERROR ERROR_DS_INCOMPATIBLE_CONTROLS_USED;
    public static WIN32_ERROR ERROR_DS_NO_REF_DOMAIN;
    public static WIN32_ERROR ERROR_DS_RESERVED_LINK_ID;
    public static WIN32_ERROR ERROR_DS_LINK_ID_NOT_AVAILABLE;
    public static WIN32_ERROR ERROR_DS_AG_CANT_HAVE_UNIVERSAL_MEMBER;
    public static WIN32_ERROR ERROR_DS_MODIFYDN_DISALLOWED_BY_INSTANCE_TYPE;
    public static WIN32_ERROR ERROR_DS_NO_OBJECT_MOVE_IN_SCHEMA_NC;
    public static WIN32_ERROR ERROR_DS_MODIFYDN_DISALLOWED_BY_FLAG;
    public static WIN32_ERROR ERROR_DS_MODIFYDN_WRONG_GRANDPARENT;
    public static WIN32_ERROR ERROR_DS_NAME_ERROR_TRUST_REFERRAL;
    public static WIN32_ERROR ERROR_NOT_SUPPORTED_ON_STANDARD_SERVER;
    public static WIN32_ERROR ERROR_DS_CANT_ACCESS_REMOTE_PART_OF_AD;
    public static WIN32_ERROR ERROR_DS_CR_IMPOSSIBLE_TO_VALIDATE_V2;
    public static WIN32_ERROR ERROR_DS_THREAD_LIMIT_EXCEEDED;
    public static WIN32_ERROR ERROR_DS_NOT_CLOSEST;
    public static WIN32_ERROR ERROR_DS_CANT_DERIVE_SPN_WITHOUT_SERVER_REF;
    public static WIN32_ERROR ERROR_DS_SINGLE_USER_MODE_FAILED;
    public static WIN32_ERROR ERROR_DS_NTDSCRIPT_SYNTAX_ERROR;
    public static WIN32_ERROR ERROR_DS_NTDSCRIPT_PROCESS_ERROR;
    public static WIN32_ERROR ERROR_DS_DIFFERENT_REPL_EPOCHS;
    public static WIN32_ERROR ERROR_DS_DRS_EXTENSIONS_CHANGED;
    public static WIN32_ERROR ERROR_DS_REPLICA_SET_CHANGE_NOT_ALLOWED_ON_DISABLED_CR;
    public static WIN32_ERROR ERROR_DS_NO_MSDS_INTID;
    public static WIN32_ERROR ERROR_DS_DUP_MSDS_INTID;
    public static WIN32_ERROR ERROR_DS_EXISTS_IN_RDNATTID;
    public static WIN32_ERROR ERROR_DS_AUTHORIZATION_FAILED;
    public static WIN32_ERROR ERROR_DS_INVALID_SCRIPT;
    public static WIN32_ERROR ERROR_DS_REMOTE_CROSSREF_OP_FAILED;
    public static WIN32_ERROR ERROR_DS_CROSS_REF_BUSY;
    public static WIN32_ERROR ERROR_DS_CANT_DERIVE_SPN_FOR_DELETED_DOMAIN;
    public static WIN32_ERROR ERROR_DS_CANT_DEMOTE_WITH_WRITEABLE_NC;
    public static WIN32_ERROR ERROR_DS_DUPLICATE_ID_FOUND;
    public static WIN32_ERROR ERROR_DS_INSUFFICIENT_ATTR_TO_CREATE_OBJECT;
    public static WIN32_ERROR ERROR_DS_GROUP_CONVERSION_ERROR;
    public static WIN32_ERROR ERROR_DS_CANT_MOVE_APP_BASIC_GROUP;
    public static WIN32_ERROR ERROR_DS_CANT_MOVE_APP_QUERY_GROUP;
    public static WIN32_ERROR ERROR_DS_ROLE_NOT_VERIFIED;
    public static WIN32_ERROR ERROR_DS_WKO_CONTAINER_CANNOT_BE_SPECIAL;
    public static WIN32_ERROR ERROR_DS_DOMAIN_RENAME_IN_PROGRESS;
    public static WIN32_ERROR ERROR_DS_EXISTING_AD_CHILD_NC;
    public static WIN32_ERROR ERROR_DS_REPL_LIFETIME_EXCEEDED;
    public static WIN32_ERROR ERROR_DS_DISALLOWED_IN_SYSTEM_CONTAINER;
    public static WIN32_ERROR ERROR_DS_LDAP_SEND_QUEUE_FULL;
    public static WIN32_ERROR ERROR_DS_DRA_OUT_SCHEDULE_WINDOW;
    public static WIN32_ERROR ERROR_DS_POLICY_NOT_KNOWN;
    public static WIN32_ERROR ERROR_NO_SITE_SETTINGS_OBJECT;
    public static WIN32_ERROR ERROR_NO_SECRETS;
    public static WIN32_ERROR ERROR_NO_WRITABLE_DC_FOUND;
    public static WIN32_ERROR ERROR_DS_NO_SERVER_OBJECT;
    public static WIN32_ERROR ERROR_DS_NO_NTDSA_OBJECT;
    public static WIN32_ERROR ERROR_DS_NON_ASQ_SEARCH;
    public static WIN32_ERROR ERROR_DS_AUDIT_FAILURE;
    public static WIN32_ERROR ERROR_DS_INVALID_SEARCH_FLAG_SUBTREE;
    public static WIN32_ERROR ERROR_DS_INVALID_SEARCH_FLAG_TUPLE;
    public static WIN32_ERROR ERROR_DS_HIERARCHY_TABLE_TOO_DEEP;
    public static WIN32_ERROR ERROR_DS_DRA_CORRUPT_UTD_VECTOR;
    public static WIN32_ERROR ERROR_DS_DRA_SECRETS_DENIED;
    public static WIN32_ERROR ERROR_DS_RESERVED_MAPI_ID;
    public static WIN32_ERROR ERROR_DS_MAPI_ID_NOT_AVAILABLE;
    public static WIN32_ERROR ERROR_DS_DRA_MISSING_KRBTGT_SECRET;
    public static WIN32_ERROR ERROR_DS_DOMAIN_NAME_EXISTS_IN_FOREST;
    public static WIN32_ERROR ERROR_DS_FLAT_NAME_EXISTS_IN_FOREST;
    public static WIN32_ERROR ERROR_INVALID_USER_PRINCIPAL_NAME;
    public static WIN32_ERROR ERROR_DS_OID_MAPPED_GROUP_CANT_HAVE_MEMBERS;
    public static WIN32_ERROR ERROR_DS_OID_NOT_FOUND;
    public static WIN32_ERROR ERROR_DS_DRA_RECYCLED_TARGET;
    public static WIN32_ERROR ERROR_DS_DISALLOWED_NC_REDIRECT;
    public static WIN32_ERROR ERROR_DS_HIGH_ADLDS_FFL;
    public static WIN32_ERROR ERROR_DS_HIGH_DSA_VERSION;
    public static WIN32_ERROR ERROR_DS_LOW_ADLDS_FFL;
    public static WIN32_ERROR ERROR_DOMAIN_SID_SAME_AS_LOCAL_WORKSTATION;
    public static WIN32_ERROR ERROR_DS_UNDELETE_SAM_VALIDATION_FAILED;
    public static WIN32_ERROR ERROR_INCORRECT_ACCOUNT_TYPE;
    public static WIN32_ERROR ERROR_DS_SPN_VALUE_NOT_UNIQUE_IN_FOREST;
    public static WIN32_ERROR ERROR_DS_UPN_VALUE_NOT_UNIQUE_IN_FOREST;
    public static WIN32_ERROR ERROR_DS_MISSING_FOREST_TRUST;
    public static WIN32_ERROR ERROR_DS_VALUE_KEY_NOT_UNIQUE;
    public static WIN32_ERROR ERROR_WEAK_WHFBKEY_BLOCKED;
    public static WIN32_ERROR ERROR_DS_PER_ATTRIBUTE_AUTHZ_FAILED_DURING_ADD;
    public static WIN32_ERROR ERROR_LOCAL_POLICY_MODIFICATION_NOT_SUPPORTED;
    public static WIN32_ERROR DNS_ERROR_RESPONSE_CODES_BASE;
    public static WIN32_ERROR DNS_ERROR_RCODE_NO_ERROR;
    public static WIN32_ERROR DNS_ERROR_MASK;
    public static WIN32_ERROR DNS_ERROR_RCODE_FORMAT_ERROR;
    public static WIN32_ERROR DNS_ERROR_RCODE_SERVER_FAILURE;
    public static WIN32_ERROR DNS_ERROR_RCODE_NAME_ERROR;
    public static WIN32_ERROR DNS_ERROR_RCODE_NOT_IMPLEMENTED;
    public static WIN32_ERROR DNS_ERROR_RCODE_REFUSED;
    public static WIN32_ERROR DNS_ERROR_RCODE_YXDOMAIN;
    public static WIN32_ERROR DNS_ERROR_RCODE_YXRRSET;
    public static WIN32_ERROR DNS_ERROR_RCODE_NXRRSET;
    public static WIN32_ERROR DNS_ERROR_RCODE_NOTAUTH;
    public static WIN32_ERROR DNS_ERROR_RCODE_NOTZONE;
    public static WIN32_ERROR DNS_ERROR_RCODE_BADSIG;
    public static WIN32_ERROR DNS_ERROR_RCODE_BADKEY;
    public static WIN32_ERROR DNS_ERROR_RCODE_BADTIME;
    public static WIN32_ERROR DNS_ERROR_RCODE_LAST;
    public static WIN32_ERROR DNS_ERROR_DNSSEC_BASE;
    public static WIN32_ERROR DNS_ERROR_KEYMASTER_REQUIRED;
    public static WIN32_ERROR DNS_ERROR_NOT_ALLOWED_ON_SIGNED_ZONE;
    public static WIN32_ERROR DNS_ERROR_NSEC3_INCOMPATIBLE_WITH_RSA_SHA1;
    public static WIN32_ERROR DNS_ERROR_NOT_ENOUGH_SIGNING_KEY_DESCRIPTORS;
    public static WIN32_ERROR DNS_ERROR_UNSUPPORTED_ALGORITHM;
    public static WIN32_ERROR DNS_ERROR_INVALID_KEY_SIZE;
    public static WIN32_ERROR DNS_ERROR_SIGNING_KEY_NOT_ACCESSIBLE;
    public static WIN32_ERROR DNS_ERROR_KSP_DOES_NOT_SUPPORT_PROTECTION;
    public static WIN32_ERROR DNS_ERROR_UNEXPECTED_DATA_PROTECTION_ERROR;
    public static WIN32_ERROR DNS_ERROR_UNEXPECTED_CNG_ERROR;
    public static WIN32_ERROR DNS_ERROR_UNKNOWN_SIGNING_PARAMETER_VERSION;
    public static WIN32_ERROR DNS_ERROR_KSP_NOT_ACCESSIBLE;
    public static WIN32_ERROR DNS_ERROR_TOO_MANY_SKDS;
    public static WIN32_ERROR DNS_ERROR_INVALID_ROLLOVER_PERIOD;
    public static WIN32_ERROR DNS_ERROR_INVALID_INITIAL_ROLLOVER_OFFSET;
    public static WIN32_ERROR DNS_ERROR_ROLLOVER_IN_PROGRESS;
    public static WIN32_ERROR DNS_ERROR_STANDBY_KEY_NOT_PRESENT;
    public static WIN32_ERROR DNS_ERROR_NOT_ALLOWED_ON_ZSK;
    public static WIN32_ERROR DNS_ERROR_NOT_ALLOWED_ON_ACTIVE_SKD;
    public static WIN32_ERROR DNS_ERROR_ROLLOVER_ALREADY_QUEUED;
    public static WIN32_ERROR DNS_ERROR_NOT_ALLOWED_ON_UNSIGNED_ZONE;
    public static WIN32_ERROR DNS_ERROR_BAD_KEYMASTER;
    public static WIN32_ERROR DNS_ERROR_INVALID_SIGNATURE_VALIDITY_PERIOD;
    public static WIN32_ERROR DNS_ERROR_INVALID_NSEC3_ITERATION_COUNT;
    public static WIN32_ERROR DNS_ERROR_DNSSEC_IS_DISABLED;
    public static WIN32_ERROR DNS_ERROR_INVALID_XML;
    public static WIN32_ERROR DNS_ERROR_NO_VALID_TRUST_ANCHORS;
    public static WIN32_ERROR DNS_ERROR_ROLLOVER_NOT_POKEABLE;
    public static WIN32_ERROR DNS_ERROR_NSEC3_NAME_COLLISION;
    public static WIN32_ERROR DNS_ERROR_NSEC_INCOMPATIBLE_WITH_NSEC3_RSA_SHA1;
    public static WIN32_ERROR DNS_ERROR_PACKET_FMT_BASE;
    public static WIN32_ERROR DNS_ERROR_BAD_PACKET;
    public static WIN32_ERROR DNS_ERROR_NO_PACKET;
    public static WIN32_ERROR DNS_ERROR_RCODE;
    public static WIN32_ERROR DNS_ERROR_UNSECURE_PACKET;
    public static WIN32_ERROR DNS_ERROR_NO_MEMORY;
    public static WIN32_ERROR DNS_ERROR_INVALID_NAME;
    public static WIN32_ERROR DNS_ERROR_INVALID_DATA;
    public static WIN32_ERROR DNS_ERROR_GENERAL_API_BASE;
    public static WIN32_ERROR DNS_ERROR_INVALID_TYPE;
    public static WIN32_ERROR DNS_ERROR_INVALID_IP_ADDRESS;
    public static WIN32_ERROR DNS_ERROR_INVALID_PROPERTY;
    public static WIN32_ERROR DNS_ERROR_TRY_AGAIN_LATER;
    public static WIN32_ERROR DNS_ERROR_NOT_UNIQUE;
    public static WIN32_ERROR DNS_ERROR_NON_RFC_NAME;
    public static WIN32_ERROR DNS_ERROR_INVALID_NAME_CHAR;
    public static WIN32_ERROR DNS_ERROR_NUMERIC_NAME;
    public static WIN32_ERROR DNS_ERROR_NOT_ALLOWED_ON_ROOT_SERVER;
    public static WIN32_ERROR DNS_ERROR_NOT_ALLOWED_UNDER_DELEGATION;
    public static WIN32_ERROR DNS_ERROR_CANNOT_FIND_ROOT_HINTS;
    public static WIN32_ERROR DNS_ERROR_INCONSISTENT_ROOT_HINTS;
    public static WIN32_ERROR DNS_ERROR_DWORD_VALUE_TOO_SMALL;
    public static WIN32_ERROR DNS_ERROR_DWORD_VALUE_TOO_LARGE;
    public static WIN32_ERROR DNS_ERROR_BACKGROUND_LOADING;
    public static WIN32_ERROR DNS_ERROR_NOT_ALLOWED_ON_RODC;
    public static WIN32_ERROR DNS_ERROR_NOT_ALLOWED_UNDER_DNAME;
    public static WIN32_ERROR DNS_ERROR_DELEGATION_REQUIRED;
    public static WIN32_ERROR DNS_ERROR_INVALID_POLICY_TABLE;
    public static WIN32_ERROR DNS_ERROR_ADDRESS_REQUIRED;
    public static WIN32_ERROR DNS_ERROR_ZONE_BASE;
    public static WIN32_ERROR DNS_ERROR_ZONE_DOES_NOT_EXIST;
    public static WIN32_ERROR DNS_ERROR_NO_ZONE_INFO;
    public static WIN32_ERROR DNS_ERROR_INVALID_ZONE_OPERATION;
    public static WIN32_ERROR DNS_ERROR_ZONE_CONFIGURATION_ERROR;
    public static WIN32_ERROR DNS_ERROR_ZONE_HAS_NO_SOA_RECORD;
    public static WIN32_ERROR DNS_ERROR_ZONE_HAS_NO_NS_RECORDS;
    public static WIN32_ERROR DNS_ERROR_ZONE_LOCKED;
    public static WIN32_ERROR DNS_ERROR_ZONE_CREATION_FAILED;
    public static WIN32_ERROR DNS_ERROR_ZONE_ALREADY_EXISTS;
    public static WIN32_ERROR DNS_ERROR_AUTOZONE_ALREADY_EXISTS;
    public static WIN32_ERROR DNS_ERROR_INVALID_ZONE_TYPE;
    public static WIN32_ERROR DNS_ERROR_SECONDARY_REQUIRES_MASTER_IP;
    public static WIN32_ERROR DNS_ERROR_ZONE_NOT_SECONDARY;
    public static WIN32_ERROR DNS_ERROR_NEED_SECONDARY_ADDRESSES;
    public static WIN32_ERROR DNS_ERROR_WINS_INIT_FAILED;
    public static WIN32_ERROR DNS_ERROR_NEED_WINS_SERVERS;
    public static WIN32_ERROR DNS_ERROR_NBSTAT_INIT_FAILED;
    public static WIN32_ERROR DNS_ERROR_SOA_DELETE_INVALID;
    public static WIN32_ERROR DNS_ERROR_FORWARDER_ALREADY_EXISTS;
    public static WIN32_ERROR DNS_ERROR_ZONE_REQUIRES_MASTER_IP;
    public static WIN32_ERROR DNS_ERROR_ZONE_IS_SHUTDOWN;
    public static WIN32_ERROR DNS_ERROR_ZONE_LOCKED_FOR_SIGNING;
    public static WIN32_ERROR DNS_ERROR_DATAFILE_BASE;
    public static WIN32_ERROR DNS_ERROR_PRIMARY_REQUIRES_DATAFILE;
    public static WIN32_ERROR DNS_ERROR_INVALID_DATAFILE_NAME;
    public static WIN32_ERROR DNS_ERROR_DATAFILE_OPEN_FAILURE;
    public static WIN32_ERROR DNS_ERROR_FILE_WRITEBACK_FAILED;
    public static WIN32_ERROR DNS_ERROR_DATAFILE_PARSING;
    public static WIN32_ERROR DNS_ERROR_DATABASE_BASE;
    public static WIN32_ERROR DNS_ERROR_RECORD_DOES_NOT_EXIST;
    public static WIN32_ERROR DNS_ERROR_RECORD_FORMAT;
    public static WIN32_ERROR DNS_ERROR_NODE_CREATION_FAILED;
    public static WIN32_ERROR DNS_ERROR_UNKNOWN_RECORD_TYPE;
    public static WIN32_ERROR DNS_ERROR_RECORD_TIMED_OUT;
    public static WIN32_ERROR DNS_ERROR_NAME_NOT_IN_ZONE;
    public static WIN32_ERROR DNS_ERROR_CNAME_LOOP;
    public static WIN32_ERROR DNS_ERROR_NODE_IS_CNAME;
    public static WIN32_ERROR DNS_ERROR_CNAME_COLLISION;
    public static WIN32_ERROR DNS_ERROR_RECORD_ONLY_AT_ZONE_ROOT;
    public static WIN32_ERROR DNS_ERROR_RECORD_ALREADY_EXISTS;
    public static WIN32_ERROR DNS_ERROR_SECONDARY_DATA;
    public static WIN32_ERROR DNS_ERROR_NO_CREATE_CACHE_DATA;
    public static WIN32_ERROR DNS_ERROR_NAME_DOES_NOT_EXIST;
    public static WIN32_ERROR DNS_ERROR_DS_UNAVAILABLE;
    public static WIN32_ERROR DNS_ERROR_DS_ZONE_ALREADY_EXISTS;
    public static WIN32_ERROR DNS_ERROR_NO_BOOTFILE_IF_DS_ZONE;
    public static WIN32_ERROR DNS_ERROR_NODE_IS_DNAME;
    public static WIN32_ERROR DNS_ERROR_DNAME_COLLISION;
    public static WIN32_ERROR DNS_ERROR_ALIAS_LOOP;
    public static WIN32_ERROR DNS_ERROR_OPERATION_BASE;
    public static WIN32_ERROR DNS_ERROR_AXFR;
    public static WIN32_ERROR DNS_ERROR_SECURE_BASE;
    public static WIN32_ERROR DNS_ERROR_SETUP_BASE;
    public static WIN32_ERROR DNS_ERROR_NO_TCPIP;
    public static WIN32_ERROR DNS_ERROR_NO_DNS_SERVERS;
    public static WIN32_ERROR DNS_ERROR_DP_BASE;
    public static WIN32_ERROR DNS_ERROR_DP_DOES_NOT_EXIST;
    public static WIN32_ERROR DNS_ERROR_DP_ALREADY_EXISTS;
    public static WIN32_ERROR DNS_ERROR_DP_NOT_ENLISTED;
    public static WIN32_ERROR DNS_ERROR_DP_ALREADY_ENLISTED;
    public static WIN32_ERROR DNS_ERROR_DP_NOT_AVAILABLE;
    public static WIN32_ERROR DNS_ERROR_DP_FSMO_ERROR;
    public static WIN32_ERROR DNS_ERROR_RRL_NOT_ENABLED;
    public static WIN32_ERROR DNS_ERROR_RRL_INVALID_WINDOW_SIZE;
    public static WIN32_ERROR DNS_ERROR_RRL_INVALID_IPV4_PREFIX;
    public static WIN32_ERROR DNS_ERROR_RRL_INVALID_IPV6_PREFIX;
    public static WIN32_ERROR DNS_ERROR_RRL_INVALID_TC_RATE;
    public static WIN32_ERROR DNS_ERROR_RRL_INVALID_LEAK_RATE;
    public static WIN32_ERROR DNS_ERROR_RRL_LEAK_RATE_LESSTHAN_TC_RATE;
    public static WIN32_ERROR DNS_ERROR_VIRTUALIZATION_INSTANCE_ALREADY_EXISTS;
    public static WIN32_ERROR DNS_ERROR_VIRTUALIZATION_INSTANCE_DOES_NOT_EXIST;
    public static WIN32_ERROR DNS_ERROR_VIRTUALIZATION_TREE_LOCKED;
    public static WIN32_ERROR DNS_ERROR_INVAILD_VIRTUALIZATION_INSTANCE_NAME;
    public static WIN32_ERROR DNS_ERROR_DEFAULT_VIRTUALIZATION_INSTANCE;
    public static WIN32_ERROR DNS_ERROR_ZONESCOPE_ALREADY_EXISTS;
    public static WIN32_ERROR DNS_ERROR_ZONESCOPE_DOES_NOT_EXIST;
    public static WIN32_ERROR DNS_ERROR_DEFAULT_ZONESCOPE;
    public static WIN32_ERROR DNS_ERROR_INVALID_ZONESCOPE_NAME;
    public static WIN32_ERROR DNS_ERROR_NOT_ALLOWED_WITH_ZONESCOPES;
    public static WIN32_ERROR DNS_ERROR_LOAD_ZONESCOPE_FAILED;
    public static WIN32_ERROR DNS_ERROR_ZONESCOPE_FILE_WRITEBACK_FAILED;
    public static WIN32_ERROR DNS_ERROR_INVALID_SCOPE_NAME;
    public static WIN32_ERROR DNS_ERROR_SCOPE_DOES_NOT_EXIST;
    public static WIN32_ERROR DNS_ERROR_DEFAULT_SCOPE;
    public static WIN32_ERROR DNS_ERROR_INVALID_SCOPE_OPERATION;
    public static WIN32_ERROR DNS_ERROR_SCOPE_LOCKED;
    public static WIN32_ERROR DNS_ERROR_SCOPE_ALREADY_EXISTS;
    public static WIN32_ERROR DNS_ERROR_POLICY_ALREADY_EXISTS;
    public static WIN32_ERROR DNS_ERROR_POLICY_DOES_NOT_EXIST;
    public static WIN32_ERROR DNS_ERROR_POLICY_INVALID_CRITERIA;
    public static WIN32_ERROR DNS_ERROR_POLICY_INVALID_SETTINGS;
    public static WIN32_ERROR DNS_ERROR_CLIENT_SUBNET_IS_ACCESSED;
    public static WIN32_ERROR DNS_ERROR_CLIENT_SUBNET_DOES_NOT_EXIST;
    public static WIN32_ERROR DNS_ERROR_CLIENT_SUBNET_ALREADY_EXISTS;
    public static WIN32_ERROR DNS_ERROR_SUBNET_DOES_NOT_EXIST;
    public static WIN32_ERROR DNS_ERROR_SUBNET_ALREADY_EXISTS;
    public static WIN32_ERROR DNS_ERROR_POLICY_LOCKED;
    public static WIN32_ERROR DNS_ERROR_POLICY_INVALID_WEIGHT;
    public static WIN32_ERROR DNS_ERROR_POLICY_INVALID_NAME;
    public static WIN32_ERROR DNS_ERROR_POLICY_MISSING_CRITERIA;
    public static WIN32_ERROR DNS_ERROR_INVALID_CLIENT_SUBNET_NAME;
    public static WIN32_ERROR DNS_ERROR_POLICY_PROCESSING_ORDER_INVALID;
    public static WIN32_ERROR DNS_ERROR_POLICY_SCOPE_MISSING;
    public static WIN32_ERROR DNS_ERROR_POLICY_SCOPE_NOT_ALLOWED;
    public static WIN32_ERROR DNS_ERROR_SERVERSCOPE_IS_REFERENCED;
    public static WIN32_ERROR DNS_ERROR_ZONESCOPE_IS_REFERENCED;
    public static WIN32_ERROR DNS_ERROR_POLICY_INVALID_CRITERIA_CLIENT_SUBNET;
    public static WIN32_ERROR DNS_ERROR_POLICY_INVALID_CRITERIA_TRANSPORT_PROTOCOL;
    public static WIN32_ERROR DNS_ERROR_POLICY_INVALID_CRITERIA_NETWORK_PROTOCOL;
    public static WIN32_ERROR DNS_ERROR_POLICY_INVALID_CRITERIA_INTERFACE;
    public static WIN32_ERROR DNS_ERROR_POLICY_INVALID_CRITERIA_FQDN;
    public static WIN32_ERROR DNS_ERROR_POLICY_INVALID_CRITERIA_QUERY_TYPE;
    public static WIN32_ERROR DNS_ERROR_POLICY_INVALID_CRITERIA_TIME_OF_DAY;
    public static WIN32_ERROR ERROR_IPSEC_QM_POLICY_EXISTS;
    public static WIN32_ERROR ERROR_IPSEC_QM_POLICY_NOT_FOUND;
    public static WIN32_ERROR ERROR_IPSEC_QM_POLICY_IN_USE;
    public static WIN32_ERROR ERROR_IPSEC_MM_POLICY_EXISTS;
    public static WIN32_ERROR ERROR_IPSEC_MM_POLICY_NOT_FOUND;
    public static WIN32_ERROR ERROR_IPSEC_MM_POLICY_IN_USE;
    public static WIN32_ERROR ERROR_IPSEC_MM_FILTER_EXISTS;
    public static WIN32_ERROR ERROR_IPSEC_MM_FILTER_NOT_FOUND;
    public static WIN32_ERROR ERROR_IPSEC_TRANSPORT_FILTER_EXISTS;
    public static WIN32_ERROR ERROR_IPSEC_TRANSPORT_FILTER_NOT_FOUND;
    public static WIN32_ERROR ERROR_IPSEC_MM_AUTH_EXISTS;
    public static WIN32_ERROR ERROR_IPSEC_MM_AUTH_NOT_FOUND;
    public static WIN32_ERROR ERROR_IPSEC_MM_AUTH_IN_USE;
    public static WIN32_ERROR ERROR_IPSEC_DEFAULT_MM_POLICY_NOT_FOUND;
    public static WIN32_ERROR ERROR_IPSEC_DEFAULT_MM_AUTH_NOT_FOUND;
    public static WIN32_ERROR ERROR_IPSEC_DEFAULT_QM_POLICY_NOT_FOUND;
    public static WIN32_ERROR ERROR_IPSEC_TUNNEL_FILTER_EXISTS;
    public static WIN32_ERROR ERROR_IPSEC_TUNNEL_FILTER_NOT_FOUND;
    public static WIN32_ERROR ERROR_IPSEC_MM_FILTER_PENDING_DELETION;
    public static WIN32_ERROR ERROR_IPSEC_TRANSPORT_FILTER_PENDING_DELETION;
    public static WIN32_ERROR ERROR_IPSEC_TUNNEL_FILTER_PENDING_DELETION;
    public static WIN32_ERROR ERROR_IPSEC_MM_POLICY_PENDING_DELETION;
    public static WIN32_ERROR ERROR_IPSEC_MM_AUTH_PENDING_DELETION;
    public static WIN32_ERROR ERROR_IPSEC_QM_POLICY_PENDING_DELETION;
    public static WIN32_ERROR ERROR_IPSEC_IKE_NEG_STATUS_BEGIN;
    public static WIN32_ERROR ERROR_IPSEC_IKE_AUTH_FAIL;
    public static WIN32_ERROR ERROR_IPSEC_IKE_ATTRIB_FAIL;
    public static WIN32_ERROR ERROR_IPSEC_IKE_NEGOTIATION_PENDING;
    public static WIN32_ERROR ERROR_IPSEC_IKE_GENERAL_PROCESSING_ERROR;
    public static WIN32_ERROR ERROR_IPSEC_IKE_TIMED_OUT;
    public static WIN32_ERROR ERROR_IPSEC_IKE_NO_CERT;
    public static WIN32_ERROR ERROR_IPSEC_IKE_SA_DELETED;
    public static WIN32_ERROR ERROR_IPSEC_IKE_SA_REAPED;
    public static WIN32_ERROR ERROR_IPSEC_IKE_MM_ACQUIRE_DROP;
    public static WIN32_ERROR ERROR_IPSEC_IKE_QM_ACQUIRE_DROP;
    public static WIN32_ERROR ERROR_IPSEC_IKE_QUEUE_DROP_MM;
    public static WIN32_ERROR ERROR_IPSEC_IKE_QUEUE_DROP_NO_MM;
    public static WIN32_ERROR ERROR_IPSEC_IKE_DROP_NO_RESPONSE;
    public static WIN32_ERROR ERROR_IPSEC_IKE_MM_DELAY_DROP;
    public static WIN32_ERROR ERROR_IPSEC_IKE_QM_DELAY_DROP;
    public static WIN32_ERROR ERROR_IPSEC_IKE_ERROR;
    public static WIN32_ERROR ERROR_IPSEC_IKE_CRL_FAILED;
    public static WIN32_ERROR ERROR_IPSEC_IKE_INVALID_KEY_USAGE;
    public static WIN32_ERROR ERROR_IPSEC_IKE_INVALID_CERT_TYPE;
    public static WIN32_ERROR ERROR_IPSEC_IKE_NO_PRIVATE_KEY;
    public static WIN32_ERROR ERROR_IPSEC_IKE_SIMULTANEOUS_REKEY;
    public static WIN32_ERROR ERROR_IPSEC_IKE_DH_FAIL;
    public static WIN32_ERROR ERROR_IPSEC_IKE_CRITICAL_PAYLOAD_NOT_RECOGNIZED;
    public static WIN32_ERROR ERROR_IPSEC_IKE_INVALID_HEADER;
    public static WIN32_ERROR ERROR_IPSEC_IKE_NO_POLICY;
    public static WIN32_ERROR ERROR_IPSEC_IKE_INVALID_SIGNATURE;
    public static WIN32_ERROR ERROR_IPSEC_IKE_KERBEROS_ERROR;
    public static WIN32_ERROR ERROR_IPSEC_IKE_NO_PUBLIC_KEY;
    public static WIN32_ERROR ERROR_IPSEC_IKE_PROCESS_ERR;
    public static WIN32_ERROR ERROR_IPSEC_IKE_PROCESS_ERR_SA;
    public static WIN32_ERROR ERROR_IPSEC_IKE_PROCESS_ERR_PROP;
    public static WIN32_ERROR ERROR_IPSEC_IKE_PROCESS_ERR_TRANS;
    public static WIN32_ERROR ERROR_IPSEC_IKE_PROCESS_ERR_KE;
    public static WIN32_ERROR ERROR_IPSEC_IKE_PROCESS_ERR_ID;
    public static WIN32_ERROR ERROR_IPSEC_IKE_PROCESS_ERR_CERT;
    public static WIN32_ERROR ERROR_IPSEC_IKE_PROCESS_ERR_CERT_REQ;
    public static WIN32_ERROR ERROR_IPSEC_IKE_PROCESS_ERR_HASH;
    public static WIN32_ERROR ERROR_IPSEC_IKE_PROCESS_ERR_SIG;
    public static WIN32_ERROR ERROR_IPSEC_IKE_PROCESS_ERR_NONCE;
    public static WIN32_ERROR ERROR_IPSEC_IKE_PROCESS_ERR_NOTIFY;
    public static WIN32_ERROR ERROR_IPSEC_IKE_PROCESS_ERR_DELETE;
    public static WIN32_ERROR ERROR_IPSEC_IKE_PROCESS_ERR_VENDOR;
    public static WIN32_ERROR ERROR_IPSEC_IKE_INVALID_PAYLOAD;
    public static WIN32_ERROR ERROR_IPSEC_IKE_LOAD_SOFT_SA;
    public static WIN32_ERROR ERROR_IPSEC_IKE_SOFT_SA_TORN_DOWN;
    public static WIN32_ERROR ERROR_IPSEC_IKE_INVALID_COOKIE;
    public static WIN32_ERROR ERROR_IPSEC_IKE_NO_PEER_CERT;
    public static WIN32_ERROR ERROR_IPSEC_IKE_PEER_CRL_FAILED;
    public static WIN32_ERROR ERROR_IPSEC_IKE_POLICY_CHANGE;
    public static WIN32_ERROR ERROR_IPSEC_IKE_NO_MM_POLICY;
    public static WIN32_ERROR ERROR_IPSEC_IKE_NOTCBPRIV;
    public static WIN32_ERROR ERROR_IPSEC_IKE_SECLOADFAIL;
    public static WIN32_ERROR ERROR_IPSEC_IKE_FAILSSPINIT;
    public static WIN32_ERROR ERROR_IPSEC_IKE_FAILQUERYSSP;
    public static WIN32_ERROR ERROR_IPSEC_IKE_SRVACQFAIL;
    public static WIN32_ERROR ERROR_IPSEC_IKE_SRVQUERYCRED;
    public static WIN32_ERROR ERROR_IPSEC_IKE_GETSPIFAIL;
    public static WIN32_ERROR ERROR_IPSEC_IKE_INVALID_FILTER;
    public static WIN32_ERROR ERROR_IPSEC_IKE_OUT_OF_MEMORY;
    public static WIN32_ERROR ERROR_IPSEC_IKE_ADD_UPDATE_KEY_FAILED;
    public static WIN32_ERROR ERROR_IPSEC_IKE_INVALID_POLICY;
    public static WIN32_ERROR ERROR_IPSEC_IKE_UNKNOWN_DOI;
    public static WIN32_ERROR ERROR_IPSEC_IKE_INVALID_SITUATION;
    public static WIN32_ERROR ERROR_IPSEC_IKE_DH_FAILURE;
    public static WIN32_ERROR ERROR_IPSEC_IKE_INVALID_GROUP;
    public static WIN32_ERROR ERROR_IPSEC_IKE_ENCRYPT;
    public static WIN32_ERROR ERROR_IPSEC_IKE_DECRYPT;
    public static WIN32_ERROR ERROR_IPSEC_IKE_POLICY_MATCH;
    public static WIN32_ERROR ERROR_IPSEC_IKE_UNSUPPORTED_ID;
    public static WIN32_ERROR ERROR_IPSEC_IKE_INVALID_HASH;
    public static WIN32_ERROR ERROR_IPSEC_IKE_INVALID_HASH_ALG;
    public static WIN32_ERROR ERROR_IPSEC_IKE_INVALID_HASH_SIZE;
    public static WIN32_ERROR ERROR_IPSEC_IKE_INVALID_ENCRYPT_ALG;
    public static WIN32_ERROR ERROR_IPSEC_IKE_INVALID_AUTH_ALG;
    public static WIN32_ERROR ERROR_IPSEC_IKE_INVALID_SIG;
    public static WIN32_ERROR ERROR_IPSEC_IKE_LOAD_FAILED;
    public static WIN32_ERROR ERROR_IPSEC_IKE_RPC_DELETE;
    public static WIN32_ERROR ERROR_IPSEC_IKE_BENIGN_REINIT;
    public static WIN32_ERROR ERROR_IPSEC_IKE_INVALID_RESPONDER_LIFETIME_NOTIFY;
    public static WIN32_ERROR ERROR_IPSEC_IKE_INVALID_MAJOR_VERSION;
    public static WIN32_ERROR ERROR_IPSEC_IKE_INVALID_CERT_KEYLEN;
    public static WIN32_ERROR ERROR_IPSEC_IKE_MM_LIMIT;
    public static WIN32_ERROR ERROR_IPSEC_IKE_NEGOTIATION_DISABLED;
    public static WIN32_ERROR ERROR_IPSEC_IKE_QM_LIMIT;
    public static WIN32_ERROR ERROR_IPSEC_IKE_MM_EXPIRED;
    public static WIN32_ERROR ERROR_IPSEC_IKE_PEER_MM_ASSUMED_INVALID;
    public static WIN32_ERROR ERROR_IPSEC_IKE_CERT_CHAIN_POLICY_MISMATCH;
    public static WIN32_ERROR ERROR_IPSEC_IKE_UNEXPECTED_MESSAGE_ID;
    public static WIN32_ERROR ERROR_IPSEC_IKE_INVALID_AUTH_PAYLOAD;
    public static WIN32_ERROR ERROR_IPSEC_IKE_DOS_COOKIE_SENT;
    public static WIN32_ERROR ERROR_IPSEC_IKE_SHUTTING_DOWN;
    public static WIN32_ERROR ERROR_IPSEC_IKE_CGA_AUTH_FAILED;
    public static WIN32_ERROR ERROR_IPSEC_IKE_PROCESS_ERR_NATOA;
    public static WIN32_ERROR ERROR_IPSEC_IKE_INVALID_MM_FOR_QM;
    public static WIN32_ERROR ERROR_IPSEC_IKE_QM_EXPIRED;
    public static WIN32_ERROR ERROR_IPSEC_IKE_TOO_MANY_FILTERS;
    public static WIN32_ERROR ERROR_IPSEC_IKE_NEG_STATUS_END;
    public static WIN32_ERROR ERROR_IPSEC_IKE_KILL_DUMMY_NAP_TUNNEL;
    public static WIN32_ERROR ERROR_IPSEC_IKE_INNER_IP_ASSIGNMENT_FAILURE;
    public static WIN32_ERROR ERROR_IPSEC_IKE_REQUIRE_CP_PAYLOAD_MISSING;
    public static WIN32_ERROR ERROR_IPSEC_KEY_MODULE_IMPERSONATION_NEGOTIATION_PENDING;
    public static WIN32_ERROR ERROR_IPSEC_IKE_COEXISTENCE_SUPPRESS;
    public static WIN32_ERROR ERROR_IPSEC_IKE_RATELIMIT_DROP;
    public static WIN32_ERROR ERROR_IPSEC_IKE_PEER_DOESNT_SUPPORT_MOBIKE;
    public static WIN32_ERROR ERROR_IPSEC_IKE_AUTHORIZATION_FAILURE;
    public static WIN32_ERROR ERROR_IPSEC_IKE_STRONG_CRED_AUTHORIZATION_FAILURE;
    public static WIN32_ERROR ERROR_IPSEC_IKE_AUTHORIZATION_FAILURE_WITH_OPTIONAL_RETRY;
    public static WIN32_ERROR ERROR_IPSEC_IKE_STRONG_CRED_AUTHORIZATION_AND_CERTMAP_FAILURE;
    public static WIN32_ERROR ERROR_IPSEC_IKE_NEG_STATUS_EXTENDED_END;
    public static WIN32_ERROR ERROR_IPSEC_BAD_SPI;
    public static WIN32_ERROR ERROR_IPSEC_SA_LIFETIME_EXPIRED;
    public static WIN32_ERROR ERROR_IPSEC_WRONG_SA;
    public static WIN32_ERROR ERROR_IPSEC_REPLAY_CHECK_FAILED;
    public static WIN32_ERROR ERROR_IPSEC_INVALID_PACKET;
    public static WIN32_ERROR ERROR_IPSEC_INTEGRITY_CHECK_FAILED;
    public static WIN32_ERROR ERROR_IPSEC_CLEAR_TEXT_DROP;
    public static WIN32_ERROR ERROR_IPSEC_AUTH_FIREWALL_DROP;
    public static WIN32_ERROR ERROR_IPSEC_THROTTLE_DROP;
    public static WIN32_ERROR ERROR_IPSEC_DOSP_BLOCK;
    public static WIN32_ERROR ERROR_IPSEC_DOSP_RECEIVED_MULTICAST;
    public static WIN32_ERROR ERROR_IPSEC_DOSP_INVALID_PACKET;
    public static WIN32_ERROR ERROR_IPSEC_DOSP_STATE_LOOKUP_FAILED;
    public static WIN32_ERROR ERROR_IPSEC_DOSP_MAX_ENTRIES;
    public static WIN32_ERROR ERROR_IPSEC_DOSP_KEYMOD_NOT_ALLOWED;
    public static WIN32_ERROR ERROR_IPSEC_DOSP_NOT_INSTALLED;
    public static WIN32_ERROR ERROR_IPSEC_DOSP_MAX_PER_IP_RATELIMIT_QUEUES;
    public static WIN32_ERROR ERROR_SXS_SECTION_NOT_FOUND;
    public static WIN32_ERROR ERROR_SXS_CANT_GEN_ACTCTX;
    public static WIN32_ERROR ERROR_SXS_INVALID_ACTCTXDATA_FORMAT;
    public static WIN32_ERROR ERROR_SXS_ASSEMBLY_NOT_FOUND;
    public static WIN32_ERROR ERROR_SXS_MANIFEST_FORMAT_ERROR;
    public static WIN32_ERROR ERROR_SXS_MANIFEST_PARSE_ERROR;
    public static WIN32_ERROR ERROR_SXS_ACTIVATION_CONTEXT_DISABLED;
    public static WIN32_ERROR ERROR_SXS_KEY_NOT_FOUND;
    public static WIN32_ERROR ERROR_SXS_VERSION_CONFLICT;
    public static WIN32_ERROR ERROR_SXS_WRONG_SECTION_TYPE;
    public static WIN32_ERROR ERROR_SXS_THREAD_QUERIES_DISABLED;
    public static WIN32_ERROR ERROR_SXS_PROCESS_DEFAULT_ALREADY_SET;
    public static WIN32_ERROR ERROR_SXS_UNKNOWN_ENCODING_GROUP;
    public static WIN32_ERROR ERROR_SXS_UNKNOWN_ENCODING;
    public static WIN32_ERROR ERROR_SXS_INVALID_XML_NAMESPACE_URI;
    public static WIN32_ERROR ERROR_SXS_ROOT_MANIFEST_DEPENDENCY_NOT_INSTALLED;
    public static WIN32_ERROR ERROR_SXS_LEAF_MANIFEST_DEPENDENCY_NOT_INSTALLED;
    public static WIN32_ERROR ERROR_SXS_INVALID_ASSEMBLY_IDENTITY_ATTRIBUTE;
    public static WIN32_ERROR ERROR_SXS_MANIFEST_MISSING_REQUIRED_DEFAULT_NAMESPACE;
    public static WIN32_ERROR ERROR_SXS_MANIFEST_INVALID_REQUIRED_DEFAULT_NAMESPACE;
    public static WIN32_ERROR ERROR_SXS_PRIVATE_MANIFEST_CROSS_PATH_WITH_REPARSE_POINT;
    public static WIN32_ERROR ERROR_SXS_DUPLICATE_DLL_NAME;
    public static WIN32_ERROR ERROR_SXS_DUPLICATE_WINDOWCLASS_NAME;
    public static WIN32_ERROR ERROR_SXS_DUPLICATE_CLSID;
    public static WIN32_ERROR ERROR_SXS_DUPLICATE_IID;
    public static WIN32_ERROR ERROR_SXS_DUPLICATE_TLBID;
    public static WIN32_ERROR ERROR_SXS_DUPLICATE_PROGID;
    public static WIN32_ERROR ERROR_SXS_DUPLICATE_ASSEMBLY_NAME;
    public static WIN32_ERROR ERROR_SXS_FILE_HASH_MISMATCH;
    public static WIN32_ERROR ERROR_SXS_POLICY_PARSE_ERROR;
    public static WIN32_ERROR ERROR_SXS_XML_E_MISSINGQUOTE;
    public static WIN32_ERROR ERROR_SXS_XML_E_COMMENTSYNTAX;
    public static WIN32_ERROR ERROR_SXS_XML_E_BADSTARTNAMECHAR;
    public static WIN32_ERROR ERROR_SXS_XML_E_BADNAMECHAR;
    public static WIN32_ERROR ERROR_SXS_XML_E_BADCHARINSTRING;
    public static WIN32_ERROR ERROR_SXS_XML_E_XMLDECLSYNTAX;
    public static WIN32_ERROR ERROR_SXS_XML_E_BADCHARDATA;
    public static WIN32_ERROR ERROR_SXS_XML_E_MISSINGWHITESPACE;
    public static WIN32_ERROR ERROR_SXS_XML_E_EXPECTINGTAGEND;
    public static WIN32_ERROR ERROR_SXS_XML_E_MISSINGSEMICOLON;
    public static WIN32_ERROR ERROR_SXS_XML_E_UNBALANCEDPAREN;
    public static WIN32_ERROR ERROR_SXS_XML_E_INTERNALERROR;
    public static WIN32_ERROR ERROR_SXS_XML_E_UNEXPECTED_WHITESPACE;
    public static WIN32_ERROR ERROR_SXS_XML_E_INCOMPLETE_ENCODING;
    public static WIN32_ERROR ERROR_SXS_XML_E_MISSING_PAREN;
    public static WIN32_ERROR ERROR_SXS_XML_E_EXPECTINGCLOSEQUOTE;
    public static WIN32_ERROR ERROR_SXS_XML_E_MULTIPLE_COLONS;
    public static WIN32_ERROR ERROR_SXS_XML_E_INVALID_DECIMAL;
    public static WIN32_ERROR ERROR_SXS_XML_E_INVALID_HEXIDECIMAL;
    public static WIN32_ERROR ERROR_SXS_XML_E_INVALID_UNICODE;
    public static WIN32_ERROR ERROR_SXS_XML_E_WHITESPACEORQUESTIONMARK;
    public static WIN32_ERROR ERROR_SXS_XML_E_UNEXPECTEDENDTAG;
    public static WIN32_ERROR ERROR_SXS_XML_E_UNCLOSEDTAG;
    public static WIN32_ERROR ERROR_SXS_XML_E_DUPLICATEATTRIBUTE;
    public static WIN32_ERROR ERROR_SXS_XML_E_MULTIPLEROOTS;
    public static WIN32_ERROR ERROR_SXS_XML_E_INVALIDATROOTLEVEL;
    public static WIN32_ERROR ERROR_SXS_XML_E_BADXMLDECL;
    public static WIN32_ERROR ERROR_SXS_XML_E_MISSINGROOT;
    public static WIN32_ERROR ERROR_SXS_XML_E_UNEXPECTEDEOF;
    public static WIN32_ERROR ERROR_SXS_XML_E_BADPEREFINSUBSET;
    public static WIN32_ERROR ERROR_SXS_XML_E_UNCLOSEDSTARTTAG;
    public static WIN32_ERROR ERROR_SXS_XML_E_UNCLOSEDENDTAG;
    public static WIN32_ERROR ERROR_SXS_XML_E_UNCLOSEDSTRING;
    public static WIN32_ERROR ERROR_SXS_XML_E_UNCLOSEDCOMMENT;
    public static WIN32_ERROR ERROR_SXS_XML_E_UNCLOSEDDECL;
    public static WIN32_ERROR ERROR_SXS_XML_E_UNCLOSEDCDATA;
    public static WIN32_ERROR ERROR_SXS_XML_E_RESERVEDNAMESPACE;
    public static WIN32_ERROR ERROR_SXS_XML_E_INVALIDENCODING;
    public static WIN32_ERROR ERROR_SXS_XML_E_INVALIDSWITCH;
    public static WIN32_ERROR ERROR_SXS_XML_E_BADXMLCASE;
    public static WIN32_ERROR ERROR_SXS_XML_E_INVALID_STANDALONE;
    public static WIN32_ERROR ERROR_SXS_XML_E_UNEXPECTED_STANDALONE;
    public static WIN32_ERROR ERROR_SXS_XML_E_INVALID_VERSION;
    public static WIN32_ERROR ERROR_SXS_XML_E_MISSINGEQUALS;
    public static WIN32_ERROR ERROR_SXS_PROTECTION_RECOVERY_FAILED;
    public static WIN32_ERROR ERROR_SXS_PROTECTION_PUBLIC_KEY_TOO_SHORT;
    public static WIN32_ERROR ERROR_SXS_PROTECTION_CATALOG_NOT_VALID;
    public static WIN32_ERROR ERROR_SXS_UNTRANSLATABLE_HRESULT;
    public static WIN32_ERROR ERROR_SXS_PROTECTION_CATALOG_FILE_MISSING;
    public static WIN32_ERROR ERROR_SXS_MISSING_ASSEMBLY_IDENTITY_ATTRIBUTE;
    public static WIN32_ERROR ERROR_SXS_INVALID_ASSEMBLY_IDENTITY_ATTRIBUTE_NAME;
    public static WIN32_ERROR ERROR_SXS_ASSEMBLY_MISSING;
    public static WIN32_ERROR ERROR_SXS_CORRUPT_ACTIVATION_STACK;
    public static WIN32_ERROR ERROR_SXS_CORRUPTION;
    public static WIN32_ERROR ERROR_SXS_EARLY_DEACTIVATION;
    public static WIN32_ERROR ERROR_SXS_INVALID_DEACTIVATION;
    public static WIN32_ERROR ERROR_SXS_MULTIPLE_DEACTIVATION;
    public static WIN32_ERROR ERROR_SXS_PROCESS_TERMINATION_REQUESTED;
    public static WIN32_ERROR ERROR_SXS_RELEASE_ACTIVATION_CONTEXT;
    public static WIN32_ERROR ERROR_SXS_SYSTEM_DEFAULT_ACTIVATION_CONTEXT_EMPTY;
    public static WIN32_ERROR ERROR_SXS_INVALID_IDENTITY_ATTRIBUTE_VALUE;
    public static WIN32_ERROR ERROR_SXS_INVALID_IDENTITY_ATTRIBUTE_NAME;
    public static WIN32_ERROR ERROR_SXS_IDENTITY_DUPLICATE_ATTRIBUTE;
    public static WIN32_ERROR ERROR_SXS_IDENTITY_PARSE_ERROR;
    public static WIN32_ERROR ERROR_MALFORMED_SUBSTITUTION_STRING;
    public static WIN32_ERROR ERROR_SXS_INCORRECT_PUBLIC_KEY_TOKEN;
    public static WIN32_ERROR ERROR_UNMAPPED_SUBSTITUTION_STRING;
    public static WIN32_ERROR ERROR_SXS_ASSEMBLY_NOT_LOCKED;
    public static WIN32_ERROR ERROR_SXS_COMPONENT_STORE_CORRUPT;
    public static WIN32_ERROR ERROR_ADVANCED_INSTALLER_FAILED;
    public static WIN32_ERROR ERROR_XML_ENCODING_MISMATCH;
    public static WIN32_ERROR ERROR_SXS_MANIFEST_IDENTITY_SAME_BUT_CONTENTS_DIFFERENT;
    public static WIN32_ERROR ERROR_SXS_IDENTITIES_DIFFERENT;
    public static WIN32_ERROR ERROR_SXS_ASSEMBLY_IS_NOT_A_DEPLOYMENT;
    public static WIN32_ERROR ERROR_SXS_FILE_NOT_PART_OF_ASSEMBLY;
    public static WIN32_ERROR ERROR_SXS_MANIFEST_TOO_BIG;
    public static WIN32_ERROR ERROR_SXS_SETTING_NOT_REGISTERED;
    public static WIN32_ERROR ERROR_SXS_TRANSACTION_CLOSURE_INCOMPLETE;
    public static WIN32_ERROR ERROR_SMI_PRIMITIVE_INSTALLER_FAILED;
    public static WIN32_ERROR ERROR_GENERIC_COMMAND_FAILED;
    public static WIN32_ERROR ERROR_SXS_FILE_HASH_MISSING;
    public static WIN32_ERROR ERROR_SXS_DUPLICATE_ACTIVATABLE_CLASS;
    public static WIN32_ERROR ERROR_EVT_INVALID_CHANNEL_PATH;
    public static WIN32_ERROR ERROR_EVT_INVALID_QUERY;
    public static WIN32_ERROR ERROR_EVT_PUBLISHER_METADATA_NOT_FOUND;
    public static WIN32_ERROR ERROR_EVT_EVENT_TEMPLATE_NOT_FOUND;
    public static WIN32_ERROR ERROR_EVT_INVALID_PUBLISHER_NAME;
    public static WIN32_ERROR ERROR_EVT_INVALID_EVENT_DATA;
    public static WIN32_ERROR ERROR_EVT_CHANNEL_NOT_FOUND;
    public static WIN32_ERROR ERROR_EVT_MALFORMED_XML_TEXT;
    public static WIN32_ERROR ERROR_EVT_SUBSCRIPTION_TO_DIRECT_CHANNEL;
    public static WIN32_ERROR ERROR_EVT_CONFIGURATION_ERROR;
    public static WIN32_ERROR ERROR_EVT_QUERY_RESULT_STALE;
    public static WIN32_ERROR ERROR_EVT_QUERY_RESULT_INVALID_POSITION;
    public static WIN32_ERROR ERROR_EVT_NON_VALIDATING_MSXML;
    public static WIN32_ERROR ERROR_EVT_FILTER_ALREADYSCOPED;
    public static WIN32_ERROR ERROR_EVT_FILTER_NOTELTSET;
    public static WIN32_ERROR ERROR_EVT_FILTER_INVARG;
    public static WIN32_ERROR ERROR_EVT_FILTER_INVTEST;
    public static WIN32_ERROR ERROR_EVT_FILTER_INVTYPE;
    public static WIN32_ERROR ERROR_EVT_FILTER_PARSEERR;
    public static WIN32_ERROR ERROR_EVT_FILTER_UNSUPPORTEDOP;
    public static WIN32_ERROR ERROR_EVT_FILTER_UNEXPECTEDTOKEN;
    public static WIN32_ERROR ERROR_EVT_INVALID_OPERATION_OVER_ENABLED_DIRECT_CHANNEL;
    public static WIN32_ERROR ERROR_EVT_INVALID_CHANNEL_PROPERTY_VALUE;
    public static WIN32_ERROR ERROR_EVT_INVALID_PUBLISHER_PROPERTY_VALUE;
    public static WIN32_ERROR ERROR_EVT_CHANNEL_CANNOT_ACTIVATE;
    public static WIN32_ERROR ERROR_EVT_FILTER_TOO_COMPLEX;
    public static WIN32_ERROR ERROR_EVT_MESSAGE_NOT_FOUND;
    public static WIN32_ERROR ERROR_EVT_MESSAGE_ID_NOT_FOUND;
    public static WIN32_ERROR ERROR_EVT_UNRESOLVED_VALUE_INSERT;
    public static WIN32_ERROR ERROR_EVT_UNRESOLVED_PARAMETER_INSERT;
    public static WIN32_ERROR ERROR_EVT_MAX_INSERTS_REACHED;
    public static WIN32_ERROR ERROR_EVT_EVENT_DEFINITION_NOT_FOUND;
    public static WIN32_ERROR ERROR_EVT_MESSAGE_LOCALE_NOT_FOUND;
    public static WIN32_ERROR ERROR_EVT_VERSION_TOO_OLD;
    public static WIN32_ERROR ERROR_EVT_VERSION_TOO_NEW;
    public static WIN32_ERROR ERROR_EVT_CANNOT_OPEN_CHANNEL_OF_QUERY;
    public static WIN32_ERROR ERROR_EVT_PUBLISHER_DISABLED;
    public static WIN32_ERROR ERROR_EVT_FILTER_OUT_OF_RANGE;
    public static WIN32_ERROR ERROR_EC_SUBSCRIPTION_CANNOT_ACTIVATE;
    public static WIN32_ERROR ERROR_EC_LOG_DISABLED;
    public static WIN32_ERROR ERROR_EC_CIRCULAR_FORWARDING;
    public static WIN32_ERROR ERROR_EC_CREDSTORE_FULL;
    public static WIN32_ERROR ERROR_EC_CRED_NOT_FOUND;
    public static WIN32_ERROR ERROR_EC_NO_ACTIVE_CHANNEL;
    public static WIN32_ERROR ERROR_MUI_FILE_NOT_FOUND;
    public static WIN32_ERROR ERROR_MUI_INVALID_FILE;
    public static WIN32_ERROR ERROR_MUI_INVALID_RC_CONFIG;
    public static WIN32_ERROR ERROR_MUI_INVALID_LOCALE_NAME;
    public static WIN32_ERROR ERROR_MUI_INVALID_ULTIMATEFALLBACK_NAME;
    public static WIN32_ERROR ERROR_MUI_FILE_NOT_LOADED;
    public static WIN32_ERROR ERROR_RESOURCE_ENUM_USER_STOP;
    public static WIN32_ERROR ERROR_MUI_INTLSETTINGS_UILANG_NOT_INSTALLED;
    public static WIN32_ERROR ERROR_MUI_INTLSETTINGS_INVALID_LOCALE_NAME;
    public static WIN32_ERROR ERROR_MRM_RUNTIME_NO_DEFAULT_OR_NEUTRAL_RESOURCE;
    public static WIN32_ERROR ERROR_MRM_INVALID_PRICONFIG;
    public static WIN32_ERROR ERROR_MRM_INVALID_FILE_TYPE;
    public static WIN32_ERROR ERROR_MRM_UNKNOWN_QUALIFIER;
    public static WIN32_ERROR ERROR_MRM_INVALID_QUALIFIER_VALUE;
    public static WIN32_ERROR ERROR_MRM_NO_CANDIDATE;
    public static WIN32_ERROR ERROR_MRM_NO_MATCH_OR_DEFAULT_CANDIDATE;
    public static WIN32_ERROR ERROR_MRM_RESOURCE_TYPE_MISMATCH;
    public static WIN32_ERROR ERROR_MRM_DUPLICATE_MAP_NAME;
    public static WIN32_ERROR ERROR_MRM_DUPLICATE_ENTRY;
    public static WIN32_ERROR ERROR_MRM_INVALID_RESOURCE_IDENTIFIER;
    public static WIN32_ERROR ERROR_MRM_FILEPATH_TOO_LONG;
    public static WIN32_ERROR ERROR_MRM_UNSUPPORTED_DIRECTORY_TYPE;
    public static WIN32_ERROR ERROR_MRM_INVALID_PRI_FILE;
    public static WIN32_ERROR ERROR_MRM_NAMED_RESOURCE_NOT_FOUND;
    public static WIN32_ERROR ERROR_MRM_MAP_NOT_FOUND;
    public static WIN32_ERROR ERROR_MRM_UNSUPPORTED_PROFILE_TYPE;
    public static WIN32_ERROR ERROR_MRM_INVALID_QUALIFIER_OPERATOR;
    public static WIN32_ERROR ERROR_MRM_INDETERMINATE_QUALIFIER_VALUE;
    public static WIN32_ERROR ERROR_MRM_AUTOMERGE_ENABLED;
    public static WIN32_ERROR ERROR_MRM_TOO_MANY_RESOURCES;
    public static WIN32_ERROR ERROR_MRM_UNSUPPORTED_FILE_TYPE_FOR_MERGE;
    public static WIN32_ERROR ERROR_MRM_UNSUPPORTED_FILE_TYPE_FOR_LOAD_UNLOAD_PRI_FILE;
    public static WIN32_ERROR ERROR_MRM_NO_CURRENT_VIEW_ON_THREAD;
    public static WIN32_ERROR ERROR_DIFFERENT_PROFILE_RESOURCE_MANAGER_EXIST;
    public static WIN32_ERROR ERROR_OPERATION_NOT_ALLOWED_FROM_SYSTEM_COMPONENT;
    public static WIN32_ERROR ERROR_MRM_DIRECT_REF_TO_NON_DEFAULT_RESOURCE;
    public static WIN32_ERROR ERROR_MRM_GENERATION_COUNT_MISMATCH;
    public static WIN32_ERROR ERROR_PRI_MERGE_VERSION_MISMATCH;
    public static WIN32_ERROR ERROR_PRI_MERGE_MISSING_SCHEMA;
    public static WIN32_ERROR ERROR_PRI_MERGE_LOAD_FILE_FAILED;
    public static WIN32_ERROR ERROR_PRI_MERGE_ADD_FILE_FAILED;
    public static WIN32_ERROR ERROR_PRI_MERGE_WRITE_FILE_FAILED;
    public static WIN32_ERROR ERROR_PRI_MERGE_MULTIPLE_PACKAGE_FAMILIES_NOT_ALLOWED;
    public static WIN32_ERROR ERROR_PRI_MERGE_MULTIPLE_MAIN_PACKAGES_NOT_ALLOWED;
    public static WIN32_ERROR ERROR_PRI_MERGE_BUNDLE_PACKAGES_NOT_ALLOWED;
    public static WIN32_ERROR ERROR_PRI_MERGE_MAIN_PACKAGE_REQUIRED;
    public static WIN32_ERROR ERROR_PRI_MERGE_RESOURCE_PACKAGE_REQUIRED;
    public static WIN32_ERROR ERROR_PRI_MERGE_INVALID_FILE_NAME;
    public static WIN32_ERROR ERROR_MRM_PACKAGE_NOT_FOUND;
    public static WIN32_ERROR ERROR_MRM_MISSING_DEFAULT_LANGUAGE;
    public static WIN32_ERROR ERROR_MRM_SCOPE_ITEM_CONFLICT;
    public static WIN32_ERROR ERROR_MCA_INVALID_CAPABILITIES_STRING;
    public static WIN32_ERROR ERROR_MCA_INVALID_VCP_VERSION;
    public static WIN32_ERROR ERROR_MCA_MONITOR_VIOLATES_MCCS_SPECIFICATION;
    public static WIN32_ERROR ERROR_MCA_MCCS_VERSION_MISMATCH;
    public static WIN32_ERROR ERROR_MCA_UNSUPPORTED_MCCS_VERSION;
    public static WIN32_ERROR ERROR_MCA_INTERNAL_ERROR;
    public static WIN32_ERROR ERROR_MCA_INVALID_TECHNOLOGY_TYPE_RETURNED;
    public static WIN32_ERROR ERROR_MCA_UNSUPPORTED_COLOR_TEMPERATURE;
    public static WIN32_ERROR ERROR_AMBIGUOUS_SYSTEM_DEVICE;
    public static WIN32_ERROR ERROR_SYSTEM_DEVICE_NOT_FOUND;
    public static WIN32_ERROR ERROR_HASH_NOT_SUPPORTED;
    public static WIN32_ERROR ERROR_HASH_NOT_PRESENT;
    public static WIN32_ERROR ERROR_SECONDARY_IC_PROVIDER_NOT_REGISTERED;
    public static WIN32_ERROR ERROR_GPIO_CLIENT_INFORMATION_INVALID;
    public static WIN32_ERROR ERROR_GPIO_VERSION_NOT_SUPPORTED;
    public static WIN32_ERROR ERROR_GPIO_INVALID_REGISTRATION_PACKET;
    public static WIN32_ERROR ERROR_GPIO_OPERATION_DENIED;
    public static WIN32_ERROR ERROR_GPIO_INCOMPATIBLE_CONNECT_MODE;
    public static WIN32_ERROR ERROR_GPIO_INTERRUPT_ALREADY_UNMASKED;
    public static WIN32_ERROR ERROR_CANNOT_SWITCH_RUNLEVEL;
    public static WIN32_ERROR ERROR_INVALID_RUNLEVEL_SETTING;
    public static WIN32_ERROR ERROR_RUNLEVEL_SWITCH_TIMEOUT;
    public static WIN32_ERROR ERROR_RUNLEVEL_SWITCH_AGENT_TIMEOUT;
    public static WIN32_ERROR ERROR_RUNLEVEL_SWITCH_IN_PROGRESS;
    public static WIN32_ERROR ERROR_SERVICES_FAILED_AUTOSTART;
    public static WIN32_ERROR ERROR_COM_TASK_STOP_PENDING;
    public static WIN32_ERROR ERROR_INSTALL_OPEN_PACKAGE_FAILED;
    public static WIN32_ERROR ERROR_INSTALL_PACKAGE_NOT_FOUND;
    public static WIN32_ERROR ERROR_INSTALL_INVALID_PACKAGE;
    public static WIN32_ERROR ERROR_INSTALL_RESOLVE_DEPENDENCY_FAILED;
    public static WIN32_ERROR ERROR_INSTALL_OUT_OF_DISK_SPACE;
    public static WIN32_ERROR ERROR_INSTALL_NETWORK_FAILURE;
    public static WIN32_ERROR ERROR_INSTALL_REGISTRATION_FAILURE;
    public static WIN32_ERROR ERROR_INSTALL_DEREGISTRATION_FAILURE;
    public static WIN32_ERROR ERROR_INSTALL_CANCEL;
    public static WIN32_ERROR ERROR_INSTALL_FAILED;
    public static WIN32_ERROR ERROR_REMOVE_FAILED;
    public static WIN32_ERROR ERROR_PACKAGE_ALREADY_EXISTS;
    public static WIN32_ERROR ERROR_NEEDS_REMEDIATION;
    public static WIN32_ERROR ERROR_INSTALL_PREREQUISITE_FAILED;
    public static WIN32_ERROR ERROR_PACKAGE_REPOSITORY_CORRUPTED;
    public static WIN32_ERROR ERROR_INSTALL_POLICY_FAILURE;
    public static WIN32_ERROR ERROR_PACKAGE_UPDATING;
    public static WIN32_ERROR ERROR_DEPLOYMENT_BLOCKED_BY_POLICY;
    public static WIN32_ERROR ERROR_PACKAGES_IN_USE;
    public static WIN32_ERROR ERROR_RECOVERY_FILE_CORRUPT;
    public static WIN32_ERROR ERROR_INVALID_STAGED_SIGNATURE;
    public static WIN32_ERROR ERROR_DELETING_EXISTING_APPLICATIONDATA_STORE_FAILED;
    public static WIN32_ERROR ERROR_INSTALL_PACKAGE_DOWNGRADE;
    public static WIN32_ERROR ERROR_SYSTEM_NEEDS_REMEDIATION;
    public static WIN32_ERROR ERROR_APPX_INTEGRITY_FAILURE_CLR_NGEN;
    public static WIN32_ERROR ERROR_RESILIENCY_FILE_CORRUPT;
    public static WIN32_ERROR ERROR_INSTALL_FIREWALL_SERVICE_NOT_RUNNING;
    public static WIN32_ERROR ERROR_PACKAGE_MOVE_FAILED;
    public static WIN32_ERROR ERROR_INSTALL_VOLUME_NOT_EMPTY;
    public static WIN32_ERROR ERROR_INSTALL_VOLUME_OFFLINE;
    public static WIN32_ERROR ERROR_INSTALL_VOLUME_CORRUPT;
    public static WIN32_ERROR ERROR_NEEDS_REGISTRATION;
    public static WIN32_ERROR ERROR_INSTALL_WRONG_PROCESSOR_ARCHITECTURE;
    public static WIN32_ERROR ERROR_DEV_SIDELOAD_LIMIT_EXCEEDED;
    public static WIN32_ERROR ERROR_INSTALL_OPTIONAL_PACKAGE_REQUIRES_MAIN_PACKAGE;
    public static WIN32_ERROR ERROR_PACKAGE_NOT_SUPPORTED_ON_FILESYSTEM;
    public static WIN32_ERROR ERROR_PACKAGE_MOVE_BLOCKED_BY_STREAMING;
    public static WIN32_ERROR ERROR_INSTALL_OPTIONAL_PACKAGE_APPLICATIONID_NOT_UNIQUE;
    public static WIN32_ERROR ERROR_PACKAGE_STAGING_ONHOLD;
    public static WIN32_ERROR ERROR_INSTALL_INVALID_RELATED_SET_UPDATE;
    public static WIN32_ERROR ERROR_INSTALL_OPTIONAL_PACKAGE_REQUIRES_MAIN_PACKAGE_FULLTRUST_CAPABILITY;
    public static WIN32_ERROR ERROR_DEPLOYMENT_BLOCKED_BY_USER_LOG_OFF;
    public static WIN32_ERROR ERROR_PROVISION_OPTIONAL_PACKAGE_REQUIRES_MAIN_PACKAGE_PROVISIONED;
    public static WIN32_ERROR ERROR_PACKAGES_REPUTATION_CHECK_FAILED;
    public static WIN32_ERROR ERROR_PACKAGES_REPUTATION_CHECK_TIMEDOUT;
    public static WIN32_ERROR ERROR_DEPLOYMENT_OPTION_NOT_SUPPORTED;
    public static WIN32_ERROR ERROR_APPINSTALLER_ACTIVATION_BLOCKED;
    public static WIN32_ERROR ERROR_REGISTRATION_FROM_REMOTE_DRIVE_NOT_SUPPORTED;
    public static WIN32_ERROR ERROR_APPX_RAW_DATA_WRITE_FAILED;
    public static WIN32_ERROR ERROR_DEPLOYMENT_BLOCKED_BY_VOLUME_POLICY_PACKAGE;
    public static WIN32_ERROR ERROR_DEPLOYMENT_BLOCKED_BY_VOLUME_POLICY_MACHINE;
    public static WIN32_ERROR ERROR_DEPLOYMENT_BLOCKED_BY_PROFILE_POLICY;
    public static WIN32_ERROR ERROR_DEPLOYMENT_FAILED_CONFLICTING_MUTABLE_PACKAGE_DIRECTORY;
    public static WIN32_ERROR ERROR_SINGLETON_RESOURCE_INSTALLED_IN_ACTIVE_USER;
    public static WIN32_ERROR ERROR_DIFFERENT_VERSION_OF_PACKAGED_SERVICE_INSTALLED;
    public static WIN32_ERROR ERROR_SERVICE_EXISTS_AS_NON_PACKAGED_SERVICE;
    public static WIN32_ERROR ERROR_PACKAGED_SERVICE_REQUIRES_ADMIN_PRIVILEGES;
    public static WIN32_ERROR ERROR_REDIRECTION_TO_DEFAULT_ACCOUNT_NOT_ALLOWED;
    public static WIN32_ERROR ERROR_PACKAGE_LACKS_CAPABILITY_TO_DEPLOY_ON_HOST;
    public static WIN32_ERROR ERROR_UNSIGNED_PACKAGE_INVALID_CONTENT;
    public static WIN32_ERROR ERROR_UNSIGNED_PACKAGE_INVALID_PUBLISHER_NAMESPACE;
    public static WIN32_ERROR ERROR_SIGNED_PACKAGE_INVALID_PUBLISHER_NAMESPACE;
    public static WIN32_ERROR ERROR_PACKAGE_EXTERNAL_LOCATION_NOT_ALLOWED;
    public static WIN32_ERROR ERROR_INSTALL_FULLTRUST_HOSTRUNTIME_REQUIRES_MAIN_PACKAGE_FULLTRUST_CAPABILITY;
    public static WIN32_ERROR ERROR_PACKAGE_LACKS_CAPABILITY_FOR_MANDATORY_STARTUPTASKS;
    public static WIN32_ERROR ERROR_INSTALL_RESOLVE_HOSTRUNTIME_DEPENDENCY_FAILED;
    public static WIN32_ERROR ERROR_MACHINE_SCOPE_NOT_ALLOWED;
    public static WIN32_ERROR ERROR_CLASSIC_COMPAT_MODE_NOT_ALLOWED;
    public static WIN32_ERROR ERROR_STAGEFROMUPDATEAGENT_PACKAGE_NOT_APPLICABLE;
    public static WIN32_ERROR ERROR_PACKAGE_NOT_REGISTERED_FOR_USER;
    public static WIN32_ERROR ERROR_PACKAGE_NAME_MISMATCH;
    public static WIN32_ERROR ERROR_APPINSTALLER_URI_IN_USE;
    public static WIN32_ERROR ERROR_APPINSTALLER_IS_MANAGED_BY_SYSTEM;
    public static WIN32_ERROR APPMODEL_ERROR_NO_PACKAGE;
    public static WIN32_ERROR APPMODEL_ERROR_PACKAGE_RUNTIME_CORRUPT;
    public static WIN32_ERROR APPMODEL_ERROR_PACKAGE_IDENTITY_CORRUPT;
    public static WIN32_ERROR APPMODEL_ERROR_NO_APPLICATION;
    public static WIN32_ERROR APPMODEL_ERROR_DYNAMIC_PROPERTY_READ_FAILED;
    public static WIN32_ERROR APPMODEL_ERROR_DYNAMIC_PROPERTY_INVALID;
    public static WIN32_ERROR APPMODEL_ERROR_PACKAGE_NOT_AVAILABLE;
    public static WIN32_ERROR APPMODEL_ERROR_NO_MUTABLE_DIRECTORY;
    public static WIN32_ERROR ERROR_STATE_LOAD_STORE_FAILED;
    public static WIN32_ERROR ERROR_STATE_GET_VERSION_FAILED;
    public static WIN32_ERROR ERROR_STATE_SET_VERSION_FAILED;
    public static WIN32_ERROR ERROR_STATE_STRUCTURED_RESET_FAILED;
    public static WIN32_ERROR ERROR_STATE_OPEN_CONTAINER_FAILED;
    public static WIN32_ERROR ERROR_STATE_CREATE_CONTAINER_FAILED;
    public static WIN32_ERROR ERROR_STATE_DELETE_CONTAINER_FAILED;
    public static WIN32_ERROR ERROR_STATE_READ_SETTING_FAILED;
    public static WIN32_ERROR ERROR_STATE_WRITE_SETTING_FAILED;
    public static WIN32_ERROR ERROR_STATE_DELETE_SETTING_FAILED;
    public static WIN32_ERROR ERROR_STATE_QUERY_SETTING_FAILED;
    public static WIN32_ERROR ERROR_STATE_READ_COMPOSITE_SETTING_FAILED;
    public static WIN32_ERROR ERROR_STATE_WRITE_COMPOSITE_SETTING_FAILED;
    public static WIN32_ERROR ERROR_STATE_ENUMERATE_CONTAINER_FAILED;
    public static WIN32_ERROR ERROR_STATE_ENUMERATE_SETTINGS_FAILED;
    public static WIN32_ERROR ERROR_STATE_COMPOSITE_SETTING_VALUE_SIZE_LIMIT_EXCEEDED;
    public static WIN32_ERROR ERROR_STATE_SETTING_VALUE_SIZE_LIMIT_EXCEEDED;
    public static WIN32_ERROR ERROR_STATE_SETTING_NAME_SIZE_LIMIT_EXCEEDED;
    public static WIN32_ERROR ERROR_STATE_CONTAINER_NAME_SIZE_LIMIT_EXCEEDED;
    public static WIN32_ERROR ERROR_API_UNAVAILABLE;
    public static WIN32_ERROR ERROR_NDIS_INTERFACE_CLOSING;
    public static WIN32_ERROR ERROR_NDIS_BAD_VERSION;
    public static WIN32_ERROR ERROR_NDIS_BAD_CHARACTERISTICS;
    public static WIN32_ERROR ERROR_NDIS_ADAPTER_NOT_FOUND;
    public static WIN32_ERROR ERROR_NDIS_OPEN_FAILED;
    public static WIN32_ERROR ERROR_NDIS_DEVICE_FAILED;
    public static WIN32_ERROR ERROR_NDIS_MULTICAST_FULL;
    public static WIN32_ERROR ERROR_NDIS_MULTICAST_EXISTS;
    public static WIN32_ERROR ERROR_NDIS_MULTICAST_NOT_FOUND;
    public static WIN32_ERROR ERROR_NDIS_REQUEST_ABORTED;
    public static WIN32_ERROR ERROR_NDIS_RESET_IN_PROGRESS;
    public static WIN32_ERROR ERROR_NDIS_NOT_SUPPORTED;
    public static WIN32_ERROR ERROR_NDIS_INVALID_PACKET;
    public static WIN32_ERROR ERROR_NDIS_ADAPTER_NOT_READY;
    public static WIN32_ERROR ERROR_NDIS_INVALID_LENGTH;
    public static WIN32_ERROR ERROR_NDIS_INVALID_DATA;
    public static WIN32_ERROR ERROR_NDIS_BUFFER_TOO_SHORT;
    public static WIN32_ERROR ERROR_NDIS_INVALID_OID;
    public static WIN32_ERROR ERROR_NDIS_ADAPTER_REMOVED;
    public static WIN32_ERROR ERROR_NDIS_UNSUPPORTED_MEDIA;
    public static WIN32_ERROR ERROR_NDIS_GROUP_ADDRESS_IN_USE;
    public static WIN32_ERROR ERROR_NDIS_FILE_NOT_FOUND;
    public static WIN32_ERROR ERROR_NDIS_ERROR_READING_FILE;
    public static WIN32_ERROR ERROR_NDIS_ALREADY_MAPPED;
    public static WIN32_ERROR ERROR_NDIS_RESOURCE_CONFLICT;
    public static WIN32_ERROR ERROR_NDIS_MEDIA_DISCONNECTED;
    public static WIN32_ERROR ERROR_NDIS_INVALID_ADDRESS;
    public static WIN32_ERROR ERROR_NDIS_INVALID_DEVICE_REQUEST;
    public static WIN32_ERROR ERROR_NDIS_PAUSED;
    public static WIN32_ERROR ERROR_NDIS_INTERFACE_NOT_FOUND;
    public static WIN32_ERROR ERROR_NDIS_UNSUPPORTED_REVISION;
    public static WIN32_ERROR ERROR_NDIS_INVALID_PORT;
    public static WIN32_ERROR ERROR_NDIS_INVALID_PORT_STATE;
    public static WIN32_ERROR ERROR_NDIS_LOW_POWER_STATE;
    public static WIN32_ERROR ERROR_NDIS_REINIT_REQUIRED;
    public static WIN32_ERROR ERROR_NDIS_NO_QUEUES;
    public static WIN32_ERROR ERROR_NDIS_DOT11_AUTO_CONFIG_ENABLED;
    public static WIN32_ERROR ERROR_NDIS_DOT11_MEDIA_IN_USE;
    public static WIN32_ERROR ERROR_NDIS_DOT11_POWER_STATE_INVALID;
    public static WIN32_ERROR ERROR_NDIS_PM_WOL_PATTERN_LIST_FULL;
    public static WIN32_ERROR ERROR_NDIS_PM_PROTOCOL_OFFLOAD_LIST_FULL;
    public static WIN32_ERROR ERROR_NDIS_DOT11_AP_CHANNEL_CURRENTLY_NOT_AVAILABLE;
    public static WIN32_ERROR ERROR_NDIS_DOT11_AP_BAND_CURRENTLY_NOT_AVAILABLE;
    public static WIN32_ERROR ERROR_NDIS_DOT11_AP_CHANNEL_NOT_ALLOWED;
    public static WIN32_ERROR ERROR_NDIS_DOT11_AP_BAND_NOT_ALLOWED;
    public static WIN32_ERROR ERROR_NDIS_INDICATION_REQUIRED;
    public static WIN32_ERROR ERROR_NDIS_OFFLOAD_POLICY;
    public static WIN32_ERROR ERROR_NDIS_OFFLOAD_CONNECTION_REJECTED;
    public static WIN32_ERROR ERROR_NDIS_OFFLOAD_PATH_REJECTED;
    public static WIN32_ERROR ERROR_HV_INVALID_HYPERCALL_CODE;
    public static WIN32_ERROR ERROR_HV_INVALID_HYPERCALL_INPUT;
    public static WIN32_ERROR ERROR_HV_INVALID_ALIGNMENT;
    public static WIN32_ERROR ERROR_HV_INVALID_PARAMETER;
    public static WIN32_ERROR ERROR_HV_ACCESS_DENIED;
    public static WIN32_ERROR ERROR_HV_INVALID_PARTITION_STATE;
    public static WIN32_ERROR ERROR_HV_OPERATION_DENIED;
    public static WIN32_ERROR ERROR_HV_UNKNOWN_PROPERTY;
    public static WIN32_ERROR ERROR_HV_PROPERTY_VALUE_OUT_OF_RANGE;
    public static WIN32_ERROR ERROR_HV_INSUFFICIENT_MEMORY;
    public static WIN32_ERROR ERROR_HV_PARTITION_TOO_DEEP;
    public static WIN32_ERROR ERROR_HV_INVALID_PARTITION_ID;
    public static WIN32_ERROR ERROR_HV_INVALID_VP_INDEX;
    public static WIN32_ERROR ERROR_HV_INVALID_PORT_ID;
    public static WIN32_ERROR ERROR_HV_INVALID_CONNECTION_ID;
    public static WIN32_ERROR ERROR_HV_INSUFFICIENT_BUFFERS;
    public static WIN32_ERROR ERROR_HV_NOT_ACKNOWLEDGED;
    public static WIN32_ERROR ERROR_HV_INVALID_VP_STATE;
    public static WIN32_ERROR ERROR_HV_ACKNOWLEDGED;
    public static WIN32_ERROR ERROR_HV_INVALID_SAVE_RESTORE_STATE;
    public static WIN32_ERROR ERROR_HV_INVALID_SYNIC_STATE;
    public static WIN32_ERROR ERROR_HV_OBJECT_IN_USE;
    public static WIN32_ERROR ERROR_HV_INVALID_PROXIMITY_DOMAIN_INFO;
    public static WIN32_ERROR ERROR_HV_NO_DATA;
    public static WIN32_ERROR ERROR_HV_INACTIVE;
    public static WIN32_ERROR ERROR_HV_NO_RESOURCES;
    public static WIN32_ERROR ERROR_HV_FEATURE_UNAVAILABLE;
    public static WIN32_ERROR ERROR_HV_INSUFFICIENT_BUFFER;
    public static WIN32_ERROR ERROR_HV_INSUFFICIENT_DEVICE_DOMAINS;
    public static WIN32_ERROR ERROR_HV_CPUID_FEATURE_VALIDATION;
    public static WIN32_ERROR ERROR_HV_CPUID_XSAVE_FEATURE_VALIDATION;
    public static WIN32_ERROR ERROR_HV_PROCESSOR_STARTUP_TIMEOUT;
    public static WIN32_ERROR ERROR_HV_SMX_ENABLED;
    public static WIN32_ERROR ERROR_HV_INVALID_LP_INDEX;
    public static WIN32_ERROR ERROR_HV_INVALID_REGISTER_VALUE;
    public static WIN32_ERROR ERROR_HV_INVALID_VTL_STATE;
    public static WIN32_ERROR ERROR_HV_NX_NOT_DETECTED;
    public static WIN32_ERROR ERROR_HV_INVALID_DEVICE_ID;
    public static WIN32_ERROR ERROR_HV_INVALID_DEVICE_STATE;
    public static WIN32_ERROR ERROR_HV_PENDING_PAGE_REQUESTS;
    public static WIN32_ERROR ERROR_HV_PAGE_REQUEST_INVALID;
    public static WIN32_ERROR ERROR_HV_INVALID_CPU_GROUP_ID;
    public static WIN32_ERROR ERROR_HV_INVALID_CPU_GROUP_STATE;
    public static WIN32_ERROR ERROR_HV_OPERATION_FAILED;
    public static WIN32_ERROR ERROR_HV_NOT_ALLOWED_WITH_NESTED_VIRT_ACTIVE;
    public static WIN32_ERROR ERROR_HV_INSUFFICIENT_ROOT_MEMORY;
    public static WIN32_ERROR ERROR_HV_EVENT_BUFFER_ALREADY_FREED;
    public static WIN32_ERROR ERROR_HV_INSUFFICIENT_CONTIGUOUS_MEMORY;
    public static WIN32_ERROR ERROR_HV_DEVICE_NOT_IN_DOMAIN;
    public static WIN32_ERROR ERROR_HV_NESTED_VM_EXIT;
    public static WIN32_ERROR ERROR_HV_MSR_ACCESS_FAILED;
    public static WIN32_ERROR ERROR_HV_INSUFFICIENT_MEMORY_MIRRORING;
    public static WIN32_ERROR ERROR_HV_INSUFFICIENT_CONTIGUOUS_MEMORY_MIRRORING;
    public static WIN32_ERROR ERROR_HV_INSUFFICIENT_CONTIGUOUS_ROOT_MEMORY;
    public static WIN32_ERROR ERROR_HV_INSUFFICIENT_ROOT_MEMORY_MIRRORING;
    public static WIN32_ERROR ERROR_HV_INSUFFICIENT_CONTIGUOUS_ROOT_MEMORY_MIRRORING;
    public static WIN32_ERROR ERROR_HV_NOT_PRESENT;
    public static WIN32_ERROR ERROR_VID_DUPLICATE_HANDLER;
    public static WIN32_ERROR ERROR_VID_TOO_MANY_HANDLERS;
    public static WIN32_ERROR ERROR_VID_QUEUE_FULL;
    public static WIN32_ERROR ERROR_VID_HANDLER_NOT_PRESENT;
    public static WIN32_ERROR ERROR_VID_INVALID_OBJECT_NAME;
    public static WIN32_ERROR ERROR_VID_PARTITION_NAME_TOO_LONG;
    public static WIN32_ERROR ERROR_VID_MESSAGE_QUEUE_NAME_TOO_LONG;
    public static WIN32_ERROR ERROR_VID_PARTITION_ALREADY_EXISTS;
    public static WIN32_ERROR ERROR_VID_PARTITION_DOES_NOT_EXIST;
    public static WIN32_ERROR ERROR_VID_PARTITION_NAME_NOT_FOUND;
    public static WIN32_ERROR ERROR_VID_MESSAGE_QUEUE_ALREADY_EXISTS;
    public static WIN32_ERROR ERROR_VID_EXCEEDED_MBP_ENTRY_MAP_LIMIT;
    public static WIN32_ERROR ERROR_VID_MB_STILL_REFERENCED;
    public static WIN32_ERROR ERROR_VID_CHILD_GPA_PAGE_SET_CORRUPTED;
    public static WIN32_ERROR ERROR_VID_INVALID_NUMA_SETTINGS;
    public static WIN32_ERROR ERROR_VID_INVALID_NUMA_NODE_INDEX;
    public static WIN32_ERROR ERROR_VID_NOTIFICATION_QUEUE_ALREADY_ASSOCIATED;
    public static WIN32_ERROR ERROR_VID_INVALID_MEMORY_BLOCK_HANDLE;
    public static WIN32_ERROR ERROR_VID_PAGE_RANGE_OVERFLOW;
    public static WIN32_ERROR ERROR_VID_INVALID_MESSAGE_QUEUE_HANDLE;
    public static WIN32_ERROR ERROR_VID_INVALID_GPA_RANGE_HANDLE;
    public static WIN32_ERROR ERROR_VID_NO_MEMORY_BLOCK_NOTIFICATION_QUEUE;
    public static WIN32_ERROR ERROR_VID_MEMORY_BLOCK_LOCK_COUNT_EXCEEDED;
    public static WIN32_ERROR ERROR_VID_INVALID_PPM_HANDLE;
    public static WIN32_ERROR ERROR_VID_MBPS_ARE_LOCKED;
    public static WIN32_ERROR ERROR_VID_MESSAGE_QUEUE_CLOSED;
    public static WIN32_ERROR ERROR_VID_VIRTUAL_PROCESSOR_LIMIT_EXCEEDED;
    public static WIN32_ERROR ERROR_VID_STOP_PENDING;
    public static WIN32_ERROR ERROR_VID_INVALID_PROCESSOR_STATE;
    public static WIN32_ERROR ERROR_VID_EXCEEDED_KM_CONTEXT_COUNT_LIMIT;
    public static WIN32_ERROR ERROR_VID_KM_INTERFACE_ALREADY_INITIALIZED;
    public static WIN32_ERROR ERROR_VID_MB_PROPERTY_ALREADY_SET_RESET;
    public static WIN32_ERROR ERROR_VID_MMIO_RANGE_DESTROYED;
    public static WIN32_ERROR ERROR_VID_INVALID_CHILD_GPA_PAGE_SET;
    public static WIN32_ERROR ERROR_VID_RESERVE_PAGE_SET_IS_BEING_USED;
    public static WIN32_ERROR ERROR_VID_RESERVE_PAGE_SET_TOO_SMALL;
    public static WIN32_ERROR ERROR_VID_MBP_ALREADY_LOCKED_USING_RESERVED_PAGE;
    public static WIN32_ERROR ERROR_VID_MBP_COUNT_EXCEEDED_LIMIT;
    public static WIN32_ERROR ERROR_VID_SAVED_STATE_CORRUPT;
    public static WIN32_ERROR ERROR_VID_SAVED_STATE_UNRECOGNIZED_ITEM;
    public static WIN32_ERROR ERROR_VID_SAVED_STATE_INCOMPATIBLE;
    public static WIN32_ERROR ERROR_VID_VTL_ACCESS_DENIED;
    public static WIN32_ERROR ERROR_VID_INSUFFICIENT_RESOURCES_RESERVE;
    public static WIN32_ERROR ERROR_VID_INSUFFICIENT_RESOURCES_PHYSICAL_BUFFER;
    public static WIN32_ERROR ERROR_VID_INSUFFICIENT_RESOURCES_HV_DEPOSIT;
    public static WIN32_ERROR ERROR_VID_MEMORY_TYPE_NOT_SUPPORTED;
    public static WIN32_ERROR ERROR_VID_INSUFFICIENT_RESOURCES_WITHDRAW;
    public static WIN32_ERROR ERROR_VID_PROCESS_ALREADY_SET;
    public static WIN32_ERROR ERROR_VMCOMPUTE_TERMINATED_DURING_START;
    public static WIN32_ERROR ERROR_VMCOMPUTE_IMAGE_MISMATCH;
    public static WIN32_ERROR ERROR_VMCOMPUTE_HYPERV_NOT_INSTALLED;
    public static WIN32_ERROR ERROR_VMCOMPUTE_OPERATION_PENDING;
    public static WIN32_ERROR ERROR_VMCOMPUTE_TOO_MANY_NOTIFICATIONS;
    public static WIN32_ERROR ERROR_VMCOMPUTE_INVALID_STATE;
    public static WIN32_ERROR ERROR_VMCOMPUTE_UNEXPECTED_EXIT;
    public static WIN32_ERROR ERROR_VMCOMPUTE_TERMINATED;
    public static WIN32_ERROR ERROR_VMCOMPUTE_CONNECT_FAILED;
    public static WIN32_ERROR ERROR_VMCOMPUTE_TIMEOUT;
    public static WIN32_ERROR ERROR_VMCOMPUTE_CONNECTION_CLOSED;
    public static WIN32_ERROR ERROR_VMCOMPUTE_UNKNOWN_MESSAGE;
    public static WIN32_ERROR ERROR_VMCOMPUTE_UNSUPPORTED_PROTOCOL_VERSION;
    public static WIN32_ERROR ERROR_VMCOMPUTE_INVALID_JSON;
    public static WIN32_ERROR ERROR_VMCOMPUTE_SYSTEM_NOT_FOUND;
    public static WIN32_ERROR ERROR_VMCOMPUTE_SYSTEM_ALREADY_EXISTS;
    public static WIN32_ERROR ERROR_VMCOMPUTE_SYSTEM_ALREADY_STOPPED;
    public static WIN32_ERROR ERROR_VMCOMPUTE_PROTOCOL_ERROR;
    public static WIN32_ERROR ERROR_VMCOMPUTE_INVALID_LAYER;
    public static WIN32_ERROR ERROR_VMCOMPUTE_WINDOWS_INSIDER_REQUIRED;
    public static WIN32_ERROR ERROR_VNET_VIRTUAL_SWITCH_NAME_NOT_FOUND;
    public static WIN32_ERROR ERROR_VID_REMOTE_NODE_PARENT_GPA_PAGES_USED;
    public static WIN32_ERROR ERROR_VSMB_SAVED_STATE_FILE_NOT_FOUND;
    public static WIN32_ERROR ERROR_VSMB_SAVED_STATE_CORRUPT;
    public static WIN32_ERROR ERROR_VOLMGR_INCOMPLETE_REGENERATION;
    public static WIN32_ERROR ERROR_VOLMGR_INCOMPLETE_DISK_MIGRATION;
    public static WIN32_ERROR ERROR_VOLMGR_DATABASE_FULL;
    public static WIN32_ERROR ERROR_VOLMGR_DISK_CONFIGURATION_CORRUPTED;
    public static WIN32_ERROR ERROR_VOLMGR_DISK_CONFIGURATION_NOT_IN_SYNC;
    public static WIN32_ERROR ERROR_VOLMGR_PACK_CONFIG_UPDATE_FAILED;
    public static WIN32_ERROR ERROR_VOLMGR_DISK_CONTAINS_NON_SIMPLE_VOLUME;
    public static WIN32_ERROR ERROR_VOLMGR_DISK_DUPLICATE;
    public static WIN32_ERROR ERROR_VOLMGR_DISK_DYNAMIC;
    public static WIN32_ERROR ERROR_VOLMGR_DISK_ID_INVALID;
    public static WIN32_ERROR ERROR_VOLMGR_DISK_INVALID;
    public static WIN32_ERROR ERROR_VOLMGR_DISK_LAST_VOTER;
    public static WIN32_ERROR ERROR_VOLMGR_DISK_LAYOUT_INVALID;
    public static WIN32_ERROR ERROR_VOLMGR_DISK_LAYOUT_NON_BASIC_BETWEEN_BASIC_PARTITIONS;
    public static WIN32_ERROR ERROR_VOLMGR_DISK_LAYOUT_NOT_CYLINDER_ALIGNED;
    public static WIN32_ERROR ERROR_VOLMGR_DISK_LAYOUT_PARTITIONS_TOO_SMALL;
    public static WIN32_ERROR ERROR_VOLMGR_DISK_LAYOUT_PRIMARY_BETWEEN_LOGICAL_PARTITIONS;
    public static WIN32_ERROR ERROR_VOLMGR_DISK_LAYOUT_TOO_MANY_PARTITIONS;
    public static WIN32_ERROR ERROR_VOLMGR_DISK_MISSING;
    public static WIN32_ERROR ERROR_VOLMGR_DISK_NOT_EMPTY;
    public static WIN32_ERROR ERROR_VOLMGR_DISK_NOT_ENOUGH_SPACE;
    public static WIN32_ERROR ERROR_VOLMGR_DISK_REVECTORING_FAILED;
    public static WIN32_ERROR ERROR_VOLMGR_DISK_SECTOR_SIZE_INVALID;
    public static WIN32_ERROR ERROR_VOLMGR_DISK_SET_NOT_CONTAINED;
    public static WIN32_ERROR ERROR_VOLMGR_DISK_USED_BY_MULTIPLE_MEMBERS;
    public static WIN32_ERROR ERROR_VOLMGR_DISK_USED_BY_MULTIPLE_PLEXES;
    public static WIN32_ERROR ERROR_VOLMGR_DYNAMIC_DISK_NOT_SUPPORTED;
    public static WIN32_ERROR ERROR_VOLMGR_EXTENT_ALREADY_USED;
    public static WIN32_ERROR ERROR_VOLMGR_EXTENT_NOT_CONTIGUOUS;
    public static WIN32_ERROR ERROR_VOLMGR_EXTENT_NOT_IN_PUBLIC_REGION;
    public static WIN32_ERROR ERROR_VOLMGR_EXTENT_NOT_SECTOR_ALIGNED;
    public static WIN32_ERROR ERROR_VOLMGR_EXTENT_OVERLAPS_EBR_PARTITION;
    public static WIN32_ERROR ERROR_VOLMGR_EXTENT_VOLUME_LENGTHS_DO_NOT_MATCH;
    public static WIN32_ERROR ERROR_VOLMGR_FAULT_TOLERANT_NOT_SUPPORTED;
    public static WIN32_ERROR ERROR_VOLMGR_INTERLEAVE_LENGTH_INVALID;
    public static WIN32_ERROR ERROR_VOLMGR_MAXIMUM_REGISTERED_USERS;
    public static WIN32_ERROR ERROR_VOLMGR_MEMBER_IN_SYNC;
    public static WIN32_ERROR ERROR_VOLMGR_MEMBER_INDEX_DUPLICATE;
    public static WIN32_ERROR ERROR_VOLMGR_MEMBER_INDEX_INVALID;
    public static WIN32_ERROR ERROR_VOLMGR_MEMBER_MISSING;
    public static WIN32_ERROR ERROR_VOLMGR_MEMBER_NOT_DETACHED;
    public static WIN32_ERROR ERROR_VOLMGR_MEMBER_REGENERATING;
    public static WIN32_ERROR ERROR_VOLMGR_ALL_DISKS_FAILED;
    public static WIN32_ERROR ERROR_VOLMGR_NO_REGISTERED_USERS;
    public static WIN32_ERROR ERROR_VOLMGR_NO_SUCH_USER;
    public static WIN32_ERROR ERROR_VOLMGR_NOTIFICATION_RESET;
    public static WIN32_ERROR ERROR_VOLMGR_NUMBER_OF_MEMBERS_INVALID;
    public static WIN32_ERROR ERROR_VOLMGR_NUMBER_OF_PLEXES_INVALID;
    public static WIN32_ERROR ERROR_VOLMGR_PACK_DUPLICATE;
    public static WIN32_ERROR ERROR_VOLMGR_PACK_ID_INVALID;
    public static WIN32_ERROR ERROR_VOLMGR_PACK_INVALID;
    public static WIN32_ERROR ERROR_VOLMGR_PACK_NAME_INVALID;
    public static WIN32_ERROR ERROR_VOLMGR_PACK_OFFLINE;
    public static WIN32_ERROR ERROR_VOLMGR_PACK_HAS_QUORUM;
    public static WIN32_ERROR ERROR_VOLMGR_PACK_WITHOUT_QUORUM;
    public static WIN32_ERROR ERROR_VOLMGR_PARTITION_STYLE_INVALID;
    public static WIN32_ERROR ERROR_VOLMGR_PARTITION_UPDATE_FAILED;
    public static WIN32_ERROR ERROR_VOLMGR_PLEX_IN_SYNC;
    public static WIN32_ERROR ERROR_VOLMGR_PLEX_INDEX_DUPLICATE;
    public static WIN32_ERROR ERROR_VOLMGR_PLEX_INDEX_INVALID;
    public static WIN32_ERROR ERROR_VOLMGR_PLEX_LAST_ACTIVE;
    public static WIN32_ERROR ERROR_VOLMGR_PLEX_MISSING;
    public static WIN32_ERROR ERROR_VOLMGR_PLEX_REGENERATING;
    public static WIN32_ERROR ERROR_VOLMGR_PLEX_TYPE_INVALID;
    public static WIN32_ERROR ERROR_VOLMGR_PLEX_NOT_RAID5;
    public static WIN32_ERROR ERROR_VOLMGR_PLEX_NOT_SIMPLE;
    public static WIN32_ERROR ERROR_VOLMGR_STRUCTURE_SIZE_INVALID;
    public static WIN32_ERROR ERROR_VOLMGR_TOO_MANY_NOTIFICATION_REQUESTS;
    public static WIN32_ERROR ERROR_VOLMGR_TRANSACTION_IN_PROGRESS;
    public static WIN32_ERROR ERROR_VOLMGR_UNEXPECTED_DISK_LAYOUT_CHANGE;
    public static WIN32_ERROR ERROR_VOLMGR_VOLUME_CONTAINS_MISSING_DISK;
    public static WIN32_ERROR ERROR_VOLMGR_VOLUME_ID_INVALID;
    public static WIN32_ERROR ERROR_VOLMGR_VOLUME_LENGTH_INVALID;
    public static WIN32_ERROR ERROR_VOLMGR_VOLUME_LENGTH_NOT_SECTOR_SIZE_MULTIPLE;
    public static WIN32_ERROR ERROR_VOLMGR_VOLUME_NOT_MIRRORED;
    public static WIN32_ERROR ERROR_VOLMGR_VOLUME_NOT_RETAINED;
    public static WIN32_ERROR ERROR_VOLMGR_VOLUME_OFFLINE;
    public static WIN32_ERROR ERROR_VOLMGR_VOLUME_RETAINED;
    public static WIN32_ERROR ERROR_VOLMGR_NUMBER_OF_EXTENTS_INVALID;
    public static WIN32_ERROR ERROR_VOLMGR_DIFFERENT_SECTOR_SIZE;
    public static WIN32_ERROR ERROR_VOLMGR_BAD_BOOT_DISK;
    public static WIN32_ERROR ERROR_VOLMGR_PACK_CONFIG_OFFLINE;
    public static WIN32_ERROR ERROR_VOLMGR_PACK_CONFIG_ONLINE;
    public static WIN32_ERROR ERROR_VOLMGR_NOT_PRIMARY_PACK;
    public static WIN32_ERROR ERROR_VOLMGR_PACK_LOG_UPDATE_FAILED;
    public static WIN32_ERROR ERROR_VOLMGR_NUMBER_OF_DISKS_IN_PLEX_INVALID;
    public static WIN32_ERROR ERROR_VOLMGR_NUMBER_OF_DISKS_IN_MEMBER_INVALID;
    public static WIN32_ERROR ERROR_VOLMGR_VOLUME_MIRRORED;
    public static WIN32_ERROR ERROR_VOLMGR_PLEX_NOT_SIMPLE_SPANNED;
    public static WIN32_ERROR ERROR_VOLMGR_NO_VALID_LOG_COPIES;
    public static WIN32_ERROR ERROR_VOLMGR_PRIMARY_PACK_PRESENT;
    public static WIN32_ERROR ERROR_VOLMGR_NUMBER_OF_DISKS_INVALID;
    public static WIN32_ERROR ERROR_VOLMGR_MIRROR_NOT_SUPPORTED;
    public static WIN32_ERROR ERROR_VOLMGR_RAID5_NOT_SUPPORTED;
    public static WIN32_ERROR ERROR_BCD_NOT_ALL_ENTRIES_IMPORTED;
    public static WIN32_ERROR ERROR_BCD_TOO_MANY_ELEMENTS;
    public static WIN32_ERROR ERROR_BCD_NOT_ALL_ENTRIES_SYNCHRONIZED;
    public static WIN32_ERROR ERROR_VHD_DRIVE_FOOTER_MISSING;
    public static WIN32_ERROR ERROR_VHD_DRIVE_FOOTER_CHECKSUM_MISMATCH;
    public static WIN32_ERROR ERROR_VHD_DRIVE_FOOTER_CORRUPT;
    public static WIN32_ERROR ERROR_VHD_FORMAT_UNKNOWN;
    public static WIN32_ERROR ERROR_VHD_FORMAT_UNSUPPORTED_VERSION;
    public static WIN32_ERROR ERROR_VHD_SPARSE_HEADER_CHECKSUM_MISMATCH;
    public static WIN32_ERROR ERROR_VHD_SPARSE_HEADER_UNSUPPORTED_VERSION;
    public static WIN32_ERROR ERROR_VHD_SPARSE_HEADER_CORRUPT;
    public static WIN32_ERROR ERROR_VHD_BLOCK_ALLOCATION_FAILURE;
    public static WIN32_ERROR ERROR_VHD_BLOCK_ALLOCATION_TABLE_CORRUPT;
    public static WIN32_ERROR ERROR_VHD_INVALID_BLOCK_SIZE;
    public static WIN32_ERROR ERROR_VHD_BITMAP_MISMATCH;
    public static WIN32_ERROR ERROR_VHD_PARENT_VHD_NOT_FOUND;
    public static WIN32_ERROR ERROR_VHD_CHILD_PARENT_ID_MISMATCH;
    public static WIN32_ERROR ERROR_VHD_CHILD_PARENT_TIMESTAMP_MISMATCH;
    public static WIN32_ERROR ERROR_VHD_METADATA_READ_FAILURE;
    public static WIN32_ERROR ERROR_VHD_METADATA_WRITE_FAILURE;
    public static WIN32_ERROR ERROR_VHD_INVALID_SIZE;
    public static WIN32_ERROR ERROR_VHD_INVALID_FILE_SIZE;
    public static WIN32_ERROR ERROR_VIRTDISK_PROVIDER_NOT_FOUND;
    public static WIN32_ERROR ERROR_VIRTDISK_NOT_VIRTUAL_DISK;
    public static WIN32_ERROR ERROR_VHD_PARENT_VHD_ACCESS_DENIED;
    public static WIN32_ERROR ERROR_VHD_CHILD_PARENT_SIZE_MISMATCH;
    public static WIN32_ERROR ERROR_VHD_DIFFERENCING_CHAIN_CYCLE_DETECTED;
    public static WIN32_ERROR ERROR_VHD_DIFFERENCING_CHAIN_ERROR_IN_PARENT;
    public static WIN32_ERROR ERROR_VIRTUAL_DISK_LIMITATION;
    public static WIN32_ERROR ERROR_VHD_INVALID_TYPE;
    public static WIN32_ERROR ERROR_VHD_INVALID_STATE;
    public static WIN32_ERROR ERROR_VIRTDISK_UNSUPPORTED_DISK_SECTOR_SIZE;
    public static WIN32_ERROR ERROR_VIRTDISK_DISK_ALREADY_OWNED;
    public static WIN32_ERROR ERROR_VIRTDISK_DISK_ONLINE_AND_WRITABLE;
    public static WIN32_ERROR ERROR_CTLOG_TRACKING_NOT_INITIALIZED;
    public static WIN32_ERROR ERROR_CTLOG_LOGFILE_SIZE_EXCEEDED_MAXSIZE;
    public static WIN32_ERROR ERROR_CTLOG_VHD_CHANGED_OFFLINE;
    public static WIN32_ERROR ERROR_CTLOG_INVALID_TRACKING_STATE;
    public static WIN32_ERROR ERROR_CTLOG_INCONSISTENT_TRACKING_FILE;
    public static WIN32_ERROR ERROR_VHD_RESIZE_WOULD_TRUNCATE_DATA;
    public static WIN32_ERROR ERROR_VHD_COULD_NOT_COMPUTE_MINIMUM_VIRTUAL_SIZE;
    public static WIN32_ERROR ERROR_VHD_ALREADY_AT_OR_BELOW_MINIMUM_VIRTUAL_SIZE;
    public static WIN32_ERROR ERROR_VHD_METADATA_FULL;
    public static WIN32_ERROR ERROR_VHD_INVALID_CHANGE_TRACKING_ID;
    public static WIN32_ERROR ERROR_VHD_CHANGE_TRACKING_DISABLED;
    public static WIN32_ERROR ERROR_VHD_MISSING_CHANGE_TRACKING_INFORMATION;
    public static WIN32_ERROR ERROR_QUERY_STORAGE_ERROR;
}
[GeneratedCodeAttribute("Microsoft.Windows.CsWin32", "0.3.46-beta+dd815b2b9b")]
internal enum Windows.Win32.Networking.WinInet.INTERNET_ACCESS_TYPE : Enum {
    public UInt32 value__;
    public static INTERNET_ACCESS_TYPE INTERNET_OPEN_TYPE_DIRECT;
    public static INTERNET_ACCESS_TYPE INTERNET_OPEN_TYPE_PRECONFIG;
    public static INTERNET_ACCESS_TYPE INTERNET_OPEN_TYPE_PROXY;
}
[FlagsAttribute]
[GeneratedCodeAttribute("Microsoft.Windows.CsWin32", "0.3.46-beta+dd815b2b9b")]
internal enum Windows.Win32.System.Diagnostics.Debug.FORMAT_MESSAGE_OPTIONS : Enum {
    public UInt32 value__;
    public static FORMAT_MESSAGE_OPTIONS FORMAT_MESSAGE_ALLOCATE_BUFFER;
    public static FORMAT_MESSAGE_OPTIONS FORMAT_MESSAGE_ARGUMENT_ARRAY;
    public static FORMAT_MESSAGE_OPTIONS FORMAT_MESSAGE_FROM_HMODULE;
    public static FORMAT_MESSAGE_OPTIONS FORMAT_MESSAGE_FROM_STRING;
    public static FORMAT_MESSAGE_OPTIONS FORMAT_MESSAGE_FROM_SYSTEM;
    public static FORMAT_MESSAGE_OPTIONS FORMAT_MESSAGE_IGNORE_INSERTS;
}
[GeneratedCodeAttribute("Microsoft.Windows.CsWin32", "0.3.46-beta+dd815b2b9b")]
internal enum Windows.Win32.UI.Shell.OS : Enum {
    public UInt32 value__;
    public static OS OS_WINDOWS;
    public static OS OS_NT;
    public static OS OS_WIN95ORGREATER;
    public static OS OS_NT4ORGREATER;
    public static OS OS_WIN98ORGREATER;
    public static OS OS_WIN98_GOLD;
    public static OS OS_WIN2000ORGREATER;
    public static OS OS_WIN2000PRO;
    public static OS OS_WIN2000SERVER;
    public static OS OS_WIN2000ADVSERVER;
    public static OS OS_WIN2000DATACENTER;
    public static OS OS_WIN2000TERMINAL;
    public static OS OS_EMBEDDED;
    public static OS OS_TERMINALCLIENT;
    public static OS OS_TERMINALREMOTEADMIN;
    public static OS OS_WIN95_GOLD;
    public static OS OS_MEORGREATER;
    public static OS OS_XPORGREATER;
    public static OS OS_HOME;
    public static OS OS_PROFESSIONAL;
    public static OS OS_DATACENTER;
    public static OS OS_ADVSERVER;
    public static OS OS_SERVER;
    public static OS OS_TERMINALSERVER;
    public static OS OS_PERSONALTERMINALSERVER;
    public static OS OS_FASTUSERSWITCHING;
    public static OS OS_WELCOMELOGONUI;
    public static OS OS_DOMAINMEMBER;
    public static OS OS_ANYSERVER;
    public static OS OS_WOW6432;
    public static OS OS_WEBSERVER;
    public static OS OS_SMALLBUSINESSSERVER;
    public static OS OS_TABLETPC;
    public static OS OS_SERVERADMINUI;
    public static OS OS_MEDIACENTER;
    public static OS OS_APPLIANCE;
}
[GeneratedCodeAttribute("Microsoft.Windows.CsWin32", "0.3.46-beta+dd815b2b9b")]
internal enum Windows.Win32.UI.WindowsAndMessaging.GET_ANCESTOR_FLAGS : Enum {
    public UInt32 value__;
    public static GET_ANCESTOR_FLAGS GA_PARENT;
    public static GET_ANCESTOR_FLAGS GA_ROOT;
    public static GET_ANCESTOR_FLAGS GA_ROOTOWNER;
}
