[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
internal static class Microsoft.Web.WebView2.Core.COMDotNetTypeConverter : object {
    public static Rectangle RectangleCOMToNet(tagRECT rect);
    public static tagRECT RectangleNetToCOM(Rectangle dotNetRect);
    public static List`1<CoreWebView2Cookie> CookieListCOMToNet(ICoreWebView2CookieList rawCookieList);
    public static IReadOnlyList`1<CoreWebView2FrameInfo> CoreWebView2FrameInfoCollectionCOMToNet(ICoreWebView2FrameInfoCollection rawFrameInfoCollection);
    public static Color ColorCOMToNet(COREWEBVIEW2_COLOR color);
    public static COREWEBVIEW2_COLOR ColorNetToCOM(Color dotNetColor);
    public static Point PointCOMToNet(tagPOINT point);
    public static tagPOINT PointNetToCOM(Point dotNetPoint);
    public static TimeSpan ThrottlingIntervalCOMToNet(int intervalMs);
    public static int ThrottlingIntervalNetToCOM(TimeSpan timeSpan);
    public static IReadOnlyList`1<CoreWebView2ClientCertificate> CoreWebView2ClientCertificateCollectionCOMToNet(ICoreWebView2ClientCertificateCollection rawClientCertificateCollection);
    public static IReadOnlyList`1<string> CoreWebView2StringCollectionCOMToNet(ICoreWebView2StringCollection rawStringCollection);
    public static IReadOnlyList`1<object> CoreWebView2ObjectCollectionViewCOMToNet(ICoreWebView2ObjectCollectionView rawObjectCollection);
    public static IList`1<CoreWebView2ContextMenuItem> CoreWebView2ContextMenuItemCollectionCOMToNet(ICoreWebView2ContextMenuItemCollection rawContextMenuCollection);
    public static Matrix4x4 Matrix4x4COMToNet(COREWEBVIEW2_MATRIX_4X4 matrix4x4);
    public static COREWEBVIEW2_MATRIX_4X4 Matrix4x4NetToCOM(Matrix4x4 dotNetMatrix4x4);
    public static IReadOnlyList`1<Rectangle> CoreWebView2RegionRectCollectionViewCOMToNet(ICoreWebView2RegionRectCollectionView regionList);
    public static IReadOnlyList`1<CoreWebView2ProcessInfo> ProcessInfoCollectionCOMToNet(ICoreWebView2ProcessInfoCollection rawCoreWebView2ProcessInfoCollection);
    public static COMStreamWrapper StreamCOMToNet(IStream stream);
    public static IReadOnlyList`1<CoreWebView2PermissionSetting> CoreWebView2PermissionSettingCollectionCOMToNet(ICoreWebView2PermissionSettingCollectionView rawPermissionSettingCollectionView);
    public static IReadOnlyList`1<CoreWebView2BrowserExtension> BrowserExtensionListCOMToNet(ICoreWebView2BrowserExtensionList rawCoreWebView2BrowserExtensionList);
    public static IReadOnlyList`1<CoreWebView2ProcessExtendedInfo> ProcessExtendedInfoCollectionCOMToNet(ICoreWebView2ProcessExtendedInfoCollection rawCoreWebView2ProcessExtendedInfoCollection);
    public static ICoreWebView2ObjectCollectionView CoreWebView2WebObjectCollectionViewNetToCOM(List`1<object> dotNetObjectCollection);
}
internal class Microsoft.Web.WebView2.Core.COMStreamWrapper : Stream {
    private IStream _istream;
    private IntPtr _mInt64;
    private long _size;
    public bool CanRead { get; }
    public bool CanSeek { get; }
    public bool CanWrite { get; }
    public long Length { get; }
    public long Position { get; public set; }
    public COMStreamWrapper(IStream source);
    protected virtual override void Finalize();
    public virtual bool get_CanRead();
    public virtual bool get_CanSeek();
    public virtual bool get_CanWrite();
    public virtual void Flush();
    public virtual long get_Length();
    public virtual long get_Position();
    public virtual void set_Position(long value);
    public virtual int Read(Byte[] buffer, int offset, int count);
    public virtual long Seek(long offset, SeekOrigin origin);
    public virtual void SetLength(long value);
    public virtual void Write(Byte[] buffer, int offset, int count);
}
public class Microsoft.Web.WebView2.Core.CoreWebView2 : object {
    internal ICoreWebView2 _nativeICoreWebView2Value;
    internal ICoreWebView2_2 _nativeICoreWebView2_2Value;
    internal ICoreWebView2_3 _nativeICoreWebView2_3Value;
    internal ICoreWebView2_4 _nativeICoreWebView2_4Value;
    internal ICoreWebView2_5 _nativeICoreWebView2_5Value;
    internal ICoreWebView2_6 _nativeICoreWebView2_6Value;
    internal ICoreWebView2_7 _nativeICoreWebView2_7Value;
    internal ICoreWebView2_8 _nativeICoreWebView2_8Value;
    internal ICoreWebView2_9 _nativeICoreWebView2_9Value;
    internal ICoreWebView2_10 _nativeICoreWebView2_10Value;
    internal ICoreWebView2_11 _nativeICoreWebView2_11Value;
    internal ICoreWebView2_12 _nativeICoreWebView2_12Value;
    internal ICoreWebView2_13 _nativeICoreWebView2_13Value;
    internal ICoreWebView2_14 _nativeICoreWebView2_14Value;
    internal ICoreWebView2_15 _nativeICoreWebView2_15Value;
    internal ICoreWebView2_16 _nativeICoreWebView2_16Value;
    internal ICoreWebView2_17 _nativeICoreWebView2_17Value;
    internal ICoreWebView2_18 _nativeICoreWebView2_18Value;
    internal ICoreWebView2_19 _nativeICoreWebView2_19Value;
    internal ICoreWebView2_20 _nativeICoreWebView2_20Value;
    internal ICoreWebView2_21 _nativeICoreWebView2_21Value;
    internal ICoreWebView2_22 _nativeICoreWebView2_22Value;
    internal ICoreWebView2_23 _nativeICoreWebView2_23Value;
    internal ICoreWebView2_24 _nativeICoreWebView2_24Value;
    internal ICoreWebView2_25 _nativeICoreWebView2_25Value;
    internal ICoreWebView2Experimental27 _nativeICoreWebView2Experimental27Value;
    internal ICoreWebView2Experimental9 _nativeICoreWebView2Experimental9Value;
    internal ICoreWebView2Experimental7 _nativeICoreWebView2Experimental7Value;
    internal ICoreWebView2Experimental24 _nativeICoreWebView2Experimental24Value;
    internal ICoreWebView2Experimental23 _nativeICoreWebView2Experimental23Value;
    internal ICoreWebView2Experimental22 _nativeICoreWebView2Experimental22Value;
    internal ICoreWebView2Experimental21 _nativeICoreWebView2Experimental21Value;
    internal ICoreWebView2Experimental19 _nativeICoreWebView2Experimental19Value;
    internal ICoreWebView2Experimental6 _nativeICoreWebView2Experimental6Value;
    internal ICoreWebView2Experimental26 _nativeICoreWebView2Experimental26Value;
    internal ICoreWebView2Experimental4 _nativeICoreWebView2Experimental4Value;
    internal ICoreWebView2Experimental3 _nativeICoreWebView2Experimental3Value;
    internal ICoreWebView2Experimental25 _nativeICoreWebView2Experimental25Value;
    internal ICoreWebView2Experimental20 _nativeICoreWebView2Experimental20Value;
    internal ICoreWebView2Experimental2 _nativeICoreWebView2Experimental2Value;
    internal ICoreWebView2Experimental18 _nativeICoreWebView2Experimental18Value;
    internal ICoreWebView2Experimental8 _nativeICoreWebView2Experimental8Value;
    internal ICoreWebView2Experimental5 _nativeICoreWebView2Experimental5Value;
    internal ICoreWebView2Experimental17 _nativeICoreWebView2Experimental17Value;
    internal ICoreWebView2Experimental16 _nativeICoreWebView2Experimental16Value;
    internal ICoreWebView2Experimental15 _nativeICoreWebView2Experimental15Value;
    internal ICoreWebView2Experimental14 _nativeICoreWebView2Experimental14Value;
    internal ICoreWebView2Experimental13 _nativeICoreWebView2Experimental13Value;
    internal ICoreWebView2Experimental12 _nativeICoreWebView2Experimental12Value;
    internal ICoreWebView2Experimental11 _nativeICoreWebView2Experimental11Value;
    internal ICoreWebView2Experimental10 _nativeICoreWebView2Experimental10Value;
    internal ICoreWebView2Experimental _nativeICoreWebView2ExperimentalValue;
    internal ICoreWebView2PrivatePartial _nativeICoreWebView2PrivatePartialValue;
    internal object _rawNative;
    private EventRegistrationToken _navigationStartingToken;
    private EventHandler`1<CoreWebView2NavigationStartingEventArgs> navigationStarting;
    private EventRegistrationToken _contentLoadingToken;
    private EventHandler`1<CoreWebView2ContentLoadingEventArgs> contentLoading;
    private EventRegistrationToken _sourceChangedToken;
    private EventHandler`1<CoreWebView2SourceChangedEventArgs> sourceChanged;
    private EventRegistrationToken _historyChangedToken;
    private EventHandler`1<object> historyChanged;
    private EventRegistrationToken _navigationCompletedToken;
    private EventHandler`1<CoreWebView2NavigationCompletedEventArgs> navigationCompleted;
    private EventRegistrationToken _frameNavigationStartingToken;
    private EventHandler`1<CoreWebView2NavigationStartingEventArgs> frameNavigationStarting;
    private EventRegistrationToken _frameNavigationCompletedToken;
    private EventHandler`1<CoreWebView2NavigationCompletedEventArgs> frameNavigationCompleted;
    private EventRegistrationToken _scriptDialogOpeningToken;
    private EventHandler`1<CoreWebView2ScriptDialogOpeningEventArgs> scriptDialogOpening;
    private EventRegistrationToken _permissionRequestedToken;
    private EventHandler`1<CoreWebView2PermissionRequestedEventArgs> permissionRequested;
    private EventRegistrationToken _processFailedToken;
    private EventHandler`1<CoreWebView2ProcessFailedEventArgs> processFailed;
    private EventRegistrationToken _webMessageReceivedToken;
    private EventHandler`1<CoreWebView2WebMessageReceivedEventArgs> webMessageReceived;
    private EventRegistrationToken _newWindowRequestedToken;
    private EventHandler`1<CoreWebView2NewWindowRequestedEventArgs> newWindowRequested;
    private EventRegistrationToken _documentTitleChangedToken;
    private EventHandler`1<object> documentTitleChanged;
    private EventRegistrationToken _containsFullScreenElementChangedToken;
    private EventHandler`1<object> containsFullScreenElementChanged;
    private EventRegistrationToken _webResourceRequestedToken;
    private EventHandler`1<CoreWebView2WebResourceRequestedEventArgs> webResourceRequested;
    private EventRegistrationToken _windowCloseRequestedToken;
    private EventHandler`1<object> windowCloseRequested;
    private EventRegistrationToken _webResourceResponseReceivedToken;
    private EventHandler`1<CoreWebView2WebResourceResponseReceivedEventArgs> webResourceResponseReceived;
    private EventRegistrationToken _dOMContentLoadedToken;
    private EventHandler`1<CoreWebView2DOMContentLoadedEventArgs> dOMContentLoaded;
    private EventRegistrationToken _frameCreatedToken;
    private EventHandler`1<CoreWebView2FrameCreatedEventArgs> frameCreated;
    private EventRegistrationToken _downloadStartingToken;
    private EventHandler`1<CoreWebView2DownloadStartingEventArgs> downloadStarting;
    private EventRegistrationToken _clientCertificateRequestedToken;
    private EventHandler`1<CoreWebView2ClientCertificateRequestedEventArgs> clientCertificateRequested;
    private EventRegistrationToken _isMutedChangedToken;
    private EventHandler`1<object> isMutedChanged;
    private EventRegistrationToken _isDocumentPlayingAudioChangedToken;
    private EventHandler`1<object> isDocumentPlayingAudioChanged;
    private EventRegistrationToken _isDefaultDownloadDialogOpenChangedToken;
    private EventHandler`1<object> isDefaultDownloadDialogOpenChanged;
    private EventRegistrationToken _basicAuthenticationRequestedToken;
    private EventHandler`1<CoreWebView2BasicAuthenticationRequestedEventArgs> basicAuthenticationRequested;
    private EventRegistrationToken _contextMenuRequestedToken;
    private EventHandler`1<CoreWebView2ContextMenuRequestedEventArgs> contextMenuRequested;
    private EventRegistrationToken _statusBarTextChangedToken;
    private EventHandler`1<object> statusBarTextChanged;
    private EventRegistrationToken _serverCertificateErrorDetectedToken;
    private EventHandler`1<CoreWebView2ServerCertificateErrorDetectedEventArgs> serverCertificateErrorDetected;
    private EventRegistrationToken _faviconChangedToken;
    private EventHandler`1<object> faviconChanged;
    private EventRegistrationToken _launchingExternalUriSchemeToken;
    private EventHandler`1<CoreWebView2LaunchingExternalUriSchemeEventArgs> launchingExternalUriScheme;
    private EventRegistrationToken _notificationReceivedToken;
    private EventHandler`1<CoreWebView2NotificationReceivedEventArgs> notificationReceived;
    private EventRegistrationToken _saveAsUIShowingToken;
    private EventHandler`1<CoreWebView2SaveAsUIShowingEventArgs> saveAsUIShowing;
    private EventRegistrationToken _saveFileSecurityCheckStartingToken;
    private EventHandler`1<CoreWebView2SaveFileSecurityCheckStartingEventArgs> saveFileSecurityCheckStarting;
    private EventRegistrationToken _screenCaptureStartingToken;
    private EventHandler`1<CoreWebView2ScreenCaptureStartingEventArgs> screenCaptureStarting;
    internal ICoreWebView2 _nativeICoreWebView2 { get; internal set; }
    internal ICoreWebView2_2 _nativeICoreWebView2_2 { get; internal set; }
    internal ICoreWebView2_3 _nativeICoreWebView2_3 { get; internal set; }
    internal ICoreWebView2_4 _nativeICoreWebView2_4 { get; internal set; }
    internal ICoreWebView2_5 _nativeICoreWebView2_5 { get; internal set; }
    internal ICoreWebView2_6 _nativeICoreWebView2_6 { get; internal set; }
    internal ICoreWebView2_7 _nativeICoreWebView2_7 { get; internal set; }
    internal ICoreWebView2_8 _nativeICoreWebView2_8 { get; internal set; }
    internal ICoreWebView2_9 _nativeICoreWebView2_9 { get; internal set; }
    internal ICoreWebView2_10 _nativeICoreWebView2_10 { get; internal set; }
    internal ICoreWebView2_11 _nativeICoreWebView2_11 { get; internal set; }
    internal ICoreWebView2_12 _nativeICoreWebView2_12 { get; internal set; }
    internal ICoreWebView2_13 _nativeICoreWebView2_13 { get; internal set; }
    internal ICoreWebView2_14 _nativeICoreWebView2_14 { get; internal set; }
    internal ICoreWebView2_15 _nativeICoreWebView2_15 { get; internal set; }
    internal ICoreWebView2_16 _nativeICoreWebView2_16 { get; internal set; }
    internal ICoreWebView2_17 _nativeICoreWebView2_17 { get; internal set; }
    internal ICoreWebView2_18 _nativeICoreWebView2_18 { get; internal set; }
    internal ICoreWebView2_19 _nativeICoreWebView2_19 { get; internal set; }
    internal ICoreWebView2_20 _nativeICoreWebView2_20 { get; internal set; }
    internal ICoreWebView2_21 _nativeICoreWebView2_21 { get; internal set; }
    internal ICoreWebView2_22 _nativeICoreWebView2_22 { get; internal set; }
    internal ICoreWebView2_23 _nativeICoreWebView2_23 { get; internal set; }
    internal ICoreWebView2_24 _nativeICoreWebView2_24 { get; internal set; }
    internal ICoreWebView2_25 _nativeICoreWebView2_25 { get; internal set; }
    internal ICoreWebView2Experimental27 _nativeICoreWebView2Experimental27 { get; internal set; }
    internal ICoreWebView2Experimental9 _nativeICoreWebView2Experimental9 { get; internal set; }
    internal ICoreWebView2Experimental7 _nativeICoreWebView2Experimental7 { get; internal set; }
    internal ICoreWebView2Experimental24 _nativeICoreWebView2Experimental24 { get; internal set; }
    internal ICoreWebView2Experimental23 _nativeICoreWebView2Experimental23 { get; internal set; }
    internal ICoreWebView2Experimental22 _nativeICoreWebView2Experimental22 { get; internal set; }
    internal ICoreWebView2Experimental21 _nativeICoreWebView2Experimental21 { get; internal set; }
    internal ICoreWebView2Experimental19 _nativeICoreWebView2Experimental19 { get; internal set; }
    internal ICoreWebView2Experimental6 _nativeICoreWebView2Experimental6 { get; internal set; }
    internal ICoreWebView2Experimental26 _nativeICoreWebView2Experimental26 { get; internal set; }
    internal ICoreWebView2Experimental4 _nativeICoreWebView2Experimental4 { get; internal set; }
    internal ICoreWebView2Experimental3 _nativeICoreWebView2Experimental3 { get; internal set; }
    internal ICoreWebView2Experimental25 _nativeICoreWebView2Experimental25 { get; internal set; }
    internal ICoreWebView2Experimental20 _nativeICoreWebView2Experimental20 { get; internal set; }
    internal ICoreWebView2Experimental2 _nativeICoreWebView2Experimental2 { get; internal set; }
    internal ICoreWebView2Experimental18 _nativeICoreWebView2Experimental18 { get; internal set; }
    internal ICoreWebView2Experimental8 _nativeICoreWebView2Experimental8 { get; internal set; }
    internal ICoreWebView2Experimental5 _nativeICoreWebView2Experimental5 { get; internal set; }
    internal ICoreWebView2Experimental17 _nativeICoreWebView2Experimental17 { get; internal set; }
    internal ICoreWebView2Experimental16 _nativeICoreWebView2Experimental16 { get; internal set; }
    internal ICoreWebView2Experimental15 _nativeICoreWebView2Experimental15 { get; internal set; }
    internal ICoreWebView2Experimental14 _nativeICoreWebView2Experimental14 { get; internal set; }
    internal ICoreWebView2Experimental13 _nativeICoreWebView2Experimental13 { get; internal set; }
    internal ICoreWebView2Experimental12 _nativeICoreWebView2Experimental12 { get; internal set; }
    internal ICoreWebView2Experimental11 _nativeICoreWebView2Experimental11 { get; internal set; }
    internal ICoreWebView2Experimental10 _nativeICoreWebView2Experimental10 { get; internal set; }
    internal ICoreWebView2Experimental _nativeICoreWebView2Experimental { get; internal set; }
    internal ICoreWebView2PrivatePartial _nativeICoreWebView2PrivatePartial { get; internal set; }
    public CoreWebView2Settings Settings { get; }
    public string Source { get; }
    public UInt32 BrowserProcessId { get; }
    public bool CanGoBack { get; }
    public bool CanGoForward { get; }
    public string DocumentTitle { get; }
    public bool ContainsFullScreenElement { get; }
    public CoreWebView2CookieManager CookieManager { get; }
    public CoreWebView2Environment Environment { get; }
    public bool IsSuspended { get; }
    public bool IsMuted { get; public set; }
    public bool IsDocumentPlayingAudio { get; }
    public bool IsDefaultDownloadDialogOpen { get; }
    public CoreWebView2DefaultDownloadDialogCornerAlignment DefaultDownloadDialogCornerAlignment { get; public set; }
    public Point DefaultDownloadDialogMargin { get; public set; }
    public string StatusBarText { get; }
    public CoreWebView2Profile Profile { get; }
    public string FaviconUri { get; }
    public CoreWebView2MemoryUsageTargetLevel MemoryUsageTargetLevel { get; public set; }
    public UInt32 FrameId { get; }
    public string CustomDataPartitionId { get; public set; }
    internal CoreWebView2(object rawCoreWebView2);
    public static CoreWebView2 CreateFromComICoreWebView2(IntPtr value);
    public IntPtr GetComICoreWebView2();
    [AsyncStateMachineAttribute("Microsoft.Web.WebView2.Core.CoreWebView2/<PrintToPdfAsync>d__2")]
public Task`1<bool> PrintToPdfAsync(string ResultFilePath, CoreWebView2PrintSettings printSettings);
    public void AddWebResourceRequestedFilter(string uri, CoreWebView2WebResourceContext ResourceContext, CoreWebView2WebResourceRequestSourceKinds RequestSourceKinds);
    public void RemoveWebResourceRequestedFilter(string uri, CoreWebView2WebResourceContext ResourceContext, CoreWebView2WebResourceRequestSourceKinds RequestSourceKinds);
    public void PostWebMessageAsJson(string webMessageAsJson, List`1<object> additionalObjects);
    public void ShowPrintUI();
    internal ICoreWebView2 get__nativeICoreWebView2();
    internal void set__nativeICoreWebView2(ICoreWebView2 value);
    internal ICoreWebView2_2 get__nativeICoreWebView2_2();
    internal void set__nativeICoreWebView2_2(ICoreWebView2_2 value);
    internal ICoreWebView2_3 get__nativeICoreWebView2_3();
    internal void set__nativeICoreWebView2_3(ICoreWebView2_3 value);
    internal ICoreWebView2_4 get__nativeICoreWebView2_4();
    internal void set__nativeICoreWebView2_4(ICoreWebView2_4 value);
    internal ICoreWebView2_5 get__nativeICoreWebView2_5();
    internal void set__nativeICoreWebView2_5(ICoreWebView2_5 value);
    internal ICoreWebView2_6 get__nativeICoreWebView2_6();
    internal void set__nativeICoreWebView2_6(ICoreWebView2_6 value);
    internal ICoreWebView2_7 get__nativeICoreWebView2_7();
    internal void set__nativeICoreWebView2_7(ICoreWebView2_7 value);
    internal ICoreWebView2_8 get__nativeICoreWebView2_8();
    internal void set__nativeICoreWebView2_8(ICoreWebView2_8 value);
    internal ICoreWebView2_9 get__nativeICoreWebView2_9();
    internal void set__nativeICoreWebView2_9(ICoreWebView2_9 value);
    internal ICoreWebView2_10 get__nativeICoreWebView2_10();
    internal void set__nativeICoreWebView2_10(ICoreWebView2_10 value);
    internal ICoreWebView2_11 get__nativeICoreWebView2_11();
    internal void set__nativeICoreWebView2_11(ICoreWebView2_11 value);
    internal ICoreWebView2_12 get__nativeICoreWebView2_12();
    internal void set__nativeICoreWebView2_12(ICoreWebView2_12 value);
    internal ICoreWebView2_13 get__nativeICoreWebView2_13();
    internal void set__nativeICoreWebView2_13(ICoreWebView2_13 value);
    internal ICoreWebView2_14 get__nativeICoreWebView2_14();
    internal void set__nativeICoreWebView2_14(ICoreWebView2_14 value);
    internal ICoreWebView2_15 get__nativeICoreWebView2_15();
    internal void set__nativeICoreWebView2_15(ICoreWebView2_15 value);
    internal ICoreWebView2_16 get__nativeICoreWebView2_16();
    internal void set__nativeICoreWebView2_16(ICoreWebView2_16 value);
    internal ICoreWebView2_17 get__nativeICoreWebView2_17();
    internal void set__nativeICoreWebView2_17(ICoreWebView2_17 value);
    internal ICoreWebView2_18 get__nativeICoreWebView2_18();
    internal void set__nativeICoreWebView2_18(ICoreWebView2_18 value);
    internal ICoreWebView2_19 get__nativeICoreWebView2_19();
    internal void set__nativeICoreWebView2_19(ICoreWebView2_19 value);
    internal ICoreWebView2_20 get__nativeICoreWebView2_20();
    internal void set__nativeICoreWebView2_20(ICoreWebView2_20 value);
    internal ICoreWebView2_21 get__nativeICoreWebView2_21();
    internal void set__nativeICoreWebView2_21(ICoreWebView2_21 value);
    internal ICoreWebView2_22 get__nativeICoreWebView2_22();
    internal void set__nativeICoreWebView2_22(ICoreWebView2_22 value);
    internal ICoreWebView2_23 get__nativeICoreWebView2_23();
    internal void set__nativeICoreWebView2_23(ICoreWebView2_23 value);
    internal ICoreWebView2_24 get__nativeICoreWebView2_24();
    internal void set__nativeICoreWebView2_24(ICoreWebView2_24 value);
    internal ICoreWebView2_25 get__nativeICoreWebView2_25();
    internal void set__nativeICoreWebView2_25(ICoreWebView2_25 value);
    internal ICoreWebView2Experimental27 get__nativeICoreWebView2Experimental27();
    internal void set__nativeICoreWebView2Experimental27(ICoreWebView2Experimental27 value);
    internal ICoreWebView2Experimental9 get__nativeICoreWebView2Experimental9();
    internal void set__nativeICoreWebView2Experimental9(ICoreWebView2Experimental9 value);
    internal ICoreWebView2Experimental7 get__nativeICoreWebView2Experimental7();
    internal void set__nativeICoreWebView2Experimental7(ICoreWebView2Experimental7 value);
    internal ICoreWebView2Experimental24 get__nativeICoreWebView2Experimental24();
    internal void set__nativeICoreWebView2Experimental24(ICoreWebView2Experimental24 value);
    internal ICoreWebView2Experimental23 get__nativeICoreWebView2Experimental23();
    internal void set__nativeICoreWebView2Experimental23(ICoreWebView2Experimental23 value);
    internal ICoreWebView2Experimental22 get__nativeICoreWebView2Experimental22();
    internal void set__nativeICoreWebView2Experimental22(ICoreWebView2Experimental22 value);
    internal ICoreWebView2Experimental21 get__nativeICoreWebView2Experimental21();
    internal void set__nativeICoreWebView2Experimental21(ICoreWebView2Experimental21 value);
    internal ICoreWebView2Experimental19 get__nativeICoreWebView2Experimental19();
    internal void set__nativeICoreWebView2Experimental19(ICoreWebView2Experimental19 value);
    internal ICoreWebView2Experimental6 get__nativeICoreWebView2Experimental6();
    internal void set__nativeICoreWebView2Experimental6(ICoreWebView2Experimental6 value);
    internal ICoreWebView2Experimental26 get__nativeICoreWebView2Experimental26();
    internal void set__nativeICoreWebView2Experimental26(ICoreWebView2Experimental26 value);
    internal ICoreWebView2Experimental4 get__nativeICoreWebView2Experimental4();
    internal void set__nativeICoreWebView2Experimental4(ICoreWebView2Experimental4 value);
    internal ICoreWebView2Experimental3 get__nativeICoreWebView2Experimental3();
    internal void set__nativeICoreWebView2Experimental3(ICoreWebView2Experimental3 value);
    internal ICoreWebView2Experimental25 get__nativeICoreWebView2Experimental25();
    internal void set__nativeICoreWebView2Experimental25(ICoreWebView2Experimental25 value);
    internal ICoreWebView2Experimental20 get__nativeICoreWebView2Experimental20();
    internal void set__nativeICoreWebView2Experimental20(ICoreWebView2Experimental20 value);
    internal ICoreWebView2Experimental2 get__nativeICoreWebView2Experimental2();
    internal void set__nativeICoreWebView2Experimental2(ICoreWebView2Experimental2 value);
    internal ICoreWebView2Experimental18 get__nativeICoreWebView2Experimental18();
    internal void set__nativeICoreWebView2Experimental18(ICoreWebView2Experimental18 value);
    internal ICoreWebView2Experimental8 get__nativeICoreWebView2Experimental8();
    internal void set__nativeICoreWebView2Experimental8(ICoreWebView2Experimental8 value);
    internal ICoreWebView2Experimental5 get__nativeICoreWebView2Experimental5();
    internal void set__nativeICoreWebView2Experimental5(ICoreWebView2Experimental5 value);
    internal ICoreWebView2Experimental17 get__nativeICoreWebView2Experimental17();
    internal void set__nativeICoreWebView2Experimental17(ICoreWebView2Experimental17 value);
    internal ICoreWebView2Experimental16 get__nativeICoreWebView2Experimental16();
    internal void set__nativeICoreWebView2Experimental16(ICoreWebView2Experimental16 value);
    internal ICoreWebView2Experimental15 get__nativeICoreWebView2Experimental15();
    internal void set__nativeICoreWebView2Experimental15(ICoreWebView2Experimental15 value);
    internal ICoreWebView2Experimental14 get__nativeICoreWebView2Experimental14();
    internal void set__nativeICoreWebView2Experimental14(ICoreWebView2Experimental14 value);
    internal ICoreWebView2Experimental13 get__nativeICoreWebView2Experimental13();
    internal void set__nativeICoreWebView2Experimental13(ICoreWebView2Experimental13 value);
    internal ICoreWebView2Experimental12 get__nativeICoreWebView2Experimental12();
    internal void set__nativeICoreWebView2Experimental12(ICoreWebView2Experimental12 value);
    internal ICoreWebView2Experimental11 get__nativeICoreWebView2Experimental11();
    internal void set__nativeICoreWebView2Experimental11(ICoreWebView2Experimental11 value);
    internal ICoreWebView2Experimental10 get__nativeICoreWebView2Experimental10();
    internal void set__nativeICoreWebView2Experimental10(ICoreWebView2Experimental10 value);
    internal ICoreWebView2Experimental get__nativeICoreWebView2Experimental();
    internal void set__nativeICoreWebView2Experimental(ICoreWebView2Experimental value);
    internal ICoreWebView2PrivatePartial get__nativeICoreWebView2PrivatePartial();
    internal void set__nativeICoreWebView2PrivatePartial(ICoreWebView2PrivatePartial value);
    public CoreWebView2Settings get_Settings();
    public string get_Source();
    public UInt32 get_BrowserProcessId();
    public bool get_CanGoBack();
    public bool get_CanGoForward();
    public string get_DocumentTitle();
    public bool get_ContainsFullScreenElement();
    public void add_NavigationStarting(EventHandler`1<CoreWebView2NavigationStartingEventArgs> value);
    public void remove_NavigationStarting(EventHandler`1<CoreWebView2NavigationStartingEventArgs> value);
    internal void OnNavigationStarting(CoreWebView2NavigationStartingEventArgs args);
    public void add_ContentLoading(EventHandler`1<CoreWebView2ContentLoadingEventArgs> value);
    public void remove_ContentLoading(EventHandler`1<CoreWebView2ContentLoadingEventArgs> value);
    internal void OnContentLoading(CoreWebView2ContentLoadingEventArgs args);
    public void add_SourceChanged(EventHandler`1<CoreWebView2SourceChangedEventArgs> value);
    public void remove_SourceChanged(EventHandler`1<CoreWebView2SourceChangedEventArgs> value);
    internal void OnSourceChanged(CoreWebView2SourceChangedEventArgs args);
    public void add_HistoryChanged(EventHandler`1<object> value);
    public void remove_HistoryChanged(EventHandler`1<object> value);
    internal void OnHistoryChanged(object args);
    public void add_NavigationCompleted(EventHandler`1<CoreWebView2NavigationCompletedEventArgs> value);
    public void remove_NavigationCompleted(EventHandler`1<CoreWebView2NavigationCompletedEventArgs> value);
    internal void OnNavigationCompleted(CoreWebView2NavigationCompletedEventArgs args);
    public void add_FrameNavigationStarting(EventHandler`1<CoreWebView2NavigationStartingEventArgs> value);
    public void remove_FrameNavigationStarting(EventHandler`1<CoreWebView2NavigationStartingEventArgs> value);
    internal void OnFrameNavigationStarting(CoreWebView2NavigationStartingEventArgs args);
    public void add_FrameNavigationCompleted(EventHandler`1<CoreWebView2NavigationCompletedEventArgs> value);
    public void remove_FrameNavigationCompleted(EventHandler`1<CoreWebView2NavigationCompletedEventArgs> value);
    internal void OnFrameNavigationCompleted(CoreWebView2NavigationCompletedEventArgs args);
    public void add_ScriptDialogOpening(EventHandler`1<CoreWebView2ScriptDialogOpeningEventArgs> value);
    public void remove_ScriptDialogOpening(EventHandler`1<CoreWebView2ScriptDialogOpeningEventArgs> value);
    internal void OnScriptDialogOpening(CoreWebView2ScriptDialogOpeningEventArgs args);
    public void add_PermissionRequested(EventHandler`1<CoreWebView2PermissionRequestedEventArgs> value);
    public void remove_PermissionRequested(EventHandler`1<CoreWebView2PermissionRequestedEventArgs> value);
    internal void OnPermissionRequested(CoreWebView2PermissionRequestedEventArgs args);
    public void add_ProcessFailed(EventHandler`1<CoreWebView2ProcessFailedEventArgs> value);
    public void remove_ProcessFailed(EventHandler`1<CoreWebView2ProcessFailedEventArgs> value);
    internal void OnProcessFailed(CoreWebView2ProcessFailedEventArgs args);
    public void add_WebMessageReceived(EventHandler`1<CoreWebView2WebMessageReceivedEventArgs> value);
    public void remove_WebMessageReceived(EventHandler`1<CoreWebView2WebMessageReceivedEventArgs> value);
    internal void OnWebMessageReceived(CoreWebView2WebMessageReceivedEventArgs args);
    public void add_NewWindowRequested(EventHandler`1<CoreWebView2NewWindowRequestedEventArgs> value);
    public void remove_NewWindowRequested(EventHandler`1<CoreWebView2NewWindowRequestedEventArgs> value);
    internal void OnNewWindowRequested(CoreWebView2NewWindowRequestedEventArgs args);
    public void add_DocumentTitleChanged(EventHandler`1<object> value);
    public void remove_DocumentTitleChanged(EventHandler`1<object> value);
    internal void OnDocumentTitleChanged(object args);
    public void add_ContainsFullScreenElementChanged(EventHandler`1<object> value);
    public void remove_ContainsFullScreenElementChanged(EventHandler`1<object> value);
    internal void OnContainsFullScreenElementChanged(object args);
    public void add_WebResourceRequested(EventHandler`1<CoreWebView2WebResourceRequestedEventArgs> value);
    public void remove_WebResourceRequested(EventHandler`1<CoreWebView2WebResourceRequestedEventArgs> value);
    internal void OnWebResourceRequested(CoreWebView2WebResourceRequestedEventArgs args);
    public void add_WindowCloseRequested(EventHandler`1<object> value);
    public void remove_WindowCloseRequested(EventHandler`1<object> value);
    internal void OnWindowCloseRequested(object args);
    public void Navigate(string uri);
    public void NavigateToString(string htmlContent);
    [AsyncStateMachineAttribute("Microsoft.Web.WebView2.Core.CoreWebView2/<AddScriptToExecuteOnDocumentCreatedAsync>d__334")]
public Task`1<string> AddScriptToExecuteOnDocumentCreatedAsync(string javaScript);
    public void RemoveScriptToExecuteOnDocumentCreated(string id);
    [AsyncStateMachineAttribute("Microsoft.Web.WebView2.Core.CoreWebView2/<ExecuteScriptAsync>d__336")]
public Task`1<string> ExecuteScriptAsync(string javaScript);
    [AsyncStateMachineAttribute("Microsoft.Web.WebView2.Core.CoreWebView2/<CapturePreviewAsync>d__337")]
public Task CapturePreviewAsync(CoreWebView2CapturePreviewImageFormat imageFormat, Stream imageStream);
    public void Reload();
    public void PostWebMessageAsJson(string webMessageAsJson);
    public void PostWebMessageAsString(string webMessageAsString);
    [AsyncStateMachineAttribute("Microsoft.Web.WebView2.Core.CoreWebView2/<CallDevToolsProtocolMethodAsync>d__341")]
public Task`1<string> CallDevToolsProtocolMethodAsync(string methodName, string parametersAsJson);
    public void GoBack();
    public void GoForward();
    public CoreWebView2DevToolsProtocolEventReceiver GetDevToolsProtocolEventReceiver(string eventName);
    public void Stop();
    public void AddHostObjectToScript(string name, object rawObject);
    public void RemoveHostObjectFromScript(string name);
    public void OpenDevToolsWindow();
    public void AddWebResourceRequestedFilter(string uri, CoreWebView2WebResourceContext ResourceContext);
    public void RemoveWebResourceRequestedFilter(string uri, CoreWebView2WebResourceContext ResourceContext);
    public CoreWebView2CookieManager get_CookieManager();
    public CoreWebView2Environment get_Environment();
    public void add_WebResourceResponseReceived(EventHandler`1<CoreWebView2WebResourceResponseReceivedEventArgs> value);
    public void remove_WebResourceResponseReceived(EventHandler`1<CoreWebView2WebResourceResponseReceivedEventArgs> value);
    internal void OnWebResourceResponseReceived(CoreWebView2WebResourceResponseReceivedEventArgs args);
    public void add_DOMContentLoaded(EventHandler`1<CoreWebView2DOMContentLoadedEventArgs> value);
    public void remove_DOMContentLoaded(EventHandler`1<CoreWebView2DOMContentLoadedEventArgs> value);
    internal void OnDOMContentLoaded(CoreWebView2DOMContentLoadedEventArgs args);
    public void NavigateWithWebResourceRequest(CoreWebView2WebResourceRequest Request);
    public bool get_IsSuspended();
    [AsyncStateMachineAttribute("Microsoft.Web.WebView2.Core.CoreWebView2/<TrySuspendAsync>d__370")]
public Task`1<bool> TrySuspendAsync();
    public void Resume();
    public void SetVirtualHostNameToFolderMapping(string hostName, string folderPath, CoreWebView2HostResourceAccessKind accessKind);
    public void ClearVirtualHostNameToFolderMapping(string hostName);
    public void add_FrameCreated(EventHandler`1<CoreWebView2FrameCreatedEventArgs> value);
    public void remove_FrameCreated(EventHandler`1<CoreWebView2FrameCreatedEventArgs> value);
    internal void OnFrameCreated(CoreWebView2FrameCreatedEventArgs args);
    public void add_DownloadStarting(EventHandler`1<CoreWebView2DownloadStartingEventArgs> value);
    public void remove_DownloadStarting(EventHandler`1<CoreWebView2DownloadStartingEventArgs> value);
    internal void OnDownloadStarting(CoreWebView2DownloadStartingEventArgs args);
    public void add_ClientCertificateRequested(EventHandler`1<CoreWebView2ClientCertificateRequestedEventArgs> value);
    public void remove_ClientCertificateRequested(EventHandler`1<CoreWebView2ClientCertificateRequestedEventArgs> value);
    internal void OnClientCertificateRequested(CoreWebView2ClientCertificateRequestedEventArgs args);
    public void OpenTaskManagerWindow();
    public bool get_IsMuted();
    public void set_IsMuted(bool value);
    public bool get_IsDocumentPlayingAudio();
    public void add_IsMutedChanged(EventHandler`1<object> value);
    public void remove_IsMutedChanged(EventHandler`1<object> value);
    internal void OnIsMutedChanged(object args);
    public void add_IsDocumentPlayingAudioChanged(EventHandler`1<object> value);
    public void remove_IsDocumentPlayingAudioChanged(EventHandler`1<object> value);
    internal void OnIsDocumentPlayingAudioChanged(object args);
    public bool get_IsDefaultDownloadDialogOpen();
    public CoreWebView2DefaultDownloadDialogCornerAlignment get_DefaultDownloadDialogCornerAlignment();
    public void set_DefaultDownloadDialogCornerAlignment(CoreWebView2DefaultDownloadDialogCornerAlignment value);
    public Point get_DefaultDownloadDialogMargin();
    public void set_DefaultDownloadDialogMargin(Point value);
    public void add_IsDefaultDownloadDialogOpenChanged(EventHandler`1<object> value);
    public void remove_IsDefaultDownloadDialogOpenChanged(EventHandler`1<object> value);
    internal void OnIsDefaultDownloadDialogOpenChanged(object args);
    public void OpenDefaultDownloadDialog();
    public void CloseDefaultDownloadDialog();
    public void add_BasicAuthenticationRequested(EventHandler`1<CoreWebView2BasicAuthenticationRequestedEventArgs> value);
    public void remove_BasicAuthenticationRequested(EventHandler`1<CoreWebView2BasicAuthenticationRequestedEventArgs> value);
    internal void OnBasicAuthenticationRequested(CoreWebView2BasicAuthenticationRequestedEventArgs args);
    public void add_ContextMenuRequested(EventHandler`1<CoreWebView2ContextMenuRequestedEventArgs> value);
    public void remove_ContextMenuRequested(EventHandler`1<CoreWebView2ContextMenuRequestedEventArgs> value);
    internal void OnContextMenuRequested(CoreWebView2ContextMenuRequestedEventArgs args);
    [AsyncStateMachineAttribute("Microsoft.Web.WebView2.Core.CoreWebView2/<CallDevToolsProtocolMethodForSessionAsync>d__438")]
public Task`1<string> CallDevToolsProtocolMethodForSessionAsync(string sessionId, string methodName, string parametersAsJson);
    public string get_StatusBarText();
    public void add_StatusBarTextChanged(EventHandler`1<object> value);
    public void remove_StatusBarTextChanged(EventHandler`1<object> value);
    internal void OnStatusBarTextChanged(object args);
    public CoreWebView2Profile get_Profile();
    public void add_ServerCertificateErrorDetected(EventHandler`1<CoreWebView2ServerCertificateErrorDetectedEventArgs> value);
    public void remove_ServerCertificateErrorDetected(EventHandler`1<CoreWebView2ServerCertificateErrorDetectedEventArgs> value);
    internal void OnServerCertificateErrorDetected(CoreWebView2ServerCertificateErrorDetectedEventArgs args);
    [AsyncStateMachineAttribute("Microsoft.Web.WebView2.Core.CoreWebView2/<ClearServerCertificateErrorActionsAsync>d__455")]
public Task ClearServerCertificateErrorActionsAsync();
    public string get_FaviconUri();
    public void add_FaviconChanged(EventHandler`1<object> value);
    public void remove_FaviconChanged(EventHandler`1<object> value);
    internal void OnFaviconChanged(object args);
    [AsyncStateMachineAttribute("Microsoft.Web.WebView2.Core.CoreWebView2/<GetFaviconAsync>d__464")]
public Task`1<Stream> GetFaviconAsync(CoreWebView2FaviconImageFormat format);
    [AsyncStateMachineAttribute("Microsoft.Web.WebView2.Core.CoreWebView2/<PrintAsync>d__465")]
public Task`1<CoreWebView2PrintStatus> PrintAsync(CoreWebView2PrintSettings printSettings);
    public void ShowPrintUI(CoreWebView2PrintDialogKind printDialogKind);
    [AsyncStateMachineAttribute("Microsoft.Web.WebView2.Core.CoreWebView2/<PrintToPdfStreamAsync>d__467")]
public Task`1<Stream> PrintToPdfStreamAsync(CoreWebView2PrintSettings printSettings);
    public void PostSharedBufferToScript(CoreWebView2SharedBuffer sharedBuffer, CoreWebView2SharedBufferAccess access, string additionalDataAsJson);
    public void add_LaunchingExternalUriScheme(EventHandler`1<CoreWebView2LaunchingExternalUriSchemeEventArgs> value);
    public void remove_LaunchingExternalUriScheme(EventHandler`1<CoreWebView2LaunchingExternalUriSchemeEventArgs> value);
    internal void OnLaunchingExternalUriScheme(CoreWebView2LaunchingExternalUriSchemeEventArgs args);
    public CoreWebView2MemoryUsageTargetLevel get_MemoryUsageTargetLevel();
    public void set_MemoryUsageTargetLevel(CoreWebView2MemoryUsageTargetLevel value);
    public UInt32 get_FrameId();
    [AsyncStateMachineAttribute("Microsoft.Web.WebView2.Core.CoreWebView2/<ExecuteScriptWithResultAsync>d__480")]
public Task`1<CoreWebView2ExecuteScriptResult> ExecuteScriptWithResultAsync(string javaScript);
    public void add_NotificationReceived(EventHandler`1<CoreWebView2NotificationReceivedEventArgs> value);
    public void remove_NotificationReceived(EventHandler`1<CoreWebView2NotificationReceivedEventArgs> value);
    internal void OnNotificationReceived(CoreWebView2NotificationReceivedEventArgs args);
    public void add_SaveAsUIShowing(EventHandler`1<CoreWebView2SaveAsUIShowingEventArgs> value);
    public void remove_SaveAsUIShowing(EventHandler`1<CoreWebView2SaveAsUIShowingEventArgs> value);
    internal void OnSaveAsUIShowing(CoreWebView2SaveAsUIShowingEventArgs args);
    [AsyncStateMachineAttribute("Microsoft.Web.WebView2.Core.CoreWebView2/<ShowSaveAsUIAsync>d__493")]
public Task`1<CoreWebView2SaveAsUIResult> ShowSaveAsUIAsync();
    public void add_SaveFileSecurityCheckStarting(EventHandler`1<CoreWebView2SaveFileSecurityCheckStartingEventArgs> value);
    public void remove_SaveFileSecurityCheckStarting(EventHandler`1<CoreWebView2SaveFileSecurityCheckStartingEventArgs> value);
    internal void OnSaveFileSecurityCheckStarting(CoreWebView2SaveFileSecurityCheckStartingEventArgs args);
    public void add_ScreenCaptureStarting(EventHandler`1<CoreWebView2ScreenCaptureStartingEventArgs> value);
    public void remove_ScreenCaptureStarting(EventHandler`1<CoreWebView2ScreenCaptureStartingEventArgs> value);
    internal void OnScreenCaptureStarting(CoreWebView2ScreenCaptureStartingEventArgs args);
    public string get_CustomDataPartitionId();
    public void set_CustomDataPartitionId(string value);
    internal void AddHostObjectHelper(CoreWebView2PrivateHostObjectHelper helper);
}
public class Microsoft.Web.WebView2.Core.CoreWebView2AcceleratorKeyPressedEventArgs : EventArgs {
    internal ICoreWebView2AcceleratorKeyPressedEventArgs _nativeICoreWebView2AcceleratorKeyPressedEventArgsValue;
    internal ICoreWebView2AcceleratorKeyPressedEventArgs2 _nativeICoreWebView2AcceleratorKeyPressedEventArgs2Value;
    internal object _rawNative;
    internal ICoreWebView2AcceleratorKeyPressedEventArgs _nativeICoreWebView2AcceleratorKeyPressedEventArgs { get; internal set; }
    internal ICoreWebView2AcceleratorKeyPressedEventArgs2 _nativeICoreWebView2AcceleratorKeyPressedEventArgs2 { get; internal set; }
    public CoreWebView2KeyEventKind KeyEventKind { get; }
    public UInt32 VirtualKey { get; }
    public int KeyEventLParam { get; }
    public CoreWebView2PhysicalKeyStatus PhysicalKeyStatus { get; }
    public bool Handled { get; public set; }
    public bool IsBrowserAcceleratorKeyEnabled { get; public set; }
    internal CoreWebView2AcceleratorKeyPressedEventArgs(object rawCoreWebView2AcceleratorKeyPressedEventArgs);
    internal ICoreWebView2AcceleratorKeyPressedEventArgs get__nativeICoreWebView2AcceleratorKeyPressedEventArgs();
    internal void set__nativeICoreWebView2AcceleratorKeyPressedEventArgs(ICoreWebView2AcceleratorKeyPressedEventArgs value);
    internal ICoreWebView2AcceleratorKeyPressedEventArgs2 get__nativeICoreWebView2AcceleratorKeyPressedEventArgs2();
    internal void set__nativeICoreWebView2AcceleratorKeyPressedEventArgs2(ICoreWebView2AcceleratorKeyPressedEventArgs2 value);
    public CoreWebView2KeyEventKind get_KeyEventKind();
    public UInt32 get_VirtualKey();
    public int get_KeyEventLParam();
    public CoreWebView2PhysicalKeyStatus get_PhysicalKeyStatus();
    public bool get_Handled();
    public void set_Handled(bool value);
    public bool get_IsBrowserAcceleratorKeyEnabled();
    public void set_IsBrowserAcceleratorKeyEnabled(bool value);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2AcceleratorKeyPressedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2AcceleratorKeyPressedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2Controller source, ICoreWebView2AcceleratorKeyPressedEventArgs args);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandler : object {
    [CompilerGeneratedAttribute]
private string <result>k__BackingField;
    [CompilerGeneratedAttribute]
private int <errCode>k__BackingField;
    private Action continuation;
    [CompilerGeneratedAttribute]
private bool <IsCompleted>k__BackingField;
    public string result { get; private set; }
    public int errCode { get; private set; }
    public bool IsCompleted { get; private set; }
    [CompilerGeneratedAttribute]
public string get_result();
    [CompilerGeneratedAttribute]
private void set_result(string value);
    [CompilerGeneratedAttribute]
public int get_errCode();
    [CompilerGeneratedAttribute]
private void set_errCode(int value);
    public sealed virtual void Invoke(int errCode, string result);
    public CoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandler GetAwaiter();
    [CompilerGeneratedAttribute]
public bool get_IsCompleted();
    [CompilerGeneratedAttribute]
private void set_IsCompleted(bool value);
    public sealed virtual void OnCompleted(Action continuation);
    public string GetResult();
}
public class Microsoft.Web.WebView2.Core.CoreWebView2BasicAuthenticationRequestedEventArgs : EventArgs {
    internal ICoreWebView2BasicAuthenticationRequestedEventArgs _nativeICoreWebView2BasicAuthenticationRequestedEventArgsValue;
    internal object _rawNative;
    internal ICoreWebView2BasicAuthenticationRequestedEventArgs _nativeICoreWebView2BasicAuthenticationRequestedEventArgs { get; internal set; }
    public string Uri { get; }
    public string Challenge { get; }
    public CoreWebView2BasicAuthenticationResponse Response { get; }
    public bool Cancel { get; public set; }
    internal CoreWebView2BasicAuthenticationRequestedEventArgs(object rawCoreWebView2BasicAuthenticationRequestedEventArgs);
    internal ICoreWebView2BasicAuthenticationRequestedEventArgs get__nativeICoreWebView2BasicAuthenticationRequestedEventArgs();
    internal void set__nativeICoreWebView2BasicAuthenticationRequestedEventArgs(ICoreWebView2BasicAuthenticationRequestedEventArgs value);
    public string get_Uri();
    public string get_Challenge();
    public CoreWebView2BasicAuthenticationResponse get_Response();
    public bool get_Cancel();
    public void set_Cancel(bool value);
    public CoreWebView2Deferral GetDeferral();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2BasicAuthenticationRequestedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2BasicAuthenticationRequestedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2 source, ICoreWebView2BasicAuthenticationRequestedEventArgs args);
}
public class Microsoft.Web.WebView2.Core.CoreWebView2BasicAuthenticationResponse : object {
    internal ICoreWebView2BasicAuthenticationResponse _nativeICoreWebView2BasicAuthenticationResponseValue;
    internal object _rawNative;
    internal ICoreWebView2BasicAuthenticationResponse _nativeICoreWebView2BasicAuthenticationResponse { get; internal set; }
    public string UserName { get; public set; }
    public string Password { get; public set; }
    internal CoreWebView2BasicAuthenticationResponse(object rawCoreWebView2BasicAuthenticationResponse);
    internal ICoreWebView2BasicAuthenticationResponse get__nativeICoreWebView2BasicAuthenticationResponse();
    internal void set__nativeICoreWebView2BasicAuthenticationResponse(ICoreWebView2BasicAuthenticationResponse value);
    public string get_UserName();
    public void set_UserName(string value);
    public string get_Password();
    public void set_Password(string value);
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2BoundsMode : Enum {
    public int value__;
    public static CoreWebView2BoundsMode UseRawPixels;
    public static CoreWebView2BoundsMode UseRasterizationScale;
}
public class Microsoft.Web.WebView2.Core.CoreWebView2BrowserExtension : object {
    internal ICoreWebView2BrowserExtension _nativeICoreWebView2BrowserExtensionValue;
    internal object _rawNative;
    internal ICoreWebView2BrowserExtension _nativeICoreWebView2BrowserExtension { get; internal set; }
    public string Id { get; }
    public string Name { get; }
    public bool IsEnabled { get; }
    internal CoreWebView2BrowserExtension(object rawCoreWebView2BrowserExtension);
    internal ICoreWebView2BrowserExtension get__nativeICoreWebView2BrowserExtension();
    internal void set__nativeICoreWebView2BrowserExtension(ICoreWebView2BrowserExtension value);
    public string get_Id();
    public string get_Name();
    public bool get_IsEnabled();
    [AsyncStateMachineAttribute("Microsoft.Web.WebView2.Core.CoreWebView2BrowserExtension/<RemoveAsync>d__13")]
public Task RemoveAsync();
    [AsyncStateMachineAttribute("Microsoft.Web.WebView2.Core.CoreWebView2BrowserExtension/<EnableAsync>d__14")]
public Task EnableAsync(bool IsEnabled);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2BrowserExtensionEnableCompletedHandler : object {
    [CompilerGeneratedAttribute]
private int <errCode>k__BackingField;
    private Action continuation;
    [CompilerGeneratedAttribute]
private bool <IsCompleted>k__BackingField;
    public int errCode { get; private set; }
    public bool IsCompleted { get; private set; }
    [CompilerGeneratedAttribute]
public int get_errCode();
    [CompilerGeneratedAttribute]
private void set_errCode(int value);
    public sealed virtual void Invoke(int errCode);
    public CoreWebView2BrowserExtensionEnableCompletedHandler GetAwaiter();
    [CompilerGeneratedAttribute]
public bool get_IsCompleted();
    [CompilerGeneratedAttribute]
private void set_IsCompleted(bool value);
    public sealed virtual void OnCompleted(Action continuation);
    public void GetResult();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2BrowserExtensionRemoveCompletedHandler : object {
    [CompilerGeneratedAttribute]
private int <errCode>k__BackingField;
    private Action continuation;
    [CompilerGeneratedAttribute]
private bool <IsCompleted>k__BackingField;
    public int errCode { get; private set; }
    public bool IsCompleted { get; private set; }
    [CompilerGeneratedAttribute]
public int get_errCode();
    [CompilerGeneratedAttribute]
private void set_errCode(int value);
    public sealed virtual void Invoke(int errCode);
    public CoreWebView2BrowserExtensionRemoveCompletedHandler GetAwaiter();
    [CompilerGeneratedAttribute]
public bool get_IsCompleted();
    [CompilerGeneratedAttribute]
private void set_IsCompleted(bool value);
    public sealed virtual void OnCompleted(Action continuation);
    public void GetResult();
}
public class Microsoft.Web.WebView2.Core.CoreWebView2BrowserProcessExitedEventArgs : EventArgs {
    internal ICoreWebView2BrowserProcessExitedEventArgs _nativeICoreWebView2BrowserProcessExitedEventArgsValue;
    internal object _rawNative;
    internal ICoreWebView2BrowserProcessExitedEventArgs _nativeICoreWebView2BrowserProcessExitedEventArgs { get; internal set; }
    public CoreWebView2BrowserProcessExitKind BrowserProcessExitKind { get; }
    public UInt32 BrowserProcessId { get; }
    internal CoreWebView2BrowserProcessExitedEventArgs(object rawCoreWebView2BrowserProcessExitedEventArgs);
    internal ICoreWebView2BrowserProcessExitedEventArgs get__nativeICoreWebView2BrowserProcessExitedEventArgs();
    internal void set__nativeICoreWebView2BrowserProcessExitedEventArgs(ICoreWebView2BrowserProcessExitedEventArgs value);
    public CoreWebView2BrowserProcessExitKind get_BrowserProcessExitKind();
    public UInt32 get_BrowserProcessId();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2BrowserProcessExitedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2BrowserProcessExitedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2Environment source, ICoreWebView2BrowserProcessExitedEventArgs args);
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2BrowserProcessExitKind : Enum {
    public int value__;
    public static CoreWebView2BrowserProcessExitKind Normal;
    public static CoreWebView2BrowserProcessExitKind Failed;
}
[FlagsAttribute]
public enum Microsoft.Web.WebView2.Core.CoreWebView2BrowsingDataKinds : Enum {
    public int value__;
    public static CoreWebView2BrowsingDataKinds FileSystems;
    public static CoreWebView2BrowsingDataKinds IndexedDb;
    public static CoreWebView2BrowsingDataKinds LocalStorage;
    public static CoreWebView2BrowsingDataKinds WebSql;
    public static CoreWebView2BrowsingDataKinds CacheStorage;
    public static CoreWebView2BrowsingDataKinds AllDomStorage;
    public static CoreWebView2BrowsingDataKinds Cookies;
    public static CoreWebView2BrowsingDataKinds AllSite;
    public static CoreWebView2BrowsingDataKinds DiskCache;
    public static CoreWebView2BrowsingDataKinds DownloadHistory;
    public static CoreWebView2BrowsingDataKinds GeneralAutofill;
    public static CoreWebView2BrowsingDataKinds PasswordAutosave;
    public static CoreWebView2BrowsingDataKinds BrowsingHistory;
    public static CoreWebView2BrowsingDataKinds Settings;
    public static CoreWebView2BrowsingDataKinds AllProfile;
    public static CoreWebView2BrowsingDataKinds ServiceWorkers;
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2BytesReceivedChangedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2BytesReceivedChangedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2DownloadOperation source, object args);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2CallDevToolsProtocolMethodCompletedHandler : object {
    [CompilerGeneratedAttribute]
private string <result>k__BackingField;
    [CompilerGeneratedAttribute]
private int <errCode>k__BackingField;
    private Action continuation;
    [CompilerGeneratedAttribute]
private bool <IsCompleted>k__BackingField;
    public string result { get; private set; }
    public int errCode { get; private set; }
    public bool IsCompleted { get; private set; }
    [CompilerGeneratedAttribute]
public string get_result();
    [CompilerGeneratedAttribute]
private void set_result(string value);
    [CompilerGeneratedAttribute]
public int get_errCode();
    [CompilerGeneratedAttribute]
private void set_errCode(int value);
    public sealed virtual void Invoke(int errCode, string result);
    public CoreWebView2CallDevToolsProtocolMethodCompletedHandler GetAwaiter();
    [CompilerGeneratedAttribute]
public bool get_IsCompleted();
    [CompilerGeneratedAttribute]
private void set_IsCompleted(bool value);
    public sealed virtual void OnCompleted(Action continuation);
    public string GetResult();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2CapturePreviewCompletedHandler : object {
    [CompilerGeneratedAttribute]
private int <errCode>k__BackingField;
    private Action continuation;
    [CompilerGeneratedAttribute]
private bool <IsCompleted>k__BackingField;
    public int errCode { get; private set; }
    public bool IsCompleted { get; private set; }
    [CompilerGeneratedAttribute]
public int get_errCode();
    [CompilerGeneratedAttribute]
private void set_errCode(int value);
    public sealed virtual void Invoke(int errCode);
    public CoreWebView2CapturePreviewCompletedHandler GetAwaiter();
    [CompilerGeneratedAttribute]
public bool get_IsCompleted();
    [CompilerGeneratedAttribute]
private void set_IsCompleted(bool value);
    public sealed virtual void OnCompleted(Action continuation);
    public void GetResult();
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2CapturePreviewImageFormat : Enum {
    public int value__;
    public static CoreWebView2CapturePreviewImageFormat Png;
    public static CoreWebView2CapturePreviewImageFormat Jpeg;
}
public class Microsoft.Web.WebView2.Core.CoreWebView2Certificate : object {
    private static DateTime _unixEpoch;
    internal ICoreWebView2Certificate _nativeICoreWebView2CertificateValue;
    internal object _rawNative;
    public DateTime ValidFrom { get; }
    public DateTime ValidTo { get; }
    internal ICoreWebView2Certificate _nativeICoreWebView2Certificate { get; internal set; }
    public string Subject { get; }
    public string Issuer { get; }
    public string DerEncodedSerialNumber { get; }
    public string DisplayName { get; }
    public IReadOnlyList`1<string> PemEncodedIssuerCertificateChain { get; }
    internal CoreWebView2Certificate(object rawCoreWebView2Certificate);
    private static CoreWebView2Certificate();
    public X509Certificate2 ToX509Certificate2();
    public DateTime get_ValidFrom();
    public DateTime get_ValidTo();
    private DateTime SecondsSinceUnixEpochToDateTime(double seconds);
    internal ICoreWebView2Certificate get__nativeICoreWebView2Certificate();
    internal void set__nativeICoreWebView2Certificate(ICoreWebView2Certificate value);
    public string get_Subject();
    public string get_Issuer();
    public string get_DerEncodedSerialNumber();
    public string get_DisplayName();
    public IReadOnlyList`1<string> get_PemEncodedIssuerCertificateChain();
    public string ToPemEncoding();
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2ChannelSearchKind : Enum {
    public int value__;
    public static CoreWebView2ChannelSearchKind MostStable;
    public static CoreWebView2ChannelSearchKind LeastStable;
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2ClearBrowsingDataCompletedHandler : object {
    [CompilerGeneratedAttribute]
private int <errCode>k__BackingField;
    private Action continuation;
    [CompilerGeneratedAttribute]
private bool <IsCompleted>k__BackingField;
    public int errCode { get; private set; }
    public bool IsCompleted { get; private set; }
    [CompilerGeneratedAttribute]
public int get_errCode();
    [CompilerGeneratedAttribute]
private void set_errCode(int value);
    public sealed virtual void Invoke(int errCode);
    public CoreWebView2ClearBrowsingDataCompletedHandler GetAwaiter();
    [CompilerGeneratedAttribute]
public bool get_IsCompleted();
    [CompilerGeneratedAttribute]
private void set_IsCompleted(bool value);
    public sealed virtual void OnCompleted(Action continuation);
    public void GetResult();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2ClearCustomDataPartitionCompletedHandler : object {
    [CompilerGeneratedAttribute]
private int <errCode>k__BackingField;
    private Action continuation;
    [CompilerGeneratedAttribute]
private bool <IsCompleted>k__BackingField;
    public int errCode { get; private set; }
    public bool IsCompleted { get; private set; }
    [CompilerGeneratedAttribute]
public int get_errCode();
    [CompilerGeneratedAttribute]
private void set_errCode(int value);
    public sealed virtual void Invoke(int errCode);
    public CoreWebView2ClearCustomDataPartitionCompletedHandler GetAwaiter();
    [CompilerGeneratedAttribute]
public bool get_IsCompleted();
    [CompilerGeneratedAttribute]
private void set_IsCompleted(bool value);
    public sealed virtual void OnCompleted(Action continuation);
    public void GetResult();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2ClearServerCertificateErrorActionsCompletedHandler : object {
    [CompilerGeneratedAttribute]
private int <errCode>k__BackingField;
    private Action continuation;
    [CompilerGeneratedAttribute]
private bool <IsCompleted>k__BackingField;
    public int errCode { get; private set; }
    public bool IsCompleted { get; private set; }
    [CompilerGeneratedAttribute]
public int get_errCode();
    [CompilerGeneratedAttribute]
private void set_errCode(int value);
    public sealed virtual void Invoke(int errCode);
    public CoreWebView2ClearServerCertificateErrorActionsCompletedHandler GetAwaiter();
    [CompilerGeneratedAttribute]
public bool get_IsCompleted();
    [CompilerGeneratedAttribute]
private void set_IsCompleted(bool value);
    public sealed virtual void OnCompleted(Action continuation);
    public void GetResult();
}
public class Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificate : object {
    private static DateTime _unixEpoch;
    internal ICoreWebView2ClientCertificate _nativeICoreWebView2ClientCertificateValue;
    internal object _rawNative;
    public DateTime ValidFrom { get; }
    public DateTime ValidTo { get; }
    internal ICoreWebView2ClientCertificate _nativeICoreWebView2ClientCertificate { get; internal set; }
    public string Subject { get; }
    public string Issuer { get; }
    public string DerEncodedSerialNumber { get; }
    public string DisplayName { get; }
    public IReadOnlyList`1<string> PemEncodedIssuerCertificateChain { get; }
    public CoreWebView2ClientCertificateKind Kind { get; }
    internal CoreWebView2ClientCertificate(object rawCoreWebView2ClientCertificate);
    private static CoreWebView2ClientCertificate();
    public X509Certificate2 ToX509Certificate2();
    public DateTime get_ValidFrom();
    public DateTime get_ValidTo();
    private DateTime SecondsSinceUnixEpochToDateTime(double seconds);
    internal ICoreWebView2ClientCertificate get__nativeICoreWebView2ClientCertificate();
    internal void set__nativeICoreWebView2ClientCertificate(ICoreWebView2ClientCertificate value);
    public string get_Subject();
    public string get_Issuer();
    public string get_DerEncodedSerialNumber();
    public string get_DisplayName();
    public IReadOnlyList`1<string> get_PemEncodedIssuerCertificateChain();
    public CoreWebView2ClientCertificateKind get_Kind();
    public string ToPemEncoding();
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificateKind : Enum {
    public int value__;
    public static CoreWebView2ClientCertificateKind SmartCard;
    public static CoreWebView2ClientCertificateKind Pin;
    public static CoreWebView2ClientCertificateKind Other;
}
public class Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificateRequestedEventArgs : EventArgs {
    internal ICoreWebView2ClientCertificateRequestedEventArgs _nativeICoreWebView2ClientCertificateRequestedEventArgsValue;
    internal object _rawNative;
    internal ICoreWebView2ClientCertificateRequestedEventArgs _nativeICoreWebView2ClientCertificateRequestedEventArgs { get; internal set; }
    public string Host { get; }
    public int Port { get; }
    public bool IsProxy { get; }
    public IReadOnlyList`1<string> AllowedCertificateAuthorities { get; }
    public IReadOnlyList`1<CoreWebView2ClientCertificate> MutuallyTrustedCertificates { get; }
    public CoreWebView2ClientCertificate SelectedCertificate { get; public set; }
    public bool Cancel { get; public set; }
    public bool Handled { get; public set; }
    internal CoreWebView2ClientCertificateRequestedEventArgs(object rawCoreWebView2ClientCertificateRequestedEventArgs);
    internal ICoreWebView2ClientCertificateRequestedEventArgs get__nativeICoreWebView2ClientCertificateRequestedEventArgs();
    internal void set__nativeICoreWebView2ClientCertificateRequestedEventArgs(ICoreWebView2ClientCertificateRequestedEventArgs value);
    public string get_Host();
    public int get_Port();
    public bool get_IsProxy();
    public IReadOnlyList`1<string> get_AllowedCertificateAuthorities();
    public IReadOnlyList`1<CoreWebView2ClientCertificate> get_MutuallyTrustedCertificates();
    public CoreWebView2ClientCertificate get_SelectedCertificate();
    public void set_SelectedCertificate(CoreWebView2ClientCertificate value);
    public bool get_Cancel();
    public void set_Cancel(bool value);
    public bool get_Handled();
    public void set_Handled(bool value);
    public CoreWebView2Deferral GetDeferral();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificateRequestedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2ClientCertificateRequestedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2 source, ICoreWebView2ClientCertificateRequestedEventArgs args);
}
public class Microsoft.Web.WebView2.Core.CoreWebView2Color : ValueType {
    public byte A;
    public byte R;
    public byte G;
    public byte B;
    internal CoreWebView2Color(COREWEBVIEW2_COLOR rawStruct);
}
public class Microsoft.Web.WebView2.Core.CoreWebView2CompositionController : CoreWebView2Controller {
    internal ICoreWebView2CompositionController _nativeICoreWebView2CompositionControllerValue;
    internal ICoreWebView2CompositionController2 _nativeICoreWebView2CompositionController2Value;
    internal ICoreWebView2CompositionController3 _nativeICoreWebView2CompositionController3Value;
    internal ICoreWebView2CompositionController4 _nativeICoreWebView2CompositionController4Value;
    internal ICoreWebView2ExperimentalCompositionController5 _nativeICoreWebView2ExperimentalCompositionController5Value;
    internal ICoreWebView2ExperimentalCompositionController4 _nativeICoreWebView2ExperimentalCompositionController4Value;
    internal ICoreWebView2ExperimentalCompositionController3 _nativeICoreWebView2ExperimentalCompositionController3Value;
    private EventRegistrationToken _cursorChangedToken;
    private EventHandler`1<object> cursorChanged;
    private EventRegistrationToken _nonClientRegionChangedToken;
    private EventHandler`1<CoreWebView2NonClientRegionChangedEventArgs> nonClientRegionChanged;
    internal ICoreWebView2CompositionController _nativeICoreWebView2CompositionController { get; internal set; }
    internal ICoreWebView2CompositionController2 _nativeICoreWebView2CompositionController2 { get; internal set; }
    internal ICoreWebView2CompositionController3 _nativeICoreWebView2CompositionController3 { get; internal set; }
    internal ICoreWebView2CompositionController4 _nativeICoreWebView2CompositionController4 { get; internal set; }
    internal ICoreWebView2ExperimentalCompositionController5 _nativeICoreWebView2ExperimentalCompositionController5 { get; internal set; }
    internal ICoreWebView2ExperimentalCompositionController4 _nativeICoreWebView2ExperimentalCompositionController4 { get; internal set; }
    internal ICoreWebView2ExperimentalCompositionController3 _nativeICoreWebView2ExperimentalCompositionController3 { get; internal set; }
    public object RootVisualTarget { get; public set; }
    public IntPtr Cursor { get; }
    public UInt32 SystemCursorId { get; }
    internal CoreWebView2CompositionController(object rawCoreWebView2CompositionController);
    internal ICoreWebView2CompositionController get__nativeICoreWebView2CompositionController();
    internal void set__nativeICoreWebView2CompositionController(ICoreWebView2CompositionController value);
    internal ICoreWebView2CompositionController2 get__nativeICoreWebView2CompositionController2();
    internal void set__nativeICoreWebView2CompositionController2(ICoreWebView2CompositionController2 value);
    internal ICoreWebView2CompositionController3 get__nativeICoreWebView2CompositionController3();
    internal void set__nativeICoreWebView2CompositionController3(ICoreWebView2CompositionController3 value);
    internal ICoreWebView2CompositionController4 get__nativeICoreWebView2CompositionController4();
    internal void set__nativeICoreWebView2CompositionController4(ICoreWebView2CompositionController4 value);
    internal ICoreWebView2ExperimentalCompositionController5 get__nativeICoreWebView2ExperimentalCompositionController5();
    internal void set__nativeICoreWebView2ExperimentalCompositionController5(ICoreWebView2ExperimentalCompositionController5 value);
    internal ICoreWebView2ExperimentalCompositionController4 get__nativeICoreWebView2ExperimentalCompositionController4();
    internal void set__nativeICoreWebView2ExperimentalCompositionController4(ICoreWebView2ExperimentalCompositionController4 value);
    internal ICoreWebView2ExperimentalCompositionController3 get__nativeICoreWebView2ExperimentalCompositionController3();
    internal void set__nativeICoreWebView2ExperimentalCompositionController3(ICoreWebView2ExperimentalCompositionController3 value);
    public object get_RootVisualTarget();
    public void set_RootVisualTarget(object value);
    public IntPtr get_Cursor();
    public UInt32 get_SystemCursorId();
    public void add_CursorChanged(EventHandler`1<object> value);
    public void remove_CursorChanged(EventHandler`1<object> value);
    internal void OnCursorChanged(object args);
    public void SendMouseInput(CoreWebView2MouseEventKind eventKind, CoreWebView2MouseEventVirtualKeys virtualKeys, UInt32 mouseData, Point point);
    public void SendPointerInput(CoreWebView2PointerEventKind eventKind, CoreWebView2PointerInfo pointerInfo);
    public void DragLeave();
    public void add_NonClientRegionChanged(EventHandler`1<CoreWebView2NonClientRegionChangedEventArgs> value);
    public void remove_NonClientRegionChanged(EventHandler`1<CoreWebView2NonClientRegionChangedEventArgs> value);
    internal void OnNonClientRegionChanged(CoreWebView2NonClientRegionChangedEventArgs args);
    public CoreWebView2NonClientRegionKind GetNonClientRegionAtPoint(Point point);
    public IReadOnlyList`1<Rectangle> QueryNonClientRegion(CoreWebView2NonClientRegionKind Kind);
    public CoreWebView2PointerInfo CreateCoreWebView2PointerInfoFromPointerId(UInt32 PointerId, IntPtr ParentWindow, Matrix4x4 transform);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2ContainsFullScreenElementChangedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2ContainsFullScreenElementChangedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2 source, object args);
}
public class Microsoft.Web.WebView2.Core.CoreWebView2ContentLoadingEventArgs : EventArgs {
    internal ICoreWebView2ContentLoadingEventArgs _nativeICoreWebView2ContentLoadingEventArgsValue;
    internal object _rawNative;
    internal ICoreWebView2ContentLoadingEventArgs _nativeICoreWebView2ContentLoadingEventArgs { get; internal set; }
    public bool IsErrorPage { get; }
    public ulong NavigationId { get; }
    internal CoreWebView2ContentLoadingEventArgs(object rawCoreWebView2ContentLoadingEventArgs);
    internal ICoreWebView2ContentLoadingEventArgs get__nativeICoreWebView2ContentLoadingEventArgs();
    internal void set__nativeICoreWebView2ContentLoadingEventArgs(ICoreWebView2ContentLoadingEventArgs value);
    public bool get_IsErrorPage();
    public ulong get_NavigationId();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2ContentLoadingEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2ContentLoadingEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2 source, ICoreWebView2ContentLoadingEventArgs args);
}
public class Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuItem : object {
    internal ICoreWebView2ContextMenuItem _nativeICoreWebView2ContextMenuItemValue;
    internal object _rawNative;
    private EventRegistrationToken _customItemSelectedToken;
    private EventHandler`1<object> customItemSelected;
    internal ICoreWebView2ContextMenuItem _nativeICoreWebView2ContextMenuItem { get; internal set; }
    public string Name { get; }
    public string Label { get; }
    public int CommandId { get; }
    public string ShortcutKeyDescription { get; }
    public Stream Icon { get; }
    public CoreWebView2ContextMenuItemKind Kind { get; }
    public bool IsEnabled { get; public set; }
    public bool IsChecked { get; public set; }
    public IList`1<CoreWebView2ContextMenuItem> Children { get; }
    internal CoreWebView2ContextMenuItem(object rawCoreWebView2ContextMenuItem);
    internal ICoreWebView2ContextMenuItem get__nativeICoreWebView2ContextMenuItem();
    internal void set__nativeICoreWebView2ContextMenuItem(ICoreWebView2ContextMenuItem value);
    public string get_Name();
    public string get_Label();
    public int get_CommandId();
    public string get_ShortcutKeyDescription();
    public Stream get_Icon();
    public CoreWebView2ContextMenuItemKind get_Kind();
    public bool get_IsEnabled();
    public void set_IsEnabled(bool value);
    public bool get_IsChecked();
    public void set_IsChecked(bool value);
    public IList`1<CoreWebView2ContextMenuItem> get_Children();
    public void add_CustomItemSelected(EventHandler`1<object> value);
    public void remove_CustomItemSelected(EventHandler`1<object> value);
    internal void OnCustomItemSelected(object args);
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuItemKind : Enum {
    public int value__;
    public static CoreWebView2ContextMenuItemKind Command;
    public static CoreWebView2ContextMenuItemKind CheckBox;
    public static CoreWebView2ContextMenuItemKind Radio;
    public static CoreWebView2ContextMenuItemKind Separator;
    public static CoreWebView2ContextMenuItemKind Submenu;
}
public class Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuRequestedEventArgs : EventArgs {
    internal ICoreWebView2ContextMenuRequestedEventArgs _nativeICoreWebView2ContextMenuRequestedEventArgsValue;
    internal object _rawNative;
    internal ICoreWebView2ContextMenuRequestedEventArgs _nativeICoreWebView2ContextMenuRequestedEventArgs { get; internal set; }
    public IList`1<CoreWebView2ContextMenuItem> MenuItems { get; }
    public CoreWebView2ContextMenuTarget ContextMenuTarget { get; }
    public Point Location { get; }
    public int SelectedCommandId { get; public set; }
    public bool Handled { get; public set; }
    internal CoreWebView2ContextMenuRequestedEventArgs(object rawCoreWebView2ContextMenuRequestedEventArgs);
    internal ICoreWebView2ContextMenuRequestedEventArgs get__nativeICoreWebView2ContextMenuRequestedEventArgs();
    internal void set__nativeICoreWebView2ContextMenuRequestedEventArgs(ICoreWebView2ContextMenuRequestedEventArgs value);
    public IList`1<CoreWebView2ContextMenuItem> get_MenuItems();
    public CoreWebView2ContextMenuTarget get_ContextMenuTarget();
    public Point get_Location();
    public int get_SelectedCommandId();
    public void set_SelectedCommandId(int value);
    public bool get_Handled();
    public void set_Handled(bool value);
    public CoreWebView2Deferral GetDeferral();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuRequestedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2ContextMenuRequestedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2 source, ICoreWebView2ContextMenuRequestedEventArgs args);
}
public class Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuTarget : object {
    internal ICoreWebView2ContextMenuTarget _nativeICoreWebView2ContextMenuTargetValue;
    internal object _rawNative;
    internal ICoreWebView2ContextMenuTarget _nativeICoreWebView2ContextMenuTarget { get; internal set; }
    public CoreWebView2ContextMenuTargetKind Kind { get; }
    public bool IsEditable { get; }
    public bool IsRequestedForMainFrame { get; }
    public string PageUri { get; }
    public string FrameUri { get; }
    public bool HasLinkUri { get; }
    public string LinkUri { get; }
    public bool HasLinkText { get; }
    public string LinkText { get; }
    public bool HasSourceUri { get; }
    public string SourceUri { get; }
    public bool HasSelection { get; }
    public string SelectionText { get; }
    internal CoreWebView2ContextMenuTarget(object rawCoreWebView2ContextMenuTarget);
    internal ICoreWebView2ContextMenuTarget get__nativeICoreWebView2ContextMenuTarget();
    internal void set__nativeICoreWebView2ContextMenuTarget(ICoreWebView2ContextMenuTarget value);
    public CoreWebView2ContextMenuTargetKind get_Kind();
    public bool get_IsEditable();
    public bool get_IsRequestedForMainFrame();
    public string get_PageUri();
    public string get_FrameUri();
    public bool get_HasLinkUri();
    public string get_LinkUri();
    public bool get_HasLinkText();
    public string get_LinkText();
    public bool get_HasSourceUri();
    public string get_SourceUri();
    public bool get_HasSelection();
    public string get_SelectionText();
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuTargetKind : Enum {
    public int value__;
    public static CoreWebView2ContextMenuTargetKind Page;
    public static CoreWebView2ContextMenuTargetKind Image;
    public static CoreWebView2ContextMenuTargetKind SelectedText;
    public static CoreWebView2ContextMenuTargetKind Audio;
    public static CoreWebView2ContextMenuTargetKind Video;
}
public class Microsoft.Web.WebView2.Core.CoreWebView2Controller : object {
    private static string HostObjectHelperName;
    private CoreWebView2 _coreWebView2;
    internal ICoreWebView2Controller _nativeICoreWebView2ControllerValue;
    internal ICoreWebView2Controller2 _nativeICoreWebView2Controller2Value;
    internal ICoreWebView2Controller3 _nativeICoreWebView2Controller3Value;
    internal ICoreWebView2Controller4 _nativeICoreWebView2Controller4Value;
    internal ICoreWebView2ExperimentalController2 _nativeICoreWebView2ExperimentalController2Value;
    internal ICoreWebView2ExperimentalController _nativeICoreWebView2ExperimentalControllerValue;
    internal ICoreWebView2PrivatePartialController _nativeICoreWebView2PrivatePartialControllerValue;
    internal object _rawNative;
    private EventRegistrationToken _zoomFactorChangedToken;
    private EventHandler`1<object> zoomFactorChanged;
    private EventRegistrationToken _moveFocusRequestedToken;
    private EventHandler`1<CoreWebView2MoveFocusRequestedEventArgs> moveFocusRequested;
    private EventRegistrationToken _gotFocusToken;
    private EventHandler`1<object> gotFocus;
    private EventRegistrationToken _lostFocusToken;
    private EventHandler`1<object> lostFocus;
    private EventRegistrationToken _acceleratorKeyPressedToken;
    private EventHandler`1<CoreWebView2AcceleratorKeyPressedEventArgs> acceleratorKeyPressed;
    private EventRegistrationToken _rasterizationScaleChangedToken;
    private EventHandler`1<object> rasterizationScaleChanged;
    private EventRegistrationToken _keyPressedToken;
    private EventHandler`1<CoreWebView2PrivateKeyPressedEventArgs> keyPressed;
    public CoreWebView2 CoreWebView2 { get; }
    internal ICoreWebView2Controller _nativeICoreWebView2Controller { get; internal set; }
    internal ICoreWebView2Controller2 _nativeICoreWebView2Controller2 { get; internal set; }
    internal ICoreWebView2Controller3 _nativeICoreWebView2Controller3 { get; internal set; }
    internal ICoreWebView2Controller4 _nativeICoreWebView2Controller4 { get; internal set; }
    internal ICoreWebView2ExperimentalController2 _nativeICoreWebView2ExperimentalController2 { get; internal set; }
    internal ICoreWebView2ExperimentalController _nativeICoreWebView2ExperimentalController { get; internal set; }
    internal ICoreWebView2PrivatePartialController _nativeICoreWebView2PrivatePartialController { get; internal set; }
    public bool IsVisible { get; public set; }
    public Rectangle Bounds { get; public set; }
    public double ZoomFactor { get; public set; }
    public IntPtr ParentWindow { get; public set; }
    public Color DefaultBackgroundColor { get; public set; }
    public double RasterizationScale { get; public set; }
    public bool ShouldDetectMonitorScaleChanges { get; public set; }
    public CoreWebView2BoundsMode BoundsMode { get; public set; }
    public bool AllowExternalDrop { get; public set; }
    internal bool IsBrowserHitTransparent { get; }
    internal CoreWebView2Controller(object rawCoreWebView2Controller);
    public CoreWebView2 get_CoreWebView2();
    public void MoveFocus(CoreWebView2MoveFocusReason reason);
    private void Initialize();
    internal ICoreWebView2Controller get__nativeICoreWebView2Controller();
    internal void set__nativeICoreWebView2Controller(ICoreWebView2Controller value);
    internal ICoreWebView2Controller2 get__nativeICoreWebView2Controller2();
    internal void set__nativeICoreWebView2Controller2(ICoreWebView2Controller2 value);
    internal ICoreWebView2Controller3 get__nativeICoreWebView2Controller3();
    internal void set__nativeICoreWebView2Controller3(ICoreWebView2Controller3 value);
    internal ICoreWebView2Controller4 get__nativeICoreWebView2Controller4();
    internal void set__nativeICoreWebView2Controller4(ICoreWebView2Controller4 value);
    internal ICoreWebView2ExperimentalController2 get__nativeICoreWebView2ExperimentalController2();
    internal void set__nativeICoreWebView2ExperimentalController2(ICoreWebView2ExperimentalController2 value);
    internal ICoreWebView2ExperimentalController get__nativeICoreWebView2ExperimentalController();
    internal void set__nativeICoreWebView2ExperimentalController(ICoreWebView2ExperimentalController value);
    internal ICoreWebView2PrivatePartialController get__nativeICoreWebView2PrivatePartialController();
    internal void set__nativeICoreWebView2PrivatePartialController(ICoreWebView2PrivatePartialController value);
    public bool get_IsVisible();
    public void set_IsVisible(bool value);
    public Rectangle get_Bounds();
    public void set_Bounds(Rectangle value);
    public double get_ZoomFactor();
    public void set_ZoomFactor(double value);
    public IntPtr get_ParentWindow();
    public void set_ParentWindow(IntPtr value);
    public void add_ZoomFactorChanged(EventHandler`1<object> value);
    public void remove_ZoomFactorChanged(EventHandler`1<object> value);
    internal void OnZoomFactorChanged(object args);
    public void add_MoveFocusRequested(EventHandler`1<CoreWebView2MoveFocusRequestedEventArgs> value);
    public void remove_MoveFocusRequested(EventHandler`1<CoreWebView2MoveFocusRequestedEventArgs> value);
    internal void OnMoveFocusRequested(CoreWebView2MoveFocusRequestedEventArgs args);
    public void add_GotFocus(EventHandler`1<object> value);
    public void remove_GotFocus(EventHandler`1<object> value);
    internal void OnGotFocus(object args);
    public void add_LostFocus(EventHandler`1<object> value);
    public void remove_LostFocus(EventHandler`1<object> value);
    internal void OnLostFocus(object args);
    public void add_AcceleratorKeyPressed(EventHandler`1<CoreWebView2AcceleratorKeyPressedEventArgs> value);
    public void remove_AcceleratorKeyPressed(EventHandler`1<CoreWebView2AcceleratorKeyPressedEventArgs> value);
    internal void OnAcceleratorKeyPressed(CoreWebView2AcceleratorKeyPressedEventArgs args);
    public void SetBoundsAndZoomFactor(Rectangle Bounds, double ZoomFactor);
    public void NotifyParentWindowPositionChanged();
    public void Close();
    public Color get_DefaultBackgroundColor();
    public void set_DefaultBackgroundColor(Color value);
    public double get_RasterizationScale();
    public void set_RasterizationScale(double value);
    public bool get_ShouldDetectMonitorScaleChanges();
    public void set_ShouldDetectMonitorScaleChanges(bool value);
    public CoreWebView2BoundsMode get_BoundsMode();
    public void set_BoundsMode(CoreWebView2BoundsMode value);
    public void add_RasterizationScaleChanged(EventHandler`1<object> value);
    public void remove_RasterizationScaleChanged(EventHandler`1<object> value);
    internal void OnRasterizationScaleChanged(object args);
    public bool get_AllowExternalDrop();
    public void set_AllowExternalDrop(bool value);
    internal bool get_IsBrowserHitTransparent();
    internal void add_KeyPressed(EventHandler`1<CoreWebView2PrivateKeyPressedEventArgs> value);
    internal void remove_KeyPressed(EventHandler`1<CoreWebView2PrivateKeyPressedEventArgs> value);
    internal void OnKeyPressed(CoreWebView2PrivateKeyPressedEventArgs args);
}
public class Microsoft.Web.WebView2.Core.CoreWebView2ControllerOptions : object {
    internal ICoreWebView2ControllerOptions _nativeICoreWebView2ControllerOptionsValue;
    internal ICoreWebView2ControllerOptions2 _nativeICoreWebView2ControllerOptions2Value;
    internal ICoreWebView2ExperimentalControllerOptions2 _nativeICoreWebView2ExperimentalControllerOptions2Value;
    internal ICoreWebView2ExperimentalControllerOptions _nativeICoreWebView2ExperimentalControllerOptionsValue;
    internal object _rawNative;
    public string ScriptLocale { get; public set; }
    internal ICoreWebView2ControllerOptions _nativeICoreWebView2ControllerOptions { get; internal set; }
    internal ICoreWebView2ControllerOptions2 _nativeICoreWebView2ControllerOptions2 { get; internal set; }
    internal ICoreWebView2ExperimentalControllerOptions2 _nativeICoreWebView2ExperimentalControllerOptions2 { get; internal set; }
    internal ICoreWebView2ExperimentalControllerOptions _nativeICoreWebView2ExperimentalControllerOptions { get; internal set; }
    public string ProfileName { get; public set; }
    public bool IsInPrivateModeEnabled { get; public set; }
    public bool AllowHostInputProcessing { get; public set; }
    internal CoreWebView2ControllerOptions(object rawCoreWebView2ControllerOptions);
    public string get_ScriptLocale();
    public void set_ScriptLocale(string value);
    internal ICoreWebView2ControllerOptions get__nativeICoreWebView2ControllerOptions();
    internal void set__nativeICoreWebView2ControllerOptions(ICoreWebView2ControllerOptions value);
    internal ICoreWebView2ControllerOptions2 get__nativeICoreWebView2ControllerOptions2();
    internal void set__nativeICoreWebView2ControllerOptions2(ICoreWebView2ControllerOptions2 value);
    internal ICoreWebView2ExperimentalControllerOptions2 get__nativeICoreWebView2ExperimentalControllerOptions2();
    internal void set__nativeICoreWebView2ExperimentalControllerOptions2(ICoreWebView2ExperimentalControllerOptions2 value);
    internal ICoreWebView2ExperimentalControllerOptions get__nativeICoreWebView2ExperimentalControllerOptions();
    internal void set__nativeICoreWebView2ExperimentalControllerOptions(ICoreWebView2ExperimentalControllerOptions value);
    public string get_ProfileName();
    public void set_ProfileName(string value);
    public bool get_IsInPrivateModeEnabled();
    public void set_IsInPrivateModeEnabled(bool value);
    public bool get_AllowHostInputProcessing();
    public void set_AllowHostInputProcessing(bool value);
}
public class Microsoft.Web.WebView2.Core.CoreWebView2Cookie : object {
    private static DateTime _unixEpoch;
    internal ICoreWebView2Cookie _nativeICoreWebView2CookieValue;
    internal object _rawNative;
    public DateTime Expires { get; public set; }
    internal ICoreWebView2Cookie _nativeICoreWebView2Cookie { get; internal set; }
    public string Name { get; }
    public string Value { get; public set; }
    public string Domain { get; }
    public string Path { get; }
    public bool IsHttpOnly { get; public set; }
    public CoreWebView2CookieSameSiteKind SameSite { get; public set; }
    public bool IsSecure { get; public set; }
    public bool IsSession { get; }
    internal CoreWebView2Cookie(object rawCoreWebView2Cookie);
    private static CoreWebView2Cookie();
    public Cookie ToSystemNetCookie();
    private DateTime SecondsSinceUnixEpochToDateTime(double seconds);
    public DateTime get_Expires();
    public void set_Expires(DateTime value);
    internal ICoreWebView2Cookie get__nativeICoreWebView2Cookie();
    internal void set__nativeICoreWebView2Cookie(ICoreWebView2Cookie value);
    public string get_Name();
    public string get_Value();
    public void set_Value(string value);
    public string get_Domain();
    public string get_Path();
    public bool get_IsHttpOnly();
    public void set_IsHttpOnly(bool value);
    public CoreWebView2CookieSameSiteKind get_SameSite();
    public void set_SameSite(CoreWebView2CookieSameSiteKind value);
    public bool get_IsSecure();
    public void set_IsSecure(bool value);
    public bool get_IsSession();
}
public class Microsoft.Web.WebView2.Core.CoreWebView2CookieManager : object {
    internal ICoreWebView2CookieManager _nativeICoreWebView2CookieManagerValue;
    internal object _rawNative;
    internal ICoreWebView2CookieManager _nativeICoreWebView2CookieManager { get; internal set; }
    internal CoreWebView2CookieManager(object rawCoreWebView2CookieManager);
    public CoreWebView2Cookie CreateCookieWithSystemNetCookie(Cookie systemNetCookie);
    internal ICoreWebView2CookieManager get__nativeICoreWebView2CookieManager();
    internal void set__nativeICoreWebView2CookieManager(ICoreWebView2CookieManager value);
    public CoreWebView2Cookie CreateCookie(string name, string value, string Domain, string Path);
    public CoreWebView2Cookie CopyCookie(CoreWebView2Cookie cookieParam);
    [AsyncStateMachineAttribute("Microsoft.Web.WebView2.Core.CoreWebView2CookieManager/<GetCookiesAsync>d__10")]
public Task`1<List`1<CoreWebView2Cookie>> GetCookiesAsync(string uri);
    public void AddOrUpdateCookie(CoreWebView2Cookie cookie);
    public void DeleteCookie(CoreWebView2Cookie cookie);
    public void DeleteCookies(string name, string uri);
    public void DeleteCookiesWithDomainAndPath(string name, string Domain, string Path);
    public void DeleteAllCookies();
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2CookieSameSiteKind : Enum {
    public int value__;
    public static CoreWebView2CookieSameSiteKind None;
    public static CoreWebView2CookieSameSiteKind Lax;
    public static CoreWebView2CookieSameSiteKind Strict;
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2CreateCoreWebView2CompositionControllerCompletedHandler : object {
    [CompilerGeneratedAttribute]
private CoreWebView2CompositionController <result>k__BackingField;
    [CompilerGeneratedAttribute]
private int <errCode>k__BackingField;
    private Action continuation;
    [CompilerGeneratedAttribute]
private bool <IsCompleted>k__BackingField;
    public CoreWebView2CompositionController result { get; private set; }
    public int errCode { get; private set; }
    public bool IsCompleted { get; private set; }
    [CompilerGeneratedAttribute]
public CoreWebView2CompositionController get_result();
    [CompilerGeneratedAttribute]
private void set_result(CoreWebView2CompositionController value);
    [CompilerGeneratedAttribute]
public int get_errCode();
    [CompilerGeneratedAttribute]
private void set_errCode(int value);
    public sealed virtual void Invoke(int errCode, ICoreWebView2CompositionController result);
    public CoreWebView2CreateCoreWebView2CompositionControllerCompletedHandler GetAwaiter();
    [CompilerGeneratedAttribute]
public bool get_IsCompleted();
    [CompilerGeneratedAttribute]
private void set_IsCompleted(bool value);
    public sealed virtual void OnCompleted(Action continuation);
    public CoreWebView2CompositionController GetResult();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2CreateCoreWebView2ControllerCompletedHandler : object {
    [CompilerGeneratedAttribute]
private CoreWebView2Controller <result>k__BackingField;
    [CompilerGeneratedAttribute]
private int <errCode>k__BackingField;
    private Action continuation;
    [CompilerGeneratedAttribute]
private bool <IsCompleted>k__BackingField;
    public CoreWebView2Controller result { get; private set; }
    public int errCode { get; private set; }
    public bool IsCompleted { get; private set; }
    [CompilerGeneratedAttribute]
public CoreWebView2Controller get_result();
    [CompilerGeneratedAttribute]
private void set_result(CoreWebView2Controller value);
    [CompilerGeneratedAttribute]
public int get_errCode();
    [CompilerGeneratedAttribute]
private void set_errCode(int value);
    public sealed virtual void Invoke(int errCode, ICoreWebView2Controller result);
    public CoreWebView2CreateCoreWebView2ControllerCompletedHandler GetAwaiter();
    [CompilerGeneratedAttribute]
public bool get_IsCompleted();
    [CompilerGeneratedAttribute]
private void set_IsCompleted(bool value);
    public sealed virtual void OnCompleted(Action continuation);
    public CoreWebView2Controller GetResult();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2CreateCoreWebView2EnvironmentCompletedHandler : object {
    [CompilerGeneratedAttribute]
private CoreWebView2Environment <result>k__BackingField;
    [CompilerGeneratedAttribute]
private int <errCode>k__BackingField;
    private Action continuation;
    [CompilerGeneratedAttribute]
private bool <IsCompleted>k__BackingField;
    public CoreWebView2Environment result { get; private set; }
    public int errCode { get; private set; }
    public bool IsCompleted { get; private set; }
    [CompilerGeneratedAttribute]
public CoreWebView2Environment get_result();
    [CompilerGeneratedAttribute]
private void set_result(CoreWebView2Environment value);
    [CompilerGeneratedAttribute]
public int get_errCode();
    [CompilerGeneratedAttribute]
private void set_errCode(int value);
    public sealed virtual void Invoke(int errCode, ICoreWebView2Environment result);
    public CoreWebView2CreateCoreWebView2EnvironmentCompletedHandler GetAwaiter();
    [CompilerGeneratedAttribute]
public bool get_IsCompleted();
    [CompilerGeneratedAttribute]
private void set_IsCompleted(bool value);
    public sealed virtual void OnCompleted(Action continuation);
    public CoreWebView2Environment GetResult();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2CursorChangedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2CursorChangedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2CompositionController source, object args);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2CustomItemSelectedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2CustomItemSelectedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2ContextMenuItem source, object args);
}
public class Microsoft.Web.WebView2.Core.CoreWebView2CustomSchemeRegistration : object {
    [CompilerGeneratedAttribute]
private string <SchemeName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <TreatAsSecure>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasAuthorityComponent>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <AllowedOrigins>k__BackingField;
    public string SchemeName { get; }
    public bool TreatAsSecure { get; public set; }
    public bool HasAuthorityComponent { get; public set; }
    public List`1<string> AllowedOrigins { get; public set; }
    public CoreWebView2CustomSchemeRegistration(string schemeName);
    [CompilerGeneratedAttribute]
public string get_SchemeName();
    [CompilerGeneratedAttribute]
public bool get_TreatAsSecure();
    [CompilerGeneratedAttribute]
public void set_TreatAsSecure(bool value);
    [CompilerGeneratedAttribute]
public bool get_HasAuthorityComponent();
    [CompilerGeneratedAttribute]
public void set_HasAuthorityComponent(bool value);
    [CompilerGeneratedAttribute]
public List`1<string> get_AllowedOrigins();
    [CompilerGeneratedAttribute]
public void set_AllowedOrigins(List`1<string> value);
    internal IntPtr GetNative();
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2DefaultDownloadDialogCornerAlignment : Enum {
    public int value__;
    public static CoreWebView2DefaultDownloadDialogCornerAlignment TopLeft;
    public static CoreWebView2DefaultDownloadDialogCornerAlignment TopRight;
    public static CoreWebView2DefaultDownloadDialogCornerAlignment BottomLeft;
    public static CoreWebView2DefaultDownloadDialogCornerAlignment BottomRight;
}
public class Microsoft.Web.WebView2.Core.CoreWebView2Deferral : object {
    private bool disposed;
    private SafeHandle handle;
    internal ICoreWebView2Deferral _nativeICoreWebView2DeferralValue;
    internal object _rawNative;
    internal ICoreWebView2Deferral _nativeICoreWebView2Deferral { get; internal set; }
    internal CoreWebView2Deferral(object rawCoreWebView2Deferral);
    public sealed virtual void Dispose();
    protected virtual void Dispose(bool disposing);
    internal ICoreWebView2Deferral get__nativeICoreWebView2Deferral();
    internal void set__nativeICoreWebView2Deferral(ICoreWebView2Deferral value);
    public void Complete();
}
public class Microsoft.Web.WebView2.Core.CoreWebView2DevToolsProtocolEventReceivedEventArgs : EventArgs {
    internal ICoreWebView2DevToolsProtocolEventReceivedEventArgs _nativeICoreWebView2DevToolsProtocolEventReceivedEventArgsValue;
    internal ICoreWebView2DevToolsProtocolEventReceivedEventArgs2 _nativeICoreWebView2DevToolsProtocolEventReceivedEventArgs2Value;
    internal object _rawNative;
    internal ICoreWebView2DevToolsProtocolEventReceivedEventArgs _nativeICoreWebView2DevToolsProtocolEventReceivedEventArgs { get; internal set; }
    internal ICoreWebView2DevToolsProtocolEventReceivedEventArgs2 _nativeICoreWebView2DevToolsProtocolEventReceivedEventArgs2 { get; internal set; }
    public string ParameterObjectAsJson { get; }
    public string SessionId { get; }
    internal CoreWebView2DevToolsProtocolEventReceivedEventArgs(object rawCoreWebView2DevToolsProtocolEventReceivedEventArgs);
    internal ICoreWebView2DevToolsProtocolEventReceivedEventArgs get__nativeICoreWebView2DevToolsProtocolEventReceivedEventArgs();
    internal void set__nativeICoreWebView2DevToolsProtocolEventReceivedEventArgs(ICoreWebView2DevToolsProtocolEventReceivedEventArgs value);
    internal ICoreWebView2DevToolsProtocolEventReceivedEventArgs2 get__nativeICoreWebView2DevToolsProtocolEventReceivedEventArgs2();
    internal void set__nativeICoreWebView2DevToolsProtocolEventReceivedEventArgs2(ICoreWebView2DevToolsProtocolEventReceivedEventArgs2 value);
    public string get_ParameterObjectAsJson();
    public string get_SessionId();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2DevToolsProtocolEventReceivedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2DevToolsProtocolEventReceivedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2 source, ICoreWebView2DevToolsProtocolEventReceivedEventArgs args);
}
public class Microsoft.Web.WebView2.Core.CoreWebView2DevToolsProtocolEventReceiver : object {
    internal ICoreWebView2DevToolsProtocolEventReceiver _nativeICoreWebView2DevToolsProtocolEventReceiverValue;
    internal object _rawNative;
    private EventRegistrationToken _devToolsProtocolEventReceivedToken;
    private EventHandler`1<CoreWebView2DevToolsProtocolEventReceivedEventArgs> devToolsProtocolEventReceived;
    internal ICoreWebView2DevToolsProtocolEventReceiver _nativeICoreWebView2DevToolsProtocolEventReceiver { get; internal set; }
    internal CoreWebView2DevToolsProtocolEventReceiver(object rawCoreWebView2DevToolsProtocolEventReceiver);
    internal ICoreWebView2DevToolsProtocolEventReceiver get__nativeICoreWebView2DevToolsProtocolEventReceiver();
    internal void set__nativeICoreWebView2DevToolsProtocolEventReceiver(ICoreWebView2DevToolsProtocolEventReceiver value);
    public void add_DevToolsProtocolEventReceived(EventHandler`1<CoreWebView2DevToolsProtocolEventReceivedEventArgs> value);
    public void remove_DevToolsProtocolEventReceived(EventHandler`1<CoreWebView2DevToolsProtocolEventReceivedEventArgs> value);
    internal void OnDevToolsProtocolEventReceived(CoreWebView2DevToolsProtocolEventReceivedEventArgs args);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2DocumentTitleChangedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2DocumentTitleChangedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2 source, object args);
}
public class Microsoft.Web.WebView2.Core.CoreWebView2DOMContentLoadedEventArgs : EventArgs {
    internal ICoreWebView2DOMContentLoadedEventArgs _nativeICoreWebView2DOMContentLoadedEventArgsValue;
    internal object _rawNative;
    internal ICoreWebView2DOMContentLoadedEventArgs _nativeICoreWebView2DOMContentLoadedEventArgs { get; internal set; }
    public ulong NavigationId { get; }
    internal CoreWebView2DOMContentLoadedEventArgs(object rawCoreWebView2DOMContentLoadedEventArgs);
    internal ICoreWebView2DOMContentLoadedEventArgs get__nativeICoreWebView2DOMContentLoadedEventArgs();
    internal void set__nativeICoreWebView2DOMContentLoadedEventArgs(ICoreWebView2DOMContentLoadedEventArgs value);
    public ulong get_NavigationId();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2DOMContentLoadedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2DOMContentLoadedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2 source, ICoreWebView2DOMContentLoadedEventArgs args);
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2DownloadInterruptReason : Enum {
    public int value__;
    public static CoreWebView2DownloadInterruptReason None;
    public static CoreWebView2DownloadInterruptReason FileFailed;
    public static CoreWebView2DownloadInterruptReason FileAccessDenied;
    public static CoreWebView2DownloadInterruptReason FileNoSpace;
    public static CoreWebView2DownloadInterruptReason FileNameTooLong;
    public static CoreWebView2DownloadInterruptReason FileTooLarge;
    public static CoreWebView2DownloadInterruptReason FileMalicious;
    public static CoreWebView2DownloadInterruptReason FileTransientError;
    public static CoreWebView2DownloadInterruptReason FileBlockedByPolicy;
    public static CoreWebView2DownloadInterruptReason FileSecurityCheckFailed;
    public static CoreWebView2DownloadInterruptReason FileTooShort;
    public static CoreWebView2DownloadInterruptReason FileHashMismatch;
    public static CoreWebView2DownloadInterruptReason NetworkFailed;
    public static CoreWebView2DownloadInterruptReason NetworkTimeout;
    public static CoreWebView2DownloadInterruptReason NetworkDisconnected;
    public static CoreWebView2DownloadInterruptReason NetworkServerDown;
    public static CoreWebView2DownloadInterruptReason NetworkInvalidRequest;
    public static CoreWebView2DownloadInterruptReason ServerFailed;
    public static CoreWebView2DownloadInterruptReason ServerNoRange;
    public static CoreWebView2DownloadInterruptReason ServerBadContent;
    public static CoreWebView2DownloadInterruptReason ServerUnauthorized;
    public static CoreWebView2DownloadInterruptReason ServerCertificateProblem;
    public static CoreWebView2DownloadInterruptReason ServerForbidden;
    public static CoreWebView2DownloadInterruptReason ServerUnexpectedResponse;
    public static CoreWebView2DownloadInterruptReason ServerContentLengthMismatch;
    public static CoreWebView2DownloadInterruptReason ServerCrossOriginRedirect;
    public static CoreWebView2DownloadInterruptReason UserCanceled;
    public static CoreWebView2DownloadInterruptReason UserShutdown;
    public static CoreWebView2DownloadInterruptReason UserPaused;
    public static CoreWebView2DownloadInterruptReason DownloadProcessCrashed;
}
public class Microsoft.Web.WebView2.Core.CoreWebView2DownloadOperation : object {
    internal ICoreWebView2DownloadOperation _nativeICoreWebView2DownloadOperationValue;
    internal object _rawNative;
    private EventRegistrationToken _bytesReceivedChangedToken;
    private EventHandler`1<object> bytesReceivedChanged;
    private EventRegistrationToken _estimatedEndTimeChangedToken;
    private EventHandler`1<object> estimatedEndTimeChanged;
    private EventRegistrationToken _stateChangedToken;
    private EventHandler`1<object> stateChanged;
    public DateTime EstimatedEndTime { get; }
    public Nullable`1<ulong> TotalBytesToReceive { get; }
    internal ICoreWebView2DownloadOperation _nativeICoreWebView2DownloadOperation { get; internal set; }
    public string Uri { get; }
    public string ContentDisposition { get; }
    public string MimeType { get; }
    public long BytesReceived { get; }
    public string ResultFilePath { get; }
    public CoreWebView2DownloadState State { get; }
    public CoreWebView2DownloadInterruptReason InterruptReason { get; }
    public bool CanResume { get; }
    internal CoreWebView2DownloadOperation(object rawCoreWebView2DownloadOperation);
    public DateTime get_EstimatedEndTime();
    public Nullable`1<ulong> get_TotalBytesToReceive();
    internal ICoreWebView2DownloadOperation get__nativeICoreWebView2DownloadOperation();
    internal void set__nativeICoreWebView2DownloadOperation(ICoreWebView2DownloadOperation value);
    public string get_Uri();
    public string get_ContentDisposition();
    public string get_MimeType();
    public long get_BytesReceived();
    public string get_ResultFilePath();
    public CoreWebView2DownloadState get_State();
    public CoreWebView2DownloadInterruptReason get_InterruptReason();
    public bool get_CanResume();
    public void add_BytesReceivedChanged(EventHandler`1<object> value);
    public void remove_BytesReceivedChanged(EventHandler`1<object> value);
    internal void OnBytesReceivedChanged(object args);
    public void add_EstimatedEndTimeChanged(EventHandler`1<object> value);
    public void remove_EstimatedEndTimeChanged(EventHandler`1<object> value);
    internal void OnEstimatedEndTimeChanged(object args);
    public void add_StateChanged(EventHandler`1<object> value);
    public void remove_StateChanged(EventHandler`1<object> value);
    internal void OnStateChanged(object args);
    public void Cancel();
    public void Pause();
    public void Resume();
}
public class Microsoft.Web.WebView2.Core.CoreWebView2DownloadStartingEventArgs : EventArgs {
    internal ICoreWebView2DownloadStartingEventArgs _nativeICoreWebView2DownloadStartingEventArgsValue;
    internal object _rawNative;
    internal ICoreWebView2DownloadStartingEventArgs _nativeICoreWebView2DownloadStartingEventArgs { get; internal set; }
    public CoreWebView2DownloadOperation DownloadOperation { get; }
    public bool Cancel { get; public set; }
    public string ResultFilePath { get; public set; }
    public bool Handled { get; public set; }
    internal CoreWebView2DownloadStartingEventArgs(object rawCoreWebView2DownloadStartingEventArgs);
    internal ICoreWebView2DownloadStartingEventArgs get__nativeICoreWebView2DownloadStartingEventArgs();
    internal void set__nativeICoreWebView2DownloadStartingEventArgs(ICoreWebView2DownloadStartingEventArgs value);
    public CoreWebView2DownloadOperation get_DownloadOperation();
    public bool get_Cancel();
    public void set_Cancel(bool value);
    public string get_ResultFilePath();
    public void set_ResultFilePath(string value);
    public bool get_Handled();
    public void set_Handled(bool value);
    public CoreWebView2Deferral GetDeferral();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2DownloadStartingEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2DownloadStartingEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2 source, ICoreWebView2DownloadStartingEventArgs args);
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2DownloadState : Enum {
    public int value__;
    public static CoreWebView2DownloadState InProgress;
    public static CoreWebView2DownloadState Interrupted;
    public static CoreWebView2DownloadState Completed;
}
public class Microsoft.Web.WebView2.Core.CoreWebView2Environment : object {
    private static char DirectorySeparatorChar;
    private static char AltDirectorySeparatorChar;
    private static char VolumeSeparatorChar;
    private static bool webView2LoaderLoaded;
    private static string loaderDllFolderPath;
    internal ICoreWebView2Environment _nativeICoreWebView2EnvironmentValue;
    internal ICoreWebView2Environment2 _nativeICoreWebView2Environment2Value;
    internal ICoreWebView2Environment3 _nativeICoreWebView2Environment3Value;
    internal ICoreWebView2Environment4 _nativeICoreWebView2Environment4Value;
    internal ICoreWebView2Environment5 _nativeICoreWebView2Environment5Value;
    internal ICoreWebView2Environment6 _nativeICoreWebView2Environment6Value;
    internal ICoreWebView2Environment7 _nativeICoreWebView2Environment7Value;
    internal ICoreWebView2Environment8 _nativeICoreWebView2Environment8Value;
    internal ICoreWebView2Environment9 _nativeICoreWebView2Environment9Value;
    internal ICoreWebView2Environment10 _nativeICoreWebView2Environment10Value;
    internal ICoreWebView2Environment11 _nativeICoreWebView2Environment11Value;
    internal ICoreWebView2Environment12 _nativeICoreWebView2Environment12Value;
    internal ICoreWebView2Environment13 _nativeICoreWebView2Environment13Value;
    internal ICoreWebView2Environment14 _nativeICoreWebView2Environment14Value;
    internal ICoreWebView2ExperimentalEnvironment9 _nativeICoreWebView2ExperimentalEnvironment9Value;
    internal ICoreWebView2ExperimentalEnvironment14 _nativeICoreWebView2ExperimentalEnvironment14Value;
    internal ICoreWebView2ExperimentalEnvironment13 _nativeICoreWebView2ExperimentalEnvironment13Value;
    internal ICoreWebView2ExperimentalEnvironment12 _nativeICoreWebView2ExperimentalEnvironment12Value;
    internal ICoreWebView2ExperimentalEnvironment8 _nativeICoreWebView2ExperimentalEnvironment8Value;
    internal ICoreWebView2ExperimentalEnvironment7 _nativeICoreWebView2ExperimentalEnvironment7Value;
    internal ICoreWebView2ExperimentalEnvironment6 _nativeICoreWebView2ExperimentalEnvironment6Value;
    internal ICoreWebView2ExperimentalEnvironment5 _nativeICoreWebView2ExperimentalEnvironment5Value;
    internal ICoreWebView2ExperimentalEnvironment4 _nativeICoreWebView2ExperimentalEnvironment4Value;
    internal ICoreWebView2ExperimentalEnvironment11 _nativeICoreWebView2ExperimentalEnvironment11Value;
    internal ICoreWebView2ExperimentalEnvironment10 _nativeICoreWebView2ExperimentalEnvironment10Value;
    internal ICoreWebView2ExperimentalEnvironment3 _nativeICoreWebView2ExperimentalEnvironment3Value;
    internal ICoreWebView2ExperimentalEnvironment2 _nativeICoreWebView2ExperimentalEnvironment2Value;
    internal ICoreWebView2ExperimentalEnvironment _nativeICoreWebView2ExperimentalEnvironmentValue;
    internal object _rawNative;
    private EventRegistrationToken _newBrowserVersionAvailableToken;
    private EventHandler`1<object> newBrowserVersionAvailable;
    private EventRegistrationToken _browserProcessExitedToken;
    private EventHandler`1<CoreWebView2BrowserProcessExitedEventArgs> browserProcessExited;
    private EventRegistrationToken _processInfosChangedToken;
    private EventHandler`1<object> processInfosChanged;
    private EventRegistrationToken _renderAdapterLUIDChangedToken;
    private EventHandler`1<object> renderAdapterLUIDChanged;
    internal ICoreWebView2Environment _nativeICoreWebView2Environment { get; internal set; }
    internal ICoreWebView2Environment2 _nativeICoreWebView2Environment2 { get; internal set; }
    internal ICoreWebView2Environment3 _nativeICoreWebView2Environment3 { get; internal set; }
    internal ICoreWebView2Environment4 _nativeICoreWebView2Environment4 { get; internal set; }
    internal ICoreWebView2Environment5 _nativeICoreWebView2Environment5 { get; internal set; }
    internal ICoreWebView2Environment6 _nativeICoreWebView2Environment6 { get; internal set; }
    internal ICoreWebView2Environment7 _nativeICoreWebView2Environment7 { get; internal set; }
    internal ICoreWebView2Environment8 _nativeICoreWebView2Environment8 { get; internal set; }
    internal ICoreWebView2Environment9 _nativeICoreWebView2Environment9 { get; internal set; }
    internal ICoreWebView2Environment10 _nativeICoreWebView2Environment10 { get; internal set; }
    internal ICoreWebView2Environment11 _nativeICoreWebView2Environment11 { get; internal set; }
    internal ICoreWebView2Environment12 _nativeICoreWebView2Environment12 { get; internal set; }
    internal ICoreWebView2Environment13 _nativeICoreWebView2Environment13 { get; internal set; }
    internal ICoreWebView2Environment14 _nativeICoreWebView2Environment14 { get; internal set; }
    internal ICoreWebView2ExperimentalEnvironment9 _nativeICoreWebView2ExperimentalEnvironment9 { get; internal set; }
    internal ICoreWebView2ExperimentalEnvironment14 _nativeICoreWebView2ExperimentalEnvironment14 { get; internal set; }
    internal ICoreWebView2ExperimentalEnvironment13 _nativeICoreWebView2ExperimentalEnvironment13 { get; internal set; }
    internal ICoreWebView2ExperimentalEnvironment12 _nativeICoreWebView2ExperimentalEnvironment12 { get; internal set; }
    internal ICoreWebView2ExperimentalEnvironment8 _nativeICoreWebView2ExperimentalEnvironment8 { get; internal set; }
    internal ICoreWebView2ExperimentalEnvironment7 _nativeICoreWebView2ExperimentalEnvironment7 { get; internal set; }
    internal ICoreWebView2ExperimentalEnvironment6 _nativeICoreWebView2ExperimentalEnvironment6 { get; internal set; }
    internal ICoreWebView2ExperimentalEnvironment5 _nativeICoreWebView2ExperimentalEnvironment5 { get; internal set; }
    internal ICoreWebView2ExperimentalEnvironment4 _nativeICoreWebView2ExperimentalEnvironment4 { get; internal set; }
    internal ICoreWebView2ExperimentalEnvironment11 _nativeICoreWebView2ExperimentalEnvironment11 { get; internal set; }
    internal ICoreWebView2ExperimentalEnvironment10 _nativeICoreWebView2ExperimentalEnvironment10 { get; internal set; }
    internal ICoreWebView2ExperimentalEnvironment3 _nativeICoreWebView2ExperimentalEnvironment3 { get; internal set; }
    internal ICoreWebView2ExperimentalEnvironment2 _nativeICoreWebView2ExperimentalEnvironment2 { get; internal set; }
    internal ICoreWebView2ExperimentalEnvironment _nativeICoreWebView2ExperimentalEnvironment { get; internal set; }
    public string BrowserVersionString { get; }
    public string UserDataFolder { get; }
    public string FailureReportFolderPath { get; }
    public ulong RenderAdapterLUID { get; }
    internal CoreWebView2Environment(object rawCoreWebView2Environment);
    internal static int CreateCoreWebView2EnvironmentWithOptions(string browserExecutableFolder, string userDataFolder, ICoreWebView2EnvironmentOptions options, ICoreWebView2CreateCoreWebView2EnvironmentCompletedHandler environment_created_handler);
    internal static int GetAvailableCoreWebView2BrowserVersionString(string browserExecutableFolder, String& versionInfo);
    internal static int CompareBrowserVersions(string version1, string version2, Int32& result);
    internal static int GetAvailableCoreWebView2BrowserVersionStringWithOptions(string browserExecutableFolder, ICoreWebView2EnvironmentOptions options, String& versionInfo);
    [AsyncStateMachineAttribute("Microsoft.Web.WebView2.Core.CoreWebView2Environment/<CreateAsync>d__4")]
public static Task`1<CoreWebView2Environment> CreateAsync(string browserExecutableFolder, string userDataFolder, CoreWebView2EnvironmentOptions options);
    public static string GetAvailableBrowserVersionString(string browserExecutableFolder);
    public static string GetAvailableBrowserVersionString(string browserExecutableFolder, CoreWebView2EnvironmentOptions environmentOptions);
    public static int CompareBrowserVersions(string version1, string version2);
    public CoreWebView2WebResourceRequest CreateWebResourceRequest(string uri, string Method, Stream postData, string Headers);
    public CoreWebView2ControllerOptions CreateCoreWebView2ControllerOptions();
    [AsyncStateMachineAttribute("Microsoft.Web.WebView2.Core.CoreWebView2Environment/<CreateCoreWebView2ControllerAsync>d__10")]
public Task`1<CoreWebView2Controller> CreateCoreWebView2ControllerAsync(IntPtr ParentWindow, CoreWebView2ControllerOptions options);
    [AsyncStateMachineAttribute("Microsoft.Web.WebView2.Core.CoreWebView2Environment/<CreateCoreWebView2CompositionControllerAsync>d__11")]
public Task`1<CoreWebView2CompositionController> CreateCoreWebView2CompositionControllerAsync(IntPtr ParentWindow, CoreWebView2ControllerOptions options);
    private static ProcessorArchitecture GetArchitecture();
    private static void GetSystemInfo(SYSTEM_INFO& lpSystemInfo);
    internal static IntPtr LoadLibrary(string dllToLoad);
    private static bool IsDirectorySeparator(char c);
    internal static bool IsValidDriveChar(char value);
    private static bool IsDotNetFramework();
    private static string GetAssemblyLocationDirectory();
    private static string GetAssemblyCodeBaseDirectory();
    private static IntPtr GetModuleHandle(string lpModuleName);
    private static UInt32 GetModuleFileName(IntPtr hModule, StringBuilder lpFilename, int nSize);
    private static string GetCurrentDllRuningDirectory();
    private static string GetProcessArchSubFolder();
    private static string GetAppDomainBaseDirectory();
    public static void SetLoaderDllFolderPath(string folderPath);
    private static string TrimFormat(string path);
    private static void LoadWebView2LoaderDll();
    internal ICoreWebView2Environment get__nativeICoreWebView2Environment();
    internal void set__nativeICoreWebView2Environment(ICoreWebView2Environment value);
    internal ICoreWebView2Environment2 get__nativeICoreWebView2Environment2();
    internal void set__nativeICoreWebView2Environment2(ICoreWebView2Environment2 value);
    internal ICoreWebView2Environment3 get__nativeICoreWebView2Environment3();
    internal void set__nativeICoreWebView2Environment3(ICoreWebView2Environment3 value);
    internal ICoreWebView2Environment4 get__nativeICoreWebView2Environment4();
    internal void set__nativeICoreWebView2Environment4(ICoreWebView2Environment4 value);
    internal ICoreWebView2Environment5 get__nativeICoreWebView2Environment5();
    internal void set__nativeICoreWebView2Environment5(ICoreWebView2Environment5 value);
    internal ICoreWebView2Environment6 get__nativeICoreWebView2Environment6();
    internal void set__nativeICoreWebView2Environment6(ICoreWebView2Environment6 value);
    internal ICoreWebView2Environment7 get__nativeICoreWebView2Environment7();
    internal void set__nativeICoreWebView2Environment7(ICoreWebView2Environment7 value);
    internal ICoreWebView2Environment8 get__nativeICoreWebView2Environment8();
    internal void set__nativeICoreWebView2Environment8(ICoreWebView2Environment8 value);
    internal ICoreWebView2Environment9 get__nativeICoreWebView2Environment9();
    internal void set__nativeICoreWebView2Environment9(ICoreWebView2Environment9 value);
    internal ICoreWebView2Environment10 get__nativeICoreWebView2Environment10();
    internal void set__nativeICoreWebView2Environment10(ICoreWebView2Environment10 value);
    internal ICoreWebView2Environment11 get__nativeICoreWebView2Environment11();
    internal void set__nativeICoreWebView2Environment11(ICoreWebView2Environment11 value);
    internal ICoreWebView2Environment12 get__nativeICoreWebView2Environment12();
    internal void set__nativeICoreWebView2Environment12(ICoreWebView2Environment12 value);
    internal ICoreWebView2Environment13 get__nativeICoreWebView2Environment13();
    internal void set__nativeICoreWebView2Environment13(ICoreWebView2Environment13 value);
    internal ICoreWebView2Environment14 get__nativeICoreWebView2Environment14();
    internal void set__nativeICoreWebView2Environment14(ICoreWebView2Environment14 value);
    internal ICoreWebView2ExperimentalEnvironment9 get__nativeICoreWebView2ExperimentalEnvironment9();
    internal void set__nativeICoreWebView2ExperimentalEnvironment9(ICoreWebView2ExperimentalEnvironment9 value);
    internal ICoreWebView2ExperimentalEnvironment14 get__nativeICoreWebView2ExperimentalEnvironment14();
    internal void set__nativeICoreWebView2ExperimentalEnvironment14(ICoreWebView2ExperimentalEnvironment14 value);
    internal ICoreWebView2ExperimentalEnvironment13 get__nativeICoreWebView2ExperimentalEnvironment13();
    internal void set__nativeICoreWebView2ExperimentalEnvironment13(ICoreWebView2ExperimentalEnvironment13 value);
    internal ICoreWebView2ExperimentalEnvironment12 get__nativeICoreWebView2ExperimentalEnvironment12();
    internal void set__nativeICoreWebView2ExperimentalEnvironment12(ICoreWebView2ExperimentalEnvironment12 value);
    internal ICoreWebView2ExperimentalEnvironment8 get__nativeICoreWebView2ExperimentalEnvironment8();
    internal void set__nativeICoreWebView2ExperimentalEnvironment8(ICoreWebView2ExperimentalEnvironment8 value);
    internal ICoreWebView2ExperimentalEnvironment7 get__nativeICoreWebView2ExperimentalEnvironment7();
    internal void set__nativeICoreWebView2ExperimentalEnvironment7(ICoreWebView2ExperimentalEnvironment7 value);
    internal ICoreWebView2ExperimentalEnvironment6 get__nativeICoreWebView2ExperimentalEnvironment6();
    internal void set__nativeICoreWebView2ExperimentalEnvironment6(ICoreWebView2ExperimentalEnvironment6 value);
    internal ICoreWebView2ExperimentalEnvironment5 get__nativeICoreWebView2ExperimentalEnvironment5();
    internal void set__nativeICoreWebView2ExperimentalEnvironment5(ICoreWebView2ExperimentalEnvironment5 value);
    internal ICoreWebView2ExperimentalEnvironment4 get__nativeICoreWebView2ExperimentalEnvironment4();
    internal void set__nativeICoreWebView2ExperimentalEnvironment4(ICoreWebView2ExperimentalEnvironment4 value);
    internal ICoreWebView2ExperimentalEnvironment11 get__nativeICoreWebView2ExperimentalEnvironment11();
    internal void set__nativeICoreWebView2ExperimentalEnvironment11(ICoreWebView2ExperimentalEnvironment11 value);
    internal ICoreWebView2ExperimentalEnvironment10 get__nativeICoreWebView2ExperimentalEnvironment10();
    internal void set__nativeICoreWebView2ExperimentalEnvironment10(ICoreWebView2ExperimentalEnvironment10 value);
    internal ICoreWebView2ExperimentalEnvironment3 get__nativeICoreWebView2ExperimentalEnvironment3();
    internal void set__nativeICoreWebView2ExperimentalEnvironment3(ICoreWebView2ExperimentalEnvironment3 value);
    internal ICoreWebView2ExperimentalEnvironment2 get__nativeICoreWebView2ExperimentalEnvironment2();
    internal void set__nativeICoreWebView2ExperimentalEnvironment2(ICoreWebView2ExperimentalEnvironment2 value);
    internal ICoreWebView2ExperimentalEnvironment get__nativeICoreWebView2ExperimentalEnvironment();
    internal void set__nativeICoreWebView2ExperimentalEnvironment(ICoreWebView2ExperimentalEnvironment value);
    public string get_BrowserVersionString();
    public void add_NewBrowserVersionAvailable(EventHandler`1<object> value);
    public void remove_NewBrowserVersionAvailable(EventHandler`1<object> value);
    internal void OnNewBrowserVersionAvailable(object args);
    [AsyncStateMachineAttribute("Microsoft.Web.WebView2.Core.CoreWebView2Environment/<CreateCoreWebView2ControllerAsync>d__158")]
public Task`1<CoreWebView2Controller> CreateCoreWebView2ControllerAsync(IntPtr ParentWindow);
    public CoreWebView2WebResourceResponse CreateWebResourceResponse(Stream Content, int StatusCode, string ReasonPhrase, string Headers);
    [AsyncStateMachineAttribute("Microsoft.Web.WebView2.Core.CoreWebView2Environment/<CreateCoreWebView2CompositionControllerAsync>d__160")]
public Task`1<CoreWebView2CompositionController> CreateCoreWebView2CompositionControllerAsync(IntPtr ParentWindow);
    public CoreWebView2PointerInfo CreateCoreWebView2PointerInfo();
    public void add_BrowserProcessExited(EventHandler`1<CoreWebView2BrowserProcessExitedEventArgs> value);
    public void remove_BrowserProcessExited(EventHandler`1<CoreWebView2BrowserProcessExitedEventArgs> value);
    internal void OnBrowserProcessExited(CoreWebView2BrowserProcessExitedEventArgs args);
    public CoreWebView2PrintSettings CreatePrintSettings();
    public string get_UserDataFolder();
    public void add_ProcessInfosChanged(EventHandler`1<object> value);
    public void remove_ProcessInfosChanged(EventHandler`1<object> value);
    internal void OnProcessInfosChanged(object args);
    public IReadOnlyList`1<CoreWebView2ProcessInfo> GetProcessInfos();
    public CoreWebView2ContextMenuItem CreateContextMenuItem(string Label, Stream iconStream, CoreWebView2ContextMenuItemKind Kind);
    public string get_FailureReportFolderPath();
    public CoreWebView2SharedBuffer CreateSharedBuffer(ulong Size);
    [AsyncStateMachineAttribute("Microsoft.Web.WebView2.Core.CoreWebView2Environment/<GetProcessExtendedInfosAsync>d__182")]
public Task`1<IReadOnlyList`1<CoreWebView2ProcessExtendedInfo>> GetProcessExtendedInfosAsync();
    public CoreWebView2FileSystemHandle CreateWebFileSystemFileHandle(string Path, CoreWebView2FileSystemHandlePermission Permission);
    public CoreWebView2FileSystemHandle CreateWebFileSystemDirectoryHandle(string Path, CoreWebView2FileSystemHandlePermission Permission);
    public ulong get_RenderAdapterLUID();
    public void add_RenderAdapterLUIDChanged(EventHandler`1<object> value);
    public void remove_RenderAdapterLUIDChanged(EventHandler`1<object> value);
    internal void OnRenderAdapterLUIDChanged(object args);
    public CoreWebView2TextureStream CreateTextureStream(string streamId, object d3dDevice);
    [AsyncStateMachineAttribute("Microsoft.Web.WebView2.Core.CoreWebView2Environment/<GetProcessInfosWithDetailsAsync>d__194")]
public Task`1<IReadOnlyList`1<CoreWebView2ProcessInfo>> GetProcessInfosWithDetailsAsync();
    [AsyncStateMachineAttribute("Microsoft.Web.WebView2.Core.CoreWebView2Environment/<UpdateRuntimeAsync>d__195")]
public Task`1<CoreWebView2UpdateRuntimeResult> UpdateRuntimeAsync();
}
public class Microsoft.Web.WebView2.Core.CoreWebView2EnvironmentOptions : object {
    [CompilerGeneratedAttribute]
private List`1<CoreWebView2CustomSchemeRegistration> <CustomSchemeRegistrations>k__BackingField;
    private static CoreWebView2ReleaseChannels kInternalChannel;
    private static CoreWebView2ReleaseChannels kAllChannelsFlag;
    internal ICoreWebView2EnvironmentOptions _nativeICoreWebView2EnvironmentOptionsValue;
    internal ICoreWebView2EnvironmentOptions2 _nativeICoreWebView2EnvironmentOptions2Value;
    internal ICoreWebView2EnvironmentOptions3 _nativeICoreWebView2EnvironmentOptions3Value;
    internal ICoreWebView2EnvironmentOptions4 _nativeICoreWebView2EnvironmentOptions4Value;
    internal ICoreWebView2EnvironmentOptions5 _nativeICoreWebView2EnvironmentOptions5Value;
    internal ICoreWebView2EnvironmentOptions6 _nativeICoreWebView2EnvironmentOptions6Value;
    internal ICoreWebView2EnvironmentOptions7 _nativeICoreWebView2EnvironmentOptions7Value;
    internal ICoreWebView2EnvironmentOptions8 _nativeICoreWebView2EnvironmentOptions8Value;
    internal object _rawNative;
    public List`1<CoreWebView2CustomSchemeRegistration> CustomSchemeRegistrations { get; }
    internal ICoreWebView2EnvironmentOptions _nativeICoreWebView2EnvironmentOptions { get; internal set; }
    internal ICoreWebView2EnvironmentOptions2 _nativeICoreWebView2EnvironmentOptions2 { get; internal set; }
    internal ICoreWebView2EnvironmentOptions3 _nativeICoreWebView2EnvironmentOptions3 { get; internal set; }
    internal ICoreWebView2EnvironmentOptions4 _nativeICoreWebView2EnvironmentOptions4 { get; internal set; }
    internal ICoreWebView2EnvironmentOptions5 _nativeICoreWebView2EnvironmentOptions5 { get; internal set; }
    internal ICoreWebView2EnvironmentOptions6 _nativeICoreWebView2EnvironmentOptions6 { get; internal set; }
    internal ICoreWebView2EnvironmentOptions7 _nativeICoreWebView2EnvironmentOptions7 { get; internal set; }
    internal ICoreWebView2EnvironmentOptions8 _nativeICoreWebView2EnvironmentOptions8 { get; internal set; }
    public string AdditionalBrowserArguments { get; public set; }
    public string Language { get; public set; }
    public string TargetCompatibleBrowserVersion { get; public set; }
    public bool AllowSingleSignOnUsingOSPrimaryAccount { get; public set; }
    public bool ExclusiveUserDataFolderAccess { get; public set; }
    public bool IsCustomCrashReportingEnabled { get; public set; }
    public bool EnableTrackingPrevention { get; public set; }
    public bool AreBrowserExtensionsEnabled { get; public set; }
    public CoreWebView2ChannelSearchKind ChannelSearchKind { get; public set; }
    public CoreWebView2ReleaseChannels ReleaseChannels { get; public set; }
    public CoreWebView2ScrollbarStyle ScrollBarStyle { get; public set; }
    public CoreWebView2EnvironmentOptions(string additionalBrowserArguments, string language, string targetCompatibleBrowserVersion, bool allowSingleSignOnUsingOSPrimaryAccount, List`1<CoreWebView2CustomSchemeRegistration> customSchemeRegistrations);
    public CoreWebView2EnvironmentOptions(string additionalBrowserArguments, string language, string targetCompatibleBrowserVersion, bool allowSingleSignOnUsingOSPrimaryAccount, List`1<CoreWebView2CustomSchemeRegistration> customSchemeRegistrations, CoreWebView2ReleaseChannels releaseChannels, CoreWebView2ChannelSearchKind channelSearchKind);
    internal CoreWebView2EnvironmentOptions(object rawCoreWebView2EnvironmentOptions);
    [CompilerGeneratedAttribute]
public List`1<CoreWebView2CustomSchemeRegistration> get_CustomSchemeRegistrations();
    internal ICoreWebView2EnvironmentOptions get__nativeICoreWebView2EnvironmentOptions();
    internal void set__nativeICoreWebView2EnvironmentOptions(ICoreWebView2EnvironmentOptions value);
    internal ICoreWebView2EnvironmentOptions2 get__nativeICoreWebView2EnvironmentOptions2();
    internal void set__nativeICoreWebView2EnvironmentOptions2(ICoreWebView2EnvironmentOptions2 value);
    internal ICoreWebView2EnvironmentOptions3 get__nativeICoreWebView2EnvironmentOptions3();
    internal void set__nativeICoreWebView2EnvironmentOptions3(ICoreWebView2EnvironmentOptions3 value);
    internal ICoreWebView2EnvironmentOptions4 get__nativeICoreWebView2EnvironmentOptions4();
    internal void set__nativeICoreWebView2EnvironmentOptions4(ICoreWebView2EnvironmentOptions4 value);
    internal ICoreWebView2EnvironmentOptions5 get__nativeICoreWebView2EnvironmentOptions5();
    internal void set__nativeICoreWebView2EnvironmentOptions5(ICoreWebView2EnvironmentOptions5 value);
    internal ICoreWebView2EnvironmentOptions6 get__nativeICoreWebView2EnvironmentOptions6();
    internal void set__nativeICoreWebView2EnvironmentOptions6(ICoreWebView2EnvironmentOptions6 value);
    internal ICoreWebView2EnvironmentOptions7 get__nativeICoreWebView2EnvironmentOptions7();
    internal void set__nativeICoreWebView2EnvironmentOptions7(ICoreWebView2EnvironmentOptions7 value);
    internal ICoreWebView2EnvironmentOptions8 get__nativeICoreWebView2EnvironmentOptions8();
    internal void set__nativeICoreWebView2EnvironmentOptions8(ICoreWebView2EnvironmentOptions8 value);
    public string get_AdditionalBrowserArguments();
    public void set_AdditionalBrowserArguments(string value);
    public string get_Language();
    public void set_Language(string value);
    public string get_TargetCompatibleBrowserVersion();
    public void set_TargetCompatibleBrowserVersion(string value);
    public bool get_AllowSingleSignOnUsingOSPrimaryAccount();
    public void set_AllowSingleSignOnUsingOSPrimaryAccount(bool value);
    public bool get_ExclusiveUserDataFolderAccess();
    public void set_ExclusiveUserDataFolderAccess(bool value);
    public bool get_IsCustomCrashReportingEnabled();
    public void set_IsCustomCrashReportingEnabled(bool value);
    public bool get_EnableTrackingPrevention();
    public void set_EnableTrackingPrevention(bool value);
    public bool get_AreBrowserExtensionsEnabled();
    public void set_AreBrowserExtensionsEnabled(bool value);
    public CoreWebView2ChannelSearchKind get_ChannelSearchKind();
    public void set_ChannelSearchKind(CoreWebView2ChannelSearchKind value);
    public CoreWebView2ReleaseChannels get_ReleaseChannels();
    public void set_ReleaseChannels(CoreWebView2ReleaseChannels value);
    public CoreWebView2ScrollbarStyle get_ScrollBarStyle();
    public void set_ScrollBarStyle(CoreWebView2ScrollbarStyle value);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2EstimatedEndTimeChangedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2EstimatedEndTimeChangedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2DownloadOperation source, object args);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2ExecuteScriptCompletedHandler : object {
    [CompilerGeneratedAttribute]
private string <result>k__BackingField;
    [CompilerGeneratedAttribute]
private int <errCode>k__BackingField;
    private Action continuation;
    [CompilerGeneratedAttribute]
private bool <IsCompleted>k__BackingField;
    public string result { get; private set; }
    public int errCode { get; private set; }
    public bool IsCompleted { get; private set; }
    [CompilerGeneratedAttribute]
public string get_result();
    [CompilerGeneratedAttribute]
private void set_result(string value);
    [CompilerGeneratedAttribute]
public int get_errCode();
    [CompilerGeneratedAttribute]
private void set_errCode(int value);
    public sealed virtual void Invoke(int errCode, string result);
    public CoreWebView2ExecuteScriptCompletedHandler GetAwaiter();
    [CompilerGeneratedAttribute]
public bool get_IsCompleted();
    [CompilerGeneratedAttribute]
private void set_IsCompleted(bool value);
    public sealed virtual void OnCompleted(Action continuation);
    public string GetResult();
}
public class Microsoft.Web.WebView2.Core.CoreWebView2ExecuteScriptResult : object {
    internal ICoreWebView2ExecuteScriptResult _nativeICoreWebView2ExecuteScriptResultValue;
    internal object _rawNative;
    internal ICoreWebView2ExecuteScriptResult _nativeICoreWebView2ExecuteScriptResult { get; internal set; }
    public bool Succeeded { get; }
    public string ResultAsJson { get; }
    public CoreWebView2ScriptException Exception { get; }
    internal CoreWebView2ExecuteScriptResult(object rawCoreWebView2ExecuteScriptResult);
    internal ICoreWebView2ExecuteScriptResult get__nativeICoreWebView2ExecuteScriptResult();
    internal void set__nativeICoreWebView2ExecuteScriptResult(ICoreWebView2ExecuteScriptResult value);
    public bool get_Succeeded();
    public string get_ResultAsJson();
    public CoreWebView2ScriptException get_Exception();
    public void TryGetResultAsString(String& stringResult, Int32& value);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2ExecuteScriptWithResultCompletedHandler : object {
    [CompilerGeneratedAttribute]
private CoreWebView2ExecuteScriptResult <result>k__BackingField;
    [CompilerGeneratedAttribute]
private int <errCode>k__BackingField;
    private Action continuation;
    [CompilerGeneratedAttribute]
private bool <IsCompleted>k__BackingField;
    public CoreWebView2ExecuteScriptResult result { get; private set; }
    public int errCode { get; private set; }
    public bool IsCompleted { get; private set; }
    [CompilerGeneratedAttribute]
public CoreWebView2ExecuteScriptResult get_result();
    [CompilerGeneratedAttribute]
private void set_result(CoreWebView2ExecuteScriptResult value);
    [CompilerGeneratedAttribute]
public int get_errCode();
    [CompilerGeneratedAttribute]
private void set_errCode(int value);
    public sealed virtual void Invoke(int errCode, ICoreWebView2ExecuteScriptResult result);
    public CoreWebView2ExecuteScriptWithResultCompletedHandler GetAwaiter();
    [CompilerGeneratedAttribute]
public bool get_IsCompleted();
    [CompilerGeneratedAttribute]
private void set_IsCompleted(bool value);
    public sealed virtual void OnCompleted(Action continuation);
    public CoreWebView2ExecuteScriptResult GetResult();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2ExperimentalFrameScreenCaptureStartingEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2ExperimentalFrameScreenCaptureStartingEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2Frame source, ICoreWebView2ExperimentalScreenCaptureStartingEventArgs args);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2ExperimentalRasterizationScaleChangedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2ExperimentalRasterizationScaleChangedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2ExperimentalController source, object args);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2ExperimentalRenderAdapterLUIDChangedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2ExperimentalRenderAdapterLUIDChangedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2ExperimentalEnvironment12 source, object args);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2ExperimentalSaveFileSecurityCheckStartingEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2ExperimentalSaveFileSecurityCheckStartingEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2 source, ICoreWebView2ExperimentalSaveFileSecurityCheckStartingEventArgs args);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2ExperimentalScreenCaptureStartingEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2ExperimentalScreenCaptureStartingEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2 source, ICoreWebView2ExperimentalScreenCaptureStartingEventArgs args);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2ExperimentalTextureStreamErrorReceivedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2ExperimentalTextureStreamErrorReceivedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2ExperimentalTextureStream source, ICoreWebView2ExperimentalTextureStreamErrorReceivedEventArgs args);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2ExperimentalTextureStreamStartRequestedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2ExperimentalTextureStreamStartRequestedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2ExperimentalTextureStream source, object args);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2ExperimentalTextureStreamStoppedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2ExperimentalTextureStreamStoppedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2ExperimentalTextureStream source, object args);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2ExperimentalTextureStreamWebTextureReceivedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2ExperimentalTextureStreamWebTextureReceivedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2ExperimentalTextureStream source, ICoreWebView2ExperimentalTextureStreamWebTextureReceivedEventArgs args);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2ExperimentalTextureStreamWebTextureStreamStoppedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2ExperimentalTextureStreamWebTextureStreamStoppedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2ExperimentalTextureStream source, object args);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2FaviconChangedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2FaviconChangedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2 source, object args);
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2FaviconImageFormat : Enum {
    public int value__;
    public static CoreWebView2FaviconImageFormat Png;
    public static CoreWebView2FaviconImageFormat Jpeg;
}
public class Microsoft.Web.WebView2.Core.CoreWebView2File : object {
    internal ICoreWebView2File _nativeICoreWebView2FileValue;
    internal object _rawNative;
    internal ICoreWebView2File _nativeICoreWebView2File { get; internal set; }
    public string Path { get; }
    internal CoreWebView2File(object rawCoreWebView2File);
    internal ICoreWebView2File get__nativeICoreWebView2File();
    internal void set__nativeICoreWebView2File(ICoreWebView2File value);
    public string get_Path();
}
public class Microsoft.Web.WebView2.Core.CoreWebView2FileSystemHandle : object {
    internal ICoreWebView2FileSystemHandle _nativeICoreWebView2FileSystemHandleValue;
    internal object _rawNative;
    internal ICoreWebView2FileSystemHandle _nativeICoreWebView2FileSystemHandle { get; internal set; }
    public CoreWebView2FileSystemHandleKind Kind { get; }
    public string Path { get; }
    public CoreWebView2FileSystemHandlePermission Permission { get; }
    internal CoreWebView2FileSystemHandle(object rawCoreWebView2FileSystemHandle);
    internal ICoreWebView2FileSystemHandle get__nativeICoreWebView2FileSystemHandle();
    internal void set__nativeICoreWebView2FileSystemHandle(ICoreWebView2FileSystemHandle value);
    public CoreWebView2FileSystemHandleKind get_Kind();
    public string get_Path();
    public CoreWebView2FileSystemHandlePermission get_Permission();
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2FileSystemHandleKind : Enum {
    public int value__;
    public static CoreWebView2FileSystemHandleKind File;
    public static CoreWebView2FileSystemHandleKind Directory;
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2FileSystemHandlePermission : Enum {
    public int value__;
    public static CoreWebView2FileSystemHandlePermission ReadOnly;
    public static CoreWebView2FileSystemHandlePermission ReadWrite;
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2FocusChangedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2FocusChangedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2Controller source, object args);
}
public class Microsoft.Web.WebView2.Core.CoreWebView2Frame : object {
    internal ICoreWebView2Frame _nativeICoreWebView2FrameValue;
    internal ICoreWebView2Frame2 _nativeICoreWebView2Frame2Value;
    internal ICoreWebView2Frame3 _nativeICoreWebView2Frame3Value;
    internal ICoreWebView2Frame4 _nativeICoreWebView2Frame4Value;
    internal ICoreWebView2Frame5 _nativeICoreWebView2Frame5Value;
    internal ICoreWebView2ExperimentalFrame7 _nativeICoreWebView2ExperimentalFrame7Value;
    internal ICoreWebView2ExperimentalFrame6 _nativeICoreWebView2ExperimentalFrame6Value;
    internal ICoreWebView2ExperimentalFrame5 _nativeICoreWebView2ExperimentalFrame5Value;
    internal ICoreWebView2ExperimentalFrame4 _nativeICoreWebView2ExperimentalFrame4Value;
    internal ICoreWebView2ExperimentalFrame3 _nativeICoreWebView2ExperimentalFrame3Value;
    internal ICoreWebView2ExperimentalFrame2 _nativeICoreWebView2ExperimentalFrame2Value;
    internal ICoreWebView2ExperimentalFrame _nativeICoreWebView2ExperimentalFrameValue;
    internal object _rawNative;
    private EventRegistrationToken _nameChangedToken;
    private EventHandler`1<object> nameChanged;
    private EventRegistrationToken _destroyedToken;
    private EventHandler`1<object> destroyed;
    private EventRegistrationToken _navigationStartingToken;
    private EventHandler`1<CoreWebView2NavigationStartingEventArgs> navigationStarting;
    private EventRegistrationToken _contentLoadingToken;
    private EventHandler`1<CoreWebView2ContentLoadingEventArgs> contentLoading;
    private EventRegistrationToken _navigationCompletedToken;
    private EventHandler`1<CoreWebView2NavigationCompletedEventArgs> navigationCompleted;
    private EventRegistrationToken _dOMContentLoadedToken;
    private EventHandler`1<CoreWebView2DOMContentLoadedEventArgs> dOMContentLoaded;
    private EventRegistrationToken _webMessageReceivedToken;
    private EventHandler`1<CoreWebView2WebMessageReceivedEventArgs> webMessageReceived;
    private EventRegistrationToken _permissionRequestedToken;
    private EventHandler`1<CoreWebView2PermissionRequestedEventArgs> permissionRequested;
    private EventRegistrationToken _screenCaptureStartingToken;
    private EventHandler`1<CoreWebView2ScreenCaptureStartingEventArgs> screenCaptureStarting;
    internal ICoreWebView2Frame _nativeICoreWebView2Frame { get; internal set; }
    internal ICoreWebView2Frame2 _nativeICoreWebView2Frame2 { get; internal set; }
    internal ICoreWebView2Frame3 _nativeICoreWebView2Frame3 { get; internal set; }
    internal ICoreWebView2Frame4 _nativeICoreWebView2Frame4 { get; internal set; }
    internal ICoreWebView2Frame5 _nativeICoreWebView2Frame5 { get; internal set; }
    internal ICoreWebView2ExperimentalFrame7 _nativeICoreWebView2ExperimentalFrame7 { get; internal set; }
    internal ICoreWebView2ExperimentalFrame6 _nativeICoreWebView2ExperimentalFrame6 { get; internal set; }
    internal ICoreWebView2ExperimentalFrame5 _nativeICoreWebView2ExperimentalFrame5 { get; internal set; }
    internal ICoreWebView2ExperimentalFrame4 _nativeICoreWebView2ExperimentalFrame4 { get; internal set; }
    internal ICoreWebView2ExperimentalFrame3 _nativeICoreWebView2ExperimentalFrame3 { get; internal set; }
    internal ICoreWebView2ExperimentalFrame2 _nativeICoreWebView2ExperimentalFrame2 { get; internal set; }
    internal ICoreWebView2ExperimentalFrame _nativeICoreWebView2ExperimentalFrame { get; internal set; }
    public string Name { get; }
    public UInt32 FrameId { get; }
    public bool UseOverrideTimerWakeInterval { get; public set; }
    internal CoreWebView2Frame(object rawCoreWebView2Frame);
    public void AddHostObjectToScript(string name, object rawObject, IEnumerable`1<string> origins);
    internal ICoreWebView2Frame get__nativeICoreWebView2Frame();
    internal void set__nativeICoreWebView2Frame(ICoreWebView2Frame value);
    internal ICoreWebView2Frame2 get__nativeICoreWebView2Frame2();
    internal void set__nativeICoreWebView2Frame2(ICoreWebView2Frame2 value);
    internal ICoreWebView2Frame3 get__nativeICoreWebView2Frame3();
    internal void set__nativeICoreWebView2Frame3(ICoreWebView2Frame3 value);
    internal ICoreWebView2Frame4 get__nativeICoreWebView2Frame4();
    internal void set__nativeICoreWebView2Frame4(ICoreWebView2Frame4 value);
    internal ICoreWebView2Frame5 get__nativeICoreWebView2Frame5();
    internal void set__nativeICoreWebView2Frame5(ICoreWebView2Frame5 value);
    internal ICoreWebView2ExperimentalFrame7 get__nativeICoreWebView2ExperimentalFrame7();
    internal void set__nativeICoreWebView2ExperimentalFrame7(ICoreWebView2ExperimentalFrame7 value);
    internal ICoreWebView2ExperimentalFrame6 get__nativeICoreWebView2ExperimentalFrame6();
    internal void set__nativeICoreWebView2ExperimentalFrame6(ICoreWebView2ExperimentalFrame6 value);
    internal ICoreWebView2ExperimentalFrame5 get__nativeICoreWebView2ExperimentalFrame5();
    internal void set__nativeICoreWebView2ExperimentalFrame5(ICoreWebView2ExperimentalFrame5 value);
    internal ICoreWebView2ExperimentalFrame4 get__nativeICoreWebView2ExperimentalFrame4();
    internal void set__nativeICoreWebView2ExperimentalFrame4(ICoreWebView2ExperimentalFrame4 value);
    internal ICoreWebView2ExperimentalFrame3 get__nativeICoreWebView2ExperimentalFrame3();
    internal void set__nativeICoreWebView2ExperimentalFrame3(ICoreWebView2ExperimentalFrame3 value);
    internal ICoreWebView2ExperimentalFrame2 get__nativeICoreWebView2ExperimentalFrame2();
    internal void set__nativeICoreWebView2ExperimentalFrame2(ICoreWebView2ExperimentalFrame2 value);
    internal ICoreWebView2ExperimentalFrame get__nativeICoreWebView2ExperimentalFrame();
    internal void set__nativeICoreWebView2ExperimentalFrame(ICoreWebView2ExperimentalFrame value);
    public string get_Name();
    public void add_NameChanged(EventHandler`1<object> value);
    public void remove_NameChanged(EventHandler`1<object> value);
    internal void OnNameChanged(object args);
    public void add_Destroyed(EventHandler`1<object> value);
    public void remove_Destroyed(EventHandler`1<object> value);
    internal void OnDestroyed(object args);
    public void RemoveHostObjectFromScript(string name);
    public int IsDestroyed();
    public void add_NavigationStarting(EventHandler`1<CoreWebView2NavigationStartingEventArgs> value);
    public void remove_NavigationStarting(EventHandler`1<CoreWebView2NavigationStartingEventArgs> value);
    internal void OnNavigationStarting(CoreWebView2NavigationStartingEventArgs args);
    public void add_ContentLoading(EventHandler`1<CoreWebView2ContentLoadingEventArgs> value);
    public void remove_ContentLoading(EventHandler`1<CoreWebView2ContentLoadingEventArgs> value);
    internal void OnContentLoading(CoreWebView2ContentLoadingEventArgs args);
    public void add_NavigationCompleted(EventHandler`1<CoreWebView2NavigationCompletedEventArgs> value);
    public void remove_NavigationCompleted(EventHandler`1<CoreWebView2NavigationCompletedEventArgs> value);
    internal void OnNavigationCompleted(CoreWebView2NavigationCompletedEventArgs args);
    public void add_DOMContentLoaded(EventHandler`1<CoreWebView2DOMContentLoadedEventArgs> value);
    public void remove_DOMContentLoaded(EventHandler`1<CoreWebView2DOMContentLoadedEventArgs> value);
    internal void OnDOMContentLoaded(CoreWebView2DOMContentLoadedEventArgs args);
    public void add_WebMessageReceived(EventHandler`1<CoreWebView2WebMessageReceivedEventArgs> value);
    public void remove_WebMessageReceived(EventHandler`1<CoreWebView2WebMessageReceivedEventArgs> value);
    internal void OnWebMessageReceived(CoreWebView2WebMessageReceivedEventArgs args);
    [AsyncStateMachineAttribute("Microsoft.Web.WebView2.Core.CoreWebView2Frame/<ExecuteScriptAsync>d__98")]
public Task`1<string> ExecuteScriptAsync(string javaScript);
    public void PostWebMessageAsJson(string webMessageAsJson);
    public void PostWebMessageAsString(string webMessageAsString);
    public void add_PermissionRequested(EventHandler`1<CoreWebView2PermissionRequestedEventArgs> value);
    public void remove_PermissionRequested(EventHandler`1<CoreWebView2PermissionRequestedEventArgs> value);
    internal void OnPermissionRequested(CoreWebView2PermissionRequestedEventArgs args);
    public void PostSharedBufferToScript(CoreWebView2SharedBuffer sharedBuffer, CoreWebView2SharedBufferAccess access, string additionalDataAsJson);
    public UInt32 get_FrameId();
    public bool get_UseOverrideTimerWakeInterval();
    public void set_UseOverrideTimerWakeInterval(bool value);
    public void add_ScreenCaptureStarting(EventHandler`1<CoreWebView2ScreenCaptureStartingEventArgs> value);
    public void remove_ScreenCaptureStarting(EventHandler`1<CoreWebView2ScreenCaptureStartingEventArgs> value);
    internal void OnScreenCaptureStarting(CoreWebView2ScreenCaptureStartingEventArgs args);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2FrameContentLoadingEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2FrameContentLoadingEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2Frame source, ICoreWebView2ContentLoadingEventArgs args);
}
public class Microsoft.Web.WebView2.Core.CoreWebView2FrameCreatedEventArgs : EventArgs {
    internal ICoreWebView2FrameCreatedEventArgs _nativeICoreWebView2FrameCreatedEventArgsValue;
    internal object _rawNative;
    internal ICoreWebView2FrameCreatedEventArgs _nativeICoreWebView2FrameCreatedEventArgs { get; internal set; }
    public CoreWebView2Frame Frame { get; }
    internal CoreWebView2FrameCreatedEventArgs(object rawCoreWebView2FrameCreatedEventArgs);
    internal ICoreWebView2FrameCreatedEventArgs get__nativeICoreWebView2FrameCreatedEventArgs();
    internal void set__nativeICoreWebView2FrameCreatedEventArgs(ICoreWebView2FrameCreatedEventArgs value);
    public CoreWebView2Frame get_Frame();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2FrameCreatedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2FrameCreatedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2 source, ICoreWebView2FrameCreatedEventArgs args);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2FrameDestroyedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2FrameDestroyedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2Frame source, object args);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2FrameDOMContentLoadedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2FrameDOMContentLoadedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2Frame source, ICoreWebView2DOMContentLoadedEventArgs args);
}
public class Microsoft.Web.WebView2.Core.CoreWebView2FrameInfo : object {
    internal ICoreWebView2FrameInfo _nativeICoreWebView2FrameInfoValue;
    internal ICoreWebView2FrameInfo2 _nativeICoreWebView2FrameInfo2Value;
    internal ICoreWebView2ExperimentalFrameInfo _nativeICoreWebView2ExperimentalFrameInfoValue;
    internal object _rawNative;
    internal ICoreWebView2FrameInfo _nativeICoreWebView2FrameInfo { get; internal set; }
    internal ICoreWebView2FrameInfo2 _nativeICoreWebView2FrameInfo2 { get; internal set; }
    internal ICoreWebView2ExperimentalFrameInfo _nativeICoreWebView2ExperimentalFrameInfo { get; internal set; }
    public string Name { get; }
    public string Source { get; }
    public CoreWebView2FrameInfo ParentFrameInfo { get; }
    public UInt32 FrameId { get; }
    public CoreWebView2FrameKind FrameKind { get; }
    internal CoreWebView2FrameInfo(object rawCoreWebView2FrameInfo);
    internal ICoreWebView2FrameInfo get__nativeICoreWebView2FrameInfo();
    internal void set__nativeICoreWebView2FrameInfo(ICoreWebView2FrameInfo value);
    internal ICoreWebView2FrameInfo2 get__nativeICoreWebView2FrameInfo2();
    internal void set__nativeICoreWebView2FrameInfo2(ICoreWebView2FrameInfo2 value);
    internal ICoreWebView2ExperimentalFrameInfo get__nativeICoreWebView2ExperimentalFrameInfo();
    internal void set__nativeICoreWebView2ExperimentalFrameInfo(ICoreWebView2ExperimentalFrameInfo value);
    public string get_Name();
    public string get_Source();
    public CoreWebView2FrameInfo get_ParentFrameInfo();
    public UInt32 get_FrameId();
    public CoreWebView2FrameKind get_FrameKind();
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2FrameKind : Enum {
    public int value__;
    public static CoreWebView2FrameKind Unknown;
    public static CoreWebView2FrameKind MainFrame;
    public static CoreWebView2FrameKind Iframe;
    public static CoreWebView2FrameKind Embed;
    public static CoreWebView2FrameKind Object;
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2FrameNameChangedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2FrameNameChangedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2Frame source, object args);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2FrameNavigationCompletedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2FrameNavigationCompletedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2Frame source, ICoreWebView2NavigationCompletedEventArgs args);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2FrameNavigationStartingEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2FrameNavigationStartingEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2Frame source, ICoreWebView2NavigationStartingEventArgs args);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2FramePermissionRequestedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2FramePermissionRequestedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2Frame source, ICoreWebView2PermissionRequestedEventArgs2 args);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2FrameWebMessageReceivedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2FrameWebMessageReceivedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2Frame source, ICoreWebView2WebMessageReceivedEventArgs args);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2GetCookiesCompletedHandler : object {
    [CompilerGeneratedAttribute]
private List`1<CoreWebView2Cookie> <result>k__BackingField;
    [CompilerGeneratedAttribute]
private int <errCode>k__BackingField;
    private Action continuation;
    [CompilerGeneratedAttribute]
private bool <IsCompleted>k__BackingField;
    public List`1<CoreWebView2Cookie> result { get; private set; }
    public int errCode { get; private set; }
    public bool IsCompleted { get; private set; }
    [CompilerGeneratedAttribute]
public List`1<CoreWebView2Cookie> get_result();
    [CompilerGeneratedAttribute]
private void set_result(List`1<CoreWebView2Cookie> value);
    [CompilerGeneratedAttribute]
public int get_errCode();
    [CompilerGeneratedAttribute]
private void set_errCode(int value);
    public sealed virtual void Invoke(int errCode, ICoreWebView2CookieList result);
    public CoreWebView2GetCookiesCompletedHandler GetAwaiter();
    [CompilerGeneratedAttribute]
public bool get_IsCompleted();
    [CompilerGeneratedAttribute]
private void set_IsCompleted(bool value);
    public sealed virtual void OnCompleted(Action continuation);
    public List`1<CoreWebView2Cookie> GetResult();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2GetFaviconCompletedHandler : object {
    [CompilerGeneratedAttribute]
private Stream <result>k__BackingField;
    [CompilerGeneratedAttribute]
private int <errCode>k__BackingField;
    private Action continuation;
    [CompilerGeneratedAttribute]
private bool <IsCompleted>k__BackingField;
    public Stream result { get; private set; }
    public int errCode { get; private set; }
    public bool IsCompleted { get; private set; }
    [CompilerGeneratedAttribute]
public Stream get_result();
    [CompilerGeneratedAttribute]
private void set_result(Stream value);
    [CompilerGeneratedAttribute]
public int get_errCode();
    [CompilerGeneratedAttribute]
private void set_errCode(int value);
    public sealed virtual void Invoke(int errCode, IStream result);
    public CoreWebView2GetFaviconCompletedHandler GetAwaiter();
    [CompilerGeneratedAttribute]
public bool get_IsCompleted();
    [CompilerGeneratedAttribute]
private void set_IsCompleted(bool value);
    public sealed virtual void OnCompleted(Action continuation);
    public Stream GetResult();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2GetNonDefaultPermissionSettingsCompletedHandler : object {
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<CoreWebView2PermissionSetting> <result>k__BackingField;
    [CompilerGeneratedAttribute]
private int <errCode>k__BackingField;
    private Action continuation;
    [CompilerGeneratedAttribute]
private bool <IsCompleted>k__BackingField;
    public IReadOnlyList`1<CoreWebView2PermissionSetting> result { get; private set; }
    public int errCode { get; private set; }
    public bool IsCompleted { get; private set; }
    public sealed virtual void Invoke(int errCode, ICoreWebView2PermissionSettingCollectionView permissionSettingCollectionView);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<CoreWebView2PermissionSetting> get_result();
    [CompilerGeneratedAttribute]
private void set_result(IReadOnlyList`1<CoreWebView2PermissionSetting> value);
    [CompilerGeneratedAttribute]
public int get_errCode();
    [CompilerGeneratedAttribute]
private void set_errCode(int value);
    public void Invoke(int errCode, IReadOnlyList`1<CoreWebView2PermissionSetting> result);
    public CoreWebView2GetNonDefaultPermissionSettingsCompletedHandler GetAwaiter();
    [CompilerGeneratedAttribute]
public bool get_IsCompleted();
    [CompilerGeneratedAttribute]
private void set_IsCompleted(bool value);
    public sealed virtual void OnCompleted(Action continuation);
    public IReadOnlyList`1<CoreWebView2PermissionSetting> GetResult();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2GetProcessExtendedInfosCompletedHandler : object {
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<CoreWebView2ProcessExtendedInfo> <result>k__BackingField;
    [CompilerGeneratedAttribute]
private int <errCode>k__BackingField;
    private Action continuation;
    [CompilerGeneratedAttribute]
private bool <IsCompleted>k__BackingField;
    public IReadOnlyList`1<CoreWebView2ProcessExtendedInfo> result { get; private set; }
    public int errCode { get; private set; }
    public bool IsCompleted { get; private set; }
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<CoreWebView2ProcessExtendedInfo> get_result();
    [CompilerGeneratedAttribute]
private void set_result(IReadOnlyList`1<CoreWebView2ProcessExtendedInfo> value);
    [CompilerGeneratedAttribute]
public int get_errCode();
    [CompilerGeneratedAttribute]
private void set_errCode(int value);
    public sealed virtual void Invoke(int errCode, ICoreWebView2ProcessExtendedInfoCollection result);
    public CoreWebView2GetProcessExtendedInfosCompletedHandler GetAwaiter();
    [CompilerGeneratedAttribute]
public bool get_IsCompleted();
    [CompilerGeneratedAttribute]
private void set_IsCompleted(bool value);
    public sealed virtual void OnCompleted(Action continuation);
    public IReadOnlyList`1<CoreWebView2ProcessExtendedInfo> GetResult();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2GetProcessInfosWithDetailsCompletedHandler : object {
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<CoreWebView2ProcessInfo> <result>k__BackingField;
    [CompilerGeneratedAttribute]
private int <errCode>k__BackingField;
    private Action continuation;
    [CompilerGeneratedAttribute]
private bool <IsCompleted>k__BackingField;
    public IReadOnlyList`1<CoreWebView2ProcessInfo> result { get; private set; }
    public int errCode { get; private set; }
    public bool IsCompleted { get; private set; }
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<CoreWebView2ProcessInfo> get_result();
    [CompilerGeneratedAttribute]
private void set_result(IReadOnlyList`1<CoreWebView2ProcessInfo> value);
    [CompilerGeneratedAttribute]
public int get_errCode();
    [CompilerGeneratedAttribute]
private void set_errCode(int value);
    public sealed virtual void Invoke(int errCode, ICoreWebView2ProcessInfoCollection result);
    public CoreWebView2GetProcessInfosWithDetailsCompletedHandler GetAwaiter();
    [CompilerGeneratedAttribute]
public bool get_IsCompleted();
    [CompilerGeneratedAttribute]
private void set_IsCompleted(bool value);
    public sealed virtual void OnCompleted(Action continuation);
    public IReadOnlyList`1<CoreWebView2ProcessInfo> GetResult();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2HistoryChangedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2HistoryChangedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2 source, object args);
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2HostResourceAccessKind : Enum {
    public int value__;
    public static CoreWebView2HostResourceAccessKind Deny;
    public static CoreWebView2HostResourceAccessKind Allow;
    public static CoreWebView2HostResourceAccessKind DenyCors;
}
public class Microsoft.Web.WebView2.Core.CoreWebView2HttpHeadersCollectionIterator : object {
    private bool isInitialized;
    internal ICoreWebView2HttpHeadersCollectionIterator _nativeICoreWebView2HttpHeadersCollectionIteratorValue;
    internal object _rawNative;
    private object System.Collections.IEnumerator.Current { get; }
    public KeyValuePair`2<string, string> Current { get; }
    internal ICoreWebView2HttpHeadersCollectionIterator _nativeICoreWebView2HttpHeadersCollectionIterator { get; internal set; }
    public bool HasCurrentHeader { get; }
    internal CoreWebView2HttpHeadersCollectionIterator(object rawCoreWebView2HttpHeadersCollectionIterator);
    public sealed virtual bool MoveNext();
    public sealed virtual void Reset();
    public sealed virtual void Dispose();
    private sealed virtual override object System.Collections.IEnumerator.get_Current();
    public sealed virtual KeyValuePair`2<string, string> get_Current();
    internal ICoreWebView2HttpHeadersCollectionIterator get__nativeICoreWebView2HttpHeadersCollectionIterator();
    internal void set__nativeICoreWebView2HttpHeadersCollectionIterator(ICoreWebView2HttpHeadersCollectionIterator value);
    public bool get_HasCurrentHeader();
    private void GetCurrentHeader(String& name, String& value);
}
public class Microsoft.Web.WebView2.Core.CoreWebView2HttpRequestHeaders : object {
    internal ICoreWebView2HttpRequestHeaders _nativeICoreWebView2HttpRequestHeadersValue;
    internal object _rawNative;
    internal ICoreWebView2HttpRequestHeaders _nativeICoreWebView2HttpRequestHeaders { get; internal set; }
    internal CoreWebView2HttpRequestHeaders(object rawCoreWebView2HttpRequestHeaders);
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IEnumerator`1<KeyValuePair`2<string, string>> System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.String>>.GetEnumerator();
    public CoreWebView2HttpHeadersCollectionIterator GetEnumerator();
    internal ICoreWebView2HttpRequestHeaders get__nativeICoreWebView2HttpRequestHeaders();
    internal void set__nativeICoreWebView2HttpRequestHeaders(ICoreWebView2HttpRequestHeaders value);
    public string GetHeader(string name);
    public CoreWebView2HttpHeadersCollectionIterator GetHeaders(string name);
    public bool Contains(string name);
    public void SetHeader(string name, string value);
    public void RemoveHeader(string name);
    public CoreWebView2HttpHeadersCollectionIterator GetIterator();
}
public class Microsoft.Web.WebView2.Core.CoreWebView2HttpResponseHeaders : object {
    internal ICoreWebView2HttpResponseHeaders _nativeICoreWebView2HttpResponseHeadersValue;
    internal object _rawNative;
    internal ICoreWebView2HttpResponseHeaders _nativeICoreWebView2HttpResponseHeaders { get; internal set; }
    internal CoreWebView2HttpResponseHeaders(object rawCoreWebView2HttpResponseHeaders);
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IEnumerator`1<KeyValuePair`2<string, string>> System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.String>>.GetEnumerator();
    public CoreWebView2HttpHeadersCollectionIterator GetEnumerator();
    internal ICoreWebView2HttpResponseHeaders get__nativeICoreWebView2HttpResponseHeaders();
    internal void set__nativeICoreWebView2HttpResponseHeaders(ICoreWebView2HttpResponseHeaders value);
    public void AppendHeader(string name, string value);
    public bool Contains(string name);
    public string GetHeader(string name);
    public CoreWebView2HttpHeadersCollectionIterator GetHeaders(string name);
    public CoreWebView2HttpHeadersCollectionIterator GetIterator();
}
public class Microsoft.Web.WebView2.Core.CoreWebView2InitializationCompletedEventArgs : EventArgs {
    [CompilerGeneratedAttribute]
private Exception <InitializationException>k__BackingField;
    public bool IsSuccess { get; }
    public Exception InitializationException { get; private set; }
    public CoreWebView2InitializationCompletedEventArgs(Exception ex);
    public bool get_IsSuccess();
    [CompilerGeneratedAttribute]
public Exception get_InitializationException();
    [CompilerGeneratedAttribute]
private void set_InitializationException(Exception value);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2IsDefaultDownloadDialogOpenChangedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2IsDefaultDownloadDialogOpenChangedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2 source, object args);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2IsDocumentPlayingAudioChangedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2IsDocumentPlayingAudioChangedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2 source, object args);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2IsMutedChangedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2IsMutedChangedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2 source, object args);
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2KeyEventKind : Enum {
    public int value__;
    public static CoreWebView2KeyEventKind KeyDown;
    public static CoreWebView2KeyEventKind KeyUp;
    public static CoreWebView2KeyEventKind SystemKeyDown;
    public static CoreWebView2KeyEventKind SystemKeyUp;
}
public class Microsoft.Web.WebView2.Core.CoreWebView2LaunchingExternalUriSchemeEventArgs : EventArgs {
    internal ICoreWebView2LaunchingExternalUriSchemeEventArgs _nativeICoreWebView2LaunchingExternalUriSchemeEventArgsValue;
    internal object _rawNative;
    internal ICoreWebView2LaunchingExternalUriSchemeEventArgs _nativeICoreWebView2LaunchingExternalUriSchemeEventArgs { get; internal set; }
    public string Uri { get; }
    public string InitiatingOrigin { get; }
    public bool IsUserInitiated { get; }
    public bool Cancel { get; public set; }
    internal CoreWebView2LaunchingExternalUriSchemeEventArgs(object rawCoreWebView2LaunchingExternalUriSchemeEventArgs);
    internal ICoreWebView2LaunchingExternalUriSchemeEventArgs get__nativeICoreWebView2LaunchingExternalUriSchemeEventArgs();
    internal void set__nativeICoreWebView2LaunchingExternalUriSchemeEventArgs(ICoreWebView2LaunchingExternalUriSchemeEventArgs value);
    public string get_Uri();
    public string get_InitiatingOrigin();
    public bool get_IsUserInitiated();
    public bool get_Cancel();
    public void set_Cancel(bool value);
    public CoreWebView2Deferral GetDeferral();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2LaunchingExternalUriSchemeEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2LaunchingExternalUriSchemeEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2 source, ICoreWebView2LaunchingExternalUriSchemeEventArgs args);
}
public class Microsoft.Web.WebView2.Core.CoreWebView2Matrix4x4 : ValueType {
    public float _11;
    public float _12;
    public float _13;
    public float _14;
    public float _21;
    public float _22;
    public float _23;
    public float _24;
    public float _31;
    public float _32;
    public float _33;
    public float _34;
    public float _41;
    public float _42;
    public float _43;
    public float _44;
    internal CoreWebView2Matrix4x4(COREWEBVIEW2_MATRIX_4X4 rawStruct);
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2MemoryUsageTargetLevel : Enum {
    public int value__;
    public static CoreWebView2MemoryUsageTargetLevel Normal;
    public static CoreWebView2MemoryUsageTargetLevel Low;
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2MouseEventKind : Enum {
    public int value__;
    public static CoreWebView2MouseEventKind HorizontalWheel;
    public static CoreWebView2MouseEventKind LeftButtonDoubleClick;
    public static CoreWebView2MouseEventKind LeftButtonDown;
    public static CoreWebView2MouseEventKind LeftButtonUp;
    public static CoreWebView2MouseEventKind Leave;
    public static CoreWebView2MouseEventKind MiddleButtonDoubleClick;
    public static CoreWebView2MouseEventKind MiddleButtonDown;
    public static CoreWebView2MouseEventKind MiddleButtonUp;
    public static CoreWebView2MouseEventKind Move;
    public static CoreWebView2MouseEventKind RightButtonDoubleClick;
    public static CoreWebView2MouseEventKind RightButtonDown;
    public static CoreWebView2MouseEventKind RightButtonUp;
    public static CoreWebView2MouseEventKind Wheel;
    public static CoreWebView2MouseEventKind XButtonDoubleClick;
    public static CoreWebView2MouseEventKind XButtonDown;
    public static CoreWebView2MouseEventKind XButtonUp;
    public static CoreWebView2MouseEventKind NonClientRightButtonDown;
    public static CoreWebView2MouseEventKind NonClientRightButtonUp;
}
[FlagsAttribute]
public enum Microsoft.Web.WebView2.Core.CoreWebView2MouseEventVirtualKeys : Enum {
    public int value__;
    public static CoreWebView2MouseEventVirtualKeys None;
    public static CoreWebView2MouseEventVirtualKeys LeftButton;
    public static CoreWebView2MouseEventVirtualKeys RightButton;
    public static CoreWebView2MouseEventVirtualKeys Shift;
    public static CoreWebView2MouseEventVirtualKeys Control;
    public static CoreWebView2MouseEventVirtualKeys MiddleButton;
    public static CoreWebView2MouseEventVirtualKeys XButton1;
    public static CoreWebView2MouseEventVirtualKeys XButton2;
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2MoveFocusReason : Enum {
    public int value__;
    public static CoreWebView2MoveFocusReason Programmatic;
    public static CoreWebView2MoveFocusReason Next;
    public static CoreWebView2MoveFocusReason Previous;
}
public class Microsoft.Web.WebView2.Core.CoreWebView2MoveFocusRequestedEventArgs : EventArgs {
    internal ICoreWebView2MoveFocusRequestedEventArgs _nativeICoreWebView2MoveFocusRequestedEventArgsValue;
    internal object _rawNative;
    internal ICoreWebView2MoveFocusRequestedEventArgs _nativeICoreWebView2MoveFocusRequestedEventArgs { get; internal set; }
    public CoreWebView2MoveFocusReason Reason { get; }
    public bool Handled { get; public set; }
    internal CoreWebView2MoveFocusRequestedEventArgs(object rawCoreWebView2MoveFocusRequestedEventArgs);
    internal ICoreWebView2MoveFocusRequestedEventArgs get__nativeICoreWebView2MoveFocusRequestedEventArgs();
    internal void set__nativeICoreWebView2MoveFocusRequestedEventArgs(ICoreWebView2MoveFocusRequestedEventArgs value);
    public CoreWebView2MoveFocusReason get_Reason();
    public bool get_Handled();
    public void set_Handled(bool value);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2MoveFocusRequestedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2MoveFocusRequestedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2Controller source, ICoreWebView2MoveFocusRequestedEventArgs args);
}
public class Microsoft.Web.WebView2.Core.CoreWebView2NavigationCompletedEventArgs : EventArgs {
    internal ICoreWebView2NavigationCompletedEventArgs _nativeICoreWebView2NavigationCompletedEventArgsValue;
    internal ICoreWebView2NavigationCompletedEventArgs2 _nativeICoreWebView2NavigationCompletedEventArgs2Value;
    internal object _rawNative;
    internal ICoreWebView2NavigationCompletedEventArgs _nativeICoreWebView2NavigationCompletedEventArgs { get; internal set; }
    internal ICoreWebView2NavigationCompletedEventArgs2 _nativeICoreWebView2NavigationCompletedEventArgs2 { get; internal set; }
    public bool IsSuccess { get; }
    public CoreWebView2WebErrorStatus WebErrorStatus { get; }
    public ulong NavigationId { get; }
    public int HttpStatusCode { get; }
    internal CoreWebView2NavigationCompletedEventArgs(object rawCoreWebView2NavigationCompletedEventArgs);
    internal ICoreWebView2NavigationCompletedEventArgs get__nativeICoreWebView2NavigationCompletedEventArgs();
    internal void set__nativeICoreWebView2NavigationCompletedEventArgs(ICoreWebView2NavigationCompletedEventArgs value);
    internal ICoreWebView2NavigationCompletedEventArgs2 get__nativeICoreWebView2NavigationCompletedEventArgs2();
    internal void set__nativeICoreWebView2NavigationCompletedEventArgs2(ICoreWebView2NavigationCompletedEventArgs2 value);
    public bool get_IsSuccess();
    public CoreWebView2WebErrorStatus get_WebErrorStatus();
    public ulong get_NavigationId();
    public int get_HttpStatusCode();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2NavigationCompletedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2NavigationCompletedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2 source, ICoreWebView2NavigationCompletedEventArgs args);
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2NavigationKind : Enum {
    public int value__;
    public static CoreWebView2NavigationKind Reload;
    public static CoreWebView2NavigationKind BackOrForward;
    public static CoreWebView2NavigationKind NewDocument;
}
public class Microsoft.Web.WebView2.Core.CoreWebView2NavigationStartingEventArgs : EventArgs {
    internal ICoreWebView2NavigationStartingEventArgs _nativeICoreWebView2NavigationStartingEventArgsValue;
    internal ICoreWebView2NavigationStartingEventArgs2 _nativeICoreWebView2NavigationStartingEventArgs2Value;
    internal ICoreWebView2NavigationStartingEventArgs3 _nativeICoreWebView2NavigationStartingEventArgs3Value;
    internal ICoreWebView2ExperimentalNavigationStartingEventArgs2 _nativeICoreWebView2ExperimentalNavigationStartingEventArgs2Value;
    internal ICoreWebView2ExperimentalNavigationStartingEventArgs _nativeICoreWebView2ExperimentalNavigationStartingEventArgsValue;
    internal object _rawNative;
    internal ICoreWebView2NavigationStartingEventArgs _nativeICoreWebView2NavigationStartingEventArgs { get; internal set; }
    internal ICoreWebView2NavigationStartingEventArgs2 _nativeICoreWebView2NavigationStartingEventArgs2 { get; internal set; }
    internal ICoreWebView2NavigationStartingEventArgs3 _nativeICoreWebView2NavigationStartingEventArgs3 { get; internal set; }
    internal ICoreWebView2ExperimentalNavigationStartingEventArgs2 _nativeICoreWebView2ExperimentalNavigationStartingEventArgs2 { get; internal set; }
    internal ICoreWebView2ExperimentalNavigationStartingEventArgs _nativeICoreWebView2ExperimentalNavigationStartingEventArgs { get; internal set; }
    public string Uri { get; }
    public bool IsUserInitiated { get; }
    public bool IsRedirected { get; }
    public CoreWebView2HttpRequestHeaders RequestHeaders { get; }
    public bool Cancel { get; public set; }
    public ulong NavigationId { get; }
    public string AdditionalAllowedFrameAncestors { get; public set; }
    public CoreWebView2NavigationKind NavigationKind { get; }
    internal CoreWebView2NavigationStartingEventArgs(object rawCoreWebView2NavigationStartingEventArgs);
    internal ICoreWebView2NavigationStartingEventArgs get__nativeICoreWebView2NavigationStartingEventArgs();
    internal void set__nativeICoreWebView2NavigationStartingEventArgs(ICoreWebView2NavigationStartingEventArgs value);
    internal ICoreWebView2NavigationStartingEventArgs2 get__nativeICoreWebView2NavigationStartingEventArgs2();
    internal void set__nativeICoreWebView2NavigationStartingEventArgs2(ICoreWebView2NavigationStartingEventArgs2 value);
    internal ICoreWebView2NavigationStartingEventArgs3 get__nativeICoreWebView2NavigationStartingEventArgs3();
    internal void set__nativeICoreWebView2NavigationStartingEventArgs3(ICoreWebView2NavigationStartingEventArgs3 value);
    internal ICoreWebView2ExperimentalNavigationStartingEventArgs2 get__nativeICoreWebView2ExperimentalNavigationStartingEventArgs2();
    internal void set__nativeICoreWebView2ExperimentalNavigationStartingEventArgs2(ICoreWebView2ExperimentalNavigationStartingEventArgs2 value);
    internal ICoreWebView2ExperimentalNavigationStartingEventArgs get__nativeICoreWebView2ExperimentalNavigationStartingEventArgs();
    internal void set__nativeICoreWebView2ExperimentalNavigationStartingEventArgs(ICoreWebView2ExperimentalNavigationStartingEventArgs value);
    public string get_Uri();
    public bool get_IsUserInitiated();
    public bool get_IsRedirected();
    public CoreWebView2HttpRequestHeaders get_RequestHeaders();
    public bool get_Cancel();
    public void set_Cancel(bool value);
    public ulong get_NavigationId();
    public string get_AdditionalAllowedFrameAncestors();
    public void set_AdditionalAllowedFrameAncestors(string value);
    public CoreWebView2NavigationKind get_NavigationKind();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2NavigationStartingEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2NavigationStartingEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2 source, ICoreWebView2NavigationStartingEventArgs args);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2NewBrowserVersionAvailableEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2NewBrowserVersionAvailableEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2Environment source, object args);
}
public class Microsoft.Web.WebView2.Core.CoreWebView2NewWindowRequestedEventArgs : EventArgs {
    internal ICoreWebView2NewWindowRequestedEventArgs _nativeICoreWebView2NewWindowRequestedEventArgsValue;
    internal ICoreWebView2NewWindowRequestedEventArgs2 _nativeICoreWebView2NewWindowRequestedEventArgs2Value;
    internal ICoreWebView2NewWindowRequestedEventArgs3 _nativeICoreWebView2NewWindowRequestedEventArgs3Value;
    internal ICoreWebView2ExperimentalNewWindowRequestedEventArgs2 _nativeICoreWebView2ExperimentalNewWindowRequestedEventArgs2Value;
    internal ICoreWebView2ExperimentalNewWindowRequestedEventArgs _nativeICoreWebView2ExperimentalNewWindowRequestedEventArgsValue;
    internal object _rawNative;
    internal ICoreWebView2NewWindowRequestedEventArgs _nativeICoreWebView2NewWindowRequestedEventArgs { get; internal set; }
    internal ICoreWebView2NewWindowRequestedEventArgs2 _nativeICoreWebView2NewWindowRequestedEventArgs2 { get; internal set; }
    internal ICoreWebView2NewWindowRequestedEventArgs3 _nativeICoreWebView2NewWindowRequestedEventArgs3 { get; internal set; }
    internal ICoreWebView2ExperimentalNewWindowRequestedEventArgs2 _nativeICoreWebView2ExperimentalNewWindowRequestedEventArgs2 { get; internal set; }
    internal ICoreWebView2ExperimentalNewWindowRequestedEventArgs _nativeICoreWebView2ExperimentalNewWindowRequestedEventArgs { get; internal set; }
    public string Uri { get; }
    public CoreWebView2 NewWindow { get; public set; }
    public bool Handled { get; public set; }
    public bool IsUserInitiated { get; }
    public CoreWebView2WindowFeatures WindowFeatures { get; }
    public string Name { get; }
    public CoreWebView2FrameInfo OriginalSourceFrameInfo { get; }
    internal CoreWebView2NewWindowRequestedEventArgs(object rawCoreWebView2NewWindowRequestedEventArgs);
    internal ICoreWebView2NewWindowRequestedEventArgs get__nativeICoreWebView2NewWindowRequestedEventArgs();
    internal void set__nativeICoreWebView2NewWindowRequestedEventArgs(ICoreWebView2NewWindowRequestedEventArgs value);
    internal ICoreWebView2NewWindowRequestedEventArgs2 get__nativeICoreWebView2NewWindowRequestedEventArgs2();
    internal void set__nativeICoreWebView2NewWindowRequestedEventArgs2(ICoreWebView2NewWindowRequestedEventArgs2 value);
    internal ICoreWebView2NewWindowRequestedEventArgs3 get__nativeICoreWebView2NewWindowRequestedEventArgs3();
    internal void set__nativeICoreWebView2NewWindowRequestedEventArgs3(ICoreWebView2NewWindowRequestedEventArgs3 value);
    internal ICoreWebView2ExperimentalNewWindowRequestedEventArgs2 get__nativeICoreWebView2ExperimentalNewWindowRequestedEventArgs2();
    internal void set__nativeICoreWebView2ExperimentalNewWindowRequestedEventArgs2(ICoreWebView2ExperimentalNewWindowRequestedEventArgs2 value);
    internal ICoreWebView2ExperimentalNewWindowRequestedEventArgs get__nativeICoreWebView2ExperimentalNewWindowRequestedEventArgs();
    internal void set__nativeICoreWebView2ExperimentalNewWindowRequestedEventArgs(ICoreWebView2ExperimentalNewWindowRequestedEventArgs value);
    public string get_Uri();
    public CoreWebView2 get_NewWindow();
    public void set_NewWindow(CoreWebView2 value);
    public bool get_Handled();
    public void set_Handled(bool value);
    public bool get_IsUserInitiated();
    public CoreWebView2WindowFeatures get_WindowFeatures();
    public CoreWebView2Deferral GetDeferral();
    public string get_Name();
    public CoreWebView2FrameInfo get_OriginalSourceFrameInfo();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2NewWindowRequestedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2NewWindowRequestedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2 source, ICoreWebView2NewWindowRequestedEventArgs args);
}
public class Microsoft.Web.WebView2.Core.CoreWebView2NonClientRegionChangedEventArgs : EventArgs {
    internal ICoreWebView2NonClientRegionChangedEventArgs _nativeICoreWebView2NonClientRegionChangedEventArgsValue;
    internal object _rawNative;
    internal ICoreWebView2NonClientRegionChangedEventArgs _nativeICoreWebView2NonClientRegionChangedEventArgs { get; internal set; }
    public CoreWebView2NonClientRegionKind RegionKind { get; }
    internal CoreWebView2NonClientRegionChangedEventArgs(object rawCoreWebView2NonClientRegionChangedEventArgs);
    internal ICoreWebView2NonClientRegionChangedEventArgs get__nativeICoreWebView2NonClientRegionChangedEventArgs();
    internal void set__nativeICoreWebView2NonClientRegionChangedEventArgs(ICoreWebView2NonClientRegionChangedEventArgs value);
    public CoreWebView2NonClientRegionKind get_RegionKind();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2NonClientRegionChangedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2NonClientRegionChangedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2CompositionController source, ICoreWebView2NonClientRegionChangedEventArgs args);
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2NonClientRegionKind : Enum {
    public int value__;
    public static CoreWebView2NonClientRegionKind Nowhere;
    public static CoreWebView2NonClientRegionKind Client;
    public static CoreWebView2NonClientRegionKind Caption;
}
public class Microsoft.Web.WebView2.Core.CoreWebView2Notification : object {
    internal ICoreWebView2Notification _nativeICoreWebView2NotificationValue;
    internal object _rawNative;
    private EventRegistrationToken _closeRequestedToken;
    private EventHandler`1<object> closeRequested;
    public DateTime Timestamp { get; }
    public IReadOnlyList`1<ulong> VibrationPattern { get; }
    internal ICoreWebView2Notification _nativeICoreWebView2Notification { get; internal set; }
    public string Body { get; }
    public CoreWebView2TextDirectionKind Direction { get; }
    public string Language { get; }
    public string Tag { get; }
    public string IconUri { get; }
    public string Title { get; }
    public string BadgeUri { get; }
    public string BodyImageUri { get; }
    public bool ShouldRenotify { get; }
    public bool RequiresInteraction { get; }
    public bool IsSilent { get; }
    internal CoreWebView2Notification(object rawCoreWebView2Notification);
    public DateTime get_Timestamp();
    public IReadOnlyList`1<ulong> get_VibrationPattern();
    internal ICoreWebView2Notification get__nativeICoreWebView2Notification();
    internal void set__nativeICoreWebView2Notification(ICoreWebView2Notification value);
    public string get_Body();
    public CoreWebView2TextDirectionKind get_Direction();
    public string get_Language();
    public string get_Tag();
    public string get_IconUri();
    public string get_Title();
    public string get_BadgeUri();
    public string get_BodyImageUri();
    public bool get_ShouldRenotify();
    public bool get_RequiresInteraction();
    public bool get_IsSilent();
    public void add_CloseRequested(EventHandler`1<object> value);
    public void remove_CloseRequested(EventHandler`1<object> value);
    internal void OnCloseRequested(object args);
    public void ReportShown();
    public void ReportClicked();
    public void ReportClosed();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2NotificationCloseRequestedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2NotificationCloseRequestedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2Notification source, object args);
}
public class Microsoft.Web.WebView2.Core.CoreWebView2NotificationReceivedEventArgs : EventArgs {
    internal ICoreWebView2NotificationReceivedEventArgs _nativeICoreWebView2NotificationReceivedEventArgsValue;
    internal object _rawNative;
    internal ICoreWebView2NotificationReceivedEventArgs _nativeICoreWebView2NotificationReceivedEventArgs { get; internal set; }
    public string SenderOrigin { get; }
    public CoreWebView2Notification Notification { get; }
    public bool Handled { get; public set; }
    internal CoreWebView2NotificationReceivedEventArgs(object rawCoreWebView2NotificationReceivedEventArgs);
    internal ICoreWebView2NotificationReceivedEventArgs get__nativeICoreWebView2NotificationReceivedEventArgs();
    internal void set__nativeICoreWebView2NotificationReceivedEventArgs(ICoreWebView2NotificationReceivedEventArgs value);
    public string get_SenderOrigin();
    public CoreWebView2Notification get_Notification();
    public bool get_Handled();
    public void set_Handled(bool value);
    public CoreWebView2Deferral GetDeferral();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2NotificationReceivedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2NotificationReceivedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2 source, ICoreWebView2NotificationReceivedEventArgs args);
}
[FlagsAttribute]
public enum Microsoft.Web.WebView2.Core.CoreWebView2PdfToolbarItems : Enum {
    public int value__;
    public static CoreWebView2PdfToolbarItems None;
    public static CoreWebView2PdfToolbarItems Save;
    public static CoreWebView2PdfToolbarItems Print;
    public static CoreWebView2PdfToolbarItems SaveAs;
    public static CoreWebView2PdfToolbarItems ZoomIn;
    public static CoreWebView2PdfToolbarItems ZoomOut;
    public static CoreWebView2PdfToolbarItems Rotate;
    public static CoreWebView2PdfToolbarItems FitPage;
    public static CoreWebView2PdfToolbarItems PageLayout;
    public static CoreWebView2PdfToolbarItems Bookmarks;
    public static CoreWebView2PdfToolbarItems PageSelector;
    public static CoreWebView2PdfToolbarItems Search;
    public static CoreWebView2PdfToolbarItems FullScreen;
    public static CoreWebView2PdfToolbarItems MoreSettings;
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2PermissionKind : Enum {
    public int value__;
    public static CoreWebView2PermissionKind UnknownPermission;
    public static CoreWebView2PermissionKind Microphone;
    public static CoreWebView2PermissionKind Camera;
    public static CoreWebView2PermissionKind Geolocation;
    public static CoreWebView2PermissionKind Notifications;
    public static CoreWebView2PermissionKind OtherSensors;
    public static CoreWebView2PermissionKind ClipboardRead;
    public static CoreWebView2PermissionKind MultipleAutomaticDownloads;
    public static CoreWebView2PermissionKind FileReadWrite;
    public static CoreWebView2PermissionKind Autoplay;
    public static CoreWebView2PermissionKind LocalFonts;
    public static CoreWebView2PermissionKind MidiSystemExclusiveMessages;
    public static CoreWebView2PermissionKind WindowManagement;
}
public class Microsoft.Web.WebView2.Core.CoreWebView2PermissionRequestedEventArgs : EventArgs {
    internal ICoreWebView2PermissionRequestedEventArgs _nativeICoreWebView2PermissionRequestedEventArgsValue;
    internal ICoreWebView2PermissionRequestedEventArgs2 _nativeICoreWebView2PermissionRequestedEventArgs2Value;
    internal ICoreWebView2PermissionRequestedEventArgs3 _nativeICoreWebView2PermissionRequestedEventArgs3Value;
    internal object _rawNative;
    internal ICoreWebView2PermissionRequestedEventArgs _nativeICoreWebView2PermissionRequestedEventArgs { get; internal set; }
    internal ICoreWebView2PermissionRequestedEventArgs2 _nativeICoreWebView2PermissionRequestedEventArgs2 { get; internal set; }
    internal ICoreWebView2PermissionRequestedEventArgs3 _nativeICoreWebView2PermissionRequestedEventArgs3 { get; internal set; }
    public string Uri { get; }
    public CoreWebView2PermissionKind PermissionKind { get; }
    public bool IsUserInitiated { get; }
    public CoreWebView2PermissionState State { get; public set; }
    public bool Handled { get; public set; }
    public bool SavesInProfile { get; public set; }
    internal CoreWebView2PermissionRequestedEventArgs(object rawCoreWebView2PermissionRequestedEventArgs);
    internal ICoreWebView2PermissionRequestedEventArgs get__nativeICoreWebView2PermissionRequestedEventArgs();
    internal void set__nativeICoreWebView2PermissionRequestedEventArgs(ICoreWebView2PermissionRequestedEventArgs value);
    internal ICoreWebView2PermissionRequestedEventArgs2 get__nativeICoreWebView2PermissionRequestedEventArgs2();
    internal void set__nativeICoreWebView2PermissionRequestedEventArgs2(ICoreWebView2PermissionRequestedEventArgs2 value);
    internal ICoreWebView2PermissionRequestedEventArgs3 get__nativeICoreWebView2PermissionRequestedEventArgs3();
    internal void set__nativeICoreWebView2PermissionRequestedEventArgs3(ICoreWebView2PermissionRequestedEventArgs3 value);
    public string get_Uri();
    public CoreWebView2PermissionKind get_PermissionKind();
    public bool get_IsUserInitiated();
    public CoreWebView2PermissionState get_State();
    public void set_State(CoreWebView2PermissionState value);
    public CoreWebView2Deferral GetDeferral();
    public bool get_Handled();
    public void set_Handled(bool value);
    public bool get_SavesInProfile();
    public void set_SavesInProfile(bool value);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2PermissionRequestedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2PermissionRequestedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2 source, ICoreWebView2PermissionRequestedEventArgs args);
}
public class Microsoft.Web.WebView2.Core.CoreWebView2PermissionSetting : object {
    internal ICoreWebView2PermissionSetting _nativeICoreWebView2PermissionSettingValue;
    internal object _rawNative;
    internal ICoreWebView2PermissionSetting _nativeICoreWebView2PermissionSetting { get; internal set; }
    public CoreWebView2PermissionKind PermissionKind { get; }
    public string PermissionOrigin { get; }
    public CoreWebView2PermissionState PermissionState { get; }
    internal CoreWebView2PermissionSetting(object rawCoreWebView2PermissionSetting);
    internal ICoreWebView2PermissionSetting get__nativeICoreWebView2PermissionSetting();
    internal void set__nativeICoreWebView2PermissionSetting(ICoreWebView2PermissionSetting value);
    public CoreWebView2PermissionKind get_PermissionKind();
    public string get_PermissionOrigin();
    public CoreWebView2PermissionState get_PermissionState();
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2PermissionState : Enum {
    public int value__;
    public static CoreWebView2PermissionState Default;
    public static CoreWebView2PermissionState Allow;
    public static CoreWebView2PermissionState Deny;
}
public class Microsoft.Web.WebView2.Core.CoreWebView2PhysicalKeyStatus : ValueType {
    public UInt32 RepeatCount;
    public UInt32 ScanCode;
    public int IsExtendedKey;
    public int IsMenuKeyDown;
    public int WasKeyDown;
    public int IsKeyReleased;
    internal CoreWebView2PhysicalKeyStatus(COREWEBVIEW2_PHYSICAL_KEY_STATUS rawStruct);
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2PointerEventKind : Enum {
    public int value__;
    public static CoreWebView2PointerEventKind Activate;
    public static CoreWebView2PointerEventKind Down;
    public static CoreWebView2PointerEventKind Enter;
    public static CoreWebView2PointerEventKind Leave;
    public static CoreWebView2PointerEventKind Up;
    public static CoreWebView2PointerEventKind Update;
}
public class Microsoft.Web.WebView2.Core.CoreWebView2PointerInfo : object {
    internal ICoreWebView2PointerInfo _nativeICoreWebView2PointerInfoValue;
    internal object _rawNative;
    internal ICoreWebView2PointerInfo _nativeICoreWebView2PointerInfo { get; internal set; }
    public UInt32 PointerKind { get; public set; }
    public UInt32 PointerId { get; public set; }
    public UInt32 FrameId { get; public set; }
    public UInt32 PointerFlags { get; public set; }
    public Rectangle PointerDeviceRect { get; public set; }
    public Rectangle DisplayRect { get; public set; }
    public Point PixelLocation { get; public set; }
    public Point HimetricLocation { get; public set; }
    public Point PixelLocationRaw { get; public set; }
    public Point HimetricLocationRaw { get; public set; }
    public UInt32 Time { get; public set; }
    public UInt32 HistoryCount { get; public set; }
    public int InputData { get; public set; }
    public UInt32 KeyStates { get; public set; }
    public ulong PerformanceCount { get; public set; }
    public int ButtonChangeKind { get; public set; }
    public UInt32 PenFlags { get; public set; }
    public UInt32 PenMask { get; public set; }
    public UInt32 PenPressure { get; public set; }
    public UInt32 PenRotation { get; public set; }
    public int PenTiltX { get; public set; }
    public int PenTiltY { get; public set; }
    public UInt32 TouchFlags { get; public set; }
    public UInt32 TouchMask { get; public set; }
    public Rectangle TouchContact { get; public set; }
    public Rectangle TouchContactRaw { get; public set; }
    public UInt32 TouchOrientation { get; public set; }
    public UInt32 TouchPressure { get; public set; }
    internal CoreWebView2PointerInfo(object rawCoreWebView2PointerInfo);
    internal ICoreWebView2PointerInfo get__nativeICoreWebView2PointerInfo();
    internal void set__nativeICoreWebView2PointerInfo(ICoreWebView2PointerInfo value);
    public UInt32 get_PointerKind();
    public void set_PointerKind(UInt32 value);
    public UInt32 get_PointerId();
    public void set_PointerId(UInt32 value);
    public UInt32 get_FrameId();
    public void set_FrameId(UInt32 value);
    public UInt32 get_PointerFlags();
    public void set_PointerFlags(UInt32 value);
    public Rectangle get_PointerDeviceRect();
    public void set_PointerDeviceRect(Rectangle value);
    public Rectangle get_DisplayRect();
    public void set_DisplayRect(Rectangle value);
    public Point get_PixelLocation();
    public void set_PixelLocation(Point value);
    public Point get_HimetricLocation();
    public void set_HimetricLocation(Point value);
    public Point get_PixelLocationRaw();
    public void set_PixelLocationRaw(Point value);
    public Point get_HimetricLocationRaw();
    public void set_HimetricLocationRaw(Point value);
    public UInt32 get_Time();
    public void set_Time(UInt32 value);
    public UInt32 get_HistoryCount();
    public void set_HistoryCount(UInt32 value);
    public int get_InputData();
    public void set_InputData(int value);
    public UInt32 get_KeyStates();
    public void set_KeyStates(UInt32 value);
    public ulong get_PerformanceCount();
    public void set_PerformanceCount(ulong value);
    public int get_ButtonChangeKind();
    public void set_ButtonChangeKind(int value);
    public UInt32 get_PenFlags();
    public void set_PenFlags(UInt32 value);
    public UInt32 get_PenMask();
    public void set_PenMask(UInt32 value);
    public UInt32 get_PenPressure();
    public void set_PenPressure(UInt32 value);
    public UInt32 get_PenRotation();
    public void set_PenRotation(UInt32 value);
    public int get_PenTiltX();
    public void set_PenTiltX(int value);
    public int get_PenTiltY();
    public void set_PenTiltY(int value);
    public UInt32 get_TouchFlags();
    public void set_TouchFlags(UInt32 value);
    public UInt32 get_TouchMask();
    public void set_TouchMask(UInt32 value);
    public Rectangle get_TouchContact();
    public void set_TouchContact(Rectangle value);
    public Rectangle get_TouchContactRaw();
    public void set_TouchContactRaw(Rectangle value);
    public UInt32 get_TouchOrientation();
    public void set_TouchOrientation(UInt32 value);
    public UInt32 get_TouchPressure();
    public void set_TouchPressure(UInt32 value);
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2PreferredColorScheme : Enum {
    public int value__;
    public static CoreWebView2PreferredColorScheme Auto;
    public static CoreWebView2PreferredColorScheme Light;
    public static CoreWebView2PreferredColorScheme Dark;
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2PrintCollation : Enum {
    public int value__;
    public static CoreWebView2PrintCollation Default;
    public static CoreWebView2PrintCollation Collated;
    public static CoreWebView2PrintCollation Uncollated;
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2PrintColorMode : Enum {
    public int value__;
    public static CoreWebView2PrintColorMode Default;
    public static CoreWebView2PrintColorMode Color;
    public static CoreWebView2PrintColorMode Grayscale;
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2PrintCompletedHandler : object {
    [CompilerGeneratedAttribute]
private CoreWebView2PrintStatus <result>k__BackingField;
    [CompilerGeneratedAttribute]
private int <errCode>k__BackingField;
    private Action continuation;
    [CompilerGeneratedAttribute]
private bool <IsCompleted>k__BackingField;
    public CoreWebView2PrintStatus result { get; private set; }
    public int errCode { get; private set; }
    public bool IsCompleted { get; private set; }
    [CompilerGeneratedAttribute]
public CoreWebView2PrintStatus get_result();
    [CompilerGeneratedAttribute]
private void set_result(CoreWebView2PrintStatus value);
    [CompilerGeneratedAttribute]
public int get_errCode();
    [CompilerGeneratedAttribute]
private void set_errCode(int value);
    public sealed virtual void Invoke(int errCode, COREWEBVIEW2_PRINT_STATUS result);
    public CoreWebView2PrintCompletedHandler GetAwaiter();
    [CompilerGeneratedAttribute]
public bool get_IsCompleted();
    [CompilerGeneratedAttribute]
private void set_IsCompleted(bool value);
    public sealed virtual void OnCompleted(Action continuation);
    public CoreWebView2PrintStatus GetResult();
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2PrintDialogKind : Enum {
    public int value__;
    public static CoreWebView2PrintDialogKind Browser;
    public static CoreWebView2PrintDialogKind System;
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2PrintDuplex : Enum {
    public int value__;
    public static CoreWebView2PrintDuplex Default;
    public static CoreWebView2PrintDuplex OneSided;
    public static CoreWebView2PrintDuplex TwoSidedLongEdge;
    public static CoreWebView2PrintDuplex TwoSidedShortEdge;
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2PrintMediaSize : Enum {
    public int value__;
    public static CoreWebView2PrintMediaSize Default;
    public static CoreWebView2PrintMediaSize Custom;
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2PrintOrientation : Enum {
    public int value__;
    public static CoreWebView2PrintOrientation Portrait;
    public static CoreWebView2PrintOrientation Landscape;
}
public class Microsoft.Web.WebView2.Core.CoreWebView2PrintSettings : object {
    internal ICoreWebView2PrintSettings _nativeICoreWebView2PrintSettingsValue;
    internal ICoreWebView2PrintSettings2 _nativeICoreWebView2PrintSettings2Value;
    internal ICoreWebView2ExperimentalPrintSettings2 _nativeICoreWebView2ExperimentalPrintSettings2Value;
    internal object _rawNative;
    internal ICoreWebView2PrintSettings _nativeICoreWebView2PrintSettings { get; internal set; }
    internal ICoreWebView2PrintSettings2 _nativeICoreWebView2PrintSettings2 { get; internal set; }
    internal ICoreWebView2ExperimentalPrintSettings2 _nativeICoreWebView2ExperimentalPrintSettings2 { get; internal set; }
    public CoreWebView2PrintOrientation Orientation { get; public set; }
    public double ScaleFactor { get; public set; }
    public double PageWidth { get; public set; }
    public double PageHeight { get; public set; }
    public double MarginTop { get; public set; }
    public double MarginBottom { get; public set; }
    public double MarginLeft { get; public set; }
    public double MarginRight { get; public set; }
    public bool ShouldPrintBackgrounds { get; public set; }
    public bool ShouldPrintSelectionOnly { get; public set; }
    public bool ShouldPrintHeaderAndFooter { get; public set; }
    public string HeaderTitle { get; public set; }
    public string FooterUri { get; public set; }
    public string PageRanges { get; public set; }
    public int PagesPerSide { get; public set; }
    public int Copies { get; public set; }
    public CoreWebView2PrintCollation Collation { get; public set; }
    public CoreWebView2PrintColorMode ColorMode { get; public set; }
    public CoreWebView2PrintDuplex Duplex { get; public set; }
    public CoreWebView2PrintMediaSize MediaSize { get; public set; }
    public string PrinterName { get; public set; }
    internal CoreWebView2PrintSettings(object rawCoreWebView2PrintSettings);
    internal ICoreWebView2PrintSettings get__nativeICoreWebView2PrintSettings();
    internal void set__nativeICoreWebView2PrintSettings(ICoreWebView2PrintSettings value);
    internal ICoreWebView2PrintSettings2 get__nativeICoreWebView2PrintSettings2();
    internal void set__nativeICoreWebView2PrintSettings2(ICoreWebView2PrintSettings2 value);
    internal ICoreWebView2ExperimentalPrintSettings2 get__nativeICoreWebView2ExperimentalPrintSettings2();
    internal void set__nativeICoreWebView2ExperimentalPrintSettings2(ICoreWebView2ExperimentalPrintSettings2 value);
    public CoreWebView2PrintOrientation get_Orientation();
    public void set_Orientation(CoreWebView2PrintOrientation value);
    public double get_ScaleFactor();
    public void set_ScaleFactor(double value);
    public double get_PageWidth();
    public void set_PageWidth(double value);
    public double get_PageHeight();
    public void set_PageHeight(double value);
    public double get_MarginTop();
    public void set_MarginTop(double value);
    public double get_MarginBottom();
    public void set_MarginBottom(double value);
    public double get_MarginLeft();
    public void set_MarginLeft(double value);
    public double get_MarginRight();
    public void set_MarginRight(double value);
    public bool get_ShouldPrintBackgrounds();
    public void set_ShouldPrintBackgrounds(bool value);
    public bool get_ShouldPrintSelectionOnly();
    public void set_ShouldPrintSelectionOnly(bool value);
    public bool get_ShouldPrintHeaderAndFooter();
    public void set_ShouldPrintHeaderAndFooter(bool value);
    public string get_HeaderTitle();
    public void set_HeaderTitle(string value);
    public string get_FooterUri();
    public void set_FooterUri(string value);
    public string get_PageRanges();
    public void set_PageRanges(string value);
    public int get_PagesPerSide();
    public void set_PagesPerSide(int value);
    public int get_Copies();
    public void set_Copies(int value);
    public CoreWebView2PrintCollation get_Collation();
    public void set_Collation(CoreWebView2PrintCollation value);
    public CoreWebView2PrintColorMode get_ColorMode();
    public void set_ColorMode(CoreWebView2PrintColorMode value);
    public CoreWebView2PrintDuplex get_Duplex();
    public void set_Duplex(CoreWebView2PrintDuplex value);
    public CoreWebView2PrintMediaSize get_MediaSize();
    public void set_MediaSize(CoreWebView2PrintMediaSize value);
    public string get_PrinterName();
    public void set_PrinterName(string value);
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2PrintStatus : Enum {
    public int value__;
    public static CoreWebView2PrintStatus Succeeded;
    public static CoreWebView2PrintStatus PrinterUnavailable;
    public static CoreWebView2PrintStatus OtherError;
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2PrintToPdfCompletedHandler : object {
    [CompilerGeneratedAttribute]
private bool <result>k__BackingField;
    [CompilerGeneratedAttribute]
private int <errCode>k__BackingField;
    private Action continuation;
    [CompilerGeneratedAttribute]
private bool <IsCompleted>k__BackingField;
    public bool result { get; private set; }
    public int errCode { get; private set; }
    public bool IsCompleted { get; private set; }
    [CompilerGeneratedAttribute]
public bool get_result();
    [CompilerGeneratedAttribute]
private void set_result(bool value);
    [CompilerGeneratedAttribute]
public int get_errCode();
    [CompilerGeneratedAttribute]
private void set_errCode(int value);
    public sealed virtual void Invoke(int errCode, int result);
    public CoreWebView2PrintToPdfCompletedHandler GetAwaiter();
    [CompilerGeneratedAttribute]
public bool get_IsCompleted();
    [CompilerGeneratedAttribute]
private void set_IsCompleted(bool value);
    public sealed virtual void OnCompleted(Action continuation);
    public bool GetResult();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2PrintToPdfStreamCompletedHandler : object {
    [CompilerGeneratedAttribute]
private Stream <result>k__BackingField;
    [CompilerGeneratedAttribute]
private int <errCode>k__BackingField;
    private Action continuation;
    [CompilerGeneratedAttribute]
private bool <IsCompleted>k__BackingField;
    public Stream result { get; private set; }
    public int errCode { get; private set; }
    public bool IsCompleted { get; private set; }
    [CompilerGeneratedAttribute]
public Stream get_result();
    [CompilerGeneratedAttribute]
private void set_result(Stream value);
    [CompilerGeneratedAttribute]
public int get_errCode();
    [CompilerGeneratedAttribute]
private void set_errCode(int value);
    public sealed virtual void Invoke(int errCode, IStream result);
    public CoreWebView2PrintToPdfStreamCompletedHandler GetAwaiter();
    [CompilerGeneratedAttribute]
public bool get_IsCompleted();
    [CompilerGeneratedAttribute]
private void set_IsCompleted(bool value);
    public sealed virtual void OnCompleted(Action continuation);
    public Stream GetResult();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2PrivateBrowserUninstalledEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2PrivateBrowserUninstalledEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2Environment source, object args);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2PrivateHostObjectAsyncMethodContinuation : object {
    internal ICoreWebView2PrivateHostObjectAsyncMethodContinuation _nativeICoreWebView2PrivateHostObjectAsyncMethodContinuationValue;
    internal object _rawNative;
    internal ICoreWebView2PrivateHostObjectAsyncMethodContinuation _nativeICoreWebView2PrivateHostObjectAsyncMethodContinuation { get; internal set; }
    internal CoreWebView2PrivateHostObjectAsyncMethodContinuation(object rawCoreWebView2PrivateHostObjectAsyncMethodContinuation);
    internal ICoreWebView2PrivateHostObjectAsyncMethodContinuation get__nativeICoreWebView2PrivateHostObjectAsyncMethodContinuation();
    internal void set__nativeICoreWebView2PrivateHostObjectAsyncMethodContinuation(ICoreWebView2PrivateHostObjectAsyncMethodContinuation value);
    internal void Invoke(int errorCode, object result);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2PrivateHostObjectHelper : object {
    internal ICoreWebView2PrivateHostObjectHelper3 _nativeICoreWebView2PrivateHostObjectHelper3Value;
    internal ICoreWebView2PrivateHostObjectHelper2 _nativeICoreWebView2PrivateHostObjectHelper2Value;
    internal ICoreWebView2PrivateHostObjectHelper _nativeICoreWebView2PrivateHostObjectHelperValue;
    internal object _rawNative;
    internal ICoreWebView2PrivateHostObjectHelper3 _nativeICoreWebView2PrivateHostObjectHelper3 { get; internal set; }
    internal ICoreWebView2PrivateHostObjectHelper2 _nativeICoreWebView2PrivateHostObjectHelper2 { get; internal set; }
    internal ICoreWebView2PrivateHostObjectHelper _nativeICoreWebView2PrivateHostObjectHelper { get; internal set; }
    internal CoreWebView2PrivateHostObjectHelper(object rawCoreWebView2PrivateHostObjectHelper);
    internal ICoreWebView2PrivateHostObjectHelper3 get__nativeICoreWebView2PrivateHostObjectHelper3();
    internal void set__nativeICoreWebView2PrivateHostObjectHelper3(ICoreWebView2PrivateHostObjectHelper3 value);
    internal ICoreWebView2PrivateHostObjectHelper2 get__nativeICoreWebView2PrivateHostObjectHelper2();
    internal void set__nativeICoreWebView2PrivateHostObjectHelper2(ICoreWebView2PrivateHostObjectHelper2 value);
    internal ICoreWebView2PrivateHostObjectHelper get__nativeICoreWebView2PrivateHostObjectHelper();
    internal void set__nativeICoreWebView2PrivateHostObjectHelper(ICoreWebView2PrivateHostObjectHelper value);
    internal object CreateBuiltInDispatch(object originalHostObject);
    internal int IsAsyncMethod(object rawObject, string methodName, int parameterCount);
    internal void SetAsyncMethodContinuation(object rawObject, string methodName, int parameterCount, object methodResult, CoreWebView2PrivateHostObjectAsyncMethodContinuation continuation);
    internal int IsMethodMember(object rawObject, string memberName);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2PrivateKeyPressedEventArgs : EventArgs {
    internal ICoreWebView2PrivateKeyPressedEventArgs _nativeICoreWebView2PrivateKeyPressedEventArgsValue;
    internal object _rawNative;
    internal ICoreWebView2PrivateKeyPressedEventArgs _nativeICoreWebView2PrivateKeyPressedEventArgs { get; internal set; }
    internal CoreWebView2KeyEventKind KeyEventKind { get; }
    internal UInt32 VirtualKey { get; }
    internal int KeyEventLParam { get; }
    internal CoreWebView2PhysicalKeyStatus PhysicalKeyStatus { get; }
    internal bool Handled { get; internal set; }
    internal CoreWebView2PrivateKeyPressedEventArgs(object rawCoreWebView2PrivateKeyPressedEventArgs);
    internal ICoreWebView2PrivateKeyPressedEventArgs get__nativeICoreWebView2PrivateKeyPressedEventArgs();
    internal void set__nativeICoreWebView2PrivateKeyPressedEventArgs(ICoreWebView2PrivateKeyPressedEventArgs value);
    internal CoreWebView2KeyEventKind get_KeyEventKind();
    internal UInt32 get_VirtualKey();
    internal int get_KeyEventLParam();
    internal CoreWebView2PhysicalKeyStatus get_PhysicalKeyStatus();
    internal bool get_Handled();
    internal void set_Handled(bool value);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2PrivateKeyPressedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2PrivateKeyPressedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2Controller source, ICoreWebView2PrivateKeyPressedEventArgs args);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2PrivateRemoteObjectProxy : object {
    internal ICoreWebView2PrivateRemoteObjectProxy _nativeICoreWebView2PrivateRemoteObjectProxyValue;
    internal object _rawNative;
    private EventRegistrationToken _passivatedToken;
    private EventHandler`1<object> passivated;
    internal ICoreWebView2PrivateRemoteObjectProxy _nativeICoreWebView2PrivateRemoteObjectProxy { get; internal set; }
    internal CoreWebView2PrivateRemoteObjectProxy(object rawCoreWebView2PrivateRemoteObjectProxy);
    internal ICoreWebView2PrivateRemoteObjectProxy get__nativeICoreWebView2PrivateRemoteObjectProxy();
    internal void set__nativeICoreWebView2PrivateRemoteObjectProxy(ICoreWebView2PrivateRemoteObjectProxy value);
    internal void add_Passivated(EventHandler`1<object> value);
    internal void remove_Passivated(EventHandler`1<object> value);
    internal void OnPassivated(object args);
    internal int GetId();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2PrivateRemoteObjectProxyPassivatedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2PrivateRemoteObjectProxyPassivatedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2PrivateRemoteObjectProxy source, object args);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2PrivateRestartRequiredEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2PrivateRestartRequiredEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2 source, object args);
}
public class Microsoft.Web.WebView2.Core.CoreWebView2ProcessExtendedInfo : object {
    internal ICoreWebView2ProcessExtendedInfo _nativeICoreWebView2ProcessExtendedInfoValue;
    internal object _rawNative;
    internal ICoreWebView2ProcessExtendedInfo _nativeICoreWebView2ProcessExtendedInfo { get; internal set; }
    public CoreWebView2ProcessInfo ProcessInfo { get; }
    public IReadOnlyList`1<CoreWebView2FrameInfo> AssociatedFrameInfos { get; }
    internal CoreWebView2ProcessExtendedInfo(object rawCoreWebView2ProcessExtendedInfo);
    internal ICoreWebView2ProcessExtendedInfo get__nativeICoreWebView2ProcessExtendedInfo();
    internal void set__nativeICoreWebView2ProcessExtendedInfo(ICoreWebView2ProcessExtendedInfo value);
    public CoreWebView2ProcessInfo get_ProcessInfo();
    public IReadOnlyList`1<CoreWebView2FrameInfo> get_AssociatedFrameInfos();
}
public class Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedEventArgs : EventArgs {
    internal ICoreWebView2ProcessFailedEventArgs _nativeICoreWebView2ProcessFailedEventArgsValue;
    internal ICoreWebView2ProcessFailedEventArgs2 _nativeICoreWebView2ProcessFailedEventArgs2Value;
    internal ICoreWebView2ProcessFailedEventArgs3 _nativeICoreWebView2ProcessFailedEventArgs3Value;
    internal ICoreWebView2ExperimentalProcessFailedEventArgs _nativeICoreWebView2ExperimentalProcessFailedEventArgsValue;
    internal object _rawNative;
    internal ICoreWebView2ProcessFailedEventArgs _nativeICoreWebView2ProcessFailedEventArgs { get; internal set; }
    internal ICoreWebView2ProcessFailedEventArgs2 _nativeICoreWebView2ProcessFailedEventArgs2 { get; internal set; }
    internal ICoreWebView2ProcessFailedEventArgs3 _nativeICoreWebView2ProcessFailedEventArgs3 { get; internal set; }
    internal ICoreWebView2ExperimentalProcessFailedEventArgs _nativeICoreWebView2ExperimentalProcessFailedEventArgs { get; internal set; }
    public CoreWebView2ProcessFailedKind ProcessFailedKind { get; }
    public CoreWebView2ProcessFailedReason Reason { get; }
    public int ExitCode { get; }
    public string ProcessDescription { get; }
    public IReadOnlyList`1<CoreWebView2FrameInfo> FrameInfosForFailedProcess { get; }
    public string FailureSourceModulePath { get; }
    internal CoreWebView2ProcessFailedEventArgs(object rawCoreWebView2ProcessFailedEventArgs);
    internal ICoreWebView2ProcessFailedEventArgs get__nativeICoreWebView2ProcessFailedEventArgs();
    internal void set__nativeICoreWebView2ProcessFailedEventArgs(ICoreWebView2ProcessFailedEventArgs value);
    internal ICoreWebView2ProcessFailedEventArgs2 get__nativeICoreWebView2ProcessFailedEventArgs2();
    internal void set__nativeICoreWebView2ProcessFailedEventArgs2(ICoreWebView2ProcessFailedEventArgs2 value);
    internal ICoreWebView2ProcessFailedEventArgs3 get__nativeICoreWebView2ProcessFailedEventArgs3();
    internal void set__nativeICoreWebView2ProcessFailedEventArgs3(ICoreWebView2ProcessFailedEventArgs3 value);
    internal ICoreWebView2ExperimentalProcessFailedEventArgs get__nativeICoreWebView2ExperimentalProcessFailedEventArgs();
    internal void set__nativeICoreWebView2ExperimentalProcessFailedEventArgs(ICoreWebView2ExperimentalProcessFailedEventArgs value);
    public CoreWebView2ProcessFailedKind get_ProcessFailedKind();
    public CoreWebView2ProcessFailedReason get_Reason();
    public int get_ExitCode();
    public string get_ProcessDescription();
    public IReadOnlyList`1<CoreWebView2FrameInfo> get_FrameInfosForFailedProcess();
    public string get_FailureSourceModulePath();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2ProcessFailedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2 source, ICoreWebView2ProcessFailedEventArgs args);
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedKind : Enum {
    public int value__;
    public static CoreWebView2ProcessFailedKind BrowserProcessExited;
    public static CoreWebView2ProcessFailedKind RenderProcessExited;
    public static CoreWebView2ProcessFailedKind RenderProcessUnresponsive;
    public static CoreWebView2ProcessFailedKind FrameRenderProcessExited;
    public static CoreWebView2ProcessFailedKind UtilityProcessExited;
    public static CoreWebView2ProcessFailedKind SandboxHelperProcessExited;
    public static CoreWebView2ProcessFailedKind GpuProcessExited;
    public static CoreWebView2ProcessFailedKind PpapiPluginProcessExited;
    public static CoreWebView2ProcessFailedKind PpapiBrokerProcessExited;
    public static CoreWebView2ProcessFailedKind UnknownProcessExited;
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedReason : Enum {
    public int value__;
    public static CoreWebView2ProcessFailedReason Unexpected;
    public static CoreWebView2ProcessFailedReason Unresponsive;
    public static CoreWebView2ProcessFailedReason Terminated;
    public static CoreWebView2ProcessFailedReason Crashed;
    public static CoreWebView2ProcessFailedReason LaunchFailed;
    public static CoreWebView2ProcessFailedReason OutOfMemory;
    public static CoreWebView2ProcessFailedReason ProfileDeleted;
}
public class Microsoft.Web.WebView2.Core.CoreWebView2ProcessInfo : object {
    internal ICoreWebView2ProcessInfo _nativeICoreWebView2ProcessInfoValue;
    internal ICoreWebView2ExperimentalProcessInfo _nativeICoreWebView2ExperimentalProcessInfoValue;
    internal object _rawNative;
    internal ICoreWebView2ProcessInfo _nativeICoreWebView2ProcessInfo { get; internal set; }
    internal ICoreWebView2ExperimentalProcessInfo _nativeICoreWebView2ExperimentalProcessInfo { get; internal set; }
    public int ProcessId { get; }
    public CoreWebView2ProcessKind Kind { get; }
    public IReadOnlyList`1<CoreWebView2FrameInfo> AssociatedFrameInfos { get; }
    internal CoreWebView2ProcessInfo(object rawCoreWebView2ProcessInfo);
    internal ICoreWebView2ProcessInfo get__nativeICoreWebView2ProcessInfo();
    internal void set__nativeICoreWebView2ProcessInfo(ICoreWebView2ProcessInfo value);
    internal ICoreWebView2ExperimentalProcessInfo get__nativeICoreWebView2ExperimentalProcessInfo();
    internal void set__nativeICoreWebView2ExperimentalProcessInfo(ICoreWebView2ExperimentalProcessInfo value);
    public int get_ProcessId();
    public CoreWebView2ProcessKind get_Kind();
    public IReadOnlyList`1<CoreWebView2FrameInfo> get_AssociatedFrameInfos();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2ProcessInfosChangedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2ProcessInfosChangedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2Environment source, object args);
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2ProcessKind : Enum {
    public int value__;
    public static CoreWebView2ProcessKind Browser;
    public static CoreWebView2ProcessKind Renderer;
    public static CoreWebView2ProcessKind Utility;
    public static CoreWebView2ProcessKind SandboxHelper;
    public static CoreWebView2ProcessKind Gpu;
    public static CoreWebView2ProcessKind PpapiPlugin;
    public static CoreWebView2ProcessKind PpapiBroker;
}
public class Microsoft.Web.WebView2.Core.CoreWebView2Profile : object {
    internal ICoreWebView2Profile _nativeICoreWebView2ProfileValue;
    internal ICoreWebView2Profile2 _nativeICoreWebView2Profile2Value;
    internal ICoreWebView2Profile3 _nativeICoreWebView2Profile3Value;
    internal ICoreWebView2Profile4 _nativeICoreWebView2Profile4Value;
    internal ICoreWebView2Profile5 _nativeICoreWebView2Profile5Value;
    internal ICoreWebView2Profile6 _nativeICoreWebView2Profile6Value;
    internal ICoreWebView2Profile7 _nativeICoreWebView2Profile7Value;
    internal ICoreWebView2Profile8 _nativeICoreWebView2Profile8Value;
    internal ICoreWebView2ExperimentalProfile8 _nativeICoreWebView2ExperimentalProfile8Value;
    internal ICoreWebView2ExperimentalProfile12 _nativeICoreWebView2ExperimentalProfile12Value;
    internal ICoreWebView2ExperimentalProfile11 _nativeICoreWebView2ExperimentalProfile11Value;
    internal ICoreWebView2ExperimentalProfile10 _nativeICoreWebView2ExperimentalProfile10Value;
    internal ICoreWebView2ExperimentalProfile7 _nativeICoreWebView2ExperimentalProfile7Value;
    internal ICoreWebView2ExperimentalProfile6 _nativeICoreWebView2ExperimentalProfile6Value;
    internal ICoreWebView2ExperimentalProfile5 _nativeICoreWebView2ExperimentalProfile5Value;
    internal ICoreWebView2ExperimentalProfile4 _nativeICoreWebView2ExperimentalProfile4Value;
    internal ICoreWebView2ExperimentalProfile3 _nativeICoreWebView2ExperimentalProfile3Value;
    internal ICoreWebView2ExperimentalProfile2 _nativeICoreWebView2ExperimentalProfile2Value;
    internal object _rawNative;
    private EventRegistrationToken _deletedToken;
    private EventHandler`1<object> deleted;
    internal ICoreWebView2Profile _nativeICoreWebView2Profile { get; internal set; }
    internal ICoreWebView2Profile2 _nativeICoreWebView2Profile2 { get; internal set; }
    internal ICoreWebView2Profile3 _nativeICoreWebView2Profile3 { get; internal set; }
    internal ICoreWebView2Profile4 _nativeICoreWebView2Profile4 { get; internal set; }
    internal ICoreWebView2Profile5 _nativeICoreWebView2Profile5 { get; internal set; }
    internal ICoreWebView2Profile6 _nativeICoreWebView2Profile6 { get; internal set; }
    internal ICoreWebView2Profile7 _nativeICoreWebView2Profile7 { get; internal set; }
    internal ICoreWebView2Profile8 _nativeICoreWebView2Profile8 { get; internal set; }
    internal ICoreWebView2ExperimentalProfile8 _nativeICoreWebView2ExperimentalProfile8 { get; internal set; }
    internal ICoreWebView2ExperimentalProfile12 _nativeICoreWebView2ExperimentalProfile12 { get; internal set; }
    internal ICoreWebView2ExperimentalProfile11 _nativeICoreWebView2ExperimentalProfile11 { get; internal set; }
    internal ICoreWebView2ExperimentalProfile10 _nativeICoreWebView2ExperimentalProfile10 { get; internal set; }
    internal ICoreWebView2ExperimentalProfile7 _nativeICoreWebView2ExperimentalProfile7 { get; internal set; }
    internal ICoreWebView2ExperimentalProfile6 _nativeICoreWebView2ExperimentalProfile6 { get; internal set; }
    internal ICoreWebView2ExperimentalProfile5 _nativeICoreWebView2ExperimentalProfile5 { get; internal set; }
    internal ICoreWebView2ExperimentalProfile4 _nativeICoreWebView2ExperimentalProfile4 { get; internal set; }
    internal ICoreWebView2ExperimentalProfile3 _nativeICoreWebView2ExperimentalProfile3 { get; internal set; }
    internal ICoreWebView2ExperimentalProfile2 _nativeICoreWebView2ExperimentalProfile2 { get; internal set; }
    public string ProfileName { get; }
    public bool IsInPrivateModeEnabled { get; }
    public string ProfilePath { get; }
    public string DefaultDownloadFolderPath { get; public set; }
    public CoreWebView2PreferredColorScheme PreferredColorScheme { get; public set; }
    public CoreWebView2TrackingPreventionLevel PreferredTrackingPreventionLevel { get; public set; }
    public CoreWebView2CookieManager CookieManager { get; }
    public bool IsPasswordAutosaveEnabled { get; public set; }
    public bool IsGeneralAutofillEnabled { get; public set; }
    internal CoreWebView2Profile(object rawCoreWebView2Profile);
    [AsyncStateMachineAttribute("Microsoft.Web.WebView2.Core.CoreWebView2Profile/<ClearBrowsingDataAsync>d__0")]
public Task ClearBrowsingDataAsync(CoreWebView2BrowsingDataKinds dataKinds, DateTime startTime, DateTime endTime);
    [AsyncStateMachineAttribute("Microsoft.Web.WebView2.Core.CoreWebView2Profile/<ClearBrowsingDataAsync>d__1")]
public Task ClearBrowsingDataAsync();
    internal ICoreWebView2Profile get__nativeICoreWebView2Profile();
    internal void set__nativeICoreWebView2Profile(ICoreWebView2Profile value);
    internal ICoreWebView2Profile2 get__nativeICoreWebView2Profile2();
    internal void set__nativeICoreWebView2Profile2(ICoreWebView2Profile2 value);
    internal ICoreWebView2Profile3 get__nativeICoreWebView2Profile3();
    internal void set__nativeICoreWebView2Profile3(ICoreWebView2Profile3 value);
    internal ICoreWebView2Profile4 get__nativeICoreWebView2Profile4();
    internal void set__nativeICoreWebView2Profile4(ICoreWebView2Profile4 value);
    internal ICoreWebView2Profile5 get__nativeICoreWebView2Profile5();
    internal void set__nativeICoreWebView2Profile5(ICoreWebView2Profile5 value);
    internal ICoreWebView2Profile6 get__nativeICoreWebView2Profile6();
    internal void set__nativeICoreWebView2Profile6(ICoreWebView2Profile6 value);
    internal ICoreWebView2Profile7 get__nativeICoreWebView2Profile7();
    internal void set__nativeICoreWebView2Profile7(ICoreWebView2Profile7 value);
    internal ICoreWebView2Profile8 get__nativeICoreWebView2Profile8();
    internal void set__nativeICoreWebView2Profile8(ICoreWebView2Profile8 value);
    internal ICoreWebView2ExperimentalProfile8 get__nativeICoreWebView2ExperimentalProfile8();
    internal void set__nativeICoreWebView2ExperimentalProfile8(ICoreWebView2ExperimentalProfile8 value);
    internal ICoreWebView2ExperimentalProfile12 get__nativeICoreWebView2ExperimentalProfile12();
    internal void set__nativeICoreWebView2ExperimentalProfile12(ICoreWebView2ExperimentalProfile12 value);
    internal ICoreWebView2ExperimentalProfile11 get__nativeICoreWebView2ExperimentalProfile11();
    internal void set__nativeICoreWebView2ExperimentalProfile11(ICoreWebView2ExperimentalProfile11 value);
    internal ICoreWebView2ExperimentalProfile10 get__nativeICoreWebView2ExperimentalProfile10();
    internal void set__nativeICoreWebView2ExperimentalProfile10(ICoreWebView2ExperimentalProfile10 value);
    internal ICoreWebView2ExperimentalProfile7 get__nativeICoreWebView2ExperimentalProfile7();
    internal void set__nativeICoreWebView2ExperimentalProfile7(ICoreWebView2ExperimentalProfile7 value);
    internal ICoreWebView2ExperimentalProfile6 get__nativeICoreWebView2ExperimentalProfile6();
    internal void set__nativeICoreWebView2ExperimentalProfile6(ICoreWebView2ExperimentalProfile6 value);
    internal ICoreWebView2ExperimentalProfile5 get__nativeICoreWebView2ExperimentalProfile5();
    internal void set__nativeICoreWebView2ExperimentalProfile5(ICoreWebView2ExperimentalProfile5 value);
    internal ICoreWebView2ExperimentalProfile4 get__nativeICoreWebView2ExperimentalProfile4();
    internal void set__nativeICoreWebView2ExperimentalProfile4(ICoreWebView2ExperimentalProfile4 value);
    internal ICoreWebView2ExperimentalProfile3 get__nativeICoreWebView2ExperimentalProfile3();
    internal void set__nativeICoreWebView2ExperimentalProfile3(ICoreWebView2ExperimentalProfile3 value);
    internal ICoreWebView2ExperimentalProfile2 get__nativeICoreWebView2ExperimentalProfile2();
    internal void set__nativeICoreWebView2ExperimentalProfile2(ICoreWebView2ExperimentalProfile2 value);
    public string get_ProfileName();
    public bool get_IsInPrivateModeEnabled();
    public string get_ProfilePath();
    public string get_DefaultDownloadFolderPath();
    public void set_DefaultDownloadFolderPath(string value);
    public CoreWebView2PreferredColorScheme get_PreferredColorScheme();
    public void set_PreferredColorScheme(CoreWebView2PreferredColorScheme value);
    [AsyncStateMachineAttribute("Microsoft.Web.WebView2.Core.CoreWebView2Profile/<ClearBrowsingDataAsync>d__89")]
public Task ClearBrowsingDataAsync(CoreWebView2BrowsingDataKinds dataKinds);
    public CoreWebView2TrackingPreventionLevel get_PreferredTrackingPreventionLevel();
    public void set_PreferredTrackingPreventionLevel(CoreWebView2TrackingPreventionLevel value);
    [AsyncStateMachineAttribute("Microsoft.Web.WebView2.Core.CoreWebView2Profile/<SetPermissionStateAsync>d__93")]
public Task SetPermissionStateAsync(CoreWebView2PermissionKind PermissionKind, string origin, CoreWebView2PermissionState State);
    [AsyncStateMachineAttribute("Microsoft.Web.WebView2.Core.CoreWebView2Profile/<GetNonDefaultPermissionSettingsAsync>d__94")]
public Task`1<IReadOnlyList`1<CoreWebView2PermissionSetting>> GetNonDefaultPermissionSettingsAsync();
    public CoreWebView2CookieManager get_CookieManager();
    public bool get_IsPasswordAutosaveEnabled();
    public void set_IsPasswordAutosaveEnabled(bool value);
    public bool get_IsGeneralAutofillEnabled();
    public void set_IsGeneralAutofillEnabled(bool value);
    [AsyncStateMachineAttribute("Microsoft.Web.WebView2.Core.CoreWebView2Profile/<AddBrowserExtensionAsync>d__103")]
public Task`1<CoreWebView2BrowserExtension> AddBrowserExtensionAsync(string extensionFolderPath);
    [AsyncStateMachineAttribute("Microsoft.Web.WebView2.Core.CoreWebView2Profile/<GetBrowserExtensionsAsync>d__104")]
public Task`1<IReadOnlyList`1<CoreWebView2BrowserExtension>> GetBrowserExtensionsAsync();
    public void add_Deleted(EventHandler`1<object> value);
    public void remove_Deleted(EventHandler`1<object> value);
    internal void OnDeleted(object args);
    public void Delete();
    [AsyncStateMachineAttribute("Microsoft.Web.WebView2.Core.CoreWebView2Profile/<ClearCustomDataPartitionAsync>d__112")]
public Task ClearCustomDataPartitionAsync(string CustomDataPartitionId);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2ProfileAddBrowserExtensionCompletedHandler : object {
    [CompilerGeneratedAttribute]
private CoreWebView2BrowserExtension <result>k__BackingField;
    [CompilerGeneratedAttribute]
private int <errCode>k__BackingField;
    private Action continuation;
    [CompilerGeneratedAttribute]
private bool <IsCompleted>k__BackingField;
    public CoreWebView2BrowserExtension result { get; private set; }
    public int errCode { get; private set; }
    public bool IsCompleted { get; private set; }
    [CompilerGeneratedAttribute]
public CoreWebView2BrowserExtension get_result();
    [CompilerGeneratedAttribute]
private void set_result(CoreWebView2BrowserExtension value);
    [CompilerGeneratedAttribute]
public int get_errCode();
    [CompilerGeneratedAttribute]
private void set_errCode(int value);
    public sealed virtual void Invoke(int errCode, ICoreWebView2BrowserExtension result);
    public CoreWebView2ProfileAddBrowserExtensionCompletedHandler GetAwaiter();
    [CompilerGeneratedAttribute]
public bool get_IsCompleted();
    [CompilerGeneratedAttribute]
private void set_IsCompleted(bool value);
    public sealed virtual void OnCompleted(Action continuation);
    public CoreWebView2BrowserExtension GetResult();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2ProfileDeletedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2ProfileDeletedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2Profile source, object args);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2ProfileGetBrowserExtensionsCompletedHandler : object {
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<CoreWebView2BrowserExtension> <result>k__BackingField;
    [CompilerGeneratedAttribute]
private int <errCode>k__BackingField;
    private Action continuation;
    [CompilerGeneratedAttribute]
private bool <IsCompleted>k__BackingField;
    public IReadOnlyList`1<CoreWebView2BrowserExtension> result { get; private set; }
    public int errCode { get; private set; }
    public bool IsCompleted { get; private set; }
    public sealed virtual void Invoke(int errCode, ICoreWebView2BrowserExtensionList extensionList);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<CoreWebView2BrowserExtension> get_result();
    [CompilerGeneratedAttribute]
private void set_result(IReadOnlyList`1<CoreWebView2BrowserExtension> value);
    [CompilerGeneratedAttribute]
public int get_errCode();
    [CompilerGeneratedAttribute]
private void set_errCode(int value);
    public void Invoke(int errCode, IReadOnlyList`1<CoreWebView2BrowserExtension> result);
    public CoreWebView2ProfileGetBrowserExtensionsCompletedHandler GetAwaiter();
    [CompilerGeneratedAttribute]
public bool get_IsCompleted();
    [CompilerGeneratedAttribute]
private void set_IsCompleted(bool value);
    public sealed virtual void OnCompleted(Action continuation);
    public IReadOnlyList`1<CoreWebView2BrowserExtension> GetResult();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2RasterizationScaleChangedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2RasterizationScaleChangedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2Controller source, object args);
}
[FlagsAttribute]
public enum Microsoft.Web.WebView2.Core.CoreWebView2ReleaseChannels : Enum {
    public int value__;
    public static CoreWebView2ReleaseChannels None;
    public static CoreWebView2ReleaseChannels Stable;
    public static CoreWebView2ReleaseChannels Beta;
    public static CoreWebView2ReleaseChannels Dev;
    public static CoreWebView2ReleaseChannels Canary;
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2SaveAsKind : Enum {
    public int value__;
    public static CoreWebView2SaveAsKind Default;
    public static CoreWebView2SaveAsKind HtmlOnly;
    public static CoreWebView2SaveAsKind SingleFile;
    public static CoreWebView2SaveAsKind Complete;
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2SaveAsUIResult : Enum {
    public int value__;
    public static CoreWebView2SaveAsUIResult Success;
    public static CoreWebView2SaveAsUIResult InvalidPath;
    public static CoreWebView2SaveAsUIResult FileAlreadyExists;
    public static CoreWebView2SaveAsUIResult KindNotSupported;
    public static CoreWebView2SaveAsUIResult Cancelled;
}
public class Microsoft.Web.WebView2.Core.CoreWebView2SaveAsUIShowingEventArgs : EventArgs {
    internal ICoreWebView2SaveAsUIShowingEventArgs _nativeICoreWebView2SaveAsUIShowingEventArgsValue;
    internal object _rawNative;
    internal ICoreWebView2SaveAsUIShowingEventArgs _nativeICoreWebView2SaveAsUIShowingEventArgs { get; internal set; }
    public string ContentMimeType { get; }
    public bool Cancel { get; public set; }
    public bool SuppressDefaultDialog { get; public set; }
    public string SaveAsFilePath { get; public set; }
    public bool AllowReplace { get; public set; }
    public CoreWebView2SaveAsKind Kind { get; public set; }
    internal CoreWebView2SaveAsUIShowingEventArgs(object rawCoreWebView2SaveAsUIShowingEventArgs);
    internal ICoreWebView2SaveAsUIShowingEventArgs get__nativeICoreWebView2SaveAsUIShowingEventArgs();
    internal void set__nativeICoreWebView2SaveAsUIShowingEventArgs(ICoreWebView2SaveAsUIShowingEventArgs value);
    public string get_ContentMimeType();
    public bool get_Cancel();
    public void set_Cancel(bool value);
    public bool get_SuppressDefaultDialog();
    public void set_SuppressDefaultDialog(bool value);
    public string get_SaveAsFilePath();
    public void set_SaveAsFilePath(string value);
    public bool get_AllowReplace();
    public void set_AllowReplace(bool value);
    public CoreWebView2SaveAsKind get_Kind();
    public void set_Kind(CoreWebView2SaveAsKind value);
    public CoreWebView2Deferral GetDeferral();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2SaveAsUIShowingEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2SaveAsUIShowingEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2 source, ICoreWebView2SaveAsUIShowingEventArgs args);
}
public class Microsoft.Web.WebView2.Core.CoreWebView2SaveFileSecurityCheckStartingEventArgs : EventArgs {
    internal ICoreWebView2ExperimentalSaveFileSecurityCheckStartingEventArgs _nativeICoreWebView2ExperimentalSaveFileSecurityCheckStartingEventArgsValue;
    internal object _rawNative;
    internal ICoreWebView2ExperimentalSaveFileSecurityCheckStartingEventArgs _nativeICoreWebView2ExperimentalSaveFileSecurityCheckStartingEventArgs { get; internal set; }
    public bool CancelSave { get; public set; }
    public string DocumentOriginUri { get; }
    public string FileExtension { get; }
    public string FilePath { get; }
    public bool SuppressDefaultPolicy { get; public set; }
    internal CoreWebView2SaveFileSecurityCheckStartingEventArgs(object rawCoreWebView2SaveFileSecurityCheckStartingEventArgs);
    internal ICoreWebView2ExperimentalSaveFileSecurityCheckStartingEventArgs get__nativeICoreWebView2ExperimentalSaveFileSecurityCheckStartingEventArgs();
    internal void set__nativeICoreWebView2ExperimentalSaveFileSecurityCheckStartingEventArgs(ICoreWebView2ExperimentalSaveFileSecurityCheckStartingEventArgs value);
    public bool get_CancelSave();
    public void set_CancelSave(bool value);
    public string get_DocumentOriginUri();
    public string get_FileExtension();
    public string get_FilePath();
    public bool get_SuppressDefaultPolicy();
    public void set_SuppressDefaultPolicy(bool value);
    public CoreWebView2Deferral GetDeferral();
}
public class Microsoft.Web.WebView2.Core.CoreWebView2ScreenCaptureStartingEventArgs : EventArgs {
    internal ICoreWebView2ExperimentalScreenCaptureStartingEventArgs _nativeICoreWebView2ExperimentalScreenCaptureStartingEventArgsValue;
    internal object _rawNative;
    internal ICoreWebView2ExperimentalScreenCaptureStartingEventArgs _nativeICoreWebView2ExperimentalScreenCaptureStartingEventArgs { get; internal set; }
    public bool Cancel { get; public set; }
    public bool Handled { get; public set; }
    public CoreWebView2FrameInfo OriginalSourceFrameInfo { get; }
    internal CoreWebView2ScreenCaptureStartingEventArgs(object rawCoreWebView2ScreenCaptureStartingEventArgs);
    internal ICoreWebView2ExperimentalScreenCaptureStartingEventArgs get__nativeICoreWebView2ExperimentalScreenCaptureStartingEventArgs();
    internal void set__nativeICoreWebView2ExperimentalScreenCaptureStartingEventArgs(ICoreWebView2ExperimentalScreenCaptureStartingEventArgs value);
    public bool get_Cancel();
    public void set_Cancel(bool value);
    public bool get_Handled();
    public void set_Handled(bool value);
    public CoreWebView2FrameInfo get_OriginalSourceFrameInfo();
    public CoreWebView2Deferral GetDeferral();
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2ScriptDialogKind : Enum {
    public int value__;
    public static CoreWebView2ScriptDialogKind Alert;
    public static CoreWebView2ScriptDialogKind Confirm;
    public static CoreWebView2ScriptDialogKind Prompt;
    public static CoreWebView2ScriptDialogKind Beforeunload;
}
public class Microsoft.Web.WebView2.Core.CoreWebView2ScriptDialogOpeningEventArgs : EventArgs {
    internal ICoreWebView2ScriptDialogOpeningEventArgs _nativeICoreWebView2ScriptDialogOpeningEventArgsValue;
    internal object _rawNative;
    internal ICoreWebView2ScriptDialogOpeningEventArgs _nativeICoreWebView2ScriptDialogOpeningEventArgs { get; internal set; }
    public string Uri { get; }
    public CoreWebView2ScriptDialogKind Kind { get; }
    public string Message { get; }
    public string DefaultText { get; }
    public string ResultText { get; public set; }
    internal CoreWebView2ScriptDialogOpeningEventArgs(object rawCoreWebView2ScriptDialogOpeningEventArgs);
    internal ICoreWebView2ScriptDialogOpeningEventArgs get__nativeICoreWebView2ScriptDialogOpeningEventArgs();
    internal void set__nativeICoreWebView2ScriptDialogOpeningEventArgs(ICoreWebView2ScriptDialogOpeningEventArgs value);
    public string get_Uri();
    public CoreWebView2ScriptDialogKind get_Kind();
    public string get_Message();
    public string get_DefaultText();
    public string get_ResultText();
    public void set_ResultText(string value);
    public void Accept();
    public CoreWebView2Deferral GetDeferral();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2ScriptDialogOpeningEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2ScriptDialogOpeningEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2 source, ICoreWebView2ScriptDialogOpeningEventArgs args);
}
public class Microsoft.Web.WebView2.Core.CoreWebView2ScriptException : object {
    internal ICoreWebView2ScriptException _nativeICoreWebView2ScriptExceptionValue;
    internal object _rawNative;
    internal ICoreWebView2ScriptException _nativeICoreWebView2ScriptException { get; internal set; }
    public UInt32 LineNumber { get; }
    public UInt32 ColumnNumber { get; }
    public string Name { get; }
    public string Message { get; }
    public string ToJson { get; }
    internal CoreWebView2ScriptException(object rawCoreWebView2ScriptException);
    internal ICoreWebView2ScriptException get__nativeICoreWebView2ScriptException();
    internal void set__nativeICoreWebView2ScriptException(ICoreWebView2ScriptException value);
    public UInt32 get_LineNumber();
    public UInt32 get_ColumnNumber();
    public string get_Name();
    public string get_Message();
    public string get_ToJson();
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2ScrollbarStyle : Enum {
    public int value__;
    public static CoreWebView2ScrollbarStyle Default;
    public static CoreWebView2ScrollbarStyle FluentOverlay;
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2ServerCertificateErrorAction : Enum {
    public int value__;
    public static CoreWebView2ServerCertificateErrorAction AlwaysAllow;
    public static CoreWebView2ServerCertificateErrorAction Cancel;
    public static CoreWebView2ServerCertificateErrorAction Default;
}
public class Microsoft.Web.WebView2.Core.CoreWebView2ServerCertificateErrorDetectedEventArgs : EventArgs {
    internal ICoreWebView2ServerCertificateErrorDetectedEventArgs _nativeICoreWebView2ServerCertificateErrorDetectedEventArgsValue;
    internal object _rawNative;
    internal ICoreWebView2ServerCertificateErrorDetectedEventArgs _nativeICoreWebView2ServerCertificateErrorDetectedEventArgs { get; internal set; }
    public CoreWebView2WebErrorStatus ErrorStatus { get; }
    public string RequestUri { get; }
    public CoreWebView2Certificate ServerCertificate { get; }
    public CoreWebView2ServerCertificateErrorAction Action { get; public set; }
    internal CoreWebView2ServerCertificateErrorDetectedEventArgs(object rawCoreWebView2ServerCertificateErrorDetectedEventArgs);
    internal ICoreWebView2ServerCertificateErrorDetectedEventArgs get__nativeICoreWebView2ServerCertificateErrorDetectedEventArgs();
    internal void set__nativeICoreWebView2ServerCertificateErrorDetectedEventArgs(ICoreWebView2ServerCertificateErrorDetectedEventArgs value);
    public CoreWebView2WebErrorStatus get_ErrorStatus();
    public string get_RequestUri();
    public CoreWebView2Certificate get_ServerCertificate();
    public CoreWebView2ServerCertificateErrorAction get_Action();
    public void set_Action(CoreWebView2ServerCertificateErrorAction value);
    public CoreWebView2Deferral GetDeferral();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2ServerCertificateErrorDetectedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2ServerCertificateErrorDetectedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2 source, ICoreWebView2ServerCertificateErrorDetectedEventArgs args);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2SetPermissionStateCompletedHandler : object {
    [CompilerGeneratedAttribute]
private int <errCode>k__BackingField;
    private Action continuation;
    [CompilerGeneratedAttribute]
private bool <IsCompleted>k__BackingField;
    public int errCode { get; private set; }
    public bool IsCompleted { get; private set; }
    [CompilerGeneratedAttribute]
public int get_errCode();
    [CompilerGeneratedAttribute]
private void set_errCode(int value);
    public sealed virtual void Invoke(int errCode);
    public CoreWebView2SetPermissionStateCompletedHandler GetAwaiter();
    [CompilerGeneratedAttribute]
public bool get_IsCompleted();
    [CompilerGeneratedAttribute]
private void set_IsCompleted(bool value);
    public sealed virtual void OnCompleted(Action continuation);
    public void GetResult();
}
public class Microsoft.Web.WebView2.Core.CoreWebView2Settings : object {
    internal ICoreWebView2Settings _nativeICoreWebView2SettingsValue;
    internal ICoreWebView2Settings2 _nativeICoreWebView2Settings2Value;
    internal ICoreWebView2Settings3 _nativeICoreWebView2Settings3Value;
    internal ICoreWebView2Settings4 _nativeICoreWebView2Settings4Value;
    internal ICoreWebView2Settings5 _nativeICoreWebView2Settings5Value;
    internal ICoreWebView2Settings6 _nativeICoreWebView2Settings6Value;
    internal ICoreWebView2Settings7 _nativeICoreWebView2Settings7Value;
    internal ICoreWebView2Settings8 _nativeICoreWebView2Settings8Value;
    internal ICoreWebView2Settings9 _nativeICoreWebView2Settings9Value;
    internal ICoreWebView2ExperimentalSettings9 _nativeICoreWebView2ExperimentalSettings9Value;
    internal ICoreWebView2ExperimentalSettings8 _nativeICoreWebView2ExperimentalSettings8Value;
    internal ICoreWebView2ExperimentalSettings7 _nativeICoreWebView2ExperimentalSettings7Value;
    internal ICoreWebView2ExperimentalSettings6 _nativeICoreWebView2ExperimentalSettings6Value;
    internal ICoreWebView2ExperimentalSettings5 _nativeICoreWebView2ExperimentalSettings5Value;
    internal ICoreWebView2ExperimentalSettings4 _nativeICoreWebView2ExperimentalSettings4Value;
    internal ICoreWebView2ExperimentalSettings3 _nativeICoreWebView2ExperimentalSettings3Value;
    internal ICoreWebView2ExperimentalSettings2 _nativeICoreWebView2ExperimentalSettings2Value;
    internal ICoreWebView2ExperimentalSettings _nativeICoreWebView2ExperimentalSettingsValue;
    internal object _rawNative;
    internal ICoreWebView2Settings _nativeICoreWebView2Settings { get; internal set; }
    internal ICoreWebView2Settings2 _nativeICoreWebView2Settings2 { get; internal set; }
    internal ICoreWebView2Settings3 _nativeICoreWebView2Settings3 { get; internal set; }
    internal ICoreWebView2Settings4 _nativeICoreWebView2Settings4 { get; internal set; }
    internal ICoreWebView2Settings5 _nativeICoreWebView2Settings5 { get; internal set; }
    internal ICoreWebView2Settings6 _nativeICoreWebView2Settings6 { get; internal set; }
    internal ICoreWebView2Settings7 _nativeICoreWebView2Settings7 { get; internal set; }
    internal ICoreWebView2Settings8 _nativeICoreWebView2Settings8 { get; internal set; }
    internal ICoreWebView2Settings9 _nativeICoreWebView2Settings9 { get; internal set; }
    internal ICoreWebView2ExperimentalSettings9 _nativeICoreWebView2ExperimentalSettings9 { get; internal set; }
    internal ICoreWebView2ExperimentalSettings8 _nativeICoreWebView2ExperimentalSettings8 { get; internal set; }
    internal ICoreWebView2ExperimentalSettings7 _nativeICoreWebView2ExperimentalSettings7 { get; internal set; }
    internal ICoreWebView2ExperimentalSettings6 _nativeICoreWebView2ExperimentalSettings6 { get; internal set; }
    internal ICoreWebView2ExperimentalSettings5 _nativeICoreWebView2ExperimentalSettings5 { get; internal set; }
    internal ICoreWebView2ExperimentalSettings4 _nativeICoreWebView2ExperimentalSettings4 { get; internal set; }
    internal ICoreWebView2ExperimentalSettings3 _nativeICoreWebView2ExperimentalSettings3 { get; internal set; }
    internal ICoreWebView2ExperimentalSettings2 _nativeICoreWebView2ExperimentalSettings2 { get; internal set; }
    internal ICoreWebView2ExperimentalSettings _nativeICoreWebView2ExperimentalSettings { get; internal set; }
    public bool IsScriptEnabled { get; public set; }
    public bool IsWebMessageEnabled { get; public set; }
    public bool AreDefaultScriptDialogsEnabled { get; public set; }
    public bool IsStatusBarEnabled { get; public set; }
    public bool AreDevToolsEnabled { get; public set; }
    public bool AreDefaultContextMenusEnabled { get; public set; }
    public bool AreHostObjectsAllowed { get; public set; }
    public bool IsZoomControlEnabled { get; public set; }
    public bool IsBuiltInErrorPageEnabled { get; public set; }
    public string UserAgent { get; public set; }
    public bool AreBrowserAcceleratorKeysEnabled { get; public set; }
    public bool IsPasswordAutosaveEnabled { get; public set; }
    public bool IsGeneralAutofillEnabled { get; public set; }
    public bool IsPinchZoomEnabled { get; public set; }
    public bool IsSwipeNavigationEnabled { get; public set; }
    public CoreWebView2PdfToolbarItems HiddenPdfToolbarItems { get; public set; }
    public bool IsReputationCheckingRequired { get; public set; }
    public bool IsNonClientRegionSupportEnabled { get; public set; }
    public TimeSpan PreferredBackgroundTimerWakeInterval { get; public set; }
    public TimeSpan PreferredForegroundTimerWakeInterval { get; public set; }
    public TimeSpan PreferredIntensiveTimerWakeInterval { get; public set; }
    public TimeSpan PreferredOverrideTimerWakeInterval { get; public set; }
    internal CoreWebView2Settings(object rawCoreWebView2Settings);
    internal ICoreWebView2Settings get__nativeICoreWebView2Settings();
    internal void set__nativeICoreWebView2Settings(ICoreWebView2Settings value);
    internal ICoreWebView2Settings2 get__nativeICoreWebView2Settings2();
    internal void set__nativeICoreWebView2Settings2(ICoreWebView2Settings2 value);
    internal ICoreWebView2Settings3 get__nativeICoreWebView2Settings3();
    internal void set__nativeICoreWebView2Settings3(ICoreWebView2Settings3 value);
    internal ICoreWebView2Settings4 get__nativeICoreWebView2Settings4();
    internal void set__nativeICoreWebView2Settings4(ICoreWebView2Settings4 value);
    internal ICoreWebView2Settings5 get__nativeICoreWebView2Settings5();
    internal void set__nativeICoreWebView2Settings5(ICoreWebView2Settings5 value);
    internal ICoreWebView2Settings6 get__nativeICoreWebView2Settings6();
    internal void set__nativeICoreWebView2Settings6(ICoreWebView2Settings6 value);
    internal ICoreWebView2Settings7 get__nativeICoreWebView2Settings7();
    internal void set__nativeICoreWebView2Settings7(ICoreWebView2Settings7 value);
    internal ICoreWebView2Settings8 get__nativeICoreWebView2Settings8();
    internal void set__nativeICoreWebView2Settings8(ICoreWebView2Settings8 value);
    internal ICoreWebView2Settings9 get__nativeICoreWebView2Settings9();
    internal void set__nativeICoreWebView2Settings9(ICoreWebView2Settings9 value);
    internal ICoreWebView2ExperimentalSettings9 get__nativeICoreWebView2ExperimentalSettings9();
    internal void set__nativeICoreWebView2ExperimentalSettings9(ICoreWebView2ExperimentalSettings9 value);
    internal ICoreWebView2ExperimentalSettings8 get__nativeICoreWebView2ExperimentalSettings8();
    internal void set__nativeICoreWebView2ExperimentalSettings8(ICoreWebView2ExperimentalSettings8 value);
    internal ICoreWebView2ExperimentalSettings7 get__nativeICoreWebView2ExperimentalSettings7();
    internal void set__nativeICoreWebView2ExperimentalSettings7(ICoreWebView2ExperimentalSettings7 value);
    internal ICoreWebView2ExperimentalSettings6 get__nativeICoreWebView2ExperimentalSettings6();
    internal void set__nativeICoreWebView2ExperimentalSettings6(ICoreWebView2ExperimentalSettings6 value);
    internal ICoreWebView2ExperimentalSettings5 get__nativeICoreWebView2ExperimentalSettings5();
    internal void set__nativeICoreWebView2ExperimentalSettings5(ICoreWebView2ExperimentalSettings5 value);
    internal ICoreWebView2ExperimentalSettings4 get__nativeICoreWebView2ExperimentalSettings4();
    internal void set__nativeICoreWebView2ExperimentalSettings4(ICoreWebView2ExperimentalSettings4 value);
    internal ICoreWebView2ExperimentalSettings3 get__nativeICoreWebView2ExperimentalSettings3();
    internal void set__nativeICoreWebView2ExperimentalSettings3(ICoreWebView2ExperimentalSettings3 value);
    internal ICoreWebView2ExperimentalSettings2 get__nativeICoreWebView2ExperimentalSettings2();
    internal void set__nativeICoreWebView2ExperimentalSettings2(ICoreWebView2ExperimentalSettings2 value);
    internal ICoreWebView2ExperimentalSettings get__nativeICoreWebView2ExperimentalSettings();
    internal void set__nativeICoreWebView2ExperimentalSettings(ICoreWebView2ExperimentalSettings value);
    public bool get_IsScriptEnabled();
    public void set_IsScriptEnabled(bool value);
    public bool get_IsWebMessageEnabled();
    public void set_IsWebMessageEnabled(bool value);
    public bool get_AreDefaultScriptDialogsEnabled();
    public void set_AreDefaultScriptDialogsEnabled(bool value);
    public bool get_IsStatusBarEnabled();
    public void set_IsStatusBarEnabled(bool value);
    public bool get_AreDevToolsEnabled();
    public void set_AreDevToolsEnabled(bool value);
    public bool get_AreDefaultContextMenusEnabled();
    public void set_AreDefaultContextMenusEnabled(bool value);
    public bool get_AreHostObjectsAllowed();
    public void set_AreHostObjectsAllowed(bool value);
    public bool get_IsZoomControlEnabled();
    public void set_IsZoomControlEnabled(bool value);
    public bool get_IsBuiltInErrorPageEnabled();
    public void set_IsBuiltInErrorPageEnabled(bool value);
    public string get_UserAgent();
    public void set_UserAgent(string value);
    public bool get_AreBrowserAcceleratorKeysEnabled();
    public void set_AreBrowserAcceleratorKeysEnabled(bool value);
    public bool get_IsPasswordAutosaveEnabled();
    public void set_IsPasswordAutosaveEnabled(bool value);
    public bool get_IsGeneralAutofillEnabled();
    public void set_IsGeneralAutofillEnabled(bool value);
    public bool get_IsPinchZoomEnabled();
    public void set_IsPinchZoomEnabled(bool value);
    public bool get_IsSwipeNavigationEnabled();
    public void set_IsSwipeNavigationEnabled(bool value);
    public CoreWebView2PdfToolbarItems get_HiddenPdfToolbarItems();
    public void set_HiddenPdfToolbarItems(CoreWebView2PdfToolbarItems value);
    public bool get_IsReputationCheckingRequired();
    public void set_IsReputationCheckingRequired(bool value);
    public bool get_IsNonClientRegionSupportEnabled();
    public void set_IsNonClientRegionSupportEnabled(bool value);
    public TimeSpan get_PreferredBackgroundTimerWakeInterval();
    public void set_PreferredBackgroundTimerWakeInterval(TimeSpan value);
    public TimeSpan get_PreferredForegroundTimerWakeInterval();
    public void set_PreferredForegroundTimerWakeInterval(TimeSpan value);
    public TimeSpan get_PreferredIntensiveTimerWakeInterval();
    public void set_PreferredIntensiveTimerWakeInterval(TimeSpan value);
    public TimeSpan get_PreferredOverrideTimerWakeInterval();
    public void set_PreferredOverrideTimerWakeInterval(TimeSpan value);
}
public class Microsoft.Web.WebView2.Core.CoreWebView2SharedBuffer : object {
    private bool _disposed;
    private WebView2SharedBufferSafeHandle _safeFileMappingHandle;
    internal ICoreWebView2SharedBuffer _nativeICoreWebView2SharedBufferValue;
    internal object _rawNative;
    internal IntPtr UnsafeFileMappingHandle { get; }
    public SafeHandle FileMappingHandle { get; }
    internal ICoreWebView2SharedBuffer _nativeICoreWebView2SharedBuffer { get; internal set; }
    public ulong Size { get; }
    public IntPtr Buffer { get; }
    internal CoreWebView2SharedBuffer(object rawCoreWebView2SharedBuffer);
    public sealed virtual void Dispose();
    protected virtual void Dispose(bool disposing);
    internal IntPtr get_UnsafeFileMappingHandle();
    public SafeHandle get_FileMappingHandle();
    internal ICoreWebView2SharedBuffer get__nativeICoreWebView2SharedBuffer();
    internal void set__nativeICoreWebView2SharedBuffer(ICoreWebView2SharedBuffer value);
    public ulong get_Size();
    public IntPtr get_Buffer();
    public Stream OpenStream();
    public void Close();
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2SharedBufferAccess : Enum {
    public int value__;
    public static CoreWebView2SharedBufferAccess ReadOnly;
    public static CoreWebView2SharedBufferAccess ReadWrite;
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2ShowSaveAsUICompletedHandler : object {
    [CompilerGeneratedAttribute]
private CoreWebView2SaveAsUIResult <result>k__BackingField;
    [CompilerGeneratedAttribute]
private int <errCode>k__BackingField;
    private Action continuation;
    [CompilerGeneratedAttribute]
private bool <IsCompleted>k__BackingField;
    public CoreWebView2SaveAsUIResult result { get; private set; }
    public int errCode { get; private set; }
    public bool IsCompleted { get; private set; }
    [CompilerGeneratedAttribute]
public CoreWebView2SaveAsUIResult get_result();
    [CompilerGeneratedAttribute]
private void set_result(CoreWebView2SaveAsUIResult value);
    [CompilerGeneratedAttribute]
public int get_errCode();
    [CompilerGeneratedAttribute]
private void set_errCode(int value);
    public sealed virtual void Invoke(int errCode, COREWEBVIEW2_SAVE_AS_UI_RESULT result);
    public CoreWebView2ShowSaveAsUICompletedHandler GetAwaiter();
    [CompilerGeneratedAttribute]
public bool get_IsCompleted();
    [CompilerGeneratedAttribute]
private void set_IsCompleted(bool value);
    public sealed virtual void OnCompleted(Action continuation);
    public CoreWebView2SaveAsUIResult GetResult();
}
public class Microsoft.Web.WebView2.Core.CoreWebView2SourceChangedEventArgs : EventArgs {
    internal ICoreWebView2SourceChangedEventArgs _nativeICoreWebView2SourceChangedEventArgsValue;
    internal object _rawNative;
    internal ICoreWebView2SourceChangedEventArgs _nativeICoreWebView2SourceChangedEventArgs { get; internal set; }
    public bool IsNewDocument { get; }
    internal CoreWebView2SourceChangedEventArgs(object rawCoreWebView2SourceChangedEventArgs);
    internal ICoreWebView2SourceChangedEventArgs get__nativeICoreWebView2SourceChangedEventArgs();
    internal void set__nativeICoreWebView2SourceChangedEventArgs(ICoreWebView2SourceChangedEventArgs value);
    public bool get_IsNewDocument();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2SourceChangedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2SourceChangedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2 source, ICoreWebView2SourceChangedEventArgs args);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2StateChangedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2StateChangedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2DownloadOperation source, object args);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2StatusBarTextChangedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2StatusBarTextChangedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2 source, object args);
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2TextDirectionKind : Enum {
    public int value__;
    public static CoreWebView2TextDirectionKind Default;
    public static CoreWebView2TextDirectionKind LeftToRight;
    public static CoreWebView2TextDirectionKind RightToLeft;
}
public class Microsoft.Web.WebView2.Core.CoreWebView2Texture : object {
    internal ICoreWebView2ExperimentalTexture _nativeICoreWebView2ExperimentalTextureValue;
    internal object _rawNative;
    internal ICoreWebView2ExperimentalTexture _nativeICoreWebView2ExperimentalTexture { get; internal set; }
    public IntPtr Handle { get; }
    public object Resource { get; }
    public ulong Timestamp { get; public set; }
    internal CoreWebView2Texture(object rawCoreWebView2Texture);
    internal ICoreWebView2ExperimentalTexture get__nativeICoreWebView2ExperimentalTexture();
    internal void set__nativeICoreWebView2ExperimentalTexture(ICoreWebView2ExperimentalTexture value);
    public IntPtr get_Handle();
    public object get_Resource();
    public ulong get_Timestamp();
    public void set_Timestamp(ulong value);
}
public class Microsoft.Web.WebView2.Core.CoreWebView2TextureStream : object {
    internal ICoreWebView2ExperimentalTextureStream _nativeICoreWebView2ExperimentalTextureStreamValue;
    internal object _rawNative;
    private EventRegistrationToken _startRequestedToken;
    private EventHandler`1<object> startRequested;
    private EventRegistrationToken _stoppedToken;
    private EventHandler`1<object> stopped;
    private EventRegistrationToken _errorReceivedToken;
    private EventHandler`1<CoreWebView2TextureStreamErrorReceivedEventArgs> errorReceived;
    private EventRegistrationToken _webTextureReceivedToken;
    private EventHandler`1<CoreWebView2TextureStreamWebTextureReceivedEventArgs> webTextureReceived;
    private EventRegistrationToken _webTextureStreamStoppedToken;
    private EventHandler`1<object> webTextureStreamStopped;
    internal ICoreWebView2ExperimentalTextureStream _nativeICoreWebView2ExperimentalTextureStream { get; internal set; }
    public string Id { get; }
    internal CoreWebView2TextureStream(object rawCoreWebView2TextureStream);
    internal ICoreWebView2ExperimentalTextureStream get__nativeICoreWebView2ExperimentalTextureStream();
    internal void set__nativeICoreWebView2ExperimentalTextureStream(ICoreWebView2ExperimentalTextureStream value);
    public string get_Id();
    public void add_StartRequested(EventHandler`1<object> value);
    public void remove_StartRequested(EventHandler`1<object> value);
    internal void OnStartRequested(object args);
    public void add_Stopped(EventHandler`1<object> value);
    public void remove_Stopped(EventHandler`1<object> value);
    internal void OnStopped(object args);
    public void add_ErrorReceived(EventHandler`1<CoreWebView2TextureStreamErrorReceivedEventArgs> value);
    public void remove_ErrorReceived(EventHandler`1<CoreWebView2TextureStreamErrorReceivedEventArgs> value);
    internal void OnErrorReceived(CoreWebView2TextureStreamErrorReceivedEventArgs args);
    public void add_WebTextureReceived(EventHandler`1<CoreWebView2TextureStreamWebTextureReceivedEventArgs> value);
    public void remove_WebTextureReceived(EventHandler`1<CoreWebView2TextureStreamWebTextureReceivedEventArgs> value);
    internal void OnWebTextureReceived(CoreWebView2TextureStreamWebTextureReceivedEventArgs args);
    public void add_WebTextureStreamStopped(EventHandler`1<object> value);
    public void remove_WebTextureStreamStopped(EventHandler`1<object> value);
    internal void OnWebTextureStreamStopped(object args);
    public void AddAllowedOrigin(string origin, int value);
    public void RemoveAllowedOrigin(string origin);
    public CoreWebView2Texture CreateTexture(UInt32 widthInTexels, UInt32 heightInTexels);
    public CoreWebView2Texture GetAvailableTexture();
    public void CloseTexture(CoreWebView2Texture texture);
    public void PresentTexture(CoreWebView2Texture texture);
    public void Stop();
    public void SetD3DDevice(object d3dDevice);
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2TextureStreamErrorKind : Enum {
    public int value__;
    public static CoreWebView2TextureStreamErrorKind NoVideoTrackStarted;
    public static CoreWebView2TextureStreamErrorKind TextureError;
    public static CoreWebView2TextureStreamErrorKind TextureInUse;
}
public class Microsoft.Web.WebView2.Core.CoreWebView2TextureStreamErrorReceivedEventArgs : EventArgs {
    internal ICoreWebView2ExperimentalTextureStreamErrorReceivedEventArgs _nativeICoreWebView2ExperimentalTextureStreamErrorReceivedEventArgsValue;
    internal object _rawNative;
    internal ICoreWebView2ExperimentalTextureStreamErrorReceivedEventArgs _nativeICoreWebView2ExperimentalTextureStreamErrorReceivedEventArgs { get; internal set; }
    public CoreWebView2TextureStreamErrorKind Kind { get; }
    public CoreWebView2Texture Texture { get; }
    internal CoreWebView2TextureStreamErrorReceivedEventArgs(object rawCoreWebView2TextureStreamErrorReceivedEventArgs);
    internal ICoreWebView2ExperimentalTextureStreamErrorReceivedEventArgs get__nativeICoreWebView2ExperimentalTextureStreamErrorReceivedEventArgs();
    internal void set__nativeICoreWebView2ExperimentalTextureStreamErrorReceivedEventArgs(ICoreWebView2ExperimentalTextureStreamErrorReceivedEventArgs value);
    public CoreWebView2TextureStreamErrorKind get_Kind();
    public CoreWebView2Texture get_Texture();
}
public class Microsoft.Web.WebView2.Core.CoreWebView2TextureStreamWebTextureReceivedEventArgs : EventArgs {
    internal ICoreWebView2ExperimentalTextureStreamWebTextureReceivedEventArgs _nativeICoreWebView2ExperimentalTextureStreamWebTextureReceivedEventArgsValue;
    internal object _rawNative;
    internal ICoreWebView2ExperimentalTextureStreamWebTextureReceivedEventArgs _nativeICoreWebView2ExperimentalTextureStreamWebTextureReceivedEventArgs { get; internal set; }
    public CoreWebView2WebTexture WebTexture { get; }
    internal CoreWebView2TextureStreamWebTextureReceivedEventArgs(object rawCoreWebView2TextureStreamWebTextureReceivedEventArgs);
    internal ICoreWebView2ExperimentalTextureStreamWebTextureReceivedEventArgs get__nativeICoreWebView2ExperimentalTextureStreamWebTextureReceivedEventArgs();
    internal void set__nativeICoreWebView2ExperimentalTextureStreamWebTextureReceivedEventArgs(ICoreWebView2ExperimentalTextureStreamWebTextureReceivedEventArgs value);
    public CoreWebView2WebTexture get_WebTexture();
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2TrackingPreventionLevel : Enum {
    public int value__;
    public static CoreWebView2TrackingPreventionLevel None;
    public static CoreWebView2TrackingPreventionLevel Basic;
    public static CoreWebView2TrackingPreventionLevel Balanced;
    public static CoreWebView2TrackingPreventionLevel Strict;
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2TrySuspendCompletedHandler : object {
    [CompilerGeneratedAttribute]
private bool <result>k__BackingField;
    [CompilerGeneratedAttribute]
private int <errCode>k__BackingField;
    private Action continuation;
    [CompilerGeneratedAttribute]
private bool <IsCompleted>k__BackingField;
    public bool result { get; private set; }
    public int errCode { get; private set; }
    public bool IsCompleted { get; private set; }
    [CompilerGeneratedAttribute]
public bool get_result();
    [CompilerGeneratedAttribute]
private void set_result(bool value);
    [CompilerGeneratedAttribute]
public int get_errCode();
    [CompilerGeneratedAttribute]
private void set_errCode(int value);
    public sealed virtual void Invoke(int errCode, int result);
    public CoreWebView2TrySuspendCompletedHandler GetAwaiter();
    [CompilerGeneratedAttribute]
public bool get_IsCompleted();
    [CompilerGeneratedAttribute]
private void set_IsCompleted(bool value);
    public sealed virtual void OnCompleted(Action continuation);
    public bool GetResult();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2UpdateRuntimeCompletedHandler : object {
    [CompilerGeneratedAttribute]
private CoreWebView2UpdateRuntimeResult <result>k__BackingField;
    [CompilerGeneratedAttribute]
private int <errCode>k__BackingField;
    private Action continuation;
    [CompilerGeneratedAttribute]
private bool <IsCompleted>k__BackingField;
    public CoreWebView2UpdateRuntimeResult result { get; private set; }
    public int errCode { get; private set; }
    public bool IsCompleted { get; private set; }
    [CompilerGeneratedAttribute]
public CoreWebView2UpdateRuntimeResult get_result();
    [CompilerGeneratedAttribute]
private void set_result(CoreWebView2UpdateRuntimeResult value);
    [CompilerGeneratedAttribute]
public int get_errCode();
    [CompilerGeneratedAttribute]
private void set_errCode(int value);
    public sealed virtual void Invoke(int errCode, ICoreWebView2ExperimentalUpdateRuntimeResult result);
    public CoreWebView2UpdateRuntimeCompletedHandler GetAwaiter();
    [CompilerGeneratedAttribute]
public bool get_IsCompleted();
    [CompilerGeneratedAttribute]
private void set_IsCompleted(bool value);
    public sealed virtual void OnCompleted(Action continuation);
    public CoreWebView2UpdateRuntimeResult GetResult();
}
public class Microsoft.Web.WebView2.Core.CoreWebView2UpdateRuntimeResult : object {
    internal ICoreWebView2ExperimentalUpdateRuntimeResult _nativeICoreWebView2ExperimentalUpdateRuntimeResultValue;
    internal object _rawNative;
    internal ICoreWebView2ExperimentalUpdateRuntimeResult _nativeICoreWebView2ExperimentalUpdateRuntimeResult { get; internal set; }
    public CoreWebView2UpdateRuntimeStatus Status { get; }
    public int ExtendedError { get; }
    internal CoreWebView2UpdateRuntimeResult(object rawCoreWebView2UpdateRuntimeResult);
    internal ICoreWebView2ExperimentalUpdateRuntimeResult get__nativeICoreWebView2ExperimentalUpdateRuntimeResult();
    internal void set__nativeICoreWebView2ExperimentalUpdateRuntimeResult(ICoreWebView2ExperimentalUpdateRuntimeResult value);
    public CoreWebView2UpdateRuntimeStatus get_Status();
    public int get_ExtendedError();
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2UpdateRuntimeStatus : Enum {
    public int value__;
    public static CoreWebView2UpdateRuntimeStatus LatestVersionInstalled;
    public static CoreWebView2UpdateRuntimeStatus UpdateAlreadyRunning;
    public static CoreWebView2UpdateRuntimeStatus BlockedByPolicy;
    public static CoreWebView2UpdateRuntimeStatus Failed;
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2WebErrorStatus : Enum {
    public int value__;
    public static CoreWebView2WebErrorStatus Unknown;
    public static CoreWebView2WebErrorStatus CertificateCommonNameIsIncorrect;
    public static CoreWebView2WebErrorStatus CertificateExpired;
    public static CoreWebView2WebErrorStatus ClientCertificateContainsErrors;
    public static CoreWebView2WebErrorStatus CertificateRevoked;
    public static CoreWebView2WebErrorStatus CertificateIsInvalid;
    public static CoreWebView2WebErrorStatus ServerUnreachable;
    public static CoreWebView2WebErrorStatus Timeout;
    public static CoreWebView2WebErrorStatus ErrorHttpInvalidServerResponse;
    public static CoreWebView2WebErrorStatus ConnectionAborted;
    public static CoreWebView2WebErrorStatus ConnectionReset;
    public static CoreWebView2WebErrorStatus Disconnected;
    public static CoreWebView2WebErrorStatus CannotConnect;
    public static CoreWebView2WebErrorStatus HostNameNotResolved;
    public static CoreWebView2WebErrorStatus OperationCanceled;
    public static CoreWebView2WebErrorStatus RedirectFailed;
    public static CoreWebView2WebErrorStatus UnexpectedError;
    public static CoreWebView2WebErrorStatus ValidAuthenticationCredentialsRequired;
    public static CoreWebView2WebErrorStatus ValidProxyAuthenticationRequired;
}
public class Microsoft.Web.WebView2.Core.CoreWebView2WebMessageReceivedEventArgs : EventArgs {
    private long _memoryUsage;
    internal ICoreWebView2WebMessageReceivedEventArgs _nativeICoreWebView2WebMessageReceivedEventArgsValue;
    internal ICoreWebView2WebMessageReceivedEventArgs2 _nativeICoreWebView2WebMessageReceivedEventArgs2Value;
    internal ICoreWebView2ExperimentalWebMessageReceivedEventArgs _nativeICoreWebView2ExperimentalWebMessageReceivedEventArgsValue;
    internal object _rawNative;
    internal ICoreWebView2WebMessageReceivedEventArgs _nativeICoreWebView2WebMessageReceivedEventArgs { get; internal set; }
    internal ICoreWebView2WebMessageReceivedEventArgs2 _nativeICoreWebView2WebMessageReceivedEventArgs2 { get; internal set; }
    internal ICoreWebView2ExperimentalWebMessageReceivedEventArgs _nativeICoreWebView2ExperimentalWebMessageReceivedEventArgs { get; internal set; }
    public string Source { get; }
    public string WebMessageAsJson { get; }
    public IReadOnlyList`1<object> AdditionalObjects { get; }
    internal CoreWebView2WebMessageReceivedEventArgs(object rawCoreWebView2WebMessageReceivedEventArgs);
    protected virtual override void Finalize();
    private void Initialize();
    internal ICoreWebView2WebMessageReceivedEventArgs get__nativeICoreWebView2WebMessageReceivedEventArgs();
    internal void set__nativeICoreWebView2WebMessageReceivedEventArgs(ICoreWebView2WebMessageReceivedEventArgs value);
    internal ICoreWebView2WebMessageReceivedEventArgs2 get__nativeICoreWebView2WebMessageReceivedEventArgs2();
    internal void set__nativeICoreWebView2WebMessageReceivedEventArgs2(ICoreWebView2WebMessageReceivedEventArgs2 value);
    internal ICoreWebView2ExperimentalWebMessageReceivedEventArgs get__nativeICoreWebView2ExperimentalWebMessageReceivedEventArgs();
    internal void set__nativeICoreWebView2ExperimentalWebMessageReceivedEventArgs(ICoreWebView2ExperimentalWebMessageReceivedEventArgs value);
    public string get_Source();
    public string get_WebMessageAsJson();
    public string TryGetWebMessageAsString();
    public IReadOnlyList`1<object> get_AdditionalObjects();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2WebMessageReceivedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2WebMessageReceivedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2 source, ICoreWebView2WebMessageReceivedEventArgs args);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2WebObjectCollectionView : object {
    private List`1<object> _collection;
    private UInt32 Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ObjectCollectionView.Count { get; }
    internal CoreWebView2WebObjectCollectionView(List`1<object> collection);
    private sealed virtual override UInt32 Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ObjectCollectionView.get_Count();
    private sealed virtual override object Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ObjectCollectionView.GetValueAtIndex(UInt32 index);
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2WebResourceContext : Enum {
    public int value__;
    public static CoreWebView2WebResourceContext All;
    public static CoreWebView2WebResourceContext Document;
    public static CoreWebView2WebResourceContext Stylesheet;
    public static CoreWebView2WebResourceContext Image;
    public static CoreWebView2WebResourceContext Media;
    public static CoreWebView2WebResourceContext Font;
    public static CoreWebView2WebResourceContext Script;
    public static CoreWebView2WebResourceContext XmlHttpRequest;
    public static CoreWebView2WebResourceContext Fetch;
    public static CoreWebView2WebResourceContext TextTrack;
    public static CoreWebView2WebResourceContext EventSource;
    public static CoreWebView2WebResourceContext Websocket;
    public static CoreWebView2WebResourceContext Manifest;
    public static CoreWebView2WebResourceContext SignedExchange;
    public static CoreWebView2WebResourceContext Ping;
    public static CoreWebView2WebResourceContext CspViolationReport;
    public static CoreWebView2WebResourceContext Other;
}
public class Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequest : object {
    internal ICoreWebView2WebResourceRequest _nativeICoreWebView2WebResourceRequestValue;
    internal object _rawNative;
    internal ICoreWebView2WebResourceRequest _nativeICoreWebView2WebResourceRequest { get; internal set; }
    public string Uri { get; public set; }
    public string Method { get; public set; }
    public Stream Content { get; public set; }
    public CoreWebView2HttpRequestHeaders Headers { get; }
    internal CoreWebView2WebResourceRequest(object rawCoreWebView2WebResourceRequest);
    internal ICoreWebView2WebResourceRequest get__nativeICoreWebView2WebResourceRequest();
    internal void set__nativeICoreWebView2WebResourceRequest(ICoreWebView2WebResourceRequest value);
    public string get_Uri();
    public void set_Uri(string value);
    public string get_Method();
    public void set_Method(string value);
    public Stream get_Content();
    public void set_Content(Stream value);
    public CoreWebView2HttpRequestHeaders get_Headers();
}
public class Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequestedEventArgs : EventArgs {
    internal ICoreWebView2WebResourceRequestedEventArgs _nativeICoreWebView2WebResourceRequestedEventArgsValue;
    internal ICoreWebView2WebResourceRequestedEventArgs2 _nativeICoreWebView2WebResourceRequestedEventArgs2Value;
    internal ICoreWebView2ExperimentalWebResourceRequestedEventArgs _nativeICoreWebView2ExperimentalWebResourceRequestedEventArgsValue;
    internal object _rawNative;
    internal ICoreWebView2WebResourceRequestedEventArgs _nativeICoreWebView2WebResourceRequestedEventArgs { get; internal set; }
    internal ICoreWebView2WebResourceRequestedEventArgs2 _nativeICoreWebView2WebResourceRequestedEventArgs2 { get; internal set; }
    internal ICoreWebView2ExperimentalWebResourceRequestedEventArgs _nativeICoreWebView2ExperimentalWebResourceRequestedEventArgs { get; internal set; }
    public CoreWebView2WebResourceRequest Request { get; }
    public CoreWebView2WebResourceResponse Response { get; public set; }
    public CoreWebView2WebResourceContext ResourceContext { get; }
    public CoreWebView2WebResourceRequestSourceKinds RequestedSourceKind { get; }
    internal CoreWebView2WebResourceRequestedEventArgs(object rawCoreWebView2WebResourceRequestedEventArgs);
    internal ICoreWebView2WebResourceRequestedEventArgs get__nativeICoreWebView2WebResourceRequestedEventArgs();
    internal void set__nativeICoreWebView2WebResourceRequestedEventArgs(ICoreWebView2WebResourceRequestedEventArgs value);
    internal ICoreWebView2WebResourceRequestedEventArgs2 get__nativeICoreWebView2WebResourceRequestedEventArgs2();
    internal void set__nativeICoreWebView2WebResourceRequestedEventArgs2(ICoreWebView2WebResourceRequestedEventArgs2 value);
    internal ICoreWebView2ExperimentalWebResourceRequestedEventArgs get__nativeICoreWebView2ExperimentalWebResourceRequestedEventArgs();
    internal void set__nativeICoreWebView2ExperimentalWebResourceRequestedEventArgs(ICoreWebView2ExperimentalWebResourceRequestedEventArgs value);
    public CoreWebView2WebResourceRequest get_Request();
    public CoreWebView2WebResourceResponse get_Response();
    public void set_Response(CoreWebView2WebResourceResponse value);
    public CoreWebView2WebResourceContext get_ResourceContext();
    public CoreWebView2Deferral GetDeferral();
    public CoreWebView2WebResourceRequestSourceKinds get_RequestedSourceKind();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequestedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2WebResourceRequestedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2 source, ICoreWebView2WebResourceRequestedEventArgs args);
}
[FlagsAttribute]
public enum Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequestSourceKinds : Enum {
    public int value__;
    public static CoreWebView2WebResourceRequestSourceKinds None;
    public static CoreWebView2WebResourceRequestSourceKinds Document;
    public static CoreWebView2WebResourceRequestSourceKinds SharedWorker;
    public static CoreWebView2WebResourceRequestSourceKinds ServiceWorker;
    public static CoreWebView2WebResourceRequestSourceKinds All;
}
public class Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponse : object {
    internal ICoreWebView2WebResourceResponse _nativeICoreWebView2WebResourceResponseValue;
    internal object _rawNative;
    internal ICoreWebView2WebResourceResponse _nativeICoreWebView2WebResourceResponse { get; internal set; }
    public Stream Content { get; public set; }
    public CoreWebView2HttpResponseHeaders Headers { get; }
    public int StatusCode { get; public set; }
    public string ReasonPhrase { get; public set; }
    internal CoreWebView2WebResourceResponse(object rawCoreWebView2WebResourceResponse);
    internal ICoreWebView2WebResourceResponse get__nativeICoreWebView2WebResourceResponse();
    internal void set__nativeICoreWebView2WebResourceResponse(ICoreWebView2WebResourceResponse value);
    public Stream get_Content();
    public void set_Content(Stream value);
    public CoreWebView2HttpResponseHeaders get_Headers();
    public int get_StatusCode();
    public void set_StatusCode(int value);
    public string get_ReasonPhrase();
    public void set_ReasonPhrase(string value);
}
public class Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponseReceivedEventArgs : EventArgs {
    internal ICoreWebView2WebResourceResponseReceivedEventArgs _nativeICoreWebView2WebResourceResponseReceivedEventArgsValue;
    internal object _rawNative;
    internal ICoreWebView2WebResourceResponseReceivedEventArgs _nativeICoreWebView2WebResourceResponseReceivedEventArgs { get; internal set; }
    public CoreWebView2WebResourceRequest Request { get; }
    public CoreWebView2WebResourceResponseView Response { get; }
    internal CoreWebView2WebResourceResponseReceivedEventArgs(object rawCoreWebView2WebResourceResponseReceivedEventArgs);
    internal ICoreWebView2WebResourceResponseReceivedEventArgs get__nativeICoreWebView2WebResourceResponseReceivedEventArgs();
    internal void set__nativeICoreWebView2WebResourceResponseReceivedEventArgs(ICoreWebView2WebResourceResponseReceivedEventArgs value);
    public CoreWebView2WebResourceRequest get_Request();
    public CoreWebView2WebResourceResponseView get_Response();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponseReceivedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2WebResourceResponseReceivedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2 source, ICoreWebView2WebResourceResponseReceivedEventArgs args);
}
public class Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponseView : object {
    internal ICoreWebView2WebResourceResponseView _nativeICoreWebView2WebResourceResponseViewValue;
    internal object _rawNative;
    internal ICoreWebView2WebResourceResponseView _nativeICoreWebView2WebResourceResponseView { get; internal set; }
    public CoreWebView2HttpResponseHeaders Headers { get; }
    public int StatusCode { get; }
    public string ReasonPhrase { get; }
    internal CoreWebView2WebResourceResponseView(object rawCoreWebView2WebResourceResponseView);
    internal ICoreWebView2WebResourceResponseView get__nativeICoreWebView2WebResourceResponseView();
    internal void set__nativeICoreWebView2WebResourceResponseView(ICoreWebView2WebResourceResponseView value);
    public CoreWebView2HttpResponseHeaders get_Headers();
    public int get_StatusCode();
    public string get_ReasonPhrase();
    [AsyncStateMachineAttribute("Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponseView/<GetContentAsync>d__13")]
public Task`1<Stream> GetContentAsync();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponseViewGetContentCompletedHandler : object {
    [CompilerGeneratedAttribute]
private Stream <result>k__BackingField;
    [CompilerGeneratedAttribute]
private int <errCode>k__BackingField;
    private Action continuation;
    [CompilerGeneratedAttribute]
private bool <IsCompleted>k__BackingField;
    public Stream result { get; private set; }
    public int errCode { get; private set; }
    public bool IsCompleted { get; private set; }
    [CompilerGeneratedAttribute]
public Stream get_result();
    [CompilerGeneratedAttribute]
private void set_result(Stream value);
    [CompilerGeneratedAttribute]
public int get_errCode();
    [CompilerGeneratedAttribute]
private void set_errCode(int value);
    public sealed virtual void Invoke(int errCode, IStream result);
    public CoreWebView2WebResourceResponseViewGetContentCompletedHandler GetAwaiter();
    [CompilerGeneratedAttribute]
public bool get_IsCompleted();
    [CompilerGeneratedAttribute]
private void set_IsCompleted(bool value);
    public sealed virtual void OnCompleted(Action continuation);
    public Stream GetResult();
}
public class Microsoft.Web.WebView2.Core.CoreWebView2WebTexture : object {
    internal ICoreWebView2ExperimentalWebTexture _nativeICoreWebView2ExperimentalWebTextureValue;
    internal object _rawNative;
    internal ICoreWebView2ExperimentalWebTexture _nativeICoreWebView2ExperimentalWebTexture { get; internal set; }
    public IntPtr Handle { get; }
    public object Resource { get; }
    public ulong Timestamp { get; }
    internal CoreWebView2WebTexture(object rawCoreWebView2WebTexture);
    internal ICoreWebView2ExperimentalWebTexture get__nativeICoreWebView2ExperimentalWebTexture();
    internal void set__nativeICoreWebView2ExperimentalWebTexture(ICoreWebView2ExperimentalWebTexture value);
    public IntPtr get_Handle();
    public object get_Resource();
    public ulong get_Timestamp();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2WindowCloseRequestedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2WindowCloseRequestedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2 source, object args);
}
public class Microsoft.Web.WebView2.Core.CoreWebView2WindowFeatures : object {
    internal ICoreWebView2WindowFeatures _nativeICoreWebView2WindowFeaturesValue;
    internal object _rawNative;
    internal ICoreWebView2WindowFeatures _nativeICoreWebView2WindowFeatures { get; internal set; }
    public bool HasPosition { get; }
    public bool HasSize { get; }
    public UInt32 Left { get; }
    public UInt32 Top { get; }
    public UInt32 Height { get; }
    public UInt32 Width { get; }
    public bool ShouldDisplayMenuBar { get; }
    public bool ShouldDisplayStatus { get; }
    public bool ShouldDisplayToolbar { get; }
    public bool ShouldDisplayScrollBars { get; }
    internal CoreWebView2WindowFeatures(object rawCoreWebView2WindowFeatures);
    internal ICoreWebView2WindowFeatures get__nativeICoreWebView2WindowFeatures();
    internal void set__nativeICoreWebView2WindowFeatures(ICoreWebView2WindowFeatures value);
    public bool get_HasPosition();
    public bool get_HasSize();
    public UInt32 get_Left();
    public UInt32 get_Top();
    public UInt32 get_Height();
    public UInt32 get_Width();
    public bool get_ShouldDisplayMenuBar();
    public bool get_ShouldDisplayStatus();
    public bool get_ShouldDisplayToolbar();
    public bool get_ShouldDisplayScrollBars();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2ZoomFactorChangedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2ZoomFactorChangedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2Controller source, object args);
}
internal class Microsoft.Web.WebView2.Core.DelegateMap : object {
    private Dictionary`2<string, HashSet`1<int>> _RegisteredHandlerIdsMap;
    private Dictionary`2<int, tuple> _HandlerMap;
    public Delegate GetDelegate(int handlerId);
    public bool InsertDelegate(string eventName, int handlerId, Delegate handler);
    public Delegate RemoveDelegate(string eventName, int handlerId);
    public List`1<string> GetRegisteredEventNameById(int handlerId);
}
public enum Microsoft.Web.WebView2.Core.Dispatchcontainerscriptbehavior : Enum {
    public int value__;
    public static Dispatchcontainerscriptbehavior One;
    public static Dispatchcontainerscriptbehavior Ector;
    public static Dispatchcontainerscriptbehavior Ap;
}
internal class Microsoft.Web.WebView2.Core.EventConnector : object {
    private DelegateMap _DelegatesMap;
    private object _originalHostObject;
    public EventConnector(object originalHostObject);
    public void addEventListener(string eventName, object JSHandler);
    public void removeEventListener(string eventName, object JSHandler);
    private void RemoteObjectPassivated(object sender, object args);
    private EventInfo CheckAndGetEventInfo(string eventName);
}
[ClassInterfaceAttribute("2")]
[ComVisibleAttribute("True")]
public class Microsoft.Web.WebView2.Core.HostObjectHelper : object {
    private CoreWebView2PrivateHostObjectHelper _helper;
    public bool IsMethod(object obj, string name);
}
[InterfaceTypeAttribute("1")]
[GuidAttribute("00020400-0000-0000-C000-000000000046")]
internal interface Microsoft.Web.WebView2.Core.IDispatch {
    public abstract virtual int GetTypeInfoCount(Int32& Count);
    public abstract virtual int GetTypeInfo(int iTInfo, int lcid, ITypeInfo& typeInfo);
    public abstract virtual int GetIDsOfNames(Guid& riid, String[] rgsNames, int cNames, int lcid, Int32[] rgDispId);
    public abstract virtual int Invoke(int dispIdMember, Guid& riid, UInt32 lcid, ushort wFlags, DISPPARAMS& pDispParams, Object& pVarResult, EXCEPINFO& pExcepInfo, UInt32& pArgErr);
}
internal class Microsoft.Web.WebView2.Core.JSHandlerWrapper : object {
    private object _JSHandler;
    public JSHandlerWrapper(object JSHandler);
    internal static void VariantClear(IntPtr variant);
    public void Invoke(Object[] args);
    public Delegate CreateDelegate(EventInfo eventInfo);
}
internal class Microsoft.Web.WebView2.Core.ManagedIStream : object {
    private Stream _ioStream;
    private static int STGTY_STREAM;
    private static int STGM_READ;
    private static int STGM_WRITE;
    private static int STGM_READWRITE;
    private static int STREAM_SEEK_SET;
    private static int STREAM_SEEK_CUR;
    private static int STREAM_SEEK_END;
    private static int STATFLAG_DEFAULT;
    private static int STATFLAG_NONAME;
    private static int STATFLAG_NOOPEN;
    internal ManagedIStream(Stream ioStream);
    [SecurityCriticalAttribute]
private sealed virtual override void System.Runtime.InteropServices.ComTypes.IStream.Read(Byte[] buffer, int bufferSize, IntPtr bytesReadPtr);
    [SecurityCriticalAttribute]
private sealed virtual override void System.Runtime.InteropServices.ComTypes.IStream.Seek(long offset, int origin, IntPtr newPositionPtr);
    private sealed virtual override void System.Runtime.InteropServices.ComTypes.IStream.SetSize(long libNewSize);
    private sealed virtual override void System.Runtime.InteropServices.ComTypes.IStream.Stat(STATSTG& streamStats, int grfStatFlag);
    [SecurityCriticalAttribute]
private sealed virtual override void System.Runtime.InteropServices.ComTypes.IStream.Write(Byte[] buffer, int bufferSize, IntPtr bytesWrittenPtr);
    private sealed virtual override void System.Runtime.InteropServices.ComTypes.IStream.Clone(IStream& streamCopy);
    private sealed virtual override void System.Runtime.InteropServices.ComTypes.IStream.CopyTo(IStream targetStream, long bufferSize, IntPtr buffer, IntPtr bytesWrittenPtr);
    private sealed virtual override void System.Runtime.InteropServices.ComTypes.IStream.Commit(int flags);
    private sealed virtual override void System.Runtime.InteropServices.ComTypes.IStream.LockRegion(long offset, long byteCount, int lockType);
    private sealed virtual override void System.Runtime.InteropServices.ComTypes.IStream.Revert();
    private sealed virtual override void System.Runtime.InteropServices.ComTypes.IStream.UnlockRegion(long offset, long byteCount, int lockType);
}
internal static class Microsoft.Web.WebView2.Core.Raw.BrowserInfo : object {
    public static string PRODUCT_VERSION;
    private static BrowserInfo();
}
[ClassInterfaceAttribute("1")]
[ComVisibleAttribute("True")]
public class Microsoft.Web.WebView2.Core.Raw.BuiltInHostObject : object {
    private object _originalHostObject;
    private EventConnector _eventConnector;
    private EventConnector EventConnector { get; }
    public BuiltInHostObject(object originalHostObject);
    public void addEventListener(string eventName, object JSHandler);
    public void removeEventListener(string eventName, object JSHandler);
    private EventConnector get_EventConnector();
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_BOUNDS_MODE")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_BOUNDS_MODE : Enum {
    public int value__;
    public static COREWEBVIEW2_BOUNDS_MODE COREWEBVIEW2_BOUNDS_MODE_USE_RAW_PIXELS;
    public static COREWEBVIEW2_BOUNDS_MODE COREWEBVIEW2_BOUNDS_MODE_USE_RASTERIZATION_SCALE;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_BROWSER_PROCESS_EXIT_KIND")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_BROWSER_PROCESS_EXIT_KIND : Enum {
    public int value__;
    public static COREWEBVIEW2_BROWSER_PROCESS_EXIT_KIND COREWEBVIEW2_BROWSER_PROCESS_EXIT_KIND_NORMAL;
    public static COREWEBVIEW2_BROWSER_PROCESS_EXIT_KIND COREWEBVIEW2_BROWSER_PROCESS_EXIT_KIND_FAILED;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_BROWSING_DATA_KINDS")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_BROWSING_DATA_KINDS : Enum {
    public int value__;
    public static COREWEBVIEW2_BROWSING_DATA_KINDS COREWEBVIEW2_BROWSING_DATA_KINDS_FILE_SYSTEMS;
    public static COREWEBVIEW2_BROWSING_DATA_KINDS COREWEBVIEW2_BROWSING_DATA_KINDS_INDEXED_DB;
    public static COREWEBVIEW2_BROWSING_DATA_KINDS COREWEBVIEW2_BROWSING_DATA_KINDS_LOCAL_STORAGE;
    public static COREWEBVIEW2_BROWSING_DATA_KINDS COREWEBVIEW2_BROWSING_DATA_KINDS_WEB_SQL;
    public static COREWEBVIEW2_BROWSING_DATA_KINDS COREWEBVIEW2_BROWSING_DATA_KINDS_CACHE_STORAGE;
    public static COREWEBVIEW2_BROWSING_DATA_KINDS COREWEBVIEW2_BROWSING_DATA_KINDS_ALL_DOM_STORAGE;
    public static COREWEBVIEW2_BROWSING_DATA_KINDS COREWEBVIEW2_BROWSING_DATA_KINDS_COOKIES;
    public static COREWEBVIEW2_BROWSING_DATA_KINDS COREWEBVIEW2_BROWSING_DATA_KINDS_ALL_SITE;
    public static COREWEBVIEW2_BROWSING_DATA_KINDS COREWEBVIEW2_BROWSING_DATA_KINDS_DISK_CACHE;
    public static COREWEBVIEW2_BROWSING_DATA_KINDS COREWEBVIEW2_BROWSING_DATA_KINDS_DOWNLOAD_HISTORY;
    public static COREWEBVIEW2_BROWSING_DATA_KINDS COREWEBVIEW2_BROWSING_DATA_KINDS_GENERAL_AUTOFILL;
    public static COREWEBVIEW2_BROWSING_DATA_KINDS COREWEBVIEW2_BROWSING_DATA_KINDS_PASSWORD_AUTOSAVE;
    public static COREWEBVIEW2_BROWSING_DATA_KINDS COREWEBVIEW2_BROWSING_DATA_KINDS_BROWSING_HISTORY;
    public static COREWEBVIEW2_BROWSING_DATA_KINDS COREWEBVIEW2_BROWSING_DATA_KINDS_SETTINGS;
    public static COREWEBVIEW2_BROWSING_DATA_KINDS COREWEBVIEW2_BROWSING_DATA_KINDS_ALL_PROFILE;
    public static COREWEBVIEW2_BROWSING_DATA_KINDS COREWEBVIEW2_BROWSING_DATA_KINDS_SERVICE_WORKERS;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_CAPTURE_PREVIEW_IMAGE_FORMAT")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_CAPTURE_PREVIEW_IMAGE_FORMAT : Enum {
    public int value__;
    public static COREWEBVIEW2_CAPTURE_PREVIEW_IMAGE_FORMAT COREWEBVIEW2_CAPTURE_PREVIEW_IMAGE_FORMAT_PNG;
    public static COREWEBVIEW2_CAPTURE_PREVIEW_IMAGE_FORMAT COREWEBVIEW2_CAPTURE_PREVIEW_IMAGE_FORMAT_JPEG;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_CHANNEL_SEARCH_KIND")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_CHANNEL_SEARCH_KIND : Enum {
    public int value__;
    public static COREWEBVIEW2_CHANNEL_SEARCH_KIND COREWEBVIEW2_CHANNEL_SEARCH_KIND_MOST_STABLE;
    public static COREWEBVIEW2_CHANNEL_SEARCH_KIND COREWEBVIEW2_CHANNEL_SEARCH_KIND_LEAST_STABLE;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_CLIENT_CERTIFICATE_KIND")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_CLIENT_CERTIFICATE_KIND : Enum {
    public int value__;
    public static COREWEBVIEW2_CLIENT_CERTIFICATE_KIND COREWEBVIEW2_CLIENT_CERTIFICATE_KIND_SMART_CARD;
    public static COREWEBVIEW2_CLIENT_CERTIFICATE_KIND COREWEBVIEW2_CLIENT_CERTIFICATE_KIND_PIN;
    public static COREWEBVIEW2_CLIENT_CERTIFICATE_KIND COREWEBVIEW2_CLIENT_CERTIFICATE_KIND_OTHER;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_COLOR")]
public class Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_COLOR : ValueType {
    public byte A;
    public byte R;
    public byte G;
    public byte B;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND : Enum {
    public int value__;
    public static COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND_COMMAND;
    public static COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND_CHECK_BOX;
    public static COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND_RADIO;
    public static COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND_SEPARATOR;
    public static COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND_SUBMENU;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND : Enum {
    public int value__;
    public static COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND_PAGE;
    public static COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND_IMAGE;
    public static COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND_SELECTED_TEXT;
    public static COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND_AUDIO;
    public static COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND_VIDEO;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_COOKIE_SAME_SITE_KIND")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_COOKIE_SAME_SITE_KIND : Enum {
    public int value__;
    public static COREWEBVIEW2_COOKIE_SAME_SITE_KIND COREWEBVIEW2_COOKIE_SAME_SITE_KIND_NONE;
    public static COREWEBVIEW2_COOKIE_SAME_SITE_KIND COREWEBVIEW2_COOKIE_SAME_SITE_KIND_LAX;
    public static COREWEBVIEW2_COOKIE_SAME_SITE_KIND COREWEBVIEW2_COOKIE_SAME_SITE_KIND_STRICT;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT : Enum {
    public int value__;
    public static COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT_TOP_LEFT;
    public static COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT_TOP_RIGHT;
    public static COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT_BOTTOM_LEFT;
    public static COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT_BOTTOM_RIGHT;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON : Enum {
    public int value__;
    public static COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_NONE;
    public static COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_FAILED;
    public static COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_ACCESS_DENIED;
    public static COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_NO_SPACE;
    public static COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_NAME_TOO_LONG;
    public static COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_TOO_LARGE;
    public static COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_MALICIOUS;
    public static COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_TRANSIENT_ERROR;
    public static COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_BLOCKED_BY_POLICY;
    public static COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_SECURITY_CHECK_FAILED;
    public static COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_TOO_SHORT;
    public static COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_HASH_MISMATCH;
    public static COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_NETWORK_FAILED;
    public static COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_NETWORK_TIMEOUT;
    public static COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_NETWORK_DISCONNECTED;
    public static COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_NETWORK_SERVER_DOWN;
    public static COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_NETWORK_INVALID_REQUEST;
    public static COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_SERVER_FAILED;
    public static COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_SERVER_NO_RANGE;
    public static COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_SERVER_BAD_CONTENT;
    public static COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_SERVER_UNAUTHORIZED;
    public static COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_SERVER_CERTIFICATE_PROBLEM;
    public static COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_SERVER_FORBIDDEN;
    public static COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_SERVER_UNEXPECTED_RESPONSE;
    public static COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_SERVER_CONTENT_LENGTH_MISMATCH;
    public static COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_SERVER_CROSS_ORIGIN_REDIRECT;
    public static COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_USER_CANCELED;
    public static COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_USER_SHUTDOWN;
    public static COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_USER_PAUSED;
    public static COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_DOWNLOAD_PROCESS_CRASHED;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_DOWNLOAD_STATE")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_DOWNLOAD_STATE : Enum {
    public int value__;
    public static COREWEBVIEW2_DOWNLOAD_STATE COREWEBVIEW2_DOWNLOAD_STATE_IN_PROGRESS;
    public static COREWEBVIEW2_DOWNLOAD_STATE COREWEBVIEW2_DOWNLOAD_STATE_INTERRUPTED;
    public static COREWEBVIEW2_DOWNLOAD_STATE COREWEBVIEW2_DOWNLOAD_STATE_COMPLETED;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_FAVICON_IMAGE_FORMAT")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_FAVICON_IMAGE_FORMAT : Enum {
    public int value__;
    public static COREWEBVIEW2_FAVICON_IMAGE_FORMAT COREWEBVIEW2_FAVICON_IMAGE_FORMAT_PNG;
    public static COREWEBVIEW2_FAVICON_IMAGE_FORMAT COREWEBVIEW2_FAVICON_IMAGE_FORMAT_JPEG;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_FILE_SYSTEM_HANDLE_KIND")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_FILE_SYSTEM_HANDLE_KIND : Enum {
    public int value__;
    public static COREWEBVIEW2_FILE_SYSTEM_HANDLE_KIND COREWEBVIEW2_FILE_SYSTEM_HANDLE_KIND_FILE;
    public static COREWEBVIEW2_FILE_SYSTEM_HANDLE_KIND COREWEBVIEW2_FILE_SYSTEM_HANDLE_KIND_DIRECTORY;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_FILE_SYSTEM_HANDLE_PERMISSION")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_FILE_SYSTEM_HANDLE_PERMISSION : Enum {
    public int value__;
    public static COREWEBVIEW2_FILE_SYSTEM_HANDLE_PERMISSION COREWEBVIEW2_FILE_SYSTEM_HANDLE_PERMISSION_READ_ONLY;
    public static COREWEBVIEW2_FILE_SYSTEM_HANDLE_PERMISSION COREWEBVIEW2_FILE_SYSTEM_HANDLE_PERMISSION_READ_WRITE;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_FRAME_KIND")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_FRAME_KIND : Enum {
    public int value__;
    public static COREWEBVIEW2_FRAME_KIND COREWEBVIEW2_FRAME_KIND_UNKNOWN;
    public static COREWEBVIEW2_FRAME_KIND COREWEBVIEW2_FRAME_KIND_MAIN_FRAME;
    public static COREWEBVIEW2_FRAME_KIND COREWEBVIEW2_FRAME_KIND_IFRAME;
    public static COREWEBVIEW2_FRAME_KIND COREWEBVIEW2_FRAME_KIND_EMBED;
    public static COREWEBVIEW2_FRAME_KIND COREWEBVIEW2_FRAME_KIND_OBJECT;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_HOST_RESOURCE_ACCESS_KIND")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_HOST_RESOURCE_ACCESS_KIND : Enum {
    public int value__;
    public static COREWEBVIEW2_HOST_RESOURCE_ACCESS_KIND COREWEBVIEW2_HOST_RESOURCE_ACCESS_KIND_DENY;
    public static COREWEBVIEW2_HOST_RESOURCE_ACCESS_KIND COREWEBVIEW2_HOST_RESOURCE_ACCESS_KIND_ALLOW;
    public static COREWEBVIEW2_HOST_RESOURCE_ACCESS_KIND COREWEBVIEW2_HOST_RESOURCE_ACCESS_KIND_DENY_CORS;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_KEY_EVENT_KIND")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_KEY_EVENT_KIND : Enum {
    public int value__;
    public static COREWEBVIEW2_KEY_EVENT_KIND COREWEBVIEW2_KEY_EVENT_KIND_KEY_DOWN;
    public static COREWEBVIEW2_KEY_EVENT_KIND COREWEBVIEW2_KEY_EVENT_KIND_KEY_UP;
    public static COREWEBVIEW2_KEY_EVENT_KIND COREWEBVIEW2_KEY_EVENT_KIND_SYSTEM_KEY_DOWN;
    public static COREWEBVIEW2_KEY_EVENT_KIND COREWEBVIEW2_KEY_EVENT_KIND_SYSTEM_KEY_UP;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_MATRIX_4X4")]
public class Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_MATRIX_4X4 : ValueType {
    public float _11;
    public float _12;
    public float _13;
    public float _14;
    public float _21;
    public float _22;
    public float _23;
    public float _24;
    public float _31;
    public float _32;
    public float _33;
    public float _34;
    public float _41;
    public float _42;
    public float _43;
    public float _44;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_MEMORY_USAGE_TARGET_LEVEL")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_MEMORY_USAGE_TARGET_LEVEL : Enum {
    public int value__;
    public static COREWEBVIEW2_MEMORY_USAGE_TARGET_LEVEL COREWEBVIEW2_MEMORY_USAGE_TARGET_LEVEL_NORMAL;
    public static COREWEBVIEW2_MEMORY_USAGE_TARGET_LEVEL COREWEBVIEW2_MEMORY_USAGE_TARGET_LEVEL_LOW;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_MOUSE_EVENT_KIND")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_MOUSE_EVENT_KIND : Enum {
    public int value__;
    public static COREWEBVIEW2_MOUSE_EVENT_KIND COREWEBVIEW2_MOUSE_EVENT_KIND_HORIZONTAL_WHEEL;
    public static COREWEBVIEW2_MOUSE_EVENT_KIND COREWEBVIEW2_MOUSE_EVENT_KIND_LEFT_BUTTON_DOUBLE_CLICK;
    public static COREWEBVIEW2_MOUSE_EVENT_KIND COREWEBVIEW2_MOUSE_EVENT_KIND_LEFT_BUTTON_DOWN;
    public static COREWEBVIEW2_MOUSE_EVENT_KIND COREWEBVIEW2_MOUSE_EVENT_KIND_LEFT_BUTTON_UP;
    public static COREWEBVIEW2_MOUSE_EVENT_KIND COREWEBVIEW2_MOUSE_EVENT_KIND_LEAVE;
    public static COREWEBVIEW2_MOUSE_EVENT_KIND COREWEBVIEW2_MOUSE_EVENT_KIND_MIDDLE_BUTTON_DOUBLE_CLICK;
    public static COREWEBVIEW2_MOUSE_EVENT_KIND COREWEBVIEW2_MOUSE_EVENT_KIND_MIDDLE_BUTTON_DOWN;
    public static COREWEBVIEW2_MOUSE_EVENT_KIND COREWEBVIEW2_MOUSE_EVENT_KIND_MIDDLE_BUTTON_UP;
    public static COREWEBVIEW2_MOUSE_EVENT_KIND COREWEBVIEW2_MOUSE_EVENT_KIND_MOVE;
    public static COREWEBVIEW2_MOUSE_EVENT_KIND COREWEBVIEW2_MOUSE_EVENT_KIND_RIGHT_BUTTON_DOUBLE_CLICK;
    public static COREWEBVIEW2_MOUSE_EVENT_KIND COREWEBVIEW2_MOUSE_EVENT_KIND_RIGHT_BUTTON_DOWN;
    public static COREWEBVIEW2_MOUSE_EVENT_KIND COREWEBVIEW2_MOUSE_EVENT_KIND_RIGHT_BUTTON_UP;
    public static COREWEBVIEW2_MOUSE_EVENT_KIND COREWEBVIEW2_MOUSE_EVENT_KIND_WHEEL;
    public static COREWEBVIEW2_MOUSE_EVENT_KIND COREWEBVIEW2_MOUSE_EVENT_KIND_X_BUTTON_DOUBLE_CLICK;
    public static COREWEBVIEW2_MOUSE_EVENT_KIND COREWEBVIEW2_MOUSE_EVENT_KIND_X_BUTTON_DOWN;
    public static COREWEBVIEW2_MOUSE_EVENT_KIND COREWEBVIEW2_MOUSE_EVENT_KIND_X_BUTTON_UP;
    public static COREWEBVIEW2_MOUSE_EVENT_KIND COREWEBVIEW2_MOUSE_EVENT_KIND_NON_CLIENT_RIGHT_BUTTON_DOWN;
    public static COREWEBVIEW2_MOUSE_EVENT_KIND COREWEBVIEW2_MOUSE_EVENT_KIND_NON_CLIENT_RIGHT_BUTTON_UP;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS : Enum {
    public int value__;
    public static COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS_NONE;
    public static COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS_LEFT_BUTTON;
    public static COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS_RIGHT_BUTTON;
    public static COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS_SHIFT;
    public static COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS_CONTROL;
    public static COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS_MIDDLE_BUTTON;
    public static COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS_X_BUTTON1;
    public static COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS_X_BUTTON2;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_MOVE_FOCUS_REASON")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_MOVE_FOCUS_REASON : Enum {
    public int value__;
    public static COREWEBVIEW2_MOVE_FOCUS_REASON COREWEBVIEW2_MOVE_FOCUS_REASON_PROGRAMMATIC;
    public static COREWEBVIEW2_MOVE_FOCUS_REASON COREWEBVIEW2_MOVE_FOCUS_REASON_NEXT;
    public static COREWEBVIEW2_MOVE_FOCUS_REASON COREWEBVIEW2_MOVE_FOCUS_REASON_PREVIOUS;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_NAVIGATION_KIND")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_NAVIGATION_KIND : Enum {
    public int value__;
    public static COREWEBVIEW2_NAVIGATION_KIND COREWEBVIEW2_NAVIGATION_KIND_RELOAD;
    public static COREWEBVIEW2_NAVIGATION_KIND COREWEBVIEW2_NAVIGATION_KIND_BACK_OR_FORWARD;
    public static COREWEBVIEW2_NAVIGATION_KIND COREWEBVIEW2_NAVIGATION_KIND_NEW_DOCUMENT;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_NON_CLIENT_REGION_KIND")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_NON_CLIENT_REGION_KIND : Enum {
    public int value__;
    public static COREWEBVIEW2_NON_CLIENT_REGION_KIND COREWEBVIEW2_NON_CLIENT_REGION_KIND_NOWHERE;
    public static COREWEBVIEW2_NON_CLIENT_REGION_KIND COREWEBVIEW2_NON_CLIENT_REGION_KIND_CLIENT;
    public static COREWEBVIEW2_NON_CLIENT_REGION_KIND COREWEBVIEW2_NON_CLIENT_REGION_KIND_CAPTION;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_PDF_TOOLBAR_ITEMS")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_PDF_TOOLBAR_ITEMS : Enum {
    public int value__;
    public static COREWEBVIEW2_PDF_TOOLBAR_ITEMS COREWEBVIEW2_PDF_TOOLBAR_ITEMS_NONE;
    public static COREWEBVIEW2_PDF_TOOLBAR_ITEMS COREWEBVIEW2_PDF_TOOLBAR_ITEMS_SAVE;
    public static COREWEBVIEW2_PDF_TOOLBAR_ITEMS COREWEBVIEW2_PDF_TOOLBAR_ITEMS_PRINT;
    public static COREWEBVIEW2_PDF_TOOLBAR_ITEMS COREWEBVIEW2_PDF_TOOLBAR_ITEMS_SAVE_AS;
    public static COREWEBVIEW2_PDF_TOOLBAR_ITEMS COREWEBVIEW2_PDF_TOOLBAR_ITEMS_ZOOM_IN;
    public static COREWEBVIEW2_PDF_TOOLBAR_ITEMS COREWEBVIEW2_PDF_TOOLBAR_ITEMS_ZOOM_OUT;
    public static COREWEBVIEW2_PDF_TOOLBAR_ITEMS COREWEBVIEW2_PDF_TOOLBAR_ITEMS_ROTATE;
    public static COREWEBVIEW2_PDF_TOOLBAR_ITEMS COREWEBVIEW2_PDF_TOOLBAR_ITEMS_FIT_PAGE;
    public static COREWEBVIEW2_PDF_TOOLBAR_ITEMS COREWEBVIEW2_PDF_TOOLBAR_ITEMS_PAGE_LAYOUT;
    public static COREWEBVIEW2_PDF_TOOLBAR_ITEMS COREWEBVIEW2_PDF_TOOLBAR_ITEMS_BOOKMARKS;
    public static COREWEBVIEW2_PDF_TOOLBAR_ITEMS COREWEBVIEW2_PDF_TOOLBAR_ITEMS_PAGE_SELECTOR;
    public static COREWEBVIEW2_PDF_TOOLBAR_ITEMS COREWEBVIEW2_PDF_TOOLBAR_ITEMS_SEARCH;
    public static COREWEBVIEW2_PDF_TOOLBAR_ITEMS COREWEBVIEW2_PDF_TOOLBAR_ITEMS_FULL_SCREEN;
    public static COREWEBVIEW2_PDF_TOOLBAR_ITEMS COREWEBVIEW2_PDF_TOOLBAR_ITEMS_MORE_SETTINGS;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_PERMISSION_KIND")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_PERMISSION_KIND : Enum {
    public int value__;
    public static COREWEBVIEW2_PERMISSION_KIND COREWEBVIEW2_PERMISSION_KIND_UNKNOWN_PERMISSION;
    public static COREWEBVIEW2_PERMISSION_KIND COREWEBVIEW2_PERMISSION_KIND_MICROPHONE;
    public static COREWEBVIEW2_PERMISSION_KIND COREWEBVIEW2_PERMISSION_KIND_CAMERA;
    public static COREWEBVIEW2_PERMISSION_KIND COREWEBVIEW2_PERMISSION_KIND_GEOLOCATION;
    public static COREWEBVIEW2_PERMISSION_KIND COREWEBVIEW2_PERMISSION_KIND_NOTIFICATIONS;
    public static COREWEBVIEW2_PERMISSION_KIND COREWEBVIEW2_PERMISSION_KIND_OTHER_SENSORS;
    public static COREWEBVIEW2_PERMISSION_KIND COREWEBVIEW2_PERMISSION_KIND_CLIPBOARD_READ;
    public static COREWEBVIEW2_PERMISSION_KIND COREWEBVIEW2_PERMISSION_KIND_MULTIPLE_AUTOMATIC_DOWNLOADS;
    public static COREWEBVIEW2_PERMISSION_KIND COREWEBVIEW2_PERMISSION_KIND_FILE_READ_WRITE;
    public static COREWEBVIEW2_PERMISSION_KIND COREWEBVIEW2_PERMISSION_KIND_AUTOPLAY;
    public static COREWEBVIEW2_PERMISSION_KIND COREWEBVIEW2_PERMISSION_KIND_LOCAL_FONTS;
    public static COREWEBVIEW2_PERMISSION_KIND COREWEBVIEW2_PERMISSION_KIND_MIDI_SYSTEM_EXCLUSIVE_MESSAGES;
    public static COREWEBVIEW2_PERMISSION_KIND COREWEBVIEW2_PERMISSION_KIND_WINDOW_MANAGEMENT;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_PERMISSION_STATE")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_PERMISSION_STATE : Enum {
    public int value__;
    public static COREWEBVIEW2_PERMISSION_STATE COREWEBVIEW2_PERMISSION_STATE_DEFAULT;
    public static COREWEBVIEW2_PERMISSION_STATE COREWEBVIEW2_PERMISSION_STATE_ALLOW;
    public static COREWEBVIEW2_PERMISSION_STATE COREWEBVIEW2_PERMISSION_STATE_DENY;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_PHYSICAL_KEY_STATUS")]
public class Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_PHYSICAL_KEY_STATUS : ValueType {
    public UInt32 RepeatCount;
    public UInt32 ScanCode;
    public int IsExtendedKey;
    public int IsMenuKeyDown;
    public int WasKeyDown;
    public int IsKeyReleased;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_POINTER_EVENT_KIND")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_POINTER_EVENT_KIND : Enum {
    public int value__;
    public static COREWEBVIEW2_POINTER_EVENT_KIND COREWEBVIEW2_POINTER_EVENT_KIND_ACTIVATE;
    public static COREWEBVIEW2_POINTER_EVENT_KIND COREWEBVIEW2_POINTER_EVENT_KIND_DOWN;
    public static COREWEBVIEW2_POINTER_EVENT_KIND COREWEBVIEW2_POINTER_EVENT_KIND_ENTER;
    public static COREWEBVIEW2_POINTER_EVENT_KIND COREWEBVIEW2_POINTER_EVENT_KIND_LEAVE;
    public static COREWEBVIEW2_POINTER_EVENT_KIND COREWEBVIEW2_POINTER_EVENT_KIND_UP;
    public static COREWEBVIEW2_POINTER_EVENT_KIND COREWEBVIEW2_POINTER_EVENT_KIND_UPDATE;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_PREFERRED_COLOR_SCHEME")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_PREFERRED_COLOR_SCHEME : Enum {
    public int value__;
    public static COREWEBVIEW2_PREFERRED_COLOR_SCHEME COREWEBVIEW2_PREFERRED_COLOR_SCHEME_AUTO;
    public static COREWEBVIEW2_PREFERRED_COLOR_SCHEME COREWEBVIEW2_PREFERRED_COLOR_SCHEME_LIGHT;
    public static COREWEBVIEW2_PREFERRED_COLOR_SCHEME COREWEBVIEW2_PREFERRED_COLOR_SCHEME_DARK;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_PRINT_COLLATION")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_PRINT_COLLATION : Enum {
    public int value__;
    public static COREWEBVIEW2_PRINT_COLLATION COREWEBVIEW2_PRINT_COLLATION_DEFAULT;
    public static COREWEBVIEW2_PRINT_COLLATION COREWEBVIEW2_PRINT_COLLATION_COLLATED;
    public static COREWEBVIEW2_PRINT_COLLATION COREWEBVIEW2_PRINT_COLLATION_UNCOLLATED;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_PRINT_COLOR_MODE")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_PRINT_COLOR_MODE : Enum {
    public int value__;
    public static COREWEBVIEW2_PRINT_COLOR_MODE COREWEBVIEW2_PRINT_COLOR_MODE_DEFAULT;
    public static COREWEBVIEW2_PRINT_COLOR_MODE COREWEBVIEW2_PRINT_COLOR_MODE_COLOR;
    public static COREWEBVIEW2_PRINT_COLOR_MODE COREWEBVIEW2_PRINT_COLOR_MODE_GRAYSCALE;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_PRINT_DIALOG_KIND")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_PRINT_DIALOG_KIND : Enum {
    public int value__;
    public static COREWEBVIEW2_PRINT_DIALOG_KIND COREWEBVIEW2_PRINT_DIALOG_KIND_BROWSER;
    public static COREWEBVIEW2_PRINT_DIALOG_KIND COREWEBVIEW2_PRINT_DIALOG_KIND_SYSTEM;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_PRINT_DUPLEX")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_PRINT_DUPLEX : Enum {
    public int value__;
    public static COREWEBVIEW2_PRINT_DUPLEX COREWEBVIEW2_PRINT_DUPLEX_DEFAULT;
    public static COREWEBVIEW2_PRINT_DUPLEX COREWEBVIEW2_PRINT_DUPLEX_ONE_SIDED;
    public static COREWEBVIEW2_PRINT_DUPLEX COREWEBVIEW2_PRINT_DUPLEX_TWO_SIDED_LONG_EDGE;
    public static COREWEBVIEW2_PRINT_DUPLEX COREWEBVIEW2_PRINT_DUPLEX_TWO_SIDED_SHORT_EDGE;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_PRINT_MEDIA_SIZE")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_PRINT_MEDIA_SIZE : Enum {
    public int value__;
    public static COREWEBVIEW2_PRINT_MEDIA_SIZE COREWEBVIEW2_PRINT_MEDIA_SIZE_DEFAULT;
    public static COREWEBVIEW2_PRINT_MEDIA_SIZE COREWEBVIEW2_PRINT_MEDIA_SIZE_CUSTOM;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_PRINT_ORIENTATION")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_PRINT_ORIENTATION : Enum {
    public int value__;
    public static COREWEBVIEW2_PRINT_ORIENTATION COREWEBVIEW2_PRINT_ORIENTATION_PORTRAIT;
    public static COREWEBVIEW2_PRINT_ORIENTATION COREWEBVIEW2_PRINT_ORIENTATION_LANDSCAPE;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_PRINT_STATUS")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_PRINT_STATUS : Enum {
    public int value__;
    public static COREWEBVIEW2_PRINT_STATUS COREWEBVIEW2_PRINT_STATUS_SUCCEEDED;
    public static COREWEBVIEW2_PRINT_STATUS COREWEBVIEW2_PRINT_STATUS_PRINTER_UNAVAILABLE;
    public static COREWEBVIEW2_PRINT_STATUS COREWEBVIEW2_PRINT_STATUS_OTHER_ERROR;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_PROCESS_FAILED_KIND")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_PROCESS_FAILED_KIND : Enum {
    public int value__;
    public static COREWEBVIEW2_PROCESS_FAILED_KIND COREWEBVIEW2_PROCESS_FAILED_KIND_BROWSER_PROCESS_EXITED;
    public static COREWEBVIEW2_PROCESS_FAILED_KIND COREWEBVIEW2_PROCESS_FAILED_KIND_RENDER_PROCESS_EXITED;
    public static COREWEBVIEW2_PROCESS_FAILED_KIND COREWEBVIEW2_PROCESS_FAILED_KIND_RENDER_PROCESS_UNRESPONSIVE;
    public static COREWEBVIEW2_PROCESS_FAILED_KIND COREWEBVIEW2_PROCESS_FAILED_KIND_FRAME_RENDER_PROCESS_EXITED;
    public static COREWEBVIEW2_PROCESS_FAILED_KIND COREWEBVIEW2_PROCESS_FAILED_KIND_UTILITY_PROCESS_EXITED;
    public static COREWEBVIEW2_PROCESS_FAILED_KIND COREWEBVIEW2_PROCESS_FAILED_KIND_SANDBOX_HELPER_PROCESS_EXITED;
    public static COREWEBVIEW2_PROCESS_FAILED_KIND COREWEBVIEW2_PROCESS_FAILED_KIND_GPU_PROCESS_EXITED;
    public static COREWEBVIEW2_PROCESS_FAILED_KIND COREWEBVIEW2_PROCESS_FAILED_KIND_PPAPI_PLUGIN_PROCESS_EXITED;
    public static COREWEBVIEW2_PROCESS_FAILED_KIND COREWEBVIEW2_PROCESS_FAILED_KIND_PPAPI_BROKER_PROCESS_EXITED;
    public static COREWEBVIEW2_PROCESS_FAILED_KIND COREWEBVIEW2_PROCESS_FAILED_KIND_UNKNOWN_PROCESS_EXITED;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_PROCESS_FAILED_REASON")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_PROCESS_FAILED_REASON : Enum {
    public int value__;
    public static COREWEBVIEW2_PROCESS_FAILED_REASON COREWEBVIEW2_PROCESS_FAILED_REASON_UNEXPECTED;
    public static COREWEBVIEW2_PROCESS_FAILED_REASON COREWEBVIEW2_PROCESS_FAILED_REASON_UNRESPONSIVE;
    public static COREWEBVIEW2_PROCESS_FAILED_REASON COREWEBVIEW2_PROCESS_FAILED_REASON_TERMINATED;
    public static COREWEBVIEW2_PROCESS_FAILED_REASON COREWEBVIEW2_PROCESS_FAILED_REASON_CRASHED;
    public static COREWEBVIEW2_PROCESS_FAILED_REASON COREWEBVIEW2_PROCESS_FAILED_REASON_LAUNCH_FAILED;
    public static COREWEBVIEW2_PROCESS_FAILED_REASON COREWEBVIEW2_PROCESS_FAILED_REASON_OUT_OF_MEMORY;
    public static COREWEBVIEW2_PROCESS_FAILED_REASON COREWEBVIEW2_PROCESS_FAILED_REASON_PROFILE_DELETED;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_PROCESS_KIND")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_PROCESS_KIND : Enum {
    public int value__;
    public static COREWEBVIEW2_PROCESS_KIND COREWEBVIEW2_PROCESS_KIND_BROWSER;
    public static COREWEBVIEW2_PROCESS_KIND COREWEBVIEW2_PROCESS_KIND_RENDERER;
    public static COREWEBVIEW2_PROCESS_KIND COREWEBVIEW2_PROCESS_KIND_UTILITY;
    public static COREWEBVIEW2_PROCESS_KIND COREWEBVIEW2_PROCESS_KIND_SANDBOX_HELPER;
    public static COREWEBVIEW2_PROCESS_KIND COREWEBVIEW2_PROCESS_KIND_GPU;
    public static COREWEBVIEW2_PROCESS_KIND COREWEBVIEW2_PROCESS_KIND_PPAPI_PLUGIN;
    public static COREWEBVIEW2_PROCESS_KIND COREWEBVIEW2_PROCESS_KIND_PPAPI_BROKER;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_RELEASE_CHANNELS")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_RELEASE_CHANNELS : Enum {
    public int value__;
    public static COREWEBVIEW2_RELEASE_CHANNELS COREWEBVIEW2_RELEASE_CHANNELS_NONE;
    public static COREWEBVIEW2_RELEASE_CHANNELS COREWEBVIEW2_RELEASE_CHANNELS_STABLE;
    public static COREWEBVIEW2_RELEASE_CHANNELS COREWEBVIEW2_RELEASE_CHANNELS_BETA;
    public static COREWEBVIEW2_RELEASE_CHANNELS COREWEBVIEW2_RELEASE_CHANNELS_DEV;
    public static COREWEBVIEW2_RELEASE_CHANNELS COREWEBVIEW2_RELEASE_CHANNELS_CANARY;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_SAVE_AS_KIND")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_SAVE_AS_KIND : Enum {
    public int value__;
    public static COREWEBVIEW2_SAVE_AS_KIND COREWEBVIEW2_SAVE_AS_KIND_DEFAULT;
    public static COREWEBVIEW2_SAVE_AS_KIND COREWEBVIEW2_SAVE_AS_KIND_HTML_ONLY;
    public static COREWEBVIEW2_SAVE_AS_KIND COREWEBVIEW2_SAVE_AS_KIND_SINGLE_FILE;
    public static COREWEBVIEW2_SAVE_AS_KIND COREWEBVIEW2_SAVE_AS_KIND_COMPLETE;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_SAVE_AS_UI_RESULT")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_SAVE_AS_UI_RESULT : Enum {
    public int value__;
    public static COREWEBVIEW2_SAVE_AS_UI_RESULT COREWEBVIEW2_SAVE_AS_UI_RESULT_SUCCESS;
    public static COREWEBVIEW2_SAVE_AS_UI_RESULT COREWEBVIEW2_SAVE_AS_UI_RESULT_INVALID_PATH;
    public static COREWEBVIEW2_SAVE_AS_UI_RESULT COREWEBVIEW2_SAVE_AS_UI_RESULT_FILE_ALREADY_EXISTS;
    public static COREWEBVIEW2_SAVE_AS_UI_RESULT COREWEBVIEW2_SAVE_AS_UI_RESULT_KIND_NOT_SUPPORTED;
    public static COREWEBVIEW2_SAVE_AS_UI_RESULT COREWEBVIEW2_SAVE_AS_UI_RESULT_CANCELLED;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_SCRIPT_DIALOG_KIND")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_SCRIPT_DIALOG_KIND : Enum {
    public int value__;
    public static COREWEBVIEW2_SCRIPT_DIALOG_KIND COREWEBVIEW2_SCRIPT_DIALOG_KIND_ALERT;
    public static COREWEBVIEW2_SCRIPT_DIALOG_KIND COREWEBVIEW2_SCRIPT_DIALOG_KIND_CONFIRM;
    public static COREWEBVIEW2_SCRIPT_DIALOG_KIND COREWEBVIEW2_SCRIPT_DIALOG_KIND_PROMPT;
    public static COREWEBVIEW2_SCRIPT_DIALOG_KIND COREWEBVIEW2_SCRIPT_DIALOG_KIND_BEFOREUNLOAD;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_SCROLLBAR_STYLE")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_SCROLLBAR_STYLE : Enum {
    public int value__;
    public static COREWEBVIEW2_SCROLLBAR_STYLE COREWEBVIEW2_SCROLLBAR_STYLE_DEFAULT;
    public static COREWEBVIEW2_SCROLLBAR_STYLE COREWEBVIEW2_SCROLLBAR_STYLE_FLUENT_OVERLAY;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_SERVER_CERTIFICATE_ERROR_ACTION")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_SERVER_CERTIFICATE_ERROR_ACTION : Enum {
    public int value__;
    public static COREWEBVIEW2_SERVER_CERTIFICATE_ERROR_ACTION COREWEBVIEW2_SERVER_CERTIFICATE_ERROR_ACTION_ALWAYS_ALLOW;
    public static COREWEBVIEW2_SERVER_CERTIFICATE_ERROR_ACTION COREWEBVIEW2_SERVER_CERTIFICATE_ERROR_ACTION_CANCEL;
    public static COREWEBVIEW2_SERVER_CERTIFICATE_ERROR_ACTION COREWEBVIEW2_SERVER_CERTIFICATE_ERROR_ACTION_DEFAULT;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_SHARED_BUFFER_ACCESS")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_SHARED_BUFFER_ACCESS : Enum {
    public int value__;
    public static COREWEBVIEW2_SHARED_BUFFER_ACCESS COREWEBVIEW2_SHARED_BUFFER_ACCESS_READ_ONLY;
    public static COREWEBVIEW2_SHARED_BUFFER_ACCESS COREWEBVIEW2_SHARED_BUFFER_ACCESS_READ_WRITE;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_TEXT_DIRECTION_KIND")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_TEXT_DIRECTION_KIND : Enum {
    public int value__;
    public static COREWEBVIEW2_TEXT_DIRECTION_KIND COREWEBVIEW2_TEXT_DIRECTION_KIND_DEFAULT;
    public static COREWEBVIEW2_TEXT_DIRECTION_KIND COREWEBVIEW2_TEXT_DIRECTION_KIND_LEFT_TO_RIGHT;
    public static COREWEBVIEW2_TEXT_DIRECTION_KIND COREWEBVIEW2_TEXT_DIRECTION_KIND_RIGHT_TO_LEFT;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_TEXTURE_STREAM_ERROR_KIND")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_TEXTURE_STREAM_ERROR_KIND : Enum {
    public int value__;
    public static COREWEBVIEW2_TEXTURE_STREAM_ERROR_KIND COREWEBVIEW2_TEXTURE_STREAM_ERROR_KIND_NO_VIDEO_TRACK_STARTED;
    public static COREWEBVIEW2_TEXTURE_STREAM_ERROR_KIND COREWEBVIEW2_TEXTURE_STREAM_ERROR_KIND_TEXTURE_ERROR;
    public static COREWEBVIEW2_TEXTURE_STREAM_ERROR_KIND COREWEBVIEW2_TEXTURE_STREAM_ERROR_KIND_TEXTURE_IN_USE;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_TRACKING_PREVENTION_LEVEL")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_TRACKING_PREVENTION_LEVEL : Enum {
    public int value__;
    public static COREWEBVIEW2_TRACKING_PREVENTION_LEVEL COREWEBVIEW2_TRACKING_PREVENTION_LEVEL_NONE;
    public static COREWEBVIEW2_TRACKING_PREVENTION_LEVEL COREWEBVIEW2_TRACKING_PREVENTION_LEVEL_BASIC;
    public static COREWEBVIEW2_TRACKING_PREVENTION_LEVEL COREWEBVIEW2_TRACKING_PREVENTION_LEVEL_BALANCED;
    public static COREWEBVIEW2_TRACKING_PREVENTION_LEVEL COREWEBVIEW2_TRACKING_PREVENTION_LEVEL_STRICT;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_UPDATE_RUNTIME_STATUS")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_UPDATE_RUNTIME_STATUS : Enum {
    public int value__;
    public static COREWEBVIEW2_UPDATE_RUNTIME_STATUS COREWEBVIEW2_UPDATE_RUNTIME_STATUS_LATEST_VERSION_INSTALLED;
    public static COREWEBVIEW2_UPDATE_RUNTIME_STATUS COREWEBVIEW2_UPDATE_RUNTIME_STATUS_UPDATE_ALREADY_RUNNING;
    public static COREWEBVIEW2_UPDATE_RUNTIME_STATUS COREWEBVIEW2_UPDATE_RUNTIME_STATUS_BLOCKED_BY_POLICY;
    public static COREWEBVIEW2_UPDATE_RUNTIME_STATUS COREWEBVIEW2_UPDATE_RUNTIME_STATUS_FAILED;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_WEB_ERROR_STATUS")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_WEB_ERROR_STATUS : Enum {
    public int value__;
    public static COREWEBVIEW2_WEB_ERROR_STATUS COREWEBVIEW2_WEB_ERROR_STATUS_UNKNOWN;
    public static COREWEBVIEW2_WEB_ERROR_STATUS COREWEBVIEW2_WEB_ERROR_STATUS_CERTIFICATE_COMMON_NAME_IS_INCORRECT;
    public static COREWEBVIEW2_WEB_ERROR_STATUS COREWEBVIEW2_WEB_ERROR_STATUS_CERTIFICATE_EXPIRED;
    public static COREWEBVIEW2_WEB_ERROR_STATUS COREWEBVIEW2_WEB_ERROR_STATUS_CLIENT_CERTIFICATE_CONTAINS_ERRORS;
    public static COREWEBVIEW2_WEB_ERROR_STATUS COREWEBVIEW2_WEB_ERROR_STATUS_CERTIFICATE_REVOKED;
    public static COREWEBVIEW2_WEB_ERROR_STATUS COREWEBVIEW2_WEB_ERROR_STATUS_CERTIFICATE_IS_INVALID;
    public static COREWEBVIEW2_WEB_ERROR_STATUS COREWEBVIEW2_WEB_ERROR_STATUS_SERVER_UNREACHABLE;
    public static COREWEBVIEW2_WEB_ERROR_STATUS COREWEBVIEW2_WEB_ERROR_STATUS_TIMEOUT;
    public static COREWEBVIEW2_WEB_ERROR_STATUS COREWEBVIEW2_WEB_ERROR_STATUS_ERROR_HTTP_INVALID_SERVER_RESPONSE;
    public static COREWEBVIEW2_WEB_ERROR_STATUS COREWEBVIEW2_WEB_ERROR_STATUS_CONNECTION_ABORTED;
    public static COREWEBVIEW2_WEB_ERROR_STATUS COREWEBVIEW2_WEB_ERROR_STATUS_CONNECTION_RESET;
    public static COREWEBVIEW2_WEB_ERROR_STATUS COREWEBVIEW2_WEB_ERROR_STATUS_DISCONNECTED;
    public static COREWEBVIEW2_WEB_ERROR_STATUS COREWEBVIEW2_WEB_ERROR_STATUS_CANNOT_CONNECT;
    public static COREWEBVIEW2_WEB_ERROR_STATUS COREWEBVIEW2_WEB_ERROR_STATUS_HOST_NAME_NOT_RESOLVED;
    public static COREWEBVIEW2_WEB_ERROR_STATUS COREWEBVIEW2_WEB_ERROR_STATUS_OPERATION_CANCELED;
    public static COREWEBVIEW2_WEB_ERROR_STATUS COREWEBVIEW2_WEB_ERROR_STATUS_REDIRECT_FAILED;
    public static COREWEBVIEW2_WEB_ERROR_STATUS COREWEBVIEW2_WEB_ERROR_STATUS_UNEXPECTED_ERROR;
    public static COREWEBVIEW2_WEB_ERROR_STATUS COREWEBVIEW2_WEB_ERROR_STATUS_VALID_AUTHENTICATION_CREDENTIALS_REQUIRED;
    public static COREWEBVIEW2_WEB_ERROR_STATUS COREWEBVIEW2_WEB_ERROR_STATUS_VALID_PROXY_AUTHENTICATION_REQUIRED;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_WEB_RESOURCE_CONTEXT")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_WEB_RESOURCE_CONTEXT : Enum {
    public int value__;
    public static COREWEBVIEW2_WEB_RESOURCE_CONTEXT COREWEBVIEW2_WEB_RESOURCE_CONTEXT_ALL;
    public static COREWEBVIEW2_WEB_RESOURCE_CONTEXT COREWEBVIEW2_WEB_RESOURCE_CONTEXT_DOCUMENT;
    public static COREWEBVIEW2_WEB_RESOURCE_CONTEXT COREWEBVIEW2_WEB_RESOURCE_CONTEXT_STYLESHEET;
    public static COREWEBVIEW2_WEB_RESOURCE_CONTEXT COREWEBVIEW2_WEB_RESOURCE_CONTEXT_IMAGE;
    public static COREWEBVIEW2_WEB_RESOURCE_CONTEXT COREWEBVIEW2_WEB_RESOURCE_CONTEXT_MEDIA;
    public static COREWEBVIEW2_WEB_RESOURCE_CONTEXT COREWEBVIEW2_WEB_RESOURCE_CONTEXT_FONT;
    public static COREWEBVIEW2_WEB_RESOURCE_CONTEXT COREWEBVIEW2_WEB_RESOURCE_CONTEXT_SCRIPT;
    public static COREWEBVIEW2_WEB_RESOURCE_CONTEXT COREWEBVIEW2_WEB_RESOURCE_CONTEXT_XML_HTTP_REQUEST;
    public static COREWEBVIEW2_WEB_RESOURCE_CONTEXT COREWEBVIEW2_WEB_RESOURCE_CONTEXT_FETCH;
    public static COREWEBVIEW2_WEB_RESOURCE_CONTEXT COREWEBVIEW2_WEB_RESOURCE_CONTEXT_TEXT_TRACK;
    public static COREWEBVIEW2_WEB_RESOURCE_CONTEXT COREWEBVIEW2_WEB_RESOURCE_CONTEXT_EVENT_SOURCE;
    public static COREWEBVIEW2_WEB_RESOURCE_CONTEXT COREWEBVIEW2_WEB_RESOURCE_CONTEXT_WEBSOCKET;
    public static COREWEBVIEW2_WEB_RESOURCE_CONTEXT COREWEBVIEW2_WEB_RESOURCE_CONTEXT_MANIFEST;
    public static COREWEBVIEW2_WEB_RESOURCE_CONTEXT COREWEBVIEW2_WEB_RESOURCE_CONTEXT_SIGNED_EXCHANGE;
    public static COREWEBVIEW2_WEB_RESOURCE_CONTEXT COREWEBVIEW2_WEB_RESOURCE_CONTEXT_PING;
    public static COREWEBVIEW2_WEB_RESOURCE_CONTEXT COREWEBVIEW2_WEB_RESOURCE_CONTEXT_CSP_VIOLATION_REPORT;
    public static COREWEBVIEW2_WEB_RESOURCE_CONTEXT COREWEBVIEW2_WEB_RESOURCE_CONTEXT_OTHER;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_WEB_RESOURCE_REQUEST_SOURCE_KINDS")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_WEB_RESOURCE_REQUEST_SOURCE_KINDS : Enum {
    public int value__;
    public static COREWEBVIEW2_WEB_RESOURCE_REQUEST_SOURCE_KINDS COREWEBVIEW2_WEB_RESOURCE_REQUEST_SOURCE_KINDS_NONE;
    public static COREWEBVIEW2_WEB_RESOURCE_REQUEST_SOURCE_KINDS COREWEBVIEW2_WEB_RESOURCE_REQUEST_SOURCE_KINDS_DOCUMENT;
    public static COREWEBVIEW2_WEB_RESOURCE_REQUEST_SOURCE_KINDS COREWEBVIEW2_WEB_RESOURCE_REQUEST_SOURCE_KINDS_SHARED_WORKER;
    public static COREWEBVIEW2_WEB_RESOURCE_REQUEST_SOURCE_KINDS COREWEBVIEW2_WEB_RESOURCE_REQUEST_SOURCE_KINDS_SERVICE_WORKER;
    public static COREWEBVIEW2_WEB_RESOURCE_REQUEST_SOURCE_KINDS COREWEBVIEW2_WEB_RESOURCE_REQUEST_SOURCE_KINDS_ALL;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.EventRegistrationToken")]
public class Microsoft.Web.WebView2.Core.Raw.EventRegistrationToken : ValueType {
    public long value;
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("76ECEACB-0462-4D94-AC83-423A6793775E")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2 {
    [DispIdAttribute("1610678272")]
public ICoreWebView2Settings Settings { get; }
    [DispIdAttribute("1610678273")]
public string Source { get; }
    [DispIdAttribute("1610678306")]
public UInt32 BrowserProcessId { get; }
    [DispIdAttribute("1610678307")]
public int CanGoBack { get; }
    [DispIdAttribute("1610678308")]
public int CanGoForward { get; }
    [DispIdAttribute("1610678317")]
public string DocumentTitle { get; }
    [DispIdAttribute("1610678323")]
public int ContainsFullScreenElement { get; }
    public abstract virtual ICoreWebView2Settings get_Settings();
    public abstract virtual string get_Source();
    public abstract virtual void Navigate(string uri);
    public abstract virtual void NavigateToString(string htmlContent);
    public abstract virtual void add_NavigationStarting(ICoreWebView2NavigationStartingEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_NavigationStarting(EventRegistrationToken token);
    public abstract virtual void add_ContentLoading(ICoreWebView2ContentLoadingEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_ContentLoading(EventRegistrationToken token);
    public abstract virtual void add_SourceChanged(ICoreWebView2SourceChangedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_SourceChanged(EventRegistrationToken token);
    public abstract virtual void add_HistoryChanged(ICoreWebView2HistoryChangedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_HistoryChanged(EventRegistrationToken token);
    public abstract virtual void add_NavigationCompleted(ICoreWebView2NavigationCompletedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_NavigationCompleted(EventRegistrationToken token);
    public abstract virtual void add_FrameNavigationStarting(ICoreWebView2NavigationStartingEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_FrameNavigationStarting(EventRegistrationToken token);
    public abstract virtual void add_FrameNavigationCompleted(ICoreWebView2NavigationCompletedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_FrameNavigationCompleted(EventRegistrationToken token);
    public abstract virtual void add_ScriptDialogOpening(ICoreWebView2ScriptDialogOpeningEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_ScriptDialogOpening(EventRegistrationToken token);
    public abstract virtual void add_PermissionRequested(ICoreWebView2PermissionRequestedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_PermissionRequested(EventRegistrationToken token);
    public abstract virtual void add_ProcessFailed(ICoreWebView2ProcessFailedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_ProcessFailed(EventRegistrationToken token);
    public abstract virtual void AddScriptToExecuteOnDocumentCreated(string javaScript, ICoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandler handler);
    public abstract virtual void RemoveScriptToExecuteOnDocumentCreated(string id);
    public abstract virtual void ExecuteScript(string javaScript, ICoreWebView2ExecuteScriptCompletedHandler handler);
    public abstract virtual void CapturePreview(COREWEBVIEW2_CAPTURE_PREVIEW_IMAGE_FORMAT imageFormat, IStream imageStream, ICoreWebView2CapturePreviewCompletedHandler handler);
    public abstract virtual void Reload();
    public abstract virtual void PostWebMessageAsJson(string webMessageAsJson);
    public abstract virtual void PostWebMessageAsString(string webMessageAsString);
    public abstract virtual void add_WebMessageReceived(ICoreWebView2WebMessageReceivedEventHandler handler, EventRegistrationToken& token);
    public abstract virtual void remove_WebMessageReceived(EventRegistrationToken token);
    public abstract virtual void CallDevToolsProtocolMethod(string methodName, string parametersAsJson, ICoreWebView2CallDevToolsProtocolMethodCompletedHandler handler);
    public abstract virtual UInt32 get_BrowserProcessId();
    public abstract virtual int get_CanGoBack();
    public abstract virtual int get_CanGoForward();
    public abstract virtual void GoBack();
    public abstract virtual void GoForward();
    public abstract virtual ICoreWebView2DevToolsProtocolEventReceiver GetDevToolsProtocolEventReceiver(string eventName);
    public abstract virtual void Stop();
    public abstract virtual void add_NewWindowRequested(ICoreWebView2NewWindowRequestedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_NewWindowRequested(EventRegistrationToken token);
    public abstract virtual void add_DocumentTitleChanged(ICoreWebView2DocumentTitleChangedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_DocumentTitleChanged(EventRegistrationToken token);
    public abstract virtual string get_DocumentTitle();
    public abstract virtual void AddHostObjectToScript(string name, Object& object);
    public abstract virtual void RemoveHostObjectFromScript(string name);
    public abstract virtual void OpenDevToolsWindow();
    public abstract virtual void add_ContainsFullScreenElementChanged(ICoreWebView2ContainsFullScreenElementChangedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_ContainsFullScreenElementChanged(EventRegistrationToken token);
    public abstract virtual int get_ContainsFullScreenElement();
    public abstract virtual void add_WebResourceRequested(ICoreWebView2WebResourceRequestedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_WebResourceRequested(EventRegistrationToken token);
    public abstract virtual void AddWebResourceRequestedFilter(string uri, COREWEBVIEW2_WEB_RESOURCE_CONTEXT ResourceContext);
    public abstract virtual void RemoveWebResourceRequestedFilter(string uri, COREWEBVIEW2_WEB_RESOURCE_CONTEXT ResourceContext);
    public abstract virtual void add_WindowCloseRequested(ICoreWebView2WindowCloseRequestedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_WindowCloseRequested(EventRegistrationToken token);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("B1690564-6F5A-4983-8E48-31D1143FECDB")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2_10 {
    public void _VtblGap1_94();
    public abstract virtual void add_BasicAuthenticationRequested(ICoreWebView2BasicAuthenticationRequestedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_BasicAuthenticationRequested(EventRegistrationToken token);
}
[CompilerGeneratedAttribute]
[GuidAttribute("0BE78E56-C193-4051-B943-23B460C08BDB")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2_11 {
    public void _VtblGap1_96();
    public abstract virtual void CallDevToolsProtocolMethodForSession(string sessionId, string methodName, string parametersAsJson, ICoreWebView2CallDevToolsProtocolMethodCompletedHandler handler);
    public abstract virtual void add_ContextMenuRequested(ICoreWebView2ContextMenuRequestedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_ContextMenuRequested(EventRegistrationToken token);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("35D69927-BCFA-4566-9349-6B3E0D154CAC")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2_12 {
    [DispIdAttribute("1611399170")]
public string StatusBarText { get; }
    public void _VtblGap1_99();
    public abstract virtual void add_StatusBarTextChanged(ICoreWebView2StatusBarTextChangedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_StatusBarTextChanged(EventRegistrationToken token);
    public abstract virtual string get_StatusBarText();
}
[CompilerGeneratedAttribute]
[GuidAttribute("F75F09A8-667E-4983-88D6-C8773F315E84")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2_13 {
    [DispIdAttribute("1611464704")]
public ICoreWebView2Profile Profile { get; }
    public void _VtblGap1_102();
    public abstract virtual ICoreWebView2Profile get_Profile();
}
[CompilerGeneratedAttribute]
[GuidAttribute("6DAA4F10-4A90-4753-8898-77C5DF534165")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2_14 {
    public void _VtblGap1_103();
    public abstract virtual void add_ServerCertificateErrorDetected(ICoreWebView2ServerCertificateErrorDetectedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_ServerCertificateErrorDetected(EventRegistrationToken token);
    public abstract virtual void ClearServerCertificateErrorActions(ICoreWebView2ClearServerCertificateErrorActionsCompletedHandler handler);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("517B2D1D-7DAE-4A66-A4F4-10352FFB9518")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2_15 {
    [DispIdAttribute("1611595778")]
public string FaviconUri { get; }
    public void _VtblGap1_106();
    public abstract virtual void add_FaviconChanged(ICoreWebView2FaviconChangedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_FaviconChanged(EventRegistrationToken token);
    public abstract virtual string get_FaviconUri();
    public abstract virtual void GetFavicon(COREWEBVIEW2_FAVICON_IMAGE_FORMAT format, ICoreWebView2GetFaviconCompletedHandler completedHandler);
}
[CompilerGeneratedAttribute]
[GuidAttribute("0EB34DC9-9F91-41E1-8639-95CD5943906B")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2_16 {
    public void _VtblGap1_110();
    public abstract virtual void Print(ICoreWebView2PrintSettings printSettings, ICoreWebView2PrintCompletedHandler handler);
    public abstract virtual void ShowPrintUI(COREWEBVIEW2_PRINT_DIALOG_KIND printDialogKind);
    public abstract virtual void PrintToPdfStream(ICoreWebView2PrintSettings printSettings, ICoreWebView2PrintToPdfStreamCompletedHandler handler);
}
[CompilerGeneratedAttribute]
[GuidAttribute("702E75D4-FD44-434D-9D70-1A68A6B1192A")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2_17 {
    public void _VtblGap1_113();
    public abstract virtual void PostSharedBufferToScript(ICoreWebView2SharedBuffer sharedBuffer, COREWEBVIEW2_SHARED_BUFFER_ACCESS access, string additionalDataAsJson);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("7A626017-28BE-49B2-B865-3BA2B3522D90")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2_18 {
    public void _VtblGap1_114();
    public abstract virtual void add_LaunchingExternalUriScheme(ICoreWebView2LaunchingExternalUriSchemeEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_LaunchingExternalUriScheme(EventRegistrationToken token);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("6921F954-79B0-437F-A997-C85811897C68")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2_19 {
    [DispIdAttribute("1611857920")]
public COREWEBVIEW2_MEMORY_USAGE_TARGET_LEVEL MemoryUsageTargetLevel { get; public set; }
    public void _VtblGap1_116();
    public abstract virtual COREWEBVIEW2_MEMORY_USAGE_TARGET_LEVEL get_MemoryUsageTargetLevel();
    public abstract virtual void set_MemoryUsageTargetLevel(COREWEBVIEW2_MEMORY_USAGE_TARGET_LEVEL value);
}
[CompilerGeneratedAttribute]
[GuidAttribute("9E8F0CF8-E670-4B5E-B2BC-73E061E3184C")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2_2 {
    [DispIdAttribute("1610743813")]
public ICoreWebView2CookieManager CookieManager { get; }
    [DispIdAttribute("1610743814")]
public ICoreWebView2Environment Environment { get; }
    public void _VtblGap1_58();
    public abstract virtual void add_WebResourceResponseReceived(ICoreWebView2WebResourceResponseReceivedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_WebResourceResponseReceived(EventRegistrationToken token);
    public abstract virtual void NavigateWithWebResourceRequest(ICoreWebView2WebResourceRequest Request);
    public abstract virtual void add_DOMContentLoaded(ICoreWebView2DOMContentLoadedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_DOMContentLoaded(EventRegistrationToken token);
    public abstract virtual ICoreWebView2CookieManager get_CookieManager();
    public abstract virtual ICoreWebView2Environment get_Environment();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("B4BC1926-7305-11EE-B962-0242AC120002")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2_20 {
    [DispIdAttribute("1611923456")]
public UInt32 FrameId { get; }
    public void _VtblGap1_118();
    public abstract virtual UInt32 get_FrameId();
}
[CompilerGeneratedAttribute]
[GuidAttribute("C4980DEA-587B-43B9-8143-3EF3BF552D95")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2_21 {
    public void _VtblGap1_119();
    public abstract virtual void ExecuteScriptWithResult(string javaScript, ICoreWebView2ExecuteScriptWithResultCompletedHandler handler);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("DB75DFC7-A857-4632-A398-6969DDE26C0A")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2_22 {
    public void _VtblGap1_120();
    public abstract virtual void AddWebResourceRequestedFilterWithRequestSourceKinds(string uri, COREWEBVIEW2_WEB_RESOURCE_CONTEXT ResourceContext, COREWEBVIEW2_WEB_RESOURCE_REQUEST_SOURCE_KINDS requestSourceKinds);
    public abstract virtual void RemoveWebResourceRequestedFilterWithRequestSourceKinds(string uri, COREWEBVIEW2_WEB_RESOURCE_CONTEXT ResourceContext, COREWEBVIEW2_WEB_RESOURCE_REQUEST_SOURCE_KINDS requestSourceKinds);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("508F0DB5-90C4-5872-90A7-267A91377502")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2_23 {
    public void _VtblGap1_122();
    public abstract virtual void PostWebMessageAsJsonWithAdditionalObjects(string webMessageAsJson, ICoreWebView2ObjectCollectionView additionalObjects);
}
[CompilerGeneratedAttribute]
[GuidAttribute("39A7AD55-4287-5CC1-88A1-C6F458593824")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2_24 {
    public void _VtblGap1_123();
    public abstract virtual void add_NotificationReceived(ICoreWebView2NotificationReceivedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_NotificationReceived(EventRegistrationToken token);
}
[CompilerGeneratedAttribute]
[GuidAttribute("B5A86092-DF50-5B4F-A17B-6C8F8B40B771")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2_25 {
    public void _VtblGap1_125();
    public abstract virtual void add_SaveAsUIShowing(ICoreWebView2SaveAsUIShowingEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_SaveAsUIShowing(EventRegistrationToken token);
    public abstract virtual void ShowSaveAsUI(ICoreWebView2ShowSaveAsUICompletedHandler handler);
}
[CompilerGeneratedAttribute]
[GuidAttribute("A0D6DF20-3B92-416D-AA0C-437A9C727857")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2_3 {
    [DispIdAttribute("1610809346")]
public int IsSuspended { get; }
    public void _VtblGap1_65();
    public abstract virtual void TrySuspend(ICoreWebView2TrySuspendCompletedHandler handler);
    public abstract virtual void Resume();
    public abstract virtual int get_IsSuspended();
    public abstract virtual void SetVirtualHostNameToFolderMapping(string hostName, string folderPath, COREWEBVIEW2_HOST_RESOURCE_ACCESS_KIND accessKind);
    public abstract virtual void ClearVirtualHostNameToFolderMapping(string hostName);
}
[CompilerGeneratedAttribute]
[GuidAttribute("20D02D59-6DF2-42DC-BD06-F98A694B1302")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2_4 {
    public void _VtblGap1_70();
    public abstract virtual void add_FrameCreated(ICoreWebView2FrameCreatedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_FrameCreated(EventRegistrationToken token);
    public abstract virtual void add_DownloadStarting(ICoreWebView2DownloadStartingEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_DownloadStarting(EventRegistrationToken token);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("BEDB11B8-D63C-11EB-B8BC-0242AC130003")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2_5 {
    public void _VtblGap1_74();
    public abstract virtual void add_ClientCertificateRequested(ICoreWebView2ClientCertificateRequestedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_ClientCertificateRequested(EventRegistrationToken token);
}
[CompilerGeneratedAttribute]
[GuidAttribute("499AADAC-D92C-4589-8A75-111BFC167795")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2_6 {
    public void _VtblGap1_76();
    public abstract virtual void OpenTaskManagerWindow();
}
[CompilerGeneratedAttribute]
[GuidAttribute("79C24D83-09A3-45AE-9418-487F32A58740")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2_7 {
    public void _VtblGap1_77();
    public abstract virtual void PrintToPdf(string ResultFilePath, ICoreWebView2PrintSettings printSettings, ICoreWebView2PrintToPdfCompletedHandler handler);
}
[CompilerGeneratedAttribute]
[GuidAttribute("E9632730-6E1E-43AB-B7B8-7B2C9E62E094")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2_8 {
    [DispIdAttribute("1611137026")]
public int IsMuted { get; public set; }
    [DispIdAttribute("1611137030")]
public int IsDocumentPlayingAudio { get; }
    public void _VtblGap1_78();
    public abstract virtual void add_IsMutedChanged(ICoreWebView2IsMutedChangedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_IsMutedChanged(EventRegistrationToken token);
    public abstract virtual int get_IsMuted();
    public abstract virtual void set_IsMuted(int value);
    public abstract virtual void add_IsDocumentPlayingAudioChanged(ICoreWebView2IsDocumentPlayingAudioChangedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_IsDocumentPlayingAudioChanged(EventRegistrationToken token);
    public abstract virtual int get_IsDocumentPlayingAudio();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("4D7B2EAB-9FDC-468D-B998-A9260B5ED651")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2_9 {
    [DispIdAttribute("1611202562")]
public int IsDefaultDownloadDialogOpen { get; }
    [DispIdAttribute("1611202565")]
public COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT DefaultDownloadDialogCornerAlignment { get; public set; }
    [DispIdAttribute("1611202567")]
public tagPOINT DefaultDownloadDialogMargin { get; public set; }
    public void _VtblGap1_85();
    public abstract virtual void add_IsDefaultDownloadDialogOpenChanged(ICoreWebView2IsDefaultDownloadDialogOpenChangedEventHandler handler, EventRegistrationToken& token);
    public abstract virtual void remove_IsDefaultDownloadDialogOpenChanged(EventRegistrationToken token);
    public abstract virtual int get_IsDefaultDownloadDialogOpen();
    public abstract virtual void OpenDefaultDownloadDialog();
    public abstract virtual void CloseDefaultDownloadDialog();
    public abstract virtual COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT get_DefaultDownloadDialogCornerAlignment();
    public abstract virtual void set_DefaultDownloadDialogCornerAlignment(COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT value);
    public abstract virtual tagPOINT get_DefaultDownloadDialogMargin();
    public abstract virtual void set_DefaultDownloadDialogMargin(tagPOINT value);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("9F760F8A-FB79-42BE-9990-7B56900FA9C7")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2AcceleratorKeyPressedEventArgs {
    [DispIdAttribute("1610678272")]
public COREWEBVIEW2_KEY_EVENT_KIND KeyEventKind { get; }
    [DispIdAttribute("1610678273")]
public UInt32 VirtualKey { get; }
    [DispIdAttribute("1610678274")]
public int KeyEventLParam { get; }
    [DispIdAttribute("1610678275")]
public COREWEBVIEW2_PHYSICAL_KEY_STATUS PhysicalKeyStatus { get; }
    [DispIdAttribute("1610678276")]
public int Handled { get; public set; }
    public abstract virtual COREWEBVIEW2_KEY_EVENT_KIND get_KeyEventKind();
    public abstract virtual UInt32 get_VirtualKey();
    public abstract virtual int get_KeyEventLParam();
    public abstract virtual COREWEBVIEW2_PHYSICAL_KEY_STATUS get_PhysicalKeyStatus();
    public abstract virtual int get_Handled();
    public abstract virtual void set_Handled(int Handled);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("03B2C8C8-7799-4E34-BD66-ED26AA85F2BF")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2AcceleratorKeyPressedEventArgs2 {
    [DispIdAttribute("1610743808")]
public int IsBrowserAcceleratorKeyEnabled { get; public set; }
    public void _VtblGap1_6();
    public abstract virtual int get_IsBrowserAcceleratorKeyEnabled();
    public abstract virtual void set_IsBrowserAcceleratorKeyEnabled(int value);
}
[CompilerGeneratedAttribute]
[GuidAttribute("B29C7E28-FA79-41A8-8E44-65811C76DCB2")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2AcceleratorKeyPressedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2Controller sender, ICoreWebView2AcceleratorKeyPressedEventArgs args);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("B99369F3-9B11-47B5-BC6F-8E7895FCEA17")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandler {
    public abstract virtual void Invoke(int errorCode, string result);
}
[CompilerGeneratedAttribute]
[GuidAttribute("EF05516F-D897-4F9E-B672-D8E2307A3FB0")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2BasicAuthenticationRequestedEventArgs {
    [DispIdAttribute("1610678272")]
public string Uri { get; }
    [DispIdAttribute("1610678273")]
public string Challenge { get; }
    [DispIdAttribute("1610678274")]
public ICoreWebView2BasicAuthenticationResponse Response { get; }
    [DispIdAttribute("1610678275")]
public int Cancel { get; public set; }
    public abstract virtual string get_uri();
    public abstract virtual string get_Challenge();
    public abstract virtual ICoreWebView2BasicAuthenticationResponse get_Response();
    public abstract virtual int get_Cancel();
    public abstract virtual void set_Cancel(int Cancel);
    public abstract virtual ICoreWebView2Deferral GetDeferral();
}
[CompilerGeneratedAttribute]
[GuidAttribute("58B4D6C2-18D4-497E-B39B-9A96533FA278")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2BasicAuthenticationRequestedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2 sender, ICoreWebView2BasicAuthenticationRequestedEventArgs args);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("07023F7D-2D77-4D67-9040-6E7D428C6A40")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2BasicAuthenticationResponse {
    [DispIdAttribute("1610678272")]
public string UserName { get; public set; }
    [DispIdAttribute("1610678274")]
public string Password { get; public set; }
    public abstract virtual string get_UserName();
    public abstract virtual void set_UserName(string UserName);
    public abstract virtual string get_Password();
    public abstract virtual void set_Password(string Password);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("7EF7FFA0-FAC5-462C-B189-3D9EDBE575DA")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2BrowserExtension {
    [DispIdAttribute("1610678272")]
public string Id { get; }
    [DispIdAttribute("1610678273")]
public string Name { get; }
    [DispIdAttribute("1610678275")]
public int IsEnabled { get; }
    public abstract virtual string get_id();
    public abstract virtual string get_name();
    public abstract virtual void Remove(ICoreWebView2BrowserExtensionRemoveCompletedHandler handler);
    public abstract virtual int get_IsEnabled();
    public abstract virtual void Enable(int IsEnabled, ICoreWebView2BrowserExtensionEnableCompletedHandler handler);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("30C186CE-7FAD-421F-A3BC-A8EAF071DDB8")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2BrowserExtensionEnableCompletedHandler {
    public abstract virtual void Invoke(int errorCode);
}
[CompilerGeneratedAttribute]
[GuidAttribute("2EF3D2DC-BD5F-4F4D-90AF-FD67798F0C2F")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2BrowserExtensionList {
    [DispIdAttribute("1610678272")]
public UInt32 Count { get; }
    public abstract virtual UInt32 get_Count();
    public abstract virtual ICoreWebView2BrowserExtension GetValueAtIndex(UInt32 index);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("8E41909A-9B18-4BB1-8CDF-930F467A50BE")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2BrowserExtensionRemoveCompletedHandler {
    public abstract virtual void Invoke(int errorCode);
}
[CompilerGeneratedAttribute]
[GuidAttribute("1F00663F-AF8C-4782-9CDD-DD01C52E34CB")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2BrowserProcessExitedEventArgs {
    [DispIdAttribute("1610678272")]
public COREWEBVIEW2_BROWSER_PROCESS_EXIT_KIND BrowserProcessExitKind { get; }
    [DispIdAttribute("1610678273")]
public UInt32 BrowserProcessId { get; }
    public abstract virtual COREWEBVIEW2_BROWSER_PROCESS_EXIT_KIND get_BrowserProcessExitKind();
    public abstract virtual UInt32 get_BrowserProcessId();
}
[CompilerGeneratedAttribute]
[GuidAttribute("FA504257-A216-4911-A860-FE8825712861")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2BrowserProcessExitedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2Environment sender, ICoreWebView2BrowserProcessExitedEventArgs args);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("828E8AB6-D94C-4264-9CEF-5217170D6251")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2BytesReceivedChangedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2DownloadOperation sender, object args);
}
[CompilerGeneratedAttribute]
[GuidAttribute("5C4889F0-5EF6-4C5A-952C-D8F1B92D0574")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2CallDevToolsProtocolMethodCompletedHandler {
    public abstract virtual void Invoke(int errorCode, string result);
}
[CompilerGeneratedAttribute]
[GuidAttribute("697E05E9-3D8F-45FA-96F4-8FFE1EDEDAF5")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2CapturePreviewCompletedHandler {
    public abstract virtual void Invoke(int errorCode);
}
[CompilerGeneratedAttribute]
[GuidAttribute("C5FB2FCE-1CAC-4AEE-9C79-5ED0362EAAE0")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Certificate {
    [DispIdAttribute("1610678272")]
public string Subject { get; }
    [DispIdAttribute("1610678273")]
public string Issuer { get; }
    [DispIdAttribute("1610678274")]
public double ValidFrom { get; }
    [DispIdAttribute("1610678275")]
public double ValidTo { get; }
    [DispIdAttribute("1610678276")]
public string DerEncodedSerialNumber { get; }
    [DispIdAttribute("1610678277")]
public string DisplayName { get; }
    [DispIdAttribute("1610678279")]
public ICoreWebView2StringCollection PemEncodedIssuerCertificateChain { get; }
    public abstract virtual string get_Subject();
    public abstract virtual string get_Issuer();
    public abstract virtual double get_ValidFrom();
    public abstract virtual double get_ValidTo();
    public abstract virtual string get_DerEncodedSerialNumber();
    public abstract virtual string get_DisplayName();
    public abstract virtual string ToPemEncoding();
    public abstract virtual ICoreWebView2StringCollection get_PemEncodedIssuerCertificateChain();
}
[CompilerGeneratedAttribute]
[GuidAttribute("E9710A06-1D1D-49B2-8234-226F35846AE5")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ClearBrowsingDataCompletedHandler {
    public abstract virtual void Invoke(int errorCode);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("3B40AAC6-ACFE-4FFD-8211-F607B96E2D5B")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ClearServerCertificateErrorActionsCompletedHandler {
    public abstract virtual void Invoke(int errorCode);
}
[CompilerGeneratedAttribute]
[GuidAttribute("E7188076-BCC3-11EB-8529-0242AC130003")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ClientCertificate {
    [DispIdAttribute("1610678272")]
public string Subject { get; }
    [DispIdAttribute("1610678273")]
public string Issuer { get; }
    [DispIdAttribute("1610678274")]
public double ValidFrom { get; }
    [DispIdAttribute("1610678275")]
public double ValidTo { get; }
    [DispIdAttribute("1610678276")]
public string DerEncodedSerialNumber { get; }
    [DispIdAttribute("1610678277")]
public string DisplayName { get; }
    [DispIdAttribute("1610678279")]
public ICoreWebView2StringCollection PemEncodedIssuerCertificateChain { get; }
    [DispIdAttribute("1610678280")]
public COREWEBVIEW2_CLIENT_CERTIFICATE_KIND Kind { get; }
    public abstract virtual string get_Subject();
    public abstract virtual string get_Issuer();
    public abstract virtual double get_ValidFrom();
    public abstract virtual double get_ValidTo();
    public abstract virtual string get_DerEncodedSerialNumber();
    public abstract virtual string get_DisplayName();
    public abstract virtual string ToPemEncoding();
    public abstract virtual ICoreWebView2StringCollection get_PemEncodedIssuerCertificateChain();
    public abstract virtual COREWEBVIEW2_CLIENT_CERTIFICATE_KIND get_Kind();
}
[CompilerGeneratedAttribute]
[GuidAttribute("EF5674D2-BCC3-11EB-8529-0242AC130003")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ClientCertificateCollection {
    [DispIdAttribute("1610678272")]
public UInt32 Count { get; }
    public abstract virtual UInt32 get_Count();
    public abstract virtual ICoreWebView2ClientCertificate GetValueAtIndex(UInt32 index);
}
[CompilerGeneratedAttribute]
[GuidAttribute("BC59DB28-BCC3-11EB-8529-0242AC130003")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ClientCertificateRequestedEventArgs {
    [DispIdAttribute("1610678272")]
public string Host { get; }
    [DispIdAttribute("1610678273")]
public int Port { get; }
    [DispIdAttribute("1610678274")]
public int IsProxy { get; }
    [DispIdAttribute("1610678275")]
public ICoreWebView2StringCollection AllowedCertificateAuthorities { get; }
    [DispIdAttribute("1610678276")]
public ICoreWebView2ClientCertificateCollection MutuallyTrustedCertificates { get; }
    [DispIdAttribute("1610678277")]
public ICoreWebView2ClientCertificate SelectedCertificate { get; public set; }
    [DispIdAttribute("1610678279")]
public int Cancel { get; public set; }
    [DispIdAttribute("1610678281")]
public int Handled { get; public set; }
    public abstract virtual string get_Host();
    public abstract virtual int get_Port();
    public abstract virtual int get_IsProxy();
    public abstract virtual ICoreWebView2StringCollection get_AllowedCertificateAuthorities();
    public abstract virtual ICoreWebView2ClientCertificateCollection get_MutuallyTrustedCertificates();
    public abstract virtual ICoreWebView2ClientCertificate get_SelectedCertificate();
    public abstract virtual void set_SelectedCertificate(ICoreWebView2ClientCertificate value);
    public abstract virtual int get_Cancel();
    public abstract virtual void set_Cancel(int value);
    public abstract virtual int get_Handled();
    public abstract virtual void set_Handled(int value);
    public abstract virtual ICoreWebView2Deferral GetDeferral();
}
[CompilerGeneratedAttribute]
[GuidAttribute("D7175BA2-BCC3-11EB-8529-0242AC130003")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ClientCertificateRequestedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2 sender, ICoreWebView2ClientCertificateRequestedEventArgs args);
}
[CompilerGeneratedAttribute]
[GuidAttribute("3DF9B733-B9AE-4A15-86B4-EB9EE9826469")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2CompositionController {
    [DispIdAttribute("1610678272")]
public object RootVisualTarget { get; public set; }
    [DispIdAttribute("1610678276")]
public IntPtr Cursor { get; }
    [DispIdAttribute("1610678277")]
public UInt32 SystemCursorId { get; }
    public abstract virtual object get_RootVisualTarget();
    public abstract virtual void set_RootVisualTarget(object target);
    public abstract virtual void SendMouseInput(COREWEBVIEW2_MOUSE_EVENT_KIND eventKind, COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS virtualKeys, UInt32 mouseData, tagPOINT point);
    public abstract virtual void SendPointerInput(COREWEBVIEW2_POINTER_EVENT_KIND eventKind, ICoreWebView2PointerInfo pointerInfo);
    public abstract virtual IntPtr get_Cursor();
    public abstract virtual UInt32 get_SystemCursorId();
    public abstract virtual void add_CursorChanged(ICoreWebView2CursorChangedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_CursorChanged(EventRegistrationToken token);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("0B6A3D24-49CB-4806-BA20-B5E0734A7B26")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2CompositionController2 {
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("9570570E-4D76-4361-9EE1-F04D0DBDFB1E")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2CompositionController3 {
    public void _VtblGap1_10();
    public abstract virtual void DragLeave();
}
[CompilerGeneratedAttribute]
[GuidAttribute("7C367B9B-3D2B-450F-9E58-D61A20F486AA")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2CompositionController4 {
    public void _VtblGap1_13();
    public abstract virtual COREWEBVIEW2_NON_CLIENT_REGION_KIND GetNonClientRegionAtPoint(tagPOINT point);
    public abstract virtual ICoreWebView2RegionRectCollectionView QueryNonClientRegion(COREWEBVIEW2_NON_CLIENT_REGION_KIND Kind);
    public abstract virtual void add_NonClientRegionChanged(ICoreWebView2NonClientRegionChangedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_NonClientRegionChanged(EventRegistrationToken token);
}
[CompilerGeneratedAttribute]
[GuidAttribute("E45D98B1-AFEF-45BE-8BAF-6C7728867F73")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ContainsFullScreenElementChangedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2 sender, object args);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("0C8A1275-9B6B-4901-87AD-70DF25BAFA6E")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ContentLoadingEventArgs {
    [DispIdAttribute("1610678272")]
public int IsErrorPage { get; }
    [DispIdAttribute("1610678273")]
public ulong NavigationId { get; }
    public abstract virtual int get_IsErrorPage();
    public abstract virtual ulong get_NavigationId();
}
[CompilerGeneratedAttribute]
[GuidAttribute("364471E7-F2BE-4910-BDBA-D72077D51C4B")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ContentLoadingEventHandler {
    public abstract virtual void Invoke(ICoreWebView2 sender, ICoreWebView2ContentLoadingEventArgs args);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("7AED49E3-A93F-497A-811C-749C6B6B6C65")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ContextMenuItem {
    [DispIdAttribute("1610678272")]
public string Name { get; }
    [DispIdAttribute("1610678273")]
public string Label { get; }
    [DispIdAttribute("1610678274")]
public int CommandId { get; }
    [DispIdAttribute("1610678275")]
public string ShortcutKeyDescription { get; }
    [DispIdAttribute("1610678276")]
public IStream Icon { get; }
    [DispIdAttribute("1610678277")]
public COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND Kind { get; }
    [DispIdAttribute("1610678278")]
public int IsEnabled { get; public set; }
    [DispIdAttribute("1610678280")]
public int IsChecked { get; public set; }
    [DispIdAttribute("1610678282")]
public ICoreWebView2ContextMenuItemCollection Children { get; }
    public abstract virtual string get_name();
    public abstract virtual string get_Label();
    public abstract virtual int get_CommandId();
    public abstract virtual string get_ShortcutKeyDescription();
    public abstract virtual IStream get_Icon();
    public abstract virtual COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND get_Kind();
    public abstract virtual void set_IsEnabled(int value);
    public abstract virtual int get_IsEnabled();
    public abstract virtual void set_IsChecked(int value);
    public abstract virtual int get_IsChecked();
    public abstract virtual ICoreWebView2ContextMenuItemCollection get_Children();
    public abstract virtual void add_CustomItemSelected(ICoreWebView2CustomItemSelectedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_CustomItemSelected(EventRegistrationToken token);
}
[CompilerGeneratedAttribute]
[GuidAttribute("F562A2F5-C415-45CF-B909-D4B7C1E276D3")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ContextMenuItemCollection {
    [DispIdAttribute("1610678272")]
public UInt32 Count { get; }
    public abstract virtual UInt32 get_Count();
    public abstract virtual ICoreWebView2ContextMenuItem GetValueAtIndex(UInt32 index);
    public abstract virtual void RemoveValueAtIndex(UInt32 index);
    public abstract virtual void InsertValueAtIndex(UInt32 index, ICoreWebView2ContextMenuItem value);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("A1D309EE-C03F-11EB-8529-0242AC130003")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ContextMenuRequestedEventArgs {
    [DispIdAttribute("1610678272")]
public ICoreWebView2ContextMenuItemCollection MenuItems { get; }
    [DispIdAttribute("1610678273")]
public ICoreWebView2ContextMenuTarget ContextMenuTarget { get; }
    [DispIdAttribute("1610678274")]
public tagPOINT Location { get; }
    [DispIdAttribute("1610678275")]
public int SelectedCommandId { get; public set; }
    [DispIdAttribute("1610678277")]
public int Handled { get; public set; }
    public abstract virtual ICoreWebView2ContextMenuItemCollection get_MenuItems();
    public abstract virtual ICoreWebView2ContextMenuTarget get_ContextMenuTarget();
    public abstract virtual tagPOINT get_Location();
    public abstract virtual void set_SelectedCommandId(int value);
    public abstract virtual int get_SelectedCommandId();
    public abstract virtual void set_Handled(int value);
    public abstract virtual int get_Handled();
    public abstract virtual ICoreWebView2Deferral GetDeferral();
}
[CompilerGeneratedAttribute]
[GuidAttribute("04D3FE1D-AB87-42FB-A898-DA241D35B63C")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ContextMenuRequestedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2 sender, ICoreWebView2ContextMenuRequestedEventArgs args);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("B8611D99-EED6-4F3F-902C-A198502AD472")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ContextMenuTarget {
    [DispIdAttribute("1610678272")]
public COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND Kind { get; }
    [DispIdAttribute("1610678273")]
public int IsEditable { get; }
    [DispIdAttribute("1610678274")]
public int IsRequestedForMainFrame { get; }
    [DispIdAttribute("1610678275")]
public string PageUri { get; }
    [DispIdAttribute("1610678276")]
public string FrameUri { get; }
    [DispIdAttribute("1610678277")]
public int HasLinkUri { get; }
    [DispIdAttribute("1610678278")]
public string LinkUri { get; }
    [DispIdAttribute("1610678279")]
public int HasLinkText { get; }
    [DispIdAttribute("1610678280")]
public string LinkText { get; }
    [DispIdAttribute("1610678281")]
public int HasSourceUri { get; }
    [DispIdAttribute("1610678282")]
public string SourceUri { get; }
    [DispIdAttribute("1610678283")]
public int HasSelection { get; }
    [DispIdAttribute("1610678284")]
public string SelectionText { get; }
    public abstract virtual COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND get_Kind();
    public abstract virtual int get_IsEditable();
    public abstract virtual int get_IsRequestedForMainFrame();
    public abstract virtual string get_PageUri();
    public abstract virtual string get_FrameUri();
    public abstract virtual int get_HasLinkUri();
    public abstract virtual string get_LinkUri();
    public abstract virtual int get_HasLinkText();
    public abstract virtual string get_LinkText();
    public abstract virtual int get_HasSourceUri();
    public abstract virtual string get_SourceUri();
    public abstract virtual int get_HasSelection();
    public abstract virtual string get_SelectionText();
}
[CompilerGeneratedAttribute]
[GuidAttribute("4D00C0D1-9434-4EB6-8078-8697A560334F")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Controller {
    [DispIdAttribute("1610678272")]
public int IsVisible { get; public set; }
    [DispIdAttribute("1610678274")]
public tagRECT Bounds { get; public set; }
    [DispIdAttribute("1610678276")]
public double ZoomFactor { get; public set; }
    [DispIdAttribute("1610678290")]
public IntPtr ParentWindow { get; public set; }
    [DispIdAttribute("1610678294")]
public ICoreWebView2 CoreWebView2 { get; }
    public abstract virtual int get_IsVisible();
    public abstract virtual void set_IsVisible(int IsVisible);
    public abstract virtual tagRECT get_Bounds();
    public abstract virtual void set_Bounds(tagRECT Bounds);
    public abstract virtual double get_ZoomFactor();
    public abstract virtual void set_ZoomFactor(double ZoomFactor);
    public abstract virtual void add_ZoomFactorChanged(ICoreWebView2ZoomFactorChangedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_ZoomFactorChanged(EventRegistrationToken token);
    public abstract virtual void SetBoundsAndZoomFactor(tagRECT Bounds, double ZoomFactor);
    public abstract virtual void MoveFocus(COREWEBVIEW2_MOVE_FOCUS_REASON reason);
    public abstract virtual void add_MoveFocusRequested(ICoreWebView2MoveFocusRequestedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_MoveFocusRequested(EventRegistrationToken token);
    public abstract virtual void add_GotFocus(ICoreWebView2FocusChangedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_GotFocus(EventRegistrationToken token);
    public abstract virtual void add_LostFocus(ICoreWebView2FocusChangedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_LostFocus(EventRegistrationToken token);
    public abstract virtual void add_AcceleratorKeyPressed(ICoreWebView2AcceleratorKeyPressedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_AcceleratorKeyPressed(EventRegistrationToken token);
    public abstract virtual IntPtr get_ParentWindow();
    public abstract virtual void set_ParentWindow(IntPtr ParentWindow);
    public abstract virtual void NotifyParentWindowPositionChanged();
    public abstract virtual void Close();
    public abstract virtual ICoreWebView2 get_CoreWebView2();
}
[CompilerGeneratedAttribute]
[GuidAttribute("C979903E-D4CA-4228-92EB-47EE3FA96EAB")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Controller2 {
    [DispIdAttribute("1610743808")]
public COREWEBVIEW2_COLOR DefaultBackgroundColor { get; public set; }
    public void _VtblGap1_23();
    public abstract virtual COREWEBVIEW2_COLOR get_DefaultBackgroundColor();
    public abstract virtual void set_DefaultBackgroundColor(COREWEBVIEW2_COLOR value);
}
[CompilerGeneratedAttribute]
[GuidAttribute("F9614724-5D2B-41DC-AEF7-73D62B51543B")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Controller3 {
    [DispIdAttribute("1610809344")]
public double RasterizationScale { get; public set; }
    [DispIdAttribute("1610809346")]
public int ShouldDetectMonitorScaleChanges { get; public set; }
    [DispIdAttribute("1610809350")]
public COREWEBVIEW2_BOUNDS_MODE BoundsMode { get; public set; }
    public void _VtblGap1_25();
    public abstract virtual double get_RasterizationScale();
    public abstract virtual void set_RasterizationScale(double scale);
    public abstract virtual int get_ShouldDetectMonitorScaleChanges();
    public abstract virtual void set_ShouldDetectMonitorScaleChanges(int value);
    public abstract virtual void add_RasterizationScaleChanged(ICoreWebView2RasterizationScaleChangedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_RasterizationScaleChanged(EventRegistrationToken token);
    public abstract virtual COREWEBVIEW2_BOUNDS_MODE get_BoundsMode();
    public abstract virtual void set_BoundsMode(COREWEBVIEW2_BOUNDS_MODE BoundsMode);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("97D418D5-A426-4E49-A151-E1A10F327D9E")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Controller4 {
    [DispIdAttribute("1610874880")]
public int AllowExternalDrop { get; public set; }
    public void _VtblGap1_33();
    public abstract virtual int get_AllowExternalDrop();
    public abstract virtual void set_AllowExternalDrop(int value);
}
[CompilerGeneratedAttribute]
[GuidAttribute("12AAE616-8CCB-44EC-BCB3-EB1831881635")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ControllerOptions {
    [DispIdAttribute("1610678272")]
public string ProfileName { get; public set; }
    [DispIdAttribute("1610678274")]
public int IsInPrivateModeEnabled { get; public set; }
    public abstract virtual string get_ProfileName();
    public abstract virtual void set_ProfileName(string value);
    public abstract virtual int get_IsInPrivateModeEnabled();
    public abstract virtual void set_IsInPrivateModeEnabled(int value);
}
[CompilerGeneratedAttribute]
[GuidAttribute("06C991D8-9E7E-11ED-A8FC-0242AC120002")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ControllerOptions2 {
    [DispIdAttribute("1610743808")]
public string ScriptLocale { get; public set; }
    public void _VtblGap1_4();
    public abstract virtual string get_ScriptLocale();
    public abstract virtual void set_ScriptLocale(string value);
}
[CompilerGeneratedAttribute]
[GuidAttribute("AD26D6BE-1486-43E6-BF87-A2034006CA21")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Cookie {
    [DispIdAttribute("1610678272")]
public string Name { get; }
    [DispIdAttribute("1610678273")]
public string Value { get; public set; }
    [DispIdAttribute("1610678275")]
public string Domain { get; }
    [DispIdAttribute("1610678276")]
public string Path { get; }
    [DispIdAttribute("1610678277")]
public double Expires { get; public set; }
    [DispIdAttribute("1610678279")]
public int IsHttpOnly { get; public set; }
    [DispIdAttribute("1610678281")]
public COREWEBVIEW2_COOKIE_SAME_SITE_KIND SameSite { get; public set; }
    [DispIdAttribute("1610678283")]
public int IsSecure { get; public set; }
    [DispIdAttribute("1610678285")]
public int IsSession { get; }
    public abstract virtual string get_name();
    public abstract virtual string get_value();
    public abstract virtual void set_value(string value);
    public abstract virtual string get_Domain();
    public abstract virtual string get_Path();
    public abstract virtual double get_Expires();
    public abstract virtual void set_Expires(double Expires);
    public abstract virtual int get_IsHttpOnly();
    public abstract virtual void set_IsHttpOnly(int IsHttpOnly);
    public abstract virtual COREWEBVIEW2_COOKIE_SAME_SITE_KIND get_SameSite();
    public abstract virtual void set_SameSite(COREWEBVIEW2_COOKIE_SAME_SITE_KIND SameSite);
    public abstract virtual int get_IsSecure();
    public abstract virtual void set_IsSecure(int IsSecure);
    public abstract virtual int get_IsSession();
}
[CompilerGeneratedAttribute]
[GuidAttribute("F7F6F714-5D2A-43C6-9503-346ECE02D186")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2CookieList {
    [DispIdAttribute("1610678272")]
public UInt32 Count { get; }
    public abstract virtual UInt32 get_Count();
    public abstract virtual ICoreWebView2Cookie GetValueAtIndex(UInt32 index);
}
[CompilerGeneratedAttribute]
[GuidAttribute("177CD9E7-B6F5-451A-94A0-5D7A3A4C4141")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2CookieManager {
    public abstract virtual ICoreWebView2Cookie CreateCookie(string name, string value, string Domain, string Path);
    public abstract virtual ICoreWebView2Cookie CopyCookie(ICoreWebView2Cookie cookieParam);
    public abstract virtual void GetCookies(string uri, ICoreWebView2GetCookiesCompletedHandler handler);
    public abstract virtual void AddOrUpdateCookie(ICoreWebView2Cookie cookie);
    public abstract virtual void DeleteCookie(ICoreWebView2Cookie cookie);
    public abstract virtual void DeleteCookies(string name, string uri);
    public abstract virtual void DeleteCookiesWithDomainAndPath(string name, string Domain, string Path);
    public abstract virtual void DeleteAllCookies();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("02FAB84B-1428-4FB7-AD45-1B2E64736184")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2CreateCoreWebView2CompositionControllerCompletedHandler {
    public abstract virtual void Invoke(int errorCode, ICoreWebView2CompositionController result);
}
[CompilerGeneratedAttribute]
[GuidAttribute("6C4819F3-C9B7-4260-8127-C9F5BDE7F68C")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2CreateCoreWebView2ControllerCompletedHandler {
    public abstract virtual void Invoke(int errorCode, ICoreWebView2Controller result);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("4E8A3389-C9D8-4BD2-B6B5-124FEE6CC14D")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2CreateCoreWebView2EnvironmentCompletedHandler {
    public abstract virtual void Invoke(int errorCode, ICoreWebView2Environment result);
}
[CompilerGeneratedAttribute]
[GuidAttribute("9DA43CCC-26E1-4DAD-B56C-D8961C94C571")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2CursorChangedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2CompositionController sender, object args);
}
[CompilerGeneratedAttribute]
[GuidAttribute("49E1D0BC-FE9E-4481-B7C2-32324AA21998")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2CustomItemSelectedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2ContextMenuItem sender, object args);
}
[CompilerGeneratedAttribute]
[GuidAttribute("D60AC92C-37A6-4B26-A39E-95CFE59047BB")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2CustomSchemeRegistration {
    [DispIdAttribute("1610678272")]
public string SchemeName { get; }
    [DispIdAttribute("1610678273")]
public int TreatAsSecure { get; public set; }
    [DispIdAttribute("1610678277")]
public int HasAuthorityComponent { get; public set; }
    public abstract virtual string get_SchemeName();
    public abstract virtual int get_TreatAsSecure();
    public abstract virtual void set_TreatAsSecure(int TreatAsSecure);
    public abstract virtual void GetAllowedOrigins(UInt32& allowedOriginsCount, IntPtr allowedOrigins);
    public abstract virtual void SetAllowedOrigins(UInt32 allowedOriginsCount, String& allowedOrigins);
    public abstract virtual int get_HasAuthorityComponent();
    public abstract virtual void set_HasAuthorityComponent(int HasAuthorityComponent);
}
[CompilerGeneratedAttribute]
[GuidAttribute("C10E7F7B-B585-46F0-A623-8BEFBF3E4EE0")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Deferral {
    public abstract virtual void Complete();
}
[CompilerGeneratedAttribute]
[GuidAttribute("653C2959-BB3A-4377-8632-B58ADA4E66C4")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2DevToolsProtocolEventReceivedEventArgs {
    [DispIdAttribute("1610678272")]
public string ParameterObjectAsJson { get; }
    public abstract virtual string get_ParameterObjectAsJson();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("2DC4959D-1494-4393-95BA-BEA4CB9EBD1B")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2DevToolsProtocolEventReceivedEventArgs2 {
    [DispIdAttribute("1610743808")]
public string SessionId { get; }
    public void _VtblGap1_1();
    public abstract virtual string get_sessionId();
}
[CompilerGeneratedAttribute]
[GuidAttribute("E2FDA4BE-5456-406C-A261-3D452138362C")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2DevToolsProtocolEventReceivedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2 sender, ICoreWebView2DevToolsProtocolEventReceivedEventArgs args);
}
[CompilerGeneratedAttribute]
[GuidAttribute("B32CA51A-8371-45E9-9317-AF021D080367")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2DevToolsProtocolEventReceiver {
    public abstract virtual void add_DevToolsProtocolEventReceived(ICoreWebView2DevToolsProtocolEventReceivedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_DevToolsProtocolEventReceived(EventRegistrationToken token);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("F5F2B923-953E-4042-9F95-F3A118E1AFD4")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2DocumentTitleChangedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2 sender, object args);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("16B1E21A-C503-44F2-84C9-70ABA5031283")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2DOMContentLoadedEventArgs {
    [DispIdAttribute("1610678272")]
public ulong NavigationId { get; }
    public abstract virtual ulong get_NavigationId();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("4BAC7E9C-199E-49ED-87ED-249303ACF019")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2DOMContentLoadedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2 sender, ICoreWebView2DOMContentLoadedEventArgs args);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("3D6B6CF2-AFE1-44C7-A995-C65117714336")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2DownloadOperation {
    [DispIdAttribute("1610678278")]
public string Uri { get; }
    [DispIdAttribute("1610678279")]
public string ContentDisposition { get; }
    [DispIdAttribute("1610678280")]
public string MimeType { get; }
    [DispIdAttribute("1610678281")]
public long TotalBytesToReceive { get; }
    [DispIdAttribute("1610678282")]
public long BytesReceived { get; }
    [DispIdAttribute("1610678283")]
public string EstimatedEndTime { get; }
    [DispIdAttribute("1610678284")]
public string ResultFilePath { get; }
    [DispIdAttribute("1610678285")]
public COREWEBVIEW2_DOWNLOAD_STATE State { get; }
    [DispIdAttribute("1610678286")]
public COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON InterruptReason { get; }
    [DispIdAttribute("1610678290")]
public int CanResume { get; }
    public abstract virtual void add_BytesReceivedChanged(ICoreWebView2BytesReceivedChangedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_BytesReceivedChanged(EventRegistrationToken token);
    public abstract virtual void add_EstimatedEndTimeChanged(ICoreWebView2EstimatedEndTimeChangedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_EstimatedEndTimeChanged(EventRegistrationToken token);
    public abstract virtual void add_StateChanged(ICoreWebView2StateChangedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_StateChanged(EventRegistrationToken token);
    public abstract virtual string get_uri();
    public abstract virtual string get_ContentDisposition();
    public abstract virtual string get_MimeType();
    public abstract virtual long get_TotalBytesToReceive();
    public abstract virtual long get_BytesReceived();
    public abstract virtual string get_EstimatedEndTime();
    public abstract virtual string get_ResultFilePath();
    public abstract virtual COREWEBVIEW2_DOWNLOAD_STATE get_State();
    public abstract virtual COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON get_InterruptReason();
    public abstract virtual void Cancel();
    public abstract virtual void Pause();
    public abstract virtual void Resume();
    public abstract virtual int get_CanResume();
}
[CompilerGeneratedAttribute]
[GuidAttribute("E99BBE21-43E9-4544-A732-282764EAFA60")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2DownloadStartingEventArgs {
    [DispIdAttribute("1610678272")]
public ICoreWebView2DownloadOperation DownloadOperation { get; }
    [DispIdAttribute("1610678273")]
public int Cancel { get; public set; }
    [DispIdAttribute("1610678275")]
public string ResultFilePath { get; public set; }
    [DispIdAttribute("1610678277")]
public int Handled { get; public set; }
    public abstract virtual ICoreWebView2DownloadOperation get_DownloadOperation();
    public abstract virtual int get_Cancel();
    public abstract virtual void set_Cancel(int Cancel);
    public abstract virtual string get_ResultFilePath();
    public abstract virtual void set_ResultFilePath(string ResultFilePath);
    public abstract virtual int get_Handled();
    public abstract virtual void set_Handled(int Handled);
    public abstract virtual ICoreWebView2Deferral GetDeferral();
}
[CompilerGeneratedAttribute]
[GuidAttribute("EFEDC989-C396-41CA-83F7-07F845A55724")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2DownloadStartingEventHandler {
    public abstract virtual void Invoke(ICoreWebView2 sender, ICoreWebView2DownloadStartingEventArgs args);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("B96D755E-0319-4E92-A296-23436F46A1FC")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Environment {
    [DispIdAttribute("1610678274")]
public string BrowserVersionString { get; }
    public abstract virtual void CreateCoreWebView2Controller(IntPtr ParentWindow, ICoreWebView2CreateCoreWebView2ControllerCompletedHandler handler);
    public abstract virtual ICoreWebView2WebResourceResponse CreateWebResourceResponse(IStream Content, int StatusCode, string ReasonPhrase, string Headers);
    public abstract virtual string get_BrowserVersionString();
    public abstract virtual void add_NewBrowserVersionAvailable(ICoreWebView2NewBrowserVersionAvailableEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_NewBrowserVersionAvailable(EventRegistrationToken token);
}
[CompilerGeneratedAttribute]
[GuidAttribute("EE0EB9DF-6F12-46CE-B53F-3F47B9C928E0")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Environment10 {
    public void _VtblGap1_17();
    public abstract virtual ICoreWebView2ControllerOptions CreateCoreWebView2ControllerOptions();
    public abstract virtual void CreateCoreWebView2ControllerWithOptions(IntPtr ParentWindow, ICoreWebView2ControllerOptions options, ICoreWebView2CreateCoreWebView2ControllerCompletedHandler handler);
    public abstract virtual void CreateCoreWebView2CompositionControllerWithOptions(IntPtr ParentWindow, ICoreWebView2ControllerOptions options, ICoreWebView2CreateCoreWebView2CompositionControllerCompletedHandler handler);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("F0913DC6-A0EC-42EF-9805-91DFF3A2966A")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Environment11 {
    [DispIdAttribute("1611333632")]
public string FailureReportFolderPath { get; }
    public void _VtblGap1_20();
    public abstract virtual string get_FailureReportFolderPath();
}
[CompilerGeneratedAttribute]
[GuidAttribute("F503DB9B-739F-48DD-B151-FDFCF253F54E")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Environment12 {
    public void _VtblGap1_21();
    public abstract virtual ICoreWebView2SharedBuffer CreateSharedBuffer(ulong Size);
}
[CompilerGeneratedAttribute]
[GuidAttribute("AF641F58-72B2-11EE-B962-0242AC120002")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Environment13 {
    public void _VtblGap1_22();
    public abstract virtual void GetProcessExtendedInfos(ICoreWebView2GetProcessExtendedInfosCompletedHandler handler);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("A5E9FAD9-C875-59DA-9BD7-473AA5CA1CEF")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Environment14 {
    public void _VtblGap1_23();
    public abstract virtual ICoreWebView2FileSystemHandle CreateWebFileSystemFileHandle(string Path, COREWEBVIEW2_FILE_SYSTEM_HANDLE_PERMISSION Permission);
    public abstract virtual ICoreWebView2FileSystemHandle CreateWebFileSystemDirectoryHandle(string Path, COREWEBVIEW2_FILE_SYSTEM_HANDLE_PERMISSION Permission);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("41F3632B-5EF4-404F-AD82-2D606C5A9A21")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Environment2 {
    public void _VtblGap1_5();
    public abstract virtual ICoreWebView2WebResourceRequest CreateWebResourceRequest(string uri, string Method, IStream postData, string Headers);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("80A22AE3-BE7C-4CE2-AFE1-5A50056CDEEB")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Environment3 {
    public void _VtblGap1_6();
    public abstract virtual void CreateCoreWebView2CompositionController(IntPtr ParentWindow, ICoreWebView2CreateCoreWebView2CompositionControllerCompletedHandler handler);
    public abstract virtual ICoreWebView2PointerInfo CreateCoreWebView2PointerInfo();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("20944379-6DCF-41D6-A0A0-ABC0FC50DE0D")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Environment4 {
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("319E423D-E0D7-4B8D-9254-AE9475DE9B17")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Environment5 {
    public void _VtblGap1_9();
    public abstract virtual void add_BrowserProcessExited(ICoreWebView2BrowserProcessExitedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_BrowserProcessExited(EventRegistrationToken token);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("E59EE362-ACBD-4857-9A8E-D3644D9459A9")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Environment6 {
    public void _VtblGap1_11();
    public abstract virtual ICoreWebView2PrintSettings CreatePrintSettings();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("43C22296-3BBD-43A4-9C00-5C0DF6DD29A2")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Environment7 {
    [DispIdAttribute("1611071488")]
public string UserDataFolder { get; }
    public void _VtblGap1_12();
    public abstract virtual string get_UserDataFolder();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("D6EB91DD-C3D2-45E5-BD29-6DC2BC4DE9CF")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Environment8 {
    public void _VtblGap1_13();
    public abstract virtual void add_ProcessInfosChanged(ICoreWebView2ProcessInfosChangedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_ProcessInfosChanged(EventRegistrationToken token);
    public abstract virtual ICoreWebView2ProcessInfoCollection GetProcessInfos();
}
[CompilerGeneratedAttribute]
[GuidAttribute("F06F41BF-4B5A-49D8-B9F6-FA16CD29F274")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Environment9 {
    public void _VtblGap1_16();
    public abstract virtual ICoreWebView2ContextMenuItem CreateContextMenuItem(string Label, IStream iconStream, COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND Kind);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("2FDE08A8-1E9A-4766-8C05-95A9CEB9D1C5")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2EnvironmentOptions {
    [DispIdAttribute("1610678272")]
public string AdditionalBrowserArguments { get; public set; }
    [DispIdAttribute("1610678274")]
public string Language { get; public set; }
    [DispIdAttribute("1610678276")]
public string TargetCompatibleBrowserVersion { get; public set; }
    [DispIdAttribute("1610678278")]
public int AllowSingleSignOnUsingOSPrimaryAccount { get; public set; }
    public abstract virtual string get_AdditionalBrowserArguments();
    public abstract virtual void set_AdditionalBrowserArguments(string value);
    public abstract virtual string get_Language();
    public abstract virtual void set_Language(string value);
    public abstract virtual string get_TargetCompatibleBrowserVersion();
    public abstract virtual void set_TargetCompatibleBrowserVersion(string value);
    public abstract virtual int get_AllowSingleSignOnUsingOSPrimaryAccount();
    public abstract virtual void set_AllowSingleSignOnUsingOSPrimaryAccount(int allow);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("FF85C98A-1BA7-4A6B-90C8-2B752C89E9E2")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2EnvironmentOptions2 {
    [DispIdAttribute("1610678272")]
public int ExclusiveUserDataFolderAccess { get; public set; }
    public abstract virtual int get_ExclusiveUserDataFolderAccess();
    public abstract virtual void set_ExclusiveUserDataFolderAccess(int value);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("4A5C436E-A9E3-4A2E-89C3-910D3513F5CC")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2EnvironmentOptions3 {
    [DispIdAttribute("1610678272")]
public int IsCustomCrashReportingEnabled { get; public set; }
    public abstract virtual int get_IsCustomCrashReportingEnabled();
    public abstract virtual void set_IsCustomCrashReportingEnabled(int value);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("AC52D13F-0D38-475A-9DCA-876580D6793E")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2EnvironmentOptions4 {
    public abstract virtual void GetCustomSchemeRegistrations(UInt32& Count, IntPtr schemeRegistrations);
    public abstract virtual void SetCustomSchemeRegistrations(UInt32 Count, ICoreWebView2CustomSchemeRegistration& schemeRegistrations);
}
[CompilerGeneratedAttribute]
[GuidAttribute("0AE35D64-C47F-4464-814E-259C345D1501")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2EnvironmentOptions5 {
    [DispIdAttribute("1610678272")]
public int EnableTrackingPrevention { get; public set; }
    public abstract virtual int get_EnableTrackingPrevention();
    public abstract virtual void set_EnableTrackingPrevention(int value);
}
[CompilerGeneratedAttribute]
[GuidAttribute("57D29CC3-C84F-42A0-B0E2-EFFBD5E179DE")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2EnvironmentOptions6 {
    [DispIdAttribute("1610678272")]
public int AreBrowserExtensionsEnabled { get; public set; }
    public abstract virtual int get_AreBrowserExtensionsEnabled();
    public abstract virtual void set_AreBrowserExtensionsEnabled(int value);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("C48D539F-E39F-441C-AE68-1F66E570BDC5")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2EnvironmentOptions7 {
    [DispIdAttribute("1610678272")]
public COREWEBVIEW2_CHANNEL_SEARCH_KIND ChannelSearchKind { get; public set; }
    [DispIdAttribute("1610678274")]
public COREWEBVIEW2_RELEASE_CHANNELS ReleaseChannels { get; public set; }
    public abstract virtual COREWEBVIEW2_CHANNEL_SEARCH_KIND get_ChannelSearchKind();
    public abstract virtual void set_ChannelSearchKind(COREWEBVIEW2_CHANNEL_SEARCH_KIND value);
    public abstract virtual COREWEBVIEW2_RELEASE_CHANNELS get_ReleaseChannels();
    public abstract virtual void set_ReleaseChannels(COREWEBVIEW2_RELEASE_CHANNELS value);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("7C7ECF51-E918-5CAF-853C-E9A2BCC27775")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2EnvironmentOptions8 {
    [DispIdAttribute("1610678272")]
public COREWEBVIEW2_SCROLLBAR_STYLE ScrollBarStyle { get; public set; }
    public abstract virtual COREWEBVIEW2_SCROLLBAR_STYLE get_ScrollBarStyle();
    public abstract virtual void set_ScrollBarStyle(COREWEBVIEW2_SCROLLBAR_STYLE value);
}
[CompilerGeneratedAttribute]
[GuidAttribute("28F0D425-93FE-4E63-9F8D-2AEEC6D3BA1E")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2EstimatedEndTimeChangedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2DownloadOperation sender, object args);
}
[CompilerGeneratedAttribute]
[GuidAttribute("49511172-CC67-4BCA-9923-137112F4C4CC")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExecuteScriptCompletedHandler {
    public abstract virtual void Invoke(int errorCode, string result);
}
[CompilerGeneratedAttribute]
[GuidAttribute("0CE15963-3698-4DF7-9399-71ED6CDD8C9F")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExecuteScriptResult {
    [DispIdAttribute("1610678272")]
public int Succeeded { get; }
    [DispIdAttribute("1610678273")]
public string ResultAsJson { get; }
    [DispIdAttribute("1610678275")]
public ICoreWebView2ScriptException Exception { get; }
    public abstract virtual int get_Succeeded();
    public abstract virtual string get_ResultAsJson();
    public abstract virtual void TryGetResultAsString(String& stringResult, Int32& value);
    public abstract virtual ICoreWebView2ScriptException get_Exception();
}
[CompilerGeneratedAttribute]
[GuidAttribute("1BB5317B-8238-4C67-A7FF-BAF6558F289D")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExecuteScriptWithResultCompletedHandler {
    public abstract virtual void Invoke(int errorCode, ICoreWebView2ExecuteScriptResult result);
}
[CompilerGeneratedAttribute]
[GuidAttribute("A3D0C16A-9BA9-11EB-A8B3-0242AC130003")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Experimental {
    public abstract virtual void add_FrameCreated(ICoreWebView2FrameCreatedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_FrameCreated(EventRegistrationToken token);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("2F890C1D-02C1-4612-B2BA-E2CC0C7DA07C")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Experimental10 {
    public abstract virtual void add_BasicAuthenticationRequested(ICoreWebView2BasicAuthenticationRequestedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_BasicAuthenticationRequested(EventRegistrationToken token);
}
[CompilerGeneratedAttribute]
[GuidAttribute("9139C04D-8F37-42AE-8B63-01940C34D22F")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Experimental11 {
    [DispIdAttribute("1610678274")]
public int IsDefaultDownloadDialogOpen { get; }
    [DispIdAttribute("1610678277")]
public COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT DefaultDownloadDialogCornerAlignment { get; public set; }
    [DispIdAttribute("1610678279")]
public tagPOINT DefaultDownloadDialogMargin { get; public set; }
    public abstract virtual void add_IsDefaultDownloadDialogOpenChanged(ICoreWebView2IsDefaultDownloadDialogOpenChangedEventHandler handler, EventRegistrationToken& token);
    public abstract virtual void remove_IsDefaultDownloadDialogOpenChanged(EventRegistrationToken token);
    public abstract virtual int get_IsDefaultDownloadDialogOpen();
    public abstract virtual void OpenDefaultDownloadDialog();
    public abstract virtual void CloseDefaultDownloadDialog();
    public abstract virtual COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT get_DefaultDownloadDialogCornerAlignment();
    public abstract virtual void set_DefaultDownloadDialogCornerAlignment(COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT value);
    public abstract virtual tagPOINT get_DefaultDownloadDialogMargin();
    public abstract virtual void set_DefaultDownloadDialogMargin(tagPOINT value);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("2B1AAA06-CE28-4565-AE06-26404C2E8D10")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Experimental12 {
    [DispIdAttribute("1610678274")]
public string FaviconUri { get; }
    public abstract virtual void add_FaviconChanged(ICoreWebView2FaviconChangedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_FaviconChanged(EventRegistrationToken token);
    public abstract virtual string get_FaviconUri();
    public abstract virtual void GetFavicon(COREWEBVIEW2_FAVICON_IMAGE_FORMAT format, ICoreWebView2GetFaviconCompletedHandler completedHandler);
}
[CompilerGeneratedAttribute]
[GuidAttribute("1A90E7B5-2E71-427B-8EA5-119C7088ED24")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Experimental13 {
    [DispIdAttribute("1610678274")]
public string StatusBarText { get; }
    public abstract virtual void add_StatusBarTextChanged(ICoreWebView2StatusBarTextChangedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_StatusBarTextChanged(EventRegistrationToken token);
    public abstract virtual string get_StatusBarText();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("C8F5F3A6-9890-4A1A-AF82-9C86CC99C2D6")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Experimental14 {
    public abstract virtual void CallDevToolsProtocolMethodForSession(string sessionId, string methodName, string parametersAsJson, ICoreWebView2CallDevToolsProtocolMethodCompletedHandler handler);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("D267CA18-6779-49F9-B18E-75C25C61FA9B")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Experimental15 {
    public abstract virtual void add_ServerCertificateErrorDetected(ICoreWebView2ServerCertificateErrorDetectedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_ServerCertificateErrorDetected(EventRegistrationToken token);
    public abstract virtual void ClearServerCertificateErrorActions(ICoreWebView2ClearServerCertificateErrorActionsCompletedHandler handler);
}
[CompilerGeneratedAttribute]
[GuidAttribute("679DDF3F-9044-486F-8458-16653A0E1603")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Experimental16 {
    public abstract virtual void AddWebResourceRequestedFilterWithRequestSourceKinds(string uri, COREWEBVIEW2_WEB_RESOURCE_CONTEXT ResourceContext, COREWEBVIEW2_WEB_RESOURCE_REQUEST_SOURCE_KINDS requestSourceKinds);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("531FFEE9-6225-43F3-9EA9-5AD3EC887EFD")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Experimental17 {
    public abstract virtual void Print(ICoreWebView2PrintSettings printSettings, ICoreWebView2PrintCompletedHandler handler);
    public abstract virtual void ShowPrintUI(COREWEBVIEW2_PRINT_DIALOG_KIND printDialogKind);
    public abstract virtual void PrintToPdfStream(ICoreWebView2PrintSettings printSettings, ICoreWebView2PrintToPdfStreamCompletedHandler handler);
}
[CompilerGeneratedAttribute]
[GuidAttribute("B96480A2-167A-469F-A090-5F0F5C88DBE4")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Experimental18 {
    public abstract virtual void PostSharedBufferToScript(ICoreWebView2SharedBuffer sharedBuffer, COREWEBVIEW2_SHARED_BUFFER_ACCESS access, string additionalDataAsJson);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("4C765E35-5BEB-4631-B931-5E52D9B0A9BE")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Experimental19 {
    public abstract virtual void ExecuteScriptWithResult(string javaScript, ICoreWebView2ExecuteScriptWithResultCompletedHandler handler);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("84E547A6-2CF7-4966-A44E-3DD10BE69A7F")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Experimental2 {
    public abstract virtual void add_DownloadStarting(ICoreWebView2DownloadStartingEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_DownloadStarting(EventRegistrationToken token);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("5A4D0ECF-3FE5-4456-ACE5-D317CCA0EFF1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Experimental20 {
    [DispIdAttribute("1610678272")]
public string CustomDataPartitionId { get; public set; }
    public abstract virtual string get_CustomDataPartitionId();
    public abstract virtual void set_CustomDataPartitionId(string value);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("30686D89-34FA-4327-B5A3-D59954203F7C")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Experimental21 {
    public abstract virtual void add_LaunchingExternalUriScheme(ICoreWebView2LaunchingExternalUriSchemeEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_LaunchingExternalUriScheme(EventRegistrationToken token);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("6C2FC9EE-83F1-4F0B-80E3-D82AB977E698")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Experimental22 {
    public abstract virtual void add_NotificationReceived(ICoreWebView2NotificationReceivedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_NotificationReceived(EventRegistrationToken token);
}
[CompilerGeneratedAttribute]
[GuidAttribute("D69032E2-1F6A-11EE-BE56-0242AC120002")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Experimental23 {
    [DispIdAttribute("1610678272")]
public UInt32 FrameId { get; }
    public abstract virtual UInt32 get_FrameId();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("14F618A6-0E5E-560A-951F-ED7C8EACFE00")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Experimental24 {
    public abstract virtual void PostWebMessageAsJsonWithAdditionalObjects(string webMessageAsJson, ICoreWebView2ObjectCollectionView additionalObjects);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("A87D6F2F-FC6B-5135-93EF-52E6E46A7456")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Experimental25 {
    public abstract virtual void ShowSaveAsUI(ICoreWebView2ShowSaveAsUICompletedHandler handler);
    public abstract virtual void add_SaveAsUIShowing(ICoreWebView2SaveAsUIShowingEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_SaveAsUIShowing(EventRegistrationToken token);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("B812BCC9-7DC8-553D-9E0D-DAC0E4A6657F")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Experimental26 {
    public abstract virtual void add_ScreenCaptureStarting(ICoreWebView2ExperimentalScreenCaptureStartingEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_ScreenCaptureStarting(EventRegistrationToken token);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("16163F44-CA9A-57BF-BA68-BF531988584B")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Experimental27 {
    public abstract virtual void add_SaveFileSecurityCheckStarting(ICoreWebView2ExperimentalSaveFileSecurityCheckStartingEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_SaveFileSecurityCheckStarting(EventRegistrationToken token);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("F811AA06-BCC3-11EB-8529-0242AC130003")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Experimental3 {
    public abstract virtual void add_ClientCertificateRequested(ICoreWebView2ClientCertificateRequestedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_ClientCertificateRequested(EventRegistrationToken token);
}
[CompilerGeneratedAttribute]
[GuidAttribute("9865766B-D7C1-49FC-816E-F54AAEE3396D")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Experimental4 {
    public abstract virtual void OpenTaskManagerWindow();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("E05E04CA-7924-4C04-A84C-A90572DBA22A")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Experimental5 {
    [DispIdAttribute("1610678272")]
public COREWEBVIEW2_MEMORY_USAGE_TARGET_LEVEL MemoryUsageTargetLevel { get; public set; }
    public abstract virtual COREWEBVIEW2_MEMORY_USAGE_TARGET_LEVEL get_MemoryUsageTargetLevel();
    public abstract virtual void set_MemoryUsageTargetLevel(COREWEBVIEW2_MEMORY_USAGE_TARGET_LEVEL value);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("5DA51469-DCFB-435E-8ABE-E716312C577E")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Experimental6 {
    public abstract virtual void add_ContextMenuRequested(ICoreWebView2ContextMenuRequestedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_ContextMenuRequested(EventRegistrationToken token);
}
[CompilerGeneratedAttribute]
[GuidAttribute("72A78E99-C92E-4616-8130-D57407EC5341")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Experimental7 {
    public abstract virtual void PrintToPdf(string ResultFilePath, ICoreWebView2PrintSettings printSettings, ICoreWebView2PrintToPdfCompletedHandler handler);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("B753B024-05C5-40AC-A3F4-701C6F7491F5")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Experimental8 {
    [DispIdAttribute("1610678272")]
public ICoreWebView2Profile Profile { get; }
    public abstract virtual ICoreWebView2Profile get_Profile();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("F80EDFF2-EF0A-4B35-919B-AA9863E732AA")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Experimental9 {
    [DispIdAttribute("1610678274")]
public int IsMuted { get; public set; }
    [DispIdAttribute("1610678278")]
public int IsDocumentPlayingAudio { get; }
    public abstract virtual void add_IsMutedChanged(ICoreWebView2IsMutedChangedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_IsMutedChanged(EventRegistrationToken token);
    public abstract virtual int get_IsMuted();
    public abstract virtual void set_IsMuted(int value);
    public abstract virtual void add_IsDocumentPlayingAudioChanged(ICoreWebView2IsDocumentPlayingAudioChangedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_IsDocumentPlayingAudioChanged(EventRegistrationToken token);
    public abstract virtual int get_IsDocumentPlayingAudio();
}
[CompilerGeneratedAttribute]
[GuidAttribute("FE753727-5758-4FEA-8CAD-1E685B9C3AE8")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalClearCustomDataPartitionCompletedHandler {
    public abstract virtual void Invoke(int errorCode);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("B134916B-A104-4D2A-9567-C2FD53714350")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalCompositionController3 {
    public void _VtblGap1_1();
    public abstract virtual void DragLeave();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("E6041D7F-18AC-4654-A04E-8B3F81251C33")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalCompositionController4 {
    public void _VtblGap1_1();
    public abstract virtual ICoreWebView2PointerInfo CreateCoreWebView2PointerInfoFromPointerId(UInt32 PointerId, IntPtr ParentWindow, COREWEBVIEW2_MATRIX_4X4 transform);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("58355A8F-D084-4074-B659-9B94072C87EA")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalCompositionController5 {
    public abstract virtual COREWEBVIEW2_NON_CLIENT_REGION_KIND GetNonClientRegionAtPoint(tagPOINT point);
    public abstract virtual ICoreWebView2RegionRectCollectionView QueryNonClientRegion(COREWEBVIEW2_NON_CLIENT_REGION_KIND Kind);
    public abstract virtual void add_NonClientRegionChanged(ICoreWebView2NonClientRegionChangedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_NonClientRegionChanged(EventRegistrationToken token);
}
[CompilerGeneratedAttribute]
[GuidAttribute("3413543F-7A0E-4B56-98C1-7AF3A37416CA")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalController {
    [DispIdAttribute("1610678272")]
public double RasterizationScale { get; public set; }
    [DispIdAttribute("1610678274")]
public int ShouldDetectMonitorScaleChanges { get; public set; }
    [DispIdAttribute("1610678278")]
public COREWEBVIEW2_BOUNDS_MODE BoundsMode { get; public set; }
    public abstract virtual double get_RasterizationScale();
    public abstract virtual void set_RasterizationScale(double scale);
    public abstract virtual int get_ShouldDetectMonitorScaleChanges();
    public abstract virtual void set_ShouldDetectMonitorScaleChanges(int value);
    public abstract virtual void add_RasterizationScaleChanged(ICoreWebView2ExperimentalRasterizationScaleChangedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_RasterizationScaleChanged(EventRegistrationToken token);
    public abstract virtual COREWEBVIEW2_BOUNDS_MODE get_BoundsMode();
    public abstract virtual void set_BoundsMode(COREWEBVIEW2_BOUNDS_MODE BoundsMode);
}
[CompilerGeneratedAttribute]
[GuidAttribute("320613E2-990F-4272-BF90-D243A4FF1B8A")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalController2 {
    [DispIdAttribute("1610678272")]
public int AllowExternalDrop { get; public set; }
    public abstract virtual int get_AllowExternalDrop();
    public abstract virtual void set_AllowExternalDrop(int value);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("73D95300-647F-11ED-B7E6-0BADDC91AC6B")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalControllerOptions {
    [DispIdAttribute("1610678272")]
public string LocaleRegion { get; public set; }
    public abstract virtual string get_LocaleRegion();
    public abstract virtual void set_LocaleRegion(string value);
}
[CompilerGeneratedAttribute]
[GuidAttribute("04C3310B-06C0-4861-A7AF-5C7E78E06F88")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalControllerOptions2 {
    [DispIdAttribute("1610678272")]
public int AllowHostInputProcessing { get; public set; }
    public abstract virtual int get_AllowHostInputProcessing();
    public abstract virtual void set_AllowHostInputProcessing(int value);
}
[CompilerGeneratedAttribute]
[GuidAttribute("93186BDD-0499-4939-AD58-FBC5ED97AE11")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalEnvironment {
    [DispIdAttribute("1610678272")]
public string FailureReportFolderPath { get; }
    public abstract virtual string get_FailureReportFolderPath();
}
[CompilerGeneratedAttribute]
[GuidAttribute("3C5BACE3-FF8E-44EA-9C7F-05AFA948A7B1")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalEnvironment10 {
    public abstract virtual ICoreWebView2SharedBuffer CreateSharedBuffer(ulong Size);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("BB686E08-1F6A-11EE-BE56-0242AC120002")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalEnvironment11 {
    public abstract virtual void GetProcessInfosWithDetails(ICoreWebView2ExperimentalGetProcessInfosWithDetailsCompletedHandler handler);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("96C27A45-F142-4873-80AD-9D0CD899B2B9")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalEnvironment12 {
    [DispIdAttribute("1610678273")]
public ulong RenderAdapterLUID { get; }
    public abstract virtual ICoreWebView2ExperimentalTextureStream CreateTextureStream(string streamId, object d3dDevice);
    public abstract virtual ulong get_RenderAdapterLUID();
    public abstract virtual void add_RenderAdapterLUIDChanged(ICoreWebView2ExperimentalRenderAdapterLUIDChangedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_RenderAdapterLUIDChanged(EventRegistrationToken token);
}
[CompilerGeneratedAttribute]
[GuidAttribute("0F1416A0-3BC3-11EE-BE56-0242AC120002")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalEnvironment13 {
    public abstract virtual void GetProcessExtendedInfos(ICoreWebView2GetProcessExtendedInfosCompletedHandler handler);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("1F7F1DE1-59CA-5047-AC4F-56B21D736C95")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalEnvironment14 {
    public abstract virtual ICoreWebView2FileSystemHandle CreateWebFileSystemFileHandle(string Path, COREWEBVIEW2_FILE_SYSTEM_HANDLE_PERMISSION Permission);
    public abstract virtual ICoreWebView2FileSystemHandle CreateWebFileSystemDirectoryHandle(string Path, COREWEBVIEW2_FILE_SYSTEM_HANDLE_PERMISSION Permission);
}
[CompilerGeneratedAttribute]
[GuidAttribute("37B54FD4-1AD9-4C1F-BD14-9DABA9FDEB26")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalEnvironment2 {
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("9A2BE885-7F0B-4B26-B6DD-C969BAA00BF1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalEnvironment3 {
    public abstract virtual void UpdateRuntime(ICoreWebView2ExperimentalUpdateRuntimeCompletedHandler handler);
}
[CompilerGeneratedAttribute]
[GuidAttribute("0204E16B-7BC8-4BDC-94D7-1E70C4D1A8A7")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalEnvironment4 {
    public abstract virtual void add_BrowserProcessExited(ICoreWebView2BrowserProcessExitedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_BrowserProcessExited(EventRegistrationToken token);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("083CB0D7-E464-4108-807E-80AE4EAA3B28")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalEnvironment5 {
    [DispIdAttribute("1610678272")]
public string UserDataFolder { get; }
    public abstract virtual string get_UserDataFolder();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("04D4FE1D-AB87-42FB-A898-DA241D35B63C")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalEnvironment6 {
    public abstract virtual ICoreWebView2ContextMenuItem CreateContextMenuItem(string Label, IStream iconStream, COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND Kind);
}
[CompilerGeneratedAttribute]
[GuidAttribute("A584BE6B-141F-48AA-A2AF-88DA1C98950C")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalEnvironment7 {
    public abstract virtual ICoreWebView2PrintSettings CreatePrintSettings();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("AE714520-D062-4D20-9D08-5096F590ED1A")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalEnvironment8 {
    public abstract virtual ICoreWebView2ControllerOptions CreateCoreWebView2ControllerOptions(string ProfileName, int IsInPrivateModeEnabled);
}
[CompilerGeneratedAttribute]
[GuidAttribute("B0BCE74E-4E55-4201-A776-86012BE93981")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalEnvironment9 {
    public abstract virtual void add_ProcessInfosChanged(ICoreWebView2ProcessInfosChangedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_ProcessInfosChanged(EventRegistrationToken token);
    public abstract virtual ICoreWebView2ProcessInfoCollection GetProcessInfos();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("423BA05F-55DD-4C50-8339-22AFD009ED31")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalFrame {
    public abstract virtual void add_NavigationStarting(ICoreWebView2FrameNavigationStartingEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_NavigationStarting(EventRegistrationToken token);
    public abstract virtual void add_ContentLoading(ICoreWebView2FrameContentLoadingEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_ContentLoading(EventRegistrationToken token);
    public abstract virtual void add_NavigationCompleted(ICoreWebView2FrameNavigationCompletedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_NavigationCompleted(EventRegistrationToken token);
    public abstract virtual void add_DOMContentLoaded(ICoreWebView2FrameDOMContentLoadedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_DOMContentLoaded(EventRegistrationToken token);
    public abstract virtual void ExecuteScript(string javaScript, ICoreWebView2ExecuteScriptCompletedHandler handler);
}
[CompilerGeneratedAttribute]
[GuidAttribute("3FE03F21-30D5-45C1-B31F-2F5881EF11A3")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalFrame2 {
    public abstract virtual void PostWebMessageAsJson(string webMessageAsJson);
    public abstract virtual void PostWebMessageAsString(string webMessageAsString);
    public abstract virtual void add_WebMessageReceived(ICoreWebView2FrameWebMessageReceivedEventHandler handler, EventRegistrationToken& token);
    public abstract virtual void remove_WebMessageReceived(EventRegistrationToken token);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("6939FEF6-01AB-4B24-B639-7C1B82BC0984")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalFrame3 {
    public abstract virtual void add_PermissionRequested(ICoreWebView2FramePermissionRequestedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_PermissionRequested(EventRegistrationToken token);
}
[CompilerGeneratedAttribute]
[GuidAttribute("92CF9F34-F403-4D46-BFC3-0B5ED17D55CA")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalFrame4 {
    public abstract virtual void PostSharedBufferToScript(ICoreWebView2SharedBuffer sharedBuffer, COREWEBVIEW2_SHARED_BUFFER_ACCESS access, string additionalDataAsJson);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("CFE70560-1F6A-11EE-BE56-0242AC120002")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalFrame5 {
    [DispIdAttribute("1610678272")]
public UInt32 FrameId { get; }
    public abstract virtual UInt32 get_FrameId();
}
[CompilerGeneratedAttribute]
[GuidAttribute("9245FC85-C957-5332-8624-D2CE7F79B2E8")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalFrame6 {
    public abstract virtual void add_ScreenCaptureStarting(ICoreWebView2ExperimentalFrameScreenCaptureStartingEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_ScreenCaptureStarting(EventRegistrationToken token);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("792DB210-2297-54E6-8C57-0CEE4D38CD8B")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalFrame7 {
    [DispIdAttribute("1610678272")]
public int UseOverrideTimerWakeInterval { get; public set; }
    public abstract virtual int get_UseOverrideTimerWakeInterval();
    public abstract virtual void set_UseOverrideTimerWakeInterval(int value);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("C76EC710-1F6A-11EE-BE56-0242AC120002")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalFrameInfo {
    [DispIdAttribute("1610678272")]
public ICoreWebView2FrameInfo ParentFrameInfo { get; }
    [DispIdAttribute("1610678273")]
public UInt32 FrameId { get; }
    [DispIdAttribute("1610678274")]
public COREWEBVIEW2_FRAME_KIND FrameKind { get; }
    public abstract virtual ICoreWebView2FrameInfo get_ParentFrameInfo();
    public abstract virtual UInt32 get_FrameId();
    public abstract virtual COREWEBVIEW2_FRAME_KIND get_FrameKind();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("A6C1D8AD-BB80-59C5-895B-FBA1698B9309")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalFrameScreenCaptureStartingEventHandler {
    public abstract virtual void Invoke(ICoreWebView2Frame sender, ICoreWebView2ExperimentalScreenCaptureStartingEventArgs args);
}
[CompilerGeneratedAttribute]
[GuidAttribute("A77AD99E-1F6A-11EE-BE56-0242AC120002")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalGetProcessInfosWithDetailsCompletedHandler {
    public abstract virtual void Invoke(int errorCode, ICoreWebView2ProcessInfoCollection result);
}
[CompilerGeneratedAttribute]
[GuidAttribute("6B18B9FD-DE08-4F73-9B93-3ACA84EBC16F")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalNavigationStartingEventArgs {
    [DispIdAttribute("1610678272")]
public string AdditionalAllowedFrameAncestors { get; public set; }
    public abstract virtual string get_AdditionalAllowedFrameAncestors();
    public abstract virtual void set_AdditionalAllowedFrameAncestors(string value);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("924C5E75-3D03-44DE-A44F-F58C98936ED0")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalNavigationStartingEventArgs2 {
    [DispIdAttribute("1610678272")]
public COREWEBVIEW2_NAVIGATION_KIND NavigationKind { get; }
    public abstract virtual COREWEBVIEW2_NAVIGATION_KIND get_NavigationKind();
}
[CompilerGeneratedAttribute]
[GuidAttribute("F813E079-73BA-4E6F-A4A8-D08C8358FDEB")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalNewWindowRequestedEventArgs {
    [DispIdAttribute("1610678272")]
public string Name { get; }
    public abstract virtual string get_name();
}
[CompilerGeneratedAttribute]
[GuidAttribute("92F08D94-70BD-4D2B-8332-18BD7D3B2B7C")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalNewWindowRequestedEventArgs2 {
    [DispIdAttribute("1610678272")]
public ICoreWebView2FrameInfo OriginalSourceFrameInfo { get; }
    public abstract virtual ICoreWebView2FrameInfo get_OriginalSourceFrameInfo();
}
[CompilerGeneratedAttribute]
[GuidAttribute("F07D42BA-20D8-49CD-8CA5-5CAE71EF9686")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalPrintSettings2 {
    [DispIdAttribute("1610678272")]
public string PageRanges { get; public set; }
    [DispIdAttribute("1610678274")]
public int PagesPerSide { get; public set; }
    [DispIdAttribute("1610678276")]
public int Copies { get; public set; }
    [DispIdAttribute("1610678278")]
public COREWEBVIEW2_PRINT_COLLATION Collation { get; public set; }
    [DispIdAttribute("1610678280")]
public COREWEBVIEW2_PRINT_COLOR_MODE ColorMode { get; public set; }
    [DispIdAttribute("1610678282")]
public COREWEBVIEW2_PRINT_DUPLEX Duplex { get; public set; }
    [DispIdAttribute("1610678284")]
public COREWEBVIEW2_PRINT_MEDIA_SIZE MediaSize { get; public set; }
    [DispIdAttribute("1610678286")]
public string PrinterName { get; public set; }
    public abstract virtual string get_PageRanges();
    public abstract virtual void set_PageRanges(string value);
    public abstract virtual int get_PagesPerSide();
    public abstract virtual void set_PagesPerSide(int value);
    public abstract virtual int get_Copies();
    public abstract virtual void set_Copies(int value);
    public abstract virtual COREWEBVIEW2_PRINT_COLLATION get_Collation();
    public abstract virtual void set_Collation(COREWEBVIEW2_PRINT_COLLATION value);
    public abstract virtual COREWEBVIEW2_PRINT_COLOR_MODE get_ColorMode();
    public abstract virtual void set_ColorMode(COREWEBVIEW2_PRINT_COLOR_MODE value);
    public abstract virtual COREWEBVIEW2_PRINT_DUPLEX get_Duplex();
    public abstract virtual void set_Duplex(COREWEBVIEW2_PRINT_DUPLEX value);
    public abstract virtual COREWEBVIEW2_PRINT_MEDIA_SIZE get_MediaSize();
    public abstract virtual void set_MediaSize(COREWEBVIEW2_PRINT_MEDIA_SIZE value);
    public abstract virtual string get_PrinterName();
    public abstract virtual void set_PrinterName(string value);
}
[CompilerGeneratedAttribute]
[GuidAttribute("A9FC1AF8-F934-4F0F-A788-7BE0808C329B")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalProcessFailedEventArgs {
    [DispIdAttribute("1610678272")]
public string FailureSourceModulePath { get; }
    public abstract virtual string get_FailureSourceModulePath();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("B120F7D0-1F6A-11EE-BE56-0242AC120002")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalProcessInfo {
    [DispIdAttribute("1610678272")]
public ICoreWebView2FrameInfoCollection AssociatedFrameInfos { get; }
    public abstract virtual ICoreWebView2FrameInfoCollection get_AssociatedFrameInfos();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("172F43A5-8886-4D61-9564-579DA293BC1D")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalProfile10 {
    public abstract virtual void Delete();
    public abstract virtual void add_Deleted(ICoreWebView2ProfileDeletedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_Deleted(EventRegistrationToken token);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("67350288-FAFC-43BC-B229-3D61255F85A8")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalProfile11 {
    [DispIdAttribute("1610678272")]
public int IsPasswordAutosaveEnabled { get; public set; }
    [DispIdAttribute("1610678274")]
public int IsGeneralAutofillEnabled { get; public set; }
    public abstract virtual int get_IsPasswordAutosaveEnabled();
    public abstract virtual void set_IsPasswordAutosaveEnabled(int value);
    public abstract virtual int get_IsGeneralAutofillEnabled();
    public abstract virtual void set_IsGeneralAutofillEnabled(int value);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("8E878D12-E3BE-4DC6-94E9-3D1EBD06B025")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalProfile12 {
    public abstract virtual void AddBrowserExtension(string extensionFolderPath, ICoreWebView2ProfileAddBrowserExtensionCompletedHandler handler);
    public abstract virtual void GetBrowserExtensions(ICoreWebView2ProfileGetBrowserExtensionsCompletedHandler handler);
}
[CompilerGeneratedAttribute]
[GuidAttribute("EE9E58ED-807B-4648-9171-8C0922EFE071")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalProfile2 {
    [DispIdAttribute("1610678272")]
public COREWEBVIEW2_PREFERRED_COLOR_SCHEME PreferredColorScheme { get; public set; }
    public abstract virtual COREWEBVIEW2_PREFERRED_COLOR_SCHEME get_PreferredColorScheme();
    public abstract virtual void set_PreferredColorScheme(COREWEBVIEW2_PREFERRED_COLOR_SCHEME value);
}
[CompilerGeneratedAttribute]
[GuidAttribute("4E4D8937-7FC7-4D40-A101-D3C74BBC3785")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalProfile3 {
    [DispIdAttribute("1610678272")]
public string DefaultDownloadFolderPath { get; public set; }
    public abstract virtual string get_DefaultDownloadFolderPath();
    public abstract virtual void set_DefaultDownloadFolderPath(string value);
}
[CompilerGeneratedAttribute]
[GuidAttribute("EE38B7E1-221D-465D-864B-EA4C22194DCA")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalProfile4 {
    public abstract virtual void ClearBrowsingData(COREWEBVIEW2_BROWSING_DATA_KINDS dataKinds, ICoreWebView2ClearBrowsingDataCompletedHandler handler);
}
[CompilerGeneratedAttribute]
[GuidAttribute("89B9907D-863E-4B1A-9C8C-0A80F0045622")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalProfile5 {
    [DispIdAttribute("1610678272")]
public COREWEBVIEW2_TRACKING_PREVENTION_LEVEL PreferredTrackingPreventionLevel { get; public set; }
    public abstract virtual COREWEBVIEW2_TRACKING_PREVENTION_LEVEL get_PreferredTrackingPreventionLevel();
    public abstract virtual void set_PreferredTrackingPreventionLevel(COREWEBVIEW2_TRACKING_PREVENTION_LEVEL value);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("CF9A4B21-5022-4E67-983D-922DDD53D4B6")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalProfile6 {
    public abstract virtual void SetPermissionState(COREWEBVIEW2_PERMISSION_KIND PermissionKind, string origin, COREWEBVIEW2_PERMISSION_STATE State, ICoreWebView2SetPermissionStateCompletedHandler handler);
    public abstract virtual void GetNonDefaultPermissionSettings(ICoreWebView2GetNonDefaultPermissionSettingsCompletedHandler handler);
}
[CompilerGeneratedAttribute]
[GuidAttribute("11A14762-7780-46A1-A1C3-73DE812DAE12")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalProfile7 {
    public abstract virtual void ClearCustomDataPartition(string CustomDataPartitionId, ICoreWebView2ExperimentalClearCustomDataPartitionCompletedHandler handler);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("1CEBCF6D-A446-72AD-49AF-376EBA77BE26")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalProfile8 {
    [DispIdAttribute("1610678272")]
public ICoreWebView2CookieManager CookieManager { get; }
    public abstract virtual ICoreWebView2CookieManager get_CookieManager();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("51560BE0-0AD4-4157-90CF-E6DAD638D8AA")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalRasterizationScaleChangedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2ExperimentalController sender, object args);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("431721E0-0F18-4D7B-BD4D-E5B1522BB110")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalRenderAdapterLUIDChangedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2ExperimentalEnvironment12 sender, object args);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("CF4FF1D1-5A67-5660-8D63-EF699881EA65")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalSaveFileSecurityCheckStartingEventArgs {
    [DispIdAttribute("1610678272")]
public int CancelSave { get; public set; }
    [DispIdAttribute("1610678274")]
public string DocumentOriginUri { get; }
    [DispIdAttribute("1610678275")]
public string FileExtension { get; }
    [DispIdAttribute("1610678276")]
public string FilePath { get; }
    [DispIdAttribute("1610678277")]
public int SuppressDefaultPolicy { get; public set; }
    public abstract virtual int get_CancelSave();
    public abstract virtual void set_CancelSave(int value);
    public abstract virtual string get_DocumentOriginUri();
    public abstract virtual string get_FileExtension();
    public abstract virtual string get_FilePath();
    public abstract virtual int get_SuppressDefaultPolicy();
    public abstract virtual void set_SuppressDefaultPolicy(int value);
    public abstract virtual ICoreWebView2Deferral GetDeferral();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("7899576C-19E3-57C8-B7D1-55808292DE57")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalSaveFileSecurityCheckStartingEventHandler {
    public abstract virtual void Invoke(ICoreWebView2 sender, ICoreWebView2ExperimentalSaveFileSecurityCheckStartingEventArgs args);
}
[CompilerGeneratedAttribute]
[GuidAttribute("892C03FD-AEE3-5EBA-A1FA-6FD2F6484B2B")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalScreenCaptureStartingEventArgs {
    [DispIdAttribute("1610678272")]
public int Cancel { get; public set; }
    [DispIdAttribute("1610678274")]
public int Handled { get; public set; }
    [DispIdAttribute("1610678276")]
public ICoreWebView2FrameInfo OriginalSourceFrameInfo { get; }
    public abstract virtual int get_Cancel();
    public abstract virtual void set_Cancel(int value);
    public abstract virtual int get_Handled();
    public abstract virtual void set_Handled(int value);
    public abstract virtual ICoreWebView2FrameInfo get_OriginalSourceFrameInfo();
    public abstract virtual ICoreWebView2Deferral GetDeferral();
}
[CompilerGeneratedAttribute]
[GuidAttribute("E24FF05A-1DB5-59D9-89F3-3C864268DB4A")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalScreenCaptureStartingEventHandler {
    public abstract virtual void Invoke(ICoreWebView2 sender, ICoreWebView2ExperimentalScreenCaptureStartingEventArgs args);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("684CBEEF-47BA-4D4A-99F4-976113F9F10A")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalSettings {
    [DispIdAttribute("1610678272")]
public string UserAgent { get; public set; }
    public abstract virtual string get_UserAgent();
    public abstract virtual void set_UserAgent(string value);
}
[CompilerGeneratedAttribute]
[GuidAttribute("6CC748D4-51C5-415C-AC97-77A15FFED939")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalSettings2 {
    [DispIdAttribute("1610678272")]
public int AreBrowserAcceleratorKeysEnabled { get; public set; }
    public abstract virtual int get_AreBrowserAcceleratorKeysEnabled();
    public abstract virtual void set_AreBrowserAcceleratorKeysEnabled(int value);
}
[CompilerGeneratedAttribute]
[GuidAttribute("B3D0D3FA-19B4-46BE-8008-B49EB1533260")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalSettings3 {
    [DispIdAttribute("1610678274")]
public int IsGeneralAutofillEnabled { get; public set; }
    public void _VtblGap1_2();
    public abstract virtual int get_IsGeneralAutofillEnabled();
    public abstract virtual void set_IsGeneralAutofillEnabled(int IsGeneralAutofillEnabled);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("19F47D09-D208-4FEB-9E19-A3AFD2FE13CA")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalSettings4 {
    [DispIdAttribute("1610678272")]
public int IsPinchZoomEnabled { get; public set; }
    public abstract virtual int get_IsPinchZoomEnabled();
    public abstract virtual void set_IsPinchZoomEnabled(int value);
}
[CompilerGeneratedAttribute]
[GuidAttribute("45B1F964-F703-47AC-A19A-B589DD0C5559")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalSettings5 {
    [DispIdAttribute("1610678272")]
public int IsSwipeNavigationEnabled { get; public set; }
    public abstract virtual int get_IsSwipeNavigationEnabled();
    public abstract virtual void set_IsSwipeNavigationEnabled(int value);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("D98DE66D-46D7-4090-91E1-EDF8E66FDB7B")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalSettings6 {
    [DispIdAttribute("1610678272")]
public COREWEBVIEW2_PDF_TOOLBAR_ITEMS HiddenPdfToolbarItems { get; public set; }
    public abstract virtual COREWEBVIEW2_PDF_TOOLBAR_ITEMS get_HiddenPdfToolbarItems();
    public abstract virtual void set_HiddenPdfToolbarItems(COREWEBVIEW2_PDF_TOOLBAR_ITEMS value);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("D667D3A7-C1B7-479F-8833-DB7547DF6687")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalSettings7 {
    [DispIdAttribute("1610678272")]
public int IsReputationCheckingRequired { get; public set; }
    public abstract virtual int get_IsReputationCheckingRequired();
    public abstract virtual void set_IsReputationCheckingRequired(int value);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("351AB928-752F-465F-8AF3-4FF716C43121")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalSettings8 {
    [DispIdAttribute("1610678272")]
public int IsNonClientRegionSupportEnabled { get; public set; }
    public abstract virtual int get_IsNonClientRegionSupportEnabled();
    public abstract virtual void set_IsNonClientRegionSupportEnabled(int value);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("0A4CF350-B8AB-5821-81B0-9C58A592423F")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalSettings9 {
    [DispIdAttribute("1610678272")]
public int PreferredBackgroundTimerWakeIntervalInMilliseconds { get; public set; }
    [DispIdAttribute("1610678274")]
public int PreferredForegroundTimerWakeIntervalInMilliseconds { get; public set; }
    [DispIdAttribute("1610678276")]
public int PreferredIntensiveTimerWakeIntervalInMilliseconds { get; public set; }
    [DispIdAttribute("1610678278")]
public int PreferredOverrideTimerWakeIntervalInMilliseconds { get; public set; }
    public abstract virtual int get_PreferredBackgroundTimerWakeIntervalInMilliseconds();
    public abstract virtual void set_PreferredBackgroundTimerWakeIntervalInMilliseconds(int value);
    public abstract virtual int get_PreferredForegroundTimerWakeIntervalInMilliseconds();
    public abstract virtual void set_PreferredForegroundTimerWakeIntervalInMilliseconds(int value);
    public abstract virtual int get_PreferredIntensiveTimerWakeIntervalInMilliseconds();
    public abstract virtual void set_PreferredIntensiveTimerWakeIntervalInMilliseconds(int value);
    public abstract virtual int get_PreferredOverrideTimerWakeIntervalInMilliseconds();
    public abstract virtual void set_PreferredOverrideTimerWakeIntervalInMilliseconds(int value);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("0836F09C-34BD-47BF-914A-99FB56AE2D07")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalTexture {
    [DispIdAttribute("1610678272")]
public IntPtr Handle { get; }
    [DispIdAttribute("1610678273")]
public object Resource { get; }
    [DispIdAttribute("1610678274")]
public ulong Timestamp { get; public set; }
    public abstract virtual IntPtr get_Handle();
    public abstract virtual object get_Resource();
    public abstract virtual ulong get_Timestamp();
    public abstract virtual void set_Timestamp(ulong value);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("AFCA8431-633F-4528-ABFE-7FC3BEDD8962")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalTextureStream {
    [DispIdAttribute("1610678272")]
public string Id { get; }
    public abstract virtual string get_id();
    public abstract virtual void AddAllowedOrigin(string origin, int value);
    public abstract virtual void RemoveAllowedOrigin(string origin);
    public abstract virtual void add_StartRequested(ICoreWebView2ExperimentalTextureStreamStartRequestedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_StartRequested(EventRegistrationToken token);
    public abstract virtual void add_Stopped(ICoreWebView2ExperimentalTextureStreamStoppedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_Stopped(EventRegistrationToken token);
    public abstract virtual ICoreWebView2ExperimentalTexture CreateTexture(UInt32 widthInTexels, UInt32 heightInTexels);
    public abstract virtual ICoreWebView2ExperimentalTexture GetAvailableTexture();
    public abstract virtual void CloseTexture(ICoreWebView2ExperimentalTexture texture);
    public abstract virtual void PresentTexture(ICoreWebView2ExperimentalTexture texture);
    public abstract virtual void Stop();
    public abstract virtual void add_ErrorReceived(ICoreWebView2ExperimentalTextureStreamErrorReceivedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_ErrorReceived(EventRegistrationToken token);
    public abstract virtual void SetD3DDevice(object d3dDevice);
    public abstract virtual void add_WebTextureReceived(ICoreWebView2ExperimentalTextureStreamWebTextureReceivedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_WebTextureReceived(EventRegistrationToken token);
    public abstract virtual void add_WebTextureStreamStopped(ICoreWebView2ExperimentalTextureStreamWebTextureStreamStoppedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_WebTextureStreamStopped(EventRegistrationToken token);
}
[CompilerGeneratedAttribute]
[GuidAttribute("0E1730C1-03DF-4AD2-B847-BE4D63ADF700")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalTextureStreamErrorReceivedEventArgs {
    [DispIdAttribute("1610678272")]
public COREWEBVIEW2_TEXTURE_STREAM_ERROR_KIND Kind { get; }
    [DispIdAttribute("1610678273")]
public ICoreWebView2ExperimentalTexture Texture { get; }
    public abstract virtual COREWEBVIEW2_TEXTURE_STREAM_ERROR_KIND get_Kind();
    public abstract virtual ICoreWebView2ExperimentalTexture get_texture();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("52CB8898-C711-401A-8F97-3646831BA72D")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalTextureStreamErrorReceivedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2ExperimentalTextureStream sender, ICoreWebView2ExperimentalTextureStreamErrorReceivedEventArgs args);
}
[CompilerGeneratedAttribute]
[GuidAttribute("62D09330-00A9-41BF-A9AE-55AAEF8B3C44")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalTextureStreamStartRequestedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2ExperimentalTextureStream sender, object args);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("4111102A-D19F-4438-AF46-EFC563B2B9CF")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalTextureStreamStoppedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2ExperimentalTextureStream sender, object args);
}
[CompilerGeneratedAttribute]
[GuidAttribute("A4C2FA3A-295A-11ED-A261-0242AC120002")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalTextureStreamWebTextureReceivedEventArgs {
    [DispIdAttribute("1610678272")]
public ICoreWebView2ExperimentalWebTexture WebTexture { get; }
    public abstract virtual ICoreWebView2ExperimentalWebTexture get_WebTexture();
}
[CompilerGeneratedAttribute]
[GuidAttribute("9EA4228C-295A-11ED-A261-0242AC120002")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalTextureStreamWebTextureReceivedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2ExperimentalTextureStream sender, ICoreWebView2ExperimentalTextureStreamWebTextureReceivedEventArgs args);
}
[CompilerGeneratedAttribute]
[GuidAttribute("77EB4638-2F05-11ED-A261-0242AC120002")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalTextureStreamWebTextureStreamStoppedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2ExperimentalTextureStream sender, object args);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("F1D2D722-3721-499C-87F5-4C405260697A")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalUpdateRuntimeCompletedHandler {
    public abstract virtual void Invoke(int errorCode, ICoreWebView2ExperimentalUpdateRuntimeResult result);
}
[CompilerGeneratedAttribute]
[GuidAttribute("DD503E49-AB19-47C0-B2AD-6DDD09CC3E3A")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalUpdateRuntimeResult {
    [DispIdAttribute("1610678272")]
public COREWEBVIEW2_UPDATE_RUNTIME_STATUS Status { get; }
    [DispIdAttribute("1610678273")]
public int ExtendedError { get; }
    public abstract virtual COREWEBVIEW2_UPDATE_RUNTIME_STATUS get_Status();
    public abstract virtual int get_ExtendedError();
}
[CompilerGeneratedAttribute]
[GuidAttribute("0761EEE6-CF3E-46A4-A6C0-B805D4BE5E69")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalWebMessageReceivedEventArgs {
    [DispIdAttribute("1610678272")]
public ICoreWebView2ObjectCollectionView AdditionalObjects { get; }
    public abstract virtual ICoreWebView2ObjectCollectionView get_additionalObjects();
}
[CompilerGeneratedAttribute]
[GuidAttribute("8F3EC528-0596-4D51-9F9E-2DA580AC9787")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalWebResourceRequestedEventArgs {
    [DispIdAttribute("1610678272")]
public COREWEBVIEW2_WEB_RESOURCE_REQUEST_SOURCE_KINDS RequestedSourceKind { get; }
    public abstract virtual COREWEBVIEW2_WEB_RESOURCE_REQUEST_SOURCE_KINDS get_RequestedSourceKind();
}
[CompilerGeneratedAttribute]
[GuidAttribute("B94265AE-4C1E-11ED-BDC3-0242AC120002")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExperimentalWebTexture {
    [DispIdAttribute("1610678272")]
public IntPtr Handle { get; }
    [DispIdAttribute("1610678273")]
public object Resource { get; }
    [DispIdAttribute("1610678274")]
public ulong Timestamp { get; }
    public abstract virtual IntPtr get_Handle();
    public abstract virtual object get_Resource();
    public abstract virtual ulong get_Timestamp();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("2913DA94-833D-4DE0-8DCA-900FC524A1A4")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2FaviconChangedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2 sender, object args);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("F2C19559-6BC1-4583-A757-90021BE9AFEC")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2File {
    [DispIdAttribute("1610678272")]
public string Path { get; }
    public abstract virtual string get_Path();
}
[CompilerGeneratedAttribute]
[GuidAttribute("C65100AC-0DE2-5551-A362-23D9BD1D0E1F")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2FileSystemHandle {
    [DispIdAttribute("1610678272")]
public COREWEBVIEW2_FILE_SYSTEM_HANDLE_KIND Kind { get; }
    [DispIdAttribute("1610678273")]
public string Path { get; }
    [DispIdAttribute("1610678274")]
public COREWEBVIEW2_FILE_SYSTEM_HANDLE_PERMISSION Permission { get; }
    public abstract virtual COREWEBVIEW2_FILE_SYSTEM_HANDLE_KIND get_Kind();
    public abstract virtual string get_Path();
    public abstract virtual COREWEBVIEW2_FILE_SYSTEM_HANDLE_PERMISSION get_Permission();
}
[CompilerGeneratedAttribute]
[GuidAttribute("05EA24BD-6452-4926-9014-4B82B498135D")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2FocusChangedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2Controller sender, object args);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("F1131A5E-9BA9-11EB-A8B3-0242AC130003")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Frame {
    [DispIdAttribute("1610678272")]
public string Name { get; }
    public abstract virtual string get_name();
    public abstract virtual void add_NameChanged(ICoreWebView2FrameNameChangedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_NameChanged(EventRegistrationToken token);
    public abstract virtual void AddHostObjectToScriptWithOrigins(string name, Object& object, UInt32 originsCount, String[] origins);
    public abstract virtual void RemoveHostObjectFromScript(string name);
    public abstract virtual void add_Destroyed(ICoreWebView2FrameDestroyedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_Destroyed(EventRegistrationToken token);
    public abstract virtual int IsDestroyed();
}
[CompilerGeneratedAttribute]
[GuidAttribute("7A6A5834-D185-4DBF-B63F-4A9BC43107D4")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Frame2 {
    public void _VtblGap1_8();
    public abstract virtual void add_NavigationStarting(ICoreWebView2FrameNavigationStartingEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_NavigationStarting(EventRegistrationToken token);
    public abstract virtual void add_ContentLoading(ICoreWebView2FrameContentLoadingEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_ContentLoading(EventRegistrationToken token);
    public abstract virtual void add_NavigationCompleted(ICoreWebView2FrameNavigationCompletedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_NavigationCompleted(EventRegistrationToken token);
    public abstract virtual void add_DOMContentLoaded(ICoreWebView2FrameDOMContentLoadedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_DOMContentLoaded(EventRegistrationToken token);
    public abstract virtual void ExecuteScript(string javaScript, ICoreWebView2ExecuteScriptCompletedHandler handler);
    public abstract virtual void PostWebMessageAsJson(string webMessageAsJson);
    public abstract virtual void PostWebMessageAsString(string webMessageAsString);
    public abstract virtual void add_WebMessageReceived(ICoreWebView2FrameWebMessageReceivedEventHandler handler, EventRegistrationToken& token);
    public abstract virtual void remove_WebMessageReceived(EventRegistrationToken token);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("B50D82CC-CC28-481D-9614-CB048895E6A0")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Frame3 {
    public void _VtblGap1_21();
    public abstract virtual void add_PermissionRequested(ICoreWebView2FramePermissionRequestedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_PermissionRequested(EventRegistrationToken token);
}
[CompilerGeneratedAttribute]
[GuidAttribute("188782DC-92AA-4732-AB3C-FCC59F6F68B9")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Frame4 {
    public void _VtblGap1_23();
    public abstract virtual void PostSharedBufferToScript(ICoreWebView2SharedBuffer sharedBuffer, COREWEBVIEW2_SHARED_BUFFER_ACCESS access, string additionalDataAsJson);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("99D199C4-7305-11EE-B962-0242AC120002")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Frame5 {
    [DispIdAttribute("1610940416")]
public UInt32 FrameId { get; }
    public void _VtblGap1_24();
    public abstract virtual UInt32 get_FrameId();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("0D6156F2-D332-49A7-9E03-7D8F2FEEEE54")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2FrameContentLoadingEventHandler {
    public abstract virtual void Invoke(ICoreWebView2Frame sender, ICoreWebView2ContentLoadingEventArgs args);
}
[CompilerGeneratedAttribute]
[GuidAttribute("4D6E7B5E-9BAA-11EB-A8B3-0242AC130003")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2FrameCreatedEventArgs {
    [DispIdAttribute("1610678272")]
public ICoreWebView2Frame Frame { get; }
    public abstract virtual ICoreWebView2Frame get_Frame();
}
[CompilerGeneratedAttribute]
[GuidAttribute("38059770-9BAA-11EB-A8B3-0242AC130003")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2FrameCreatedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2 sender, ICoreWebView2FrameCreatedEventArgs args);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("59DD7B4C-9BAA-11EB-A8B3-0242AC130003")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2FrameDestroyedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2Frame sender, object args);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("38D9520D-340F-4D1E-A775-43FCE9753683")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2FrameDOMContentLoadedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2Frame sender, ICoreWebView2DOMContentLoadedEventArgs args);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("DA86B8A1-BDF3-4F11-9955-528CEFA59727")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2FrameInfo {
    [DispIdAttribute("1610678272")]
public string Name { get; }
    [DispIdAttribute("1610678273")]
public string Source { get; }
    public abstract virtual string get_name();
    public abstract virtual string get_Source();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("56F85CFA-72C4-11EE-B962-0242AC120002")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2FrameInfo2 {
    [DispIdAttribute("1610743808")]
public ICoreWebView2FrameInfo ParentFrameInfo { get; }
    [DispIdAttribute("1610743809")]
public UInt32 FrameId { get; }
    [DispIdAttribute("1610743810")]
public COREWEBVIEW2_FRAME_KIND FrameKind { get; }
    public void _VtblGap1_2();
    public abstract virtual ICoreWebView2FrameInfo get_ParentFrameInfo();
    public abstract virtual UInt32 get_FrameId();
    public abstract virtual COREWEBVIEW2_FRAME_KIND get_FrameKind();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("8F834154-D38E-4D90-AFFB-6800A7272839")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2FrameInfoCollection {
    public abstract virtual ICoreWebView2FrameInfoCollectionIterator GetIterator();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("1BF89E2D-1B2B-4629-B28F-05099B41BB03")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2FrameInfoCollectionIterator {
    [DispIdAttribute("1610678272")]
public int HasCurrent { get; }
    public abstract virtual int get_hasCurrent();
    public abstract virtual ICoreWebView2FrameInfo GetCurrent();
    public abstract virtual int MoveNext();
}
[CompilerGeneratedAttribute]
[GuidAttribute("435C7DC8-9BAA-11EB-A8B3-0242AC130003")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2FrameNameChangedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2Frame sender, object args);
}
[CompilerGeneratedAttribute]
[GuidAttribute("609302AD-0E36-4F9A-A210-6A45272842A9")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2FrameNavigationCompletedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2Frame sender, ICoreWebView2NavigationCompletedEventArgs args);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("E79908BF-2D5D-4968-83DB-263FEA2C1DA3")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2FrameNavigationStartingEventHandler {
    public abstract virtual void Invoke(ICoreWebView2Frame sender, ICoreWebView2NavigationStartingEventArgs args);
}
[CompilerGeneratedAttribute]
[GuidAttribute("845D0EDD-8BD8-429B-9915-4821789F23E9")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2FramePermissionRequestedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2Frame sender, ICoreWebView2PermissionRequestedEventArgs2 args);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("E371E005-6D1D-4517-934B-A8F1629C62A5")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2FrameWebMessageReceivedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2Frame sender, ICoreWebView2WebMessageReceivedEventArgs args);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("5A4F5069-5C15-47C3-8646-F4DE1C116670")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2GetCookiesCompletedHandler {
    public abstract virtual void Invoke(int errorCode, ICoreWebView2CookieList result);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("A2508329-7DA8-49D7-8C05-FA125E4AEE8D")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2GetFaviconCompletedHandler {
    public abstract virtual void Invoke(int errorCode, IStream result);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("38274481-A15C-4563-94CF-990EDC9AEB95")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2GetNonDefaultPermissionSettingsCompletedHandler {
    public abstract virtual void Invoke(int errorCode, ICoreWebView2PermissionSettingCollectionView result);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("F45E55AA-3BC2-11EE-BE56-0242AC120002")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2GetProcessExtendedInfosCompletedHandler {
    public abstract virtual void Invoke(int errorCode, ICoreWebView2ProcessExtendedInfoCollection result);
}
[CompilerGeneratedAttribute]
[GuidAttribute("C79A420C-EFD9-4058-9295-3E8B4BCAB645")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2HistoryChangedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2 sender, object args);
}
[CompilerGeneratedAttribute]
[GuidAttribute("0702FC30-F43B-47BB-AB52-A42CB552AD9F")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2HttpHeadersCollectionIterator {
    [DispIdAttribute("1610678273")]
public int HasCurrentHeader { get; }
    public abstract virtual void GetCurrentHeader(String& name, String& value);
    public abstract virtual int get_HasCurrentHeader();
    public abstract virtual int MoveNext();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("E86CAC0E-5523-465C-B536-8FB9FC8C8C60")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2HttpRequestHeaders {
    public abstract virtual string GetHeader(string name);
    public abstract virtual ICoreWebView2HttpHeadersCollectionIterator GetHeaders(string name);
    public abstract virtual int Contains(string name);
    public abstract virtual void SetHeader(string name, string value);
    public abstract virtual void RemoveHeader(string name);
    public abstract virtual ICoreWebView2HttpHeadersCollectionIterator GetIterator();
}
[CompilerGeneratedAttribute]
[GuidAttribute("03C5FF5A-9B45-4A88-881C-89A9F328619C")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2HttpResponseHeaders {
    public abstract virtual void AppendHeader(string name, string value);
    public abstract virtual int Contains(string name);
    public abstract virtual string GetHeader(string name);
    public abstract virtual ICoreWebView2HttpHeadersCollectionIterator GetHeaders(string name);
    public abstract virtual ICoreWebView2HttpHeadersCollectionIterator GetIterator();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("3117DA26-AE13-438D-BD46-EDBEB2C4CE81")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2IsDefaultDownloadDialogOpenChangedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2 sender, object args);
}
[CompilerGeneratedAttribute]
[GuidAttribute("5DEF109A-2F4B-49FA-B7F6-11C39E513328")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2IsDocumentPlayingAudioChangedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2 sender, object args);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("57D90347-CD0E-4952-A4A2-7483A2756F08")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2IsMutedChangedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2 sender, object args);
}
[CompilerGeneratedAttribute]
[GuidAttribute("07D1A6C3-7175-4BA1-9306-E593CA07E46C")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2LaunchingExternalUriSchemeEventArgs {
    [DispIdAttribute("1610678272")]
public string Uri { get; }
    [DispIdAttribute("1610678273")]
public string InitiatingOrigin { get; }
    [DispIdAttribute("1610678274")]
public int IsUserInitiated { get; }
    [DispIdAttribute("1610678275")]
public int Cancel { get; public set; }
    public abstract virtual string get_uri();
    public abstract virtual string get_InitiatingOrigin();
    public abstract virtual int get_IsUserInitiated();
    public abstract virtual int get_Cancel();
    public abstract virtual void set_Cancel(int value);
    public abstract virtual ICoreWebView2Deferral GetDeferral();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("74F712E0-8165-43A9-A13F-0CCE597E75DF")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2LaunchingExternalUriSchemeEventHandler {
    public abstract virtual void Invoke(ICoreWebView2 sender, ICoreWebView2LaunchingExternalUriSchemeEventArgs args);
}
[CompilerGeneratedAttribute]
[GuidAttribute("2D6AA13B-3839-4A15-92FC-D88B3C0D9C9D")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2MoveFocusRequestedEventArgs {
    [DispIdAttribute("1610678272")]
public COREWEBVIEW2_MOVE_FOCUS_REASON Reason { get; }
    [DispIdAttribute("1610678273")]
public int Handled { get; public set; }
    public abstract virtual COREWEBVIEW2_MOVE_FOCUS_REASON get_reason();
    public abstract virtual int get_Handled();
    public abstract virtual void set_Handled(int value);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("69035451-6DC7-4CB8-9BCE-B2BD70AD289F")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2MoveFocusRequestedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2Controller sender, ICoreWebView2MoveFocusRequestedEventArgs args);
}
[CompilerGeneratedAttribute]
[GuidAttribute("30D68B7D-20D9-4752-A9CA-EC8448FBB5C1")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2NavigationCompletedEventArgs {
    [DispIdAttribute("1610678272")]
public int IsSuccess { get; }
    [DispIdAttribute("1610678273")]
public COREWEBVIEW2_WEB_ERROR_STATUS WebErrorStatus { get; }
    [DispIdAttribute("1610678274")]
public ulong NavigationId { get; }
    public abstract virtual int get_IsSuccess();
    public abstract virtual COREWEBVIEW2_WEB_ERROR_STATUS get_WebErrorStatus();
    public abstract virtual ulong get_NavigationId();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("FDF8B738-EE1E-4DB2-A329-8D7D7B74D792")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2NavigationCompletedEventArgs2 {
    [DispIdAttribute("1610743808")]
public int HttpStatusCode { get; }
    public void _VtblGap1_3();
    public abstract virtual int get_HttpStatusCode();
}
[CompilerGeneratedAttribute]
[GuidAttribute("D33A35BF-1C49-4F98-93AB-006E0533FE1C")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2NavigationCompletedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2 sender, ICoreWebView2NavigationCompletedEventArgs args);
}
[CompilerGeneratedAttribute]
[GuidAttribute("5B495469-E119-438A-9B18-7604F25F2E49")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2NavigationStartingEventArgs {
    [DispIdAttribute("1610678272")]
public string Uri { get; }
    [DispIdAttribute("1610678273")]
public int IsUserInitiated { get; }
    [DispIdAttribute("1610678274")]
public int IsRedirected { get; }
    [DispIdAttribute("1610678275")]
public ICoreWebView2HttpRequestHeaders RequestHeaders { get; }
    [DispIdAttribute("1610678276")]
public int Cancel { get; public set; }
    [DispIdAttribute("1610678278")]
public ulong NavigationId { get; }
    public abstract virtual string get_uri();
    public abstract virtual int get_IsUserInitiated();
    public abstract virtual int get_IsRedirected();
    public abstract virtual ICoreWebView2HttpRequestHeaders get_RequestHeaders();
    public abstract virtual int get_Cancel();
    public abstract virtual void set_Cancel(int Cancel);
    public abstract virtual ulong get_NavigationId();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("9086BE93-91AA-472D-A7E0-579F2BA006AD")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2NavigationStartingEventArgs2 {
    [DispIdAttribute("1610743808")]
public string AdditionalAllowedFrameAncestors { get; public set; }
    public void _VtblGap1_7();
    public abstract virtual string get_AdditionalAllowedFrameAncestors();
    public abstract virtual void set_AdditionalAllowedFrameAncestors(string value);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("DDFFE494-4942-4BD2-AB73-35B8FF40E19F")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2NavigationStartingEventArgs3 {
    [DispIdAttribute("1610809344")]
public COREWEBVIEW2_NAVIGATION_KIND NavigationKind { get; }
    public void _VtblGap1_9();
    public abstract virtual COREWEBVIEW2_NAVIGATION_KIND get_NavigationKind();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("9ADBE429-F36D-432B-9DDC-F8881FBD76E3")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2NavigationStartingEventHandler {
    public abstract virtual void Invoke(ICoreWebView2 sender, ICoreWebView2NavigationStartingEventArgs args);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("F9A2976E-D34E-44FC-ADEE-81B6B57CA914")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2NewBrowserVersionAvailableEventHandler {
    public abstract virtual void Invoke(ICoreWebView2Environment sender, object args);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("34ACB11C-FC37-4418-9132-F9C21D1EAFB9")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2NewWindowRequestedEventArgs {
    [DispIdAttribute("1610678272")]
public string Uri { get; }
    [DispIdAttribute("1610678273")]
public ICoreWebView2 NewWindow { get; public set; }
    [DispIdAttribute("1610678275")]
public int Handled { get; public set; }
    [DispIdAttribute("1610678277")]
public int IsUserInitiated { get; }
    [DispIdAttribute("1610678279")]
public ICoreWebView2WindowFeatures WindowFeatures { get; }
    public abstract virtual string get_uri();
    public abstract virtual void set_NewWindow(ICoreWebView2 NewWindow);
    public abstract virtual ICoreWebView2 get_NewWindow();
    public abstract virtual void set_Handled(int Handled);
    public abstract virtual int get_Handled();
    public abstract virtual int get_IsUserInitiated();
    public abstract virtual ICoreWebView2Deferral GetDeferral();
    public abstract virtual ICoreWebView2WindowFeatures get_WindowFeatures();
}
[CompilerGeneratedAttribute]
[GuidAttribute("BBC7BAED-74C6-4C92-B63A-7F5AEAE03DE3")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2NewWindowRequestedEventArgs2 {
    [DispIdAttribute("1610743808")]
public string Name { get; }
    public void _VtblGap1_8();
    public abstract virtual string get_name();
}
[CompilerGeneratedAttribute]
[GuidAttribute("842BED3C-6AD6-4DD9-B938-28C96667AD66")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2NewWindowRequestedEventArgs3 {
    [DispIdAttribute("1610809344")]
public ICoreWebView2FrameInfo OriginalSourceFrameInfo { get; }
    public void _VtblGap1_9();
    public abstract virtual ICoreWebView2FrameInfo get_OriginalSourceFrameInfo();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("D4C185FE-C81C-4989-97AF-2D3FA7AB5651")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2NewWindowRequestedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2 sender, ICoreWebView2NewWindowRequestedEventArgs args);
}
[CompilerGeneratedAttribute]
[GuidAttribute("AB71D500-0820-4A52-809C-48DB04FF93BF")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2NonClientRegionChangedEventArgs {
    [DispIdAttribute("1610678272")]
public COREWEBVIEW2_NON_CLIENT_REGION_KIND RegionKind { get; }
    public abstract virtual COREWEBVIEW2_NON_CLIENT_REGION_KIND get_RegionKind();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("4A794E66-AA6C-46BD-93A3-382196837680")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2NonClientRegionChangedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2CompositionController sender, ICoreWebView2NonClientRegionChangedEventArgs args);
}
[CompilerGeneratedAttribute]
[GuidAttribute("B7434D98-6BC8-419D-9DA5-FB5A96D4DACD")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Notification {
    [DispIdAttribute("1610678277")]
public string Body { get; }
    [DispIdAttribute("1610678278")]
public COREWEBVIEW2_TEXT_DIRECTION_KIND Direction { get; }
    [DispIdAttribute("1610678279")]
public string Language { get; }
    [DispIdAttribute("1610678280")]
public string Tag { get; }
    [DispIdAttribute("1610678281")]
public string IconUri { get; }
    [DispIdAttribute("1610678282")]
public string Title { get; }
    [DispIdAttribute("1610678283")]
public string BadgeUri { get; }
    [DispIdAttribute("1610678284")]
public string BodyImageUri { get; }
    [DispIdAttribute("1610678285")]
public int ShouldRenotify { get; }
    [DispIdAttribute("1610678286")]
public int RequiresInteraction { get; }
    [DispIdAttribute("1610678287")]
public int IsSilent { get; }
    [DispIdAttribute("1610678288")]
public double Timestamp { get; }
    public abstract virtual void add_CloseRequested(ICoreWebView2NotificationCloseRequestedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_CloseRequested(EventRegistrationToken token);
    public abstract virtual void ReportShown();
    public abstract virtual void ReportClicked();
    public abstract virtual void ReportClosed();
    public abstract virtual string get_Body();
    public abstract virtual COREWEBVIEW2_TEXT_DIRECTION_KIND get_Direction();
    public abstract virtual string get_Language();
    public abstract virtual string get_Tag();
    public abstract virtual string get_IconUri();
    public abstract virtual string get_title();
    public abstract virtual string get_BadgeUri();
    public abstract virtual string get_BodyImageUri();
    public abstract virtual int get_ShouldRenotify();
    public abstract virtual int get_RequiresInteraction();
    public abstract virtual int get_IsSilent();
    public abstract virtual double get_Timestamp();
    public abstract virtual void GetVibrationPattern(UInt32& Count, IntPtr vibrationPattern);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("47C32D23-1E94-4733-85F1-D9BF4ACD0974")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2NotificationCloseRequestedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2Notification sender, object args);
}
[CompilerGeneratedAttribute]
[GuidAttribute("1512DD5B-5514-4F85-886E-21C3A4C9CFE6")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2NotificationReceivedEventArgs {
    [DispIdAttribute("1610678272")]
public string SenderOrigin { get; }
    [DispIdAttribute("1610678273")]
public ICoreWebView2Notification Notification { get; }
    [DispIdAttribute("1610678274")]
public int Handled { get; public set; }
    public abstract virtual string get_SenderOrigin();
    public abstract virtual ICoreWebView2Notification get_Notification();
    public abstract virtual void set_Handled(int value);
    public abstract virtual int get_Handled();
    public abstract virtual ICoreWebView2Deferral GetDeferral();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("89C5D598-8788-423B-BE97-E6E01C0F9EE3")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2NotificationReceivedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2 sender, ICoreWebView2NotificationReceivedEventArgs args);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("0F36FD87-4F69-4415-98DA-888F89FB9A33")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ObjectCollectionView {
    [DispIdAttribute("1610678272")]
public UInt32 Count { get; }
    public abstract virtual UInt32 get_Count();
    public abstract virtual object GetValueAtIndex(UInt32 index);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("973AE2EF-FF18-4894-8FB2-3C758F046810")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2PermissionRequestedEventArgs {
    [DispIdAttribute("1610678272")]
public string Uri { get; }
    [DispIdAttribute("1610678273")]
public COREWEBVIEW2_PERMISSION_KIND PermissionKind { get; }
    [DispIdAttribute("1610678274")]
public int IsUserInitiated { get; }
    [DispIdAttribute("1610678275")]
public COREWEBVIEW2_PERMISSION_STATE State { get; public set; }
    public abstract virtual string get_uri();
    public abstract virtual COREWEBVIEW2_PERMISSION_KIND get_PermissionKind();
    public abstract virtual int get_IsUserInitiated();
    public abstract virtual COREWEBVIEW2_PERMISSION_STATE get_State();
    public abstract virtual void set_State(COREWEBVIEW2_PERMISSION_STATE State);
    public abstract virtual ICoreWebView2Deferral GetDeferral();
}
[CompilerGeneratedAttribute]
[GuidAttribute("74D7127F-9DE6-4200-8734-42D6FB4FF741")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2PermissionRequestedEventArgs2 {
    [DispIdAttribute("1610743808")]
public int Handled { get; public set; }
    public void _VtblGap1_6();
    public abstract virtual int get_Handled();
    public abstract virtual void set_Handled(int value);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("E61670BC-3DCE-4177-86D2-C629AE3CB6AC")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2PermissionRequestedEventArgs3 {
    [DispIdAttribute("1610809344")]
public int SavesInProfile { get; public set; }
    public void _VtblGap1_8();
    public abstract virtual int get_SavesInProfile();
    public abstract virtual void set_SavesInProfile(int value);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("15E1C6A3-C72A-4DF3-91D7-D097FBEC6BFD")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2PermissionRequestedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2 sender, ICoreWebView2PermissionRequestedEventArgs args);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("792B6ECA-5576-421C-9119-74EBB3A4FFB3")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2PermissionSetting {
    [DispIdAttribute("1610678272")]
public COREWEBVIEW2_PERMISSION_KIND PermissionKind { get; }
    [DispIdAttribute("1610678273")]
public string PermissionOrigin { get; }
    [DispIdAttribute("1610678274")]
public COREWEBVIEW2_PERMISSION_STATE PermissionState { get; }
    public abstract virtual COREWEBVIEW2_PERMISSION_KIND get_PermissionKind();
    public abstract virtual string get_PermissionOrigin();
    public abstract virtual COREWEBVIEW2_PERMISSION_STATE get_PermissionState();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("F5596F62-3DE5-47B1-91E8-A4104B596B96")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2PermissionSettingCollectionView {
    [DispIdAttribute("1610678273")]
public UInt32 Count { get; }
    public abstract virtual ICoreWebView2PermissionSetting GetValueAtIndex(UInt32 index);
    public abstract virtual UInt32 get_Count();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("E6995887-D10D-4F5D-9359-4CE46E4F96B9")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2PointerInfo {
    [DispIdAttribute("1610678272")]
public UInt32 PointerKind { get; public set; }
    [DispIdAttribute("1610678274")]
public UInt32 PointerId { get; public set; }
    [DispIdAttribute("1610678276")]
public UInt32 FrameId { get; public set; }
    [DispIdAttribute("1610678278")]
public UInt32 PointerFlags { get; public set; }
    [DispIdAttribute("1610678280")]
public tagRECT PointerDeviceRect { get; public set; }
    [DispIdAttribute("1610678282")]
public tagRECT DisplayRect { get; public set; }
    [DispIdAttribute("1610678284")]
public tagPOINT PixelLocation { get; public set; }
    [DispIdAttribute("1610678286")]
public tagPOINT HimetricLocation { get; public set; }
    [DispIdAttribute("1610678288")]
public tagPOINT PixelLocationRaw { get; public set; }
    [DispIdAttribute("1610678290")]
public tagPOINT HimetricLocationRaw { get; public set; }
    [DispIdAttribute("1610678292")]
public UInt32 Time { get; public set; }
    [DispIdAttribute("1610678294")]
public UInt32 HistoryCount { get; public set; }
    [DispIdAttribute("1610678296")]
public int InputData { get; public set; }
    [DispIdAttribute("1610678298")]
public UInt32 KeyStates { get; public set; }
    [DispIdAttribute("1610678300")]
public ulong PerformanceCount { get; public set; }
    [DispIdAttribute("1610678302")]
public int ButtonChangeKind { get; public set; }
    [DispIdAttribute("1610678304")]
public UInt32 PenFlags { get; public set; }
    [DispIdAttribute("1610678306")]
public UInt32 PenMask { get; public set; }
    [DispIdAttribute("1610678308")]
public UInt32 PenPressure { get; public set; }
    [DispIdAttribute("1610678310")]
public UInt32 PenRotation { get; public set; }
    [DispIdAttribute("1610678312")]
public int PenTiltX { get; public set; }
    [DispIdAttribute("1610678314")]
public int PenTiltY { get; public set; }
    [DispIdAttribute("1610678316")]
public UInt32 TouchFlags { get; public set; }
    [DispIdAttribute("1610678318")]
public UInt32 TouchMask { get; public set; }
    [DispIdAttribute("1610678320")]
public tagRECT TouchContact { get; public set; }
    [DispIdAttribute("1610678322")]
public tagRECT TouchContactRaw { get; public set; }
    [DispIdAttribute("1610678324")]
public UInt32 TouchOrientation { get; public set; }
    [DispIdAttribute("1610678326")]
public UInt32 TouchPressure { get; public set; }
    public abstract virtual UInt32 get_PointerKind();
    public abstract virtual void set_PointerKind(UInt32 PointerKind);
    public abstract virtual UInt32 get_PointerId();
    public abstract virtual void set_PointerId(UInt32 PointerId);
    public abstract virtual UInt32 get_FrameId();
    public abstract virtual void set_FrameId(UInt32 FrameId);
    public abstract virtual UInt32 get_PointerFlags();
    public abstract virtual void set_PointerFlags(UInt32 PointerFlags);
    public abstract virtual tagRECT get_PointerDeviceRect();
    public abstract virtual void set_PointerDeviceRect(tagRECT PointerDeviceRect);
    public abstract virtual tagRECT get_DisplayRect();
    public abstract virtual void set_DisplayRect(tagRECT DisplayRect);
    public abstract virtual tagPOINT get_PixelLocation();
    public abstract virtual void set_PixelLocation(tagPOINT PixelLocation);
    public abstract virtual tagPOINT get_HimetricLocation();
    public abstract virtual void set_HimetricLocation(tagPOINT HimetricLocation);
    public abstract virtual tagPOINT get_PixelLocationRaw();
    public abstract virtual void set_PixelLocationRaw(tagPOINT PixelLocationRaw);
    public abstract virtual tagPOINT get_HimetricLocationRaw();
    public abstract virtual void set_HimetricLocationRaw(tagPOINT HimetricLocationRaw);
    public abstract virtual UInt32 get_Time();
    public abstract virtual void set_Time(UInt32 Time);
    public abstract virtual UInt32 get_HistoryCount();
    public abstract virtual void set_HistoryCount(UInt32 HistoryCount);
    public abstract virtual int get_InputData();
    public abstract virtual void set_InputData(int InputData);
    public abstract virtual UInt32 get_KeyStates();
    public abstract virtual void set_KeyStates(UInt32 KeyStates);
    public abstract virtual ulong get_PerformanceCount();
    public abstract virtual void set_PerformanceCount(ulong PerformanceCount);
    public abstract virtual int get_ButtonChangeKind();
    public abstract virtual void set_ButtonChangeKind(int ButtonChangeKind);
    public abstract virtual UInt32 get_PenFlags();
    public abstract virtual void set_PenFlags(UInt32 PenFlags);
    public abstract virtual UInt32 get_PenMask();
    public abstract virtual void set_PenMask(UInt32 PenMask);
    public abstract virtual UInt32 get_PenPressure();
    public abstract virtual void set_PenPressure(UInt32 PenPressure);
    public abstract virtual UInt32 get_PenRotation();
    public abstract virtual void set_PenRotation(UInt32 PenRotation);
    public abstract virtual int get_PenTiltX();
    public abstract virtual void set_PenTiltX(int PenTiltX);
    public abstract virtual int get_PenTiltY();
    public abstract virtual void set_PenTiltY(int PenTiltY);
    public abstract virtual UInt32 get_TouchFlags();
    public abstract virtual void set_TouchFlags(UInt32 TouchFlags);
    public abstract virtual UInt32 get_TouchMask();
    public abstract virtual void set_TouchMask(UInt32 TouchMask);
    public abstract virtual tagRECT get_TouchContact();
    public abstract virtual void set_TouchContact(tagRECT TouchContact);
    public abstract virtual tagRECT get_TouchContactRaw();
    public abstract virtual void set_TouchContactRaw(tagRECT TouchContactRaw);
    public abstract virtual UInt32 get_TouchOrientation();
    public abstract virtual void set_TouchOrientation(UInt32 TouchOrientation);
    public abstract virtual UInt32 get_TouchPressure();
    public abstract virtual void set_TouchPressure(UInt32 TouchPressure);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("8FD80075-ED08-42DB-8570-F5D14977461E")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2PrintCompletedHandler {
    public abstract virtual void Invoke(int errorCode, COREWEBVIEW2_PRINT_STATUS result);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("377F3721-C74E-48CA-8DB1-DF68E51D60E2")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2PrintSettings {
    [DispIdAttribute("1610678272")]
public COREWEBVIEW2_PRINT_ORIENTATION Orientation { get; public set; }
    [DispIdAttribute("1610678274")]
public double ScaleFactor { get; public set; }
    [DispIdAttribute("1610678276")]
public double PageWidth { get; public set; }
    [DispIdAttribute("1610678278")]
public double PageHeight { get; public set; }
    [DispIdAttribute("1610678280")]
public double MarginTop { get; public set; }
    [DispIdAttribute("1610678282")]
public double MarginBottom { get; public set; }
    [DispIdAttribute("1610678284")]
public double MarginLeft { get; public set; }
    [DispIdAttribute("1610678286")]
public double MarginRight { get; public set; }
    [DispIdAttribute("1610678288")]
public int ShouldPrintBackgrounds { get; public set; }
    [DispIdAttribute("1610678290")]
public int ShouldPrintSelectionOnly { get; public set; }
    [DispIdAttribute("1610678292")]
public int ShouldPrintHeaderAndFooter { get; public set; }
    [DispIdAttribute("1610678294")]
public string HeaderTitle { get; public set; }
    [DispIdAttribute("1610678296")]
public string FooterUri { get; public set; }
    public abstract virtual COREWEBVIEW2_PRINT_ORIENTATION get_Orientation();
    public abstract virtual void set_Orientation(COREWEBVIEW2_PRINT_ORIENTATION Orientation);
    public abstract virtual double get_ScaleFactor();
    public abstract virtual void set_ScaleFactor(double ScaleFactor);
    public abstract virtual double get_PageWidth();
    public abstract virtual void set_PageWidth(double PageWidth);
    public abstract virtual double get_PageHeight();
    public abstract virtual void set_PageHeight(double PageHeight);
    public abstract virtual double get_MarginTop();
    public abstract virtual void set_MarginTop(double MarginTop);
    public abstract virtual double get_MarginBottom();
    public abstract virtual void set_MarginBottom(double MarginBottom);
    public abstract virtual double get_MarginLeft();
    public abstract virtual void set_MarginLeft(double MarginLeft);
    public abstract virtual double get_MarginRight();
    public abstract virtual void set_MarginRight(double MarginRight);
    public abstract virtual int get_ShouldPrintBackgrounds();
    public abstract virtual void set_ShouldPrintBackgrounds(int ShouldPrintBackgrounds);
    public abstract virtual int get_ShouldPrintSelectionOnly();
    public abstract virtual void set_ShouldPrintSelectionOnly(int ShouldPrintSelectionOnly);
    public abstract virtual int get_ShouldPrintHeaderAndFooter();
    public abstract virtual void set_ShouldPrintHeaderAndFooter(int ShouldPrintHeaderAndFooter);
    public abstract virtual string get_HeaderTitle();
    public abstract virtual void set_HeaderTitle(string HeaderTitle);
    public abstract virtual string get_FooterUri();
    public abstract virtual void set_FooterUri(string FooterUri);
}
[CompilerGeneratedAttribute]
[GuidAttribute("CA7F0E1F-3484-41D1-8C1A-65CD44A63F8D")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2PrintSettings2 {
    [DispIdAttribute("1610743808")]
public string PageRanges { get; public set; }
    [DispIdAttribute("1610743810")]
public int PagesPerSide { get; public set; }
    [DispIdAttribute("1610743812")]
public int Copies { get; public set; }
    [DispIdAttribute("1610743814")]
public COREWEBVIEW2_PRINT_COLLATION Collation { get; public set; }
    [DispIdAttribute("1610743816")]
public COREWEBVIEW2_PRINT_COLOR_MODE ColorMode { get; public set; }
    [DispIdAttribute("1610743818")]
public COREWEBVIEW2_PRINT_DUPLEX Duplex { get; public set; }
    [DispIdAttribute("1610743820")]
public COREWEBVIEW2_PRINT_MEDIA_SIZE MediaSize { get; public set; }
    [DispIdAttribute("1610743822")]
public string PrinterName { get; public set; }
    public void _VtblGap1_26();
    public abstract virtual string get_PageRanges();
    public abstract virtual void set_PageRanges(string value);
    public abstract virtual int get_PagesPerSide();
    public abstract virtual void set_PagesPerSide(int value);
    public abstract virtual int get_Copies();
    public abstract virtual void set_Copies(int value);
    public abstract virtual COREWEBVIEW2_PRINT_COLLATION get_Collation();
    public abstract virtual void set_Collation(COREWEBVIEW2_PRINT_COLLATION value);
    public abstract virtual COREWEBVIEW2_PRINT_COLOR_MODE get_ColorMode();
    public abstract virtual void set_ColorMode(COREWEBVIEW2_PRINT_COLOR_MODE value);
    public abstract virtual COREWEBVIEW2_PRINT_DUPLEX get_Duplex();
    public abstract virtual void set_Duplex(COREWEBVIEW2_PRINT_DUPLEX value);
    public abstract virtual COREWEBVIEW2_PRINT_MEDIA_SIZE get_MediaSize();
    public abstract virtual void set_MediaSize(COREWEBVIEW2_PRINT_MEDIA_SIZE value);
    public abstract virtual string get_PrinterName();
    public abstract virtual void set_PrinterName(string value);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("CCF1EF04-FD8E-4D5F-B2DE-0983E41B8C36")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2PrintToPdfCompletedHandler {
    public abstract virtual void Invoke(int errorCode, int result);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("4C9F8229-8F93-444F-A711-2C0DFD6359D5")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2PrintToPdfStreamCompletedHandler {
    public abstract virtual void Invoke(int errorCode, IStream result);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("CB2EB6ED-952C-42FD-AD3B-3F26454E3B77")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2PrivateBrowserUninstalledEventHandler {
    public abstract virtual void Invoke(ICoreWebView2Environment sender, object args);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("FF1BBF9A-37E0-45F8-88C5-9DF6B5DD5F4C")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2PrivateHostObjectAsyncMethodContinuation {
    public abstract virtual void Invoke(int errorCode, Object& result);
}
[CompilerGeneratedAttribute]
[GuidAttribute("1656D586-E714-4092-9C76-014647940EFF")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2PrivateHostObjectHelper {
    public abstract virtual int IsMethodMember(Object& object, string memberName);
}
[CompilerGeneratedAttribute]
[GuidAttribute("A791A659-3AD9-41C3-9C7E-768FCC233666")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2PrivateHostObjectHelper2 {
    public abstract virtual int IsAsyncMethod(Object& object, string methodName, int parameterCount);
    public abstract virtual void SetAsyncMethodContinuation(Object& object, string methodName, int parameterCount, Object& methodResult, ICoreWebView2PrivateHostObjectAsyncMethodContinuation continuation);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("BFFD8CC7-46CD-4D4F-B688-FE5152DBD92F")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2PrivateHostObjectHelper3 {
    public abstract virtual object CreateBuiltInDispatch(Object& originalHostObject);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("56E473F1-E155-45E6-98F4-A1F80550A165")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2PrivateKeyPressedEventArgs {
    [DispIdAttribute("1610678272")]
public COREWEBVIEW2_KEY_EVENT_KIND KeyEventKind { get; }
    [DispIdAttribute("1610678273")]
public UInt32 VirtualKey { get; }
    [DispIdAttribute("1610678274")]
public int KeyEventLParam { get; }
    [DispIdAttribute("1610678275")]
public COREWEBVIEW2_PHYSICAL_KEY_STATUS PhysicalKeyStatus { get; }
    [DispIdAttribute("1610678276")]
public int Handled { get; public set; }
    public abstract virtual COREWEBVIEW2_KEY_EVENT_KIND get_KeyEventKind();
    public abstract virtual UInt32 get_VirtualKey();
    public abstract virtual int get_KeyEventLParam();
    public abstract virtual COREWEBVIEW2_PHYSICAL_KEY_STATUS get_PhysicalKeyStatus();
    public abstract virtual int get_Handled();
    public abstract virtual void set_Handled(int Handled);
}
[CompilerGeneratedAttribute]
[GuidAttribute("E8A34C9D-4BF8-4AEF-BB0B-4A392C987A6E")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2PrivateKeyPressedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2Controller sender, ICoreWebView2PrivateKeyPressedEventArgs args);
}
[CompilerGeneratedAttribute]
[GuidAttribute("5833FDF2-5E56-49D7-A807-DE4F0C0DB311")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2PrivateLargeUnmanagedResource {
    public abstract virtual long GetMemoryUsage();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("2C94DD56-E252-40A1-BA7E-B19417B26A60")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2PrivatePartial {
    public abstract virtual void AddHostObjectHelper(ICoreWebView2PrivateHostObjectHelper helper);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("F8B289CB-421C-4A9A-97CC-2870B0AC1798")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2PrivatePartialController {
    [DispIdAttribute("1610678274")]
public int IsBrowserHitTransparent { get; }
    public abstract virtual void add_KeyPressed(ICoreWebView2PrivateKeyPressedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_KeyPressed(EventRegistrationToken token);
    public abstract virtual int get_IsBrowserHitTransparent();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("EFA2DF69-9CA4-40DB-A13A-EAF67A441314")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2PrivateRemoteObjectProxy {
    public abstract virtual int GetId();
    public abstract virtual void add_Passivated(ICoreWebView2PrivateRemoteObjectProxyPassivatedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_Passivated(EventRegistrationToken token);
}
[CompilerGeneratedAttribute]
[GuidAttribute("6996FC3E-DCEB-4BAA-819E-061648BF1A37")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2PrivateRemoteObjectProxyPassivatedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2PrivateRemoteObjectProxy sender, object args);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("D4F8D3AF-A724-4690-A3F1-3D6F2FACD108")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2PrivateRestartRequiredEventHandler {
    public abstract virtual void Invoke(ICoreWebView2 sender, object args);
}
[CompilerGeneratedAttribute]
[GuidAttribute("AF4C4C2E-45DB-11EE-BE56-0242AC120002")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ProcessExtendedInfo {
    [DispIdAttribute("1610678272")]
public ICoreWebView2ProcessInfo ProcessInfo { get; }
    [DispIdAttribute("1610678273")]
public ICoreWebView2FrameInfoCollection AssociatedFrameInfos { get; }
    public abstract virtual ICoreWebView2ProcessInfo get_ProcessInfo();
    public abstract virtual ICoreWebView2FrameInfoCollection get_AssociatedFrameInfos();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("32EFA696-407A-11EE-BE56-0242AC120002")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ProcessExtendedInfoCollection {
    [DispIdAttribute("1610678272")]
public UInt32 Count { get; }
    public abstract virtual UInt32 get_Count();
    public abstract virtual ICoreWebView2ProcessExtendedInfo GetValueAtIndex(UInt32 index);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("8155A9A4-1474-4A86-8CAE-151B0FA6B8CA")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ProcessFailedEventArgs {
    [DispIdAttribute("1610678272")]
public COREWEBVIEW2_PROCESS_FAILED_KIND ProcessFailedKind { get; }
    public abstract virtual COREWEBVIEW2_PROCESS_FAILED_KIND get_ProcessFailedKind();
}
[CompilerGeneratedAttribute]
[GuidAttribute("4DAB9422-46FA-4C3E-A5D2-41D2071D3680")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ProcessFailedEventArgs2 {
    [DispIdAttribute("1610743808")]
public COREWEBVIEW2_PROCESS_FAILED_REASON Reason { get; }
    [DispIdAttribute("1610743809")]
public int ExitCode { get; }
    [DispIdAttribute("1610743810")]
public string ProcessDescription { get; }
    [DispIdAttribute("1610743811")]
public ICoreWebView2FrameInfoCollection FrameInfosForFailedProcess { get; }
    public void _VtblGap1_1();
    public abstract virtual COREWEBVIEW2_PROCESS_FAILED_REASON get_reason();
    public abstract virtual int get_ExitCode();
    public abstract virtual string get_ProcessDescription();
    public abstract virtual ICoreWebView2FrameInfoCollection get_FrameInfosForFailedProcess();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("AB667428-094D-5FD1-B480-8B4C0FDBDF2F")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ProcessFailedEventArgs3 {
    [DispIdAttribute("1610809344")]
public string FailureSourceModulePath { get; }
    public void _VtblGap1_5();
    public abstract virtual string get_FailureSourceModulePath();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("79E0AEA4-990B-42D9-AA1D-0FCC2E5BC7F1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ProcessFailedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2 sender, ICoreWebView2ProcessFailedEventArgs args);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("84FA7612-3F3D-4FBF-889D-FAD000492D72")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ProcessInfo {
    [DispIdAttribute("1610678272")]
public int ProcessId { get; }
    [DispIdAttribute("1610678273")]
public COREWEBVIEW2_PROCESS_KIND Kind { get; }
    public abstract virtual int get_ProcessId();
    public abstract virtual COREWEBVIEW2_PROCESS_KIND get_Kind();
}
[CompilerGeneratedAttribute]
[GuidAttribute("402B99CD-A0CC-4FA5-B7A5-51D86A1D2339")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ProcessInfoCollection {
    [DispIdAttribute("1610678272")]
public UInt32 Count { get; }
    public abstract virtual UInt32 get_Count();
    public abstract virtual ICoreWebView2ProcessInfo GetValueAtIndex(UInt32 index);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("F4AF0C39-44B9-40E9-8B11-0484CFB9E0A1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ProcessInfosChangedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2Environment sender, object args);
}
[CompilerGeneratedAttribute]
[GuidAttribute("79110AD3-CD5D-4373-8BC3-C60658F17A5F")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Profile {
    [DispIdAttribute("1610678272")]
public string ProfileName { get; }
    [DispIdAttribute("1610678273")]
public int IsInPrivateModeEnabled { get; }
    [DispIdAttribute("1610678274")]
public string ProfilePath { get; }
    [DispIdAttribute("1610678275")]
public string DefaultDownloadFolderPath { get; public set; }
    [DispIdAttribute("1610678277")]
public COREWEBVIEW2_PREFERRED_COLOR_SCHEME PreferredColorScheme { get; public set; }
    public abstract virtual string get_ProfileName();
    public abstract virtual int get_IsInPrivateModeEnabled();
    public abstract virtual string get_ProfilePath();
    public abstract virtual string get_DefaultDownloadFolderPath();
    public abstract virtual void set_DefaultDownloadFolderPath(string value);
    public abstract virtual COREWEBVIEW2_PREFERRED_COLOR_SCHEME get_PreferredColorScheme();
    public abstract virtual void set_PreferredColorScheme(COREWEBVIEW2_PREFERRED_COLOR_SCHEME value);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("FA740D4B-5EAE-4344-A8AD-74BE31925397")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Profile2 {
    public void _VtblGap1_7();
    public abstract virtual void ClearBrowsingData(COREWEBVIEW2_BROWSING_DATA_KINDS dataKinds, ICoreWebView2ClearBrowsingDataCompletedHandler handler);
    public abstract virtual void ClearBrowsingDataInTimeRange(COREWEBVIEW2_BROWSING_DATA_KINDS dataKinds, double startTime, double endTime, ICoreWebView2ClearBrowsingDataCompletedHandler handler);
    public abstract virtual void ClearBrowsingDataAll(ICoreWebView2ClearBrowsingDataCompletedHandler handler);
}
[CompilerGeneratedAttribute]
[GuidAttribute("B188E659-5685-4E05-BDBA-FC640E0F1992")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Profile3 {
    [DispIdAttribute("1610809344")]
public COREWEBVIEW2_TRACKING_PREVENTION_LEVEL PreferredTrackingPreventionLevel { get; public set; }
    public void _VtblGap1_10();
    public abstract virtual COREWEBVIEW2_TRACKING_PREVENTION_LEVEL get_PreferredTrackingPreventionLevel();
    public abstract virtual void set_PreferredTrackingPreventionLevel(COREWEBVIEW2_TRACKING_PREVENTION_LEVEL value);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("8F4AE680-192E-4EC8-833A-21CFADAEF628")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Profile4 {
    public void _VtblGap1_12();
    public abstract virtual void SetPermissionState(COREWEBVIEW2_PERMISSION_KIND PermissionKind, string origin, COREWEBVIEW2_PERMISSION_STATE State, ICoreWebView2SetPermissionStateCompletedHandler handler);
    public abstract virtual void GetNonDefaultPermissionSettings(ICoreWebView2GetNonDefaultPermissionSettingsCompletedHandler handler);
}
[CompilerGeneratedAttribute]
[GuidAttribute("2EE5B76E-6E80-4DF2-BCD3-D4EC3340A01B")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Profile5 {
    [DispIdAttribute("1610940416")]
public ICoreWebView2CookieManager CookieManager { get; }
    public void _VtblGap1_14();
    public abstract virtual ICoreWebView2CookieManager get_CookieManager();
}
[CompilerGeneratedAttribute]
[GuidAttribute("BD82FA6A-1D65-4C33-B2B4-0393020CC61B")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Profile6 {
    [DispIdAttribute("1611005952")]
public int IsPasswordAutosaveEnabled { get; public set; }
    [DispIdAttribute("1611005954")]
public int IsGeneralAutofillEnabled { get; public set; }
    public void _VtblGap1_15();
    public abstract virtual int get_IsPasswordAutosaveEnabled();
    public abstract virtual void set_IsPasswordAutosaveEnabled(int value);
    public abstract virtual int get_IsGeneralAutofillEnabled();
    public abstract virtual void set_IsGeneralAutofillEnabled(int value);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("7B4C7906-A1AA-4CB4-B723-DB09F813D541")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Profile7 {
    public void _VtblGap1_19();
    public abstract virtual void AddBrowserExtension(string extensionFolderPath, ICoreWebView2ProfileAddBrowserExtensionCompletedHandler handler);
    public abstract virtual void GetBrowserExtensions(ICoreWebView2ProfileGetBrowserExtensionsCompletedHandler handler);
}
[CompilerGeneratedAttribute]
[GuidAttribute("FBF70C2F-EB1F-4383-85A0-163E92044011")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Profile8 {
    public void _VtblGap1_21();
    public abstract virtual void Delete();
    public abstract virtual void add_Deleted(ICoreWebView2ProfileDeletedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_Deleted(EventRegistrationToken token);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("DF1AAB27-82B9-4AB6-AAE8-017A49398C14")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ProfileAddBrowserExtensionCompletedHandler {
    public abstract virtual void Invoke(int errorCode, ICoreWebView2BrowserExtension result);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("DF35055D-772E-4DBE-B743-5FBF74A2B258")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ProfileDeletedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2Profile sender, object args);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("FCE16A1C-F107-4601-8B75-FC4940AE25D0")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ProfileGetBrowserExtensionsCompletedHandler {
    public abstract virtual void Invoke(int errorCode, ICoreWebView2BrowserExtensionList result);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("9C98C8B1-AC53-427E-A345-3049B5524BBE")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2RasterizationScaleChangedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2Controller sender, object args);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("333353B8-48BF-4449-8FCC-22697FAF5753")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2RegionRectCollectionView {
    [DispIdAttribute("1610678272")]
public UInt32 Count { get; }
    public abstract virtual UInt32 get_Count();
    public abstract virtual tagRECT GetValueAtIndex(UInt32 index);
}
[CompilerGeneratedAttribute]
[GuidAttribute("55902952-0E0D-5AAA-A7D0-E833CDB34F62")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2SaveAsUIShowingEventArgs {
    [DispIdAttribute("1610678272")]
public string ContentMimeType { get; }
    [DispIdAttribute("1610678273")]
public int Cancel { get; public set; }
    [DispIdAttribute("1610678275")]
public int SuppressDefaultDialog { get; public set; }
    [DispIdAttribute("1610678278")]
public string SaveAsFilePath { get; public set; }
    [DispIdAttribute("1610678280")]
public int AllowReplace { get; public set; }
    [DispIdAttribute("1610678282")]
public COREWEBVIEW2_SAVE_AS_KIND Kind { get; public set; }
    public abstract virtual string get_ContentMimeType();
    public abstract virtual void set_Cancel(int value);
    public abstract virtual int get_Cancel();
    public abstract virtual void set_SuppressDefaultDialog(int value);
    public abstract virtual int get_SuppressDefaultDialog();
    public abstract virtual ICoreWebView2Deferral GetDeferral();
    public abstract virtual void set_SaveAsFilePath(string value);
    public abstract virtual string get_SaveAsFilePath();
    public abstract virtual void set_AllowReplace(int value);
    public abstract virtual int get_AllowReplace();
    public abstract virtual void set_Kind(COREWEBVIEW2_SAVE_AS_KIND value);
    public abstract virtual COREWEBVIEW2_SAVE_AS_KIND get_Kind();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("6BAA177E-3A2E-5CCF-9A13-FAD676CD0522")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2SaveAsUIShowingEventHandler {
    public abstract virtual void Invoke(ICoreWebView2 sender, ICoreWebView2SaveAsUIShowingEventArgs args);
}
[CompilerGeneratedAttribute]
[GuidAttribute("7390BB70-ABE0-4843-9529-F143B31B03D6")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ScriptDialogOpeningEventArgs {
    [DispIdAttribute("1610678272")]
public string Uri { get; }
    [DispIdAttribute("1610678273")]
public COREWEBVIEW2_SCRIPT_DIALOG_KIND Kind { get; }
    [DispIdAttribute("1610678274")]
public string Message { get; }
    [DispIdAttribute("1610678276")]
public string DefaultText { get; }
    [DispIdAttribute("1610678277")]
public string ResultText { get; public set; }
    public abstract virtual string get_uri();
    public abstract virtual COREWEBVIEW2_SCRIPT_DIALOG_KIND get_Kind();
    public abstract virtual string get_Message();
    public abstract virtual void Accept();
    public abstract virtual string get_DefaultText();
    public abstract virtual string get_ResultText();
    public abstract virtual void set_ResultText(string ResultText);
    public abstract virtual ICoreWebView2Deferral GetDeferral();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("EF381BF9-AFA8-4E37-91C4-8AC48524BDFB")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ScriptDialogOpeningEventHandler {
    public abstract virtual void Invoke(ICoreWebView2 sender, ICoreWebView2ScriptDialogOpeningEventArgs args);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("054DAE00-84A3-49FF-BC17-4012A90BC9FD")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ScriptException {
    [DispIdAttribute("1610678272")]
public UInt32 LineNumber { get; }
    [DispIdAttribute("1610678273")]
public UInt32 ColumnNumber { get; }
    [DispIdAttribute("1610678274")]
public string Name { get; }
    [DispIdAttribute("1610678275")]
public string Message { get; }
    [DispIdAttribute("1610678276")]
public string ToJson { get; }
    public abstract virtual UInt32 get_LineNumber();
    public abstract virtual UInt32 get_ColumnNumber();
    public abstract virtual string get_name();
    public abstract virtual string get_Message();
    public abstract virtual string get_ToJson();
}
[CompilerGeneratedAttribute]
[GuidAttribute("012193ED-7C13-48FF-969D-A84C1F432A14")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ServerCertificateErrorDetectedEventArgs {
    [DispIdAttribute("1610678272")]
public COREWEBVIEW2_WEB_ERROR_STATUS ErrorStatus { get; }
    [DispIdAttribute("1610678273")]
public string RequestUri { get; }
    [DispIdAttribute("1610678274")]
public ICoreWebView2Certificate ServerCertificate { get; }
    [DispIdAttribute("1610678275")]
public COREWEBVIEW2_SERVER_CERTIFICATE_ERROR_ACTION Action { get; public set; }
    public abstract virtual COREWEBVIEW2_WEB_ERROR_STATUS get_ErrorStatus();
    public abstract virtual string get_RequestUri();
    public abstract virtual ICoreWebView2Certificate get_ServerCertificate();
    public abstract virtual COREWEBVIEW2_SERVER_CERTIFICATE_ERROR_ACTION get_Action();
    public abstract virtual void set_Action(COREWEBVIEW2_SERVER_CERTIFICATE_ERROR_ACTION value);
    public abstract virtual ICoreWebView2Deferral GetDeferral();
}
[CompilerGeneratedAttribute]
[GuidAttribute("969B3A26-D85E-4795-8199-FEF57344DA22")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ServerCertificateErrorDetectedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2 sender, ICoreWebView2ServerCertificateErrorDetectedEventArgs args);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("FC77FB30-9C9E-4076-B8C7-7644A703CA1B")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2SetPermissionStateCompletedHandler {
    public abstract virtual void Invoke(int errorCode);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("E562E4F0-D7FA-43AC-8D71-C05150499F00")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Settings {
    [DispIdAttribute("1610678272")]
public int IsScriptEnabled { get; public set; }
    [DispIdAttribute("1610678274")]
public int IsWebMessageEnabled { get; public set; }
    [DispIdAttribute("1610678276")]
public int AreDefaultScriptDialogsEnabled { get; public set; }
    [DispIdAttribute("1610678278")]
public int IsStatusBarEnabled { get; public set; }
    [DispIdAttribute("1610678280")]
public int AreDevToolsEnabled { get; public set; }
    [DispIdAttribute("1610678282")]
public int AreDefaultContextMenusEnabled { get; public set; }
    [DispIdAttribute("1610678284")]
public int AreHostObjectsAllowed { get; public set; }
    [DispIdAttribute("1610678286")]
public int IsZoomControlEnabled { get; public set; }
    [DispIdAttribute("1610678288")]
public int IsBuiltInErrorPageEnabled { get; public set; }
    public abstract virtual int get_IsScriptEnabled();
    public abstract virtual void set_IsScriptEnabled(int IsScriptEnabled);
    public abstract virtual int get_IsWebMessageEnabled();
    public abstract virtual void set_IsWebMessageEnabled(int IsWebMessageEnabled);
    public abstract virtual int get_AreDefaultScriptDialogsEnabled();
    public abstract virtual void set_AreDefaultScriptDialogsEnabled(int AreDefaultScriptDialogsEnabled);
    public abstract virtual int get_IsStatusBarEnabled();
    public abstract virtual void set_IsStatusBarEnabled(int IsStatusBarEnabled);
    public abstract virtual int get_AreDevToolsEnabled();
    public abstract virtual void set_AreDevToolsEnabled(int AreDevToolsEnabled);
    public abstract virtual int get_AreDefaultContextMenusEnabled();
    public abstract virtual void set_AreDefaultContextMenusEnabled(int enabled);
    public abstract virtual int get_AreHostObjectsAllowed();
    public abstract virtual void set_AreHostObjectsAllowed(int allowed);
    public abstract virtual int get_IsZoomControlEnabled();
    public abstract virtual void set_IsZoomControlEnabled(int enabled);
    public abstract virtual int get_IsBuiltInErrorPageEnabled();
    public abstract virtual void set_IsBuiltInErrorPageEnabled(int enabled);
}
[CompilerGeneratedAttribute]
[GuidAttribute("EE9A0F68-F46C-4E32-AC23-EF8CAC224D2A")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Settings2 {
    [DispIdAttribute("1610743808")]
public string UserAgent { get; public set; }
    public void _VtblGap1_18();
    public abstract virtual string get_UserAgent();
    public abstract virtual void set_UserAgent(string value);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("FDB5AB74-AF33-4854-84F0-0A631DEB5EBA")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Settings3 {
    [DispIdAttribute("1610809344")]
public int AreBrowserAcceleratorKeysEnabled { get; public set; }
    public void _VtblGap1_20();
    public abstract virtual int get_AreBrowserAcceleratorKeysEnabled();
    public abstract virtual void set_AreBrowserAcceleratorKeysEnabled(int value);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("CB56846C-4168-4D53-B04F-03B6D6796FF2")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Settings4 {
    [DispIdAttribute("1610874880")]
public int IsPasswordAutosaveEnabled { get; public set; }
    [DispIdAttribute("1610874882")]
public int IsGeneralAutofillEnabled { get; public set; }
    public void _VtblGap1_22();
    public abstract virtual int get_IsPasswordAutosaveEnabled();
    public abstract virtual void set_IsPasswordAutosaveEnabled(int value);
    public abstract virtual int get_IsGeneralAutofillEnabled();
    public abstract virtual void set_IsGeneralAutofillEnabled(int value);
}
[CompilerGeneratedAttribute]
[GuidAttribute("183E7052-1D03-43A0-AB99-98E043B66B39")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Settings5 {
    [DispIdAttribute("1610940416")]
public int IsPinchZoomEnabled { get; public set; }
    public void _VtblGap1_26();
    public abstract virtual int get_IsPinchZoomEnabled();
    public abstract virtual void set_IsPinchZoomEnabled(int value);
}
[CompilerGeneratedAttribute]
[GuidAttribute("11CB3ACD-9BC8-43B8-83BF-F40753714F87")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Settings6 {
    [DispIdAttribute("1611005952")]
public int IsSwipeNavigationEnabled { get; public set; }
    public void _VtblGap1_28();
    public abstract virtual int get_IsSwipeNavigationEnabled();
    public abstract virtual void set_IsSwipeNavigationEnabled(int value);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("488DC902-35EF-42D2-BC7D-94B65C4BC49C")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Settings7 {
    [DispIdAttribute("1611071488")]
public COREWEBVIEW2_PDF_TOOLBAR_ITEMS HiddenPdfToolbarItems { get; public set; }
    public void _VtblGap1_30();
    public abstract virtual COREWEBVIEW2_PDF_TOOLBAR_ITEMS get_HiddenPdfToolbarItems();
    public abstract virtual void set_HiddenPdfToolbarItems(COREWEBVIEW2_PDF_TOOLBAR_ITEMS value);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("9E6B0E8F-86AD-4E81-8147-A9B5EDB68650")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Settings8 {
    [DispIdAttribute("1611137024")]
public int IsReputationCheckingRequired { get; public set; }
    public void _VtblGap1_32();
    public abstract virtual int get_IsReputationCheckingRequired();
    public abstract virtual void set_IsReputationCheckingRequired(int value);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("0528A73B-E92D-49F4-927A-E547DDDAA37D")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Settings9 {
    [DispIdAttribute("1611202560")]
public int IsNonClientRegionSupportEnabled { get; public set; }
    public void _VtblGap1_34();
    public abstract virtual int get_IsNonClientRegionSupportEnabled();
    public abstract virtual void set_IsNonClientRegionSupportEnabled(int value);
}
[CompilerGeneratedAttribute]
[GuidAttribute("B747A495-0C6F-449E-97B8-2F81E9D6AB43")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2SharedBuffer {
    [DispIdAttribute("1610678272")]
public ulong Size { get; }
    [DispIdAttribute("1610678273")]
public IntPtr Buffer { get; }
    [DispIdAttribute("1610678275")]
public IntPtr FileMappingHandle { get; }
    public abstract virtual ulong get_Size();
    public abstract virtual IntPtr get_Buffer();
    public abstract virtual IStream OpenStream();
    public abstract virtual IntPtr get_FileMappingHandle();
    public abstract virtual void Close();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("E24B07E3-8169-5C34-994A-7F6478946A3C")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ShowSaveAsUICompletedHandler {
    public abstract virtual void Invoke(int errorCode, COREWEBVIEW2_SAVE_AS_UI_RESULT result);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("31E0E545-1DBA-4266-8914-F63848A1F7D7")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2SourceChangedEventArgs {
    [DispIdAttribute("1610678272")]
public int IsNewDocument { get; }
    public abstract virtual int get_IsNewDocument();
}
[CompilerGeneratedAttribute]
[GuidAttribute("3C067F9F-5388-4772-8B48-79F7EF1AB37C")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2SourceChangedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2 sender, ICoreWebView2SourceChangedEventArgs args);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("81336594-7EDE-4BA9-BF71-ACF0A95B58DD")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2StateChangedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2DownloadOperation sender, object args);
}
[CompilerGeneratedAttribute]
[GuidAttribute("A5E3B0D0-10DF-4156-BFAD-3B43867ACAC6")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2StatusBarTextChangedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2 sender, object args);
}
[CompilerGeneratedAttribute]
[GuidAttribute("F41F3F8A-BCC3-11EB-8529-0242AC130003")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2StringCollection {
    [DispIdAttribute("1610678272")]
public UInt32 Count { get; }
    public abstract virtual UInt32 get_Count();
    public abstract virtual string GetValueAtIndex(UInt32 index);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("00F206A7-9D17-4605-91F6-4E8E4DE192E3")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2TrySuspendCompletedHandler {
    public abstract virtual void Invoke(int errorCode, int result);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("0F99A40C-E962-4207-9E92-E3D542EFF849")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2WebMessageReceivedEventArgs {
    [DispIdAttribute("1610678272")]
public string Source { get; }
    [DispIdAttribute("1610678273")]
public string WebMessageAsJson { get; }
    public abstract virtual string get_Source();
    public abstract virtual string get_webMessageAsJson();
    public abstract virtual string TryGetWebMessageAsString();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("06FC7AB7-C90C-4297-9389-33CA01CF6D5E")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2WebMessageReceivedEventArgs2 {
    [DispIdAttribute("1610743808")]
public ICoreWebView2ObjectCollectionView AdditionalObjects { get; }
    public void _VtblGap1_3();
    public abstract virtual ICoreWebView2ObjectCollectionView get_additionalObjects();
}
[CompilerGeneratedAttribute]
[GuidAttribute("57213F19-00E6-49FA-8E07-898EA01ECBD2")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2WebMessageReceivedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2 sender, ICoreWebView2WebMessageReceivedEventArgs args);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("97055CD4-512C-4264-8B5F-E3F446CEA6A5")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2WebResourceRequest {
    [DispIdAttribute("1610678272")]
public string Uri { get; public set; }
    [DispIdAttribute("1610678274")]
public string Method { get; public set; }
    [DispIdAttribute("1610678276")]
public IStream Content { get; public set; }
    [DispIdAttribute("1610678278")]
public ICoreWebView2HttpRequestHeaders Headers { get; }
    public abstract virtual string get_uri();
    public abstract virtual void set_uri(string uri);
    public abstract virtual string get_Method();
    public abstract virtual void set_Method(string Method);
    public abstract virtual IStream get_Content();
    public abstract virtual void set_Content(IStream Content);
    public abstract virtual ICoreWebView2HttpRequestHeaders get_Headers();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("453E667F-12C7-49D4-BE6D-DDBE7956F57A")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2WebResourceRequestedEventArgs {
    [DispIdAttribute("1610678272")]
public ICoreWebView2WebResourceRequest Request { get; }
    [DispIdAttribute("1610678273")]
public ICoreWebView2WebResourceResponse Response { get; public set; }
    [DispIdAttribute("1610678276")]
public COREWEBVIEW2_WEB_RESOURCE_CONTEXT ResourceContext { get; }
    public abstract virtual ICoreWebView2WebResourceRequest get_Request();
    public abstract virtual ICoreWebView2WebResourceResponse get_Response();
    public abstract virtual void set_Response(ICoreWebView2WebResourceResponse Response);
    public abstract virtual ICoreWebView2Deferral GetDeferral();
    public abstract virtual COREWEBVIEW2_WEB_RESOURCE_CONTEXT get_ResourceContext();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("9C562C24-B219-4D7F-92F6-B187FBBADD56")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2WebResourceRequestedEventArgs2 {
    [DispIdAttribute("1610743808")]
public COREWEBVIEW2_WEB_RESOURCE_REQUEST_SOURCE_KINDS RequestedSourceKind { get; }
    public void _VtblGap1_5();
    public abstract virtual COREWEBVIEW2_WEB_RESOURCE_REQUEST_SOURCE_KINDS get_RequestedSourceKind();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("AB00B74C-15F1-4646-80E8-E76341D25D71")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2WebResourceRequestedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2 sender, ICoreWebView2WebResourceRequestedEventArgs args);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("AAFCC94F-FA27-48FD-97DF-830EF75AAEC9")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2WebResourceResponse {
    [DispIdAttribute("1610678272")]
public IStream Content { get; public set; }
    [DispIdAttribute("1610678274")]
public ICoreWebView2HttpResponseHeaders Headers { get; }
    [DispIdAttribute("1610678275")]
public int StatusCode { get; public set; }
    [DispIdAttribute("1610678277")]
public string ReasonPhrase { get; public set; }
    public abstract virtual IStream get_Content();
    public abstract virtual void set_Content(IStream Content);
    public abstract virtual ICoreWebView2HttpResponseHeaders get_Headers();
    public abstract virtual int get_StatusCode();
    public abstract virtual void set_StatusCode(int StatusCode);
    public abstract virtual string get_ReasonPhrase();
    public abstract virtual void set_ReasonPhrase(string ReasonPhrase);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("D1DB483D-6796-4B8B-80FC-13712BB716F4")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2WebResourceResponseReceivedEventArgs {
    [DispIdAttribute("1610678272")]
public ICoreWebView2WebResourceRequest Request { get; }
    [DispIdAttribute("1610678273")]
public ICoreWebView2WebResourceResponseView Response { get; }
    public abstract virtual ICoreWebView2WebResourceRequest get_Request();
    public abstract virtual ICoreWebView2WebResourceResponseView get_Response();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("7DE9898A-24F5-40C3-A2DE-D4F458E69828")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2WebResourceResponseReceivedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2 sender, ICoreWebView2WebResourceResponseReceivedEventArgs args);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("79701053-7759-4162-8F7D-F1B3F084928D")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2WebResourceResponseView {
    [DispIdAttribute("1610678272")]
public ICoreWebView2HttpResponseHeaders Headers { get; }
    [DispIdAttribute("1610678273")]
public int StatusCode { get; }
    [DispIdAttribute("1610678274")]
public string ReasonPhrase { get; }
    public abstract virtual ICoreWebView2HttpResponseHeaders get_Headers();
    public abstract virtual int get_StatusCode();
    public abstract virtual string get_ReasonPhrase();
    public abstract virtual void GetContent(ICoreWebView2WebResourceResponseViewGetContentCompletedHandler handler);
}
[CompilerGeneratedAttribute]
[GuidAttribute("875738E1-9FA2-40E3-8B74-2E8972DD6FE7")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2WebResourceResponseViewGetContentCompletedHandler {
    public abstract virtual void Invoke(int errorCode, IStream result);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("5C19E9E0-092F-486B-AFFA-CA8231913039")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2WindowCloseRequestedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2 sender, object args);
}
[CompilerGeneratedAttribute]
[GuidAttribute("5EAF559F-B46E-4397-8860-E422F287FF1E")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2WindowFeatures {
    [DispIdAttribute("1610678272")]
public int HasPosition { get; }
    [DispIdAttribute("1610678273")]
public int HasSize { get; }
    [DispIdAttribute("1610678274")]
public UInt32 Left { get; }
    [DispIdAttribute("1610678275")]
public UInt32 Top { get; }
    [DispIdAttribute("1610678276")]
public UInt32 Height { get; }
    [DispIdAttribute("1610678277")]
public UInt32 Width { get; }
    [DispIdAttribute("1610678278")]
public int ShouldDisplayMenuBar { get; }
    [DispIdAttribute("1610678279")]
public int ShouldDisplayStatus { get; }
    [DispIdAttribute("1610678280")]
public int ShouldDisplayToolbar { get; }
    [DispIdAttribute("1610678281")]
public int ShouldDisplayScrollBars { get; }
    public abstract virtual int get_HasPosition();
    public abstract virtual int get_HasSize();
    public abstract virtual UInt32 get_Left();
    public abstract virtual UInt32 get_Top();
    public abstract virtual UInt32 get_Height();
    public abstract virtual UInt32 get_Width();
    public abstract virtual int get_ShouldDisplayMenuBar();
    public abstract virtual int get_ShouldDisplayStatus();
    public abstract virtual int get_ShouldDisplayToolbar();
    public abstract virtual int get_ShouldDisplayScrollBars();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("B52D71D6-C4DF-4543-A90C-64A3E60F38CB")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ZoomFactorChangedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2Controller sender, object args);
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.tagPOINT")]
public class Microsoft.Web.WebView2.Core.Raw.tagPOINT : ValueType {
    public int x;
    public int y;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.tagRECT")]
public class Microsoft.Web.WebView2.Core.Raw.tagRECT : ValueType {
    public int left;
    public int top;
    public int right;
    public int bottom;
}
internal class Microsoft.Web.WebView2.Core.Variant : ValueType {
    public ushort vt;
    public ushort wReserved1;
    public ushort wReserved2;
    public ushort wReserved3;
    public IntPtr pVal;
    public IntPtr pRecInfo;
}
public class Microsoft.Web.WebView2.Core.WebView2RuntimeNotFoundException : Exception {
    public WebView2RuntimeNotFoundException(string message);
    public WebView2RuntimeNotFoundException(Exception inner);
    public WebView2RuntimeNotFoundException(string message, Exception inner);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
