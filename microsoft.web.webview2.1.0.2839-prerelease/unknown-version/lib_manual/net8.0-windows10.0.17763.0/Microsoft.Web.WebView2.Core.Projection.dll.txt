[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2 : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2 obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2 obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2 FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2 obj);
    public static MarshalerArray<CoreWebView2> CreateMarshalerArray(CoreWebView2[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2AcceleratorKeyPressedEventArgs : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2AcceleratorKeyPressedEventArgs obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2AcceleratorKeyPressedEventArgs obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2AcceleratorKeyPressedEventArgs FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2AcceleratorKeyPressedEventArgs obj);
    public static MarshalerArray<CoreWebView2AcceleratorKeyPressedEventArgs> CreateMarshalerArray(CoreWebView2AcceleratorKeyPressedEventArgs[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2AcceleratorKeyPressedEventArgs[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2AcceleratorKeyPressedEventArgs[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2AcceleratorKeyPressedEventArgs[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2AcceleratorKeyPressedEventArgs> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2AcceleratorKeyPressedEventArgsRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2BasicAuthenticationRequestedEventArgs : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2BasicAuthenticationRequestedEventArgs obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2BasicAuthenticationRequestedEventArgs obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2BasicAuthenticationRequestedEventArgs FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2BasicAuthenticationRequestedEventArgs obj);
    public static MarshalerArray<CoreWebView2BasicAuthenticationRequestedEventArgs> CreateMarshalerArray(CoreWebView2BasicAuthenticationRequestedEventArgs[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2BasicAuthenticationRequestedEventArgs[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2BasicAuthenticationRequestedEventArgs[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2BasicAuthenticationRequestedEventArgs[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2BasicAuthenticationRequestedEventArgs> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2BasicAuthenticationRequestedEventArgsRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2BasicAuthenticationResponse : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2BasicAuthenticationResponse obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2BasicAuthenticationResponse obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2BasicAuthenticationResponse FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2BasicAuthenticationResponse obj);
    public static MarshalerArray<CoreWebView2BasicAuthenticationResponse> CreateMarshalerArray(CoreWebView2BasicAuthenticationResponse[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2BasicAuthenticationResponse[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2BasicAuthenticationResponse[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2BasicAuthenticationResponse[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2BasicAuthenticationResponse> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2BasicAuthenticationResponseRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2BrowserExtension : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2BrowserExtension obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2BrowserExtension obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2BrowserExtension FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2BrowserExtension obj);
    public static MarshalerArray<CoreWebView2BrowserExtension> CreateMarshalerArray(CoreWebView2BrowserExtension[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2BrowserExtension[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2BrowserExtension[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2BrowserExtension[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2BrowserExtension> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2BrowserExtensionRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2BrowserProcessExitedEventArgs : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2BrowserProcessExitedEventArgs obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2BrowserProcessExitedEventArgs obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2BrowserProcessExitedEventArgs FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2BrowserProcessExitedEventArgs obj);
    public static MarshalerArray<CoreWebView2BrowserProcessExitedEventArgs> CreateMarshalerArray(CoreWebView2BrowserProcessExitedEventArgs[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2BrowserProcessExitedEventArgs[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2BrowserProcessExitedEventArgs[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2BrowserProcessExitedEventArgs[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2BrowserProcessExitedEventArgs> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2BrowserProcessExitedEventArgsRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2Certificate : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2Certificate obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2Certificate obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2Certificate FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2Certificate obj);
    public static MarshalerArray<CoreWebView2Certificate> CreateMarshalerArray(CoreWebView2Certificate[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2Certificate[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2Certificate[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2Certificate[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2Certificate> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[GuidAttribute("4B9B0FE5-0AD9-5594-81E7-B18ECC0636DE")]
internal interface ABI.Microsoft.Web.WebView2.Core.CoreWebView2Certificate_Manual {
}
internal static class ABI.Microsoft.Web.WebView2.Core.CoreWebView2Certificate_ManualMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static Certificate ToCertificate(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2CertificateRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificate : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2ClientCertificate obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2ClientCertificate obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2ClientCertificate FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2ClientCertificate obj);
    public static MarshalerArray<CoreWebView2ClientCertificate> CreateMarshalerArray(CoreWebView2ClientCertificate[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2ClientCertificate[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2ClientCertificate[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2ClientCertificate[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2ClientCertificate> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[GuidAttribute("FAEFEFC2-20C3-5D86-8A74-F6D87D6FF8FA")]
internal interface ABI.Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificate_Manual {
}
internal static class ABI.Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificate_ManualMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static Certificate ToCertificate(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificateRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificateRequestedEventArgs : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2ClientCertificateRequestedEventArgs obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2ClientCertificateRequestedEventArgs obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2ClientCertificateRequestedEventArgs FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2ClientCertificateRequestedEventArgs obj);
    public static MarshalerArray<CoreWebView2ClientCertificateRequestedEventArgs> CreateMarshalerArray(CoreWebView2ClientCertificateRequestedEventArgs[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2ClientCertificateRequestedEventArgs[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2ClientCertificateRequestedEventArgs[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2ClientCertificateRequestedEventArgs[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2ClientCertificateRequestedEventArgs> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificateRequestedEventArgsRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2CompositionController : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2CompositionController obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2CompositionController obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2CompositionController FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2CompositionController obj);
    public static MarshalerArray<CoreWebView2CompositionController> CreateMarshalerArray(CoreWebView2CompositionController[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2CompositionController[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2CompositionController[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2CompositionController[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2CompositionController> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2CompositionControllerRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2ContentLoadingEventArgs : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2ContentLoadingEventArgs obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2ContentLoadingEventArgs obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2ContentLoadingEventArgs FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2ContentLoadingEventArgs obj);
    public static MarshalerArray<CoreWebView2ContentLoadingEventArgs> CreateMarshalerArray(CoreWebView2ContentLoadingEventArgs[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2ContentLoadingEventArgs[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2ContentLoadingEventArgs[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2ContentLoadingEventArgs[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2ContentLoadingEventArgs> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2ContentLoadingEventArgsRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuItem : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2ContextMenuItem obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2ContextMenuItem obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2ContextMenuItem FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2ContextMenuItem obj);
    public static MarshalerArray<CoreWebView2ContextMenuItem> CreateMarshalerArray(CoreWebView2ContextMenuItem[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2ContextMenuItem[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2ContextMenuItem[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2ContextMenuItem[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2ContextMenuItem> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuItemRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuRequestedEventArgs : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2ContextMenuRequestedEventArgs obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2ContextMenuRequestedEventArgs obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2ContextMenuRequestedEventArgs FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2ContextMenuRequestedEventArgs obj);
    public static MarshalerArray<CoreWebView2ContextMenuRequestedEventArgs> CreateMarshalerArray(CoreWebView2ContextMenuRequestedEventArgs[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2ContextMenuRequestedEventArgs[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2ContextMenuRequestedEventArgs[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2ContextMenuRequestedEventArgs[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2ContextMenuRequestedEventArgs> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuRequestedEventArgsRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuTarget : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2ContextMenuTarget obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2ContextMenuTarget obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2ContextMenuTarget FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2ContextMenuTarget obj);
    public static MarshalerArray<CoreWebView2ContextMenuTarget> CreateMarshalerArray(CoreWebView2ContextMenuTarget[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2ContextMenuTarget[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2ContextMenuTarget[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2ContextMenuTarget[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2ContextMenuTarget> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuTargetRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2Controller : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2Controller obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2Controller obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2Controller FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2Controller obj);
    public static MarshalerArray<CoreWebView2Controller> CreateMarshalerArray(CoreWebView2Controller[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2Controller[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2Controller[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2Controller[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2Controller> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2ControllerOptions : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2ControllerOptions obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2ControllerOptions obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2ControllerOptions FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2ControllerOptions obj);
    public static MarshalerArray<CoreWebView2ControllerOptions> CreateMarshalerArray(CoreWebView2ControllerOptions[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2ControllerOptions[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2ControllerOptions[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2ControllerOptions[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2ControllerOptions> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2ControllerOptionsRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2ControllerRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2ControllerWindowReference : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2ControllerWindowReference obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2ControllerWindowReference obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2ControllerWindowReference FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2ControllerWindowReference obj);
    public static MarshalerArray<CoreWebView2ControllerWindowReference> CreateMarshalerArray(CoreWebView2ControllerWindowReference[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2ControllerWindowReference[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2ControllerWindowReference[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2ControllerWindowReference[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2ControllerWindowReference> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2ControllerWindowReferenceRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2Cookie : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2Cookie obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2Cookie obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2Cookie FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2Cookie obj);
    public static MarshalerArray<CoreWebView2Cookie> CreateMarshalerArray(CoreWebView2Cookie[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2Cookie[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2Cookie[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2Cookie[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2Cookie> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2CookieManager : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2CookieManager obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2CookieManager obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2CookieManager FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2CookieManager obj);
    public static MarshalerArray<CoreWebView2CookieManager> CreateMarshalerArray(CoreWebView2CookieManager[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2CookieManager[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2CookieManager[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2CookieManager[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2CookieManager> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2CookieManagerRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2CookieRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2CustomSchemeRegistration : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2CustomSchemeRegistration obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2CustomSchemeRegistration obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2CustomSchemeRegistration FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2CustomSchemeRegistration obj);
    public static MarshalerArray<CoreWebView2CustomSchemeRegistration> CreateMarshalerArray(CoreWebView2CustomSchemeRegistration[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2CustomSchemeRegistration[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2CustomSchemeRegistration[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2CustomSchemeRegistration[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2CustomSchemeRegistration> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2CustomSchemeRegistrationRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2DevToolsProtocolEventReceivedEventArgs : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2DevToolsProtocolEventReceivedEventArgs obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2DevToolsProtocolEventReceivedEventArgs obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2DevToolsProtocolEventReceivedEventArgs FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2DevToolsProtocolEventReceivedEventArgs obj);
    public static MarshalerArray<CoreWebView2DevToolsProtocolEventReceivedEventArgs> CreateMarshalerArray(CoreWebView2DevToolsProtocolEventReceivedEventArgs[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2DevToolsProtocolEventReceivedEventArgs[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2DevToolsProtocolEventReceivedEventArgs[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2DevToolsProtocolEventReceivedEventArgs[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2DevToolsProtocolEventReceivedEventArgs> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2DevToolsProtocolEventReceivedEventArgsRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2DevToolsProtocolEventReceiver : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2DevToolsProtocolEventReceiver obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2DevToolsProtocolEventReceiver obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2DevToolsProtocolEventReceiver FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2DevToolsProtocolEventReceiver obj);
    public static MarshalerArray<CoreWebView2DevToolsProtocolEventReceiver> CreateMarshalerArray(CoreWebView2DevToolsProtocolEventReceiver[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2DevToolsProtocolEventReceiver[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2DevToolsProtocolEventReceiver[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2DevToolsProtocolEventReceiver[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2DevToolsProtocolEventReceiver> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2DevToolsProtocolEventReceiverRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2DOMContentLoadedEventArgs : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2DOMContentLoadedEventArgs obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2DOMContentLoadedEventArgs obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2DOMContentLoadedEventArgs FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2DOMContentLoadedEventArgs obj);
    public static MarshalerArray<CoreWebView2DOMContentLoadedEventArgs> CreateMarshalerArray(CoreWebView2DOMContentLoadedEventArgs[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2DOMContentLoadedEventArgs[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2DOMContentLoadedEventArgs[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2DOMContentLoadedEventArgs[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2DOMContentLoadedEventArgs> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2DOMContentLoadedEventArgsRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2DownloadOperation : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2DownloadOperation obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2DownloadOperation obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2DownloadOperation FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2DownloadOperation obj);
    public static MarshalerArray<CoreWebView2DownloadOperation> CreateMarshalerArray(CoreWebView2DownloadOperation[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2DownloadOperation[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2DownloadOperation[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2DownloadOperation[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2DownloadOperation> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2DownloadOperationRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2DownloadStartingEventArgs : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2DownloadStartingEventArgs obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2DownloadStartingEventArgs obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2DownloadStartingEventArgs FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2DownloadStartingEventArgs obj);
    public static MarshalerArray<CoreWebView2DownloadStartingEventArgs> CreateMarshalerArray(CoreWebView2DownloadStartingEventArgs[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2DownloadStartingEventArgs[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2DownloadStartingEventArgs[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2DownloadStartingEventArgs[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2DownloadStartingEventArgs> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2DownloadStartingEventArgsRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2Environment : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2Environment obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2Environment obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2Environment FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2Environment obj);
    public static MarshalerArray<CoreWebView2Environment> CreateMarshalerArray(CoreWebView2Environment[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2Environment[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2Environment[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2Environment[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2Environment> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2EnvironmentOptions : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2EnvironmentOptions obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2EnvironmentOptions obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2EnvironmentOptions FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2EnvironmentOptions obj);
    public static MarshalerArray<CoreWebView2EnvironmentOptions> CreateMarshalerArray(CoreWebView2EnvironmentOptions[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2EnvironmentOptions[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2EnvironmentOptions[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2EnvironmentOptions[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2EnvironmentOptions> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2EnvironmentOptionsRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2EnvironmentRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2ExecuteScriptResult : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2ExecuteScriptResult obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2ExecuteScriptResult obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2ExecuteScriptResult FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2ExecuteScriptResult obj);
    public static MarshalerArray<CoreWebView2ExecuteScriptResult> CreateMarshalerArray(CoreWebView2ExecuteScriptResult[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2ExecuteScriptResult[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2ExecuteScriptResult[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2ExecuteScriptResult[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2ExecuteScriptResult> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2ExecuteScriptResultRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2File : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2File obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2File obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2File FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2File obj);
    public static MarshalerArray<CoreWebView2File> CreateMarshalerArray(CoreWebView2File[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2File[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2File[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2File[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2File> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2FileRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2FileSystemHandle : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2FileSystemHandle obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2FileSystemHandle obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2FileSystemHandle FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2FileSystemHandle obj);
    public static MarshalerArray<CoreWebView2FileSystemHandle> CreateMarshalerArray(CoreWebView2FileSystemHandle[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2FileSystemHandle[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2FileSystemHandle[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2FileSystemHandle[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2FileSystemHandle> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2FileSystemHandleRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2Frame : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2Frame obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2Frame obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2Frame FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2Frame obj);
    public static MarshalerArray<CoreWebView2Frame> CreateMarshalerArray(CoreWebView2Frame[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2Frame[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2Frame[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2Frame[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2Frame> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2FrameCreatedEventArgs : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2FrameCreatedEventArgs obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2FrameCreatedEventArgs obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2FrameCreatedEventArgs FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2FrameCreatedEventArgs obj);
    public static MarshalerArray<CoreWebView2FrameCreatedEventArgs> CreateMarshalerArray(CoreWebView2FrameCreatedEventArgs[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2FrameCreatedEventArgs[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2FrameCreatedEventArgs[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2FrameCreatedEventArgs[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2FrameCreatedEventArgs> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2FrameCreatedEventArgsRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2FrameInfo : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2FrameInfo obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2FrameInfo obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2FrameInfo FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2FrameInfo obj);
    public static MarshalerArray<CoreWebView2FrameInfo> CreateMarshalerArray(CoreWebView2FrameInfo[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2FrameInfo[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2FrameInfo[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2FrameInfo[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2FrameInfo> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2FrameInfoRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2FrameRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2HttpHeadersCollectionIterator : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2HttpHeadersCollectionIterator obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2HttpHeadersCollectionIterator obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2HttpHeadersCollectionIterator FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2HttpHeadersCollectionIterator obj);
    public static MarshalerArray<CoreWebView2HttpHeadersCollectionIterator> CreateMarshalerArray(CoreWebView2HttpHeadersCollectionIterator[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2HttpHeadersCollectionIterator[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2HttpHeadersCollectionIterator[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2HttpHeadersCollectionIterator[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2HttpHeadersCollectionIterator> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2HttpHeadersCollectionIteratorRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2HttpRequestHeaders : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2HttpRequestHeaders obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2HttpRequestHeaders obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2HttpRequestHeaders FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2HttpRequestHeaders obj);
    public static MarshalerArray<CoreWebView2HttpRequestHeaders> CreateMarshalerArray(CoreWebView2HttpRequestHeaders[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2HttpRequestHeaders[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2HttpRequestHeaders[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2HttpRequestHeaders[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2HttpRequestHeaders> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2HttpRequestHeadersRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2HttpResponseHeaders : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2HttpResponseHeaders obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2HttpResponseHeaders obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2HttpResponseHeaders FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2HttpResponseHeaders obj);
    public static MarshalerArray<CoreWebView2HttpResponseHeaders> CreateMarshalerArray(CoreWebView2HttpResponseHeaders[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2HttpResponseHeaders[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2HttpResponseHeaders[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2HttpResponseHeaders[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2HttpResponseHeaders> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2HttpResponseHeadersRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2LaunchingExternalUriSchemeEventArgs : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2LaunchingExternalUriSchemeEventArgs obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2LaunchingExternalUriSchemeEventArgs obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2LaunchingExternalUriSchemeEventArgs FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2LaunchingExternalUriSchemeEventArgs obj);
    public static MarshalerArray<CoreWebView2LaunchingExternalUriSchemeEventArgs> CreateMarshalerArray(CoreWebView2LaunchingExternalUriSchemeEventArgs[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2LaunchingExternalUriSchemeEventArgs[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2LaunchingExternalUriSchemeEventArgs[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2LaunchingExternalUriSchemeEventArgs[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2LaunchingExternalUriSchemeEventArgs> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2LaunchingExternalUriSchemeEventArgsRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2MoveFocusRequestedEventArgs : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2MoveFocusRequestedEventArgs obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2MoveFocusRequestedEventArgs obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2MoveFocusRequestedEventArgs FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2MoveFocusRequestedEventArgs obj);
    public static MarshalerArray<CoreWebView2MoveFocusRequestedEventArgs> CreateMarshalerArray(CoreWebView2MoveFocusRequestedEventArgs[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2MoveFocusRequestedEventArgs[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2MoveFocusRequestedEventArgs[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2MoveFocusRequestedEventArgs[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2MoveFocusRequestedEventArgs> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2MoveFocusRequestedEventArgsRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2NavigationCompletedEventArgs : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2NavigationCompletedEventArgs obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2NavigationCompletedEventArgs obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2NavigationCompletedEventArgs FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2NavigationCompletedEventArgs obj);
    public static MarshalerArray<CoreWebView2NavigationCompletedEventArgs> CreateMarshalerArray(CoreWebView2NavigationCompletedEventArgs[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2NavigationCompletedEventArgs[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2NavigationCompletedEventArgs[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2NavigationCompletedEventArgs[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2NavigationCompletedEventArgs> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2NavigationCompletedEventArgsRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2NavigationStartingEventArgs : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2NavigationStartingEventArgs obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2NavigationStartingEventArgs obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2NavigationStartingEventArgs FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2NavigationStartingEventArgs obj);
    public static MarshalerArray<CoreWebView2NavigationStartingEventArgs> CreateMarshalerArray(CoreWebView2NavigationStartingEventArgs[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2NavigationStartingEventArgs[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2NavigationStartingEventArgs[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2NavigationStartingEventArgs[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2NavigationStartingEventArgs> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2NavigationStartingEventArgsRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2NewWindowRequestedEventArgs : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2NewWindowRequestedEventArgs obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2NewWindowRequestedEventArgs obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2NewWindowRequestedEventArgs FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2NewWindowRequestedEventArgs obj);
    public static MarshalerArray<CoreWebView2NewWindowRequestedEventArgs> CreateMarshalerArray(CoreWebView2NewWindowRequestedEventArgs[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2NewWindowRequestedEventArgs[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2NewWindowRequestedEventArgs[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2NewWindowRequestedEventArgs[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2NewWindowRequestedEventArgs> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2NewWindowRequestedEventArgsRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2NonClientRegionChangedEventArgs : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2NonClientRegionChangedEventArgs obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2NonClientRegionChangedEventArgs obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2NonClientRegionChangedEventArgs FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2NonClientRegionChangedEventArgs obj);
    public static MarshalerArray<CoreWebView2NonClientRegionChangedEventArgs> CreateMarshalerArray(CoreWebView2NonClientRegionChangedEventArgs[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2NonClientRegionChangedEventArgs[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2NonClientRegionChangedEventArgs[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2NonClientRegionChangedEventArgs[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2NonClientRegionChangedEventArgs> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2NonClientRegionChangedEventArgsRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2Notification : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2Notification obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2Notification obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2Notification FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2Notification obj);
    public static MarshalerArray<CoreWebView2Notification> CreateMarshalerArray(CoreWebView2Notification[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2Notification[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2Notification[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2Notification[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2Notification> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2NotificationRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2NotificationReceivedEventArgs : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2NotificationReceivedEventArgs obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2NotificationReceivedEventArgs obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2NotificationReceivedEventArgs FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2NotificationReceivedEventArgs obj);
    public static MarshalerArray<CoreWebView2NotificationReceivedEventArgs> CreateMarshalerArray(CoreWebView2NotificationReceivedEventArgs[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2NotificationReceivedEventArgs[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2NotificationReceivedEventArgs[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2NotificationReceivedEventArgs[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2NotificationReceivedEventArgs> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2NotificationReceivedEventArgsRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2PermissionRequestedEventArgs : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2PermissionRequestedEventArgs obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2PermissionRequestedEventArgs obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2PermissionRequestedEventArgs FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2PermissionRequestedEventArgs obj);
    public static MarshalerArray<CoreWebView2PermissionRequestedEventArgs> CreateMarshalerArray(CoreWebView2PermissionRequestedEventArgs[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2PermissionRequestedEventArgs[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2PermissionRequestedEventArgs[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2PermissionRequestedEventArgs[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2PermissionRequestedEventArgs> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2PermissionRequestedEventArgsRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2PermissionSetting : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2PermissionSetting obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2PermissionSetting obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2PermissionSetting FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2PermissionSetting obj);
    public static MarshalerArray<CoreWebView2PermissionSetting> CreateMarshalerArray(CoreWebView2PermissionSetting[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2PermissionSetting[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2PermissionSetting[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2PermissionSetting[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2PermissionSetting> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2PermissionSettingRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2PointerInfo : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2PointerInfo obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2PointerInfo obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2PointerInfo FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2PointerInfo obj);
    public static MarshalerArray<CoreWebView2PointerInfo> CreateMarshalerArray(CoreWebView2PointerInfo[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2PointerInfo[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2PointerInfo[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2PointerInfo[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2PointerInfo> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2PointerInfoRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2PrintSettings : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2PrintSettings obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2PrintSettings obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2PrintSettings FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2PrintSettings obj);
    public static MarshalerArray<CoreWebView2PrintSettings> CreateMarshalerArray(CoreWebView2PrintSettings[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2PrintSettings[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2PrintSettings[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2PrintSettings[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2PrintSettings> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2PrintSettingsRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2ProcessExtendedInfo : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2ProcessExtendedInfo obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2ProcessExtendedInfo obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2ProcessExtendedInfo FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2ProcessExtendedInfo obj);
    public static MarshalerArray<CoreWebView2ProcessExtendedInfo> CreateMarshalerArray(CoreWebView2ProcessExtendedInfo[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2ProcessExtendedInfo[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2ProcessExtendedInfo[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2ProcessExtendedInfo[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2ProcessExtendedInfo> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2ProcessExtendedInfoRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedEventArgs : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2ProcessFailedEventArgs obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2ProcessFailedEventArgs obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2ProcessFailedEventArgs FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2ProcessFailedEventArgs obj);
    public static MarshalerArray<CoreWebView2ProcessFailedEventArgs> CreateMarshalerArray(CoreWebView2ProcessFailedEventArgs[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2ProcessFailedEventArgs[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2ProcessFailedEventArgs[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2ProcessFailedEventArgs[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2ProcessFailedEventArgs> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedEventArgsRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2ProcessInfo : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2ProcessInfo obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2ProcessInfo obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2ProcessInfo FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2ProcessInfo obj);
    public static MarshalerArray<CoreWebView2ProcessInfo> CreateMarshalerArray(CoreWebView2ProcessInfo[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2ProcessInfo[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2ProcessInfo[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2ProcessInfo[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2ProcessInfo> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2ProcessInfoRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2Profile : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2Profile obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2Profile obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2Profile FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2Profile obj);
    public static MarshalerArray<CoreWebView2Profile> CreateMarshalerArray(CoreWebView2Profile[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2Profile[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2Profile[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2Profile[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2Profile> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[GuidAttribute("B42BFAB4-C4BF-5469-89AC-CADC69E3B0F5")]
internal interface ABI.Microsoft.Web.WebView2.Core.CoreWebView2Profile_Manual {
}
[GuidAttribute("6E62815A-6269-5756-92C3-F08AFE17649C")]
internal interface ABI.Microsoft.Web.WebView2.Core.CoreWebView2Profile_Manual2 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.CoreWebView2Profile_Manual2Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static IAsyncOperation`1<IReadOnlyList`1<CoreWebView2PermissionSetting>> GetNonDefaultPermissionSettingsAsync(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("C6129971-9ECC-5634-8896-723C1DBACD6F")]
internal interface ABI.Microsoft.Web.WebView2.Core.CoreWebView2Profile_Manual3 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.CoreWebView2Profile_Manual3Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static IAsyncOperation`1<IReadOnlyList`1<CoreWebView2BrowserExtension>> GetBrowserExtensionsAsync(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
internal static class ABI.Microsoft.Web.WebView2.Core.CoreWebView2Profile_ManualMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static IAsyncAction ClearBrowsingDataAsync(IObjectReference _obj, CoreWebView2BrowsingDataKinds dataKinds, DateTimeOffset startTime, DateTimeOffset endTime);
    internal static IAsyncAction ClearBrowsingDataAsync(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2ProfileRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2RcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2SaveAsUIShowingEventArgs : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2SaveAsUIShowingEventArgs obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2SaveAsUIShowingEventArgs obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2SaveAsUIShowingEventArgs FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2SaveAsUIShowingEventArgs obj);
    public static MarshalerArray<CoreWebView2SaveAsUIShowingEventArgs> CreateMarshalerArray(CoreWebView2SaveAsUIShowingEventArgs[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2SaveAsUIShowingEventArgs[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2SaveAsUIShowingEventArgs[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2SaveAsUIShowingEventArgs[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2SaveAsUIShowingEventArgs> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2SaveAsUIShowingEventArgsRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2SaveFileSecurityCheckStartingEventArgs : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2SaveFileSecurityCheckStartingEventArgs obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2SaveFileSecurityCheckStartingEventArgs obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2SaveFileSecurityCheckStartingEventArgs FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2SaveFileSecurityCheckStartingEventArgs obj);
    public static MarshalerArray<CoreWebView2SaveFileSecurityCheckStartingEventArgs> CreateMarshalerArray(CoreWebView2SaveFileSecurityCheckStartingEventArgs[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2SaveFileSecurityCheckStartingEventArgs[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2SaveFileSecurityCheckStartingEventArgs[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2SaveFileSecurityCheckStartingEventArgs[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2SaveFileSecurityCheckStartingEventArgs> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2SaveFileSecurityCheckStartingEventArgsRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2ScreenCaptureStartingEventArgs : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2ScreenCaptureStartingEventArgs obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2ScreenCaptureStartingEventArgs obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2ScreenCaptureStartingEventArgs FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2ScreenCaptureStartingEventArgs obj);
    public static MarshalerArray<CoreWebView2ScreenCaptureStartingEventArgs> CreateMarshalerArray(CoreWebView2ScreenCaptureStartingEventArgs[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2ScreenCaptureStartingEventArgs[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2ScreenCaptureStartingEventArgs[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2ScreenCaptureStartingEventArgs[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2ScreenCaptureStartingEventArgs> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2ScreenCaptureStartingEventArgsRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2ScriptDialogOpeningEventArgs : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2ScriptDialogOpeningEventArgs obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2ScriptDialogOpeningEventArgs obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2ScriptDialogOpeningEventArgs FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2ScriptDialogOpeningEventArgs obj);
    public static MarshalerArray<CoreWebView2ScriptDialogOpeningEventArgs> CreateMarshalerArray(CoreWebView2ScriptDialogOpeningEventArgs[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2ScriptDialogOpeningEventArgs[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2ScriptDialogOpeningEventArgs[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2ScriptDialogOpeningEventArgs[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2ScriptDialogOpeningEventArgs> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2ScriptDialogOpeningEventArgsRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2ScriptException : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2ScriptException obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2ScriptException obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2ScriptException FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2ScriptException obj);
    public static MarshalerArray<CoreWebView2ScriptException> CreateMarshalerArray(CoreWebView2ScriptException[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2ScriptException[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2ScriptException[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2ScriptException[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2ScriptException> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2ScriptExceptionRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2ServerCertificateErrorDetectedEventArgs : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2ServerCertificateErrorDetectedEventArgs obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2ServerCertificateErrorDetectedEventArgs obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2ServerCertificateErrorDetectedEventArgs FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2ServerCertificateErrorDetectedEventArgs obj);
    public static MarshalerArray<CoreWebView2ServerCertificateErrorDetectedEventArgs> CreateMarshalerArray(CoreWebView2ServerCertificateErrorDetectedEventArgs[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2ServerCertificateErrorDetectedEventArgs[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2ServerCertificateErrorDetectedEventArgs[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2ServerCertificateErrorDetectedEventArgs[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2ServerCertificateErrorDetectedEventArgs> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2ServerCertificateErrorDetectedEventArgsRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2Settings : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2Settings obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2Settings obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2Settings FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2Settings obj);
    public static MarshalerArray<CoreWebView2Settings> CreateMarshalerArray(CoreWebView2Settings[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2Settings[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2Settings[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2Settings[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2Settings> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2SettingsRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2SharedBuffer : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2SharedBuffer obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2SharedBuffer obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2SharedBuffer FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2SharedBuffer obj);
    public static MarshalerArray<CoreWebView2SharedBuffer> CreateMarshalerArray(CoreWebView2SharedBuffer[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2SharedBuffer[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2SharedBuffer[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2SharedBuffer[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2SharedBuffer> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2SharedBufferRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2SourceChangedEventArgs : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2SourceChangedEventArgs obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2SourceChangedEventArgs obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2SourceChangedEventArgs FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2SourceChangedEventArgs obj);
    public static MarshalerArray<CoreWebView2SourceChangedEventArgs> CreateMarshalerArray(CoreWebView2SourceChangedEventArgs[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2SourceChangedEventArgs[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2SourceChangedEventArgs[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2SourceChangedEventArgs[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2SourceChangedEventArgs> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2SourceChangedEventArgsRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2Texture : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2Texture obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2Texture obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2Texture FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2Texture obj);
    public static MarshalerArray<CoreWebView2Texture> CreateMarshalerArray(CoreWebView2Texture[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2Texture[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2Texture[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2Texture[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2Texture> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2TextureRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2TextureStream : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2TextureStream obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2TextureStream obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2TextureStream FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2TextureStream obj);
    public static MarshalerArray<CoreWebView2TextureStream> CreateMarshalerArray(CoreWebView2TextureStream[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2TextureStream[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2TextureStream[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2TextureStream[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2TextureStream> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2TextureStreamErrorReceivedEventArgs : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2TextureStreamErrorReceivedEventArgs obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2TextureStreamErrorReceivedEventArgs obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2TextureStreamErrorReceivedEventArgs FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2TextureStreamErrorReceivedEventArgs obj);
    public static MarshalerArray<CoreWebView2TextureStreamErrorReceivedEventArgs> CreateMarshalerArray(CoreWebView2TextureStreamErrorReceivedEventArgs[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2TextureStreamErrorReceivedEventArgs[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2TextureStreamErrorReceivedEventArgs[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2TextureStreamErrorReceivedEventArgs[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2TextureStreamErrorReceivedEventArgs> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2TextureStreamErrorReceivedEventArgsRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2TextureStreamRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2TextureStreamWebTextureReceivedEventArgs : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2TextureStreamWebTextureReceivedEventArgs obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2TextureStreamWebTextureReceivedEventArgs obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2TextureStreamWebTextureReceivedEventArgs FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2TextureStreamWebTextureReceivedEventArgs obj);
    public static MarshalerArray<CoreWebView2TextureStreamWebTextureReceivedEventArgs> CreateMarshalerArray(CoreWebView2TextureStreamWebTextureReceivedEventArgs[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2TextureStreamWebTextureReceivedEventArgs[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2TextureStreamWebTextureReceivedEventArgs[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2TextureStreamWebTextureReceivedEventArgs[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2TextureStreamWebTextureReceivedEventArgs> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2TextureStreamWebTextureReceivedEventArgsRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2UpdateRuntimeResult : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2UpdateRuntimeResult obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2UpdateRuntimeResult obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2UpdateRuntimeResult FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2UpdateRuntimeResult obj);
    public static MarshalerArray<CoreWebView2UpdateRuntimeResult> CreateMarshalerArray(CoreWebView2UpdateRuntimeResult[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2UpdateRuntimeResult[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2UpdateRuntimeResult[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2UpdateRuntimeResult[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2UpdateRuntimeResult> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[GuidAttribute("43CF2386-5D1C-5EDA-B35A-9572E355233E")]
internal interface ABI.Microsoft.Web.WebView2.Core.CoreWebView2UpdateRuntimeResult_Manual {
}
internal static class ABI.Microsoft.Web.WebView2.Core.CoreWebView2UpdateRuntimeResult_ManualMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static Exception get_ExtendedError(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2UpdateRuntimeResultRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2WebMessageReceivedEventArgs : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2WebMessageReceivedEventArgs obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2WebMessageReceivedEventArgs obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2WebMessageReceivedEventArgs FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2WebMessageReceivedEventArgs obj);
    public static MarshalerArray<CoreWebView2WebMessageReceivedEventArgs> CreateMarshalerArray(CoreWebView2WebMessageReceivedEventArgs[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2WebMessageReceivedEventArgs[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2WebMessageReceivedEventArgs[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2WebMessageReceivedEventArgs[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2WebMessageReceivedEventArgs> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2WebMessageReceivedEventArgsRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequest : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2WebResourceRequest obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2WebResourceRequest obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2WebResourceRequest FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2WebResourceRequest obj);
    public static MarshalerArray<CoreWebView2WebResourceRequest> CreateMarshalerArray(CoreWebView2WebResourceRequest[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2WebResourceRequest[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2WebResourceRequest[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2WebResourceRequest[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2WebResourceRequest> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequestedEventArgs : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2WebResourceRequestedEventArgs obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2WebResourceRequestedEventArgs obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2WebResourceRequestedEventArgs FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2WebResourceRequestedEventArgs obj);
    public static MarshalerArray<CoreWebView2WebResourceRequestedEventArgs> CreateMarshalerArray(CoreWebView2WebResourceRequestedEventArgs[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2WebResourceRequestedEventArgs[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2WebResourceRequestedEventArgs[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2WebResourceRequestedEventArgs[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2WebResourceRequestedEventArgs> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequestedEventArgsRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequestRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponse : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2WebResourceResponse obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2WebResourceResponse obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2WebResourceResponse FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2WebResourceResponse obj);
    public static MarshalerArray<CoreWebView2WebResourceResponse> CreateMarshalerArray(CoreWebView2WebResourceResponse[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2WebResourceResponse[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2WebResourceResponse[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2WebResourceResponse[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2WebResourceResponse> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponseRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponseReceivedEventArgs : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2WebResourceResponseReceivedEventArgs obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2WebResourceResponseReceivedEventArgs obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2WebResourceResponseReceivedEventArgs FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2WebResourceResponseReceivedEventArgs obj);
    public static MarshalerArray<CoreWebView2WebResourceResponseReceivedEventArgs> CreateMarshalerArray(CoreWebView2WebResourceResponseReceivedEventArgs[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2WebResourceResponseReceivedEventArgs[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2WebResourceResponseReceivedEventArgs[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2WebResourceResponseReceivedEventArgs[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2WebResourceResponseReceivedEventArgs> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponseReceivedEventArgsRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponseView : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2WebResourceResponseView obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2WebResourceResponseView obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2WebResourceResponseView FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2WebResourceResponseView obj);
    public static MarshalerArray<CoreWebView2WebResourceResponseView> CreateMarshalerArray(CoreWebView2WebResourceResponseView[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2WebResourceResponseView[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2WebResourceResponseView[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2WebResourceResponseView[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2WebResourceResponseView> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponseViewRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2WebTexture : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2WebTexture obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2WebTexture obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2WebTexture FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2WebTexture obj);
    public static MarshalerArray<CoreWebView2WebTexture> CreateMarshalerArray(CoreWebView2WebTexture[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2WebTexture[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2WebTexture[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2WebTexture[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2WebTexture> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2WebTextureRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[EditorBrowsableAttribute("1")]
public class ABI.Microsoft.Web.WebView2.Core.CoreWebView2WindowFeatures : ValueType {
    public static IObjectReference CreateMarshaler(CoreWebView2WindowFeatures obj);
    public static ObjectReferenceValue CreateMarshaler2(CoreWebView2WindowFeatures obj);
    public static IntPtr GetAbi(IObjectReference value);
    public static CoreWebView2WindowFeatures FromAbi(IntPtr thisPtr);
    public static IntPtr FromManaged(CoreWebView2WindowFeatures obj);
    public static MarshalerArray<CoreWebView2WindowFeatures> CreateMarshalerArray(CoreWebView2WindowFeatures[] array);
    public static ValueTuple`2<int, IntPtr> GetAbiArray(object box);
    public static CoreWebView2WindowFeatures[] FromAbiArray(object box);
    public static void CopyAbiArray(CoreWebView2WindowFeatures[] array, object box);
    public static ValueTuple`2<int, IntPtr> FromManagedArray(CoreWebView2WindowFeatures[] array);
    public static void DisposeMarshaler(IObjectReference value);
    public static void DisposeMarshalerArray(MarshalerArray<CoreWebView2WindowFeatures> array);
    public static void DisposeAbi(IntPtr abi);
    public static void DisposeAbiArray(object box);
}
[EditorBrowsableAttribute("1")]
internal class ABI.Microsoft.Web.WebView2.Core.CoreWebView2WindowFeaturesRcwFactoryAttribute : WinRTImplementationTypeRcwFactoryAttribute {
    public virtual object CreateInstance(IInspectable inspectable);
}
[GuidAttribute("3A3F559A-E5E9-5338-BB67-4EB0504A4F14")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2 {
}
[GuidAttribute("A7B20434-970F-54B1-AA63-3C42671FA9AB")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_10 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_10Methods : object {
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _BasicAuthenticationRequested_;
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2BasicAuthenticationRequestedEventArgs>>> _BasicAuthenticationRequested { get; }
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2BasicAuthenticationRequestedEventArgs>>> MakeBasicAuthenticationRequestedTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2BasicAuthenticationRequestedEventArgs>>> get__BasicAuthenticationRequested();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2BasicAuthenticationRequestedEventArgs>> Get_BasicAuthenticationRequested2(IObjectReference _obj, object _thisObj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("C00ACBB1-AE32-501F-AD19-9D0AC32D6142")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_11 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_11Methods : object {
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _ContextMenuRequested_;
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2ContextMenuRequestedEventArgs>>> _ContextMenuRequested { get; }
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static IAsyncOperation`1<string> CallDevToolsProtocolMethodForSessionAsync(IObjectReference _obj, string sessionId, string methodName, string parametersAsJson);
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2ContextMenuRequestedEventArgs>>> MakeContextMenuRequestedTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2ContextMenuRequestedEventArgs>>> get__ContextMenuRequested();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2ContextMenuRequestedEventArgs>> Get_ContextMenuRequested2(IObjectReference _obj, object _thisObj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("DBBBE9A1-18D3-5F67-B362-0F4AE937D754")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_12 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_12Methods : object {
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _StatusBarTextChanged_;
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, object>>> _StatusBarTextChanged { get; }
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static string get_StatusBarText(IObjectReference _obj);
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, object>>> MakeStatusBarTextChangedTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, object>>> get__StatusBarTextChanged();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2, object>> Get_StatusBarTextChanged2(IObjectReference _obj, object _thisObj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("314B5846-DBC7-5DE4-A792-647EA0F3296A")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_13 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_13Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static CoreWebView2Profile get_Profile(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("A7647B24-3B1E-50A9-BE24-6E8AC63FE491")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_14 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_14Methods : object {
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _ServerCertificateErrorDetected_;
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2ServerCertificateErrorDetectedEventArgs>>> _ServerCertificateErrorDetected { get; }
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static IAsyncAction ClearServerCertificateErrorActionsAsync(IObjectReference _obj);
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2ServerCertificateErrorDetectedEventArgs>>> MakeServerCertificateErrorDetectedTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2ServerCertificateErrorDetectedEventArgs>>> get__ServerCertificateErrorDetected();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2ServerCertificateErrorDetectedEventArgs>> Get_ServerCertificateErrorDetected2(IObjectReference _obj, object _thisObj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("4443F532-D2BA-5AE2-A9B3-8DE62BD5D4A9")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_15 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_15Methods : object {
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _FaviconChanged_;
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, object>>> _FaviconChanged { get; }
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static IAsyncOperation`1<IRandomAccessStream> GetFaviconAsync(IObjectReference _obj, CoreWebView2FaviconImageFormat format);
    internal static string get_FaviconUri(IObjectReference _obj);
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, object>>> MakeFaviconChangedTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, object>>> get__FaviconChanged();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2, object>> Get_FaviconChanged2(IObjectReference _obj, object _thisObj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("61D0A57C-6C4F-50FF-A137-314B0099A2B8")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_16 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_16Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static IAsyncOperation`1<CoreWebView2PrintStatus> PrintAsync(IObjectReference _obj, CoreWebView2PrintSettings printSettings);
    internal static void ShowPrintUI(IObjectReference _obj, CoreWebView2PrintDialogKind printDialogKind);
    internal static IAsyncOperation`1<IRandomAccessStream> PrintToPdfStreamAsync(IObjectReference _obj, CoreWebView2PrintSettings printSettings);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("2345F9DB-5488-559A-82AF-9086CC4F7988")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_17 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_17Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static void PostSharedBufferToScript(IObjectReference _obj, CoreWebView2SharedBuffer sharedBuffer, CoreWebView2SharedBufferAccess access, string additionalDataAsJson);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("94F52E61-9D75-5A81-ACD3-830FF29CE6F7")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_18 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_18Methods : object {
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _LaunchingExternalUriScheme_;
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2LaunchingExternalUriSchemeEventArgs>>> _LaunchingExternalUriScheme { get; }
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2LaunchingExternalUriSchemeEventArgs>>> MakeLaunchingExternalUriSchemeTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2LaunchingExternalUriSchemeEventArgs>>> get__LaunchingExternalUriScheme();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2LaunchingExternalUriSchemeEventArgs>> Get_LaunchingExternalUriScheme2(IObjectReference _obj, object _thisObj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("35A94A5C-E027-5DC5-8C2B-C2FC7D589159")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_19 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_19Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static CoreWebView2MemoryUsageTargetLevel get_MemoryUsageTargetLevel(IObjectReference _obj);
    internal static void set_MemoryUsageTargetLevel(IObjectReference _obj, CoreWebView2MemoryUsageTargetLevel value);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("578CB133-2873-5408-BD9E-389BBE9FA7FA")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_2 {
}
[GuidAttribute("859C4805-E988-50D5-85D7-A50643FC815E")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_20 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_20Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static UInt32 get_FrameId(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("F7FC7705-7922-5ABC-9E24-C64F1C14B185")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_21 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_21Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static IAsyncOperation`1<CoreWebView2ExecuteScriptResult> ExecuteScriptWithResultAsync(IObjectReference _obj, string javaScript);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("D58AA4CF-9B67-5419-8565-F401A98FEEB2")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_22 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_22Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("D6767391-FDFE-5B95-96AE-11DE6B8726DD")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_23 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_23Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("469056B8-E78D-55ED-9AF1-207A7F60911F")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_24 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_24Methods : object {
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _NotificationReceived_;
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2NotificationReceivedEventArgs>>> _NotificationReceived { get; }
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2NotificationReceivedEventArgs>>> MakeNotificationReceivedTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2NotificationReceivedEventArgs>>> get__NotificationReceived();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2NotificationReceivedEventArgs>> Get_NotificationReceived2(IObjectReference _obj, object _thisObj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("B8E2EDCE-D943-5871-8397-483DBD6C0F9E")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_25 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_25Methods : object {
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _SaveAsUIShowing_;
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2SaveAsUIShowingEventArgs>>> _SaveAsUIShowing { get; }
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static IAsyncOperation`1<CoreWebView2SaveAsUIResult> ShowSaveAsUIAsync(IObjectReference _obj);
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2SaveAsUIShowingEventArgs>>> MakeSaveAsUIShowingTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2SaveAsUIShowingEventArgs>>> get__SaveAsUIShowing();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2SaveAsUIShowingEventArgs>> Get_SaveAsUIShowing2(IObjectReference _obj, object _thisObj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_2Methods : object {
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _DOMContentLoaded_;
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _WebResourceResponseReceived_;
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2DOMContentLoadedEventArgs>>> _DOMContentLoaded { get; }
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2WebResourceResponseReceivedEventArgs>>> _WebResourceResponseReceived { get; }
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static void NavigateWithWebResourceRequest(IObjectReference _obj, CoreWebView2WebResourceRequest Request);
    internal static CoreWebView2CookieManager get_CookieManager(IObjectReference _obj);
    internal static CoreWebView2Environment get_Environment(IObjectReference _obj);
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2DOMContentLoadedEventArgs>>> MakeDOMContentLoadedTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2DOMContentLoadedEventArgs>>> get__DOMContentLoaded();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2DOMContentLoadedEventArgs>> Get_DOMContentLoaded2(IObjectReference _obj, object _thisObj);
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2WebResourceResponseReceivedEventArgs>>> MakeWebResourceResponseReceivedTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2WebResourceResponseReceivedEventArgs>>> get__WebResourceResponseReceived();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2WebResourceResponseReceivedEventArgs>> Get_WebResourceResponseReceived2(IObjectReference _obj, object _thisObj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("A8C76AE7-6170-5DFE-8F00-79CD76A9B4D9")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_3 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_3Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static IAsyncOperation`1<bool> TrySuspendAsync(IObjectReference _obj);
    internal static void Resume(IObjectReference _obj);
    internal static void SetVirtualHostNameToFolderMapping(IObjectReference _obj, string hostName, string folderPath, CoreWebView2HostResourceAccessKind accessKind);
    internal static void ClearVirtualHostNameToFolderMapping(IObjectReference _obj, string hostName);
    internal static bool get_IsSuspended(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("4AC595CE-1502-5775-B2C8-22C11A369C25")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_4 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_4Methods : object {
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _DownloadStarting_;
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _FrameCreated_;
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2DownloadStartingEventArgs>>> _DownloadStarting { get; }
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2FrameCreatedEventArgs>>> _FrameCreated { get; }
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2DownloadStartingEventArgs>>> MakeDownloadStartingTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2DownloadStartingEventArgs>>> get__DownloadStarting();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2DownloadStartingEventArgs>> Get_DownloadStarting2(IObjectReference _obj, object _thisObj);
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2FrameCreatedEventArgs>>> MakeFrameCreatedTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2FrameCreatedEventArgs>>> get__FrameCreated();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2FrameCreatedEventArgs>> Get_FrameCreated2(IObjectReference _obj, object _thisObj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("DD6AF643-220C-5DC6-B0A8-22C41E472595")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_5 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_5Methods : object {
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _ClientCertificateRequested_;
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2ClientCertificateRequestedEventArgs>>> _ClientCertificateRequested { get; }
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2ClientCertificateRequestedEventArgs>>> MakeClientCertificateRequestedTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2ClientCertificateRequestedEventArgs>>> get__ClientCertificateRequested();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2ClientCertificateRequestedEventArgs>> Get_ClientCertificateRequested2(IObjectReference _obj, object _thisObj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("92B34B96-853D-5BB6-AC52-30297CE805F1")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_6 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_6Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static void OpenTaskManagerWindow(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("F9B7107A-2E09-5596-A033-911BA12315F7")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_7 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_7Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static IAsyncOperation`1<bool> PrintToPdfAsync(IObjectReference _obj, string ResultFilePath, CoreWebView2PrintSettings printSettings);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("AA2503C0-8D1C-5A3D-B898-F55F7595268A")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_8 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_8Methods : object {
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _IsDocumentPlayingAudioChanged_;
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _IsMutedChanged_;
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, object>>> _IsDocumentPlayingAudioChanged { get; }
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, object>>> _IsMutedChanged { get; }
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static bool get_IsDocumentPlayingAudio(IObjectReference _obj);
    internal static bool get_IsMuted(IObjectReference _obj);
    internal static void set_IsMuted(IObjectReference _obj, bool value);
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, object>>> MakeIsDocumentPlayingAudioChangedTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, object>>> get__IsDocumentPlayingAudioChanged();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2, object>> Get_IsDocumentPlayingAudioChanged2(IObjectReference _obj, object _thisObj);
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, object>>> MakeIsMutedChangedTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, object>>> get__IsMutedChanged();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2, object>> Get_IsMutedChanged2(IObjectReference _obj, object _thisObj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("64B2EC16-0B29-5216-BF86-E575C88F7031")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_9 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_9Methods : object {
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _IsDefaultDownloadDialogOpenChanged_;
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, object>>> _IsDefaultDownloadDialogOpenChanged { get; }
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static void OpenDefaultDownloadDialog(IObjectReference _obj);
    internal static void CloseDefaultDownloadDialog(IObjectReference _obj);
    internal static CoreWebView2DefaultDownloadDialogCornerAlignment get_DefaultDownloadDialogCornerAlignment(IObjectReference _obj);
    internal static void set_DefaultDownloadDialogCornerAlignment(IObjectReference _obj, CoreWebView2DefaultDownloadDialogCornerAlignment value);
    internal static Point get_DefaultDownloadDialogMargin(IObjectReference _obj);
    internal static void set_DefaultDownloadDialogMargin(IObjectReference _obj, Point value);
    internal static bool get_IsDefaultDownloadDialogOpen(IObjectReference _obj);
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, object>>> MakeIsDefaultDownloadDialogOpenChangedTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, object>>> get__IsDefaultDownloadDialogOpenChanged();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2, object>> Get_IsDefaultDownloadDialogOpenChanged2(IObjectReference _obj, object _thisObj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("2D988546-9962-516B-BE53-859FB0F50179")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_Manual {
}
[GuidAttribute("57D0C484-F304-52D4-85A6-68CFAFD63B61")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_Manual2 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_Manual2Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static void PostWebMessageAsJson(IObjectReference _obj, string webMessageAsJson, IReadOnlyList`1<object> additionalObjects);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_ManualMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static void AddWebResourceRequestedFilter(IObjectReference _obj, string uri, CoreWebView2WebResourceContext resourceContext, CoreWebView2WebResourceRequestSourceKinds requestSourceKinds);
    internal static void RemoveWebResourceRequestedFilter(IObjectReference _obj, string uri, CoreWebView2WebResourceContext resourceContext, CoreWebView2WebResourceRequestSourceKinds requestSourceKinds);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("41A56100-92A5-59D1-9E71-9222E33AE38B")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2AcceleratorKeyPressedEventArgs {
}
[GuidAttribute("4D03AA18-806D-5F10-9AD8-CF5D327A58FB")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2AcceleratorKeyPressedEventArgs2 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2AcceleratorKeyPressedEventArgs2Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static bool get_IsBrowserAcceleratorKeyEnabled(IObjectReference _obj);
    internal static void set_IsBrowserAcceleratorKeyEnabled(IObjectReference _obj, bool value);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2AcceleratorKeyPressedEventArgsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static bool get_Handled(IObjectReference _obj);
    internal static void set_Handled(IObjectReference _obj, bool value);
    internal static CoreWebView2KeyEventKind get_KeyEventKind(IObjectReference _obj);
    internal static int get_KeyEventLParam(IObjectReference _obj);
    internal static CoreWebView2PhysicalKeyStatus get_PhysicalKeyStatus(IObjectReference _obj);
    internal static UInt32 get_VirtualKey(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("4B16330C-4CA5-555E-AF21-164334405F63")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2BasicAuthenticationRequestedEventArgs {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2BasicAuthenticationRequestedEventArgsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static Deferral GetDeferral(IObjectReference _obj);
    internal static bool get_Cancel(IObjectReference _obj);
    internal static void set_Cancel(IObjectReference _obj, bool value);
    internal static string get_Challenge(IObjectReference _obj);
    internal static CoreWebView2BasicAuthenticationResponse get_Response(IObjectReference _obj);
    internal static string get_Uri(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("08DF33B9-6E38-5962-9FFD-CAAB3C30FBC1")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2BasicAuthenticationResponse {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2BasicAuthenticationResponseMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static string get_Password(IObjectReference _obj);
    internal static void set_Password(IObjectReference _obj, string value);
    internal static string get_UserName(IObjectReference _obj);
    internal static void set_UserName(IObjectReference _obj, string value);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("BF991443-EE4F-57B8-BF2C-81CD6DBE1153")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2BrowserExtension {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2BrowserExtensionMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static IAsyncAction RemoveAsync(IObjectReference _obj);
    internal static IAsyncAction EnableAsync(IObjectReference _obj, bool IsEnabled);
    internal static string get_Id(IObjectReference _obj);
    internal static bool get_IsEnabled(IObjectReference _obj);
    internal static string get_Name(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("79963F77-1484-5A46-B91F-DFC5C1A0CE14")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2BrowserProcessExitedEventArgs {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2BrowserProcessExitedEventArgsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static CoreWebView2BrowserProcessExitKind get_BrowserProcessExitKind(IObjectReference _obj);
    internal static UInt32 get_BrowserProcessId(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("414A3B75-1BC1-55E1-9926-268C0A3462C7")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Certificate {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2CertificateMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static string ToPemEncoding(IObjectReference _obj);
    internal static string get_DerEncodedSerialNumber(IObjectReference _obj);
    internal static string get_DisplayName(IObjectReference _obj);
    internal static string get_Issuer(IObjectReference _obj);
    internal static IReadOnlyList`1<string> get_PemEncodedIssuerCertificateChain(IObjectReference _obj);
    internal static string get_Subject(IObjectReference _obj);
    internal static double get_ValidFrom(IObjectReference _obj);
    internal static double get_ValidTo(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("091B39F2-68DF-52B4-8FB0-FD3561AF41F2")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ClientCertificate {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ClientCertificateMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static string ToPemEncoding(IObjectReference _obj);
    internal static string get_DerEncodedSerialNumber(IObjectReference _obj);
    internal static string get_DisplayName(IObjectReference _obj);
    internal static string get_Issuer(IObjectReference _obj);
    internal static CoreWebView2ClientCertificateKind get_Kind(IObjectReference _obj);
    internal static IReadOnlyList`1<string> get_PemEncodedIssuerCertificateChain(IObjectReference _obj);
    internal static string get_Subject(IObjectReference _obj);
    internal static double get_ValidFrom(IObjectReference _obj);
    internal static double get_ValidTo(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("93287B55-31F9-55A0-B68B-D9841D7E1BF4")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ClientCertificateRequestedEventArgs {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ClientCertificateRequestedEventArgsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static Deferral GetDeferral(IObjectReference _obj);
    internal static IReadOnlyList`1<string> get_AllowedCertificateAuthorities(IObjectReference _obj);
    internal static bool get_Cancel(IObjectReference _obj);
    internal static void set_Cancel(IObjectReference _obj, bool value);
    internal static bool get_Handled(IObjectReference _obj);
    internal static void set_Handled(IObjectReference _obj, bool value);
    internal static string get_Host(IObjectReference _obj);
    internal static bool get_IsProxy(IObjectReference _obj);
    internal static IReadOnlyList`1<CoreWebView2ClientCertificate> get_MutuallyTrustedCertificates(IObjectReference _obj);
    internal static int get_Port(IObjectReference _obj);
    internal static CoreWebView2ClientCertificate get_SelectedCertificate(IObjectReference _obj);
    internal static void set_SelectedCertificate(IObjectReference _obj, CoreWebView2ClientCertificate value);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("31BBB153-11B2-58E8-9BEB-69F5C8E14420")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2CompositionController {
}
[GuidAttribute("8CEF61B9-FA55-547D-AAE6-7BCAED4249A2")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2CompositionController2 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2CompositionController2Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("BBBECDCF-0F03-50F0-8F85-9CBF6C9BBE10")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2CompositionController3 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2CompositionController3Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static void DragLeave(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("C950CB84-2648-5AD5-BADD-BFE659682FB6")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2CompositionController4 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2CompositionController4Methods : object {
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _NonClientRegionChanged_;
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2CompositionController, CoreWebView2NonClientRegionChangedEventArgs>>> _NonClientRegionChanged { get; }
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static CoreWebView2NonClientRegionKind GetNonClientRegionAtPoint(IObjectReference _obj, Point point);
    internal static IReadOnlyList`1<Rect> QueryNonClientRegion(IObjectReference _obj, CoreWebView2NonClientRegionKind Kind);
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2CompositionController, CoreWebView2NonClientRegionChangedEventArgs>>> MakeNonClientRegionChangedTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2CompositionController, CoreWebView2NonClientRegionChangedEventArgs>>> get__NonClientRegionChanged();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2CompositionController, CoreWebView2NonClientRegionChangedEventArgs>> Get_NonClientRegionChanged2(IObjectReference _obj, object _thisObj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2CompositionControllerMethods : object {
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _CursorChanged_;
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2CompositionController, object>>> _CursorChanged { get; }
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static void SendMouseInput(IObjectReference _obj, CoreWebView2MouseEventKind eventKind, CoreWebView2MouseEventVirtualKeys virtualKeys, UInt32 mouseData, Point point);
    internal static void SendPointerInput(IObjectReference _obj, CoreWebView2PointerEventKind eventKind, CoreWebView2PointerInfo pointerInfo);
    internal static DataPackageOperation DragEnter(IObjectReference _obj, CoreDragInfo dragInfo, CoreDragUIOverride dragUIOverride);
    internal static DataPackageOperation DragOver(IObjectReference _obj, CoreDragInfo dragInfo, CoreDragUIOverride dragUIOverride);
    internal static DataPackageOperation Drop(IObjectReference _obj, CoreDragInfo dragInfo);
    internal static CoreCursor get_Cursor(IObjectReference _obj);
    internal static object get_RootVisualTarget(IObjectReference _obj);
    internal static void set_RootVisualTarget(IObjectReference _obj, object value);
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2CompositionController, object>>> MakeCursorChangedTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2CompositionController, object>>> get__CursorChanged();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2CompositionController, object>> Get_CursorChanged2(IObjectReference _obj, object _thisObj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("4DF0AB1F-7F2A-573B-B81A-B9B531224736")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2CompositionControllerStatics {
}
[GuidAttribute("48A321E7-4F40-526E-837E-1EB0C477B69D")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2CompositionControllerStatics2_Manual {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2CompositionControllerStatics2_ManualMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2CompositionControllerStaticsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("6CF95373-946C-5DAE-9B3E-0FE23D5AA29F")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ContentLoadingEventArgs {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ContentLoadingEventArgsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static bool get_IsErrorPage(IObjectReference _obj);
    internal static ulong get_NavigationId(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("2A65706F-941A-52CD-8651-A165586B0ABF")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ContextMenuItem {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ContextMenuItemMethods : object {
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _CustomItemSelected_;
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2ContextMenuItem, object>>> _CustomItemSelected { get; }
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static IList`1<CoreWebView2ContextMenuItem> get_Children(IObjectReference _obj);
    internal static int get_CommandId(IObjectReference _obj);
    internal static IRandomAccessStream get_Icon(IObjectReference _obj);
    internal static bool get_IsChecked(IObjectReference _obj);
    internal static void set_IsChecked(IObjectReference _obj, bool value);
    internal static bool get_IsEnabled(IObjectReference _obj);
    internal static void set_IsEnabled(IObjectReference _obj, bool value);
    internal static CoreWebView2ContextMenuItemKind get_Kind(IObjectReference _obj);
    internal static string get_Label(IObjectReference _obj);
    internal static string get_Name(IObjectReference _obj);
    internal static string get_ShortcutKeyDescription(IObjectReference _obj);
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2ContextMenuItem, object>>> MakeCustomItemSelectedTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2ContextMenuItem, object>>> get__CustomItemSelected();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2ContextMenuItem, object>> Get_CustomItemSelected2(IObjectReference _obj, object _thisObj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("D77BDD8C-9B3E-596E-AE80-320C0DF4ECBC")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ContextMenuRequestedEventArgs {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ContextMenuRequestedEventArgsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static Deferral GetDeferral(IObjectReference _obj);
    internal static CoreWebView2ContextMenuTarget get_ContextMenuTarget(IObjectReference _obj);
    internal static bool get_Handled(IObjectReference _obj);
    internal static void set_Handled(IObjectReference _obj, bool value);
    internal static Point get_Location(IObjectReference _obj);
    internal static IList`1<CoreWebView2ContextMenuItem> get_MenuItems(IObjectReference _obj);
    internal static int get_SelectedCommandId(IObjectReference _obj);
    internal static void set_SelectedCommandId(IObjectReference _obj, int value);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("41E24E6A-4612-5BD9-8E61-E9280615205E")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ContextMenuTarget {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ContextMenuTargetMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static string get_FrameUri(IObjectReference _obj);
    internal static bool get_HasLinkText(IObjectReference _obj);
    internal static bool get_HasLinkUri(IObjectReference _obj);
    internal static bool get_HasSelection(IObjectReference _obj);
    internal static bool get_HasSourceUri(IObjectReference _obj);
    internal static bool get_IsEditable(IObjectReference _obj);
    internal static bool get_IsRequestedForMainFrame(IObjectReference _obj);
    internal static CoreWebView2ContextMenuTargetKind get_Kind(IObjectReference _obj);
    internal static string get_LinkText(IObjectReference _obj);
    internal static string get_LinkUri(IObjectReference _obj);
    internal static string get_PageUri(IObjectReference _obj);
    internal static string get_SelectionText(IObjectReference _obj);
    internal static string get_SourceUri(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("A588121C-53BF-590E-80E5-29D729CBD743")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Controller {
}
[GuidAttribute("0069C40B-2E8A-513F-9D9D-E0C2B64F7200")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Controller2 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Controller2Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static Color get_DefaultBackgroundColor(IObjectReference _obj);
    internal static void set_DefaultBackgroundColor(IObjectReference _obj, Color value);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("E5BAE214-791A-5D13-9B76-A257D9FDA2AC")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Controller3 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Controller3Methods : object {
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _RasterizationScaleChanged_;
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Controller, object>>> _RasterizationScaleChanged { get; }
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static CoreWebView2BoundsMode get_BoundsMode(IObjectReference _obj);
    internal static void set_BoundsMode(IObjectReference _obj, CoreWebView2BoundsMode value);
    internal static double get_RasterizationScale(IObjectReference _obj);
    internal static void set_RasterizationScale(IObjectReference _obj, double value);
    internal static bool get_ShouldDetectMonitorScaleChanges(IObjectReference _obj);
    internal static void set_ShouldDetectMonitorScaleChanges(IObjectReference _obj, bool value);
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Controller, object>>> MakeRasterizationScaleChangedTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Controller, object>>> get__RasterizationScaleChanged();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2Controller, object>> Get_RasterizationScaleChanged2(IObjectReference _obj, object _thisObj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("94E2862D-4638-54BA-92CF-E31A31499B78")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Controller4 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Controller4Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static bool get_AllowExternalDrop(IObjectReference _obj);
    internal static void set_AllowExternalDrop(IObjectReference _obj, bool value);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("270B2C5B-C3A9-53D8-A5CA-262EA9EA62E8")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ControllerFactory {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ControllerFactoryMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ControllerMethods : object {
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _AcceleratorKeyPressed_;
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _GotFocus_;
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _LostFocus_;
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _MoveFocusRequested_;
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _ZoomFactorChanged_;
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Controller, CoreWebView2AcceleratorKeyPressedEventArgs>>> _AcceleratorKeyPressed { get; }
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Controller, object>>> _GotFocus { get; }
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Controller, object>>> _LostFocus { get; }
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Controller, CoreWebView2MoveFocusRequestedEventArgs>>> _MoveFocusRequested { get; }
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Controller, object>>> _ZoomFactorChanged { get; }
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static void SetBoundsAndZoomFactor(IObjectReference _obj, Rect Bounds, double ZoomFactor);
    internal static void MoveFocus(IObjectReference _obj, CoreWebView2MoveFocusReason reason);
    internal static void NotifyParentWindowPositionChanged(IObjectReference _obj);
    internal static void Close(IObjectReference _obj);
    internal static Rect get_Bounds(IObjectReference _obj);
    internal static void set_Bounds(IObjectReference _obj, Rect value);
    internal static CoreWebView2 get_CoreWebView2(IObjectReference _obj);
    internal static bool get_IsVisible(IObjectReference _obj);
    internal static void set_IsVisible(IObjectReference _obj, bool value);
    internal static CoreWebView2ControllerWindowReference get_ParentWindow(IObjectReference _obj);
    internal static void set_ParentWindow(IObjectReference _obj, CoreWebView2ControllerWindowReference value);
    internal static double get_ZoomFactor(IObjectReference _obj);
    internal static void set_ZoomFactor(IObjectReference _obj, double value);
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Controller, CoreWebView2AcceleratorKeyPressedEventArgs>>> MakeAcceleratorKeyPressedTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Controller, CoreWebView2AcceleratorKeyPressedEventArgs>>> get__AcceleratorKeyPressed();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2Controller, CoreWebView2AcceleratorKeyPressedEventArgs>> Get_AcceleratorKeyPressed2(IObjectReference _obj, object _thisObj);
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Controller, object>>> MakeGotFocusTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Controller, object>>> get__GotFocus();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2Controller, object>> Get_GotFocus2(IObjectReference _obj, object _thisObj);
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Controller, object>>> MakeLostFocusTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Controller, object>>> get__LostFocus();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2Controller, object>> Get_LostFocus2(IObjectReference _obj, object _thisObj);
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Controller, CoreWebView2MoveFocusRequestedEventArgs>>> MakeMoveFocusRequestedTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Controller, CoreWebView2MoveFocusRequestedEventArgs>>> get__MoveFocusRequested();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2Controller, CoreWebView2MoveFocusRequestedEventArgs>> Get_MoveFocusRequested2(IObjectReference _obj, object _thisObj);
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Controller, object>>> MakeZoomFactorChangedTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Controller, object>>> get__ZoomFactorChanged();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2Controller, object>> Get_ZoomFactorChanged2(IObjectReference _obj, object _thisObj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("3337E821-3606-5A0E-8E2F-0C1E57D743F7")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ControllerOptions {
}
[GuidAttribute("41B69E93-CC17-5C7D-A0C8-FA21C27AADB6")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ControllerOptions2 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ControllerOptions2Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static string get_ScriptLocale(IObjectReference _obj);
    internal static void set_ScriptLocale(IObjectReference _obj, string value);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ControllerOptionsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static bool get_IsInPrivateModeEnabled(IObjectReference _obj);
    internal static void set_IsInPrivateModeEnabled(IObjectReference _obj, bool value);
    internal static string get_ProfileName(IObjectReference _obj);
    internal static void set_ProfileName(IObjectReference _obj, string value);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("0FEDDAD4-48A3-5CC4-9F61-E7ADFD1E9C76")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ControllerWindowReference {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ControllerWindowReferenceMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static CoreWindow get_CoreWindow(IObjectReference _obj);
    internal static ulong get_WindowHandle(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("DDF6EBF1-EBC6-5A34-9008-661C3A2EB767")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ControllerWindowReferenceStatics {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ControllerWindowReferenceStaticsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static CoreWebView2ControllerWindowReference CreateFromWindowHandle(IObjectReference _obj, ulong windowHandle);
    internal static CoreWebView2ControllerWindowReference CreateFromCoreWindow(IObjectReference _obj, CoreWindow coreWindow);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("52F670FE-8CA2-5AAD-AEDB-25F7903B7038")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Cookie {
}
[GuidAttribute("4098F516-ADCA-5563-AAA5-D7AFFD847AA3")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2CookieManager {
}
[GuidAttribute("9BCCA0EA-7225-577A-BB23-C7C98023154E")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2CookieManager_Manual {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2CookieManager_ManualMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static IAsyncOperation`1<IReadOnlyList`1<CoreWebView2Cookie>> GetCookiesAsync(IObjectReference _obj, string uri);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2CookieManagerMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static CoreWebView2Cookie CreateCookie(IObjectReference _obj, string name, string value, string Domain, string Path);
    internal static CoreWebView2Cookie CopyCookie(IObjectReference _obj, CoreWebView2Cookie cookieParam);
    internal static void AddOrUpdateCookie(IObjectReference _obj, CoreWebView2Cookie cookie);
    internal static void DeleteCookie(IObjectReference _obj, CoreWebView2Cookie cookie);
    internal static void DeleteCookies(IObjectReference _obj, string name, string uri);
    internal static void DeleteCookiesWithDomainAndPath(IObjectReference _obj, string name, string Domain, string Path);
    internal static void DeleteAllCookies(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2CookieMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static string get_Domain(IObjectReference _obj);
    internal static double get_Expires(IObjectReference _obj);
    internal static void set_Expires(IObjectReference _obj, double value);
    internal static bool get_IsHttpOnly(IObjectReference _obj);
    internal static void set_IsHttpOnly(IObjectReference _obj, bool value);
    internal static bool get_IsSecure(IObjectReference _obj);
    internal static void set_IsSecure(IObjectReference _obj, bool value);
    internal static bool get_IsSession(IObjectReference _obj);
    internal static string get_Name(IObjectReference _obj);
    internal static string get_Path(IObjectReference _obj);
    internal static CoreWebView2CookieSameSiteKind get_SameSite(IObjectReference _obj);
    internal static void set_SameSite(IObjectReference _obj, CoreWebView2CookieSameSiteKind value);
    internal static string get_Value(IObjectReference _obj);
    internal static void set_Value(IObjectReference _obj, string value);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("16DC60D9-DDEC-5C3D-BC1F-4408D1875AF1")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2CustomSchemeRegistration {
}
[GuidAttribute("074FF15C-7D7F-5101-A02E-C077C5E21C41")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2CustomSchemeRegistration_Manual {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2CustomSchemeRegistration_ManualMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static IList`1<string> get_AllowedOrigins(IObjectReference _obj);
    internal static string get_SchemeName(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("309DDDFA-FF3E-5D8D-A18A-C1341F325EA7")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2CustomSchemeRegistrationFactory {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2CustomSchemeRegistrationFactoryMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static CoreWebView2CustomSchemeRegistration CreateInstance(IObjectReference _obj, string schemeName);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2CustomSchemeRegistrationMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static bool get_HasAuthorityComponent(IObjectReference _obj);
    internal static void set_HasAuthorityComponent(IObjectReference _obj, bool value);
    internal static int get_TreatAsSecure(IObjectReference _obj);
    internal static void set_TreatAsSecure(IObjectReference _obj, int value);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("B6A4B41D-FD18-59FA-923A-C57555D960CE")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2DevToolsProtocolEventReceivedEventArgs {
}
[GuidAttribute("221728BA-635E-50D2-BD3C-FD22F4113978")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2DevToolsProtocolEventReceivedEventArgs2 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2DevToolsProtocolEventReceivedEventArgs2Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static string get_SessionId(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2DevToolsProtocolEventReceivedEventArgsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static string get_ParameterObjectAsJson(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("B2A2BE79-65FC-5537-8715-3D92BF31090B")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2DevToolsProtocolEventReceiver {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2DevToolsProtocolEventReceiverMethods : object {
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _DevToolsProtocolEventReceived_;
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2DevToolsProtocolEventReceivedEventArgs>>> _DevToolsProtocolEventReceived { get; }
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2DevToolsProtocolEventReceivedEventArgs>>> MakeDevToolsProtocolEventReceivedTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2DevToolsProtocolEventReceivedEventArgs>>> get__DevToolsProtocolEventReceived();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2DevToolsProtocolEventReceivedEventArgs>> Get_DevToolsProtocolEventReceived2(IObjectReference _obj, object _thisObj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[DynamicInterfaceCastableImplementationAttribute]
[GuidAttribute("7888A42D-18F3-5966-80CB-8CC25351BD0A")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2DispatchAdapter {
    public static IntPtr AbiToProjectionVftablePtr;
    private static ICoreWebView2DispatchAdapter();
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_WrapNamedObject_0(IntPtr thisPtr, IntPtr name, IntPtr adapter, IntPtr* result);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_WrapObject_1(IntPtr thisPtr, IntPtr unwrapped, IntPtr adapter, IntPtr* result);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_UnwrapObject_2(IntPtr thisPtr, IntPtr wrapped, IntPtr* result);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Clean_3(IntPtr thisPtr);
    private sealed virtual override object global::Microsoft.Web.WebView2.Core.ICoreWebView2DispatchAdapter.WrapNamedObject(string name, ICoreWebView2DispatchAdapter adapter);
    private sealed virtual override object global::Microsoft.Web.WebView2.Core.ICoreWebView2DispatchAdapter.WrapObject(object unwrapped, ICoreWebView2DispatchAdapter adapter);
    private sealed virtual override object global::Microsoft.Web.WebView2.Core.ICoreWebView2DispatchAdapter.UnwrapObject(object wrapped);
    private sealed virtual override void global::Microsoft.Web.WebView2.Core.ICoreWebView2DispatchAdapter.Clean();
}
public static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2DispatchAdapterMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static IntPtr AbiToProjectionVftablePtr { get; }
    public static object WrapNamedObject(IObjectReference _obj, string name, ICoreWebView2DispatchAdapter adapter);
    public static object WrapObject(IObjectReference _obj, object unwrapped, ICoreWebView2DispatchAdapter adapter);
    public static object UnwrapObject(IObjectReference _obj, object wrapped);
    public static void Clean(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
    public static IntPtr get_AbiToProjectionVftablePtr();
}
[GuidAttribute("C474D0A3-24AC-59FC-B78B-DA7562A6A052")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2DOMContentLoadedEventArgs {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2DOMContentLoadedEventArgsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static ulong get_NavigationId(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("AFE73E6B-E760-5A06-9BF6-1E743C13CD2D")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2DownloadOperation {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2DownloadOperationMethods : object {
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _BytesReceivedChanged_;
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _EstimatedEndTimeChanged_;
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _StateChanged_;
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2DownloadOperation, object>>> _BytesReceivedChanged { get; }
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2DownloadOperation, object>>> _EstimatedEndTimeChanged { get; }
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2DownloadOperation, object>>> _StateChanged { get; }
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static void Cancel(IObjectReference _obj);
    internal static void Pause(IObjectReference _obj);
    internal static void Resume(IObjectReference _obj);
    internal static long get_BytesReceived(IObjectReference _obj);
    internal static bool get_CanResume(IObjectReference _obj);
    internal static string get_ContentDisposition(IObjectReference _obj);
    internal static string get_EstimatedEndTime(IObjectReference _obj);
    internal static CoreWebView2DownloadInterruptReason get_InterruptReason(IObjectReference _obj);
    internal static string get_MimeType(IObjectReference _obj);
    internal static string get_ResultFilePath(IObjectReference _obj);
    internal static CoreWebView2DownloadState get_State(IObjectReference _obj);
    internal static long get_TotalBytesToReceive(IObjectReference _obj);
    internal static string get_Uri(IObjectReference _obj);
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2DownloadOperation, object>>> MakeBytesReceivedChangedTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2DownloadOperation, object>>> get__BytesReceivedChanged();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2DownloadOperation, object>> Get_BytesReceivedChanged2(IObjectReference _obj, object _thisObj);
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2DownloadOperation, object>>> MakeEstimatedEndTimeChangedTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2DownloadOperation, object>>> get__EstimatedEndTimeChanged();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2DownloadOperation, object>> Get_EstimatedEndTimeChanged2(IObjectReference _obj, object _thisObj);
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2DownloadOperation, object>>> MakeStateChangedTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2DownloadOperation, object>>> get__StateChanged();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2DownloadOperation, object>> Get_StateChanged2(IObjectReference _obj, object _thisObj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("45D982BA-9256-5B35-B023-26A438599110")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2DownloadStartingEventArgs {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2DownloadStartingEventArgsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static Deferral GetDeferral(IObjectReference _obj);
    internal static bool get_Cancel(IObjectReference _obj);
    internal static void set_Cancel(IObjectReference _obj, bool value);
    internal static CoreWebView2DownloadOperation get_DownloadOperation(IObjectReference _obj);
    internal static bool get_Handled(IObjectReference _obj);
    internal static void set_Handled(IObjectReference _obj, bool value);
    internal static string get_ResultFilePath(IObjectReference _obj);
    internal static void set_ResultFilePath(IObjectReference _obj, string value);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("D8CC7831-B783-556B-B9CE-899C1E95D585")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Environment {
}
[GuidAttribute("F51CFABE-73AD-5635-A935-6386AEF9238E")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Environment_Manual {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Environment_ManualMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static IAsyncOperation`1<CoreWebView2Controller> CreateCoreWebView2ControllerAsync(IObjectReference _obj, CoreWebView2ControllerWindowReference ParentWindow, CoreWebView2ControllerOptions options);
    internal static IAsyncOperation`1<CoreWebView2CompositionController> CreateCoreWebView2CompositionControllerAsync(IObjectReference _obj, CoreWebView2ControllerWindowReference ParentWindow, CoreWebView2ControllerOptions options);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("C224E69C-1EFD-5ECC-ADC8-2B52E7B97CE5")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Environment10 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Environment10Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static CoreWebView2ControllerOptions CreateCoreWebView2ControllerOptions(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("DA23D64C-8B61-5B6C-8581-F6A688ABD7CD")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Environment11 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Environment11Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static string get_FailureReportFolderPath(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("82531DDB-BE63-5254-812F-880D9F0EC54E")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Environment12 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Environment12Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static CoreWebView2SharedBuffer CreateSharedBuffer(IObjectReference _obj, ulong Size);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("22C97F2F-8A28-5794-941C-A25BCC3CF47E")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Environment13 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Environment13Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static IAsyncOperation`1<IReadOnlyList`1<CoreWebView2ProcessExtendedInfo>> GetProcessExtendedInfosAsync(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("39F9505F-0D1F-5284-9FA9-9DBD818973FA")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Environment14 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Environment14Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static CoreWebView2FileSystemHandle CreateWebFileSystemFileHandle(IObjectReference _obj, string Path, CoreWebView2FileSystemHandlePermission Permission);
    internal static CoreWebView2FileSystemHandle CreateWebFileSystemDirectoryHandle(IObjectReference _obj, string Path, CoreWebView2FileSystemHandlePermission Permission);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("0B634668-1017-5FC7-9921-F1F51866A8C0")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Environment2 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Environment2Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static CoreWebView2WebResourceRequest CreateWebResourceRequest(IObjectReference _obj, string uri, string Method, IRandomAccessStream postData, string Headers);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("5E33F46C-C0B9-5126-8840-17F9C11B3A8A")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Environment3 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Environment3Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static IAsyncOperation`1<CoreWebView2CompositionController> CreateCoreWebView2CompositionControllerAsync(IObjectReference _obj, CoreWebView2ControllerWindowReference ParentWindow);
    internal static CoreWebView2PointerInfo CreateCoreWebView2PointerInfo(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("6DB697DA-EEBD-5818-8790-1FE57EF319E2")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Environment4 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Environment4Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("F33399AF-E4D3-59DC-AC38-8397AADCEDB1")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Environment5 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Environment5Methods : object {
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _BrowserProcessExited_;
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Environment, CoreWebView2BrowserProcessExitedEventArgs>>> _BrowserProcessExited { get; }
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Environment, CoreWebView2BrowserProcessExitedEventArgs>>> MakeBrowserProcessExitedTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Environment, CoreWebView2BrowserProcessExitedEventArgs>>> get__BrowserProcessExited();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2Environment, CoreWebView2BrowserProcessExitedEventArgs>> Get_BrowserProcessExited2(IObjectReference _obj, object _thisObj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("965D538F-5958-5D98-8972-F622021DF402")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Environment6 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Environment6Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static CoreWebView2PrintSettings CreatePrintSettings(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("E1F44FE2-FC54-5383-A383-C87E1DA96B83")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Environment7 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Environment7Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static string get_UserDataFolder(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("DB67C807-D0DB-5980-A3A9-75EF8F63D6F6")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Environment8 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Environment8Methods : object {
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _ProcessInfosChanged_;
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Environment, object>>> _ProcessInfosChanged { get; }
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static IReadOnlyList`1<CoreWebView2ProcessInfo> GetProcessInfos(IObjectReference _obj);
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Environment, object>>> MakeProcessInfosChangedTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Environment, object>>> get__ProcessInfosChanged();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2Environment, object>> Get_ProcessInfosChanged2(IObjectReference _obj, object _thisObj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("C8213EC7-7DC9-5468-A88B-15C6B7144478")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Environment9 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Environment9Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static CoreWebView2ContextMenuItem CreateContextMenuItem(IObjectReference _obj, string Label, IRandomAccessStream iconStream, CoreWebView2ContextMenuItemKind Kind);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentMethods : object {
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _NewBrowserVersionAvailable_;
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Environment, object>>> _NewBrowserVersionAvailable { get; }
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static IAsyncOperation`1<CoreWebView2Controller> CreateCoreWebView2ControllerAsync(IObjectReference _obj, CoreWebView2ControllerWindowReference ParentWindow);
    internal static CoreWebView2WebResourceResponse CreateWebResourceResponse(IObjectReference _obj, IRandomAccessStream Content, int StatusCode, string ReasonPhrase, string Headers);
    internal static string get_BrowserVersionString(IObjectReference _obj);
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Environment, object>>> MakeNewBrowserVersionAvailableTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Environment, object>>> get__NewBrowserVersionAvailable();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2Environment, object>> Get_NewBrowserVersionAvailable2(IObjectReference _obj, object _thisObj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("25D6DC39-0062-5735-8B09-A6F535F19E97")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentOptions {
}
[GuidAttribute("1F104443-EA93-5A37-B791-34E6A31172ED")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentOptions_Manual {
}
[GuidAttribute("665E9C11-CA1B-5255-A6F5-D741AC39E18F")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentOptions_Manual3 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentOptions_Manual3Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static IList`1<CoreWebView2CustomSchemeRegistration> get_CustomSchemeRegistrations(IObjectReference _obj);
    internal static void set_CustomSchemeRegistrations(IObjectReference _obj, IList`1<CoreWebView2CustomSchemeRegistration> value);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentOptions_ManualMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("E77350FB-77A1-56F7-BE95-EB7F8A7A3072")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentOptions2 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentOptions2Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static bool get_ExclusiveUserDataFolderAccess(IObjectReference _obj);
    internal static void set_ExclusiveUserDataFolderAccess(IObjectReference _obj, bool value);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("48AB919D-2444-5E8C-A6F6-ABA840D6C5FF")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentOptions3 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentOptions3Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static bool get_IsCustomCrashReportingEnabled(IObjectReference _obj);
    internal static void set_IsCustomCrashReportingEnabled(IObjectReference _obj, bool value);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("A2CB850F-CD14-5A7D-9C98-53FD51EC9858")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentOptions4 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentOptions4Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("36B1CA6C-E06C-5050-8EF9-247C5A7AA9C9")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentOptions5 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentOptions5Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static bool get_EnableTrackingPrevention(IObjectReference _obj);
    internal static void set_EnableTrackingPrevention(IObjectReference _obj, bool value);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("EB5B14C2-6F05-514E-B19A-76744D1CE684")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentOptions6 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentOptions6Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static bool get_AreBrowserExtensionsEnabled(IObjectReference _obj);
    internal static void set_AreBrowserExtensionsEnabled(IObjectReference _obj, bool value);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("7447B9ED-A60D-5AF8-AB2A-56C544BC356A")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentOptions7 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentOptions7Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static CoreWebView2ChannelSearchKind get_ChannelSearchKind(IObjectReference _obj);
    internal static void set_ChannelSearchKind(IObjectReference _obj, CoreWebView2ChannelSearchKind value);
    internal static CoreWebView2ReleaseChannels get_ReleaseChannels(IObjectReference _obj);
    internal static void set_ReleaseChannels(IObjectReference _obj, CoreWebView2ReleaseChannels value);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("F143E9D2-2669-5B6A-8F88-7B05C9E1EF4D")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentOptions8 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentOptions8Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static CoreWebView2ScrollbarStyle get_ScrollBarStyle(IObjectReference _obj);
    internal static void set_ScrollBarStyle(IObjectReference _obj, CoreWebView2ScrollbarStyle value);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentOptionsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static string get_AdditionalBrowserArguments(IObjectReference _obj);
    internal static void set_AdditionalBrowserArguments(IObjectReference _obj, string value);
    internal static bool get_AllowSingleSignOnUsingOSPrimaryAccount(IObjectReference _obj);
    internal static void set_AllowSingleSignOnUsingOSPrimaryAccount(IObjectReference _obj, bool value);
    internal static string get_Language(IObjectReference _obj);
    internal static void set_Language(IObjectReference _obj, string value);
    internal static string get_TargetCompatibleBrowserVersion(IObjectReference _obj);
    internal static void set_TargetCompatibleBrowserVersion(IObjectReference _obj, string value);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("0E33F804-F20B-5635-8491-162AAA27517B")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentStatics {
}
[GuidAttribute("DCBA13E4-EE49-5860-8499-C49161A7D8CE")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentStatics2 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentStatics2Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static string GetAvailableBrowserVersionString(IObjectReference _obj, string browserExecutableFolder, CoreWebView2EnvironmentOptions options);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentStaticsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static IAsyncOperation`1<CoreWebView2Environment> CreateAsync(IObjectReference _obj);
    internal static IAsyncOperation`1<CoreWebView2Environment> CreateWithOptionsAsync(IObjectReference _obj, string browserExecutableFolder, string userDataFolder, CoreWebView2EnvironmentOptions options);
    internal static string GetAvailableBrowserVersionString(IObjectReference _obj);
    internal static string GetAvailableBrowserVersionString(IObjectReference _obj, string browserExecutableFolder);
    internal static int CompareBrowserVersionString(IObjectReference _obj, string browserVersionString1, string browserVersionString2);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("9BEF80F9-580C-56A0-8DB9-75EC792C8421")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExecuteScriptResult {
}
[GuidAttribute("5931BC73-376C-5BA7-BCBB-3CAEC6D1FF5B")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExecuteScriptResult_Manual {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExecuteScriptResult_ManualMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static int TryGetResultAsString(IObjectReference _obj, String& stringResult);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExecuteScriptResultMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static CoreWebView2ScriptException get_Exception(IObjectReference _obj);
    internal static string get_ResultAsJson(IObjectReference _obj);
    internal static bool get_Succeeded(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("F4381E96-421F-5F55-9A3C-BA39117C3CD2")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental {
}
[GuidAttribute("C4DC21A5-FA10-57A4-9724-A91AB86461F1")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental10 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental10Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("BAAA006F-13C3-5927-B71C-0B3D8D390EA3")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental11 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental11Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("8C9269C8-9A65-5220-8D7F-DCBC764F8F80")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental12 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental12Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("9A45A724-DBAA-516E-BFCF-E22C4ED3A748")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental13 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental13Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("39EAFF81-3783-5C9D-901F-B946F2155BDB")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental14 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental14Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("C3C304ED-19AA-59C6-8783-8CDC035BC713")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental15 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental15Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("7244E495-352B-5B3C-89F3-5BCA48DB826F")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental16 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental16Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("A8E0D973-52E5-522F-BEFC-8D9E745554DF")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental17 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental17Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("8C21C492-A6FD-5789-9FB7-C167CFB18B1C")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental18 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental18Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("56536501-FDDC-509A-A662-987DB7BD0398")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental19 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental19Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("3738E50F-D296-5C57-B055-38874EF76036")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental2 {
}
[GuidAttribute("56B7568A-3A11-5345-AD5A-5C159FF0C969")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental20 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental20Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static string get_CustomDataPartitionId(IObjectReference _obj);
    internal static void set_CustomDataPartitionId(IObjectReference _obj, string value);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("47B744A9-22F0-5B89-9EEA-3F064A9C3F9E")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental21 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental21Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("BE8BC888-716A-55AD-A46B-9627AE45FEA4")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental22 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental22Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("15A7A32B-D884-5C23-89A4-99E0FB0FDB9F")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental23 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental23Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("D1EDCBA8-709F-54D9-A1BA-205EA1D26B8A")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental24 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental24Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("440BC07E-E1F0-5756-90ED-794B561326DE")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental25 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental25Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("15639678-579B-5334-A8E4-C07F94E8F308")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental26 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental26Methods : object {
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _ScreenCaptureStarting_;
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2ScreenCaptureStartingEventArgs>>> _ScreenCaptureStarting { get; }
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2ScreenCaptureStartingEventArgs>>> MakeScreenCaptureStartingTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2ScreenCaptureStartingEventArgs>>> get__ScreenCaptureStarting();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2ScreenCaptureStartingEventArgs>> Get_ScreenCaptureStarting2(IObjectReference _obj, object _thisObj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("ACA475EA-4C5D-543C-9D44-F2F53E23C27C")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental27 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental27Methods : object {
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _SaveFileSecurityCheckStarting_;
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2SaveFileSecurityCheckStartingEventArgs>>> _SaveFileSecurityCheckStarting { get; }
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2SaveFileSecurityCheckStartingEventArgs>>> MakeSaveFileSecurityCheckStartingTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2SaveFileSecurityCheckStartingEventArgs>>> get__SaveFileSecurityCheckStarting();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2SaveFileSecurityCheckStartingEventArgs>> Get_SaveFileSecurityCheckStarting2(IObjectReference _obj, object _thisObj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental2Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("A642D8AB-0E3B-51B7-8170-E06177BAA7F2")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental3 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental3Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("22B29A3F-D054-5628-95A0-CA6DFE62519A")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental4 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental4Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("46AF52D3-A372-5C25-8BB1-DD561C40A54F")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental5 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental5Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("4806F8A8-4A49-581C-A62D-F6B75DE37947")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental6 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental6Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("27D3A94C-F2A5-5DA0-9429-BFE5ED7C3F99")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental7 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental7Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("0781DAAF-218E-5DA8-B966-71B4439494C1")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental8 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental8Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("FE83053C-0C67-5850-BC7B-EB2318790AA5")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental9 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental9Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("C66CEF13-F457-56A4-9F62-51282C190EC8")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalCompositionController3 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalCompositionController3Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("A759D1A0-B339-5A06-A663-9589B585A807")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalCompositionController4 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalCompositionController4Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static CoreWebView2PointerInfo CreateCoreWebView2PointerInfoFromPointerId(IObjectReference _obj, UInt32 PointerId, CoreWebView2ControllerWindowReference ParentWindow, Matrix4x4 transform);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("26C965BD-A224-5AFE-A04B-CA4B950CD528")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalCompositionController5 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalCompositionController5Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("5BF705B7-F628-52A3-8CAF-EF7FA3381A4A")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalController {
}
[GuidAttribute("2DA5F81E-E84E-512E-8197-A50A1111D160")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalController2 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalController2Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalControllerMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("6C347143-2F34-5764-A1D4-0344352EA2EF")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalControllerOptions {
}
[GuidAttribute("EF0BBE70-9B5B-5C74-94A0-A13F25A502E5")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalControllerOptions2 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalControllerOptions2Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static bool get_AllowHostInputProcessing(IObjectReference _obj);
    internal static void set_AllowHostInputProcessing(IObjectReference _obj, bool value);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalControllerOptionsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("FB66CF47-566D-52D3-8D0A-8234142782C5")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalEnvironment {
}
[GuidAttribute("7FA97AEF-8142-5818-A9FE-29B3C6730EEA")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalEnvironment10 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalEnvironment10Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("8C8CB727-CB79-5A90-B9F2-F0C234E090AB")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalEnvironment11 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalEnvironment11Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static IAsyncOperation`1<IReadOnlyList`1<CoreWebView2ProcessInfo>> GetProcessInfosWithDetailsAsync(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("38AC07CC-727F-52EF-BC9D-A78BC1152C66")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalEnvironment12 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalEnvironment12Methods : object {
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _RenderAdapterLUIDChanged_;
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Environment, object>>> _RenderAdapterLUIDChanged { get; }
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static CoreWebView2TextureStream CreateTextureStream(IObjectReference _obj, string streamId, object d3dDevice);
    internal static ulong get_RenderAdapterLUID(IObjectReference _obj);
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Environment, object>>> MakeRenderAdapterLUIDChangedTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Environment, object>>> get__RenderAdapterLUIDChanged();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2Environment, object>> Get_RenderAdapterLUIDChanged2(IObjectReference _obj, object _thisObj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("95909AF0-645D-5ECA-B6BE-7695A16DEFE3")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalEnvironment13 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalEnvironment13Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("C356B3A7-01D9-5125-BF98-EC822D3A4769")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalEnvironment14 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalEnvironment14Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("13B4F2A4-EA0C-5188-8813-BE2B54EA86E0")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalEnvironment2 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalEnvironment2Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("63337216-BA92-5A91-BF81-85A917FF009E")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalEnvironment3 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalEnvironment3Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static IAsyncOperation`1<CoreWebView2UpdateRuntimeResult> UpdateRuntimeAsync(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("BD44F1C0-13A3-5A55-A59B-42B740928FE2")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalEnvironment4 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalEnvironment4Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("916D3D42-822F-5FF9-9BC8-4A10C51966B7")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalEnvironment5 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalEnvironment5Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("4BEBA3E5-7554-5FDD-9865-4AD4B688010D")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalEnvironment6 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalEnvironment6Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("0F8451F8-C338-56CD-8BBB-2A175B953890")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalEnvironment7 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalEnvironment7Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("4C553D2F-7C43-5ACF-BE56-A9D7BD6E80A8")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalEnvironment8 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalEnvironment8Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("728AAD44-6E1E-5577-85B0-B5218393FAD3")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalEnvironment9 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalEnvironment9Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalEnvironmentMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("3E8B2A0B-2419-5CC1-A0DC-0F7D392DDF09")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalFrame {
}
[GuidAttribute("F953B3E6-A69B-5262-BC70-973AA4349041")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalFrame2 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalFrame2Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("E59DDD09-F44C-5975-8D80-977292DBFEFE")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalFrame3 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalFrame3Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("DB13C9B5-1F9A-5EB9-9B80-3D89B75650A0")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalFrame4 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalFrame4Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("DAF865A0-C929-5F17-A887-F3D659AB7BDF")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalFrame5 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalFrame5Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("2AEE9FD0-3C47-545E-A45C-B64206C26D65")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalFrame6 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalFrame6Methods : object {
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _ScreenCaptureStarting_;
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Frame, CoreWebView2ScreenCaptureStartingEventArgs>>> _ScreenCaptureStarting { get; }
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Frame, CoreWebView2ScreenCaptureStartingEventArgs>>> MakeScreenCaptureStartingTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Frame, CoreWebView2ScreenCaptureStartingEventArgs>>> get__ScreenCaptureStarting();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2Frame, CoreWebView2ScreenCaptureStartingEventArgs>> Get_ScreenCaptureStarting2(IObjectReference _obj, object _thisObj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("97C372E6-F78C-5C43-98A2-3F18DB6F6C26")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalFrame7 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalFrame7Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static bool get_UseOverrideTimerWakeInterval(IObjectReference _obj);
    internal static void set_UseOverrideTimerWakeInterval(IObjectReference _obj, bool value);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("A2D2ECFF-56D2-5287-B43B-024BB76D6249")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalFrameInfo {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalFrameInfoMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalFrameMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("69152B32-B4A7-5579-B69E-A72AA2453FE4")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalNavigationStartingEventArgs {
}
[GuidAttribute("583C97E6-2566-567C-BF50-B7AFA0A89213")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalNavigationStartingEventArgs2 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalNavigationStartingEventArgs2Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalNavigationStartingEventArgsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("DCCBDDAF-EFD2-5641-91A3-79F31EC4D430")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalNewWindowRequestedEventArgs {
}
[GuidAttribute("39CDBA34-8D04-5EC6-B640-BDB344A33B4E")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalNewWindowRequestedEventArgs2 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalNewWindowRequestedEventArgs2Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalNewWindowRequestedEventArgsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("594A083F-A115-58B7-9114-59EB185A2F41")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalPrintSettings2 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalPrintSettings2Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("D79B0A24-5CD5-546B-85FC-684D2C051DA3")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalProcessFailedEventArgs {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalProcessFailedEventArgsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("6BF121D8-8493-56CD-B756-43B0FF5897E7")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalProcessInfo {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalProcessInfoMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static IReadOnlyList`1<CoreWebView2FrameInfo> get_AssociatedFrameInfos(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("4341381A-1521-50BC-A713-93584C7AB8CD")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalProfile10 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalProfile10Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("F50A37EF-A50D-5E16-88A9-6C8DE4485AF7")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalProfile11 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalProfile11Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("79122DC9-8393-5032-BA92-0FAC81C43C37")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalProfile12 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalProfile12Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("45DEC898-2220-53BB-9891-EBD1E4456021")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalProfile2 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalProfile2Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("04D62BC4-9364-5803-9E14-63C0CDA7F9D1")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalProfile3 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalProfile3Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("71211EDE-C1E8-5B96-8743-95D9B764F16F")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalProfile4 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalProfile4Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("98556FB6-8EEF-50AC-A863-72B05BF0C1AD")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalProfile5 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalProfile5Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("191C7F78-5914-53C4-9698-8CB154D3D943")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalProfile6 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalProfile6Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("CA1CD782-49B5-56C4-88D8-D50FEE3D6929")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalProfile7 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalProfile7Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static IAsyncAction ClearCustomDataPartitionAsync(IObjectReference _obj, string CustomDataPartitionId);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("C1C72027-CAB9-51B2-9B92-BB6992DBAA97")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalProfile8 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalProfile8Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("54386DDB-5798-51CD-9FC0-5D283E0BBFD0")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalSettings {
}
[GuidAttribute("2C8229C2-3FAF-5ED3-9921-D6C5D88D134B")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalSettings2 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalSettings2Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("2B928477-D1C6-57D9-A291-F8EBC62B5339")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalSettings3 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalSettings3Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("E86262C4-CD63-59BE-BEED-347278E899A8")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalSettings4 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalSettings4Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("0C0511EA-CAEA-50B6-B306-0BE7AE336FF5")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalSettings5 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalSettings5Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("0300478C-E61D-5333-AD61-B91371EBA414")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalSettings6 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalSettings6Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("EAEBF880-DC39-50EF-B6A9-CBE536E0554F")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalSettings7 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalSettings7Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("61D8EE3A-B5A7-5E2D-829B-443EB4F9A2F1")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalSettings8 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalSettings8Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("C7AAA223-F79A-5C7E-A315-0E33E17659FE")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalSettings9 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalSettings9Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static TimeSpan get_PreferredBackgroundTimerWakeInterval(IObjectReference _obj);
    internal static void set_PreferredBackgroundTimerWakeInterval(IObjectReference _obj, TimeSpan value);
    internal static TimeSpan get_PreferredForegroundTimerWakeInterval(IObjectReference _obj);
    internal static void set_PreferredForegroundTimerWakeInterval(IObjectReference _obj, TimeSpan value);
    internal static TimeSpan get_PreferredIntensiveTimerWakeInterval(IObjectReference _obj);
    internal static void set_PreferredIntensiveTimerWakeInterval(IObjectReference _obj, TimeSpan value);
    internal static TimeSpan get_PreferredOverrideTimerWakeInterval(IObjectReference _obj);
    internal static void set_PreferredOverrideTimerWakeInterval(IObjectReference _obj, TimeSpan value);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalSettingsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("E35445C5-C811-5690-9D71-C181951DFB12")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalWebMessageReceivedEventArgs {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalWebMessageReceivedEventArgsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("EF7B5AEA-F358-5651-B5B2-0A00277AEC81")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalWebResourceRequestedEventArgs {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalWebResourceRequestedEventArgsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("CAB45512-9594-50F1-AC3C-9CC103B574A3")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2File {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2FileMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static string get_Path(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("241CB4C8-0021-5F72-8BF2-E141DCE4C151")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2FileSystemHandle {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2FileSystemHandleMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static CoreWebView2FileSystemHandleKind get_Kind(IObjectReference _obj);
    internal static string get_Path(IObjectReference _obj);
    internal static CoreWebView2FileSystemHandlePermission get_Permission(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("02FFCBF9-19E7-5BB8-8273-346420FB1503")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Frame {
}
[GuidAttribute("33DBC9C9-A103-56E3-B722-363814200320")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Frame2 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Frame2Methods : object {
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _ContentLoading_;
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _DOMContentLoaded_;
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _NavigationCompleted_;
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _NavigationStarting_;
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _WebMessageReceived_;
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Frame, CoreWebView2ContentLoadingEventArgs>>> _ContentLoading { get; }
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Frame, CoreWebView2DOMContentLoadedEventArgs>>> _DOMContentLoaded { get; }
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Frame, CoreWebView2NavigationCompletedEventArgs>>> _NavigationCompleted { get; }
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Frame, CoreWebView2NavigationStartingEventArgs>>> _NavigationStarting { get; }
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Frame, CoreWebView2WebMessageReceivedEventArgs>>> _WebMessageReceived { get; }
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static IAsyncOperation`1<string> ExecuteScriptAsync(IObjectReference _obj, string javaScript);
    internal static void PostWebMessageAsJson(IObjectReference _obj, string webMessageAsJson);
    internal static void PostWebMessageAsString(IObjectReference _obj, string webMessageAsString);
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Frame, CoreWebView2ContentLoadingEventArgs>>> MakeContentLoadingTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Frame, CoreWebView2ContentLoadingEventArgs>>> get__ContentLoading();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2Frame, CoreWebView2ContentLoadingEventArgs>> Get_ContentLoading2(IObjectReference _obj, object _thisObj);
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Frame, CoreWebView2DOMContentLoadedEventArgs>>> MakeDOMContentLoadedTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Frame, CoreWebView2DOMContentLoadedEventArgs>>> get__DOMContentLoaded();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2Frame, CoreWebView2DOMContentLoadedEventArgs>> Get_DOMContentLoaded2(IObjectReference _obj, object _thisObj);
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Frame, CoreWebView2NavigationCompletedEventArgs>>> MakeNavigationCompletedTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Frame, CoreWebView2NavigationCompletedEventArgs>>> get__NavigationCompleted();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2Frame, CoreWebView2NavigationCompletedEventArgs>> Get_NavigationCompleted2(IObjectReference _obj, object _thisObj);
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Frame, CoreWebView2NavigationStartingEventArgs>>> MakeNavigationStartingTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Frame, CoreWebView2NavigationStartingEventArgs>>> get__NavigationStarting();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2Frame, CoreWebView2NavigationStartingEventArgs>> Get_NavigationStarting2(IObjectReference _obj, object _thisObj);
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Frame, CoreWebView2WebMessageReceivedEventArgs>>> MakeWebMessageReceivedTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Frame, CoreWebView2WebMessageReceivedEventArgs>>> get__WebMessageReceived();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2Frame, CoreWebView2WebMessageReceivedEventArgs>> Get_WebMessageReceived2(IObjectReference _obj, object _thisObj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("6545DAC4-1666-50A5-BBE8-EC04842A466F")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Frame3 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Frame3Methods : object {
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _PermissionRequested_;
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Frame, CoreWebView2PermissionRequestedEventArgs>>> _PermissionRequested { get; }
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Frame, CoreWebView2PermissionRequestedEventArgs>>> MakePermissionRequestedTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Frame, CoreWebView2PermissionRequestedEventArgs>>> get__PermissionRequested();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2Frame, CoreWebView2PermissionRequestedEventArgs>> Get_PermissionRequested2(IObjectReference _obj, object _thisObj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("D46CD758-64B9-543E-A7B8-CAC9B4C059A7")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Frame4 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Frame4Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static void PostSharedBufferToScript(IObjectReference _obj, CoreWebView2SharedBuffer sharedBuffer, CoreWebView2SharedBufferAccess access, string additionalDataAsJson);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("27C4803D-9A7F-599A-BF72-07E8DC964A5B")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Frame5 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Frame5Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static UInt32 get_FrameId(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("527B01B8-FC6D-5543-8DCE-96CDFDB32C81")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2FrameCreatedEventArgs {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2FrameCreatedEventArgsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static CoreWebView2Frame get_Frame(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("F9B82E06-73F3-513B-BC2C-445DDEDBA976")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2FrameInfo {
}
[GuidAttribute("7F0770C6-0D5E-529B-B00C-F15656F605C4")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2FrameInfo2 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2FrameInfo2Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static UInt32 get_FrameId(IObjectReference _obj);
    internal static CoreWebView2FrameKind get_FrameKind(IObjectReference _obj);
    internal static CoreWebView2FrameInfo get_ParentFrameInfo(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2FrameInfoMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static string get_Name(IObjectReference _obj);
    internal static string get_Source(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2FrameMethods : object {
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _Destroyed_;
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _NameChanged_;
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Frame, object>>> _Destroyed { get; }
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Frame, object>>> _NameChanged { get; }
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static void RemoveHostObjectFromScript(IObjectReference _obj, string name);
    internal static int IsDestroyed(IObjectReference _obj);
    internal static string get_Name(IObjectReference _obj);
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Frame, object>>> MakeDestroyedTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Frame, object>>> get__Destroyed();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2Frame, object>> Get_Destroyed2(IObjectReference _obj, object _thisObj);
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Frame, object>>> MakeNameChangedTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Frame, object>>> get__NameChanged();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2Frame, object>> Get_NameChanged2(IObjectReference _obj, object _thisObj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("ADF264EE-D980-5F48-A60E-8705DE046608")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2HttpHeadersCollectionIterator {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2HttpHeadersCollectionIteratorMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("DC2226C7-3515-55BB-BCB2-57B78F86B91D")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2HttpRequestHeaders {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2HttpRequestHeadersMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static string GetHeader(IObjectReference _obj, string name);
    internal static CoreWebView2HttpHeadersCollectionIterator GetHeaders(IObjectReference _obj, string name);
    internal static bool Contains(IObjectReference _obj, string name);
    internal static void SetHeader(IObjectReference _obj, string name, string value);
    internal static void RemoveHeader(IObjectReference _obj, string name);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("F3D383E9-747F-5574-8662-9A6B920CECD4")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2HttpResponseHeaders {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2HttpResponseHeadersMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static void AppendHeader(IObjectReference _obj, string name, string value);
    internal static bool Contains(IObjectReference _obj, string name);
    internal static string GetHeader(IObjectReference _obj, string name);
    internal static CoreWebView2HttpHeadersCollectionIterator GetHeaders(IObjectReference _obj, string name);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("6AB44F8D-EC6A-56A1-AE3C-9C55DFF6CBC6")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2LaunchingExternalUriSchemeEventArgs {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2LaunchingExternalUriSchemeEventArgsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static Deferral GetDeferral(IObjectReference _obj);
    internal static bool get_Cancel(IObjectReference _obj);
    internal static void set_Cancel(IObjectReference _obj, bool value);
    internal static string get_InitiatingOrigin(IObjectReference _obj);
    internal static bool get_IsUserInitiated(IObjectReference _obj);
    internal static string get_Uri(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Methods : object {
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _ContainsFullScreenElementChanged_;
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _ContentLoading_;
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _DocumentTitleChanged_;
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _FrameNavigationCompleted_;
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _FrameNavigationStarting_;
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _HistoryChanged_;
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _NavigationCompleted_;
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _NavigationStarting_;
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _NewWindowRequested_;
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _PermissionRequested_;
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _ProcessFailed_;
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _ScriptDialogOpening_;
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _SourceChanged_;
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _WebMessageReceived_;
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _WebResourceRequested_;
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _WindowCloseRequested_;
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, object>>> _ContainsFullScreenElementChanged { get; }
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2ContentLoadingEventArgs>>> _ContentLoading { get; }
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, object>>> _DocumentTitleChanged { get; }
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2NavigationCompletedEventArgs>>> _FrameNavigationCompleted { get; }
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2NavigationStartingEventArgs>>> _FrameNavigationStarting { get; }
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, object>>> _HistoryChanged { get; }
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2NavigationCompletedEventArgs>>> _NavigationCompleted { get; }
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2NavigationStartingEventArgs>>> _NavigationStarting { get; }
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2NewWindowRequestedEventArgs>>> _NewWindowRequested { get; }
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2PermissionRequestedEventArgs>>> _PermissionRequested { get; }
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2ProcessFailedEventArgs>>> _ProcessFailed { get; }
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2ScriptDialogOpeningEventArgs>>> _ScriptDialogOpening { get; }
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2SourceChangedEventArgs>>> _SourceChanged { get; }
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2WebMessageReceivedEventArgs>>> _WebMessageReceived { get; }
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2WebResourceRequestedEventArgs>>> _WebResourceRequested { get; }
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, object>>> _WindowCloseRequested { get; }
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static void Navigate(IObjectReference _obj, string uri);
    internal static void NavigateToString(IObjectReference _obj, string htmlContent);
    internal static IAsyncOperation`1<string> AddScriptToExecuteOnDocumentCreatedAsync(IObjectReference _obj, string javaScript);
    internal static void RemoveScriptToExecuteOnDocumentCreated(IObjectReference _obj, string id);
    internal static IAsyncOperation`1<string> ExecuteScriptAsync(IObjectReference _obj, string javaScript);
    internal static IAsyncAction CapturePreviewAsync(IObjectReference _obj, CoreWebView2CapturePreviewImageFormat imageFormat, IRandomAccessStream imageStream);
    internal static void Reload(IObjectReference _obj);
    internal static void PostWebMessageAsJson(IObjectReference _obj, string webMessageAsJson);
    internal static void PostWebMessageAsString(IObjectReference _obj, string webMessageAsString);
    internal static IAsyncOperation`1<string> CallDevToolsProtocolMethodAsync(IObjectReference _obj, string methodName, string parametersAsJson);
    internal static void GoBack(IObjectReference _obj);
    internal static void GoForward(IObjectReference _obj);
    internal static CoreWebView2DevToolsProtocolEventReceiver GetDevToolsProtocolEventReceiver(IObjectReference _obj, string eventName);
    internal static void Stop(IObjectReference _obj);
    internal static void AddHostObjectToScript(IObjectReference _obj, string name, object rawObject);
    internal static void RemoveHostObjectFromScript(IObjectReference _obj, string name);
    internal static void OpenDevToolsWindow(IObjectReference _obj);
    internal static void AddWebResourceRequestedFilter(IObjectReference _obj, string uri, CoreWebView2WebResourceContext ResourceContext);
    internal static void RemoveWebResourceRequestedFilter(IObjectReference _obj, string uri, CoreWebView2WebResourceContext ResourceContext);
    internal static UInt32 get_BrowserProcessId(IObjectReference _obj);
    internal static bool get_CanGoBack(IObjectReference _obj);
    internal static bool get_CanGoForward(IObjectReference _obj);
    internal static bool get_ContainsFullScreenElement(IObjectReference _obj);
    internal static string get_DocumentTitle(IObjectReference _obj);
    internal static CoreWebView2Settings get_Settings(IObjectReference _obj);
    internal static string get_Source(IObjectReference _obj);
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, object>>> MakeContainsFullScreenElementChangedTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, object>>> get__ContainsFullScreenElementChanged();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2, object>> Get_ContainsFullScreenElementChanged2(IObjectReference _obj, object _thisObj);
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2ContentLoadingEventArgs>>> MakeContentLoadingTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2ContentLoadingEventArgs>>> get__ContentLoading();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2ContentLoadingEventArgs>> Get_ContentLoading2(IObjectReference _obj, object _thisObj);
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, object>>> MakeDocumentTitleChangedTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, object>>> get__DocumentTitleChanged();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2, object>> Get_DocumentTitleChanged2(IObjectReference _obj, object _thisObj);
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2NavigationCompletedEventArgs>>> MakeFrameNavigationCompletedTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2NavigationCompletedEventArgs>>> get__FrameNavigationCompleted();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2NavigationCompletedEventArgs>> Get_FrameNavigationCompleted2(IObjectReference _obj, object _thisObj);
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2NavigationStartingEventArgs>>> MakeFrameNavigationStartingTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2NavigationStartingEventArgs>>> get__FrameNavigationStarting();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2NavigationStartingEventArgs>> Get_FrameNavigationStarting2(IObjectReference _obj, object _thisObj);
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, object>>> MakeHistoryChangedTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, object>>> get__HistoryChanged();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2, object>> Get_HistoryChanged2(IObjectReference _obj, object _thisObj);
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2NavigationCompletedEventArgs>>> MakeNavigationCompletedTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2NavigationCompletedEventArgs>>> get__NavigationCompleted();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2NavigationCompletedEventArgs>> Get_NavigationCompleted2(IObjectReference _obj, object _thisObj);
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2NavigationStartingEventArgs>>> MakeNavigationStartingTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2NavigationStartingEventArgs>>> get__NavigationStarting();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2NavigationStartingEventArgs>> Get_NavigationStarting2(IObjectReference _obj, object _thisObj);
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2NewWindowRequestedEventArgs>>> MakeNewWindowRequestedTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2NewWindowRequestedEventArgs>>> get__NewWindowRequested();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2NewWindowRequestedEventArgs>> Get_NewWindowRequested2(IObjectReference _obj, object _thisObj);
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2PermissionRequestedEventArgs>>> MakePermissionRequestedTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2PermissionRequestedEventArgs>>> get__PermissionRequested();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2PermissionRequestedEventArgs>> Get_PermissionRequested2(IObjectReference _obj, object _thisObj);
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2ProcessFailedEventArgs>>> MakeProcessFailedTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2ProcessFailedEventArgs>>> get__ProcessFailed();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2ProcessFailedEventArgs>> Get_ProcessFailed2(IObjectReference _obj, object _thisObj);
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2ScriptDialogOpeningEventArgs>>> MakeScriptDialogOpeningTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2ScriptDialogOpeningEventArgs>>> get__ScriptDialogOpening();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2ScriptDialogOpeningEventArgs>> Get_ScriptDialogOpening2(IObjectReference _obj, object _thisObj);
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2SourceChangedEventArgs>>> MakeSourceChangedTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2SourceChangedEventArgs>>> get__SourceChanged();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2SourceChangedEventArgs>> Get_SourceChanged2(IObjectReference _obj, object _thisObj);
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2WebMessageReceivedEventArgs>>> MakeWebMessageReceivedTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2WebMessageReceivedEventArgs>>> get__WebMessageReceived();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2WebMessageReceivedEventArgs>> Get_WebMessageReceived2(IObjectReference _obj, object _thisObj);
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2WebResourceRequestedEventArgs>>> MakeWebResourceRequestedTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2WebResourceRequestedEventArgs>>> get__WebResourceRequested();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2WebResourceRequestedEventArgs>> Get_WebResourceRequested2(IObjectReference _obj, object _thisObj);
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, object>>> MakeWindowCloseRequestedTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2, object>>> get__WindowCloseRequested();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2, object>> Get_WindowCloseRequested2(IObjectReference _obj, object _thisObj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("2E29103B-ECDD-5C1D-B288-3F066D608919")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2MoveFocusRequestedEventArgs {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2MoveFocusRequestedEventArgsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static bool get_Handled(IObjectReference _obj);
    internal static void set_Handled(IObjectReference _obj, bool value);
    internal static CoreWebView2MoveFocusReason get_Reason(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("4865E238-036A-5664-95A3-447EC44CF498")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2NavigationCompletedEventArgs {
}
[GuidAttribute("6E4D3C33-A6E2-5896-90C5-68B4B5E55B40")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2NavigationCompletedEventArgs2 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2NavigationCompletedEventArgs2Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static int get_HttpStatusCode(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2NavigationCompletedEventArgsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static bool get_IsSuccess(IObjectReference _obj);
    internal static ulong get_NavigationId(IObjectReference _obj);
    internal static CoreWebView2WebErrorStatus get_WebErrorStatus(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("548D23D3-FEA3-5616-BD05-AE08066C86D3")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2NavigationStartingEventArgs {
}
[GuidAttribute("D7A3824E-7654-5C4B-B069-E6501634D84C")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2NavigationStartingEventArgs2 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2NavigationStartingEventArgs2Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static string get_AdditionalAllowedFrameAncestors(IObjectReference _obj);
    internal static void set_AdditionalAllowedFrameAncestors(IObjectReference _obj, string value);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("17DB72F6-E995-59F6-91BA-4411E755F3AB")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2NavigationStartingEventArgs3 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2NavigationStartingEventArgs3Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static CoreWebView2NavigationKind get_NavigationKind(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2NavigationStartingEventArgsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static bool get_Cancel(IObjectReference _obj);
    internal static void set_Cancel(IObjectReference _obj, bool value);
    internal static bool get_IsRedirected(IObjectReference _obj);
    internal static bool get_IsUserInitiated(IObjectReference _obj);
    internal static ulong get_NavigationId(IObjectReference _obj);
    internal static CoreWebView2HttpRequestHeaders get_RequestHeaders(IObjectReference _obj);
    internal static string get_Uri(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("E6E013BA-AEC8-532E-9AC9-1590AF7B25EC")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2NewWindowRequestedEventArgs {
}
[GuidAttribute("F4806259-E63A-5C0B-A02C-5F10E11094F4")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2NewWindowRequestedEventArgs2 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2NewWindowRequestedEventArgs2Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static string get_Name(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("1F0F7826-8D70-5720-BB8B-D87F63CBFB9C")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2NewWindowRequestedEventArgs3 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2NewWindowRequestedEventArgs3Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static CoreWebView2FrameInfo get_OriginalSourceFrameInfo(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2NewWindowRequestedEventArgsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static Deferral GetDeferral(IObjectReference _obj);
    internal static bool get_Handled(IObjectReference _obj);
    internal static void set_Handled(IObjectReference _obj, bool value);
    internal static bool get_IsUserInitiated(IObjectReference _obj);
    internal static CoreWebView2 get_NewWindow(IObjectReference _obj);
    internal static void set_NewWindow(IObjectReference _obj, CoreWebView2 value);
    internal static string get_Uri(IObjectReference _obj);
    internal static CoreWebView2WindowFeatures get_WindowFeatures(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("4F583622-CD0F-55D6-BE7E-8A8F99A20E62")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2NonClientRegionChangedEventArgs {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2NonClientRegionChangedEventArgsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static CoreWebView2NonClientRegionKind get_RegionKind(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("2516351D-6CCD-5484-BFF3-75F4DD4749E5")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Notification {
}
[GuidAttribute("A2C84873-F40E-5ADE-A7DB-E478233C5897")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Notification_Manual2 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Notification_Manual2Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static IReadOnlyList`1<ulong> get_VibrationPattern(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2NotificationMethods : object {
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _CloseRequested_;
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Notification, object>>> _CloseRequested { get; }
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static void ReportShown(IObjectReference _obj);
    internal static void ReportClicked(IObjectReference _obj);
    internal static void ReportClosed(IObjectReference _obj);
    internal static string get_BadgeUri(IObjectReference _obj);
    internal static string get_Body(IObjectReference _obj);
    internal static string get_BodyImageUri(IObjectReference _obj);
    internal static CoreWebView2TextDirectionKind get_Direction(IObjectReference _obj);
    internal static string get_IconUri(IObjectReference _obj);
    internal static bool get_IsSilent(IObjectReference _obj);
    internal static string get_Language(IObjectReference _obj);
    internal static bool get_RequiresInteraction(IObjectReference _obj);
    internal static bool get_ShouldRenotify(IObjectReference _obj);
    internal static string get_Tag(IObjectReference _obj);
    internal static double get_Timestamp(IObjectReference _obj);
    internal static string get_Title(IObjectReference _obj);
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Notification, object>>> MakeCloseRequestedTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Notification, object>>> get__CloseRequested();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2Notification, object>> Get_CloseRequested2(IObjectReference _obj, object _thisObj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("9416A036-5E06-57CB-8BBB-7F6EA1DC9A3D")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2NotificationReceivedEventArgs {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2NotificationReceivedEventArgsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static Deferral GetDeferral(IObjectReference _obj);
    internal static bool get_Handled(IObjectReference _obj);
    internal static void set_Handled(IObjectReference _obj, bool value);
    internal static CoreWebView2Notification get_Notification(IObjectReference _obj);
    internal static string get_SenderOrigin(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("118BDD9B-CEF1-5910-929E-C1A321328239")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2PermissionRequestedEventArgs {
}
[GuidAttribute("A6652FBA-EBE5-5891-ADDC-CB37DA8F7E66")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2PermissionRequestedEventArgs2 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2PermissionRequestedEventArgs2Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static bool get_Handled(IObjectReference _obj);
    internal static void set_Handled(IObjectReference _obj, bool value);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("200E8BCC-BC11-5BEB-AA7A-79D4C95D73AA")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2PermissionRequestedEventArgs3 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2PermissionRequestedEventArgs3Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static bool get_SavesInProfile(IObjectReference _obj);
    internal static void set_SavesInProfile(IObjectReference _obj, bool value);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2PermissionRequestedEventArgsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static Deferral GetDeferral(IObjectReference _obj);
    internal static bool get_IsUserInitiated(IObjectReference _obj);
    internal static CoreWebView2PermissionKind get_PermissionKind(IObjectReference _obj);
    internal static CoreWebView2PermissionState get_State(IObjectReference _obj);
    internal static void set_State(IObjectReference _obj, CoreWebView2PermissionState value);
    internal static string get_Uri(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("B4158D0B-8EF8-575F-8E99-5FE02E8B579E")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2PermissionSetting {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2PermissionSettingMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static CoreWebView2PermissionKind get_PermissionKind(IObjectReference _obj);
    internal static string get_PermissionOrigin(IObjectReference _obj);
    internal static CoreWebView2PermissionState get_PermissionState(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("C3860E0D-C018-5A84-BC06-9F8F7B275DFF")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfoMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static int get_ButtonChangeKind(IObjectReference _obj);
    internal static void set_ButtonChangeKind(IObjectReference _obj, int value);
    internal static Rect get_DisplayRect(IObjectReference _obj);
    internal static void set_DisplayRect(IObjectReference _obj, Rect value);
    internal static UInt32 get_FrameId(IObjectReference _obj);
    internal static void set_FrameId(IObjectReference _obj, UInt32 value);
    internal static Point get_HimetricLocation(IObjectReference _obj);
    internal static void set_HimetricLocation(IObjectReference _obj, Point value);
    internal static Point get_HimetricLocationRaw(IObjectReference _obj);
    internal static void set_HimetricLocationRaw(IObjectReference _obj, Point value);
    internal static UInt32 get_HistoryCount(IObjectReference _obj);
    internal static void set_HistoryCount(IObjectReference _obj, UInt32 value);
    internal static int get_InputData(IObjectReference _obj);
    internal static void set_InputData(IObjectReference _obj, int value);
    internal static UInt32 get_KeyStates(IObjectReference _obj);
    internal static void set_KeyStates(IObjectReference _obj, UInt32 value);
    internal static UInt32 get_PenFlags(IObjectReference _obj);
    internal static void set_PenFlags(IObjectReference _obj, UInt32 value);
    internal static UInt32 get_PenMask(IObjectReference _obj);
    internal static void set_PenMask(IObjectReference _obj, UInt32 value);
    internal static UInt32 get_PenPressure(IObjectReference _obj);
    internal static void set_PenPressure(IObjectReference _obj, UInt32 value);
    internal static UInt32 get_PenRotation(IObjectReference _obj);
    internal static void set_PenRotation(IObjectReference _obj, UInt32 value);
    internal static int get_PenTiltX(IObjectReference _obj);
    internal static void set_PenTiltX(IObjectReference _obj, int value);
    internal static int get_PenTiltY(IObjectReference _obj);
    internal static void set_PenTiltY(IObjectReference _obj, int value);
    internal static ulong get_PerformanceCount(IObjectReference _obj);
    internal static void set_PerformanceCount(IObjectReference _obj, ulong value);
    internal static Point get_PixelLocation(IObjectReference _obj);
    internal static void set_PixelLocation(IObjectReference _obj, Point value);
    internal static Point get_PixelLocationRaw(IObjectReference _obj);
    internal static void set_PixelLocationRaw(IObjectReference _obj, Point value);
    internal static Rect get_PointerDeviceRect(IObjectReference _obj);
    internal static void set_PointerDeviceRect(IObjectReference _obj, Rect value);
    internal static UInt32 get_PointerFlags(IObjectReference _obj);
    internal static void set_PointerFlags(IObjectReference _obj, UInt32 value);
    internal static UInt32 get_PointerId(IObjectReference _obj);
    internal static void set_PointerId(IObjectReference _obj, UInt32 value);
    internal static UInt32 get_PointerKind(IObjectReference _obj);
    internal static void set_PointerKind(IObjectReference _obj, UInt32 value);
    internal static UInt32 get_Time(IObjectReference _obj);
    internal static void set_Time(IObjectReference _obj, UInt32 value);
    internal static Rect get_TouchContact(IObjectReference _obj);
    internal static void set_TouchContact(IObjectReference _obj, Rect value);
    internal static Rect get_TouchContactRaw(IObjectReference _obj);
    internal static void set_TouchContactRaw(IObjectReference _obj, Rect value);
    internal static UInt32 get_TouchFlags(IObjectReference _obj);
    internal static void set_TouchFlags(IObjectReference _obj, UInt32 value);
    internal static UInt32 get_TouchMask(IObjectReference _obj);
    internal static void set_TouchMask(IObjectReference _obj, UInt32 value);
    internal static UInt32 get_TouchOrientation(IObjectReference _obj);
    internal static void set_TouchOrientation(IObjectReference _obj, UInt32 value);
    internal static UInt32 get_TouchPressure(IObjectReference _obj);
    internal static void set_TouchPressure(IObjectReference _obj, UInt32 value);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("9C75C8C0-EF3D-58A8-9A8C-18EED9FD0F16")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2PrintSettings {
}
[GuidAttribute("D2A97895-CA6E-57FC-905D-C6F77A081768")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2PrintSettings2 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2PrintSettings2Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static CoreWebView2PrintCollation get_Collation(IObjectReference _obj);
    internal static void set_Collation(IObjectReference _obj, CoreWebView2PrintCollation value);
    internal static CoreWebView2PrintColorMode get_ColorMode(IObjectReference _obj);
    internal static void set_ColorMode(IObjectReference _obj, CoreWebView2PrintColorMode value);
    internal static int get_Copies(IObjectReference _obj);
    internal static void set_Copies(IObjectReference _obj, int value);
    internal static CoreWebView2PrintDuplex get_Duplex(IObjectReference _obj);
    internal static void set_Duplex(IObjectReference _obj, CoreWebView2PrintDuplex value);
    internal static CoreWebView2PrintMediaSize get_MediaSize(IObjectReference _obj);
    internal static void set_MediaSize(IObjectReference _obj, CoreWebView2PrintMediaSize value);
    internal static string get_PageRanges(IObjectReference _obj);
    internal static void set_PageRanges(IObjectReference _obj, string value);
    internal static int get_PagesPerSide(IObjectReference _obj);
    internal static void set_PagesPerSide(IObjectReference _obj, int value);
    internal static string get_PrinterName(IObjectReference _obj);
    internal static void set_PrinterName(IObjectReference _obj, string value);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2PrintSettingsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static string get_FooterUri(IObjectReference _obj);
    internal static void set_FooterUri(IObjectReference _obj, string value);
    internal static string get_HeaderTitle(IObjectReference _obj);
    internal static void set_HeaderTitle(IObjectReference _obj, string value);
    internal static double get_MarginBottom(IObjectReference _obj);
    internal static void set_MarginBottom(IObjectReference _obj, double value);
    internal static double get_MarginLeft(IObjectReference _obj);
    internal static void set_MarginLeft(IObjectReference _obj, double value);
    internal static double get_MarginRight(IObjectReference _obj);
    internal static void set_MarginRight(IObjectReference _obj, double value);
    internal static double get_MarginTop(IObjectReference _obj);
    internal static void set_MarginTop(IObjectReference _obj, double value);
    internal static CoreWebView2PrintOrientation get_Orientation(IObjectReference _obj);
    internal static void set_Orientation(IObjectReference _obj, CoreWebView2PrintOrientation value);
    internal static double get_PageHeight(IObjectReference _obj);
    internal static void set_PageHeight(IObjectReference _obj, double value);
    internal static double get_PageWidth(IObjectReference _obj);
    internal static void set_PageWidth(IObjectReference _obj, double value);
    internal static double get_ScaleFactor(IObjectReference _obj);
    internal static void set_ScaleFactor(IObjectReference _obj, double value);
    internal static bool get_ShouldPrintBackgrounds(IObjectReference _obj);
    internal static void set_ShouldPrintBackgrounds(IObjectReference _obj, bool value);
    internal static bool get_ShouldPrintHeaderAndFooter(IObjectReference _obj);
    internal static void set_ShouldPrintHeaderAndFooter(IObjectReference _obj, bool value);
    internal static bool get_ShouldPrintSelectionOnly(IObjectReference _obj);
    internal static void set_ShouldPrintSelectionOnly(IObjectReference _obj, bool value);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("2850F27C-0C9D-5CDC-B356-18F5B97D9FCF")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2PrivatePartial {
}
[GuidAttribute("527F6678-8629-5C2A-BC3B-8D5C95E2B9BC")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2PrivatePartialController {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2PrivatePartialControllerMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static bool get_IsBrowserHitTransparent(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2PrivatePartialMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("60E9238B-621D-57E8-B670-74382B2380A7")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ProcessExtendedInfo {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ProcessExtendedInfoMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static IReadOnlyList`1<CoreWebView2FrameInfo> get_AssociatedFrameInfos(IObjectReference _obj);
    internal static CoreWebView2ProcessInfo get_ProcessInfo(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("25A8F8C9-D944-539D-AFA3-24172B48EF47")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ProcessFailedEventArgs {
}
[GuidAttribute("C5D9C952-B456-5DC7-9F76-FDE967484AF5")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ProcessFailedEventArgs2 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ProcessFailedEventArgs2Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static int get_ExitCode(IObjectReference _obj);
    internal static IReadOnlyList`1<CoreWebView2FrameInfo> get_FrameInfosForFailedProcess(IObjectReference _obj);
    internal static string get_ProcessDescription(IObjectReference _obj);
    internal static CoreWebView2ProcessFailedReason get_Reason(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("D129A419-ADAE-5C3C-8FCE-5592994E9CD3")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ProcessFailedEventArgs3 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ProcessFailedEventArgs3Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static string get_FailureSourceModulePath(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ProcessFailedEventArgsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static CoreWebView2ProcessFailedKind get_ProcessFailedKind(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("B6EC37E1-23EB-5924-B346-E837890AA9D5")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ProcessInfo {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ProcessInfoMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static CoreWebView2ProcessKind get_Kind(IObjectReference _obj);
    internal static int get_ProcessId(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("D4BDD25C-A2DB-5C03-9659-ABDEB9793621")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Profile {
}
[GuidAttribute("93D21E18-1B06-59D0-9687-10F4844B016D")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Profile2 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Profile2Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static IAsyncAction ClearBrowsingDataAsync(IObjectReference _obj, CoreWebView2BrowsingDataKinds dataKinds);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("507ED587-C511-5E47-BE5B-FC9CCDF179B6")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Profile3 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Profile3Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static CoreWebView2TrackingPreventionLevel get_PreferredTrackingPreventionLevel(IObjectReference _obj);
    internal static void set_PreferredTrackingPreventionLevel(IObjectReference _obj, CoreWebView2TrackingPreventionLevel value);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("EEAE109A-F641-5A5B-942F-9922594FFB4D")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Profile4 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Profile4Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static IAsyncAction SetPermissionStateAsync(IObjectReference _obj, CoreWebView2PermissionKind PermissionKind, string origin, CoreWebView2PermissionState State);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("C9AAC8F7-E502-5485-B033-99E4940EE0F1")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Profile5 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Profile5Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static CoreWebView2CookieManager get_CookieManager(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("C16A4665-9D44-5768-94A3-69B3976FC3D6")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Profile6 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Profile6Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static bool get_IsGeneralAutofillEnabled(IObjectReference _obj);
    internal static void set_IsGeneralAutofillEnabled(IObjectReference _obj, bool value);
    internal static bool get_IsPasswordAutosaveEnabled(IObjectReference _obj);
    internal static void set_IsPasswordAutosaveEnabled(IObjectReference _obj, bool value);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("5F665761-5C12-5F39-B9FE-607E6E94ADD1")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Profile7 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Profile7Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static IAsyncOperation`1<CoreWebView2BrowserExtension> AddBrowserExtensionAsync(IObjectReference _obj, string extensionFolderPath);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("9362D39C-D521-59E9-88FD-7C5AA1167DA6")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Profile8 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Profile8Methods : object {
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _Deleted_;
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Profile, object>>> _Deleted { get; }
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static void Delete(IObjectReference _obj);
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Profile, object>>> MakeDeletedTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2Profile, object>>> get__Deleted();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2Profile, object>> Get_Deleted2(IObjectReference _obj, object _thisObj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ProfileMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static string get_DefaultDownloadFolderPath(IObjectReference _obj);
    internal static void set_DefaultDownloadFolderPath(IObjectReference _obj, string value);
    internal static bool get_IsInPrivateModeEnabled(IObjectReference _obj);
    internal static CoreWebView2PreferredColorScheme get_PreferredColorScheme(IObjectReference _obj);
    internal static void set_PreferredColorScheme(IObjectReference _obj, CoreWebView2PreferredColorScheme value);
    internal static string get_ProfileName(IObjectReference _obj);
    internal static string get_ProfilePath(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("CC39A250-2B4C-5608-9097-C59B8A8231B9")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2SaveAsUIShowingEventArgs {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2SaveAsUIShowingEventArgsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static Deferral GetDeferral(IObjectReference _obj);
    internal static bool get_AllowReplace(IObjectReference _obj);
    internal static void set_AllowReplace(IObjectReference _obj, bool value);
    internal static bool get_Cancel(IObjectReference _obj);
    internal static void set_Cancel(IObjectReference _obj, bool value);
    internal static string get_ContentMimeType(IObjectReference _obj);
    internal static CoreWebView2SaveAsKind get_Kind(IObjectReference _obj);
    internal static void set_Kind(IObjectReference _obj, CoreWebView2SaveAsKind value);
    internal static string get_SaveAsFilePath(IObjectReference _obj);
    internal static void set_SaveAsFilePath(IObjectReference _obj, string value);
    internal static bool get_SuppressDefaultDialog(IObjectReference _obj);
    internal static void set_SuppressDefaultDialog(IObjectReference _obj, bool value);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("6F6B50FF-3EAE-5C4C-A29F-6FCE822A04E0")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2SaveFileSecurityCheckStartingEventArgs {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2SaveFileSecurityCheckStartingEventArgsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static Deferral GetDeferral(IObjectReference _obj);
    internal static bool get_CancelSave(IObjectReference _obj);
    internal static void set_CancelSave(IObjectReference _obj, bool value);
    internal static string get_DocumentOriginUri(IObjectReference _obj);
    internal static string get_FileExtension(IObjectReference _obj);
    internal static string get_FilePath(IObjectReference _obj);
    internal static bool get_SuppressDefaultPolicy(IObjectReference _obj);
    internal static void set_SuppressDefaultPolicy(IObjectReference _obj, bool value);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("35F0E2BB-94B0-5BE7-B633-F87244E38BFE")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ScreenCaptureStartingEventArgs {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ScreenCaptureStartingEventArgsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static Deferral GetDeferral(IObjectReference _obj);
    internal static bool get_Cancel(IObjectReference _obj);
    internal static void set_Cancel(IObjectReference _obj, bool value);
    internal static bool get_Handled(IObjectReference _obj);
    internal static void set_Handled(IObjectReference _obj, bool value);
    internal static CoreWebView2FrameInfo get_OriginalSourceFrameInfo(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("A4315212-C7EB-568A-86E4-C61E31BA6CDA")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ScriptDialogOpeningEventArgs {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ScriptDialogOpeningEventArgsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static void Accept(IObjectReference _obj);
    internal static Deferral GetDeferral(IObjectReference _obj);
    internal static string get_DefaultText(IObjectReference _obj);
    internal static CoreWebView2ScriptDialogKind get_Kind(IObjectReference _obj);
    internal static string get_Message(IObjectReference _obj);
    internal static string get_ResultText(IObjectReference _obj);
    internal static void set_ResultText(IObjectReference _obj, string value);
    internal static string get_Uri(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("09BC3CE3-3978-50A5-86AE-5C596D371C4E")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ScriptException {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ScriptExceptionMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static UInt32 get_ColumnNumber(IObjectReference _obj);
    internal static UInt32 get_LineNumber(IObjectReference _obj);
    internal static string get_Message(IObjectReference _obj);
    internal static string get_Name(IObjectReference _obj);
    internal static string get_ToJson(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("90FDC703-5A9E-56F6-A422-7C114C736420")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ServerCertificateErrorDetectedEventArgs {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ServerCertificateErrorDetectedEventArgsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static Deferral GetDeferral(IObjectReference _obj);
    internal static CoreWebView2ServerCertificateErrorAction get_Action(IObjectReference _obj);
    internal static void set_Action(IObjectReference _obj, CoreWebView2ServerCertificateErrorAction value);
    internal static CoreWebView2WebErrorStatus get_ErrorStatus(IObjectReference _obj);
    internal static string get_RequestUri(IObjectReference _obj);
    internal static CoreWebView2Certificate get_ServerCertificate(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("003B325E-74CD-52DD-8024-EBB8BE38E48E")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Settings {
}
[GuidAttribute("0A538C87-E000-511C-87CA-DED3413D03DA")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Settings_Manual {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Settings_ManualMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static ICoreWebView2DispatchAdapter get_HostObjectDispatchAdapter(IObjectReference _obj);
    internal static void set_HostObjectDispatchAdapter(IObjectReference _obj, ICoreWebView2DispatchAdapter value);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("377D3480-FDB2-56E7-BADE-507D352887E9")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Settings2 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Settings2Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static string get_UserAgent(IObjectReference _obj);
    internal static void set_UserAgent(IObjectReference _obj, string value);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("52200F01-5309-5B2E-A03C-3D2677591940")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Settings3 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Settings3Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static bool get_AreBrowserAcceleratorKeysEnabled(IObjectReference _obj);
    internal static void set_AreBrowserAcceleratorKeysEnabled(IObjectReference _obj, bool value);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("D6A955F0-DAEF-5A6A-A6F6-C72F0EDE7620")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Settings4 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Settings4Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static bool get_IsGeneralAutofillEnabled(IObjectReference _obj);
    internal static void set_IsGeneralAutofillEnabled(IObjectReference _obj, bool value);
    internal static bool get_IsPasswordAutosaveEnabled(IObjectReference _obj);
    internal static void set_IsPasswordAutosaveEnabled(IObjectReference _obj, bool value);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("AFC42B23-4839-5D73-ACF7-E0335631ABF5")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Settings5 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Settings5Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static bool get_IsPinchZoomEnabled(IObjectReference _obj);
    internal static void set_IsPinchZoomEnabled(IObjectReference _obj, bool value);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("3FE4AE85-0540-5BF1-B4D9-99EC57AA64F5")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Settings6 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Settings6Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static bool get_IsSwipeNavigationEnabled(IObjectReference _obj);
    internal static void set_IsSwipeNavigationEnabled(IObjectReference _obj, bool value);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("688027CD-9F84-59E8-8D5C-91123DF24B92")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Settings7 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Settings7Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static CoreWebView2PdfToolbarItems get_HiddenPdfToolbarItems(IObjectReference _obj);
    internal static void set_HiddenPdfToolbarItems(IObjectReference _obj, CoreWebView2PdfToolbarItems value);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("956F1A8F-3198-5577-B250-7D91D17F7EED")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Settings8 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Settings8Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static bool get_IsReputationCheckingRequired(IObjectReference _obj);
    internal static void set_IsReputationCheckingRequired(IObjectReference _obj, bool value);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("4C346681-714D-5A3D-8105-2A7B80BEEAB5")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Settings9 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Settings9Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static bool get_IsNonClientRegionSupportEnabled(IObjectReference _obj);
    internal static void set_IsNonClientRegionSupportEnabled(IObjectReference _obj, bool value);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2SettingsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static bool get_AreDefaultContextMenusEnabled(IObjectReference _obj);
    internal static void set_AreDefaultContextMenusEnabled(IObjectReference _obj, bool value);
    internal static bool get_AreDefaultScriptDialogsEnabled(IObjectReference _obj);
    internal static void set_AreDefaultScriptDialogsEnabled(IObjectReference _obj, bool value);
    internal static bool get_AreDevToolsEnabled(IObjectReference _obj);
    internal static void set_AreDevToolsEnabled(IObjectReference _obj, bool value);
    internal static bool get_AreHostObjectsAllowed(IObjectReference _obj);
    internal static void set_AreHostObjectsAllowed(IObjectReference _obj, bool value);
    internal static bool get_IsBuiltInErrorPageEnabled(IObjectReference _obj);
    internal static void set_IsBuiltInErrorPageEnabled(IObjectReference _obj, bool value);
    internal static bool get_IsScriptEnabled(IObjectReference _obj);
    internal static void set_IsScriptEnabled(IObjectReference _obj, bool value);
    internal static bool get_IsStatusBarEnabled(IObjectReference _obj);
    internal static void set_IsStatusBarEnabled(IObjectReference _obj, bool value);
    internal static bool get_IsWebMessageEnabled(IObjectReference _obj);
    internal static void set_IsWebMessageEnabled(IObjectReference _obj, bool value);
    internal static bool get_IsZoomControlEnabled(IObjectReference _obj);
    internal static void set_IsZoomControlEnabled(IObjectReference _obj, bool value);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("2907CC84-F843-5959-8734-F871766F8F13")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2SharedBuffer {
}
[GuidAttribute("1AA4E213-ACE3-5F74-A2AE-C6489CEB3239")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2SharedBuffer_Manual {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2SharedBuffer_ManualMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static IMemoryBufferReference get_Buffer(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2SharedBufferMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static IRandomAccessStream OpenStream(IObjectReference _obj);
    internal static ulong get_Size(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("CA437B2C-6A18-5552-B749-B198F8CC34D9")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2SourceChangedEventArgs {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2SourceChangedEventArgsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static bool get_IsNewDocument(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("371E2C32-2DD7-5F1E-874C-C7F40B131A2D")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Texture {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2TextureMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static object get_Resource(IObjectReference _obj);
    internal static ulong get_Timestamp(IObjectReference _obj);
    internal static void set_Timestamp(IObjectReference _obj, ulong value);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("A4B79659-91F8-5676-978A-26F37BAA8845")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2TextureStream {
}
[GuidAttribute("8788681B-F2B7-5046-AA60-D03AEADD2D2B")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2TextureStreamErrorReceivedEventArgs {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2TextureStreamErrorReceivedEventArgsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static CoreWebView2TextureStreamErrorKind get_Kind(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2TextureStreamMethods : object {
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _ErrorReceived_;
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _StartRequested_;
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _Stopped_;
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _WebTextureReceived_;
    private static ConditionalWeakTable`2 modreq(System.Runtime.CompilerServices.IsVolatile) _WebTextureStreamStopped_;
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2TextureStream, CoreWebView2TextureStreamErrorReceivedEventArgs>>> _ErrorReceived { get; }
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2TextureStream, object>>> _StartRequested { get; }
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2TextureStream, object>>> _Stopped { get; }
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2TextureStream, CoreWebView2TextureStreamWebTextureReceivedEventArgs>>> _WebTextureReceived { get; }
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2TextureStream, object>>> _WebTextureStreamStopped { get; }
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static void AddAllowedOrigin(IObjectReference _obj, string origin, int value);
    internal static void RemoveAllowedOrigin(IObjectReference _obj, string origin);
    internal static CoreWebView2Texture CreateTexture(IObjectReference _obj, UInt32 widthInTexels, UInt32 heightInTexels);
    internal static CoreWebView2Texture GetAvailableTexture(IObjectReference _obj);
    internal static void CloseTexture(IObjectReference _obj, CoreWebView2Texture texture);
    internal static void PresentTexture(IObjectReference _obj, CoreWebView2Texture texture);
    internal static void Stop(IObjectReference _obj);
    internal static void SetD3DDevice(IObjectReference _obj, object d3dDevice);
    internal static string get_Id(IObjectReference _obj);
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2TextureStream, CoreWebView2TextureStreamErrorReceivedEventArgs>>> MakeErrorReceivedTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2TextureStream, CoreWebView2TextureStreamErrorReceivedEventArgs>>> get__ErrorReceived();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2TextureStream, CoreWebView2TextureStreamErrorReceivedEventArgs>> Get_ErrorReceived2(IObjectReference _obj, object _thisObj);
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2TextureStream, object>>> MakeStartRequestedTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2TextureStream, object>>> get__StartRequested();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2TextureStream, object>> Get_StartRequested2(IObjectReference _obj, object _thisObj);
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2TextureStream, object>>> MakeStoppedTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2TextureStream, object>>> get__Stopped();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2TextureStream, object>> Get_Stopped2(IObjectReference _obj, object _thisObj);
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2TextureStream, CoreWebView2TextureStreamWebTextureReceivedEventArgs>>> MakeWebTextureReceivedTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2TextureStream, CoreWebView2TextureStreamWebTextureReceivedEventArgs>>> get__WebTextureReceived();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2TextureStream, CoreWebView2TextureStreamWebTextureReceivedEventArgs>> Get_WebTextureReceived2(IObjectReference _obj, object _thisObj);
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2TextureStream, object>>> MakeWebTextureStreamStoppedTable();
    private static ConditionalWeakTable`2<object, EventSource`1<TypedEventHandler`2<CoreWebView2TextureStream, object>>> get__WebTextureStreamStopped();
    internal static EventSource`1<TypedEventHandler`2<CoreWebView2TextureStream, object>> Get_WebTextureStreamStopped2(IObjectReference _obj, object _thisObj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("0532FC0D-057F-525F-9432-596CA9BF5FA3")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2TextureStreamWebTextureReceivedEventArgs {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2TextureStreamWebTextureReceivedEventArgsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static CoreWebView2WebTexture get_WebTexture(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("8954D90C-B8FF-5F02-B6B7-2DA952D540A4")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2UpdateRuntimeResult {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2UpdateRuntimeResultMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static CoreWebView2UpdateRuntimeStatus get_Status(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("EB066159-B725-5D5B-ADC8-F5D7B9290304")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2WebMessageReceivedEventArgs {
}
[GuidAttribute("71DC5FA0-08A0-5DEA-9363-799DF5021452")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2WebMessageReceivedEventArgs2 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2WebMessageReceivedEventArgs2Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static IReadOnlyList`1<object> get_AdditionalObjects(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2WebMessageReceivedEventArgsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static string TryGetWebMessageAsString(IObjectReference _obj);
    internal static string get_Source(IObjectReference _obj);
    internal static string get_WebMessageAsJson(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("5C742259-67D2-5DF2-8382-0F201B4D7197")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceRequest {
}
[GuidAttribute("577F1FC4-C943-54A9-9700-BD469B48BD41")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceRequestedEventArgs {
}
[GuidAttribute("0BBE4B89-88A9-575A-B09E-7946EE415E94")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceRequestedEventArgs2 {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceRequestedEventArgs2Methods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static CoreWebView2WebResourceRequestSourceKinds get_RequestedSourceKind(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceRequestedEventArgsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static Deferral GetDeferral(IObjectReference _obj);
    internal static CoreWebView2WebResourceRequest get_Request(IObjectReference _obj);
    internal static CoreWebView2WebResourceContext get_ResourceContext(IObjectReference _obj);
    internal static CoreWebView2WebResourceResponse get_Response(IObjectReference _obj);
    internal static void set_Response(IObjectReference _obj, CoreWebView2WebResourceResponse value);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceRequestMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static IRandomAccessStream get_Content(IObjectReference _obj);
    internal static void set_Content(IObjectReference _obj, IRandomAccessStream value);
    internal static CoreWebView2HttpRequestHeaders get_Headers(IObjectReference _obj);
    internal static string get_Method(IObjectReference _obj);
    internal static void set_Method(IObjectReference _obj, string value);
    internal static string get_Uri(IObjectReference _obj);
    internal static void set_Uri(IObjectReference _obj, string value);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("14621923-E485-5F44-8F5D-BD4243BC398F")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceResponse {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceResponseMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static IRandomAccessStream get_Content(IObjectReference _obj);
    internal static void set_Content(IObjectReference _obj, IRandomAccessStream value);
    internal static CoreWebView2HttpResponseHeaders get_Headers(IObjectReference _obj);
    internal static string get_ReasonPhrase(IObjectReference _obj);
    internal static void set_ReasonPhrase(IObjectReference _obj, string value);
    internal static int get_StatusCode(IObjectReference _obj);
    internal static void set_StatusCode(IObjectReference _obj, int value);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("12424671-9711-54F4-BCDF-5F307ADD6EC2")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceResponseReceivedEventArgs {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceResponseReceivedEventArgsMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static CoreWebView2WebResourceRequest get_Request(IObjectReference _obj);
    internal static CoreWebView2WebResourceResponseView get_Response(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("33EE060B-B578-5698-B541-FEF87FE7FE72")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceResponseView {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceResponseViewMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static IAsyncOperation`1<IRandomAccessStream> GetContentAsync(IObjectReference _obj);
    internal static CoreWebView2HttpResponseHeaders get_Headers(IObjectReference _obj);
    internal static string get_ReasonPhrase(IObjectReference _obj);
    internal static int get_StatusCode(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("3854CF38-6534-575D-9CF1-814BBD2AF35D")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2WebTexture {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2WebTextureMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static object get_Resource(IObjectReference _obj);
    internal static ulong get_Timestamp(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[GuidAttribute("EE8686D6-056F-5E06-824F-4E2A24C1C1D6")]
internal interface ABI.Microsoft.Web.WebView2.Core.ICoreWebView2WindowFeatures {
}
internal static class ABI.Microsoft.Web.WebView2.Core.ICoreWebView2WindowFeaturesMethods : object {
    [IsReadOnlyAttribute]
public static Guid& modreq(System.Runtime.InteropServices.InAttribute) IID { get; }
    internal static bool get_HasPosition(IObjectReference _obj);
    internal static bool get_HasSize(IObjectReference _obj);
    internal static UInt32 get_Height(IObjectReference _obj);
    internal static UInt32 get_Left(IObjectReference _obj);
    internal static bool get_ShouldDisplayMenuBar(IObjectReference _obj);
    internal static bool get_ShouldDisplayScrollBars(IObjectReference _obj);
    internal static bool get_ShouldDisplayStatus(IObjectReference _obj);
    internal static bool get_ShouldDisplayToolbar(IObjectReference _obj);
    internal static UInt32 get_Top(IObjectReference _obj);
    internal static UInt32 get_Width(IObjectReference _obj);
    public static Guid& modreq(System.Runtime.InteropServices.InAttribute) get_IID();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2")]
[CoreWebView2RcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2")]
public class Microsoft.Web.WebView2.Core.CoreWebView2 : object {
    private IObjectReference _inner;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental10;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental11;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental12;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental13;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental14;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental15;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental16;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental17;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental18;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental19;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental2;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental20;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental21;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental22;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental23;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental24;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental25;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental26;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental27;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental3;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental4;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental5;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental6;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental7;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental8;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental9;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2PrivatePartial;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_10;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_11;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_12;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_13;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_14;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_15;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_16;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_17;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_18;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_19;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_2;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_20;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_21;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_22;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_23;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_24;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_25;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_3;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_4;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_5;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_6;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_7;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_8;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_9;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_Manual;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_Manual2;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental10 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental11 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental12 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental13 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental14 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental15 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental16 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental17 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental18 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental19 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental2 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental20 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental21 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental22 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental23 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental24 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental25 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental26 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental27 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental3 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental4 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental5 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental6 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental7 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental8 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental9 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2PrivatePartial { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_10 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_11 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_12 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_13 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_14 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_15 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_16 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_17 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_18 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_19 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_2 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_20 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_21 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_22 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_23 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_24 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_25 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_3 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_4 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_5 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_6 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_7 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_8 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_9 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_Manual { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_Manual2 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2 { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public UInt32 BrowserProcessId { get; }
    public bool CanGoBack { get; }
    public bool CanGoForward { get; }
    public bool ContainsFullScreenElement { get; }
    public CoreWebView2CookieManager CookieManager { get; }
    public string CustomDataPartitionId { get; public set; }
    public CoreWebView2DefaultDownloadDialogCornerAlignment DefaultDownloadDialogCornerAlignment { get; public set; }
    public Point DefaultDownloadDialogMargin { get; public set; }
    public string DocumentTitle { get; }
    public CoreWebView2Environment Environment { get; }
    public string FaviconUri { get; }
    public UInt32 FrameId { get; }
    public bool IsDefaultDownloadDialogOpen { get; }
    public bool IsDocumentPlayingAudio { get; }
    public bool IsMuted { get; public set; }
    public bool IsSuspended { get; }
    public CoreWebView2MemoryUsageTargetLevel MemoryUsageTargetLevel { get; public set; }
    public CoreWebView2Profile Profile { get; }
    public CoreWebView2Settings Settings { get; }
    public string Source { get; }
    public string StatusBarText { get; }
    internal CoreWebView2(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental10();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental10();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental11();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental11();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental12();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental12();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental13();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental13();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental14();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental14();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental15();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental15();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental16();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental16();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental17();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental17();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental18();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental18();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental19();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental19();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental2();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental2();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental20();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental20();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental21();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental21();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental22();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental22();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental23();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental23();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental24();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental24();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental25();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental25();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental26();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental26();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental27();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental27();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental3();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental3();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental4();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental4();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental5();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental5();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental6();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental6();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental7();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental7();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental8();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental8();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental9();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Experimental9();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2PrivatePartial();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2PrivatePartial();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_10();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_10();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_11();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_11();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_12();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_12();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_13();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_13();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_14();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_14();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_15();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_15();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_16();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_16();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_17();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_17();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_18();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_18();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_19();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_19();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_2();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_2();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_20();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_20();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_21();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_21();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_22();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_22();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_23();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_23();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_24();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_24();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_25();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_25();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_3();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_3();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_4();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_4();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_5();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_5();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_6();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_6();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_7();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_7();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_8();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_8();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_9();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_9();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_Manual();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_Manual();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_Manual2();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2_Manual2();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2();
    public static CoreWebView2 FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2 x, CoreWebView2 y);
    public static bool op_Inequality(CoreWebView2 x, CoreWebView2 y);
    public sealed virtual bool Equals(CoreWebView2 other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public void add_ScreenCaptureStarting(TypedEventHandler`2<CoreWebView2, CoreWebView2ScreenCaptureStartingEventArgs> value);
    public void remove_ScreenCaptureStarting(TypedEventHandler`2<CoreWebView2, CoreWebView2ScreenCaptureStartingEventArgs> value);
    public void add_SaveFileSecurityCheckStarting(TypedEventHandler`2<CoreWebView2, CoreWebView2SaveFileSecurityCheckStartingEventArgs> value);
    public void remove_SaveFileSecurityCheckStarting(TypedEventHandler`2<CoreWebView2, CoreWebView2SaveFileSecurityCheckStartingEventArgs> value);
    public void add_BasicAuthenticationRequested(TypedEventHandler`2<CoreWebView2, CoreWebView2BasicAuthenticationRequestedEventArgs> value);
    public void remove_BasicAuthenticationRequested(TypedEventHandler`2<CoreWebView2, CoreWebView2BasicAuthenticationRequestedEventArgs> value);
    public IAsyncOperation`1<string> CallDevToolsProtocolMethodForSessionAsync(string sessionId, string methodName, string parametersAsJson);
    public void add_ContextMenuRequested(TypedEventHandler`2<CoreWebView2, CoreWebView2ContextMenuRequestedEventArgs> value);
    public void remove_ContextMenuRequested(TypedEventHandler`2<CoreWebView2, CoreWebView2ContextMenuRequestedEventArgs> value);
    public void add_StatusBarTextChanged(TypedEventHandler`2<CoreWebView2, object> value);
    public void remove_StatusBarTextChanged(TypedEventHandler`2<CoreWebView2, object> value);
    public IAsyncAction ClearServerCertificateErrorActionsAsync();
    public void add_ServerCertificateErrorDetected(TypedEventHandler`2<CoreWebView2, CoreWebView2ServerCertificateErrorDetectedEventArgs> value);
    public void remove_ServerCertificateErrorDetected(TypedEventHandler`2<CoreWebView2, CoreWebView2ServerCertificateErrorDetectedEventArgs> value);
    public IAsyncOperation`1<IRandomAccessStream> GetFaviconAsync(CoreWebView2FaviconImageFormat format);
    public void add_FaviconChanged(TypedEventHandler`2<CoreWebView2, object> value);
    public void remove_FaviconChanged(TypedEventHandler`2<CoreWebView2, object> value);
    public IAsyncOperation`1<CoreWebView2PrintStatus> PrintAsync(CoreWebView2PrintSettings printSettings);
    public void ShowPrintUI(CoreWebView2PrintDialogKind printDialogKind);
    public IAsyncOperation`1<IRandomAccessStream> PrintToPdfStreamAsync(CoreWebView2PrintSettings printSettings);
    public void PostSharedBufferToScript(CoreWebView2SharedBuffer sharedBuffer, CoreWebView2SharedBufferAccess access, string additionalDataAsJson);
    public void add_LaunchingExternalUriScheme(TypedEventHandler`2<CoreWebView2, CoreWebView2LaunchingExternalUriSchemeEventArgs> value);
    public void remove_LaunchingExternalUriScheme(TypedEventHandler`2<CoreWebView2, CoreWebView2LaunchingExternalUriSchemeEventArgs> value);
    public void NavigateWithWebResourceRequest(CoreWebView2WebResourceRequest Request);
    public void add_DOMContentLoaded(TypedEventHandler`2<CoreWebView2, CoreWebView2DOMContentLoadedEventArgs> value);
    public void remove_DOMContentLoaded(TypedEventHandler`2<CoreWebView2, CoreWebView2DOMContentLoadedEventArgs> value);
    public void add_WebResourceResponseReceived(TypedEventHandler`2<CoreWebView2, CoreWebView2WebResourceResponseReceivedEventArgs> value);
    public void remove_WebResourceResponseReceived(TypedEventHandler`2<CoreWebView2, CoreWebView2WebResourceResponseReceivedEventArgs> value);
    public IAsyncOperation`1<CoreWebView2ExecuteScriptResult> ExecuteScriptWithResultAsync(string javaScript);
    public void add_NotificationReceived(TypedEventHandler`2<CoreWebView2, CoreWebView2NotificationReceivedEventArgs> value);
    public void remove_NotificationReceived(TypedEventHandler`2<CoreWebView2, CoreWebView2NotificationReceivedEventArgs> value);
    public IAsyncOperation`1<CoreWebView2SaveAsUIResult> ShowSaveAsUIAsync();
    public void add_SaveAsUIShowing(TypedEventHandler`2<CoreWebView2, CoreWebView2SaveAsUIShowingEventArgs> value);
    public void remove_SaveAsUIShowing(TypedEventHandler`2<CoreWebView2, CoreWebView2SaveAsUIShowingEventArgs> value);
    public IAsyncOperation`1<bool> TrySuspendAsync();
    public void Resume();
    public void SetVirtualHostNameToFolderMapping(string hostName, string folderPath, CoreWebView2HostResourceAccessKind accessKind);
    public void ClearVirtualHostNameToFolderMapping(string hostName);
    public void add_DownloadStarting(TypedEventHandler`2<CoreWebView2, CoreWebView2DownloadStartingEventArgs> value);
    public void remove_DownloadStarting(TypedEventHandler`2<CoreWebView2, CoreWebView2DownloadStartingEventArgs> value);
    public void add_FrameCreated(TypedEventHandler`2<CoreWebView2, CoreWebView2FrameCreatedEventArgs> value);
    public void remove_FrameCreated(TypedEventHandler`2<CoreWebView2, CoreWebView2FrameCreatedEventArgs> value);
    public void add_ClientCertificateRequested(TypedEventHandler`2<CoreWebView2, CoreWebView2ClientCertificateRequestedEventArgs> value);
    public void remove_ClientCertificateRequested(TypedEventHandler`2<CoreWebView2, CoreWebView2ClientCertificateRequestedEventArgs> value);
    public void OpenTaskManagerWindow();
    public IAsyncOperation`1<bool> PrintToPdfAsync(string ResultFilePath, CoreWebView2PrintSettings printSettings);
    public void add_IsDocumentPlayingAudioChanged(TypedEventHandler`2<CoreWebView2, object> value);
    public void remove_IsDocumentPlayingAudioChanged(TypedEventHandler`2<CoreWebView2, object> value);
    public void add_IsMutedChanged(TypedEventHandler`2<CoreWebView2, object> value);
    public void remove_IsMutedChanged(TypedEventHandler`2<CoreWebView2, object> value);
    public void OpenDefaultDownloadDialog();
    public void CloseDefaultDownloadDialog();
    public void add_IsDefaultDownloadDialogOpenChanged(TypedEventHandler`2<CoreWebView2, object> value);
    public void remove_IsDefaultDownloadDialogOpenChanged(TypedEventHandler`2<CoreWebView2, object> value);
    public void AddWebResourceRequestedFilter(string uri, CoreWebView2WebResourceContext resourceContext, CoreWebView2WebResourceRequestSourceKinds requestSourceKinds);
    public void RemoveWebResourceRequestedFilter(string uri, CoreWebView2WebResourceContext resourceContext, CoreWebView2WebResourceRequestSourceKinds requestSourceKinds);
    public void PostWebMessageAsJson(string webMessageAsJson, IReadOnlyList`1<object> additionalObjects);
    public void Navigate(string uri);
    public void NavigateToString(string htmlContent);
    public IAsyncOperation`1<string> AddScriptToExecuteOnDocumentCreatedAsync(string javaScript);
    public void RemoveScriptToExecuteOnDocumentCreated(string id);
    public IAsyncOperation`1<string> ExecuteScriptAsync(string javaScript);
    public IAsyncAction CapturePreviewAsync(CoreWebView2CapturePreviewImageFormat imageFormat, IRandomAccessStream imageStream);
    public void Reload();
    public void PostWebMessageAsJson(string webMessageAsJson);
    public void PostWebMessageAsString(string webMessageAsString);
    public IAsyncOperation`1<string> CallDevToolsProtocolMethodAsync(string methodName, string parametersAsJson);
    public void GoBack();
    public void GoForward();
    public CoreWebView2DevToolsProtocolEventReceiver GetDevToolsProtocolEventReceiver(string eventName);
    public void Stop();
    public void AddHostObjectToScript(string name, object rawObject);
    public void RemoveHostObjectFromScript(string name);
    public void OpenDevToolsWindow();
    public void AddWebResourceRequestedFilter(string uri, CoreWebView2WebResourceContext ResourceContext);
    public void RemoveWebResourceRequestedFilter(string uri, CoreWebView2WebResourceContext ResourceContext);
    public void add_ContainsFullScreenElementChanged(TypedEventHandler`2<CoreWebView2, object> value);
    public void remove_ContainsFullScreenElementChanged(TypedEventHandler`2<CoreWebView2, object> value);
    public void add_ContentLoading(TypedEventHandler`2<CoreWebView2, CoreWebView2ContentLoadingEventArgs> value);
    public void remove_ContentLoading(TypedEventHandler`2<CoreWebView2, CoreWebView2ContentLoadingEventArgs> value);
    public void add_DocumentTitleChanged(TypedEventHandler`2<CoreWebView2, object> value);
    public void remove_DocumentTitleChanged(TypedEventHandler`2<CoreWebView2, object> value);
    public void add_FrameNavigationCompleted(TypedEventHandler`2<CoreWebView2, CoreWebView2NavigationCompletedEventArgs> value);
    public void remove_FrameNavigationCompleted(TypedEventHandler`2<CoreWebView2, CoreWebView2NavigationCompletedEventArgs> value);
    public void add_FrameNavigationStarting(TypedEventHandler`2<CoreWebView2, CoreWebView2NavigationStartingEventArgs> value);
    public void remove_FrameNavigationStarting(TypedEventHandler`2<CoreWebView2, CoreWebView2NavigationStartingEventArgs> value);
    public void add_HistoryChanged(TypedEventHandler`2<CoreWebView2, object> value);
    public void remove_HistoryChanged(TypedEventHandler`2<CoreWebView2, object> value);
    public void add_NavigationCompleted(TypedEventHandler`2<CoreWebView2, CoreWebView2NavigationCompletedEventArgs> value);
    public void remove_NavigationCompleted(TypedEventHandler`2<CoreWebView2, CoreWebView2NavigationCompletedEventArgs> value);
    public void add_NavigationStarting(TypedEventHandler`2<CoreWebView2, CoreWebView2NavigationStartingEventArgs> value);
    public void remove_NavigationStarting(TypedEventHandler`2<CoreWebView2, CoreWebView2NavigationStartingEventArgs> value);
    public void add_NewWindowRequested(TypedEventHandler`2<CoreWebView2, CoreWebView2NewWindowRequestedEventArgs> value);
    public void remove_NewWindowRequested(TypedEventHandler`2<CoreWebView2, CoreWebView2NewWindowRequestedEventArgs> value);
    public void add_PermissionRequested(TypedEventHandler`2<CoreWebView2, CoreWebView2PermissionRequestedEventArgs> value);
    public void remove_PermissionRequested(TypedEventHandler`2<CoreWebView2, CoreWebView2PermissionRequestedEventArgs> value);
    public void add_ProcessFailed(TypedEventHandler`2<CoreWebView2, CoreWebView2ProcessFailedEventArgs> value);
    public void remove_ProcessFailed(TypedEventHandler`2<CoreWebView2, CoreWebView2ProcessFailedEventArgs> value);
    public void add_ScriptDialogOpening(TypedEventHandler`2<CoreWebView2, CoreWebView2ScriptDialogOpeningEventArgs> value);
    public void remove_ScriptDialogOpening(TypedEventHandler`2<CoreWebView2, CoreWebView2ScriptDialogOpeningEventArgs> value);
    public void add_SourceChanged(TypedEventHandler`2<CoreWebView2, CoreWebView2SourceChangedEventArgs> value);
    public void remove_SourceChanged(TypedEventHandler`2<CoreWebView2, CoreWebView2SourceChangedEventArgs> value);
    public void add_WebMessageReceived(TypedEventHandler`2<CoreWebView2, CoreWebView2WebMessageReceivedEventArgs> value);
    public void remove_WebMessageReceived(TypedEventHandler`2<CoreWebView2, CoreWebView2WebMessageReceivedEventArgs> value);
    public void add_WebResourceRequested(TypedEventHandler`2<CoreWebView2, CoreWebView2WebResourceRequestedEventArgs> value);
    public void remove_WebResourceRequested(TypedEventHandler`2<CoreWebView2, CoreWebView2WebResourceRequestedEventArgs> value);
    public void add_WindowCloseRequested(TypedEventHandler`2<CoreWebView2, object> value);
    public void remove_WindowCloseRequested(TypedEventHandler`2<CoreWebView2, object> value);
    public UInt32 get_BrowserProcessId();
    public bool get_CanGoBack();
    public bool get_CanGoForward();
    public bool get_ContainsFullScreenElement();
    public CoreWebView2CookieManager get_CookieManager();
    public string get_CustomDataPartitionId();
    public void set_CustomDataPartitionId(string value);
    public CoreWebView2DefaultDownloadDialogCornerAlignment get_DefaultDownloadDialogCornerAlignment();
    public void set_DefaultDownloadDialogCornerAlignment(CoreWebView2DefaultDownloadDialogCornerAlignment value);
    public Point get_DefaultDownloadDialogMargin();
    public void set_DefaultDownloadDialogMargin(Point value);
    public string get_DocumentTitle();
    public CoreWebView2Environment get_Environment();
    public string get_FaviconUri();
    public UInt32 get_FrameId();
    public bool get_IsDefaultDownloadDialogOpen();
    public bool get_IsDocumentPlayingAudio();
    public bool get_IsMuted();
    public void set_IsMuted(bool value);
    public bool get_IsSuspended();
    public CoreWebView2MemoryUsageTargetLevel get_MemoryUsageTargetLevel();
    public void set_MemoryUsageTargetLevel(CoreWebView2MemoryUsageTargetLevel value);
    public CoreWebView2Profile get_Profile();
    public CoreWebView2Settings get_Settings();
    public string get_Source();
    public string get_StatusBarText();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2AcceleratorKeyPressedEventArgs")]
[CoreWebView2AcceleratorKeyPressedEventArgsRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2AcceleratorKeyPressedEventArgs")]
public class Microsoft.Web.WebView2.Core.CoreWebView2AcceleratorKeyPressedEventArgs : object {
    private IObjectReference _inner;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2AcceleratorKeyPressedEventArgs2;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2AcceleratorKeyPressedEventArgs2 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2AcceleratorKeyPressedEventArgs { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public bool Handled { get; public set; }
    public bool IsBrowserAcceleratorKeyEnabled { get; public set; }
    public CoreWebView2KeyEventKind KeyEventKind { get; }
    public int KeyEventLParam { get; }
    public CoreWebView2PhysicalKeyStatus PhysicalKeyStatus { get; }
    public UInt32 VirtualKey { get; }
    internal CoreWebView2AcceleratorKeyPressedEventArgs(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2AcceleratorKeyPressedEventArgs2();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2AcceleratorKeyPressedEventArgs2();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2AcceleratorKeyPressedEventArgs();
    public static CoreWebView2AcceleratorKeyPressedEventArgs FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2AcceleratorKeyPressedEventArgs x, CoreWebView2AcceleratorKeyPressedEventArgs y);
    public static bool op_Inequality(CoreWebView2AcceleratorKeyPressedEventArgs x, CoreWebView2AcceleratorKeyPressedEventArgs y);
    public sealed virtual bool Equals(CoreWebView2AcceleratorKeyPressedEventArgs other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public bool get_Handled();
    public void set_Handled(bool value);
    public bool get_IsBrowserAcceleratorKeyEnabled();
    public void set_IsBrowserAcceleratorKeyEnabled(bool value);
    public CoreWebView2KeyEventKind get_KeyEventKind();
    public int get_KeyEventLParam();
    public CoreWebView2PhysicalKeyStatus get_PhysicalKeyStatus();
    public UInt32 get_VirtualKey();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2BasicAuthenticationRequestedEventArgs")]
[CoreWebView2BasicAuthenticationRequestedEventArgsRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2BasicAuthenticationRequestedEventArgs")]
public class Microsoft.Web.WebView2.Core.CoreWebView2BasicAuthenticationRequestedEventArgs : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2BasicAuthenticationRequestedEventArgs { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public bool Cancel { get; public set; }
    public string Challenge { get; }
    public CoreWebView2BasicAuthenticationResponse Response { get; }
    public string Uri { get; }
    internal CoreWebView2BasicAuthenticationRequestedEventArgs(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2BasicAuthenticationRequestedEventArgs();
    public static CoreWebView2BasicAuthenticationRequestedEventArgs FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2BasicAuthenticationRequestedEventArgs x, CoreWebView2BasicAuthenticationRequestedEventArgs y);
    public static bool op_Inequality(CoreWebView2BasicAuthenticationRequestedEventArgs x, CoreWebView2BasicAuthenticationRequestedEventArgs y);
    public sealed virtual bool Equals(CoreWebView2BasicAuthenticationRequestedEventArgs other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public Deferral GetDeferral();
    public bool get_Cancel();
    public void set_Cancel(bool value);
    public string get_Challenge();
    public CoreWebView2BasicAuthenticationResponse get_Response();
    public string get_Uri();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2BasicAuthenticationResponse")]
[CoreWebView2BasicAuthenticationResponseRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2BasicAuthenticationResponse")]
public class Microsoft.Web.WebView2.Core.CoreWebView2BasicAuthenticationResponse : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2BasicAuthenticationResponse { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public string Password { get; public set; }
    public string UserName { get; public set; }
    internal CoreWebView2BasicAuthenticationResponse(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2BasicAuthenticationResponse();
    public static CoreWebView2BasicAuthenticationResponse FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2BasicAuthenticationResponse x, CoreWebView2BasicAuthenticationResponse y);
    public static bool op_Inequality(CoreWebView2BasicAuthenticationResponse x, CoreWebView2BasicAuthenticationResponse y);
    public sealed virtual bool Equals(CoreWebView2BasicAuthenticationResponse other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public string get_Password();
    public void set_Password(string value);
    public string get_UserName();
    public void set_UserName(string value);
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Web.WebView2.Core.CoreWebView2BoundsMode>")]
public enum Microsoft.Web.WebView2.Core.CoreWebView2BoundsMode : Enum {
    public int value__;
    public static CoreWebView2BoundsMode UseRawPixels;
    public static CoreWebView2BoundsMode UseRasterizationScale;
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2BrowserExtension")]
[CoreWebView2BrowserExtensionRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2BrowserExtension")]
public class Microsoft.Web.WebView2.Core.CoreWebView2BrowserExtension : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2BrowserExtension { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public string Id { get; }
    public bool IsEnabled { get; }
    public string Name { get; }
    internal CoreWebView2BrowserExtension(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2BrowserExtension();
    public static CoreWebView2BrowserExtension FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2BrowserExtension x, CoreWebView2BrowserExtension y);
    public static bool op_Inequality(CoreWebView2BrowserExtension x, CoreWebView2BrowserExtension y);
    public sealed virtual bool Equals(CoreWebView2BrowserExtension other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public IAsyncAction RemoveAsync();
    public IAsyncAction EnableAsync(bool IsEnabled);
    public string get_Id();
    public bool get_IsEnabled();
    public string get_Name();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2BrowserProcessExitedEventArgs")]
[CoreWebView2BrowserProcessExitedEventArgsRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2BrowserProcessExitedEventArgs")]
public class Microsoft.Web.WebView2.Core.CoreWebView2BrowserProcessExitedEventArgs : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2BrowserProcessExitedEventArgs { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public CoreWebView2BrowserProcessExitKind BrowserProcessExitKind { get; }
    public UInt32 BrowserProcessId { get; }
    internal CoreWebView2BrowserProcessExitedEventArgs(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2BrowserProcessExitedEventArgs();
    public static CoreWebView2BrowserProcessExitedEventArgs FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2BrowserProcessExitedEventArgs x, CoreWebView2BrowserProcessExitedEventArgs y);
    public static bool op_Inequality(CoreWebView2BrowserProcessExitedEventArgs x, CoreWebView2BrowserProcessExitedEventArgs y);
    public sealed virtual bool Equals(CoreWebView2BrowserProcessExitedEventArgs other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public CoreWebView2BrowserProcessExitKind get_BrowserProcessExitKind();
    public UInt32 get_BrowserProcessId();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Web.WebView2.Core.CoreWebView2BrowserProcessExitKind>")]
public enum Microsoft.Web.WebView2.Core.CoreWebView2BrowserProcessExitKind : Enum {
    public int value__;
    public static CoreWebView2BrowserProcessExitKind Normal;
    public static CoreWebView2BrowserProcessExitKind Failed;
}
[FlagsAttribute]
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Web.WebView2.Core.CoreWebView2BrowsingDataKinds>")]
public enum Microsoft.Web.WebView2.Core.CoreWebView2BrowsingDataKinds : Enum {
    public UInt32 value__;
    public static CoreWebView2BrowsingDataKinds FileSystems;
    public static CoreWebView2BrowsingDataKinds IndexedDb;
    public static CoreWebView2BrowsingDataKinds LocalStorage;
    public static CoreWebView2BrowsingDataKinds WebSql;
    public static CoreWebView2BrowsingDataKinds CacheStorage;
    public static CoreWebView2BrowsingDataKinds AllDomStorage;
    public static CoreWebView2BrowsingDataKinds Cookies;
    public static CoreWebView2BrowsingDataKinds AllSite;
    public static CoreWebView2BrowsingDataKinds DiskCache;
    public static CoreWebView2BrowsingDataKinds DownloadHistory;
    public static CoreWebView2BrowsingDataKinds GeneralAutofill;
    public static CoreWebView2BrowsingDataKinds PasswordAutosave;
    public static CoreWebView2BrowsingDataKinds BrowsingHistory;
    public static CoreWebView2BrowsingDataKinds Settings;
    public static CoreWebView2BrowsingDataKinds AllProfile;
    public static CoreWebView2BrowsingDataKinds ServiceWorkers;
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Web.WebView2.Core.CoreWebView2CapturePreviewImageFormat>")]
public enum Microsoft.Web.WebView2.Core.CoreWebView2CapturePreviewImageFormat : Enum {
    public int value__;
    public static CoreWebView2CapturePreviewImageFormat Png;
    public static CoreWebView2CapturePreviewImageFormat Jpeg;
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2Certificate")]
[CoreWebView2CertificateRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2Certificate")]
public class Microsoft.Web.WebView2.Core.CoreWebView2Certificate : object {
    private IObjectReference _inner;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_CoreWebView2Certificate_Manual;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_CoreWebView2Certificate_Manual { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Certificate { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public string DerEncodedSerialNumber { get; }
    public string DisplayName { get; }
    public string Issuer { get; }
    public IReadOnlyList`1<string> PemEncodedIssuerCertificateChain { get; }
    public string Subject { get; }
    public double ValidFrom { get; }
    public double ValidTo { get; }
    internal CoreWebView2Certificate(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_CoreWebView2Certificate_Manual();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_CoreWebView2Certificate_Manual();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Certificate();
    public static CoreWebView2Certificate FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2Certificate x, CoreWebView2Certificate y);
    public static bool op_Inequality(CoreWebView2Certificate x, CoreWebView2Certificate y);
    public sealed virtual bool Equals(CoreWebView2Certificate other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public Certificate ToCertificate();
    public string ToPemEncoding();
    public string get_DerEncodedSerialNumber();
    public string get_DisplayName();
    public string get_Issuer();
    public IReadOnlyList`1<string> get_PemEncodedIssuerCertificateChain();
    public string get_Subject();
    public double get_ValidFrom();
    public double get_ValidTo();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("4B9B0FE5-0AD9-5594-81E7-B18ECC0636DE")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2Certificate_Manual")]
internal interface Microsoft.Web.WebView2.Core.CoreWebView2Certificate_Manual {
    public abstract virtual Certificate ToCertificate();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Web.WebView2.Core.CoreWebView2ChannelSearchKind>")]
public enum Microsoft.Web.WebView2.Core.CoreWebView2ChannelSearchKind : Enum {
    public int value__;
    public static CoreWebView2ChannelSearchKind MostStable;
    public static CoreWebView2ChannelSearchKind LeastStable;
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificate")]
[CoreWebView2ClientCertificateRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2ClientCertificate")]
public class Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificate : object {
    private IObjectReference _inner;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_CoreWebView2ClientCertificate_Manual;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_CoreWebView2ClientCertificate_Manual { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ClientCertificate { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public string DerEncodedSerialNumber { get; }
    public string DisplayName { get; }
    public string Issuer { get; }
    public CoreWebView2ClientCertificateKind Kind { get; }
    public IReadOnlyList`1<string> PemEncodedIssuerCertificateChain { get; }
    public string Subject { get; }
    public double ValidFrom { get; }
    public double ValidTo { get; }
    internal CoreWebView2ClientCertificate(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_CoreWebView2ClientCertificate_Manual();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_CoreWebView2ClientCertificate_Manual();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ClientCertificate();
    public static CoreWebView2ClientCertificate FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2ClientCertificate x, CoreWebView2ClientCertificate y);
    public static bool op_Inequality(CoreWebView2ClientCertificate x, CoreWebView2ClientCertificate y);
    public sealed virtual bool Equals(CoreWebView2ClientCertificate other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public Certificate ToCertificate();
    public string ToPemEncoding();
    public string get_DerEncodedSerialNumber();
    public string get_DisplayName();
    public string get_Issuer();
    public CoreWebView2ClientCertificateKind get_Kind();
    public IReadOnlyList`1<string> get_PemEncodedIssuerCertificateChain();
    public string get_Subject();
    public double get_ValidFrom();
    public double get_ValidTo();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("FAEFEFC2-20C3-5D86-8A74-F6D87D6FF8FA")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificate_Manual")]
internal interface Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificate_Manual {
    public abstract virtual Certificate ToCertificate();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificateKind>")]
public enum Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificateKind : Enum {
    public int value__;
    public static CoreWebView2ClientCertificateKind SmartCard;
    public static CoreWebView2ClientCertificateKind Pin;
    public static CoreWebView2ClientCertificateKind Other;
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificateRequestedEventArgs")]
[CoreWebView2ClientCertificateRequestedEventArgsRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2ClientCertificateRequestedEventArgs")]
public class Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificateRequestedEventArgs : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ClientCertificateRequestedEventArgs { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public IReadOnlyList`1<string> AllowedCertificateAuthorities { get; }
    public bool Cancel { get; public set; }
    public bool Handled { get; public set; }
    public string Host { get; }
    public bool IsProxy { get; }
    public IReadOnlyList`1<CoreWebView2ClientCertificate> MutuallyTrustedCertificates { get; }
    public int Port { get; }
    public CoreWebView2ClientCertificate SelectedCertificate { get; public set; }
    internal CoreWebView2ClientCertificateRequestedEventArgs(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ClientCertificateRequestedEventArgs();
    public static CoreWebView2ClientCertificateRequestedEventArgs FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2ClientCertificateRequestedEventArgs x, CoreWebView2ClientCertificateRequestedEventArgs y);
    public static bool op_Inequality(CoreWebView2ClientCertificateRequestedEventArgs x, CoreWebView2ClientCertificateRequestedEventArgs y);
    public sealed virtual bool Equals(CoreWebView2ClientCertificateRequestedEventArgs other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public Deferral GetDeferral();
    public IReadOnlyList`1<string> get_AllowedCertificateAuthorities();
    public bool get_Cancel();
    public void set_Cancel(bool value);
    public bool get_Handled();
    public void set_Handled(bool value);
    public string get_Host();
    public bool get_IsProxy();
    public IReadOnlyList`1<CoreWebView2ClientCertificate> get_MutuallyTrustedCertificates();
    public int get_Port();
    public CoreWebView2ClientCertificate get_SelectedCertificate();
    public void set_SelectedCertificate(CoreWebView2ClientCertificate value);
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2CompositionController")]
[CoreWebView2CompositionControllerRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2CompositionController")]
public class Microsoft.Web.WebView2.Core.CoreWebView2CompositionController : CoreWebView2Controller {
    private IObjectReference _inner;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2CompositionController2;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2CompositionController3;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2CompositionController4;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalCompositionController3;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalCompositionController4;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalCompositionController5;
    private static IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2CompositionControllerStatics;
    private static IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2CompositionControllerStatics2_Manual;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2CompositionController2 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2CompositionController3 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2CompositionController4 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalCompositionController3 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalCompositionController4 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalCompositionController5 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2CompositionController { get; }
    private static IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2CompositionControllerStatics { get; }
    private static IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2CompositionControllerStatics2_Manual { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    public CoreCursor Cursor { get; }
    public object RootVisualTarget { get; public set; }
    internal CoreWebView2CompositionController(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2CompositionController2();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2CompositionController2();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2CompositionController3();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2CompositionController3();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2CompositionController4();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2CompositionController4();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalCompositionController3();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalCompositionController3();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalCompositionController4();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalCompositionController4();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalCompositionController5();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalCompositionController5();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2CompositionController();
    public static I As();
    private static IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2CompositionControllerStatics();
    private static IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2CompositionControllerStatics2_Manual();
    public static CoreWebView2CompositionController FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2CompositionController x, CoreWebView2CompositionController y);
    public static bool op_Inequality(CoreWebView2CompositionController x, CoreWebView2CompositionController y);
    public sealed virtual bool Equals(CoreWebView2CompositionController other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    public void DragLeave();
    public CoreWebView2NonClientRegionKind GetNonClientRegionAtPoint(Point point);
    public IReadOnlyList`1<Rect> QueryNonClientRegion(CoreWebView2NonClientRegionKind Kind);
    public void add_NonClientRegionChanged(TypedEventHandler`2<CoreWebView2CompositionController, CoreWebView2NonClientRegionChangedEventArgs> value);
    public void remove_NonClientRegionChanged(TypedEventHandler`2<CoreWebView2CompositionController, CoreWebView2NonClientRegionChangedEventArgs> value);
    public CoreWebView2PointerInfo CreateCoreWebView2PointerInfoFromPointerId(UInt32 PointerId, CoreWebView2ControllerWindowReference ParentWindow, Matrix4x4 transform);
    public void SendMouseInput(CoreWebView2MouseEventKind eventKind, CoreWebView2MouseEventVirtualKeys virtualKeys, UInt32 mouseData, Point point);
    public void SendPointerInput(CoreWebView2PointerEventKind eventKind, CoreWebView2PointerInfo pointerInfo);
    public DataPackageOperation DragEnter(CoreDragInfo dragInfo, CoreDragUIOverride dragUIOverride);
    public DataPackageOperation DragOver(CoreDragInfo dragInfo, CoreDragUIOverride dragUIOverride);
    public DataPackageOperation Drop(CoreDragInfo dragInfo);
    public void add_CursorChanged(TypedEventHandler`2<CoreWebView2CompositionController, object> value);
    public void remove_CursorChanged(TypedEventHandler`2<CoreWebView2CompositionController, object> value);
    public CoreCursor get_Cursor();
    public object get_RootVisualTarget();
    public void set_RootVisualTarget(object value);
    protected virtual bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2ContentLoadingEventArgs")]
[CoreWebView2ContentLoadingEventArgsRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2ContentLoadingEventArgs")]
public class Microsoft.Web.WebView2.Core.CoreWebView2ContentLoadingEventArgs : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ContentLoadingEventArgs { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public bool IsErrorPage { get; }
    public ulong NavigationId { get; }
    internal CoreWebView2ContentLoadingEventArgs(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ContentLoadingEventArgs();
    public static CoreWebView2ContentLoadingEventArgs FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2ContentLoadingEventArgs x, CoreWebView2ContentLoadingEventArgs y);
    public static bool op_Inequality(CoreWebView2ContentLoadingEventArgs x, CoreWebView2ContentLoadingEventArgs y);
    public sealed virtual bool Equals(CoreWebView2ContentLoadingEventArgs other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public bool get_IsErrorPage();
    public ulong get_NavigationId();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuItem")]
[CoreWebView2ContextMenuItemRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2ContextMenuItem")]
public class Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuItem : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ContextMenuItem { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public IList`1<CoreWebView2ContextMenuItem> Children { get; }
    public int CommandId { get; }
    public IRandomAccessStream Icon { get; }
    public bool IsChecked { get; public set; }
    public bool IsEnabled { get; public set; }
    public CoreWebView2ContextMenuItemKind Kind { get; }
    public string Label { get; }
    public string Name { get; }
    public string ShortcutKeyDescription { get; }
    internal CoreWebView2ContextMenuItem(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ContextMenuItem();
    public static CoreWebView2ContextMenuItem FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2ContextMenuItem x, CoreWebView2ContextMenuItem y);
    public static bool op_Inequality(CoreWebView2ContextMenuItem x, CoreWebView2ContextMenuItem y);
    public sealed virtual bool Equals(CoreWebView2ContextMenuItem other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public void add_CustomItemSelected(TypedEventHandler`2<CoreWebView2ContextMenuItem, object> value);
    public void remove_CustomItemSelected(TypedEventHandler`2<CoreWebView2ContextMenuItem, object> value);
    public IList`1<CoreWebView2ContextMenuItem> get_Children();
    public int get_CommandId();
    public IRandomAccessStream get_Icon();
    public bool get_IsChecked();
    public void set_IsChecked(bool value);
    public bool get_IsEnabled();
    public void set_IsEnabled(bool value);
    public CoreWebView2ContextMenuItemKind get_Kind();
    public string get_Label();
    public string get_Name();
    public string get_ShortcutKeyDescription();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuItemKind>")]
public enum Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuItemKind : Enum {
    public int value__;
    public static CoreWebView2ContextMenuItemKind Command;
    public static CoreWebView2ContextMenuItemKind CheckBox;
    public static CoreWebView2ContextMenuItemKind Radio;
    public static CoreWebView2ContextMenuItemKind Separator;
    public static CoreWebView2ContextMenuItemKind Submenu;
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuRequestedEventArgs")]
[CoreWebView2ContextMenuRequestedEventArgsRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2ContextMenuRequestedEventArgs")]
public class Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuRequestedEventArgs : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ContextMenuRequestedEventArgs { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public CoreWebView2ContextMenuTarget ContextMenuTarget { get; }
    public bool Handled { get; public set; }
    public Point Location { get; }
    public IList`1<CoreWebView2ContextMenuItem> MenuItems { get; }
    public int SelectedCommandId { get; public set; }
    internal CoreWebView2ContextMenuRequestedEventArgs(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ContextMenuRequestedEventArgs();
    public static CoreWebView2ContextMenuRequestedEventArgs FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2ContextMenuRequestedEventArgs x, CoreWebView2ContextMenuRequestedEventArgs y);
    public static bool op_Inequality(CoreWebView2ContextMenuRequestedEventArgs x, CoreWebView2ContextMenuRequestedEventArgs y);
    public sealed virtual bool Equals(CoreWebView2ContextMenuRequestedEventArgs other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public Deferral GetDeferral();
    public CoreWebView2ContextMenuTarget get_ContextMenuTarget();
    public bool get_Handled();
    public void set_Handled(bool value);
    public Point get_Location();
    public IList`1<CoreWebView2ContextMenuItem> get_MenuItems();
    public int get_SelectedCommandId();
    public void set_SelectedCommandId(int value);
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuTarget")]
[CoreWebView2ContextMenuTargetRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2ContextMenuTarget")]
public class Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuTarget : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ContextMenuTarget { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public string FrameUri { get; }
    public bool HasLinkText { get; }
    public bool HasLinkUri { get; }
    public bool HasSelection { get; }
    public bool HasSourceUri { get; }
    public bool IsEditable { get; }
    public bool IsRequestedForMainFrame { get; }
    public CoreWebView2ContextMenuTargetKind Kind { get; }
    public string LinkText { get; }
    public string LinkUri { get; }
    public string PageUri { get; }
    public string SelectionText { get; }
    public string SourceUri { get; }
    internal CoreWebView2ContextMenuTarget(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ContextMenuTarget();
    public static CoreWebView2ContextMenuTarget FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2ContextMenuTarget x, CoreWebView2ContextMenuTarget y);
    public static bool op_Inequality(CoreWebView2ContextMenuTarget x, CoreWebView2ContextMenuTarget y);
    public sealed virtual bool Equals(CoreWebView2ContextMenuTarget other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public string get_FrameUri();
    public bool get_HasLinkText();
    public bool get_HasLinkUri();
    public bool get_HasSelection();
    public bool get_HasSourceUri();
    public bool get_IsEditable();
    public bool get_IsRequestedForMainFrame();
    public CoreWebView2ContextMenuTargetKind get_Kind();
    public string get_LinkText();
    public string get_LinkUri();
    public string get_PageUri();
    public string get_SelectionText();
    public string get_SourceUri();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuTargetKind>")]
public enum Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuTargetKind : Enum {
    public int value__;
    public static CoreWebView2ContextMenuTargetKind Page;
    public static CoreWebView2ContextMenuTargetKind Image;
    public static CoreWebView2ContextMenuTargetKind SelectedText;
    public static CoreWebView2ContextMenuTargetKind Audio;
    public static CoreWebView2ContextMenuTargetKind Video;
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2Controller")]
[CoreWebView2ControllerRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2Controller")]
public class Microsoft.Web.WebView2.Core.CoreWebView2Controller : object {
    private IObjectReference _inner;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Controller2;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Controller3;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Controller4;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalController;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalController2;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2PrivatePartialController;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Controller;
    private static IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ControllerFactory;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Controller2 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Controller3 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Controller4 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalController { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalController2 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2PrivatePartialController { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Controller { get; }
    private static IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ControllerFactory { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public bool AllowExternalDrop { get; public set; }
    public Rect Bounds { get; public set; }
    public CoreWebView2BoundsMode BoundsMode { get; public set; }
    public CoreWebView2 CoreWebView2 { get; }
    public Color DefaultBackgroundColor { get; public set; }
    public bool IsBrowserHitTransparent { get; }
    public bool IsVisible { get; public set; }
    public CoreWebView2ControllerWindowReference ParentWindow { get; public set; }
    public double RasterizationScale { get; public set; }
    public bool ShouldDetectMonitorScaleChanges { get; public set; }
    public double ZoomFactor { get; public set; }
    protected internal CoreWebView2Controller(IObjectReference objRef);
    protected CoreWebView2Controller(DerivedComposed _);
    private IntPtr get_ThisPtr();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Controller2();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Controller2();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Controller3();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Controller3();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Controller4();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Controller4();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalController();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalController();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalController2();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalController2();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2PrivatePartialController();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2PrivatePartialController();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Controller();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Controller();
    private static IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ControllerFactory();
    public static CoreWebView2Controller FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2Controller x, CoreWebView2Controller y);
    public static bool op_Inequality(CoreWebView2Controller x, CoreWebView2Controller y);
    public sealed virtual bool Equals(CoreWebView2Controller other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public void add_RasterizationScaleChanged(TypedEventHandler`2<CoreWebView2Controller, object> value);
    public void remove_RasterizationScaleChanged(TypedEventHandler`2<CoreWebView2Controller, object> value);
    public void SetBoundsAndZoomFactor(Rect Bounds, double ZoomFactor);
    public void MoveFocus(CoreWebView2MoveFocusReason reason);
    public void NotifyParentWindowPositionChanged();
    public void Close();
    public void add_AcceleratorKeyPressed(TypedEventHandler`2<CoreWebView2Controller, CoreWebView2AcceleratorKeyPressedEventArgs> value);
    public void remove_AcceleratorKeyPressed(TypedEventHandler`2<CoreWebView2Controller, CoreWebView2AcceleratorKeyPressedEventArgs> value);
    public void add_GotFocus(TypedEventHandler`2<CoreWebView2Controller, object> value);
    public void remove_GotFocus(TypedEventHandler`2<CoreWebView2Controller, object> value);
    public void add_LostFocus(TypedEventHandler`2<CoreWebView2Controller, object> value);
    public void remove_LostFocus(TypedEventHandler`2<CoreWebView2Controller, object> value);
    public void add_MoveFocusRequested(TypedEventHandler`2<CoreWebView2Controller, CoreWebView2MoveFocusRequestedEventArgs> value);
    public void remove_MoveFocusRequested(TypedEventHandler`2<CoreWebView2Controller, CoreWebView2MoveFocusRequestedEventArgs> value);
    public void add_ZoomFactorChanged(TypedEventHandler`2<CoreWebView2Controller, object> value);
    public void remove_ZoomFactorChanged(TypedEventHandler`2<CoreWebView2Controller, object> value);
    public bool get_AllowExternalDrop();
    public void set_AllowExternalDrop(bool value);
    public Rect get_Bounds();
    public void set_Bounds(Rect value);
    public CoreWebView2BoundsMode get_BoundsMode();
    public void set_BoundsMode(CoreWebView2BoundsMode value);
    public CoreWebView2 get_CoreWebView2();
    public Color get_DefaultBackgroundColor();
    public void set_DefaultBackgroundColor(Color value);
    public bool get_IsBrowserHitTransparent();
    public bool get_IsVisible();
    public void set_IsVisible(bool value);
    public CoreWebView2ControllerWindowReference get_ParentWindow();
    public void set_ParentWindow(CoreWebView2ControllerWindowReference value);
    public double get_RasterizationScale();
    public void set_RasterizationScale(double value);
    public bool get_ShouldDetectMonitorScaleChanges();
    public void set_ShouldDetectMonitorScaleChanges(bool value);
    public double get_ZoomFactor();
    public void set_ZoomFactor(double value);
    protected virtual bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2ControllerOptions")]
[CoreWebView2ControllerOptionsRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2ControllerOptions")]
public class Microsoft.Web.WebView2.Core.CoreWebView2ControllerOptions : object {
    private IObjectReference _inner;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ControllerOptions2;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalControllerOptions;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalControllerOptions2;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ControllerOptions2 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalControllerOptions { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalControllerOptions2 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ControllerOptions { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public bool AllowHostInputProcessing { get; public set; }
    public bool IsInPrivateModeEnabled { get; public set; }
    public string ProfileName { get; public set; }
    public string ScriptLocale { get; public set; }
    internal CoreWebView2ControllerOptions(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ControllerOptions2();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ControllerOptions2();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalControllerOptions();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalControllerOptions();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalControllerOptions2();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalControllerOptions2();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ControllerOptions();
    public static CoreWebView2ControllerOptions FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2ControllerOptions x, CoreWebView2ControllerOptions y);
    public static bool op_Inequality(CoreWebView2ControllerOptions x, CoreWebView2ControllerOptions y);
    public sealed virtual bool Equals(CoreWebView2ControllerOptions other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public bool get_AllowHostInputProcessing();
    public void set_AllowHostInputProcessing(bool value);
    public bool get_IsInPrivateModeEnabled();
    public void set_IsInPrivateModeEnabled(bool value);
    public string get_ProfileName();
    public void set_ProfileName(string value);
    public string get_ScriptLocale();
    public void set_ScriptLocale(string value);
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2ControllerWindowReference")]
[CoreWebView2ControllerWindowReferenceRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2ControllerWindowReference")]
public class Microsoft.Web.WebView2.Core.CoreWebView2ControllerWindowReference : object {
    private IObjectReference _inner;
    private static IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ControllerWindowReferenceStatics;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ControllerWindowReference { get; }
    private static IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ControllerWindowReferenceStatics { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public CoreWindow CoreWindow { get; }
    public ulong WindowHandle { get; }
    internal CoreWebView2ControllerWindowReference(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ControllerWindowReference();
    public static I As();
    private static IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ControllerWindowReferenceStatics();
    public static CoreWebView2ControllerWindowReference CreateFromWindowHandle(ulong windowHandle);
    public static CoreWebView2ControllerWindowReference CreateFromCoreWindow(CoreWindow coreWindow);
    public static CoreWebView2ControllerWindowReference FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2ControllerWindowReference x, CoreWebView2ControllerWindowReference y);
    public static bool op_Inequality(CoreWebView2ControllerWindowReference x, CoreWebView2ControllerWindowReference y);
    public sealed virtual bool Equals(CoreWebView2ControllerWindowReference other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public CoreWindow get_CoreWindow();
    public ulong get_WindowHandle();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2Cookie")]
[CoreWebView2CookieRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2Cookie")]
public class Microsoft.Web.WebView2.Core.CoreWebView2Cookie : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Cookie { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public string Domain { get; }
    public double Expires { get; public set; }
    public bool IsHttpOnly { get; public set; }
    public bool IsSecure { get; public set; }
    public bool IsSession { get; }
    public string Name { get; }
    public string Path { get; }
    public CoreWebView2CookieSameSiteKind SameSite { get; public set; }
    public string Value { get; public set; }
    internal CoreWebView2Cookie(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Cookie();
    public static CoreWebView2Cookie FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2Cookie x, CoreWebView2Cookie y);
    public static bool op_Inequality(CoreWebView2Cookie x, CoreWebView2Cookie y);
    public sealed virtual bool Equals(CoreWebView2Cookie other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public string get_Domain();
    public double get_Expires();
    public void set_Expires(double value);
    public bool get_IsHttpOnly();
    public void set_IsHttpOnly(bool value);
    public bool get_IsSecure();
    public void set_IsSecure(bool value);
    public bool get_IsSession();
    public string get_Name();
    public string get_Path();
    public CoreWebView2CookieSameSiteKind get_SameSite();
    public void set_SameSite(CoreWebView2CookieSameSiteKind value);
    public string get_Value();
    public void set_Value(string value);
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2CookieManager")]
[CoreWebView2CookieManagerRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2CookieManager")]
public class Microsoft.Web.WebView2.Core.CoreWebView2CookieManager : object {
    private IObjectReference _inner;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2CookieManager_Manual;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2CookieManager_Manual { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2CookieManager { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    internal CoreWebView2CookieManager(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2CookieManager_Manual();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2CookieManager_Manual();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2CookieManager();
    public static CoreWebView2CookieManager FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2CookieManager x, CoreWebView2CookieManager y);
    public static bool op_Inequality(CoreWebView2CookieManager x, CoreWebView2CookieManager y);
    public sealed virtual bool Equals(CoreWebView2CookieManager other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public IAsyncOperation`1<IReadOnlyList`1<CoreWebView2Cookie>> GetCookiesAsync(string uri);
    public CoreWebView2Cookie CreateCookie(string name, string value, string Domain, string Path);
    public CoreWebView2Cookie CopyCookie(CoreWebView2Cookie cookieParam);
    public void AddOrUpdateCookie(CoreWebView2Cookie cookie);
    public void DeleteCookie(CoreWebView2Cookie cookie);
    public void DeleteCookies(string name, string uri);
    public void DeleteCookiesWithDomainAndPath(string name, string Domain, string Path);
    public void DeleteAllCookies();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Web.WebView2.Core.CoreWebView2CookieSameSiteKind>")]
public enum Microsoft.Web.WebView2.Core.CoreWebView2CookieSameSiteKind : Enum {
    public int value__;
    public static CoreWebView2CookieSameSiteKind None;
    public static CoreWebView2CookieSameSiteKind Lax;
    public static CoreWebView2CookieSameSiteKind Strict;
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2CustomSchemeRegistration")]
[CoreWebView2CustomSchemeRegistrationRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2CustomSchemeRegistration")]
public class Microsoft.Web.WebView2.Core.CoreWebView2CustomSchemeRegistration : object {
    private IObjectReference _inner;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2CustomSchemeRegistration_Manual;
    private static IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2CustomSchemeRegistrationFactory;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2CustomSchemeRegistration_Manual { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2CustomSchemeRegistration { get; }
    private static IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2CustomSchemeRegistrationFactory { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public IList`1<string> AllowedOrigins { get; }
    public bool HasAuthorityComponent { get; public set; }
    public string SchemeName { get; }
    public int TreatAsSecure { get; public set; }
    public CoreWebView2CustomSchemeRegistration(string schemeName);
    internal CoreWebView2CustomSchemeRegistration(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2CustomSchemeRegistration_Manual();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2CustomSchemeRegistration_Manual();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2CustomSchemeRegistration();
    private static IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2CustomSchemeRegistrationFactory();
    public static CoreWebView2CustomSchemeRegistration FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2CustomSchemeRegistration x, CoreWebView2CustomSchemeRegistration y);
    public static bool op_Inequality(CoreWebView2CustomSchemeRegistration x, CoreWebView2CustomSchemeRegistration y);
    public sealed virtual bool Equals(CoreWebView2CustomSchemeRegistration other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public IList`1<string> get_AllowedOrigins();
    public bool get_HasAuthorityComponent();
    public void set_HasAuthorityComponent(bool value);
    public string get_SchemeName();
    public int get_TreatAsSecure();
    public void set_TreatAsSecure(int value);
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Web.WebView2.Core.CoreWebView2DefaultDownloadDialogCornerAlignment>")]
public enum Microsoft.Web.WebView2.Core.CoreWebView2DefaultDownloadDialogCornerAlignment : Enum {
    public int value__;
    public static CoreWebView2DefaultDownloadDialogCornerAlignment TopLeft;
    public static CoreWebView2DefaultDownloadDialogCornerAlignment TopRight;
    public static CoreWebView2DefaultDownloadDialogCornerAlignment BottomLeft;
    public static CoreWebView2DefaultDownloadDialogCornerAlignment BottomRight;
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2DevToolsProtocolEventReceivedEventArgs")]
[CoreWebView2DevToolsProtocolEventReceivedEventArgsRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2DevToolsProtocolEventReceivedEventArgs")]
public class Microsoft.Web.WebView2.Core.CoreWebView2DevToolsProtocolEventReceivedEventArgs : object {
    private IObjectReference _inner;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2DevToolsProtocolEventReceivedEventArgs2;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2DevToolsProtocolEventReceivedEventArgs2 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2DevToolsProtocolEventReceivedEventArgs { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public string ParameterObjectAsJson { get; }
    public string SessionId { get; }
    internal CoreWebView2DevToolsProtocolEventReceivedEventArgs(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2DevToolsProtocolEventReceivedEventArgs2();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2DevToolsProtocolEventReceivedEventArgs2();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2DevToolsProtocolEventReceivedEventArgs();
    public static CoreWebView2DevToolsProtocolEventReceivedEventArgs FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2DevToolsProtocolEventReceivedEventArgs x, CoreWebView2DevToolsProtocolEventReceivedEventArgs y);
    public static bool op_Inequality(CoreWebView2DevToolsProtocolEventReceivedEventArgs x, CoreWebView2DevToolsProtocolEventReceivedEventArgs y);
    public sealed virtual bool Equals(CoreWebView2DevToolsProtocolEventReceivedEventArgs other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public string get_ParameterObjectAsJson();
    public string get_SessionId();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2DevToolsProtocolEventReceiver")]
[CoreWebView2DevToolsProtocolEventReceiverRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2DevToolsProtocolEventReceiver")]
public class Microsoft.Web.WebView2.Core.CoreWebView2DevToolsProtocolEventReceiver : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2DevToolsProtocolEventReceiver { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    internal CoreWebView2DevToolsProtocolEventReceiver(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2DevToolsProtocolEventReceiver();
    public static CoreWebView2DevToolsProtocolEventReceiver FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2DevToolsProtocolEventReceiver x, CoreWebView2DevToolsProtocolEventReceiver y);
    public static bool op_Inequality(CoreWebView2DevToolsProtocolEventReceiver x, CoreWebView2DevToolsProtocolEventReceiver y);
    public sealed virtual bool Equals(CoreWebView2DevToolsProtocolEventReceiver other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public void add_DevToolsProtocolEventReceived(TypedEventHandler`2<CoreWebView2, CoreWebView2DevToolsProtocolEventReceivedEventArgs> value);
    public void remove_DevToolsProtocolEventReceived(TypedEventHandler`2<CoreWebView2, CoreWebView2DevToolsProtocolEventReceivedEventArgs> value);
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2DOMContentLoadedEventArgs")]
[CoreWebView2DOMContentLoadedEventArgsRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2DOMContentLoadedEventArgs")]
public class Microsoft.Web.WebView2.Core.CoreWebView2DOMContentLoadedEventArgs : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2DOMContentLoadedEventArgs { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public ulong NavigationId { get; }
    internal CoreWebView2DOMContentLoadedEventArgs(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2DOMContentLoadedEventArgs();
    public static CoreWebView2DOMContentLoadedEventArgs FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2DOMContentLoadedEventArgs x, CoreWebView2DOMContentLoadedEventArgs y);
    public static bool op_Inequality(CoreWebView2DOMContentLoadedEventArgs x, CoreWebView2DOMContentLoadedEventArgs y);
    public sealed virtual bool Equals(CoreWebView2DOMContentLoadedEventArgs other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public ulong get_NavigationId();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Web.WebView2.Core.CoreWebView2DownloadInterruptReason>")]
public enum Microsoft.Web.WebView2.Core.CoreWebView2DownloadInterruptReason : Enum {
    public int value__;
    public static CoreWebView2DownloadInterruptReason None;
    public static CoreWebView2DownloadInterruptReason FileFailed;
    public static CoreWebView2DownloadInterruptReason FileAccessDenied;
    public static CoreWebView2DownloadInterruptReason FileNoSpace;
    public static CoreWebView2DownloadInterruptReason FileNameTooLong;
    public static CoreWebView2DownloadInterruptReason FileTooLarge;
    public static CoreWebView2DownloadInterruptReason FileMalicious;
    public static CoreWebView2DownloadInterruptReason FileTransientError;
    public static CoreWebView2DownloadInterruptReason FileBlockedByPolicy;
    public static CoreWebView2DownloadInterruptReason FileSecurityCheckFailed;
    public static CoreWebView2DownloadInterruptReason FileTooShort;
    public static CoreWebView2DownloadInterruptReason FileHashMismatch;
    public static CoreWebView2DownloadInterruptReason NetworkFailed;
    public static CoreWebView2DownloadInterruptReason NetworkTimeout;
    public static CoreWebView2DownloadInterruptReason NetworkDisconnected;
    public static CoreWebView2DownloadInterruptReason NetworkServerDown;
    public static CoreWebView2DownloadInterruptReason NetworkInvalidRequest;
    public static CoreWebView2DownloadInterruptReason ServerFailed;
    public static CoreWebView2DownloadInterruptReason ServerNoRange;
    public static CoreWebView2DownloadInterruptReason ServerBadContent;
    public static CoreWebView2DownloadInterruptReason ServerUnauthorized;
    public static CoreWebView2DownloadInterruptReason ServerCertificateProblem;
    public static CoreWebView2DownloadInterruptReason ServerForbidden;
    public static CoreWebView2DownloadInterruptReason ServerUnexpectedResponse;
    public static CoreWebView2DownloadInterruptReason ServerContentLengthMismatch;
    public static CoreWebView2DownloadInterruptReason ServerCrossOriginRedirect;
    public static CoreWebView2DownloadInterruptReason UserCanceled;
    public static CoreWebView2DownloadInterruptReason UserShutdown;
    public static CoreWebView2DownloadInterruptReason UserPaused;
    public static CoreWebView2DownloadInterruptReason DownloadProcessCrashed;
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2DownloadOperation")]
[CoreWebView2DownloadOperationRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2DownloadOperation")]
public class Microsoft.Web.WebView2.Core.CoreWebView2DownloadOperation : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2DownloadOperation { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public long BytesReceived { get; }
    public bool CanResume { get; }
    public string ContentDisposition { get; }
    public string EstimatedEndTime { get; }
    public CoreWebView2DownloadInterruptReason InterruptReason { get; }
    public string MimeType { get; }
    public string ResultFilePath { get; }
    public CoreWebView2DownloadState State { get; }
    public long TotalBytesToReceive { get; }
    public string Uri { get; }
    internal CoreWebView2DownloadOperation(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2DownloadOperation();
    public static CoreWebView2DownloadOperation FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2DownloadOperation x, CoreWebView2DownloadOperation y);
    public static bool op_Inequality(CoreWebView2DownloadOperation x, CoreWebView2DownloadOperation y);
    public sealed virtual bool Equals(CoreWebView2DownloadOperation other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public void Cancel();
    public void Pause();
    public void Resume();
    public void add_BytesReceivedChanged(TypedEventHandler`2<CoreWebView2DownloadOperation, object> value);
    public void remove_BytesReceivedChanged(TypedEventHandler`2<CoreWebView2DownloadOperation, object> value);
    public void add_EstimatedEndTimeChanged(TypedEventHandler`2<CoreWebView2DownloadOperation, object> value);
    public void remove_EstimatedEndTimeChanged(TypedEventHandler`2<CoreWebView2DownloadOperation, object> value);
    public void add_StateChanged(TypedEventHandler`2<CoreWebView2DownloadOperation, object> value);
    public void remove_StateChanged(TypedEventHandler`2<CoreWebView2DownloadOperation, object> value);
    public long get_BytesReceived();
    public bool get_CanResume();
    public string get_ContentDisposition();
    public string get_EstimatedEndTime();
    public CoreWebView2DownloadInterruptReason get_InterruptReason();
    public string get_MimeType();
    public string get_ResultFilePath();
    public CoreWebView2DownloadState get_State();
    public long get_TotalBytesToReceive();
    public string get_Uri();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2DownloadStartingEventArgs")]
[CoreWebView2DownloadStartingEventArgsRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2DownloadStartingEventArgs")]
public class Microsoft.Web.WebView2.Core.CoreWebView2DownloadStartingEventArgs : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2DownloadStartingEventArgs { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public bool Cancel { get; public set; }
    public CoreWebView2DownloadOperation DownloadOperation { get; }
    public bool Handled { get; public set; }
    public string ResultFilePath { get; public set; }
    internal CoreWebView2DownloadStartingEventArgs(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2DownloadStartingEventArgs();
    public static CoreWebView2DownloadStartingEventArgs FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2DownloadStartingEventArgs x, CoreWebView2DownloadStartingEventArgs y);
    public static bool op_Inequality(CoreWebView2DownloadStartingEventArgs x, CoreWebView2DownloadStartingEventArgs y);
    public sealed virtual bool Equals(CoreWebView2DownloadStartingEventArgs other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public Deferral GetDeferral();
    public bool get_Cancel();
    public void set_Cancel(bool value);
    public CoreWebView2DownloadOperation get_DownloadOperation();
    public bool get_Handled();
    public void set_Handled(bool value);
    public string get_ResultFilePath();
    public void set_ResultFilePath(string value);
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Web.WebView2.Core.CoreWebView2DownloadState>")]
public enum Microsoft.Web.WebView2.Core.CoreWebView2DownloadState : Enum {
    public int value__;
    public static CoreWebView2DownloadState InProgress;
    public static CoreWebView2DownloadState Interrupted;
    public static CoreWebView2DownloadState Completed;
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2Environment")]
[CoreWebView2EnvironmentRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2Environment")]
public class Microsoft.Web.WebView2.Core.CoreWebView2Environment : object {
    private IObjectReference _inner;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Environment10;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Environment11;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Environment12;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Environment13;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Environment14;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Environment2;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Environment3;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Environment4;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Environment5;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Environment6;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Environment7;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Environment8;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Environment9;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Environment_Manual;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalEnvironment;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalEnvironment10;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalEnvironment11;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalEnvironment12;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalEnvironment13;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalEnvironment14;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalEnvironment2;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalEnvironment3;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalEnvironment4;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalEnvironment5;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalEnvironment6;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalEnvironment7;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalEnvironment8;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalEnvironment9;
    private static IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2EnvironmentStatics;
    private static IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2EnvironmentStatics2;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Environment10 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Environment11 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Environment12 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Environment13 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Environment14 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Environment2 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Environment3 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Environment4 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Environment5 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Environment6 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Environment7 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Environment8 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Environment9 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Environment_Manual { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalEnvironment { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalEnvironment10 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalEnvironment11 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalEnvironment12 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalEnvironment13 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalEnvironment14 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalEnvironment2 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalEnvironment3 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalEnvironment4 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalEnvironment5 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalEnvironment6 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalEnvironment7 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalEnvironment8 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalEnvironment9 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Environment { get; }
    private static IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2EnvironmentStatics { get; }
    private static IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2EnvironmentStatics2 { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public string BrowserVersionString { get; }
    public string FailureReportFolderPath { get; }
    public ulong RenderAdapterLUID { get; }
    public string UserDataFolder { get; }
    internal CoreWebView2Environment(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Environment10();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Environment10();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Environment11();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Environment11();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Environment12();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Environment12();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Environment13();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Environment13();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Environment14();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Environment14();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Environment2();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Environment2();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Environment3();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Environment3();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Environment4();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Environment4();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Environment5();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Environment5();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Environment6();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Environment6();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Environment7();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Environment7();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Environment8();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Environment8();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Environment9();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Environment9();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Environment_Manual();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Environment_Manual();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalEnvironment();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalEnvironment();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalEnvironment10();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalEnvironment10();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalEnvironment11();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalEnvironment11();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalEnvironment12();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalEnvironment12();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalEnvironment13();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalEnvironment13();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalEnvironment14();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalEnvironment14();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalEnvironment2();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalEnvironment2();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalEnvironment3();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalEnvironment3();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalEnvironment4();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalEnvironment4();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalEnvironment5();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalEnvironment5();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalEnvironment6();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalEnvironment6();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalEnvironment7();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalEnvironment7();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalEnvironment8();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalEnvironment8();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalEnvironment9();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalEnvironment9();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Environment();
    public static I As();
    private static IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2EnvironmentStatics();
    public static IAsyncOperation`1<CoreWebView2Environment> CreateAsync();
    public static IAsyncOperation`1<CoreWebView2Environment> CreateWithOptionsAsync(string browserExecutableFolder, string userDataFolder, CoreWebView2EnvironmentOptions options);
    public static string GetAvailableBrowserVersionString();
    public static string GetAvailableBrowserVersionString(string browserExecutableFolder);
    public static int CompareBrowserVersionString(string browserVersionString1, string browserVersionString2);
    private static IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2EnvironmentStatics2();
    public static string GetAvailableBrowserVersionString(string browserExecutableFolder, CoreWebView2EnvironmentOptions options);
    public static CoreWebView2Environment FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2Environment x, CoreWebView2Environment y);
    public static bool op_Inequality(CoreWebView2Environment x, CoreWebView2Environment y);
    public sealed virtual bool Equals(CoreWebView2Environment other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public CoreWebView2ControllerOptions CreateCoreWebView2ControllerOptions();
    public CoreWebView2SharedBuffer CreateSharedBuffer(ulong Size);
    public IAsyncOperation`1<IReadOnlyList`1<CoreWebView2ProcessExtendedInfo>> GetProcessExtendedInfosAsync();
    public CoreWebView2FileSystemHandle CreateWebFileSystemFileHandle(string Path, CoreWebView2FileSystemHandlePermission Permission);
    public CoreWebView2FileSystemHandle CreateWebFileSystemDirectoryHandle(string Path, CoreWebView2FileSystemHandlePermission Permission);
    public CoreWebView2WebResourceRequest CreateWebResourceRequest(string uri, string Method, IRandomAccessStream postData, string Headers);
    public IAsyncOperation`1<CoreWebView2CompositionController> CreateCoreWebView2CompositionControllerAsync(CoreWebView2ControllerWindowReference ParentWindow);
    public CoreWebView2PointerInfo CreateCoreWebView2PointerInfo();
    public void add_BrowserProcessExited(TypedEventHandler`2<CoreWebView2Environment, CoreWebView2BrowserProcessExitedEventArgs> value);
    public void remove_BrowserProcessExited(TypedEventHandler`2<CoreWebView2Environment, CoreWebView2BrowserProcessExitedEventArgs> value);
    public CoreWebView2PrintSettings CreatePrintSettings();
    public IReadOnlyList`1<CoreWebView2ProcessInfo> GetProcessInfos();
    public void add_ProcessInfosChanged(TypedEventHandler`2<CoreWebView2Environment, object> value);
    public void remove_ProcessInfosChanged(TypedEventHandler`2<CoreWebView2Environment, object> value);
    public CoreWebView2ContextMenuItem CreateContextMenuItem(string Label, IRandomAccessStream iconStream, CoreWebView2ContextMenuItemKind Kind);
    public IAsyncOperation`1<CoreWebView2Controller> CreateCoreWebView2ControllerAsync(CoreWebView2ControllerWindowReference ParentWindow, CoreWebView2ControllerOptions options);
    public IAsyncOperation`1<CoreWebView2CompositionController> CreateCoreWebView2CompositionControllerAsync(CoreWebView2ControllerWindowReference ParentWindow, CoreWebView2ControllerOptions options);
    public IAsyncOperation`1<IReadOnlyList`1<CoreWebView2ProcessInfo>> GetProcessInfosWithDetailsAsync();
    public CoreWebView2TextureStream CreateTextureStream(string streamId, object d3dDevice);
    public void add_RenderAdapterLUIDChanged(TypedEventHandler`2<CoreWebView2Environment, object> value);
    public void remove_RenderAdapterLUIDChanged(TypedEventHandler`2<CoreWebView2Environment, object> value);
    public IAsyncOperation`1<CoreWebView2UpdateRuntimeResult> UpdateRuntimeAsync();
    public IAsyncOperation`1<CoreWebView2Controller> CreateCoreWebView2ControllerAsync(CoreWebView2ControllerWindowReference ParentWindow);
    public CoreWebView2WebResourceResponse CreateWebResourceResponse(IRandomAccessStream Content, int StatusCode, string ReasonPhrase, string Headers);
    public void add_NewBrowserVersionAvailable(TypedEventHandler`2<CoreWebView2Environment, object> value);
    public void remove_NewBrowserVersionAvailable(TypedEventHandler`2<CoreWebView2Environment, object> value);
    public string get_BrowserVersionString();
    public string get_FailureReportFolderPath();
    public ulong get_RenderAdapterLUID();
    public string get_UserDataFolder();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2EnvironmentOptions")]
[CoreWebView2EnvironmentOptionsRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentOptions")]
public class Microsoft.Web.WebView2.Core.CoreWebView2EnvironmentOptions : object {
    private IObjectReference _inner;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2EnvironmentOptions2;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2EnvironmentOptions3;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2EnvironmentOptions4;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2EnvironmentOptions5;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2EnvironmentOptions6;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2EnvironmentOptions7;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2EnvironmentOptions8;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2EnvironmentOptions_Manual;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2EnvironmentOptions_Manual3;
    private static IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_CoreWebView2EnvironmentOptions;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2EnvironmentOptions2 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2EnvironmentOptions3 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2EnvironmentOptions4 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2EnvironmentOptions5 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2EnvironmentOptions6 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2EnvironmentOptions7 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2EnvironmentOptions8 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2EnvironmentOptions_Manual { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2EnvironmentOptions_Manual3 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2EnvironmentOptions { get; }
    private static IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_CoreWebView2EnvironmentOptions { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public string AdditionalBrowserArguments { get; public set; }
    public bool AllowSingleSignOnUsingOSPrimaryAccount { get; public set; }
    public bool AreBrowserExtensionsEnabled { get; public set; }
    public CoreWebView2ChannelSearchKind ChannelSearchKind { get; public set; }
    public IList`1<CoreWebView2CustomSchemeRegistration> CustomSchemeRegistrations { get; public set; }
    public bool EnableTrackingPrevention { get; public set; }
    public bool ExclusiveUserDataFolderAccess { get; public set; }
    public bool IsCustomCrashReportingEnabled { get; public set; }
    public string Language { get; public set; }
    public CoreWebView2ReleaseChannels ReleaseChannels { get; public set; }
    public CoreWebView2ScrollbarStyle ScrollBarStyle { get; public set; }
    public string TargetCompatibleBrowserVersion { get; public set; }
    internal CoreWebView2EnvironmentOptions(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2EnvironmentOptions2();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2EnvironmentOptions2();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2EnvironmentOptions3();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2EnvironmentOptions3();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2EnvironmentOptions4();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2EnvironmentOptions4();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2EnvironmentOptions5();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2EnvironmentOptions5();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2EnvironmentOptions6();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2EnvironmentOptions6();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2EnvironmentOptions7();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2EnvironmentOptions7();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2EnvironmentOptions8();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2EnvironmentOptions8();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2EnvironmentOptions_Manual();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2EnvironmentOptions_Manual();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2EnvironmentOptions_Manual3();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2EnvironmentOptions_Manual3();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2EnvironmentOptions();
    private static IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_CoreWebView2EnvironmentOptions();
    public static CoreWebView2EnvironmentOptions FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2EnvironmentOptions x, CoreWebView2EnvironmentOptions y);
    public static bool op_Inequality(CoreWebView2EnvironmentOptions x, CoreWebView2EnvironmentOptions y);
    public sealed virtual bool Equals(CoreWebView2EnvironmentOptions other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public string get_AdditionalBrowserArguments();
    public void set_AdditionalBrowserArguments(string value);
    public bool get_AllowSingleSignOnUsingOSPrimaryAccount();
    public void set_AllowSingleSignOnUsingOSPrimaryAccount(bool value);
    public bool get_AreBrowserExtensionsEnabled();
    public void set_AreBrowserExtensionsEnabled(bool value);
    public CoreWebView2ChannelSearchKind get_ChannelSearchKind();
    public void set_ChannelSearchKind(CoreWebView2ChannelSearchKind value);
    public IList`1<CoreWebView2CustomSchemeRegistration> get_CustomSchemeRegistrations();
    public void set_CustomSchemeRegistrations(IList`1<CoreWebView2CustomSchemeRegistration> value);
    public bool get_EnableTrackingPrevention();
    public void set_EnableTrackingPrevention(bool value);
    public bool get_ExclusiveUserDataFolderAccess();
    public void set_ExclusiveUserDataFolderAccess(bool value);
    public bool get_IsCustomCrashReportingEnabled();
    public void set_IsCustomCrashReportingEnabled(bool value);
    public string get_Language();
    public void set_Language(string value);
    public CoreWebView2ReleaseChannels get_ReleaseChannels();
    public void set_ReleaseChannels(CoreWebView2ReleaseChannels value);
    public CoreWebView2ScrollbarStyle get_ScrollBarStyle();
    public void set_ScrollBarStyle(CoreWebView2ScrollbarStyle value);
    public string get_TargetCompatibleBrowserVersion();
    public void set_TargetCompatibleBrowserVersion(string value);
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2ExecuteScriptResult")]
[CoreWebView2ExecuteScriptResultRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2ExecuteScriptResult")]
public class Microsoft.Web.WebView2.Core.CoreWebView2ExecuteScriptResult : object {
    private IObjectReference _inner;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExecuteScriptResult_Manual;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExecuteScriptResult_Manual { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExecuteScriptResult { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public CoreWebView2ScriptException Exception { get; }
    public string ResultAsJson { get; }
    public bool Succeeded { get; }
    internal CoreWebView2ExecuteScriptResult(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExecuteScriptResult_Manual();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExecuteScriptResult_Manual();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExecuteScriptResult();
    public static CoreWebView2ExecuteScriptResult FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2ExecuteScriptResult x, CoreWebView2ExecuteScriptResult y);
    public static bool op_Inequality(CoreWebView2ExecuteScriptResult x, CoreWebView2ExecuteScriptResult y);
    public sealed virtual bool Equals(CoreWebView2ExecuteScriptResult other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public int TryGetResultAsString(String& stringResult);
    public CoreWebView2ScriptException get_Exception();
    public string get_ResultAsJson();
    public bool get_Succeeded();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Web.WebView2.Core.CoreWebView2FaviconImageFormat>")]
public enum Microsoft.Web.WebView2.Core.CoreWebView2FaviconImageFormat : Enum {
    public int value__;
    public static CoreWebView2FaviconImageFormat Png;
    public static CoreWebView2FaviconImageFormat Jpeg;
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2File")]
[CoreWebView2FileRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2File")]
public class Microsoft.Web.WebView2.Core.CoreWebView2File : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2File { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public string Path { get; }
    internal CoreWebView2File(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2File();
    public static CoreWebView2File FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2File x, CoreWebView2File y);
    public static bool op_Inequality(CoreWebView2File x, CoreWebView2File y);
    public sealed virtual bool Equals(CoreWebView2File other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public string get_Path();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2FileSystemHandle")]
[CoreWebView2FileSystemHandleRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2FileSystemHandle")]
public class Microsoft.Web.WebView2.Core.CoreWebView2FileSystemHandle : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2FileSystemHandle { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public CoreWebView2FileSystemHandleKind Kind { get; }
    public string Path { get; }
    public CoreWebView2FileSystemHandlePermission Permission { get; }
    internal CoreWebView2FileSystemHandle(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2FileSystemHandle();
    public static CoreWebView2FileSystemHandle FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2FileSystemHandle x, CoreWebView2FileSystemHandle y);
    public static bool op_Inequality(CoreWebView2FileSystemHandle x, CoreWebView2FileSystemHandle y);
    public sealed virtual bool Equals(CoreWebView2FileSystemHandle other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public CoreWebView2FileSystemHandleKind get_Kind();
    public string get_Path();
    public CoreWebView2FileSystemHandlePermission get_Permission();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Web.WebView2.Core.CoreWebView2FileSystemHandleKind>")]
public enum Microsoft.Web.WebView2.Core.CoreWebView2FileSystemHandleKind : Enum {
    public int value__;
    public static CoreWebView2FileSystemHandleKind File;
    public static CoreWebView2FileSystemHandleKind Directory;
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Web.WebView2.Core.CoreWebView2FileSystemHandlePermission>")]
public enum Microsoft.Web.WebView2.Core.CoreWebView2FileSystemHandlePermission : Enum {
    public int value__;
    public static CoreWebView2FileSystemHandlePermission ReadOnly;
    public static CoreWebView2FileSystemHandlePermission ReadWrite;
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2Frame")]
[CoreWebView2FrameRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2Frame")]
public class Microsoft.Web.WebView2.Core.CoreWebView2Frame : object {
    private IObjectReference _inner;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalFrame;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalFrame2;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalFrame3;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalFrame4;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalFrame5;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalFrame6;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalFrame7;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Frame2;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Frame3;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Frame4;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Frame5;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalFrame { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalFrame2 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalFrame3 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalFrame4 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalFrame5 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalFrame6 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalFrame7 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Frame2 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Frame3 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Frame4 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Frame5 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Frame { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public UInt32 FrameId { get; }
    public string Name { get; }
    public bool UseOverrideTimerWakeInterval { get; public set; }
    internal CoreWebView2Frame(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalFrame();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalFrame();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalFrame2();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalFrame2();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalFrame3();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalFrame3();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalFrame4();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalFrame4();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalFrame5();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalFrame5();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalFrame6();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalFrame6();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalFrame7();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalFrame7();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Frame2();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Frame2();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Frame3();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Frame3();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Frame4();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Frame4();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Frame5();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Frame5();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Frame();
    public static CoreWebView2Frame FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2Frame x, CoreWebView2Frame y);
    public static bool op_Inequality(CoreWebView2Frame x, CoreWebView2Frame y);
    public sealed virtual bool Equals(CoreWebView2Frame other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public void add_ScreenCaptureStarting(TypedEventHandler`2<CoreWebView2Frame, CoreWebView2ScreenCaptureStartingEventArgs> value);
    public void remove_ScreenCaptureStarting(TypedEventHandler`2<CoreWebView2Frame, CoreWebView2ScreenCaptureStartingEventArgs> value);
    public IAsyncOperation`1<string> ExecuteScriptAsync(string javaScript);
    public void PostWebMessageAsJson(string webMessageAsJson);
    public void PostWebMessageAsString(string webMessageAsString);
    public void add_ContentLoading(TypedEventHandler`2<CoreWebView2Frame, CoreWebView2ContentLoadingEventArgs> value);
    public void remove_ContentLoading(TypedEventHandler`2<CoreWebView2Frame, CoreWebView2ContentLoadingEventArgs> value);
    public void add_DOMContentLoaded(TypedEventHandler`2<CoreWebView2Frame, CoreWebView2DOMContentLoadedEventArgs> value);
    public void remove_DOMContentLoaded(TypedEventHandler`2<CoreWebView2Frame, CoreWebView2DOMContentLoadedEventArgs> value);
    public void add_NavigationCompleted(TypedEventHandler`2<CoreWebView2Frame, CoreWebView2NavigationCompletedEventArgs> value);
    public void remove_NavigationCompleted(TypedEventHandler`2<CoreWebView2Frame, CoreWebView2NavigationCompletedEventArgs> value);
    public void add_NavigationStarting(TypedEventHandler`2<CoreWebView2Frame, CoreWebView2NavigationStartingEventArgs> value);
    public void remove_NavigationStarting(TypedEventHandler`2<CoreWebView2Frame, CoreWebView2NavigationStartingEventArgs> value);
    public void add_WebMessageReceived(TypedEventHandler`2<CoreWebView2Frame, CoreWebView2WebMessageReceivedEventArgs> value);
    public void remove_WebMessageReceived(TypedEventHandler`2<CoreWebView2Frame, CoreWebView2WebMessageReceivedEventArgs> value);
    public void add_PermissionRequested(TypedEventHandler`2<CoreWebView2Frame, CoreWebView2PermissionRequestedEventArgs> value);
    public void remove_PermissionRequested(TypedEventHandler`2<CoreWebView2Frame, CoreWebView2PermissionRequestedEventArgs> value);
    public void PostSharedBufferToScript(CoreWebView2SharedBuffer sharedBuffer, CoreWebView2SharedBufferAccess access, string additionalDataAsJson);
    public void RemoveHostObjectFromScript(string name);
    public int IsDestroyed();
    public void add_Destroyed(TypedEventHandler`2<CoreWebView2Frame, object> value);
    public void remove_Destroyed(TypedEventHandler`2<CoreWebView2Frame, object> value);
    public void add_NameChanged(TypedEventHandler`2<CoreWebView2Frame, object> value);
    public void remove_NameChanged(TypedEventHandler`2<CoreWebView2Frame, object> value);
    public UInt32 get_FrameId();
    public string get_Name();
    public bool get_UseOverrideTimerWakeInterval();
    public void set_UseOverrideTimerWakeInterval(bool value);
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2FrameCreatedEventArgs")]
[CoreWebView2FrameCreatedEventArgsRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2FrameCreatedEventArgs")]
public class Microsoft.Web.WebView2.Core.CoreWebView2FrameCreatedEventArgs : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2FrameCreatedEventArgs { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public CoreWebView2Frame Frame { get; }
    internal CoreWebView2FrameCreatedEventArgs(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2FrameCreatedEventArgs();
    public static CoreWebView2FrameCreatedEventArgs FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2FrameCreatedEventArgs x, CoreWebView2FrameCreatedEventArgs y);
    public static bool op_Inequality(CoreWebView2FrameCreatedEventArgs x, CoreWebView2FrameCreatedEventArgs y);
    public sealed virtual bool Equals(CoreWebView2FrameCreatedEventArgs other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public CoreWebView2Frame get_Frame();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2FrameInfo")]
[CoreWebView2FrameInfoRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2FrameInfo")]
public class Microsoft.Web.WebView2.Core.CoreWebView2FrameInfo : object {
    private IObjectReference _inner;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalFrameInfo;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2FrameInfo2;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalFrameInfo { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2FrameInfo2 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2FrameInfo { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public UInt32 FrameId { get; }
    public CoreWebView2FrameKind FrameKind { get; }
    public string Name { get; }
    public CoreWebView2FrameInfo ParentFrameInfo { get; }
    public string Source { get; }
    internal CoreWebView2FrameInfo(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalFrameInfo();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalFrameInfo();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2FrameInfo2();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2FrameInfo2();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2FrameInfo();
    public static CoreWebView2FrameInfo FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2FrameInfo x, CoreWebView2FrameInfo y);
    public static bool op_Inequality(CoreWebView2FrameInfo x, CoreWebView2FrameInfo y);
    public sealed virtual bool Equals(CoreWebView2FrameInfo other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public UInt32 get_FrameId();
    public CoreWebView2FrameKind get_FrameKind();
    public string get_Name();
    public CoreWebView2FrameInfo get_ParentFrameInfo();
    public string get_Source();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Web.WebView2.Core.CoreWebView2FrameKind>")]
public enum Microsoft.Web.WebView2.Core.CoreWebView2FrameKind : Enum {
    public int value__;
    public static CoreWebView2FrameKind Unknown;
    public static CoreWebView2FrameKind MainFrame;
    public static CoreWebView2FrameKind Iframe;
    public static CoreWebView2FrameKind Embed;
    public static CoreWebView2FrameKind Object;
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Web.WebView2.Core.CoreWebView2HostResourceAccessKind>")]
public enum Microsoft.Web.WebView2.Core.CoreWebView2HostResourceAccessKind : Enum {
    public int value__;
    public static CoreWebView2HostResourceAccessKind Deny;
    public static CoreWebView2HostResourceAccessKind Allow;
    public static CoreWebView2HostResourceAccessKind DenyCors;
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2HttpHeadersCollectionIterator")]
[CoreWebView2HttpHeadersCollectionIteratorRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2HttpHeadersCollectionIterator")]
public class Microsoft.Web.WebView2.Core.CoreWebView2HttpHeadersCollectionIterator : object {
    private IObjectReference _inner;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__System_Collections_Generic_IEnumerator_global__System_Collections_Generic_KeyValuePair_string__string__;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2HttpHeadersCollectionIterator { get; }
    private IObjectReference _objRef_global__System_Collections_Generic_IEnumerator_global__System_Collections_Generic_KeyValuePair_string__string__ { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public KeyValuePair`2<string, string> Current { get; }
    private object System.Collections.IEnumerator.Current { get; }
    internal CoreWebView2HttpHeadersCollectionIterator(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2HttpHeadersCollectionIterator();
    private IObjectReference Make___objRef_global__System_Collections_Generic_IEnumerator_global__System_Collections_Generic_KeyValuePair_string__string__();
    private IObjectReference get__objRef_global__System_Collections_Generic_IEnumerator_global__System_Collections_Generic_KeyValuePair_string__string__();
    public static CoreWebView2HttpHeadersCollectionIterator FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2HttpHeadersCollectionIterator x, CoreWebView2HttpHeadersCollectionIterator y);
    public static bool op_Inequality(CoreWebView2HttpHeadersCollectionIterator x, CoreWebView2HttpHeadersCollectionIterator y);
    public sealed virtual bool Equals(CoreWebView2HttpHeadersCollectionIterator other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public sealed virtual bool MoveNext();
    public sealed virtual void Reset();
    public sealed virtual void Dispose();
    public sealed virtual KeyValuePair`2<string, string> get_Current();
    private sealed virtual override object System.Collections.IEnumerator.get_Current();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2HttpRequestHeaders")]
[CoreWebView2HttpRequestHeadersRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2HttpRequestHeaders")]
public class Microsoft.Web.WebView2.Core.CoreWebView2HttpRequestHeaders : object {
    private IObjectReference _inner;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__System_Collections_Generic_IEnumerable_global__System_Collections_Generic_KeyValuePair_string__string__;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2HttpRequestHeaders { get; }
    private IObjectReference _objRef_global__System_Collections_Generic_IEnumerable_global__System_Collections_Generic_KeyValuePair_string__string__ { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    internal CoreWebView2HttpRequestHeaders(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2HttpRequestHeaders();
    private IObjectReference Make___objRef_global__System_Collections_Generic_IEnumerable_global__System_Collections_Generic_KeyValuePair_string__string__();
    private IObjectReference get__objRef_global__System_Collections_Generic_IEnumerable_global__System_Collections_Generic_KeyValuePair_string__string__();
    public static CoreWebView2HttpRequestHeaders FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2HttpRequestHeaders x, CoreWebView2HttpRequestHeaders y);
    public static bool op_Inequality(CoreWebView2HttpRequestHeaders x, CoreWebView2HttpRequestHeaders y);
    public sealed virtual bool Equals(CoreWebView2HttpRequestHeaders other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public string GetHeader(string name);
    public CoreWebView2HttpHeadersCollectionIterator GetHeaders(string name);
    public bool Contains(string name);
    public void SetHeader(string name, string value);
    public void RemoveHeader(string name);
    public sealed virtual IEnumerator`1<KeyValuePair`2<string, string>> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2HttpResponseHeaders")]
[CoreWebView2HttpResponseHeadersRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2HttpResponseHeaders")]
public class Microsoft.Web.WebView2.Core.CoreWebView2HttpResponseHeaders : object {
    private IObjectReference _inner;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__System_Collections_Generic_IEnumerable_global__System_Collections_Generic_KeyValuePair_string__string__;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2HttpResponseHeaders { get; }
    private IObjectReference _objRef_global__System_Collections_Generic_IEnumerable_global__System_Collections_Generic_KeyValuePair_string__string__ { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    internal CoreWebView2HttpResponseHeaders(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2HttpResponseHeaders();
    private IObjectReference Make___objRef_global__System_Collections_Generic_IEnumerable_global__System_Collections_Generic_KeyValuePair_string__string__();
    private IObjectReference get__objRef_global__System_Collections_Generic_IEnumerable_global__System_Collections_Generic_KeyValuePair_string__string__();
    public static CoreWebView2HttpResponseHeaders FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2HttpResponseHeaders x, CoreWebView2HttpResponseHeaders y);
    public static bool op_Inequality(CoreWebView2HttpResponseHeaders x, CoreWebView2HttpResponseHeaders y);
    public sealed virtual bool Equals(CoreWebView2HttpResponseHeaders other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public void AppendHeader(string name, string value);
    public bool Contains(string name);
    public string GetHeader(string name);
    public CoreWebView2HttpHeadersCollectionIterator GetHeaders(string name);
    public sealed virtual IEnumerator`1<KeyValuePair`2<string, string>> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Web.WebView2.Core.CoreWebView2KeyEventKind>")]
public enum Microsoft.Web.WebView2.Core.CoreWebView2KeyEventKind : Enum {
    public int value__;
    public static CoreWebView2KeyEventKind KeyDown;
    public static CoreWebView2KeyEventKind KeyUp;
    public static CoreWebView2KeyEventKind SystemKeyDown;
    public static CoreWebView2KeyEventKind SystemKeyUp;
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2LaunchingExternalUriSchemeEventArgs")]
[CoreWebView2LaunchingExternalUriSchemeEventArgsRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2LaunchingExternalUriSchemeEventArgs")]
public class Microsoft.Web.WebView2.Core.CoreWebView2LaunchingExternalUriSchemeEventArgs : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2LaunchingExternalUriSchemeEventArgs { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public bool Cancel { get; public set; }
    public string InitiatingOrigin { get; }
    public bool IsUserInitiated { get; }
    public string Uri { get; }
    internal CoreWebView2LaunchingExternalUriSchemeEventArgs(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2LaunchingExternalUriSchemeEventArgs();
    public static CoreWebView2LaunchingExternalUriSchemeEventArgs FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2LaunchingExternalUriSchemeEventArgs x, CoreWebView2LaunchingExternalUriSchemeEventArgs y);
    public static bool op_Inequality(CoreWebView2LaunchingExternalUriSchemeEventArgs x, CoreWebView2LaunchingExternalUriSchemeEventArgs y);
    public sealed virtual bool Equals(CoreWebView2LaunchingExternalUriSchemeEventArgs other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public Deferral GetDeferral();
    public bool get_Cancel();
    public void set_Cancel(bool value);
    public string get_InitiatingOrigin();
    public bool get_IsUserInitiated();
    public string get_Uri();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Web.WebView2.Core.CoreWebView2MemoryUsageTargetLevel>")]
public enum Microsoft.Web.WebView2.Core.CoreWebView2MemoryUsageTargetLevel : Enum {
    public int value__;
    public static CoreWebView2MemoryUsageTargetLevel Normal;
    public static CoreWebView2MemoryUsageTargetLevel Low;
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Web.WebView2.Core.CoreWebView2MouseEventKind>")]
public enum Microsoft.Web.WebView2.Core.CoreWebView2MouseEventKind : Enum {
    public int value__;
    public static CoreWebView2MouseEventKind HorizontalWheel;
    public static CoreWebView2MouseEventKind LeftButtonDoubleClick;
    public static CoreWebView2MouseEventKind LeftButtonDown;
    public static CoreWebView2MouseEventKind LeftButtonUp;
    public static CoreWebView2MouseEventKind Leave;
    public static CoreWebView2MouseEventKind MiddleButtonDoubleClick;
    public static CoreWebView2MouseEventKind MiddleButtonDown;
    public static CoreWebView2MouseEventKind MiddleButtonUp;
    public static CoreWebView2MouseEventKind Move;
    public static CoreWebView2MouseEventKind RightButtonDoubleClick;
    public static CoreWebView2MouseEventKind RightButtonDown;
    public static CoreWebView2MouseEventKind RightButtonUp;
    public static CoreWebView2MouseEventKind Wheel;
    public static CoreWebView2MouseEventKind XButtonDoubleClick;
    public static CoreWebView2MouseEventKind XButtonDown;
    public static CoreWebView2MouseEventKind XButtonUp;
    public static CoreWebView2MouseEventKind NonClientRightButtonDown;
    public static CoreWebView2MouseEventKind NonClientRightButtonUp;
}
[FlagsAttribute]
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Web.WebView2.Core.CoreWebView2MouseEventVirtualKeys>")]
public enum Microsoft.Web.WebView2.Core.CoreWebView2MouseEventVirtualKeys : Enum {
    public UInt32 value__;
    public static CoreWebView2MouseEventVirtualKeys None;
    public static CoreWebView2MouseEventVirtualKeys LeftButton;
    public static CoreWebView2MouseEventVirtualKeys RightButton;
    public static CoreWebView2MouseEventVirtualKeys Shift;
    public static CoreWebView2MouseEventVirtualKeys Control;
    public static CoreWebView2MouseEventVirtualKeys MiddleButton;
    public static CoreWebView2MouseEventVirtualKeys XButton1;
    public static CoreWebView2MouseEventVirtualKeys XButton2;
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Web.WebView2.Core.CoreWebView2MoveFocusReason>")]
public enum Microsoft.Web.WebView2.Core.CoreWebView2MoveFocusReason : Enum {
    public int value__;
    public static CoreWebView2MoveFocusReason Programmatic;
    public static CoreWebView2MoveFocusReason Next;
    public static CoreWebView2MoveFocusReason Previous;
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2MoveFocusRequestedEventArgs")]
[CoreWebView2MoveFocusRequestedEventArgsRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2MoveFocusRequestedEventArgs")]
public class Microsoft.Web.WebView2.Core.CoreWebView2MoveFocusRequestedEventArgs : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2MoveFocusRequestedEventArgs { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public bool Handled { get; public set; }
    public CoreWebView2MoveFocusReason Reason { get; }
    internal CoreWebView2MoveFocusRequestedEventArgs(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2MoveFocusRequestedEventArgs();
    public static CoreWebView2MoveFocusRequestedEventArgs FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2MoveFocusRequestedEventArgs x, CoreWebView2MoveFocusRequestedEventArgs y);
    public static bool op_Inequality(CoreWebView2MoveFocusRequestedEventArgs x, CoreWebView2MoveFocusRequestedEventArgs y);
    public sealed virtual bool Equals(CoreWebView2MoveFocusRequestedEventArgs other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public bool get_Handled();
    public void set_Handled(bool value);
    public CoreWebView2MoveFocusReason get_Reason();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2NavigationCompletedEventArgs")]
[CoreWebView2NavigationCompletedEventArgsRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2NavigationCompletedEventArgs")]
public class Microsoft.Web.WebView2.Core.CoreWebView2NavigationCompletedEventArgs : object {
    private IObjectReference _inner;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2NavigationCompletedEventArgs2;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2NavigationCompletedEventArgs2 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2NavigationCompletedEventArgs { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public int HttpStatusCode { get; }
    public bool IsSuccess { get; }
    public ulong NavigationId { get; }
    public CoreWebView2WebErrorStatus WebErrorStatus { get; }
    internal CoreWebView2NavigationCompletedEventArgs(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2NavigationCompletedEventArgs2();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2NavigationCompletedEventArgs2();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2NavigationCompletedEventArgs();
    public static CoreWebView2NavigationCompletedEventArgs FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2NavigationCompletedEventArgs x, CoreWebView2NavigationCompletedEventArgs y);
    public static bool op_Inequality(CoreWebView2NavigationCompletedEventArgs x, CoreWebView2NavigationCompletedEventArgs y);
    public sealed virtual bool Equals(CoreWebView2NavigationCompletedEventArgs other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public int get_HttpStatusCode();
    public bool get_IsSuccess();
    public ulong get_NavigationId();
    public CoreWebView2WebErrorStatus get_WebErrorStatus();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Web.WebView2.Core.CoreWebView2NavigationKind>")]
public enum Microsoft.Web.WebView2.Core.CoreWebView2NavigationKind : Enum {
    public int value__;
    public static CoreWebView2NavigationKind Reload;
    public static CoreWebView2NavigationKind BackOrForward;
    public static CoreWebView2NavigationKind NewDocument;
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2NavigationStartingEventArgs")]
[CoreWebView2NavigationStartingEventArgsRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2NavigationStartingEventArgs")]
public class Microsoft.Web.WebView2.Core.CoreWebView2NavigationStartingEventArgs : object {
    private IObjectReference _inner;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalNavigationStartingEventArgs;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalNavigationStartingEventArgs2;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2NavigationStartingEventArgs2;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2NavigationStartingEventArgs3;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalNavigationStartingEventArgs { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalNavigationStartingEventArgs2 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2NavigationStartingEventArgs2 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2NavigationStartingEventArgs3 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2NavigationStartingEventArgs { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public string AdditionalAllowedFrameAncestors { get; public set; }
    public bool Cancel { get; public set; }
    public bool IsRedirected { get; }
    public bool IsUserInitiated { get; }
    public ulong NavigationId { get; }
    public CoreWebView2NavigationKind NavigationKind { get; }
    public CoreWebView2HttpRequestHeaders RequestHeaders { get; }
    public string Uri { get; }
    internal CoreWebView2NavigationStartingEventArgs(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalNavigationStartingEventArgs();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalNavigationStartingEventArgs();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalNavigationStartingEventArgs2();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalNavigationStartingEventArgs2();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2NavigationStartingEventArgs2();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2NavigationStartingEventArgs2();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2NavigationStartingEventArgs3();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2NavigationStartingEventArgs3();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2NavigationStartingEventArgs();
    public static CoreWebView2NavigationStartingEventArgs FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2NavigationStartingEventArgs x, CoreWebView2NavigationStartingEventArgs y);
    public static bool op_Inequality(CoreWebView2NavigationStartingEventArgs x, CoreWebView2NavigationStartingEventArgs y);
    public sealed virtual bool Equals(CoreWebView2NavigationStartingEventArgs other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public string get_AdditionalAllowedFrameAncestors();
    public void set_AdditionalAllowedFrameAncestors(string value);
    public bool get_Cancel();
    public void set_Cancel(bool value);
    public bool get_IsRedirected();
    public bool get_IsUserInitiated();
    public ulong get_NavigationId();
    public CoreWebView2NavigationKind get_NavigationKind();
    public CoreWebView2HttpRequestHeaders get_RequestHeaders();
    public string get_Uri();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2NewWindowRequestedEventArgs")]
[CoreWebView2NewWindowRequestedEventArgsRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2NewWindowRequestedEventArgs")]
public class Microsoft.Web.WebView2.Core.CoreWebView2NewWindowRequestedEventArgs : object {
    private IObjectReference _inner;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalNewWindowRequestedEventArgs;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalNewWindowRequestedEventArgs2;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2NewWindowRequestedEventArgs2;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2NewWindowRequestedEventArgs3;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalNewWindowRequestedEventArgs { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalNewWindowRequestedEventArgs2 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2NewWindowRequestedEventArgs2 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2NewWindowRequestedEventArgs3 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2NewWindowRequestedEventArgs { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public bool Handled { get; public set; }
    public bool IsUserInitiated { get; }
    public string Name { get; }
    public CoreWebView2 NewWindow { get; public set; }
    public CoreWebView2FrameInfo OriginalSourceFrameInfo { get; }
    public string Uri { get; }
    public CoreWebView2WindowFeatures WindowFeatures { get; }
    internal CoreWebView2NewWindowRequestedEventArgs(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalNewWindowRequestedEventArgs();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalNewWindowRequestedEventArgs();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalNewWindowRequestedEventArgs2();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalNewWindowRequestedEventArgs2();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2NewWindowRequestedEventArgs2();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2NewWindowRequestedEventArgs2();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2NewWindowRequestedEventArgs3();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2NewWindowRequestedEventArgs3();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2NewWindowRequestedEventArgs();
    public static CoreWebView2NewWindowRequestedEventArgs FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2NewWindowRequestedEventArgs x, CoreWebView2NewWindowRequestedEventArgs y);
    public static bool op_Inequality(CoreWebView2NewWindowRequestedEventArgs x, CoreWebView2NewWindowRequestedEventArgs y);
    public sealed virtual bool Equals(CoreWebView2NewWindowRequestedEventArgs other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public Deferral GetDeferral();
    public bool get_Handled();
    public void set_Handled(bool value);
    public bool get_IsUserInitiated();
    public string get_Name();
    public CoreWebView2 get_NewWindow();
    public void set_NewWindow(CoreWebView2 value);
    public CoreWebView2FrameInfo get_OriginalSourceFrameInfo();
    public string get_Uri();
    public CoreWebView2WindowFeatures get_WindowFeatures();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2NonClientRegionChangedEventArgs")]
[CoreWebView2NonClientRegionChangedEventArgsRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2NonClientRegionChangedEventArgs")]
public class Microsoft.Web.WebView2.Core.CoreWebView2NonClientRegionChangedEventArgs : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2NonClientRegionChangedEventArgs { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public CoreWebView2NonClientRegionKind RegionKind { get; }
    internal CoreWebView2NonClientRegionChangedEventArgs(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2NonClientRegionChangedEventArgs();
    public static CoreWebView2NonClientRegionChangedEventArgs FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2NonClientRegionChangedEventArgs x, CoreWebView2NonClientRegionChangedEventArgs y);
    public static bool op_Inequality(CoreWebView2NonClientRegionChangedEventArgs x, CoreWebView2NonClientRegionChangedEventArgs y);
    public sealed virtual bool Equals(CoreWebView2NonClientRegionChangedEventArgs other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public CoreWebView2NonClientRegionKind get_RegionKind();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Web.WebView2.Core.CoreWebView2NonClientRegionKind>")]
public enum Microsoft.Web.WebView2.Core.CoreWebView2NonClientRegionKind : Enum {
    public int value__;
    public static CoreWebView2NonClientRegionKind Nowhere;
    public static CoreWebView2NonClientRegionKind Client;
    public static CoreWebView2NonClientRegionKind Caption;
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2Notification")]
[CoreWebView2NotificationRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2Notification")]
public class Microsoft.Web.WebView2.Core.CoreWebView2Notification : object {
    private IObjectReference _inner;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Notification_Manual2;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Notification_Manual2 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Notification { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public string BadgeUri { get; }
    public string Body { get; }
    public string BodyImageUri { get; }
    public CoreWebView2TextDirectionKind Direction { get; }
    public string IconUri { get; }
    public bool IsSilent { get; }
    public string Language { get; }
    public bool RequiresInteraction { get; }
    public bool ShouldRenotify { get; }
    public string Tag { get; }
    public double Timestamp { get; }
    public string Title { get; }
    public IReadOnlyList`1<ulong> VibrationPattern { get; }
    internal CoreWebView2Notification(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Notification_Manual2();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Notification_Manual2();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Notification();
    public static CoreWebView2Notification FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2Notification x, CoreWebView2Notification y);
    public static bool op_Inequality(CoreWebView2Notification x, CoreWebView2Notification y);
    public sealed virtual bool Equals(CoreWebView2Notification other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public void ReportShown();
    public void ReportClicked();
    public void ReportClosed();
    public void add_CloseRequested(TypedEventHandler`2<CoreWebView2Notification, object> value);
    public void remove_CloseRequested(TypedEventHandler`2<CoreWebView2Notification, object> value);
    public string get_BadgeUri();
    public string get_Body();
    public string get_BodyImageUri();
    public CoreWebView2TextDirectionKind get_Direction();
    public string get_IconUri();
    public bool get_IsSilent();
    public string get_Language();
    public bool get_RequiresInteraction();
    public bool get_ShouldRenotify();
    public string get_Tag();
    public double get_Timestamp();
    public string get_Title();
    public IReadOnlyList`1<ulong> get_VibrationPattern();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2NotificationReceivedEventArgs")]
[CoreWebView2NotificationReceivedEventArgsRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2NotificationReceivedEventArgs")]
public class Microsoft.Web.WebView2.Core.CoreWebView2NotificationReceivedEventArgs : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2NotificationReceivedEventArgs { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public bool Handled { get; public set; }
    public CoreWebView2Notification Notification { get; }
    public string SenderOrigin { get; }
    internal CoreWebView2NotificationReceivedEventArgs(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2NotificationReceivedEventArgs();
    public static CoreWebView2NotificationReceivedEventArgs FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2NotificationReceivedEventArgs x, CoreWebView2NotificationReceivedEventArgs y);
    public static bool op_Inequality(CoreWebView2NotificationReceivedEventArgs x, CoreWebView2NotificationReceivedEventArgs y);
    public sealed virtual bool Equals(CoreWebView2NotificationReceivedEventArgs other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public Deferral GetDeferral();
    public bool get_Handled();
    public void set_Handled(bool value);
    public CoreWebView2Notification get_Notification();
    public string get_SenderOrigin();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[FlagsAttribute]
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Web.WebView2.Core.CoreWebView2PdfToolbarItems>")]
public enum Microsoft.Web.WebView2.Core.CoreWebView2PdfToolbarItems : Enum {
    public UInt32 value__;
    public static CoreWebView2PdfToolbarItems None;
    public static CoreWebView2PdfToolbarItems Save;
    public static CoreWebView2PdfToolbarItems Print;
    public static CoreWebView2PdfToolbarItems SaveAs;
    public static CoreWebView2PdfToolbarItems ZoomIn;
    public static CoreWebView2PdfToolbarItems ZoomOut;
    public static CoreWebView2PdfToolbarItems Rotate;
    public static CoreWebView2PdfToolbarItems FitPage;
    public static CoreWebView2PdfToolbarItems PageLayout;
    public static CoreWebView2PdfToolbarItems Bookmarks;
    public static CoreWebView2PdfToolbarItems PageSelector;
    public static CoreWebView2PdfToolbarItems Search;
    public static CoreWebView2PdfToolbarItems FullScreen;
    public static CoreWebView2PdfToolbarItems MoreSettings;
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Web.WebView2.Core.CoreWebView2PermissionKind>")]
public enum Microsoft.Web.WebView2.Core.CoreWebView2PermissionKind : Enum {
    public int value__;
    public static CoreWebView2PermissionKind UnknownPermission;
    public static CoreWebView2PermissionKind Microphone;
    public static CoreWebView2PermissionKind Camera;
    public static CoreWebView2PermissionKind Geolocation;
    public static CoreWebView2PermissionKind Notifications;
    public static CoreWebView2PermissionKind OtherSensors;
    public static CoreWebView2PermissionKind ClipboardRead;
    public static CoreWebView2PermissionKind MultipleAutomaticDownloads;
    public static CoreWebView2PermissionKind FileReadWrite;
    public static CoreWebView2PermissionKind Autoplay;
    public static CoreWebView2PermissionKind LocalFonts;
    public static CoreWebView2PermissionKind MidiSystemExclusiveMessages;
    public static CoreWebView2PermissionKind WindowManagement;
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2PermissionRequestedEventArgs")]
[CoreWebView2PermissionRequestedEventArgsRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2PermissionRequestedEventArgs")]
public class Microsoft.Web.WebView2.Core.CoreWebView2PermissionRequestedEventArgs : object {
    private IObjectReference _inner;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2PermissionRequestedEventArgs2;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2PermissionRequestedEventArgs3;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2PermissionRequestedEventArgs2 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2PermissionRequestedEventArgs3 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2PermissionRequestedEventArgs { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public bool Handled { get; public set; }
    public bool IsUserInitiated { get; }
    public CoreWebView2PermissionKind PermissionKind { get; }
    public bool SavesInProfile { get; public set; }
    public CoreWebView2PermissionState State { get; public set; }
    public string Uri { get; }
    internal CoreWebView2PermissionRequestedEventArgs(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2PermissionRequestedEventArgs2();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2PermissionRequestedEventArgs2();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2PermissionRequestedEventArgs3();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2PermissionRequestedEventArgs3();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2PermissionRequestedEventArgs();
    public static CoreWebView2PermissionRequestedEventArgs FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2PermissionRequestedEventArgs x, CoreWebView2PermissionRequestedEventArgs y);
    public static bool op_Inequality(CoreWebView2PermissionRequestedEventArgs x, CoreWebView2PermissionRequestedEventArgs y);
    public sealed virtual bool Equals(CoreWebView2PermissionRequestedEventArgs other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public Deferral GetDeferral();
    public bool get_Handled();
    public void set_Handled(bool value);
    public bool get_IsUserInitiated();
    public CoreWebView2PermissionKind get_PermissionKind();
    public bool get_SavesInProfile();
    public void set_SavesInProfile(bool value);
    public CoreWebView2PermissionState get_State();
    public void set_State(CoreWebView2PermissionState value);
    public string get_Uri();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2PermissionSetting")]
[CoreWebView2PermissionSettingRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2PermissionSetting")]
public class Microsoft.Web.WebView2.Core.CoreWebView2PermissionSetting : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2PermissionSetting { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public CoreWebView2PermissionKind PermissionKind { get; }
    public string PermissionOrigin { get; }
    public CoreWebView2PermissionState PermissionState { get; }
    internal CoreWebView2PermissionSetting(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2PermissionSetting();
    public static CoreWebView2PermissionSetting FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2PermissionSetting x, CoreWebView2PermissionSetting y);
    public static bool op_Inequality(CoreWebView2PermissionSetting x, CoreWebView2PermissionSetting y);
    public sealed virtual bool Equals(CoreWebView2PermissionSetting other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public CoreWebView2PermissionKind get_PermissionKind();
    public string get_PermissionOrigin();
    public CoreWebView2PermissionState get_PermissionState();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Web.WebView2.Core.CoreWebView2PermissionState>")]
public enum Microsoft.Web.WebView2.Core.CoreWebView2PermissionState : Enum {
    public int value__;
    public static CoreWebView2PermissionState Default;
    public static CoreWebView2PermissionState Allow;
    public static CoreWebView2PermissionState Deny;
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core", "struct(Microsoft.Web.WebView2.Core.CoreWebView2PhysicalKeyStatus;u4;u4;i4;i4;i4;i4)")]
[WindowsRuntimeHelperTypeAttribute]
[WinRTExposedTypeAttribute("WinRT.StructTypeDetails`2<Microsoft.Web.WebView2.Core.CoreWebView2PhysicalKeyStatus,Microsoft.Web.WebView2.Core.CoreWebView2PhysicalKeyStatus>")]
public class Microsoft.Web.WebView2.Core.CoreWebView2PhysicalKeyStatus : ValueType {
    public UInt32 RepeatCount;
    public UInt32 ScanCode;
    public int IsExtendedKey;
    public int IsMenuKeyDown;
    public int WasKeyDown;
    public int IsKeyReleased;
    public CoreWebView2PhysicalKeyStatus(UInt32 _RepeatCount, UInt32 _ScanCode, int _IsExtendedKey, int _IsMenuKeyDown, int _WasKeyDown, int _IsKeyReleased);
    public static bool op_Equality(CoreWebView2PhysicalKeyStatus x, CoreWebView2PhysicalKeyStatus y);
    public static bool op_Inequality(CoreWebView2PhysicalKeyStatus x, CoreWebView2PhysicalKeyStatus y);
    public sealed virtual bool Equals(CoreWebView2PhysicalKeyStatus other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Web.WebView2.Core.CoreWebView2PointerEventKind>")]
public enum Microsoft.Web.WebView2.Core.CoreWebView2PointerEventKind : Enum {
    public int value__;
    public static CoreWebView2PointerEventKind Activate;
    public static CoreWebView2PointerEventKind Down;
    public static CoreWebView2PointerEventKind Enter;
    public static CoreWebView2PointerEventKind Leave;
    public static CoreWebView2PointerEventKind Up;
    public static CoreWebView2PointerEventKind Update;
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2PointerInfo")]
[CoreWebView2PointerInfoRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo")]
public class Microsoft.Web.WebView2.Core.CoreWebView2PointerInfo : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2PointerInfo { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public int ButtonChangeKind { get; public set; }
    public Rect DisplayRect { get; public set; }
    public UInt32 FrameId { get; public set; }
    public Point HimetricLocation { get; public set; }
    public Point HimetricLocationRaw { get; public set; }
    public UInt32 HistoryCount { get; public set; }
    public int InputData { get; public set; }
    public UInt32 KeyStates { get; public set; }
    public UInt32 PenFlags { get; public set; }
    public UInt32 PenMask { get; public set; }
    public UInt32 PenPressure { get; public set; }
    public UInt32 PenRotation { get; public set; }
    public int PenTiltX { get; public set; }
    public int PenTiltY { get; public set; }
    public ulong PerformanceCount { get; public set; }
    public Point PixelLocation { get; public set; }
    public Point PixelLocationRaw { get; public set; }
    public Rect PointerDeviceRect { get; public set; }
    public UInt32 PointerFlags { get; public set; }
    public UInt32 PointerId { get; public set; }
    public UInt32 PointerKind { get; public set; }
    public UInt32 Time { get; public set; }
    public Rect TouchContact { get; public set; }
    public Rect TouchContactRaw { get; public set; }
    public UInt32 TouchFlags { get; public set; }
    public UInt32 TouchMask { get; public set; }
    public UInt32 TouchOrientation { get; public set; }
    public UInt32 TouchPressure { get; public set; }
    internal CoreWebView2PointerInfo(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2PointerInfo();
    public static CoreWebView2PointerInfo FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2PointerInfo x, CoreWebView2PointerInfo y);
    public static bool op_Inequality(CoreWebView2PointerInfo x, CoreWebView2PointerInfo y);
    public sealed virtual bool Equals(CoreWebView2PointerInfo other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public int get_ButtonChangeKind();
    public void set_ButtonChangeKind(int value);
    public Rect get_DisplayRect();
    public void set_DisplayRect(Rect value);
    public UInt32 get_FrameId();
    public void set_FrameId(UInt32 value);
    public Point get_HimetricLocation();
    public void set_HimetricLocation(Point value);
    public Point get_HimetricLocationRaw();
    public void set_HimetricLocationRaw(Point value);
    public UInt32 get_HistoryCount();
    public void set_HistoryCount(UInt32 value);
    public int get_InputData();
    public void set_InputData(int value);
    public UInt32 get_KeyStates();
    public void set_KeyStates(UInt32 value);
    public UInt32 get_PenFlags();
    public void set_PenFlags(UInt32 value);
    public UInt32 get_PenMask();
    public void set_PenMask(UInt32 value);
    public UInt32 get_PenPressure();
    public void set_PenPressure(UInt32 value);
    public UInt32 get_PenRotation();
    public void set_PenRotation(UInt32 value);
    public int get_PenTiltX();
    public void set_PenTiltX(int value);
    public int get_PenTiltY();
    public void set_PenTiltY(int value);
    public ulong get_PerformanceCount();
    public void set_PerformanceCount(ulong value);
    public Point get_PixelLocation();
    public void set_PixelLocation(Point value);
    public Point get_PixelLocationRaw();
    public void set_PixelLocationRaw(Point value);
    public Rect get_PointerDeviceRect();
    public void set_PointerDeviceRect(Rect value);
    public UInt32 get_PointerFlags();
    public void set_PointerFlags(UInt32 value);
    public UInt32 get_PointerId();
    public void set_PointerId(UInt32 value);
    public UInt32 get_PointerKind();
    public void set_PointerKind(UInt32 value);
    public UInt32 get_Time();
    public void set_Time(UInt32 value);
    public Rect get_TouchContact();
    public void set_TouchContact(Rect value);
    public Rect get_TouchContactRaw();
    public void set_TouchContactRaw(Rect value);
    public UInt32 get_TouchFlags();
    public void set_TouchFlags(UInt32 value);
    public UInt32 get_TouchMask();
    public void set_TouchMask(UInt32 value);
    public UInt32 get_TouchOrientation();
    public void set_TouchOrientation(UInt32 value);
    public UInt32 get_TouchPressure();
    public void set_TouchPressure(UInt32 value);
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Web.WebView2.Core.CoreWebView2PreferredColorScheme>")]
public enum Microsoft.Web.WebView2.Core.CoreWebView2PreferredColorScheme : Enum {
    public int value__;
    public static CoreWebView2PreferredColorScheme Auto;
    public static CoreWebView2PreferredColorScheme Light;
    public static CoreWebView2PreferredColorScheme Dark;
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Web.WebView2.Core.CoreWebView2PrintCollation>")]
public enum Microsoft.Web.WebView2.Core.CoreWebView2PrintCollation : Enum {
    public int value__;
    public static CoreWebView2PrintCollation Default;
    public static CoreWebView2PrintCollation Collated;
    public static CoreWebView2PrintCollation Uncollated;
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Web.WebView2.Core.CoreWebView2PrintColorMode>")]
public enum Microsoft.Web.WebView2.Core.CoreWebView2PrintColorMode : Enum {
    public int value__;
    public static CoreWebView2PrintColorMode Default;
    public static CoreWebView2PrintColorMode Color;
    public static CoreWebView2PrintColorMode Grayscale;
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Web.WebView2.Core.CoreWebView2PrintDialogKind>")]
public enum Microsoft.Web.WebView2.Core.CoreWebView2PrintDialogKind : Enum {
    public int value__;
    public static CoreWebView2PrintDialogKind Browser;
    public static CoreWebView2PrintDialogKind System;
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Web.WebView2.Core.CoreWebView2PrintDuplex>")]
public enum Microsoft.Web.WebView2.Core.CoreWebView2PrintDuplex : Enum {
    public int value__;
    public static CoreWebView2PrintDuplex Default;
    public static CoreWebView2PrintDuplex OneSided;
    public static CoreWebView2PrintDuplex TwoSidedLongEdge;
    public static CoreWebView2PrintDuplex TwoSidedShortEdge;
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Web.WebView2.Core.CoreWebView2PrintMediaSize>")]
public enum Microsoft.Web.WebView2.Core.CoreWebView2PrintMediaSize : Enum {
    public int value__;
    public static CoreWebView2PrintMediaSize Default;
    public static CoreWebView2PrintMediaSize Custom;
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Web.WebView2.Core.CoreWebView2PrintOrientation>")]
public enum Microsoft.Web.WebView2.Core.CoreWebView2PrintOrientation : Enum {
    public int value__;
    public static CoreWebView2PrintOrientation Portrait;
    public static CoreWebView2PrintOrientation Landscape;
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2PrintSettings")]
[CoreWebView2PrintSettingsRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2PrintSettings")]
public class Microsoft.Web.WebView2.Core.CoreWebView2PrintSettings : object {
    private IObjectReference _inner;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalPrintSettings2;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2PrintSettings2;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalPrintSettings2 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2PrintSettings2 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2PrintSettings { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public CoreWebView2PrintCollation Collation { get; public set; }
    public CoreWebView2PrintColorMode ColorMode { get; public set; }
    public int Copies { get; public set; }
    public CoreWebView2PrintDuplex Duplex { get; public set; }
    public string FooterUri { get; public set; }
    public string HeaderTitle { get; public set; }
    public double MarginBottom { get; public set; }
    public double MarginLeft { get; public set; }
    public double MarginRight { get; public set; }
    public double MarginTop { get; public set; }
    public CoreWebView2PrintMediaSize MediaSize { get; public set; }
    public CoreWebView2PrintOrientation Orientation { get; public set; }
    public double PageHeight { get; public set; }
    public string PageRanges { get; public set; }
    public double PageWidth { get; public set; }
    public int PagesPerSide { get; public set; }
    public string PrinterName { get; public set; }
    public double ScaleFactor { get; public set; }
    public bool ShouldPrintBackgrounds { get; public set; }
    public bool ShouldPrintHeaderAndFooter { get; public set; }
    public bool ShouldPrintSelectionOnly { get; public set; }
    internal CoreWebView2PrintSettings(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalPrintSettings2();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalPrintSettings2();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2PrintSettings2();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2PrintSettings2();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2PrintSettings();
    public static CoreWebView2PrintSettings FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2PrintSettings x, CoreWebView2PrintSettings y);
    public static bool op_Inequality(CoreWebView2PrintSettings x, CoreWebView2PrintSettings y);
    public sealed virtual bool Equals(CoreWebView2PrintSettings other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public CoreWebView2PrintCollation get_Collation();
    public void set_Collation(CoreWebView2PrintCollation value);
    public CoreWebView2PrintColorMode get_ColorMode();
    public void set_ColorMode(CoreWebView2PrintColorMode value);
    public int get_Copies();
    public void set_Copies(int value);
    public CoreWebView2PrintDuplex get_Duplex();
    public void set_Duplex(CoreWebView2PrintDuplex value);
    public string get_FooterUri();
    public void set_FooterUri(string value);
    public string get_HeaderTitle();
    public void set_HeaderTitle(string value);
    public double get_MarginBottom();
    public void set_MarginBottom(double value);
    public double get_MarginLeft();
    public void set_MarginLeft(double value);
    public double get_MarginRight();
    public void set_MarginRight(double value);
    public double get_MarginTop();
    public void set_MarginTop(double value);
    public CoreWebView2PrintMediaSize get_MediaSize();
    public void set_MediaSize(CoreWebView2PrintMediaSize value);
    public CoreWebView2PrintOrientation get_Orientation();
    public void set_Orientation(CoreWebView2PrintOrientation value);
    public double get_PageHeight();
    public void set_PageHeight(double value);
    public string get_PageRanges();
    public void set_PageRanges(string value);
    public double get_PageWidth();
    public void set_PageWidth(double value);
    public int get_PagesPerSide();
    public void set_PagesPerSide(int value);
    public string get_PrinterName();
    public void set_PrinterName(string value);
    public double get_ScaleFactor();
    public void set_ScaleFactor(double value);
    public bool get_ShouldPrintBackgrounds();
    public void set_ShouldPrintBackgrounds(bool value);
    public bool get_ShouldPrintHeaderAndFooter();
    public void set_ShouldPrintHeaderAndFooter(bool value);
    public bool get_ShouldPrintSelectionOnly();
    public void set_ShouldPrintSelectionOnly(bool value);
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Web.WebView2.Core.CoreWebView2PrintStatus>")]
public enum Microsoft.Web.WebView2.Core.CoreWebView2PrintStatus : Enum {
    public int value__;
    public static CoreWebView2PrintStatus Succeeded;
    public static CoreWebView2PrintStatus PrinterUnavailable;
    public static CoreWebView2PrintStatus OtherError;
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2ProcessExtendedInfo")]
[CoreWebView2ProcessExtendedInfoRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2ProcessExtendedInfo")]
public class Microsoft.Web.WebView2.Core.CoreWebView2ProcessExtendedInfo : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ProcessExtendedInfo { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public IReadOnlyList`1<CoreWebView2FrameInfo> AssociatedFrameInfos { get; }
    public CoreWebView2ProcessInfo ProcessInfo { get; }
    internal CoreWebView2ProcessExtendedInfo(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ProcessExtendedInfo();
    public static CoreWebView2ProcessExtendedInfo FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2ProcessExtendedInfo x, CoreWebView2ProcessExtendedInfo y);
    public static bool op_Inequality(CoreWebView2ProcessExtendedInfo x, CoreWebView2ProcessExtendedInfo y);
    public sealed virtual bool Equals(CoreWebView2ProcessExtendedInfo other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public IReadOnlyList`1<CoreWebView2FrameInfo> get_AssociatedFrameInfos();
    public CoreWebView2ProcessInfo get_ProcessInfo();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedEventArgs")]
[CoreWebView2ProcessFailedEventArgsRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2ProcessFailedEventArgs")]
public class Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedEventArgs : object {
    private IObjectReference _inner;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalProcessFailedEventArgs;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ProcessFailedEventArgs2;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ProcessFailedEventArgs3;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalProcessFailedEventArgs { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ProcessFailedEventArgs2 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ProcessFailedEventArgs3 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ProcessFailedEventArgs { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public int ExitCode { get; }
    public string FailureSourceModulePath { get; }
    public IReadOnlyList`1<CoreWebView2FrameInfo> FrameInfosForFailedProcess { get; }
    public string ProcessDescription { get; }
    public CoreWebView2ProcessFailedKind ProcessFailedKind { get; }
    public CoreWebView2ProcessFailedReason Reason { get; }
    internal CoreWebView2ProcessFailedEventArgs(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalProcessFailedEventArgs();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalProcessFailedEventArgs();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ProcessFailedEventArgs2();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ProcessFailedEventArgs2();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ProcessFailedEventArgs3();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ProcessFailedEventArgs3();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ProcessFailedEventArgs();
    public static CoreWebView2ProcessFailedEventArgs FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2ProcessFailedEventArgs x, CoreWebView2ProcessFailedEventArgs y);
    public static bool op_Inequality(CoreWebView2ProcessFailedEventArgs x, CoreWebView2ProcessFailedEventArgs y);
    public sealed virtual bool Equals(CoreWebView2ProcessFailedEventArgs other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public int get_ExitCode();
    public string get_FailureSourceModulePath();
    public IReadOnlyList`1<CoreWebView2FrameInfo> get_FrameInfosForFailedProcess();
    public string get_ProcessDescription();
    public CoreWebView2ProcessFailedKind get_ProcessFailedKind();
    public CoreWebView2ProcessFailedReason get_Reason();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedKind>")]
public enum Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedKind : Enum {
    public int value__;
    public static CoreWebView2ProcessFailedKind BrowserProcessExited;
    public static CoreWebView2ProcessFailedKind RenderProcessExited;
    public static CoreWebView2ProcessFailedKind RenderProcessUnresponsive;
    public static CoreWebView2ProcessFailedKind FrameRenderProcessExited;
    public static CoreWebView2ProcessFailedKind UtilityProcessExited;
    public static CoreWebView2ProcessFailedKind SandboxHelperProcessExited;
    public static CoreWebView2ProcessFailedKind GpuProcessExited;
    public static CoreWebView2ProcessFailedKind PpapiPluginProcessExited;
    public static CoreWebView2ProcessFailedKind PpapiBrokerProcessExited;
    public static CoreWebView2ProcessFailedKind UnknownProcessExited;
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedReason>")]
public enum Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedReason : Enum {
    public int value__;
    public static CoreWebView2ProcessFailedReason Unexpected;
    public static CoreWebView2ProcessFailedReason Unresponsive;
    public static CoreWebView2ProcessFailedReason Terminated;
    public static CoreWebView2ProcessFailedReason Crashed;
    public static CoreWebView2ProcessFailedReason LaunchFailed;
    public static CoreWebView2ProcessFailedReason OutOfMemory;
    public static CoreWebView2ProcessFailedReason ProfileDeleted;
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2ProcessInfo")]
[CoreWebView2ProcessInfoRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2ProcessInfo")]
public class Microsoft.Web.WebView2.Core.CoreWebView2ProcessInfo : object {
    private IObjectReference _inner;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalProcessInfo;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalProcessInfo { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ProcessInfo { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public IReadOnlyList`1<CoreWebView2FrameInfo> AssociatedFrameInfos { get; }
    public CoreWebView2ProcessKind Kind { get; }
    public int ProcessId { get; }
    internal CoreWebView2ProcessInfo(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalProcessInfo();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalProcessInfo();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ProcessInfo();
    public static CoreWebView2ProcessInfo FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2ProcessInfo x, CoreWebView2ProcessInfo y);
    public static bool op_Inequality(CoreWebView2ProcessInfo x, CoreWebView2ProcessInfo y);
    public sealed virtual bool Equals(CoreWebView2ProcessInfo other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public IReadOnlyList`1<CoreWebView2FrameInfo> get_AssociatedFrameInfos();
    public CoreWebView2ProcessKind get_Kind();
    public int get_ProcessId();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Web.WebView2.Core.CoreWebView2ProcessKind>")]
public enum Microsoft.Web.WebView2.Core.CoreWebView2ProcessKind : Enum {
    public int value__;
    public static CoreWebView2ProcessKind Browser;
    public static CoreWebView2ProcessKind Renderer;
    public static CoreWebView2ProcessKind Utility;
    public static CoreWebView2ProcessKind SandboxHelper;
    public static CoreWebView2ProcessKind Gpu;
    public static CoreWebView2ProcessKind PpapiPlugin;
    public static CoreWebView2ProcessKind PpapiBroker;
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2Profile")]
[CoreWebView2ProfileRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2Profile")]
public class Microsoft.Web.WebView2.Core.CoreWebView2Profile : object {
    private IObjectReference _inner;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_CoreWebView2Profile_Manual;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_CoreWebView2Profile_Manual2;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_CoreWebView2Profile_Manual3;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalProfile10;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalProfile11;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalProfile12;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalProfile2;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalProfile3;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalProfile4;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalProfile5;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalProfile6;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalProfile7;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalProfile8;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Profile2;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Profile3;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Profile4;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Profile5;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Profile6;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Profile7;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Profile8;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_CoreWebView2Profile_Manual { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_CoreWebView2Profile_Manual2 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_CoreWebView2Profile_Manual3 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalProfile10 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalProfile11 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalProfile12 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalProfile2 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalProfile3 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalProfile4 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalProfile5 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalProfile6 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalProfile7 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalProfile8 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Profile2 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Profile3 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Profile4 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Profile5 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Profile6 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Profile7 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Profile8 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Profile { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public CoreWebView2CookieManager CookieManager { get; }
    public string DefaultDownloadFolderPath { get; public set; }
    public bool IsGeneralAutofillEnabled { get; public set; }
    public bool IsInPrivateModeEnabled { get; }
    public bool IsPasswordAutosaveEnabled { get; public set; }
    public CoreWebView2PreferredColorScheme PreferredColorScheme { get; public set; }
    public CoreWebView2TrackingPreventionLevel PreferredTrackingPreventionLevel { get; public set; }
    public string ProfileName { get; }
    public string ProfilePath { get; }
    internal CoreWebView2Profile(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_CoreWebView2Profile_Manual();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_CoreWebView2Profile_Manual();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_CoreWebView2Profile_Manual2();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_CoreWebView2Profile_Manual2();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_CoreWebView2Profile_Manual3();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_CoreWebView2Profile_Manual3();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalProfile10();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalProfile10();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalProfile11();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalProfile11();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalProfile12();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalProfile12();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalProfile2();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalProfile2();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalProfile3();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalProfile3();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalProfile4();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalProfile4();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalProfile5();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalProfile5();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalProfile6();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalProfile6();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalProfile7();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalProfile7();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalProfile8();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalProfile8();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Profile2();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Profile2();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Profile3();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Profile3();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Profile4();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Profile4();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Profile5();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Profile5();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Profile6();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Profile6();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Profile7();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Profile7();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Profile8();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Profile8();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Profile();
    public static CoreWebView2Profile FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2Profile x, CoreWebView2Profile y);
    public static bool op_Inequality(CoreWebView2Profile x, CoreWebView2Profile y);
    public sealed virtual bool Equals(CoreWebView2Profile other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public IAsyncAction ClearBrowsingDataAsync(CoreWebView2BrowsingDataKinds dataKinds, DateTimeOffset startTime, DateTimeOffset endTime);
    public IAsyncAction ClearBrowsingDataAsync();
    public IAsyncOperation`1<IReadOnlyList`1<CoreWebView2PermissionSetting>> GetNonDefaultPermissionSettingsAsync();
    public IAsyncOperation`1<IReadOnlyList`1<CoreWebView2BrowserExtension>> GetBrowserExtensionsAsync();
    public IAsyncAction ClearCustomDataPartitionAsync(string CustomDataPartitionId);
    public IAsyncAction ClearBrowsingDataAsync(CoreWebView2BrowsingDataKinds dataKinds);
    public IAsyncAction SetPermissionStateAsync(CoreWebView2PermissionKind PermissionKind, string origin, CoreWebView2PermissionState State);
    public IAsyncOperation`1<CoreWebView2BrowserExtension> AddBrowserExtensionAsync(string extensionFolderPath);
    public void Delete();
    public void add_Deleted(TypedEventHandler`2<CoreWebView2Profile, object> value);
    public void remove_Deleted(TypedEventHandler`2<CoreWebView2Profile, object> value);
    public CoreWebView2CookieManager get_CookieManager();
    public string get_DefaultDownloadFolderPath();
    public void set_DefaultDownloadFolderPath(string value);
    public bool get_IsGeneralAutofillEnabled();
    public void set_IsGeneralAutofillEnabled(bool value);
    public bool get_IsInPrivateModeEnabled();
    public bool get_IsPasswordAutosaveEnabled();
    public void set_IsPasswordAutosaveEnabled(bool value);
    public CoreWebView2PreferredColorScheme get_PreferredColorScheme();
    public void set_PreferredColorScheme(CoreWebView2PreferredColorScheme value);
    public CoreWebView2TrackingPreventionLevel get_PreferredTrackingPreventionLevel();
    public void set_PreferredTrackingPreventionLevel(CoreWebView2TrackingPreventionLevel value);
    public string get_ProfileName();
    public string get_ProfilePath();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("B42BFAB4-C4BF-5469-89AC-CADC69E3B0F5")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2Profile_Manual")]
internal interface Microsoft.Web.WebView2.Core.CoreWebView2Profile_Manual {
    [OverloadAttribute("ClearBrowsingDataAsync")]
public abstract virtual IAsyncAction ClearBrowsingDataAsync(CoreWebView2BrowsingDataKinds dataKinds, DateTimeOffset startTime, DateTimeOffset endTime);
    [OverloadAttribute("ClearBrowsingDataAsync2")]
public abstract virtual IAsyncAction ClearBrowsingDataAsync();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("6E62815A-6269-5756-92C3-F08AFE17649C")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2Profile_Manual2")]
internal interface Microsoft.Web.WebView2.Core.CoreWebView2Profile_Manual2 {
    public abstract virtual IAsyncOperation`1<IReadOnlyList`1<CoreWebView2PermissionSetting>> GetNonDefaultPermissionSettingsAsync();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("C6129971-9ECC-5634-8896-723C1DBACD6F")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2Profile_Manual3")]
internal interface Microsoft.Web.WebView2.Core.CoreWebView2Profile_Manual3 {
    public abstract virtual IAsyncOperation`1<IReadOnlyList`1<CoreWebView2BrowserExtension>> GetBrowserExtensionsAsync();
}
[FlagsAttribute]
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Web.WebView2.Core.CoreWebView2ReleaseChannels>")]
public enum Microsoft.Web.WebView2.Core.CoreWebView2ReleaseChannels : Enum {
    public UInt32 value__;
    public static CoreWebView2ReleaseChannels None;
    public static CoreWebView2ReleaseChannels Stable;
    public static CoreWebView2ReleaseChannels Beta;
    public static CoreWebView2ReleaseChannels Dev;
    public static CoreWebView2ReleaseChannels Canary;
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Web.WebView2.Core.CoreWebView2SaveAsKind>")]
public enum Microsoft.Web.WebView2.Core.CoreWebView2SaveAsKind : Enum {
    public int value__;
    public static CoreWebView2SaveAsKind Default;
    public static CoreWebView2SaveAsKind HtmlOnly;
    public static CoreWebView2SaveAsKind SingleFile;
    public static CoreWebView2SaveAsKind Complete;
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Web.WebView2.Core.CoreWebView2SaveAsUIResult>")]
public enum Microsoft.Web.WebView2.Core.CoreWebView2SaveAsUIResult : Enum {
    public int value__;
    public static CoreWebView2SaveAsUIResult Success;
    public static CoreWebView2SaveAsUIResult InvalidPath;
    public static CoreWebView2SaveAsUIResult FileAlreadyExists;
    public static CoreWebView2SaveAsUIResult KindNotSupported;
    public static CoreWebView2SaveAsUIResult Cancelled;
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2SaveAsUIShowingEventArgs")]
[CoreWebView2SaveAsUIShowingEventArgsRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2SaveAsUIShowingEventArgs")]
public class Microsoft.Web.WebView2.Core.CoreWebView2SaveAsUIShowingEventArgs : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2SaveAsUIShowingEventArgs { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public bool AllowReplace { get; public set; }
    public bool Cancel { get; public set; }
    public string ContentMimeType { get; }
    public CoreWebView2SaveAsKind Kind { get; public set; }
    public string SaveAsFilePath { get; public set; }
    public bool SuppressDefaultDialog { get; public set; }
    internal CoreWebView2SaveAsUIShowingEventArgs(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2SaveAsUIShowingEventArgs();
    public static CoreWebView2SaveAsUIShowingEventArgs FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2SaveAsUIShowingEventArgs x, CoreWebView2SaveAsUIShowingEventArgs y);
    public static bool op_Inequality(CoreWebView2SaveAsUIShowingEventArgs x, CoreWebView2SaveAsUIShowingEventArgs y);
    public sealed virtual bool Equals(CoreWebView2SaveAsUIShowingEventArgs other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public Deferral GetDeferral();
    public bool get_AllowReplace();
    public void set_AllowReplace(bool value);
    public bool get_Cancel();
    public void set_Cancel(bool value);
    public string get_ContentMimeType();
    public CoreWebView2SaveAsKind get_Kind();
    public void set_Kind(CoreWebView2SaveAsKind value);
    public string get_SaveAsFilePath();
    public void set_SaveAsFilePath(string value);
    public bool get_SuppressDefaultDialog();
    public void set_SuppressDefaultDialog(bool value);
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2SaveFileSecurityCheckStartingEventArgs")]
[CoreWebView2SaveFileSecurityCheckStartingEventArgsRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2SaveFileSecurityCheckStartingEventArgs")]
public class Microsoft.Web.WebView2.Core.CoreWebView2SaveFileSecurityCheckStartingEventArgs : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2SaveFileSecurityCheckStartingEventArgs { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public bool CancelSave { get; public set; }
    public string DocumentOriginUri { get; }
    public string FileExtension { get; }
    public string FilePath { get; }
    public bool SuppressDefaultPolicy { get; public set; }
    internal CoreWebView2SaveFileSecurityCheckStartingEventArgs(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2SaveFileSecurityCheckStartingEventArgs();
    public static CoreWebView2SaveFileSecurityCheckStartingEventArgs FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2SaveFileSecurityCheckStartingEventArgs x, CoreWebView2SaveFileSecurityCheckStartingEventArgs y);
    public static bool op_Inequality(CoreWebView2SaveFileSecurityCheckStartingEventArgs x, CoreWebView2SaveFileSecurityCheckStartingEventArgs y);
    public sealed virtual bool Equals(CoreWebView2SaveFileSecurityCheckStartingEventArgs other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public Deferral GetDeferral();
    public bool get_CancelSave();
    public void set_CancelSave(bool value);
    public string get_DocumentOriginUri();
    public string get_FileExtension();
    public string get_FilePath();
    public bool get_SuppressDefaultPolicy();
    public void set_SuppressDefaultPolicy(bool value);
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2ScreenCaptureStartingEventArgs")]
[CoreWebView2ScreenCaptureStartingEventArgsRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2ScreenCaptureStartingEventArgs")]
public class Microsoft.Web.WebView2.Core.CoreWebView2ScreenCaptureStartingEventArgs : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ScreenCaptureStartingEventArgs { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public bool Cancel { get; public set; }
    public bool Handled { get; public set; }
    public CoreWebView2FrameInfo OriginalSourceFrameInfo { get; }
    internal CoreWebView2ScreenCaptureStartingEventArgs(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ScreenCaptureStartingEventArgs();
    public static CoreWebView2ScreenCaptureStartingEventArgs FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2ScreenCaptureStartingEventArgs x, CoreWebView2ScreenCaptureStartingEventArgs y);
    public static bool op_Inequality(CoreWebView2ScreenCaptureStartingEventArgs x, CoreWebView2ScreenCaptureStartingEventArgs y);
    public sealed virtual bool Equals(CoreWebView2ScreenCaptureStartingEventArgs other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public Deferral GetDeferral();
    public bool get_Cancel();
    public void set_Cancel(bool value);
    public bool get_Handled();
    public void set_Handled(bool value);
    public CoreWebView2FrameInfo get_OriginalSourceFrameInfo();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Web.WebView2.Core.CoreWebView2ScriptDialogKind>")]
public enum Microsoft.Web.WebView2.Core.CoreWebView2ScriptDialogKind : Enum {
    public int value__;
    public static CoreWebView2ScriptDialogKind Alert;
    public static CoreWebView2ScriptDialogKind Confirm;
    public static CoreWebView2ScriptDialogKind Prompt;
    public static CoreWebView2ScriptDialogKind Beforeunload;
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2ScriptDialogOpeningEventArgs")]
[CoreWebView2ScriptDialogOpeningEventArgsRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2ScriptDialogOpeningEventArgs")]
public class Microsoft.Web.WebView2.Core.CoreWebView2ScriptDialogOpeningEventArgs : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ScriptDialogOpeningEventArgs { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public string DefaultText { get; }
    public CoreWebView2ScriptDialogKind Kind { get; }
    public string Message { get; }
    public string ResultText { get; public set; }
    public string Uri { get; }
    internal CoreWebView2ScriptDialogOpeningEventArgs(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ScriptDialogOpeningEventArgs();
    public static CoreWebView2ScriptDialogOpeningEventArgs FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2ScriptDialogOpeningEventArgs x, CoreWebView2ScriptDialogOpeningEventArgs y);
    public static bool op_Inequality(CoreWebView2ScriptDialogOpeningEventArgs x, CoreWebView2ScriptDialogOpeningEventArgs y);
    public sealed virtual bool Equals(CoreWebView2ScriptDialogOpeningEventArgs other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public void Accept();
    public Deferral GetDeferral();
    public string get_DefaultText();
    public CoreWebView2ScriptDialogKind get_Kind();
    public string get_Message();
    public string get_ResultText();
    public void set_ResultText(string value);
    public string get_Uri();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2ScriptException")]
[CoreWebView2ScriptExceptionRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2ScriptException")]
public class Microsoft.Web.WebView2.Core.CoreWebView2ScriptException : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ScriptException { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public UInt32 ColumnNumber { get; }
    public UInt32 LineNumber { get; }
    public string Message { get; }
    public string Name { get; }
    public string ToJson { get; }
    internal CoreWebView2ScriptException(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ScriptException();
    public static CoreWebView2ScriptException FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2ScriptException x, CoreWebView2ScriptException y);
    public static bool op_Inequality(CoreWebView2ScriptException x, CoreWebView2ScriptException y);
    public sealed virtual bool Equals(CoreWebView2ScriptException other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public UInt32 get_ColumnNumber();
    public UInt32 get_LineNumber();
    public string get_Message();
    public string get_Name();
    public string get_ToJson();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Web.WebView2.Core.CoreWebView2ScrollbarStyle>")]
public enum Microsoft.Web.WebView2.Core.CoreWebView2ScrollbarStyle : Enum {
    public int value__;
    public static CoreWebView2ScrollbarStyle Default;
    public static CoreWebView2ScrollbarStyle FluentOverlay;
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Web.WebView2.Core.CoreWebView2ServerCertificateErrorAction>")]
public enum Microsoft.Web.WebView2.Core.CoreWebView2ServerCertificateErrorAction : Enum {
    public int value__;
    public static CoreWebView2ServerCertificateErrorAction AlwaysAllow;
    public static CoreWebView2ServerCertificateErrorAction Cancel;
    public static CoreWebView2ServerCertificateErrorAction Default;
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2ServerCertificateErrorDetectedEventArgs")]
[CoreWebView2ServerCertificateErrorDetectedEventArgsRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2ServerCertificateErrorDetectedEventArgs")]
public class Microsoft.Web.WebView2.Core.CoreWebView2ServerCertificateErrorDetectedEventArgs : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ServerCertificateErrorDetectedEventArgs { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public CoreWebView2ServerCertificateErrorAction Action { get; public set; }
    public CoreWebView2WebErrorStatus ErrorStatus { get; }
    public string RequestUri { get; }
    public CoreWebView2Certificate ServerCertificate { get; }
    internal CoreWebView2ServerCertificateErrorDetectedEventArgs(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ServerCertificateErrorDetectedEventArgs();
    public static CoreWebView2ServerCertificateErrorDetectedEventArgs FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2ServerCertificateErrorDetectedEventArgs x, CoreWebView2ServerCertificateErrorDetectedEventArgs y);
    public static bool op_Inequality(CoreWebView2ServerCertificateErrorDetectedEventArgs x, CoreWebView2ServerCertificateErrorDetectedEventArgs y);
    public sealed virtual bool Equals(CoreWebView2ServerCertificateErrorDetectedEventArgs other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public Deferral GetDeferral();
    public CoreWebView2ServerCertificateErrorAction get_Action();
    public void set_Action(CoreWebView2ServerCertificateErrorAction value);
    public CoreWebView2WebErrorStatus get_ErrorStatus();
    public string get_RequestUri();
    public CoreWebView2Certificate get_ServerCertificate();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2Settings")]
[CoreWebView2SettingsRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2Settings")]
public class Microsoft.Web.WebView2.Core.CoreWebView2Settings : object {
    private IObjectReference _inner;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalSettings;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalSettings2;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalSettings3;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalSettings4;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalSettings5;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalSettings6;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalSettings7;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalSettings8;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalSettings9;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Settings2;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Settings3;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Settings4;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Settings5;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Settings6;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Settings7;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Settings8;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Settings9;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Settings_Manual;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalSettings { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalSettings2 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalSettings3 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalSettings4 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalSettings5 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalSettings6 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalSettings7 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalSettings8 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalSettings9 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Settings2 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Settings3 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Settings4 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Settings5 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Settings6 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Settings7 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Settings8 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Settings9 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Settings_Manual { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Settings { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public bool AreBrowserAcceleratorKeysEnabled { get; public set; }
    public bool AreDefaultContextMenusEnabled { get; public set; }
    public bool AreDefaultScriptDialogsEnabled { get; public set; }
    public bool AreDevToolsEnabled { get; public set; }
    public bool AreHostObjectsAllowed { get; public set; }
    public CoreWebView2PdfToolbarItems HiddenPdfToolbarItems { get; public set; }
    public ICoreWebView2DispatchAdapter HostObjectDispatchAdapter { get; public set; }
    public bool IsBuiltInErrorPageEnabled { get; public set; }
    public bool IsGeneralAutofillEnabled { get; public set; }
    public bool IsNonClientRegionSupportEnabled { get; public set; }
    public bool IsPasswordAutosaveEnabled { get; public set; }
    public bool IsPinchZoomEnabled { get; public set; }
    public bool IsReputationCheckingRequired { get; public set; }
    public bool IsScriptEnabled { get; public set; }
    public bool IsStatusBarEnabled { get; public set; }
    public bool IsSwipeNavigationEnabled { get; public set; }
    public bool IsWebMessageEnabled { get; public set; }
    public bool IsZoomControlEnabled { get; public set; }
    public TimeSpan PreferredBackgroundTimerWakeInterval { get; public set; }
    public TimeSpan PreferredForegroundTimerWakeInterval { get; public set; }
    public TimeSpan PreferredIntensiveTimerWakeInterval { get; public set; }
    public TimeSpan PreferredOverrideTimerWakeInterval { get; public set; }
    public string UserAgent { get; public set; }
    internal CoreWebView2Settings(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalSettings();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalSettings();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalSettings2();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalSettings2();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalSettings3();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalSettings3();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalSettings4();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalSettings4();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalSettings5();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalSettings5();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalSettings6();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalSettings6();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalSettings7();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalSettings7();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalSettings8();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalSettings8();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalSettings9();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalSettings9();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Settings2();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Settings2();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Settings3();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Settings3();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Settings4();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Settings4();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Settings5();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Settings5();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Settings6();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Settings6();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Settings7();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Settings7();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Settings8();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Settings8();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Settings9();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Settings9();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Settings_Manual();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Settings_Manual();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Settings();
    public static CoreWebView2Settings FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2Settings x, CoreWebView2Settings y);
    public static bool op_Inequality(CoreWebView2Settings x, CoreWebView2Settings y);
    public sealed virtual bool Equals(CoreWebView2Settings other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public bool get_AreBrowserAcceleratorKeysEnabled();
    public void set_AreBrowserAcceleratorKeysEnabled(bool value);
    public bool get_AreDefaultContextMenusEnabled();
    public void set_AreDefaultContextMenusEnabled(bool value);
    public bool get_AreDefaultScriptDialogsEnabled();
    public void set_AreDefaultScriptDialogsEnabled(bool value);
    public bool get_AreDevToolsEnabled();
    public void set_AreDevToolsEnabled(bool value);
    public bool get_AreHostObjectsAllowed();
    public void set_AreHostObjectsAllowed(bool value);
    public CoreWebView2PdfToolbarItems get_HiddenPdfToolbarItems();
    public void set_HiddenPdfToolbarItems(CoreWebView2PdfToolbarItems value);
    public ICoreWebView2DispatchAdapter get_HostObjectDispatchAdapter();
    public void set_HostObjectDispatchAdapter(ICoreWebView2DispatchAdapter value);
    public bool get_IsBuiltInErrorPageEnabled();
    public void set_IsBuiltInErrorPageEnabled(bool value);
    public bool get_IsGeneralAutofillEnabled();
    public void set_IsGeneralAutofillEnabled(bool value);
    public bool get_IsNonClientRegionSupportEnabled();
    public void set_IsNonClientRegionSupportEnabled(bool value);
    public bool get_IsPasswordAutosaveEnabled();
    public void set_IsPasswordAutosaveEnabled(bool value);
    public bool get_IsPinchZoomEnabled();
    public void set_IsPinchZoomEnabled(bool value);
    public bool get_IsReputationCheckingRequired();
    public void set_IsReputationCheckingRequired(bool value);
    public bool get_IsScriptEnabled();
    public void set_IsScriptEnabled(bool value);
    public bool get_IsStatusBarEnabled();
    public void set_IsStatusBarEnabled(bool value);
    public bool get_IsSwipeNavigationEnabled();
    public void set_IsSwipeNavigationEnabled(bool value);
    public bool get_IsWebMessageEnabled();
    public void set_IsWebMessageEnabled(bool value);
    public bool get_IsZoomControlEnabled();
    public void set_IsZoomControlEnabled(bool value);
    public TimeSpan get_PreferredBackgroundTimerWakeInterval();
    public void set_PreferredBackgroundTimerWakeInterval(TimeSpan value);
    public TimeSpan get_PreferredForegroundTimerWakeInterval();
    public void set_PreferredForegroundTimerWakeInterval(TimeSpan value);
    public TimeSpan get_PreferredIntensiveTimerWakeInterval();
    public void set_PreferredIntensiveTimerWakeInterval(TimeSpan value);
    public TimeSpan get_PreferredOverrideTimerWakeInterval();
    public void set_PreferredOverrideTimerWakeInterval(TimeSpan value);
    public string get_UserAgent();
    public void set_UserAgent(string value);
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2SharedBuffer")]
[CoreWebView2SharedBufferRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2SharedBuffer")]
public class Microsoft.Web.WebView2.Core.CoreWebView2SharedBuffer : object {
    private IObjectReference _inner;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2SharedBuffer_Manual;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__System_IDisposable;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2SharedBuffer_Manual { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2SharedBuffer { get; }
    private IObjectReference _objRef_global__System_IDisposable { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public IMemoryBufferReference Buffer { get; }
    public ulong Size { get; }
    internal CoreWebView2SharedBuffer(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2SharedBuffer_Manual();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2SharedBuffer_Manual();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2SharedBuffer();
    private IObjectReference Make___objRef_global__System_IDisposable();
    private IObjectReference get__objRef_global__System_IDisposable();
    public static CoreWebView2SharedBuffer FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2SharedBuffer x, CoreWebView2SharedBuffer y);
    public static bool op_Inequality(CoreWebView2SharedBuffer x, CoreWebView2SharedBuffer y);
    public sealed virtual bool Equals(CoreWebView2SharedBuffer other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public IRandomAccessStream OpenStream();
    public sealed virtual void Dispose();
    public IMemoryBufferReference get_Buffer();
    public ulong get_Size();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Web.WebView2.Core.CoreWebView2SharedBufferAccess>")]
public enum Microsoft.Web.WebView2.Core.CoreWebView2SharedBufferAccess : Enum {
    public int value__;
    public static CoreWebView2SharedBufferAccess ReadOnly;
    public static CoreWebView2SharedBufferAccess ReadWrite;
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2SourceChangedEventArgs")]
[CoreWebView2SourceChangedEventArgsRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2SourceChangedEventArgs")]
public class Microsoft.Web.WebView2.Core.CoreWebView2SourceChangedEventArgs : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2SourceChangedEventArgs { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public bool IsNewDocument { get; }
    internal CoreWebView2SourceChangedEventArgs(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2SourceChangedEventArgs();
    public static CoreWebView2SourceChangedEventArgs FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2SourceChangedEventArgs x, CoreWebView2SourceChangedEventArgs y);
    public static bool op_Inequality(CoreWebView2SourceChangedEventArgs x, CoreWebView2SourceChangedEventArgs y);
    public sealed virtual bool Equals(CoreWebView2SourceChangedEventArgs other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public bool get_IsNewDocument();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Web.WebView2.Core.CoreWebView2TextDirectionKind>")]
public enum Microsoft.Web.WebView2.Core.CoreWebView2TextDirectionKind : Enum {
    public int value__;
    public static CoreWebView2TextDirectionKind Default;
    public static CoreWebView2TextDirectionKind LeftToRight;
    public static CoreWebView2TextDirectionKind RightToLeft;
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2Texture")]
[CoreWebView2TextureRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2Texture")]
public class Microsoft.Web.WebView2.Core.CoreWebView2Texture : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Texture { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public object Resource { get; }
    public ulong Timestamp { get; public set; }
    internal CoreWebView2Texture(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2Texture();
    public static CoreWebView2Texture FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2Texture x, CoreWebView2Texture y);
    public static bool op_Inequality(CoreWebView2Texture x, CoreWebView2Texture y);
    public sealed virtual bool Equals(CoreWebView2Texture other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public object get_Resource();
    public ulong get_Timestamp();
    public void set_Timestamp(ulong value);
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2TextureStream")]
[CoreWebView2TextureStreamRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2TextureStream")]
public class Microsoft.Web.WebView2.Core.CoreWebView2TextureStream : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2TextureStream { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public string Id { get; }
    internal CoreWebView2TextureStream(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2TextureStream();
    public static CoreWebView2TextureStream FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2TextureStream x, CoreWebView2TextureStream y);
    public static bool op_Inequality(CoreWebView2TextureStream x, CoreWebView2TextureStream y);
    public sealed virtual bool Equals(CoreWebView2TextureStream other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public void AddAllowedOrigin(string origin, int value);
    public void RemoveAllowedOrigin(string origin);
    public CoreWebView2Texture CreateTexture(UInt32 widthInTexels, UInt32 heightInTexels);
    public CoreWebView2Texture GetAvailableTexture();
    public void CloseTexture(CoreWebView2Texture texture);
    public void PresentTexture(CoreWebView2Texture texture);
    public void Stop();
    public void SetD3DDevice(object d3dDevice);
    public void add_ErrorReceived(TypedEventHandler`2<CoreWebView2TextureStream, CoreWebView2TextureStreamErrorReceivedEventArgs> value);
    public void remove_ErrorReceived(TypedEventHandler`2<CoreWebView2TextureStream, CoreWebView2TextureStreamErrorReceivedEventArgs> value);
    public void add_StartRequested(TypedEventHandler`2<CoreWebView2TextureStream, object> value);
    public void remove_StartRequested(TypedEventHandler`2<CoreWebView2TextureStream, object> value);
    public void add_Stopped(TypedEventHandler`2<CoreWebView2TextureStream, object> value);
    public void remove_Stopped(TypedEventHandler`2<CoreWebView2TextureStream, object> value);
    public void add_WebTextureReceived(TypedEventHandler`2<CoreWebView2TextureStream, CoreWebView2TextureStreamWebTextureReceivedEventArgs> value);
    public void remove_WebTextureReceived(TypedEventHandler`2<CoreWebView2TextureStream, CoreWebView2TextureStreamWebTextureReceivedEventArgs> value);
    public void add_WebTextureStreamStopped(TypedEventHandler`2<CoreWebView2TextureStream, object> value);
    public void remove_WebTextureStreamStopped(TypedEventHandler`2<CoreWebView2TextureStream, object> value);
    public string get_Id();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Web.WebView2.Core.CoreWebView2TextureStreamErrorKind>")]
public enum Microsoft.Web.WebView2.Core.CoreWebView2TextureStreamErrorKind : Enum {
    public int value__;
    public static CoreWebView2TextureStreamErrorKind NoVideoTrackStarted;
    public static CoreWebView2TextureStreamErrorKind TextureError;
    public static CoreWebView2TextureStreamErrorKind TextureInUse;
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2TextureStreamErrorReceivedEventArgs")]
[CoreWebView2TextureStreamErrorReceivedEventArgsRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2TextureStreamErrorReceivedEventArgs")]
public class Microsoft.Web.WebView2.Core.CoreWebView2TextureStreamErrorReceivedEventArgs : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2TextureStreamErrorReceivedEventArgs { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public CoreWebView2TextureStreamErrorKind Kind { get; }
    internal CoreWebView2TextureStreamErrorReceivedEventArgs(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2TextureStreamErrorReceivedEventArgs();
    public static CoreWebView2TextureStreamErrorReceivedEventArgs FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2TextureStreamErrorReceivedEventArgs x, CoreWebView2TextureStreamErrorReceivedEventArgs y);
    public static bool op_Inequality(CoreWebView2TextureStreamErrorReceivedEventArgs x, CoreWebView2TextureStreamErrorReceivedEventArgs y);
    public sealed virtual bool Equals(CoreWebView2TextureStreamErrorReceivedEventArgs other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public CoreWebView2TextureStreamErrorKind get_Kind();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2TextureStreamWebTextureReceivedEventArgs")]
[CoreWebView2TextureStreamWebTextureReceivedEventArgsRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2TextureStreamWebTextureReceivedEventArgs")]
public class Microsoft.Web.WebView2.Core.CoreWebView2TextureStreamWebTextureReceivedEventArgs : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2TextureStreamWebTextureReceivedEventArgs { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public CoreWebView2WebTexture WebTexture { get; }
    internal CoreWebView2TextureStreamWebTextureReceivedEventArgs(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2TextureStreamWebTextureReceivedEventArgs();
    public static CoreWebView2TextureStreamWebTextureReceivedEventArgs FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2TextureStreamWebTextureReceivedEventArgs x, CoreWebView2TextureStreamWebTextureReceivedEventArgs y);
    public static bool op_Inequality(CoreWebView2TextureStreamWebTextureReceivedEventArgs x, CoreWebView2TextureStreamWebTextureReceivedEventArgs y);
    public sealed virtual bool Equals(CoreWebView2TextureStreamWebTextureReceivedEventArgs other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public CoreWebView2WebTexture get_WebTexture();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Web.WebView2.Core.CoreWebView2TrackingPreventionLevel>")]
public enum Microsoft.Web.WebView2.Core.CoreWebView2TrackingPreventionLevel : Enum {
    public int value__;
    public static CoreWebView2TrackingPreventionLevel None;
    public static CoreWebView2TrackingPreventionLevel Basic;
    public static CoreWebView2TrackingPreventionLevel Balanced;
    public static CoreWebView2TrackingPreventionLevel Strict;
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2UpdateRuntimeResult")]
[CoreWebView2UpdateRuntimeResultRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2UpdateRuntimeResult")]
public class Microsoft.Web.WebView2.Core.CoreWebView2UpdateRuntimeResult : object {
    private IObjectReference _inner;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_CoreWebView2UpdateRuntimeResult_Manual;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_CoreWebView2UpdateRuntimeResult_Manual { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2UpdateRuntimeResult { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public Exception ExtendedError { get; }
    public CoreWebView2UpdateRuntimeStatus Status { get; }
    internal CoreWebView2UpdateRuntimeResult(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_CoreWebView2UpdateRuntimeResult_Manual();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_CoreWebView2UpdateRuntimeResult_Manual();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2UpdateRuntimeResult();
    public static CoreWebView2UpdateRuntimeResult FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2UpdateRuntimeResult x, CoreWebView2UpdateRuntimeResult y);
    public static bool op_Inequality(CoreWebView2UpdateRuntimeResult x, CoreWebView2UpdateRuntimeResult y);
    public sealed virtual bool Equals(CoreWebView2UpdateRuntimeResult other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public Exception get_ExtendedError();
    public CoreWebView2UpdateRuntimeStatus get_Status();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("43CF2386-5D1C-5EDA-B35A-9572E355233E")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2UpdateRuntimeResult_Manual")]
internal interface Microsoft.Web.WebView2.Core.CoreWebView2UpdateRuntimeResult_Manual {
    public Exception ExtendedError { get; }
    public abstract virtual Exception get_ExtendedError();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Web.WebView2.Core.CoreWebView2UpdateRuntimeStatus>")]
public enum Microsoft.Web.WebView2.Core.CoreWebView2UpdateRuntimeStatus : Enum {
    public int value__;
    public static CoreWebView2UpdateRuntimeStatus LatestVersionInstalled;
    public static CoreWebView2UpdateRuntimeStatus UpdateAlreadyRunning;
    public static CoreWebView2UpdateRuntimeStatus BlockedByPolicy;
    public static CoreWebView2UpdateRuntimeStatus Failed;
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Web.WebView2.Core.CoreWebView2WebErrorStatus>")]
public enum Microsoft.Web.WebView2.Core.CoreWebView2WebErrorStatus : Enum {
    public int value__;
    public static CoreWebView2WebErrorStatus Unknown;
    public static CoreWebView2WebErrorStatus CertificateCommonNameIsIncorrect;
    public static CoreWebView2WebErrorStatus CertificateExpired;
    public static CoreWebView2WebErrorStatus ClientCertificateContainsErrors;
    public static CoreWebView2WebErrorStatus CertificateRevoked;
    public static CoreWebView2WebErrorStatus CertificateIsInvalid;
    public static CoreWebView2WebErrorStatus ServerUnreachable;
    public static CoreWebView2WebErrorStatus Timeout;
    public static CoreWebView2WebErrorStatus ErrorHttpInvalidServerResponse;
    public static CoreWebView2WebErrorStatus ConnectionAborted;
    public static CoreWebView2WebErrorStatus ConnectionReset;
    public static CoreWebView2WebErrorStatus Disconnected;
    public static CoreWebView2WebErrorStatus CannotConnect;
    public static CoreWebView2WebErrorStatus HostNameNotResolved;
    public static CoreWebView2WebErrorStatus OperationCanceled;
    public static CoreWebView2WebErrorStatus RedirectFailed;
    public static CoreWebView2WebErrorStatus UnexpectedError;
    public static CoreWebView2WebErrorStatus ValidAuthenticationCredentialsRequired;
    public static CoreWebView2WebErrorStatus ValidProxyAuthenticationRequired;
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2WebMessageReceivedEventArgs")]
[CoreWebView2WebMessageReceivedEventArgsRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2WebMessageReceivedEventArgs")]
public class Microsoft.Web.WebView2.Core.CoreWebView2WebMessageReceivedEventArgs : object {
    private IObjectReference _inner;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalWebMessageReceivedEventArgs;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2WebMessageReceivedEventArgs2;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalWebMessageReceivedEventArgs { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2WebMessageReceivedEventArgs2 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2WebMessageReceivedEventArgs { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public IReadOnlyList`1<object> AdditionalObjects { get; }
    public string Source { get; }
    public string WebMessageAsJson { get; }
    internal CoreWebView2WebMessageReceivedEventArgs(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalWebMessageReceivedEventArgs();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalWebMessageReceivedEventArgs();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2WebMessageReceivedEventArgs2();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2WebMessageReceivedEventArgs2();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2WebMessageReceivedEventArgs();
    public static CoreWebView2WebMessageReceivedEventArgs FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2WebMessageReceivedEventArgs x, CoreWebView2WebMessageReceivedEventArgs y);
    public static bool op_Inequality(CoreWebView2WebMessageReceivedEventArgs x, CoreWebView2WebMessageReceivedEventArgs y);
    public sealed virtual bool Equals(CoreWebView2WebMessageReceivedEventArgs other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public string TryGetWebMessageAsString();
    public IReadOnlyList`1<object> get_AdditionalObjects();
    public string get_Source();
    public string get_WebMessageAsJson();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Web.WebView2.Core.CoreWebView2WebResourceContext>")]
public enum Microsoft.Web.WebView2.Core.CoreWebView2WebResourceContext : Enum {
    public int value__;
    public static CoreWebView2WebResourceContext All;
    public static CoreWebView2WebResourceContext Document;
    public static CoreWebView2WebResourceContext Stylesheet;
    public static CoreWebView2WebResourceContext Image;
    public static CoreWebView2WebResourceContext Media;
    public static CoreWebView2WebResourceContext Font;
    public static CoreWebView2WebResourceContext Script;
    public static CoreWebView2WebResourceContext XmlHttpRequest;
    public static CoreWebView2WebResourceContext Fetch;
    public static CoreWebView2WebResourceContext TextTrack;
    public static CoreWebView2WebResourceContext EventSource;
    public static CoreWebView2WebResourceContext Websocket;
    public static CoreWebView2WebResourceContext Manifest;
    public static CoreWebView2WebResourceContext SignedExchange;
    public static CoreWebView2WebResourceContext Ping;
    public static CoreWebView2WebResourceContext CspViolationReport;
    public static CoreWebView2WebResourceContext Other;
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequest")]
[CoreWebView2WebResourceRequestRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceRequest")]
public class Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequest : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2WebResourceRequest { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public IRandomAccessStream Content { get; public set; }
    public CoreWebView2HttpRequestHeaders Headers { get; }
    public string Method { get; public set; }
    public string Uri { get; public set; }
    internal CoreWebView2WebResourceRequest(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2WebResourceRequest();
    public static CoreWebView2WebResourceRequest FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2WebResourceRequest x, CoreWebView2WebResourceRequest y);
    public static bool op_Inequality(CoreWebView2WebResourceRequest x, CoreWebView2WebResourceRequest y);
    public sealed virtual bool Equals(CoreWebView2WebResourceRequest other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public IRandomAccessStream get_Content();
    public void set_Content(IRandomAccessStream value);
    public CoreWebView2HttpRequestHeaders get_Headers();
    public string get_Method();
    public void set_Method(string value);
    public string get_Uri();
    public void set_Uri(string value);
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequestedEventArgs")]
[CoreWebView2WebResourceRequestedEventArgsRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceRequestedEventArgs")]
public class Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequestedEventArgs : object {
    private IObjectReference _inner;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalWebResourceRequestedEventArgs;
    private IObjectReference modreq(System.Runtime.CompilerServices.IsVolatile) ___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2WebResourceRequestedEventArgs2;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalWebResourceRequestedEventArgs { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2WebResourceRequestedEventArgs2 { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2WebResourceRequestedEventArgs { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public CoreWebView2WebResourceRequest Request { get; }
    public CoreWebView2WebResourceRequestSourceKinds RequestedSourceKind { get; }
    public CoreWebView2WebResourceContext ResourceContext { get; }
    public CoreWebView2WebResourceResponse Response { get; public set; }
    internal CoreWebView2WebResourceRequestedEventArgs(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalWebResourceRequestedEventArgs();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2ExperimentalWebResourceRequestedEventArgs();
    private IObjectReference Make___objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2WebResourceRequestedEventArgs2();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2WebResourceRequestedEventArgs2();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2WebResourceRequestedEventArgs();
    public static CoreWebView2WebResourceRequestedEventArgs FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2WebResourceRequestedEventArgs x, CoreWebView2WebResourceRequestedEventArgs y);
    public static bool op_Inequality(CoreWebView2WebResourceRequestedEventArgs x, CoreWebView2WebResourceRequestedEventArgs y);
    public sealed virtual bool Equals(CoreWebView2WebResourceRequestedEventArgs other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public Deferral GetDeferral();
    public CoreWebView2WebResourceRequest get_Request();
    public CoreWebView2WebResourceRequestSourceKinds get_RequestedSourceKind();
    public CoreWebView2WebResourceContext get_ResourceContext();
    public CoreWebView2WebResourceResponse get_Response();
    public void set_Response(CoreWebView2WebResourceResponse value);
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[FlagsAttribute]
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WinRTExposedTypeAttribute("WinRT.EnumTypeDetails`1<Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequestSourceKinds>")]
public enum Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequestSourceKinds : Enum {
    public UInt32 value__;
    public static CoreWebView2WebResourceRequestSourceKinds None;
    public static CoreWebView2WebResourceRequestSourceKinds Document;
    public static CoreWebView2WebResourceRequestSourceKinds SharedWorker;
    public static CoreWebView2WebResourceRequestSourceKinds ServiceWorker;
    public static CoreWebView2WebResourceRequestSourceKinds All;
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponse")]
[CoreWebView2WebResourceResponseRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceResponse")]
public class Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponse : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2WebResourceResponse { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public IRandomAccessStream Content { get; public set; }
    public CoreWebView2HttpResponseHeaders Headers { get; }
    public string ReasonPhrase { get; public set; }
    public int StatusCode { get; public set; }
    internal CoreWebView2WebResourceResponse(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2WebResourceResponse();
    public static CoreWebView2WebResourceResponse FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2WebResourceResponse x, CoreWebView2WebResourceResponse y);
    public static bool op_Inequality(CoreWebView2WebResourceResponse x, CoreWebView2WebResourceResponse y);
    public sealed virtual bool Equals(CoreWebView2WebResourceResponse other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public IRandomAccessStream get_Content();
    public void set_Content(IRandomAccessStream value);
    public CoreWebView2HttpResponseHeaders get_Headers();
    public string get_ReasonPhrase();
    public void set_ReasonPhrase(string value);
    public int get_StatusCode();
    public void set_StatusCode(int value);
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponseReceivedEventArgs")]
[CoreWebView2WebResourceResponseReceivedEventArgsRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceResponseReceivedEventArgs")]
public class Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponseReceivedEventArgs : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2WebResourceResponseReceivedEventArgs { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public CoreWebView2WebResourceRequest Request { get; }
    public CoreWebView2WebResourceResponseView Response { get; }
    internal CoreWebView2WebResourceResponseReceivedEventArgs(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2WebResourceResponseReceivedEventArgs();
    public static CoreWebView2WebResourceResponseReceivedEventArgs FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2WebResourceResponseReceivedEventArgs x, CoreWebView2WebResourceResponseReceivedEventArgs y);
    public static bool op_Inequality(CoreWebView2WebResourceResponseReceivedEventArgs x, CoreWebView2WebResourceResponseReceivedEventArgs y);
    public sealed virtual bool Equals(CoreWebView2WebResourceResponseReceivedEventArgs other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public CoreWebView2WebResourceRequest get_Request();
    public CoreWebView2WebResourceResponseView get_Response();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponseView")]
[CoreWebView2WebResourceResponseViewRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceResponseView")]
public class Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponseView : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2WebResourceResponseView { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public CoreWebView2HttpResponseHeaders Headers { get; }
    public string ReasonPhrase { get; }
    public int StatusCode { get; }
    internal CoreWebView2WebResourceResponseView(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2WebResourceResponseView();
    public static CoreWebView2WebResourceResponseView FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2WebResourceResponseView x, CoreWebView2WebResourceResponseView y);
    public static bool op_Inequality(CoreWebView2WebResourceResponseView x, CoreWebView2WebResourceResponseView y);
    public sealed virtual bool Equals(CoreWebView2WebResourceResponseView other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public IAsyncOperation`1<IRandomAccessStream> GetContentAsync();
    public CoreWebView2HttpResponseHeaders get_Headers();
    public string get_ReasonPhrase();
    public int get_StatusCode();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2WebTexture")]
[CoreWebView2WebTextureRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2WebTexture")]
public class Microsoft.Web.WebView2.Core.CoreWebView2WebTexture : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2WebTexture { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public object Resource { get; }
    public ulong Timestamp { get; }
    internal CoreWebView2WebTexture(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2WebTexture();
    public static CoreWebView2WebTexture FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2WebTexture x, CoreWebView2WebTexture y);
    public static bool op_Inequality(CoreWebView2WebTexture x, CoreWebView2WebTexture y);
    public sealed virtual bool Equals(CoreWebView2WebTexture other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public object get_Resource();
    public ulong get_Timestamp();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.CoreWebView2WindowFeatures")]
[CoreWebView2WindowFeaturesRcwFactoryAttribute]
[ProjectedRuntimeClassAttribute("Microsoft.Web.WebView2.Core.ICoreWebView2WindowFeatures")]
public class Microsoft.Web.WebView2.Core.CoreWebView2WindowFeatures : object {
    private IObjectReference _inner;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _queryInterfaceCache;
    private ConcurrentDictionary`2 modreq(System.Runtime.CompilerServices.IsVolatile) _additionalTypeData;
    private IntPtr ThisPtr { get; }
    private IObjectReference _objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2WindowFeatures { get; }
    private bool WinRT.IWinRTObject.HasUnwrappableNativeObject { get; }
    private IObjectReference WinRT.IWinRTObject.NativeObject { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.QueryInterfaceCache { get; }
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.AdditionalTypeData { get; }
    public bool HasPosition { get; }
    public bool HasSize { get; }
    public UInt32 Height { get; }
    public UInt32 Left { get; }
    public bool ShouldDisplayMenuBar { get; }
    public bool ShouldDisplayScrollBars { get; }
    public bool ShouldDisplayStatus { get; }
    public bool ShouldDisplayToolbar { get; }
    public UInt32 Top { get; }
    public UInt32 Width { get; }
    internal CoreWebView2WindowFeatures(IObjectReference objRef);
    private IntPtr get_ThisPtr();
    private IObjectReference get__objRef_global__Microsoft_Web_WebView2_Core_ICoreWebView2WindowFeatures();
    public static CoreWebView2WindowFeatures FromAbi(IntPtr thisPtr);
    public static bool op_Equality(CoreWebView2WindowFeatures x, CoreWebView2WindowFeatures y);
    public static bool op_Inequality(CoreWebView2WindowFeatures x, CoreWebView2WindowFeatures y);
    public sealed virtual bool Equals(CoreWebView2WindowFeatures other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override bool WinRT.IWinRTObject.get_HasUnwrappableNativeObject();
    private sealed virtual override IObjectReference WinRT.IWinRTObject.get_NativeObject();
    private ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> MakeQueryInterfaceCache();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, IObjectReference> WinRT.IWinRTObject.get_QueryInterfaceCache();
    private ConcurrentDictionary`2<RuntimeTypeHandle, object> MakeAdditionalTypeData();
    private sealed virtual override ConcurrentDictionary`2<RuntimeTypeHandle, object> WinRT.IWinRTObject.get_AdditionalTypeData();
    public bool get_HasPosition();
    public bool get_HasSize();
    public UInt32 get_Height();
    public UInt32 get_Left();
    public bool get_ShouldDisplayMenuBar();
    public bool get_ShouldDisplayScrollBars();
    public bool get_ShouldDisplayStatus();
    public bool get_ShouldDisplayToolbar();
    public UInt32 get_Top();
    public UInt32 get_Width();
    private bool IsOverridableInterface(Guid iid);
    private sealed virtual override CustomQueryInterfaceResult global::System.Runtime.InteropServices.ICustomQueryInterface.GetInterface(Guid& iid, IntPtr& ppv);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("3A3F559A-E5E9-5338-BB67-4EB0504A4F14")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2 {
    public UInt32 BrowserProcessId { get; }
    public bool CanGoBack { get; }
    public bool CanGoForward { get; }
    public bool ContainsFullScreenElement { get; }
    public string DocumentTitle { get; }
    public CoreWebView2Settings Settings { get; }
    public string Source { get; }
    public abstract virtual void Navigate(string uri);
    public abstract virtual void NavigateToString(string htmlContent);
    public abstract virtual IAsyncOperation`1<string> AddScriptToExecuteOnDocumentCreatedAsync(string javaScript);
    public abstract virtual void RemoveScriptToExecuteOnDocumentCreated(string id);
    public abstract virtual IAsyncOperation`1<string> ExecuteScriptAsync(string javaScript);
    public abstract virtual IAsyncAction CapturePreviewAsync(CoreWebView2CapturePreviewImageFormat imageFormat, IRandomAccessStream imageStream);
    public abstract virtual void Reload();
    public abstract virtual void PostWebMessageAsJson(string webMessageAsJson);
    public abstract virtual void PostWebMessageAsString(string webMessageAsString);
    public abstract virtual IAsyncOperation`1<string> CallDevToolsProtocolMethodAsync(string methodName, string parametersAsJson);
    public abstract virtual void GoBack();
    public abstract virtual void GoForward();
    public abstract virtual CoreWebView2DevToolsProtocolEventReceiver GetDevToolsProtocolEventReceiver(string eventName);
    public abstract virtual void Stop();
    public abstract virtual void AddHostObjectToScript(string name, object rawObject);
    public abstract virtual void RemoveHostObjectFromScript(string name);
    public abstract virtual void OpenDevToolsWindow();
    public abstract virtual void AddWebResourceRequestedFilter(string uri, CoreWebView2WebResourceContext ResourceContext);
    public abstract virtual void RemoveWebResourceRequestedFilter(string uri, CoreWebView2WebResourceContext ResourceContext);
    public abstract virtual UInt32 get_BrowserProcessId();
    public abstract virtual bool get_CanGoBack();
    public abstract virtual bool get_CanGoForward();
    public abstract virtual bool get_ContainsFullScreenElement();
    public abstract virtual string get_DocumentTitle();
    public abstract virtual CoreWebView2Settings get_Settings();
    public abstract virtual string get_Source();
    [CompilerGeneratedAttribute]
public abstract virtual void add_ContainsFullScreenElementChanged(TypedEventHandler`2<CoreWebView2, object> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_ContainsFullScreenElementChanged(TypedEventHandler`2<CoreWebView2, object> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_ContentLoading(TypedEventHandler`2<CoreWebView2, CoreWebView2ContentLoadingEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_ContentLoading(TypedEventHandler`2<CoreWebView2, CoreWebView2ContentLoadingEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_DocumentTitleChanged(TypedEventHandler`2<CoreWebView2, object> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_DocumentTitleChanged(TypedEventHandler`2<CoreWebView2, object> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_FrameNavigationCompleted(TypedEventHandler`2<CoreWebView2, CoreWebView2NavigationCompletedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_FrameNavigationCompleted(TypedEventHandler`2<CoreWebView2, CoreWebView2NavigationCompletedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_FrameNavigationStarting(TypedEventHandler`2<CoreWebView2, CoreWebView2NavigationStartingEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_FrameNavigationStarting(TypedEventHandler`2<CoreWebView2, CoreWebView2NavigationStartingEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_HistoryChanged(TypedEventHandler`2<CoreWebView2, object> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_HistoryChanged(TypedEventHandler`2<CoreWebView2, object> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_NavigationCompleted(TypedEventHandler`2<CoreWebView2, CoreWebView2NavigationCompletedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_NavigationCompleted(TypedEventHandler`2<CoreWebView2, CoreWebView2NavigationCompletedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_NavigationStarting(TypedEventHandler`2<CoreWebView2, CoreWebView2NavigationStartingEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_NavigationStarting(TypedEventHandler`2<CoreWebView2, CoreWebView2NavigationStartingEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_NewWindowRequested(TypedEventHandler`2<CoreWebView2, CoreWebView2NewWindowRequestedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_NewWindowRequested(TypedEventHandler`2<CoreWebView2, CoreWebView2NewWindowRequestedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_PermissionRequested(TypedEventHandler`2<CoreWebView2, CoreWebView2PermissionRequestedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_PermissionRequested(TypedEventHandler`2<CoreWebView2, CoreWebView2PermissionRequestedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_ProcessFailed(TypedEventHandler`2<CoreWebView2, CoreWebView2ProcessFailedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_ProcessFailed(TypedEventHandler`2<CoreWebView2, CoreWebView2ProcessFailedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_ScriptDialogOpening(TypedEventHandler`2<CoreWebView2, CoreWebView2ScriptDialogOpeningEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_ScriptDialogOpening(TypedEventHandler`2<CoreWebView2, CoreWebView2ScriptDialogOpeningEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_SourceChanged(TypedEventHandler`2<CoreWebView2, CoreWebView2SourceChangedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_SourceChanged(TypedEventHandler`2<CoreWebView2, CoreWebView2SourceChangedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_WebMessageReceived(TypedEventHandler`2<CoreWebView2, CoreWebView2WebMessageReceivedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_WebMessageReceived(TypedEventHandler`2<CoreWebView2, CoreWebView2WebMessageReceivedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_WebResourceRequested(TypedEventHandler`2<CoreWebView2, CoreWebView2WebResourceRequestedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_WebResourceRequested(TypedEventHandler`2<CoreWebView2, CoreWebView2WebResourceRequestedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_WindowCloseRequested(TypedEventHandler`2<CoreWebView2, object> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_WindowCloseRequested(TypedEventHandler`2<CoreWebView2, object> value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("A7B20434-970F-54B1-AA63-3C42671FA9AB")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_10")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2_10 {
    [CompilerGeneratedAttribute]
public abstract virtual void add_BasicAuthenticationRequested(TypedEventHandler`2<CoreWebView2, CoreWebView2BasicAuthenticationRequestedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_BasicAuthenticationRequested(TypedEventHandler`2<CoreWebView2, CoreWebView2BasicAuthenticationRequestedEventArgs> value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("C00ACBB1-AE32-501F-AD19-9D0AC32D6142")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_11")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2_11 {
    public abstract virtual IAsyncOperation`1<string> CallDevToolsProtocolMethodForSessionAsync(string sessionId, string methodName, string parametersAsJson);
    [CompilerGeneratedAttribute]
public abstract virtual void add_ContextMenuRequested(TypedEventHandler`2<CoreWebView2, CoreWebView2ContextMenuRequestedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_ContextMenuRequested(TypedEventHandler`2<CoreWebView2, CoreWebView2ContextMenuRequestedEventArgs> value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("DBBBE9A1-18D3-5F67-B362-0F4AE937D754")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_12")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2_12 {
    public string StatusBarText { get; }
    public abstract virtual string get_StatusBarText();
    [CompilerGeneratedAttribute]
public abstract virtual void add_StatusBarTextChanged(TypedEventHandler`2<CoreWebView2, object> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_StatusBarTextChanged(TypedEventHandler`2<CoreWebView2, object> value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("314B5846-DBC7-5DE4-A792-647EA0F3296A")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_13")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2_13 {
    public CoreWebView2Profile Profile { get; }
    public abstract virtual CoreWebView2Profile get_Profile();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("A7647B24-3B1E-50A9-BE24-6E8AC63FE491")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_14")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2_14 {
    public abstract virtual IAsyncAction ClearServerCertificateErrorActionsAsync();
    [CompilerGeneratedAttribute]
public abstract virtual void add_ServerCertificateErrorDetected(TypedEventHandler`2<CoreWebView2, CoreWebView2ServerCertificateErrorDetectedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_ServerCertificateErrorDetected(TypedEventHandler`2<CoreWebView2, CoreWebView2ServerCertificateErrorDetectedEventArgs> value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("4443F532-D2BA-5AE2-A9B3-8DE62BD5D4A9")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_15")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2_15 {
    public string FaviconUri { get; }
    public abstract virtual IAsyncOperation`1<IRandomAccessStream> GetFaviconAsync(CoreWebView2FaviconImageFormat format);
    public abstract virtual string get_FaviconUri();
    [CompilerGeneratedAttribute]
public abstract virtual void add_FaviconChanged(TypedEventHandler`2<CoreWebView2, object> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_FaviconChanged(TypedEventHandler`2<CoreWebView2, object> value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("61D0A57C-6C4F-50FF-A137-314B0099A2B8")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_16")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2_16 {
    public abstract virtual IAsyncOperation`1<CoreWebView2PrintStatus> PrintAsync(CoreWebView2PrintSettings printSettings);
    public abstract virtual void ShowPrintUI(CoreWebView2PrintDialogKind printDialogKind);
    public abstract virtual IAsyncOperation`1<IRandomAccessStream> PrintToPdfStreamAsync(CoreWebView2PrintSettings printSettings);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("2345F9DB-5488-559A-82AF-9086CC4F7988")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_17")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2_17 {
    public abstract virtual void PostSharedBufferToScript(CoreWebView2SharedBuffer sharedBuffer, CoreWebView2SharedBufferAccess access, string additionalDataAsJson);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("94F52E61-9D75-5A81-ACD3-830FF29CE6F7")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_18")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2_18 {
    [CompilerGeneratedAttribute]
public abstract virtual void add_LaunchingExternalUriScheme(TypedEventHandler`2<CoreWebView2, CoreWebView2LaunchingExternalUriSchemeEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_LaunchingExternalUriScheme(TypedEventHandler`2<CoreWebView2, CoreWebView2LaunchingExternalUriSchemeEventArgs> value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("35A94A5C-E027-5DC5-8C2B-C2FC7D589159")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_19")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2_19 {
    public CoreWebView2MemoryUsageTargetLevel MemoryUsageTargetLevel { get; public set; }
    public abstract virtual CoreWebView2MemoryUsageTargetLevel get_MemoryUsageTargetLevel();
    public abstract virtual void set_MemoryUsageTargetLevel(CoreWebView2MemoryUsageTargetLevel value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("578CB133-2873-5408-BD9E-389BBE9FA7FA")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_2")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2_2 {
    public CoreWebView2CookieManager CookieManager { get; }
    public CoreWebView2Environment Environment { get; }
    public abstract virtual void NavigateWithWebResourceRequest(CoreWebView2WebResourceRequest Request);
    public abstract virtual CoreWebView2CookieManager get_CookieManager();
    public abstract virtual CoreWebView2Environment get_Environment();
    [CompilerGeneratedAttribute]
public abstract virtual void add_DOMContentLoaded(TypedEventHandler`2<CoreWebView2, CoreWebView2DOMContentLoadedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_DOMContentLoaded(TypedEventHandler`2<CoreWebView2, CoreWebView2DOMContentLoadedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_WebResourceResponseReceived(TypedEventHandler`2<CoreWebView2, CoreWebView2WebResourceResponseReceivedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_WebResourceResponseReceived(TypedEventHandler`2<CoreWebView2, CoreWebView2WebResourceResponseReceivedEventArgs> value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("859C4805-E988-50D5-85D7-A50643FC815E")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_20")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2_20 {
    public UInt32 FrameId { get; }
    public abstract virtual UInt32 get_FrameId();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("F7FC7705-7922-5ABC-9E24-C64F1C14B185")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_21")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2_21 {
    public abstract virtual IAsyncOperation`1<CoreWebView2ExecuteScriptResult> ExecuteScriptWithResultAsync(string javaScript);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("D58AA4CF-9B67-5419-8565-F401A98FEEB2")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_22")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2_22 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("D6767391-FDFE-5B95-96AE-11DE6B8726DD")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_23")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2_23 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("469056B8-E78D-55ED-9AF1-207A7F60911F")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_24")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2_24 {
    [CompilerGeneratedAttribute]
public abstract virtual void add_NotificationReceived(TypedEventHandler`2<CoreWebView2, CoreWebView2NotificationReceivedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_NotificationReceived(TypedEventHandler`2<CoreWebView2, CoreWebView2NotificationReceivedEventArgs> value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("B8E2EDCE-D943-5871-8397-483DBD6C0F9E")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_25")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2_25 {
    public abstract virtual IAsyncOperation`1<CoreWebView2SaveAsUIResult> ShowSaveAsUIAsync();
    [CompilerGeneratedAttribute]
public abstract virtual void add_SaveAsUIShowing(TypedEventHandler`2<CoreWebView2, CoreWebView2SaveAsUIShowingEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_SaveAsUIShowing(TypedEventHandler`2<CoreWebView2, CoreWebView2SaveAsUIShowingEventArgs> value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("A8C76AE7-6170-5DFE-8F00-79CD76A9B4D9")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_3")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2_3 {
    public bool IsSuspended { get; }
    public abstract virtual IAsyncOperation`1<bool> TrySuspendAsync();
    public abstract virtual void Resume();
    public abstract virtual void SetVirtualHostNameToFolderMapping(string hostName, string folderPath, CoreWebView2HostResourceAccessKind accessKind);
    public abstract virtual void ClearVirtualHostNameToFolderMapping(string hostName);
    public abstract virtual bool get_IsSuspended();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("4AC595CE-1502-5775-B2C8-22C11A369C25")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_4")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2_4 {
    [CompilerGeneratedAttribute]
public abstract virtual void add_DownloadStarting(TypedEventHandler`2<CoreWebView2, CoreWebView2DownloadStartingEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_DownloadStarting(TypedEventHandler`2<CoreWebView2, CoreWebView2DownloadStartingEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_FrameCreated(TypedEventHandler`2<CoreWebView2, CoreWebView2FrameCreatedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_FrameCreated(TypedEventHandler`2<CoreWebView2, CoreWebView2FrameCreatedEventArgs> value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("DD6AF643-220C-5DC6-B0A8-22C41E472595")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_5")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2_5 {
    [CompilerGeneratedAttribute]
public abstract virtual void add_ClientCertificateRequested(TypedEventHandler`2<CoreWebView2, CoreWebView2ClientCertificateRequestedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_ClientCertificateRequested(TypedEventHandler`2<CoreWebView2, CoreWebView2ClientCertificateRequestedEventArgs> value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("92B34B96-853D-5BB6-AC52-30297CE805F1")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_6")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2_6 {
    public abstract virtual void OpenTaskManagerWindow();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("F9B7107A-2E09-5596-A033-911BA12315F7")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_7")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2_7 {
    public abstract virtual IAsyncOperation`1<bool> PrintToPdfAsync(string ResultFilePath, CoreWebView2PrintSettings printSettings);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("AA2503C0-8D1C-5A3D-B898-F55F7595268A")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_8")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2_8 {
    public bool IsDocumentPlayingAudio { get; }
    public bool IsMuted { get; public set; }
    public abstract virtual bool get_IsDocumentPlayingAudio();
    public abstract virtual bool get_IsMuted();
    public abstract virtual void set_IsMuted(bool value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_IsDocumentPlayingAudioChanged(TypedEventHandler`2<CoreWebView2, object> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_IsDocumentPlayingAudioChanged(TypedEventHandler`2<CoreWebView2, object> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_IsMutedChanged(TypedEventHandler`2<CoreWebView2, object> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_IsMutedChanged(TypedEventHandler`2<CoreWebView2, object> value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("64B2EC16-0B29-5216-BF86-E575C88F7031")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_9")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2_9 {
    public CoreWebView2DefaultDownloadDialogCornerAlignment DefaultDownloadDialogCornerAlignment { get; public set; }
    public Point DefaultDownloadDialogMargin { get; public set; }
    public bool IsDefaultDownloadDialogOpen { get; }
    public abstract virtual void OpenDefaultDownloadDialog();
    public abstract virtual void CloseDefaultDownloadDialog();
    public abstract virtual CoreWebView2DefaultDownloadDialogCornerAlignment get_DefaultDownloadDialogCornerAlignment();
    public abstract virtual void set_DefaultDownloadDialogCornerAlignment(CoreWebView2DefaultDownloadDialogCornerAlignment value);
    public abstract virtual Point get_DefaultDownloadDialogMargin();
    public abstract virtual void set_DefaultDownloadDialogMargin(Point value);
    public abstract virtual bool get_IsDefaultDownloadDialogOpen();
    [CompilerGeneratedAttribute]
public abstract virtual void add_IsDefaultDownloadDialogOpenChanged(TypedEventHandler`2<CoreWebView2, object> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_IsDefaultDownloadDialogOpenChanged(TypedEventHandler`2<CoreWebView2, object> value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("2D988546-9962-516B-BE53-859FB0F50179")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_Manual")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2_Manual {
    public abstract virtual void AddWebResourceRequestedFilter(string uri, CoreWebView2WebResourceContext resourceContext, CoreWebView2WebResourceRequestSourceKinds requestSourceKinds);
    public abstract virtual void RemoveWebResourceRequestedFilter(string uri, CoreWebView2WebResourceContext resourceContext, CoreWebView2WebResourceRequestSourceKinds requestSourceKinds);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("57D0C484-F304-52D4-85A6-68CFAFD63B61")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2_Manual2")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2_Manual2 {
    public abstract virtual void PostWebMessageAsJson(string webMessageAsJson, IReadOnlyList`1<object> additionalObjects);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("41A56100-92A5-59D1-9E71-9222E33AE38B")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2AcceleratorKeyPressedEventArgs")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2AcceleratorKeyPressedEventArgs {
    public bool Handled { get; public set; }
    public CoreWebView2KeyEventKind KeyEventKind { get; }
    public int KeyEventLParam { get; }
    public CoreWebView2PhysicalKeyStatus PhysicalKeyStatus { get; }
    public UInt32 VirtualKey { get; }
    public abstract virtual bool get_Handled();
    public abstract virtual void set_Handled(bool value);
    public abstract virtual CoreWebView2KeyEventKind get_KeyEventKind();
    public abstract virtual int get_KeyEventLParam();
    public abstract virtual CoreWebView2PhysicalKeyStatus get_PhysicalKeyStatus();
    public abstract virtual UInt32 get_VirtualKey();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("4D03AA18-806D-5F10-9AD8-CF5D327A58FB")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2AcceleratorKeyPressedEventArgs2")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2AcceleratorKeyPressedEventArgs2 {
    public bool IsBrowserAcceleratorKeyEnabled { get; public set; }
    public abstract virtual bool get_IsBrowserAcceleratorKeyEnabled();
    public abstract virtual void set_IsBrowserAcceleratorKeyEnabled(bool value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("4B16330C-4CA5-555E-AF21-164334405F63")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2BasicAuthenticationRequestedEventArgs")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2BasicAuthenticationRequestedEventArgs {
    public bool Cancel { get; public set; }
    public string Challenge { get; }
    public CoreWebView2BasicAuthenticationResponse Response { get; }
    public string Uri { get; }
    public abstract virtual Deferral GetDeferral();
    public abstract virtual bool get_Cancel();
    public abstract virtual void set_Cancel(bool value);
    public abstract virtual string get_Challenge();
    public abstract virtual CoreWebView2BasicAuthenticationResponse get_Response();
    public abstract virtual string get_Uri();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("08DF33B9-6E38-5962-9FFD-CAAB3C30FBC1")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2BasicAuthenticationResponse")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2BasicAuthenticationResponse {
    public string Password { get; public set; }
    public string UserName { get; public set; }
    public abstract virtual string get_Password();
    public abstract virtual void set_Password(string value);
    public abstract virtual string get_UserName();
    public abstract virtual void set_UserName(string value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("BF991443-EE4F-57B8-BF2C-81CD6DBE1153")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2BrowserExtension")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2BrowserExtension {
    public string Id { get; }
    public bool IsEnabled { get; }
    public string Name { get; }
    public abstract virtual IAsyncAction RemoveAsync();
    public abstract virtual IAsyncAction EnableAsync(bool IsEnabled);
    public abstract virtual string get_Id();
    public abstract virtual bool get_IsEnabled();
    public abstract virtual string get_Name();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("79963F77-1484-5A46-B91F-DFC5C1A0CE14")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2BrowserProcessExitedEventArgs")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2BrowserProcessExitedEventArgs {
    public CoreWebView2BrowserProcessExitKind BrowserProcessExitKind { get; }
    public UInt32 BrowserProcessId { get; }
    public abstract virtual CoreWebView2BrowserProcessExitKind get_BrowserProcessExitKind();
    public abstract virtual UInt32 get_BrowserProcessId();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("414A3B75-1BC1-55E1-9926-268C0A3462C7")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Certificate")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Certificate {
    public string DerEncodedSerialNumber { get; }
    public string DisplayName { get; }
    public string Issuer { get; }
    public IReadOnlyList`1<string> PemEncodedIssuerCertificateChain { get; }
    public string Subject { get; }
    public double ValidFrom { get; }
    public double ValidTo { get; }
    public abstract virtual string ToPemEncoding();
    public abstract virtual string get_DerEncodedSerialNumber();
    public abstract virtual string get_DisplayName();
    public abstract virtual string get_Issuer();
    public abstract virtual IReadOnlyList`1<string> get_PemEncodedIssuerCertificateChain();
    public abstract virtual string get_Subject();
    public abstract virtual double get_ValidFrom();
    public abstract virtual double get_ValidTo();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("091B39F2-68DF-52B4-8FB0-FD3561AF41F2")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ClientCertificate")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ClientCertificate {
    public string DerEncodedSerialNumber { get; }
    public string DisplayName { get; }
    public string Issuer { get; }
    public CoreWebView2ClientCertificateKind Kind { get; }
    public IReadOnlyList`1<string> PemEncodedIssuerCertificateChain { get; }
    public string Subject { get; }
    public double ValidFrom { get; }
    public double ValidTo { get; }
    public abstract virtual string ToPemEncoding();
    public abstract virtual string get_DerEncodedSerialNumber();
    public abstract virtual string get_DisplayName();
    public abstract virtual string get_Issuer();
    public abstract virtual CoreWebView2ClientCertificateKind get_Kind();
    public abstract virtual IReadOnlyList`1<string> get_PemEncodedIssuerCertificateChain();
    public abstract virtual string get_Subject();
    public abstract virtual double get_ValidFrom();
    public abstract virtual double get_ValidTo();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("93287B55-31F9-55A0-B68B-D9841D7E1BF4")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ClientCertificateRequestedEventArgs")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ClientCertificateRequestedEventArgs {
    public IReadOnlyList`1<string> AllowedCertificateAuthorities { get; }
    public bool Cancel { get; public set; }
    public bool Handled { get; public set; }
    public string Host { get; }
    public bool IsProxy { get; }
    public IReadOnlyList`1<CoreWebView2ClientCertificate> MutuallyTrustedCertificates { get; }
    public int Port { get; }
    public CoreWebView2ClientCertificate SelectedCertificate { get; public set; }
    public abstract virtual Deferral GetDeferral();
    public abstract virtual IReadOnlyList`1<string> get_AllowedCertificateAuthorities();
    public abstract virtual bool get_Cancel();
    public abstract virtual void set_Cancel(bool value);
    public abstract virtual bool get_Handled();
    public abstract virtual void set_Handled(bool value);
    public abstract virtual string get_Host();
    public abstract virtual bool get_IsProxy();
    public abstract virtual IReadOnlyList`1<CoreWebView2ClientCertificate> get_MutuallyTrustedCertificates();
    public abstract virtual int get_Port();
    public abstract virtual CoreWebView2ClientCertificate get_SelectedCertificate();
    public abstract virtual void set_SelectedCertificate(CoreWebView2ClientCertificate value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("31BBB153-11B2-58E8-9BEB-69F5C8E14420")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2CompositionController")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2CompositionController {
    public CoreCursor Cursor { get; }
    public object RootVisualTarget { get; public set; }
    public abstract virtual void SendMouseInput(CoreWebView2MouseEventKind eventKind, CoreWebView2MouseEventVirtualKeys virtualKeys, UInt32 mouseData, Point point);
    public abstract virtual void SendPointerInput(CoreWebView2PointerEventKind eventKind, CoreWebView2PointerInfo pointerInfo);
    public abstract virtual DataPackageOperation DragEnter(CoreDragInfo dragInfo, CoreDragUIOverride dragUIOverride);
    public abstract virtual DataPackageOperation DragOver(CoreDragInfo dragInfo, CoreDragUIOverride dragUIOverride);
    public abstract virtual DataPackageOperation Drop(CoreDragInfo dragInfo);
    public abstract virtual CoreCursor get_Cursor();
    public abstract virtual object get_RootVisualTarget();
    public abstract virtual void set_RootVisualTarget(object value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_CursorChanged(TypedEventHandler`2<CoreWebView2CompositionController, object> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_CursorChanged(TypedEventHandler`2<CoreWebView2CompositionController, object> value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("8CEF61B9-FA55-547D-AAE6-7BCAED4249A2")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2CompositionController2")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2CompositionController2 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("BBBECDCF-0F03-50F0-8F85-9CBF6C9BBE10")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2CompositionController3")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2CompositionController3 {
    public abstract virtual void DragLeave();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("C950CB84-2648-5AD5-BADD-BFE659682FB6")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2CompositionController4")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2CompositionController4 {
    public abstract virtual CoreWebView2NonClientRegionKind GetNonClientRegionAtPoint(Point point);
    public abstract virtual IReadOnlyList`1<Rect> QueryNonClientRegion(CoreWebView2NonClientRegionKind Kind);
    [CompilerGeneratedAttribute]
public abstract virtual void add_NonClientRegionChanged(TypedEventHandler`2<CoreWebView2CompositionController, CoreWebView2NonClientRegionChangedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_NonClientRegionChanged(TypedEventHandler`2<CoreWebView2CompositionController, CoreWebView2NonClientRegionChangedEventArgs> value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("4DF0AB1F-7F2A-573B-B81A-B9B531224736")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2CompositionControllerStatics")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2CompositionControllerStatics {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("48A321E7-4F40-526E-837E-1EB0C477B69D")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2CompositionControllerStatics2_Manual")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2CompositionControllerStatics2_Manual {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("6CF95373-946C-5DAE-9B3E-0FE23D5AA29F")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ContentLoadingEventArgs")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ContentLoadingEventArgs {
    public bool IsErrorPage { get; }
    public ulong NavigationId { get; }
    public abstract virtual bool get_IsErrorPage();
    public abstract virtual ulong get_NavigationId();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("2A65706F-941A-52CD-8651-A165586B0ABF")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ContextMenuItem")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ContextMenuItem {
    public IList`1<CoreWebView2ContextMenuItem> Children { get; }
    public int CommandId { get; }
    public IRandomAccessStream Icon { get; }
    public bool IsChecked { get; public set; }
    public bool IsEnabled { get; public set; }
    public CoreWebView2ContextMenuItemKind Kind { get; }
    public string Label { get; }
    public string Name { get; }
    public string ShortcutKeyDescription { get; }
    public abstract virtual IList`1<CoreWebView2ContextMenuItem> get_Children();
    public abstract virtual int get_CommandId();
    public abstract virtual IRandomAccessStream get_Icon();
    public abstract virtual bool get_IsChecked();
    public abstract virtual void set_IsChecked(bool value);
    public abstract virtual bool get_IsEnabled();
    public abstract virtual void set_IsEnabled(bool value);
    public abstract virtual CoreWebView2ContextMenuItemKind get_Kind();
    public abstract virtual string get_Label();
    public abstract virtual string get_Name();
    public abstract virtual string get_ShortcutKeyDescription();
    [CompilerGeneratedAttribute]
public abstract virtual void add_CustomItemSelected(TypedEventHandler`2<CoreWebView2ContextMenuItem, object> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_CustomItemSelected(TypedEventHandler`2<CoreWebView2ContextMenuItem, object> value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("D77BDD8C-9B3E-596E-AE80-320C0DF4ECBC")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ContextMenuRequestedEventArgs")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ContextMenuRequestedEventArgs {
    public CoreWebView2ContextMenuTarget ContextMenuTarget { get; }
    public bool Handled { get; public set; }
    public Point Location { get; }
    public IList`1<CoreWebView2ContextMenuItem> MenuItems { get; }
    public int SelectedCommandId { get; public set; }
    public abstract virtual Deferral GetDeferral();
    public abstract virtual CoreWebView2ContextMenuTarget get_ContextMenuTarget();
    public abstract virtual bool get_Handled();
    public abstract virtual void set_Handled(bool value);
    public abstract virtual Point get_Location();
    public abstract virtual IList`1<CoreWebView2ContextMenuItem> get_MenuItems();
    public abstract virtual int get_SelectedCommandId();
    public abstract virtual void set_SelectedCommandId(int value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("41E24E6A-4612-5BD9-8E61-E9280615205E")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ContextMenuTarget")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ContextMenuTarget {
    public string FrameUri { get; }
    public bool HasLinkText { get; }
    public bool HasLinkUri { get; }
    public bool HasSelection { get; }
    public bool HasSourceUri { get; }
    public bool IsEditable { get; }
    public bool IsRequestedForMainFrame { get; }
    public CoreWebView2ContextMenuTargetKind Kind { get; }
    public string LinkText { get; }
    public string LinkUri { get; }
    public string PageUri { get; }
    public string SelectionText { get; }
    public string SourceUri { get; }
    public abstract virtual string get_FrameUri();
    public abstract virtual bool get_HasLinkText();
    public abstract virtual bool get_HasLinkUri();
    public abstract virtual bool get_HasSelection();
    public abstract virtual bool get_HasSourceUri();
    public abstract virtual bool get_IsEditable();
    public abstract virtual bool get_IsRequestedForMainFrame();
    public abstract virtual CoreWebView2ContextMenuTargetKind get_Kind();
    public abstract virtual string get_LinkText();
    public abstract virtual string get_LinkUri();
    public abstract virtual string get_PageUri();
    public abstract virtual string get_SelectionText();
    public abstract virtual string get_SourceUri();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("A588121C-53BF-590E-80E5-29D729CBD743")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Controller")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Controller {
    public Rect Bounds { get; public set; }
    public CoreWebView2 CoreWebView2 { get; }
    public bool IsVisible { get; public set; }
    public CoreWebView2ControllerWindowReference ParentWindow { get; public set; }
    public double ZoomFactor { get; public set; }
    public abstract virtual void SetBoundsAndZoomFactor(Rect Bounds, double ZoomFactor);
    public abstract virtual void MoveFocus(CoreWebView2MoveFocusReason reason);
    public abstract virtual void NotifyParentWindowPositionChanged();
    public abstract virtual void Close();
    public abstract virtual Rect get_Bounds();
    public abstract virtual void set_Bounds(Rect value);
    public abstract virtual CoreWebView2 get_CoreWebView2();
    public abstract virtual bool get_IsVisible();
    public abstract virtual void set_IsVisible(bool value);
    public abstract virtual CoreWebView2ControllerWindowReference get_ParentWindow();
    public abstract virtual void set_ParentWindow(CoreWebView2ControllerWindowReference value);
    public abstract virtual double get_ZoomFactor();
    public abstract virtual void set_ZoomFactor(double value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_AcceleratorKeyPressed(TypedEventHandler`2<CoreWebView2Controller, CoreWebView2AcceleratorKeyPressedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_AcceleratorKeyPressed(TypedEventHandler`2<CoreWebView2Controller, CoreWebView2AcceleratorKeyPressedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_GotFocus(TypedEventHandler`2<CoreWebView2Controller, object> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_GotFocus(TypedEventHandler`2<CoreWebView2Controller, object> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_LostFocus(TypedEventHandler`2<CoreWebView2Controller, object> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_LostFocus(TypedEventHandler`2<CoreWebView2Controller, object> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_MoveFocusRequested(TypedEventHandler`2<CoreWebView2Controller, CoreWebView2MoveFocusRequestedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_MoveFocusRequested(TypedEventHandler`2<CoreWebView2Controller, CoreWebView2MoveFocusRequestedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_ZoomFactorChanged(TypedEventHandler`2<CoreWebView2Controller, object> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_ZoomFactorChanged(TypedEventHandler`2<CoreWebView2Controller, object> value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("0069C40B-2E8A-513F-9D9D-E0C2B64F7200")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Controller2")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Controller2 {
    public Color DefaultBackgroundColor { get; public set; }
    public abstract virtual Color get_DefaultBackgroundColor();
    public abstract virtual void set_DefaultBackgroundColor(Color value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("E5BAE214-791A-5D13-9B76-A257D9FDA2AC")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Controller3")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Controller3 {
    public CoreWebView2BoundsMode BoundsMode { get; public set; }
    public double RasterizationScale { get; public set; }
    public bool ShouldDetectMonitorScaleChanges { get; public set; }
    public abstract virtual CoreWebView2BoundsMode get_BoundsMode();
    public abstract virtual void set_BoundsMode(CoreWebView2BoundsMode value);
    public abstract virtual double get_RasterizationScale();
    public abstract virtual void set_RasterizationScale(double value);
    public abstract virtual bool get_ShouldDetectMonitorScaleChanges();
    public abstract virtual void set_ShouldDetectMonitorScaleChanges(bool value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_RasterizationScaleChanged(TypedEventHandler`2<CoreWebView2Controller, object> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_RasterizationScaleChanged(TypedEventHandler`2<CoreWebView2Controller, object> value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("94E2862D-4638-54BA-92CF-E31A31499B78")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Controller4")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Controller4 {
    public bool AllowExternalDrop { get; public set; }
    public abstract virtual bool get_AllowExternalDrop();
    public abstract virtual void set_AllowExternalDrop(bool value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("270B2C5B-C3A9-53D8-A5CA-262EA9EA62E8")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ControllerFactory")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ControllerFactory {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("3337E821-3606-5A0E-8E2F-0C1E57D743F7")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ControllerOptions")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ControllerOptions {
    public bool IsInPrivateModeEnabled { get; public set; }
    public string ProfileName { get; public set; }
    public abstract virtual bool get_IsInPrivateModeEnabled();
    public abstract virtual void set_IsInPrivateModeEnabled(bool value);
    public abstract virtual string get_ProfileName();
    public abstract virtual void set_ProfileName(string value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("41B69E93-CC17-5C7D-A0C8-FA21C27AADB6")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ControllerOptions2")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ControllerOptions2 {
    public string ScriptLocale { get; public set; }
    public abstract virtual string get_ScriptLocale();
    public abstract virtual void set_ScriptLocale(string value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("0FEDDAD4-48A3-5CC4-9F61-E7ADFD1E9C76")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ControllerWindowReference")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ControllerWindowReference {
    public CoreWindow CoreWindow { get; }
    public ulong WindowHandle { get; }
    public abstract virtual CoreWindow get_CoreWindow();
    public abstract virtual ulong get_WindowHandle();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("DDF6EBF1-EBC6-5A34-9008-661C3A2EB767")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ControllerWindowReferenceStatics")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ControllerWindowReferenceStatics {
    public abstract virtual CoreWebView2ControllerWindowReference CreateFromWindowHandle(ulong windowHandle);
    public abstract virtual CoreWebView2ControllerWindowReference CreateFromCoreWindow(CoreWindow coreWindow);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("52F670FE-8CA2-5AAD-AEDB-25F7903B7038")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Cookie")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Cookie {
    public string Domain { get; }
    public double Expires { get; public set; }
    public bool IsHttpOnly { get; public set; }
    public bool IsSecure { get; public set; }
    public bool IsSession { get; }
    public string Name { get; }
    public string Path { get; }
    public CoreWebView2CookieSameSiteKind SameSite { get; public set; }
    public string Value { get; public set; }
    public abstract virtual string get_Domain();
    public abstract virtual double get_Expires();
    public abstract virtual void set_Expires(double value);
    public abstract virtual bool get_IsHttpOnly();
    public abstract virtual void set_IsHttpOnly(bool value);
    public abstract virtual bool get_IsSecure();
    public abstract virtual void set_IsSecure(bool value);
    public abstract virtual bool get_IsSession();
    public abstract virtual string get_Name();
    public abstract virtual string get_Path();
    public abstract virtual CoreWebView2CookieSameSiteKind get_SameSite();
    public abstract virtual void set_SameSite(CoreWebView2CookieSameSiteKind value);
    public abstract virtual string get_Value();
    public abstract virtual void set_Value(string value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("4098F516-ADCA-5563-AAA5-D7AFFD847AA3")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2CookieManager")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2CookieManager {
    public abstract virtual CoreWebView2Cookie CreateCookie(string name, string value, string Domain, string Path);
    public abstract virtual CoreWebView2Cookie CopyCookie(CoreWebView2Cookie cookieParam);
    public abstract virtual void AddOrUpdateCookie(CoreWebView2Cookie cookie);
    public abstract virtual void DeleteCookie(CoreWebView2Cookie cookie);
    public abstract virtual void DeleteCookies(string name, string uri);
    public abstract virtual void DeleteCookiesWithDomainAndPath(string name, string Domain, string Path);
    public abstract virtual void DeleteAllCookies();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("9BCCA0EA-7225-577A-BB23-C7C98023154E")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2CookieManager_Manual")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2CookieManager_Manual {
    public abstract virtual IAsyncOperation`1<IReadOnlyList`1<CoreWebView2Cookie>> GetCookiesAsync(string uri);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("16DC60D9-DDEC-5C3D-BC1F-4408D1875AF1")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2CustomSchemeRegistration")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2CustomSchemeRegistration {
    public bool HasAuthorityComponent { get; public set; }
    public int TreatAsSecure { get; public set; }
    public abstract virtual bool get_HasAuthorityComponent();
    public abstract virtual void set_HasAuthorityComponent(bool value);
    public abstract virtual int get_TreatAsSecure();
    public abstract virtual void set_TreatAsSecure(int value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("074FF15C-7D7F-5101-A02E-C077C5E21C41")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2CustomSchemeRegistration_Manual")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2CustomSchemeRegistration_Manual {
    public IList`1<string> AllowedOrigins { get; }
    public string SchemeName { get; }
    public abstract virtual IList`1<string> get_AllowedOrigins();
    public abstract virtual string get_SchemeName();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("309DDDFA-FF3E-5D8D-A18A-C1341F325EA7")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2CustomSchemeRegistrationFactory")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2CustomSchemeRegistrationFactory {
    public abstract virtual CoreWebView2CustomSchemeRegistration CreateInstance(string schemeName);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("B6A4B41D-FD18-59FA-923A-C57555D960CE")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2DevToolsProtocolEventReceivedEventArgs")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2DevToolsProtocolEventReceivedEventArgs {
    public string ParameterObjectAsJson { get; }
    public abstract virtual string get_ParameterObjectAsJson();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("221728BA-635E-50D2-BD3C-FD22F4113978")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2DevToolsProtocolEventReceivedEventArgs2")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2DevToolsProtocolEventReceivedEventArgs2 {
    public string SessionId { get; }
    public abstract virtual string get_SessionId();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("B2A2BE79-65FC-5537-8715-3D92BF31090B")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2DevToolsProtocolEventReceiver")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2DevToolsProtocolEventReceiver {
    [CompilerGeneratedAttribute]
public abstract virtual void add_DevToolsProtocolEventReceived(TypedEventHandler`2<CoreWebView2, CoreWebView2DevToolsProtocolEventReceivedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_DevToolsProtocolEventReceived(TypedEventHandler`2<CoreWebView2, CoreWebView2DevToolsProtocolEventReceivedEventArgs> value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("7888A42D-18F3-5966-80CB-8CC25351BD0A")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2DispatchAdapter")]
public interface Microsoft.Web.WebView2.Core.ICoreWebView2DispatchAdapter {
    public abstract virtual object WrapNamedObject(string name, ICoreWebView2DispatchAdapter adapter);
    public abstract virtual object WrapObject(object unwrapped, ICoreWebView2DispatchAdapter adapter);
    public abstract virtual object UnwrapObject(object wrapped);
    public abstract virtual void Clean();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("C474D0A3-24AC-59FC-B78B-DA7562A6A052")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2DOMContentLoadedEventArgs")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2DOMContentLoadedEventArgs {
    public ulong NavigationId { get; }
    public abstract virtual ulong get_NavigationId();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("AFE73E6B-E760-5A06-9BF6-1E743C13CD2D")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2DownloadOperation")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2DownloadOperation {
    public long BytesReceived { get; }
    public bool CanResume { get; }
    public string ContentDisposition { get; }
    public string EstimatedEndTime { get; }
    public CoreWebView2DownloadInterruptReason InterruptReason { get; }
    public string MimeType { get; }
    public string ResultFilePath { get; }
    public CoreWebView2DownloadState State { get; }
    public long TotalBytesToReceive { get; }
    public string Uri { get; }
    public abstract virtual void Cancel();
    public abstract virtual void Pause();
    public abstract virtual void Resume();
    public abstract virtual long get_BytesReceived();
    public abstract virtual bool get_CanResume();
    public abstract virtual string get_ContentDisposition();
    public abstract virtual string get_EstimatedEndTime();
    public abstract virtual CoreWebView2DownloadInterruptReason get_InterruptReason();
    public abstract virtual string get_MimeType();
    public abstract virtual string get_ResultFilePath();
    public abstract virtual CoreWebView2DownloadState get_State();
    public abstract virtual long get_TotalBytesToReceive();
    public abstract virtual string get_Uri();
    [CompilerGeneratedAttribute]
public abstract virtual void add_BytesReceivedChanged(TypedEventHandler`2<CoreWebView2DownloadOperation, object> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_BytesReceivedChanged(TypedEventHandler`2<CoreWebView2DownloadOperation, object> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_EstimatedEndTimeChanged(TypedEventHandler`2<CoreWebView2DownloadOperation, object> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_EstimatedEndTimeChanged(TypedEventHandler`2<CoreWebView2DownloadOperation, object> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_StateChanged(TypedEventHandler`2<CoreWebView2DownloadOperation, object> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_StateChanged(TypedEventHandler`2<CoreWebView2DownloadOperation, object> value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("45D982BA-9256-5B35-B023-26A438599110")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2DownloadStartingEventArgs")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2DownloadStartingEventArgs {
    public bool Cancel { get; public set; }
    public CoreWebView2DownloadOperation DownloadOperation { get; }
    public bool Handled { get; public set; }
    public string ResultFilePath { get; public set; }
    public abstract virtual Deferral GetDeferral();
    public abstract virtual bool get_Cancel();
    public abstract virtual void set_Cancel(bool value);
    public abstract virtual CoreWebView2DownloadOperation get_DownloadOperation();
    public abstract virtual bool get_Handled();
    public abstract virtual void set_Handled(bool value);
    public abstract virtual string get_ResultFilePath();
    public abstract virtual void set_ResultFilePath(string value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("D8CC7831-B783-556B-B9CE-899C1E95D585")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Environment")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Environment {
    public string BrowserVersionString { get; }
    public abstract virtual IAsyncOperation`1<CoreWebView2Controller> CreateCoreWebView2ControllerAsync(CoreWebView2ControllerWindowReference ParentWindow);
    public abstract virtual CoreWebView2WebResourceResponse CreateWebResourceResponse(IRandomAccessStream Content, int StatusCode, string ReasonPhrase, string Headers);
    public abstract virtual string get_BrowserVersionString();
    [CompilerGeneratedAttribute]
public abstract virtual void add_NewBrowserVersionAvailable(TypedEventHandler`2<CoreWebView2Environment, object> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_NewBrowserVersionAvailable(TypedEventHandler`2<CoreWebView2Environment, object> value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("F51CFABE-73AD-5635-A935-6386AEF9238E")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Environment_Manual")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Environment_Manual {
    public abstract virtual IAsyncOperation`1<CoreWebView2Controller> CreateCoreWebView2ControllerAsync(CoreWebView2ControllerWindowReference ParentWindow, CoreWebView2ControllerOptions options);
    public abstract virtual IAsyncOperation`1<CoreWebView2CompositionController> CreateCoreWebView2CompositionControllerAsync(CoreWebView2ControllerWindowReference ParentWindow, CoreWebView2ControllerOptions options);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("C224E69C-1EFD-5ECC-ADC8-2B52E7B97CE5")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Environment10")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Environment10 {
    public abstract virtual CoreWebView2ControllerOptions CreateCoreWebView2ControllerOptions();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("DA23D64C-8B61-5B6C-8581-F6A688ABD7CD")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Environment11")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Environment11 {
    public string FailureReportFolderPath { get; }
    public abstract virtual string get_FailureReportFolderPath();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("82531DDB-BE63-5254-812F-880D9F0EC54E")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Environment12")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Environment12 {
    public abstract virtual CoreWebView2SharedBuffer CreateSharedBuffer(ulong Size);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("22C97F2F-8A28-5794-941C-A25BCC3CF47E")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Environment13")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Environment13 {
    public abstract virtual IAsyncOperation`1<IReadOnlyList`1<CoreWebView2ProcessExtendedInfo>> GetProcessExtendedInfosAsync();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("39F9505F-0D1F-5284-9FA9-9DBD818973FA")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Environment14")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Environment14 {
    public abstract virtual CoreWebView2FileSystemHandle CreateWebFileSystemFileHandle(string Path, CoreWebView2FileSystemHandlePermission Permission);
    public abstract virtual CoreWebView2FileSystemHandle CreateWebFileSystemDirectoryHandle(string Path, CoreWebView2FileSystemHandlePermission Permission);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("0B634668-1017-5FC7-9921-F1F51866A8C0")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Environment2")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Environment2 {
    public abstract virtual CoreWebView2WebResourceRequest CreateWebResourceRequest(string uri, string Method, IRandomAccessStream postData, string Headers);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("5E33F46C-C0B9-5126-8840-17F9C11B3A8A")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Environment3")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Environment3 {
    public abstract virtual IAsyncOperation`1<CoreWebView2CompositionController> CreateCoreWebView2CompositionControllerAsync(CoreWebView2ControllerWindowReference ParentWindow);
    public abstract virtual CoreWebView2PointerInfo CreateCoreWebView2PointerInfo();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("6DB697DA-EEBD-5818-8790-1FE57EF319E2")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Environment4")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Environment4 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("F33399AF-E4D3-59DC-AC38-8397AADCEDB1")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Environment5")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Environment5 {
    [CompilerGeneratedAttribute]
public abstract virtual void add_BrowserProcessExited(TypedEventHandler`2<CoreWebView2Environment, CoreWebView2BrowserProcessExitedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_BrowserProcessExited(TypedEventHandler`2<CoreWebView2Environment, CoreWebView2BrowserProcessExitedEventArgs> value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("965D538F-5958-5D98-8972-F622021DF402")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Environment6")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Environment6 {
    public abstract virtual CoreWebView2PrintSettings CreatePrintSettings();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("E1F44FE2-FC54-5383-A383-C87E1DA96B83")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Environment7")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Environment7 {
    public string UserDataFolder { get; }
    public abstract virtual string get_UserDataFolder();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("DB67C807-D0DB-5980-A3A9-75EF8F63D6F6")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Environment8")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Environment8 {
    public abstract virtual IReadOnlyList`1<CoreWebView2ProcessInfo> GetProcessInfos();
    [CompilerGeneratedAttribute]
public abstract virtual void add_ProcessInfosChanged(TypedEventHandler`2<CoreWebView2Environment, object> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_ProcessInfosChanged(TypedEventHandler`2<CoreWebView2Environment, object> value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("C8213EC7-7DC9-5468-A88B-15C6B7144478")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Environment9")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Environment9 {
    public abstract virtual CoreWebView2ContextMenuItem CreateContextMenuItem(string Label, IRandomAccessStream iconStream, CoreWebView2ContextMenuItemKind Kind);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("25D6DC39-0062-5735-8B09-A6F535F19E97")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentOptions")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentOptions {
    public string AdditionalBrowserArguments { get; public set; }
    public bool AllowSingleSignOnUsingOSPrimaryAccount { get; public set; }
    public string Language { get; public set; }
    public string TargetCompatibleBrowserVersion { get; public set; }
    public abstract virtual string get_AdditionalBrowserArguments();
    public abstract virtual void set_AdditionalBrowserArguments(string value);
    public abstract virtual bool get_AllowSingleSignOnUsingOSPrimaryAccount();
    public abstract virtual void set_AllowSingleSignOnUsingOSPrimaryAccount(bool value);
    public abstract virtual string get_Language();
    public abstract virtual void set_Language(string value);
    public abstract virtual string get_TargetCompatibleBrowserVersion();
    public abstract virtual void set_TargetCompatibleBrowserVersion(string value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("1F104443-EA93-5A37-B791-34E6A31172ED")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentOptions_Manual")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentOptions_Manual {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("665E9C11-CA1B-5255-A6F5-D741AC39E18F")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentOptions_Manual3")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentOptions_Manual3 {
    public IList`1<CoreWebView2CustomSchemeRegistration> CustomSchemeRegistrations { get; public set; }
    public abstract virtual IList`1<CoreWebView2CustomSchemeRegistration> get_CustomSchemeRegistrations();
    public abstract virtual void set_CustomSchemeRegistrations(IList`1<CoreWebView2CustomSchemeRegistration> value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("E77350FB-77A1-56F7-BE95-EB7F8A7A3072")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentOptions2")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentOptions2 {
    public bool ExclusiveUserDataFolderAccess { get; public set; }
    public abstract virtual bool get_ExclusiveUserDataFolderAccess();
    public abstract virtual void set_ExclusiveUserDataFolderAccess(bool value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("48AB919D-2444-5E8C-A6F6-ABA840D6C5FF")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentOptions3")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentOptions3 {
    public bool IsCustomCrashReportingEnabled { get; public set; }
    public abstract virtual bool get_IsCustomCrashReportingEnabled();
    public abstract virtual void set_IsCustomCrashReportingEnabled(bool value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("A2CB850F-CD14-5A7D-9C98-53FD51EC9858")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentOptions4")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentOptions4 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("36B1CA6C-E06C-5050-8EF9-247C5A7AA9C9")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentOptions5")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentOptions5 {
    public bool EnableTrackingPrevention { get; public set; }
    public abstract virtual bool get_EnableTrackingPrevention();
    public abstract virtual void set_EnableTrackingPrevention(bool value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("EB5B14C2-6F05-514E-B19A-76744D1CE684")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentOptions6")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentOptions6 {
    public bool AreBrowserExtensionsEnabled { get; public set; }
    public abstract virtual bool get_AreBrowserExtensionsEnabled();
    public abstract virtual void set_AreBrowserExtensionsEnabled(bool value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("7447B9ED-A60D-5AF8-AB2A-56C544BC356A")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentOptions7")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentOptions7 {
    public CoreWebView2ChannelSearchKind ChannelSearchKind { get; public set; }
    public CoreWebView2ReleaseChannels ReleaseChannels { get; public set; }
    public abstract virtual CoreWebView2ChannelSearchKind get_ChannelSearchKind();
    public abstract virtual void set_ChannelSearchKind(CoreWebView2ChannelSearchKind value);
    public abstract virtual CoreWebView2ReleaseChannels get_ReleaseChannels();
    public abstract virtual void set_ReleaseChannels(CoreWebView2ReleaseChannels value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("F143E9D2-2669-5B6A-8F88-7B05C9E1EF4D")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentOptions8")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentOptions8 {
    public CoreWebView2ScrollbarStyle ScrollBarStyle { get; public set; }
    public abstract virtual CoreWebView2ScrollbarStyle get_ScrollBarStyle();
    public abstract virtual void set_ScrollBarStyle(CoreWebView2ScrollbarStyle value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("0E33F804-F20B-5635-8491-162AAA27517B")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentStatics")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentStatics {
    public abstract virtual IAsyncOperation`1<CoreWebView2Environment> CreateAsync();
    public abstract virtual IAsyncOperation`1<CoreWebView2Environment> CreateWithOptionsAsync(string browserExecutableFolder, string userDataFolder, CoreWebView2EnvironmentOptions options);
    [OverloadAttribute("GetAvailableBrowserVersionString")]
public abstract virtual string GetAvailableBrowserVersionString();
    [OverloadAttribute("GetAvailableBrowserVersionString2")]
public abstract virtual string GetAvailableBrowserVersionString(string browserExecutableFolder);
    public abstract virtual int CompareBrowserVersionString(string browserVersionString1, string browserVersionString2);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("DCBA13E4-EE49-5860-8499-C49161A7D8CE")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentStatics2")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2EnvironmentStatics2 {
    [OverloadAttribute("GetAvailableBrowserVersionStringWithOptions")]
public abstract virtual string GetAvailableBrowserVersionString(string browserExecutableFolder, CoreWebView2EnvironmentOptions options);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("9BEF80F9-580C-56A0-8DB9-75EC792C8421")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExecuteScriptResult")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ExecuteScriptResult {
    public CoreWebView2ScriptException Exception { get; }
    public string ResultAsJson { get; }
    public bool Succeeded { get; }
    public abstract virtual CoreWebView2ScriptException get_Exception();
    public abstract virtual string get_ResultAsJson();
    public abstract virtual bool get_Succeeded();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("5931BC73-376C-5BA7-BCBB-3CAEC6D1FF5B")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExecuteScriptResult_Manual")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ExecuteScriptResult_Manual {
    public abstract virtual int TryGetResultAsString(String& stringResult);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("F4381E96-421F-5F55-9A3C-BA39117C3CD2")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Experimental {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("C4DC21A5-FA10-57A4-9724-A91AB86461F1")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental10")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Experimental10 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("BAAA006F-13C3-5927-B71C-0B3D8D390EA3")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental11")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Experimental11 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("8C9269C8-9A65-5220-8D7F-DCBC764F8F80")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental12")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Experimental12 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("9A45A724-DBAA-516E-BFCF-E22C4ED3A748")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental13")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Experimental13 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("39EAFF81-3783-5C9D-901F-B946F2155BDB")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental14")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Experimental14 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("C3C304ED-19AA-59C6-8783-8CDC035BC713")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental15")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Experimental15 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("7244E495-352B-5B3C-89F3-5BCA48DB826F")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental16")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Experimental16 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("A8E0D973-52E5-522F-BEFC-8D9E745554DF")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental17")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Experimental17 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("8C21C492-A6FD-5789-9FB7-C167CFB18B1C")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental18")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Experimental18 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("56536501-FDDC-509A-A662-987DB7BD0398")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental19")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Experimental19 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("3738E50F-D296-5C57-B055-38874EF76036")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental2")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Experimental2 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("56B7568A-3A11-5345-AD5A-5C159FF0C969")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental20")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Experimental20 {
    public string CustomDataPartitionId { get; public set; }
    public abstract virtual string get_CustomDataPartitionId();
    public abstract virtual void set_CustomDataPartitionId(string value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("47B744A9-22F0-5B89-9EEA-3F064A9C3F9E")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental21")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Experimental21 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("BE8BC888-716A-55AD-A46B-9627AE45FEA4")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental22")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Experimental22 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("15A7A32B-D884-5C23-89A4-99E0FB0FDB9F")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental23")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Experimental23 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("D1EDCBA8-709F-54D9-A1BA-205EA1D26B8A")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental24")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Experimental24 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("440BC07E-E1F0-5756-90ED-794B561326DE")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental25")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Experimental25 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("15639678-579B-5334-A8E4-C07F94E8F308")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental26")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Experimental26 {
    [CompilerGeneratedAttribute]
public abstract virtual void add_ScreenCaptureStarting(TypedEventHandler`2<CoreWebView2, CoreWebView2ScreenCaptureStartingEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_ScreenCaptureStarting(TypedEventHandler`2<CoreWebView2, CoreWebView2ScreenCaptureStartingEventArgs> value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("ACA475EA-4C5D-543C-9D44-F2F53E23C27C")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental27")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Experimental27 {
    [CompilerGeneratedAttribute]
public abstract virtual void add_SaveFileSecurityCheckStarting(TypedEventHandler`2<CoreWebView2, CoreWebView2SaveFileSecurityCheckStartingEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_SaveFileSecurityCheckStarting(TypedEventHandler`2<CoreWebView2, CoreWebView2SaveFileSecurityCheckStartingEventArgs> value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("A642D8AB-0E3B-51B7-8170-E06177BAA7F2")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental3")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Experimental3 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("22B29A3F-D054-5628-95A0-CA6DFE62519A")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental4")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Experimental4 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("46AF52D3-A372-5C25-8BB1-DD561C40A54F")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental5")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Experimental5 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("4806F8A8-4A49-581C-A62D-F6B75DE37947")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental6")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Experimental6 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("27D3A94C-F2A5-5DA0-9429-BFE5ED7C3F99")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental7")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Experimental7 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("0781DAAF-218E-5DA8-B966-71B4439494C1")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental8")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Experimental8 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("FE83053C-0C67-5850-BC7B-EB2318790AA5")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Experimental9")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Experimental9 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("C66CEF13-F457-56A4-9F62-51282C190EC8")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalCompositionController3")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalCompositionController3 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("A759D1A0-B339-5A06-A663-9589B585A807")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalCompositionController4")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalCompositionController4 {
    public abstract virtual CoreWebView2PointerInfo CreateCoreWebView2PointerInfoFromPointerId(UInt32 PointerId, CoreWebView2ControllerWindowReference ParentWindow, Matrix4x4 transform);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("26C965BD-A224-5AFE-A04B-CA4B950CD528")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalCompositionController5")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalCompositionController5 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("5BF705B7-F628-52A3-8CAF-EF7FA3381A4A")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalController")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalController {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("2DA5F81E-E84E-512E-8197-A50A1111D160")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalController2")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalController2 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("6C347143-2F34-5764-A1D4-0344352EA2EF")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalControllerOptions")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalControllerOptions {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("EF0BBE70-9B5B-5C74-94A0-A13F25A502E5")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalControllerOptions2")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalControllerOptions2 {
    public bool AllowHostInputProcessing { get; public set; }
    public abstract virtual bool get_AllowHostInputProcessing();
    public abstract virtual void set_AllowHostInputProcessing(bool value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("FB66CF47-566D-52D3-8D0A-8234142782C5")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalEnvironment")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalEnvironment {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("7FA97AEF-8142-5818-A9FE-29B3C6730EEA")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalEnvironment10")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalEnvironment10 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("8C8CB727-CB79-5A90-B9F2-F0C234E090AB")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalEnvironment11")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalEnvironment11 {
    public abstract virtual IAsyncOperation`1<IReadOnlyList`1<CoreWebView2ProcessInfo>> GetProcessInfosWithDetailsAsync();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("38AC07CC-727F-52EF-BC9D-A78BC1152C66")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalEnvironment12")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalEnvironment12 {
    public ulong RenderAdapterLUID { get; }
    public abstract virtual CoreWebView2TextureStream CreateTextureStream(string streamId, object d3dDevice);
    public abstract virtual ulong get_RenderAdapterLUID();
    [CompilerGeneratedAttribute]
public abstract virtual void add_RenderAdapterLUIDChanged(TypedEventHandler`2<CoreWebView2Environment, object> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_RenderAdapterLUIDChanged(TypedEventHandler`2<CoreWebView2Environment, object> value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("95909AF0-645D-5ECA-B6BE-7695A16DEFE3")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalEnvironment13")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalEnvironment13 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("C356B3A7-01D9-5125-BF98-EC822D3A4769")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalEnvironment14")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalEnvironment14 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("13B4F2A4-EA0C-5188-8813-BE2B54EA86E0")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalEnvironment2")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalEnvironment2 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("63337216-BA92-5A91-BF81-85A917FF009E")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalEnvironment3")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalEnvironment3 {
    public abstract virtual IAsyncOperation`1<CoreWebView2UpdateRuntimeResult> UpdateRuntimeAsync();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("BD44F1C0-13A3-5A55-A59B-42B740928FE2")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalEnvironment4")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalEnvironment4 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("916D3D42-822F-5FF9-9BC8-4A10C51966B7")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalEnvironment5")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalEnvironment5 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("4BEBA3E5-7554-5FDD-9865-4AD4B688010D")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalEnvironment6")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalEnvironment6 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("0F8451F8-C338-56CD-8BBB-2A175B953890")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalEnvironment7")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalEnvironment7 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("4C553D2F-7C43-5ACF-BE56-A9D7BD6E80A8")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalEnvironment8")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalEnvironment8 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("728AAD44-6E1E-5577-85B0-B5218393FAD3")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalEnvironment9")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalEnvironment9 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("3E8B2A0B-2419-5CC1-A0DC-0F7D392DDF09")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalFrame")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalFrame {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("F953B3E6-A69B-5262-BC70-973AA4349041")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalFrame2")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalFrame2 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("E59DDD09-F44C-5975-8D80-977292DBFEFE")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalFrame3")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalFrame3 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("DB13C9B5-1F9A-5EB9-9B80-3D89B75650A0")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalFrame4")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalFrame4 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("DAF865A0-C929-5F17-A887-F3D659AB7BDF")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalFrame5")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalFrame5 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("2AEE9FD0-3C47-545E-A45C-B64206C26D65")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalFrame6")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalFrame6 {
    [CompilerGeneratedAttribute]
public abstract virtual void add_ScreenCaptureStarting(TypedEventHandler`2<CoreWebView2Frame, CoreWebView2ScreenCaptureStartingEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_ScreenCaptureStarting(TypedEventHandler`2<CoreWebView2Frame, CoreWebView2ScreenCaptureStartingEventArgs> value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("97C372E6-F78C-5C43-98A2-3F18DB6F6C26")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalFrame7")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalFrame7 {
    public bool UseOverrideTimerWakeInterval { get; public set; }
    public abstract virtual bool get_UseOverrideTimerWakeInterval();
    public abstract virtual void set_UseOverrideTimerWakeInterval(bool value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("A2D2ECFF-56D2-5287-B43B-024BB76D6249")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalFrameInfo")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalFrameInfo {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("69152B32-B4A7-5579-B69E-A72AA2453FE4")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalNavigationStartingEventArgs")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalNavigationStartingEventArgs {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("583C97E6-2566-567C-BF50-B7AFA0A89213")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalNavigationStartingEventArgs2")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalNavigationStartingEventArgs2 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("DCCBDDAF-EFD2-5641-91A3-79F31EC4D430")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalNewWindowRequestedEventArgs")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalNewWindowRequestedEventArgs {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("39CDBA34-8D04-5EC6-B640-BDB344A33B4E")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalNewWindowRequestedEventArgs2")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalNewWindowRequestedEventArgs2 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("594A083F-A115-58B7-9114-59EB185A2F41")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalPrintSettings2")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalPrintSettings2 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("D79B0A24-5CD5-546B-85FC-684D2C051DA3")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalProcessFailedEventArgs")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalProcessFailedEventArgs {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("6BF121D8-8493-56CD-B756-43B0FF5897E7")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalProcessInfo")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalProcessInfo {
    public IReadOnlyList`1<CoreWebView2FrameInfo> AssociatedFrameInfos { get; }
    public abstract virtual IReadOnlyList`1<CoreWebView2FrameInfo> get_AssociatedFrameInfos();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("4341381A-1521-50BC-A713-93584C7AB8CD")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalProfile10")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalProfile10 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("F50A37EF-A50D-5E16-88A9-6C8DE4485AF7")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalProfile11")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalProfile11 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("79122DC9-8393-5032-BA92-0FAC81C43C37")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalProfile12")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalProfile12 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("45DEC898-2220-53BB-9891-EBD1E4456021")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalProfile2")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalProfile2 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("04D62BC4-9364-5803-9E14-63C0CDA7F9D1")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalProfile3")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalProfile3 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("71211EDE-C1E8-5B96-8743-95D9B764F16F")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalProfile4")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalProfile4 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("98556FB6-8EEF-50AC-A863-72B05BF0C1AD")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalProfile5")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalProfile5 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("191C7F78-5914-53C4-9698-8CB154D3D943")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalProfile6")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalProfile6 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("CA1CD782-49B5-56C4-88D8-D50FEE3D6929")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalProfile7")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalProfile7 {
    public abstract virtual IAsyncAction ClearCustomDataPartitionAsync(string CustomDataPartitionId);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("C1C72027-CAB9-51B2-9B92-BB6992DBAA97")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalProfile8")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalProfile8 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("54386DDB-5798-51CD-9FC0-5D283E0BBFD0")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalSettings")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalSettings {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("2C8229C2-3FAF-5ED3-9921-D6C5D88D134B")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalSettings2")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalSettings2 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("2B928477-D1C6-57D9-A291-F8EBC62B5339")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalSettings3")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalSettings3 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("E86262C4-CD63-59BE-BEED-347278E899A8")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalSettings4")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalSettings4 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("0C0511EA-CAEA-50B6-B306-0BE7AE336FF5")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalSettings5")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalSettings5 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("0300478C-E61D-5333-AD61-B91371EBA414")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalSettings6")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalSettings6 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("EAEBF880-DC39-50EF-B6A9-CBE536E0554F")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalSettings7")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalSettings7 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("61D8EE3A-B5A7-5E2D-829B-443EB4F9A2F1")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalSettings8")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalSettings8 {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("C7AAA223-F79A-5C7E-A315-0E33E17659FE")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalSettings9")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalSettings9 {
    public TimeSpan PreferredBackgroundTimerWakeInterval { get; public set; }
    public TimeSpan PreferredForegroundTimerWakeInterval { get; public set; }
    public TimeSpan PreferredIntensiveTimerWakeInterval { get; public set; }
    public TimeSpan PreferredOverrideTimerWakeInterval { get; public set; }
    public abstract virtual TimeSpan get_PreferredBackgroundTimerWakeInterval();
    public abstract virtual void set_PreferredBackgroundTimerWakeInterval(TimeSpan value);
    public abstract virtual TimeSpan get_PreferredForegroundTimerWakeInterval();
    public abstract virtual void set_PreferredForegroundTimerWakeInterval(TimeSpan value);
    public abstract virtual TimeSpan get_PreferredIntensiveTimerWakeInterval();
    public abstract virtual void set_PreferredIntensiveTimerWakeInterval(TimeSpan value);
    public abstract virtual TimeSpan get_PreferredOverrideTimerWakeInterval();
    public abstract virtual void set_PreferredOverrideTimerWakeInterval(TimeSpan value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("E35445C5-C811-5690-9D71-C181951DFB12")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalWebMessageReceivedEventArgs")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalWebMessageReceivedEventArgs {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("EF7B5AEA-F358-5651-B5B2-0A00277AEC81")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalWebResourceRequestedEventArgs")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ExperimentalWebResourceRequestedEventArgs {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("CAB45512-9594-50F1-AC3C-9CC103B574A3")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2File")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2File {
    public string Path { get; }
    public abstract virtual string get_Path();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("241CB4C8-0021-5F72-8BF2-E141DCE4C151")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2FileSystemHandle")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2FileSystemHandle {
    public CoreWebView2FileSystemHandleKind Kind { get; }
    public string Path { get; }
    public CoreWebView2FileSystemHandlePermission Permission { get; }
    public abstract virtual CoreWebView2FileSystemHandleKind get_Kind();
    public abstract virtual string get_Path();
    public abstract virtual CoreWebView2FileSystemHandlePermission get_Permission();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("02FFCBF9-19E7-5BB8-8273-346420FB1503")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Frame")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Frame {
    public string Name { get; }
    public abstract virtual void RemoveHostObjectFromScript(string name);
    public abstract virtual int IsDestroyed();
    public abstract virtual string get_Name();
    [CompilerGeneratedAttribute]
public abstract virtual void add_Destroyed(TypedEventHandler`2<CoreWebView2Frame, object> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_Destroyed(TypedEventHandler`2<CoreWebView2Frame, object> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_NameChanged(TypedEventHandler`2<CoreWebView2Frame, object> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_NameChanged(TypedEventHandler`2<CoreWebView2Frame, object> value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("33DBC9C9-A103-56E3-B722-363814200320")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Frame2")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Frame2 {
    public abstract virtual IAsyncOperation`1<string> ExecuteScriptAsync(string javaScript);
    public abstract virtual void PostWebMessageAsJson(string webMessageAsJson);
    public abstract virtual void PostWebMessageAsString(string webMessageAsString);
    [CompilerGeneratedAttribute]
public abstract virtual void add_ContentLoading(TypedEventHandler`2<CoreWebView2Frame, CoreWebView2ContentLoadingEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_ContentLoading(TypedEventHandler`2<CoreWebView2Frame, CoreWebView2ContentLoadingEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_DOMContentLoaded(TypedEventHandler`2<CoreWebView2Frame, CoreWebView2DOMContentLoadedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_DOMContentLoaded(TypedEventHandler`2<CoreWebView2Frame, CoreWebView2DOMContentLoadedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_NavigationCompleted(TypedEventHandler`2<CoreWebView2Frame, CoreWebView2NavigationCompletedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_NavigationCompleted(TypedEventHandler`2<CoreWebView2Frame, CoreWebView2NavigationCompletedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_NavigationStarting(TypedEventHandler`2<CoreWebView2Frame, CoreWebView2NavigationStartingEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_NavigationStarting(TypedEventHandler`2<CoreWebView2Frame, CoreWebView2NavigationStartingEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_WebMessageReceived(TypedEventHandler`2<CoreWebView2Frame, CoreWebView2WebMessageReceivedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_WebMessageReceived(TypedEventHandler`2<CoreWebView2Frame, CoreWebView2WebMessageReceivedEventArgs> value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("6545DAC4-1666-50A5-BBE8-EC04842A466F")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Frame3")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Frame3 {
    [CompilerGeneratedAttribute]
public abstract virtual void add_PermissionRequested(TypedEventHandler`2<CoreWebView2Frame, CoreWebView2PermissionRequestedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_PermissionRequested(TypedEventHandler`2<CoreWebView2Frame, CoreWebView2PermissionRequestedEventArgs> value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("D46CD758-64B9-543E-A7B8-CAC9B4C059A7")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Frame4")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Frame4 {
    public abstract virtual void PostSharedBufferToScript(CoreWebView2SharedBuffer sharedBuffer, CoreWebView2SharedBufferAccess access, string additionalDataAsJson);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("27C4803D-9A7F-599A-BF72-07E8DC964A5B")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Frame5")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Frame5 {
    public UInt32 FrameId { get; }
    public abstract virtual UInt32 get_FrameId();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("527B01B8-FC6D-5543-8DCE-96CDFDB32C81")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2FrameCreatedEventArgs")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2FrameCreatedEventArgs {
    public CoreWebView2Frame Frame { get; }
    public abstract virtual CoreWebView2Frame get_Frame();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("F9B82E06-73F3-513B-BC2C-445DDEDBA976")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2FrameInfo")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2FrameInfo {
    public string Name { get; }
    public string Source { get; }
    public abstract virtual string get_Name();
    public abstract virtual string get_Source();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("7F0770C6-0D5E-529B-B00C-F15656F605C4")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2FrameInfo2")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2FrameInfo2 {
    public UInt32 FrameId { get; }
    public CoreWebView2FrameKind FrameKind { get; }
    public CoreWebView2FrameInfo ParentFrameInfo { get; }
    public abstract virtual UInt32 get_FrameId();
    public abstract virtual CoreWebView2FrameKind get_FrameKind();
    public abstract virtual CoreWebView2FrameInfo get_ParentFrameInfo();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("ADF264EE-D980-5F48-A60E-8705DE046608")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2HttpHeadersCollectionIterator")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2HttpHeadersCollectionIterator {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("DC2226C7-3515-55BB-BCB2-57B78F86B91D")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2HttpRequestHeaders")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2HttpRequestHeaders {
    public abstract virtual string GetHeader(string name);
    public abstract virtual CoreWebView2HttpHeadersCollectionIterator GetHeaders(string name);
    public abstract virtual bool Contains(string name);
    public abstract virtual void SetHeader(string name, string value);
    public abstract virtual void RemoveHeader(string name);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("F3D383E9-747F-5574-8662-9A6B920CECD4")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2HttpResponseHeaders")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2HttpResponseHeaders {
    public abstract virtual void AppendHeader(string name, string value);
    public abstract virtual bool Contains(string name);
    public abstract virtual string GetHeader(string name);
    public abstract virtual CoreWebView2HttpHeadersCollectionIterator GetHeaders(string name);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("6AB44F8D-EC6A-56A1-AE3C-9C55DFF6CBC6")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2LaunchingExternalUriSchemeEventArgs")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2LaunchingExternalUriSchemeEventArgs {
    public bool Cancel { get; public set; }
    public string InitiatingOrigin { get; }
    public bool IsUserInitiated { get; }
    public string Uri { get; }
    public abstract virtual Deferral GetDeferral();
    public abstract virtual bool get_Cancel();
    public abstract virtual void set_Cancel(bool value);
    public abstract virtual string get_InitiatingOrigin();
    public abstract virtual bool get_IsUserInitiated();
    public abstract virtual string get_Uri();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("2E29103B-ECDD-5C1D-B288-3F066D608919")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2MoveFocusRequestedEventArgs")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2MoveFocusRequestedEventArgs {
    public bool Handled { get; public set; }
    public CoreWebView2MoveFocusReason Reason { get; }
    public abstract virtual bool get_Handled();
    public abstract virtual void set_Handled(bool value);
    public abstract virtual CoreWebView2MoveFocusReason get_Reason();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("4865E238-036A-5664-95A3-447EC44CF498")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2NavigationCompletedEventArgs")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2NavigationCompletedEventArgs {
    public bool IsSuccess { get; }
    public ulong NavigationId { get; }
    public CoreWebView2WebErrorStatus WebErrorStatus { get; }
    public abstract virtual bool get_IsSuccess();
    public abstract virtual ulong get_NavigationId();
    public abstract virtual CoreWebView2WebErrorStatus get_WebErrorStatus();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("6E4D3C33-A6E2-5896-90C5-68B4B5E55B40")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2NavigationCompletedEventArgs2")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2NavigationCompletedEventArgs2 {
    public int HttpStatusCode { get; }
    public abstract virtual int get_HttpStatusCode();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("548D23D3-FEA3-5616-BD05-AE08066C86D3")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2NavigationStartingEventArgs")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2NavigationStartingEventArgs {
    public bool Cancel { get; public set; }
    public bool IsRedirected { get; }
    public bool IsUserInitiated { get; }
    public ulong NavigationId { get; }
    public CoreWebView2HttpRequestHeaders RequestHeaders { get; }
    public string Uri { get; }
    public abstract virtual bool get_Cancel();
    public abstract virtual void set_Cancel(bool value);
    public abstract virtual bool get_IsRedirected();
    public abstract virtual bool get_IsUserInitiated();
    public abstract virtual ulong get_NavigationId();
    public abstract virtual CoreWebView2HttpRequestHeaders get_RequestHeaders();
    public abstract virtual string get_Uri();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("D7A3824E-7654-5C4B-B069-E6501634D84C")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2NavigationStartingEventArgs2")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2NavigationStartingEventArgs2 {
    public string AdditionalAllowedFrameAncestors { get; public set; }
    public abstract virtual string get_AdditionalAllowedFrameAncestors();
    public abstract virtual void set_AdditionalAllowedFrameAncestors(string value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("17DB72F6-E995-59F6-91BA-4411E755F3AB")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2NavigationStartingEventArgs3")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2NavigationStartingEventArgs3 {
    public CoreWebView2NavigationKind NavigationKind { get; }
    public abstract virtual CoreWebView2NavigationKind get_NavigationKind();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("E6E013BA-AEC8-532E-9AC9-1590AF7B25EC")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2NewWindowRequestedEventArgs")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2NewWindowRequestedEventArgs {
    public bool Handled { get; public set; }
    public bool IsUserInitiated { get; }
    public CoreWebView2 NewWindow { get; public set; }
    public string Uri { get; }
    public CoreWebView2WindowFeatures WindowFeatures { get; }
    public abstract virtual Deferral GetDeferral();
    public abstract virtual bool get_Handled();
    public abstract virtual void set_Handled(bool value);
    public abstract virtual bool get_IsUserInitiated();
    public abstract virtual CoreWebView2 get_NewWindow();
    public abstract virtual void set_NewWindow(CoreWebView2 value);
    public abstract virtual string get_Uri();
    public abstract virtual CoreWebView2WindowFeatures get_WindowFeatures();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("F4806259-E63A-5C0B-A02C-5F10E11094F4")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2NewWindowRequestedEventArgs2")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2NewWindowRequestedEventArgs2 {
    public string Name { get; }
    public abstract virtual string get_Name();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("1F0F7826-8D70-5720-BB8B-D87F63CBFB9C")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2NewWindowRequestedEventArgs3")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2NewWindowRequestedEventArgs3 {
    public CoreWebView2FrameInfo OriginalSourceFrameInfo { get; }
    public abstract virtual CoreWebView2FrameInfo get_OriginalSourceFrameInfo();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("4F583622-CD0F-55D6-BE7E-8A8F99A20E62")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2NonClientRegionChangedEventArgs")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2NonClientRegionChangedEventArgs {
    public CoreWebView2NonClientRegionKind RegionKind { get; }
    public abstract virtual CoreWebView2NonClientRegionKind get_RegionKind();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("2516351D-6CCD-5484-BFF3-75F4DD4749E5")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Notification")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Notification {
    public string BadgeUri { get; }
    public string Body { get; }
    public string BodyImageUri { get; }
    public CoreWebView2TextDirectionKind Direction { get; }
    public string IconUri { get; }
    public bool IsSilent { get; }
    public string Language { get; }
    public bool RequiresInteraction { get; }
    public bool ShouldRenotify { get; }
    public string Tag { get; }
    public double Timestamp { get; }
    public string Title { get; }
    public abstract virtual void ReportShown();
    public abstract virtual void ReportClicked();
    public abstract virtual void ReportClosed();
    public abstract virtual string get_BadgeUri();
    public abstract virtual string get_Body();
    public abstract virtual string get_BodyImageUri();
    public abstract virtual CoreWebView2TextDirectionKind get_Direction();
    public abstract virtual string get_IconUri();
    public abstract virtual bool get_IsSilent();
    public abstract virtual string get_Language();
    public abstract virtual bool get_RequiresInteraction();
    public abstract virtual bool get_ShouldRenotify();
    public abstract virtual string get_Tag();
    public abstract virtual double get_Timestamp();
    public abstract virtual string get_Title();
    [CompilerGeneratedAttribute]
public abstract virtual void add_CloseRequested(TypedEventHandler`2<CoreWebView2Notification, object> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_CloseRequested(TypedEventHandler`2<CoreWebView2Notification, object> value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("A2C84873-F40E-5ADE-A7DB-E478233C5897")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Notification_Manual2")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Notification_Manual2 {
    public IReadOnlyList`1<ulong> VibrationPattern { get; }
    public abstract virtual IReadOnlyList`1<ulong> get_VibrationPattern();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("9416A036-5E06-57CB-8BBB-7F6EA1DC9A3D")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2NotificationReceivedEventArgs")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2NotificationReceivedEventArgs {
    public bool Handled { get; public set; }
    public CoreWebView2Notification Notification { get; }
    public string SenderOrigin { get; }
    public abstract virtual Deferral GetDeferral();
    public abstract virtual bool get_Handled();
    public abstract virtual void set_Handled(bool value);
    public abstract virtual CoreWebView2Notification get_Notification();
    public abstract virtual string get_SenderOrigin();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("118BDD9B-CEF1-5910-929E-C1A321328239")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2PermissionRequestedEventArgs")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2PermissionRequestedEventArgs {
    public bool IsUserInitiated { get; }
    public CoreWebView2PermissionKind PermissionKind { get; }
    public CoreWebView2PermissionState State { get; public set; }
    public string Uri { get; }
    public abstract virtual Deferral GetDeferral();
    public abstract virtual bool get_IsUserInitiated();
    public abstract virtual CoreWebView2PermissionKind get_PermissionKind();
    public abstract virtual CoreWebView2PermissionState get_State();
    public abstract virtual void set_State(CoreWebView2PermissionState value);
    public abstract virtual string get_Uri();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("A6652FBA-EBE5-5891-ADDC-CB37DA8F7E66")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2PermissionRequestedEventArgs2")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2PermissionRequestedEventArgs2 {
    public bool Handled { get; public set; }
    public abstract virtual bool get_Handled();
    public abstract virtual void set_Handled(bool value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("200E8BCC-BC11-5BEB-AA7A-79D4C95D73AA")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2PermissionRequestedEventArgs3")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2PermissionRequestedEventArgs3 {
    public bool SavesInProfile { get; public set; }
    public abstract virtual bool get_SavesInProfile();
    public abstract virtual void set_SavesInProfile(bool value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("B4158D0B-8EF8-575F-8E99-5FE02E8B579E")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2PermissionSetting")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2PermissionSetting {
    public CoreWebView2PermissionKind PermissionKind { get; }
    public string PermissionOrigin { get; }
    public CoreWebView2PermissionState PermissionState { get; }
    public abstract virtual CoreWebView2PermissionKind get_PermissionKind();
    public abstract virtual string get_PermissionOrigin();
    public abstract virtual CoreWebView2PermissionState get_PermissionState();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("C3860E0D-C018-5A84-BC06-9F8F7B275DFF")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2PointerInfo {
    public int ButtonChangeKind { get; public set; }
    public Rect DisplayRect { get; public set; }
    public UInt32 FrameId { get; public set; }
    public Point HimetricLocation { get; public set; }
    public Point HimetricLocationRaw { get; public set; }
    public UInt32 HistoryCount { get; public set; }
    public int InputData { get; public set; }
    public UInt32 KeyStates { get; public set; }
    public UInt32 PenFlags { get; public set; }
    public UInt32 PenMask { get; public set; }
    public UInt32 PenPressure { get; public set; }
    public UInt32 PenRotation { get; public set; }
    public int PenTiltX { get; public set; }
    public int PenTiltY { get; public set; }
    public ulong PerformanceCount { get; public set; }
    public Point PixelLocation { get; public set; }
    public Point PixelLocationRaw { get; public set; }
    public Rect PointerDeviceRect { get; public set; }
    public UInt32 PointerFlags { get; public set; }
    public UInt32 PointerId { get; public set; }
    public UInt32 PointerKind { get; public set; }
    public UInt32 Time { get; public set; }
    public Rect TouchContact { get; public set; }
    public Rect TouchContactRaw { get; public set; }
    public UInt32 TouchFlags { get; public set; }
    public UInt32 TouchMask { get; public set; }
    public UInt32 TouchOrientation { get; public set; }
    public UInt32 TouchPressure { get; public set; }
    public abstract virtual int get_ButtonChangeKind();
    public abstract virtual void set_ButtonChangeKind(int value);
    public abstract virtual Rect get_DisplayRect();
    public abstract virtual void set_DisplayRect(Rect value);
    public abstract virtual UInt32 get_FrameId();
    public abstract virtual void set_FrameId(UInt32 value);
    public abstract virtual Point get_HimetricLocation();
    public abstract virtual void set_HimetricLocation(Point value);
    public abstract virtual Point get_HimetricLocationRaw();
    public abstract virtual void set_HimetricLocationRaw(Point value);
    public abstract virtual UInt32 get_HistoryCount();
    public abstract virtual void set_HistoryCount(UInt32 value);
    public abstract virtual int get_InputData();
    public abstract virtual void set_InputData(int value);
    public abstract virtual UInt32 get_KeyStates();
    public abstract virtual void set_KeyStates(UInt32 value);
    public abstract virtual UInt32 get_PenFlags();
    public abstract virtual void set_PenFlags(UInt32 value);
    public abstract virtual UInt32 get_PenMask();
    public abstract virtual void set_PenMask(UInt32 value);
    public abstract virtual UInt32 get_PenPressure();
    public abstract virtual void set_PenPressure(UInt32 value);
    public abstract virtual UInt32 get_PenRotation();
    public abstract virtual void set_PenRotation(UInt32 value);
    public abstract virtual int get_PenTiltX();
    public abstract virtual void set_PenTiltX(int value);
    public abstract virtual int get_PenTiltY();
    public abstract virtual void set_PenTiltY(int value);
    public abstract virtual ulong get_PerformanceCount();
    public abstract virtual void set_PerformanceCount(ulong value);
    public abstract virtual Point get_PixelLocation();
    public abstract virtual void set_PixelLocation(Point value);
    public abstract virtual Point get_PixelLocationRaw();
    public abstract virtual void set_PixelLocationRaw(Point value);
    public abstract virtual Rect get_PointerDeviceRect();
    public abstract virtual void set_PointerDeviceRect(Rect value);
    public abstract virtual UInt32 get_PointerFlags();
    public abstract virtual void set_PointerFlags(UInt32 value);
    public abstract virtual UInt32 get_PointerId();
    public abstract virtual void set_PointerId(UInt32 value);
    public abstract virtual UInt32 get_PointerKind();
    public abstract virtual void set_PointerKind(UInt32 value);
    public abstract virtual UInt32 get_Time();
    public abstract virtual void set_Time(UInt32 value);
    public abstract virtual Rect get_TouchContact();
    public abstract virtual void set_TouchContact(Rect value);
    public abstract virtual Rect get_TouchContactRaw();
    public abstract virtual void set_TouchContactRaw(Rect value);
    public abstract virtual UInt32 get_TouchFlags();
    public abstract virtual void set_TouchFlags(UInt32 value);
    public abstract virtual UInt32 get_TouchMask();
    public abstract virtual void set_TouchMask(UInt32 value);
    public abstract virtual UInt32 get_TouchOrientation();
    public abstract virtual void set_TouchOrientation(UInt32 value);
    public abstract virtual UInt32 get_TouchPressure();
    public abstract virtual void set_TouchPressure(UInt32 value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("9C75C8C0-EF3D-58A8-9A8C-18EED9FD0F16")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2PrintSettings")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2PrintSettings {
    public string FooterUri { get; public set; }
    public string HeaderTitle { get; public set; }
    public double MarginBottom { get; public set; }
    public double MarginLeft { get; public set; }
    public double MarginRight { get; public set; }
    public double MarginTop { get; public set; }
    public CoreWebView2PrintOrientation Orientation { get; public set; }
    public double PageHeight { get; public set; }
    public double PageWidth { get; public set; }
    public double ScaleFactor { get; public set; }
    public bool ShouldPrintBackgrounds { get; public set; }
    public bool ShouldPrintHeaderAndFooter { get; public set; }
    public bool ShouldPrintSelectionOnly { get; public set; }
    public abstract virtual string get_FooterUri();
    public abstract virtual void set_FooterUri(string value);
    public abstract virtual string get_HeaderTitle();
    public abstract virtual void set_HeaderTitle(string value);
    public abstract virtual double get_MarginBottom();
    public abstract virtual void set_MarginBottom(double value);
    public abstract virtual double get_MarginLeft();
    public abstract virtual void set_MarginLeft(double value);
    public abstract virtual double get_MarginRight();
    public abstract virtual void set_MarginRight(double value);
    public abstract virtual double get_MarginTop();
    public abstract virtual void set_MarginTop(double value);
    public abstract virtual CoreWebView2PrintOrientation get_Orientation();
    public abstract virtual void set_Orientation(CoreWebView2PrintOrientation value);
    public abstract virtual double get_PageHeight();
    public abstract virtual void set_PageHeight(double value);
    public abstract virtual double get_PageWidth();
    public abstract virtual void set_PageWidth(double value);
    public abstract virtual double get_ScaleFactor();
    public abstract virtual void set_ScaleFactor(double value);
    public abstract virtual bool get_ShouldPrintBackgrounds();
    public abstract virtual void set_ShouldPrintBackgrounds(bool value);
    public abstract virtual bool get_ShouldPrintHeaderAndFooter();
    public abstract virtual void set_ShouldPrintHeaderAndFooter(bool value);
    public abstract virtual bool get_ShouldPrintSelectionOnly();
    public abstract virtual void set_ShouldPrintSelectionOnly(bool value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("D2A97895-CA6E-57FC-905D-C6F77A081768")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2PrintSettings2")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2PrintSettings2 {
    public CoreWebView2PrintCollation Collation { get; public set; }
    public CoreWebView2PrintColorMode ColorMode { get; public set; }
    public int Copies { get; public set; }
    public CoreWebView2PrintDuplex Duplex { get; public set; }
    public CoreWebView2PrintMediaSize MediaSize { get; public set; }
    public string PageRanges { get; public set; }
    public int PagesPerSide { get; public set; }
    public string PrinterName { get; public set; }
    public abstract virtual CoreWebView2PrintCollation get_Collation();
    public abstract virtual void set_Collation(CoreWebView2PrintCollation value);
    public abstract virtual CoreWebView2PrintColorMode get_ColorMode();
    public abstract virtual void set_ColorMode(CoreWebView2PrintColorMode value);
    public abstract virtual int get_Copies();
    public abstract virtual void set_Copies(int value);
    public abstract virtual CoreWebView2PrintDuplex get_Duplex();
    public abstract virtual void set_Duplex(CoreWebView2PrintDuplex value);
    public abstract virtual CoreWebView2PrintMediaSize get_MediaSize();
    public abstract virtual void set_MediaSize(CoreWebView2PrintMediaSize value);
    public abstract virtual string get_PageRanges();
    public abstract virtual void set_PageRanges(string value);
    public abstract virtual int get_PagesPerSide();
    public abstract virtual void set_PagesPerSide(int value);
    public abstract virtual string get_PrinterName();
    public abstract virtual void set_PrinterName(string value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("2850F27C-0C9D-5CDC-B356-18F5B97D9FCF")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2PrivatePartial")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2PrivatePartial {
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("527F6678-8629-5C2A-BC3B-8D5C95E2B9BC")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2PrivatePartialController")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2PrivatePartialController {
    public bool IsBrowserHitTransparent { get; }
    public abstract virtual bool get_IsBrowserHitTransparent();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("60E9238B-621D-57E8-B670-74382B2380A7")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ProcessExtendedInfo")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ProcessExtendedInfo {
    public IReadOnlyList`1<CoreWebView2FrameInfo> AssociatedFrameInfos { get; }
    public CoreWebView2ProcessInfo ProcessInfo { get; }
    public abstract virtual IReadOnlyList`1<CoreWebView2FrameInfo> get_AssociatedFrameInfos();
    public abstract virtual CoreWebView2ProcessInfo get_ProcessInfo();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("25A8F8C9-D944-539D-AFA3-24172B48EF47")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ProcessFailedEventArgs")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ProcessFailedEventArgs {
    public CoreWebView2ProcessFailedKind ProcessFailedKind { get; }
    public abstract virtual CoreWebView2ProcessFailedKind get_ProcessFailedKind();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("C5D9C952-B456-5DC7-9F76-FDE967484AF5")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ProcessFailedEventArgs2")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ProcessFailedEventArgs2 {
    public int ExitCode { get; }
    public IReadOnlyList`1<CoreWebView2FrameInfo> FrameInfosForFailedProcess { get; }
    public string ProcessDescription { get; }
    public CoreWebView2ProcessFailedReason Reason { get; }
    public abstract virtual int get_ExitCode();
    public abstract virtual IReadOnlyList`1<CoreWebView2FrameInfo> get_FrameInfosForFailedProcess();
    public abstract virtual string get_ProcessDescription();
    public abstract virtual CoreWebView2ProcessFailedReason get_Reason();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("D129A419-ADAE-5C3C-8FCE-5592994E9CD3")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ProcessFailedEventArgs3")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ProcessFailedEventArgs3 {
    public string FailureSourceModulePath { get; }
    public abstract virtual string get_FailureSourceModulePath();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("B6EC37E1-23EB-5924-B346-E837890AA9D5")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ProcessInfo")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ProcessInfo {
    public CoreWebView2ProcessKind Kind { get; }
    public int ProcessId { get; }
    public abstract virtual CoreWebView2ProcessKind get_Kind();
    public abstract virtual int get_ProcessId();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("D4BDD25C-A2DB-5C03-9659-ABDEB9793621")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Profile")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Profile {
    public string DefaultDownloadFolderPath { get; public set; }
    public bool IsInPrivateModeEnabled { get; }
    public CoreWebView2PreferredColorScheme PreferredColorScheme { get; public set; }
    public string ProfileName { get; }
    public string ProfilePath { get; }
    public abstract virtual string get_DefaultDownloadFolderPath();
    public abstract virtual void set_DefaultDownloadFolderPath(string value);
    public abstract virtual bool get_IsInPrivateModeEnabled();
    public abstract virtual CoreWebView2PreferredColorScheme get_PreferredColorScheme();
    public abstract virtual void set_PreferredColorScheme(CoreWebView2PreferredColorScheme value);
    public abstract virtual string get_ProfileName();
    public abstract virtual string get_ProfilePath();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("93D21E18-1B06-59D0-9687-10F4844B016D")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Profile2")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Profile2 {
    public abstract virtual IAsyncAction ClearBrowsingDataAsync(CoreWebView2BrowsingDataKinds dataKinds);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("507ED587-C511-5E47-BE5B-FC9CCDF179B6")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Profile3")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Profile3 {
    public CoreWebView2TrackingPreventionLevel PreferredTrackingPreventionLevel { get; public set; }
    public abstract virtual CoreWebView2TrackingPreventionLevel get_PreferredTrackingPreventionLevel();
    public abstract virtual void set_PreferredTrackingPreventionLevel(CoreWebView2TrackingPreventionLevel value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("EEAE109A-F641-5A5B-942F-9922594FFB4D")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Profile4")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Profile4 {
    public abstract virtual IAsyncAction SetPermissionStateAsync(CoreWebView2PermissionKind PermissionKind, string origin, CoreWebView2PermissionState State);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("C9AAC8F7-E502-5485-B033-99E4940EE0F1")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Profile5")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Profile5 {
    public CoreWebView2CookieManager CookieManager { get; }
    public abstract virtual CoreWebView2CookieManager get_CookieManager();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("C16A4665-9D44-5768-94A3-69B3976FC3D6")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Profile6")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Profile6 {
    public bool IsGeneralAutofillEnabled { get; public set; }
    public bool IsPasswordAutosaveEnabled { get; public set; }
    public abstract virtual bool get_IsGeneralAutofillEnabled();
    public abstract virtual void set_IsGeneralAutofillEnabled(bool value);
    public abstract virtual bool get_IsPasswordAutosaveEnabled();
    public abstract virtual void set_IsPasswordAutosaveEnabled(bool value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("5F665761-5C12-5F39-B9FE-607E6E94ADD1")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Profile7")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Profile7 {
    public abstract virtual IAsyncOperation`1<CoreWebView2BrowserExtension> AddBrowserExtensionAsync(string extensionFolderPath);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("9362D39C-D521-59E9-88FD-7C5AA1167DA6")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Profile8")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Profile8 {
    public abstract virtual void Delete();
    [CompilerGeneratedAttribute]
public abstract virtual void add_Deleted(TypedEventHandler`2<CoreWebView2Profile, object> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_Deleted(TypedEventHandler`2<CoreWebView2Profile, object> value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("CC39A250-2B4C-5608-9097-C59B8A8231B9")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2SaveAsUIShowingEventArgs")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2SaveAsUIShowingEventArgs {
    public bool AllowReplace { get; public set; }
    public bool Cancel { get; public set; }
    public string ContentMimeType { get; }
    public CoreWebView2SaveAsKind Kind { get; public set; }
    public string SaveAsFilePath { get; public set; }
    public bool SuppressDefaultDialog { get; public set; }
    public abstract virtual Deferral GetDeferral();
    public abstract virtual bool get_AllowReplace();
    public abstract virtual void set_AllowReplace(bool value);
    public abstract virtual bool get_Cancel();
    public abstract virtual void set_Cancel(bool value);
    public abstract virtual string get_ContentMimeType();
    public abstract virtual CoreWebView2SaveAsKind get_Kind();
    public abstract virtual void set_Kind(CoreWebView2SaveAsKind value);
    public abstract virtual string get_SaveAsFilePath();
    public abstract virtual void set_SaveAsFilePath(string value);
    public abstract virtual bool get_SuppressDefaultDialog();
    public abstract virtual void set_SuppressDefaultDialog(bool value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("6F6B50FF-3EAE-5C4C-A29F-6FCE822A04E0")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2SaveFileSecurityCheckStartingEventArgs")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2SaveFileSecurityCheckStartingEventArgs {
    public bool CancelSave { get; public set; }
    public string DocumentOriginUri { get; }
    public string FileExtension { get; }
    public string FilePath { get; }
    public bool SuppressDefaultPolicy { get; public set; }
    public abstract virtual Deferral GetDeferral();
    public abstract virtual bool get_CancelSave();
    public abstract virtual void set_CancelSave(bool value);
    public abstract virtual string get_DocumentOriginUri();
    public abstract virtual string get_FileExtension();
    public abstract virtual string get_FilePath();
    public abstract virtual bool get_SuppressDefaultPolicy();
    public abstract virtual void set_SuppressDefaultPolicy(bool value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("35F0E2BB-94B0-5BE7-B633-F87244E38BFE")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ScreenCaptureStartingEventArgs")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ScreenCaptureStartingEventArgs {
    public bool Cancel { get; public set; }
    public bool Handled { get; public set; }
    public CoreWebView2FrameInfo OriginalSourceFrameInfo { get; }
    public abstract virtual Deferral GetDeferral();
    public abstract virtual bool get_Cancel();
    public abstract virtual void set_Cancel(bool value);
    public abstract virtual bool get_Handled();
    public abstract virtual void set_Handled(bool value);
    public abstract virtual CoreWebView2FrameInfo get_OriginalSourceFrameInfo();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("A4315212-C7EB-568A-86E4-C61E31BA6CDA")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ScriptDialogOpeningEventArgs")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ScriptDialogOpeningEventArgs {
    public string DefaultText { get; }
    public CoreWebView2ScriptDialogKind Kind { get; }
    public string Message { get; }
    public string ResultText { get; public set; }
    public string Uri { get; }
    public abstract virtual void Accept();
    public abstract virtual Deferral GetDeferral();
    public abstract virtual string get_DefaultText();
    public abstract virtual CoreWebView2ScriptDialogKind get_Kind();
    public abstract virtual string get_Message();
    public abstract virtual string get_ResultText();
    public abstract virtual void set_ResultText(string value);
    public abstract virtual string get_Uri();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("09BC3CE3-3978-50A5-86AE-5C596D371C4E")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ScriptException")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ScriptException {
    public UInt32 ColumnNumber { get; }
    public UInt32 LineNumber { get; }
    public string Message { get; }
    public string Name { get; }
    public string ToJson { get; }
    public abstract virtual UInt32 get_ColumnNumber();
    public abstract virtual UInt32 get_LineNumber();
    public abstract virtual string get_Message();
    public abstract virtual string get_Name();
    public abstract virtual string get_ToJson();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("90FDC703-5A9E-56F6-A422-7C114C736420")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2ServerCertificateErrorDetectedEventArgs")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2ServerCertificateErrorDetectedEventArgs {
    public CoreWebView2ServerCertificateErrorAction Action { get; public set; }
    public CoreWebView2WebErrorStatus ErrorStatus { get; }
    public string RequestUri { get; }
    public CoreWebView2Certificate ServerCertificate { get; }
    public abstract virtual Deferral GetDeferral();
    public abstract virtual CoreWebView2ServerCertificateErrorAction get_Action();
    public abstract virtual void set_Action(CoreWebView2ServerCertificateErrorAction value);
    public abstract virtual CoreWebView2WebErrorStatus get_ErrorStatus();
    public abstract virtual string get_RequestUri();
    public abstract virtual CoreWebView2Certificate get_ServerCertificate();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("003B325E-74CD-52DD-8024-EBB8BE38E48E")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Settings")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Settings {
    public bool AreDefaultContextMenusEnabled { get; public set; }
    public bool AreDefaultScriptDialogsEnabled { get; public set; }
    public bool AreDevToolsEnabled { get; public set; }
    public bool AreHostObjectsAllowed { get; public set; }
    public bool IsBuiltInErrorPageEnabled { get; public set; }
    public bool IsScriptEnabled { get; public set; }
    public bool IsStatusBarEnabled { get; public set; }
    public bool IsWebMessageEnabled { get; public set; }
    public bool IsZoomControlEnabled { get; public set; }
    public abstract virtual bool get_AreDefaultContextMenusEnabled();
    public abstract virtual void set_AreDefaultContextMenusEnabled(bool value);
    public abstract virtual bool get_AreDefaultScriptDialogsEnabled();
    public abstract virtual void set_AreDefaultScriptDialogsEnabled(bool value);
    public abstract virtual bool get_AreDevToolsEnabled();
    public abstract virtual void set_AreDevToolsEnabled(bool value);
    public abstract virtual bool get_AreHostObjectsAllowed();
    public abstract virtual void set_AreHostObjectsAllowed(bool value);
    public abstract virtual bool get_IsBuiltInErrorPageEnabled();
    public abstract virtual void set_IsBuiltInErrorPageEnabled(bool value);
    public abstract virtual bool get_IsScriptEnabled();
    public abstract virtual void set_IsScriptEnabled(bool value);
    public abstract virtual bool get_IsStatusBarEnabled();
    public abstract virtual void set_IsStatusBarEnabled(bool value);
    public abstract virtual bool get_IsWebMessageEnabled();
    public abstract virtual void set_IsWebMessageEnabled(bool value);
    public abstract virtual bool get_IsZoomControlEnabled();
    public abstract virtual void set_IsZoomControlEnabled(bool value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("0A538C87-E000-511C-87CA-DED3413D03DA")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Settings_Manual")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Settings_Manual {
    public ICoreWebView2DispatchAdapter HostObjectDispatchAdapter { get; public set; }
    public abstract virtual ICoreWebView2DispatchAdapter get_HostObjectDispatchAdapter();
    public abstract virtual void set_HostObjectDispatchAdapter(ICoreWebView2DispatchAdapter value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("377D3480-FDB2-56E7-BADE-507D352887E9")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Settings2")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Settings2 {
    public string UserAgent { get; public set; }
    public abstract virtual string get_UserAgent();
    public abstract virtual void set_UserAgent(string value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("52200F01-5309-5B2E-A03C-3D2677591940")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Settings3")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Settings3 {
    public bool AreBrowserAcceleratorKeysEnabled { get; public set; }
    public abstract virtual bool get_AreBrowserAcceleratorKeysEnabled();
    public abstract virtual void set_AreBrowserAcceleratorKeysEnabled(bool value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("D6A955F0-DAEF-5A6A-A6F6-C72F0EDE7620")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Settings4")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Settings4 {
    public bool IsGeneralAutofillEnabled { get; public set; }
    public bool IsPasswordAutosaveEnabled { get; public set; }
    public abstract virtual bool get_IsGeneralAutofillEnabled();
    public abstract virtual void set_IsGeneralAutofillEnabled(bool value);
    public abstract virtual bool get_IsPasswordAutosaveEnabled();
    public abstract virtual void set_IsPasswordAutosaveEnabled(bool value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("AFC42B23-4839-5D73-ACF7-E0335631ABF5")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Settings5")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Settings5 {
    public bool IsPinchZoomEnabled { get; public set; }
    public abstract virtual bool get_IsPinchZoomEnabled();
    public abstract virtual void set_IsPinchZoomEnabled(bool value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("3FE4AE85-0540-5BF1-B4D9-99EC57AA64F5")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Settings6")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Settings6 {
    public bool IsSwipeNavigationEnabled { get; public set; }
    public abstract virtual bool get_IsSwipeNavigationEnabled();
    public abstract virtual void set_IsSwipeNavigationEnabled(bool value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("688027CD-9F84-59E8-8D5C-91123DF24B92")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Settings7")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Settings7 {
    public CoreWebView2PdfToolbarItems HiddenPdfToolbarItems { get; public set; }
    public abstract virtual CoreWebView2PdfToolbarItems get_HiddenPdfToolbarItems();
    public abstract virtual void set_HiddenPdfToolbarItems(CoreWebView2PdfToolbarItems value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("956F1A8F-3198-5577-B250-7D91D17F7EED")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Settings8")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Settings8 {
    public bool IsReputationCheckingRequired { get; public set; }
    public abstract virtual bool get_IsReputationCheckingRequired();
    public abstract virtual void set_IsReputationCheckingRequired(bool value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("4C346681-714D-5A3D-8105-2A7B80BEEAB5")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Settings9")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Settings9 {
    public bool IsNonClientRegionSupportEnabled { get; public set; }
    public abstract virtual bool get_IsNonClientRegionSupportEnabled();
    public abstract virtual void set_IsNonClientRegionSupportEnabled(bool value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("2907CC84-F843-5959-8734-F871766F8F13")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2SharedBuffer")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2SharedBuffer {
    public ulong Size { get; }
    public abstract virtual IRandomAccessStream OpenStream();
    public abstract virtual ulong get_Size();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("1AA4E213-ACE3-5F74-A2AE-C6489CEB3239")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2SharedBuffer_Manual")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2SharedBuffer_Manual {
    public IMemoryBufferReference Buffer { get; }
    public abstract virtual IMemoryBufferReference get_Buffer();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("CA437B2C-6A18-5552-B749-B198F8CC34D9")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2SourceChangedEventArgs")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2SourceChangedEventArgs {
    public bool IsNewDocument { get; }
    public abstract virtual bool get_IsNewDocument();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("371E2C32-2DD7-5F1E-874C-C7F40B131A2D")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2Texture")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2Texture {
    public object Resource { get; }
    public ulong Timestamp { get; public set; }
    public abstract virtual object get_Resource();
    public abstract virtual ulong get_Timestamp();
    public abstract virtual void set_Timestamp(ulong value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("A4B79659-91F8-5676-978A-26F37BAA8845")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2TextureStream")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2TextureStream {
    public string Id { get; }
    public abstract virtual void AddAllowedOrigin(string origin, int value);
    public abstract virtual void RemoveAllowedOrigin(string origin);
    public abstract virtual CoreWebView2Texture CreateTexture(UInt32 widthInTexels, UInt32 heightInTexels);
    public abstract virtual CoreWebView2Texture GetAvailableTexture();
    public abstract virtual void CloseTexture(CoreWebView2Texture texture);
    public abstract virtual void PresentTexture(CoreWebView2Texture texture);
    public abstract virtual void Stop();
    public abstract virtual void SetD3DDevice(object d3dDevice);
    public abstract virtual string get_Id();
    [CompilerGeneratedAttribute]
public abstract virtual void add_ErrorReceived(TypedEventHandler`2<CoreWebView2TextureStream, CoreWebView2TextureStreamErrorReceivedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_ErrorReceived(TypedEventHandler`2<CoreWebView2TextureStream, CoreWebView2TextureStreamErrorReceivedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_StartRequested(TypedEventHandler`2<CoreWebView2TextureStream, object> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_StartRequested(TypedEventHandler`2<CoreWebView2TextureStream, object> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_Stopped(TypedEventHandler`2<CoreWebView2TextureStream, object> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_Stopped(TypedEventHandler`2<CoreWebView2TextureStream, object> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_WebTextureReceived(TypedEventHandler`2<CoreWebView2TextureStream, CoreWebView2TextureStreamWebTextureReceivedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_WebTextureReceived(TypedEventHandler`2<CoreWebView2TextureStream, CoreWebView2TextureStreamWebTextureReceivedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_WebTextureStreamStopped(TypedEventHandler`2<CoreWebView2TextureStream, object> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_WebTextureStreamStopped(TypedEventHandler`2<CoreWebView2TextureStream, object> value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("8788681B-F2B7-5046-AA60-D03AEADD2D2B")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2TextureStreamErrorReceivedEventArgs")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2TextureStreamErrorReceivedEventArgs {
    public CoreWebView2TextureStreamErrorKind Kind { get; }
    public abstract virtual CoreWebView2TextureStreamErrorKind get_Kind();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("0532FC0D-057F-525F-9432-596CA9BF5FA3")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2TextureStreamWebTextureReceivedEventArgs")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2TextureStreamWebTextureReceivedEventArgs {
    public CoreWebView2WebTexture WebTexture { get; }
    public abstract virtual CoreWebView2WebTexture get_WebTexture();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("8954D90C-B8FF-5F02-B6B7-2DA952D540A4")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2UpdateRuntimeResult")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2UpdateRuntimeResult {
    public CoreWebView2UpdateRuntimeStatus Status { get; }
    public abstract virtual CoreWebView2UpdateRuntimeStatus get_Status();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("EB066159-B725-5D5B-ADC8-F5D7B9290304")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2WebMessageReceivedEventArgs")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2WebMessageReceivedEventArgs {
    public string Source { get; }
    public string WebMessageAsJson { get; }
    public abstract virtual string TryGetWebMessageAsString();
    public abstract virtual string get_Source();
    public abstract virtual string get_WebMessageAsJson();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("71DC5FA0-08A0-5DEA-9363-799DF5021452")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2WebMessageReceivedEventArgs2")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2WebMessageReceivedEventArgs2 {
    public IReadOnlyList`1<object> AdditionalObjects { get; }
    public abstract virtual IReadOnlyList`1<object> get_AdditionalObjects();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("5C742259-67D2-5DF2-8382-0F201B4D7197")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceRequest")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceRequest {
    public IRandomAccessStream Content { get; public set; }
    public CoreWebView2HttpRequestHeaders Headers { get; }
    public string Method { get; public set; }
    public string Uri { get; public set; }
    public abstract virtual IRandomAccessStream get_Content();
    public abstract virtual void set_Content(IRandomAccessStream value);
    public abstract virtual CoreWebView2HttpRequestHeaders get_Headers();
    public abstract virtual string get_Method();
    public abstract virtual void set_Method(string value);
    public abstract virtual string get_Uri();
    public abstract virtual void set_Uri(string value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("577F1FC4-C943-54A9-9700-BD469B48BD41")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceRequestedEventArgs")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceRequestedEventArgs {
    public CoreWebView2WebResourceRequest Request { get; }
    public CoreWebView2WebResourceContext ResourceContext { get; }
    public CoreWebView2WebResourceResponse Response { get; public set; }
    public abstract virtual Deferral GetDeferral();
    public abstract virtual CoreWebView2WebResourceRequest get_Request();
    public abstract virtual CoreWebView2WebResourceContext get_ResourceContext();
    public abstract virtual CoreWebView2WebResourceResponse get_Response();
    public abstract virtual void set_Response(CoreWebView2WebResourceResponse value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("0BBE4B89-88A9-575A-B09E-7946EE415E94")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceRequestedEventArgs2")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceRequestedEventArgs2 {
    public CoreWebView2WebResourceRequestSourceKinds RequestedSourceKind { get; }
    public abstract virtual CoreWebView2WebResourceRequestSourceKinds get_RequestedSourceKind();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("14621923-E485-5F44-8F5D-BD4243BC398F")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceResponse")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceResponse {
    public IRandomAccessStream Content { get; public set; }
    public CoreWebView2HttpResponseHeaders Headers { get; }
    public string ReasonPhrase { get; public set; }
    public int StatusCode { get; public set; }
    public abstract virtual IRandomAccessStream get_Content();
    public abstract virtual void set_Content(IRandomAccessStream value);
    public abstract virtual CoreWebView2HttpResponseHeaders get_Headers();
    public abstract virtual string get_ReasonPhrase();
    public abstract virtual void set_ReasonPhrase(string value);
    public abstract virtual int get_StatusCode();
    public abstract virtual void set_StatusCode(int value);
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("12424671-9711-54F4-BCDF-5F307ADD6EC2")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceResponseReceivedEventArgs")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceResponseReceivedEventArgs {
    public CoreWebView2WebResourceRequest Request { get; }
    public CoreWebView2WebResourceResponseView Response { get; }
    public abstract virtual CoreWebView2WebResourceRequest get_Request();
    public abstract virtual CoreWebView2WebResourceResponseView get_Response();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("33EE060B-B578-5698-B541-FEF87FE7FE72")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceResponseView")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2WebResourceResponseView {
    public CoreWebView2HttpResponseHeaders Headers { get; }
    public string ReasonPhrase { get; }
    public int StatusCode { get; }
    public abstract virtual IAsyncOperation`1<IRandomAccessStream> GetContentAsync();
    public abstract virtual CoreWebView2HttpResponseHeaders get_Headers();
    public abstract virtual string get_ReasonPhrase();
    public abstract virtual int get_StatusCode();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("3854CF38-6534-575D-9CF1-814BBD2AF35D")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2WebTexture")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2WebTexture {
    public object Resource { get; }
    public ulong Timestamp { get; }
    public abstract virtual object get_Resource();
    public abstract virtual ulong get_Timestamp();
}
[WindowsRuntimeTypeAttribute("Microsoft.Web.WebView2.Core")]
[GuidAttribute("EE8686D6-056F-5E06-824F-4E2A24C1C1D6")]
[WindowsRuntimeHelperTypeAttribute("ABI.Microsoft.Web.WebView2.Core.ICoreWebView2WindowFeatures")]
internal interface Microsoft.Web.WebView2.Core.ICoreWebView2WindowFeatures {
    public bool HasPosition { get; }
    public bool HasSize { get; }
    public UInt32 Height { get; }
    public UInt32 Left { get; }
    public bool ShouldDisplayMenuBar { get; }
    public bool ShouldDisplayScrollBars { get; }
    public bool ShouldDisplayStatus { get; }
    public bool ShouldDisplayToolbar { get; }
    public UInt32 Top { get; }
    public UInt32 Width { get; }
    public abstract virtual bool get_HasPosition();
    public abstract virtual bool get_HasSize();
    public abstract virtual UInt32 get_Height();
    public abstract virtual UInt32 get_Left();
    public abstract virtual bool get_ShouldDisplayMenuBar();
    public abstract virtual bool get_ShouldDisplayScrollBars();
    public abstract virtual bool get_ShouldDisplayStatus();
    public abstract virtual bool get_ShouldDisplayToolbar();
    public abstract virtual UInt32 get_Top();
    public abstract virtual UInt32 get_Width();
}
internal class WinRT._EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2BasicAuthenticationRequestedEventArgs_ : EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2BasicAuthenticationRequestedEventArgs>> {
    private static bool initialized;
    internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2BasicAuthenticationRequestedEventArgs_(IObjectReference obj, method addHandler, method removeHandler, int index);
    private static _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2BasicAuthenticationRequestedEventArgs_();
    protected virtual ObjectReferenceValue CreateMarshaler(TypedEventHandler`2<CoreWebView2, CoreWebView2BasicAuthenticationRequestedEventArgs> handler);
    protected virtual EventSourceState`1<TypedEventHandler`2<CoreWebView2, CoreWebView2BasicAuthenticationRequestedEventArgs>> CreateEventSourceState();
}
internal class WinRT._EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2ClientCertificateRequestedEventArgs_ : EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2ClientCertificateRequestedEventArgs>> {
    private static bool initialized;
    internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2ClientCertificateRequestedEventArgs_(IObjectReference obj, method addHandler, method removeHandler, int index);
    private static _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2ClientCertificateRequestedEventArgs_();
    protected virtual ObjectReferenceValue CreateMarshaler(TypedEventHandler`2<CoreWebView2, CoreWebView2ClientCertificateRequestedEventArgs> handler);
    protected virtual EventSourceState`1<TypedEventHandler`2<CoreWebView2, CoreWebView2ClientCertificateRequestedEventArgs>> CreateEventSourceState();
}
internal class WinRT._EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2ContentLoadingEventArgs_ : EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2ContentLoadingEventArgs>> {
    private static bool initialized;
    internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2ContentLoadingEventArgs_(IObjectReference obj, method addHandler, method removeHandler, int index);
    private static _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2ContentLoadingEventArgs_();
    protected virtual ObjectReferenceValue CreateMarshaler(TypedEventHandler`2<CoreWebView2, CoreWebView2ContentLoadingEventArgs> handler);
    protected virtual EventSourceState`1<TypedEventHandler`2<CoreWebView2, CoreWebView2ContentLoadingEventArgs>> CreateEventSourceState();
}
internal class WinRT._EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2ContextMenuRequestedEventArgs_ : EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2ContextMenuRequestedEventArgs>> {
    private static bool initialized;
    internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2ContextMenuRequestedEventArgs_(IObjectReference obj, method addHandler, method removeHandler, int index);
    private static _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2ContextMenuRequestedEventArgs_();
    protected virtual ObjectReferenceValue CreateMarshaler(TypedEventHandler`2<CoreWebView2, CoreWebView2ContextMenuRequestedEventArgs> handler);
    protected virtual EventSourceState`1<TypedEventHandler`2<CoreWebView2, CoreWebView2ContextMenuRequestedEventArgs>> CreateEventSourceState();
}
internal class WinRT._EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2DevToolsProtocolEventReceivedEventArgs_ : EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2DevToolsProtocolEventReceivedEventArgs>> {
    private static bool initialized;
    internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2DevToolsProtocolEventReceivedEventArgs_(IObjectReference obj, method addHandler, method removeHandler, int index);
    private static _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2DevToolsProtocolEventReceivedEventArgs_();
    protected virtual ObjectReferenceValue CreateMarshaler(TypedEventHandler`2<CoreWebView2, CoreWebView2DevToolsProtocolEventReceivedEventArgs> handler);
    protected virtual EventSourceState`1<TypedEventHandler`2<CoreWebView2, CoreWebView2DevToolsProtocolEventReceivedEventArgs>> CreateEventSourceState();
}
internal class WinRT._EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2DOMContentLoadedEventArgs_ : EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2DOMContentLoadedEventArgs>> {
    private static bool initialized;
    internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2DOMContentLoadedEventArgs_(IObjectReference obj, method addHandler, method removeHandler, int index);
    private static _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2DOMContentLoadedEventArgs_();
    protected virtual ObjectReferenceValue CreateMarshaler(TypedEventHandler`2<CoreWebView2, CoreWebView2DOMContentLoadedEventArgs> handler);
    protected virtual EventSourceState`1<TypedEventHandler`2<CoreWebView2, CoreWebView2DOMContentLoadedEventArgs>> CreateEventSourceState();
}
internal class WinRT._EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2DownloadStartingEventArgs_ : EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2DownloadStartingEventArgs>> {
    private static bool initialized;
    internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2DownloadStartingEventArgs_(IObjectReference obj, method addHandler, method removeHandler, int index);
    private static _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2DownloadStartingEventArgs_();
    protected virtual ObjectReferenceValue CreateMarshaler(TypedEventHandler`2<CoreWebView2, CoreWebView2DownloadStartingEventArgs> handler);
    protected virtual EventSourceState`1<TypedEventHandler`2<CoreWebView2, CoreWebView2DownloadStartingEventArgs>> CreateEventSourceState();
}
internal class WinRT._EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2FrameCreatedEventArgs_ : EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2FrameCreatedEventArgs>> {
    private static bool initialized;
    internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2FrameCreatedEventArgs_(IObjectReference obj, method addHandler, method removeHandler, int index);
    private static _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2FrameCreatedEventArgs_();
    protected virtual ObjectReferenceValue CreateMarshaler(TypedEventHandler`2<CoreWebView2, CoreWebView2FrameCreatedEventArgs> handler);
    protected virtual EventSourceState`1<TypedEventHandler`2<CoreWebView2, CoreWebView2FrameCreatedEventArgs>> CreateEventSourceState();
}
internal class WinRT._EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2LaunchingExternalUriSchemeEventArgs_ : EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2LaunchingExternalUriSchemeEventArgs>> {
    private static bool initialized;
    internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2LaunchingExternalUriSchemeEventArgs_(IObjectReference obj, method addHandler, method removeHandler, int index);
    private static _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2LaunchingExternalUriSchemeEventArgs_();
    protected virtual ObjectReferenceValue CreateMarshaler(TypedEventHandler`2<CoreWebView2, CoreWebView2LaunchingExternalUriSchemeEventArgs> handler);
    protected virtual EventSourceState`1<TypedEventHandler`2<CoreWebView2, CoreWebView2LaunchingExternalUriSchemeEventArgs>> CreateEventSourceState();
}
internal class WinRT._EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2NavigationCompletedEventArgs_ : EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2NavigationCompletedEventArgs>> {
    private static bool initialized;
    internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2NavigationCompletedEventArgs_(IObjectReference obj, method addHandler, method removeHandler, int index);
    private static _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2NavigationCompletedEventArgs_();
    protected virtual ObjectReferenceValue CreateMarshaler(TypedEventHandler`2<CoreWebView2, CoreWebView2NavigationCompletedEventArgs> handler);
    protected virtual EventSourceState`1<TypedEventHandler`2<CoreWebView2, CoreWebView2NavigationCompletedEventArgs>> CreateEventSourceState();
}
internal class WinRT._EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2NavigationStartingEventArgs_ : EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2NavigationStartingEventArgs>> {
    private static bool initialized;
    internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2NavigationStartingEventArgs_(IObjectReference obj, method addHandler, method removeHandler, int index);
    private static _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2NavigationStartingEventArgs_();
    protected virtual ObjectReferenceValue CreateMarshaler(TypedEventHandler`2<CoreWebView2, CoreWebView2NavigationStartingEventArgs> handler);
    protected virtual EventSourceState`1<TypedEventHandler`2<CoreWebView2, CoreWebView2NavigationStartingEventArgs>> CreateEventSourceState();
}
internal class WinRT._EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2NewWindowRequestedEventArgs_ : EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2NewWindowRequestedEventArgs>> {
    private static bool initialized;
    internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2NewWindowRequestedEventArgs_(IObjectReference obj, method addHandler, method removeHandler, int index);
    private static _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2NewWindowRequestedEventArgs_();
    protected virtual ObjectReferenceValue CreateMarshaler(TypedEventHandler`2<CoreWebView2, CoreWebView2NewWindowRequestedEventArgs> handler);
    protected virtual EventSourceState`1<TypedEventHandler`2<CoreWebView2, CoreWebView2NewWindowRequestedEventArgs>> CreateEventSourceState();
}
internal class WinRT._EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2NotificationReceivedEventArgs_ : EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2NotificationReceivedEventArgs>> {
    private static bool initialized;
    internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2NotificationReceivedEventArgs_(IObjectReference obj, method addHandler, method removeHandler, int index);
    private static _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2NotificationReceivedEventArgs_();
    protected virtual ObjectReferenceValue CreateMarshaler(TypedEventHandler`2<CoreWebView2, CoreWebView2NotificationReceivedEventArgs> handler);
    protected virtual EventSourceState`1<TypedEventHandler`2<CoreWebView2, CoreWebView2NotificationReceivedEventArgs>> CreateEventSourceState();
}
internal class WinRT._EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2PermissionRequestedEventArgs_ : EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2PermissionRequestedEventArgs>> {
    private static bool initialized;
    internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2PermissionRequestedEventArgs_(IObjectReference obj, method addHandler, method removeHandler, int index);
    private static _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2PermissionRequestedEventArgs_();
    protected virtual ObjectReferenceValue CreateMarshaler(TypedEventHandler`2<CoreWebView2, CoreWebView2PermissionRequestedEventArgs> handler);
    protected virtual EventSourceState`1<TypedEventHandler`2<CoreWebView2, CoreWebView2PermissionRequestedEventArgs>> CreateEventSourceState();
}
internal class WinRT._EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2ProcessFailedEventArgs_ : EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2ProcessFailedEventArgs>> {
    private static bool initialized;
    internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2ProcessFailedEventArgs_(IObjectReference obj, method addHandler, method removeHandler, int index);
    private static _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2ProcessFailedEventArgs_();
    protected virtual ObjectReferenceValue CreateMarshaler(TypedEventHandler`2<CoreWebView2, CoreWebView2ProcessFailedEventArgs> handler);
    protected virtual EventSourceState`1<TypedEventHandler`2<CoreWebView2, CoreWebView2ProcessFailedEventArgs>> CreateEventSourceState();
}
internal class WinRT._EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2SaveAsUIShowingEventArgs_ : EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2SaveAsUIShowingEventArgs>> {
    private static bool initialized;
    internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2SaveAsUIShowingEventArgs_(IObjectReference obj, method addHandler, method removeHandler, int index);
    private static _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2SaveAsUIShowingEventArgs_();
    protected virtual ObjectReferenceValue CreateMarshaler(TypedEventHandler`2<CoreWebView2, CoreWebView2SaveAsUIShowingEventArgs> handler);
    protected virtual EventSourceState`1<TypedEventHandler`2<CoreWebView2, CoreWebView2SaveAsUIShowingEventArgs>> CreateEventSourceState();
}
internal class WinRT._EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2SaveFileSecurityCheckStartingEventArgs_ : EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2SaveFileSecurityCheckStartingEventArgs>> {
    private static bool initialized;
    internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2SaveFileSecurityCheckStartingEventArgs_(IObjectReference obj, method addHandler, method removeHandler, int index);
    private static _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2SaveFileSecurityCheckStartingEventArgs_();
    protected virtual ObjectReferenceValue CreateMarshaler(TypedEventHandler`2<CoreWebView2, CoreWebView2SaveFileSecurityCheckStartingEventArgs> handler);
    protected virtual EventSourceState`1<TypedEventHandler`2<CoreWebView2, CoreWebView2SaveFileSecurityCheckStartingEventArgs>> CreateEventSourceState();
}
internal class WinRT._EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2ScreenCaptureStartingEventArgs_ : EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2ScreenCaptureStartingEventArgs>> {
    private static bool initialized;
    internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2ScreenCaptureStartingEventArgs_(IObjectReference obj, method addHandler, method removeHandler, int index);
    private static _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2ScreenCaptureStartingEventArgs_();
    protected virtual ObjectReferenceValue CreateMarshaler(TypedEventHandler`2<CoreWebView2, CoreWebView2ScreenCaptureStartingEventArgs> handler);
    protected virtual EventSourceState`1<TypedEventHandler`2<CoreWebView2, CoreWebView2ScreenCaptureStartingEventArgs>> CreateEventSourceState();
}
internal class WinRT._EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2ScriptDialogOpeningEventArgs_ : EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2ScriptDialogOpeningEventArgs>> {
    private static bool initialized;
    internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2ScriptDialogOpeningEventArgs_(IObjectReference obj, method addHandler, method removeHandler, int index);
    private static _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2ScriptDialogOpeningEventArgs_();
    protected virtual ObjectReferenceValue CreateMarshaler(TypedEventHandler`2<CoreWebView2, CoreWebView2ScriptDialogOpeningEventArgs> handler);
    protected virtual EventSourceState`1<TypedEventHandler`2<CoreWebView2, CoreWebView2ScriptDialogOpeningEventArgs>> CreateEventSourceState();
}
internal class WinRT._EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2ServerCertificateErrorDetectedEventArgs_ : EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2ServerCertificateErrorDetectedEventArgs>> {
    private static bool initialized;
    internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2ServerCertificateErrorDetectedEventArgs_(IObjectReference obj, method addHandler, method removeHandler, int index);
    private static _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2ServerCertificateErrorDetectedEventArgs_();
    protected virtual ObjectReferenceValue CreateMarshaler(TypedEventHandler`2<CoreWebView2, CoreWebView2ServerCertificateErrorDetectedEventArgs> handler);
    protected virtual EventSourceState`1<TypedEventHandler`2<CoreWebView2, CoreWebView2ServerCertificateErrorDetectedEventArgs>> CreateEventSourceState();
}
internal class WinRT._EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2SourceChangedEventArgs_ : EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2SourceChangedEventArgs>> {
    private static bool initialized;
    internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2SourceChangedEventArgs_(IObjectReference obj, method addHandler, method removeHandler, int index);
    private static _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2SourceChangedEventArgs_();
    protected virtual ObjectReferenceValue CreateMarshaler(TypedEventHandler`2<CoreWebView2, CoreWebView2SourceChangedEventArgs> handler);
    protected virtual EventSourceState`1<TypedEventHandler`2<CoreWebView2, CoreWebView2SourceChangedEventArgs>> CreateEventSourceState();
}
internal class WinRT._EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2WebMessageReceivedEventArgs_ : EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2WebMessageReceivedEventArgs>> {
    private static bool initialized;
    internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2WebMessageReceivedEventArgs_(IObjectReference obj, method addHandler, method removeHandler, int index);
    private static _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2WebMessageReceivedEventArgs_();
    protected virtual ObjectReferenceValue CreateMarshaler(TypedEventHandler`2<CoreWebView2, CoreWebView2WebMessageReceivedEventArgs> handler);
    protected virtual EventSourceState`1<TypedEventHandler`2<CoreWebView2, CoreWebView2WebMessageReceivedEventArgs>> CreateEventSourceState();
}
internal class WinRT._EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2WebResourceRequestedEventArgs_ : EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2WebResourceRequestedEventArgs>> {
    private static bool initialized;
    internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2WebResourceRequestedEventArgs_(IObjectReference obj, method addHandler, method removeHandler, int index);
    private static _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2WebResourceRequestedEventArgs_();
    protected virtual ObjectReferenceValue CreateMarshaler(TypedEventHandler`2<CoreWebView2, CoreWebView2WebResourceRequestedEventArgs> handler);
    protected virtual EventSourceState`1<TypedEventHandler`2<CoreWebView2, CoreWebView2WebResourceRequestedEventArgs>> CreateEventSourceState();
}
internal class WinRT._EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2WebResourceResponseReceivedEventArgs_ : EventSource`1<TypedEventHandler`2<CoreWebView2, CoreWebView2WebResourceResponseReceivedEventArgs>> {
    private static bool initialized;
    internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2WebResourceResponseReceivedEventArgs_(IObjectReference obj, method addHandler, method removeHandler, int index);
    private static _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__global__Microsoft_Web_WebView2_Core_CoreWebView2WebResourceResponseReceivedEventArgs_();
    protected virtual ObjectReferenceValue CreateMarshaler(TypedEventHandler`2<CoreWebView2, CoreWebView2WebResourceResponseReceivedEventArgs> handler);
    protected virtual EventSourceState`1<TypedEventHandler`2<CoreWebView2, CoreWebView2WebResourceResponseReceivedEventArgs>> CreateEventSourceState();
}
internal class WinRT._EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__object_ : EventSource`1<TypedEventHandler`2<CoreWebView2, object>> {
    private static bool initialized;
    internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__object_(IObjectReference obj, method addHandler, method removeHandler, int index);
    private static _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2__object_();
    protected virtual ObjectReferenceValue CreateMarshaler(TypedEventHandler`2<CoreWebView2, object> handler);
    protected virtual EventSourceState`1<TypedEventHandler`2<CoreWebView2, object>> CreateEventSourceState();
}
internal class WinRT._EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2CompositionController__global__Microsoft_Web_WebView2_Core_CoreWebView2NonClientRegionChangedEventArgs_ : EventSource`1<TypedEventHandler`2<CoreWebView2CompositionController, CoreWebView2NonClientRegionChangedEventArgs>> {
    private static bool initialized;
    internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2CompositionController__global__Microsoft_Web_WebView2_Core_CoreWebView2NonClientRegionChangedEventArgs_(IObjectReference obj, method addHandler, method removeHandler, int index);
    private static _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2CompositionController__global__Microsoft_Web_WebView2_Core_CoreWebView2NonClientRegionChangedEventArgs_();
    protected virtual ObjectReferenceValue CreateMarshaler(TypedEventHandler`2<CoreWebView2CompositionController, CoreWebView2NonClientRegionChangedEventArgs> handler);
    protected virtual EventSourceState`1<TypedEventHandler`2<CoreWebView2CompositionController, CoreWebView2NonClientRegionChangedEventArgs>> CreateEventSourceState();
}
internal class WinRT._EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2CompositionController__object_ : EventSource`1<TypedEventHandler`2<CoreWebView2CompositionController, object>> {
    private static bool initialized;
    internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2CompositionController__object_(IObjectReference obj, method addHandler, method removeHandler, int index);
    private static _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2CompositionController__object_();
    protected virtual ObjectReferenceValue CreateMarshaler(TypedEventHandler`2<CoreWebView2CompositionController, object> handler);
    protected virtual EventSourceState`1<TypedEventHandler`2<CoreWebView2CompositionController, object>> CreateEventSourceState();
}
internal class WinRT._EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2ContextMenuItem__object_ : EventSource`1<TypedEventHandler`2<CoreWebView2ContextMenuItem, object>> {
    private static bool initialized;
    internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2ContextMenuItem__object_(IObjectReference obj, method addHandler, method removeHandler, int index);
    private static _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2ContextMenuItem__object_();
    protected virtual ObjectReferenceValue CreateMarshaler(TypedEventHandler`2<CoreWebView2ContextMenuItem, object> handler);
    protected virtual EventSourceState`1<TypedEventHandler`2<CoreWebView2ContextMenuItem, object>> CreateEventSourceState();
}
internal class WinRT._EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Controller__global__Microsoft_Web_WebView2_Core_CoreWebView2AcceleratorKeyPressedEventArgs_ : EventSource`1<TypedEventHandler`2<CoreWebView2Controller, CoreWebView2AcceleratorKeyPressedEventArgs>> {
    private static bool initialized;
    internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Controller__global__Microsoft_Web_WebView2_Core_CoreWebView2AcceleratorKeyPressedEventArgs_(IObjectReference obj, method addHandler, method removeHandler, int index);
    private static _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Controller__global__Microsoft_Web_WebView2_Core_CoreWebView2AcceleratorKeyPressedEventArgs_();
    protected virtual ObjectReferenceValue CreateMarshaler(TypedEventHandler`2<CoreWebView2Controller, CoreWebView2AcceleratorKeyPressedEventArgs> handler);
    protected virtual EventSourceState`1<TypedEventHandler`2<CoreWebView2Controller, CoreWebView2AcceleratorKeyPressedEventArgs>> CreateEventSourceState();
}
internal class WinRT._EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Controller__global__Microsoft_Web_WebView2_Core_CoreWebView2MoveFocusRequestedEventArgs_ : EventSource`1<TypedEventHandler`2<CoreWebView2Controller, CoreWebView2MoveFocusRequestedEventArgs>> {
    private static bool initialized;
    internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Controller__global__Microsoft_Web_WebView2_Core_CoreWebView2MoveFocusRequestedEventArgs_(IObjectReference obj, method addHandler, method removeHandler, int index);
    private static _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Controller__global__Microsoft_Web_WebView2_Core_CoreWebView2MoveFocusRequestedEventArgs_();
    protected virtual ObjectReferenceValue CreateMarshaler(TypedEventHandler`2<CoreWebView2Controller, CoreWebView2MoveFocusRequestedEventArgs> handler);
    protected virtual EventSourceState`1<TypedEventHandler`2<CoreWebView2Controller, CoreWebView2MoveFocusRequestedEventArgs>> CreateEventSourceState();
}
internal class WinRT._EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Controller__object_ : EventSource`1<TypedEventHandler`2<CoreWebView2Controller, object>> {
    private static bool initialized;
    internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Controller__object_(IObjectReference obj, method addHandler, method removeHandler, int index);
    private static _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Controller__object_();
    protected virtual ObjectReferenceValue CreateMarshaler(TypedEventHandler`2<CoreWebView2Controller, object> handler);
    protected virtual EventSourceState`1<TypedEventHandler`2<CoreWebView2Controller, object>> CreateEventSourceState();
}
internal class WinRT._EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2DownloadOperation__object_ : EventSource`1<TypedEventHandler`2<CoreWebView2DownloadOperation, object>> {
    private static bool initialized;
    internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2DownloadOperation__object_(IObjectReference obj, method addHandler, method removeHandler, int index);
    private static _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2DownloadOperation__object_();
    protected virtual ObjectReferenceValue CreateMarshaler(TypedEventHandler`2<CoreWebView2DownloadOperation, object> handler);
    protected virtual EventSourceState`1<TypedEventHandler`2<CoreWebView2DownloadOperation, object>> CreateEventSourceState();
}
internal class WinRT._EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Environment__global__Microsoft_Web_WebView2_Core_CoreWebView2BrowserProcessExitedEventArgs_ : EventSource`1<TypedEventHandler`2<CoreWebView2Environment, CoreWebView2BrowserProcessExitedEventArgs>> {
    private static bool initialized;
    internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Environment__global__Microsoft_Web_WebView2_Core_CoreWebView2BrowserProcessExitedEventArgs_(IObjectReference obj, method addHandler, method removeHandler, int index);
    private static _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Environment__global__Microsoft_Web_WebView2_Core_CoreWebView2BrowserProcessExitedEventArgs_();
    protected virtual ObjectReferenceValue CreateMarshaler(TypedEventHandler`2<CoreWebView2Environment, CoreWebView2BrowserProcessExitedEventArgs> handler);
    protected virtual EventSourceState`1<TypedEventHandler`2<CoreWebView2Environment, CoreWebView2BrowserProcessExitedEventArgs>> CreateEventSourceState();
}
internal class WinRT._EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Environment__object_ : EventSource`1<TypedEventHandler`2<CoreWebView2Environment, object>> {
    private static bool initialized;
    internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Environment__object_(IObjectReference obj, method addHandler, method removeHandler, int index);
    private static _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Environment__object_();
    protected virtual ObjectReferenceValue CreateMarshaler(TypedEventHandler`2<CoreWebView2Environment, object> handler);
    protected virtual EventSourceState`1<TypedEventHandler`2<CoreWebView2Environment, object>> CreateEventSourceState();
}
internal class WinRT._EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Frame__global__Microsoft_Web_WebView2_Core_CoreWebView2ContentLoadingEventArgs_ : EventSource`1<TypedEventHandler`2<CoreWebView2Frame, CoreWebView2ContentLoadingEventArgs>> {
    private static bool initialized;
    internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Frame__global__Microsoft_Web_WebView2_Core_CoreWebView2ContentLoadingEventArgs_(IObjectReference obj, method addHandler, method removeHandler, int index);
    private static _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Frame__global__Microsoft_Web_WebView2_Core_CoreWebView2ContentLoadingEventArgs_();
    protected virtual ObjectReferenceValue CreateMarshaler(TypedEventHandler`2<CoreWebView2Frame, CoreWebView2ContentLoadingEventArgs> handler);
    protected virtual EventSourceState`1<TypedEventHandler`2<CoreWebView2Frame, CoreWebView2ContentLoadingEventArgs>> CreateEventSourceState();
}
internal class WinRT._EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Frame__global__Microsoft_Web_WebView2_Core_CoreWebView2DOMContentLoadedEventArgs_ : EventSource`1<TypedEventHandler`2<CoreWebView2Frame, CoreWebView2DOMContentLoadedEventArgs>> {
    private static bool initialized;
    internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Frame__global__Microsoft_Web_WebView2_Core_CoreWebView2DOMContentLoadedEventArgs_(IObjectReference obj, method addHandler, method removeHandler, int index);
    private static _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Frame__global__Microsoft_Web_WebView2_Core_CoreWebView2DOMContentLoadedEventArgs_();
    protected virtual ObjectReferenceValue CreateMarshaler(TypedEventHandler`2<CoreWebView2Frame, CoreWebView2DOMContentLoadedEventArgs> handler);
    protected virtual EventSourceState`1<TypedEventHandler`2<CoreWebView2Frame, CoreWebView2DOMContentLoadedEventArgs>> CreateEventSourceState();
}
internal class WinRT._EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Frame__global__Microsoft_Web_WebView2_Core_CoreWebView2NavigationCompletedEventArgs_ : EventSource`1<TypedEventHandler`2<CoreWebView2Frame, CoreWebView2NavigationCompletedEventArgs>> {
    private static bool initialized;
    internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Frame__global__Microsoft_Web_WebView2_Core_CoreWebView2NavigationCompletedEventArgs_(IObjectReference obj, method addHandler, method removeHandler, int index);
    private static _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Frame__global__Microsoft_Web_WebView2_Core_CoreWebView2NavigationCompletedEventArgs_();
    protected virtual ObjectReferenceValue CreateMarshaler(TypedEventHandler`2<CoreWebView2Frame, CoreWebView2NavigationCompletedEventArgs> handler);
    protected virtual EventSourceState`1<TypedEventHandler`2<CoreWebView2Frame, CoreWebView2NavigationCompletedEventArgs>> CreateEventSourceState();
}
internal class WinRT._EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Frame__global__Microsoft_Web_WebView2_Core_CoreWebView2NavigationStartingEventArgs_ : EventSource`1<TypedEventHandler`2<CoreWebView2Frame, CoreWebView2NavigationStartingEventArgs>> {
    private static bool initialized;
    internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Frame__global__Microsoft_Web_WebView2_Core_CoreWebView2NavigationStartingEventArgs_(IObjectReference obj, method addHandler, method removeHandler, int index);
    private static _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Frame__global__Microsoft_Web_WebView2_Core_CoreWebView2NavigationStartingEventArgs_();
    protected virtual ObjectReferenceValue CreateMarshaler(TypedEventHandler`2<CoreWebView2Frame, CoreWebView2NavigationStartingEventArgs> handler);
    protected virtual EventSourceState`1<TypedEventHandler`2<CoreWebView2Frame, CoreWebView2NavigationStartingEventArgs>> CreateEventSourceState();
}
internal class WinRT._EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Frame__global__Microsoft_Web_WebView2_Core_CoreWebView2PermissionRequestedEventArgs_ : EventSource`1<TypedEventHandler`2<CoreWebView2Frame, CoreWebView2PermissionRequestedEventArgs>> {
    private static bool initialized;
    internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Frame__global__Microsoft_Web_WebView2_Core_CoreWebView2PermissionRequestedEventArgs_(IObjectReference obj, method addHandler, method removeHandler, int index);
    private static _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Frame__global__Microsoft_Web_WebView2_Core_CoreWebView2PermissionRequestedEventArgs_();
    protected virtual ObjectReferenceValue CreateMarshaler(TypedEventHandler`2<CoreWebView2Frame, CoreWebView2PermissionRequestedEventArgs> handler);
    protected virtual EventSourceState`1<TypedEventHandler`2<CoreWebView2Frame, CoreWebView2PermissionRequestedEventArgs>> CreateEventSourceState();
}
internal class WinRT._EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Frame__global__Microsoft_Web_WebView2_Core_CoreWebView2ScreenCaptureStartingEventArgs_ : EventSource`1<TypedEventHandler`2<CoreWebView2Frame, CoreWebView2ScreenCaptureStartingEventArgs>> {
    private static bool initialized;
    internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Frame__global__Microsoft_Web_WebView2_Core_CoreWebView2ScreenCaptureStartingEventArgs_(IObjectReference obj, method addHandler, method removeHandler, int index);
    private static _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Frame__global__Microsoft_Web_WebView2_Core_CoreWebView2ScreenCaptureStartingEventArgs_();
    protected virtual ObjectReferenceValue CreateMarshaler(TypedEventHandler`2<CoreWebView2Frame, CoreWebView2ScreenCaptureStartingEventArgs> handler);
    protected virtual EventSourceState`1<TypedEventHandler`2<CoreWebView2Frame, CoreWebView2ScreenCaptureStartingEventArgs>> CreateEventSourceState();
}
internal class WinRT._EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Frame__global__Microsoft_Web_WebView2_Core_CoreWebView2WebMessageReceivedEventArgs_ : EventSource`1<TypedEventHandler`2<CoreWebView2Frame, CoreWebView2WebMessageReceivedEventArgs>> {
    private static bool initialized;
    internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Frame__global__Microsoft_Web_WebView2_Core_CoreWebView2WebMessageReceivedEventArgs_(IObjectReference obj, method addHandler, method removeHandler, int index);
    private static _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Frame__global__Microsoft_Web_WebView2_Core_CoreWebView2WebMessageReceivedEventArgs_();
    protected virtual ObjectReferenceValue CreateMarshaler(TypedEventHandler`2<CoreWebView2Frame, CoreWebView2WebMessageReceivedEventArgs> handler);
    protected virtual EventSourceState`1<TypedEventHandler`2<CoreWebView2Frame, CoreWebView2WebMessageReceivedEventArgs>> CreateEventSourceState();
}
internal class WinRT._EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Frame__object_ : EventSource`1<TypedEventHandler`2<CoreWebView2Frame, object>> {
    private static bool initialized;
    internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Frame__object_(IObjectReference obj, method addHandler, method removeHandler, int index);
    private static _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Frame__object_();
    protected virtual ObjectReferenceValue CreateMarshaler(TypedEventHandler`2<CoreWebView2Frame, object> handler);
    protected virtual EventSourceState`1<TypedEventHandler`2<CoreWebView2Frame, object>> CreateEventSourceState();
}
internal class WinRT._EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Notification__object_ : EventSource`1<TypedEventHandler`2<CoreWebView2Notification, object>> {
    private static bool initialized;
    internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Notification__object_(IObjectReference obj, method addHandler, method removeHandler, int index);
    private static _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Notification__object_();
    protected virtual ObjectReferenceValue CreateMarshaler(TypedEventHandler`2<CoreWebView2Notification, object> handler);
    protected virtual EventSourceState`1<TypedEventHandler`2<CoreWebView2Notification, object>> CreateEventSourceState();
}
internal class WinRT._EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Profile__object_ : EventSource`1<TypedEventHandler`2<CoreWebView2Profile, object>> {
    private static bool initialized;
    internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Profile__object_(IObjectReference obj, method addHandler, method removeHandler, int index);
    private static _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2Profile__object_();
    protected virtual ObjectReferenceValue CreateMarshaler(TypedEventHandler`2<CoreWebView2Profile, object> handler);
    protected virtual EventSourceState`1<TypedEventHandler`2<CoreWebView2Profile, object>> CreateEventSourceState();
}
internal class WinRT._EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2TextureStream__global__Microsoft_Web_WebView2_Core_CoreWebView2TextureStreamErrorReceivedEventArgs_ : EventSource`1<TypedEventHandler`2<CoreWebView2TextureStream, CoreWebView2TextureStreamErrorReceivedEventArgs>> {
    private static bool initialized;
    internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2TextureStream__global__Microsoft_Web_WebView2_Core_CoreWebView2TextureStreamErrorReceivedEventArgs_(IObjectReference obj, method addHandler, method removeHandler, int index);
    private static _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2TextureStream__global__Microsoft_Web_WebView2_Core_CoreWebView2TextureStreamErrorReceivedEventArgs_();
    protected virtual ObjectReferenceValue CreateMarshaler(TypedEventHandler`2<CoreWebView2TextureStream, CoreWebView2TextureStreamErrorReceivedEventArgs> handler);
    protected virtual EventSourceState`1<TypedEventHandler`2<CoreWebView2TextureStream, CoreWebView2TextureStreamErrorReceivedEventArgs>> CreateEventSourceState();
}
internal class WinRT._EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2TextureStream__global__Microsoft_Web_WebView2_Core_CoreWebView2TextureStreamWebTextureReceivedEventArgs_ : EventSource`1<TypedEventHandler`2<CoreWebView2TextureStream, CoreWebView2TextureStreamWebTextureReceivedEventArgs>> {
    private static bool initialized;
    internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2TextureStream__global__Microsoft_Web_WebView2_Core_CoreWebView2TextureStreamWebTextureReceivedEventArgs_(IObjectReference obj, method addHandler, method removeHandler, int index);
    private static _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2TextureStream__global__Microsoft_Web_WebView2_Core_CoreWebView2TextureStreamWebTextureReceivedEventArgs_();
    protected virtual ObjectReferenceValue CreateMarshaler(TypedEventHandler`2<CoreWebView2TextureStream, CoreWebView2TextureStreamWebTextureReceivedEventArgs> handler);
    protected virtual EventSourceState`1<TypedEventHandler`2<CoreWebView2TextureStream, CoreWebView2TextureStreamWebTextureReceivedEventArgs>> CreateEventSourceState();
}
internal class WinRT._EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2TextureStream__object_ : EventSource`1<TypedEventHandler`2<CoreWebView2TextureStream, object>> {
    private static bool initialized;
    internal _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2TextureStream__object_(IObjectReference obj, method addHandler, method removeHandler, int index);
    private static _EventSource_global__Windows_Foundation_TypedEventHandler_global__Microsoft_Web_WebView2_Core_CoreWebView2TextureStream__object_();
    protected virtual ObjectReferenceValue CreateMarshaler(TypedEventHandler`2<CoreWebView2TextureStream, object> handler);
    protected virtual EventSourceState`1<TypedEventHandler`2<CoreWebView2TextureStream, object>> CreateEventSourceState();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_AsyncOperationCompletedHandler_1_Boolean : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_AsyncOperationCompletedHandler_1_Boolean();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr asyncInfo, AsyncStatus asyncStatus);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_AsyncOperationCompletedHandler_1_Microsoft_Web_WebView2_Core_CoreWebView2BrowserExtension : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_AsyncOperationCompletedHandler_1_Microsoft_Web_WebView2_Core_CoreWebView2BrowserExtension();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr asyncInfo, AsyncStatus asyncStatus);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_AsyncOperationCompletedHandler_1_Microsoft_Web_WebView2_Core_CoreWebView2CompositionController : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_AsyncOperationCompletedHandler_1_Microsoft_Web_WebView2_Core_CoreWebView2CompositionController();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr asyncInfo, AsyncStatus asyncStatus);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_AsyncOperationCompletedHandler_1_Microsoft_Web_WebView2_Core_CoreWebView2Controller : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_AsyncOperationCompletedHandler_1_Microsoft_Web_WebView2_Core_CoreWebView2Controller();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr asyncInfo, AsyncStatus asyncStatus);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_AsyncOperationCompletedHandler_1_Microsoft_Web_WebView2_Core_CoreWebView2Environment : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_AsyncOperationCompletedHandler_1_Microsoft_Web_WebView2_Core_CoreWebView2Environment();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr asyncInfo, AsyncStatus asyncStatus);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_AsyncOperationCompletedHandler_1_Microsoft_Web_WebView2_Core_CoreWebView2ExecuteScriptResult : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_AsyncOperationCompletedHandler_1_Microsoft_Web_WebView2_Core_CoreWebView2ExecuteScriptResult();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr asyncInfo, AsyncStatus asyncStatus);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_AsyncOperationCompletedHandler_1_Microsoft_Web_WebView2_Core_CoreWebView2PrintStatus : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_AsyncOperationCompletedHandler_1_Microsoft_Web_WebView2_Core_CoreWebView2PrintStatus();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr asyncInfo, AsyncStatus asyncStatus);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_AsyncOperationCompletedHandler_1_Microsoft_Web_WebView2_Core_CoreWebView2SaveAsUIResult : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_AsyncOperationCompletedHandler_1_Microsoft_Web_WebView2_Core_CoreWebView2SaveAsUIResult();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr asyncInfo, AsyncStatus asyncStatus);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_AsyncOperationCompletedHandler_1_Microsoft_Web_WebView2_Core_CoreWebView2UpdateRuntimeResult : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_AsyncOperationCompletedHandler_1_Microsoft_Web_WebView2_Core_CoreWebView2UpdateRuntimeResult();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr asyncInfo, AsyncStatus asyncStatus);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_AsyncOperationCompletedHandler_1_String : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_AsyncOperationCompletedHandler_1_String();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr asyncInfo, AsyncStatus asyncStatus);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_AsyncOperationCompletedHandler_1_Windows_Foundation_Collections_IVectorView_1_Microsoft_Web_WebView2_Core_CoreWebView2BrowserExtension_ : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_AsyncOperationCompletedHandler_1_Windows_Foundation_Collections_IVectorView_1_Microsoft_Web_WebView2_Core_CoreWebView2BrowserExtension_();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr asyncInfo, AsyncStatus asyncStatus);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_AsyncOperationCompletedHandler_1_Windows_Foundation_Collections_IVectorView_1_Microsoft_Web_WebView2_Core_CoreWebView2Cookie_ : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_AsyncOperationCompletedHandler_1_Windows_Foundation_Collections_IVectorView_1_Microsoft_Web_WebView2_Core_CoreWebView2Cookie_();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr asyncInfo, AsyncStatus asyncStatus);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_AsyncOperationCompletedHandler_1_Windows_Foundation_Collections_IVectorView_1_Microsoft_Web_WebView2_Core_CoreWebView2PermissionSetting_ : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_AsyncOperationCompletedHandler_1_Windows_Foundation_Collections_IVectorView_1_Microsoft_Web_WebView2_Core_CoreWebView2PermissionSetting_();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr asyncInfo, AsyncStatus asyncStatus);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_AsyncOperationCompletedHandler_1_Windows_Foundation_Collections_IVectorView_1_Microsoft_Web_WebView2_Core_CoreWebView2ProcessExtendedInfo_ : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_AsyncOperationCompletedHandler_1_Windows_Foundation_Collections_IVectorView_1_Microsoft_Web_WebView2_Core_CoreWebView2ProcessExtendedInfo_();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr asyncInfo, AsyncStatus asyncStatus);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_AsyncOperationCompletedHandler_1_Windows_Foundation_Collections_IVectorView_1_Microsoft_Web_WebView2_Core_CoreWebView2ProcessInfo_ : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_AsyncOperationCompletedHandler_1_Windows_Foundation_Collections_IVectorView_1_Microsoft_Web_WebView2_Core_CoreWebView2ProcessInfo_();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr asyncInfo, AsyncStatus asyncStatus);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_AsyncOperationCompletedHandler_1_Windows_Storage_Streams_IRandomAccessStream : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_AsyncOperationCompletedHandler_1_Windows_Storage_Streams_IRandomAccessStream();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr asyncInfo, AsyncStatus asyncStatus);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterable_1_Microsoft_Web_WebView2_Core_CoreWebView2BrowserExtension : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IIterable_1_Microsoft_Web_WebView2_Core_CoreWebView2BrowserExtension();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static IEnumerator`1<CoreWebView2BrowserExtension> First(IObjectReference _obj);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterable_1_Microsoft_Web_WebView2_Core_CoreWebView2ClientCertificate : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IIterable_1_Microsoft_Web_WebView2_Core_CoreWebView2ClientCertificate();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static IEnumerator`1<CoreWebView2ClientCertificate> First(IObjectReference _obj);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterable_1_Microsoft_Web_WebView2_Core_CoreWebView2ContextMenuItem : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IIterable_1_Microsoft_Web_WebView2_Core_CoreWebView2ContextMenuItem();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static IEnumerator`1<CoreWebView2ContextMenuItem> First(IObjectReference _obj);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterable_1_Microsoft_Web_WebView2_Core_CoreWebView2Cookie : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IIterable_1_Microsoft_Web_WebView2_Core_CoreWebView2Cookie();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static IEnumerator`1<CoreWebView2Cookie> First(IObjectReference _obj);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterable_1_Microsoft_Web_WebView2_Core_CoreWebView2CustomSchemeRegistration : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IIterable_1_Microsoft_Web_WebView2_Core_CoreWebView2CustomSchemeRegistration();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static IEnumerator`1<CoreWebView2CustomSchemeRegistration> First(IObjectReference _obj);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterable_1_Microsoft_Web_WebView2_Core_CoreWebView2FrameInfo : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IIterable_1_Microsoft_Web_WebView2_Core_CoreWebView2FrameInfo();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static IEnumerator`1<CoreWebView2FrameInfo> First(IObjectReference _obj);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterable_1_Microsoft_Web_WebView2_Core_CoreWebView2PermissionSetting : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IIterable_1_Microsoft_Web_WebView2_Core_CoreWebView2PermissionSetting();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static IEnumerator`1<CoreWebView2PermissionSetting> First(IObjectReference _obj);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterable_1_Microsoft_Web_WebView2_Core_CoreWebView2ProcessExtendedInfo : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IIterable_1_Microsoft_Web_WebView2_Core_CoreWebView2ProcessExtendedInfo();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static IEnumerator`1<CoreWebView2ProcessExtendedInfo> First(IObjectReference _obj);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterable_1_Microsoft_Web_WebView2_Core_CoreWebView2ProcessInfo : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IIterable_1_Microsoft_Web_WebView2_Core_CoreWebView2ProcessInfo();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static IEnumerator`1<CoreWebView2ProcessInfo> First(IObjectReference _obj);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterable_1_object : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IIterable_1_object();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static IEnumerator`1<object> First(IObjectReference _obj);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterable_1_String : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IIterable_1_String();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static IEnumerator`1<string> First(IObjectReference _obj);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterable_1_UInt64 : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IIterable_1_UInt64();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static IEnumerator`1<ulong> First(IObjectReference _obj);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterable_1_Windows_Foundation_Collections_IKeyValuePair_2_String__String_ : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IIterable_1_Windows_Foundation_Collections_IKeyValuePair_2_String__String_();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static IEnumerator`1<KeyValuePair`2<string, string>> First(IObjectReference _obj);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterable_1_Windows_Foundation_Rect : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IIterable_1_Windows_Foundation_Rect();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static IEnumerator`1<Rect> First(IObjectReference _obj);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterator_1_Microsoft_Web_WebView2_Core_CoreWebView2BrowserExtension : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IIterator_1_Microsoft_Web_WebView2_Core_CoreWebView2BrowserExtension();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static UInt32 GetMany(IObjectReference _obj, CoreWebView2BrowserExtension[] items);
    private static CoreWebView2BrowserExtension get_Current(IObjectReference _obj);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterator_1_Microsoft_Web_WebView2_Core_CoreWebView2ClientCertificate : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IIterator_1_Microsoft_Web_WebView2_Core_CoreWebView2ClientCertificate();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static UInt32 GetMany(IObjectReference _obj, CoreWebView2ClientCertificate[] items);
    private static CoreWebView2ClientCertificate get_Current(IObjectReference _obj);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterator_1_Microsoft_Web_WebView2_Core_CoreWebView2ContextMenuItem : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IIterator_1_Microsoft_Web_WebView2_Core_CoreWebView2ContextMenuItem();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static UInt32 GetMany(IObjectReference _obj, CoreWebView2ContextMenuItem[] items);
    private static CoreWebView2ContextMenuItem get_Current(IObjectReference _obj);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterator_1_Microsoft_Web_WebView2_Core_CoreWebView2Cookie : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IIterator_1_Microsoft_Web_WebView2_Core_CoreWebView2Cookie();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static UInt32 GetMany(IObjectReference _obj, CoreWebView2Cookie[] items);
    private static CoreWebView2Cookie get_Current(IObjectReference _obj);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterator_1_Microsoft_Web_WebView2_Core_CoreWebView2CustomSchemeRegistration : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IIterator_1_Microsoft_Web_WebView2_Core_CoreWebView2CustomSchemeRegistration();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static UInt32 GetMany(IObjectReference _obj, CoreWebView2CustomSchemeRegistration[] items);
    private static CoreWebView2CustomSchemeRegistration get_Current(IObjectReference _obj);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterator_1_Microsoft_Web_WebView2_Core_CoreWebView2FrameInfo : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IIterator_1_Microsoft_Web_WebView2_Core_CoreWebView2FrameInfo();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static UInt32 GetMany(IObjectReference _obj, CoreWebView2FrameInfo[] items);
    private static CoreWebView2FrameInfo get_Current(IObjectReference _obj);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterator_1_Microsoft_Web_WebView2_Core_CoreWebView2PermissionSetting : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IIterator_1_Microsoft_Web_WebView2_Core_CoreWebView2PermissionSetting();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static UInt32 GetMany(IObjectReference _obj, CoreWebView2PermissionSetting[] items);
    private static CoreWebView2PermissionSetting get_Current(IObjectReference _obj);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterator_1_Microsoft_Web_WebView2_Core_CoreWebView2ProcessExtendedInfo : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IIterator_1_Microsoft_Web_WebView2_Core_CoreWebView2ProcessExtendedInfo();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static UInt32 GetMany(IObjectReference _obj, CoreWebView2ProcessExtendedInfo[] items);
    private static CoreWebView2ProcessExtendedInfo get_Current(IObjectReference _obj);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterator_1_Microsoft_Web_WebView2_Core_CoreWebView2ProcessInfo : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IIterator_1_Microsoft_Web_WebView2_Core_CoreWebView2ProcessInfo();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static UInt32 GetMany(IObjectReference _obj, CoreWebView2ProcessInfo[] items);
    private static CoreWebView2ProcessInfo get_Current(IObjectReference _obj);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterator_1_object : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IIterator_1_object();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static UInt32 GetMany(IObjectReference _obj, Object[] items);
    private static object get_Current(IObjectReference _obj);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterator_1_String : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IIterator_1_String();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static UInt32 GetMany(IObjectReference _obj, String[] items);
    private static string get_Current(IObjectReference _obj);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterator_1_UInt64 : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IIterator_1_UInt64();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static UInt32 GetMany(IObjectReference _obj, UInt64[] items);
    private static ulong get_Current(IObjectReference _obj);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterator_1_Windows_Foundation_Collections_IKeyValuePair_2_String__String_ : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IIterator_1_Windows_Foundation_Collections_IKeyValuePair_2_String__String_();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static UInt32 GetMany(IObjectReference _obj, KeyValuePair`2[] items);
    private static KeyValuePair`2<string, string> get_Current(IObjectReference _obj);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IIterator_1_Windows_Foundation_Rect : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IIterator_1_Windows_Foundation_Rect();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static UInt32 GetMany(IObjectReference _obj, Rect[] items);
    private static Rect get_Current(IObjectReference _obj);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IKeyValuePair_2_String__String : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IKeyValuePair_2_String__String();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static string get_Key(IObjectReference _obj);
    private static string get_Value(IObjectReference _obj);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVector_1_Microsoft_Web_WebView2_Core_CoreWebView2ContextMenuItem : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IVector_1_Microsoft_Web_WebView2_Core_CoreWebView2ContextMenuItem();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static CoreWebView2ContextMenuItem GetAt(IObjectReference _obj, UInt32 index);
    private static IReadOnlyList`1<CoreWebView2ContextMenuItem> GetView(IObjectReference _obj);
    private static bool IndexOf(IObjectReference _obj, CoreWebView2ContextMenuItem value, UInt32& index);
    private static void SetAt(IObjectReference _obj, UInt32 index, CoreWebView2ContextMenuItem value);
    private static void InsertAt(IObjectReference _obj, UInt32 index, CoreWebView2ContextMenuItem value);
    private static void Append(IObjectReference _obj, CoreWebView2ContextMenuItem value);
    private static UInt32 GetMany(IObjectReference _obj, UInt32 startIndex, CoreWebView2ContextMenuItem[] items);
    private static void ReplaceAll(IObjectReference _obj, CoreWebView2ContextMenuItem[] items);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVector_1_Microsoft_Web_WebView2_Core_CoreWebView2CustomSchemeRegistration : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IVector_1_Microsoft_Web_WebView2_Core_CoreWebView2CustomSchemeRegistration();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static CoreWebView2CustomSchemeRegistration GetAt(IObjectReference _obj, UInt32 index);
    private static IReadOnlyList`1<CoreWebView2CustomSchemeRegistration> GetView(IObjectReference _obj);
    private static bool IndexOf(IObjectReference _obj, CoreWebView2CustomSchemeRegistration value, UInt32& index);
    private static void SetAt(IObjectReference _obj, UInt32 index, CoreWebView2CustomSchemeRegistration value);
    private static void InsertAt(IObjectReference _obj, UInt32 index, CoreWebView2CustomSchemeRegistration value);
    private static void Append(IObjectReference _obj, CoreWebView2CustomSchemeRegistration value);
    private static UInt32 GetMany(IObjectReference _obj, UInt32 startIndex, CoreWebView2CustomSchemeRegistration[] items);
    private static void ReplaceAll(IObjectReference _obj, CoreWebView2CustomSchemeRegistration[] items);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVector_1_String : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IVector_1_String();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static string GetAt(IObjectReference _obj, UInt32 index);
    private static IReadOnlyList`1<string> GetView(IObjectReference _obj);
    private static bool IndexOf(IObjectReference _obj, string value, UInt32& index);
    private static void SetAt(IObjectReference _obj, UInt32 index, string value);
    private static void InsertAt(IObjectReference _obj, UInt32 index, string value);
    private static void Append(IObjectReference _obj, string value);
    private static UInt32 GetMany(IObjectReference _obj, UInt32 startIndex, String[] items);
    private static void ReplaceAll(IObjectReference _obj, String[] items);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVectorView_1_Microsoft_Web_WebView2_Core_CoreWebView2BrowserExtension : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IVectorView_1_Microsoft_Web_WebView2_Core_CoreWebView2BrowserExtension();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static CoreWebView2BrowserExtension GetAt(IObjectReference _obj, UInt32 index);
    private static bool IndexOf(IObjectReference _obj, CoreWebView2BrowserExtension value, UInt32& index);
    private static UInt32 GetMany(IObjectReference _obj, UInt32 startIndex, CoreWebView2BrowserExtension[] items);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVectorView_1_Microsoft_Web_WebView2_Core_CoreWebView2ClientCertificate : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IVectorView_1_Microsoft_Web_WebView2_Core_CoreWebView2ClientCertificate();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static CoreWebView2ClientCertificate GetAt(IObjectReference _obj, UInt32 index);
    private static bool IndexOf(IObjectReference _obj, CoreWebView2ClientCertificate value, UInt32& index);
    private static UInt32 GetMany(IObjectReference _obj, UInt32 startIndex, CoreWebView2ClientCertificate[] items);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVectorView_1_Microsoft_Web_WebView2_Core_CoreWebView2ContextMenuItem : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IVectorView_1_Microsoft_Web_WebView2_Core_CoreWebView2ContextMenuItem();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static CoreWebView2ContextMenuItem GetAt(IObjectReference _obj, UInt32 index);
    private static bool IndexOf(IObjectReference _obj, CoreWebView2ContextMenuItem value, UInt32& index);
    private static UInt32 GetMany(IObjectReference _obj, UInt32 startIndex, CoreWebView2ContextMenuItem[] items);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVectorView_1_Microsoft_Web_WebView2_Core_CoreWebView2Cookie : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IVectorView_1_Microsoft_Web_WebView2_Core_CoreWebView2Cookie();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static CoreWebView2Cookie GetAt(IObjectReference _obj, UInt32 index);
    private static bool IndexOf(IObjectReference _obj, CoreWebView2Cookie value, UInt32& index);
    private static UInt32 GetMany(IObjectReference _obj, UInt32 startIndex, CoreWebView2Cookie[] items);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVectorView_1_Microsoft_Web_WebView2_Core_CoreWebView2CustomSchemeRegistration : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IVectorView_1_Microsoft_Web_WebView2_Core_CoreWebView2CustomSchemeRegistration();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static CoreWebView2CustomSchemeRegistration GetAt(IObjectReference _obj, UInt32 index);
    private static bool IndexOf(IObjectReference _obj, CoreWebView2CustomSchemeRegistration value, UInt32& index);
    private static UInt32 GetMany(IObjectReference _obj, UInt32 startIndex, CoreWebView2CustomSchemeRegistration[] items);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVectorView_1_Microsoft_Web_WebView2_Core_CoreWebView2FrameInfo : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IVectorView_1_Microsoft_Web_WebView2_Core_CoreWebView2FrameInfo();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static CoreWebView2FrameInfo GetAt(IObjectReference _obj, UInt32 index);
    private static bool IndexOf(IObjectReference _obj, CoreWebView2FrameInfo value, UInt32& index);
    private static UInt32 GetMany(IObjectReference _obj, UInt32 startIndex, CoreWebView2FrameInfo[] items);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVectorView_1_Microsoft_Web_WebView2_Core_CoreWebView2PermissionSetting : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IVectorView_1_Microsoft_Web_WebView2_Core_CoreWebView2PermissionSetting();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static CoreWebView2PermissionSetting GetAt(IObjectReference _obj, UInt32 index);
    private static bool IndexOf(IObjectReference _obj, CoreWebView2PermissionSetting value, UInt32& index);
    private static UInt32 GetMany(IObjectReference _obj, UInt32 startIndex, CoreWebView2PermissionSetting[] items);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVectorView_1_Microsoft_Web_WebView2_Core_CoreWebView2ProcessExtendedInfo : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IVectorView_1_Microsoft_Web_WebView2_Core_CoreWebView2ProcessExtendedInfo();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static CoreWebView2ProcessExtendedInfo GetAt(IObjectReference _obj, UInt32 index);
    private static bool IndexOf(IObjectReference _obj, CoreWebView2ProcessExtendedInfo value, UInt32& index);
    private static UInt32 GetMany(IObjectReference _obj, UInt32 startIndex, CoreWebView2ProcessExtendedInfo[] items);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVectorView_1_Microsoft_Web_WebView2_Core_CoreWebView2ProcessInfo : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IVectorView_1_Microsoft_Web_WebView2_Core_CoreWebView2ProcessInfo();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static CoreWebView2ProcessInfo GetAt(IObjectReference _obj, UInt32 index);
    private static bool IndexOf(IObjectReference _obj, CoreWebView2ProcessInfo value, UInt32& index);
    private static UInt32 GetMany(IObjectReference _obj, UInt32 startIndex, CoreWebView2ProcessInfo[] items);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVectorView_1_object : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IVectorView_1_object();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static object GetAt(IObjectReference _obj, UInt32 index);
    private static bool IndexOf(IObjectReference _obj, object value, UInt32& index);
    private static UInt32 GetMany(IObjectReference _obj, UInt32 startIndex, Object[] items);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVectorView_1_String : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IVectorView_1_String();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static string GetAt(IObjectReference _obj, UInt32 index);
    private static bool IndexOf(IObjectReference _obj, string value, UInt32& index);
    private static UInt32 GetMany(IObjectReference _obj, UInt32 startIndex, String[] items);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVectorView_1_UInt64 : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IVectorView_1_UInt64();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static ulong GetAt(IObjectReference _obj, UInt32 index);
    private static bool IndexOf(IObjectReference _obj, ulong value, UInt32& index);
    private static UInt32 GetMany(IObjectReference _obj, UInt32 startIndex, UInt64[] items);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_Collections_IVectorView_1_Windows_Foundation_Rect : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_Collections_IVectorView_1_Windows_Foundation_Rect();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static Rect GetAt(IObjectReference _obj, UInt32 index);
    private static bool IndexOf(IObjectReference _obj, Rect value, UInt32& index);
    private static UInt32 GetMany(IObjectReference _obj, UInt32 startIndex, Rect[] items);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Boolean : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_IAsyncOperation_1_Boolean();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static bool GetResults(IObjectReference _obj);
    private static AsyncOperationCompletedHandler`1<bool> get_Completed(IObjectReference _obj);
    private static void put_Completed(IObjectReference _obj, AsyncOperationCompletedHandler`1<bool> value);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Microsoft_Web_WebView2_Core_CoreWebView2BrowserExtension : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_IAsyncOperation_1_Microsoft_Web_WebView2_Core_CoreWebView2BrowserExtension();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static CoreWebView2BrowserExtension GetResults(IObjectReference _obj);
    private static AsyncOperationCompletedHandler`1<CoreWebView2BrowserExtension> get_Completed(IObjectReference _obj);
    private static void put_Completed(IObjectReference _obj, AsyncOperationCompletedHandler`1<CoreWebView2BrowserExtension> value);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Microsoft_Web_WebView2_Core_CoreWebView2CompositionController : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_IAsyncOperation_1_Microsoft_Web_WebView2_Core_CoreWebView2CompositionController();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static CoreWebView2CompositionController GetResults(IObjectReference _obj);
    private static AsyncOperationCompletedHandler`1<CoreWebView2CompositionController> get_Completed(IObjectReference _obj);
    private static void put_Completed(IObjectReference _obj, AsyncOperationCompletedHandler`1<CoreWebView2CompositionController> value);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Microsoft_Web_WebView2_Core_CoreWebView2Controller : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_IAsyncOperation_1_Microsoft_Web_WebView2_Core_CoreWebView2Controller();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static CoreWebView2Controller GetResults(IObjectReference _obj);
    private static AsyncOperationCompletedHandler`1<CoreWebView2Controller> get_Completed(IObjectReference _obj);
    private static void put_Completed(IObjectReference _obj, AsyncOperationCompletedHandler`1<CoreWebView2Controller> value);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Microsoft_Web_WebView2_Core_CoreWebView2Environment : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_IAsyncOperation_1_Microsoft_Web_WebView2_Core_CoreWebView2Environment();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static CoreWebView2Environment GetResults(IObjectReference _obj);
    private static AsyncOperationCompletedHandler`1<CoreWebView2Environment> get_Completed(IObjectReference _obj);
    private static void put_Completed(IObjectReference _obj, AsyncOperationCompletedHandler`1<CoreWebView2Environment> value);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Microsoft_Web_WebView2_Core_CoreWebView2ExecuteScriptResult : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_IAsyncOperation_1_Microsoft_Web_WebView2_Core_CoreWebView2ExecuteScriptResult();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static CoreWebView2ExecuteScriptResult GetResults(IObjectReference _obj);
    private static AsyncOperationCompletedHandler`1<CoreWebView2ExecuteScriptResult> get_Completed(IObjectReference _obj);
    private static void put_Completed(IObjectReference _obj, AsyncOperationCompletedHandler`1<CoreWebView2ExecuteScriptResult> value);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Microsoft_Web_WebView2_Core_CoreWebView2PrintStatus : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_IAsyncOperation_1_Microsoft_Web_WebView2_Core_CoreWebView2PrintStatus();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static CoreWebView2PrintStatus GetResults(IObjectReference _obj);
    private static AsyncOperationCompletedHandler`1<CoreWebView2PrintStatus> get_Completed(IObjectReference _obj);
    private static void put_Completed(IObjectReference _obj, AsyncOperationCompletedHandler`1<CoreWebView2PrintStatus> value);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Microsoft_Web_WebView2_Core_CoreWebView2SaveAsUIResult : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_IAsyncOperation_1_Microsoft_Web_WebView2_Core_CoreWebView2SaveAsUIResult();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static CoreWebView2SaveAsUIResult GetResults(IObjectReference _obj);
    private static AsyncOperationCompletedHandler`1<CoreWebView2SaveAsUIResult> get_Completed(IObjectReference _obj);
    private static void put_Completed(IObjectReference _obj, AsyncOperationCompletedHandler`1<CoreWebView2SaveAsUIResult> value);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Microsoft_Web_WebView2_Core_CoreWebView2UpdateRuntimeResult : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_IAsyncOperation_1_Microsoft_Web_WebView2_Core_CoreWebView2UpdateRuntimeResult();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static CoreWebView2UpdateRuntimeResult GetResults(IObjectReference _obj);
    private static AsyncOperationCompletedHandler`1<CoreWebView2UpdateRuntimeResult> get_Completed(IObjectReference _obj);
    private static void put_Completed(IObjectReference _obj, AsyncOperationCompletedHandler`1<CoreWebView2UpdateRuntimeResult> value);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_String : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_IAsyncOperation_1_String();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static string GetResults(IObjectReference _obj);
    private static AsyncOperationCompletedHandler`1<string> get_Completed(IObjectReference _obj);
    private static void put_Completed(IObjectReference _obj, AsyncOperationCompletedHandler`1<string> value);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Foundation_Collections_IVectorView_1_Microsoft_Web_WebView2_Core_CoreWebView2BrowserExtension_ : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_IAsyncOperation_1_Windows_Foundation_Collections_IVectorView_1_Microsoft_Web_WebView2_Core_CoreWebView2BrowserExtension_();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static IReadOnlyList`1<CoreWebView2BrowserExtension> GetResults(IObjectReference _obj);
    private static AsyncOperationCompletedHandler`1<IReadOnlyList`1<CoreWebView2BrowserExtension>> get_Completed(IObjectReference _obj);
    private static void put_Completed(IObjectReference _obj, AsyncOperationCompletedHandler`1<IReadOnlyList`1<CoreWebView2BrowserExtension>> value);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Foundation_Collections_IVectorView_1_Microsoft_Web_WebView2_Core_CoreWebView2Cookie_ : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_IAsyncOperation_1_Windows_Foundation_Collections_IVectorView_1_Microsoft_Web_WebView2_Core_CoreWebView2Cookie_();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static IReadOnlyList`1<CoreWebView2Cookie> GetResults(IObjectReference _obj);
    private static AsyncOperationCompletedHandler`1<IReadOnlyList`1<CoreWebView2Cookie>> get_Completed(IObjectReference _obj);
    private static void put_Completed(IObjectReference _obj, AsyncOperationCompletedHandler`1<IReadOnlyList`1<CoreWebView2Cookie>> value);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Foundation_Collections_IVectorView_1_Microsoft_Web_WebView2_Core_CoreWebView2PermissionSetting_ : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_IAsyncOperation_1_Windows_Foundation_Collections_IVectorView_1_Microsoft_Web_WebView2_Core_CoreWebView2PermissionSetting_();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static IReadOnlyList`1<CoreWebView2PermissionSetting> GetResults(IObjectReference _obj);
    private static AsyncOperationCompletedHandler`1<IReadOnlyList`1<CoreWebView2PermissionSetting>> get_Completed(IObjectReference _obj);
    private static void put_Completed(IObjectReference _obj, AsyncOperationCompletedHandler`1<IReadOnlyList`1<CoreWebView2PermissionSetting>> value);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Foundation_Collections_IVectorView_1_Microsoft_Web_WebView2_Core_CoreWebView2ProcessExtendedInfo_ : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_IAsyncOperation_1_Windows_Foundation_Collections_IVectorView_1_Microsoft_Web_WebView2_Core_CoreWebView2ProcessExtendedInfo_();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static IReadOnlyList`1<CoreWebView2ProcessExtendedInfo> GetResults(IObjectReference _obj);
    private static AsyncOperationCompletedHandler`1<IReadOnlyList`1<CoreWebView2ProcessExtendedInfo>> get_Completed(IObjectReference _obj);
    private static void put_Completed(IObjectReference _obj, AsyncOperationCompletedHandler`1<IReadOnlyList`1<CoreWebView2ProcessExtendedInfo>> value);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Foundation_Collections_IVectorView_1_Microsoft_Web_WebView2_Core_CoreWebView2ProcessInfo_ : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_IAsyncOperation_1_Windows_Foundation_Collections_IVectorView_1_Microsoft_Web_WebView2_Core_CoreWebView2ProcessInfo_();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static IReadOnlyList`1<CoreWebView2ProcessInfo> GetResults(IObjectReference _obj);
    private static AsyncOperationCompletedHandler`1<IReadOnlyList`1<CoreWebView2ProcessInfo>> get_Completed(IObjectReference _obj);
    private static void put_Completed(IObjectReference _obj, AsyncOperationCompletedHandler`1<IReadOnlyList`1<CoreWebView2ProcessInfo>> value);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_IAsyncOperation_1_Windows_Storage_Streams_IRandomAccessStream : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_IAsyncOperation_1_Windows_Storage_Streams_IRandomAccessStream();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static IRandomAccessStream GetResults(IObjectReference _obj);
    private static AsyncOperationCompletedHandler`1<IRandomAccessStream> get_Completed(IObjectReference _obj);
    private static void put_Completed(IObjectReference _obj, AsyncOperationCompletedHandler`1<IRandomAccessStream> value);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2BasicAuthenticationRequestedEventArgs : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2BasicAuthenticationRequestedEventArgs();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static void Invoke(IObjectReference _obj, CoreWebView2 sender, CoreWebView2BasicAuthenticationRequestedEventArgs args);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr sender, IntPtr args);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2ClientCertificateRequestedEventArgs : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2ClientCertificateRequestedEventArgs();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static void Invoke(IObjectReference _obj, CoreWebView2 sender, CoreWebView2ClientCertificateRequestedEventArgs args);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr sender, IntPtr args);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2ContentLoadingEventArgs : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2ContentLoadingEventArgs();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static void Invoke(IObjectReference _obj, CoreWebView2 sender, CoreWebView2ContentLoadingEventArgs args);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr sender, IntPtr args);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2ContextMenuRequestedEventArgs : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2ContextMenuRequestedEventArgs();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static void Invoke(IObjectReference _obj, CoreWebView2 sender, CoreWebView2ContextMenuRequestedEventArgs args);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr sender, IntPtr args);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2DevToolsProtocolEventReceivedEventArgs : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2DevToolsProtocolEventReceivedEventArgs();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static void Invoke(IObjectReference _obj, CoreWebView2 sender, CoreWebView2DevToolsProtocolEventReceivedEventArgs args);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr sender, IntPtr args);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2DOMContentLoadedEventArgs : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2DOMContentLoadedEventArgs();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static void Invoke(IObjectReference _obj, CoreWebView2 sender, CoreWebView2DOMContentLoadedEventArgs args);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr sender, IntPtr args);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2DownloadStartingEventArgs : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2DownloadStartingEventArgs();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static void Invoke(IObjectReference _obj, CoreWebView2 sender, CoreWebView2DownloadStartingEventArgs args);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr sender, IntPtr args);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2FrameCreatedEventArgs : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2FrameCreatedEventArgs();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static void Invoke(IObjectReference _obj, CoreWebView2 sender, CoreWebView2FrameCreatedEventArgs args);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr sender, IntPtr args);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2LaunchingExternalUriSchemeEventArgs : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2LaunchingExternalUriSchemeEventArgs();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static void Invoke(IObjectReference _obj, CoreWebView2 sender, CoreWebView2LaunchingExternalUriSchemeEventArgs args);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr sender, IntPtr args);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2NavigationCompletedEventArgs : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2NavigationCompletedEventArgs();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static void Invoke(IObjectReference _obj, CoreWebView2 sender, CoreWebView2NavigationCompletedEventArgs args);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr sender, IntPtr args);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2NavigationStartingEventArgs : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2NavigationStartingEventArgs();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static void Invoke(IObjectReference _obj, CoreWebView2 sender, CoreWebView2NavigationStartingEventArgs args);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr sender, IntPtr args);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2NewWindowRequestedEventArgs : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2NewWindowRequestedEventArgs();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static void Invoke(IObjectReference _obj, CoreWebView2 sender, CoreWebView2NewWindowRequestedEventArgs args);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr sender, IntPtr args);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2NotificationReceivedEventArgs : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2NotificationReceivedEventArgs();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static void Invoke(IObjectReference _obj, CoreWebView2 sender, CoreWebView2NotificationReceivedEventArgs args);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr sender, IntPtr args);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2PermissionRequestedEventArgs : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2PermissionRequestedEventArgs();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static void Invoke(IObjectReference _obj, CoreWebView2 sender, CoreWebView2PermissionRequestedEventArgs args);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr sender, IntPtr args);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2ProcessFailedEventArgs : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2ProcessFailedEventArgs();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static void Invoke(IObjectReference _obj, CoreWebView2 sender, CoreWebView2ProcessFailedEventArgs args);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr sender, IntPtr args);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2SaveAsUIShowingEventArgs : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2SaveAsUIShowingEventArgs();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static void Invoke(IObjectReference _obj, CoreWebView2 sender, CoreWebView2SaveAsUIShowingEventArgs args);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr sender, IntPtr args);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2SaveFileSecurityCheckStartingEventArgs : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2SaveFileSecurityCheckStartingEventArgs();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static void Invoke(IObjectReference _obj, CoreWebView2 sender, CoreWebView2SaveFileSecurityCheckStartingEventArgs args);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr sender, IntPtr args);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2ScreenCaptureStartingEventArgs : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2ScreenCaptureStartingEventArgs();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static void Invoke(IObjectReference _obj, CoreWebView2 sender, CoreWebView2ScreenCaptureStartingEventArgs args);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr sender, IntPtr args);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2ScriptDialogOpeningEventArgs : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2ScriptDialogOpeningEventArgs();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static void Invoke(IObjectReference _obj, CoreWebView2 sender, CoreWebView2ScriptDialogOpeningEventArgs args);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr sender, IntPtr args);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2ServerCertificateErrorDetectedEventArgs : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2ServerCertificateErrorDetectedEventArgs();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static void Invoke(IObjectReference _obj, CoreWebView2 sender, CoreWebView2ServerCertificateErrorDetectedEventArgs args);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr sender, IntPtr args);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2SourceChangedEventArgs : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2SourceChangedEventArgs();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static void Invoke(IObjectReference _obj, CoreWebView2 sender, CoreWebView2SourceChangedEventArgs args);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr sender, IntPtr args);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2WebMessageReceivedEventArgs : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2WebMessageReceivedEventArgs();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static void Invoke(IObjectReference _obj, CoreWebView2 sender, CoreWebView2WebMessageReceivedEventArgs args);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr sender, IntPtr args);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2WebResourceRequestedEventArgs : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2WebResourceRequestedEventArgs();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static void Invoke(IObjectReference _obj, CoreWebView2 sender, CoreWebView2WebResourceRequestedEventArgs args);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr sender, IntPtr args);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2WebResourceResponseReceivedEventArgs : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__Microsoft_Web_WebView2_Core_CoreWebView2WebResourceResponseReceivedEventArgs();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static void Invoke(IObjectReference _obj, CoreWebView2 sender, CoreWebView2WebResourceResponseReceivedEventArgs args);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr sender, IntPtr args);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__object : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2__object();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static void Invoke(IObjectReference _obj, CoreWebView2 sender, object args);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr sender, IntPtr args);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2CompositionController__Microsoft_Web_WebView2_Core_CoreWebView2NonClientRegionChangedEventArgs : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2CompositionController__Microsoft_Web_WebView2_Core_CoreWebView2NonClientRegionChangedEventArgs();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static void Invoke(IObjectReference _obj, CoreWebView2CompositionController sender, CoreWebView2NonClientRegionChangedEventArgs args);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr sender, IntPtr args);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2CompositionController__object : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2CompositionController__object();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static void Invoke(IObjectReference _obj, CoreWebView2CompositionController sender, object args);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr sender, IntPtr args);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2ContextMenuItem__object : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2ContextMenuItem__object();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static void Invoke(IObjectReference _obj, CoreWebView2ContextMenuItem sender, object args);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr sender, IntPtr args);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2Controller__Microsoft_Web_WebView2_Core_CoreWebView2AcceleratorKeyPressedEventArgs : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2Controller__Microsoft_Web_WebView2_Core_CoreWebView2AcceleratorKeyPressedEventArgs();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static void Invoke(IObjectReference _obj, CoreWebView2Controller sender, CoreWebView2AcceleratorKeyPressedEventArgs args);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr sender, IntPtr args);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2Controller__Microsoft_Web_WebView2_Core_CoreWebView2MoveFocusRequestedEventArgs : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2Controller__Microsoft_Web_WebView2_Core_CoreWebView2MoveFocusRequestedEventArgs();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static void Invoke(IObjectReference _obj, CoreWebView2Controller sender, CoreWebView2MoveFocusRequestedEventArgs args);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr sender, IntPtr args);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2Controller__object : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2Controller__object();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static void Invoke(IObjectReference _obj, CoreWebView2Controller sender, object args);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr sender, IntPtr args);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2DownloadOperation__object : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2DownloadOperation__object();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static void Invoke(IObjectReference _obj, CoreWebView2DownloadOperation sender, object args);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr sender, IntPtr args);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2Environment__Microsoft_Web_WebView2_Core_CoreWebView2BrowserProcessExitedEventArgs : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2Environment__Microsoft_Web_WebView2_Core_CoreWebView2BrowserProcessExitedEventArgs();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static void Invoke(IObjectReference _obj, CoreWebView2Environment sender, CoreWebView2BrowserProcessExitedEventArgs args);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr sender, IntPtr args);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2Environment__object : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2Environment__object();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static void Invoke(IObjectReference _obj, CoreWebView2Environment sender, object args);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr sender, IntPtr args);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2Frame__Microsoft_Web_WebView2_Core_CoreWebView2ContentLoadingEventArgs : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2Frame__Microsoft_Web_WebView2_Core_CoreWebView2ContentLoadingEventArgs();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static void Invoke(IObjectReference _obj, CoreWebView2Frame sender, CoreWebView2ContentLoadingEventArgs args);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr sender, IntPtr args);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2Frame__Microsoft_Web_WebView2_Core_CoreWebView2DOMContentLoadedEventArgs : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2Frame__Microsoft_Web_WebView2_Core_CoreWebView2DOMContentLoadedEventArgs();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static void Invoke(IObjectReference _obj, CoreWebView2Frame sender, CoreWebView2DOMContentLoadedEventArgs args);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr sender, IntPtr args);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2Frame__Microsoft_Web_WebView2_Core_CoreWebView2NavigationCompletedEventArgs : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2Frame__Microsoft_Web_WebView2_Core_CoreWebView2NavigationCompletedEventArgs();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static void Invoke(IObjectReference _obj, CoreWebView2Frame sender, CoreWebView2NavigationCompletedEventArgs args);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr sender, IntPtr args);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2Frame__Microsoft_Web_WebView2_Core_CoreWebView2NavigationStartingEventArgs : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2Frame__Microsoft_Web_WebView2_Core_CoreWebView2NavigationStartingEventArgs();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static void Invoke(IObjectReference _obj, CoreWebView2Frame sender, CoreWebView2NavigationStartingEventArgs args);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr sender, IntPtr args);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2Frame__Microsoft_Web_WebView2_Core_CoreWebView2PermissionRequestedEventArgs : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2Frame__Microsoft_Web_WebView2_Core_CoreWebView2PermissionRequestedEventArgs();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static void Invoke(IObjectReference _obj, CoreWebView2Frame sender, CoreWebView2PermissionRequestedEventArgs args);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr sender, IntPtr args);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2Frame__Microsoft_Web_WebView2_Core_CoreWebView2ScreenCaptureStartingEventArgs : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2Frame__Microsoft_Web_WebView2_Core_CoreWebView2ScreenCaptureStartingEventArgs();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static void Invoke(IObjectReference _obj, CoreWebView2Frame sender, CoreWebView2ScreenCaptureStartingEventArgs args);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr sender, IntPtr args);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2Frame__Microsoft_Web_WebView2_Core_CoreWebView2WebMessageReceivedEventArgs : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2Frame__Microsoft_Web_WebView2_Core_CoreWebView2WebMessageReceivedEventArgs();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static void Invoke(IObjectReference _obj, CoreWebView2Frame sender, CoreWebView2WebMessageReceivedEventArgs args);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr sender, IntPtr args);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2Frame__object : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2Frame__object();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static void Invoke(IObjectReference _obj, CoreWebView2Frame sender, object args);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr sender, IntPtr args);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2Notification__object : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2Notification__object();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static void Invoke(IObjectReference _obj, CoreWebView2Notification sender, object args);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr sender, IntPtr args);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2Profile__object : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2Profile__object();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static void Invoke(IObjectReference _obj, CoreWebView2Profile sender, object args);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr sender, IntPtr args);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2TextureStream__Microsoft_Web_WebView2_Core_CoreWebView2TextureStreamErrorReceivedEventArgs : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2TextureStream__Microsoft_Web_WebView2_Core_CoreWebView2TextureStreamErrorReceivedEventArgs();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static void Invoke(IObjectReference _obj, CoreWebView2TextureStream sender, CoreWebView2TextureStreamErrorReceivedEventArgs args);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr sender, IntPtr args);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2TextureStream__Microsoft_Web_WebView2_Core_CoreWebView2TextureStreamWebTextureReceivedEventArgs : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2TextureStream__Microsoft_Web_WebView2_Core_CoreWebView2TextureStreamWebTextureReceivedEventArgs();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static void Invoke(IObjectReference _obj, CoreWebView2TextureStream sender, CoreWebView2TextureStreamWebTextureReceivedEventArgs args);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr sender, IntPtr args);
    private static bool Init();
}
internal static class WinRT.GenericTypeInstantiations.Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2TextureStream__object : object {
    [CompilerGeneratedAttribute]
private static bool <Initialized>k__BackingField;
    private static bool Initialized { get; }
    private static Windows_Foundation_TypedEventHandler_2_Microsoft_Web_WebView2_Core_CoreWebView2TextureStream__object();
    [CompilerGeneratedAttribute]
private static bool get_Initialized();
    public static bool EnsureInitialized();
    private static void Invoke(IObjectReference _obj, CoreWebView2TextureStream sender, object args);
    [UnmanagedCallersOnlyAttribute]
private static int Do_Abi_Invoke(IntPtr thisPtr, IntPtr sender, IntPtr args);
    private static bool Init();
}
internal static class WinRT.ProjectionInitializer : object {
    [ModuleInitializerAttribute]
public static void InitalizeProjection();
}
internal static class WinRT.ProjectionTypesInitializer : object {
    internal static Dictionary`2<string, string> TypeNameToBaseTypeNameMapping;
    private static ProjectionTypesInitializer();
    [ModuleInitializerAttribute]
internal static void InitalizeProjectionTypes();
}
