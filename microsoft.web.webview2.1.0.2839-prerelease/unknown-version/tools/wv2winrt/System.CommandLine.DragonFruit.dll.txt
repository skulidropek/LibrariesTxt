public class System.CommandLine.DragonFruit.CommandHelpMetadata : object {
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <ParameterDescriptions>k__BackingField;
    public string Description { get; public set; }
    public string Name { get; public set; }
    public Dictionary`2<string, string> ParameterDescriptions { get; }
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_ParameterDescriptions();
}
[ExtensionAttribute]
public static class System.CommandLine.DragonFruit.CommandLine : object {
    private static String[] _argumentParameterNames;
    private static CommandLine();
    [AsyncStateMachineAttribute("System.CommandLine.DragonFruit.CommandLine/<ExecuteAssemblyAsync>d__0")]
public static Task`1<int> ExecuteAssemblyAsync(Assembly entryAssembly, String[] args, string entryPointFullTypeName, string xmlDocsFilePath, IConsole console);
    public static int ExecuteAssembly(Assembly entryAssembly, String[] args, string entryPointFullTypeName, string xmlDocsFilePath, IConsole console);
    [AsyncStateMachineAttribute("System.CommandLine.DragonFruit.CommandLine/<InvokeMethodAsync>d__2")]
public static Task`1<int> InvokeMethodAsync(String[] args, MethodInfo method, string xmlDocsFilePath, object target, IConsole console);
    public static int InvokeMethod(String[] args, MethodInfo method, string xmlDocsFilePath, object target, IConsole console);
    private static Parser BuildParser(MethodInfo method, string xmlDocsFilePath, object target);
    [ExtensionAttribute]
public static CommandLineBuilder ConfigureRootCommandFromMethod(CommandLineBuilder builder, MethodInfo method, object target);
    [ExtensionAttribute]
public static void ConfigureFromMethod(Command command, MethodInfo method, object target);
    [ExtensionAttribute]
public static CommandLineBuilder ConfigureHelpFromXmlComments(CommandLineBuilder builder, MethodInfo method, string xmlDocsFilePath);
    [ExtensionAttribute]
public static string BuildAlias(IValueDescriptor descriptor);
    internal static string BuildAlias(string parameterName);
    [IteratorStateMachineAttribute("System.CommandLine.DragonFruit.CommandLine/<BuildOptions>d__11")]
[ExtensionAttribute]
public static IEnumerable`1<Option> BuildOptions(MethodInfo method);
    [ExtensionAttribute]
public static Option BuildOption(ParameterDescriptor parameter);
    private static string GetDefaultXmlDocsFileLocation(Assembly assembly);
}
public class System.CommandLine.DragonFruit.EntryPointDiscoverer : object {
    public static MethodInfo FindStaticEntryMethod(Assembly assembly, string entryPointFullTypeName);
    private static void FindMainMethodCandidates(TypeInfo type, List`1<MethodInfo> candidates);
    [CompilerGeneratedAttribute]
internal static string <FindStaticEntryMethod>g__MainMethodFullName|0_0(<>c__DisplayClass0_0& );
}
public class System.CommandLine.DragonFruit.XmlDocReader : object {
    [CompilerGeneratedAttribute]
private IEnumerable`1<XElement> <_members>k__BackingField;
    private IEnumerable`1<XElement> _members { get; }
    private XmlDocReader(XDocument document);
    [CompilerGeneratedAttribute]
private IEnumerable`1<XElement> get__members();
    public static bool TryLoad(string filePath, XmlDocReader& xmlDocReader);
    public static bool TryLoad(TextReader reader, XmlDocReader& xmlDocReader);
    public bool TryGetMethodDescription(MethodInfo info, CommandHelpMetadata& commandHelpMetadata);
    private static void AppendTypeName(StringBuilder sb, Type type);
}
