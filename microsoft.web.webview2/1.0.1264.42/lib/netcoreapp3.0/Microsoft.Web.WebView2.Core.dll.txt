internal static class Microsoft.Web.WebView2.Core.COMDotNetTypeConverter : object {
    public static Rectangle RectangleCOMToNet(tagRECT rect);
    public static tagRECT RectangleNetToCOM(Rectangle dotNetRect);
    public static List`1<CoreWebView2Cookie> CookieListCOMToNet(ICoreWebView2CookieList rawCookieList);
    public static IReadOnlyList`1<CoreWebView2FrameInfo> CoreWebView2FrameInfoCollectionCOMToNet(ICoreWebView2FrameInfoCollection rawFrameInfoCollection);
    public static Color ColorCOMToNet(COREWEBVIEW2_COLOR color);
    public static COREWEBVIEW2_COLOR ColorNetToCOM(Color dotNetColor);
    public static Point PointCOMToNet(tagPOINT point);
    public static tagPOINT PointNetToCOM(Point dotNetPoint);
    public static IReadOnlyList`1<CoreWebView2ClientCertificate> CoreWebView2ClientCertificateCollectionCOMToNet(ICoreWebView2ClientCertificateCollection rawClientCertificateCollection);
    public static IReadOnlyList`1<string> CoreWebView2StringCollectionCOMToNet(ICoreWebView2StringCollection rawStringCollection);
    public static IList`1<CoreWebView2ContextMenuItem> CoreWebView2ContextMenuItemCollectionCOMToNet(ICoreWebView2ContextMenuItemCollection rawContextMenuCollection);
    public static IReadOnlyList`1<CoreWebView2ProcessInfo> ProcessInfoCollectionCOMToNet(ICoreWebView2ProcessInfoCollection rawCoreWebView2ProcessInfoCollection);
}
internal class Microsoft.Web.WebView2.Core.COMStreamWrapper : Stream {
    private IStream istream;
    private IntPtr mInt64;
    public bool CanRead { get; }
    public bool CanSeek { get; }
    public bool CanWrite { get; }
    public long Length { get; }
    public long Position { get; public set; }
    public COMStreamWrapper(IStream source);
    protected virtual override void Finalize();
    public virtual bool get_CanRead();
    public virtual bool get_CanSeek();
    public virtual bool get_CanWrite();
    public virtual void Flush();
    public virtual long get_Length();
    public virtual long get_Position();
    public virtual void set_Position(long value);
    public virtual int Read(Byte[] buffer, int offset, int count);
    public virtual long Seek(long offset, SeekOrigin origin);
    public virtual void SetLength(long value);
    public virtual void Write(Byte[] buffer, int offset, int count);
}
public class Microsoft.Web.WebView2.Core.CoreWebView2 : object {
    internal ICoreWebView2 _nativeICoreWebView2Value;
    internal ICoreWebView2_2 _nativeICoreWebView2_2Value;
    internal ICoreWebView2_3 _nativeICoreWebView2_3Value;
    internal ICoreWebView2_4 _nativeICoreWebView2_4Value;
    internal ICoreWebView2_5 _nativeICoreWebView2_5Value;
    internal ICoreWebView2_6 _nativeICoreWebView2_6Value;
    internal ICoreWebView2_7 _nativeICoreWebView2_7Value;
    internal ICoreWebView2_8 _nativeICoreWebView2_8Value;
    internal ICoreWebView2_9 _nativeICoreWebView2_9Value;
    internal ICoreWebView2_10 _nativeICoreWebView2_10Value;
    internal ICoreWebView2_11 _nativeICoreWebView2_11Value;
    internal ICoreWebView2_12 _nativeICoreWebView2_12Value;
    internal ICoreWebView2_13 _nativeICoreWebView2_13Value;
    internal ICoreWebView2_14 _nativeICoreWebView2_14Value;
    internal object _rawNative;
    private EventRegistrationToken _navigationStartingToken;
    private EventHandler`1<CoreWebView2NavigationStartingEventArgs> navigationStarting;
    private EventRegistrationToken _contentLoadingToken;
    private EventHandler`1<CoreWebView2ContentLoadingEventArgs> contentLoading;
    private EventRegistrationToken _sourceChangedToken;
    private EventHandler`1<CoreWebView2SourceChangedEventArgs> sourceChanged;
    private EventRegistrationToken _historyChangedToken;
    private EventHandler`1<object> historyChanged;
    private EventRegistrationToken _navigationCompletedToken;
    private EventHandler`1<CoreWebView2NavigationCompletedEventArgs> navigationCompleted;
    private EventRegistrationToken _frameNavigationStartingToken;
    private EventHandler`1<CoreWebView2NavigationStartingEventArgs> frameNavigationStarting;
    private EventRegistrationToken _frameNavigationCompletedToken;
    private EventHandler`1<CoreWebView2NavigationCompletedEventArgs> frameNavigationCompleted;
    private EventRegistrationToken _scriptDialogOpeningToken;
    private EventHandler`1<CoreWebView2ScriptDialogOpeningEventArgs> scriptDialogOpening;
    private EventRegistrationToken _permissionRequestedToken;
    private EventHandler`1<CoreWebView2PermissionRequestedEventArgs> permissionRequested;
    private EventRegistrationToken _processFailedToken;
    private EventHandler`1<CoreWebView2ProcessFailedEventArgs> processFailed;
    private EventRegistrationToken _webMessageReceivedToken;
    private EventHandler`1<CoreWebView2WebMessageReceivedEventArgs> webMessageReceived;
    private EventRegistrationToken _newWindowRequestedToken;
    private EventHandler`1<CoreWebView2NewWindowRequestedEventArgs> newWindowRequested;
    private EventRegistrationToken _documentTitleChangedToken;
    private EventHandler`1<object> documentTitleChanged;
    private EventRegistrationToken _containsFullScreenElementChangedToken;
    private EventHandler`1<object> containsFullScreenElementChanged;
    private EventRegistrationToken _webResourceRequestedToken;
    private EventHandler`1<CoreWebView2WebResourceRequestedEventArgs> webResourceRequested;
    private EventRegistrationToken _windowCloseRequestedToken;
    private EventHandler`1<object> windowCloseRequested;
    private EventRegistrationToken _webResourceResponseReceivedToken;
    private EventHandler`1<CoreWebView2WebResourceResponseReceivedEventArgs> webResourceResponseReceived;
    private EventRegistrationToken _dOMContentLoadedToken;
    private EventHandler`1<CoreWebView2DOMContentLoadedEventArgs> dOMContentLoaded;
    private EventRegistrationToken _frameCreatedToken;
    private EventHandler`1<CoreWebView2FrameCreatedEventArgs> frameCreated;
    private EventRegistrationToken _downloadStartingToken;
    private EventHandler`1<CoreWebView2DownloadStartingEventArgs> downloadStarting;
    private EventRegistrationToken _clientCertificateRequestedToken;
    private EventHandler`1<CoreWebView2ClientCertificateRequestedEventArgs> clientCertificateRequested;
    private EventRegistrationToken _isMutedChangedToken;
    private EventHandler`1<object> isMutedChanged;
    private EventRegistrationToken _isDocumentPlayingAudioChangedToken;
    private EventHandler`1<object> isDocumentPlayingAudioChanged;
    private EventRegistrationToken _isDefaultDownloadDialogOpenChangedToken;
    private EventHandler`1<object> isDefaultDownloadDialogOpenChanged;
    private EventRegistrationToken _basicAuthenticationRequestedToken;
    private EventHandler`1<CoreWebView2BasicAuthenticationRequestedEventArgs> basicAuthenticationRequested;
    private EventRegistrationToken _contextMenuRequestedToken;
    private EventHandler`1<CoreWebView2ContextMenuRequestedEventArgs> contextMenuRequested;
    private EventRegistrationToken _statusBarTextChangedToken;
    private EventHandler`1<object> statusBarTextChanged;
    private EventRegistrationToken _serverCertificateErrorDetectedToken;
    private EventHandler`1<CoreWebView2ServerCertificateErrorDetectedEventArgs> serverCertificateErrorDetected;
    internal ICoreWebView2 _nativeICoreWebView2 { get; internal set; }
    internal ICoreWebView2_2 _nativeICoreWebView2_2 { get; internal set; }
    internal ICoreWebView2_3 _nativeICoreWebView2_3 { get; internal set; }
    internal ICoreWebView2_4 _nativeICoreWebView2_4 { get; internal set; }
    internal ICoreWebView2_5 _nativeICoreWebView2_5 { get; internal set; }
    internal ICoreWebView2_6 _nativeICoreWebView2_6 { get; internal set; }
    internal ICoreWebView2_7 _nativeICoreWebView2_7 { get; internal set; }
    internal ICoreWebView2_8 _nativeICoreWebView2_8 { get; internal set; }
    internal ICoreWebView2_9 _nativeICoreWebView2_9 { get; internal set; }
    internal ICoreWebView2_10 _nativeICoreWebView2_10 { get; internal set; }
    internal ICoreWebView2_11 _nativeICoreWebView2_11 { get; internal set; }
    internal ICoreWebView2_12 _nativeICoreWebView2_12 { get; internal set; }
    internal ICoreWebView2_13 _nativeICoreWebView2_13 { get; internal set; }
    internal ICoreWebView2_14 _nativeICoreWebView2_14 { get; internal set; }
    public CoreWebView2Settings Settings { get; }
    public string Source { get; }
    public UInt32 BrowserProcessId { get; }
    public bool CanGoBack { get; }
    public bool CanGoForward { get; }
    public string DocumentTitle { get; }
    public bool ContainsFullScreenElement { get; }
    public CoreWebView2CookieManager CookieManager { get; }
    public CoreWebView2Environment Environment { get; }
    public bool IsSuspended { get; }
    public bool IsMuted { get; public set; }
    public bool IsDocumentPlayingAudio { get; }
    public bool IsDefaultDownloadDialogOpen { get; }
    public CoreWebView2DefaultDownloadDialogCornerAlignment DefaultDownloadDialogCornerAlignment { get; public set; }
    public Point DefaultDownloadDialogMargin { get; public set; }
    public string StatusBarText { get; }
    public CoreWebView2Profile Profile { get; }
    internal CoreWebView2(object rawCoreWebView2);
    [AsyncStateMachineAttribute("Microsoft.Web.WebView2.Core.CoreWebView2/<PrintToPdfAsync>d__0")]
public Task`1<bool> PrintToPdfAsync(string ResultFilePath, CoreWebView2PrintSettings printSettings);
    internal ICoreWebView2 get__nativeICoreWebView2();
    internal void set__nativeICoreWebView2(ICoreWebView2 value);
    internal ICoreWebView2_2 get__nativeICoreWebView2_2();
    internal void set__nativeICoreWebView2_2(ICoreWebView2_2 value);
    internal ICoreWebView2_3 get__nativeICoreWebView2_3();
    internal void set__nativeICoreWebView2_3(ICoreWebView2_3 value);
    internal ICoreWebView2_4 get__nativeICoreWebView2_4();
    internal void set__nativeICoreWebView2_4(ICoreWebView2_4 value);
    internal ICoreWebView2_5 get__nativeICoreWebView2_5();
    internal void set__nativeICoreWebView2_5(ICoreWebView2_5 value);
    internal ICoreWebView2_6 get__nativeICoreWebView2_6();
    internal void set__nativeICoreWebView2_6(ICoreWebView2_6 value);
    internal ICoreWebView2_7 get__nativeICoreWebView2_7();
    internal void set__nativeICoreWebView2_7(ICoreWebView2_7 value);
    internal ICoreWebView2_8 get__nativeICoreWebView2_8();
    internal void set__nativeICoreWebView2_8(ICoreWebView2_8 value);
    internal ICoreWebView2_9 get__nativeICoreWebView2_9();
    internal void set__nativeICoreWebView2_9(ICoreWebView2_9 value);
    internal ICoreWebView2_10 get__nativeICoreWebView2_10();
    internal void set__nativeICoreWebView2_10(ICoreWebView2_10 value);
    internal ICoreWebView2_11 get__nativeICoreWebView2_11();
    internal void set__nativeICoreWebView2_11(ICoreWebView2_11 value);
    internal ICoreWebView2_12 get__nativeICoreWebView2_12();
    internal void set__nativeICoreWebView2_12(ICoreWebView2_12 value);
    internal ICoreWebView2_13 get__nativeICoreWebView2_13();
    internal void set__nativeICoreWebView2_13(ICoreWebView2_13 value);
    internal ICoreWebView2_14 get__nativeICoreWebView2_14();
    internal void set__nativeICoreWebView2_14(ICoreWebView2_14 value);
    public CoreWebView2Settings get_Settings();
    public string get_Source();
    public UInt32 get_BrowserProcessId();
    public bool get_CanGoBack();
    public bool get_CanGoForward();
    public string get_DocumentTitle();
    public bool get_ContainsFullScreenElement();
    public void add_NavigationStarting(EventHandler`1<CoreWebView2NavigationStartingEventArgs> value);
    public void remove_NavigationStarting(EventHandler`1<CoreWebView2NavigationStartingEventArgs> value);
    internal void OnNavigationStarting(CoreWebView2NavigationStartingEventArgs args);
    public void add_ContentLoading(EventHandler`1<CoreWebView2ContentLoadingEventArgs> value);
    public void remove_ContentLoading(EventHandler`1<CoreWebView2ContentLoadingEventArgs> value);
    internal void OnContentLoading(CoreWebView2ContentLoadingEventArgs args);
    public void add_SourceChanged(EventHandler`1<CoreWebView2SourceChangedEventArgs> value);
    public void remove_SourceChanged(EventHandler`1<CoreWebView2SourceChangedEventArgs> value);
    internal void OnSourceChanged(CoreWebView2SourceChangedEventArgs args);
    public void add_HistoryChanged(EventHandler`1<object> value);
    public void remove_HistoryChanged(EventHandler`1<object> value);
    internal void OnHistoryChanged(object args);
    public void add_NavigationCompleted(EventHandler`1<CoreWebView2NavigationCompletedEventArgs> value);
    public void remove_NavigationCompleted(EventHandler`1<CoreWebView2NavigationCompletedEventArgs> value);
    internal void OnNavigationCompleted(CoreWebView2NavigationCompletedEventArgs args);
    public void add_FrameNavigationStarting(EventHandler`1<CoreWebView2NavigationStartingEventArgs> value);
    public void remove_FrameNavigationStarting(EventHandler`1<CoreWebView2NavigationStartingEventArgs> value);
    internal void OnFrameNavigationStarting(CoreWebView2NavigationStartingEventArgs args);
    public void add_FrameNavigationCompleted(EventHandler`1<CoreWebView2NavigationCompletedEventArgs> value);
    public void remove_FrameNavigationCompleted(EventHandler`1<CoreWebView2NavigationCompletedEventArgs> value);
    internal void OnFrameNavigationCompleted(CoreWebView2NavigationCompletedEventArgs args);
    public void add_ScriptDialogOpening(EventHandler`1<CoreWebView2ScriptDialogOpeningEventArgs> value);
    public void remove_ScriptDialogOpening(EventHandler`1<CoreWebView2ScriptDialogOpeningEventArgs> value);
    internal void OnScriptDialogOpening(CoreWebView2ScriptDialogOpeningEventArgs args);
    public void add_PermissionRequested(EventHandler`1<CoreWebView2PermissionRequestedEventArgs> value);
    public void remove_PermissionRequested(EventHandler`1<CoreWebView2PermissionRequestedEventArgs> value);
    internal void OnPermissionRequested(CoreWebView2PermissionRequestedEventArgs args);
    public void add_ProcessFailed(EventHandler`1<CoreWebView2ProcessFailedEventArgs> value);
    public void remove_ProcessFailed(EventHandler`1<CoreWebView2ProcessFailedEventArgs> value);
    internal void OnProcessFailed(CoreWebView2ProcessFailedEventArgs args);
    public void add_WebMessageReceived(EventHandler`1<CoreWebView2WebMessageReceivedEventArgs> value);
    public void remove_WebMessageReceived(EventHandler`1<CoreWebView2WebMessageReceivedEventArgs> value);
    internal void OnWebMessageReceived(CoreWebView2WebMessageReceivedEventArgs args);
    public void add_NewWindowRequested(EventHandler`1<CoreWebView2NewWindowRequestedEventArgs> value);
    public void remove_NewWindowRequested(EventHandler`1<CoreWebView2NewWindowRequestedEventArgs> value);
    internal void OnNewWindowRequested(CoreWebView2NewWindowRequestedEventArgs args);
    public void add_DocumentTitleChanged(EventHandler`1<object> value);
    public void remove_DocumentTitleChanged(EventHandler`1<object> value);
    internal void OnDocumentTitleChanged(object args);
    public void add_ContainsFullScreenElementChanged(EventHandler`1<object> value);
    public void remove_ContainsFullScreenElementChanged(EventHandler`1<object> value);
    internal void OnContainsFullScreenElementChanged(object args);
    public void add_WebResourceRequested(EventHandler`1<CoreWebView2WebResourceRequestedEventArgs> value);
    public void remove_WebResourceRequested(EventHandler`1<CoreWebView2WebResourceRequestedEventArgs> value);
    internal void OnWebResourceRequested(CoreWebView2WebResourceRequestedEventArgs args);
    public void add_WindowCloseRequested(EventHandler`1<object> value);
    public void remove_WindowCloseRequested(EventHandler`1<object> value);
    internal void OnWindowCloseRequested(object args);
    public void Navigate(string uri);
    public void NavigateToString(string htmlContent);
    [AsyncStateMachineAttribute("Microsoft.Web.WebView2.Core.CoreWebView2/<AddScriptToExecuteOnDocumentCreatedAsync>d__172")]
public Task`1<string> AddScriptToExecuteOnDocumentCreatedAsync(string javaScript);
    public void RemoveScriptToExecuteOnDocumentCreated(string id);
    [AsyncStateMachineAttribute("Microsoft.Web.WebView2.Core.CoreWebView2/<ExecuteScriptAsync>d__174")]
public Task`1<string> ExecuteScriptAsync(string javaScript);
    [AsyncStateMachineAttribute("Microsoft.Web.WebView2.Core.CoreWebView2/<CapturePreviewAsync>d__175")]
public Task CapturePreviewAsync(CoreWebView2CapturePreviewImageFormat imageFormat, Stream imageStream);
    public void Reload();
    public void PostWebMessageAsJson(string webMessageAsJson);
    public void PostWebMessageAsString(string webMessageAsString);
    [AsyncStateMachineAttribute("Microsoft.Web.WebView2.Core.CoreWebView2/<CallDevToolsProtocolMethodAsync>d__179")]
public Task`1<string> CallDevToolsProtocolMethodAsync(string methodName, string parametersAsJson);
    public void GoBack();
    public void GoForward();
    public CoreWebView2DevToolsProtocolEventReceiver GetDevToolsProtocolEventReceiver(string eventName);
    public void Stop();
    public void AddHostObjectToScript(string name, object rawObject);
    public void RemoveHostObjectFromScript(string name);
    public void OpenDevToolsWindow();
    public void AddWebResourceRequestedFilter(string uri, CoreWebView2WebResourceContext ResourceContext);
    public void RemoveWebResourceRequestedFilter(string uri, CoreWebView2WebResourceContext ResourceContext);
    public CoreWebView2CookieManager get_CookieManager();
    public CoreWebView2Environment get_Environment();
    public void add_WebResourceResponseReceived(EventHandler`1<CoreWebView2WebResourceResponseReceivedEventArgs> value);
    public void remove_WebResourceResponseReceived(EventHandler`1<CoreWebView2WebResourceResponseReceivedEventArgs> value);
    internal void OnWebResourceResponseReceived(CoreWebView2WebResourceResponseReceivedEventArgs args);
    public void add_DOMContentLoaded(EventHandler`1<CoreWebView2DOMContentLoadedEventArgs> value);
    public void remove_DOMContentLoaded(EventHandler`1<CoreWebView2DOMContentLoadedEventArgs> value);
    internal void OnDOMContentLoaded(CoreWebView2DOMContentLoadedEventArgs args);
    public void NavigateWithWebResourceRequest(CoreWebView2WebResourceRequest Request);
    public bool get_IsSuspended();
    [AsyncStateMachineAttribute("Microsoft.Web.WebView2.Core.CoreWebView2/<TrySuspendAsync>d__208")]
public Task`1<bool> TrySuspendAsync();
    public void Resume();
    public void SetVirtualHostNameToFolderMapping(string hostName, string folderPath, CoreWebView2HostResourceAccessKind accessKind);
    public void ClearVirtualHostNameToFolderMapping(string hostName);
    public void add_FrameCreated(EventHandler`1<CoreWebView2FrameCreatedEventArgs> value);
    public void remove_FrameCreated(EventHandler`1<CoreWebView2FrameCreatedEventArgs> value);
    internal void OnFrameCreated(CoreWebView2FrameCreatedEventArgs args);
    public void add_DownloadStarting(EventHandler`1<CoreWebView2DownloadStartingEventArgs> value);
    public void remove_DownloadStarting(EventHandler`1<CoreWebView2DownloadStartingEventArgs> value);
    internal void OnDownloadStarting(CoreWebView2DownloadStartingEventArgs args);
    public void add_ClientCertificateRequested(EventHandler`1<CoreWebView2ClientCertificateRequestedEventArgs> value);
    public void remove_ClientCertificateRequested(EventHandler`1<CoreWebView2ClientCertificateRequestedEventArgs> value);
    internal void OnClientCertificateRequested(CoreWebView2ClientCertificateRequestedEventArgs args);
    public void OpenTaskManagerWindow();
    public bool get_IsMuted();
    public void set_IsMuted(bool value);
    public bool get_IsDocumentPlayingAudio();
    public void add_IsMutedChanged(EventHandler`1<object> value);
    public void remove_IsMutedChanged(EventHandler`1<object> value);
    internal void OnIsMutedChanged(object args);
    public void add_IsDocumentPlayingAudioChanged(EventHandler`1<object> value);
    public void remove_IsDocumentPlayingAudioChanged(EventHandler`1<object> value);
    internal void OnIsDocumentPlayingAudioChanged(object args);
    public bool get_IsDefaultDownloadDialogOpen();
    public CoreWebView2DefaultDownloadDialogCornerAlignment get_DefaultDownloadDialogCornerAlignment();
    public void set_DefaultDownloadDialogCornerAlignment(CoreWebView2DefaultDownloadDialogCornerAlignment value);
    public Point get_DefaultDownloadDialogMargin();
    public void set_DefaultDownloadDialogMargin(Point value);
    public void add_IsDefaultDownloadDialogOpenChanged(EventHandler`1<object> value);
    public void remove_IsDefaultDownloadDialogOpenChanged(EventHandler`1<object> value);
    internal void OnIsDefaultDownloadDialogOpenChanged(object args);
    public void OpenDefaultDownloadDialog();
    public void CloseDefaultDownloadDialog();
    public void add_BasicAuthenticationRequested(EventHandler`1<CoreWebView2BasicAuthenticationRequestedEventArgs> value);
    public void remove_BasicAuthenticationRequested(EventHandler`1<CoreWebView2BasicAuthenticationRequestedEventArgs> value);
    internal void OnBasicAuthenticationRequested(CoreWebView2BasicAuthenticationRequestedEventArgs args);
    public void add_ContextMenuRequested(EventHandler`1<CoreWebView2ContextMenuRequestedEventArgs> value);
    public void remove_ContextMenuRequested(EventHandler`1<CoreWebView2ContextMenuRequestedEventArgs> value);
    internal void OnContextMenuRequested(CoreWebView2ContextMenuRequestedEventArgs args);
    [AsyncStateMachineAttribute("Microsoft.Web.WebView2.Core.CoreWebView2/<CallDevToolsProtocolMethodForSessionAsync>d__276")]
public Task`1<string> CallDevToolsProtocolMethodForSessionAsync(string sessionId, string methodName, string parametersAsJson);
    public string get_StatusBarText();
    public void add_StatusBarTextChanged(EventHandler`1<object> value);
    public void remove_StatusBarTextChanged(EventHandler`1<object> value);
    internal void OnStatusBarTextChanged(object args);
    public CoreWebView2Profile get_Profile();
    public void add_ServerCertificateErrorDetected(EventHandler`1<CoreWebView2ServerCertificateErrorDetectedEventArgs> value);
    public void remove_ServerCertificateErrorDetected(EventHandler`1<CoreWebView2ServerCertificateErrorDetectedEventArgs> value);
    internal void OnServerCertificateErrorDetected(CoreWebView2ServerCertificateErrorDetectedEventArgs args);
    [AsyncStateMachineAttribute("Microsoft.Web.WebView2.Core.CoreWebView2/<ClearServerCertificateErrorActionsAsync>d__293")]
public Task ClearServerCertificateErrorActionsAsync();
}
public class Microsoft.Web.WebView2.Core.CoreWebView2AcceleratorKeyPressedEventArgs : EventArgs {
    internal ICoreWebView2AcceleratorKeyPressedEventArgs _nativeICoreWebView2AcceleratorKeyPressedEventArgsValue;
    internal object _rawNative;
    internal ICoreWebView2AcceleratorKeyPressedEventArgs _nativeICoreWebView2AcceleratorKeyPressedEventArgs { get; internal set; }
    public CoreWebView2KeyEventKind KeyEventKind { get; }
    public UInt32 VirtualKey { get; }
    public int KeyEventLParam { get; }
    public CoreWebView2PhysicalKeyStatus PhysicalKeyStatus { get; }
    public bool Handled { get; public set; }
    internal CoreWebView2AcceleratorKeyPressedEventArgs(object rawCoreWebView2AcceleratorKeyPressedEventArgs);
    internal ICoreWebView2AcceleratorKeyPressedEventArgs get__nativeICoreWebView2AcceleratorKeyPressedEventArgs();
    internal void set__nativeICoreWebView2AcceleratorKeyPressedEventArgs(ICoreWebView2AcceleratorKeyPressedEventArgs value);
    public CoreWebView2KeyEventKind get_KeyEventKind();
    public UInt32 get_VirtualKey();
    public int get_KeyEventLParam();
    public CoreWebView2PhysicalKeyStatus get_PhysicalKeyStatus();
    public bool get_Handled();
    public void set_Handled(bool value);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2AcceleratorKeyPressedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2AcceleratorKeyPressedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2Controller source, ICoreWebView2AcceleratorKeyPressedEventArgs args);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandler : object {
    [CompilerGeneratedAttribute]
private string <id>k__BackingField;
    [CompilerGeneratedAttribute]
private int <errCode>k__BackingField;
    private Action continuation;
    [CompilerGeneratedAttribute]
private bool <IsCompleted>k__BackingField;
    public string id { get; private set; }
    public int errCode { get; private set; }
    public bool IsCompleted { get; private set; }
    [CompilerGeneratedAttribute]
public string get_id();
    [CompilerGeneratedAttribute]
private void set_id(string value);
    [CompilerGeneratedAttribute]
public int get_errCode();
    [CompilerGeneratedAttribute]
private void set_errCode(int value);
    public sealed virtual void Invoke(int errCode, string id);
    public CoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandler GetAwaiter();
    [CompilerGeneratedAttribute]
public bool get_IsCompleted();
    [CompilerGeneratedAttribute]
private void set_IsCompleted(bool value);
    public sealed virtual void OnCompleted(Action continuation);
    public string GetResult();
}
public class Microsoft.Web.WebView2.Core.CoreWebView2BasicAuthenticationRequestedEventArgs : EventArgs {
    internal ICoreWebView2BasicAuthenticationRequestedEventArgs _nativeICoreWebView2BasicAuthenticationRequestedEventArgsValue;
    internal object _rawNative;
    internal ICoreWebView2BasicAuthenticationRequestedEventArgs _nativeICoreWebView2BasicAuthenticationRequestedEventArgs { get; internal set; }
    public string Uri { get; }
    public string Challenge { get; }
    public CoreWebView2BasicAuthenticationResponse Response { get; }
    public bool Cancel { get; public set; }
    internal CoreWebView2BasicAuthenticationRequestedEventArgs(object rawCoreWebView2BasicAuthenticationRequestedEventArgs);
    internal ICoreWebView2BasicAuthenticationRequestedEventArgs get__nativeICoreWebView2BasicAuthenticationRequestedEventArgs();
    internal void set__nativeICoreWebView2BasicAuthenticationRequestedEventArgs(ICoreWebView2BasicAuthenticationRequestedEventArgs value);
    public string get_Uri();
    public string get_Challenge();
    public CoreWebView2BasicAuthenticationResponse get_Response();
    public bool get_Cancel();
    public void set_Cancel(bool value);
    public CoreWebView2Deferral GetDeferral();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2BasicAuthenticationRequestedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2BasicAuthenticationRequestedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2 source, ICoreWebView2BasicAuthenticationRequestedEventArgs args);
}
public class Microsoft.Web.WebView2.Core.CoreWebView2BasicAuthenticationResponse : object {
    internal ICoreWebView2BasicAuthenticationResponse _nativeICoreWebView2BasicAuthenticationResponseValue;
    internal object _rawNative;
    internal ICoreWebView2BasicAuthenticationResponse _nativeICoreWebView2BasicAuthenticationResponse { get; internal set; }
    public string UserName { get; public set; }
    public string Password { get; public set; }
    internal CoreWebView2BasicAuthenticationResponse(object rawCoreWebView2BasicAuthenticationResponse);
    internal ICoreWebView2BasicAuthenticationResponse get__nativeICoreWebView2BasicAuthenticationResponse();
    internal void set__nativeICoreWebView2BasicAuthenticationResponse(ICoreWebView2BasicAuthenticationResponse value);
    public string get_UserName();
    public void set_UserName(string value);
    public string get_Password();
    public void set_Password(string value);
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2BoundsMode : Enum {
    public int value__;
    public static CoreWebView2BoundsMode UseRawPixels;
    public static CoreWebView2BoundsMode UseRasterizationScale;
}
public class Microsoft.Web.WebView2.Core.CoreWebView2BrowserProcessExitedEventArgs : EventArgs {
    internal ICoreWebView2BrowserProcessExitedEventArgs _nativeICoreWebView2BrowserProcessExitedEventArgsValue;
    internal object _rawNative;
    internal ICoreWebView2BrowserProcessExitedEventArgs _nativeICoreWebView2BrowserProcessExitedEventArgs { get; internal set; }
    public CoreWebView2BrowserProcessExitKind BrowserProcessExitKind { get; }
    public UInt32 BrowserProcessId { get; }
    internal CoreWebView2BrowserProcessExitedEventArgs(object rawCoreWebView2BrowserProcessExitedEventArgs);
    internal ICoreWebView2BrowserProcessExitedEventArgs get__nativeICoreWebView2BrowserProcessExitedEventArgs();
    internal void set__nativeICoreWebView2BrowserProcessExitedEventArgs(ICoreWebView2BrowserProcessExitedEventArgs value);
    public CoreWebView2BrowserProcessExitKind get_BrowserProcessExitKind();
    public UInt32 get_BrowserProcessId();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2BrowserProcessExitedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2BrowserProcessExitedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2Environment source, ICoreWebView2BrowserProcessExitedEventArgs args);
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2BrowserProcessExitKind : Enum {
    public int value__;
    public static CoreWebView2BrowserProcessExitKind Normal;
    public static CoreWebView2BrowserProcessExitKind Failed;
}
[FlagsAttribute]
public enum Microsoft.Web.WebView2.Core.CoreWebView2BrowsingDataKinds : Enum {
    public int value__;
    public static CoreWebView2BrowsingDataKinds FileSystems;
    public static CoreWebView2BrowsingDataKinds IndexedDb;
    public static CoreWebView2BrowsingDataKinds LocalStorage;
    public static CoreWebView2BrowsingDataKinds WebSql;
    public static CoreWebView2BrowsingDataKinds CacheStorage;
    public static CoreWebView2BrowsingDataKinds AllDomStorage;
    public static CoreWebView2BrowsingDataKinds Cookies;
    public static CoreWebView2BrowsingDataKinds AllSite;
    public static CoreWebView2BrowsingDataKinds DiskCache;
    public static CoreWebView2BrowsingDataKinds DownloadHistory;
    public static CoreWebView2BrowsingDataKinds GeneralAutofill;
    public static CoreWebView2BrowsingDataKinds PasswordAutosave;
    public static CoreWebView2BrowsingDataKinds BrowsingHistory;
    public static CoreWebView2BrowsingDataKinds Settings;
    public static CoreWebView2BrowsingDataKinds AllProfile;
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2BytesReceivedChangedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2BytesReceivedChangedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2DownloadOperation source, object args);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2CallDevToolsProtocolMethodCompletedHandler : object {
    [CompilerGeneratedAttribute]
private string <returnObjectAsJson>k__BackingField;
    [CompilerGeneratedAttribute]
private int <errCode>k__BackingField;
    private Action continuation;
    [CompilerGeneratedAttribute]
private bool <IsCompleted>k__BackingField;
    public string returnObjectAsJson { get; private set; }
    public int errCode { get; private set; }
    public bool IsCompleted { get; private set; }
    [CompilerGeneratedAttribute]
public string get_returnObjectAsJson();
    [CompilerGeneratedAttribute]
private void set_returnObjectAsJson(string value);
    [CompilerGeneratedAttribute]
public int get_errCode();
    [CompilerGeneratedAttribute]
private void set_errCode(int value);
    public sealed virtual void Invoke(int errCode, string returnObjectAsJson);
    public CoreWebView2CallDevToolsProtocolMethodCompletedHandler GetAwaiter();
    [CompilerGeneratedAttribute]
public bool get_IsCompleted();
    [CompilerGeneratedAttribute]
private void set_IsCompleted(bool value);
    public sealed virtual void OnCompleted(Action continuation);
    public string GetResult();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2CapturePreviewCompletedHandler : object {
    [CompilerGeneratedAttribute]
private int <errCode>k__BackingField;
    private Action continuation;
    [CompilerGeneratedAttribute]
private bool <IsCompleted>k__BackingField;
    public int errCode { get; private set; }
    public bool IsCompleted { get; private set; }
    [CompilerGeneratedAttribute]
public int get_errCode();
    [CompilerGeneratedAttribute]
private void set_errCode(int value);
    public sealed virtual void Invoke(int errCode);
    public CoreWebView2CapturePreviewCompletedHandler GetAwaiter();
    [CompilerGeneratedAttribute]
public bool get_IsCompleted();
    [CompilerGeneratedAttribute]
private void set_IsCompleted(bool value);
    public sealed virtual void OnCompleted(Action continuation);
    public void GetResult();
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2CapturePreviewImageFormat : Enum {
    public int value__;
    public static CoreWebView2CapturePreviewImageFormat Png;
    public static CoreWebView2CapturePreviewImageFormat Jpeg;
}
public class Microsoft.Web.WebView2.Core.CoreWebView2Certificate : object {
    private static DateTime _unixEpoch;
    internal ICoreWebView2Certificate _nativeICoreWebView2CertificateValue;
    internal object _rawNative;
    public DateTime ValidFrom { get; }
    public DateTime ValidTo { get; }
    internal ICoreWebView2Certificate _nativeICoreWebView2Certificate { get; internal set; }
    public string Subject { get; }
    public string Issuer { get; }
    public string DerEncodedSerialNumber { get; }
    public string DisplayName { get; }
    public IReadOnlyList`1<string> PemEncodedIssuerCertificateChain { get; }
    internal CoreWebView2Certificate(object rawCoreWebView2Certificate);
    private static CoreWebView2Certificate();
    public X509Certificate2 ToX509Certificate2();
    public DateTime get_ValidFrom();
    public DateTime get_ValidTo();
    private DateTime SecondsSinceUnixEpochToDateTime(double seconds);
    internal ICoreWebView2Certificate get__nativeICoreWebView2Certificate();
    internal void set__nativeICoreWebView2Certificate(ICoreWebView2Certificate value);
    public string get_Subject();
    public string get_Issuer();
    public string get_DerEncodedSerialNumber();
    public string get_DisplayName();
    public IReadOnlyList`1<string> get_PemEncodedIssuerCertificateChain();
    public string ToPemEncoding();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2ClearBrowsingDataCompletedHandler : object {
    [CompilerGeneratedAttribute]
private int <errCode>k__BackingField;
    private Action continuation;
    [CompilerGeneratedAttribute]
private bool <IsCompleted>k__BackingField;
    public int errCode { get; private set; }
    public bool IsCompleted { get; private set; }
    [CompilerGeneratedAttribute]
public int get_errCode();
    [CompilerGeneratedAttribute]
private void set_errCode(int value);
    public sealed virtual void Invoke(int errCode);
    public CoreWebView2ClearBrowsingDataCompletedHandler GetAwaiter();
    [CompilerGeneratedAttribute]
public bool get_IsCompleted();
    [CompilerGeneratedAttribute]
private void set_IsCompleted(bool value);
    public sealed virtual void OnCompleted(Action continuation);
    public void GetResult();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2ClearServerCertificateErrorActionsCompletedHandler : object {
    [CompilerGeneratedAttribute]
private int <errCode>k__BackingField;
    private Action continuation;
    [CompilerGeneratedAttribute]
private bool <IsCompleted>k__BackingField;
    public int errCode { get; private set; }
    public bool IsCompleted { get; private set; }
    [CompilerGeneratedAttribute]
public int get_errCode();
    [CompilerGeneratedAttribute]
private void set_errCode(int value);
    public sealed virtual void Invoke(int errCode);
    public CoreWebView2ClearServerCertificateErrorActionsCompletedHandler GetAwaiter();
    [CompilerGeneratedAttribute]
public bool get_IsCompleted();
    [CompilerGeneratedAttribute]
private void set_IsCompleted(bool value);
    public sealed virtual void OnCompleted(Action continuation);
    public void GetResult();
}
public class Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificate : object {
    private static DateTime _unixEpoch;
    internal ICoreWebView2ClientCertificate _nativeICoreWebView2ClientCertificateValue;
    internal object _rawNative;
    public DateTime ValidFrom { get; }
    public DateTime ValidTo { get; }
    internal ICoreWebView2ClientCertificate _nativeICoreWebView2ClientCertificate { get; internal set; }
    public string Subject { get; }
    public string Issuer { get; }
    public string DerEncodedSerialNumber { get; }
    public string DisplayName { get; }
    public IReadOnlyList`1<string> PemEncodedIssuerCertificateChain { get; }
    public CoreWebView2ClientCertificateKind Kind { get; }
    internal CoreWebView2ClientCertificate(object rawCoreWebView2ClientCertificate);
    private static CoreWebView2ClientCertificate();
    public X509Certificate2 ToX509Certificate2();
    public DateTime get_ValidFrom();
    public DateTime get_ValidTo();
    private DateTime SecondsSinceUnixEpochToDateTime(double seconds);
    internal ICoreWebView2ClientCertificate get__nativeICoreWebView2ClientCertificate();
    internal void set__nativeICoreWebView2ClientCertificate(ICoreWebView2ClientCertificate value);
    public string get_Subject();
    public string get_Issuer();
    public string get_DerEncodedSerialNumber();
    public string get_DisplayName();
    public IReadOnlyList`1<string> get_PemEncodedIssuerCertificateChain();
    public CoreWebView2ClientCertificateKind get_Kind();
    public string ToPemEncoding();
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificateKind : Enum {
    public int value__;
    public static CoreWebView2ClientCertificateKind SmartCard;
    public static CoreWebView2ClientCertificateKind Pin;
    public static CoreWebView2ClientCertificateKind Other;
}
public class Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificateRequestedEventArgs : EventArgs {
    internal ICoreWebView2ClientCertificateRequestedEventArgs _nativeICoreWebView2ClientCertificateRequestedEventArgsValue;
    internal object _rawNative;
    internal ICoreWebView2ClientCertificateRequestedEventArgs _nativeICoreWebView2ClientCertificateRequestedEventArgs { get; internal set; }
    public string Host { get; }
    public int Port { get; }
    public bool IsProxy { get; }
    public IReadOnlyList`1<string> AllowedCertificateAuthorities { get; }
    public IReadOnlyList`1<CoreWebView2ClientCertificate> MutuallyTrustedCertificates { get; }
    public CoreWebView2ClientCertificate SelectedCertificate { get; public set; }
    public bool Cancel { get; public set; }
    public bool Handled { get; public set; }
    internal CoreWebView2ClientCertificateRequestedEventArgs(object rawCoreWebView2ClientCertificateRequestedEventArgs);
    internal ICoreWebView2ClientCertificateRequestedEventArgs get__nativeICoreWebView2ClientCertificateRequestedEventArgs();
    internal void set__nativeICoreWebView2ClientCertificateRequestedEventArgs(ICoreWebView2ClientCertificateRequestedEventArgs value);
    public string get_Host();
    public int get_Port();
    public bool get_IsProxy();
    public IReadOnlyList`1<string> get_AllowedCertificateAuthorities();
    public IReadOnlyList`1<CoreWebView2ClientCertificate> get_MutuallyTrustedCertificates();
    public CoreWebView2ClientCertificate get_SelectedCertificate();
    public void set_SelectedCertificate(CoreWebView2ClientCertificate value);
    public bool get_Cancel();
    public void set_Cancel(bool value);
    public bool get_Handled();
    public void set_Handled(bool value);
    public CoreWebView2Deferral GetDeferral();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2ClientCertificateRequestedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2ClientCertificateRequestedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2 source, ICoreWebView2ClientCertificateRequestedEventArgs args);
}
public class Microsoft.Web.WebView2.Core.CoreWebView2Color : ValueType {
    public byte A;
    public byte R;
    public byte G;
    public byte B;
    internal CoreWebView2Color(COREWEBVIEW2_COLOR rawStruct);
}
public class Microsoft.Web.WebView2.Core.CoreWebView2CompositionController : object {
    internal ICoreWebView2CompositionController _nativeICoreWebView2CompositionControllerValue;
    internal ICoreWebView2CompositionController2 _nativeICoreWebView2CompositionController2Value;
    internal object _rawNative;
    private EventRegistrationToken _cursorChangedToken;
    private EventHandler`1<object> cursorChanged;
    internal ICoreWebView2CompositionController _nativeICoreWebView2CompositionController { get; internal set; }
    internal ICoreWebView2CompositionController2 _nativeICoreWebView2CompositionController2 { get; internal set; }
    public object RootVisualTarget { get; public set; }
    public IntPtr Cursor { get; }
    public UInt32 SystemCursorId { get; }
    internal CoreWebView2CompositionController(object rawCoreWebView2CompositionController);
    internal ICoreWebView2CompositionController get__nativeICoreWebView2CompositionController();
    internal void set__nativeICoreWebView2CompositionController(ICoreWebView2CompositionController value);
    internal ICoreWebView2CompositionController2 get__nativeICoreWebView2CompositionController2();
    internal void set__nativeICoreWebView2CompositionController2(ICoreWebView2CompositionController2 value);
    public object get_RootVisualTarget();
    public void set_RootVisualTarget(object value);
    public IntPtr get_Cursor();
    public UInt32 get_SystemCursorId();
    public void add_CursorChanged(EventHandler`1<object> value);
    public void remove_CursorChanged(EventHandler`1<object> value);
    internal void OnCursorChanged(object args);
    public void SendMouseInput(CoreWebView2MouseEventKind eventKind, CoreWebView2MouseEventVirtualKeys virtualKeys, UInt32 mouseData, Point point);
    public void SendPointerInput(CoreWebView2PointerEventKind eventKind, CoreWebView2PointerInfo pointerInfo);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2ContainsFullScreenElementChangedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2ContainsFullScreenElementChangedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2 source, object args);
}
public class Microsoft.Web.WebView2.Core.CoreWebView2ContentLoadingEventArgs : EventArgs {
    internal ICoreWebView2ContentLoadingEventArgs _nativeICoreWebView2ContentLoadingEventArgsValue;
    internal object _rawNative;
    internal ICoreWebView2ContentLoadingEventArgs _nativeICoreWebView2ContentLoadingEventArgs { get; internal set; }
    public bool IsErrorPage { get; }
    public ulong NavigationId { get; }
    internal CoreWebView2ContentLoadingEventArgs(object rawCoreWebView2ContentLoadingEventArgs);
    internal ICoreWebView2ContentLoadingEventArgs get__nativeICoreWebView2ContentLoadingEventArgs();
    internal void set__nativeICoreWebView2ContentLoadingEventArgs(ICoreWebView2ContentLoadingEventArgs value);
    public bool get_IsErrorPage();
    public ulong get_NavigationId();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2ContentLoadingEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2ContentLoadingEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2 source, ICoreWebView2ContentLoadingEventArgs args);
}
public class Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuItem : object {
    internal ICoreWebView2ContextMenuItem _nativeICoreWebView2ContextMenuItemValue;
    internal object _rawNative;
    private EventRegistrationToken _customItemSelectedToken;
    private EventHandler`1<object> customItemSelected;
    internal ICoreWebView2ContextMenuItem _nativeICoreWebView2ContextMenuItem { get; internal set; }
    public string Name { get; }
    public string Label { get; }
    public int CommandId { get; }
    public string ShortcutKeyDescription { get; }
    public Stream Icon { get; }
    public CoreWebView2ContextMenuItemKind Kind { get; }
    public bool IsEnabled { get; public set; }
    public bool IsChecked { get; public set; }
    public IList`1<CoreWebView2ContextMenuItem> Children { get; }
    internal CoreWebView2ContextMenuItem(object rawCoreWebView2ContextMenuItem);
    internal ICoreWebView2ContextMenuItem get__nativeICoreWebView2ContextMenuItem();
    internal void set__nativeICoreWebView2ContextMenuItem(ICoreWebView2ContextMenuItem value);
    public string get_Name();
    public string get_Label();
    public int get_CommandId();
    public string get_ShortcutKeyDescription();
    public Stream get_Icon();
    public CoreWebView2ContextMenuItemKind get_Kind();
    public bool get_IsEnabled();
    public void set_IsEnabled(bool value);
    public bool get_IsChecked();
    public void set_IsChecked(bool value);
    public IList`1<CoreWebView2ContextMenuItem> get_Children();
    public void add_CustomItemSelected(EventHandler`1<object> value);
    public void remove_CustomItemSelected(EventHandler`1<object> value);
    internal void OnCustomItemSelected(object args);
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuItemKind : Enum {
    public int value__;
    public static CoreWebView2ContextMenuItemKind Command;
    public static CoreWebView2ContextMenuItemKind CheckBox;
    public static CoreWebView2ContextMenuItemKind Radio;
    public static CoreWebView2ContextMenuItemKind Separator;
    public static CoreWebView2ContextMenuItemKind Submenu;
}
public class Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuRequestedEventArgs : EventArgs {
    internal ICoreWebView2ContextMenuRequestedEventArgs _nativeICoreWebView2ContextMenuRequestedEventArgsValue;
    internal object _rawNative;
    internal ICoreWebView2ContextMenuRequestedEventArgs _nativeICoreWebView2ContextMenuRequestedEventArgs { get; internal set; }
    public IList`1<CoreWebView2ContextMenuItem> MenuItems { get; }
    public CoreWebView2ContextMenuTarget ContextMenuTarget { get; }
    public Point Location { get; }
    public int SelectedCommandId { get; public set; }
    public bool Handled { get; public set; }
    internal CoreWebView2ContextMenuRequestedEventArgs(object rawCoreWebView2ContextMenuRequestedEventArgs);
    internal ICoreWebView2ContextMenuRequestedEventArgs get__nativeICoreWebView2ContextMenuRequestedEventArgs();
    internal void set__nativeICoreWebView2ContextMenuRequestedEventArgs(ICoreWebView2ContextMenuRequestedEventArgs value);
    public IList`1<CoreWebView2ContextMenuItem> get_MenuItems();
    public CoreWebView2ContextMenuTarget get_ContextMenuTarget();
    public Point get_Location();
    public int get_SelectedCommandId();
    public void set_SelectedCommandId(int value);
    public bool get_Handled();
    public void set_Handled(bool value);
    public CoreWebView2Deferral GetDeferral();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuRequestedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2ContextMenuRequestedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2 source, ICoreWebView2ContextMenuRequestedEventArgs args);
}
public class Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuTarget : object {
    internal ICoreWebView2ContextMenuTarget _nativeICoreWebView2ContextMenuTargetValue;
    internal object _rawNative;
    internal ICoreWebView2ContextMenuTarget _nativeICoreWebView2ContextMenuTarget { get; internal set; }
    public CoreWebView2ContextMenuTargetKind Kind { get; }
    public bool IsEditable { get; }
    public bool IsRequestedForMainFrame { get; }
    public string PageUri { get; }
    public string FrameUri { get; }
    public bool HasLinkUri { get; }
    public string LinkUri { get; }
    public bool HasLinkText { get; }
    public string LinkText { get; }
    public bool HasSourceUri { get; }
    public string SourceUri { get; }
    public bool HasSelection { get; }
    public string SelectionText { get; }
    internal CoreWebView2ContextMenuTarget(object rawCoreWebView2ContextMenuTarget);
    internal ICoreWebView2ContextMenuTarget get__nativeICoreWebView2ContextMenuTarget();
    internal void set__nativeICoreWebView2ContextMenuTarget(ICoreWebView2ContextMenuTarget value);
    public CoreWebView2ContextMenuTargetKind get_Kind();
    public bool get_IsEditable();
    public bool get_IsRequestedForMainFrame();
    public string get_PageUri();
    public string get_FrameUri();
    public bool get_HasLinkUri();
    public string get_LinkUri();
    public bool get_HasLinkText();
    public string get_LinkText();
    public bool get_HasSourceUri();
    public string get_SourceUri();
    public bool get_HasSelection();
    public string get_SelectionText();
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2ContextMenuTargetKind : Enum {
    public int value__;
    public static CoreWebView2ContextMenuTargetKind Page;
    public static CoreWebView2ContextMenuTargetKind Image;
    public static CoreWebView2ContextMenuTargetKind SelectedText;
    public static CoreWebView2ContextMenuTargetKind Audio;
    public static CoreWebView2ContextMenuTargetKind Video;
}
public class Microsoft.Web.WebView2.Core.CoreWebView2Controller : object {
    private static string HostObjectHelperName;
    private CoreWebView2 _coreWebView2;
    internal ICoreWebView2Controller _nativeICoreWebView2ControllerValue;
    internal ICoreWebView2Controller2 _nativeICoreWebView2Controller2Value;
    internal ICoreWebView2Controller3 _nativeICoreWebView2Controller3Value;
    internal ICoreWebView2Controller4 _nativeICoreWebView2Controller4Value;
    internal object _rawNative;
    private EventRegistrationToken _zoomFactorChangedToken;
    private EventHandler`1<object> zoomFactorChanged;
    private EventRegistrationToken _moveFocusRequestedToken;
    private EventHandler`1<CoreWebView2MoveFocusRequestedEventArgs> moveFocusRequested;
    private EventRegistrationToken _gotFocusToken;
    private EventHandler`1<object> gotFocus;
    private EventRegistrationToken _lostFocusToken;
    private EventHandler`1<object> lostFocus;
    private EventRegistrationToken _acceleratorKeyPressedToken;
    private EventHandler`1<CoreWebView2AcceleratorKeyPressedEventArgs> acceleratorKeyPressed;
    private EventRegistrationToken _rasterizationScaleChangedToken;
    private EventHandler`1<object> rasterizationScaleChanged;
    public CoreWebView2 CoreWebView2 { get; }
    internal ICoreWebView2Controller _nativeICoreWebView2Controller { get; internal set; }
    internal ICoreWebView2Controller2 _nativeICoreWebView2Controller2 { get; internal set; }
    internal ICoreWebView2Controller3 _nativeICoreWebView2Controller3 { get; internal set; }
    internal ICoreWebView2Controller4 _nativeICoreWebView2Controller4 { get; internal set; }
    public bool IsVisible { get; public set; }
    public Rectangle Bounds { get; public set; }
    public double ZoomFactor { get; public set; }
    public IntPtr ParentWindow { get; public set; }
    public Color DefaultBackgroundColor { get; public set; }
    public double RasterizationScale { get; public set; }
    public bool ShouldDetectMonitorScaleChanges { get; public set; }
    public CoreWebView2BoundsMode BoundsMode { get; public set; }
    public bool AllowExternalDrop { get; public set; }
    internal CoreWebView2Controller(object rawCoreWebView2Controller);
    public CoreWebView2 get_CoreWebView2();
    private void Initialize();
    internal ICoreWebView2Controller get__nativeICoreWebView2Controller();
    internal void set__nativeICoreWebView2Controller(ICoreWebView2Controller value);
    internal ICoreWebView2Controller2 get__nativeICoreWebView2Controller2();
    internal void set__nativeICoreWebView2Controller2(ICoreWebView2Controller2 value);
    internal ICoreWebView2Controller3 get__nativeICoreWebView2Controller3();
    internal void set__nativeICoreWebView2Controller3(ICoreWebView2Controller3 value);
    internal ICoreWebView2Controller4 get__nativeICoreWebView2Controller4();
    internal void set__nativeICoreWebView2Controller4(ICoreWebView2Controller4 value);
    public bool get_IsVisible();
    public void set_IsVisible(bool value);
    public Rectangle get_Bounds();
    public void set_Bounds(Rectangle value);
    public double get_ZoomFactor();
    public void set_ZoomFactor(double value);
    public IntPtr get_ParentWindow();
    public void set_ParentWindow(IntPtr value);
    public void add_ZoomFactorChanged(EventHandler`1<object> value);
    public void remove_ZoomFactorChanged(EventHandler`1<object> value);
    internal void OnZoomFactorChanged(object args);
    public void add_MoveFocusRequested(EventHandler`1<CoreWebView2MoveFocusRequestedEventArgs> value);
    public void remove_MoveFocusRequested(EventHandler`1<CoreWebView2MoveFocusRequestedEventArgs> value);
    internal void OnMoveFocusRequested(CoreWebView2MoveFocusRequestedEventArgs args);
    public void add_GotFocus(EventHandler`1<object> value);
    public void remove_GotFocus(EventHandler`1<object> value);
    internal void OnGotFocus(object args);
    public void add_LostFocus(EventHandler`1<object> value);
    public void remove_LostFocus(EventHandler`1<object> value);
    internal void OnLostFocus(object args);
    public void add_AcceleratorKeyPressed(EventHandler`1<CoreWebView2AcceleratorKeyPressedEventArgs> value);
    public void remove_AcceleratorKeyPressed(EventHandler`1<CoreWebView2AcceleratorKeyPressedEventArgs> value);
    internal void OnAcceleratorKeyPressed(CoreWebView2AcceleratorKeyPressedEventArgs args);
    public void SetBoundsAndZoomFactor(Rectangle Bounds, double ZoomFactor);
    public void MoveFocus(CoreWebView2MoveFocusReason reason);
    public void NotifyParentWindowPositionChanged();
    public void Close();
    public Color get_DefaultBackgroundColor();
    public void set_DefaultBackgroundColor(Color value);
    public double get_RasterizationScale();
    public void set_RasterizationScale(double value);
    public bool get_ShouldDetectMonitorScaleChanges();
    public void set_ShouldDetectMonitorScaleChanges(bool value);
    public CoreWebView2BoundsMode get_BoundsMode();
    public void set_BoundsMode(CoreWebView2BoundsMode value);
    public void add_RasterizationScaleChanged(EventHandler`1<object> value);
    public void remove_RasterizationScaleChanged(EventHandler`1<object> value);
    internal void OnRasterizationScaleChanged(object args);
    public bool get_AllowExternalDrop();
    public void set_AllowExternalDrop(bool value);
}
public class Microsoft.Web.WebView2.Core.CoreWebView2ControllerOptions : object {
    internal ICoreWebView2ControllerOptions _nativeICoreWebView2ControllerOptionsValue;
    internal object _rawNative;
    internal ICoreWebView2ControllerOptions _nativeICoreWebView2ControllerOptions { get; internal set; }
    public string ProfileName { get; public set; }
    public bool IsInPrivateModeEnabled { get; public set; }
    internal CoreWebView2ControllerOptions(object rawCoreWebView2ControllerOptions);
    internal ICoreWebView2ControllerOptions get__nativeICoreWebView2ControllerOptions();
    internal void set__nativeICoreWebView2ControllerOptions(ICoreWebView2ControllerOptions value);
    public string get_ProfileName();
    public void set_ProfileName(string value);
    public bool get_IsInPrivateModeEnabled();
    public void set_IsInPrivateModeEnabled(bool value);
}
public class Microsoft.Web.WebView2.Core.CoreWebView2Cookie : object {
    private static DateTime _unixEpoch;
    internal ICoreWebView2Cookie _nativeICoreWebView2CookieValue;
    internal object _rawNative;
    public DateTime Expires { get; public set; }
    internal ICoreWebView2Cookie _nativeICoreWebView2Cookie { get; internal set; }
    public string Name { get; }
    public string Value { get; public set; }
    public string Domain { get; }
    public string Path { get; }
    public bool IsHttpOnly { get; public set; }
    public CoreWebView2CookieSameSiteKind SameSite { get; public set; }
    public bool IsSecure { get; public set; }
    public bool IsSession { get; }
    internal CoreWebView2Cookie(object rawCoreWebView2Cookie);
    private static CoreWebView2Cookie();
    public Cookie ToSystemNetCookie();
    private DateTime SecondsSinceUnixEpochToDateTime(double seconds);
    public DateTime get_Expires();
    public void set_Expires(DateTime value);
    internal ICoreWebView2Cookie get__nativeICoreWebView2Cookie();
    internal void set__nativeICoreWebView2Cookie(ICoreWebView2Cookie value);
    public string get_Name();
    public string get_Value();
    public void set_Value(string value);
    public string get_Domain();
    public string get_Path();
    public bool get_IsHttpOnly();
    public void set_IsHttpOnly(bool value);
    public CoreWebView2CookieSameSiteKind get_SameSite();
    public void set_SameSite(CoreWebView2CookieSameSiteKind value);
    public bool get_IsSecure();
    public void set_IsSecure(bool value);
    public bool get_IsSession();
}
public class Microsoft.Web.WebView2.Core.CoreWebView2CookieManager : object {
    internal ICoreWebView2CookieManager _nativeICoreWebView2CookieManagerValue;
    internal object _rawNative;
    internal ICoreWebView2CookieManager _nativeICoreWebView2CookieManager { get; internal set; }
    internal CoreWebView2CookieManager(object rawCoreWebView2CookieManager);
    public CoreWebView2Cookie CreateCookieWithSystemNetCookie(Cookie systemNetCookie);
    internal ICoreWebView2CookieManager get__nativeICoreWebView2CookieManager();
    internal void set__nativeICoreWebView2CookieManager(ICoreWebView2CookieManager value);
    public CoreWebView2Cookie CreateCookie(string name, string value, string Domain, string Path);
    public CoreWebView2Cookie CopyCookie(CoreWebView2Cookie cookieParam);
    [AsyncStateMachineAttribute("Microsoft.Web.WebView2.Core.CoreWebView2CookieManager/<GetCookiesAsync>d__10")]
public Task`1<List`1<CoreWebView2Cookie>> GetCookiesAsync(string uri);
    public void AddOrUpdateCookie(CoreWebView2Cookie cookie);
    public void DeleteCookie(CoreWebView2Cookie cookie);
    public void DeleteCookies(string name, string uri);
    public void DeleteCookiesWithDomainAndPath(string name, string Domain, string Path);
    public void DeleteAllCookies();
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2CookieSameSiteKind : Enum {
    public int value__;
    public static CoreWebView2CookieSameSiteKind None;
    public static CoreWebView2CookieSameSiteKind Lax;
    public static CoreWebView2CookieSameSiteKind Strict;
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2CreateCoreWebView2CompositionControllerCompletedHandler : object {
    [CompilerGeneratedAttribute]
private CoreWebView2CompositionController <webView>k__BackingField;
    [CompilerGeneratedAttribute]
private int <errCode>k__BackingField;
    private Action continuation;
    [CompilerGeneratedAttribute]
private bool <IsCompleted>k__BackingField;
    public CoreWebView2CompositionController webView { get; private set; }
    public int errCode { get; private set; }
    public bool IsCompleted { get; private set; }
    [CompilerGeneratedAttribute]
public CoreWebView2CompositionController get_webView();
    [CompilerGeneratedAttribute]
private void set_webView(CoreWebView2CompositionController value);
    [CompilerGeneratedAttribute]
public int get_errCode();
    [CompilerGeneratedAttribute]
private void set_errCode(int value);
    public sealed virtual void Invoke(int errCode, ICoreWebView2CompositionController webView);
    public CoreWebView2CreateCoreWebView2CompositionControllerCompletedHandler GetAwaiter();
    [CompilerGeneratedAttribute]
public bool get_IsCompleted();
    [CompilerGeneratedAttribute]
private void set_IsCompleted(bool value);
    public sealed virtual void OnCompleted(Action continuation);
    public CoreWebView2CompositionController GetResult();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2CreateCoreWebView2ControllerCompletedHandler : object {
    [CompilerGeneratedAttribute]
private CoreWebView2Controller <createdController>k__BackingField;
    [CompilerGeneratedAttribute]
private int <errCode>k__BackingField;
    private Action continuation;
    [CompilerGeneratedAttribute]
private bool <IsCompleted>k__BackingField;
    public CoreWebView2Controller createdController { get; private set; }
    public int errCode { get; private set; }
    public bool IsCompleted { get; private set; }
    [CompilerGeneratedAttribute]
public CoreWebView2Controller get_createdController();
    [CompilerGeneratedAttribute]
private void set_createdController(CoreWebView2Controller value);
    [CompilerGeneratedAttribute]
public int get_errCode();
    [CompilerGeneratedAttribute]
private void set_errCode(int value);
    public sealed virtual void Invoke(int errCode, ICoreWebView2Controller createdController);
    public CoreWebView2CreateCoreWebView2ControllerCompletedHandler GetAwaiter();
    [CompilerGeneratedAttribute]
public bool get_IsCompleted();
    [CompilerGeneratedAttribute]
private void set_IsCompleted(bool value);
    public sealed virtual void OnCompleted(Action continuation);
    public CoreWebView2Controller GetResult();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2CreateCoreWebView2EnvironmentCompletedHandler : object {
    [CompilerGeneratedAttribute]
private CoreWebView2Environment <createdEnvironment>k__BackingField;
    [CompilerGeneratedAttribute]
private int <errCode>k__BackingField;
    private Action continuation;
    [CompilerGeneratedAttribute]
private bool <IsCompleted>k__BackingField;
    public CoreWebView2Environment createdEnvironment { get; private set; }
    public int errCode { get; private set; }
    public bool IsCompleted { get; private set; }
    [CompilerGeneratedAttribute]
public CoreWebView2Environment get_createdEnvironment();
    [CompilerGeneratedAttribute]
private void set_createdEnvironment(CoreWebView2Environment value);
    [CompilerGeneratedAttribute]
public int get_errCode();
    [CompilerGeneratedAttribute]
private void set_errCode(int value);
    public sealed virtual void Invoke(int errCode, ICoreWebView2Environment createdEnvironment);
    public CoreWebView2CreateCoreWebView2EnvironmentCompletedHandler GetAwaiter();
    [CompilerGeneratedAttribute]
public bool get_IsCompleted();
    [CompilerGeneratedAttribute]
private void set_IsCompleted(bool value);
    public sealed virtual void OnCompleted(Action continuation);
    public CoreWebView2Environment GetResult();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2CursorChangedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2CursorChangedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2CompositionController source, object args);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2CustomItemSelectedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2CustomItemSelectedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2ContextMenuItem source, object args);
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2DefaultDownloadDialogCornerAlignment : Enum {
    public int value__;
    public static CoreWebView2DefaultDownloadDialogCornerAlignment TopLeft;
    public static CoreWebView2DefaultDownloadDialogCornerAlignment TopRight;
    public static CoreWebView2DefaultDownloadDialogCornerAlignment BottomLeft;
    public static CoreWebView2DefaultDownloadDialogCornerAlignment BottomRight;
}
public class Microsoft.Web.WebView2.Core.CoreWebView2Deferral : object {
    private bool disposed;
    private SafeHandle handle;
    internal ICoreWebView2Deferral _nativeICoreWebView2DeferralValue;
    internal object _rawNative;
    internal ICoreWebView2Deferral _nativeICoreWebView2Deferral { get; internal set; }
    internal CoreWebView2Deferral(object rawCoreWebView2Deferral);
    public sealed virtual void Dispose();
    protected virtual void Dispose(bool disposing);
    internal ICoreWebView2Deferral get__nativeICoreWebView2Deferral();
    internal void set__nativeICoreWebView2Deferral(ICoreWebView2Deferral value);
    public void Complete();
}
public class Microsoft.Web.WebView2.Core.CoreWebView2DevToolsProtocolEventReceivedEventArgs : EventArgs {
    internal ICoreWebView2DevToolsProtocolEventReceivedEventArgs _nativeICoreWebView2DevToolsProtocolEventReceivedEventArgsValue;
    internal ICoreWebView2DevToolsProtocolEventReceivedEventArgs2 _nativeICoreWebView2DevToolsProtocolEventReceivedEventArgs2Value;
    internal object _rawNative;
    internal ICoreWebView2DevToolsProtocolEventReceivedEventArgs _nativeICoreWebView2DevToolsProtocolEventReceivedEventArgs { get; internal set; }
    internal ICoreWebView2DevToolsProtocolEventReceivedEventArgs2 _nativeICoreWebView2DevToolsProtocolEventReceivedEventArgs2 { get; internal set; }
    public string ParameterObjectAsJson { get; }
    public string SessionId { get; }
    internal CoreWebView2DevToolsProtocolEventReceivedEventArgs(object rawCoreWebView2DevToolsProtocolEventReceivedEventArgs);
    internal ICoreWebView2DevToolsProtocolEventReceivedEventArgs get__nativeICoreWebView2DevToolsProtocolEventReceivedEventArgs();
    internal void set__nativeICoreWebView2DevToolsProtocolEventReceivedEventArgs(ICoreWebView2DevToolsProtocolEventReceivedEventArgs value);
    internal ICoreWebView2DevToolsProtocolEventReceivedEventArgs2 get__nativeICoreWebView2DevToolsProtocolEventReceivedEventArgs2();
    internal void set__nativeICoreWebView2DevToolsProtocolEventReceivedEventArgs2(ICoreWebView2DevToolsProtocolEventReceivedEventArgs2 value);
    public string get_ParameterObjectAsJson();
    public string get_SessionId();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2DevToolsProtocolEventReceivedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2DevToolsProtocolEventReceivedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2 source, ICoreWebView2DevToolsProtocolEventReceivedEventArgs args);
}
public class Microsoft.Web.WebView2.Core.CoreWebView2DevToolsProtocolEventReceiver : object {
    internal ICoreWebView2DevToolsProtocolEventReceiver _nativeICoreWebView2DevToolsProtocolEventReceiverValue;
    internal object _rawNative;
    private EventRegistrationToken _devToolsProtocolEventReceivedToken;
    private EventHandler`1<CoreWebView2DevToolsProtocolEventReceivedEventArgs> devToolsProtocolEventReceived;
    internal ICoreWebView2DevToolsProtocolEventReceiver _nativeICoreWebView2DevToolsProtocolEventReceiver { get; internal set; }
    internal CoreWebView2DevToolsProtocolEventReceiver(object rawCoreWebView2DevToolsProtocolEventReceiver);
    internal ICoreWebView2DevToolsProtocolEventReceiver get__nativeICoreWebView2DevToolsProtocolEventReceiver();
    internal void set__nativeICoreWebView2DevToolsProtocolEventReceiver(ICoreWebView2DevToolsProtocolEventReceiver value);
    public void add_DevToolsProtocolEventReceived(EventHandler`1<CoreWebView2DevToolsProtocolEventReceivedEventArgs> value);
    public void remove_DevToolsProtocolEventReceived(EventHandler`1<CoreWebView2DevToolsProtocolEventReceivedEventArgs> value);
    internal void OnDevToolsProtocolEventReceived(CoreWebView2DevToolsProtocolEventReceivedEventArgs args);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2DocumentTitleChangedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2DocumentTitleChangedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2 source, object args);
}
public class Microsoft.Web.WebView2.Core.CoreWebView2DOMContentLoadedEventArgs : EventArgs {
    internal ICoreWebView2DOMContentLoadedEventArgs _nativeICoreWebView2DOMContentLoadedEventArgsValue;
    internal object _rawNative;
    internal ICoreWebView2DOMContentLoadedEventArgs _nativeICoreWebView2DOMContentLoadedEventArgs { get; internal set; }
    public ulong NavigationId { get; }
    internal CoreWebView2DOMContentLoadedEventArgs(object rawCoreWebView2DOMContentLoadedEventArgs);
    internal ICoreWebView2DOMContentLoadedEventArgs get__nativeICoreWebView2DOMContentLoadedEventArgs();
    internal void set__nativeICoreWebView2DOMContentLoadedEventArgs(ICoreWebView2DOMContentLoadedEventArgs value);
    public ulong get_NavigationId();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2DOMContentLoadedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2DOMContentLoadedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2 source, ICoreWebView2DOMContentLoadedEventArgs args);
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2DownloadInterruptReason : Enum {
    public int value__;
    public static CoreWebView2DownloadInterruptReason None;
    public static CoreWebView2DownloadInterruptReason FileFailed;
    public static CoreWebView2DownloadInterruptReason FileAccessDenied;
    public static CoreWebView2DownloadInterruptReason FileNoSpace;
    public static CoreWebView2DownloadInterruptReason FileNameTooLong;
    public static CoreWebView2DownloadInterruptReason FileTooLarge;
    public static CoreWebView2DownloadInterruptReason FileMalicious;
    public static CoreWebView2DownloadInterruptReason FileTransientError;
    public static CoreWebView2DownloadInterruptReason FileBlockedByPolicy;
    public static CoreWebView2DownloadInterruptReason FileSecurityCheckFailed;
    public static CoreWebView2DownloadInterruptReason FileTooShort;
    public static CoreWebView2DownloadInterruptReason FileHashMismatch;
    public static CoreWebView2DownloadInterruptReason NetworkFailed;
    public static CoreWebView2DownloadInterruptReason NetworkTimeout;
    public static CoreWebView2DownloadInterruptReason NetworkDisconnected;
    public static CoreWebView2DownloadInterruptReason NetworkServerDown;
    public static CoreWebView2DownloadInterruptReason NetworkInvalidRequest;
    public static CoreWebView2DownloadInterruptReason ServerFailed;
    public static CoreWebView2DownloadInterruptReason ServerNoRange;
    public static CoreWebView2DownloadInterruptReason ServerBadContent;
    public static CoreWebView2DownloadInterruptReason ServerUnauthorized;
    public static CoreWebView2DownloadInterruptReason ServerCertificateProblem;
    public static CoreWebView2DownloadInterruptReason ServerForbidden;
    public static CoreWebView2DownloadInterruptReason ServerUnexpectedResponse;
    public static CoreWebView2DownloadInterruptReason ServerContentLengthMismatch;
    public static CoreWebView2DownloadInterruptReason ServerCrossOriginRedirect;
    public static CoreWebView2DownloadInterruptReason UserCanceled;
    public static CoreWebView2DownloadInterruptReason UserShutdown;
    public static CoreWebView2DownloadInterruptReason UserPaused;
    public static CoreWebView2DownloadInterruptReason DownloadProcessCrashed;
}
public class Microsoft.Web.WebView2.Core.CoreWebView2DownloadOperation : object {
    internal ICoreWebView2DownloadOperation _nativeICoreWebView2DownloadOperationValue;
    internal object _rawNative;
    private EventRegistrationToken _bytesReceivedChangedToken;
    private EventHandler`1<object> bytesReceivedChanged;
    private EventRegistrationToken _estimatedEndTimeChangedToken;
    private EventHandler`1<object> estimatedEndTimeChanged;
    private EventRegistrationToken _stateChangedToken;
    private EventHandler`1<object> stateChanged;
    public DateTime EstimatedEndTime { get; }
    public Nullable`1<ulong> TotalBytesToReceive { get; }
    internal ICoreWebView2DownloadOperation _nativeICoreWebView2DownloadOperation { get; internal set; }
    public string Uri { get; }
    public string ContentDisposition { get; }
    public string MimeType { get; }
    public long BytesReceived { get; }
    public string ResultFilePath { get; }
    public CoreWebView2DownloadState State { get; }
    public CoreWebView2DownloadInterruptReason InterruptReason { get; }
    public bool CanResume { get; }
    internal CoreWebView2DownloadOperation(object rawCoreWebView2DownloadOperation);
    public DateTime get_EstimatedEndTime();
    public Nullable`1<ulong> get_TotalBytesToReceive();
    internal ICoreWebView2DownloadOperation get__nativeICoreWebView2DownloadOperation();
    internal void set__nativeICoreWebView2DownloadOperation(ICoreWebView2DownloadOperation value);
    public string get_Uri();
    public string get_ContentDisposition();
    public string get_MimeType();
    public long get_BytesReceived();
    public string get_ResultFilePath();
    public CoreWebView2DownloadState get_State();
    public CoreWebView2DownloadInterruptReason get_InterruptReason();
    public bool get_CanResume();
    public void add_BytesReceivedChanged(EventHandler`1<object> value);
    public void remove_BytesReceivedChanged(EventHandler`1<object> value);
    internal void OnBytesReceivedChanged(object args);
    public void add_EstimatedEndTimeChanged(EventHandler`1<object> value);
    public void remove_EstimatedEndTimeChanged(EventHandler`1<object> value);
    internal void OnEstimatedEndTimeChanged(object args);
    public void add_StateChanged(EventHandler`1<object> value);
    public void remove_StateChanged(EventHandler`1<object> value);
    internal void OnStateChanged(object args);
    public void Cancel();
    public void Pause();
    public void Resume();
}
public class Microsoft.Web.WebView2.Core.CoreWebView2DownloadStartingEventArgs : EventArgs {
    internal ICoreWebView2DownloadStartingEventArgs _nativeICoreWebView2DownloadStartingEventArgsValue;
    internal object _rawNative;
    internal ICoreWebView2DownloadStartingEventArgs _nativeICoreWebView2DownloadStartingEventArgs { get; internal set; }
    public CoreWebView2DownloadOperation DownloadOperation { get; }
    public bool Cancel { get; public set; }
    public string ResultFilePath { get; public set; }
    public bool Handled { get; public set; }
    internal CoreWebView2DownloadStartingEventArgs(object rawCoreWebView2DownloadStartingEventArgs);
    internal ICoreWebView2DownloadStartingEventArgs get__nativeICoreWebView2DownloadStartingEventArgs();
    internal void set__nativeICoreWebView2DownloadStartingEventArgs(ICoreWebView2DownloadStartingEventArgs value);
    public CoreWebView2DownloadOperation get_DownloadOperation();
    public bool get_Cancel();
    public void set_Cancel(bool value);
    public string get_ResultFilePath();
    public void set_ResultFilePath(string value);
    public bool get_Handled();
    public void set_Handled(bool value);
    public CoreWebView2Deferral GetDeferral();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2DownloadStartingEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2DownloadStartingEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2 source, ICoreWebView2DownloadStartingEventArgs args);
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2DownloadState : Enum {
    public int value__;
    public static CoreWebView2DownloadState InProgress;
    public static CoreWebView2DownloadState Interrupted;
    public static CoreWebView2DownloadState Completed;
}
public class Microsoft.Web.WebView2.Core.CoreWebView2Environment : object {
    private static bool webView2LoaderLoaded;
    [CompilerGeneratedAttribute]
private static string <LoaderDllFolderPath>k__BackingField;
    internal ICoreWebView2Environment _nativeICoreWebView2EnvironmentValue;
    internal ICoreWebView2Environment2 _nativeICoreWebView2Environment2Value;
    internal ICoreWebView2Environment3 _nativeICoreWebView2Environment3Value;
    internal ICoreWebView2Environment4 _nativeICoreWebView2Environment4Value;
    internal ICoreWebView2Environment5 _nativeICoreWebView2Environment5Value;
    internal ICoreWebView2Environment6 _nativeICoreWebView2Environment6Value;
    internal ICoreWebView2Environment7 _nativeICoreWebView2Environment7Value;
    internal ICoreWebView2Environment8 _nativeICoreWebView2Environment8Value;
    internal ICoreWebView2Environment9 _nativeICoreWebView2Environment9Value;
    internal ICoreWebView2Environment10 _nativeICoreWebView2Environment10Value;
    internal object _rawNative;
    private EventRegistrationToken _newBrowserVersionAvailableToken;
    private EventHandler`1<object> newBrowserVersionAvailable;
    private EventRegistrationToken _browserProcessExitedToken;
    private EventHandler`1<CoreWebView2BrowserProcessExitedEventArgs> browserProcessExited;
    private EventRegistrationToken _processInfosChangedToken;
    private EventHandler`1<object> processInfosChanged;
    public static string LoaderDllFolderPath { get; public set; }
    internal ICoreWebView2Environment _nativeICoreWebView2Environment { get; internal set; }
    internal ICoreWebView2Environment2 _nativeICoreWebView2Environment2 { get; internal set; }
    internal ICoreWebView2Environment3 _nativeICoreWebView2Environment3 { get; internal set; }
    internal ICoreWebView2Environment4 _nativeICoreWebView2Environment4 { get; internal set; }
    internal ICoreWebView2Environment5 _nativeICoreWebView2Environment5 { get; internal set; }
    internal ICoreWebView2Environment6 _nativeICoreWebView2Environment6 { get; internal set; }
    internal ICoreWebView2Environment7 _nativeICoreWebView2Environment7 { get; internal set; }
    internal ICoreWebView2Environment8 _nativeICoreWebView2Environment8 { get; internal set; }
    internal ICoreWebView2Environment9 _nativeICoreWebView2Environment9 { get; internal set; }
    internal ICoreWebView2Environment10 _nativeICoreWebView2Environment10 { get; internal set; }
    public string BrowserVersionString { get; }
    public string UserDataFolder { get; }
    internal CoreWebView2Environment(object rawCoreWebView2Environment);
    internal static int CreateCoreWebView2EnvironmentWithOptions(string browserExecutableFolder, string userDataFolder, ICoreWebView2EnvironmentOptions options, ICoreWebView2CreateCoreWebView2EnvironmentCompletedHandler environment_created_handler);
    internal static int GetAvailableCoreWebView2BrowserVersionString(string browserExecutableFolder, String& versionInfo);
    internal static int CompareBrowserVersions(string version1, string version2, Int32& result);
    [AsyncStateMachineAttribute("Microsoft.Web.WebView2.Core.CoreWebView2Environment/<CreateAsync>d__3")]
public static Task`1<CoreWebView2Environment> CreateAsync(string browserExecutableFolder, string userDataFolder, CoreWebView2EnvironmentOptions options);
    public static string GetAvailableBrowserVersionString(string browserExecutableFolder);
    public static int CompareBrowserVersions(string version1, string version2);
    public CoreWebView2WebResourceRequest CreateWebResourceRequest(string uri, string Method, Stream postData, string Headers);
    public CoreWebView2ControllerOptions CreateCoreWebView2ControllerOptions();
    [AsyncStateMachineAttribute("Microsoft.Web.WebView2.Core.CoreWebView2Environment/<CreateCoreWebView2ControllerAsync>d__8")]
public Task`1<CoreWebView2Controller> CreateCoreWebView2ControllerAsync(IntPtr ParentWindow, CoreWebView2ControllerOptions options);
    [AsyncStateMachineAttribute("Microsoft.Web.WebView2.Core.CoreWebView2Environment/<CreateCoreWebView2CompositionControllerAsync>d__9")]
public Task`1<CoreWebView2CompositionController> CreateCoreWebView2CompositionControllerAsync(IntPtr ParentWindow, CoreWebView2ControllerOptions options);
    private static ProcessorArchitecture GetArchitecture();
    private static void GetSystemInfo(SYSTEM_INFO& lpSystemInfo);
    internal static IntPtr LoadLibrary(string dllToLoad);
    private static bool IsDotNetFramework();
    [CompilerGeneratedAttribute]
public static string get_LoaderDllFolderPath();
    [CompilerGeneratedAttribute]
public static void set_LoaderDllFolderPath(string value);
    private static void LoadWebView2LoaderDll();
    private static void LoadSpecifyWebView2LoaderDll(string baseFolderPath);
    internal ICoreWebView2Environment get__nativeICoreWebView2Environment();
    internal void set__nativeICoreWebView2Environment(ICoreWebView2Environment value);
    internal ICoreWebView2Environment2 get__nativeICoreWebView2Environment2();
    internal void set__nativeICoreWebView2Environment2(ICoreWebView2Environment2 value);
    internal ICoreWebView2Environment3 get__nativeICoreWebView2Environment3();
    internal void set__nativeICoreWebView2Environment3(ICoreWebView2Environment3 value);
    internal ICoreWebView2Environment4 get__nativeICoreWebView2Environment4();
    internal void set__nativeICoreWebView2Environment4(ICoreWebView2Environment4 value);
    internal ICoreWebView2Environment5 get__nativeICoreWebView2Environment5();
    internal void set__nativeICoreWebView2Environment5(ICoreWebView2Environment5 value);
    internal ICoreWebView2Environment6 get__nativeICoreWebView2Environment6();
    internal void set__nativeICoreWebView2Environment6(ICoreWebView2Environment6 value);
    internal ICoreWebView2Environment7 get__nativeICoreWebView2Environment7();
    internal void set__nativeICoreWebView2Environment7(ICoreWebView2Environment7 value);
    internal ICoreWebView2Environment8 get__nativeICoreWebView2Environment8();
    internal void set__nativeICoreWebView2Environment8(ICoreWebView2Environment8 value);
    internal ICoreWebView2Environment9 get__nativeICoreWebView2Environment9();
    internal void set__nativeICoreWebView2Environment9(ICoreWebView2Environment9 value);
    internal ICoreWebView2Environment10 get__nativeICoreWebView2Environment10();
    internal void set__nativeICoreWebView2Environment10(ICoreWebView2Environment10 value);
    public string get_BrowserVersionString();
    public void add_NewBrowserVersionAvailable(EventHandler`1<object> value);
    public void remove_NewBrowserVersionAvailable(EventHandler`1<object> value);
    internal void OnNewBrowserVersionAvailable(object args);
    [AsyncStateMachineAttribute("Microsoft.Web.WebView2.Core.CoreWebView2Environment/<CreateCoreWebView2ControllerAsync>d__74")]
public Task`1<CoreWebView2Controller> CreateCoreWebView2ControllerAsync(IntPtr ParentWindow);
    public CoreWebView2WebResourceResponse CreateWebResourceResponse(Stream Content, int StatusCode, string ReasonPhrase, string Headers);
    [AsyncStateMachineAttribute("Microsoft.Web.WebView2.Core.CoreWebView2Environment/<CreateCoreWebView2CompositionControllerAsync>d__76")]
public Task`1<CoreWebView2CompositionController> CreateCoreWebView2CompositionControllerAsync(IntPtr ParentWindow);
    public CoreWebView2PointerInfo CreateCoreWebView2PointerInfo();
    public void add_BrowserProcessExited(EventHandler`1<CoreWebView2BrowserProcessExitedEventArgs> value);
    public void remove_BrowserProcessExited(EventHandler`1<CoreWebView2BrowserProcessExitedEventArgs> value);
    internal void OnBrowserProcessExited(CoreWebView2BrowserProcessExitedEventArgs args);
    public CoreWebView2PrintSettings CreatePrintSettings();
    public string get_UserDataFolder();
    public void add_ProcessInfosChanged(EventHandler`1<object> value);
    public void remove_ProcessInfosChanged(EventHandler`1<object> value);
    internal void OnProcessInfosChanged(object args);
    public IReadOnlyList`1<CoreWebView2ProcessInfo> GetProcessInfos();
    public CoreWebView2ContextMenuItem CreateContextMenuItem(string Label, Stream iconStream, CoreWebView2ContextMenuItemKind Kind);
}
public class Microsoft.Web.WebView2.Core.CoreWebView2EnvironmentOptions : object {
    internal ICoreWebView2EnvironmentOptions _nativeICoreWebView2EnvironmentOptionsValue;
    internal ICoreWebView2EnvironmentOptions2 _nativeICoreWebView2EnvironmentOptions2Value;
    internal object _rawNative;
    internal ICoreWebView2EnvironmentOptions _nativeICoreWebView2EnvironmentOptions { get; internal set; }
    internal ICoreWebView2EnvironmentOptions2 _nativeICoreWebView2EnvironmentOptions2 { get; internal set; }
    public string AdditionalBrowserArguments { get; public set; }
    public string Language { get; public set; }
    public string TargetCompatibleBrowserVersion { get; public set; }
    public bool AllowSingleSignOnUsingOSPrimaryAccount { get; public set; }
    public bool ExclusiveUserDataFolderAccess { get; public set; }
    public CoreWebView2EnvironmentOptions(string additionalBrowserArguments, string language, string targetCompatibleBrowserVersion, bool allowSingleSignOnUsingOSPrimaryAccount);
    internal CoreWebView2EnvironmentOptions(object rawCoreWebView2EnvironmentOptions);
    internal ICoreWebView2EnvironmentOptions get__nativeICoreWebView2EnvironmentOptions();
    internal void set__nativeICoreWebView2EnvironmentOptions(ICoreWebView2EnvironmentOptions value);
    internal ICoreWebView2EnvironmentOptions2 get__nativeICoreWebView2EnvironmentOptions2();
    internal void set__nativeICoreWebView2EnvironmentOptions2(ICoreWebView2EnvironmentOptions2 value);
    public string get_AdditionalBrowserArguments();
    public void set_AdditionalBrowserArguments(string value);
    public string get_Language();
    public void set_Language(string value);
    public string get_TargetCompatibleBrowserVersion();
    public void set_TargetCompatibleBrowserVersion(string value);
    public bool get_AllowSingleSignOnUsingOSPrimaryAccount();
    public void set_AllowSingleSignOnUsingOSPrimaryAccount(bool value);
    public bool get_ExclusiveUserDataFolderAccess();
    public void set_ExclusiveUserDataFolderAccess(bool value);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2EstimatedEndTimeChangedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2EstimatedEndTimeChangedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2DownloadOperation source, object args);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2ExecuteScriptCompletedHandler : object {
    [CompilerGeneratedAttribute]
private string <resultObjectAsJson>k__BackingField;
    [CompilerGeneratedAttribute]
private int <errCode>k__BackingField;
    private Action continuation;
    [CompilerGeneratedAttribute]
private bool <IsCompleted>k__BackingField;
    public string resultObjectAsJson { get; private set; }
    public int errCode { get; private set; }
    public bool IsCompleted { get; private set; }
    [CompilerGeneratedAttribute]
public string get_resultObjectAsJson();
    [CompilerGeneratedAttribute]
private void set_resultObjectAsJson(string value);
    [CompilerGeneratedAttribute]
public int get_errCode();
    [CompilerGeneratedAttribute]
private void set_errCode(int value);
    public sealed virtual void Invoke(int errCode, string resultObjectAsJson);
    public CoreWebView2ExecuteScriptCompletedHandler GetAwaiter();
    [CompilerGeneratedAttribute]
public bool get_IsCompleted();
    [CompilerGeneratedAttribute]
private void set_IsCompleted(bool value);
    public sealed virtual void OnCompleted(Action continuation);
    public string GetResult();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2FocusChangedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2FocusChangedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2Controller source, object args);
}
public class Microsoft.Web.WebView2.Core.CoreWebView2Frame : object {
    internal ICoreWebView2Frame _nativeICoreWebView2FrameValue;
    internal ICoreWebView2Frame2 _nativeICoreWebView2Frame2Value;
    internal ICoreWebView2Frame3 _nativeICoreWebView2Frame3Value;
    internal object _rawNative;
    private EventRegistrationToken _nameChangedToken;
    private EventHandler`1<object> nameChanged;
    private EventRegistrationToken _destroyedToken;
    private EventHandler`1<object> destroyed;
    private EventRegistrationToken _navigationStartingToken;
    private EventHandler`1<CoreWebView2NavigationStartingEventArgs> navigationStarting;
    private EventRegistrationToken _contentLoadingToken;
    private EventHandler`1<CoreWebView2ContentLoadingEventArgs> contentLoading;
    private EventRegistrationToken _navigationCompletedToken;
    private EventHandler`1<CoreWebView2NavigationCompletedEventArgs> navigationCompleted;
    private EventRegistrationToken _dOMContentLoadedToken;
    private EventHandler`1<CoreWebView2DOMContentLoadedEventArgs> dOMContentLoaded;
    private EventRegistrationToken _webMessageReceivedToken;
    private EventHandler`1<CoreWebView2WebMessageReceivedEventArgs> webMessageReceived;
    private EventRegistrationToken _permissionRequestedToken;
    private EventHandler`1<CoreWebView2PermissionRequestedEventArgs> permissionRequested;
    internal ICoreWebView2Frame _nativeICoreWebView2Frame { get; internal set; }
    internal ICoreWebView2Frame2 _nativeICoreWebView2Frame2 { get; internal set; }
    internal ICoreWebView2Frame3 _nativeICoreWebView2Frame3 { get; internal set; }
    public string Name { get; }
    internal CoreWebView2Frame(object rawCoreWebView2Frame);
    public void AddHostObjectToScript(string name, object rawObject, IEnumerable`1<string> origins);
    internal ICoreWebView2Frame get__nativeICoreWebView2Frame();
    internal void set__nativeICoreWebView2Frame(ICoreWebView2Frame value);
    internal ICoreWebView2Frame2 get__nativeICoreWebView2Frame2();
    internal void set__nativeICoreWebView2Frame2(ICoreWebView2Frame2 value);
    internal ICoreWebView2Frame3 get__nativeICoreWebView2Frame3();
    internal void set__nativeICoreWebView2Frame3(ICoreWebView2Frame3 value);
    public string get_Name();
    public void add_NameChanged(EventHandler`1<object> value);
    public void remove_NameChanged(EventHandler`1<object> value);
    internal void OnNameChanged(object args);
    public void add_Destroyed(EventHandler`1<object> value);
    public void remove_Destroyed(EventHandler`1<object> value);
    internal void OnDestroyed(object args);
    public void RemoveHostObjectFromScript(string name);
    public int IsDestroyed();
    public void add_NavigationStarting(EventHandler`1<CoreWebView2NavigationStartingEventArgs> value);
    public void remove_NavigationStarting(EventHandler`1<CoreWebView2NavigationStartingEventArgs> value);
    internal void OnNavigationStarting(CoreWebView2NavigationStartingEventArgs args);
    public void add_ContentLoading(EventHandler`1<CoreWebView2ContentLoadingEventArgs> value);
    public void remove_ContentLoading(EventHandler`1<CoreWebView2ContentLoadingEventArgs> value);
    internal void OnContentLoading(CoreWebView2ContentLoadingEventArgs args);
    public void add_NavigationCompleted(EventHandler`1<CoreWebView2NavigationCompletedEventArgs> value);
    public void remove_NavigationCompleted(EventHandler`1<CoreWebView2NavigationCompletedEventArgs> value);
    internal void OnNavigationCompleted(CoreWebView2NavigationCompletedEventArgs args);
    public void add_DOMContentLoaded(EventHandler`1<CoreWebView2DOMContentLoadedEventArgs> value);
    public void remove_DOMContentLoaded(EventHandler`1<CoreWebView2DOMContentLoadedEventArgs> value);
    internal void OnDOMContentLoaded(CoreWebView2DOMContentLoadedEventArgs args);
    public void add_WebMessageReceived(EventHandler`1<CoreWebView2WebMessageReceivedEventArgs> value);
    public void remove_WebMessageReceived(EventHandler`1<CoreWebView2WebMessageReceivedEventArgs> value);
    internal void OnWebMessageReceived(CoreWebView2WebMessageReceivedEventArgs args);
    [AsyncStateMachineAttribute("Microsoft.Web.WebView2.Core.CoreWebView2Frame/<ExecuteScriptAsync>d__62")]
public Task`1<string> ExecuteScriptAsync(string javaScript);
    public void PostWebMessageAsJson(string webMessageAsJson);
    public void PostWebMessageAsString(string webMessageAsString);
    public void add_PermissionRequested(EventHandler`1<CoreWebView2PermissionRequestedEventArgs> value);
    public void remove_PermissionRequested(EventHandler`1<CoreWebView2PermissionRequestedEventArgs> value);
    internal void OnPermissionRequested(CoreWebView2PermissionRequestedEventArgs args);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2FrameContentLoadingEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2FrameContentLoadingEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2Frame source, ICoreWebView2ContentLoadingEventArgs args);
}
public class Microsoft.Web.WebView2.Core.CoreWebView2FrameCreatedEventArgs : EventArgs {
    internal ICoreWebView2FrameCreatedEventArgs _nativeICoreWebView2FrameCreatedEventArgsValue;
    internal object _rawNative;
    internal ICoreWebView2FrameCreatedEventArgs _nativeICoreWebView2FrameCreatedEventArgs { get; internal set; }
    public CoreWebView2Frame Frame { get; }
    internal CoreWebView2FrameCreatedEventArgs(object rawCoreWebView2FrameCreatedEventArgs);
    internal ICoreWebView2FrameCreatedEventArgs get__nativeICoreWebView2FrameCreatedEventArgs();
    internal void set__nativeICoreWebView2FrameCreatedEventArgs(ICoreWebView2FrameCreatedEventArgs value);
    public CoreWebView2Frame get_Frame();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2FrameCreatedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2FrameCreatedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2 source, ICoreWebView2FrameCreatedEventArgs args);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2FrameDestroyedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2FrameDestroyedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2Frame source, object args);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2FrameDOMContentLoadedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2FrameDOMContentLoadedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2Frame source, ICoreWebView2DOMContentLoadedEventArgs args);
}
public class Microsoft.Web.WebView2.Core.CoreWebView2FrameInfo : object {
    internal ICoreWebView2FrameInfo _nativeICoreWebView2FrameInfoValue;
    internal object _rawNative;
    internal ICoreWebView2FrameInfo _nativeICoreWebView2FrameInfo { get; internal set; }
    public string Name { get; }
    public string Source { get; }
    internal CoreWebView2FrameInfo(object rawCoreWebView2FrameInfo);
    internal ICoreWebView2FrameInfo get__nativeICoreWebView2FrameInfo();
    internal void set__nativeICoreWebView2FrameInfo(ICoreWebView2FrameInfo value);
    public string get_Name();
    public string get_Source();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2FrameNameChangedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2FrameNameChangedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2Frame source, object args);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2FrameNavigationCompletedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2FrameNavigationCompletedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2Frame source, ICoreWebView2NavigationCompletedEventArgs args);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2FrameNavigationStartingEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2FrameNavigationStartingEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2Frame source, ICoreWebView2NavigationStartingEventArgs args);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2FramePermissionRequestedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2FramePermissionRequestedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2Frame source, ICoreWebView2PermissionRequestedEventArgs2 args);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2FrameWebMessageReceivedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2FrameWebMessageReceivedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2Frame source, ICoreWebView2WebMessageReceivedEventArgs args);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2GetCookiesCompletedHandler : object {
    [CompilerGeneratedAttribute]
private List`1<CoreWebView2Cookie> <cookieList>k__BackingField;
    [CompilerGeneratedAttribute]
private int <errCode>k__BackingField;
    private Action continuation;
    [CompilerGeneratedAttribute]
private bool <IsCompleted>k__BackingField;
    public List`1<CoreWebView2Cookie> cookieList { get; private set; }
    public int errCode { get; private set; }
    public bool IsCompleted { get; private set; }
    [CompilerGeneratedAttribute]
public List`1<CoreWebView2Cookie> get_cookieList();
    [CompilerGeneratedAttribute]
private void set_cookieList(List`1<CoreWebView2Cookie> value);
    [CompilerGeneratedAttribute]
public int get_errCode();
    [CompilerGeneratedAttribute]
private void set_errCode(int value);
    public sealed virtual void Invoke(int errCode, ICoreWebView2CookieList cookieList);
    public CoreWebView2GetCookiesCompletedHandler GetAwaiter();
    [CompilerGeneratedAttribute]
public bool get_IsCompleted();
    [CompilerGeneratedAttribute]
private void set_IsCompleted(bool value);
    public sealed virtual void OnCompleted(Action continuation);
    public List`1<CoreWebView2Cookie> GetResult();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2HistoryChangedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2HistoryChangedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2 source, object args);
}
public class Microsoft.Web.WebView2.Core.CoreWebView2HostObjectHelper : object {
    internal ICoreWebView2StagingHostObjectHelper _nativeICoreWebView2StagingHostObjectHelper;
    internal CoreWebView2HostObjectHelper(object rawCoreWebView2HostObjectHelper);
    private void Initialize();
    public int IsMethodMember(object rawObject, string memberName);
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2HostResourceAccessKind : Enum {
    public int value__;
    public static CoreWebView2HostResourceAccessKind Deny;
    public static CoreWebView2HostResourceAccessKind Allow;
    public static CoreWebView2HostResourceAccessKind DenyCors;
}
public class Microsoft.Web.WebView2.Core.CoreWebView2HttpHeadersCollectionIterator : object {
    private bool isInitialized;
    internal ICoreWebView2HttpHeadersCollectionIterator _nativeICoreWebView2HttpHeadersCollectionIteratorValue;
    internal object _rawNative;
    private object System.Collections.IEnumerator.Current { get; }
    public KeyValuePair`2<string, string> Current { get; }
    internal ICoreWebView2HttpHeadersCollectionIterator _nativeICoreWebView2HttpHeadersCollectionIterator { get; internal set; }
    public bool HasCurrentHeader { get; }
    internal CoreWebView2HttpHeadersCollectionIterator(object rawCoreWebView2HttpHeadersCollectionIterator);
    public sealed virtual bool MoveNext();
    public sealed virtual void Reset();
    public sealed virtual void Dispose();
    private sealed virtual override object System.Collections.IEnumerator.get_Current();
    public sealed virtual KeyValuePair`2<string, string> get_Current();
    internal ICoreWebView2HttpHeadersCollectionIterator get__nativeICoreWebView2HttpHeadersCollectionIterator();
    internal void set__nativeICoreWebView2HttpHeadersCollectionIterator(ICoreWebView2HttpHeadersCollectionIterator value);
    public bool get_HasCurrentHeader();
    private void GetCurrentHeader(String& name, String& value);
}
public class Microsoft.Web.WebView2.Core.CoreWebView2HttpRequestHeaders : object {
    internal ICoreWebView2HttpRequestHeaders _nativeICoreWebView2HttpRequestHeadersValue;
    internal object _rawNative;
    internal ICoreWebView2HttpRequestHeaders _nativeICoreWebView2HttpRequestHeaders { get; internal set; }
    internal CoreWebView2HttpRequestHeaders(object rawCoreWebView2HttpRequestHeaders);
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IEnumerator`1<KeyValuePair`2<string, string>> System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.String>>.GetEnumerator();
    public CoreWebView2HttpHeadersCollectionIterator GetEnumerator();
    internal ICoreWebView2HttpRequestHeaders get__nativeICoreWebView2HttpRequestHeaders();
    internal void set__nativeICoreWebView2HttpRequestHeaders(ICoreWebView2HttpRequestHeaders value);
    public string GetHeader(string name);
    public CoreWebView2HttpHeadersCollectionIterator GetHeaders(string name);
    public bool Contains(string name);
    public void SetHeader(string name, string value);
    public void RemoveHeader(string name);
    public CoreWebView2HttpHeadersCollectionIterator GetIterator();
}
public class Microsoft.Web.WebView2.Core.CoreWebView2HttpResponseHeaders : object {
    internal ICoreWebView2HttpResponseHeaders _nativeICoreWebView2HttpResponseHeadersValue;
    internal object _rawNative;
    internal ICoreWebView2HttpResponseHeaders _nativeICoreWebView2HttpResponseHeaders { get; internal set; }
    internal CoreWebView2HttpResponseHeaders(object rawCoreWebView2HttpResponseHeaders);
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IEnumerator`1<KeyValuePair`2<string, string>> System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.String>>.GetEnumerator();
    public CoreWebView2HttpHeadersCollectionIterator GetEnumerator();
    internal ICoreWebView2HttpResponseHeaders get__nativeICoreWebView2HttpResponseHeaders();
    internal void set__nativeICoreWebView2HttpResponseHeaders(ICoreWebView2HttpResponseHeaders value);
    public void AppendHeader(string name, string value);
    public bool Contains(string name);
    public string GetHeader(string name);
    public CoreWebView2HttpHeadersCollectionIterator GetHeaders(string name);
    public CoreWebView2HttpHeadersCollectionIterator GetIterator();
}
public class Microsoft.Web.WebView2.Core.CoreWebView2InitializationCompletedEventArgs : EventArgs {
    [CompilerGeneratedAttribute]
private Exception <InitializationException>k__BackingField;
    public bool IsSuccess { get; }
    public Exception InitializationException { get; private set; }
    public CoreWebView2InitializationCompletedEventArgs(Exception ex);
    public bool get_IsSuccess();
    [CompilerGeneratedAttribute]
public Exception get_InitializationException();
    [CompilerGeneratedAttribute]
private void set_InitializationException(Exception value);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2IsDefaultDownloadDialogOpenChangedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2IsDefaultDownloadDialogOpenChangedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2 source, object args);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2IsDocumentPlayingAudioChangedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2IsDocumentPlayingAudioChangedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2 source, object args);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2IsMutedChangedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2IsMutedChangedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2 source, object args);
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2KeyEventKind : Enum {
    public int value__;
    public static CoreWebView2KeyEventKind KeyDown;
    public static CoreWebView2KeyEventKind KeyUp;
    public static CoreWebView2KeyEventKind SystemKeyDown;
    public static CoreWebView2KeyEventKind SystemKeyUp;
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2MouseEventKind : Enum {
    public int value__;
    public static CoreWebView2MouseEventKind HorizontalWheel;
    public static CoreWebView2MouseEventKind LeftButtonDoubleClick;
    public static CoreWebView2MouseEventKind LeftButtonDown;
    public static CoreWebView2MouseEventKind LeftButtonUp;
    public static CoreWebView2MouseEventKind Leave;
    public static CoreWebView2MouseEventKind MiddleButtonDoubleClick;
    public static CoreWebView2MouseEventKind MiddleButtonDown;
    public static CoreWebView2MouseEventKind MiddleButtonUp;
    public static CoreWebView2MouseEventKind Move;
    public static CoreWebView2MouseEventKind RightButtonDoubleClick;
    public static CoreWebView2MouseEventKind RightButtonDown;
    public static CoreWebView2MouseEventKind RightButtonUp;
    public static CoreWebView2MouseEventKind Wheel;
    public static CoreWebView2MouseEventKind XButtonDoubleClick;
    public static CoreWebView2MouseEventKind XButtonDown;
    public static CoreWebView2MouseEventKind XButtonUp;
}
[FlagsAttribute]
public enum Microsoft.Web.WebView2.Core.CoreWebView2MouseEventVirtualKeys : Enum {
    public int value__;
    public static CoreWebView2MouseEventVirtualKeys None;
    public static CoreWebView2MouseEventVirtualKeys LeftButton;
    public static CoreWebView2MouseEventVirtualKeys RightButton;
    public static CoreWebView2MouseEventVirtualKeys Shift;
    public static CoreWebView2MouseEventVirtualKeys Control;
    public static CoreWebView2MouseEventVirtualKeys MiddleButton;
    public static CoreWebView2MouseEventVirtualKeys XButton1;
    public static CoreWebView2MouseEventVirtualKeys XButton2;
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2MoveFocusReason : Enum {
    public int value__;
    public static CoreWebView2MoveFocusReason Programmatic;
    public static CoreWebView2MoveFocusReason Next;
    public static CoreWebView2MoveFocusReason Previous;
}
public class Microsoft.Web.WebView2.Core.CoreWebView2MoveFocusRequestedEventArgs : EventArgs {
    internal ICoreWebView2MoveFocusRequestedEventArgs _nativeICoreWebView2MoveFocusRequestedEventArgsValue;
    internal object _rawNative;
    internal ICoreWebView2MoveFocusRequestedEventArgs _nativeICoreWebView2MoveFocusRequestedEventArgs { get; internal set; }
    public CoreWebView2MoveFocusReason Reason { get; }
    public bool Handled { get; public set; }
    internal CoreWebView2MoveFocusRequestedEventArgs(object rawCoreWebView2MoveFocusRequestedEventArgs);
    internal ICoreWebView2MoveFocusRequestedEventArgs get__nativeICoreWebView2MoveFocusRequestedEventArgs();
    internal void set__nativeICoreWebView2MoveFocusRequestedEventArgs(ICoreWebView2MoveFocusRequestedEventArgs value);
    public CoreWebView2MoveFocusReason get_Reason();
    public bool get_Handled();
    public void set_Handled(bool value);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2MoveFocusRequestedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2MoveFocusRequestedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2Controller source, ICoreWebView2MoveFocusRequestedEventArgs args);
}
public class Microsoft.Web.WebView2.Core.CoreWebView2NavigationCompletedEventArgs : EventArgs {
    internal ICoreWebView2NavigationCompletedEventArgs _nativeICoreWebView2NavigationCompletedEventArgsValue;
    internal ICoreWebView2NavigationCompletedEventArgs2 _nativeICoreWebView2NavigationCompletedEventArgs2Value;
    internal object _rawNative;
    internal ICoreWebView2NavigationCompletedEventArgs _nativeICoreWebView2NavigationCompletedEventArgs { get; internal set; }
    internal ICoreWebView2NavigationCompletedEventArgs2 _nativeICoreWebView2NavigationCompletedEventArgs2 { get; internal set; }
    public bool IsSuccess { get; }
    public CoreWebView2WebErrorStatus WebErrorStatus { get; }
    public ulong NavigationId { get; }
    public int HttpStatusCode { get; }
    internal CoreWebView2NavigationCompletedEventArgs(object rawCoreWebView2NavigationCompletedEventArgs);
    internal ICoreWebView2NavigationCompletedEventArgs get__nativeICoreWebView2NavigationCompletedEventArgs();
    internal void set__nativeICoreWebView2NavigationCompletedEventArgs(ICoreWebView2NavigationCompletedEventArgs value);
    internal ICoreWebView2NavigationCompletedEventArgs2 get__nativeICoreWebView2NavigationCompletedEventArgs2();
    internal void set__nativeICoreWebView2NavigationCompletedEventArgs2(ICoreWebView2NavigationCompletedEventArgs2 value);
    public bool get_IsSuccess();
    public CoreWebView2WebErrorStatus get_WebErrorStatus();
    public ulong get_NavigationId();
    public int get_HttpStatusCode();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2NavigationCompletedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2NavigationCompletedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2 source, ICoreWebView2NavigationCompletedEventArgs args);
}
public class Microsoft.Web.WebView2.Core.CoreWebView2NavigationStartingEventArgs : EventArgs {
    internal ICoreWebView2NavigationStartingEventArgs _nativeICoreWebView2NavigationStartingEventArgsValue;
    internal ICoreWebView2NavigationStartingEventArgs2 _nativeICoreWebView2NavigationStartingEventArgs2Value;
    internal object _rawNative;
    internal ICoreWebView2NavigationStartingEventArgs _nativeICoreWebView2NavigationStartingEventArgs { get; internal set; }
    internal ICoreWebView2NavigationStartingEventArgs2 _nativeICoreWebView2NavigationStartingEventArgs2 { get; internal set; }
    public string Uri { get; }
    public bool IsUserInitiated { get; }
    public bool IsRedirected { get; }
    public CoreWebView2HttpRequestHeaders RequestHeaders { get; }
    public bool Cancel { get; public set; }
    public ulong NavigationId { get; }
    public string AdditionalAllowedFrameAncestors { get; public set; }
    internal CoreWebView2NavigationStartingEventArgs(object rawCoreWebView2NavigationStartingEventArgs);
    internal ICoreWebView2NavigationStartingEventArgs get__nativeICoreWebView2NavigationStartingEventArgs();
    internal void set__nativeICoreWebView2NavigationStartingEventArgs(ICoreWebView2NavigationStartingEventArgs value);
    internal ICoreWebView2NavigationStartingEventArgs2 get__nativeICoreWebView2NavigationStartingEventArgs2();
    internal void set__nativeICoreWebView2NavigationStartingEventArgs2(ICoreWebView2NavigationStartingEventArgs2 value);
    public string get_Uri();
    public bool get_IsUserInitiated();
    public bool get_IsRedirected();
    public CoreWebView2HttpRequestHeaders get_RequestHeaders();
    public bool get_Cancel();
    public void set_Cancel(bool value);
    public ulong get_NavigationId();
    public string get_AdditionalAllowedFrameAncestors();
    public void set_AdditionalAllowedFrameAncestors(string value);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2NavigationStartingEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2NavigationStartingEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2 source, ICoreWebView2NavigationStartingEventArgs args);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2NewBrowserVersionAvailableEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2NewBrowserVersionAvailableEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2Environment source, object args);
}
public class Microsoft.Web.WebView2.Core.CoreWebView2NewWindowRequestedEventArgs : EventArgs {
    internal ICoreWebView2NewWindowRequestedEventArgs _nativeICoreWebView2NewWindowRequestedEventArgsValue;
    internal ICoreWebView2NewWindowRequestedEventArgs2 _nativeICoreWebView2NewWindowRequestedEventArgs2Value;
    internal object _rawNative;
    internal ICoreWebView2NewWindowRequestedEventArgs _nativeICoreWebView2NewWindowRequestedEventArgs { get; internal set; }
    internal ICoreWebView2NewWindowRequestedEventArgs2 _nativeICoreWebView2NewWindowRequestedEventArgs2 { get; internal set; }
    public string Uri { get; }
    public CoreWebView2 NewWindow { get; public set; }
    public bool Handled { get; public set; }
    public bool IsUserInitiated { get; }
    public CoreWebView2WindowFeatures WindowFeatures { get; }
    public string Name { get; }
    internal CoreWebView2NewWindowRequestedEventArgs(object rawCoreWebView2NewWindowRequestedEventArgs);
    internal ICoreWebView2NewWindowRequestedEventArgs get__nativeICoreWebView2NewWindowRequestedEventArgs();
    internal void set__nativeICoreWebView2NewWindowRequestedEventArgs(ICoreWebView2NewWindowRequestedEventArgs value);
    internal ICoreWebView2NewWindowRequestedEventArgs2 get__nativeICoreWebView2NewWindowRequestedEventArgs2();
    internal void set__nativeICoreWebView2NewWindowRequestedEventArgs2(ICoreWebView2NewWindowRequestedEventArgs2 value);
    public string get_Uri();
    public CoreWebView2 get_NewWindow();
    public void set_NewWindow(CoreWebView2 value);
    public bool get_Handled();
    public void set_Handled(bool value);
    public bool get_IsUserInitiated();
    public CoreWebView2WindowFeatures get_WindowFeatures();
    public CoreWebView2Deferral GetDeferral();
    public string get_Name();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2NewWindowRequestedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2NewWindowRequestedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2 source, ICoreWebView2NewWindowRequestedEventArgs args);
}
[FlagsAttribute]
public enum Microsoft.Web.WebView2.Core.CoreWebView2PdfToolbarItems : Enum {
    public int value__;
    public static CoreWebView2PdfToolbarItems None;
    public static CoreWebView2PdfToolbarItems Save;
    public static CoreWebView2PdfToolbarItems Print;
    public static CoreWebView2PdfToolbarItems SaveAs;
    public static CoreWebView2PdfToolbarItems ZoomIn;
    public static CoreWebView2PdfToolbarItems ZoomOut;
    public static CoreWebView2PdfToolbarItems Rotate;
    public static CoreWebView2PdfToolbarItems FitPage;
    public static CoreWebView2PdfToolbarItems PageLayout;
    public static CoreWebView2PdfToolbarItems Bookmarks;
    public static CoreWebView2PdfToolbarItems PageSelector;
    public static CoreWebView2PdfToolbarItems Search;
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2PermissionKind : Enum {
    public int value__;
    public static CoreWebView2PermissionKind UnknownPermission;
    public static CoreWebView2PermissionKind Microphone;
    public static CoreWebView2PermissionKind Camera;
    public static CoreWebView2PermissionKind Geolocation;
    public static CoreWebView2PermissionKind Notifications;
    public static CoreWebView2PermissionKind OtherSensors;
    public static CoreWebView2PermissionKind ClipboardRead;
}
public class Microsoft.Web.WebView2.Core.CoreWebView2PermissionRequestedEventArgs : EventArgs {
    internal ICoreWebView2PermissionRequestedEventArgs _nativeICoreWebView2PermissionRequestedEventArgsValue;
    internal ICoreWebView2PermissionRequestedEventArgs2 _nativeICoreWebView2PermissionRequestedEventArgs2Value;
    internal object _rawNative;
    internal ICoreWebView2PermissionRequestedEventArgs _nativeICoreWebView2PermissionRequestedEventArgs { get; internal set; }
    internal ICoreWebView2PermissionRequestedEventArgs2 _nativeICoreWebView2PermissionRequestedEventArgs2 { get; internal set; }
    public string Uri { get; }
    public CoreWebView2PermissionKind PermissionKind { get; }
    public bool IsUserInitiated { get; }
    public CoreWebView2PermissionState State { get; public set; }
    public bool Handled { get; public set; }
    internal CoreWebView2PermissionRequestedEventArgs(object rawCoreWebView2PermissionRequestedEventArgs);
    internal ICoreWebView2PermissionRequestedEventArgs get__nativeICoreWebView2PermissionRequestedEventArgs();
    internal void set__nativeICoreWebView2PermissionRequestedEventArgs(ICoreWebView2PermissionRequestedEventArgs value);
    internal ICoreWebView2PermissionRequestedEventArgs2 get__nativeICoreWebView2PermissionRequestedEventArgs2();
    internal void set__nativeICoreWebView2PermissionRequestedEventArgs2(ICoreWebView2PermissionRequestedEventArgs2 value);
    public string get_Uri();
    public CoreWebView2PermissionKind get_PermissionKind();
    public bool get_IsUserInitiated();
    public CoreWebView2PermissionState get_State();
    public void set_State(CoreWebView2PermissionState value);
    public CoreWebView2Deferral GetDeferral();
    public bool get_Handled();
    public void set_Handled(bool value);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2PermissionRequestedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2PermissionRequestedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2 source, ICoreWebView2PermissionRequestedEventArgs args);
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2PermissionState : Enum {
    public int value__;
    public static CoreWebView2PermissionState Default;
    public static CoreWebView2PermissionState Allow;
    public static CoreWebView2PermissionState Deny;
}
public class Microsoft.Web.WebView2.Core.CoreWebView2PhysicalKeyStatus : ValueType {
    public UInt32 RepeatCount;
    public UInt32 ScanCode;
    public int IsExtendedKey;
    public int IsMenuKeyDown;
    public int WasKeyDown;
    public int IsKeyReleased;
    internal CoreWebView2PhysicalKeyStatus(COREWEBVIEW2_PHYSICAL_KEY_STATUS rawStruct);
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2PointerEventKind : Enum {
    public int value__;
    public static CoreWebView2PointerEventKind Activate;
    public static CoreWebView2PointerEventKind Down;
    public static CoreWebView2PointerEventKind Enter;
    public static CoreWebView2PointerEventKind Leave;
    public static CoreWebView2PointerEventKind Up;
    public static CoreWebView2PointerEventKind Update;
}
public class Microsoft.Web.WebView2.Core.CoreWebView2PointerInfo : object {
    internal ICoreWebView2PointerInfo _nativeICoreWebView2PointerInfoValue;
    internal object _rawNative;
    internal ICoreWebView2PointerInfo _nativeICoreWebView2PointerInfo { get; internal set; }
    public UInt32 PointerKind { get; public set; }
    public UInt32 PointerId { get; public set; }
    public UInt32 FrameId { get; public set; }
    public UInt32 PointerFlags { get; public set; }
    public Rectangle PointerDeviceRect { get; public set; }
    public Rectangle DisplayRect { get; public set; }
    public Point PixelLocation { get; public set; }
    public Point HimetricLocation { get; public set; }
    public Point PixelLocationRaw { get; public set; }
    public Point HimetricLocationRaw { get; public set; }
    public UInt32 Time { get; public set; }
    public UInt32 HistoryCount { get; public set; }
    public int InputData { get; public set; }
    public UInt32 KeyStates { get; public set; }
    public ulong PerformanceCount { get; public set; }
    public int ButtonChangeKind { get; public set; }
    public UInt32 PenFlags { get; public set; }
    public UInt32 PenMask { get; public set; }
    public UInt32 PenPressure { get; public set; }
    public UInt32 PenRotation { get; public set; }
    public int PenTiltX { get; public set; }
    public int PenTiltY { get; public set; }
    public UInt32 TouchFlags { get; public set; }
    public UInt32 TouchMask { get; public set; }
    public Rectangle TouchContact { get; public set; }
    public Rectangle TouchContactRaw { get; public set; }
    public UInt32 TouchOrientation { get; public set; }
    public UInt32 TouchPressure { get; public set; }
    internal CoreWebView2PointerInfo(object rawCoreWebView2PointerInfo);
    internal ICoreWebView2PointerInfo get__nativeICoreWebView2PointerInfo();
    internal void set__nativeICoreWebView2PointerInfo(ICoreWebView2PointerInfo value);
    public UInt32 get_PointerKind();
    public void set_PointerKind(UInt32 value);
    public UInt32 get_PointerId();
    public void set_PointerId(UInt32 value);
    public UInt32 get_FrameId();
    public void set_FrameId(UInt32 value);
    public UInt32 get_PointerFlags();
    public void set_PointerFlags(UInt32 value);
    public Rectangle get_PointerDeviceRect();
    public void set_PointerDeviceRect(Rectangle value);
    public Rectangle get_DisplayRect();
    public void set_DisplayRect(Rectangle value);
    public Point get_PixelLocation();
    public void set_PixelLocation(Point value);
    public Point get_HimetricLocation();
    public void set_HimetricLocation(Point value);
    public Point get_PixelLocationRaw();
    public void set_PixelLocationRaw(Point value);
    public Point get_HimetricLocationRaw();
    public void set_HimetricLocationRaw(Point value);
    public UInt32 get_Time();
    public void set_Time(UInt32 value);
    public UInt32 get_HistoryCount();
    public void set_HistoryCount(UInt32 value);
    public int get_InputData();
    public void set_InputData(int value);
    public UInt32 get_KeyStates();
    public void set_KeyStates(UInt32 value);
    public ulong get_PerformanceCount();
    public void set_PerformanceCount(ulong value);
    public int get_ButtonChangeKind();
    public void set_ButtonChangeKind(int value);
    public UInt32 get_PenFlags();
    public void set_PenFlags(UInt32 value);
    public UInt32 get_PenMask();
    public void set_PenMask(UInt32 value);
    public UInt32 get_PenPressure();
    public void set_PenPressure(UInt32 value);
    public UInt32 get_PenRotation();
    public void set_PenRotation(UInt32 value);
    public int get_PenTiltX();
    public void set_PenTiltX(int value);
    public int get_PenTiltY();
    public void set_PenTiltY(int value);
    public UInt32 get_TouchFlags();
    public void set_TouchFlags(UInt32 value);
    public UInt32 get_TouchMask();
    public void set_TouchMask(UInt32 value);
    public Rectangle get_TouchContact();
    public void set_TouchContact(Rectangle value);
    public Rectangle get_TouchContactRaw();
    public void set_TouchContactRaw(Rectangle value);
    public UInt32 get_TouchOrientation();
    public void set_TouchOrientation(UInt32 value);
    public UInt32 get_TouchPressure();
    public void set_TouchPressure(UInt32 value);
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2PreferredColorScheme : Enum {
    public int value__;
    public static CoreWebView2PreferredColorScheme Auto;
    public static CoreWebView2PreferredColorScheme Light;
    public static CoreWebView2PreferredColorScheme Dark;
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2PrintOrientation : Enum {
    public int value__;
    public static CoreWebView2PrintOrientation Portrait;
    public static CoreWebView2PrintOrientation Landscape;
}
public class Microsoft.Web.WebView2.Core.CoreWebView2PrintSettings : object {
    internal ICoreWebView2PrintSettings _nativeICoreWebView2PrintSettingsValue;
    internal object _rawNative;
    internal ICoreWebView2PrintSettings _nativeICoreWebView2PrintSettings { get; internal set; }
    public CoreWebView2PrintOrientation Orientation { get; public set; }
    public double ScaleFactor { get; public set; }
    public double PageWidth { get; public set; }
    public double PageHeight { get; public set; }
    public double MarginTop { get; public set; }
    public double MarginBottom { get; public set; }
    public double MarginLeft { get; public set; }
    public double MarginRight { get; public set; }
    public bool ShouldPrintBackgrounds { get; public set; }
    public bool ShouldPrintSelectionOnly { get; public set; }
    public bool ShouldPrintHeaderAndFooter { get; public set; }
    public string HeaderTitle { get; public set; }
    public string FooterUri { get; public set; }
    internal CoreWebView2PrintSettings(object rawCoreWebView2PrintSettings);
    internal ICoreWebView2PrintSettings get__nativeICoreWebView2PrintSettings();
    internal void set__nativeICoreWebView2PrintSettings(ICoreWebView2PrintSettings value);
    public CoreWebView2PrintOrientation get_Orientation();
    public void set_Orientation(CoreWebView2PrintOrientation value);
    public double get_ScaleFactor();
    public void set_ScaleFactor(double value);
    public double get_PageWidth();
    public void set_PageWidth(double value);
    public double get_PageHeight();
    public void set_PageHeight(double value);
    public double get_MarginTop();
    public void set_MarginTop(double value);
    public double get_MarginBottom();
    public void set_MarginBottom(double value);
    public double get_MarginLeft();
    public void set_MarginLeft(double value);
    public double get_MarginRight();
    public void set_MarginRight(double value);
    public bool get_ShouldPrintBackgrounds();
    public void set_ShouldPrintBackgrounds(bool value);
    public bool get_ShouldPrintSelectionOnly();
    public void set_ShouldPrintSelectionOnly(bool value);
    public bool get_ShouldPrintHeaderAndFooter();
    public void set_ShouldPrintHeaderAndFooter(bool value);
    public string get_HeaderTitle();
    public void set_HeaderTitle(string value);
    public string get_FooterUri();
    public void set_FooterUri(string value);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2PrintToPdfCompletedHandler : object {
    [CompilerGeneratedAttribute]
private bool <isSuccessful>k__BackingField;
    [CompilerGeneratedAttribute]
private int <errCode>k__BackingField;
    private Action continuation;
    [CompilerGeneratedAttribute]
private bool <IsCompleted>k__BackingField;
    public bool isSuccessful { get; private set; }
    public int errCode { get; private set; }
    public bool IsCompleted { get; private set; }
    [CompilerGeneratedAttribute]
public bool get_isSuccessful();
    [CompilerGeneratedAttribute]
private void set_isSuccessful(bool value);
    [CompilerGeneratedAttribute]
public int get_errCode();
    [CompilerGeneratedAttribute]
private void set_errCode(int value);
    public sealed virtual void Invoke(int errCode, int isSuccessful);
    public CoreWebView2PrintToPdfCompletedHandler GetAwaiter();
    [CompilerGeneratedAttribute]
public bool get_IsCompleted();
    [CompilerGeneratedAttribute]
private void set_IsCompleted(bool value);
    public sealed virtual void OnCompleted(Action continuation);
    public bool GetResult();
}
public class Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedEventArgs : EventArgs {
    internal ICoreWebView2ProcessFailedEventArgs _nativeICoreWebView2ProcessFailedEventArgsValue;
    internal ICoreWebView2ProcessFailedEventArgs2 _nativeICoreWebView2ProcessFailedEventArgs2Value;
    internal object _rawNative;
    internal ICoreWebView2ProcessFailedEventArgs _nativeICoreWebView2ProcessFailedEventArgs { get; internal set; }
    internal ICoreWebView2ProcessFailedEventArgs2 _nativeICoreWebView2ProcessFailedEventArgs2 { get; internal set; }
    public CoreWebView2ProcessFailedKind ProcessFailedKind { get; }
    public CoreWebView2ProcessFailedReason Reason { get; }
    public int ExitCode { get; }
    public string ProcessDescription { get; }
    public IReadOnlyList`1<CoreWebView2FrameInfo> FrameInfosForFailedProcess { get; }
    internal CoreWebView2ProcessFailedEventArgs(object rawCoreWebView2ProcessFailedEventArgs);
    internal ICoreWebView2ProcessFailedEventArgs get__nativeICoreWebView2ProcessFailedEventArgs();
    internal void set__nativeICoreWebView2ProcessFailedEventArgs(ICoreWebView2ProcessFailedEventArgs value);
    internal ICoreWebView2ProcessFailedEventArgs2 get__nativeICoreWebView2ProcessFailedEventArgs2();
    internal void set__nativeICoreWebView2ProcessFailedEventArgs2(ICoreWebView2ProcessFailedEventArgs2 value);
    public CoreWebView2ProcessFailedKind get_ProcessFailedKind();
    public CoreWebView2ProcessFailedReason get_Reason();
    public int get_ExitCode();
    public string get_ProcessDescription();
    public IReadOnlyList`1<CoreWebView2FrameInfo> get_FrameInfosForFailedProcess();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2ProcessFailedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2 source, ICoreWebView2ProcessFailedEventArgs args);
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedKind : Enum {
    public int value__;
    public static CoreWebView2ProcessFailedKind BrowserProcessExited;
    public static CoreWebView2ProcessFailedKind RenderProcessExited;
    public static CoreWebView2ProcessFailedKind RenderProcessUnresponsive;
    public static CoreWebView2ProcessFailedKind FrameRenderProcessExited;
    public static CoreWebView2ProcessFailedKind UtilityProcessExited;
    public static CoreWebView2ProcessFailedKind SandboxHelperProcessExited;
    public static CoreWebView2ProcessFailedKind GpuProcessExited;
    public static CoreWebView2ProcessFailedKind PpapiPluginProcessExited;
    public static CoreWebView2ProcessFailedKind PpapiBrokerProcessExited;
    public static CoreWebView2ProcessFailedKind UnknownProcessExited;
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2ProcessFailedReason : Enum {
    public int value__;
    public static CoreWebView2ProcessFailedReason Unexpected;
    public static CoreWebView2ProcessFailedReason Unresponsive;
    public static CoreWebView2ProcessFailedReason Terminated;
    public static CoreWebView2ProcessFailedReason Crashed;
    public static CoreWebView2ProcessFailedReason LaunchFailed;
    public static CoreWebView2ProcessFailedReason OutOfMemory;
}
public class Microsoft.Web.WebView2.Core.CoreWebView2ProcessInfo : object {
    internal ICoreWebView2ProcessInfo _nativeICoreWebView2ProcessInfoValue;
    internal object _rawNative;
    internal ICoreWebView2ProcessInfo _nativeICoreWebView2ProcessInfo { get; internal set; }
    public int ProcessId { get; }
    public CoreWebView2ProcessKind Kind { get; }
    internal CoreWebView2ProcessInfo(object rawCoreWebView2ProcessInfo);
    internal ICoreWebView2ProcessInfo get__nativeICoreWebView2ProcessInfo();
    internal void set__nativeICoreWebView2ProcessInfo(ICoreWebView2ProcessInfo value);
    public int get_ProcessId();
    public CoreWebView2ProcessKind get_Kind();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2ProcessInfosChangedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2ProcessInfosChangedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2Environment source, object args);
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2ProcessKind : Enum {
    public int value__;
    public static CoreWebView2ProcessKind Browser;
    public static CoreWebView2ProcessKind Renderer;
    public static CoreWebView2ProcessKind Utility;
    public static CoreWebView2ProcessKind SandboxHelper;
    public static CoreWebView2ProcessKind Gpu;
    public static CoreWebView2ProcessKind PpapiPlugin;
    public static CoreWebView2ProcessKind PpapiBroker;
}
public class Microsoft.Web.WebView2.Core.CoreWebView2Profile : object {
    internal ICoreWebView2Profile _nativeICoreWebView2ProfileValue;
    internal ICoreWebView2Profile2 _nativeICoreWebView2Profile2Value;
    internal object _rawNative;
    internal ICoreWebView2Profile _nativeICoreWebView2Profile { get; internal set; }
    internal ICoreWebView2Profile2 _nativeICoreWebView2Profile2 { get; internal set; }
    public string ProfileName { get; }
    public bool IsInPrivateModeEnabled { get; }
    public string ProfilePath { get; }
    public string DefaultDownloadFolderPath { get; public set; }
    public CoreWebView2PreferredColorScheme PreferredColorScheme { get; public set; }
    internal CoreWebView2Profile(object rawCoreWebView2Profile);
    [AsyncStateMachineAttribute("Microsoft.Web.WebView2.Core.CoreWebView2Profile/<ClearBrowsingDataAsync>d__0")]
public Task ClearBrowsingDataAsync(CoreWebView2BrowsingDataKinds dataKinds, DateTime startTime, DateTime endTime);
    [AsyncStateMachineAttribute("Microsoft.Web.WebView2.Core.CoreWebView2Profile/<ClearBrowsingDataAsync>d__1")]
public Task ClearBrowsingDataAsync();
    internal ICoreWebView2Profile get__nativeICoreWebView2Profile();
    internal void set__nativeICoreWebView2Profile(ICoreWebView2Profile value);
    internal ICoreWebView2Profile2 get__nativeICoreWebView2Profile2();
    internal void set__nativeICoreWebView2Profile2(ICoreWebView2Profile2 value);
    public string get_ProfileName();
    public bool get_IsInPrivateModeEnabled();
    public string get_ProfilePath();
    public string get_DefaultDownloadFolderPath();
    public void set_DefaultDownloadFolderPath(string value);
    public CoreWebView2PreferredColorScheme get_PreferredColorScheme();
    public void set_PreferredColorScheme(CoreWebView2PreferredColorScheme value);
    [AsyncStateMachineAttribute("Microsoft.Web.WebView2.Core.CoreWebView2Profile/<ClearBrowsingDataAsync>d__25")]
public Task ClearBrowsingDataAsync(CoreWebView2BrowsingDataKinds dataKinds);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2RasterizationScaleChangedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2RasterizationScaleChangedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2Controller source, object args);
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2ScriptDialogKind : Enum {
    public int value__;
    public static CoreWebView2ScriptDialogKind Alert;
    public static CoreWebView2ScriptDialogKind Confirm;
    public static CoreWebView2ScriptDialogKind Prompt;
    public static CoreWebView2ScriptDialogKind Beforeunload;
}
public class Microsoft.Web.WebView2.Core.CoreWebView2ScriptDialogOpeningEventArgs : EventArgs {
    internal ICoreWebView2ScriptDialogOpeningEventArgs _nativeICoreWebView2ScriptDialogOpeningEventArgsValue;
    internal object _rawNative;
    internal ICoreWebView2ScriptDialogOpeningEventArgs _nativeICoreWebView2ScriptDialogOpeningEventArgs { get; internal set; }
    public string Uri { get; }
    public CoreWebView2ScriptDialogKind Kind { get; }
    public string Message { get; }
    public string DefaultText { get; }
    public string ResultText { get; public set; }
    internal CoreWebView2ScriptDialogOpeningEventArgs(object rawCoreWebView2ScriptDialogOpeningEventArgs);
    internal ICoreWebView2ScriptDialogOpeningEventArgs get__nativeICoreWebView2ScriptDialogOpeningEventArgs();
    internal void set__nativeICoreWebView2ScriptDialogOpeningEventArgs(ICoreWebView2ScriptDialogOpeningEventArgs value);
    public string get_Uri();
    public CoreWebView2ScriptDialogKind get_Kind();
    public string get_Message();
    public string get_DefaultText();
    public string get_ResultText();
    public void set_ResultText(string value);
    public void Accept();
    public CoreWebView2Deferral GetDeferral();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2ScriptDialogOpeningEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2ScriptDialogOpeningEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2 source, ICoreWebView2ScriptDialogOpeningEventArgs args);
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2ServerCertificateErrorAction : Enum {
    public int value__;
    public static CoreWebView2ServerCertificateErrorAction AlwaysAllow;
    public static CoreWebView2ServerCertificateErrorAction Cancel;
    public static CoreWebView2ServerCertificateErrorAction Default;
}
public class Microsoft.Web.WebView2.Core.CoreWebView2ServerCertificateErrorDetectedEventArgs : EventArgs {
    internal ICoreWebView2ServerCertificateErrorDetectedEventArgs _nativeICoreWebView2ServerCertificateErrorDetectedEventArgsValue;
    internal object _rawNative;
    internal ICoreWebView2ServerCertificateErrorDetectedEventArgs _nativeICoreWebView2ServerCertificateErrorDetectedEventArgs { get; internal set; }
    public CoreWebView2WebErrorStatus ErrorStatus { get; }
    public string RequestUri { get; }
    public CoreWebView2Certificate ServerCertificate { get; }
    public CoreWebView2ServerCertificateErrorAction Action { get; public set; }
    internal CoreWebView2ServerCertificateErrorDetectedEventArgs(object rawCoreWebView2ServerCertificateErrorDetectedEventArgs);
    internal ICoreWebView2ServerCertificateErrorDetectedEventArgs get__nativeICoreWebView2ServerCertificateErrorDetectedEventArgs();
    internal void set__nativeICoreWebView2ServerCertificateErrorDetectedEventArgs(ICoreWebView2ServerCertificateErrorDetectedEventArgs value);
    public CoreWebView2WebErrorStatus get_ErrorStatus();
    public string get_RequestUri();
    public CoreWebView2Certificate get_ServerCertificate();
    public CoreWebView2ServerCertificateErrorAction get_Action();
    public void set_Action(CoreWebView2ServerCertificateErrorAction value);
    public CoreWebView2Deferral GetDeferral();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2ServerCertificateErrorDetectedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2ServerCertificateErrorDetectedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2 source, ICoreWebView2ServerCertificateErrorDetectedEventArgs args);
}
public class Microsoft.Web.WebView2.Core.CoreWebView2Settings : object {
    internal ICoreWebView2Settings _nativeICoreWebView2SettingsValue;
    internal ICoreWebView2Settings2 _nativeICoreWebView2Settings2Value;
    internal ICoreWebView2Settings3 _nativeICoreWebView2Settings3Value;
    internal ICoreWebView2Settings4 _nativeICoreWebView2Settings4Value;
    internal ICoreWebView2Settings5 _nativeICoreWebView2Settings5Value;
    internal ICoreWebView2Settings6 _nativeICoreWebView2Settings6Value;
    internal ICoreWebView2Settings7 _nativeICoreWebView2Settings7Value;
    internal object _rawNative;
    internal ICoreWebView2Settings _nativeICoreWebView2Settings { get; internal set; }
    internal ICoreWebView2Settings2 _nativeICoreWebView2Settings2 { get; internal set; }
    internal ICoreWebView2Settings3 _nativeICoreWebView2Settings3 { get; internal set; }
    internal ICoreWebView2Settings4 _nativeICoreWebView2Settings4 { get; internal set; }
    internal ICoreWebView2Settings5 _nativeICoreWebView2Settings5 { get; internal set; }
    internal ICoreWebView2Settings6 _nativeICoreWebView2Settings6 { get; internal set; }
    internal ICoreWebView2Settings7 _nativeICoreWebView2Settings7 { get; internal set; }
    public bool IsScriptEnabled { get; public set; }
    public bool IsWebMessageEnabled { get; public set; }
    public bool AreDefaultScriptDialogsEnabled { get; public set; }
    public bool IsStatusBarEnabled { get; public set; }
    public bool AreDevToolsEnabled { get; public set; }
    public bool AreDefaultContextMenusEnabled { get; public set; }
    public bool AreHostObjectsAllowed { get; public set; }
    public bool IsZoomControlEnabled { get; public set; }
    public bool IsBuiltInErrorPageEnabled { get; public set; }
    public string UserAgent { get; public set; }
    public bool AreBrowserAcceleratorKeysEnabled { get; public set; }
    public bool IsPasswordAutosaveEnabled { get; public set; }
    public bool IsGeneralAutofillEnabled { get; public set; }
    public bool IsPinchZoomEnabled { get; public set; }
    public bool IsSwipeNavigationEnabled { get; public set; }
    public CoreWebView2PdfToolbarItems HiddenPdfToolbarItems { get; public set; }
    internal CoreWebView2Settings(object rawCoreWebView2Settings);
    internal ICoreWebView2Settings get__nativeICoreWebView2Settings();
    internal void set__nativeICoreWebView2Settings(ICoreWebView2Settings value);
    internal ICoreWebView2Settings2 get__nativeICoreWebView2Settings2();
    internal void set__nativeICoreWebView2Settings2(ICoreWebView2Settings2 value);
    internal ICoreWebView2Settings3 get__nativeICoreWebView2Settings3();
    internal void set__nativeICoreWebView2Settings3(ICoreWebView2Settings3 value);
    internal ICoreWebView2Settings4 get__nativeICoreWebView2Settings4();
    internal void set__nativeICoreWebView2Settings4(ICoreWebView2Settings4 value);
    internal ICoreWebView2Settings5 get__nativeICoreWebView2Settings5();
    internal void set__nativeICoreWebView2Settings5(ICoreWebView2Settings5 value);
    internal ICoreWebView2Settings6 get__nativeICoreWebView2Settings6();
    internal void set__nativeICoreWebView2Settings6(ICoreWebView2Settings6 value);
    internal ICoreWebView2Settings7 get__nativeICoreWebView2Settings7();
    internal void set__nativeICoreWebView2Settings7(ICoreWebView2Settings7 value);
    public bool get_IsScriptEnabled();
    public void set_IsScriptEnabled(bool value);
    public bool get_IsWebMessageEnabled();
    public void set_IsWebMessageEnabled(bool value);
    public bool get_AreDefaultScriptDialogsEnabled();
    public void set_AreDefaultScriptDialogsEnabled(bool value);
    public bool get_IsStatusBarEnabled();
    public void set_IsStatusBarEnabled(bool value);
    public bool get_AreDevToolsEnabled();
    public void set_AreDevToolsEnabled(bool value);
    public bool get_AreDefaultContextMenusEnabled();
    public void set_AreDefaultContextMenusEnabled(bool value);
    public bool get_AreHostObjectsAllowed();
    public void set_AreHostObjectsAllowed(bool value);
    public bool get_IsZoomControlEnabled();
    public void set_IsZoomControlEnabled(bool value);
    public bool get_IsBuiltInErrorPageEnabled();
    public void set_IsBuiltInErrorPageEnabled(bool value);
    public string get_UserAgent();
    public void set_UserAgent(string value);
    public bool get_AreBrowserAcceleratorKeysEnabled();
    public void set_AreBrowserAcceleratorKeysEnabled(bool value);
    public bool get_IsPasswordAutosaveEnabled();
    public void set_IsPasswordAutosaveEnabled(bool value);
    public bool get_IsGeneralAutofillEnabled();
    public void set_IsGeneralAutofillEnabled(bool value);
    public bool get_IsPinchZoomEnabled();
    public void set_IsPinchZoomEnabled(bool value);
    public bool get_IsSwipeNavigationEnabled();
    public void set_IsSwipeNavigationEnabled(bool value);
    public CoreWebView2PdfToolbarItems get_HiddenPdfToolbarItems();
    public void set_HiddenPdfToolbarItems(CoreWebView2PdfToolbarItems value);
}
public class Microsoft.Web.WebView2.Core.CoreWebView2SourceChangedEventArgs : EventArgs {
    internal ICoreWebView2SourceChangedEventArgs _nativeICoreWebView2SourceChangedEventArgsValue;
    internal object _rawNative;
    internal ICoreWebView2SourceChangedEventArgs _nativeICoreWebView2SourceChangedEventArgs { get; internal set; }
    public bool IsNewDocument { get; }
    internal CoreWebView2SourceChangedEventArgs(object rawCoreWebView2SourceChangedEventArgs);
    internal ICoreWebView2SourceChangedEventArgs get__nativeICoreWebView2SourceChangedEventArgs();
    internal void set__nativeICoreWebView2SourceChangedEventArgs(ICoreWebView2SourceChangedEventArgs value);
    public bool get_IsNewDocument();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2SourceChangedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2SourceChangedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2 source, ICoreWebView2SourceChangedEventArgs args);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2StateChangedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2StateChangedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2DownloadOperation source, object args);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2StatusBarTextChangedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2StatusBarTextChangedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2 source, object args);
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2TrySuspendCompletedHandler : object {
    [CompilerGeneratedAttribute]
private bool <isSuccessful>k__BackingField;
    [CompilerGeneratedAttribute]
private int <errCode>k__BackingField;
    private Action continuation;
    [CompilerGeneratedAttribute]
private bool <IsCompleted>k__BackingField;
    public bool isSuccessful { get; private set; }
    public int errCode { get; private set; }
    public bool IsCompleted { get; private set; }
    [CompilerGeneratedAttribute]
public bool get_isSuccessful();
    [CompilerGeneratedAttribute]
private void set_isSuccessful(bool value);
    [CompilerGeneratedAttribute]
public int get_errCode();
    [CompilerGeneratedAttribute]
private void set_errCode(int value);
    public sealed virtual void Invoke(int errCode, int isSuccessful);
    public CoreWebView2TrySuspendCompletedHandler GetAwaiter();
    [CompilerGeneratedAttribute]
public bool get_IsCompleted();
    [CompilerGeneratedAttribute]
private void set_IsCompleted(bool value);
    public sealed virtual void OnCompleted(Action continuation);
    public bool GetResult();
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2WebErrorStatus : Enum {
    public int value__;
    public static CoreWebView2WebErrorStatus Unknown;
    public static CoreWebView2WebErrorStatus CertificateCommonNameIsIncorrect;
    public static CoreWebView2WebErrorStatus CertificateExpired;
    public static CoreWebView2WebErrorStatus ClientCertificateContainsErrors;
    public static CoreWebView2WebErrorStatus CertificateRevoked;
    public static CoreWebView2WebErrorStatus CertificateIsInvalid;
    public static CoreWebView2WebErrorStatus ServerUnreachable;
    public static CoreWebView2WebErrorStatus Timeout;
    public static CoreWebView2WebErrorStatus ErrorHttpInvalidServerResponse;
    public static CoreWebView2WebErrorStatus ConnectionAborted;
    public static CoreWebView2WebErrorStatus ConnectionReset;
    public static CoreWebView2WebErrorStatus Disconnected;
    public static CoreWebView2WebErrorStatus CannotConnect;
    public static CoreWebView2WebErrorStatus HostNameNotResolved;
    public static CoreWebView2WebErrorStatus OperationCanceled;
    public static CoreWebView2WebErrorStatus RedirectFailed;
    public static CoreWebView2WebErrorStatus UnexpectedError;
    public static CoreWebView2WebErrorStatus ValidAuthenticationCredentialsRequired;
    public static CoreWebView2WebErrorStatus ValidProxyAuthenticationRequired;
}
public class Microsoft.Web.WebView2.Core.CoreWebView2WebMessageReceivedEventArgs : EventArgs {
    internal ICoreWebView2WebMessageReceivedEventArgs _nativeICoreWebView2WebMessageReceivedEventArgsValue;
    internal object _rawNative;
    internal ICoreWebView2WebMessageReceivedEventArgs _nativeICoreWebView2WebMessageReceivedEventArgs { get; internal set; }
    public string Source { get; }
    public string WebMessageAsJson { get; }
    internal CoreWebView2WebMessageReceivedEventArgs(object rawCoreWebView2WebMessageReceivedEventArgs);
    internal ICoreWebView2WebMessageReceivedEventArgs get__nativeICoreWebView2WebMessageReceivedEventArgs();
    internal void set__nativeICoreWebView2WebMessageReceivedEventArgs(ICoreWebView2WebMessageReceivedEventArgs value);
    public string get_Source();
    public string get_WebMessageAsJson();
    public string TryGetWebMessageAsString();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2WebMessageReceivedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2WebMessageReceivedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2 source, ICoreWebView2WebMessageReceivedEventArgs args);
}
public enum Microsoft.Web.WebView2.Core.CoreWebView2WebResourceContext : Enum {
    public int value__;
    public static CoreWebView2WebResourceContext All;
    public static CoreWebView2WebResourceContext Document;
    public static CoreWebView2WebResourceContext Stylesheet;
    public static CoreWebView2WebResourceContext Image;
    public static CoreWebView2WebResourceContext Media;
    public static CoreWebView2WebResourceContext Font;
    public static CoreWebView2WebResourceContext Script;
    public static CoreWebView2WebResourceContext XmlHttpRequest;
    public static CoreWebView2WebResourceContext Fetch;
    public static CoreWebView2WebResourceContext TextTrack;
    public static CoreWebView2WebResourceContext EventSource;
    public static CoreWebView2WebResourceContext Websocket;
    public static CoreWebView2WebResourceContext Manifest;
    public static CoreWebView2WebResourceContext SignedExchange;
    public static CoreWebView2WebResourceContext Ping;
    public static CoreWebView2WebResourceContext CspViolationReport;
    public static CoreWebView2WebResourceContext Other;
}
public class Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequest : object {
    internal ICoreWebView2WebResourceRequest _nativeICoreWebView2WebResourceRequestValue;
    internal object _rawNative;
    internal ICoreWebView2WebResourceRequest _nativeICoreWebView2WebResourceRequest { get; internal set; }
    public string Uri { get; public set; }
    public string Method { get; public set; }
    public Stream Content { get; public set; }
    public CoreWebView2HttpRequestHeaders Headers { get; }
    internal CoreWebView2WebResourceRequest(object rawCoreWebView2WebResourceRequest);
    internal ICoreWebView2WebResourceRequest get__nativeICoreWebView2WebResourceRequest();
    internal void set__nativeICoreWebView2WebResourceRequest(ICoreWebView2WebResourceRequest value);
    public string get_Uri();
    public void set_Uri(string value);
    public string get_Method();
    public void set_Method(string value);
    public Stream get_Content();
    public void set_Content(Stream value);
    public CoreWebView2HttpRequestHeaders get_Headers();
}
public class Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequestedEventArgs : EventArgs {
    internal ICoreWebView2WebResourceRequestedEventArgs _nativeICoreWebView2WebResourceRequestedEventArgsValue;
    internal object _rawNative;
    internal ICoreWebView2WebResourceRequestedEventArgs _nativeICoreWebView2WebResourceRequestedEventArgs { get; internal set; }
    public CoreWebView2WebResourceRequest Request { get; }
    public CoreWebView2WebResourceResponse Response { get; public set; }
    public CoreWebView2WebResourceContext ResourceContext { get; }
    internal CoreWebView2WebResourceRequestedEventArgs(object rawCoreWebView2WebResourceRequestedEventArgs);
    internal ICoreWebView2WebResourceRequestedEventArgs get__nativeICoreWebView2WebResourceRequestedEventArgs();
    internal void set__nativeICoreWebView2WebResourceRequestedEventArgs(ICoreWebView2WebResourceRequestedEventArgs value);
    public CoreWebView2WebResourceRequest get_Request();
    public CoreWebView2WebResourceResponse get_Response();
    public void set_Response(CoreWebView2WebResourceResponse value);
    public CoreWebView2WebResourceContext get_ResourceContext();
    public CoreWebView2Deferral GetDeferral();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2WebResourceRequestedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2WebResourceRequestedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2 source, ICoreWebView2WebResourceRequestedEventArgs args);
}
public class Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponse : object {
    internal ICoreWebView2WebResourceResponse _nativeICoreWebView2WebResourceResponseValue;
    internal object _rawNative;
    internal ICoreWebView2WebResourceResponse _nativeICoreWebView2WebResourceResponse { get; internal set; }
    public Stream Content { get; public set; }
    public CoreWebView2HttpResponseHeaders Headers { get; }
    public int StatusCode { get; public set; }
    public string ReasonPhrase { get; public set; }
    internal CoreWebView2WebResourceResponse(object rawCoreWebView2WebResourceResponse);
    internal ICoreWebView2WebResourceResponse get__nativeICoreWebView2WebResourceResponse();
    internal void set__nativeICoreWebView2WebResourceResponse(ICoreWebView2WebResourceResponse value);
    public Stream get_Content();
    public void set_Content(Stream value);
    public CoreWebView2HttpResponseHeaders get_Headers();
    public int get_StatusCode();
    public void set_StatusCode(int value);
    public string get_ReasonPhrase();
    public void set_ReasonPhrase(string value);
}
public class Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponseReceivedEventArgs : EventArgs {
    internal ICoreWebView2WebResourceResponseReceivedEventArgs _nativeICoreWebView2WebResourceResponseReceivedEventArgsValue;
    internal object _rawNative;
    internal ICoreWebView2WebResourceResponseReceivedEventArgs _nativeICoreWebView2WebResourceResponseReceivedEventArgs { get; internal set; }
    public CoreWebView2WebResourceRequest Request { get; }
    public CoreWebView2WebResourceResponseView Response { get; }
    internal CoreWebView2WebResourceResponseReceivedEventArgs(object rawCoreWebView2WebResourceResponseReceivedEventArgs);
    internal ICoreWebView2WebResourceResponseReceivedEventArgs get__nativeICoreWebView2WebResourceResponseReceivedEventArgs();
    internal void set__nativeICoreWebView2WebResourceResponseReceivedEventArgs(ICoreWebView2WebResourceResponseReceivedEventArgs value);
    public CoreWebView2WebResourceRequest get_Request();
    public CoreWebView2WebResourceResponseView get_Response();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponseReceivedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2WebResourceResponseReceivedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2 source, ICoreWebView2WebResourceResponseReceivedEventArgs args);
}
public class Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponseView : object {
    internal ICoreWebView2WebResourceResponseView _nativeICoreWebView2WebResourceResponseViewValue;
    internal object _rawNative;
    internal ICoreWebView2WebResourceResponseView _nativeICoreWebView2WebResourceResponseView { get; internal set; }
    public CoreWebView2HttpResponseHeaders Headers { get; }
    public int StatusCode { get; }
    public string ReasonPhrase { get; }
    internal CoreWebView2WebResourceResponseView(object rawCoreWebView2WebResourceResponseView);
    internal ICoreWebView2WebResourceResponseView get__nativeICoreWebView2WebResourceResponseView();
    internal void set__nativeICoreWebView2WebResourceResponseView(ICoreWebView2WebResourceResponseView value);
    public CoreWebView2HttpResponseHeaders get_Headers();
    public int get_StatusCode();
    public string get_ReasonPhrase();
    [AsyncStateMachineAttribute("Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponseView/<GetContentAsync>d__13")]
public Task`1<Stream> GetContentAsync();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2WebResourceResponseViewGetContentCompletedHandler : object {
    [CompilerGeneratedAttribute]
private Stream <Content>k__BackingField;
    [CompilerGeneratedAttribute]
private int <errCode>k__BackingField;
    private Action continuation;
    [CompilerGeneratedAttribute]
private bool <IsCompleted>k__BackingField;
    public Stream Content { get; private set; }
    public int errCode { get; private set; }
    public bool IsCompleted { get; private set; }
    [CompilerGeneratedAttribute]
public Stream get_Content();
    [CompilerGeneratedAttribute]
private void set_Content(Stream value);
    [CompilerGeneratedAttribute]
public int get_errCode();
    [CompilerGeneratedAttribute]
private void set_errCode(int value);
    public sealed virtual void Invoke(int errCode, IStream Content);
    public CoreWebView2WebResourceResponseViewGetContentCompletedHandler GetAwaiter();
    [CompilerGeneratedAttribute]
public bool get_IsCompleted();
    [CompilerGeneratedAttribute]
private void set_IsCompleted(bool value);
    public sealed virtual void OnCompleted(Action continuation);
    public Stream GetResult();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2WindowCloseRequestedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2WindowCloseRequestedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2 source, object args);
}
public class Microsoft.Web.WebView2.Core.CoreWebView2WindowFeatures : object {
    internal ICoreWebView2WindowFeatures _nativeICoreWebView2WindowFeaturesValue;
    internal object _rawNative;
    internal ICoreWebView2WindowFeatures _nativeICoreWebView2WindowFeatures { get; internal set; }
    public bool HasPosition { get; }
    public bool HasSize { get; }
    public UInt32 Left { get; }
    public UInt32 Top { get; }
    public UInt32 Height { get; }
    public UInt32 Width { get; }
    public bool ShouldDisplayMenuBar { get; }
    public bool ShouldDisplayStatus { get; }
    public bool ShouldDisplayToolbar { get; }
    public bool ShouldDisplayScrollBars { get; }
    internal CoreWebView2WindowFeatures(object rawCoreWebView2WindowFeatures);
    internal ICoreWebView2WindowFeatures get__nativeICoreWebView2WindowFeatures();
    internal void set__nativeICoreWebView2WindowFeatures(ICoreWebView2WindowFeatures value);
    public bool get_HasPosition();
    public bool get_HasSize();
    public UInt32 get_Left();
    public UInt32 get_Top();
    public UInt32 get_Height();
    public UInt32 get_Width();
    public bool get_ShouldDisplayMenuBar();
    public bool get_ShouldDisplayStatus();
    public bool get_ShouldDisplayToolbar();
    public bool get_ShouldDisplayScrollBars();
}
internal class Microsoft.Web.WebView2.Core.CoreWebView2ZoomFactorChangedEventHandler : object {
    private CallbackType _callback;
    public CoreWebView2ZoomFactorChangedEventHandler(CallbackType callback);
    public sealed virtual void Invoke(ICoreWebView2Controller source, object args);
}
[ClassInterfaceAttribute("2")]
[ComVisibleAttribute("True")]
public class Microsoft.Web.WebView2.Core.HostObjectHelper : object {
    private static int DISP_E_MEMBERNOTFOUND;
    private static int DISP_E_TYPEMISMATCH;
    public bool IsMethod(object obj, string name);
}
internal class Microsoft.Web.WebView2.Core.ManagedIStream : object {
    private Stream _ioStream;
    private static int STGTY_STREAM;
    private static int STGM_READ;
    private static int STGM_WRITE;
    private static int STGM_READWRITE;
    private static int STREAM_SEEK_SET;
    private static int STREAM_SEEK_CUR;
    private static int STREAM_SEEK_END;
    private static int STATFLAG_DEFAULT;
    private static int STATFLAG_NONAME;
    private static int STATFLAG_NOOPEN;
    internal ManagedIStream(Stream ioStream);
    [SecurityCriticalAttribute]
private sealed virtual override void System.Runtime.InteropServices.ComTypes.IStream.Read(Byte[] buffer, int bufferSize, IntPtr bytesReadPtr);
    [SecurityCriticalAttribute]
private sealed virtual override void System.Runtime.InteropServices.ComTypes.IStream.Seek(long offset, int origin, IntPtr newPositionPtr);
    private sealed virtual override void System.Runtime.InteropServices.ComTypes.IStream.SetSize(long libNewSize);
    private sealed virtual override void System.Runtime.InteropServices.ComTypes.IStream.Stat(STATSTG& streamStats, int grfStatFlag);
    [SecurityCriticalAttribute]
private sealed virtual override void System.Runtime.InteropServices.ComTypes.IStream.Write(Byte[] buffer, int bufferSize, IntPtr bytesWrittenPtr);
    private sealed virtual override void System.Runtime.InteropServices.ComTypes.IStream.Clone(IStream& streamCopy);
    private sealed virtual override void System.Runtime.InteropServices.ComTypes.IStream.CopyTo(IStream targetStream, long bufferSize, IntPtr buffer, IntPtr bytesWrittenPtr);
    private sealed virtual override void System.Runtime.InteropServices.ComTypes.IStream.Commit(int flags);
    private sealed virtual override void System.Runtime.InteropServices.ComTypes.IStream.LockRegion(long offset, long byteCount, int lockType);
    private sealed virtual override void System.Runtime.InteropServices.ComTypes.IStream.Revert();
    private sealed virtual override void System.Runtime.InteropServices.ComTypes.IStream.UnlockRegion(long offset, long byteCount, int lockType);
}
internal static class Microsoft.Web.WebView2.Core.Raw.BrowserInfo : object {
    public static string PRODUCT_VERSION;
    private static BrowserInfo();
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_BOUNDS_MODE")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_BOUNDS_MODE : Enum {
    public int value__;
    public static COREWEBVIEW2_BOUNDS_MODE COREWEBVIEW2_BOUNDS_MODE_USE_RAW_PIXELS;
    public static COREWEBVIEW2_BOUNDS_MODE COREWEBVIEW2_BOUNDS_MODE_USE_RASTERIZATION_SCALE;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_BROWSER_PROCESS_EXIT_KIND")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_BROWSER_PROCESS_EXIT_KIND : Enum {
    public int value__;
    public static COREWEBVIEW2_BROWSER_PROCESS_EXIT_KIND COREWEBVIEW2_BROWSER_PROCESS_EXIT_KIND_NORMAL;
    public static COREWEBVIEW2_BROWSER_PROCESS_EXIT_KIND COREWEBVIEW2_BROWSER_PROCESS_EXIT_KIND_FAILED;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_BROWSING_DATA_KINDS")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_BROWSING_DATA_KINDS : Enum {
    public int value__;
    public static COREWEBVIEW2_BROWSING_DATA_KINDS COREWEBVIEW2_BROWSING_DATA_KINDS_FILE_SYSTEMS;
    public static COREWEBVIEW2_BROWSING_DATA_KINDS COREWEBVIEW2_BROWSING_DATA_KINDS_INDEXED_DB;
    public static COREWEBVIEW2_BROWSING_DATA_KINDS COREWEBVIEW2_BROWSING_DATA_KINDS_LOCAL_STORAGE;
    public static COREWEBVIEW2_BROWSING_DATA_KINDS COREWEBVIEW2_BROWSING_DATA_KINDS_WEB_SQL;
    public static COREWEBVIEW2_BROWSING_DATA_KINDS COREWEBVIEW2_BROWSING_DATA_KINDS_CACHE_STORAGE;
    public static COREWEBVIEW2_BROWSING_DATA_KINDS COREWEBVIEW2_BROWSING_DATA_KINDS_ALL_DOM_STORAGE;
    public static COREWEBVIEW2_BROWSING_DATA_KINDS COREWEBVIEW2_BROWSING_DATA_KINDS_COOKIES;
    public static COREWEBVIEW2_BROWSING_DATA_KINDS COREWEBVIEW2_BROWSING_DATA_KINDS_ALL_SITE;
    public static COREWEBVIEW2_BROWSING_DATA_KINDS COREWEBVIEW2_BROWSING_DATA_KINDS_DISK_CACHE;
    public static COREWEBVIEW2_BROWSING_DATA_KINDS COREWEBVIEW2_BROWSING_DATA_KINDS_DOWNLOAD_HISTORY;
    public static COREWEBVIEW2_BROWSING_DATA_KINDS COREWEBVIEW2_BROWSING_DATA_KINDS_GENERAL_AUTOFILL;
    public static COREWEBVIEW2_BROWSING_DATA_KINDS COREWEBVIEW2_BROWSING_DATA_KINDS_PASSWORD_AUTOSAVE;
    public static COREWEBVIEW2_BROWSING_DATA_KINDS COREWEBVIEW2_BROWSING_DATA_KINDS_BROWSING_HISTORY;
    public static COREWEBVIEW2_BROWSING_DATA_KINDS COREWEBVIEW2_BROWSING_DATA_KINDS_SETTINGS;
    public static COREWEBVIEW2_BROWSING_DATA_KINDS COREWEBVIEW2_BROWSING_DATA_KINDS_ALL_PROFILE;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_CAPTURE_PREVIEW_IMAGE_FORMAT")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_CAPTURE_PREVIEW_IMAGE_FORMAT : Enum {
    public int value__;
    public static COREWEBVIEW2_CAPTURE_PREVIEW_IMAGE_FORMAT COREWEBVIEW2_CAPTURE_PREVIEW_IMAGE_FORMAT_PNG;
    public static COREWEBVIEW2_CAPTURE_PREVIEW_IMAGE_FORMAT COREWEBVIEW2_CAPTURE_PREVIEW_IMAGE_FORMAT_JPEG;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_CLIENT_CERTIFICATE_KIND")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_CLIENT_CERTIFICATE_KIND : Enum {
    public int value__;
    public static COREWEBVIEW2_CLIENT_CERTIFICATE_KIND COREWEBVIEW2_CLIENT_CERTIFICATE_KIND_SMART_CARD;
    public static COREWEBVIEW2_CLIENT_CERTIFICATE_KIND COREWEBVIEW2_CLIENT_CERTIFICATE_KIND_PIN;
    public static COREWEBVIEW2_CLIENT_CERTIFICATE_KIND COREWEBVIEW2_CLIENT_CERTIFICATE_KIND_OTHER;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_COLOR")]
public class Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_COLOR : ValueType {
    public byte A;
    public byte R;
    public byte G;
    public byte B;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND : Enum {
    public int value__;
    public static COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND_COMMAND;
    public static COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND_CHECK_BOX;
    public static COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND_RADIO;
    public static COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND_SEPARATOR;
    public static COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND_SUBMENU;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND : Enum {
    public int value__;
    public static COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND_PAGE;
    public static COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND_IMAGE;
    public static COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND_SELECTED_TEXT;
    public static COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND_AUDIO;
    public static COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND_VIDEO;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_COOKIE_SAME_SITE_KIND")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_COOKIE_SAME_SITE_KIND : Enum {
    public int value__;
    public static COREWEBVIEW2_COOKIE_SAME_SITE_KIND COREWEBVIEW2_COOKIE_SAME_SITE_KIND_NONE;
    public static COREWEBVIEW2_COOKIE_SAME_SITE_KIND COREWEBVIEW2_COOKIE_SAME_SITE_KIND_LAX;
    public static COREWEBVIEW2_COOKIE_SAME_SITE_KIND COREWEBVIEW2_COOKIE_SAME_SITE_KIND_STRICT;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT : Enum {
    public int value__;
    public static COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT_TOP_LEFT;
    public static COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT_TOP_RIGHT;
    public static COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT_BOTTOM_LEFT;
    public static COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT_BOTTOM_RIGHT;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON : Enum {
    public int value__;
    public static COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_NONE;
    public static COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_FAILED;
    public static COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_ACCESS_DENIED;
    public static COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_NO_SPACE;
    public static COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_NAME_TOO_LONG;
    public static COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_TOO_LARGE;
    public static COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_MALICIOUS;
    public static COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_TRANSIENT_ERROR;
    public static COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_BLOCKED_BY_POLICY;
    public static COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_SECURITY_CHECK_FAILED;
    public static COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_TOO_SHORT;
    public static COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_FILE_HASH_MISMATCH;
    public static COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_NETWORK_FAILED;
    public static COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_NETWORK_TIMEOUT;
    public static COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_NETWORK_DISCONNECTED;
    public static COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_NETWORK_SERVER_DOWN;
    public static COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_NETWORK_INVALID_REQUEST;
    public static COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_SERVER_FAILED;
    public static COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_SERVER_NO_RANGE;
    public static COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_SERVER_BAD_CONTENT;
    public static COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_SERVER_UNAUTHORIZED;
    public static COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_SERVER_CERTIFICATE_PROBLEM;
    public static COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_SERVER_FORBIDDEN;
    public static COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_SERVER_UNEXPECTED_RESPONSE;
    public static COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_SERVER_CONTENT_LENGTH_MISMATCH;
    public static COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_SERVER_CROSS_ORIGIN_REDIRECT;
    public static COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_USER_CANCELED;
    public static COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_USER_SHUTDOWN;
    public static COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_USER_PAUSED;
    public static COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON_DOWNLOAD_PROCESS_CRASHED;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_DOWNLOAD_STATE")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_DOWNLOAD_STATE : Enum {
    public int value__;
    public static COREWEBVIEW2_DOWNLOAD_STATE COREWEBVIEW2_DOWNLOAD_STATE_IN_PROGRESS;
    public static COREWEBVIEW2_DOWNLOAD_STATE COREWEBVIEW2_DOWNLOAD_STATE_INTERRUPTED;
    public static COREWEBVIEW2_DOWNLOAD_STATE COREWEBVIEW2_DOWNLOAD_STATE_COMPLETED;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_HOST_RESOURCE_ACCESS_KIND")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_HOST_RESOURCE_ACCESS_KIND : Enum {
    public int value__;
    public static COREWEBVIEW2_HOST_RESOURCE_ACCESS_KIND COREWEBVIEW2_HOST_RESOURCE_ACCESS_KIND_DENY;
    public static COREWEBVIEW2_HOST_RESOURCE_ACCESS_KIND COREWEBVIEW2_HOST_RESOURCE_ACCESS_KIND_ALLOW;
    public static COREWEBVIEW2_HOST_RESOURCE_ACCESS_KIND COREWEBVIEW2_HOST_RESOURCE_ACCESS_KIND_DENY_CORS;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_KEY_EVENT_KIND")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_KEY_EVENT_KIND : Enum {
    public int value__;
    public static COREWEBVIEW2_KEY_EVENT_KIND COREWEBVIEW2_KEY_EVENT_KIND_KEY_DOWN;
    public static COREWEBVIEW2_KEY_EVENT_KIND COREWEBVIEW2_KEY_EVENT_KIND_KEY_UP;
    public static COREWEBVIEW2_KEY_EVENT_KIND COREWEBVIEW2_KEY_EVENT_KIND_SYSTEM_KEY_DOWN;
    public static COREWEBVIEW2_KEY_EVENT_KIND COREWEBVIEW2_KEY_EVENT_KIND_SYSTEM_KEY_UP;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_MOUSE_EVENT_KIND")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_MOUSE_EVENT_KIND : Enum {
    public int value__;
    public static COREWEBVIEW2_MOUSE_EVENT_KIND COREWEBVIEW2_MOUSE_EVENT_KIND_HORIZONTAL_WHEEL;
    public static COREWEBVIEW2_MOUSE_EVENT_KIND COREWEBVIEW2_MOUSE_EVENT_KIND_LEFT_BUTTON_DOUBLE_CLICK;
    public static COREWEBVIEW2_MOUSE_EVENT_KIND COREWEBVIEW2_MOUSE_EVENT_KIND_LEFT_BUTTON_DOWN;
    public static COREWEBVIEW2_MOUSE_EVENT_KIND COREWEBVIEW2_MOUSE_EVENT_KIND_LEFT_BUTTON_UP;
    public static COREWEBVIEW2_MOUSE_EVENT_KIND COREWEBVIEW2_MOUSE_EVENT_KIND_LEAVE;
    public static COREWEBVIEW2_MOUSE_EVENT_KIND COREWEBVIEW2_MOUSE_EVENT_KIND_MIDDLE_BUTTON_DOUBLE_CLICK;
    public static COREWEBVIEW2_MOUSE_EVENT_KIND COREWEBVIEW2_MOUSE_EVENT_KIND_MIDDLE_BUTTON_DOWN;
    public static COREWEBVIEW2_MOUSE_EVENT_KIND COREWEBVIEW2_MOUSE_EVENT_KIND_MIDDLE_BUTTON_UP;
    public static COREWEBVIEW2_MOUSE_EVENT_KIND COREWEBVIEW2_MOUSE_EVENT_KIND_MOVE;
    public static COREWEBVIEW2_MOUSE_EVENT_KIND COREWEBVIEW2_MOUSE_EVENT_KIND_RIGHT_BUTTON_DOUBLE_CLICK;
    public static COREWEBVIEW2_MOUSE_EVENT_KIND COREWEBVIEW2_MOUSE_EVENT_KIND_RIGHT_BUTTON_DOWN;
    public static COREWEBVIEW2_MOUSE_EVENT_KIND COREWEBVIEW2_MOUSE_EVENT_KIND_RIGHT_BUTTON_UP;
    public static COREWEBVIEW2_MOUSE_EVENT_KIND COREWEBVIEW2_MOUSE_EVENT_KIND_WHEEL;
    public static COREWEBVIEW2_MOUSE_EVENT_KIND COREWEBVIEW2_MOUSE_EVENT_KIND_X_BUTTON_DOUBLE_CLICK;
    public static COREWEBVIEW2_MOUSE_EVENT_KIND COREWEBVIEW2_MOUSE_EVENT_KIND_X_BUTTON_DOWN;
    public static COREWEBVIEW2_MOUSE_EVENT_KIND COREWEBVIEW2_MOUSE_EVENT_KIND_X_BUTTON_UP;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS : Enum {
    public int value__;
    public static COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS_NONE;
    public static COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS_LEFT_BUTTON;
    public static COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS_RIGHT_BUTTON;
    public static COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS_SHIFT;
    public static COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS_CONTROL;
    public static COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS_MIDDLE_BUTTON;
    public static COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS_X_BUTTON1;
    public static COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS_X_BUTTON2;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_MOVE_FOCUS_REASON")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_MOVE_FOCUS_REASON : Enum {
    public int value__;
    public static COREWEBVIEW2_MOVE_FOCUS_REASON COREWEBVIEW2_MOVE_FOCUS_REASON_PROGRAMMATIC;
    public static COREWEBVIEW2_MOVE_FOCUS_REASON COREWEBVIEW2_MOVE_FOCUS_REASON_NEXT;
    public static COREWEBVIEW2_MOVE_FOCUS_REASON COREWEBVIEW2_MOVE_FOCUS_REASON_PREVIOUS;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_PDF_TOOLBAR_ITEMS")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_PDF_TOOLBAR_ITEMS : Enum {
    public int value__;
    public static COREWEBVIEW2_PDF_TOOLBAR_ITEMS COREWEBVIEW2_PDF_TOOLBAR_ITEMS_NONE;
    public static COREWEBVIEW2_PDF_TOOLBAR_ITEMS COREWEBVIEW2_PDF_TOOLBAR_ITEMS_SAVE;
    public static COREWEBVIEW2_PDF_TOOLBAR_ITEMS COREWEBVIEW2_PDF_TOOLBAR_ITEMS_PRINT;
    public static COREWEBVIEW2_PDF_TOOLBAR_ITEMS COREWEBVIEW2_PDF_TOOLBAR_ITEMS_SAVE_AS;
    public static COREWEBVIEW2_PDF_TOOLBAR_ITEMS COREWEBVIEW2_PDF_TOOLBAR_ITEMS_ZOOM_IN;
    public static COREWEBVIEW2_PDF_TOOLBAR_ITEMS COREWEBVIEW2_PDF_TOOLBAR_ITEMS_ZOOM_OUT;
    public static COREWEBVIEW2_PDF_TOOLBAR_ITEMS COREWEBVIEW2_PDF_TOOLBAR_ITEMS_ROTATE;
    public static COREWEBVIEW2_PDF_TOOLBAR_ITEMS COREWEBVIEW2_PDF_TOOLBAR_ITEMS_FIT_PAGE;
    public static COREWEBVIEW2_PDF_TOOLBAR_ITEMS COREWEBVIEW2_PDF_TOOLBAR_ITEMS_PAGE_LAYOUT;
    public static COREWEBVIEW2_PDF_TOOLBAR_ITEMS COREWEBVIEW2_PDF_TOOLBAR_ITEMS_BOOKMARKS;
    public static COREWEBVIEW2_PDF_TOOLBAR_ITEMS COREWEBVIEW2_PDF_TOOLBAR_ITEMS_PAGE_SELECTOR;
    public static COREWEBVIEW2_PDF_TOOLBAR_ITEMS COREWEBVIEW2_PDF_TOOLBAR_ITEMS_SEARCH;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_PERMISSION_KIND")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_PERMISSION_KIND : Enum {
    public int value__;
    public static COREWEBVIEW2_PERMISSION_KIND COREWEBVIEW2_PERMISSION_KIND_UNKNOWN_PERMISSION;
    public static COREWEBVIEW2_PERMISSION_KIND COREWEBVIEW2_PERMISSION_KIND_MICROPHONE;
    public static COREWEBVIEW2_PERMISSION_KIND COREWEBVIEW2_PERMISSION_KIND_CAMERA;
    public static COREWEBVIEW2_PERMISSION_KIND COREWEBVIEW2_PERMISSION_KIND_GEOLOCATION;
    public static COREWEBVIEW2_PERMISSION_KIND COREWEBVIEW2_PERMISSION_KIND_NOTIFICATIONS;
    public static COREWEBVIEW2_PERMISSION_KIND COREWEBVIEW2_PERMISSION_KIND_OTHER_SENSORS;
    public static COREWEBVIEW2_PERMISSION_KIND COREWEBVIEW2_PERMISSION_KIND_CLIPBOARD_READ;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_PERMISSION_STATE")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_PERMISSION_STATE : Enum {
    public int value__;
    public static COREWEBVIEW2_PERMISSION_STATE COREWEBVIEW2_PERMISSION_STATE_DEFAULT;
    public static COREWEBVIEW2_PERMISSION_STATE COREWEBVIEW2_PERMISSION_STATE_ALLOW;
    public static COREWEBVIEW2_PERMISSION_STATE COREWEBVIEW2_PERMISSION_STATE_DENY;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_PHYSICAL_KEY_STATUS")]
public class Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_PHYSICAL_KEY_STATUS : ValueType {
    public UInt32 RepeatCount;
    public UInt32 ScanCode;
    public int IsExtendedKey;
    public int IsMenuKeyDown;
    public int WasKeyDown;
    public int IsKeyReleased;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_POINTER_EVENT_KIND")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_POINTER_EVENT_KIND : Enum {
    public int value__;
    public static COREWEBVIEW2_POINTER_EVENT_KIND COREWEBVIEW2_POINTER_EVENT_KIND_ACTIVATE;
    public static COREWEBVIEW2_POINTER_EVENT_KIND COREWEBVIEW2_POINTER_EVENT_KIND_DOWN;
    public static COREWEBVIEW2_POINTER_EVENT_KIND COREWEBVIEW2_POINTER_EVENT_KIND_ENTER;
    public static COREWEBVIEW2_POINTER_EVENT_KIND COREWEBVIEW2_POINTER_EVENT_KIND_LEAVE;
    public static COREWEBVIEW2_POINTER_EVENT_KIND COREWEBVIEW2_POINTER_EVENT_KIND_UP;
    public static COREWEBVIEW2_POINTER_EVENT_KIND COREWEBVIEW2_POINTER_EVENT_KIND_UPDATE;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_PREFERRED_COLOR_SCHEME")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_PREFERRED_COLOR_SCHEME : Enum {
    public int value__;
    public static COREWEBVIEW2_PREFERRED_COLOR_SCHEME COREWEBVIEW2_PREFERRED_COLOR_SCHEME_AUTO;
    public static COREWEBVIEW2_PREFERRED_COLOR_SCHEME COREWEBVIEW2_PREFERRED_COLOR_SCHEME_LIGHT;
    public static COREWEBVIEW2_PREFERRED_COLOR_SCHEME COREWEBVIEW2_PREFERRED_COLOR_SCHEME_DARK;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_PRINT_ORIENTATION")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_PRINT_ORIENTATION : Enum {
    public int value__;
    public static COREWEBVIEW2_PRINT_ORIENTATION COREWEBVIEW2_PRINT_ORIENTATION_PORTRAIT;
    public static COREWEBVIEW2_PRINT_ORIENTATION COREWEBVIEW2_PRINT_ORIENTATION_LANDSCAPE;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_PROCESS_FAILED_KIND")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_PROCESS_FAILED_KIND : Enum {
    public int value__;
    public static COREWEBVIEW2_PROCESS_FAILED_KIND COREWEBVIEW2_PROCESS_FAILED_KIND_BROWSER_PROCESS_EXITED;
    public static COREWEBVIEW2_PROCESS_FAILED_KIND COREWEBVIEW2_PROCESS_FAILED_KIND_RENDER_PROCESS_EXITED;
    public static COREWEBVIEW2_PROCESS_FAILED_KIND COREWEBVIEW2_PROCESS_FAILED_KIND_RENDER_PROCESS_UNRESPONSIVE;
    public static COREWEBVIEW2_PROCESS_FAILED_KIND COREWEBVIEW2_PROCESS_FAILED_KIND_FRAME_RENDER_PROCESS_EXITED;
    public static COREWEBVIEW2_PROCESS_FAILED_KIND COREWEBVIEW2_PROCESS_FAILED_KIND_UTILITY_PROCESS_EXITED;
    public static COREWEBVIEW2_PROCESS_FAILED_KIND COREWEBVIEW2_PROCESS_FAILED_KIND_SANDBOX_HELPER_PROCESS_EXITED;
    public static COREWEBVIEW2_PROCESS_FAILED_KIND COREWEBVIEW2_PROCESS_FAILED_KIND_GPU_PROCESS_EXITED;
    public static COREWEBVIEW2_PROCESS_FAILED_KIND COREWEBVIEW2_PROCESS_FAILED_KIND_PPAPI_PLUGIN_PROCESS_EXITED;
    public static COREWEBVIEW2_PROCESS_FAILED_KIND COREWEBVIEW2_PROCESS_FAILED_KIND_PPAPI_BROKER_PROCESS_EXITED;
    public static COREWEBVIEW2_PROCESS_FAILED_KIND COREWEBVIEW2_PROCESS_FAILED_KIND_UNKNOWN_PROCESS_EXITED;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_PROCESS_FAILED_REASON")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_PROCESS_FAILED_REASON : Enum {
    public int value__;
    public static COREWEBVIEW2_PROCESS_FAILED_REASON COREWEBVIEW2_PROCESS_FAILED_REASON_UNEXPECTED;
    public static COREWEBVIEW2_PROCESS_FAILED_REASON COREWEBVIEW2_PROCESS_FAILED_REASON_UNRESPONSIVE;
    public static COREWEBVIEW2_PROCESS_FAILED_REASON COREWEBVIEW2_PROCESS_FAILED_REASON_TERMINATED;
    public static COREWEBVIEW2_PROCESS_FAILED_REASON COREWEBVIEW2_PROCESS_FAILED_REASON_CRASHED;
    public static COREWEBVIEW2_PROCESS_FAILED_REASON COREWEBVIEW2_PROCESS_FAILED_REASON_LAUNCH_FAILED;
    public static COREWEBVIEW2_PROCESS_FAILED_REASON COREWEBVIEW2_PROCESS_FAILED_REASON_OUT_OF_MEMORY;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_PROCESS_KIND")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_PROCESS_KIND : Enum {
    public int value__;
    public static COREWEBVIEW2_PROCESS_KIND COREWEBVIEW2_PROCESS_KIND_BROWSER;
    public static COREWEBVIEW2_PROCESS_KIND COREWEBVIEW2_PROCESS_KIND_RENDERER;
    public static COREWEBVIEW2_PROCESS_KIND COREWEBVIEW2_PROCESS_KIND_UTILITY;
    public static COREWEBVIEW2_PROCESS_KIND COREWEBVIEW2_PROCESS_KIND_SANDBOX_HELPER;
    public static COREWEBVIEW2_PROCESS_KIND COREWEBVIEW2_PROCESS_KIND_GPU;
    public static COREWEBVIEW2_PROCESS_KIND COREWEBVIEW2_PROCESS_KIND_PPAPI_PLUGIN;
    public static COREWEBVIEW2_PROCESS_KIND COREWEBVIEW2_PROCESS_KIND_PPAPI_BROKER;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_SCRIPT_DIALOG_KIND")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_SCRIPT_DIALOG_KIND : Enum {
    public int value__;
    public static COREWEBVIEW2_SCRIPT_DIALOG_KIND COREWEBVIEW2_SCRIPT_DIALOG_KIND_ALERT;
    public static COREWEBVIEW2_SCRIPT_DIALOG_KIND COREWEBVIEW2_SCRIPT_DIALOG_KIND_CONFIRM;
    public static COREWEBVIEW2_SCRIPT_DIALOG_KIND COREWEBVIEW2_SCRIPT_DIALOG_KIND_PROMPT;
    public static COREWEBVIEW2_SCRIPT_DIALOG_KIND COREWEBVIEW2_SCRIPT_DIALOG_KIND_BEFOREUNLOAD;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_SERVER_CERTIFICATE_ERROR_ACTION")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_SERVER_CERTIFICATE_ERROR_ACTION : Enum {
    public int value__;
    public static COREWEBVIEW2_SERVER_CERTIFICATE_ERROR_ACTION COREWEBVIEW2_SERVER_CERTIFICATE_ERROR_ACTION_ALWAYS_ALLOW;
    public static COREWEBVIEW2_SERVER_CERTIFICATE_ERROR_ACTION COREWEBVIEW2_SERVER_CERTIFICATE_ERROR_ACTION_CANCEL;
    public static COREWEBVIEW2_SERVER_CERTIFICATE_ERROR_ACTION COREWEBVIEW2_SERVER_CERTIFICATE_ERROR_ACTION_DEFAULT;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_WEB_ERROR_STATUS")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_WEB_ERROR_STATUS : Enum {
    public int value__;
    public static COREWEBVIEW2_WEB_ERROR_STATUS COREWEBVIEW2_WEB_ERROR_STATUS_UNKNOWN;
    public static COREWEBVIEW2_WEB_ERROR_STATUS COREWEBVIEW2_WEB_ERROR_STATUS_CERTIFICATE_COMMON_NAME_IS_INCORRECT;
    public static COREWEBVIEW2_WEB_ERROR_STATUS COREWEBVIEW2_WEB_ERROR_STATUS_CERTIFICATE_EXPIRED;
    public static COREWEBVIEW2_WEB_ERROR_STATUS COREWEBVIEW2_WEB_ERROR_STATUS_CLIENT_CERTIFICATE_CONTAINS_ERRORS;
    public static COREWEBVIEW2_WEB_ERROR_STATUS COREWEBVIEW2_WEB_ERROR_STATUS_CERTIFICATE_REVOKED;
    public static COREWEBVIEW2_WEB_ERROR_STATUS COREWEBVIEW2_WEB_ERROR_STATUS_CERTIFICATE_IS_INVALID;
    public static COREWEBVIEW2_WEB_ERROR_STATUS COREWEBVIEW2_WEB_ERROR_STATUS_SERVER_UNREACHABLE;
    public static COREWEBVIEW2_WEB_ERROR_STATUS COREWEBVIEW2_WEB_ERROR_STATUS_TIMEOUT;
    public static COREWEBVIEW2_WEB_ERROR_STATUS COREWEBVIEW2_WEB_ERROR_STATUS_ERROR_HTTP_INVALID_SERVER_RESPONSE;
    public static COREWEBVIEW2_WEB_ERROR_STATUS COREWEBVIEW2_WEB_ERROR_STATUS_CONNECTION_ABORTED;
    public static COREWEBVIEW2_WEB_ERROR_STATUS COREWEBVIEW2_WEB_ERROR_STATUS_CONNECTION_RESET;
    public static COREWEBVIEW2_WEB_ERROR_STATUS COREWEBVIEW2_WEB_ERROR_STATUS_DISCONNECTED;
    public static COREWEBVIEW2_WEB_ERROR_STATUS COREWEBVIEW2_WEB_ERROR_STATUS_CANNOT_CONNECT;
    public static COREWEBVIEW2_WEB_ERROR_STATUS COREWEBVIEW2_WEB_ERROR_STATUS_HOST_NAME_NOT_RESOLVED;
    public static COREWEBVIEW2_WEB_ERROR_STATUS COREWEBVIEW2_WEB_ERROR_STATUS_OPERATION_CANCELED;
    public static COREWEBVIEW2_WEB_ERROR_STATUS COREWEBVIEW2_WEB_ERROR_STATUS_REDIRECT_FAILED;
    public static COREWEBVIEW2_WEB_ERROR_STATUS COREWEBVIEW2_WEB_ERROR_STATUS_UNEXPECTED_ERROR;
    public static COREWEBVIEW2_WEB_ERROR_STATUS COREWEBVIEW2_WEB_ERROR_STATUS_VALID_AUTHENTICATION_CREDENTIALS_REQUIRED;
    public static COREWEBVIEW2_WEB_ERROR_STATUS COREWEBVIEW2_WEB_ERROR_STATUS_VALID_PROXY_AUTHENTICATION_REQUIRED;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_WEB_RESOURCE_CONTEXT")]
public enum Microsoft.Web.WebView2.Core.Raw.COREWEBVIEW2_WEB_RESOURCE_CONTEXT : Enum {
    public int value__;
    public static COREWEBVIEW2_WEB_RESOURCE_CONTEXT COREWEBVIEW2_WEB_RESOURCE_CONTEXT_ALL;
    public static COREWEBVIEW2_WEB_RESOURCE_CONTEXT COREWEBVIEW2_WEB_RESOURCE_CONTEXT_DOCUMENT;
    public static COREWEBVIEW2_WEB_RESOURCE_CONTEXT COREWEBVIEW2_WEB_RESOURCE_CONTEXT_STYLESHEET;
    public static COREWEBVIEW2_WEB_RESOURCE_CONTEXT COREWEBVIEW2_WEB_RESOURCE_CONTEXT_IMAGE;
    public static COREWEBVIEW2_WEB_RESOURCE_CONTEXT COREWEBVIEW2_WEB_RESOURCE_CONTEXT_MEDIA;
    public static COREWEBVIEW2_WEB_RESOURCE_CONTEXT COREWEBVIEW2_WEB_RESOURCE_CONTEXT_FONT;
    public static COREWEBVIEW2_WEB_RESOURCE_CONTEXT COREWEBVIEW2_WEB_RESOURCE_CONTEXT_SCRIPT;
    public static COREWEBVIEW2_WEB_RESOURCE_CONTEXT COREWEBVIEW2_WEB_RESOURCE_CONTEXT_XML_HTTP_REQUEST;
    public static COREWEBVIEW2_WEB_RESOURCE_CONTEXT COREWEBVIEW2_WEB_RESOURCE_CONTEXT_FETCH;
    public static COREWEBVIEW2_WEB_RESOURCE_CONTEXT COREWEBVIEW2_WEB_RESOURCE_CONTEXT_TEXT_TRACK;
    public static COREWEBVIEW2_WEB_RESOURCE_CONTEXT COREWEBVIEW2_WEB_RESOURCE_CONTEXT_EVENT_SOURCE;
    public static COREWEBVIEW2_WEB_RESOURCE_CONTEXT COREWEBVIEW2_WEB_RESOURCE_CONTEXT_WEBSOCKET;
    public static COREWEBVIEW2_WEB_RESOURCE_CONTEXT COREWEBVIEW2_WEB_RESOURCE_CONTEXT_MANIFEST;
    public static COREWEBVIEW2_WEB_RESOURCE_CONTEXT COREWEBVIEW2_WEB_RESOURCE_CONTEXT_SIGNED_EXCHANGE;
    public static COREWEBVIEW2_WEB_RESOURCE_CONTEXT COREWEBVIEW2_WEB_RESOURCE_CONTEXT_PING;
    public static COREWEBVIEW2_WEB_RESOURCE_CONTEXT COREWEBVIEW2_WEB_RESOURCE_CONTEXT_CSP_VIOLATION_REPORT;
    public static COREWEBVIEW2_WEB_RESOURCE_CONTEXT COREWEBVIEW2_WEB_RESOURCE_CONTEXT_OTHER;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.EventRegistrationToken")]
public class Microsoft.Web.WebView2.Core.Raw.EventRegistrationToken : ValueType {
    public long value;
}
[CompilerGeneratedAttribute]
[GuidAttribute("76ECEACB-0462-4D94-AC83-423A6793775E")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2 {
    [DispIdAttribute("1610678272")]
public ICoreWebView2Settings Settings { get; }
    [DispIdAttribute("1610678273")]
public string Source { get; }
    [DispIdAttribute("1610678306")]
public UInt32 BrowserProcessId { get; }
    [DispIdAttribute("1610678307")]
public int CanGoBack { get; }
    [DispIdAttribute("1610678308")]
public int CanGoForward { get; }
    [DispIdAttribute("1610678317")]
public string DocumentTitle { get; }
    [DispIdAttribute("1610678323")]
public int ContainsFullScreenElement { get; }
    public abstract virtual ICoreWebView2Settings get_Settings();
    public abstract virtual string get_Source();
    public abstract virtual void Navigate(string uri);
    public abstract virtual void NavigateToString(string htmlContent);
    public abstract virtual void add_NavigationStarting(ICoreWebView2NavigationStartingEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_NavigationStarting(EventRegistrationToken token);
    public abstract virtual void add_ContentLoading(ICoreWebView2ContentLoadingEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_ContentLoading(EventRegistrationToken token);
    public abstract virtual void add_SourceChanged(ICoreWebView2SourceChangedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_SourceChanged(EventRegistrationToken token);
    public abstract virtual void add_HistoryChanged(ICoreWebView2HistoryChangedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_HistoryChanged(EventRegistrationToken token);
    public abstract virtual void add_NavigationCompleted(ICoreWebView2NavigationCompletedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_NavigationCompleted(EventRegistrationToken token);
    public abstract virtual void add_FrameNavigationStarting(ICoreWebView2NavigationStartingEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_FrameNavigationStarting(EventRegistrationToken token);
    public abstract virtual void add_FrameNavigationCompleted(ICoreWebView2NavigationCompletedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_FrameNavigationCompleted(EventRegistrationToken token);
    public abstract virtual void add_ScriptDialogOpening(ICoreWebView2ScriptDialogOpeningEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_ScriptDialogOpening(EventRegistrationToken token);
    public abstract virtual void add_PermissionRequested(ICoreWebView2PermissionRequestedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_PermissionRequested(EventRegistrationToken token);
    public abstract virtual void add_ProcessFailed(ICoreWebView2ProcessFailedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_ProcessFailed(EventRegistrationToken token);
    public abstract virtual void AddScriptToExecuteOnDocumentCreated(string javaScript, ICoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandler handler);
    public abstract virtual void RemoveScriptToExecuteOnDocumentCreated(string id);
    public abstract virtual void ExecuteScript(string javaScript, ICoreWebView2ExecuteScriptCompletedHandler handler);
    public abstract virtual void CapturePreview(COREWEBVIEW2_CAPTURE_PREVIEW_IMAGE_FORMAT imageFormat, IStream imageStream, ICoreWebView2CapturePreviewCompletedHandler handler);
    public abstract virtual void Reload();
    public abstract virtual void PostWebMessageAsJson(string webMessageAsJson);
    public abstract virtual void PostWebMessageAsString(string webMessageAsString);
    public abstract virtual void add_WebMessageReceived(ICoreWebView2WebMessageReceivedEventHandler handler, EventRegistrationToken& token);
    public abstract virtual void remove_WebMessageReceived(EventRegistrationToken token);
    public abstract virtual void CallDevToolsProtocolMethod(string methodName, string parametersAsJson, ICoreWebView2CallDevToolsProtocolMethodCompletedHandler handler);
    public abstract virtual UInt32 get_BrowserProcessId();
    public abstract virtual int get_CanGoBack();
    public abstract virtual int get_CanGoForward();
    public abstract virtual void GoBack();
    public abstract virtual void GoForward();
    public abstract virtual ICoreWebView2DevToolsProtocolEventReceiver GetDevToolsProtocolEventReceiver(string eventName);
    public abstract virtual void Stop();
    public abstract virtual void add_NewWindowRequested(ICoreWebView2NewWindowRequestedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_NewWindowRequested(EventRegistrationToken token);
    public abstract virtual void add_DocumentTitleChanged(ICoreWebView2DocumentTitleChangedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_DocumentTitleChanged(EventRegistrationToken token);
    public abstract virtual string get_DocumentTitle();
    public abstract virtual void AddHostObjectToScript(string name, Object& object);
    public abstract virtual void RemoveHostObjectFromScript(string name);
    public abstract virtual void OpenDevToolsWindow();
    public abstract virtual void add_ContainsFullScreenElementChanged(ICoreWebView2ContainsFullScreenElementChangedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_ContainsFullScreenElementChanged(EventRegistrationToken token);
    public abstract virtual int get_ContainsFullScreenElement();
    public abstract virtual void add_WebResourceRequested(ICoreWebView2WebResourceRequestedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_WebResourceRequested(EventRegistrationToken token);
    public abstract virtual void AddWebResourceRequestedFilter(string uri, COREWEBVIEW2_WEB_RESOURCE_CONTEXT ResourceContext);
    public abstract virtual void RemoveWebResourceRequestedFilter(string uri, COREWEBVIEW2_WEB_RESOURCE_CONTEXT ResourceContext);
    public abstract virtual void add_WindowCloseRequested(ICoreWebView2WindowCloseRequestedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_WindowCloseRequested(EventRegistrationToken token);
}
[CompilerGeneratedAttribute]
[GuidAttribute("B1690564-6F5A-4983-8E48-31D1143FECDB")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2_10 {
    public void _VtblGap1_94();
    public abstract virtual void add_BasicAuthenticationRequested(ICoreWebView2BasicAuthenticationRequestedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_BasicAuthenticationRequested(EventRegistrationToken token);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("0BE78E56-C193-4051-B943-23B460C08BDB")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2_11 {
    public void _VtblGap1_96();
    public abstract virtual void CallDevToolsProtocolMethodForSession(string sessionId, string methodName, string parametersAsJson, ICoreWebView2CallDevToolsProtocolMethodCompletedHandler handler);
    public abstract virtual void add_ContextMenuRequested(ICoreWebView2ContextMenuRequestedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_ContextMenuRequested(EventRegistrationToken token);
}
[CompilerGeneratedAttribute]
[GuidAttribute("35D69927-BCFA-4566-9349-6B3E0D154CAC")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2_12 {
    [DispIdAttribute("1611399170")]
public string StatusBarText { get; }
    public void _VtblGap1_99();
    public abstract virtual void add_StatusBarTextChanged(ICoreWebView2StatusBarTextChangedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_StatusBarTextChanged(EventRegistrationToken token);
    public abstract virtual string get_StatusBarText();
}
[CompilerGeneratedAttribute]
[GuidAttribute("F75F09A8-667E-4983-88D6-C8773F315E84")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2_13 {
    [DispIdAttribute("1611464704")]
public ICoreWebView2Profile Profile { get; }
    public void _VtblGap1_102();
    public abstract virtual ICoreWebView2Profile get_Profile();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("6DAA4F10-4A90-4753-8898-77C5DF534165")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2_14 {
    public void _VtblGap1_103();
    public abstract virtual void add_ServerCertificateErrorDetected(ICoreWebView2ServerCertificateErrorDetectedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_ServerCertificateErrorDetected(EventRegistrationToken token);
    public abstract virtual void ClearServerCertificateErrorActions(ICoreWebView2ClearServerCertificateErrorActionsCompletedHandler handler);
}
[CompilerGeneratedAttribute]
[GuidAttribute("9E8F0CF8-E670-4B5E-B2BC-73E061E3184C")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2_2 {
    [DispIdAttribute("1610743813")]
public ICoreWebView2CookieManager CookieManager { get; }
    [DispIdAttribute("1610743814")]
public ICoreWebView2Environment Environment { get; }
    public void _VtblGap1_58();
    public abstract virtual void add_WebResourceResponseReceived(ICoreWebView2WebResourceResponseReceivedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_WebResourceResponseReceived(EventRegistrationToken token);
    public abstract virtual void NavigateWithWebResourceRequest(ICoreWebView2WebResourceRequest Request);
    public abstract virtual void add_DOMContentLoaded(ICoreWebView2DOMContentLoadedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_DOMContentLoaded(EventRegistrationToken token);
    public abstract virtual ICoreWebView2CookieManager get_CookieManager();
    public abstract virtual ICoreWebView2Environment get_Environment();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("A0D6DF20-3B92-416D-AA0C-437A9C727857")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2_3 {
    [DispIdAttribute("1610809346")]
public int IsSuspended { get; }
    public void _VtblGap1_65();
    public abstract virtual void TrySuspend(ICoreWebView2TrySuspendCompletedHandler handler);
    public abstract virtual void Resume();
    public abstract virtual int get_IsSuspended();
    public abstract virtual void SetVirtualHostNameToFolderMapping(string hostName, string folderPath, COREWEBVIEW2_HOST_RESOURCE_ACCESS_KIND accessKind);
    public abstract virtual void ClearVirtualHostNameToFolderMapping(string hostName);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("20D02D59-6DF2-42DC-BD06-F98A694B1302")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2_4 {
    public void _VtblGap1_70();
    public abstract virtual void add_FrameCreated(ICoreWebView2FrameCreatedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_FrameCreated(EventRegistrationToken token);
    public abstract virtual void add_DownloadStarting(ICoreWebView2DownloadStartingEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_DownloadStarting(EventRegistrationToken token);
}
[CompilerGeneratedAttribute]
[GuidAttribute("BEDB11B8-D63C-11EB-B8BC-0242AC130003")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2_5 {
    public void _VtblGap1_74();
    public abstract virtual void add_ClientCertificateRequested(ICoreWebView2ClientCertificateRequestedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_ClientCertificateRequested(EventRegistrationToken token);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("499AADAC-D92C-4589-8A75-111BFC167795")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2_6 {
    public void _VtblGap1_76();
    public abstract virtual void OpenTaskManagerWindow();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("79C24D83-09A3-45AE-9418-487F32A58740")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2_7 {
    public void _VtblGap1_77();
    public abstract virtual void PrintToPdf(string ResultFilePath, ICoreWebView2PrintSettings printSettings, ICoreWebView2PrintToPdfCompletedHandler handler);
}
[CompilerGeneratedAttribute]
[GuidAttribute("E9632730-6E1E-43AB-B7B8-7B2C9E62E094")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2_8 {
    [DispIdAttribute("1611137026")]
public int IsMuted { get; public set; }
    [DispIdAttribute("1611137030")]
public int IsDocumentPlayingAudio { get; }
    public void _VtblGap1_78();
    public abstract virtual void add_IsMutedChanged(ICoreWebView2IsMutedChangedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_IsMutedChanged(EventRegistrationToken token);
    public abstract virtual int get_IsMuted();
    public abstract virtual void set_IsMuted(int value);
    public abstract virtual void add_IsDocumentPlayingAudioChanged(ICoreWebView2IsDocumentPlayingAudioChangedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_IsDocumentPlayingAudioChanged(EventRegistrationToken token);
    public abstract virtual int get_IsDocumentPlayingAudio();
}
[CompilerGeneratedAttribute]
[GuidAttribute("4D7B2EAB-9FDC-468D-B998-A9260B5ED651")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2_9 {
    [DispIdAttribute("1611202562")]
public int IsDefaultDownloadDialogOpen { get; }
    [DispIdAttribute("1611202565")]
public COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT DefaultDownloadDialogCornerAlignment { get; public set; }
    [DispIdAttribute("1611202567")]
public tagPOINT DefaultDownloadDialogMargin { get; public set; }
    public void _VtblGap1_85();
    public abstract virtual void add_IsDefaultDownloadDialogOpenChanged(ICoreWebView2IsDefaultDownloadDialogOpenChangedEventHandler handler, EventRegistrationToken& token);
    public abstract virtual void remove_IsDefaultDownloadDialogOpenChanged(EventRegistrationToken token);
    public abstract virtual int get_IsDefaultDownloadDialogOpen();
    public abstract virtual void OpenDefaultDownloadDialog();
    public abstract virtual void CloseDefaultDownloadDialog();
    public abstract virtual COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT get_DefaultDownloadDialogCornerAlignment();
    public abstract virtual void set_DefaultDownloadDialogCornerAlignment(COREWEBVIEW2_DEFAULT_DOWNLOAD_DIALOG_CORNER_ALIGNMENT value);
    public abstract virtual tagPOINT get_DefaultDownloadDialogMargin();
    public abstract virtual void set_DefaultDownloadDialogMargin(tagPOINT value);
}
[CompilerGeneratedAttribute]
[GuidAttribute("9F760F8A-FB79-42BE-9990-7B56900FA9C7")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2AcceleratorKeyPressedEventArgs {
    [DispIdAttribute("1610678272")]
public COREWEBVIEW2_KEY_EVENT_KIND KeyEventKind { get; }
    [DispIdAttribute("1610678273")]
public UInt32 VirtualKey { get; }
    [DispIdAttribute("1610678274")]
public int KeyEventLParam { get; }
    [DispIdAttribute("1610678275")]
public COREWEBVIEW2_PHYSICAL_KEY_STATUS PhysicalKeyStatus { get; }
    [DispIdAttribute("1610678276")]
public int Handled { get; public set; }
    public abstract virtual COREWEBVIEW2_KEY_EVENT_KIND get_KeyEventKind();
    public abstract virtual UInt32 get_VirtualKey();
    public abstract virtual int get_KeyEventLParam();
    public abstract virtual COREWEBVIEW2_PHYSICAL_KEY_STATUS get_PhysicalKeyStatus();
    public abstract virtual int get_Handled();
    public abstract virtual void set_Handled(int Handled);
}
[CompilerGeneratedAttribute]
[GuidAttribute("B29C7E28-FA79-41A8-8E44-65811C76DCB2")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2AcceleratorKeyPressedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2Controller sender, ICoreWebView2AcceleratorKeyPressedEventArgs args);
}
[CompilerGeneratedAttribute]
[GuidAttribute("B99369F3-9B11-47B5-BC6F-8E7895FCEA17")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2AddScriptToExecuteOnDocumentCreatedCompletedHandler {
    public abstract virtual void Invoke(int errorCode, string id);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("EF05516F-D897-4F9E-B672-D8E2307A3FB0")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2BasicAuthenticationRequestedEventArgs {
    [DispIdAttribute("1610678272")]
public string Uri { get; }
    [DispIdAttribute("1610678273")]
public string Challenge { get; }
    [DispIdAttribute("1610678274")]
public ICoreWebView2BasicAuthenticationResponse Response { get; }
    [DispIdAttribute("1610678275")]
public int Cancel { get; public set; }
    public abstract virtual string get_uri();
    public abstract virtual string get_Challenge();
    public abstract virtual ICoreWebView2BasicAuthenticationResponse get_Response();
    public abstract virtual int get_Cancel();
    public abstract virtual void set_Cancel(int Cancel);
    public abstract virtual ICoreWebView2Deferral GetDeferral();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("58B4D6C2-18D4-497E-B39B-9A96533FA278")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2BasicAuthenticationRequestedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2 sender, ICoreWebView2BasicAuthenticationRequestedEventArgs args);
}
[CompilerGeneratedAttribute]
[GuidAttribute("07023F7D-2D77-4D67-9040-6E7D428C6A40")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2BasicAuthenticationResponse {
    [DispIdAttribute("1610678272")]
public string UserName { get; public set; }
    [DispIdAttribute("1610678274")]
public string Password { get; public set; }
    public abstract virtual string get_UserName();
    public abstract virtual void set_UserName(string UserName);
    public abstract virtual string get_Password();
    public abstract virtual void set_Password(string Password);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("1F00663F-AF8C-4782-9CDD-DD01C52E34CB")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2BrowserProcessExitedEventArgs {
    [DispIdAttribute("1610678272")]
public COREWEBVIEW2_BROWSER_PROCESS_EXIT_KIND BrowserProcessExitKind { get; }
    [DispIdAttribute("1610678273")]
public UInt32 BrowserProcessId { get; }
    public abstract virtual COREWEBVIEW2_BROWSER_PROCESS_EXIT_KIND get_BrowserProcessExitKind();
    public abstract virtual UInt32 get_BrowserProcessId();
}
[CompilerGeneratedAttribute]
[GuidAttribute("FA504257-A216-4911-A860-FE8825712861")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2BrowserProcessExitedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2Environment sender, ICoreWebView2BrowserProcessExitedEventArgs args);
}
[CompilerGeneratedAttribute]
[GuidAttribute("828E8AB6-D94C-4264-9CEF-5217170D6251")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2BytesReceivedChangedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2DownloadOperation sender, object args);
}
[CompilerGeneratedAttribute]
[GuidAttribute("5C4889F0-5EF6-4C5A-952C-D8F1B92D0574")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2CallDevToolsProtocolMethodCompletedHandler {
    public abstract virtual void Invoke(int errorCode, string returnObjectAsJson);
}
[CompilerGeneratedAttribute]
[GuidAttribute("697E05E9-3D8F-45FA-96F4-8FFE1EDEDAF5")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2CapturePreviewCompletedHandler {
    public abstract virtual void Invoke(int errorCode);
}
[CompilerGeneratedAttribute]
[GuidAttribute("C5FB2FCE-1CAC-4AEE-9C79-5ED0362EAAE0")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Certificate {
    [DispIdAttribute("1610678272")]
public string Subject { get; }
    [DispIdAttribute("1610678273")]
public string Issuer { get; }
    [DispIdAttribute("1610678274")]
public double ValidFrom { get; }
    [DispIdAttribute("1610678275")]
public double ValidTo { get; }
    [DispIdAttribute("1610678276")]
public string DerEncodedSerialNumber { get; }
    [DispIdAttribute("1610678277")]
public string DisplayName { get; }
    [DispIdAttribute("1610678279")]
public ICoreWebView2StringCollection PemEncodedIssuerCertificateChain { get; }
    public abstract virtual string get_Subject();
    public abstract virtual string get_Issuer();
    public abstract virtual double get_ValidFrom();
    public abstract virtual double get_ValidTo();
    public abstract virtual string get_DerEncodedSerialNumber();
    public abstract virtual string get_DisplayName();
    public abstract virtual string ToPemEncoding();
    public abstract virtual ICoreWebView2StringCollection get_PemEncodedIssuerCertificateChain();
}
[CompilerGeneratedAttribute]
[GuidAttribute("E9710A06-1D1D-49B2-8234-226F35846AE5")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ClearBrowsingDataCompletedHandler {
    public abstract virtual void Invoke(int errorCode);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("3B40AAC6-ACFE-4FFD-8211-F607B96E2D5B")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ClearServerCertificateErrorActionsCompletedHandler {
    public abstract virtual void Invoke(int errorCode);
}
[CompilerGeneratedAttribute]
[GuidAttribute("E7188076-BCC3-11EB-8529-0242AC130003")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ClientCertificate {
    [DispIdAttribute("1610678272")]
public string Subject { get; }
    [DispIdAttribute("1610678273")]
public string Issuer { get; }
    [DispIdAttribute("1610678274")]
public double ValidFrom { get; }
    [DispIdAttribute("1610678275")]
public double ValidTo { get; }
    [DispIdAttribute("1610678276")]
public string DerEncodedSerialNumber { get; }
    [DispIdAttribute("1610678277")]
public string DisplayName { get; }
    [DispIdAttribute("1610678279")]
public ICoreWebView2StringCollection PemEncodedIssuerCertificateChain { get; }
    [DispIdAttribute("1610678280")]
public COREWEBVIEW2_CLIENT_CERTIFICATE_KIND Kind { get; }
    public abstract virtual string get_Subject();
    public abstract virtual string get_Issuer();
    public abstract virtual double get_ValidFrom();
    public abstract virtual double get_ValidTo();
    public abstract virtual string get_DerEncodedSerialNumber();
    public abstract virtual string get_DisplayName();
    public abstract virtual string ToPemEncoding();
    public abstract virtual ICoreWebView2StringCollection get_PemEncodedIssuerCertificateChain();
    public abstract virtual COREWEBVIEW2_CLIENT_CERTIFICATE_KIND get_Kind();
}
[CompilerGeneratedAttribute]
[GuidAttribute("EF5674D2-BCC3-11EB-8529-0242AC130003")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ClientCertificateCollection {
    [DispIdAttribute("1610678272")]
public UInt32 Count { get; }
    public abstract virtual UInt32 get_Count();
    public abstract virtual ICoreWebView2ClientCertificate GetValueAtIndex(UInt32 index);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("BC59DB28-BCC3-11EB-8529-0242AC130003")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ClientCertificateRequestedEventArgs {
    [DispIdAttribute("1610678272")]
public string Host { get; }
    [DispIdAttribute("1610678273")]
public int Port { get; }
    [DispIdAttribute("1610678274")]
public int IsProxy { get; }
    [DispIdAttribute("1610678275")]
public ICoreWebView2StringCollection AllowedCertificateAuthorities { get; }
    [DispIdAttribute("1610678276")]
public ICoreWebView2ClientCertificateCollection MutuallyTrustedCertificates { get; }
    [DispIdAttribute("1610678277")]
public ICoreWebView2ClientCertificate SelectedCertificate { get; public set; }
    [DispIdAttribute("1610678279")]
public int Cancel { get; public set; }
    [DispIdAttribute("1610678281")]
public int Handled { get; public set; }
    public abstract virtual string get_Host();
    public abstract virtual int get_Port();
    public abstract virtual int get_IsProxy();
    public abstract virtual ICoreWebView2StringCollection get_AllowedCertificateAuthorities();
    public abstract virtual ICoreWebView2ClientCertificateCollection get_MutuallyTrustedCertificates();
    public abstract virtual ICoreWebView2ClientCertificate get_SelectedCertificate();
    public abstract virtual void set_SelectedCertificate(ICoreWebView2ClientCertificate value);
    public abstract virtual int get_Cancel();
    public abstract virtual void set_Cancel(int value);
    public abstract virtual int get_Handled();
    public abstract virtual void set_Handled(int value);
    public abstract virtual ICoreWebView2Deferral GetDeferral();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("D7175BA2-BCC3-11EB-8529-0242AC130003")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ClientCertificateRequestedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2 sender, ICoreWebView2ClientCertificateRequestedEventArgs args);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("3DF9B733-B9AE-4A15-86B4-EB9EE9826469")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2CompositionController {
    [DispIdAttribute("1610678272")]
public object RootVisualTarget { get; public set; }
    [DispIdAttribute("1610678276")]
public IntPtr Cursor { get; }
    [DispIdAttribute("1610678277")]
public UInt32 SystemCursorId { get; }
    public abstract virtual object get_RootVisualTarget();
    public abstract virtual void set_RootVisualTarget(object target);
    public abstract virtual void SendMouseInput(COREWEBVIEW2_MOUSE_EVENT_KIND eventKind, COREWEBVIEW2_MOUSE_EVENT_VIRTUAL_KEYS virtualKeys, UInt32 mouseData, tagPOINT point);
    public abstract virtual void SendPointerInput(COREWEBVIEW2_POINTER_EVENT_KIND eventKind, ICoreWebView2PointerInfo pointerInfo);
    public abstract virtual IntPtr get_Cursor();
    public abstract virtual UInt32 get_SystemCursorId();
    public abstract virtual void add_CursorChanged(ICoreWebView2CursorChangedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_CursorChanged(EventRegistrationToken token);
}
[CompilerGeneratedAttribute]
[GuidAttribute("0B6A3D24-49CB-4806-BA20-B5E0734A7B26")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2CompositionController2 {
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("E45D98B1-AFEF-45BE-8BAF-6C7728867F73")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ContainsFullScreenElementChangedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2 sender, object args);
}
[CompilerGeneratedAttribute]
[GuidAttribute("0C8A1275-9B6B-4901-87AD-70DF25BAFA6E")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ContentLoadingEventArgs {
    [DispIdAttribute("1610678272")]
public int IsErrorPage { get; }
    [DispIdAttribute("1610678273")]
public ulong NavigationId { get; }
    public abstract virtual int get_IsErrorPage();
    public abstract virtual ulong get_NavigationId();
}
[CompilerGeneratedAttribute]
[GuidAttribute("364471E7-F2BE-4910-BDBA-D72077D51C4B")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ContentLoadingEventHandler {
    public abstract virtual void Invoke(ICoreWebView2 sender, ICoreWebView2ContentLoadingEventArgs args);
}
[CompilerGeneratedAttribute]
[GuidAttribute("7AED49E3-A93F-497A-811C-749C6B6B6C65")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ContextMenuItem {
    [DispIdAttribute("1610678272")]
public string Name { get; }
    [DispIdAttribute("1610678273")]
public string Label { get; }
    [DispIdAttribute("1610678274")]
public int CommandId { get; }
    [DispIdAttribute("1610678275")]
public string ShortcutKeyDescription { get; }
    [DispIdAttribute("1610678276")]
public IStream Icon { get; }
    [DispIdAttribute("1610678277")]
public COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND Kind { get; }
    [DispIdAttribute("1610678278")]
public int IsEnabled { get; public set; }
    [DispIdAttribute("1610678280")]
public int IsChecked { get; public set; }
    [DispIdAttribute("1610678282")]
public ICoreWebView2ContextMenuItemCollection Children { get; }
    public abstract virtual string get_name();
    public abstract virtual string get_Label();
    public abstract virtual int get_CommandId();
    public abstract virtual string get_ShortcutKeyDescription();
    public abstract virtual IStream get_Icon();
    public abstract virtual COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND get_Kind();
    public abstract virtual void set_IsEnabled(int value);
    public abstract virtual int get_IsEnabled();
    public abstract virtual void set_IsChecked(int value);
    public abstract virtual int get_IsChecked();
    public abstract virtual ICoreWebView2ContextMenuItemCollection get_Children();
    public abstract virtual void add_CustomItemSelected(ICoreWebView2CustomItemSelectedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_CustomItemSelected(EventRegistrationToken token);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("F562A2F5-C415-45CF-B909-D4B7C1E276D3")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ContextMenuItemCollection {
    [DispIdAttribute("1610678272")]
public UInt32 Count { get; }
    public abstract virtual UInt32 get_Count();
    public abstract virtual ICoreWebView2ContextMenuItem GetValueAtIndex(UInt32 index);
    public abstract virtual void RemoveValueAtIndex(UInt32 index);
    public abstract virtual void InsertValueAtIndex(UInt32 index, ICoreWebView2ContextMenuItem value);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("A1D309EE-C03F-11EB-8529-0242AC130003")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ContextMenuRequestedEventArgs {
    [DispIdAttribute("1610678272")]
public ICoreWebView2ContextMenuItemCollection MenuItems { get; }
    [DispIdAttribute("1610678273")]
public ICoreWebView2ContextMenuTarget ContextMenuTarget { get; }
    [DispIdAttribute("1610678274")]
public tagPOINT Location { get; }
    [DispIdAttribute("1610678275")]
public int SelectedCommandId { get; public set; }
    [DispIdAttribute("1610678277")]
public int Handled { get; public set; }
    public abstract virtual ICoreWebView2ContextMenuItemCollection get_MenuItems();
    public abstract virtual ICoreWebView2ContextMenuTarget get_ContextMenuTarget();
    public abstract virtual tagPOINT get_Location();
    public abstract virtual void set_SelectedCommandId(int value);
    public abstract virtual int get_SelectedCommandId();
    public abstract virtual void set_Handled(int value);
    public abstract virtual int get_Handled();
    public abstract virtual ICoreWebView2Deferral GetDeferral();
}
[CompilerGeneratedAttribute]
[GuidAttribute("04D3FE1D-AB87-42FB-A898-DA241D35B63C")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ContextMenuRequestedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2 sender, ICoreWebView2ContextMenuRequestedEventArgs args);
}
[CompilerGeneratedAttribute]
[GuidAttribute("B8611D99-EED6-4F3F-902C-A198502AD472")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ContextMenuTarget {
    [DispIdAttribute("1610678272")]
public COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND Kind { get; }
    [DispIdAttribute("1610678273")]
public int IsEditable { get; }
    [DispIdAttribute("1610678274")]
public int IsRequestedForMainFrame { get; }
    [DispIdAttribute("1610678275")]
public string PageUri { get; }
    [DispIdAttribute("1610678276")]
public string FrameUri { get; }
    [DispIdAttribute("1610678277")]
public int HasLinkUri { get; }
    [DispIdAttribute("1610678278")]
public string LinkUri { get; }
    [DispIdAttribute("1610678279")]
public int HasLinkText { get; }
    [DispIdAttribute("1610678280")]
public string LinkText { get; }
    [DispIdAttribute("1610678281")]
public int HasSourceUri { get; }
    [DispIdAttribute("1610678282")]
public string SourceUri { get; }
    [DispIdAttribute("1610678283")]
public int HasSelection { get; }
    [DispIdAttribute("1610678284")]
public string SelectionText { get; }
    public abstract virtual COREWEBVIEW2_CONTEXT_MENU_TARGET_KIND get_Kind();
    public abstract virtual int get_IsEditable();
    public abstract virtual int get_IsRequestedForMainFrame();
    public abstract virtual string get_PageUri();
    public abstract virtual string get_FrameUri();
    public abstract virtual int get_HasLinkUri();
    public abstract virtual string get_LinkUri();
    public abstract virtual int get_HasLinkText();
    public abstract virtual string get_LinkText();
    public abstract virtual int get_HasSourceUri();
    public abstract virtual string get_SourceUri();
    public abstract virtual int get_HasSelection();
    public abstract virtual string get_SelectionText();
}
[CompilerGeneratedAttribute]
[GuidAttribute("4D00C0D1-9434-4EB6-8078-8697A560334F")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Controller {
    [DispIdAttribute("1610678272")]
public int IsVisible { get; public set; }
    [DispIdAttribute("1610678274")]
public tagRECT Bounds { get; public set; }
    [DispIdAttribute("1610678276")]
public double ZoomFactor { get; public set; }
    [DispIdAttribute("1610678290")]
public IntPtr ParentWindow { get; public set; }
    [DispIdAttribute("1610678294")]
public ICoreWebView2 CoreWebView2 { get; }
    public abstract virtual int get_IsVisible();
    public abstract virtual void set_IsVisible(int IsVisible);
    public abstract virtual tagRECT get_Bounds();
    public abstract virtual void set_Bounds(tagRECT Bounds);
    public abstract virtual double get_ZoomFactor();
    public abstract virtual void set_ZoomFactor(double ZoomFactor);
    public abstract virtual void add_ZoomFactorChanged(ICoreWebView2ZoomFactorChangedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_ZoomFactorChanged(EventRegistrationToken token);
    public abstract virtual void SetBoundsAndZoomFactor(tagRECT Bounds, double ZoomFactor);
    public abstract virtual void MoveFocus(COREWEBVIEW2_MOVE_FOCUS_REASON reason);
    public abstract virtual void add_MoveFocusRequested(ICoreWebView2MoveFocusRequestedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_MoveFocusRequested(EventRegistrationToken token);
    public abstract virtual void add_GotFocus(ICoreWebView2FocusChangedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_GotFocus(EventRegistrationToken token);
    public abstract virtual void add_LostFocus(ICoreWebView2FocusChangedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_LostFocus(EventRegistrationToken token);
    public abstract virtual void add_AcceleratorKeyPressed(ICoreWebView2AcceleratorKeyPressedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_AcceleratorKeyPressed(EventRegistrationToken token);
    public abstract virtual IntPtr get_ParentWindow();
    public abstract virtual void set_ParentWindow(IntPtr ParentWindow);
    public abstract virtual void NotifyParentWindowPositionChanged();
    public abstract virtual void Close();
    public abstract virtual ICoreWebView2 get_CoreWebView2();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("C979903E-D4CA-4228-92EB-47EE3FA96EAB")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Controller2 {
    [DispIdAttribute("1610743808")]
public COREWEBVIEW2_COLOR DefaultBackgroundColor { get; public set; }
    public void _VtblGap1_23();
    public abstract virtual COREWEBVIEW2_COLOR get_DefaultBackgroundColor();
    public abstract virtual void set_DefaultBackgroundColor(COREWEBVIEW2_COLOR backgroundColor);
}
[CompilerGeneratedAttribute]
[GuidAttribute("F9614724-5D2B-41DC-AEF7-73D62B51543B")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Controller3 {
    [DispIdAttribute("1610809344")]
public double RasterizationScale { get; public set; }
    [DispIdAttribute("1610809346")]
public int ShouldDetectMonitorScaleChanges { get; public set; }
    [DispIdAttribute("1610809350")]
public COREWEBVIEW2_BOUNDS_MODE BoundsMode { get; public set; }
    public void _VtblGap1_25();
    public abstract virtual double get_RasterizationScale();
    public abstract virtual void set_RasterizationScale(double scale);
    public abstract virtual int get_ShouldDetectMonitorScaleChanges();
    public abstract virtual void set_ShouldDetectMonitorScaleChanges(int value);
    public abstract virtual void add_RasterizationScaleChanged(ICoreWebView2RasterizationScaleChangedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_RasterizationScaleChanged(EventRegistrationToken token);
    public abstract virtual COREWEBVIEW2_BOUNDS_MODE get_BoundsMode();
    public abstract virtual void set_BoundsMode(COREWEBVIEW2_BOUNDS_MODE BoundsMode);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("97D418D5-A426-4E49-A151-E1A10F327D9E")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Controller4 {
    [DispIdAttribute("1610874880")]
public int AllowExternalDrop { get; public set; }
    public void _VtblGap1_33();
    public abstract virtual int get_AllowExternalDrop();
    public abstract virtual void set_AllowExternalDrop(int value);
}
[CompilerGeneratedAttribute]
[GuidAttribute("12AAE616-8CCB-44EC-BCB3-EB1831881635")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ControllerOptions {
    [DispIdAttribute("1610678272")]
public string ProfileName { get; public set; }
    [DispIdAttribute("1610678274")]
public int IsInPrivateModeEnabled { get; public set; }
    public abstract virtual string get_ProfileName();
    public abstract virtual void set_ProfileName(string value);
    public abstract virtual int get_IsInPrivateModeEnabled();
    public abstract virtual void set_IsInPrivateModeEnabled(int value);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("AD26D6BE-1486-43E6-BF87-A2034006CA21")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Cookie {
    [DispIdAttribute("1610678272")]
public string Name { get; }
    [DispIdAttribute("1610678273")]
public string Value { get; public set; }
    [DispIdAttribute("1610678275")]
public string Domain { get; }
    [DispIdAttribute("1610678276")]
public string Path { get; }
    [DispIdAttribute("1610678277")]
public double Expires { get; public set; }
    [DispIdAttribute("1610678279")]
public int IsHttpOnly { get; public set; }
    [DispIdAttribute("1610678281")]
public COREWEBVIEW2_COOKIE_SAME_SITE_KIND SameSite { get; public set; }
    [DispIdAttribute("1610678283")]
public int IsSecure { get; public set; }
    [DispIdAttribute("1610678285")]
public int IsSession { get; }
    public abstract virtual string get_name();
    public abstract virtual string get_value();
    public abstract virtual void set_value(string value);
    public abstract virtual string get_Domain();
    public abstract virtual string get_Path();
    public abstract virtual double get_Expires();
    public abstract virtual void set_Expires(double Expires);
    public abstract virtual int get_IsHttpOnly();
    public abstract virtual void set_IsHttpOnly(int IsHttpOnly);
    public abstract virtual COREWEBVIEW2_COOKIE_SAME_SITE_KIND get_SameSite();
    public abstract virtual void set_SameSite(COREWEBVIEW2_COOKIE_SAME_SITE_KIND SameSite);
    public abstract virtual int get_IsSecure();
    public abstract virtual void set_IsSecure(int IsSecure);
    public abstract virtual int get_IsSession();
}
[CompilerGeneratedAttribute]
[GuidAttribute("F7F6F714-5D2A-43C6-9503-346ECE02D186")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2CookieList {
    [DispIdAttribute("1610678272")]
public UInt32 Count { get; }
    public abstract virtual UInt32 get_Count();
    public abstract virtual ICoreWebView2Cookie GetValueAtIndex(UInt32 index);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("177CD9E7-B6F5-451A-94A0-5D7A3A4C4141")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2CookieManager {
    public abstract virtual ICoreWebView2Cookie CreateCookie(string name, string value, string Domain, string Path);
    public abstract virtual ICoreWebView2Cookie CopyCookie(ICoreWebView2Cookie cookieParam);
    public abstract virtual void GetCookies(string uri, ICoreWebView2GetCookiesCompletedHandler handler);
    public abstract virtual void AddOrUpdateCookie(ICoreWebView2Cookie cookie);
    public abstract virtual void DeleteCookie(ICoreWebView2Cookie cookie);
    public abstract virtual void DeleteCookies(string name, string uri);
    public abstract virtual void DeleteCookiesWithDomainAndPath(string name, string Domain, string Path);
    public abstract virtual void DeleteAllCookies();
}
[CompilerGeneratedAttribute]
[GuidAttribute("02FAB84B-1428-4FB7-AD45-1B2E64736184")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2CreateCoreWebView2CompositionControllerCompletedHandler {
    public abstract virtual void Invoke(int errorCode, ICoreWebView2CompositionController webView);
}
[CompilerGeneratedAttribute]
[GuidAttribute("6C4819F3-C9B7-4260-8127-C9F5BDE7F68C")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2CreateCoreWebView2ControllerCompletedHandler {
    public abstract virtual void Invoke(int errorCode, ICoreWebView2Controller createdController);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("4E8A3389-C9D8-4BD2-B6B5-124FEE6CC14D")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2CreateCoreWebView2EnvironmentCompletedHandler {
    public abstract virtual void Invoke(int errorCode, ICoreWebView2Environment createdEnvironment);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("9DA43CCC-26E1-4DAD-B56C-D8961C94C571")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2CursorChangedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2CompositionController sender, object args);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("49E1D0BC-FE9E-4481-B7C2-32324AA21998")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2CustomItemSelectedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2ContextMenuItem sender, object args);
}
[CompilerGeneratedAttribute]
[GuidAttribute("C10E7F7B-B585-46F0-A623-8BEFBF3E4EE0")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Deferral {
    public abstract virtual void Complete();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("653C2959-BB3A-4377-8632-B58ADA4E66C4")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2DevToolsProtocolEventReceivedEventArgs {
    [DispIdAttribute("1610678272")]
public string ParameterObjectAsJson { get; }
    public abstract virtual string get_ParameterObjectAsJson();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("2DC4959D-1494-4393-95BA-BEA4CB9EBD1B")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2DevToolsProtocolEventReceivedEventArgs2 {
    [DispIdAttribute("1610743808")]
public string SessionId { get; }
    public void _VtblGap1_1();
    public abstract virtual string get_sessionId();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("E2FDA4BE-5456-406C-A261-3D452138362C")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2DevToolsProtocolEventReceivedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2 sender, ICoreWebView2DevToolsProtocolEventReceivedEventArgs args);
}
[CompilerGeneratedAttribute]
[GuidAttribute("B32CA51A-8371-45E9-9317-AF021D080367")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2DevToolsProtocolEventReceiver {
    public abstract virtual void add_DevToolsProtocolEventReceived(ICoreWebView2DevToolsProtocolEventReceivedEventHandler handler, EventRegistrationToken& token);
    public abstract virtual void remove_DevToolsProtocolEventReceived(EventRegistrationToken token);
}
[CompilerGeneratedAttribute]
[GuidAttribute("F5F2B923-953E-4042-9F95-F3A118E1AFD4")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2DocumentTitleChangedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2 sender, object args);
}
[CompilerGeneratedAttribute]
[GuidAttribute("16B1E21A-C503-44F2-84C9-70ABA5031283")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2DOMContentLoadedEventArgs {
    [DispIdAttribute("1610678272")]
public ulong NavigationId { get; }
    public abstract virtual ulong get_NavigationId();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("4BAC7E9C-199E-49ED-87ED-249303ACF019")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2DOMContentLoadedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2 sender, ICoreWebView2DOMContentLoadedEventArgs args);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("3D6B6CF2-AFE1-44C7-A995-C65117714336")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2DownloadOperation {
    [DispIdAttribute("1610678278")]
public string Uri { get; }
    [DispIdAttribute("1610678279")]
public string ContentDisposition { get; }
    [DispIdAttribute("1610678280")]
public string MimeType { get; }
    [DispIdAttribute("1610678281")]
public long TotalBytesToReceive { get; }
    [DispIdAttribute("1610678282")]
public long BytesReceived { get; }
    [DispIdAttribute("1610678283")]
public string EstimatedEndTime { get; }
    [DispIdAttribute("1610678284")]
public string ResultFilePath { get; }
    [DispIdAttribute("1610678285")]
public COREWEBVIEW2_DOWNLOAD_STATE State { get; }
    [DispIdAttribute("1610678286")]
public COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON InterruptReason { get; }
    [DispIdAttribute("1610678290")]
public int CanResume { get; }
    public abstract virtual void add_BytesReceivedChanged(ICoreWebView2BytesReceivedChangedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_BytesReceivedChanged(EventRegistrationToken token);
    public abstract virtual void add_EstimatedEndTimeChanged(ICoreWebView2EstimatedEndTimeChangedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_EstimatedEndTimeChanged(EventRegistrationToken token);
    public abstract virtual void add_StateChanged(ICoreWebView2StateChangedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_StateChanged(EventRegistrationToken token);
    public abstract virtual string get_uri();
    public abstract virtual string get_ContentDisposition();
    public abstract virtual string get_MimeType();
    public abstract virtual long get_TotalBytesToReceive();
    public abstract virtual long get_BytesReceived();
    public abstract virtual string get_EstimatedEndTime();
    public abstract virtual string get_ResultFilePath();
    public abstract virtual COREWEBVIEW2_DOWNLOAD_STATE get_State();
    public abstract virtual COREWEBVIEW2_DOWNLOAD_INTERRUPT_REASON get_InterruptReason();
    public abstract virtual void Cancel();
    public abstract virtual void Pause();
    public abstract virtual void Resume();
    public abstract virtual int get_CanResume();
}
[CompilerGeneratedAttribute]
[GuidAttribute("E99BBE21-43E9-4544-A732-282764EAFA60")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2DownloadStartingEventArgs {
    [DispIdAttribute("1610678272")]
public ICoreWebView2DownloadOperation DownloadOperation { get; }
    [DispIdAttribute("1610678273")]
public int Cancel { get; public set; }
    [DispIdAttribute("1610678275")]
public string ResultFilePath { get; public set; }
    [DispIdAttribute("1610678277")]
public int Handled { get; public set; }
    public abstract virtual ICoreWebView2DownloadOperation get_DownloadOperation();
    public abstract virtual int get_Cancel();
    public abstract virtual void set_Cancel(int Cancel);
    public abstract virtual string get_ResultFilePath();
    public abstract virtual void set_ResultFilePath(string ResultFilePath);
    public abstract virtual int get_Handled();
    public abstract virtual void set_Handled(int Handled);
    public abstract virtual ICoreWebView2Deferral GetDeferral();
}
[CompilerGeneratedAttribute]
[GuidAttribute("EFEDC989-C396-41CA-83F7-07F845A55724")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2DownloadStartingEventHandler {
    public abstract virtual void Invoke(ICoreWebView2 sender, ICoreWebView2DownloadStartingEventArgs args);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("B96D755E-0319-4E92-A296-23436F46A1FC")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Environment {
    [DispIdAttribute("1610678274")]
public string BrowserVersionString { get; }
    public abstract virtual void CreateCoreWebView2Controller(IntPtr ParentWindow, ICoreWebView2CreateCoreWebView2ControllerCompletedHandler handler);
    public abstract virtual ICoreWebView2WebResourceResponse CreateWebResourceResponse(IStream Content, int StatusCode, string ReasonPhrase, string Headers);
    public abstract virtual string get_BrowserVersionString();
    public abstract virtual void add_NewBrowserVersionAvailable(ICoreWebView2NewBrowserVersionAvailableEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_NewBrowserVersionAvailable(EventRegistrationToken token);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("EE0EB9DF-6F12-46CE-B53F-3F47B9C928E0")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Environment10 {
    public void _VtblGap1_17();
    public abstract virtual ICoreWebView2ControllerOptions CreateCoreWebView2ControllerOptions();
    public abstract virtual void CreateCoreWebView2ControllerWithOptions(IntPtr ParentWindow, ICoreWebView2ControllerOptions options, ICoreWebView2CreateCoreWebView2ControllerCompletedHandler handler);
    public abstract virtual void CreateCoreWebView2CompositionControllerWithOptions(IntPtr ParentWindow, ICoreWebView2ControllerOptions options, ICoreWebView2CreateCoreWebView2CompositionControllerCompletedHandler handler);
}
[CompilerGeneratedAttribute]
[GuidAttribute("41F3632B-5EF4-404F-AD82-2D606C5A9A21")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Environment2 {
    public void _VtblGap1_5();
    public abstract virtual ICoreWebView2WebResourceRequest CreateWebResourceRequest(string uri, string Method, IStream postData, string Headers);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("80A22AE3-BE7C-4CE2-AFE1-5A50056CDEEB")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Environment3 {
    public void _VtblGap1_6();
    public abstract virtual void CreateCoreWebView2CompositionController(IntPtr ParentWindow, ICoreWebView2CreateCoreWebView2CompositionControllerCompletedHandler handler);
    public abstract virtual ICoreWebView2PointerInfo CreateCoreWebView2PointerInfo();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("20944379-6DCF-41D6-A0A0-ABC0FC50DE0D")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Environment4 {
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("319E423D-E0D7-4B8D-9254-AE9475DE9B17")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Environment5 {
    public void _VtblGap1_9();
    public abstract virtual void add_BrowserProcessExited(ICoreWebView2BrowserProcessExitedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_BrowserProcessExited(EventRegistrationToken token);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("E59EE362-ACBD-4857-9A8E-D3644D9459A9")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Environment6 {
    public void _VtblGap1_11();
    public abstract virtual ICoreWebView2PrintSettings CreatePrintSettings();
}
[CompilerGeneratedAttribute]
[GuidAttribute("43C22296-3BBD-43A4-9C00-5C0DF6DD29A2")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Environment7 {
    [DispIdAttribute("1611071488")]
public string UserDataFolder { get; }
    public void _VtblGap1_12();
    public abstract virtual string get_UserDataFolder();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("D6EB91DD-C3D2-45E5-BD29-6DC2BC4DE9CF")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Environment8 {
    public void _VtblGap1_13();
    public abstract virtual void add_ProcessInfosChanged(ICoreWebView2ProcessInfosChangedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_ProcessInfosChanged(EventRegistrationToken token);
    public abstract virtual ICoreWebView2ProcessInfoCollection GetProcessInfos();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("F06F41BF-4B5A-49D8-B9F6-FA16CD29F274")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Environment9 {
    public void _VtblGap1_16();
    public abstract virtual ICoreWebView2ContextMenuItem CreateContextMenuItem(string Label, IStream iconStream, COREWEBVIEW2_CONTEXT_MENU_ITEM_KIND Kind);
}
[CompilerGeneratedAttribute]
[GuidAttribute("2FDE08A8-1E9A-4766-8C05-95A9CEB9D1C5")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2EnvironmentOptions {
    [DispIdAttribute("1610678272")]
public string AdditionalBrowserArguments { get; public set; }
    [DispIdAttribute("1610678274")]
public string Language { get; public set; }
    [DispIdAttribute("1610678276")]
public string TargetCompatibleBrowserVersion { get; public set; }
    [DispIdAttribute("1610678278")]
public int AllowSingleSignOnUsingOSPrimaryAccount { get; public set; }
    public abstract virtual string get_AdditionalBrowserArguments();
    public abstract virtual void set_AdditionalBrowserArguments(string value);
    public abstract virtual string get_Language();
    public abstract virtual void set_Language(string value);
    public abstract virtual string get_TargetCompatibleBrowserVersion();
    public abstract virtual void set_TargetCompatibleBrowserVersion(string value);
    public abstract virtual int get_AllowSingleSignOnUsingOSPrimaryAccount();
    public abstract virtual void set_AllowSingleSignOnUsingOSPrimaryAccount(int allow);
}
[CompilerGeneratedAttribute]
[GuidAttribute("FF85C98A-1BA7-4A6B-90C8-2B752C89E9E2")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2EnvironmentOptions2 {
    [DispIdAttribute("1610678272")]
public int ExclusiveUserDataFolderAccess { get; public set; }
    public abstract virtual int get_ExclusiveUserDataFolderAccess();
    public abstract virtual void set_ExclusiveUserDataFolderAccess(int value);
}
[CompilerGeneratedAttribute]
[GuidAttribute("28F0D425-93FE-4E63-9F8D-2AEEC6D3BA1E")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2EstimatedEndTimeChangedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2DownloadOperation sender, object args);
}
[CompilerGeneratedAttribute]
[GuidAttribute("49511172-CC67-4BCA-9923-137112F4C4CC")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ExecuteScriptCompletedHandler {
    public abstract virtual void Invoke(int errorCode, string resultObjectAsJson);
}
[CompilerGeneratedAttribute]
[GuidAttribute("05EA24BD-6452-4926-9014-4B82B498135D")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2FocusChangedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2Controller sender, object args);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("F1131A5E-9BA9-11EB-A8B3-0242AC130003")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Frame {
    [DispIdAttribute("1610678272")]
public string Name { get; }
    public abstract virtual string get_name();
    public abstract virtual void add_NameChanged(ICoreWebView2FrameNameChangedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_NameChanged(EventRegistrationToken token);
    public abstract virtual void AddHostObjectToScriptWithOrigins(string name, Object& object, UInt32 originsCount, String[] origins);
    public abstract virtual void RemoveHostObjectFromScript(string name);
    public abstract virtual void add_Destroyed(ICoreWebView2FrameDestroyedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_Destroyed(EventRegistrationToken token);
    public abstract virtual int IsDestroyed();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("7A6A5834-D185-4DBF-B63F-4A9BC43107D4")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Frame2 {
    public void _VtblGap1_8();
    public abstract virtual void add_NavigationStarting(ICoreWebView2FrameNavigationStartingEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_NavigationStarting(EventRegistrationToken token);
    public abstract virtual void add_ContentLoading(ICoreWebView2FrameContentLoadingEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_ContentLoading(EventRegistrationToken token);
    public abstract virtual void add_NavigationCompleted(ICoreWebView2FrameNavigationCompletedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_NavigationCompleted(EventRegistrationToken token);
    public abstract virtual void add_DOMContentLoaded(ICoreWebView2FrameDOMContentLoadedEventHandler eventHandler, EventRegistrationToken& token);
    public abstract virtual void remove_DOMContentLoaded(EventRegistrationToken token);
    public abstract virtual void ExecuteScript(string javaScript, ICoreWebView2ExecuteScriptCompletedHandler handler);
    public abstract virtual void PostWebMessageAsJson(string webMessageAsJson);
    public abstract virtual void PostWebMessageAsString(string webMessageAsString);
    public abstract virtual void add_WebMessageReceived(ICoreWebView2FrameWebMessageReceivedEventHandler handler, EventRegistrationToken& token);
    public abstract virtual void remove_WebMessageReceived(EventRegistrationToken token);
}
[CompilerGeneratedAttribute]
[GuidAttribute("B50D82CC-CC28-481D-9614-CB048895E6A0")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Frame3 {
    public void _VtblGap1_21();
    public abstract virtual void add_PermissionRequested(ICoreWebView2FramePermissionRequestedEventHandler handler, EventRegistrationToken& token);
    public abstract virtual void remove_PermissionRequested(EventRegistrationToken token);
}
[CompilerGeneratedAttribute]
[GuidAttribute("0D6156F2-D332-49A7-9E03-7D8F2FEEEE54")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2FrameContentLoadingEventHandler {
    public abstract virtual void Invoke(ICoreWebView2Frame sender, ICoreWebView2ContentLoadingEventArgs args);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("4D6E7B5E-9BAA-11EB-A8B3-0242AC130003")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2FrameCreatedEventArgs {
    [DispIdAttribute("1610678272")]
public ICoreWebView2Frame Frame { get; }
    public abstract virtual ICoreWebView2Frame get_Frame();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("38059770-9BAA-11EB-A8B3-0242AC130003")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2FrameCreatedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2 sender, ICoreWebView2FrameCreatedEventArgs args);
}
[CompilerGeneratedAttribute]
[GuidAttribute("59DD7B4C-9BAA-11EB-A8B3-0242AC130003")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2FrameDestroyedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2Frame sender, object args);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("38D9520D-340F-4D1E-A775-43FCE9753683")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2FrameDOMContentLoadedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2Frame sender, ICoreWebView2DOMContentLoadedEventArgs args);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("DA86B8A1-BDF3-4F11-9955-528CEFA59727")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2FrameInfo {
    [DispIdAttribute("1610678272")]
public string Name { get; }
    [DispIdAttribute("1610678273")]
public string Source { get; }
    public abstract virtual string get_name();
    public abstract virtual string get_Source();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("8F834154-D38E-4D90-AFFB-6800A7272839")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2FrameInfoCollection {
    public abstract virtual ICoreWebView2FrameInfoCollectionIterator GetIterator();
}
[CompilerGeneratedAttribute]
[GuidAttribute("1BF89E2D-1B2B-4629-B28F-05099B41BB03")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2FrameInfoCollectionIterator {
    [DispIdAttribute("1610678272")]
public int HasCurrent { get; }
    public abstract virtual int get_hasCurrent();
    public abstract virtual ICoreWebView2FrameInfo GetCurrent();
    public abstract virtual int MoveNext();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("435C7DC8-9BAA-11EB-A8B3-0242AC130003")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2FrameNameChangedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2Frame sender, object args);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("609302AD-0E36-4F9A-A210-6A45272842A9")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2FrameNavigationCompletedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2Frame sender, ICoreWebView2NavigationCompletedEventArgs args);
}
[CompilerGeneratedAttribute]
[GuidAttribute("E79908BF-2D5D-4968-83DB-263FEA2C1DA3")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2FrameNavigationStartingEventHandler {
    public abstract virtual void Invoke(ICoreWebView2Frame sender, ICoreWebView2NavigationStartingEventArgs args);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("845D0EDD-8BD8-429B-9915-4821789F23E9")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2FramePermissionRequestedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2Frame sender, ICoreWebView2PermissionRequestedEventArgs2 args);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("E371E005-6D1D-4517-934B-A8F1629C62A5")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2FrameWebMessageReceivedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2Frame sender, ICoreWebView2WebMessageReceivedEventArgs args);
}
[CompilerGeneratedAttribute]
[GuidAttribute("5A4F5069-5C15-47C3-8646-F4DE1C116670")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2GetCookiesCompletedHandler {
    public abstract virtual void Invoke(int result, ICoreWebView2CookieList cookieList);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("C79A420C-EFD9-4058-9295-3E8B4BCAB645")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2HistoryChangedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2 sender, object args);
}
[CompilerGeneratedAttribute]
[GuidAttribute("0702FC30-F43B-47BB-AB52-A42CB552AD9F")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2HttpHeadersCollectionIterator {
    [DispIdAttribute("1610678273")]
public int HasCurrentHeader { get; }
    public abstract virtual void GetCurrentHeader(String& name, String& value);
    public abstract virtual int get_HasCurrentHeader();
    public abstract virtual int MoveNext();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("E86CAC0E-5523-465C-B536-8FB9FC8C8C60")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2HttpRequestHeaders {
    public abstract virtual string GetHeader(string name);
    public abstract virtual ICoreWebView2HttpHeadersCollectionIterator GetHeaders(string name);
    public abstract virtual int Contains(string name);
    public abstract virtual void SetHeader(string name, string value);
    public abstract virtual void RemoveHeader(string name);
    public abstract virtual ICoreWebView2HttpHeadersCollectionIterator GetIterator();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("03C5FF5A-9B45-4A88-881C-89A9F328619C")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2HttpResponseHeaders {
    public abstract virtual void AppendHeader(string name, string value);
    public abstract virtual int Contains(string name);
    public abstract virtual string GetHeader(string name);
    public abstract virtual ICoreWebView2HttpHeadersCollectionIterator GetHeaders(string name);
    public abstract virtual ICoreWebView2HttpHeadersCollectionIterator GetIterator();
}
[CompilerGeneratedAttribute]
[GuidAttribute("3117DA26-AE13-438D-BD46-EDBEB2C4CE81")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2IsDefaultDownloadDialogOpenChangedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2 sender, object args);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("5DEF109A-2F4B-49FA-B7F6-11C39E513328")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2IsDocumentPlayingAudioChangedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2 sender, object args);
}
[CompilerGeneratedAttribute]
[GuidAttribute("57D90347-CD0E-4952-A4A2-7483A2756F08")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2IsMutedChangedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2 sender, object args);
}
[CompilerGeneratedAttribute]
[GuidAttribute("2D6AA13B-3839-4A15-92FC-D88B3C0D9C9D")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2MoveFocusRequestedEventArgs {
    [DispIdAttribute("1610678272")]
public COREWEBVIEW2_MOVE_FOCUS_REASON Reason { get; }
    [DispIdAttribute("1610678273")]
public int Handled { get; public set; }
    public abstract virtual COREWEBVIEW2_MOVE_FOCUS_REASON get_reason();
    public abstract virtual int get_Handled();
    public abstract virtual void set_Handled(int value);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("69035451-6DC7-4CB8-9BCE-B2BD70AD289F")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2MoveFocusRequestedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2Controller sender, ICoreWebView2MoveFocusRequestedEventArgs args);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("30D68B7D-20D9-4752-A9CA-EC8448FBB5C1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2NavigationCompletedEventArgs {
    [DispIdAttribute("1610678272")]
public int IsSuccess { get; }
    [DispIdAttribute("1610678273")]
public COREWEBVIEW2_WEB_ERROR_STATUS WebErrorStatus { get; }
    [DispIdAttribute("1610678274")]
public ulong NavigationId { get; }
    public abstract virtual int get_IsSuccess();
    public abstract virtual COREWEBVIEW2_WEB_ERROR_STATUS get_WebErrorStatus();
    public abstract virtual ulong get_NavigationId();
}
[CompilerGeneratedAttribute]
[GuidAttribute("FDF8B738-EE1E-4DB2-A329-8D7D7B74D792")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2NavigationCompletedEventArgs2 {
    [DispIdAttribute("1610743808")]
public int HttpStatusCode { get; }
    public void _VtblGap1_3();
    public abstract virtual int get_HttpStatusCode();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("D33A35BF-1C49-4F98-93AB-006E0533FE1C")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2NavigationCompletedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2 sender, ICoreWebView2NavigationCompletedEventArgs args);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("5B495469-E119-438A-9B18-7604F25F2E49")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2NavigationStartingEventArgs {
    [DispIdAttribute("1610678272")]
public string Uri { get; }
    [DispIdAttribute("1610678273")]
public int IsUserInitiated { get; }
    [DispIdAttribute("1610678274")]
public int IsRedirected { get; }
    [DispIdAttribute("1610678275")]
public ICoreWebView2HttpRequestHeaders RequestHeaders { get; }
    [DispIdAttribute("1610678276")]
public int Cancel { get; public set; }
    [DispIdAttribute("1610678278")]
public ulong NavigationId { get; }
    public abstract virtual string get_uri();
    public abstract virtual int get_IsUserInitiated();
    public abstract virtual int get_IsRedirected();
    public abstract virtual ICoreWebView2HttpRequestHeaders get_RequestHeaders();
    public abstract virtual int get_Cancel();
    public abstract virtual void set_Cancel(int Cancel);
    public abstract virtual ulong get_NavigationId();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("9086BE93-91AA-472D-A7E0-579F2BA006AD")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2NavigationStartingEventArgs2 {
    [DispIdAttribute("1610743808")]
public string AdditionalAllowedFrameAncestors { get; public set; }
    public void _VtblGap1_7();
    public abstract virtual string get_AdditionalAllowedFrameAncestors();
    public abstract virtual void set_AdditionalAllowedFrameAncestors(string value);
}
[CompilerGeneratedAttribute]
[GuidAttribute("9ADBE429-F36D-432B-9DDC-F8881FBD76E3")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2NavigationStartingEventHandler {
    public abstract virtual void Invoke(ICoreWebView2 sender, ICoreWebView2NavigationStartingEventArgs args);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("F9A2976E-D34E-44FC-ADEE-81B6B57CA914")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2NewBrowserVersionAvailableEventHandler {
    public abstract virtual void Invoke(ICoreWebView2Environment sender, object args);
}
[CompilerGeneratedAttribute]
[GuidAttribute("34ACB11C-FC37-4418-9132-F9C21D1EAFB9")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2NewWindowRequestedEventArgs {
    [DispIdAttribute("1610678272")]
public string Uri { get; }
    [DispIdAttribute("1610678273")]
public ICoreWebView2 NewWindow { get; public set; }
    [DispIdAttribute("1610678275")]
public int Handled { get; public set; }
    [DispIdAttribute("1610678277")]
public int IsUserInitiated { get; }
    [DispIdAttribute("1610678279")]
public ICoreWebView2WindowFeatures WindowFeatures { get; }
    public abstract virtual string get_uri();
    public abstract virtual void set_NewWindow(ICoreWebView2 NewWindow);
    public abstract virtual ICoreWebView2 get_NewWindow();
    public abstract virtual void set_Handled(int Handled);
    public abstract virtual int get_Handled();
    public abstract virtual int get_IsUserInitiated();
    public abstract virtual ICoreWebView2Deferral GetDeferral();
    public abstract virtual ICoreWebView2WindowFeatures get_WindowFeatures();
}
[CompilerGeneratedAttribute]
[GuidAttribute("BBC7BAED-74C6-4C92-B63A-7F5AEAE03DE3")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2NewWindowRequestedEventArgs2 {
    [DispIdAttribute("1610743808")]
public string Name { get; }
    public void _VtblGap1_8();
    public abstract virtual string get_name();
}
[CompilerGeneratedAttribute]
[GuidAttribute("D4C185FE-C81C-4989-97AF-2D3FA7AB5651")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2NewWindowRequestedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2 sender, ICoreWebView2NewWindowRequestedEventArgs args);
}
[CompilerGeneratedAttribute]
[GuidAttribute("973AE2EF-FF18-4894-8FB2-3C758F046810")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2PermissionRequestedEventArgs {
    [DispIdAttribute("1610678272")]
public string Uri { get; }
    [DispIdAttribute("1610678273")]
public COREWEBVIEW2_PERMISSION_KIND PermissionKind { get; }
    [DispIdAttribute("1610678274")]
public int IsUserInitiated { get; }
    [DispIdAttribute("1610678275")]
public COREWEBVIEW2_PERMISSION_STATE State { get; public set; }
    public abstract virtual string get_uri();
    public abstract virtual COREWEBVIEW2_PERMISSION_KIND get_PermissionKind();
    public abstract virtual int get_IsUserInitiated();
    public abstract virtual COREWEBVIEW2_PERMISSION_STATE get_State();
    public abstract virtual void set_State(COREWEBVIEW2_PERMISSION_STATE State);
    public abstract virtual ICoreWebView2Deferral GetDeferral();
}
[CompilerGeneratedAttribute]
[GuidAttribute("74D7127F-9DE6-4200-8734-42D6FB4FF741")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2PermissionRequestedEventArgs2 {
    [DispIdAttribute("1610743808")]
public int Handled { get; public set; }
    public void _VtblGap1_6();
    public abstract virtual int get_Handled();
    public abstract virtual void set_Handled(int Handled);
}
[CompilerGeneratedAttribute]
[GuidAttribute("15E1C6A3-C72A-4DF3-91D7-D097FBEC6BFD")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2PermissionRequestedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2 sender, ICoreWebView2PermissionRequestedEventArgs args);
}
[CompilerGeneratedAttribute]
[GuidAttribute("E6995887-D10D-4F5D-9359-4CE46E4F96B9")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2PointerInfo {
    [DispIdAttribute("1610678272")]
public UInt32 PointerKind { get; public set; }
    [DispIdAttribute("1610678274")]
public UInt32 PointerId { get; public set; }
    [DispIdAttribute("1610678276")]
public UInt32 FrameId { get; public set; }
    [DispIdAttribute("1610678278")]
public UInt32 PointerFlags { get; public set; }
    [DispIdAttribute("1610678280")]
public tagRECT PointerDeviceRect { get; public set; }
    [DispIdAttribute("1610678282")]
public tagRECT DisplayRect { get; public set; }
    [DispIdAttribute("1610678284")]
public tagPOINT PixelLocation { get; public set; }
    [DispIdAttribute("1610678286")]
public tagPOINT HimetricLocation { get; public set; }
    [DispIdAttribute("1610678288")]
public tagPOINT PixelLocationRaw { get; public set; }
    [DispIdAttribute("1610678290")]
public tagPOINT HimetricLocationRaw { get; public set; }
    [DispIdAttribute("1610678292")]
public UInt32 Time { get; public set; }
    [DispIdAttribute("1610678294")]
public UInt32 HistoryCount { get; public set; }
    [DispIdAttribute("1610678296")]
public int InputData { get; public set; }
    [DispIdAttribute("1610678298")]
public UInt32 KeyStates { get; public set; }
    [DispIdAttribute("1610678300")]
public ulong PerformanceCount { get; public set; }
    [DispIdAttribute("1610678302")]
public int ButtonChangeKind { get; public set; }
    [DispIdAttribute("1610678304")]
public UInt32 PenFlags { get; public set; }
    [DispIdAttribute("1610678306")]
public UInt32 PenMask { get; public set; }
    [DispIdAttribute("1610678308")]
public UInt32 PenPressure { get; public set; }
    [DispIdAttribute("1610678310")]
public UInt32 PenRotation { get; public set; }
    [DispIdAttribute("1610678312")]
public int PenTiltX { get; public set; }
    [DispIdAttribute("1610678314")]
public int PenTiltY { get; public set; }
    [DispIdAttribute("1610678316")]
public UInt32 TouchFlags { get; public set; }
    [DispIdAttribute("1610678318")]
public UInt32 TouchMask { get; public set; }
    [DispIdAttribute("1610678320")]
public tagRECT TouchContact { get; public set; }
    [DispIdAttribute("1610678322")]
public tagRECT TouchContactRaw { get; public set; }
    [DispIdAttribute("1610678324")]
public UInt32 TouchOrientation { get; public set; }
    [DispIdAttribute("1610678326")]
public UInt32 TouchPressure { get; public set; }
    public abstract virtual UInt32 get_PointerKind();
    public abstract virtual void set_PointerKind(UInt32 PointerKind);
    public abstract virtual UInt32 get_PointerId();
    public abstract virtual void set_PointerId(UInt32 PointerId);
    public abstract virtual UInt32 get_FrameId();
    public abstract virtual void set_FrameId(UInt32 FrameId);
    public abstract virtual UInt32 get_PointerFlags();
    public abstract virtual void set_PointerFlags(UInt32 PointerFlags);
    public abstract virtual tagRECT get_PointerDeviceRect();
    public abstract virtual void set_PointerDeviceRect(tagRECT PointerDeviceRect);
    public abstract virtual tagRECT get_DisplayRect();
    public abstract virtual void set_DisplayRect(tagRECT DisplayRect);
    public abstract virtual tagPOINT get_PixelLocation();
    public abstract virtual void set_PixelLocation(tagPOINT PixelLocation);
    public abstract virtual tagPOINT get_HimetricLocation();
    public abstract virtual void set_HimetricLocation(tagPOINT HimetricLocation);
    public abstract virtual tagPOINT get_PixelLocationRaw();
    public abstract virtual void set_PixelLocationRaw(tagPOINT PixelLocationRaw);
    public abstract virtual tagPOINT get_HimetricLocationRaw();
    public abstract virtual void set_HimetricLocationRaw(tagPOINT HimetricLocationRaw);
    public abstract virtual UInt32 get_Time();
    public abstract virtual void set_Time(UInt32 Time);
    public abstract virtual UInt32 get_HistoryCount();
    public abstract virtual void set_HistoryCount(UInt32 HistoryCount);
    public abstract virtual int get_InputData();
    public abstract virtual void set_InputData(int InputData);
    public abstract virtual UInt32 get_KeyStates();
    public abstract virtual void set_KeyStates(UInt32 KeyStates);
    public abstract virtual ulong get_PerformanceCount();
    public abstract virtual void set_PerformanceCount(ulong PerformanceCount);
    public abstract virtual int get_ButtonChangeKind();
    public abstract virtual void set_ButtonChangeKind(int ButtonChangeKind);
    public abstract virtual UInt32 get_PenFlags();
    public abstract virtual void set_PenFlags(UInt32 PenFlags);
    public abstract virtual UInt32 get_PenMask();
    public abstract virtual void set_PenMask(UInt32 PenMask);
    public abstract virtual UInt32 get_PenPressure();
    public abstract virtual void set_PenPressure(UInt32 PenPressure);
    public abstract virtual UInt32 get_PenRotation();
    public abstract virtual void set_PenRotation(UInt32 PenRotation);
    public abstract virtual int get_PenTiltX();
    public abstract virtual void set_PenTiltX(int PenTiltX);
    public abstract virtual int get_PenTiltY();
    public abstract virtual void set_PenTiltY(int PenTiltY);
    public abstract virtual UInt32 get_TouchFlags();
    public abstract virtual void set_TouchFlags(UInt32 TouchFlags);
    public abstract virtual UInt32 get_TouchMask();
    public abstract virtual void set_TouchMask(UInt32 TouchMask);
    public abstract virtual tagRECT get_TouchContact();
    public abstract virtual void set_TouchContact(tagRECT TouchContact);
    public abstract virtual tagRECT get_TouchContactRaw();
    public abstract virtual void set_TouchContactRaw(tagRECT TouchContactRaw);
    public abstract virtual UInt32 get_TouchOrientation();
    public abstract virtual void set_TouchOrientation(UInt32 TouchOrientation);
    public abstract virtual UInt32 get_TouchPressure();
    public abstract virtual void set_TouchPressure(UInt32 TouchPressure);
}
[CompilerGeneratedAttribute]
[GuidAttribute("377F3721-C74E-48CA-8DB1-DF68E51D60E2")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2PrintSettings {
    [DispIdAttribute("1610678272")]
public COREWEBVIEW2_PRINT_ORIENTATION Orientation { get; public set; }
    [DispIdAttribute("1610678274")]
public double ScaleFactor { get; public set; }
    [DispIdAttribute("1610678276")]
public double PageWidth { get; public set; }
    [DispIdAttribute("1610678278")]
public double PageHeight { get; public set; }
    [DispIdAttribute("1610678280")]
public double MarginTop { get; public set; }
    [DispIdAttribute("1610678282")]
public double MarginBottom { get; public set; }
    [DispIdAttribute("1610678284")]
public double MarginLeft { get; public set; }
    [DispIdAttribute("1610678286")]
public double MarginRight { get; public set; }
    [DispIdAttribute("1610678288")]
public int ShouldPrintBackgrounds { get; public set; }
    [DispIdAttribute("1610678290")]
public int ShouldPrintSelectionOnly { get; public set; }
    [DispIdAttribute("1610678292")]
public int ShouldPrintHeaderAndFooter { get; public set; }
    [DispIdAttribute("1610678294")]
public string HeaderTitle { get; public set; }
    [DispIdAttribute("1610678296")]
public string FooterUri { get; public set; }
    public abstract virtual COREWEBVIEW2_PRINT_ORIENTATION get_Orientation();
    public abstract virtual void set_Orientation(COREWEBVIEW2_PRINT_ORIENTATION Orientation);
    public abstract virtual double get_ScaleFactor();
    public abstract virtual void set_ScaleFactor(double ScaleFactor);
    public abstract virtual double get_PageWidth();
    public abstract virtual void set_PageWidth(double PageWidth);
    public abstract virtual double get_PageHeight();
    public abstract virtual void set_PageHeight(double PageHeight);
    public abstract virtual double get_MarginTop();
    public abstract virtual void set_MarginTop(double MarginTop);
    public abstract virtual double get_MarginBottom();
    public abstract virtual void set_MarginBottom(double MarginBottom);
    public abstract virtual double get_MarginLeft();
    public abstract virtual void set_MarginLeft(double MarginLeft);
    public abstract virtual double get_MarginRight();
    public abstract virtual void set_MarginRight(double MarginRight);
    public abstract virtual int get_ShouldPrintBackgrounds();
    public abstract virtual void set_ShouldPrintBackgrounds(int ShouldPrintBackgrounds);
    public abstract virtual int get_ShouldPrintSelectionOnly();
    public abstract virtual void set_ShouldPrintSelectionOnly(int ShouldPrintSelectionOnly);
    public abstract virtual int get_ShouldPrintHeaderAndFooter();
    public abstract virtual void set_ShouldPrintHeaderAndFooter(int ShouldPrintHeaderAndFooter);
    public abstract virtual string get_HeaderTitle();
    public abstract virtual void set_HeaderTitle(string HeaderTitle);
    public abstract virtual string get_FooterUri();
    public abstract virtual void set_FooterUri(string FooterUri);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("CCF1EF04-FD8E-4D5F-B2DE-0983E41B8C36")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2PrintToPdfCompletedHandler {
    public abstract virtual void Invoke(int errorCode, int isSuccessful);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("8155A9A4-1474-4A86-8CAE-151B0FA6B8CA")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ProcessFailedEventArgs {
    [DispIdAttribute("1610678272")]
public COREWEBVIEW2_PROCESS_FAILED_KIND ProcessFailedKind { get; }
    public abstract virtual COREWEBVIEW2_PROCESS_FAILED_KIND get_ProcessFailedKind();
}
[CompilerGeneratedAttribute]
[GuidAttribute("4DAB9422-46FA-4C3E-A5D2-41D2071D3680")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ProcessFailedEventArgs2 {
    [DispIdAttribute("1610743808")]
public COREWEBVIEW2_PROCESS_FAILED_REASON Reason { get; }
    [DispIdAttribute("1610743809")]
public int ExitCode { get; }
    [DispIdAttribute("1610743810")]
public string ProcessDescription { get; }
    [DispIdAttribute("1610743811")]
public ICoreWebView2FrameInfoCollection FrameInfosForFailedProcess { get; }
    public void _VtblGap1_1();
    public abstract virtual COREWEBVIEW2_PROCESS_FAILED_REASON get_reason();
    public abstract virtual int get_ExitCode();
    public abstract virtual string get_ProcessDescription();
    public abstract virtual ICoreWebView2FrameInfoCollection get_FrameInfosForFailedProcess();
}
[CompilerGeneratedAttribute]
[GuidAttribute("79E0AEA4-990B-42D9-AA1D-0FCC2E5BC7F1")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ProcessFailedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2 sender, ICoreWebView2ProcessFailedEventArgs args);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("84FA7612-3F3D-4FBF-889D-FAD000492D72")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ProcessInfo {
    [DispIdAttribute("1610678272")]
public int ProcessId { get; }
    [DispIdAttribute("1610678273")]
public COREWEBVIEW2_PROCESS_KIND Kind { get; }
    public abstract virtual int get_ProcessId();
    public abstract virtual COREWEBVIEW2_PROCESS_KIND get_Kind();
}
[CompilerGeneratedAttribute]
[GuidAttribute("402B99CD-A0CC-4FA5-B7A5-51D86A1D2339")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ProcessInfoCollection {
    [DispIdAttribute("1610678272")]
public UInt32 Count { get; }
    public abstract virtual UInt32 get_Count();
    public abstract virtual ICoreWebView2ProcessInfo GetValueAtIndex(UInt32 index);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("F4AF0C39-44B9-40E9-8B11-0484CFB9E0A1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ProcessInfosChangedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2Environment sender, object args);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("79110AD3-CD5D-4373-8BC3-C60658F17A5F")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Profile {
    [DispIdAttribute("1610678272")]
public string ProfileName { get; }
    [DispIdAttribute("1610678273")]
public int IsInPrivateModeEnabled { get; }
    [DispIdAttribute("1610678274")]
public string ProfilePath { get; }
    [DispIdAttribute("1610678275")]
public string DefaultDownloadFolderPath { get; public set; }
    [DispIdAttribute("1610678277")]
public COREWEBVIEW2_PREFERRED_COLOR_SCHEME PreferredColorScheme { get; public set; }
    public abstract virtual string get_ProfileName();
    public abstract virtual int get_IsInPrivateModeEnabled();
    public abstract virtual string get_ProfilePath();
    public abstract virtual string get_DefaultDownloadFolderPath();
    public abstract virtual void set_DefaultDownloadFolderPath(string value);
    public abstract virtual COREWEBVIEW2_PREFERRED_COLOR_SCHEME get_PreferredColorScheme();
    public abstract virtual void set_PreferredColorScheme(COREWEBVIEW2_PREFERRED_COLOR_SCHEME value);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("FA740D4B-5EAE-4344-A8AD-74BE31925397")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Profile2 {
    public void _VtblGap1_7();
    public abstract virtual void ClearBrowsingData(COREWEBVIEW2_BROWSING_DATA_KINDS dataKinds, ICoreWebView2ClearBrowsingDataCompletedHandler handler);
    public abstract virtual void ClearBrowsingDataInTimeRange(COREWEBVIEW2_BROWSING_DATA_KINDS dataKinds, double startTime, double endTime, ICoreWebView2ClearBrowsingDataCompletedHandler handler);
    public abstract virtual void ClearBrowsingDataAll(ICoreWebView2ClearBrowsingDataCompletedHandler handler);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("9C98C8B1-AC53-427E-A345-3049B5524BBE")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2RasterizationScaleChangedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2Controller sender, object args);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("7390BB70-ABE0-4843-9529-F143B31B03D6")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ScriptDialogOpeningEventArgs {
    [DispIdAttribute("1610678272")]
public string Uri { get; }
    [DispIdAttribute("1610678273")]
public COREWEBVIEW2_SCRIPT_DIALOG_KIND Kind { get; }
    [DispIdAttribute("1610678274")]
public string Message { get; }
    [DispIdAttribute("1610678276")]
public string DefaultText { get; }
    [DispIdAttribute("1610678277")]
public string ResultText { get; public set; }
    public abstract virtual string get_uri();
    public abstract virtual COREWEBVIEW2_SCRIPT_DIALOG_KIND get_Kind();
    public abstract virtual string get_Message();
    public abstract virtual void Accept();
    public abstract virtual string get_DefaultText();
    public abstract virtual string get_ResultText();
    public abstract virtual void set_ResultText(string ResultText);
    public abstract virtual ICoreWebView2Deferral GetDeferral();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("EF381BF9-AFA8-4E37-91C4-8AC48524BDFB")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ScriptDialogOpeningEventHandler {
    public abstract virtual void Invoke(ICoreWebView2 sender, ICoreWebView2ScriptDialogOpeningEventArgs args);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("012193ED-7C13-48FF-969D-A84C1F432A14")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ServerCertificateErrorDetectedEventArgs {
    [DispIdAttribute("1610678272")]
public COREWEBVIEW2_WEB_ERROR_STATUS ErrorStatus { get; }
    [DispIdAttribute("1610678273")]
public string RequestUri { get; }
    [DispIdAttribute("1610678274")]
public ICoreWebView2Certificate ServerCertificate { get; }
    [DispIdAttribute("1610678275")]
public COREWEBVIEW2_SERVER_CERTIFICATE_ERROR_ACTION Action { get; public set; }
    public abstract virtual COREWEBVIEW2_WEB_ERROR_STATUS get_ErrorStatus();
    public abstract virtual string get_RequestUri();
    public abstract virtual ICoreWebView2Certificate get_ServerCertificate();
    public abstract virtual COREWEBVIEW2_SERVER_CERTIFICATE_ERROR_ACTION get_Action();
    public abstract virtual void set_Action(COREWEBVIEW2_SERVER_CERTIFICATE_ERROR_ACTION value);
    public abstract virtual ICoreWebView2Deferral GetDeferral();
}
[CompilerGeneratedAttribute]
[GuidAttribute("969B3A26-D85E-4795-8199-FEF57344DA22")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ServerCertificateErrorDetectedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2 sender, ICoreWebView2ServerCertificateErrorDetectedEventArgs args);
}
[CompilerGeneratedAttribute]
[GuidAttribute("E562E4F0-D7FA-43AC-8D71-C05150499F00")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Settings {
    [DispIdAttribute("1610678272")]
public int IsScriptEnabled { get; public set; }
    [DispIdAttribute("1610678274")]
public int IsWebMessageEnabled { get; public set; }
    [DispIdAttribute("1610678276")]
public int AreDefaultScriptDialogsEnabled { get; public set; }
    [DispIdAttribute("1610678278")]
public int IsStatusBarEnabled { get; public set; }
    [DispIdAttribute("1610678280")]
public int AreDevToolsEnabled { get; public set; }
    [DispIdAttribute("1610678282")]
public int AreDefaultContextMenusEnabled { get; public set; }
    [DispIdAttribute("1610678284")]
public int AreHostObjectsAllowed { get; public set; }
    [DispIdAttribute("1610678286")]
public int IsZoomControlEnabled { get; public set; }
    [DispIdAttribute("1610678288")]
public int IsBuiltInErrorPageEnabled { get; public set; }
    public abstract virtual int get_IsScriptEnabled();
    public abstract virtual void set_IsScriptEnabled(int IsScriptEnabled);
    public abstract virtual int get_IsWebMessageEnabled();
    public abstract virtual void set_IsWebMessageEnabled(int IsWebMessageEnabled);
    public abstract virtual int get_AreDefaultScriptDialogsEnabled();
    public abstract virtual void set_AreDefaultScriptDialogsEnabled(int AreDefaultScriptDialogsEnabled);
    public abstract virtual int get_IsStatusBarEnabled();
    public abstract virtual void set_IsStatusBarEnabled(int IsStatusBarEnabled);
    public abstract virtual int get_AreDevToolsEnabled();
    public abstract virtual void set_AreDevToolsEnabled(int AreDevToolsEnabled);
    public abstract virtual int get_AreDefaultContextMenusEnabled();
    public abstract virtual void set_AreDefaultContextMenusEnabled(int enabled);
    public abstract virtual int get_AreHostObjectsAllowed();
    public abstract virtual void set_AreHostObjectsAllowed(int allowed);
    public abstract virtual int get_IsZoomControlEnabled();
    public abstract virtual void set_IsZoomControlEnabled(int enabled);
    public abstract virtual int get_IsBuiltInErrorPageEnabled();
    public abstract virtual void set_IsBuiltInErrorPageEnabled(int enabled);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("EE9A0F68-F46C-4E32-AC23-EF8CAC224D2A")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Settings2 {
    [DispIdAttribute("1610743808")]
public string UserAgent { get; public set; }
    public void _VtblGap1_18();
    public abstract virtual string get_UserAgent();
    public abstract virtual void set_UserAgent(string UserAgent);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("FDB5AB74-AF33-4854-84F0-0A631DEB5EBA")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Settings3 {
    [DispIdAttribute("1610809344")]
public int AreBrowserAcceleratorKeysEnabled { get; public set; }
    public void _VtblGap1_20();
    public abstract virtual int get_AreBrowserAcceleratorKeysEnabled();
    public abstract virtual void set_AreBrowserAcceleratorKeysEnabled(int AreBrowserAcceleratorKeysEnabled);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("CB56846C-4168-4D53-B04F-03B6D6796FF2")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Settings4 {
    [DispIdAttribute("1610874880")]
public int IsPasswordAutosaveEnabled { get; public set; }
    [DispIdAttribute("1610874882")]
public int IsGeneralAutofillEnabled { get; public set; }
    public void _VtblGap1_22();
    public abstract virtual int get_IsPasswordAutosaveEnabled();
    public abstract virtual void set_IsPasswordAutosaveEnabled(int value);
    public abstract virtual int get_IsGeneralAutofillEnabled();
    public abstract virtual void set_IsGeneralAutofillEnabled(int value);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("183E7052-1D03-43A0-AB99-98E043B66B39")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Settings5 {
    [DispIdAttribute("1610940416")]
public int IsPinchZoomEnabled { get; public set; }
    public void _VtblGap1_26();
    public abstract virtual int get_IsPinchZoomEnabled();
    public abstract virtual void set_IsPinchZoomEnabled(int enabled);
}
[CompilerGeneratedAttribute]
[GuidAttribute("11CB3ACD-9BC8-43B8-83BF-F40753714F87")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Settings6 {
    [DispIdAttribute("1611005952")]
public int IsSwipeNavigationEnabled { get; public set; }
    public void _VtblGap1_28();
    public abstract virtual int get_IsSwipeNavigationEnabled();
    public abstract virtual void set_IsSwipeNavigationEnabled(int enabled);
}
[CompilerGeneratedAttribute]
[GuidAttribute("488DC902-35EF-42D2-BC7D-94B65C4BC49C")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Settings7 {
    [DispIdAttribute("1611071488")]
public COREWEBVIEW2_PDF_TOOLBAR_ITEMS HiddenPdfToolbarItems { get; public set; }
    public void _VtblGap1_30();
    public abstract virtual COREWEBVIEW2_PDF_TOOLBAR_ITEMS get_HiddenPdfToolbarItems();
    public abstract virtual void set_HiddenPdfToolbarItems(COREWEBVIEW2_PDF_TOOLBAR_ITEMS hidden_pdf_toolbar_items);
}
[CompilerGeneratedAttribute]
[GuidAttribute("31E0E545-1DBA-4266-8914-F63848A1F7D7")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2SourceChangedEventArgs {
    [DispIdAttribute("1610678272")]
public int IsNewDocument { get; }
    public abstract virtual int get_IsNewDocument();
}
[CompilerGeneratedAttribute]
[GuidAttribute("3C067F9F-5388-4772-8B48-79F7EF1AB37C")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2SourceChangedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2 sender, ICoreWebView2SourceChangedEventArgs args);
}
[GuidAttribute("2C94DD56-E252-40A1-BA7E-B19417B26A60")]
[InterfaceTypeAttribute("1")]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2Staging {
    public abstract virtual void AddHostObjectHelper(ICoreWebView2StagingHostObjectHelper helper);
}
[GuidAttribute("DF362C62-3B8E-484A-8DE0-FE2CB31EDBC5")]
[InterfaceTypeAttribute("1")]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2StagingHostObjectHelper {
    public abstract virtual int IsMethodMember(Object& rawObject, string memberName);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("81336594-7EDE-4BA9-BF71-ACF0A95B58DD")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2StateChangedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2DownloadOperation sender, object args);
}
[CompilerGeneratedAttribute]
[GuidAttribute("A5E3B0D0-10DF-4156-BFAD-3B43867ACAC6")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2StatusBarTextChangedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2 sender, object args);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("F41F3F8A-BCC3-11EB-8529-0242AC130003")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2StringCollection {
    [DispIdAttribute("1610678272")]
public UInt32 Count { get; }
    public abstract virtual UInt32 get_Count();
    public abstract virtual string GetValueAtIndex(UInt32 index);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("00F206A7-9D17-4605-91F6-4E8E4DE192E3")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2TrySuspendCompletedHandler {
    public abstract virtual void Invoke(int errorCode, int isSuccessful);
}
[CompilerGeneratedAttribute]
[GuidAttribute("0F99A40C-E962-4207-9E92-E3D542EFF849")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2WebMessageReceivedEventArgs {
    [DispIdAttribute("1610678272")]
public string Source { get; }
    [DispIdAttribute("1610678273")]
public string WebMessageAsJson { get; }
    public abstract virtual string get_Source();
    public abstract virtual string get_webMessageAsJson();
    public abstract virtual string TryGetWebMessageAsString();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("57213F19-00E6-49FA-8E07-898EA01ECBD2")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2WebMessageReceivedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2 sender, ICoreWebView2WebMessageReceivedEventArgs args);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("97055CD4-512C-4264-8B5F-E3F446CEA6A5")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2WebResourceRequest {
    [DispIdAttribute("1610678272")]
public string Uri { get; public set; }
    [DispIdAttribute("1610678274")]
public string Method { get; public set; }
    [DispIdAttribute("1610678276")]
public IStream Content { get; public set; }
    [DispIdAttribute("1610678278")]
public ICoreWebView2HttpRequestHeaders Headers { get; }
    public abstract virtual string get_uri();
    public abstract virtual void set_uri(string uri);
    public abstract virtual string get_Method();
    public abstract virtual void set_Method(string Method);
    public abstract virtual IStream get_Content();
    public abstract virtual void set_Content(IStream Content);
    public abstract virtual ICoreWebView2HttpRequestHeaders get_Headers();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("453E667F-12C7-49D4-BE6D-DDBE7956F57A")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2WebResourceRequestedEventArgs {
    [DispIdAttribute("1610678272")]
public ICoreWebView2WebResourceRequest Request { get; }
    [DispIdAttribute("1610678273")]
public ICoreWebView2WebResourceResponse Response { get; public set; }
    [DispIdAttribute("1610678276")]
public COREWEBVIEW2_WEB_RESOURCE_CONTEXT ResourceContext { get; }
    public abstract virtual ICoreWebView2WebResourceRequest get_Request();
    public abstract virtual ICoreWebView2WebResourceResponse get_Response();
    public abstract virtual void set_Response(ICoreWebView2WebResourceResponse Response);
    public abstract virtual ICoreWebView2Deferral GetDeferral();
    public abstract virtual COREWEBVIEW2_WEB_RESOURCE_CONTEXT get_ResourceContext();
}
[CompilerGeneratedAttribute]
[GuidAttribute("AB00B74C-15F1-4646-80E8-E76341D25D71")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2WebResourceRequestedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2 sender, ICoreWebView2WebResourceRequestedEventArgs args);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("AAFCC94F-FA27-48FD-97DF-830EF75AAEC9")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2WebResourceResponse {
    [DispIdAttribute("1610678272")]
public IStream Content { get; public set; }
    [DispIdAttribute("1610678274")]
public ICoreWebView2HttpResponseHeaders Headers { get; }
    [DispIdAttribute("1610678275")]
public int StatusCode { get; public set; }
    [DispIdAttribute("1610678277")]
public string ReasonPhrase { get; public set; }
    public abstract virtual IStream get_Content();
    public abstract virtual void set_Content(IStream Content);
    public abstract virtual ICoreWebView2HttpResponseHeaders get_Headers();
    public abstract virtual int get_StatusCode();
    public abstract virtual void set_StatusCode(int StatusCode);
    public abstract virtual string get_ReasonPhrase();
    public abstract virtual void set_ReasonPhrase(string ReasonPhrase);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("D1DB483D-6796-4B8B-80FC-13712BB716F4")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2WebResourceResponseReceivedEventArgs {
    [DispIdAttribute("1610678272")]
public ICoreWebView2WebResourceRequest Request { get; }
    [DispIdAttribute("1610678273")]
public ICoreWebView2WebResourceResponseView Response { get; }
    public abstract virtual ICoreWebView2WebResourceRequest get_Request();
    public abstract virtual ICoreWebView2WebResourceResponseView get_Response();
}
[CompilerGeneratedAttribute]
[GuidAttribute("7DE9898A-24F5-40C3-A2DE-D4F458E69828")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2WebResourceResponseReceivedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2 sender, ICoreWebView2WebResourceResponseReceivedEventArgs args);
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("79701053-7759-4162-8F7D-F1B3F084928D")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2WebResourceResponseView {
    [DispIdAttribute("1610678272")]
public ICoreWebView2HttpResponseHeaders Headers { get; }
    [DispIdAttribute("1610678273")]
public int StatusCode { get; }
    [DispIdAttribute("1610678274")]
public string ReasonPhrase { get; }
    public abstract virtual ICoreWebView2HttpResponseHeaders get_Headers();
    public abstract virtual int get_StatusCode();
    public abstract virtual string get_ReasonPhrase();
    public abstract virtual void GetContent(ICoreWebView2WebResourceResponseViewGetContentCompletedHandler handler);
}
[CompilerGeneratedAttribute]
[GuidAttribute("875738E1-9FA2-40E3-8B74-2E8972DD6FE7")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2WebResourceResponseViewGetContentCompletedHandler {
    public abstract virtual void Invoke(int errorCode, IStream Content);
}
[CompilerGeneratedAttribute]
[GuidAttribute("5C19E9E0-092F-486B-AFFA-CA8231913039")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2WindowCloseRequestedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2 sender, object args);
}
[CompilerGeneratedAttribute]
[GuidAttribute("5EAF559F-B46E-4397-8860-E422F287FF1E")]
[InterfaceTypeAttribute("1")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2WindowFeatures {
    [DispIdAttribute("1610678272")]
public int HasPosition { get; }
    [DispIdAttribute("1610678273")]
public int HasSize { get; }
    [DispIdAttribute("1610678274")]
public UInt32 Left { get; }
    [DispIdAttribute("1610678275")]
public UInt32 Top { get; }
    [DispIdAttribute("1610678276")]
public UInt32 Height { get; }
    [DispIdAttribute("1610678277")]
public UInt32 Width { get; }
    [DispIdAttribute("1610678278")]
public int ShouldDisplayMenuBar { get; }
    [DispIdAttribute("1610678279")]
public int ShouldDisplayStatus { get; }
    [DispIdAttribute("1610678280")]
public int ShouldDisplayToolbar { get; }
    [DispIdAttribute("1610678281")]
public int ShouldDisplayScrollBars { get; }
    public abstract virtual int get_HasPosition();
    public abstract virtual int get_HasSize();
    public abstract virtual UInt32 get_left();
    public abstract virtual UInt32 get_top();
    public abstract virtual UInt32 get_Height();
    public abstract virtual UInt32 get_Width();
    public abstract virtual int get_ShouldDisplayMenuBar();
    public abstract virtual int get_ShouldDisplayStatus();
    public abstract virtual int get_ShouldDisplayToolbar();
    public abstract virtual int get_ShouldDisplayScrollBars();
}
[CompilerGeneratedAttribute]
[InterfaceTypeAttribute("1")]
[GuidAttribute("B52D71D6-C4DF-4543-A90C-64A3E60F38CB")]
[TypeIdentifierAttribute]
public interface Microsoft.Web.WebView2.Core.Raw.ICoreWebView2ZoomFactorChangedEventHandler {
    public abstract virtual void Invoke(ICoreWebView2Controller sender, object args);
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.tagPOINT")]
public class Microsoft.Web.WebView2.Core.Raw.tagPOINT : ValueType {
    public int x;
    public int y;
}
[CompilerGeneratedAttribute]
[TypeIdentifierAttribute("26D34152-879F-4065-BEA2-3DAA2CFADFB8", "Microsoft.Web.WebView2.Core.Raw.tagRECT")]
public class Microsoft.Web.WebView2.Core.Raw.tagRECT : ValueType {
    public int left;
    public int top;
    public int right;
    public int bottom;
}
public class Microsoft.Web.WebView2.Core.WebView2RuntimeNotFoundException : Exception {
    public WebView2RuntimeNotFoundException(string message);
    public WebView2RuntimeNotFoundException(Exception inner);
    public WebView2RuntimeNotFoundException(string message, Exception inner);
}
