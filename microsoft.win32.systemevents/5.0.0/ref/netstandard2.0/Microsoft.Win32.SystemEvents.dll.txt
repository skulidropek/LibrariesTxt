[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
public class Microsoft.Win32.PowerModeChangedEventArgs : EventArgs {
    public PowerModes Mode { get; }
    public PowerModeChangedEventArgs(PowerModes mode);
    public PowerModes get_Mode();
}
public class Microsoft.Win32.PowerModeChangedEventHandler : MulticastDelegate {
    public PowerModeChangedEventHandler(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual void Invoke(object sender, PowerModeChangedEventArgs e);
    public virtual IAsyncResult BeginInvoke(object sender, PowerModeChangedEventArgs e, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
public enum Microsoft.Win32.PowerModes : Enum {
    public int value__;
    public static PowerModes Resume;
    public static PowerModes StatusChange;
    public static PowerModes Suspend;
}
public class Microsoft.Win32.SessionEndedEventArgs : EventArgs {
    public SessionEndReasons Reason { get; }
    public SessionEndedEventArgs(SessionEndReasons reason);
    public SessionEndReasons get_Reason();
}
public class Microsoft.Win32.SessionEndedEventHandler : MulticastDelegate {
    public SessionEndedEventHandler(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual void Invoke(object sender, SessionEndedEventArgs e);
    public virtual IAsyncResult BeginInvoke(object sender, SessionEndedEventArgs e, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
public class Microsoft.Win32.SessionEndingEventArgs : EventArgs {
    public bool Cancel { get; public set; }
    public SessionEndReasons Reason { get; }
    public SessionEndingEventArgs(SessionEndReasons reason);
    public bool get_Cancel();
    public void set_Cancel(bool value);
    public SessionEndReasons get_Reason();
}
public class Microsoft.Win32.SessionEndingEventHandler : MulticastDelegate {
    public SessionEndingEventHandler(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual void Invoke(object sender, SessionEndingEventArgs e);
    public virtual IAsyncResult BeginInvoke(object sender, SessionEndingEventArgs e, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
public enum Microsoft.Win32.SessionEndReasons : Enum {
    public int value__;
    public static SessionEndReasons Logoff;
    public static SessionEndReasons SystemShutdown;
}
public class Microsoft.Win32.SessionSwitchEventArgs : EventArgs {
    public SessionSwitchReason Reason { get; }
    public SessionSwitchEventArgs(SessionSwitchReason reason);
    public SessionSwitchReason get_Reason();
}
public class Microsoft.Win32.SessionSwitchEventHandler : MulticastDelegate {
    public SessionSwitchEventHandler(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual void Invoke(object sender, SessionSwitchEventArgs e);
    public virtual IAsyncResult BeginInvoke(object sender, SessionSwitchEventArgs e, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
public enum Microsoft.Win32.SessionSwitchReason : Enum {
    public int value__;
    public static SessionSwitchReason ConsoleConnect;
    public static SessionSwitchReason ConsoleDisconnect;
    public static SessionSwitchReason RemoteConnect;
    public static SessionSwitchReason RemoteDisconnect;
    public static SessionSwitchReason SessionLogon;
    public static SessionSwitchReason SessionLogoff;
    public static SessionSwitchReason SessionLock;
    public static SessionSwitchReason SessionUnlock;
    public static SessionSwitchReason SessionRemoteControl;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Microsoft.Win32.SystemEvents : object {
    public static void add_DisplaySettingsChanged(EventHandler value);
    public static void remove_DisplaySettingsChanged(EventHandler value);
    public static void add_DisplaySettingsChanging(EventHandler value);
    public static void remove_DisplaySettingsChanging(EventHandler value);
    public static void add_EventsThreadShutdown(EventHandler value);
    public static void remove_EventsThreadShutdown(EventHandler value);
    public static void add_InstalledFontsChanged(EventHandler value);
    public static void remove_InstalledFontsChanged(EventHandler value);
    public static void add_LowMemory(EventHandler value);
    public static void remove_LowMemory(EventHandler value);
    public static void add_PaletteChanged(EventHandler value);
    public static void remove_PaletteChanged(EventHandler value);
    public static void add_PowerModeChanged(PowerModeChangedEventHandler value);
    public static void remove_PowerModeChanged(PowerModeChangedEventHandler value);
    public static void add_SessionEnded(SessionEndedEventHandler value);
    public static void remove_SessionEnded(SessionEndedEventHandler value);
    public static void add_SessionEnding(SessionEndingEventHandler value);
    public static void remove_SessionEnding(SessionEndingEventHandler value);
    public static void add_SessionSwitch(SessionSwitchEventHandler value);
    public static void remove_SessionSwitch(SessionSwitchEventHandler value);
    public static void add_TimeChanged(EventHandler value);
    public static void remove_TimeChanged(EventHandler value);
    public static void add_TimerElapsed(TimerElapsedEventHandler value);
    public static void remove_TimerElapsed(TimerElapsedEventHandler value);
    public static void add_UserPreferenceChanged(UserPreferenceChangedEventHandler value);
    public static void remove_UserPreferenceChanged(UserPreferenceChangedEventHandler value);
    public static void add_UserPreferenceChanging(UserPreferenceChangingEventHandler value);
    public static void remove_UserPreferenceChanging(UserPreferenceChangingEventHandler value);
    public static IntPtr CreateTimer(int interval);
    [NullableContextAttribute("1")]
public static void InvokeOnEventsThread(Delegate method);
    public static void KillTimer(IntPtr timerId);
}
public class Microsoft.Win32.TimerElapsedEventArgs : EventArgs {
    public IntPtr TimerId { get; }
    public TimerElapsedEventArgs(IntPtr timerId);
    public IntPtr get_TimerId();
}
public class Microsoft.Win32.TimerElapsedEventHandler : MulticastDelegate {
    public TimerElapsedEventHandler(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual void Invoke(object sender, TimerElapsedEventArgs e);
    public virtual IAsyncResult BeginInvoke(object sender, TimerElapsedEventArgs e, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
public enum Microsoft.Win32.UserPreferenceCategory : Enum {
    public int value__;
    public static UserPreferenceCategory Accessibility;
    public static UserPreferenceCategory Color;
    public static UserPreferenceCategory Desktop;
    public static UserPreferenceCategory General;
    public static UserPreferenceCategory Icon;
    public static UserPreferenceCategory Keyboard;
    public static UserPreferenceCategory Menu;
    public static UserPreferenceCategory Mouse;
    public static UserPreferenceCategory Policy;
    public static UserPreferenceCategory Power;
    public static UserPreferenceCategory Screensaver;
    public static UserPreferenceCategory Window;
    public static UserPreferenceCategory Locale;
    public static UserPreferenceCategory VisualStyle;
}
public class Microsoft.Win32.UserPreferenceChangedEventArgs : EventArgs {
    public UserPreferenceCategory Category { get; }
    public UserPreferenceChangedEventArgs(UserPreferenceCategory category);
    public UserPreferenceCategory get_Category();
}
public class Microsoft.Win32.UserPreferenceChangedEventHandler : MulticastDelegate {
    public UserPreferenceChangedEventHandler(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual void Invoke(object sender, UserPreferenceChangedEventArgs e);
    public virtual IAsyncResult BeginInvoke(object sender, UserPreferenceChangedEventArgs e, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
public class Microsoft.Win32.UserPreferenceChangingEventArgs : EventArgs {
    public UserPreferenceCategory Category { get; }
    public UserPreferenceChangingEventArgs(UserPreferenceCategory category);
    public UserPreferenceCategory get_Category();
}
public class Microsoft.Win32.UserPreferenceChangingEventHandler : MulticastDelegate {
    public UserPreferenceChangingEventHandler(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual void Invoke(object sender, UserPreferenceChangingEventArgs e);
    public virtual IAsyncResult BeginInvoke(object sender, UserPreferenceChangingEventArgs e, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
[AttributeUsageAttribute("2432")]
internal class System.Diagnostics.CodeAnalysis.AllowNullAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
internal class System.Diagnostics.CodeAnalysis.DisallowNullAttribute : Attribute {
}
[AttributeUsageAttribute("64")]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ParameterValue>k__BackingField;
    public bool ParameterValue { get; }
    public DoesNotReturnIfAttribute(bool parameterValue);
    [CompilerGeneratedAttribute]
public bool get_ParameterValue();
}
[AttributeUsageAttribute("10624")]
internal class System.Diagnostics.CodeAnalysis.MaybeNullAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public MaybeNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[AttributeUsageAttribute("192")]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public String[] Members { get; }
    public MemberNotNullAttribute(string member);
    public MemberNotNullAttribute(String[] members);
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[AttributeUsageAttribute("192")]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public bool ReturnValue { get; }
    public String[] Members { get; }
    public MemberNotNullWhenAttribute(bool returnValue, string member);
    public MemberNotNullWhenAttribute(bool returnValue, String[] members);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[AttributeUsageAttribute("10624")]
internal class System.Diagnostics.CodeAnalysis.NotNullAttribute : Attribute {
}
[AttributeUsageAttribute("10368")]
internal class System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ParameterName>k__BackingField;
    public string ParameterName { get; }
    public NotNullIfNotNullAttribute(string parameterName);
    [CompilerGeneratedAttribute]
public string get_ParameterName();
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.NotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public NotNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.NullablePublicOnlyAttribute : Attribute {
    public bool IncludesInternals;
    public NullablePublicOnlyAttribute(bool );
}
internal abstract class System.Runtime.Versioning.OSPlatformAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <PlatformName>k__BackingField;
    public string PlatformName { get; }
    private protected OSPlatformAttribute(string platformName);
    [CompilerGeneratedAttribute]
public string get_PlatformName();
}
[AttributeUsageAttribute("1023")]
internal class System.Runtime.Versioning.SupportedOSPlatformAttribute : OSPlatformAttribute {
    public SupportedOSPlatformAttribute(string platformName);
}
[AttributeUsageAttribute("1")]
internal class System.Runtime.Versioning.TargetPlatformAttribute : OSPlatformAttribute {
    public TargetPlatformAttribute(string platformName);
}
[AttributeUsageAttribute("1023")]
internal class System.Runtime.Versioning.UnsupportedOSPlatformAttribute : OSPlatformAttribute {
    public UnsupportedOSPlatformAttribute(string platformName);
}
