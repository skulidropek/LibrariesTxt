public class Microsoft.Windows.Apps.Test.Automation.AndCondition : Condition {
    public AndCondition(Condition[] conditions);
    internal AndCondition(IUIAutomationCondition[] iUIAConditions);
    public Condition[] GetConditions();
}
public enum Microsoft.Windows.Apps.Test.Automation.AnimationStyle : Enum {
    public int value__;
    public static AnimationStyle None;
    public static AnimationStyle LasVegasLights;
    public static AnimationStyle BlinkingBackground;
    public static AnimationStyle SparkleText;
    public static AnimationStyle MarchingBlackAnts;
    public static AnimationStyle MarchingRedAnts;
    public static AnimationStyle Shimmer;
    public static AnimationStyle Other;
}
public class Microsoft.Windows.Apps.Test.Automation.AnnotationPattern : BasePattern {
    public static AutomationPattern Pattern;
    public static AutomationProperty AnnotationTypeIdProperty;
    public static AutomationProperty AnnotationTypeNameProperty;
    public static AutomationProperty AuthorProperty;
    public static AutomationProperty DateTimeProperty;
    public static AutomationProperty TargetProperty;
    private IUIAutomationAnnotationPattern _annotationPattern;
    private AnnotationPattern(AutomationElement element, IUIAutomationAnnotationPattern annotationPattern);
    private static AnnotationPattern();
    internal static AnnotationPattern Wrap(AutomationElement element, IUIAutomationAnnotationPattern annotationPattern);
}
public class Microsoft.Windows.Apps.Test.Automation.AsyncContentLoadedEventArgs : AutomationEventArgs {
    private AsyncContentLoadedState _asyncContentState;
    private double _percentComplete;
    public AsyncContentLoadedState AsyncContentLoadedState { get; }
    public double PercentComplete { get; }
    public AsyncContentLoadedEventArgs(AsyncContentLoadedState asyncContentState, double percentComplete);
    public AsyncContentLoadedState get_AsyncContentLoadedState();
    public double get_PercentComplete();
}
public enum Microsoft.Windows.Apps.Test.Automation.AsyncContentLoadedState : Enum {
    public int value__;
    public static AsyncContentLoadedState Beginning;
    public static AsyncContentLoadedState Progress;
    public static AsyncContentLoadedState Completed;
}
public static class Microsoft.Windows.Apps.Test.Automation.Automation : object {
    public static Condition RawViewCondition;
    public static Condition ControlViewCondition;
    public static Condition ContentViewCondition;
    internal static IUIAutomation _automation;
    internal static IUIAutomation AutomationClass { get; }
    private static Automation();
    public static bool Compare(AutomationElement el1, AutomationElement el2);
    public static bool Compare(Int32[] runtimeId1, Int32[] runtimeId2);
    public static string PropertyName(AutomationProperty property);
    public static string PatternName(AutomationPattern pattern);
    public static void AddAutomationEventHandler(AutomationEvent eventId, AutomationElement element, TreeScope scope, AutomationEventHandler eventHandler);
    public static void RemoveAutomationEventHandler(AutomationEvent eventId, AutomationElement element, AutomationEventHandler eventHandler);
    public static void AddAutomationPropertyChangedEventHandler(AutomationElement element, TreeScope scope, AutomationPropertyChangedEventHandler eventHandler, AutomationProperty[] properties);
    public static void RemoveAutomationPropertyChangedEventHandler(AutomationElement element, AutomationPropertyChangedEventHandler eventHandler);
    public static void AddStructureChangedEventHandler(AutomationElement element, TreeScope scope, StructureChangedEventHandler eventHandler);
    public static void RemoveStructureChangedEventHandler(AutomationElement element, StructureChangedEventHandler eventHandler);
    public static void AddAutomationFocusChangedEventHandler(AutomationFocusChangedEventHandler eventHandler);
    public static void RemoveAutomationFocusChangedEventHandler(AutomationFocusChangedEventHandler eventHandler);
    public static void RemoveAllEventHandlers();
    public static bool TrySetConnectionTimeout(TimeSpan timeout);
    public static bool TryGetConnectionTimeout(TimeSpan& timeout);
    public static bool TrySetTransactionTimeout(TimeSpan timeout);
    public static bool TryGetTransactionTimeout(TimeSpan& timeout);
    internal static IUIAutomation get_AutomationClass();
}
public class Microsoft.Windows.Apps.Test.Automation.AutomationElement : object {
    public static AutomationProperty AcceleratorKeyProperty;
    public static AutomationProperty AccessKeyProperty;
    public static AutomationProperty AutomationIdProperty;
    public static AutomationProperty BoundingRectangleProperty;
    public static AutomationProperty ClassNameProperty;
    public static AutomationProperty ClickablePointProperty;
    public static AutomationProperty ControlTypeProperty;
    public static AutomationProperty CultureProperty;
    public static AutomationProperty FrameworkIdProperty;
    public static AutomationProperty FullDescriptionProperty;
    public static AutomationProperty HasKeyboardFocusProperty;
    public static AutomationProperty HelpTextProperty;
    public static AutomationProperty IsContentElementProperty;
    public static AutomationProperty IsControlElementProperty;
    public static AutomationProperty IsDockPatternAvailableProperty;
    public static AutomationProperty IsEnabledProperty;
    public static AutomationProperty IsExpandCollapsePatternAvailableProperty;
    public static AutomationProperty IsGridItemPatternAvailableProperty;
    public static AutomationProperty IsGridPatternAvailableProperty;
    public static AutomationProperty IsInvokePatternAvailableProperty;
    public static AutomationProperty IsKeyboardFocusableProperty;
    public static AutomationProperty IsMultipleViewPatternAvailableProperty;
    public static AutomationProperty IsOffscreenProperty;
    public static AutomationProperty IsPasswordProperty;
    public static AutomationProperty IsRangeValuePatternAvailableProperty;
    public static AutomationProperty IsRequiredForFormProperty;
    public static AutomationProperty IsScrollItemPatternAvailableProperty;
    public static AutomationProperty IsScrollPatternAvailableProperty;
    public static AutomationProperty IsSelectionItemPatternAvailableProperty;
    public static AutomationProperty IsSelectionPatternAvailableProperty;
    public static AutomationProperty IsTableItemPatternAvailableProperty;
    public static AutomationProperty IsTablePatternAvailableProperty;
    public static AutomationProperty IsTextPatternAvailableProperty;
    public static AutomationProperty IsTogglePatternAvailableProperty;
    public static AutomationProperty IsTransformPatternAvailableProperty;
    public static AutomationProperty IsValuePatternAvailableProperty;
    public static AutomationProperty IsWindowPatternAvailableProperty;
    public static AutomationProperty ItemStatusProperty;
    public static AutomationProperty ItemTypeProperty;
    public static AutomationProperty LabeledByProperty;
    public static AutomationProperty LocalizedControlTypeProperty;
    public static AutomationProperty NameProperty;
    public static AutomationProperty NativeWindowHandleProperty;
    public static AutomationProperty OrientationProperty;
    public static AutomationProperty ProcessIdProperty;
    public static AutomationProperty RuntimeIdProperty;
    public static AutomationEvent AsyncContentLoadedEvent;
    public static AutomationEvent AutomationFocusChangedEvent;
    public static AutomationEvent AutomationPropertyChangedEvent;
    public static AutomationEvent LayoutInvalidatedEvent;
    public static AutomationEvent MenuOpenedEvent;
    public static AutomationEvent MenuClosedEvent;
    public static AutomationEvent StructureChangedEvent;
    public static AutomationEvent ToolTipClosedEvent;
    public static AutomationEvent ToolTipOpenedEvent;
    public static AutomationProperty IsLegacyPatternAvailableProperty;
    public static AutomationProperty IsVirtualizedItemPatternAvailableProperty;
    public static AutomationProperty IsSynchronizedInputPatternAvailableProperty;
    public static AutomationProperty IsItemContainerPatternAvailableProperty;
    public static AutomationProperty AriaRoleProperty;
    public static AutomationProperty AriaPropertiesProperty;
    public static AutomationProperty IsDataValidForFormProperty;
    public static AutomationProperty ControllerForProperty;
    public static AutomationProperty DescribedByProperty;
    public static AutomationProperty FlowsFromProperty;
    public static AutomationProperty FlowsToProperty;
    public static AutomationProperty ProviderDescriptionProperty;
    public static AutomationProperty SearchVirtualItemsProperty;
    public static AutomationProperty OptimizeForVisualContentProperty;
    public static AutomationProperty IsObjectModelPatternAvailableProperty;
    public static AutomationProperty IsAnnotationPatternAvailableProperty;
    public static AutomationProperty IsTextPattern2AvailableProperty;
    public static AutomationProperty IsStylesPatternAvailableProperty;
    public static AutomationProperty IsSpreadsheetPatternAvailableProperty;
    public static AutomationProperty IsSpreadsheetItemPatternAvailableProperty;
    public static AutomationProperty IsTransformPattern2AvailableProperty;
    public static AutomationProperty LiveSettingProperty;
    public static AutomationProperty IsTextChildPatternAvailableProperty;
    public static AutomationProperty IsDragPatternAvailableProperty;
    public static AutomationProperty IsDropTargetPatternAvailableProperty;
    public static AutomationProperty IsTextEditPatternAvailableProperty;
    public static AutomationProperty IsPeripheralProperty;
    public static AutomationProperty IsCustomNavigationPatternAvailableProperty;
    public static AutomationProperty PositionInSetProperty;
    public static AutomationProperty SizeOfSetProperty;
    public static AutomationProperty LevelProperty;
    public static AutomationProperty AnnotationTypesProperty;
    public static AutomationProperty AnnotationObjectsProperty;
    public static AutomationProperty LandmarkTypeProperty;
    public static AutomationProperty LocalizedLandmarkTypeProperty;
    public static object NotSupported;
    private IUIAutomationElement _autoElement;
    private static CacheRequest _defaultCacheRequest;
    public static AutomationElement RootElement { get; }
    public static AutomationElement FocusedElement { get; }
    public AutomationElementInformation Cached { get; }
    public AutomationElementInformation Current { get; }
    internal IUIAutomationElement IUIAutomationElement { get; }
    internal static CacheRequest DefaultCacheRequest { get; }
    public AutomationElement(IUIAutomationElement autoElement);
    private static AutomationElement();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(AutomationElement left, AutomationElement right);
    public static bool op_Inequality(AutomationElement left, AutomationElement right);
    public Int32[] GetRuntimeId();
    public static AutomationElement FromPoint(Point pt);
    public static AutomationElement FromHandle(IntPtr hwnd);
    public object GetCurrentPropertyValue(AutomationProperty property);
    public object GetCurrentPropertyValue(AutomationProperty property, bool ignoreDefaultValue);
    public object GetCurrentPattern(AutomationPattern pattern);
    public bool TryGetCurrentPattern(AutomationPattern pattern, Object& patternObject);
    public object GetCachedPropertyValue(AutomationProperty property);
    public object GetCachedPropertyValue(AutomationProperty property, bool ignoreDefaultValue);
    public object GetCachedPattern(AutomationPattern pattern);
    public bool TryGetCachedPattern(AutomationPattern pattern, Object& patternObject);
    public AutomationElement GetUpdatedCache(CacheRequest request);
    public AutomationElement FindFirst(TreeScope scope, Condition condition);
    public AutomationElement FindFirst(TreeScope scope, Condition condition, CacheRequest cr);
    public AutomationElementCollection FindAll(TreeScope scope, Condition condition);
    public AutomationElementCollection FindAll(TreeScope scope, Condition condition, CacheRequest cr);
    public AutomationProperty[] GetSupportedProperties();
    public AutomationPattern[] GetSupportedPatterns();
    public void SetFocus();
    public bool TryGetClickablePoint(Point& pt);
    public Point GetClickablePoint();
    public static AutomationElement get_RootElement();
    public static AutomationElement get_FocusedElement();
    public AutomationElementInformation get_Cached();
    public AutomationElementInformation get_Current();
    internal IUIAutomationElement get_IUIAutomationElement();
    internal static CacheRequest get_DefaultCacheRequest();
    internal object GetPatternPropertyValue(AutomationProperty property, bool useCache);
}
[DefaultMemberAttribute("Item")]
public class Microsoft.Windows.Apps.Test.Automation.AutomationElementCollection : object {
    private AutomationElement[] _elements;
    public AutomationElement Item { get; }
    public int Count { get; }
    public object SyncRoot { get; }
    public bool IsSynchronized { get; }
    internal AutomationElementCollection(AutomationElement[] elements);
    internal AutomationElementCollection(IUIAutomationElementArray elementArray);
    public virtual void CopyTo(Array array, int index);
    public void CopyTo(AutomationElement[] array, int index);
    public sealed virtual IEnumerator GetEnumerator();
    public AutomationElement get_Item(int index);
    public sealed virtual int get_Count();
    public virtual object get_SyncRoot();
    public virtual bool get_IsSynchronized();
    public static AutomationElement[] op_Explicit(AutomationElementCollection collection);
}
public static class Microsoft.Windows.Apps.Test.Automation.AutomationElementIdentifiers : object {
    public static AutomationEvent AsyncContentLoadedEvent;
    public static AutomationEvent AutomationFocusChangedEvent;
    public static AutomationEvent AutomationPropertyChangedEvent;
    public static AutomationEvent LayoutInvalidatedEvent;
    public static AutomationEvent MenuClosedEvent;
    public static AutomationEvent MenuOpenedEvent;
    public static AutomationEvent StructureChangedEvent;
    public static AutomationEvent ToolTipClosedEvent;
    public static AutomationEvent ToolTipOpenedEvent;
    public static AutomationProperty AcceleratorKeyProperty;
    public static AutomationProperty AccessKeyProperty;
    public static AutomationProperty AutomationIdProperty;
    public static AutomationProperty BoundingRectangleProperty;
    public static AutomationProperty ClassNameProperty;
    public static AutomationProperty ClickablePointProperty;
    public static AutomationProperty ControlTypeProperty;
    public static AutomationProperty CultureProperty;
    public static AutomationProperty FlowsFromProperty;
    public static AutomationProperty FlowsToProperty;
    public static AutomationProperty FrameworkIdProperty;
    public static AutomationProperty FullDescriptionProperty;
    public static AutomationProperty HasKeyboardFocusProperty;
    public static AutomationProperty HelpTextProperty;
    public static AutomationProperty IsContentElementProperty;
    public static AutomationProperty IsControlElementProperty;
    public static AutomationProperty IsDockPatternAvailableProperty;
    public static AutomationProperty IsEnabledProperty;
    public static AutomationProperty IsExpandCollapsePatternAvailableProperty;
    public static AutomationProperty IsGridItemPatternAvailableProperty;
    public static AutomationProperty IsGridPatternAvailableProperty;
    public static AutomationProperty IsInvokePatternAvailableProperty;
    public static AutomationProperty IsKeyboardFocusableProperty;
    public static AutomationProperty IsMultipleViewPatternAvailableProperty;
    public static AutomationProperty IsOffscreenProperty;
    public static AutomationProperty IsPasswordProperty;
    public static AutomationProperty IsRangeValuePatternAvailableProperty;
    public static AutomationProperty IsRequiredForFormProperty;
    public static AutomationProperty IsScrollItemPatternAvailableProperty;
    public static AutomationProperty IsScrollPatternAvailableProperty;
    public static AutomationProperty IsSelectionItemPatternAvailableProperty;
    public static AutomationProperty IsSelectionPatternAvailableProperty;
    public static AutomationProperty IsTableItemPatternAvailableProperty;
    public static AutomationProperty IsTablePatternAvailableProperty;
    public static AutomationProperty IsTextPatternAvailableProperty;
    public static AutomationProperty IsTogglePatternAvailableProperty;
    public static AutomationProperty IsTransformPatternAvailableProperty;
    public static AutomationProperty IsValuePatternAvailableProperty;
    public static AutomationProperty IsWindowPatternAvailableProperty;
    public static AutomationProperty ItemStatusProperty;
    public static AutomationProperty ItemTypeProperty;
    public static AutomationProperty LabeledByProperty;
    public static AutomationProperty LocalizedControlTypeProperty;
    public static AutomationProperty NameProperty;
    public static AutomationProperty NativeWindowHandleProperty;
    public static AutomationProperty OrientationProperty;
    public static AutomationProperty ProcessIdProperty;
    public static AutomationProperty RuntimeIdProperty;
    private static AutomationElementIdentifiers();
}
public enum Microsoft.Windows.Apps.Test.Automation.AutomationElementMode : Enum {
    public int value__;
    public static AutomationElementMode Full;
    public static AutomationElementMode None;
}
public class Microsoft.Windows.Apps.Test.Automation.AutomationEvent : AutomationIdentifier {
    internal AutomationEvent(int id, string programmaticName);
    public static AutomationEvent LookupById(int id);
}
public class Microsoft.Windows.Apps.Test.Automation.AutomationEventArgs : EventArgs {
    private AutomationEvent _eventId;
    public AutomationEvent EventId { get; }
    public AutomationEventArgs(AutomationEvent eventId);
    public AutomationEvent get_EventId();
    public virtual string ToString();
}
public class Microsoft.Windows.Apps.Test.Automation.AutomationEventHandler : MulticastDelegate {
    public AutomationEventHandler(object object, IntPtr method);
    public virtual void Invoke(object sender, AutomationEventArgs e);
    public virtual IAsyncResult BeginInvoke(object sender, AutomationEventArgs e, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class Microsoft.Windows.Apps.Test.Automation.AutomationEventHandlerImpl : UIAutomationEventHandler`1<AutomationEventHandlerImpl> {
    private int _eventId;
    private IUIAutomationElement _uiAutomationElement;
    private AutomationEventHandler _handlingDelegate;
    private AutomationEventHandlerImpl(int eventId, IUIAutomationElement uiAutomationElement, AutomationEventHandler handlingDelegate);
    protected virtual void Remove();
    private sealed virtual override void UIAutomationClient.IUIAutomationEventHandler.HandleAutomationEvent(IUIAutomationElement sender, int eventId);
    internal static void Add(AutomationEvent eventId, AutomationElement element, TreeScope scope, AutomationEventHandler handlingDelegate);
    internal static void Remove(AutomationEvent eventId, AutomationElement element, AutomationEventHandler handlingDelegate);
    [CompilerGeneratedAttribute]
private void <Remove>b__1_0();
}
public class Microsoft.Windows.Apps.Test.Automation.AutomationFocusChangedEventArgs : AutomationEventArgs {
    private int _childId;
    private int _objectId;
    public int ObjectId { get; }
    public int ChildId { get; }
    public AutomationFocusChangedEventArgs(int idObject, int idChild);
    public int get_ObjectId();
    public int get_ChildId();
}
public class Microsoft.Windows.Apps.Test.Automation.AutomationFocusChangedEventHandler : MulticastDelegate {
    public AutomationFocusChangedEventHandler(object object, IntPtr method);
    public virtual void Invoke(object sender, AutomationFocusChangedEventArgs e);
    public virtual IAsyncResult BeginInvoke(object sender, AutomationFocusChangedEventArgs e, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class Microsoft.Windows.Apps.Test.Automation.AutomationFocusChangedEventHandlerImpl : UIAutomationEventHandler`1<AutomationFocusChangedEventHandlerImpl> {
    private AutomationFocusChangedEventHandler _handlingDelegate;
    private AutomationFocusChangedEventHandlerImpl(AutomationFocusChangedEventHandler handlingDelegate);
    protected virtual void Remove();
    private sealed virtual override void UIAutomationClient.IUIAutomationFocusChangedEventHandler.HandleFocusChangedEvent(IUIAutomationElement sender);
    internal static void Add(AutomationFocusChangedEventHandler handlingDelegate);
    internal static void Remove(AutomationFocusChangedEventHandler handlingDelegate);
    [CompilerGeneratedAttribute]
private void <Remove>b__1_0();
}
public class Microsoft.Windows.Apps.Test.Automation.AutomationIdentifier : object {
    private static bool initialized;
    private static Dictionary`2<int, AutomationIdentifier> identifiers;
    private int _id;
    private string _programmaticName;
    private AutomationIdType _type;
    public int Id { get; }
    public string ProgrammaticName { get; }
    internal AutomationIdentifier(AutomationIdType type, int id, string programmaticName);
    private static AutomationIdentifier();
    public sealed virtual int CompareTo(object obj);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public int get_Id();
    public string get_ProgrammaticName();
    public virtual string ToString();
    internal static TIdentifier LookupById(int id);
    private static void Initialize();
    private static void Register(AutomationIdentifier identifier);
}
internal enum Microsoft.Windows.Apps.Test.Automation.AutomationIdType : Enum {
    public int value__;
    public static AutomationIdType ControlType;
    public static AutomationIdType Event;
    public static AutomationIdType Pattern;
    public static AutomationIdType Property;
    public static AutomationIdType TextAttribute;
}
public abstract class Microsoft.Windows.Apps.Test.Automation.AutomationPattern : AutomationIdentifier {
    internal AutomationPattern(int id, string programmaticName);
    internal abstract virtual object Wrap(AutomationElement element, object pattern);
    public static AutomationPattern LookupById(int id);
}
internal class Microsoft.Windows.Apps.Test.Automation.AutomationPattern`2 : AutomationPattern {
    private Func`3<AutomationElement, TComPattern, TManagedPattern> wrap;
    internal AutomationPattern`2(int id, string programmaticName, Func`3<AutomationElement, TComPattern, TManagedPattern> wrap);
    internal virtual object Wrap(AutomationElement element, object pattern);
}
public class Microsoft.Windows.Apps.Test.Automation.AutomationProperty : AutomationIdentifier {
    internal AutomationProperty(int id, string programmaticName);
    public static AutomationProperty LookupById(int id);
}
public class Microsoft.Windows.Apps.Test.Automation.AutomationPropertyChangedEventArgs : AutomationEventArgs {
    private object _oldValue;
    private object _newValue;
    private AutomationProperty _property;
    public object NewValue { get; }
    public object OldValue { get; }
    public AutomationProperty Property { get; }
    public AutomationPropertyChangedEventArgs(AutomationProperty property, object oldValue, object newValue);
    public object get_NewValue();
    public object get_OldValue();
    public AutomationProperty get_Property();
}
public class Microsoft.Windows.Apps.Test.Automation.AutomationPropertyChangedEventHandler : MulticastDelegate {
    public AutomationPropertyChangedEventHandler(object object, IntPtr method);
    public virtual void Invoke(object sender, AutomationPropertyChangedEventArgs e);
    public virtual IAsyncResult BeginInvoke(object sender, AutomationPropertyChangedEventArgs e, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class Microsoft.Windows.Apps.Test.Automation.AutomationPropertyChangedEventHandlerImpl : UIAutomationEventHandler`1<AutomationPropertyChangedEventHandlerImpl> {
    private IUIAutomationElement _uiAutomationElement;
    private AutomationPropertyChangedEventHandler _handlingDelegate;
    private AutomationPropertyChangedEventHandlerImpl(IUIAutomationElement uiAutomationElement, AutomationPropertyChangedEventHandler handlingDelegate);
    protected virtual void Remove();
    private sealed virtual override void UIAutomationClient.IUIAutomationPropertyChangedEventHandler.HandlePropertyChangedEvent(IUIAutomationElement sender, int propertyId, object newValue);
    internal static void Add(AutomationElement element, TreeScope scope, AutomationPropertyChangedEventHandler handlingDelegate, AutomationProperty[] properties);
    internal static void Remove(AutomationElement element, AutomationPropertyChangedEventHandler handlingDelegate);
    [CompilerGeneratedAttribute]
private void <Remove>b__1_0();
}
public class Microsoft.Windows.Apps.Test.Automation.AutomationTextAttribute : AutomationIdentifier {
    internal AutomationTextAttribute(int id, string programmaticName);
    public static AutomationTextAttribute LookupById(int id);
}
public class Microsoft.Windows.Apps.Test.Automation.BasePattern : object {
    internal AutomationElement _el;
    internal BasePattern(AutomationElement el);
}
internal static class Microsoft.Windows.Apps.Test.Automation.Boundary : object {
    internal static void NoExceptions(Action a);
    internal static void NoExceptions(Action a, Action`1<Exception> c);
    internal static void UIAutomation(Action a);
    internal static R UIAutomation(Func`1<R> f);
}
public enum Microsoft.Windows.Apps.Test.Automation.BulletStyle : Enum {
    public int value__;
    public static BulletStyle None;
    public static BulletStyle HollowRoundBullet;
    public static BulletStyle FilledRoundBullet;
    public static BulletStyle HollowSquareBullet;
    public static BulletStyle FilledSquareBullet;
    public static BulletStyle DashBullet;
    public static BulletStyle Other;
}
public class Microsoft.Windows.Apps.Test.Automation.CacheRequest : object {
    private IUIAutomationCacheRequest _cacheRequest;
    private int _stackEntryCount;
    [ThreadStaticAttribute]
private static Stack`1<CacheRequest> _stack;
    private static CacheRequest _defaultCacheRequest;
    public AutomationElementMode AutomationElementMode { get; public set; }
    public CacheRequest Current { get; }
    public TreeScope TreeScope { get; public set; }
    public Condition TreeFilter { get; public set; }
    internal IUIAutomationCacheRequest IUIAutomationCacheRequest { get; }
    internal CacheRequest(CacheRequest other);
    private static CacheRequest();
    public IDisposable Activate();
    public void Add(AutomationProperty property);
    public void Add(AutomationPattern pattern);
    public CacheRequest Clone();
    public void Pop();
    public void Push();
    private void CheckAccess();
    public AutomationElementMode get_AutomationElementMode();
    public void set_AutomationElementMode(AutomationElementMode value);
    public CacheRequest get_Current();
    public TreeScope get_TreeScope();
    public void set_TreeScope(TreeScope value);
    public Condition get_TreeFilter();
    public void set_TreeFilter(Condition value);
    internal IUIAutomationCacheRequest get_IUIAutomationCacheRequest();
}
public enum Microsoft.Windows.Apps.Test.Automation.CapStyle : Enum {
    public int value__;
    public static CapStyle None;
    public static CapStyle SmallCap;
    public static CapStyle AllCap;
    public static CapStyle AllPetiteCaps;
    public static CapStyle PetiteCaps;
    public static CapStyle Unicase;
    public static CapStyle Titling;
    public static CapStyle Other;
}
public class Microsoft.Windows.Apps.Test.Automation.Condition : object {
    public static Condition TrueCondition;
    public static Condition FalseCondition;
    protected IUIAutomationCondition _condition;
    internal IUIAutomationCondition IUIAutomationCondition { get; internal set; }
    internal Condition(IUIAutomationCondition condition);
    private static Condition();
    internal IUIAutomationCondition get_IUIAutomationCondition();
    internal void set_IUIAutomationCondition(IUIAutomationCondition value);
    internal static IUIAutomationCondition[] GetIUIAutomationConditions(Condition[] conditions);
}
public class Microsoft.Windows.Apps.Test.Automation.ControlType : AutomationIdentifier {
    public static ControlType AppBar;
    public static ControlType Button;
    public static ControlType Calendar;
    public static ControlType CheckBox;
    public static ControlType ComboBox;
    public static ControlType Custom;
    public static ControlType DataGrid;
    public static ControlType DataItem;
    public static ControlType Document;
    public static ControlType Edit;
    public static ControlType Group;
    public static ControlType Header;
    public static ControlType HeaderItem;
    public static ControlType Hyperlink;
    public static ControlType Image;
    public static ControlType List;
    public static ControlType ListItem;
    public static ControlType MenuBar;
    public static ControlType Menu;
    public static ControlType MenuItem;
    public static ControlType Pane;
    public static ControlType ProgressBar;
    public static ControlType RadioButton;
    public static ControlType ScrollBar;
    public static ControlType SemanticZoom;
    public static ControlType Separator;
    public static ControlType Slider;
    public static ControlType Spinner;
    public static ControlType SplitButton;
    public static ControlType StatusBar;
    public static ControlType Tab;
    public static ControlType TabItem;
    public static ControlType Table;
    public static ControlType Text;
    public static ControlType Thumb;
    public static ControlType TitleBar;
    public static ControlType ToolBar;
    public static ControlType ToolTip;
    public static ControlType Tree;
    public static ControlType TreeItem;
    public static ControlType Window;
    internal static Dictionary`2<int, ControlType> _idTable;
    internal ControlType(int id, string programmaticName);
    private static ControlType();
    internal static ControlType LookupById(int id);
}
public class Microsoft.Windows.Apps.Test.Automation.CustomNavigationPattern : BasePattern {
    public static AutomationPattern Pattern;
    private IUIAutomationCustomNavigationPattern _customNavigationPattern;
    internal CustomNavigationPattern(AutomationElement element, IUIAutomationCustomNavigationPattern CustomNavigationPattern);
    private static CustomNavigationPattern();
    internal static CustomNavigationPattern Wrap(AutomationElement element, IUIAutomationCustomNavigationPattern CustomNavigationPattern);
    public AutomationElement Navigate(NavigateDirection direction);
}
public static class Microsoft.Windows.Apps.Test.Automation.CustomNavigationPatternIdentifiers : object {
    public static AutomationPattern Pattern;
    private static CustomNavigationPatternIdentifiers();
}
public class Microsoft.Windows.Apps.Test.Automation.DockPattern : BasePattern {
    public static AutomationPattern Pattern;
    public static AutomationProperty DockPositionProperty;
    private IUIAutomationDockPattern _dockPattern;
    public DockPatternInformation Cached { get; }
    public DockPatternInformation Current { get; }
    private DockPattern(AutomationElement element, IUIAutomationDockPattern dockPattern);
    private static DockPattern();
    internal static DockPattern Wrap(AutomationElement element, IUIAutomationDockPattern dockPattern);
    public void SetDockPosition(DockPosition dockPosition);
    public DockPatternInformation get_Cached();
    public DockPatternInformation get_Current();
}
public static class Microsoft.Windows.Apps.Test.Automation.DockPatternIdentifiers : object {
    public static AutomationPattern Pattern;
    public static AutomationProperty DockPositionProperty;
    private static DockPatternIdentifiers();
}
public enum Microsoft.Windows.Apps.Test.Automation.DockPosition : Enum {
    public int value__;
    public static DockPosition Top;
    public static DockPosition Left;
    public static DockPosition Bottom;
    public static DockPosition Right;
    public static DockPosition Fill;
    public static DockPosition None;
}
public class Microsoft.Windows.Apps.Test.Automation.DragPattern : BasePattern {
    public static AutomationPattern Pattern;
    public static AutomationProperty IsGrabbedProperty;
    public static AutomationProperty DropEffectProperty;
    public static AutomationProperty DropEffectsProperty;
    public static AutomationProperty GrabbedItemsProperty;
    private IUIAutomationDragPattern _dragPattern;
    private DragPattern(AutomationElement element, IUIAutomationDragPattern dragPattern);
    private static DragPattern();
    internal static DragPattern Wrap(AutomationElement element, IUIAutomationDragPattern dragPattern);
}
public class Microsoft.Windows.Apps.Test.Automation.DropTargetPattern : BasePattern {
    public static AutomationPattern Pattern;
    public static AutomationProperty DropTargetEffectProperty;
    public static AutomationProperty DropTargetEffectsProperty;
    private IUIAutomationDropTargetPattern _dropTargetPattern;
    private DropTargetPattern(AutomationElement element, IUIAutomationDropTargetPattern dropTargetPattern);
    private static DropTargetPattern();
    internal static DropTargetPattern Wrap(AutomationElement element, IUIAutomationDropTargetPattern dropTargetPattern);
}
public class Microsoft.Windows.Apps.Test.Automation.ElementNotAvailableException : Exception {
    public ElementNotAvailableException(Exception innerException);
    public ElementNotAvailableException(string message);
    public ElementNotAvailableException(string message, Exception innerException);
}
public class Microsoft.Windows.Apps.Test.Automation.ElementNotEnabledException : Exception {
    public ElementNotEnabledException(Exception innerException);
    public ElementNotEnabledException(string message);
    public ElementNotEnabledException(string message, Exception innerException);
}
public class Microsoft.Windows.Apps.Test.Automation.ExpandCollapsePattern : BasePattern {
    public static AutomationPattern Pattern;
    public static AutomationProperty ExpandCollapseStateProperty;
    private IUIAutomationExpandCollapsePattern _expandCollapsePattern;
    public ExpandCollapsePatternInformation Cached { get; }
    public ExpandCollapsePatternInformation Current { get; }
    private ExpandCollapsePattern(AutomationElement element, IUIAutomationExpandCollapsePattern expandCollapsePattern);
    private static ExpandCollapsePattern();
    internal static ExpandCollapsePattern Wrap(AutomationElement element, IUIAutomationExpandCollapsePattern expandCollapsePattern);
    public void Expand();
    public void Collapse();
    public ExpandCollapsePatternInformation get_Cached();
    public ExpandCollapsePatternInformation get_Current();
}
public static class Microsoft.Windows.Apps.Test.Automation.ExpandCollapsePatternIdentifiers : object {
    public static AutomationPattern Pattern;
    public static AutomationProperty ExpandCollapseStateProperty;
    private static ExpandCollapsePatternIdentifiers();
}
public enum Microsoft.Windows.Apps.Test.Automation.ExpandCollapseState : Enum {
    public int value__;
    public static ExpandCollapseState Collapsed;
    public static ExpandCollapseState Expanded;
    public static ExpandCollapseState LeafNode;
    public static ExpandCollapseState PartiallyExpanded;
}
public enum Microsoft.Windows.Apps.Test.Automation.FlowDirections : Enum {
    public int value__;
    public static FlowDirections Default;
    public static FlowDirections RightToLeft;
    public static FlowDirections BottomToTop;
    public static FlowDirections Vertical;
}
public class Microsoft.Windows.Apps.Test.Automation.GridItemPattern : BasePattern {
    public static AutomationPattern Pattern;
    public static AutomationProperty RowProperty;
    public static AutomationProperty RowSpanProperty;
    public static AutomationProperty ColumnProperty;
    public static AutomationProperty ColumnSpanProperty;
    public static AutomationProperty ContainingGridProperty;
    private IUIAutomationGridItemPattern _gridItemPattern;
    public GridItemPatternInformation Cached { get; }
    public GridItemPatternInformation Current { get; }
    internal GridItemPattern(AutomationElement element, object gridItemPattern);
    private static GridItemPattern();
    internal static GridItemPattern Wrap(AutomationElement element, IUIAutomationGridItemPattern gridItemPattern);
    public GridItemPatternInformation get_Cached();
    public GridItemPatternInformation get_Current();
}
public static class Microsoft.Windows.Apps.Test.Automation.GridItemPatternIdentifiers : object {
    public static AutomationPattern Pattern;
    public static AutomationProperty ColumnProperty;
    public static AutomationProperty ColumnSpanProperty;
    public static AutomationProperty ContainingGridProperty;
    public static AutomationProperty RowProperty;
    public static AutomationProperty RowSpanProperty;
    private static GridItemPatternIdentifiers();
}
public class Microsoft.Windows.Apps.Test.Automation.GridPattern : BasePattern {
    public static AutomationPattern Pattern;
    public static AutomationProperty ColumnCountProperty;
    public static AutomationProperty RowCountProperty;
    private IUIAutomationGridPattern _gridPattern;
    public GridPatternInformation Cached { get; }
    public GridPatternInformation Current { get; }
    internal GridPattern(AutomationElement element, IUIAutomationGridPattern gridPattern);
    private static GridPattern();
    internal static GridPattern Wrap(AutomationElement element, IUIAutomationGridPattern gridPattern);
    public AutomationElement GetItem(int row, int column);
    public GridPatternInformation get_Cached();
    public GridPatternInformation get_Current();
}
public static class Microsoft.Windows.Apps.Test.Automation.GridPatternIdentifiers : object {
    public static AutomationPattern Pattern;
    public static AutomationProperty ColumnCountProperty;
    public static AutomationProperty RowCountProperty;
    private static GridPatternIdentifiers();
}
public enum Microsoft.Windows.Apps.Test.Automation.HorizontalTextAlignment : Enum {
    public int value__;
    public static HorizontalTextAlignment Left;
    public static HorizontalTextAlignment Centered;
    public static HorizontalTextAlignment Right;
    public static HorizontalTextAlignment Justified;
}
public class Microsoft.Windows.Apps.Test.Automation.InvokePattern : BasePattern {
    public static AutomationPattern Pattern;
    public static AutomationEvent InvokedEvent;
    private IUIAutomationInvokePattern _invokePattern;
    private InvokePattern(AutomationElement element, IUIAutomationInvokePattern invokePattern);
    private static InvokePattern();
    internal static InvokePattern Wrap(AutomationElement element, IUIAutomationInvokePattern invokePattern);
    public void Invoke();
}
public static class Microsoft.Windows.Apps.Test.Automation.InvokePatternIdentifiers : object {
    public static AutomationPattern Pattern;
    public static AutomationEvent InvokedEvent;
    private static InvokePatternIdentifiers();
}
public class Microsoft.Windows.Apps.Test.Automation.ItemContainerPattern : BasePattern {
    public static AutomationPattern Pattern;
    private IUIAutomationItemContainerPattern _itemContainerPattern;
    private ItemContainerPattern(AutomationElement element, IUIAutomationItemContainerPattern itemContainerPattern);
    private static ItemContainerPattern();
    internal static ItemContainerPattern Wrap(AutomationElement element, IUIAutomationItemContainerPattern itemContainerPattern);
    public AutomationElement FindItemByProperty(AutomationElement element, AutomationProperty property, object value);
}
public enum Microsoft.Windows.Apps.Test.Automation.LandmarkType : Enum {
    public int value__;
    public static LandmarkType Custom;
    public static LandmarkType Form;
    public static LandmarkType Main;
    public static LandmarkType Navigation;
    public static LandmarkType Search;
}
public class Microsoft.Windows.Apps.Test.Automation.LegacyIAccessiblePattern : BasePattern {
    public static AutomationPattern Pattern;
    public static AutomationProperty ChildIdProperty;
    public static AutomationProperty DefaultActionProperty;
    public static AutomationProperty DescriptionProperty;
    public static AutomationProperty HelpProperty;
    public static AutomationProperty KeyboardShortcutProperty;
    public static AutomationProperty NameProperty;
    public static AutomationProperty RoleProperty;
    public static AutomationProperty SelectionProperty;
    public static AutomationProperty StateProperty;
    public static AutomationProperty ValueProperty;
    private IUIAutomationLegacyIAccessiblePattern _legacyIAccessiblePattern;
    private LegacyIAccessiblePattern(AutomationElement element, IUIAutomationLegacyIAccessiblePattern legacyIAccessiblePattern);
    private static LegacyIAccessiblePattern();
    internal static LegacyIAccessiblePattern Wrap(AutomationElement element, IUIAutomationLegacyIAccessiblePattern legacyIAccessiblePattern);
}
public class Microsoft.Windows.Apps.Test.Automation.MultipleViewPattern : BasePattern {
    public static AutomationPattern Pattern;
    public static AutomationProperty CurrentViewProperty;
    public static AutomationProperty SupportedViewsProperty;
    private IUIAutomationMultipleViewPattern _multipleViewPattern;
    public MultipleViewPatternInformation Cached { get; }
    public MultipleViewPatternInformation Current { get; }
    private MultipleViewPattern(AutomationElement element, IUIAutomationMultipleViewPattern multipleViewPattern);
    private static MultipleViewPattern();
    internal static MultipleViewPattern Wrap(AutomationElement element, IUIAutomationMultipleViewPattern multipleViewPattern);
    public string GetViewName(int viewId);
    public void SetCurrentView(int viewId);
    public MultipleViewPatternInformation get_Cached();
    public MultipleViewPatternInformation get_Current();
}
public static class Microsoft.Windows.Apps.Test.Automation.MultipleViewPatternIdentifiers : object {
    public static AutomationPattern Pattern;
    public static AutomationProperty CurrentViewProperty;
    public static AutomationProperty SupportedViewsProperty;
    private static MultipleViewPatternIdentifiers();
}
public class Microsoft.Windows.Apps.Test.Automation.NoClickablePointException : Exception {
    public NoClickablePointException(Exception innerException);
    public NoClickablePointException(string message);
    public NoClickablePointException(string message, Exception innerException);
}
public class Microsoft.Windows.Apps.Test.Automation.NotCondition : Condition {
    public Condition Condition { get; }
    public NotCondition(Condition condition);
    public Condition get_Condition();
}
public class Microsoft.Windows.Apps.Test.Automation.ObjectModelPattern : BasePattern {
    public static AutomationPattern Pattern;
    private IUIAutomationObjectModelPattern _objectModelPattern;
    private ObjectModelPattern(AutomationElement element, IUIAutomationObjectModelPattern objectModelPattern);
    private static ObjectModelPattern();
    internal static ObjectModelPattern Wrap(AutomationElement element, IUIAutomationObjectModelPattern objectModelPattern);
    public object GetUnderlyingObjectModel();
}
public class Microsoft.Windows.Apps.Test.Automation.OrCondition : Condition {
    public OrCondition(Condition[] conditions);
    internal OrCondition(IUIAutomationCondition[] iUIAConditions);
    public Condition[] GetConditions();
}
public enum Microsoft.Windows.Apps.Test.Automation.OrientationType : Enum {
    public int value__;
    public static OrientationType None;
    public static OrientationType Horizontal;
    public static OrientationType Vertical;
}
public enum Microsoft.Windows.Apps.Test.Automation.OutlineStyles : Enum {
    public int value__;
    public static OutlineStyles None;
    public static OutlineStyles Outline;
    public static OutlineStyles Shadow;
    public static OutlineStyles Engraved;
    public static OutlineStyles Embossed;
}
public class Microsoft.Windows.Apps.Test.Automation.PropertyCondition : Condition {
    public AutomationProperty Property { get; }
    public object Value { get; }
    public PropertyConditionFlags Flags { get; }
    public PropertyCondition(AutomationProperty property, object value);
    public AutomationProperty get_Property();
    public object get_Value();
    public PropertyConditionFlags get_Flags();
    private void Init(AutomationProperty property, object value);
}
[FlagsAttribute]
public enum Microsoft.Windows.Apps.Test.Automation.PropertyConditionFlags : Enum {
    public int value__;
    public static PropertyConditionFlags None;
    public static PropertyConditionFlags IgnoreCase;
}
public class Microsoft.Windows.Apps.Test.Automation.ProxyAssemblyNotLoadedException : Exception {
    private static int ElementException;
    public ProxyAssemblyNotLoadedException(Exception innerException);
    public ProxyAssemblyNotLoadedException(string message);
    public ProxyAssemblyNotLoadedException(string message, Exception innerException);
    private static ProxyAssemblyNotLoadedException();
}
public class Microsoft.Windows.Apps.Test.Automation.RangeValuePattern : BasePattern {
    public static AutomationPattern Pattern;
    public static AutomationProperty IsReadOnlyProperty;
    public static AutomationProperty LargeChangeProperty;
    public static AutomationProperty MaximumProperty;
    public static AutomationProperty MinimumProperty;
    public static AutomationProperty SmallChangeProperty;
    public static AutomationProperty ValueProperty;
    private IUIAutomationRangeValuePattern _rangeValuePattern;
    public RangeValuePatternInformation Cached { get; }
    public RangeValuePatternInformation Current { get; }
    private RangeValuePattern(AutomationElement element, IUIAutomationRangeValuePattern rangeValuePattern);
    private static RangeValuePattern();
    internal static RangeValuePattern Wrap(AutomationElement element, IUIAutomationRangeValuePattern rangeValuePattern);
    public void SetValue(double value);
    public RangeValuePatternInformation get_Cached();
    public RangeValuePatternInformation get_Current();
}
public static class Microsoft.Windows.Apps.Test.Automation.RangeValuePatternIdentifiers : object {
    public static AutomationPattern Pattern;
    public static AutomationProperty IsReadOnlyProperty;
    public static AutomationProperty LargeChangeProperty;
    public static AutomationProperty MaximumProperty;
    public static AutomationProperty MinimumProperty;
    public static AutomationProperty SmallChangeProperty;
    public static AutomationProperty ValueProperty;
    private static RangeValuePatternIdentifiers();
}
public enum Microsoft.Windows.Apps.Test.Automation.RowOrColumnMajor : Enum {
    public int value__;
    public static RowOrColumnMajor RowMajor;
    public static RowOrColumnMajor ColumnMajor;
    public static RowOrColumnMajor Indeterminate;
}
public enum Microsoft.Windows.Apps.Test.Automation.ScrollAmount : Enum {
    public int value__;
    public static ScrollAmount LargeDecrement;
    public static ScrollAmount SmallDecrement;
    public static ScrollAmount NoAmount;
    public static ScrollAmount LargeIncrement;
    public static ScrollAmount SmallIncrement;
}
public class Microsoft.Windows.Apps.Test.Automation.ScrollItemPattern : BasePattern {
    public static AutomationPattern Pattern;
    private IUIAutomationScrollItemPattern _scrollItemPattern;
    private ScrollItemPattern(AutomationElement element, IUIAutomationScrollItemPattern scrollItemPattern);
    private static ScrollItemPattern();
    internal static ScrollItemPattern Wrap(AutomationElement element, IUIAutomationScrollItemPattern scrollItemPattern);
    public void ScrollIntoView();
}
public static class Microsoft.Windows.Apps.Test.Automation.ScrollItemPatternIdentifiers : object {
    public static AutomationPattern Pattern;
    private static ScrollItemPatternIdentifiers();
}
public class Microsoft.Windows.Apps.Test.Automation.ScrollPattern : BasePattern {
    public static double NoScroll;
    public static AutomationPattern Pattern;
    public static AutomationProperty HorizontallyScrollableProperty;
    public static AutomationProperty HorizontalScrollPercentProperty;
    public static AutomationProperty HorizontalViewSizeProperty;
    public static AutomationProperty VerticallyScrollableProperty;
    public static AutomationProperty VerticalScrollPercentProperty;
    public static AutomationProperty VerticalViewSizeProperty;
    private IUIAutomationScrollPattern _scrollPattern;
    public ScrollPatternInformation Cached { get; }
    public ScrollPatternInformation Current { get; }
    private ScrollPattern(AutomationElement element, IUIAutomationScrollPattern scrollPattern);
    private static ScrollPattern();
    internal static ScrollPattern Wrap(AutomationElement element, IUIAutomationScrollPattern scrollPattern);
    public void SetScrollPercent(double horizontalPercent, double verticalPercent);
    public void Scroll(ScrollAmount horizontalAmount, ScrollAmount verticalAmount);
    public void ScrollHorizontal(ScrollAmount amount);
    public void ScrollVertical(ScrollAmount amount);
    public ScrollPatternInformation get_Cached();
    public ScrollPatternInformation get_Current();
}
public static class Microsoft.Windows.Apps.Test.Automation.ScrollPatternIdentifiers : object {
    public static AutomationPattern Pattern;
    public static AutomationProperty HorizontallyScrollableProperty;
    public static AutomationProperty HorizontalScrollPercentProperty;
    public static AutomationProperty HorizontalViewSizeProperty;
    public static AutomationProperty VerticallyScrollableProperty;
    public static AutomationProperty VerticalScrollPercentProperty;
    public static AutomationProperty VerticalViewSizeProperty;
    public static double NoScroll;
    private static ScrollPatternIdentifiers();
}
public class Microsoft.Windows.Apps.Test.Automation.SelectionItemPattern : BasePattern {
    public static AutomationPattern Pattern;
    public static AutomationProperty SelectionContainerProperty;
    public static AutomationProperty IsSelectedProperty;
    public static AutomationEvent ElementAddedToSelectionEvent;
    public static AutomationEvent ElementRemovedFromSelectionEvent;
    public static AutomationEvent ElementSelectedEvent;
    private IUIAutomationSelectionItemPattern _selectionItemPattern;
    public SelectionItemPatternInformation Cached { get; }
    public SelectionItemPatternInformation Current { get; }
    private SelectionItemPattern(AutomationElement element, IUIAutomationSelectionItemPattern selectionItemPattern);
    private static SelectionItemPattern();
    internal static SelectionItemPattern Wrap(AutomationElement element, IUIAutomationSelectionItemPattern selectionItemPattern);
    public void Select();
    public void AddToSelection();
    public void RemoveFromSelection();
    public SelectionItemPatternInformation get_Cached();
    public SelectionItemPatternInformation get_Current();
}
public static class Microsoft.Windows.Apps.Test.Automation.SelectionItemPatternIdentifiers : object {
    public static AutomationPattern Pattern;
    public static AutomationEvent ElementAddedToSelectionEvent;
    public static AutomationEvent ElementRemovedFromSelectionEvent;
    public static AutomationEvent ElementSelectedEvent;
    public static AutomationProperty IsSelectedProperty;
    public static AutomationProperty SelectionContainerProperty;
    private static SelectionItemPatternIdentifiers();
}
public class Microsoft.Windows.Apps.Test.Automation.SelectionPattern : BasePattern {
    public static AutomationPattern Pattern;
    public static AutomationProperty CanSelectMultipleProperty;
    public static AutomationProperty IsSelectionRequiredProperty;
    public static AutomationProperty SelectionProperty;
    public static AutomationEvent InvalidatedEvent;
    private IUIAutomationSelectionPattern _selectionPattern;
    public SelectionPatternInformation Cached { get; }
    public SelectionPatternInformation Current { get; }
    private SelectionPattern(AutomationElement element, IUIAutomationSelectionPattern selectionPattern);
    private static SelectionPattern();
    internal static SelectionPattern Wrap(AutomationElement element, IUIAutomationSelectionPattern selectionPattern);
    public SelectionPatternInformation get_Cached();
    public SelectionPatternInformation get_Current();
}
public static class Microsoft.Windows.Apps.Test.Automation.SelectionPatternIdentifiers : object {
    public static AutomationPattern Pattern;
    public static AutomationEvent InvalidatedEvent;
    public static AutomationProperty CanSelectMultipleProperty;
    public static AutomationProperty IsSelectionRequiredProperty;
    public static AutomationProperty SelectionProperty;
    private static SelectionPatternIdentifiers();
}
public class Microsoft.Windows.Apps.Test.Automation.SpreadsheetItemPattern : BasePattern {
    public static AutomationPattern Pattern;
    public static AutomationProperty FormulaProperty;
    public static AutomationProperty AnnotationObjectsProperty;
    public static AutomationProperty AnnotationTypesProperty;
    private IUIAutomationSpreadsheetItemPattern _spreadsheetItemPattern;
    private SpreadsheetItemPattern(AutomationElement element, IUIAutomationSpreadsheetItemPattern spreadsheetItemPattern);
    private static SpreadsheetItemPattern();
    internal static SpreadsheetItemPattern Wrap(AutomationElement element, IUIAutomationSpreadsheetItemPattern spreadsheetItemPattern);
}
public class Microsoft.Windows.Apps.Test.Automation.SpreadsheetPattern : BasePattern {
    public static AutomationPattern Pattern;
    private IUIAutomationSpreadsheetPattern _spreadsheetPattern;
    private SpreadsheetPattern(AutomationElement element, IUIAutomationSpreadsheetPattern spreadsheetPattern);
    private static SpreadsheetPattern();
    internal static SpreadsheetPattern Wrap(AutomationElement element, IUIAutomationSpreadsheetPattern spreadsheetPattern);
}
public class Microsoft.Windows.Apps.Test.Automation.StructureChangedEventArgs : AutomationEventArgs {
    private Int32[] _runtimeId;
    private StructureChangeType _structureChangeType;
    public StructureChangeType StructureChangeType { get; }
    public StructureChangedEventArgs(StructureChangeType structureChangeType, Int32[] runtimeId);
    public Int32[] GetRuntimeId();
    public StructureChangeType get_StructureChangeType();
}
public class Microsoft.Windows.Apps.Test.Automation.StructureChangedEventHandler : MulticastDelegate {
    public StructureChangedEventHandler(object object, IntPtr method);
    public virtual void Invoke(object sender, StructureChangedEventArgs e);
    public virtual IAsyncResult BeginInvoke(object sender, StructureChangedEventArgs e, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class Microsoft.Windows.Apps.Test.Automation.StructureChangedEventHandlerImpl : UIAutomationEventHandler`1<StructureChangedEventHandlerImpl> {
    private StructureChangedEventHandler _handlingDelegate;
    private IUIAutomationElement _uiAutomationElement;
    private StructureChangedEventHandlerImpl(IUIAutomationElement uiAutomationElement, StructureChangedEventHandler handlingDelegate);
    protected virtual void Remove();
    private sealed virtual override void UIAutomationClient.IUIAutomationStructureChangedEventHandler.HandleStructureChangedEvent(IUIAutomationElement sender, StructureChangeType changeType, Int32[] runtimeId);
    internal static void Add(AutomationElement element, TreeScope scope, StructureChangedEventHandler handlingDelegate);
    internal static void Remove(AutomationElement element, StructureChangedEventHandler handlingDelegate);
    [CompilerGeneratedAttribute]
private void <Remove>b__1_0();
}
public enum Microsoft.Windows.Apps.Test.Automation.StructureChangeType : Enum {
    public int value__;
    public static StructureChangeType ChildAdded;
    public static StructureChangeType ChildRemoved;
    public static StructureChangeType ChildrenBulkAdded;
    public static StructureChangeType ChildrenBulkRemoved;
    public static StructureChangeType ChildrenInvalidated;
    public static StructureChangeType ChildrenReordered;
}
public class Microsoft.Windows.Apps.Test.Automation.StylesPattern : BasePattern {
    public static AutomationPattern Pattern;
    public static AutomationProperty StyleIdProperty;
    public static AutomationProperty StyleNameProperty;
    public static AutomationProperty FillColorProperty;
    public static AutomationProperty FillPatternStyleProperty;
    public static AutomationProperty ShapeProperty;
    public static AutomationProperty FillPatternColorProperty;
    public static AutomationProperty ExtendedPropertiesProperty;
    private IUIAutomationStylesPattern _stylesPattern;
    private StylesPattern(AutomationElement element, IUIAutomationStylesPattern stylesPattern);
    private static StylesPattern();
    internal static StylesPattern Wrap(AutomationElement element, IUIAutomationStylesPattern stylesPattern);
}
public enum Microsoft.Windows.Apps.Test.Automation.SupportedTextSelection : Enum {
    public int value__;
    public static SupportedTextSelection Multiple;
    public static SupportedTextSelection None;
    public static SupportedTextSelection Single;
}
public class Microsoft.Windows.Apps.Test.Automation.SynchronizedInputPattern : BasePattern {
    public static AutomationPattern Pattern;
    private IUIAutomationSynchronizedInputPattern _synchronizedInputPattern;
    private SynchronizedInputPattern(AutomationElement element, IUIAutomationSynchronizedInputPattern synchronizedInputPattern);
    private static SynchronizedInputPattern();
    internal static SynchronizedInputPattern Wrap(AutomationElement element, IUIAutomationSynchronizedInputPattern synchronizedInputPattern);
}
public class Microsoft.Windows.Apps.Test.Automation.TableItemPattern : GridItemPattern {
    public static AutomationPattern Pattern;
    public static AutomationProperty ColumnHeaderItemsProperty;
    public static AutomationProperty RowHeaderItemsProperty;
    private IUIAutomationTableItemPattern _tableItemPattern;
    public TableItemPatternInformation Cached { get; }
    public TableItemPatternInformation Current { get; }
    private TableItemPattern(AutomationElement element, IUIAutomationTableItemPattern tableItemPattern);
    private static TableItemPattern();
    internal static TableItemPattern Wrap(AutomationElement element, IUIAutomationTableItemPattern pattern);
    public TableItemPatternInformation get_Cached();
    public TableItemPatternInformation get_Current();
}
public static class Microsoft.Windows.Apps.Test.Automation.TableItemPatternIdentifiers : object {
    public static AutomationPattern Pattern;
    public static AutomationProperty ColumnHeaderItemsProperty;
    public static AutomationProperty RowHeaderItemsProperty;
    private static TableItemPatternIdentifiers();
}
public class Microsoft.Windows.Apps.Test.Automation.TablePattern : GridPattern {
    public static AutomationPattern Pattern;
    public static AutomationProperty ColumnHeadersProperty;
    public static AutomationProperty RowHeadersProperty;
    public static AutomationProperty RowOrColumnMajorProperty;
    private IUIAutomationTablePattern _tablePattern;
    public TablePatternInformation Cached { get; }
    public TablePatternInformation Current { get; }
    private TablePattern(AutomationElement element, IUIAutomationTablePattern tablePattern, IUIAutomationGridPattern gridPattern);
    private static TablePattern();
    internal static TablePattern Wrap(AutomationElement element, IUIAutomationTablePattern tablePattern);
    public TablePatternInformation get_Cached();
    public TablePatternInformation get_Current();
}
public static class Microsoft.Windows.Apps.Test.Automation.TablePatternIdentifiers : object {
    public static AutomationPattern Pattern;
    public static AutomationProperty ColumnHeadersProperty;
    public static AutomationProperty RowHeadersProperty;
    public static AutomationProperty RowOrColumnMajorProperty;
    private static TablePatternIdentifiers();
}
public class Microsoft.Windows.Apps.Test.Automation.Text.TextPatternRange : object {
    private IUIAutomationTextRange _textPatternRange;
    internal IUIAutomationTextRange IUIAutomationTextRange { get; }
    internal TextPatternRange(IUIAutomationTextRange textPatternRange);
    public void AddToSelection();
    public TextPatternRange Clone();
    public bool Compare(TextPatternRange range);
    public int CompareEndpoints(TextPatternRangeEndpoint endpoint, TextPatternRange targetRange, TextPatternRangeEndpoint targetEndpoint);
    public void ExpandToEnclosingUnit(TextUnit unit);
    public TextPatternRange FindAttribute(AutomationTextAttribute attribute, object value, bool backward);
    public TextPatternRange FindText(string text, bool backward, bool ignoreCase);
    public object GetAttributeValue(AutomationTextAttribute attribute);
    public Rectangle[] GetBoundingRectangles();
    public AutomationElement[] GetChildren();
    public AutomationElement GetEnclosingElement();
    public string GetText(int maxLength);
    public int Move(TextUnit unit, int count);
    public void MoveEndpointByRange(TextPatternRangeEndpoint endpoint, TextPatternRange targetRange, TextPatternRangeEndpoint targetEndpoint);
    public int MoveEndpointByUnit(TextPatternRangeEndpoint endpoint, TextUnit unit, int count);
    public void RemoveFromSelection();
    public void ScrollIntoView(bool alignToTop);
    public void Select();
    internal IUIAutomationTextRange get_IUIAutomationTextRange();
}
public class Microsoft.Windows.Apps.Test.Automation.TextChildPattern : BasePattern {
    public static AutomationPattern Pattern;
    private IUIAutomationTextChildPattern _textChildPattern;
    private TextChildPattern(AutomationElement element, IUIAutomationTextChildPattern textChildPattern);
    private static TextChildPattern();
    internal static TextChildPattern Wrap(AutomationElement element, IUIAutomationTextChildPattern textChildPattern);
}
public enum Microsoft.Windows.Apps.Test.Automation.TextDecorationLineStyle : Enum {
    public int value__;
    public static TextDecorationLineStyle None;
    public static TextDecorationLineStyle Single;
    public static TextDecorationLineStyle WordsOnly;
    public static TextDecorationLineStyle Double;
    public static TextDecorationLineStyle Dot;
    public static TextDecorationLineStyle Dash;
    public static TextDecorationLineStyle DashDot;
    public static TextDecorationLineStyle DashDotDot;
    public static TextDecorationLineStyle Wavy;
    public static TextDecorationLineStyle ThickSingle;
    public static TextDecorationLineStyle DoubleWavy;
    public static TextDecorationLineStyle ThickWavy;
    public static TextDecorationLineStyle LongDash;
    public static TextDecorationLineStyle ThickDash;
    public static TextDecorationLineStyle ThickDashDot;
    public static TextDecorationLineStyle ThickDashDotDot;
    public static TextDecorationLineStyle ThickDot;
    public static TextDecorationLineStyle ThickLongDash;
    public static TextDecorationLineStyle Other;
}
public class Microsoft.Windows.Apps.Test.Automation.TextEditPattern : TextPattern {
    public static AutomationPattern Pattern;
    private IUIAutomationTextEditPattern textEditPattern;
    public TextEditPattern(AutomationElement element, IUIAutomationTextEditPattern textEditPattern);
    private static TextEditPattern();
    internal static TextEditPattern Wrap(AutomationElement element, IUIAutomationTextEditPattern textEditPattern);
    public TextPatternRange GetActiveComposition();
    public TextPatternRange GetConversionTarget();
}
public class Microsoft.Windows.Apps.Test.Automation.TextPattern : BasePattern {
    public static AutomationPattern Pattern;
    public static object MixedAttributeValue;
    public static AutomationTextAttribute AnnotationTypesAttribute;
    public static AutomationTextAttribute AnimationStyleAttribute;
    public static AutomationTextAttribute BackgroundColorAttribute;
    public static AutomationTextAttribute BulletStyleAttribute;
    public static AutomationTextAttribute CapStyleAttribute;
    public static AutomationTextAttribute CultureAttribute;
    public static AutomationTextAttribute FontNameAttribute;
    public static AutomationTextAttribute FontSizeAttribute;
    public static AutomationTextAttribute FontWeightAttribute;
    public static AutomationTextAttribute ForegroundColorAttribute;
    public static AutomationTextAttribute HorizontalTextAlignmentAttribute;
    public static AutomationTextAttribute IndentationFirstLineAttribute;
    public static AutomationTextAttribute IndentationLeadingAttribute;
    public static AutomationTextAttribute IndentationTrailingAttribute;
    public static AutomationTextAttribute IsHiddenAttribute;
    public static AutomationTextAttribute IsItalicAttribute;
    public static AutomationTextAttribute IsReadOnlyAttribute;
    public static AutomationTextAttribute IsSubscriptAttribute;
    public static AutomationTextAttribute IsSuperscriptAttribute;
    public static AutomationTextAttribute MarginBottomAttribute;
    public static AutomationTextAttribute MarginLeadingAttribute;
    public static AutomationTextAttribute MarginTopAttribute;
    public static AutomationTextAttribute MarginTrailingAttribute;
    public static AutomationTextAttribute OutlineStylesAttribute;
    public static AutomationTextAttribute OverlineColorAttribute;
    public static AutomationTextAttribute OverlineStyleAttribute;
    public static AutomationTextAttribute StrikethroughColorAttribute;
    public static AutomationTextAttribute StrikethroughStyleAttribute;
    public static AutomationTextAttribute TabsAttribute;
    public static AutomationTextAttribute TextFlowDirectionsAttribute;
    public static AutomationTextAttribute UnderlineColorAttribute;
    public static AutomationTextAttribute UnderlineStyleAttribute;
    public static AutomationEvent TextChangedEvent;
    public static AutomationEvent TextSelectionChangedEvent;
    private IUIAutomationTextPattern _textPattern;
    public TextPatternRange DocumentRange { get; }
    public SupportedTextSelection SupportedTextSelection { get; }
    internal TextPattern(AutomationElement element, IUIAutomationTextPattern textPattern);
    private static TextPattern();
    internal static TextPattern Wrap(AutomationElement element, IUIAutomationTextPattern pattern);
    public TextPatternRange[] GetSelection();
    public TextPatternRange[] GetVisibleRanges();
    public TextPatternRange RangeFromChild(AutomationElement childElement);
    public TextPatternRange RangeFromPoint(Point screenLocation);
    public TextPatternRange get_DocumentRange();
    public SupportedTextSelection get_SupportedTextSelection();
}
public class Microsoft.Windows.Apps.Test.Automation.TextPattern2 : TextPattern {
    public static AutomationPattern Pattern;
    private IUIAutomationTextPattern2 _textPattern2;
    private TextPattern2(AutomationElement element, IUIAutomationTextPattern2 textPattern2);
    private static TextPattern2();
    internal static TextPattern2 Wrap(AutomationElement element, IUIAutomationTextPattern2 textPattern2);
    public TextPatternRange RangeFromAnnotation(AutomationElement annotationElement);
    public TextPatternRange GetCaretRange(Int32& isActive);
}
public static class Microsoft.Windows.Apps.Test.Automation.TextPatternIdentifiers : object {
    public static AutomationPattern Pattern;
    public static object MixedAttributeValue;
    public static AutomationTextAttribute AnnotationTypesAttribute;
    public static AutomationTextAttribute AnimationStyleAttribute;
    public static AutomationTextAttribute BackgroundColorAttribute;
    public static AutomationTextAttribute BulletStyleAttribute;
    public static AutomationTextAttribute CapStyleAttribute;
    public static AutomationTextAttribute CultureAttribute;
    public static AutomationTextAttribute FontNameAttribute;
    public static AutomationTextAttribute FontSizeAttribute;
    public static AutomationTextAttribute FontWeightAttribute;
    public static AutomationTextAttribute ForegroundColorAttribute;
    public static AutomationTextAttribute HorizontalTextAlignmentAttribute;
    public static AutomationTextAttribute IndentationFirstLineAttribute;
    public static AutomationTextAttribute IndentationLeadingAttribute;
    public static AutomationTextAttribute IndentationTrailingAttribute;
    public static AutomationTextAttribute IsHiddenAttribute;
    public static AutomationTextAttribute IsItalicAttribute;
    public static AutomationTextAttribute IsReadOnlyAttribute;
    public static AutomationTextAttribute IsSubscriptAttribute;
    public static AutomationTextAttribute IsSuperscriptAttribute;
    public static AutomationTextAttribute MarginBottomAttribute;
    public static AutomationTextAttribute MarginLeadingAttribute;
    public static AutomationTextAttribute MarginTopAttribute;
    public static AutomationTextAttribute MarginTrailingAttribute;
    public static AutomationTextAttribute OutlineStylesAttribute;
    public static AutomationTextAttribute OverlineColorAttribute;
    public static AutomationTextAttribute OverlineStyleAttribute;
    public static AutomationTextAttribute StrikethroughColorAttribute;
    public static AutomationTextAttribute StrikethroughStyleAttribute;
    public static AutomationTextAttribute TabsAttribute;
    public static AutomationTextAttribute TextFlowDirectionsAttribute;
    public static AutomationTextAttribute UnderlineColorAttribute;
    public static AutomationTextAttribute UnderlineStyleAttribute;
    public static AutomationEvent TextChangedEvent;
    public static AutomationEvent TextSelectionChangedEvent;
    private static TextPatternIdentifiers();
    private static object UiaGetReservedMixedAttributeValue();
    private static int RawUiaGetReservedMixedAttributeValue(Object& mixedAttributeValue);
}
public enum Microsoft.Windows.Apps.Test.Automation.TextPatternRangeEndpoint : Enum {
    public int value__;
    public static TextPatternRangeEndpoint End;
    public static TextPatternRangeEndpoint Start;
}
public enum Microsoft.Windows.Apps.Test.Automation.TextUnit : Enum {
    public int value__;
    public static TextUnit Character;
    public static TextUnit Document;
    public static TextUnit Format;
    public static TextUnit Line;
    public static TextUnit Page;
    public static TextUnit Paragraph;
    public static TextUnit Word;
}
public class Microsoft.Windows.Apps.Test.Automation.TogglePattern : BasePattern {
    public static AutomationPattern Pattern;
    public static AutomationProperty ToggleStateProperty;
    private IUIAutomationTogglePattern _togglePattern;
    public TogglePatternInformation Cached { get; }
    public TogglePatternInformation Current { get; }
    private TogglePattern(AutomationElement element, IUIAutomationTogglePattern togglePattern);
    private static TogglePattern();
    internal static TogglePattern Wrap(AutomationElement element, IUIAutomationTogglePattern pattern);
    public void Toggle();
    public TogglePatternInformation get_Cached();
    public TogglePatternInformation get_Current();
}
public static class Microsoft.Windows.Apps.Test.Automation.TogglePatternIdentifiers : object {
    public static AutomationPattern Pattern;
    public static AutomationProperty ToggleStateProperty;
    private static TogglePatternIdentifiers();
}
public enum Microsoft.Windows.Apps.Test.Automation.ToggleState : Enum {
    public int value__;
    public static ToggleState Off;
    public static ToggleState On;
    public static ToggleState Indeterminate;
}
public class Microsoft.Windows.Apps.Test.Automation.TransformPattern : BasePattern {
    public static AutomationPattern Pattern;
    public static AutomationProperty CanMoveProperty;
    public static AutomationProperty CanResizeProperty;
    public static AutomationProperty CanRotateProperty;
    private IUIAutomationTransformPattern _transformPattern;
    public TransformPatternInformation Cached { get; }
    public TransformPatternInformation Current { get; }
    internal TransformPattern(AutomationElement element, IUIAutomationTransformPattern transformPattern);
    private static TransformPattern();
    internal static TransformPattern Wrap(AutomationElement element, IUIAutomationTransformPattern transformPattern);
    public void Move(double x, double y);
    public void Resize(double width, double height);
    public void Rotate(double degrees);
    public TransformPatternInformation get_Cached();
    public TransformPatternInformation get_Current();
}
public class Microsoft.Windows.Apps.Test.Automation.TransformPattern2 : TransformPattern {
    public static AutomationPattern Pattern;
    public static AutomationProperty CanZoomProperty;
    public static AutomationProperty ZoomLevelProperty;
    public static AutomationProperty ZoomMinimumProperty;
    public static AutomationProperty ZoomMaximumProperty;
    private IUIAutomationTransformPattern2 _transformPattern2;
    private TransformPattern2(AutomationElement element, IUIAutomationTransformPattern2 transformPattern2);
    private static TransformPattern2();
    internal static TransformPattern2 Wrap(AutomationElement element, IUIAutomationTransformPattern2 transformPattern2);
}
public static class Microsoft.Windows.Apps.Test.Automation.TransformPatternIdentifiers : object {
    public static AutomationPattern Pattern;
    public static AutomationProperty CanMoveProperty;
    public static AutomationProperty CanResizeProperty;
    public static AutomationProperty CanRotateProperty;
    private static TransformPatternIdentifiers();
}
[FlagsAttribute]
public enum Microsoft.Windows.Apps.Test.Automation.TreeScope : Enum {
    public int value__;
    public static TreeScope Ancestors;
    public static TreeScope Children;
    public static TreeScope Descendants;
    public static TreeScope Element;
    public static TreeScope Parent;
    public static TreeScope Subtree;
}
public class Microsoft.Windows.Apps.Test.Automation.TreeWalker : object {
    public static TreeWalker RawViewWalker;
    public static TreeWalker ControlViewWalker;
    public static TreeWalker ContentViewWalker;
    private Condition _condition;
    private IUIAutomationTreeWalker _treewalker;
    public Condition Condition { get; }
    public TreeWalker(Condition condition);
    private static TreeWalker();
    public AutomationElement GetParent(AutomationElement element);
    public AutomationElement GetFirstChild(AutomationElement element);
    public AutomationElement GetLastChild(AutomationElement element);
    public AutomationElement GetNextSibling(AutomationElement element);
    public AutomationElement GetPreviousSibling(AutomationElement element);
    public AutomationElement Normalize(AutomationElement element);
    public AutomationElement GetParent(AutomationElement element, CacheRequest request);
    public AutomationElement GetFirstChild(AutomationElement element, CacheRequest request);
    public AutomationElement GetLastChild(AutomationElement element, CacheRequest request);
    public AutomationElement GetNextSibling(AutomationElement element, CacheRequest request);
    public AutomationElement GetPreviousSibling(AutomationElement element, CacheRequest request);
    public AutomationElement Normalize(AutomationElement element, CacheRequest request);
    public Condition get_Condition();
}
internal static class Microsoft.Windows.Apps.Test.Automation.UiaConvert : object {
    public static bool ConvertException(COMException e, Exception& newException);
    public static TextPatternRangeEndpoint Convert(TextPatternRangeEndpoint textPatternRangeEndpoint);
    public static TextUnit Convert(TextUnit textUnit);
    public static SupportedTextSelection Convert(SupportedTextSelection supportedTextSelection);
    public static AutomationElementMode Convert(AutomationElementMode automationElementMode);
    public static StructureChangeType Convert(StructureChangeType structureChangeType);
    public static ExpandCollapseState Convert(ExpandCollapseState expandCollapseState);
    public static TreeScope Convert(TreeScope treeScope);
    public static ToggleState Convert(ToggleState toggleState);
    public static WindowInteractionState Convert(WindowInteractionState windowInteractionState);
    public static WindowVisualState Convert(WindowVisualState windowVisualState);
    public static DockPosition Convert(DockPosition position);
    public static RowOrColumnMajor Convert(RowOrColumnMajor rowOrColumnMajor);
    public static TreeScope Convert(TreeScope treeScope);
    public static ScrollAmount Convert(ScrollAmount scrollAmount);
    public static WindowVisualState Convert(WindowVisualState state);
    public static TextPatternRangeEndpoint Convert(TextPatternRangeEndpoint textPatternRangeEndpoint);
    public static TextUnit Convert(TextUnit textUnit);
    public static SupportedTextSelection Convert(SupportedTextSelection supportedTextSelection);
    public static AutomationElementMode Convert(AutomationElementMode automationElementMode);
    public static StructureChangeType Convert(StructureChangeType structureChangeType);
    public static object ConvertPropertyValue(AutomationProperty property, object propertyValue);
}
internal static class Microsoft.Windows.Apps.Test.Automation.UiaCoreIds : object {
    internal static int UIA_E_ELEMENTNOTENABLED;
    internal static int UIA_E_ELEMENTNOTAVAILABLE;
    internal static int UIA_E_NOCLICKABLEPOINT;
    internal static int UIA_E_PROXYASSEMBLYNOTLOADED;
}
internal abstract class Microsoft.Windows.Apps.Test.Automation.UIAutomationEventHandler`1 : object {
    internal static List`1<T> _events;
    private static UIAutomationEventHandler`1();
    protected abstract virtual void Remove();
    protected static void Add(T instance);
    protected static bool Remove(Predicate`1<T> predicate);
    public static void RemoveAll();
}
internal static class Microsoft.Windows.Apps.Test.Automation.Validate : object {
    public static void ArgumentNotNull(object parameter, string parameterName);
    public static void StringNeitherNullNorEmpty(string parameter, string parameterName);
}
public class Microsoft.Windows.Apps.Test.Automation.ValuePattern : BasePattern {
    public static AutomationPattern Pattern;
    public static AutomationProperty ValueProperty;
    public static AutomationProperty IsReadOnlyProperty;
    private IUIAutomationValuePattern _valuePattern;
    public ValuePatternInformation Cached { get; }
    public ValuePatternInformation Current { get; }
    private ValuePattern(AutomationElement element, IUIAutomationValuePattern valuePattern);
    private static ValuePattern();
    internal static ValuePattern Wrap(AutomationElement element, IUIAutomationValuePattern valuePattern);
    public void SetValue(string value);
    public ValuePatternInformation get_Cached();
    public ValuePatternInformation get_Current();
}
public static class Microsoft.Windows.Apps.Test.Automation.ValuePatternIdentifiers : object {
    public static AutomationPattern Pattern;
    public static AutomationProperty IsReadOnlyProperty;
    public static AutomationProperty ValueProperty;
    private static ValuePatternIdentifiers();
}
public class Microsoft.Windows.Apps.Test.Automation.VirtualizedItemPattern : BasePattern {
    public static AutomationPattern Pattern;
    private IUIAutomationVirtualizedItemPattern _virtualizedItemPattern;
    private VirtualizedItemPattern(AutomationElement element, IUIAutomationVirtualizedItemPattern virtualizedItemPattern);
    private static VirtualizedItemPattern();
    internal static VirtualizedItemPattern Wrap(AutomationElement element, IUIAutomationVirtualizedItemPattern virtualizedItemPattern);
    public void Realize();
}
public class Microsoft.Windows.Apps.Test.Automation.WindowClosedEventArgs : AutomationEventArgs {
    private Int32[] _runtimeId;
    public WindowClosedEventArgs(Int32[] runtimeId);
    public Int32[] GetRuntimeId();
}
public enum Microsoft.Windows.Apps.Test.Automation.WindowInteractionState : Enum {
    public int value__;
    public static WindowInteractionState Running;
    public static WindowInteractionState Closing;
    public static WindowInteractionState ReadyForUserInteraction;
    public static WindowInteractionState BlockedByModalWindow;
    public static WindowInteractionState NotResponding;
}
public class Microsoft.Windows.Apps.Test.Automation.WindowPattern : BasePattern {
    public static AutomationPattern Pattern;
    public static AutomationProperty CanMaximizeProperty;
    public static AutomationProperty CanMinimizeProperty;
    public static AutomationProperty IsModalProperty;
    public static AutomationProperty IsTopmostProperty;
    public static AutomationProperty WindowInteractionStateProperty;
    public static AutomationProperty WindowVisualStateProperty;
    public static AutomationEvent WindowClosedEvent;
    public static AutomationEvent WindowOpenedEvent;
    private IUIAutomationWindowPattern _windowPattern;
    public WindowPatternInformation Cached { get; }
    public WindowPatternInformation Current { get; }
    private WindowPattern(AutomationElement element, IUIAutomationWindowPattern windowPattern);
    private static WindowPattern();
    internal static WindowPattern Wrap(AutomationElement element, IUIAutomationWindowPattern windowPattern);
    public void SetWindowVisualState(WindowVisualState state);
    public void Close();
    public bool WaitForInputIdle(int milliseconds);
    public WindowPatternInformation get_Cached();
    public WindowPatternInformation get_Current();
}
public static class Microsoft.Windows.Apps.Test.Automation.WindowPatternIdentifiers : object {
    public static AutomationPattern Pattern;
    public static AutomationEvent WindowClosedEvent;
    public static AutomationEvent WindowOpenedEvent;
    public static AutomationProperty CanMaximizeProperty;
    public static AutomationProperty CanMinimizeProperty;
    public static AutomationProperty IsModalProperty;
    public static AutomationProperty IsTopmostProperty;
    public static AutomationProperty WindowInteractionStateProperty;
    public static AutomationProperty WindowVisualStateProperty;
    private static WindowPatternIdentifiers();
}
public enum Microsoft.Windows.Apps.Test.Automation.WindowVisualState : Enum {
    public int value__;
    public static WindowVisualState Normal;
    public static WindowVisualState Maximized;
    public static WindowVisualState Minimized;
}
[ExtensionAttribute]
internal static class UIAutomationAdapter.Utilities.ArrayMarshaller : object {
    [ExtensionAttribute]
public static T[] ToTypedArray(Array value);
}
