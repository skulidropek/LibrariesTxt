internal static class Interop : object {
}
internal class Microsoft.Win32.SafeHandles.CoTaskMemSafeHandle : SafeHandle {
    public bool IsInvalid { get; }
    public virtual bool get_IsInvalid();
    protected virtual bool ReleaseHandle();
}
public class System.ComponentModel.Design.ArrayEditor : CollectionEditor {
    public ArrayEditor(Type type);
    protected virtual Type CreateCollectionItemType();
    protected virtual Object[] GetItems(object editValue);
    protected virtual object SetItems(object editValue, Object[] value);
}
public class System.ComponentModel.Design.CollectionEditor : UITypeEditor {
    private Type _collectionItemType;
    private Type[] _newItemTypes;
    private ITypeDescriptorContext _currentContext;
    private bool _ignoreChangedEvents;
    private bool _ignoreChangingEvents;
    [CompilerGeneratedAttribute]
private Type <CollectionType>k__BackingField;
    protected Type CollectionItemType { get; }
    protected Type CollectionType { get; }
    protected ITypeDescriptorContext Context { get; }
    protected Type[] NewItemTypes { get; }
    protected string HelpTopic { get; }
    public CollectionEditor(Type type);
    protected Type get_CollectionItemType();
    [CompilerGeneratedAttribute]
protected Type get_CollectionType();
    protected ITypeDescriptorContext get_Context();
    protected Type[] get_NewItemTypes();
    protected virtual string get_HelpTopic();
    protected virtual bool CanRemoveInstance(object value);
    protected virtual void CancelChanges();
    protected virtual bool CanSelectMultipleInstances();
    protected virtual CollectionForm CreateCollectionForm();
    protected virtual object CreateInstance(Type itemType);
    protected virtual IList GetObjectsFromInstance(object instance);
    protected virtual string GetDisplayText(object value);
    protected virtual Type CreateCollectionItemType();
    protected virtual Type[] CreateNewItemTypes();
    protected virtual void DestroyInstance(object instance);
    public virtual object EditValue(ITypeDescriptorContext context, IServiceProvider provider, object value);
    public virtual UITypeEditorEditStyle GetEditStyle(ITypeDescriptorContext context);
    private bool IsAnyObjectInheritedReadOnly(Object[] items);
    protected virtual Object[] GetItems(object editValue);
    protected object GetService(Type serviceType);
    private void OnComponentChanged(object sender, ComponentChangedEventArgs e);
    private void OnComponentChanging(object sender, ComponentChangingEventArgs e);
    internal virtual void OnItemRemoving(object item);
    protected virtual object SetItems(object editValue, Object[] value);
    protected virtual void ShowHelp();
    [CompilerGeneratedAttribute]
private CollectionForm <EditValue>b__27_0();
}
public class System.ComponentModel.Design.DateTimeEditor : UITypeEditor {
    public virtual object EditValue(ITypeDescriptorContext context, IServiceProvider provider, object value);
    public virtual UITypeEditorEditStyle GetEditStyle(ITypeDescriptorContext context);
}
public class System.ComponentModel.Design.MultilineStringEditor : UITypeEditor {
    private MultilineStringEditorUI _editorUI;
    public virtual object EditValue(ITypeDescriptorContext context, IServiceProvider provider, object value);
    public virtual UITypeEditorEditStyle GetEditStyle(ITypeDescriptorContext context);
    public virtual bool GetPaintValueSupported(ITypeDescriptorContext context);
}
public abstract class System.ComponentModel.Design.ObjectSelectorEditor : UITypeEditor {
    public bool SubObjectSelector;
    protected object prevValue;
    protected object currValue;
    private Selector _selector;
    public ObjectSelectorEditor(bool subObjectSelector);
    public virtual object EditValue(ITypeDescriptorContext context, IServiceProvider provider, object value);
    public static void ApplyTreeViewThemeStyles(TreeView treeView);
    private static int TreeView_GetExtendedStyle(IntPtr handle);
    private static void TreeView_SetExtendedStyle(IntPtr handle, int extendedStyle, int mask);
    public virtual UITypeEditorEditStyle GetEditStyle(ITypeDescriptorContext context);
    protected internal bool EqualsToValue(object value);
    protected virtual void FillTreeWithData(Selector selector, ITypeDescriptorContext context, IServiceProvider provider);
    public virtual void SetValue(object value);
}
internal static class System.Configuration.ConfigurationStringConstants : object {
    internal static string WinformsApplicationConfigurationSectionName;
    internal static string DpiAwarenessKeyName;
    internal static string EnableWindowsFormsHighDpiAutoResizingKeyName;
    internal static string ToolStripDisableHighDpiImprovementsKeyName;
    internal static string CheckedListBoxDisableHighDpiImprovementsKeyName;
    internal static string DataGridViewControlDisableHighDpiImprovements;
    internal static string FormDisableSinglePassScalingOfDpiFormsKeyName;
    internal static string DisableDpiChangedMessageHandlingKeyName;
    internal static string DisableDpiChangedHighDpiImprovementsKeyName;
    internal static string AnchorLayoutDisableHighDpiImprovementsKeyName;
    internal static string MonthCalendarDisableHighDpiImprovementsKeyName;
}
[CLSCompliantAttribute("False")]
public class System.Drawing.Design.BitmapEditor : ImageEditor {
    protected static List`1<string> BitmapExtensions;
    private static BitmapEditor();
    protected virtual string GetFileDialogDescription();
    protected virtual String[] GetExtensions();
    protected virtual Image LoadFromStream(Stream stream);
}
[CLSCompliantAttribute("False")]
public class System.Drawing.Design.ColorEditor : UITypeEditor {
    private ColorUI _colorUI;
    public virtual object EditValue(ITypeDescriptorContext context, IServiceProvider provider, object value);
    public virtual UITypeEditorEditStyle GetEditStyle(ITypeDescriptorContext context);
    public virtual bool GetPaintValueSupported(ITypeDescriptorContext context);
    public virtual void PaintValue(PaintValueEventArgs e);
}
public class System.Drawing.Design.ContentAlignmentEditor : UITypeEditor {
    private ContentUI _contentUI;
    public virtual object EditValue(ITypeDescriptorContext context, IServiceProvider provider, object value);
    public virtual UITypeEditorEditStyle GetEditStyle(ITypeDescriptorContext context);
}
[CLSCompliantAttribute("False")]
public class System.Drawing.Design.CursorEditor : UITypeEditor {
    private CursorUI _cursorUI;
    public bool IsDropDownResizable { get; }
    public virtual bool get_IsDropDownResizable();
    public virtual object EditValue(ITypeDescriptorContext context, IServiceProvider provider, object value);
    public virtual UITypeEditorEditStyle GetEditStyle(ITypeDescriptorContext context);
}
[CLSCompliantAttribute("False")]
public class System.Drawing.Design.FontEditor : UITypeEditor {
    private FontDialog _fontDialog;
    public virtual object EditValue(ITypeDescriptorContext context, IServiceProvider provider, object value);
    public virtual UITypeEditorEditStyle GetEditStyle(ITypeDescriptorContext context);
}
public class System.Drawing.Design.FontNameEditor : UITypeEditor {
    private static float ScaleFactor;
    private static FontStyle[] s_FontStyles;
    private static FontNameEditor();
    public virtual bool GetPaintValueSupported(ITypeDescriptorContext context);
    public virtual void PaintValue(PaintValueEventArgs e);
    private static void DrawFontSample(PaintValueEventArgs e, FontFamily fontFamily, FontStyle fontStyle);
}
public class System.Drawing.Design.IconEditor : UITypeEditor {
    private static List`1<string> s_iconExtensions;
    private static Type[] s_imageExtenders;
    private FileDialog _fileDialog;
    private static IconEditor();
    protected static string CreateExtensionsString(String[] extensions, string sep);
    protected static string CreateFilterEntry(IconEditor editor);
    public virtual object EditValue(ITypeDescriptorContext context, IServiceProvider provider, object value);
    public virtual UITypeEditorEditStyle GetEditStyle(ITypeDescriptorContext context);
    protected virtual string GetFileDialogDescription();
    protected virtual String[] GetExtensions();
    public virtual bool GetPaintValueSupported(ITypeDescriptorContext context);
    protected virtual Icon LoadFromStream(Stream stream);
    public virtual void PaintValue(PaintValueEventArgs e);
}
[CLSCompliantAttribute("False")]
public class System.Drawing.Design.ImageEditor : UITypeEditor {
    private static Type[] s_imageExtenders;
    private FileDialog _fileDialog;
    private static ImageEditor();
    protected virtual Type[] GetImageExtenders();
    protected static string CreateExtensionsString(String[] extensions, string sep);
    protected static string CreateFilterEntry(ImageEditor e);
    public virtual object EditValue(ITypeDescriptorContext context, IServiceProvider provider, object value);
    public virtual UITypeEditorEditStyle GetEditStyle(ITypeDescriptorContext context);
    protected virtual string GetFileDialogDescription();
    protected virtual String[] GetExtensions();
    public virtual bool GetPaintValueSupported(ITypeDescriptorContext context);
    protected virtual Image LoadFromStream(Stream stream);
    public virtual void PaintValue(PaintValueEventArgs e);
}
[CLSCompliantAttribute("False")]
public class System.Drawing.Design.MetafileEditor : ImageEditor {
    protected virtual string GetFileDialogDescription();
    protected virtual String[] GetExtensions();
    protected virtual Image LoadFromStream(Stream stream);
}
internal static class System.ExternDll : object {
    public static string Activeds;
    public static string Advapi32;
    public static string Comctl32;
    public static string Comdlg32;
    public static string Gdi32;
    public static string Gdiplus;
    public static string Hhctrl;
    public static string Imm32;
    public static string Kernel32;
    public static string Loadperf;
    public static string Mscoree;
    public static string Clr;
    public static string Msi;
    public static string Mqrt;
    public static string Ntdll;
    public static string Ole32;
    public static string Oleacc;
    public static string Oleaut32;
    public static string Olepro32;
    public static string PerfCounter;
    public static string Powrprof;
    public static string Psapi;
    public static string Shell32;
    public static string User32;
    public static string Uxtheme;
    public static string WinMM;
    public static string Winspool;
    public static string Wtsapi32;
    public static string Version;
    public static string Vsassert;
    public static string Fxassert;
    public static string Shlwapi;
    public static string Crypt32;
    public static string ShCore;
    public static string Wldp;
    internal static string Odbc32;
    internal static string SNI;
    internal static string OciDll;
    internal static string OraMtsDll;
    internal static string UiaCore;
}
internal static class System.SR : object {
    private static ResourceManager s_resourceManager;
    [CompilerGeneratedAttribute]
private static CultureInfo <Culture>k__BackingField;
    internal static ResourceManager ResourceManager { get; }
    internal static CultureInfo Culture { get; internal set; }
    internal static string AnchorEditorAccName { get; }
    internal static string AnchorEditorBottomAccName { get; }
    internal static string AnchorEditorLeftAccName { get; }
    internal static string AnchorEditorRightAccName { get; }
    internal static string AnchorEditorTopAccName { get; }
    internal static string bitmapFileDescription { get; }
    internal static string ColorEditorAccName { get; }
    internal static string ColorEditorPaletteTab { get; }
    internal static string ColorEditorStandardTab { get; }
    internal static string ColorEditorSystemTab { get; }
    internal static string DataSourceLocksItems { get; }
    internal static string DockEditorAccName { get; }
    internal static string DockEditorBottomAccName { get; }
    internal static string DockEditorFillAccName { get; }
    internal static string DockEditorLeftAccName { get; }
    internal static string DockEditorNoneAccName { get; }
    internal static string DockEditorRightAccName { get; }
    internal static string DockEditorTopAccName { get; }
    internal static string GenericFileFilter { get; }
    internal static string GenericOpenFile { get; }
    internal static string imageFileDescription { get; }
    internal static string ListViewSubItemBaseName { get; }
    internal static string metafileFileDescription { get; }
    internal static string PlatformNotSupported_WinformsDesigner { get; }
    internal static string ShortcutKeys_InvalidKey { get; }
    internal static string CollectionEditorCantRemoveItem { get; }
    internal static string CollectionEditorCaption { get; }
    internal static string CollectionEditorInheritedReadOnlySelection { get; }
    internal static string CollectionEditorProperties { get; }
    internal static string CollectionEditorPropertiesMultiSelect { get; }
    internal static string CollectionEditorPropertiesNone { get; }
    internal static string CollectionEditorUndoBatchDesc { get; }
    internal static string RTL { get; }
    internal static string MultilineStringEditorWatermark { get; }
    internal static string ImageCollectionEditorFormText { get; }
    internal static string ContentAlignmentEditorAccName { get; }
    internal static string ContentAlignmentEditorBottomCenterAccName { get; }
    internal static string ContentAlignmentEditorBottomLeftAccName { get; }
    internal static string ContentAlignmentEditorBottomRightAccName { get; }
    internal static string ContentAlignmentEditorMiddleCenterAccName { get; }
    internal static string ContentAlignmentEditorMiddleLeftAccName { get; }
    internal static string ContentAlignmentEditorMiddleRightAccName { get; }
    internal static string ContentAlignmentEditorTopCenterAccName { get; }
    internal static string ContentAlignmentEditorTopLeftAccName { get; }
    internal static string ContentAlignmentEditorTopRightAccName { get; }
    internal static string LinkAreaEditorCancel { get; }
    internal static string LinkAreaEditorCaption { get; }
    internal static string LinkAreaEditorDescription { get; }
    internal static string LinkAreaEditorOK { get; }
    internal static string iconFileDescription { get; }
    internal static string SelectedPathEditorLabel { get; }
    internal static string BindingFormattingDialogCustomFormat { get; }
    internal static string BindingFormattingDialogCustomFormatAccessibleDescription { get; }
    internal static string BindingFormattingDialogDecimalPlaces { get; }
    internal static string BindingFormattingDialogFormatTypeCurrency { get; }
    internal static string BindingFormattingDialogFormatTypeCurrencyExplanation { get; }
    internal static string BindingFormattingDialogFormatTypeCustom { get; }
    internal static string BindingFormattingDialogFormatTypeCustomExplanation { get; }
    internal static string BindingFormattingDialogFormatTypeCustomInvalidFormat { get; }
    internal static string BindingFormattingDialogFormatTypeDateTime { get; }
    internal static string BindingFormattingDialogFormatTypeDateTimeExplanation { get; }
    internal static string BindingFormattingDialogFormatTypeNoFormatting { get; }
    internal static string BindingFormattingDialogFormatTypeNoFormattingExplanation { get; }
    internal static string BindingFormattingDialogFormatTypeNumeric { get; }
    internal static string BindingFormattingDialogFormatTypeNumericExplanation { get; }
    internal static string BindingFormattingDialogFormatTypeScientific { get; }
    internal static string BindingFormattingDialogFormatTypeScientificExplanation { get; }
    internal static string BindingFormattingDialogNullValue { get; }
    internal static string BindingFormattingDialogType { get; }
    internal static string DataGridView_Cancel { get; }
    internal static string DataGridView_OK { get; }
    internal static string FormatStringDialogTitle { get; }
    internal static string HelpProviderEditorFilter { get; }
    internal static string HelpProviderEditorTitle { get; }
    internal static ResourceManager get_ResourceManager();
    [CompilerGeneratedAttribute]
internal static CultureInfo get_Culture();
    [CompilerGeneratedAttribute]
internal static void set_Culture(CultureInfo value);
    internal static string GetResourceString(string resourceKey, string defaultValue);
    internal static string get_AnchorEditorAccName();
    internal static string get_AnchorEditorBottomAccName();
    internal static string get_AnchorEditorLeftAccName();
    internal static string get_AnchorEditorRightAccName();
    internal static string get_AnchorEditorTopAccName();
    internal static string get_bitmapFileDescription();
    internal static string get_ColorEditorAccName();
    internal static string get_ColorEditorPaletteTab();
    internal static string get_ColorEditorStandardTab();
    internal static string get_ColorEditorSystemTab();
    internal static string get_DataSourceLocksItems();
    internal static string get_DockEditorAccName();
    internal static string get_DockEditorBottomAccName();
    internal static string get_DockEditorFillAccName();
    internal static string get_DockEditorLeftAccName();
    internal static string get_DockEditorNoneAccName();
    internal static string get_DockEditorRightAccName();
    internal static string get_DockEditorTopAccName();
    internal static string get_GenericFileFilter();
    internal static string get_GenericOpenFile();
    internal static string get_imageFileDescription();
    internal static string get_ListViewSubItemBaseName();
    internal static string get_metafileFileDescription();
    internal static string get_PlatformNotSupported_WinformsDesigner();
    internal static string get_ShortcutKeys_InvalidKey();
    internal static string get_CollectionEditorCantRemoveItem();
    internal static string get_CollectionEditorCaption();
    internal static string get_CollectionEditorInheritedReadOnlySelection();
    internal static string get_CollectionEditorProperties();
    internal static string get_CollectionEditorPropertiesMultiSelect();
    internal static string get_CollectionEditorPropertiesNone();
    internal static string get_CollectionEditorUndoBatchDesc();
    internal static string get_RTL();
    internal static string get_MultilineStringEditorWatermark();
    internal static string get_ImageCollectionEditorFormText();
    internal static string get_ContentAlignmentEditorAccName();
    internal static string get_ContentAlignmentEditorBottomCenterAccName();
    internal static string get_ContentAlignmentEditorBottomLeftAccName();
    internal static string get_ContentAlignmentEditorBottomRightAccName();
    internal static string get_ContentAlignmentEditorMiddleCenterAccName();
    internal static string get_ContentAlignmentEditorMiddleLeftAccName();
    internal static string get_ContentAlignmentEditorMiddleRightAccName();
    internal static string get_ContentAlignmentEditorTopCenterAccName();
    internal static string get_ContentAlignmentEditorTopLeftAccName();
    internal static string get_ContentAlignmentEditorTopRightAccName();
    internal static string get_LinkAreaEditorCancel();
    internal static string get_LinkAreaEditorCaption();
    internal static string get_LinkAreaEditorDescription();
    internal static string get_LinkAreaEditorOK();
    internal static string get_iconFileDescription();
    internal static string get_SelectedPathEditorLabel();
    internal static string get_BindingFormattingDialogCustomFormat();
    internal static string get_BindingFormattingDialogCustomFormatAccessibleDescription();
    internal static string get_BindingFormattingDialogDecimalPlaces();
    internal static string get_BindingFormattingDialogFormatTypeCurrency();
    internal static string get_BindingFormattingDialogFormatTypeCurrencyExplanation();
    internal static string get_BindingFormattingDialogFormatTypeCustom();
    internal static string get_BindingFormattingDialogFormatTypeCustomExplanation();
    internal static string get_BindingFormattingDialogFormatTypeCustomInvalidFormat();
    internal static string get_BindingFormattingDialogFormatTypeDateTime();
    internal static string get_BindingFormattingDialogFormatTypeDateTimeExplanation();
    internal static string get_BindingFormattingDialogFormatTypeNoFormatting();
    internal static string get_BindingFormattingDialogFormatTypeNoFormattingExplanation();
    internal static string get_BindingFormattingDialogFormatTypeNumeric();
    internal static string get_BindingFormattingDialogFormatTypeNumericExplanation();
    internal static string get_BindingFormattingDialogFormatTypeScientific();
    internal static string get_BindingFormattingDialogFormatTypeScientificExplanation();
    internal static string get_BindingFormattingDialogNullValue();
    internal static string get_BindingFormattingDialogType();
    internal static string get_DataGridView_Cancel();
    internal static string get_DataGridView_OK();
    internal static string get_FormatStringDialogTitle();
    internal static string get_HelpProviderEditorFilter();
    internal static string get_HelpProviderEditorTitle();
}
internal static class System.Windows.Forms.ClientUtils : object {
    private static int SurrogateRangeStart;
    private static int SurrogateRangeEnd;
    public static bool IsCriticalException(Exception ex);
    public static bool IsSecurityOrCriticalException(Exception ex);
    public static int GetBitCount(UInt32 x);
    public static bool IsEnumValid(Enum enumValue, int value, int minValue, int maxValue);
    public static bool IsEnumValid(Enum enumValue, int value, int minValue, int maxValue, int maxNumberOfBitsOn);
    public static bool IsEnumValid_Masked(Enum enumValue, int value, UInt32 mask);
    public static bool IsEnumValid_NotSequential(Enum enumValue, int value, Int32[] enumValues);
    public static int GetWordBoundaryStart(Char[] text, int endIndex);
}
internal class System.Windows.Forms.CommonUnsafeNativeMethods : object {
    internal static DpiAwarenessContext GetThreadDpiAwarenessContext();
    internal static DpiAwarenessContext SetThreadDpiAwarenessContext(DpiAwarenessContext dpiContext);
    internal static bool AreDpiAwarenessContextsEqual(DpiAwarenessContext dpiContextA, DpiAwarenessContext dpiContextB);
    public static bool TryFindDpiAwarenessContextsEqual(DpiAwarenessContext dpiContextA, DpiAwarenessContext dpiContextB);
    public static DpiAwarenessContext TrySetThreadDpiAwarenessContext(DpiAwarenessContext dpiCOntext);
}
internal static class System.Windows.Forms.ConfigurationOptions : object {
    private static NameValueCollection applicationConfigOptions;
    private static Version netFrameworkVersion;
    private static Version featureSupportedMinimumFrameworkVersion;
    internal static Version RS2Version;
    public static Version NetFrameworkVersion { get; }
    private static ConfigurationOptions();
    private static void PopulateWinformsSection();
    public static Version get_NetFrameworkVersion();
    public static string GetConfigSettingValue(string settingName);
}
[CLSCompliantAttribute("False")]
public class System.Windows.Forms.Design.AnchorEditor : UITypeEditor {
    private AnchorUI _anchorUI;
    public virtual object EditValue(ITypeDescriptorContext context, IServiceProvider provider, object value);
    public virtual UITypeEditorEditStyle GetEditStyle(ITypeDescriptorContext context);
}
[CLSCompliantAttribute("False")]
public class System.Windows.Forms.Design.BorderSidesEditor : UITypeEditor {
    private BorderSidesEditorUI _borderSidesEditorUI;
    public virtual object EditValue(ITypeDescriptorContext context, IServiceProvider provider, object value);
    public virtual UITypeEditorEditStyle GetEditStyle(ITypeDescriptorContext context);
}
[CLSCompliantAttribute("False")]
public class System.Windows.Forms.Design.DockEditor : UITypeEditor {
    private DockUI _dockUI;
    public virtual object EditValue(ITypeDescriptorContext context, IServiceProvider provider, object value);
    public virtual UITypeEditorEditStyle GetEditStyle(ITypeDescriptorContext context);
}
[ComVisibleAttribute("True")]
[GuidAttribute("76d12d7e-b227-4417-9ce2-42642ffa896a")]
internal enum System.Windows.Forms.Design.Editors.ExpandCollapseState : Enum {
    public int value__;
    public static ExpandCollapseState Collapsed;
    public static ExpandCollapseState Expanded;
    public static ExpandCollapseState PartiallyExpanded;
    public static ExpandCollapseState LeafNode;
}
[CLSCompliantAttribute("False")]
public class System.Windows.Forms.Design.FileNameEditor : UITypeEditor {
    private OpenFileDialog _openFileDialog;
    public virtual object EditValue(ITypeDescriptorContext context, IServiceProvider provider, object value);
    public virtual UITypeEditorEditStyle GetEditStyle(ITypeDescriptorContext context);
    protected virtual void InitializeDialog(OpenFileDialog openFileDialog);
}
[CLSCompliantAttribute("False")]
public class System.Windows.Forms.Design.FolderNameEditor : UITypeEditor {
    private FolderBrowser _folderBrowser;
    public virtual object EditValue(ITypeDescriptorContext context, IServiceProvider provider, object value);
    public virtual UITypeEditorEditStyle GetEditStyle(ITypeDescriptorContext context);
    protected virtual void InitializeDialog(FolderBrowser folderBrowser);
}
internal class System.Windows.Forms.Design.FormatControl : UserControl {
    private static int NoFormattingIndex;
    private static int NumericIndex;
    private static int CurrencyIndex;
    private static int DateTimeIndex;
    private static int ScientificIndex;
    private static int CustomIndex;
    private TextBox customStringTextBox;
    private static DateTime s_dateTimeFormatValue;
    private bool _loaded;
    [CompilerGeneratedAttribute]
private bool <Dirty>k__BackingField;
    private IContainer components;
    private GroupBox formatGroupBox;
    private Label explanationLabel;
    private Label formatTypeLabel;
    private ListBox formatTypeListBox;
    private GroupBox sampleGroupBox;
    private Label sampleLabel;
    private TableLayoutPanel tableLayoutPanel1;
    private Label nullValueLabel;
    private Label secondRowLabel;
    private TextBox nullValueTextBox;
    private Label thirdRowLabel;
    private ListBox dateTimeFormatsListBox;
    private NumericUpDown decimalPlacesUpDown;
    private TableLayoutPanel tableLayoutPanel2;
    private TableLayoutPanel tableLayoutPanel3;
    public bool Dirty { get; public set; }
    public string FormatType { get; public set; }
    public FormatTypeClass FormatTypeItem { get; }
    public string NullValue { get; public set; }
    unknown bool NullValueTextBoxEnabled {public set; }
    private static FormatControl();
    [CompilerGeneratedAttribute]
public bool get_Dirty();
    [CompilerGeneratedAttribute]
public void set_Dirty(bool value);
    public string get_FormatType();
    public void set_FormatType(string value);
    public FormatTypeClass get_FormatTypeItem();
    public string get_NullValue();
    public void set_NullValue(string value);
    public void set_NullValueTextBoxEnabled(bool value);
    private void customStringTextBox_TextChanged(object sender, EventArgs e);
    private void dateTimeFormatsListBox_SelectedIndexChanged(object sender, EventArgs e);
    private void decimalPlacesUpDown_ValueChanged(object sender, EventArgs e);
    private void formatGroupBox_Enter(object sender, EventArgs e);
    private void formatTypeListBox_SelectedIndexChanged(object sender, EventArgs e);
    public static string FormatTypeStringFromFormatString(string formatString);
    protected virtual bool ProcessMnemonic(char charCode);
    public void ResetFormattingInfo();
    private void UpdateControlVisibility(FormatTypeClass formatType);
    private void UpdateCustomStringTextBox();
    private void UpdateFormatTypeListBoxHeight();
    private void UpdateFormatTypeListBoxItems();
    private void UpdateTBLHeight();
    private void FormatControl_Load(object sender, EventArgs e);
    private void FormatControlFinishedLoading();
    private void nullValueTextBox_TextChanged(object sender, EventArgs e);
    protected virtual void Dispose(bool disposing);
    private void InitializeComponent();
}
internal class System.Windows.Forms.Design.FormatStringDialog : Form {
    private ITypeDescriptorContext _context;
    private Button _cancelButton;
    private Button _okButton;
    private FormatControl _formatControl1;
    private bool _dirty;
    private DataGridViewCellStyle _dgvCellStyle;
    private ListControl _listControl;
    unknown DataGridViewCellStyle DataGridViewCellStyle {public set; }
    public bool Dirty { get; }
    unknown ListControl ListControl {public set; }
    public FormatStringDialog(ITypeDescriptorContext context);
    public void set_DataGridViewCellStyle(DataGridViewCellStyle value);
    public bool get_Dirty();
    public void set_ListControl(ListControl value);
    private void FormatStringDialog_HelpButtonClicked(object sender, CancelEventArgs e);
    private void FormatStringDialog_HelpRequested(object sender, HelpEventArgs e);
    private void FormatStringDialog_HelpRequestHandled();
    internal void FormatControlFinishedLoading();
    private static int GetRightSideOffset(Control ctl);
    private void FormatStringDialog_Load(object sender, EventArgs e);
    public void End();
    private void InitializeComponent();
    private void cancelButton_Click(object sender, EventArgs e);
    private void okButton_Click(object sender, EventArgs e);
    protected virtual bool ProcessDialogKey(Keys keyData);
    private void PushChanges();
}
internal class System.Windows.Forms.Design.FormatStringEditor : UITypeEditor {
    private FormatStringDialog _formatStringDialog;
    public virtual object EditValue(ITypeDescriptorContext context, IServiceProvider provider, object value);
    public virtual UITypeEditorEditStyle GetEditStyle(ITypeDescriptorContext context);
}
internal class System.Windows.Forms.Design.HelpNamespaceEditor : FileNameEditor {
    protected virtual void InitializeDialog(OpenFileDialog openFileDialog);
}
internal class System.Windows.Forms.Design.ImageCollectionEditor : CollectionEditor {
    public ImageCollectionEditor(Type type);
    protected virtual string GetDisplayText(object value);
    protected virtual object CreateInstance(Type type);
    protected virtual CollectionForm CreateCollectionForm();
    protected virtual IList GetObjectsFromInstance(object array);
    protected virtual Object[] GetItems(object editValue);
    protected virtual object SetItems(object editValue, Object[] value);
}
internal class System.Windows.Forms.Design.ImageIndexEditor : UITypeEditor {
    protected ImageList currentImageList;
    protected WeakReference currentImageListPropRef;
    protected object currentInstance;
    protected UITypeEditor imageEditor;
    protected string parentImageListProperty;
    protected string imageListPropertyName;
    internal UITypeEditor ImageEditor { get; }
    internal string ParentImageListProperty { get; }
    internal UITypeEditor get_ImageEditor();
    internal string get_ParentImageListProperty();
    protected virtual Image GetImage(ITypeDescriptorContext context, int index, string key, bool useIntIndex);
    public virtual bool GetPaintValueSupported(ITypeDescriptorContext context);
    public virtual void PaintValue(PaintValueEventArgs e);
    internal static PropertyDescriptor GetImageListProperty(PropertyDescriptor currentComponent, Object& instance);
}
[EditorAttribute("System.Windows.Forms.Design.ImageListImageEditor", "System.Drawing.Design.UITypeEditor")]
internal class System.Windows.Forms.Design.ImageListImage : object {
    private string _name;
    [CompilerGeneratedAttribute]
private Image <Image>k__BackingField;
    public string Name { get; public set; }
    [BrowsableAttribute("False")]
public Image Image { get; public set; }
    public float HorizontalResolution { get; }
    public float VerticalResolution { get; }
    public PixelFormat PixelFormat { get; }
    public ImageFormat RawFormat { get; }
    public Size Size { get; }
    public SizeF PhysicalDimension { get; }
    public ImageListImage(Image image);
    public ImageListImage(Image image, string name);
    public string get_Name();
    public void set_Name(string value);
    [CompilerGeneratedAttribute]
public Image get_Image();
    [CompilerGeneratedAttribute]
public void set_Image(Image value);
    public float get_HorizontalResolution();
    public float get_VerticalResolution();
    public PixelFormat get_PixelFormat();
    public ImageFormat get_RawFormat();
    public Size get_Size();
    public SizeF get_PhysicalDimension();
    public static ImageListImage ImageListImageFromStream(Stream stream, bool imageIsIcon);
}
[CLSCompliantAttribute("False")]
public class System.Windows.Forms.Design.ImageListImageEditor : ImageEditor {
    internal static Type[] s_imageExtenders;
    private OpenFileDialog _fileDialog;
    private static ImageListImageEditor();
    protected virtual Type[] GetImageExtenders();
    public virtual object EditValue(ITypeDescriptorContext context, IServiceProvider provider, object value);
    protected virtual string GetFileDialogDescription();
    public virtual bool GetPaintValueSupported(ITypeDescriptorContext context);
    private ImageListImage LoadImageFromStream(Stream stream, bool imageIsIcon);
    public virtual void PaintValue(PaintValueEventArgs e);
}
internal class System.Windows.Forms.Design.LinkAreaEditor : UITypeEditor {
    private LinkAreaUI _linkAreaUI;
    public virtual object EditValue(ITypeDescriptorContext context, IServiceProvider provider, object value);
    public virtual UITypeEditorEditStyle GetEditStyle(ITypeDescriptorContext context);
}
internal class System.Windows.Forms.Design.ListControlStringCollectionEditor : StringCollectionEditor {
    public ListControlStringCollectionEditor(Type type);
    public virtual object EditValue(ITypeDescriptorContext context, IServiceProvider provider, object value);
}
internal class System.Windows.Forms.Design.ListViewGroupCollectionEditor : CollectionEditor {
    private object _editValue;
    public ListViewGroupCollectionEditor(Type type);
    protected virtual object CreateInstance(Type itemType);
    private string CreateListViewGroupName(ListViewGroupCollection lvgCollection);
    public virtual object EditValue(ITypeDescriptorContext context, IServiceProvider provider, object value);
}
internal class System.Windows.Forms.Design.ListViewItemCollectionEditor : CollectionEditor {
    public ListViewItemCollectionEditor(Type type);
    protected virtual string GetDisplayText(object value);
}
internal class System.Windows.Forms.Design.ListViewSubItemCollectionEditor : CollectionEditor {
    private static int _count;
    private ListViewSubItem _firstSubItem;
    public ListViewSubItemCollectionEditor(Type type);
    protected virtual object CreateInstance(Type type);
    protected virtual string GetDisplayText(object value);
    protected virtual Object[] GetItems(object editValue);
    protected virtual object SetItems(object editValue, Object[] value);
}
internal static class System.Windows.Forms.Design.NativeMethods : object {
    public static HandleRef NullHandleRef;
    public static int PS_SOLID;
    public static int DLGC_WANTALLKEYS;
    public static int NM_CLICK;
    public static int BM_SETIMAGE;
    public static int IMAGE_ICON;
    public static int BS_ICON;
    public static int EC_LEFTMARGIN;
    public static int EC_RIGHTMARGIN;
    public static int IDOK;
    public static int VK_PROCESSKEY;
    public static int CC_FULLOPEN;
    public static int CC_ENABLETEMPLATEHANDLE;
    public static int STGM_DELETEONRELEASE;
    public static int RECO_PASTE;
    public static int RECO_DROP;
    public static IntPtr InvalidIntPtr;
    public static int S_OK;
    public static int S_FALSE;
    public static int E_NOTIMPL;
    public static int E_NOINTERFACE;
    public static int E_INVALIDARG;
    public static int E_FAIL;
    public static int WS_EX_STATICEDGE;
    public static int TME_HOVER;
    public static int OLEIVERB_PRIMARY;
    public static int OLEIVERB_SHOW;
    public static int OLEIVERB_OPEN;
    public static int OLEIVERB_HIDE;
    public static int OLEIVERB_UIACTIVATE;
    public static int OLEIVERB_INPLACEACTIVATE;
    public static int OLEIVERB_DISCARDUNDOSTATE;
    public static int OLEIVERB_PROPERTIES;
    public static int OLECLOSE_SAVEIFDIRTY;
    public static int OLECLOSE_NOSAVE;
    public static int OLECLOSE_PROMPTSAVE;
    public static int PM_NOREMOVE;
    public static int PM_REMOVE;
    public static int WM_MOUSEENTER;
    public static int HDN_ENDTRACK;
    public static int WS_DISABLED;
    public static int WS_CLIPSIBLINGS;
    public static int WS_CLIPCHILDREN;
    public static int WS_EX_TOOLWINDOW;
    public static int WS_POPUP;
    public static int WS_BORDER;
    public static int CS_DROPSHADOW;
    public static int CS_DBLCLKS;
    public static int SRCCOPY;
    public static int LVM_SETCOLUMNWIDTH;
    public static int LVM_GETHEADER;
    public static int LVM_CREATEDRAGIMAGE;
    public static int LVM_GETVIEWRECT;
    public static int LVM_GETTEXTCOLOR;
    public static int LVM_SETTEXTCOLOR;
    public static int LVM_GETTEXTBKCOLOR;
    public static int LVM_SETTEXTBKCOLOR;
    public static int LVM_GETTOPINDEX;
    public static int LVM_GETCOUNTPERPAGE;
    public static int LVM_GETORIGIN;
    public static int LVM_UPDATE;
    public static int LVM_SETITEMSTATE;
    public static int LVM_GETITEMSTATE;
    public static int LVM_GETITEMTEXTA;
    public static int LVM_GETITEMTEXTW;
    public static int LVM_SETITEMTEXTA;
    public static int LVM_SETITEMTEXTW;
    public static int LVSICF_NOINVALIDATEALL;
    public static int LVSICF_NOSCROLL;
    public static int LVM_SETITEMCOUNT;
    public static int LVM_SORTITEMS;
    public static int LVM_SETITEMPOSITION32;
    public static int LVM_GETSELECTEDCOUNT;
    public static int LVM_GETITEMSPACING;
    public static int LVM_GETISEARCHSTRINGA;
    public static int LVM_GETISEARCHSTRINGW;
    public static int LVM_SETICONSPACING;
    public static int LVM_SETEXTENDEDLISTVIEWSTYLE;
    public static int LVM_GETEXTENDEDLISTVIEWSTYLE;
    public static int LVS_EX_GRIDLINES;
    public static int HDM_HITTEST;
    public static int HDM_GETITEMRECT;
    public static int HDM_SETIMAGELIST;
    public static int HDM_GETIMAGELIST;
    public static int HDM_ORDERTOINDEX;
    public static int HDM_CREATEDRAGIMAGE;
    public static int HDM_GETORDERARRAY;
    public static int HDM_SETORDERARRAY;
    public static int HDM_SETHOTDIVIDER;
    public static int HDN_ITEMCHANGINGA;
    public static int HDN_ITEMCHANGINGW;
    public static int HDN_ITEMCHANGEDA;
    public static int HDN_ITEMCHANGEDW;
    public static int HDN_ITEMCLICKA;
    public static int HDN_ITEMCLICKW;
    public static int HDN_ITEMDBLCLICKA;
    public static int HDN_ITEMDBLCLICKW;
    public static int HDN_DIVIDERDBLCLICKA;
    public static int HDN_DIVIDERDBLCLICKW;
    public static int HDN_BEGINTRACKA;
    public static int HDN_BEGINTRACKW;
    public static int HDN_ENDTRACKA;
    public static int HDN_ENDTRACKW;
    public static int HDN_TRACKA;
    public static int HDN_TRACKW;
    public static int HDN_GETDISPINFOA;
    public static int HDN_GETDISPINFOW;
    public static int HDN_BEGINDRAG;
    public static int HDN_ENDDRAG;
    public static int HC_ACTION;
    public static int HIST_BACK;
    public static int HHT_ONHEADER;
    public static int HHT_ONDIVIDER;
    public static int HHT_ONDIVOPEN;
    public static int HHT_ABOVE;
    public static int HHT_BELOW;
    public static int HHT_TORIGHT;
    public static int HHT_TOLEFT;
    public static int HWND_TOP;
    public static int HWND_BOTTOM;
    public static int HWND_TOPMOST;
    public static int HWND_NOTOPMOST;
    public static int CWP_SKIPINVISIBLE;
    public static int RDW_FRAME;
    public static int TVM_GETITEMRECT;
    public static int TVM_GETCOUNT;
    public static int TVM_GETINDENT;
    public static int TVM_SETINDENT;
    public static int TVM_GETIMAGELIST;
    public static int TVSIL_NORMAL;
    public static int TVSIL_STATE;
    public static int TVM_SETIMAGELIST;
    public static int TVM_GETNEXTITEM;
    public static int TVGN_ROOT;
    public static int TV_FIRST;
    public static int TVM_SETEXTENDEDSTYLE;
    public static int TVM_GETEXTENDEDSTYLE;
    public static int TVS_EX_FADEINOUTEXPANDOS;
    public static int TVS_EX_DOUBLEBUFFER;
    public static int LVS_EX_DOUBLEBUFFER;
    public static int TVHT_ONITEMICON;
    public static int TVHT_ONITEMLABEL;
    public static int TVHT_ONITEMINDENT;
    public static int TVHT_ONITEMBUTTON;
    public static int TVHT_ONITEMRIGHT;
    public static int TVHT_ONITEMSTATEICON;
    public static int TVHT_ABOVE;
    public static int TVHT_BELOW;
    public static int TVHT_TORIGHT;
    public static int TVHT_TOLEFT;
    public static int GW_HWNDFIRST;
    public static int GW_HWNDLAST;
    public static int GW_HWNDNEXT;
    public static int GW_HWNDPREV;
    public static int GW_OWNER;
    public static int GW_CHILD;
    public static int GW_MAX;
    public static int GWL_HWNDPARENT;
    public static int SB_HORZ;
    public static int SB_VERT;
    public static int SB_CTL;
    public static int SB_BOTH;
    public static int SB_LINEUP;
    public static int SB_LINELEFT;
    public static int SB_LINEDOWN;
    public static int SB_LINERIGHT;
    public static int SB_PAGEUP;
    public static int SB_PAGELEFT;
    public static int SB_PAGEDOWN;
    public static int SB_PAGERIGHT;
    public static int SB_THUMBPOSITION;
    public static int SB_THUMBTRACK;
    public static int SB_TOP;
    public static int SB_LEFT;
    public static int SB_BOTTOM;
    public static int SB_RIGHT;
    public static int SB_ENDSCROLL;
    public static int MK_LBUTTON;
    public static int TVM_HITTEST;
    public static int MK_RBUTTON;
    public static int MK_SHIFT;
    public static int MK_CONTROL;
    public static int MK_MBUTTON;
    public static int MK_XBUTTON1;
    public static int MK_XBUTTON2;
    public static int LB_ADDSTRING;
    public static int LB_INSERTSTRING;
    public static int LB_DELETESTRING;
    public static int LB_SELITEMRANGEEX;
    public static int LB_RESETCONTENT;
    public static int LB_SETSEL;
    public static int LB_SETCURSEL;
    public static int LB_GETSEL;
    public static int LB_GETCURSEL;
    public static int LB_GETTEXT;
    public static int LB_GETTEXTLEN;
    public static int LB_GETCOUNT;
    public static int LB_SELECTSTRING;
    public static int LB_DIR;
    public static int LB_GETTOPINDEX;
    public static int LB_FINDSTRING;
    public static int LB_GETSELCOUNT;
    public static int LB_GETSELITEMS;
    public static int LB_SETTABSTOPS;
    public static int LB_GETHORIZONTALEXTENT;
    public static int LB_SETHORIZONTALEXTENT;
    public static int LB_SETCOLUMNWIDTH;
    public static int LB_ADDFILE;
    public static int LB_SETTOPINDEX;
    public static int LB_GETITEMRECT;
    public static int LB_GETITEMDATA;
    public static int LB_SETITEMDATA;
    public static int LB_SELITEMRANGE;
    public static int LB_SETANCHORINDEX;
    public static int LB_GETANCHORINDEX;
    public static int LB_SETCARETINDEX;
    public static int LB_GETCARETINDEX;
    public static int LB_SETITEMHEIGHT;
    public static int LB_GETITEMHEIGHT;
    public static int LB_FINDSTRINGEXACT;
    public static int LB_SETLOCALE;
    public static int LB_GETLOCALE;
    public static int LB_SETCOUNT;
    public static int LB_INITSTORAGE;
    public static int LB_ITEMFROMPOINT;
    public static int LB_MSGMAX;
    public static int HTHSCROLL;
    public static int HTVSCROLL;
    public static int HTERROR;
    public static int HTTRANSPARENT;
    public static int HTNOWHERE;
    public static int HTCLIENT;
    public static int HTCAPTION;
    public static int HTSYSMENU;
    public static int HTGROWBOX;
    public static int HTSIZE;
    public static int PRF_NONCLIENT;
    public static int PRF_CLIENT;
    public static int PRF_ERASEBKGND;
    public static int PRF_CHILDREN;
    public static int SWP_NOSIZE;
    public static int SWP_NOMOVE;
    public static int SWP_NOZORDER;
    public static int SWP_NOREDRAW;
    public static int SWP_NOACTIVATE;
    public static int SWP_FRAMECHANGED;
    public static int SWP_SHOWWINDOW;
    public static int SWP_HIDEWINDOW;
    public static int SWP_NOCOPYBITS;
    public static int SWP_NOOWNERZORDER;
    public static int SWP_NOSENDCHANGING;
    public static int SWP_DRAWFRAME;
    public static int SWP_NOREPOSITION;
    public static int SWP_DEFERERASE;
    public static int SWP_ASYNCWINDOWPOS;
    public static int CHILDID_SELF;
    public static int OBJID_WINDOW;
    public static int OBJID_CLIENT;
    public static string uuid_IAccessible;
    public static string uuid_IEnumVariant;
    public static int QS_KEY;
    public static int QS_MOUSEMOVE;
    public static int QS_MOUSEBUTTON;
    public static int QS_POSTMESSAGE;
    public static int QS_TIMER;
    public static int QS_PAINT;
    public static int QS_SENDMESSAGE;
    public static int QS_HOTKEY;
    public static int QS_ALLPOSTMESSAGE;
    public static int QS_MOUSE;
    public static int QS_INPUT;
    public static int QS_ALLEVENTS;
    public static int QS_ALLINPUT;
    public static int MWMO_INPUTAVAILABLE;
    public static int GWL_EXSTYLE;
    public static int GWL_STYLE;
    public static int SPI_GETNONCLIENTMETRICS;
    public static int MAX_PATH;
    private static NativeMethods();
    public static IntPtr SendDlgItemMessage(IntPtr hDlg, int nIDDlgItem, int Msg, IntPtr wParam, IntPtr lParam);
    public static IntPtr GetDlgItem(IntPtr hWnd, int nIDDlgItem);
    public static bool EnableWindow(IntPtr hWnd, bool enable);
    public static bool SetWindowPos(IntPtr hWnd, IntPtr hWndInsertAfter, int x, int y, int cx, int cy, int flags);
    public static int GetDlgItemInt(IntPtr hWnd, int nIDDlgItem, Boolean[] err, bool signed);
    public static IntPtr PostMessage(IntPtr hwnd, int msg, IntPtr wparam, IntPtr lparam);
    public static IntPtr SendMessage(IntPtr hWnd, int msg, IntPtr wParam, IntPtr lParam);
    public static IntPtr SendMessage(IntPtr hWnd, int Msg, IntPtr wParam, HDHITTESTINFO lParam);
    public static IntPtr SendMessage(IntPtr hWnd, int msg, int wParam, int lParam);
    public static IntPtr SendMessage(IntPtr hWnd, int msg, int wParam, string lParam);
    public static IntPtr SendMessage(IntPtr hWnd, int Msg, int wParam, TV_HITTESTINFO lParam);
    public static bool Succeeded(int hr);
}
internal class System.Windows.Forms.Design.SelectedPathEditor : FolderNameEditor {
    protected virtual void InitializeDialog(FolderBrowser folderBrowser);
}
[CLSCompliantAttribute("False")]
public class System.Windows.Forms.Design.ShortcutKeysEditor : UITypeEditor {
    private ShortcutKeysUI _shortcutKeysUI;
    public virtual object EditValue(ITypeDescriptorContext context, IServiceProvider provider, object value);
    public virtual UITypeEditorEditStyle GetEditStyle(ITypeDescriptorContext context);
}
internal class System.Windows.Forms.Design.StringArrayEditor : StringCollectionEditor {
    public StringArrayEditor(Type type);
    protected virtual Type CreateCollectionItemType();
    protected virtual Object[] GetItems(object editValue);
    protected virtual object SetItems(object editValue, Object[] value);
}
internal class System.Windows.Forms.Design.StringCollectionEditor : CollectionEditor {
    protected string HelpTopic { get; }
    public StringCollectionEditor(Type type);
    protected virtual CollectionForm CreateCollectionForm();
    protected virtual string get_HelpTopic();
}
internal class System.Windows.Forms.Design.TabPageCollectionEditor : CollectionEditor {
    protected virtual object SetItems(object editValue, Object[] value);
    protected virtual object CreateInstance(Type itemType);
}
internal class System.Windows.Forms.Design.UnsafeNativeMethods : object {
    public static int OBJID_CLIENT;
    public static int ClientToScreen(HandleRef hWnd, Point& lpPoint);
    public static int ScreenToClient(HandleRef hWnd, Point& lpPoint);
    public static IntPtr GetActiveWindow();
    public static void NotifyWinEvent(int winEvent, HandleRef hwnd, int objType, int objID);
    public static IntPtr SetFocus(HandleRef hWnd);
    public static IntPtr GetFocus();
    public static int ReadClassStg(HandleRef pStg, Guid& pclsid);
}
internal enum System.Windows.Forms.DpiAwarenessContext : Enum {
    public int value__;
    public static DpiAwarenessContext DPI_AWARENESS_CONTEXT_UNSPECIFIED;
    public static DpiAwarenessContext DPI_AWARENESS_CONTEXT_UNAWARE;
    public static DpiAwarenessContext DPI_AWARENESS_CONTEXT_SYSTEM_AWARE;
    public static DpiAwarenessContext DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE;
    public static DpiAwarenessContext DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE_V2;
}
internal static class System.Windows.Forms.DpiHelper : object {
    internal static double LogicalDpi;
    private static bool isInitialized;
    private static double deviceDpi;
    private static double logicalToDeviceUnitsScalingFactor;
    private static InterpolationMode interpolationMode;
    private static double LogicalToDeviceUnitsScalingFactor { get; }
    private static InterpolationMode InterpolationMode { get; }
    public static bool IsScalingRequired { get; }
    private static DpiHelper();
    private static void Initialize();
    private static double get_LogicalToDeviceUnitsScalingFactor();
    private static InterpolationMode get_InterpolationMode();
    private static Bitmap ScaleBitmapToSize(Bitmap logicalImage, Size deviceImageSize);
    private static Bitmap CreateScaledBitmap(Bitmap logicalImage, int deviceDpi);
    public static bool get_IsScalingRequired();
    public static int ConvertToGivenDpiPixel(int value, double pixelFactor);
    public static int LogicalToDeviceUnits(int value, int devicePixels);
    public static double LogicalToDeviceUnits(double value, int devicePixels);
    public static int LogicalToDeviceUnitsX(int value);
    public static int LogicalToDeviceUnitsY(int value);
    public static Size LogicalToDeviceUnits(Size logicalSize, int deviceDpi);
    public static void ScaleButtonImageLogicalToDevice(Button button);
    public static IDisposable EnterDpiAwarenessScope(DpiAwarenessContext awareness);
    public static T CreateInstanceInSystemAwareContext(Func`1<T> createInstance);
}
internal static class System.Windows.Forms.OsVersion : object {
    private static RTL_OSVERSIONINFOEX s_versionInfo;
    public static bool IsWindows10_1607OrGreater { get; }
    public static bool IsWindows10_1703OrGreater { get; }
    public static bool IsWindows8_1OrGreater { get; }
    public static bool IsWindows8OrGreater { get; }
    private static OsVersion();
    private static RTL_OSVERSIONINFOEX InitVersion();
    public static bool get_IsWindows10_1607OrGreater();
    public static bool get_IsWindows10_1703OrGreater();
    public static bool get_IsWindows8_1OrGreater();
    public static bool get_IsWindows8OrGreater();
}
internal class System.Windows.Forms.RTLAwareMessageBox : object {
    public static bool IsRTLResources { get; }
    public static DialogResult Show(IWin32Window owner, string text, string caption, MessageBoxButtons buttons, MessageBoxIcon icon, MessageBoxDefaultButton defaultButton, MessageBoxOptions options);
    public static bool get_IsRTLResources();
}
[IsByRefLikeAttribute]
[ObsoleteAttribute("Types with embedded references are not supported in this version of your compiler.", "True")]
internal class System.Windows.Forms.ScreenDC : ValueType {
    private IntPtr _handle;
    public static ScreenDC Create();
    public static IntPtr op_Implicit(ScreenDC screenDC);
    public void Dispose();
}
