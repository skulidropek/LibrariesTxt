[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Mindscape.Raygun4Net.AspNetCore.ApplicationBuilderExtensions : object {
    private static string NoApiKeyWarning;
    [ExtensionAttribute]
public static IApplicationBuilder UseRaygun(IApplicationBuilder app);
    [ExtensionAttribute]
public static IServiceCollection AddRaygun(IServiceCollection services, IConfiguration configuration, Action`1<RaygunSettings> options);
    [ExtensionAttribute]
public static IServiceCollection AddRaygun(IServiceCollection services, Action`1<RaygunSettings> options);
    [ExtensionAttribute]
public static IServiceCollection AddRaygunUserProvider(IServiceCollection services);
    [ExtensionAttribute]
public static IServiceCollection AddRaygunUserProvider(IServiceCollection services);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Mindscape.Raygun4Net.AspNetCore.Builders.RaygunAspNetCoreRequestMessageBuilder : object {
    private static int MAX_RAW_DATA_LENGTH;
    [AsyncStateMachineAttribute("Mindscape.Raygun4Net.AspNetCore.Builders.RaygunAspNetCoreRequestMessageBuilder/<Build>d__1")]
public static Task`1<RaygunRequestMessage> Build(HttpContext context, RaygunSettings options);
    private static string GetIpAddress(ConnectionInfo connection);
    private static IDictionary GetQueryString(HttpRequest request, IRaygunHttpSettings options);
    private static IList GetCookies(HttpRequest request, IRaygunHttpSettings options);
    private static string GetRawData(HttpRequest request, IRaygunHttpSettings options);
    private static Dictionary`2<string, string> GetIgnoredFormValues(IFormCollection form, Func`2<string, bool> ignore);
    private static string StripIgnoredFormData(string rawData, Dictionary`2<string, string> ignored);
    private static string StripSensitiveValues(string rawData, IRaygunHttpSettings options);
    private static IList`1<IRaygunDataFilter> GetRawDataFilters(IRaygunHttpSettings options);
    private static bool DataContains(string data, IReadOnlyList`1<string> values);
    private static IDictionary GetHeaders(HttpRequest request, IRaygunHttpSettings options);
    [AsyncStateMachineAttribute("Mindscape.Raygun4Net.AspNetCore.Builders.RaygunAspNetCoreRequestMessageBuilder/<GetForm>d__12")]
private static Task`1<IDictionary> GetForm(HttpRequest request, IRaygunHttpSettings options);
    private static IDictionary ToDictionary(IQueryCollection query, Func`2<string, bool> isQueryStringVariableIgnored, Func`2<string, bool> isSensitive);
    private static IDictionary ToDictionary(IFormCollection query, Func`2<string, bool> isFormFieldIgnored, Func`2<string, bool> isSensitive);
    internal static bool IsIgnored(string key, IReadOnlyList`1<string> list);
    private static bool CheckStartsWith(string ignoredKey, string key);
    private static bool CheckEndsWith(string ignoredKey, string key);
    private static bool CheckContains(string ignoredKey, string key);
}
public class Mindscape.Raygun4Net.AspNetCore.Builders.RaygunAspNetCoreResponseMessageBuilder : object {
    [NullableContextAttribute("1")]
public static RaygunResponseMessage Build(HttpContext context);
}
public class Mindscape.Raygun4Net.AspNetCore.DefaultRaygunUserProvider : object {
    [NullableAttribute("1")]
private IHttpContextAccessor _contextAccessor;
    [NullableContextAttribute("1")]
public DefaultRaygunUserProvider(IHttpContextAccessor contextAccessor);
    [NullableContextAttribute("2")]
public sealed virtual RaygunIdentifierMessage GetUser();
}
[ExtensionAttribute]
internal static class Mindscape.Raygun4Net.AspNetCore.HttpRequestExtensions : object {
    [ExtensionAttribute]
public static bool IsLocal(HttpRequest req);
}
internal interface Mindscape.Raygun4Net.AspNetCore.IRaygunHttpSettings {
    public List`1<string> IgnoreSensitiveFieldNames { get; }
    public List`1<string> IgnoreQueryParameterNames { get; }
    public List`1<string> IgnoreFormFieldNames { get; }
    public List`1<string> IgnoreHeaderNames { get; }
    public List`1<string> IgnoreCookieNames { get; }
    public List`1<string> IgnoreServerVariableNames { get; }
    public List`1<IRaygunDataFilter> RawDataFilters { get; }
    public bool IsRawDataIgnored { get; }
    public bool IsRawDataIgnoredWhenFilteringFailed { get; }
    public bool UseXmlRawDataFilter { get; }
    public bool UseKeyValuePairRawDataFilter { get; }
    public abstract virtual List`1<string> get_IgnoreSensitiveFieldNames();
    public abstract virtual List`1<string> get_IgnoreQueryParameterNames();
    public abstract virtual List`1<string> get_IgnoreFormFieldNames();
    public abstract virtual List`1<string> get_IgnoreHeaderNames();
    public abstract virtual List`1<string> get_IgnoreCookieNames();
    public abstract virtual List`1<string> get_IgnoreServerVariableNames();
    public abstract virtual List`1<IRaygunDataFilter> get_RawDataFilters();
    public abstract virtual bool get_IsRawDataIgnored();
    public abstract virtual bool get_IsRawDataIgnoredWhenFilteringFailed();
    public abstract virtual bool get_UseXmlRawDataFilter();
    public abstract virtual bool get_UseKeyValuePairRawDataFilter();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Mindscape.Raygun4Net.AspNetCore.RaygunClient : RaygunClientBase {
    protected Lazy`1<RaygunSettings> Settings { get; }
    [ObsoleteAttribute("Please use the RaygunClient(RaygunSettings settings) constructor instead.")]
public RaygunClient(string apiKey);
    public RaygunClient(RaygunSettings settings);
    public RaygunClient(RaygunSettings settings, HttpClient httpClient);
    public RaygunClient(RaygunSettings settings, IRaygunUserProvider userProvider);
    public RaygunClient(RaygunSettings settings, HttpClient httpClient, IRaygunUserProvider userProvider);
    protected Lazy`1<RaygunSettings> get_Settings();
    [NullableContextAttribute("2")]
protected virtual bool CanSend(RaygunMessage message);
    [AsyncStateMachineAttribute("Mindscape.Raygun4Net.AspNetCore.RaygunClient/<SendInBackground>d__8")]
public Task SendInBackground(Exception exception, IList`1<string> tags, HttpContext context);
    [CompilerGeneratedAttribute]
private RaygunSettings <get_Settings>b__6_0();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Mindscape.Raygun4Net.AspNetCore.RaygunMiddleware : object {
    private RequestDelegate _next;
    private RaygunSettings _settings;
    private RaygunClient _client;
    private IHttpContextAccessor _httpContextAccessor;
    private static string UnhandledExceptionTag;
    public RaygunMiddleware(RequestDelegate next, RaygunSettings settings, RaygunClient raygunClient, IHttpContextAccessor httpContextAccessor);
    [AsyncStateMachineAttribute("Mindscape.Raygun4Net.AspNetCore.RaygunMiddleware/<Invoke>d__6")]
public Task Invoke(HttpContext httpContext);
}
public class Mindscape.Raygun4Net.AspNetCore.RaygunSettings : RaygunSettingsBase {
    [CompilerGeneratedAttribute]
private bool <MediumTrust>k__BackingField;
    [CompilerGeneratedAttribute]
private Int32[] <ExcludedStatusCodes>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ExcludeErrorsFromLocal>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <IgnoreSensitiveFieldNames>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <IgnoreQueryParameterNames>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <IgnoreFormFieldNames>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <IgnoreHeaderNames>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <IgnoreCookieNames>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <IgnoreServerVariableNames>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<IRaygunDataFilter> <RawDataFilters>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsRawDataIgnored>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsRawDataIgnoredWhenFilteringFailed>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseXmlRawDataFilter>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseKeyValuePairRawDataFilter>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ReplaceUnseekableRequestStreams>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ApplicationIdentifier>k__BackingField;
    [ObsoleteAttribute("This is not used by the Raygun4Net.AspNetCore package.")]
public bool MediumTrust { get; public set; }
    public Int32[] ExcludedStatusCodes { get; public set; }
    public bool ExcludeErrorsFromLocal { get; public set; }
    public List`1<string> IgnoreSensitiveFieldNames { get; public set; }
    public List`1<string> IgnoreQueryParameterNames { get; public set; }
    public List`1<string> IgnoreFormFieldNames { get; public set; }
    public List`1<string> IgnoreHeaderNames { get; public set; }
    public List`1<string> IgnoreCookieNames { get; public set; }
    public List`1<string> IgnoreServerVariableNames { get; public set; }
    public List`1<IRaygunDataFilter> RawDataFilters { get; }
    public bool IsRawDataIgnored { get; public set; }
    public bool IsRawDataIgnoredWhenFilteringFailed { get; public set; }
    public bool UseXmlRawDataFilter { get; public set; }
    public bool UseKeyValuePairRawDataFilter { get; public set; }
    [ObsoleteAttribute("Raygun Middleware now uses `Request.EnableBuffering()` to allow the request body to be read multiple times. This setting is no longer required.")]
public bool ReplaceUnseekableRequestStreams { get; public set; }
    public string ApplicationIdentifier { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_MediumTrust();
    [CompilerGeneratedAttribute]
public void set_MediumTrust(bool value);
    [CompilerGeneratedAttribute]
public Int32[] get_ExcludedStatusCodes();
    [CompilerGeneratedAttribute]
public void set_ExcludedStatusCodes(Int32[] value);
    [CompilerGeneratedAttribute]
public bool get_ExcludeErrorsFromLocal();
    [CompilerGeneratedAttribute]
public void set_ExcludeErrorsFromLocal(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<string> get_IgnoreSensitiveFieldNames();
    [CompilerGeneratedAttribute]
public void set_IgnoreSensitiveFieldNames(List`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<string> get_IgnoreQueryParameterNames();
    [CompilerGeneratedAttribute]
public void set_IgnoreQueryParameterNames(List`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<string> get_IgnoreFormFieldNames();
    [CompilerGeneratedAttribute]
public void set_IgnoreFormFieldNames(List`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<string> get_IgnoreHeaderNames();
    [CompilerGeneratedAttribute]
public void set_IgnoreHeaderNames(List`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<string> get_IgnoreCookieNames();
    [CompilerGeneratedAttribute]
public void set_IgnoreCookieNames(List`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<string> get_IgnoreServerVariableNames();
    [CompilerGeneratedAttribute]
public void set_IgnoreServerVariableNames(List`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<IRaygunDataFilter> get_RawDataFilters();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsRawDataIgnored();
    [CompilerGeneratedAttribute]
public void set_IsRawDataIgnored(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsRawDataIgnoredWhenFilteringFailed();
    [CompilerGeneratedAttribute]
public void set_IsRawDataIgnoredWhenFilteringFailed(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_UseXmlRawDataFilter();
    [CompilerGeneratedAttribute]
public void set_UseXmlRawDataFilter(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_UseKeyValuePairRawDataFilter();
    [CompilerGeneratedAttribute]
public void set_UseKeyValuePairRawDataFilter(bool value);
    [CompilerGeneratedAttribute]
public bool get_ReplaceUnseekableRequestStreams();
    [CompilerGeneratedAttribute]
public void set_ReplaceUnseekableRequestStreams(bool value);
    [CompilerGeneratedAttribute]
public string get_ApplicationIdentifier();
    [CompilerGeneratedAttribute]
public void set_ApplicationIdentifier(string value);
}
public interface Mindscape.Raygun4Net.Filters.IRaygunDataFilter {
    public abstract virtual bool CanParse(string data);
    public abstract virtual string Filter(string data, IList`1<string> ignoredKeys);
}
public class Mindscape.Raygun4Net.Filters.RaygunKeyValuePairDataFilter : object {
    private static string FILTERED_VALUE;
    public sealed virtual bool CanParse(string data);
    public sealed virtual string Filter(string data, IList`1<string> ignoredKeys);
    private bool ShouldIgnore(String[] kvp, IList`1<string> ignoredKeys);
    private bool Contains(IList`1<string> ignoredKeys, string key);
}
public class Mindscape.Raygun4Net.Filters.RaygunXmlDataFilter : object {
    private static string FILTERED_VALUE;
    public sealed virtual bool CanParse(string data);
    public sealed virtual string Filter(string data, IList`1<string> ignoredKeys);
    private void FilterElementsRecursive(IEnumerable`1<XElement> decendants, IList`1<string> ignoredKeys);
    private void FilterElement(XElement element, IList`1<string> ignoredKeys);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
