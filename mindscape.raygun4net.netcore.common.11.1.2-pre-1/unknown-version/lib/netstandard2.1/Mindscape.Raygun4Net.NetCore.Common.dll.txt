[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
public class Mindscape.Raygun4Net.Breadcrumbs.AsyncLocalBreadcrumbStorage : object {
    private AsyncLocal`1<List`1<RaygunBreadcrumb>> _breadcrumbs;
    private static int MaxSize;
    public AsyncLocalBreadcrumbStorage(List`1<RaygunBreadcrumb> breadcrumbs);
    public sealed virtual void BeginContext();
    public sealed virtual void EndContext();
    public sealed virtual void Store(RaygunBreadcrumb breadcrumb);
    public sealed virtual void Clear();
    public sealed virtual int Size();
    public sealed virtual IList`1<RaygunBreadcrumb> ToList();
}
public interface Mindscape.Raygun4Net.Breadcrumbs.IContextAwareStorage {
    public abstract virtual void BeginContext();
    public abstract virtual void EndContext();
}
public class Mindscape.Raygun4Net.Breadcrumbs.InMemoryBreadcrumbStorage : object {
    private List`1<RaygunBreadcrumb> _breadcrumbs;
    private static int MaxSize;
    public InMemoryBreadcrumbStorage(List`1<RaygunBreadcrumb> breadcrumbs);
    public sealed virtual void Store(RaygunBreadcrumb breadcrumb);
    public sealed virtual void Clear();
    public sealed virtual int Size();
    public sealed virtual IList`1<RaygunBreadcrumb> ToList();
}
public interface Mindscape.Raygun4Net.Breadcrumbs.IRaygunBreadcrumbStorage {
    public abstract virtual void Store(RaygunBreadcrumb breadcrumb);
    public abstract virtual void Clear();
    public abstract virtual int Size();
    public abstract virtual IList`1<RaygunBreadcrumb> ToList();
}
public static class Mindscape.Raygun4Net.Breadcrumbs.RaygunBreadcrumbs : object {
    private static IRaygunBreadcrumbStorage _storage;
    public static IRaygunBreadcrumbStorage Storage { get; public set; }
    private static RaygunBreadcrumbs();
    public static IRaygunBreadcrumbStorage get_Storage();
    public static void set_Storage(IRaygunBreadcrumbStorage value);
    public static void Record(string message);
    public static void Record(RaygunBreadcrumb crumb);
    private static void PopulateLocation(RaygunBreadcrumb crumb, int stackTraceFrame);
    public static void Clear();
    public static IList`1<RaygunBreadcrumb> ToList();
}
public class Mindscape.Raygun4Net.Diagnostics.PEDebugInformation : object {
    [CompilerGeneratedAttribute]
private string <Signature>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Checksum>k__BackingField;
    [CompilerGeneratedAttribute]
private string <File>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Timestamp>k__BackingField;
    public string Signature { get; internal set; }
    public string Checksum { get; internal set; }
    public string File { get; internal set; }
    public string Timestamp { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_Signature();
    [CompilerGeneratedAttribute]
internal void set_Signature(string value);
    [CompilerGeneratedAttribute]
public string get_Checksum();
    [CompilerGeneratedAttribute]
internal void set_Checksum(string value);
    [CompilerGeneratedAttribute]
public string get_File();
    [CompilerGeneratedAttribute]
internal void set_File(string value);
    [CompilerGeneratedAttribute]
public string get_Timestamp();
    [CompilerGeneratedAttribute]
internal void set_Timestamp(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Mindscape.Raygun4Net.Diagnostics.PortableExecutableReaderExtensions : object {
    public static PEReader GetFileSystemPEReader(string moduleName);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static bool TryGetDebugInformation(PEReader peReader, PEDebugInformation& debugInformation);
    [ExtensionAttribute]
private static PEDebugInformation GetDebugInformation(PEReader peReader);
}
internal static class Mindscape.Raygun4Net.EnvironmentProviders.DiskProvider : object {
    public static List`1<double> GetDiskSpace();
    private static List`1<double> GetOnWindows();
    private static List`1<double> GetOnLinux();
    private static List`1<double> GetOnMacOS();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Mindscape.Raygun4Net.EnvironmentProviders.EnvironmentVariablesProvider : object {
    public static IDictionary GetEnvironmentVariables(RaygunSettingsBase settings);
    private static IEnumerable`1<ValueTuple`2<string, string>> GetContainsVariable(IDictionary environmentVariables, string search);
    private static IEnumerable`1<ValueTuple`2<string, string>> GetEndsWithVariable(IDictionary environmentVariables, string search);
    private static IEnumerable`1<ValueTuple`2<string, string>> GetStartsWithVariable(IDictionary environmentVariables, string search);
    [IteratorStateMachineAttribute("Mindscape.Raygun4Net.EnvironmentProviders.EnvironmentVariablesProvider/<GetExactVariable>d__4")]
private static IEnumerable`1<ValueTuple`2<string, string>> GetExactVariable(IDictionary environmentVariables, string search);
}
internal static class Mindscape.Raygun4Net.EnvironmentProviders.MemoryProvider : object {
    public static Nullable`1<ValueTuple`4<ulong, ulong, ulong, ulong>> GetTotalMemory();
    private static Nullable`1<ValueTuple`4<ulong, ulong, ulong, ulong>> GetOnWindows();
    private static Nullable`1<ValueTuple`4<ulong, ulong, ulong, ulong>> GetOnLinux();
    private static Nullable`1<ValueTuple`4<ulong, ulong, ulong, ulong>> GetOnMacOS();
    [NullableContextAttribute("1")]
private static ulong GetSysctlUlongValue(string name);
    [NullableContextAttribute("1")]
private static string GetCommandOutput(string command);
    [NullableContextAttribute("1")]
private static bool GlobalMemoryStatusEx(MEMORYSTATUSEX lpBuffer);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal static class Mindscape.Raygun4Net.EnvironmentProviders.OSProvider : object {
    [NullableContextAttribute("1")]
public static string GetOSInformation();
    private static string GetForWindows();
    private static string GetForLinux();
    private static string GetForMacOS();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal static class Mindscape.Raygun4Net.EnvironmentProviders.ProcessorProvider : object {
    public static string GetCpuName();
    private static string GetOnWindows();
    private static string GetOnLinux();
    private static string GetOnMacOS();
}
internal static class Mindscape.Raygun4Net.EnvironmentProviders.ScreenProvider : object {
    public static Nullable`1<ValueTuple`2<int, int>> GetPrimaryScreenResolution();
    private static Nullable`1<ValueTuple`2<int, int>> GetOnWindows();
    private static Nullable`1<ValueTuple`2<int, int>> GetOnLinux();
    private static Nullable`1<ValueTuple`2<int, int>> GetOnMacOS();
    private static int GetSystemMetrics(SystemMetric smIndex);
}
[GeneratedCodeAttribute("simple-json", "1.0.0")]
public interface Mindscape.Raygun4Net.IJsonSerializerStrategy {
    public abstract virtual bool TrySerializeNonPrimitiveObject(object input, Object& output);
    public abstract virtual object DeserializeObject(object value, Type type);
}
public interface Mindscape.Raygun4Net.IRaygunMessageBuilder {
    public abstract virtual RaygunMessage Build();
    public abstract virtual IRaygunMessageBuilder SetMachineName(string machineName);
    public abstract virtual IRaygunMessageBuilder SetExceptionDetails(Exception exception);
    public abstract virtual IRaygunMessageBuilder SetClientDetails();
    public abstract virtual IRaygunMessageBuilder SetEnvironmentDetails();
    public abstract virtual IRaygunMessageBuilder SetVersion(string version);
    public abstract virtual IRaygunMessageBuilder SetUserCustomData(IDictionary userCustomData);
    public abstract virtual IRaygunMessageBuilder SetTags(IList`1<string> tags);
    public abstract virtual IRaygunMessageBuilder SetUser(RaygunIdentifierMessage user);
    public abstract virtual IRaygunMessageBuilder SetRequestDetails(RaygunRequestMessage message);
    public abstract virtual IRaygunMessageBuilder SetResponseDetails(RaygunResponseMessage message);
    public abstract virtual IRaygunMessageBuilder SetBreadcrumbs(IList`1<RaygunBreadcrumb> breadcrumbs);
    public abstract virtual IRaygunMessageBuilder Customise(Action`1<RaygunMessage> customiseMessage);
}
[NullableContextAttribute("2")]
public interface Mindscape.Raygun4Net.IRaygunUserProvider {
    public abstract virtual RaygunIdentifierMessage GetUser();
}
[GeneratedCodeAttribute("simple-json", "1.0.0")]
[EditorBrowsableAttribute("1")]
public class Mindscape.Raygun4Net.JsonArray : List`1<object> {
    public JsonArray(int capacity);
    public virtual string ToString();
}
[DefaultMemberAttribute("Item")]
[GeneratedCodeAttribute("simple-json", "1.0.0")]
[EditorBrowsableAttribute("1")]
public class Mindscape.Raygun4Net.JsonObject : object {
    private Dictionary`2<string, object> _members;
    public object Item { get; }
    public ICollection`1<string> Keys { get; }
    public ICollection`1<object> Values { get; }
    public object Item { get; public set; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    public JsonObject(IEqualityComparer`1<string> comparer);
    public object get_Item(int index);
    internal static object GetAtIndex(IDictionary`2<string, object> obj, int index);
    public sealed virtual void Add(string key, object value);
    public sealed virtual bool ContainsKey(string key);
    public sealed virtual ICollection`1<string> get_Keys();
    public sealed virtual bool Remove(string key);
    public sealed virtual bool TryGetValue(string key, Object& value);
    public sealed virtual ICollection`1<object> get_Values();
    public sealed virtual object get_Item(string key);
    public sealed virtual void set_Item(string key, object value);
    public sealed virtual void Add(KeyValuePair`2<string, object> item);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(KeyValuePair`2<string, object> item);
    public sealed virtual void CopyTo(KeyValuePair`2[] array, int arrayIndex);
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual bool Remove(KeyValuePair`2<string, object> item);
    public sealed virtual IEnumerator`1<KeyValuePair`2<string, object>> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public virtual string ToString();
}
public class Mindscape.Raygun4Net.Offline.CrashReportStoreEntry : object {
    [CompilerGeneratedAttribute]
private Guid <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ApiKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MessagePayload>k__BackingField;
    public Guid Id { get; public set; }
    public string ApiKey { get; public set; }
    public string MessagePayload { get; public set; }
    [CompilerGeneratedAttribute]
public Guid get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(Guid value);
    [CompilerGeneratedAttribute]
public string get_ApiKey();
    [CompilerGeneratedAttribute]
public void set_ApiKey(string value);
    [CompilerGeneratedAttribute]
public string get_MessagePayload();
    [CompilerGeneratedAttribute]
public void set_MessagePayload(string value);
}
public interface Mindscape.Raygun4Net.Offline.IBackgroundSendStrategy {
    [CompilerGeneratedAttribute]
public abstract virtual void add_OnSendAsync(Func`1<Task> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_OnSendAsync(Func`1<Task> value);
    public abstract virtual void Start();
    public abstract virtual void Stop();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Mindscape.Raygun4Net.Offline.OfflineStoreBase : object {
    private IBackgroundSendStrategy _backgroundSendStrategy;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private SendHandler <SendCallback>k__BackingField;
    private static Regex HttpStatusCodeRegex;
    [NullableAttribute("2")]
protected SendHandler SendCallback { get; protected set; }
    protected OfflineStoreBase(IBackgroundSendStrategy backgroundSendStrategy);
    private static OfflineStoreBase();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
protected SendHandler get_SendCallback();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
protected void set_SendCallback(SendHandler value);
    public virtual void SetSendCallback(SendHandler sendHandler);
    [AsyncStateMachineAttribute("Mindscape.Raygun4Net.Offline.OfflineStoreBase/<ProcessOfflineCrashReports>d__8")]
protected virtual Task ProcessOfflineCrashReports();
    public abstract virtual Task`1<List`1<CrashReportStoreEntry>> GetAll(CancellationToken cancellationToken);
    public abstract virtual Task`1<bool> Save(string crashPayload, string apiKey, CancellationToken cancellationToken);
    public abstract virtual Task`1<bool> Remove(Guid cacheEntryId, CancellationToken cancellationToken);
}
public class Mindscape.Raygun4Net.Offline.SendHandler : MulticastDelegate {
    public SendHandler(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual Task Invoke(string messagePayload, string apiKey, CancellationToken cancellationToken);
    public virtual IAsyncResult BeginInvoke(string messagePayload, string apiKey, CancellationToken cancellationToken, AsyncCallback callback, object object);
    public virtual Task EndInvoke(IAsyncResult result);
}
public class Mindscape.Raygun4Net.Offline.TimerBasedSendStrategy : object {
    private static TimeSpan DefaultInternal;
    private Timer _backgroundTimer;
    [CompilerGeneratedAttribute]
private Func`1<Task> OnSendAsync;
    [CompilerGeneratedAttribute]
private TimeSpan <Interval>k__BackingField;
    public TimeSpan Interval { get; }
    public TimerBasedSendStrategy(Nullable`1<TimeSpan> interval);
    private static TimerBasedSendStrategy();
    [CompilerGeneratedAttribute]
public sealed virtual void add_OnSendAsync(Func`1<Task> value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_OnSendAsync(Func`1<Task> value);
    [CompilerGeneratedAttribute]
public TimeSpan get_Interval();
    protected virtual override void Finalize();
    [AsyncStateMachineAttribute("Mindscape.Raygun4Net.Offline.TimerBasedSendStrategy/<SendOfflineErrors>d__10")]
private void SendOfflineErrors(object state);
    public sealed virtual void Start();
    public sealed virtual void Stop();
    public sealed virtual void Dispose();
}
internal static class Mindscape.Raygun4Net.Platforms.AndroidPlatform : object {
    private static Assembly AndroidAssembly;
    public static bool TryAttachExceptionHandlers();
    private static void AndroidUnhandledExceptionHandler(object sender, object exceptionArgs);
}
internal static class Mindscape.Raygun4Net.Platforms.ApplePlatform : object {
    private static Assembly IOSAssembly;
    private static Assembly MacCatalystAssembly;
    private static object MarshalManagedExceptionMode_UnwindNativeCode;
    public static bool TryAttachExceptionHandlers();
    private static void SetAppleUnwindNative(object sender, object e);
}
internal static class Mindscape.Raygun4Net.Platforms.AssemblyHelpers : object {
    internal static Assembly FindAssembly(string name, Byte[] publicKeyToken);
    public static Byte[] HexStringToByteArray(string hex);
}
internal static class Mindscape.Raygun4Net.Platforms.WindowsPlatform : object {
    private static Assembly WinUIAssembly;
    private static Exception _lastFirstChanceException;
    public static bool TryAttachExceptionHandlers();
    private static void WinUIUnhandledExceptionHandler(object sender, object exceptionArgs);
}
[GeneratedCodeAttribute("simple-json", "1.0.0")]
public class Mindscape.Raygun4Net.PocoJsonSerializerStrategy : object {
    internal IDictionary`2<Type, ConstructorDelegate> ConstructorCache;
    internal IDictionary`2<Type, IDictionary`2<string, GetDelegate>> GetCache;
    internal IDictionary`2<Type, IDictionary`2<string, KeyValuePair`2<Type, SetDelegate>>> SetCache;
    internal static Type[] EmptyTypes;
    internal static Type[] ArrayConstructorParameterTypes;
    private static String[] Iso8601Format;
    private static PocoJsonSerializerStrategy();
    protected virtual string MapClrMemberNameToJsonFieldName(string clrPropertyName);
    internal virtual ConstructorDelegate ContructorDelegateFactory(Type key);
    internal virtual IDictionary`2<string, GetDelegate> GetterValueFactory(Type type);
    internal virtual IDictionary`2<string, KeyValuePair`2<Type, SetDelegate>> SetterValueFactory(Type type);
    public virtual bool TrySerializeNonPrimitiveObject(object input, Object& output);
    public virtual object DeserializeObject(object value, Type type);
    protected virtual object SerializeEnum(Enum p);
    protected virtual bool TrySerializeKnownTypes(object input, Object& output);
    protected virtual bool TrySerializeUnknownTypes(object input, Object& output);
}
public class Mindscape.Raygun4Net.RaygunBreadcrumb : object {
    private static DateTime UnixEpoch;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Category>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    private IDictionary`2<string, object> _customData;
    [CompilerGeneratedAttribute]
private long <Timestamp>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClassName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MethodName>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <LineNumber>k__BackingField;
    public string Message { get; public set; }
    public string Category { get; public set; }
    public string Type { get; public set; }
    public IDictionary`2<string, object> CustomData { get; public set; }
    public long Timestamp { get; public set; }
    public string ClassName { get; public set; }
    public string MethodName { get; public set; }
    public Nullable`1<int> LineNumber { get; public set; }
    private static RaygunBreadcrumb();
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_Category();
    [CompilerGeneratedAttribute]
public void set_Category(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    public IDictionary`2<string, object> get_CustomData();
    public void set_CustomData(IDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public long get_Timestamp();
    [CompilerGeneratedAttribute]
public void set_Timestamp(long value);
    [CompilerGeneratedAttribute]
public string get_ClassName();
    [CompilerGeneratedAttribute]
public void set_ClassName(string value);
    [CompilerGeneratedAttribute]
public string get_MethodName();
    [CompilerGeneratedAttribute]
public void set_MethodName(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_LineNumber();
    [CompilerGeneratedAttribute]
public void set_LineNumber(Nullable`1<int> value);
}
public abstract class Mindscape.Raygun4Net.RaygunClientBase : object {
    private static String[] UnhandledExceptionTags;
    private static HttpClient DefaultClient;
    private HttpClient _client;
    private List`1<Type> _wrapperExceptions;
    private bool _handlingRecursiveErrorSending;
    private bool _handlingRecursiveGrouping;
    protected RaygunSettingsBase _settings;
    private ThrottledBackgroundMessageProcessor _backgroundMessageProcessor;
    private IRaygunUserProvider _userProvider;
    protected internal static string SentKey;
    private UnhandledExceptionHandler _onUnhandledExceptionDelegate;
    [CompilerGeneratedAttribute]
private EventHandler`1<RaygunSendingMessageEventArgs> SendingMessage;
    [CompilerGeneratedAttribute]
private EventHandler`1<RaygunCustomGroupingKeyEventArgs> CustomGroupingKey;
    [CompilerGeneratedAttribute]
private string <User>k__BackingField;
    [CompilerGeneratedAttribute]
private RaygunIdentifierMessage <UserInfo>k__BackingField;
    [ObsoleteAttribute("Provide a `IRaygunUserProvider` to the RaygunClient constructor instead.")]
public string User { get; public set; }
    [ObsoleteAttribute("Provide a `IRaygunUserProvider` to the RaygunClient constructor instead.")]
public RaygunIdentifierMessage UserInfo { get; public set; }
    [ObsoleteAttribute("Use the `RaygunSettings.ApplicationVersion` property instead.")]
public string ApplicationVersion { get; public set; }
    [ObsoleteAttribute("Use the `RaygunSettings.CatchUnhandledExceptions` property instead.")]
public bool CatchUnhandledExceptions { get; public set; }
    protected RaygunClientBase(RaygunSettingsBase settings);
    protected RaygunClientBase(RaygunSettingsBase settings, HttpClient client);
    protected RaygunClientBase(RaygunSettingsBase settings, IRaygunUserProvider userProvider);
    protected RaygunClientBase(RaygunSettingsBase settings, HttpClient client, IRaygunUserProvider userProvider);
    private static RaygunClientBase();
    [CompilerGeneratedAttribute]
public void add_SendingMessage(EventHandler`1<RaygunSendingMessageEventArgs> value);
    [CompilerGeneratedAttribute]
public void remove_SendingMessage(EventHandler`1<RaygunSendingMessageEventArgs> value);
    [CompilerGeneratedAttribute]
public void add_CustomGroupingKey(EventHandler`1<RaygunCustomGroupingKeyEventArgs> value);
    [CompilerGeneratedAttribute]
public void remove_CustomGroupingKey(EventHandler`1<RaygunCustomGroupingKeyEventArgs> value);
    [CompilerGeneratedAttribute]
public virtual string get_User();
    [CompilerGeneratedAttribute]
public virtual void set_User(string value);
    [CompilerGeneratedAttribute]
public virtual RaygunIdentifierMessage get_UserInfo();
    [CompilerGeneratedAttribute]
public virtual void set_UserInfo(RaygunIdentifierMessage value);
    public string get_ApplicationVersion();
    public void set_ApplicationVersion(string value);
    public virtual bool get_CatchUnhandledExceptions();
    public virtual void set_CatchUnhandledExceptions(bool value);
    private void OnApplicationUnhandledException(Exception exception, bool isTerminating);
    public void AddWrapperExceptions(Type[] wrapperExceptions);
    public void RemoveWrapperExceptions(Type[] wrapperExceptions);
    protected virtual bool CanSend(Exception exception);
    protected bool Enqueue(RaygunMessage msg);
    protected void FlagAsSent(Exception exception);
    protected bool OnSendingMessage(RaygunMessage raygunMessage);
    [AsyncStateMachineAttribute("Mindscape.Raygun4Net.RaygunClientBase/<OnCustomGroupingKey>d__42")]
protected Task`1<string> OnCustomGroupingKey(Exception exception, RaygunMessage message);
    protected bool ValidateApiKey();
    protected virtual bool CanSend(RaygunMessage message);
    [ObsoleteAttribute("Please use SendAsync() to avoid possible deadlocks")]
public void Send(Exception exception);
    [ObsoleteAttribute("Please use SendAsync() to avoid possible deadlocks")]
public void Send(Exception exception, IList`1<string> tags);
    [ObsoleteAttribute("Please use SendAsync() to avoid possible deadlocks")]
public void Send(Exception exception, IList`1<string> tags, IDictionary userCustomData);
    [AsyncStateMachineAttribute("Mindscape.Raygun4Net.RaygunClientBase/<SendAsync>d__48")]
public Task SendAsync(Exception exception);
    [AsyncStateMachineAttribute("Mindscape.Raygun4Net.RaygunClientBase/<SendAsync>d__49")]
public Task SendAsync(Exception exception, IList`1<string> tags);
    [AsyncStateMachineAttribute("Mindscape.Raygun4Net.RaygunClientBase/<SendAsync>d__50")]
public virtual Task SendAsync(Exception exception, IList`1<string> tags, IDictionary userCustomData, RaygunIdentifierMessage userInfo);
    [AsyncStateMachineAttribute("Mindscape.Raygun4Net.RaygunClientBase/<SendInBackground>d__51")]
public virtual Task SendInBackground(Exception exception, IList`1<string> tags, IDictionary userCustomData, RaygunIdentifierMessage userInfo);
    public Task SendInBackground(RaygunMessage raygunMessage);
    [AsyncStateMachineAttribute("Mindscape.Raygun4Net.RaygunClientBase/<BuildMessage>d__53")]
protected Task`1<RaygunMessage> BuildMessage(Exception exception, IList`1<string> tags, IDictionary userCustomData, RaygunIdentifierMessage userInfo, Action`1<RaygunMessage> customiseMessage);
    [AsyncStateMachineAttribute("Mindscape.Raygun4Net.RaygunClientBase/<StripAndSend>d__54")]
protected virtual Task StripAndSend(Exception exception, IList`1<string> tags, IDictionary userCustomData, RaygunIdentifierMessage userInfo);
    [IteratorStateMachineAttribute("Mindscape.Raygun4Net.RaygunClientBase/<StripWrapperExceptions>d__55")]
protected virtual IEnumerable`1<Exception> StripWrapperExceptions(Exception exception);
    public Task Send(RaygunMessage raygunMessage);
    [AsyncStateMachineAttribute("Mindscape.Raygun4Net.RaygunClientBase/<Send>d__57")]
public Task Send(RaygunMessage raygunMessage, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Mindscape.Raygun4Net.RaygunClientBase/<SendOfflinePayloadAsync>d__58")]
private Task SendOfflinePayloadAsync(string payload, string apiKey, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Mindscape.Raygun4Net.RaygunClientBase/<SendPayloadAsync>d__59")]
private Task SendPayloadAsync(string payload, string apiKey, bool useOfflineStore, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Mindscape.Raygun4Net.RaygunClientBase/<SaveMessageToOfflineCache>d__60")]
private Task`1<bool> SaveMessageToOfflineCache(string messagePayload, string apiKey, CancellationToken cancellationToken);
}
public class Mindscape.Raygun4Net.RaygunClientMessage : object {
    private static string ClientVersion;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientUrl>k__BackingField;
    public string Name { get; public set; }
    public string Version { get; public set; }
    public string ClientUrl { get; public set; }
    private static RaygunClientMessage();
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
    [CompilerGeneratedAttribute]
public string get_ClientUrl();
    [CompilerGeneratedAttribute]
public void set_ClientUrl(string value);
}
public class Mindscape.Raygun4Net.RaygunCustomGroupingKeyEventArgs : EventArgs {
    [CompilerGeneratedAttribute]
private Exception <Exception>k__BackingField;
    [CompilerGeneratedAttribute]
private RaygunMessage <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CustomGroupingKey>k__BackingField;
    public Exception Exception { get; private set; }
    public RaygunMessage Message { get; private set; }
    public string CustomGroupingKey { get; public set; }
    public RaygunCustomGroupingKeyEventArgs(Exception exception, RaygunMessage message);
    [CompilerGeneratedAttribute]
public Exception get_Exception();
    [CompilerGeneratedAttribute]
private void set_Exception(Exception value);
    [CompilerGeneratedAttribute]
public RaygunMessage get_Message();
    [CompilerGeneratedAttribute]
private void set_Message(RaygunMessage value);
    [CompilerGeneratedAttribute]
public string get_CustomGroupingKey();
    [CompilerGeneratedAttribute]
public void set_CustomGroupingKey(string value);
}
public class Mindscape.Raygun4Net.RaygunEnvironmentMessage : object {
    [CompilerGeneratedAttribute]
private int <ProcessorCount>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OSVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private double <WindowBoundsWidth>k__BackingField;
    [CompilerGeneratedAttribute]
private double <WindowBoundsHeight>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Cpu>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Architecture>k__BackingField;
    [CompilerGeneratedAttribute]
private ulong <TotalVirtualMemory>k__BackingField;
    [CompilerGeneratedAttribute]
private ulong <AvailableVirtualMemory>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<double> <DiskSpaceFree>k__BackingField;
    [CompilerGeneratedAttribute]
private ulong <TotalPhysicalMemory>k__BackingField;
    [CompilerGeneratedAttribute]
private ulong <AvailablePhysicalMemory>k__BackingField;
    [CompilerGeneratedAttribute]
private double <UtcOffset>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Locale>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary <EnvironmentVariables>k__BackingField;
    public int ProcessorCount { get; public set; }
    public string OSVersion { get; public set; }
    public double WindowBoundsWidth { get; public set; }
    public double WindowBoundsHeight { get; public set; }
    public string Cpu { get; public set; }
    public string Architecture { get; public set; }
    public ulong TotalVirtualMemory { get; public set; }
    public ulong AvailableVirtualMemory { get; public set; }
    public List`1<double> DiskSpaceFree { get; public set; }
    public ulong TotalPhysicalMemory { get; public set; }
    public ulong AvailablePhysicalMemory { get; public set; }
    public double UtcOffset { get; public set; }
    public string Locale { get; public set; }
    public IDictionary EnvironmentVariables { get; public set; }
    [CompilerGeneratedAttribute]
public int get_ProcessorCount();
    [CompilerGeneratedAttribute]
public void set_ProcessorCount(int value);
    [CompilerGeneratedAttribute]
public string get_OSVersion();
    [CompilerGeneratedAttribute]
public void set_OSVersion(string value);
    [CompilerGeneratedAttribute]
public double get_WindowBoundsWidth();
    [CompilerGeneratedAttribute]
public void set_WindowBoundsWidth(double value);
    [CompilerGeneratedAttribute]
public double get_WindowBoundsHeight();
    [CompilerGeneratedAttribute]
public void set_WindowBoundsHeight(double value);
    [CompilerGeneratedAttribute]
public string get_Cpu();
    [CompilerGeneratedAttribute]
public void set_Cpu(string value);
    [CompilerGeneratedAttribute]
public string get_Architecture();
    [CompilerGeneratedAttribute]
public void set_Architecture(string value);
    [CompilerGeneratedAttribute]
public ulong get_TotalVirtualMemory();
    [CompilerGeneratedAttribute]
public void set_TotalVirtualMemory(ulong value);
    [CompilerGeneratedAttribute]
public ulong get_AvailableVirtualMemory();
    [CompilerGeneratedAttribute]
public void set_AvailableVirtualMemory(ulong value);
    [CompilerGeneratedAttribute]
public List`1<double> get_DiskSpaceFree();
    [CompilerGeneratedAttribute]
public void set_DiskSpaceFree(List`1<double> value);
    [CompilerGeneratedAttribute]
public ulong get_TotalPhysicalMemory();
    [CompilerGeneratedAttribute]
public void set_TotalPhysicalMemory(ulong value);
    [CompilerGeneratedAttribute]
public ulong get_AvailablePhysicalMemory();
    [CompilerGeneratedAttribute]
public void set_AvailablePhysicalMemory(ulong value);
    [CompilerGeneratedAttribute]
public double get_UtcOffset();
    [CompilerGeneratedAttribute]
public void set_UtcOffset(double value);
    [CompilerGeneratedAttribute]
public string get_Locale();
    [CompilerGeneratedAttribute]
public void set_Locale(string value);
    [CompilerGeneratedAttribute]
public IDictionary get_EnvironmentVariables();
    [CompilerGeneratedAttribute]
public void set_EnvironmentVariables(IDictionary value);
}
public class Mindscape.Raygun4Net.RaygunEnvironmentMessageBuilder : object {
    private static RaygunEnvironmentMessage CachedMessage;
    internal static DateTime LastUpdate;
    private static SemaphoreSlim Semaphore;
    private static RaygunEnvironmentMessageBuilder();
    public static RaygunEnvironmentMessage Build(RaygunSettingsBase settings);
    private static void Build();
    private static void Update(RaygunSettingsBase settings);
}
public class Mindscape.Raygun4Net.RaygunErrorMessage : object {
    [CompilerGeneratedAttribute]
private RaygunErrorMessage <InnerError>k__BackingField;
    [CompilerGeneratedAttribute]
private RaygunErrorMessage[] <InnerErrors>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary <Data>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClassName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private RaygunErrorStackTraceLineMessage[] <StackTrace>k__BackingField;
    [CompilerGeneratedAttribute]
private PEDebugInformation[] <Images>k__BackingField;
    public RaygunErrorMessage InnerError { get; public set; }
    public RaygunErrorMessage[] InnerErrors { get; public set; }
    public IDictionary Data { get; public set; }
    public string ClassName { get; public set; }
    public string Message { get; public set; }
    public RaygunErrorStackTraceLineMessage[] StackTrace { get; public set; }
    public PEDebugInformation[] Images { get; public set; }
    [CompilerGeneratedAttribute]
public RaygunErrorMessage get_InnerError();
    [CompilerGeneratedAttribute]
public void set_InnerError(RaygunErrorMessage value);
    [CompilerGeneratedAttribute]
public RaygunErrorMessage[] get_InnerErrors();
    [CompilerGeneratedAttribute]
public void set_InnerErrors(RaygunErrorMessage[] value);
    [CompilerGeneratedAttribute]
public IDictionary get_Data();
    [CompilerGeneratedAttribute]
public void set_Data(IDictionary value);
    [CompilerGeneratedAttribute]
public string get_ClassName();
    [CompilerGeneratedAttribute]
public void set_ClassName(string value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public RaygunErrorStackTraceLineMessage[] get_StackTrace();
    [CompilerGeneratedAttribute]
public void set_StackTrace(RaygunErrorStackTraceLineMessage[] value);
    [CompilerGeneratedAttribute]
public PEDebugInformation[] get_Images();
    [CompilerGeneratedAttribute]
public void set_Images(PEDebugInformation[] value);
    public virtual string ToString();
}
public class Mindscape.Raygun4Net.RaygunErrorMessageBuilder : object {
    private static ConcurrentDictionary`2<string, PEDebugInformation> DebugInformationCache;
    [CompilerGeneratedAttribute]
private static Func`2<string, PEReader> <AssemblyReaderProvider>k__BackingField;
    public static Func`2<string, PEReader> AssemblyReaderProvider { get; public set; }
    private static RaygunErrorMessageBuilder();
    [CompilerGeneratedAttribute]
public static Func`2<string, PEReader> get_AssemblyReaderProvider();
    [CompilerGeneratedAttribute]
public static void set_AssemblyReaderProvider(Func`2<string, PEReader> value);
    protected static string FormatTypeName(Type type, bool fullName);
    protected static RaygunErrorStackTraceLineMessage[] BuildStackTrace(Exception exception);
    public static RaygunErrorStackTraceLineMessage[] BuildStackTrace(StackTrace stackTrace);
    protected static string GenerateMethodName(MethodBase method);
    public static RaygunErrorMessage Build(Exception exception);
    private static IEnumerable`1<PEDebugInformation> GetDebugInfoForStackFrames(IEnumerable`1<RaygunErrorStackTraceLineMessage> frames);
    private static PEDebugInformation TryGetDebugInformation(string moduleName);
}
public class Mindscape.Raygun4Net.RaygunErrorStackTraceLineMessage : object {
    [CompilerGeneratedAttribute]
private int <LineNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClassName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FileName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MethodName>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ILOffset>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MethodToken>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ImageSignature>k__BackingField;
    public int LineNumber { get; public set; }
    public string ClassName { get; public set; }
    public string FileName { get; public set; }
    public string MethodName { get; public set; }
    public int ILOffset { get; public set; }
    public int MethodToken { get; public set; }
    public string ImageSignature { get; public set; }
    [CompilerGeneratedAttribute]
public int get_LineNumber();
    [CompilerGeneratedAttribute]
public void set_LineNumber(int value);
    [CompilerGeneratedAttribute]
public string get_ClassName();
    [CompilerGeneratedAttribute]
public void set_ClassName(string value);
    [CompilerGeneratedAttribute]
public string get_FileName();
    [CompilerGeneratedAttribute]
public void set_FileName(string value);
    [CompilerGeneratedAttribute]
public string get_MethodName();
    [CompilerGeneratedAttribute]
public void set_MethodName(string value);
    [CompilerGeneratedAttribute]
public int get_ILOffset();
    [CompilerGeneratedAttribute]
public void set_ILOffset(int value);
    [CompilerGeneratedAttribute]
public int get_MethodToken();
    [CompilerGeneratedAttribute]
public void set_MethodToken(int value);
    [CompilerGeneratedAttribute]
public string get_ImageSignature();
    [CompilerGeneratedAttribute]
public void set_ImageSignature(string value);
}
public class Mindscape.Raygun4Net.RaygunIdentifierMessage : object {
    [CompilerGeneratedAttribute]
private string <Identifier>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsAnonymous>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Email>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FullName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FirstName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UUID>k__BackingField;
    public string Identifier { get; public set; }
    public bool IsAnonymous { get; public set; }
    public string Email { get; public set; }
    public string FullName { get; public set; }
    public string FirstName { get; public set; }
    public string UUID { get; public set; }
    public RaygunIdentifierMessage(string user);
    [CompilerGeneratedAttribute]
public string get_Identifier();
    [CompilerGeneratedAttribute]
public void set_Identifier(string value);
    [CompilerGeneratedAttribute]
public bool get_IsAnonymous();
    [CompilerGeneratedAttribute]
public void set_IsAnonymous(bool value);
    [CompilerGeneratedAttribute]
public string get_Email();
    [CompilerGeneratedAttribute]
public void set_Email(string value);
    [CompilerGeneratedAttribute]
public string get_FullName();
    [CompilerGeneratedAttribute]
public void set_FullName(string value);
    [CompilerGeneratedAttribute]
public string get_FirstName();
    [CompilerGeneratedAttribute]
public void set_FirstName(string value);
    [CompilerGeneratedAttribute]
public string get_UUID();
    [CompilerGeneratedAttribute]
public void set_UUID(string value);
    public virtual string ToString();
}
public class Mindscape.Raygun4Net.RaygunMessage : object {
    [CompilerGeneratedAttribute]
private DateTime <OccurredOn>k__BackingField;
    [CompilerGeneratedAttribute]
private RaygunMessageDetails <Details>k__BackingField;
    public DateTime OccurredOn { get; public set; }
    public RaygunMessageDetails Details { get; public set; }
    [CompilerGeneratedAttribute]
public DateTime get_OccurredOn();
    [CompilerGeneratedAttribute]
public void set_OccurredOn(DateTime value);
    [CompilerGeneratedAttribute]
public RaygunMessageDetails get_Details();
    [CompilerGeneratedAttribute]
public void set_Details(RaygunMessageDetails value);
    public virtual string ToString();
}
public class Mindscape.Raygun4Net.RaygunMessageBuilder : object {
    private RaygunMessage _raygunMessage;
    private RaygunSettingsBase _settings;
    private RaygunMessageBuilder(RaygunSettingsBase settings);
    public static RaygunMessageBuilder New(RaygunSettingsBase settings);
    public sealed virtual RaygunMessage Build();
    public IRaygunMessageBuilder SetTimeStamp(Nullable`1<DateTime> currentTime);
    public sealed virtual IRaygunMessageBuilder SetMachineName(string machineName);
    public sealed virtual IRaygunMessageBuilder SetEnvironmentDetails();
    public sealed virtual IRaygunMessageBuilder SetExceptionDetails(Exception exception);
    public sealed virtual IRaygunMessageBuilder SetClientDetails();
    public sealed virtual IRaygunMessageBuilder SetUserCustomData(IDictionary userCustomData);
    public sealed virtual IRaygunMessageBuilder SetTags(IList`1<string> tags);
    public sealed virtual IRaygunMessageBuilder SetUser(RaygunIdentifierMessage user);
    public sealed virtual IRaygunMessageBuilder SetVersion(string version);
    public sealed virtual IRaygunMessageBuilder SetRequestDetails(RaygunRequestMessage message);
    public sealed virtual IRaygunMessageBuilder SetResponseDetails(RaygunResponseMessage message);
    public sealed virtual IRaygunMessageBuilder SetBreadcrumbs(IList`1<RaygunBreadcrumb> breadcrumbs);
    public sealed virtual IRaygunMessageBuilder Customise(Action`1<RaygunMessage> customiseMessage);
}
public class Mindscape.Raygun4Net.RaygunMessageDetails : object {
    [CompilerGeneratedAttribute]
private string <MachineName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GroupingKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private RaygunErrorMessage <Error>k__BackingField;
    [CompilerGeneratedAttribute]
private RaygunEnvironmentMessage <Environment>k__BackingField;
    [CompilerGeneratedAttribute]
private RaygunClientMessage <Client>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Tags>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary <UserCustomData>k__BackingField;
    [CompilerGeneratedAttribute]
private RaygunIdentifierMessage <User>k__BackingField;
    [CompilerGeneratedAttribute]
private RaygunRequestMessage <Request>k__BackingField;
    [CompilerGeneratedAttribute]
private RaygunResponseMessage <Response>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<RaygunBreadcrumb> <Breadcrumbs>k__BackingField;
    public string MachineName { get; public set; }
    public string GroupingKey { get; public set; }
    public string Version { get; public set; }
    public RaygunErrorMessage Error { get; public set; }
    public RaygunEnvironmentMessage Environment { get; public set; }
    public RaygunClientMessage Client { get; public set; }
    public IList`1<string> Tags { get; public set; }
    public IDictionary UserCustomData { get; public set; }
    public RaygunIdentifierMessage User { get; public set; }
    public RaygunRequestMessage Request { get; public set; }
    public RaygunResponseMessage Response { get; public set; }
    public IList`1<RaygunBreadcrumb> Breadcrumbs { get; public set; }
    [CompilerGeneratedAttribute]
public string get_MachineName();
    [CompilerGeneratedAttribute]
public void set_MachineName(string value);
    [CompilerGeneratedAttribute]
public string get_GroupingKey();
    [CompilerGeneratedAttribute]
public void set_GroupingKey(string value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
    [CompilerGeneratedAttribute]
public RaygunErrorMessage get_Error();
    [CompilerGeneratedAttribute]
public void set_Error(RaygunErrorMessage value);
    [CompilerGeneratedAttribute]
public RaygunEnvironmentMessage get_Environment();
    [CompilerGeneratedAttribute]
public void set_Environment(RaygunEnvironmentMessage value);
    [CompilerGeneratedAttribute]
public RaygunClientMessage get_Client();
    [CompilerGeneratedAttribute]
public void set_Client(RaygunClientMessage value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Tags();
    [CompilerGeneratedAttribute]
public void set_Tags(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IDictionary get_UserCustomData();
    [CompilerGeneratedAttribute]
public void set_UserCustomData(IDictionary value);
    [CompilerGeneratedAttribute]
public RaygunIdentifierMessage get_User();
    [CompilerGeneratedAttribute]
public void set_User(RaygunIdentifierMessage value);
    [CompilerGeneratedAttribute]
public RaygunRequestMessage get_Request();
    [CompilerGeneratedAttribute]
public void set_Request(RaygunRequestMessage value);
    [CompilerGeneratedAttribute]
public RaygunResponseMessage get_Response();
    [CompilerGeneratedAttribute]
public void set_Response(RaygunResponseMessage value);
    [CompilerGeneratedAttribute]
public IList`1<RaygunBreadcrumb> get_Breadcrumbs();
    [CompilerGeneratedAttribute]
public void set_Breadcrumbs(IList`1<RaygunBreadcrumb> value);
}
public class Mindscape.Raygun4Net.RaygunRequestMessage : object {
    [CompilerGeneratedAttribute]
private string <HostName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HttpMethod>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IPAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary <QueryString>k__BackingField;
    [CompilerGeneratedAttribute]
private IList <Cookies>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary <Data>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary <Form>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RawData>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary <Headers>k__BackingField;
    public string HostName { get; public set; }
    public string Url { get; public set; }
    public string HttpMethod { get; public set; }
    public string IPAddress { get; public set; }
    public IDictionary QueryString { get; public set; }
    public IList Cookies { get; public set; }
    public IDictionary Data { get; public set; }
    public IDictionary Form { get; public set; }
    public string RawData { get; public set; }
    public IDictionary Headers { get; public set; }
    [CompilerGeneratedAttribute]
public string get_HostName();
    [CompilerGeneratedAttribute]
public void set_HostName(string value);
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
    [CompilerGeneratedAttribute]
public string get_HttpMethod();
    [CompilerGeneratedAttribute]
public void set_HttpMethod(string value);
    [CompilerGeneratedAttribute]
public string get_IPAddress();
    [CompilerGeneratedAttribute]
public void set_IPAddress(string value);
    [CompilerGeneratedAttribute]
public IDictionary get_QueryString();
    [CompilerGeneratedAttribute]
public void set_QueryString(IDictionary value);
    [CompilerGeneratedAttribute]
public IList get_Cookies();
    [CompilerGeneratedAttribute]
public void set_Cookies(IList value);
    [CompilerGeneratedAttribute]
public IDictionary get_Data();
    [CompilerGeneratedAttribute]
public void set_Data(IDictionary value);
    [CompilerGeneratedAttribute]
public IDictionary get_Form();
    [CompilerGeneratedAttribute]
public void set_Form(IDictionary value);
    [CompilerGeneratedAttribute]
public string get_RawData();
    [CompilerGeneratedAttribute]
public void set_RawData(string value);
    [CompilerGeneratedAttribute]
public IDictionary get_Headers();
    [CompilerGeneratedAttribute]
public void set_Headers(IDictionary value);
}
public class Mindscape.Raygun4Net.RaygunResponseMessage : object {
    [CompilerGeneratedAttribute]
private int <StatusCode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StatusDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Content>k__BackingField;
    public int StatusCode { get; public set; }
    public string StatusDescription { get; public set; }
    public string Content { get; public set; }
    [CompilerGeneratedAttribute]
public int get_StatusCode();
    [CompilerGeneratedAttribute]
public void set_StatusCode(int value);
    [CompilerGeneratedAttribute]
public string get_StatusDescription();
    [CompilerGeneratedAttribute]
public void set_StatusDescription(string value);
    [CompilerGeneratedAttribute]
public string get_Content();
    [CompilerGeneratedAttribute]
public void set_Content(string value);
}
public class Mindscape.Raygun4Net.RaygunSendingMessageEventArgs : CancelEventArgs {
    [CompilerGeneratedAttribute]
private RaygunMessage <Message>k__BackingField;
    public RaygunMessage Message { get; private set; }
    public RaygunSendingMessageEventArgs(RaygunMessage message);
    [CompilerGeneratedAttribute]
public RaygunMessage get_Message();
    [CompilerGeneratedAttribute]
private void set_Message(RaygunMessage value);
}
public abstract class Mindscape.Raygun4Net.RaygunSettingsBase : object {
    private static string DefaultApiEndPoint;
    private static string RaygunMessageQueueMaxVariable;
    [CompilerGeneratedAttribute]
private string <ApiKey>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <ApiEndpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ThrowOnError>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ApplicationVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CatchUnhandledExceptions>k__BackingField;
    [CompilerGeneratedAttribute]
private int <BackgroundMessageQueueMax>k__BackingField;
    [CompilerGeneratedAttribute]
private int <BackgroundMessageWorkerCount>k__BackingField;
    [CompilerGeneratedAttribute]
private int <BackgroundMessageWorkerBreakpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <EnvironmentVariables>k__BackingField;
    [CompilerGeneratedAttribute]
private OfflineStoreBase <OfflineStore>k__BackingField;
    public string ApiKey { get; public set; }
    public Uri ApiEndpoint { get; public set; }
    public bool ThrowOnError { get; public set; }
    public string ApplicationVersion { get; public set; }
    public bool CatchUnhandledExceptions { get; public set; }
    public int BackgroundMessageQueueMax { get; }
    public int BackgroundMessageWorkerCount { get; public set; }
    public int BackgroundMessageWorkerBreakpoint { get; public set; }
    public IList`1<string> EnvironmentVariables { get; public set; }
    public OfflineStoreBase OfflineStore { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ApiKey();
    [CompilerGeneratedAttribute]
public void set_ApiKey(string value);
    [CompilerGeneratedAttribute]
public Uri get_ApiEndpoint();
    [CompilerGeneratedAttribute]
public void set_ApiEndpoint(Uri value);
    [CompilerGeneratedAttribute]
public bool get_ThrowOnError();
    [CompilerGeneratedAttribute]
public void set_ThrowOnError(bool value);
    [CompilerGeneratedAttribute]
public string get_ApplicationVersion();
    [CompilerGeneratedAttribute]
public void set_ApplicationVersion(string value);
    [CompilerGeneratedAttribute]
public bool get_CatchUnhandledExceptions();
    [CompilerGeneratedAttribute]
public void set_CatchUnhandledExceptions(bool value);
    [CompilerGeneratedAttribute]
public int get_BackgroundMessageQueueMax();
    [CompilerGeneratedAttribute]
public int get_BackgroundMessageWorkerCount();
    [CompilerGeneratedAttribute]
public void set_BackgroundMessageWorkerCount(int value);
    [CompilerGeneratedAttribute]
public int get_BackgroundMessageWorkerBreakpoint();
    [CompilerGeneratedAttribute]
public void set_BackgroundMessageWorkerBreakpoint(int value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_EnvironmentVariables();
    [CompilerGeneratedAttribute]
public void set_EnvironmentVariables(IList`1<string> value);
    [CompilerGeneratedAttribute]
public OfflineStoreBase get_OfflineStore();
    [CompilerGeneratedAttribute]
public void set_OfflineStore(OfflineStoreBase value);
}
[GeneratedCodeAttribute("reflection-utils", "1.0.0")]
internal class Mindscape.Raygun4Net.Reflection.ReflectionUtils : object {
    private static Object[] EmptyObjects;
    private static ReflectionUtils();
    public static Type GetTypeInfo(Type type);
    public static Attribute GetAttribute(MemberInfo info, Type type);
    public static Type GetGenericListElementType(Type type);
    public static Attribute GetAttribute(Type objectType, Type attributeType);
    public static Type[] GetGenericTypeArguments(Type type);
    public static bool IsTypeGeneric(Type type);
    public static bool IsTypeGenericeCollectionInterface(Type type);
    public static bool IsAssignableFrom(Type type1, Type type2);
    public static bool IsTypeDictionary(Type type);
    public static bool IsNullableType(Type type);
    public static object ToNullableType(object obj, Type nullableType);
    public static bool IsValueType(Type type);
    public static IEnumerable`1<ConstructorInfo> GetConstructors(Type type);
    public static ConstructorInfo GetConstructorInfo(Type type, Type[] argsType);
    public static IEnumerable`1<PropertyInfo> GetProperties(Type type);
    public static IEnumerable`1<FieldInfo> GetFields(Type type);
    public static MethodInfo GetGetterMethodInfo(PropertyInfo propertyInfo);
    public static MethodInfo GetSetterMethodInfo(PropertyInfo propertyInfo);
    public static ConstructorDelegate GetContructor(ConstructorInfo constructorInfo);
    public static ConstructorDelegate GetContructor(Type type, Type[] argsType);
    public static ConstructorDelegate GetConstructorByReflection(ConstructorInfo constructorInfo);
    public static ConstructorDelegate GetConstructorByReflection(Type type, Type[] argsType);
    public static ConstructorDelegate GetConstructorByExpression(ConstructorInfo constructorInfo);
    public static ConstructorDelegate GetConstructorByExpression(Type type, Type[] argsType);
    public static GetDelegate GetGetMethod(PropertyInfo propertyInfo);
    public static GetDelegate GetGetMethod(FieldInfo fieldInfo);
    public static GetDelegate GetGetMethodByReflection(PropertyInfo propertyInfo);
    public static GetDelegate GetGetMethodByReflection(FieldInfo fieldInfo);
    public static GetDelegate GetGetMethodByExpression(PropertyInfo propertyInfo);
    public static GetDelegate GetGetMethodByExpression(FieldInfo fieldInfo);
    public static SetDelegate GetSetMethod(PropertyInfo propertyInfo);
    public static SetDelegate GetSetMethod(FieldInfo fieldInfo);
    public static SetDelegate GetSetMethodByReflection(PropertyInfo propertyInfo);
    public static SetDelegate GetSetMethodByReflection(FieldInfo fieldInfo);
    public static SetDelegate GetSetMethodByExpression(PropertyInfo propertyInfo);
    public static SetDelegate GetSetMethodByExpression(FieldInfo fieldInfo);
    public static BinaryExpression Assign(Expression left, Expression right);
}
[GeneratedCodeAttribute("simple-json", "1.0.0")]
public static class Mindscape.Raygun4Net.SimpleJson : object {
    private static int TOKEN_NONE;
    private static int TOKEN_CURLY_OPEN;
    private static int TOKEN_CURLY_CLOSE;
    private static int TOKEN_SQUARED_OPEN;
    private static int TOKEN_SQUARED_CLOSE;
    private static int TOKEN_COLON;
    private static int TOKEN_COMMA;
    private static int TOKEN_STRING;
    private static int TOKEN_NUMBER;
    private static int TOKEN_TRUE;
    private static int TOKEN_FALSE;
    private static int TOKEN_NULL;
    private static int BUILDER_CAPACITY;
    private static Char[] EscapeTable;
    private static Char[] EscapeCharacters;
    private static string EscapeCharactersString;
    public static string CYCLIC_MESSAGE;
    private static IJsonSerializerStrategy _currentJsonSerializerStrategy;
    private static PocoJsonSerializerStrategy _pocoJsonSerializerStrategy;
    public static IJsonSerializerStrategy CurrentJsonSerializerStrategy { get; public set; }
    [EditorBrowsableAttribute("2")]
public static PocoJsonSerializerStrategy PocoJsonSerializerStrategy { get; }
    private static SimpleJson();
    public static object DeserializeObject(string json);
    public static bool TryDeserializeObject(string json, Object& obj);
    public static object DeserializeObject(string json, Type type, IJsonSerializerStrategy jsonSerializerStrategy);
    public static object DeserializeObject(string json, Type type);
    public static T DeserializeObject(string json, IJsonSerializerStrategy jsonSerializerStrategy);
    public static T DeserializeObject(string json);
    public static string SerializeObject(object json, IJsonSerializerStrategy jsonSerializerStrategy);
    public static string SerializeObject(object json);
    public static string EscapeToJavascriptString(string jsonString);
    private static IDictionary`2<string, object> ParseObject(Char[] json, Int32& index, Boolean& success);
    private static JsonArray ParseArray(Char[] json, Int32& index, Boolean& success);
    private static object ParseValue(Char[] json, Int32& index, Boolean& success);
    private static string ParseString(Char[] json, Int32& index, Boolean& success);
    private static string ConvertFromUtf32(int utf32);
    private static object ParseNumber(Char[] json, Int32& index, Boolean& success);
    private static int GetLastIndexOfNumber(Char[] json, int index);
    private static void EatWhitespace(Char[] json, Int32& index);
    private static int LookAhead(Char[] json, int index);
    private static int NextToken(Char[] json, Int32& index);
    private static bool SerializeValue(IJsonSerializerStrategy jsonSerializerStrategy, object value, StringBuilder builder);
    private static bool SerializeValue(IJsonSerializerStrategy jsonSerializerStrategy, object value, StringBuilder builder, Stack`1<object> visited);
    private static bool SerializeObject(IJsonSerializerStrategy jsonSerializerStrategy, IEnumerable keys, IEnumerable values, StringBuilder builder, Stack`1<object> visited);
    private static bool SerializeArray(IJsonSerializerStrategy jsonSerializerStrategy, IEnumerable anArray, StringBuilder builder, Stack`1<object> visited);
    private static bool SerializeString(string aString, StringBuilder builder);
    private static void IntToHex(int intValue, Char[] hex);
    private static bool SerializeNumber(object number, StringBuilder builder);
    private static bool IsNumeric(object value);
    public static IJsonSerializerStrategy get_CurrentJsonSerializerStrategy();
    public static void set_CurrentJsonSerializerStrategy(IJsonSerializerStrategy value);
    public static PocoJsonSerializerStrategy get_PocoJsonSerializerStrategy();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Mindscape.Raygun4Net.ThrottledBackgroundMessageProcessor : object {
    internal ConcurrentQueue`1<RaygunMessage> _messageQueue;
    internal ConcurrentDictionary`2<Task, CancellationTokenSource> _workerTasks;
    private CancellationTokenSource _globalCancellationSource;
    private int _maxQueueSize;
    private Func`3<RaygunMessage, CancellationToken, Task> _processCallback;
    private int _maxWorkerTasks;
    private int _workerQueueBreakpoint;
    private object _workerTaskMutex;
    private bool _drainingQueue;
    private bool _isDisposing;
    private int _drainSize;
    public ThrottledBackgroundMessageProcessor(int maxQueueSize, int maxWorkerTasks, int workerQueueBreakpoint, Func`3<RaygunMessage, CancellationToken, Task> onProcessMessageFunc);
    public bool Enqueue(RaygunMessage message);
    private void AdjustWorkers(bool breakAfterRun);
    private void RemoveCompletedTasks();
    private void RemoveExcessWorkers(int count);
    private void CreateWorkerTask();
    private int CalculateDesiredWorkers(int queueSize);
    [AsyncStateMachineAttribute("Mindscape.Raygun4Net.ThrottledBackgroundMessageProcessor/<RaygunMessageWorker>d__18")]
private static Task RaygunMessageWorker(ConcurrentQueue`1<RaygunMessage> messageQueue, Func`3<RaygunMessage, CancellationToken, Task> callback, CancellationToken cancellationToken);
    public sealed virtual void Dispose();
}
public static class Mindscape.Raygun4Net.UnhandledExceptionBridge : object {
    private static List`1<WeakExceptionHandler> Handlers;
    private static ReaderWriterLockSlim HandlersLock;
    private static UnhandledExceptionBridge();
    public static void RaiseUnhandledException(Exception exception, bool isTerminating);
    internal static void OnUnhandledException(UnhandledExceptionHandler callback);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
