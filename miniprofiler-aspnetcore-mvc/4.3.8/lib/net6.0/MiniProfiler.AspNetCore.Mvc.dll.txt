[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Microsoft.Extensions.DependencyInjection.MiniProfilerOptionsDefaults : object {
    private IMemoryCache _cache;
    public MiniProfilerOptionsDefaults(IMemoryCache cache);
    public sealed virtual void Configure(MiniProfilerOptions options);
}
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.MvcExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static IMiniProfilerBuilder AddMiniProfiler(IServiceCollection services, Action`1<MiniProfilerOptions> configureOptions);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class StackExchange.Profiling.Data.MvcDiagnosticListener : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ConcurrentDictionary`2<ValueTuple`2<string, string>, string> _descriptorNameCache;
    private static string _labelSeparator;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private AsyncLocal`1<StackTiming> CurrentTiming;
    public string ListenerName { get; }
    public sealed virtual string get_ListenerName();
    public sealed virtual void OnCompleted();
    public sealed virtual void OnError(Exception error);
    private string GetName(string label, string name, Func`2<string, string> trim);
    private object StartAction(string label, T descriptor);
    private object StartActionResult(T result);
    private object StartFilter(string label, T filter);
    private object StartView(T state, string label, string viewName);
    private object StartHandler(T state, HandlerMethodDescriptor handler);
    private object Complete(T state);
    public sealed virtual void OnNext(KeyValuePair`2<string, object> kv);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("32767")]
public class StackExchange.Profiling.Internal.ProfilingActionFilter : ActionFilterAttribute {
    private static string StackKey;
    public virtual void OnActionExecuting(ActionExecutingContext context);
    public virtual void OnActionExecuted(ActionExecutedContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class StackExchange.Profiling.Internal.ProfilingViewComponentInvoker : object {
    private IViewComponentInvoker _defaultViewComponentInvoker;
    public ProfilingViewComponentInvoker(IViewComponentInvoker defaultViewComponentInvoker);
    [AsyncStateMachineAttribute("StackExchange.Profiling.Internal.ProfilingViewComponentInvoker/<InvokeAsync>d__2")]
public sealed virtual Task InvokeAsync(ViewComponentContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class StackExchange.Profiling.Internal.ProfilingViewEngine : object {
    private IViewEngine _wrapped;
    public ProfilingViewEngine(IViewEngine wrapped);
    public sealed virtual ViewEngineResult FindView(ActionContext context, string viewName, bool isMainPage);
    public sealed virtual ViewEngineResult GetView(string executingFilePath, string viewPath, bool isMainPage);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class StackExchange.Profiling.Internal.WrappedView : object {
    private IView _wrapped;
    public string Path { get; }
    public WrappedView(IView wrapped);
    public sealed virtual string get_Path();
    [AsyncStateMachineAttribute("StackExchange.Profiling.Internal.WrappedView/<RenderAsync>d__4")]
public sealed virtual Task RenderAsync(ViewContext context);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[HtmlTargetElementAttribute]
public class StackExchange.Profiling.MiniProfilerScriptTagHelper : TagHelper {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private ViewContext <ViewContext>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<RenderPosition> <Position>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ShowTrivial>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ShowTimeWithChildren>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxTraces>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ShowControls>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <StartHidden>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ColorScheme> <ColorScheme>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <DecimalPlaces>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Nonce>k__BackingField;
    [CompilerGeneratedAttribute]
private RenderOptions <RenderOptions>k__BackingField;
    [NullableAttribute("1")]
[ViewContextAttribute]
public ViewContext ViewContext { get; public set; }
    [HtmlAttributeNameAttribute("position")]
public Nullable`1<RenderPosition> Position { get; public set; }
    [HtmlAttributeNameAttribute("show-trivial")]
public Nullable`1<bool> ShowTrivial { get; public set; }
    [HtmlAttributeNameAttribute("show-time-with-children")]
public Nullable`1<bool> ShowTimeWithChildren { get; public set; }
    [HtmlAttributeNameAttribute("max-traces")]
public Nullable`1<int> MaxTraces { get; public set; }
    [HtmlAttributeNameAttribute("show-controls")]
public Nullable`1<bool> ShowControls { get; public set; }
    [HtmlAttributeNameAttribute("start-hidden")]
public Nullable`1<bool> StartHidden { get; public set; }
    [HtmlAttributeNameAttribute("color-scheme")]
public Nullable`1<ColorScheme> ColorScheme { get; public set; }
    public Nullable`1<int> DecimalPlaces { get; public set; }
    [HtmlAttributeNameAttribute("nonce")]
public string Nonce { get; public set; }
    [HtmlAttributeNameAttribute("options")]
public RenderOptions RenderOptions { get; public set; }
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public ViewContext get_ViewContext();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_ViewContext(ViewContext value);
    [CompilerGeneratedAttribute]
public Nullable`1<RenderPosition> get_Position();
    [CompilerGeneratedAttribute]
public void set_Position(Nullable`1<RenderPosition> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ShowTrivial();
    [CompilerGeneratedAttribute]
public void set_ShowTrivial(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ShowTimeWithChildren();
    [CompilerGeneratedAttribute]
public void set_ShowTimeWithChildren(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaxTraces();
    [CompilerGeneratedAttribute]
public void set_MaxTraces(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ShowControls();
    [CompilerGeneratedAttribute]
public void set_ShowControls(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_StartHidden();
    [CompilerGeneratedAttribute]
public void set_StartHidden(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<ColorScheme> get_ColorScheme();
    [CompilerGeneratedAttribute]
public void set_ColorScheme(Nullable`1<ColorScheme> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_DecimalPlaces();
    [CompilerGeneratedAttribute]
public void set_DecimalPlaces(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_Nonce();
    [CompilerGeneratedAttribute]
public void set_Nonce(string value);
    [CompilerGeneratedAttribute]
public RenderOptions get_RenderOptions();
    [CompilerGeneratedAttribute]
public void set_RenderOptions(RenderOptions value);
    [NullableContextAttribute("1")]
private RenderOptions GetOptions();
    [NullableContextAttribute("1")]
public virtual void Process(TagHelperContext context, TagHelperOutput output);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[HtmlTargetElementAttribute]
public class StackExchange.Profiling.ProfileScriptTagHelper : TagHelper {
    private static string ClientTimingKey;
    [CompilerGeneratedAttribute]
private ViewContext <ViewContext>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [ViewContextAttribute]
[HtmlAttributeNotBoundAttribute]
public ViewContext ViewContext { get; public set; }
    [HtmlAttributeNameAttribute("name")]
public string Name { get; public set; }
    [CompilerGeneratedAttribute]
public ViewContext get_ViewContext();
    [CompilerGeneratedAttribute]
public void set_ViewContext(ViewContext value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [AsyncStateMachineAttribute("StackExchange.Profiling.ProfileScriptTagHelper/<ProcessAsync>d__9")]
public virtual Task ProcessAsync(TagHelperContext context, TagHelperOutput output);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[HtmlTargetElementAttribute]
public class StackExchange.Profiling.ProfileTagHelper : TagHelper {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [HtmlAttributeNameAttribute("name")]
public string Name { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [AsyncStateMachineAttribute("StackExchange.Profiling.ProfileTagHelper/<ProcessAsync>d__4")]
public virtual Task ProcessAsync(TagHelperContext context, TagHelperOutput output);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
[GeneratedCodeAttribute("Nerdbank.GitVersioning.Tasks", "3.3.37.35081")]
[ExcludeFromCodeCoverageAttribute]
internal static class ThisAssembly : object {
    internal static string AssemblyVersion;
    internal static string AssemblyFileVersion;
    internal static string AssemblyInformationalVersion;
    internal static string AssemblyName;
    internal static string AssemblyTitle;
    internal static string AssemblyConfiguration;
    internal static string GitCommitId;
    internal static string PublicKey;
    internal static string PublicKeyToken;
    internal static bool IsPublicRelease;
    internal static bool IsPrerelease;
    internal static DateTime GitCommitDate;
    internal static string RootNamespace;
    private static ThisAssembly();
}
