[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class MinVer.Logger : object {
    [CompilerGeneratedAttribute]
private Verbosity <verbosity>P;
    public bool IsTraceEnabled { get; }
    public bool IsDebugEnabled { get; }
    public bool IsInfoEnabled { get; }
    public bool IsWarnEnabled { get; }
    public Logger(Verbosity verbosity);
    public sealed virtual bool get_IsTraceEnabled();
    public sealed virtual bool get_IsDebugEnabled();
    public sealed virtual bool get_IsInfoEnabled();
    public sealed virtual bool get_IsWarnEnabled();
    public sealed virtual bool Trace(string message);
    public sealed virtual bool Debug(string message);
    public sealed virtual bool Info(string message);
    public sealed virtual bool Warn(int code, string message);
    public static void ErrorWorkDirDoesNotExist(string workDir);
    public static void ErrorInvalidAutoIncrement(string autoIncrement);
    public static void ErrorInvalidMinMajorMinor(string minMajorMinor);
    public static void ErrorInvalidVerbosity(string verbosity);
    public static void ErrorInvalidVersionOverride(string versionOverride);
    public static void ErrorNoGit(string message);
    private static void Error(int code, string message);
    private static bool Message(string message);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class MinVer.Options : object {
    [CompilerGeneratedAttribute]
private Nullable`1<VersionPart> <AutoIncrement>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BuildMeta>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IEnumerable`1<string> <DefaultPreReleaseIdentifiers>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DefaultPreReleasePhase>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IgnoreHeight>k__BackingField;
    [CompilerGeneratedAttribute]
private MajorMinor <MinMajorMinor>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TagPrefix>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Verbosity> <Verbosity>k__BackingField;
    [CompilerGeneratedAttribute]
private Version <VersionOverride>k__BackingField;
    public Nullable`1<VersionPart> AutoIncrement { get; }
    public string BuildMeta { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IEnumerable`1<string> DefaultPreReleaseIdentifiers { get; }
    public string DefaultPreReleasePhase { get; }
    public Nullable`1<bool> IgnoreHeight { get; }
    public MajorMinor MinMajorMinor { get; }
    public string TagPrefix { get; }
    public Nullable`1<Verbosity> Verbosity { get; }
    public Version VersionOverride { get; }
    private Options(Nullable`1<VersionPart> autoIncrement, string buildMeta, IEnumerable`1<string> defaultPreReleaseIdentifiers, string defaultPreReleasePhase, Nullable`1<bool> ignoreHeight, MajorMinor minMajorMinor, string tagPrefix, Nullable`1<Verbosity> verbosity, Version versionOverride);
    public static bool TryParse(string autoIncrementOption, string buildMetaOption, string defaultPreReleaseIdentifiersOption, string defaultPreReleasePhaseOption, Nullable`1<bool> ignoreHeight, string minMajorMinorOption, string tagPrefixOption, string verbosityOption, string versionOverrideOption, Options& options);
    [CompilerGeneratedAttribute]
public Nullable`1<VersionPart> get_AutoIncrement();
    [CompilerGeneratedAttribute]
public string get_BuildMeta();
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_DefaultPreReleaseIdentifiers();
    [CompilerGeneratedAttribute]
public string get_DefaultPreReleasePhase();
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IgnoreHeight();
    [CompilerGeneratedAttribute]
public MajorMinor get_MinMajorMinor();
    [CompilerGeneratedAttribute]
public string get_TagPrefix();
    [CompilerGeneratedAttribute]
public Nullable`1<Verbosity> get_Verbosity();
    [CompilerGeneratedAttribute]
public Version get_VersionOverride();
}
internal enum MinVer.Verbosity : Enum {
    public int value__;
    public static Verbosity Quiet;
    public static Verbosity Minimal;
    public static Verbosity Normal;
    public static Verbosity Detailed;
    public static Verbosity Diagnostic;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class MinVer.VerbosityMap : object {
    private static Dictionary`2<string, Nullable`1<Verbosity>> map;
    public static string ValidValues { get; }
    private static VerbosityMap();
    public static string get_ValidValues();
    public static bool TryMap(string value, Nullable`1& verbosity);
    [CompilerGeneratedAttribute]
internal static void <.cctor>g__Add|1_0(Verbosity verbosity, int shortLength);
}
[CompilerGeneratedAttribute]
internal class Program : object {
    private static int <Main>$(String[] args);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
