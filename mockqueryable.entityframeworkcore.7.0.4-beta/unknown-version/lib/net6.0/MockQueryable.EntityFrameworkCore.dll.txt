public class MockQueryable.EntityFrameworkCore.TestAsyncEnumerableEfCore`1 : TestQueryProvider`1<T> {
    public TestAsyncEnumerableEfCore`1(Expression expression);
    public TestAsyncEnumerableEfCore`1(IEnumerable`1<T> enumerable);
    public sealed virtual TResult ExecuteAsync(Expression expression, CancellationToken cancellationToken);
    public virtual TResult Execute(Expression expression);
    public sealed virtual IAsyncEnumerator`1<T> GetAsyncEnumerator(CancellationToken cancellationToken);
}
public class MockQueryable.EntityFrameworkCore.TestAsyncEnumerator`1 : object {
    private IEnumerator`1<T> _enumerator;
    public T Current { get; }
    public TestAsyncEnumerator`1(IEnumerator`1<T> enumerator);
    public sealed virtual T get_Current();
    public sealed virtual ValueTask DisposeAsync();
    public sealed virtual ValueTask`1<bool> MoveNextAsync();
}
[ExtensionAttribute]
public static class MockQueryable.MockQueryableExtensions : object {
    [ExtensionAttribute]
public static IQueryable`1<TEntity> BuildMock(IEnumerable`1<TEntity> data);
}
