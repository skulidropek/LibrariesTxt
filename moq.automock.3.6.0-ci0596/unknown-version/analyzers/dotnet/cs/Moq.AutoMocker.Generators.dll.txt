[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Moq.AutoMocker.Generators.AutoMock : object {
    public static string ConstructorTestsAttribute;
    public static string TargetTypePropertyName;
    public static string AssemblyName;
    public static string NuGetPackageName;
    public static string IgnoreNullableParametersEnumValue;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Moq.AutoMocker.Generators.Diagnostics : object {
    private static string Category;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Moq.AutoMocker.Generators.GeneratorTargetClass : object {
    [CompilerGeneratedAttribute]
private string <Namespace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TestClassName>k__BackingField;
    [CompilerGeneratedAttribute]
private SutClass <Sut>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SkipNullableParameters>k__BackingField;
    public string Namespace { get; public set; }
    public string TestClassName { get; public set; }
    public SutClass Sut { get; public set; }
    public bool SkipNullableParameters { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Namespace();
    [CompilerGeneratedAttribute]
public void set_Namespace(string value);
    [CompilerGeneratedAttribute]
public string get_TestClassName();
    [CompilerGeneratedAttribute]
public void set_TestClassName(string value);
    [CompilerGeneratedAttribute]
public SutClass get_Sut();
    [CompilerGeneratedAttribute]
public void set_Sut(SutClass value);
    [CompilerGeneratedAttribute]
public bool get_SkipNullableParameters();
    [CompilerGeneratedAttribute]
public void set_SkipNullableParameters(bool value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Moq.AutoMocker.Generators.NullConstructorParameterTest : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private List`1<Parameter> <Parameters>k__BackingField;
    [CompilerGeneratedAttribute]
private int <NullParameterIndex>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NullTypeName>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public List`1<Parameter> Parameters { get; public set; }
    public int NullParameterIndex { get; public set; }
    public string NullTypeName { get; public set; }
    public string NullParameterName { get; }
    [CompilerGeneratedAttribute]
public List`1<Parameter> get_Parameters();
    [CompilerGeneratedAttribute]
public void set_Parameters(List`1<Parameter> value);
    [CompilerGeneratedAttribute]
public int get_NullParameterIndex();
    [CompilerGeneratedAttribute]
public void set_NullParameterIndex(int value);
    [CompilerGeneratedAttribute]
public string get_NullTypeName();
    [CompilerGeneratedAttribute]
public void set_NullTypeName(string value);
    public string get_NullParameterName();
}
[GeneratorAttribute]
public class Moq.AutoMocker.Generators.OptionsExtensionSourceGenerator : object {
    [NullableAttribute("1")]
private static string OptionsExtensionContent;
    public sealed virtual void Execute(GeneratorExecutionContext context);
    public sealed virtual void Initialize(GeneratorInitializationContext context);
    [NullableContextAttribute("1")]
private static bool ReferencesOptions(IEnumerable`1<AssemblyIdentity> assemblies);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Moq.AutoMocker.Generators.Parameter : object {
    [CompilerGeneratedAttribute]
private bool <IsValueType>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsNullable>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ParameterType>k__BackingField;
    public bool IsValueType { get; }
    public bool IsNullable { get; }
    public string Name { get; }
    public string ParameterType { get; }
    public Parameter(IParameterSymbol symbol);
    [CompilerGeneratedAttribute]
public bool get_IsValueType();
    [CompilerGeneratedAttribute]
public bool get_IsNullable();
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public string get_ParameterType();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Moq.AutoMocker.Generators.SutClass : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FullName>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private List`1<NullConstructorParameterTest> <NullConstructorParameterTests>k__BackingField;
    public string Name { get; public set; }
    public string FullName { get; public set; }
    [NullableAttribute("1")]
public List`1<NullConstructorParameterTest> NullConstructorParameterTests { get; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_FullName();
    [CompilerGeneratedAttribute]
public void set_FullName(string value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public List`1<NullConstructorParameterTest> get_NullConstructorParameterTests();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Moq.AutoMocker.Generators.SyntaxReceiver : object {
    [CompilerGeneratedAttribute]
private List`1<GeneratorTargetClass> <TestClasses>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Diagnostic> <DiagnosticMessages>k__BackingField;
    public List`1<GeneratorTargetClass> TestClasses { get; }
    public List`1<Diagnostic> DiagnosticMessages { get; }
    [CompilerGeneratedAttribute]
public List`1<GeneratorTargetClass> get_TestClasses();
    [CompilerGeneratedAttribute]
public List`1<Diagnostic> get_DiagnosticMessages();
    private TypeSyntax GetTargetType(AttributeSyntax attributeSyntax);
    private bool GetSkipNullableParameters(AttributeSyntax attributeSyntax);
    public sealed virtual void OnVisitSyntaxNode(GeneratorSyntaxContext context);
}
public enum Moq.AutoMocker.Generators.TargetTestingFramework : Enum {
    public int value__;
    public static TargetTestingFramework Unknown;
    public static TargetTestingFramework MSTest;
    public static TargetTestingFramework XUnit;
    public static TargetTestingFramework NUnit;
}
internal static class Moq.AutoMocker.Generators.TestNameBuilder : object {
    [NullableContextAttribute("1")]
[IteratorStateMachineAttribute("Moq.AutoMocker.Generators.TestNameBuilder/<CreateTestName>d__0")]
public static IEnumerable`1<string> CreateTestName(GeneratorTargetClass testClass, NullConstructorParameterTest test);
}
[GeneratorAttribute]
public class Moq.AutoMocker.Generators.UnitTestSourceGenerator : object {
    public sealed virtual void Execute(GeneratorExecutionContext context);
    public sealed virtual void Initialize(GeneratorInitializationContext context);
    [NullableContextAttribute("1")]
private static TargetTestingFramework GetTestingFramework(IEnumerable`1<AssemblyIdentity> assemblies);
    [NullableContextAttribute("1")]
[IteratorStateMachineAttribute("Moq.AutoMocker.Generators.UnitTestSourceGenerator/<<Execute>g__GetParameterNames|0_1>d")]
[CompilerGeneratedAttribute]
internal static IEnumerable`1<string> <Execute>g__GetParameterNames|0_1(NullConstructorParameterTest test);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
