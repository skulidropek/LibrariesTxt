public static class GalaSoft.MvvmLight.Threading.DispatcherHelper : object {
    [CompilerGeneratedAttribute]
private static CoreDispatcher <UIDispatcher>k__BackingField;
    public static CoreDispatcher UIDispatcher { get; private set; }
    [CompilerGeneratedAttribute]
public static CoreDispatcher get_UIDispatcher();
    [CompilerGeneratedAttribute]
private static void set_UIDispatcher(CoreDispatcher value);
    public static void CheckBeginInvokeOnUI(Action action);
    private static void CheckDispatcher();
    public static IAsyncAction RunAsync(Action action);
    public static void Initialize();
    public static void Reset();
}
public class GalaSoft.MvvmLight.Views.DialogService : object {
    [AsyncStateMachineAttribute("GalaSoft.MvvmLight.Views.DialogService/<ShowError>d__0")]
public sealed virtual Task ShowError(string message, string title, string buttonText, Action afterHideCallback);
    [AsyncStateMachineAttribute("GalaSoft.MvvmLight.Views.DialogService/<ShowError>d__1")]
public sealed virtual Task ShowError(Exception error, string title, string buttonText, Action afterHideCallback);
    [AsyncStateMachineAttribute("GalaSoft.MvvmLight.Views.DialogService/<ShowMessage>d__2")]
public sealed virtual Task ShowMessage(string message, string title);
    [AsyncStateMachineAttribute("GalaSoft.MvvmLight.Views.DialogService/<ShowMessage>d__3")]
public sealed virtual Task ShowMessage(string message, string title, string buttonText, Action afterHideCallback);
    [AsyncStateMachineAttribute("GalaSoft.MvvmLight.Views.DialogService/<ShowMessage>d__4")]
public sealed virtual Task`1<bool> ShowMessage(string message, string title, string buttonConfirmText, string buttonCancelText, Action`1<bool> afterHideCallback);
    [AsyncStateMachineAttribute("GalaSoft.MvvmLight.Views.DialogService/<ShowMessageBox>d__5")]
public sealed virtual Task ShowMessageBox(string message, string title);
    private MessageDialog CreateDialog(string message, string title, string buttonConfirmText, string buttonCancelText, Action afterHideCallback, Action`1<bool> afterHideCallbackWithResponse, Action`1<bool> afterHideInternal);
}
public class GalaSoft.MvvmLight.Views.NavigationService : object {
    public static string RootPageKey;
    public static string UnknownPageKey;
    private Dictionary`2<string, Type> _pagesByKey;
    private Frame _currentFrame;
    public Frame CurrentFrame { get; public set; }
    public bool CanGoBack { get; }
    public bool CanGoForward { get; }
    public string CurrentPageKey { get; }
    public Frame get_CurrentFrame();
    public void set_CurrentFrame(Frame value);
    public bool get_CanGoBack();
    public bool get_CanGoForward();
    public void GoForward();
    public sealed virtual string get_CurrentPageKey();
    public sealed virtual void GoBack();
    public sealed virtual void NavigateTo(string pageKey);
    public virtual void NavigateTo(string pageKey, object parameter);
    public void Configure(string key, Type pageType);
    public string GetKeyForPage(Type page);
}
