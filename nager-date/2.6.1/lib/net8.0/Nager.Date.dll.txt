public enum Nager.Date.CountryCode : Enum {
    public int value__;
    public static CountryCode AD;
    public static CountryCode AE;
    public static CountryCode AF;
    public static CountryCode AG;
    public static CountryCode AI;
    public static CountryCode AL;
    public static CountryCode AM;
    public static CountryCode AO;
    public static CountryCode AQ;
    public static CountryCode AR;
    public static CountryCode AS;
    public static CountryCode AT;
    public static CountryCode AU;
    public static CountryCode AW;
    public static CountryCode AX;
    public static CountryCode AZ;
    public static CountryCode BA;
    public static CountryCode BB;
    public static CountryCode BD;
    public static CountryCode BE;
    public static CountryCode BF;
    public static CountryCode BG;
    public static CountryCode BH;
    public static CountryCode BI;
    public static CountryCode BJ;
    public static CountryCode BL;
    public static CountryCode BM;
    public static CountryCode BN;
    public static CountryCode BO;
    public static CountryCode BQ;
    public static CountryCode BR;
    public static CountryCode BS;
    public static CountryCode BT;
    public static CountryCode BV;
    public static CountryCode BW;
    public static CountryCode BY;
    public static CountryCode BZ;
    public static CountryCode CA;
    public static CountryCode CC;
    public static CountryCode CD;
    public static CountryCode CF;
    public static CountryCode CG;
    public static CountryCode CH;
    public static CountryCode CI;
    public static CountryCode CK;
    public static CountryCode CL;
    public static CountryCode CM;
    public static CountryCode CN;
    public static CountryCode CO;
    public static CountryCode CR;
    public static CountryCode CU;
    public static CountryCode CV;
    public static CountryCode CW;
    public static CountryCode CX;
    public static CountryCode CY;
    public static CountryCode CZ;
    public static CountryCode DE;
    public static CountryCode DJ;
    public static CountryCode DK;
    public static CountryCode DM;
    public static CountryCode DO;
    public static CountryCode DZ;
    public static CountryCode EC;
    public static CountryCode EE;
    public static CountryCode EG;
    public static CountryCode EH;
    public static CountryCode ER;
    public static CountryCode ES;
    public static CountryCode ET;
    public static CountryCode FI;
    public static CountryCode FJ;
    public static CountryCode FK;
    public static CountryCode FM;
    public static CountryCode FO;
    public static CountryCode FR;
    public static CountryCode GA;
    public static CountryCode GB;
    public static CountryCode GD;
    public static CountryCode GE;
    public static CountryCode GF;
    public static CountryCode GG;
    public static CountryCode GH;
    public static CountryCode GI;
    public static CountryCode GL;
    public static CountryCode GM;
    public static CountryCode GN;
    public static CountryCode GP;
    public static CountryCode GQ;
    public static CountryCode GR;
    public static CountryCode GS;
    public static CountryCode GT;
    public static CountryCode GU;
    public static CountryCode GW;
    public static CountryCode GY;
    public static CountryCode HK;
    public static CountryCode HM;
    public static CountryCode HN;
    public static CountryCode HR;
    public static CountryCode HT;
    public static CountryCode HU;
    public static CountryCode ID;
    public static CountryCode IE;
    public static CountryCode IL;
    public static CountryCode IM;
    public static CountryCode IN;
    public static CountryCode IO;
    public static CountryCode IQ;
    public static CountryCode IR;
    public static CountryCode IS;
    public static CountryCode IT;
    public static CountryCode JE;
    public static CountryCode JM;
    public static CountryCode JO;
    public static CountryCode JP;
    public static CountryCode KE;
    public static CountryCode KG;
    public static CountryCode KH;
    public static CountryCode KI;
    public static CountryCode KM;
    public static CountryCode KN;
    public static CountryCode KP;
    public static CountryCode KR;
    public static CountryCode KW;
    public static CountryCode KY;
    public static CountryCode KZ;
    public static CountryCode LA;
    public static CountryCode LB;
    public static CountryCode LC;
    public static CountryCode LI;
    public static CountryCode LK;
    public static CountryCode LR;
    public static CountryCode LS;
    public static CountryCode LT;
    public static CountryCode LU;
    public static CountryCode LV;
    public static CountryCode LY;
    public static CountryCode MA;
    public static CountryCode MC;
    public static CountryCode MD;
    public static CountryCode ME;
    public static CountryCode MF;
    public static CountryCode MG;
    public static CountryCode MH;
    public static CountryCode MK;
    public static CountryCode ML;
    public static CountryCode MM;
    public static CountryCode MN;
    public static CountryCode MO;
    public static CountryCode MP;
    public static CountryCode MQ;
    public static CountryCode MR;
    public static CountryCode MS;
    public static CountryCode MT;
    public static CountryCode MU;
    public static CountryCode MV;
    public static CountryCode MW;
    public static CountryCode MX;
    public static CountryCode MY;
    public static CountryCode MZ;
    public static CountryCode NA;
    public static CountryCode NC;
    public static CountryCode NE;
    public static CountryCode NF;
    public static CountryCode NG;
    public static CountryCode NI;
    public static CountryCode NL;
    public static CountryCode NO;
    public static CountryCode NP;
    public static CountryCode NR;
    public static CountryCode NU;
    public static CountryCode NZ;
    public static CountryCode OM;
    public static CountryCode PA;
    public static CountryCode PE;
    public static CountryCode PF;
    public static CountryCode PG;
    public static CountryCode PH;
    public static CountryCode PK;
    public static CountryCode PL;
    public static CountryCode PM;
    public static CountryCode PN;
    public static CountryCode PR;
    public static CountryCode PS;
    public static CountryCode PT;
    public static CountryCode PW;
    public static CountryCode PY;
    public static CountryCode QA;
    public static CountryCode RE;
    public static CountryCode RO;
    public static CountryCode RS;
    public static CountryCode RU;
    public static CountryCode RW;
    public static CountryCode SA;
    public static CountryCode SB;
    public static CountryCode SC;
    public static CountryCode SD;
    public static CountryCode SE;
    public static CountryCode SG;
    public static CountryCode SH;
    public static CountryCode SI;
    public static CountryCode SJ;
    public static CountryCode SK;
    public static CountryCode SL;
    public static CountryCode SM;
    public static CountryCode SN;
    public static CountryCode SO;
    public static CountryCode SR;
    public static CountryCode SS;
    public static CountryCode ST;
    public static CountryCode SV;
    public static CountryCode SX;
    public static CountryCode SY;
    public static CountryCode SZ;
    public static CountryCode TC;
    public static CountryCode TD;
    public static CountryCode TF;
    public static CountryCode TG;
    public static CountryCode TH;
    public static CountryCode TJ;
    public static CountryCode TK;
    public static CountryCode TL;
    public static CountryCode TM;
    public static CountryCode TN;
    public static CountryCode TO;
    public static CountryCode TR;
    public static CountryCode TT;
    public static CountryCode TV;
    public static CountryCode TW;
    public static CountryCode TZ;
    public static CountryCode UA;
    public static CountryCode UG;
    public static CountryCode UM;
    public static CountryCode US;
    public static CountryCode UY;
    public static CountryCode UZ;
    public static CountryCode VA;
    public static CountryCode VC;
    public static CountryCode VE;
    public static CountryCode VG;
    public static CountryCode VI;
    public static CountryCode VN;
    public static CountryCode VU;
    public static CountryCode WF;
    public static CountryCode WS;
    public static CountryCode YE;
    public static CountryCode YT;
    public static CountryCode ZA;
    public static CountryCode ZM;
    public static CountryCode ZW;
}
[ExtensionAttribute]
public static class Nager.Date.Extensions.DateTimeExtension : object {
    [ExtensionAttribute]
public static bool IsWeekend(DateTime dateTime, CountryCode countryCode);
    [NullableContextAttribute("1")]
[ExtensionAttribute]
internal static DateTime Shift(DateTime value, Func`2<DateTime, DateTime> saturday, Func`2<DateTime, DateTime> sunday, Func`2<DateTime, DateTime> monday);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Nager.Date.Extensions.ListExtension : object {
    [ExtensionAttribute]
internal static void AddIfNotNull(List`1<HolidaySpecification> holidaySpecificationList, HolidaySpecification holidaySpecification);
    [ExtensionAttribute]
internal static void AddRangeIfNotNull(List`1<HolidaySpecification> holidaySpecificationList, HolidaySpecification[] holidaySpecifications);
}
public static class Nager.Date.Helpers.CountryCodeHelper : object {
    [NullableContextAttribute("1")]
public static bool TryParseCountryCode(string countryCode, CountryCode& parsedCountryCode);
}
public static class Nager.Date.Helpers.DateHelper : object {
    public static DateTime FindLastDay(int year, Month month, DayOfWeek day);
    public static DateTime FindLastDay(int year, int month, DayOfWeek day);
    public static DateTime FindDay(int year, Month month, int day, DayOfWeek dayOfWeek);
    public static DateTime FindDay(int year, int month, int day, DayOfWeek dayOfWeek);
    public static DateTime FindDay(DateTime date, DayOfWeek dayOfWeek);
    public static Nullable`1<DateTime> FindDayBetween(int yearStart, int monthStart, int dayStart, int yearEnd, int monthEnd, int dayEnd, DayOfWeek dayOfWeek);
    public static Nullable`1<DateTime> FindDayBetween(DateTime startDate, DateTime endDate, DayOfWeek dayOfWeek);
    public static DateTime FindDayBefore(int year, Month month, int day, DayOfWeek dayOfWeek);
    public static DateTime FindDayBefore(int year, int month, int day, DayOfWeek dayOfWeek);
    public static DateTime FindDayBefore(DateTime date, DayOfWeek dayOfWeek);
    public static DateTime FindDay(int year, int month, DayOfWeek day, int occurrence);
    public static DateTime FindDay(int year, Month month, DayOfWeek day, Occurrence occurrence);
}
public static class Nager.Date.Helpers.LicenseHelper : object {
    [NullableContextAttribute("2")]
public static LicenseInfo CheckLicenseKey(string licenseKey);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Nager.Date.HolidayProviders.AbstractHolidayProvider : object {
    private CountryCode _countryCode;
    protected AbstractHolidayProvider(CountryCode countryCode);
    public sealed virtual IEnumerable`1<Holiday> GetHolidays(int year);
    public abstract virtual IEnumerable`1<string> GetSources();
    protected abstract virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.AlandHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public AlandHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.AlbaniaHolidayProvider : AbstractHolidayProvider {
    private IOrthodoxProvider _orthodoxProvider;
    private ICatholicProvider _catholicProvider;
    public AlbaniaHolidayProvider(ICatholicProvider catholicProvider, IOrthodoxProvider orthodoxProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.AndorraHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public AndorraHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.ArgentinaHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public ArgentinaHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.ArmeniaHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public ArmeniaHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.AustraliaHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public AustraliaHolidayProvider(ICatholicProvider catholicProvider);
    public sealed virtual IDictionary`2<string, string> GetSubdivisionCodes();
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    private HolidaySpecification EasterSunday(int year);
    private HolidaySpecification[] LabourDay(int year);
    private HolidaySpecification[] MonarchBirthday(int year);
    [NullableContextAttribute("2")]
private HolidaySpecification MourningForQueenElizabeth(int year);
    [NullableContextAttribute("2")]
private HolidaySpecification FridayBeforeTheAflGrandFinal(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.AustriaHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public AustriaHolidayProvider(ICatholicProvider catholicProvider);
    public sealed virtual IDictionary`2<string, string> GetSubdivisionCodes();
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.BahamasHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public BahamasHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.BarbadosHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public BarbadosHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.BelarusHolidayProvider : AbstractHolidayProvider {
    private IOrthodoxProvider _orthodoxProvider;
    public BelarusHolidayProvider(IOrthodoxProvider orthodoxProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.BelgiumHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public BelgiumHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.BelizeHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public BelizeHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.BeninHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public BeninHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.BoliviaHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public BoliviaHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.BosniaAndHerzegovinaHolidayProvider : AbstractHolidayProvider {
    private IOrthodoxProvider _orthodoxProvider;
    public BosniaAndHerzegovinaHolidayProvider(IOrthodoxProvider orthodoxProvider);
    public sealed virtual IDictionary`2<string, string> GetSubdivisionCodes();
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.BotswanaHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public BotswanaHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.BrazilHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public BrazilHolidayProvider(ICatholicProvider catholicProvider);
    public sealed virtual IDictionary`2<string, string> GetSubdivisionCodes();
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    [NullableContextAttribute("2")]
private HolidaySpecification BlackAwarenessDay(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.BulgariaHolidayProvider : AbstractHolidayProvider {
    private IOrthodoxProvider _orthodoxProvider;
    public BulgariaHolidayProvider(IOrthodoxProvider orthodoxProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.CanadaHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public CanadaHolidayProvider(ICatholicProvider catholicProvider);
    public sealed virtual IDictionary`2<string, string> GetSubdivisionCodes();
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    [NullableContextAttribute("2")]
private HolidaySpecification FuneralForQueenElizabeth(int year);
    private HolidaySpecification[] FamilyDay(int year);
    private HolidaySpecification[] CanadaDay(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.ChileHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public ChileHolidayProvider(ICatholicProvider catholicProvider);
    public sealed virtual IDictionary`2<string, string> GetSubdivisionCodes();
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    private HolidaySpecification SaintPeterAndSaintPaul(int year);
    private HolidaySpecification ColumbusDay(int year);
    private HolidaySpecification ReformationDay(int year);
    [NullableContextAttribute("2")]
private HolidaySpecification NationalPlebiscite(int year);
    private Nullable`1<DateTime> GetWinterSolstice(int year);
    [NullableContextAttribute("2")]
private HolidaySpecification NationalDayOfIndigenousPeoples(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.ChinaHolidayProvider : AbstractHolidayProvider {
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    private int MoveMonth(int month, int leapMonth);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.ColombiaHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public ColombiaHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.CostaRicaHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public CostaRicaHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    private HolidaySpecification GetJuanSantamariaDay(int year);
    private HolidaySpecification GetLabourDay(int year);
    private HolidaySpecification GetAnnexationDay(int year);
    private HolidaySpecification GetMothersDay(int year);
    private HolidaySpecification GetIndenpendenceDay(int year);
    private HolidaySpecification GetArmyAbolitionDay(int year);
    private ObservedRuleSet Law9875RuleSet();
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.CroatiaHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public CroatiaHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    [NullableContextAttribute("2")]
private HolidaySpecification GetIndependenceDay(int year);
    [NullableContextAttribute("2")]
private HolidaySpecification GetRemembranceDay(int year);
    [NullableContextAttribute("2")]
private HolidaySpecification GetStatehoodDay(int year);
    [NullableContextAttribute("2")]
private HolidaySpecification GetNationalDay(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.CubaHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public CubaHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.CyprusHolidayProvider : AbstractHolidayProvider {
    private IOrthodoxProvider _orthodoxProvider;
    public CyprusHolidayProvider(IOrthodoxProvider orthodoxProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.CzechRepublicHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public CzechRepublicHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.DenmarkHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public DenmarkHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    [NullableContextAttribute("2")]
private HolidaySpecification GeneralPrayerDay(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.DominicanRepublicHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public DominicanRepublicHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.EcuadorHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public EcuadorHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.EgyptHolidayProvider : AbstractHolidayProvider {
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.ElSalvadorHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public ElSalvadorHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.EstoniaHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public EstoniaHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.FaroeIslandsHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public FaroeIslandsHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.FinlandHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public FinlandHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.FranceHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public FranceHolidayProvider(ICatholicProvider catholicProvider);
    public sealed virtual IDictionary`2<string, string> GetSubdivisionCodes();
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.GabonHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public GabonHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.GambiaHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public GambiaHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.GeorgiaHolidayProvider : AbstractHolidayProvider {
    private IOrthodoxProvider _orthodoxProvider;
    public GeorgiaHolidayProvider(IOrthodoxProvider orthodoxProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.GermanyHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public GermanyHolidayProvider(ICatholicProvider catholicProvider);
    public sealed virtual IDictionary`2<string, string> GetSubdivisionCodes();
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    [NullableContextAttribute("2")]
private HolidaySpecification WorldChildrensDay(int year);
    [NullableContextAttribute("2")]
private HolidaySpecification InternationalWomensDay(int year);
    private HolidaySpecification ReformationDay(int year);
    [NullableContextAttribute("2")]
private HolidaySpecification PrayerDay(int year);
    [NullableContextAttribute("2")]
private HolidaySpecification LiberationDay(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.GibraltarHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public GibraltarHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.GreeceHolidayProvider : AbstractHolidayProvider {
    private IOrthodoxProvider _orthodoxProvider;
    public GreeceHolidayProvider(IOrthodoxProvider orthodoxProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    private HolidaySpecification LabourDay(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.GreenlandHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public GreenlandHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.GrenadaHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public GrenadaHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.GuatemalaHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public GuatemalaHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.GuernseyHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public GuernseyHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.GuyanaHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public GuyanaHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.HaitiHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public HaitiHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.HondurasHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public HondurasHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.HongKongHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public HongKongHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    private int MoveMonth(int month, int leapMonth);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.HungaryHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public HungaryHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.IcelandHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public IcelandHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
public interface Nager.Date.HolidayProviders.IHolidayProvider {
    public abstract virtual IEnumerable`1<Holiday> GetHolidays(int year);
    public abstract virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.IndonesiaHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public IndonesiaHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.IrelandHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public IrelandHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    [NullableContextAttribute("2")]
private HolidaySpecification SaintBrigidsDay(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.IsleOfManHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public IsleOfManHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    private HolidaySpecification SeniorRaceDay(int year);
    private HolidaySpecification EarlyMayBankHoliday(int year);
    private HolidaySpecification SpringBankHoliday(int year);
    [NullableContextAttribute("2")]
private HolidaySpecification QueensPlatinumJubilee(int year);
    [NullableContextAttribute("2")]
private HolidaySpecification QueensStateFuneral(int year);
    [NullableContextAttribute("2")]
private HolidaySpecification CoronationBankHoliday(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
public interface Nager.Date.HolidayProviders.ISubdivisionCodesProvider {
    public abstract virtual IDictionary`2<string, string> GetSubdivisionCodes();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.ItalyHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public ItalyHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.JamaicaHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public JamaicaHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.JapanHolidayProvider : AbstractHolidayProvider {
    [NullableContextAttribute("1")]
protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    private HolidaySpecification EmperorsBirthday(int year);
    private HolidaySpecification SportsDay(int year);
    private HolidaySpecification VernalEquinox(int year);
    private HolidaySpecification AutumnalEquinox(int year);
    [NullableContextAttribute("1")]
public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.JerseyHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public JerseyHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.KazakhstanHolidayProvider : AbstractHolidayProvider {
    private IOrthodoxProvider _orthodoxProvider;
    public KazakhstanHolidayProvider(IOrthodoxProvider orthodoxProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.LatviaHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public LatviaHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.LesothoHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public LesothoHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.LiechtensteinHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public LiechtensteinHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.LithuaniaHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public LithuaniaHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.LuxembourgHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public LuxembourgHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.MacedoniaHolidayProvider : AbstractHolidayProvider {
    private IOrthodoxProvider _orthodoxProvider;
    public MacedoniaHolidayProvider(IOrthodoxProvider orthodoxProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.MadagascarHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public MadagascarHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.MaltaHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public MaltaHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.MexicoHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public MexicoHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    [NullableContextAttribute("2")]
private HolidaySpecification InaugurationDay(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.MoldovaHolidayProvider : AbstractHolidayProvider {
    private IOrthodoxProvider _orthodoxProvider;
    public MoldovaHolidayProvider(IOrthodoxProvider orthodoxProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.MonacoHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public MonacoHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.MongoliaHolidayProvider : AbstractHolidayProvider {
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.MontenegroHolidayProvider : AbstractHolidayProvider {
    private IOrthodoxProvider _orthodoxProvider;
    private ICatholicProvider _catholicProvider;
    public MontenegroHolidayProvider(IOrthodoxProvider orthodoxProvider, ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.MontserratHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public MontserratHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.MoroccoHolidayProvider : AbstractHolidayProvider {
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.MozambiqueHolidayProvider : AbstractHolidayProvider {
    public sealed virtual IDictionary`2<string, string> GetSubdivisionCodes();
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.NamibiaHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public NamibiaHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.NetherlandsHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public NetherlandsHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    [NullableContextAttribute("2")]
private HolidaySpecification LiberationDay(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.NewZealandHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    private Dictionary`2<int, DateTime> _matariki;
    public NewZealandHolidayProvider(ICatholicProvider catholicProvider);
    public sealed virtual IDictionary`2<string, string> GetSubdivisionCodes();
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    [NullableContextAttribute("2")]
private HolidaySpecification Matariki(int year);
    private HolidaySpecification WaitangiDay(int year);
    private HolidaySpecification AnzacDay(int year);
    private HolidaySpecification MonarchBirthday(int year);
    [NullableContextAttribute("2")]
private HolidaySpecification MemorialDayForQueenElizabeth(int year);
    private Dictionary`2<int, DateTime> InitMatariki();
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.NicaraguaHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public NicaraguaHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.NigerHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public NigerHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.NigeriaHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public NigeriaHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.NoHolidaysHolidayProvider : object {
    private static Lazy`1<IHolidayProvider> _instance;
    public static IHolidayProvider Instance { get; }
    private static NoHolidaysHolidayProvider();
    public static IHolidayProvider get_Instance();
    public sealed virtual IEnumerable`1<Holiday> GetHolidays(int year);
    public sealed virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.NorwayHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public NorwayHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.PanamaHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public PanamaHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.PapuaNewGuineaHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public PapuaNewGuineaHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.ParaguayHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public ParaguayHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.PeruHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public PeruHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.PolandHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public PolandHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    [NullableContextAttribute("2")]
private HolidaySpecification IndependenceDay(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.PortugalHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public PortugalHolidayProvider(ICatholicProvider catholicProvider);
    public sealed virtual IDictionary`2<string, string> GetSubdivisionCodes();
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.PuertoRicoHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public PuertoRicoHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.RomaniaHolidayProvider : AbstractHolidayProvider {
    private IOrthodoxProvider _orthodoxProvider;
    public RomaniaHolidayProvider(IOrthodoxProvider orthodoxProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    [NullableContextAttribute("2")]
private HolidaySpecification Epiphany(int year);
    [NullableContextAttribute("2")]
private HolidaySpecification SaintJohnTheBaptist(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.RussiaHolidayProvider : AbstractHolidayProvider {
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.SanMarinoHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public SanMarinoHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.SerbiaHolidayProvider : AbstractHolidayProvider {
    private IOrthodoxProvider _orthodoxProvider;
    public SerbiaHolidayProvider(IOrthodoxProvider orthodoxProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.SingaporeHolidayProvider : AbstractHolidayProvider {
    [NullableAttribute("1")]
private ICatholicProvider _catholicProvider;
    [NullableContextAttribute("1")]
public SingaporeHolidayProvider(ICatholicProvider catholicProvider);
    [NullableContextAttribute("1")]
protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    private HolidaySpecification HariRayaPuasa(int year);
    private HolidaySpecification VesakDay(int year);
    private HolidaySpecification HariRayaHaji(int year);
    private HolidaySpecification Deepavali(int year);
    private HolidaySpecification PollingDay(int year);
    [NullableContextAttribute("1")]
public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.SlovakiaHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public SlovakiaHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.SloveniaHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public SloveniaHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    [NullableContextAttribute("2")]
private HolidaySpecification SolidarityDay(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.SouthAfricaHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public SouthAfricaHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    [NullableContextAttribute("2")]
private HolidaySpecification SpringboksVictory(int year);
    [NullableContextAttribute("2")]
private HolidaySpecification ElectionDay(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.SouthKoreaHolidayProvider : AbstractHolidayProvider {
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    private int MoveMonth(int month, int leapMonth);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.SpainHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public SpainHolidayProvider(ICatholicProvider catholicProvider);
    public sealed virtual IDictionary`2<string, string> GetSubdivisionCodes();
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    private HolidaySpecification[] NewYearsDay(int year);
    private HolidaySpecification EasterMonday(int year);
    private HolidaySpecification CorpusChristi(int year);
    private HolidaySpecification MaundyThursday(int year);
    private HolidaySpecification ChristmasDay(int year);
    [NullableContextAttribute("2")]
private HolidaySpecification WhitMonday(int year);
    private HolidaySpecification Assumption(int year);
    private HolidaySpecification DayOfMadrid(int year);
    [NullableContextAttribute("2")]
private HolidaySpecification StJosephsDay(int year);
    [NullableContextAttribute("2")]
private HolidaySpecification SantiagoApostol(int year);
    private HolidaySpecification StStephensDay(int year);
    private HolidaySpecification DayOfTheValencianCommunity(int year);
    private HolidaySpecification LaBienAparecida(int year);
    private HolidaySpecification NationalDayOfCatalonia(int year);
    private HolidaySpecification DayOfExtremadura(int year);
    private HolidaySpecification DayOfAsturias(int year);
    private HolidaySpecification DayOfTheCantabrianInstitutions(int year);
    private HolidaySpecification StJohnsDay(int year);
    private HolidaySpecification DayOfLaRioja(int year);
    private HolidaySpecification DayOfMurcia(int year);
    private HolidaySpecification DayOfCastillaLaMancha(int year);
    [NullableContextAttribute("2")]
private HolidaySpecification CastileAndLeonDay(int year);
    private HolidaySpecification GalicianLiteratureDay(int year);
    private HolidaySpecification DayOfAragon(int year);
    private HolidaySpecification DayOfTheBalearicIslands(int year);
    private HolidaySpecification DayOfAndalucia(int year);
    private HolidaySpecification DayOfTheCanaryIslands(int year);
    [NullableContextAttribute("2")]
private HolidaySpecification CarnivalTuesday(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.SurinameHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public SurinameHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    [NullableContextAttribute("2")]
private HolidaySpecification ChineseNewYear(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.SvalbardAndJanMayenHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public SvalbardAndJanMayenHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.SwedenHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public SwedenHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    [NullableContextAttribute("2")]
private HolidaySpecification NationalDayOfSweden(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.SwitzerlandHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public SwitzerlandHolidayProvider(ICatholicProvider catholicProvider);
    public sealed virtual IDictionary`2<string, string> GetSubdivisionCodes();
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    private HolidaySpecification[] Epiphany(int year);
    private HolidaySpecification BerchtoldsDay(int year);
    private HolidaySpecification[] SaintJosephsDay(int year);
    private HolidaySpecification[] EasterMonday(int year);
    private HolidaySpecification[] WhitMonday(int year);
    private HolidaySpecification[] CorpusChristi(int year);
    private HolidaySpecification[] ImmaculateConception(int year);
    private HolidaySpecification[] LabourDay(int year);
    private HolidaySpecification[] StephensDay(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.TunisiaHolidayProvider : AbstractHolidayProvider {
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.TurkeyHolidayProvider : AbstractHolidayProvider {
    private UmAlQuraCalendar _umAlQuraCalendar;
    private DateTime ConvertHijriToGregorian(int year, int month, int day);
    private int GetHijriYear(int year);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    [NullableContextAttribute("2")]
private HolidaySpecification DemocracyAndNationalUnityDay(int year);
    private HolidaySpecification[] GetEidAlFitr(int year);
    private HolidaySpecification[] GetEidAlAdha(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.UkraineHolidayProvider : AbstractHolidayProvider {
    private IOrthodoxProvider _orthodoxProvider;
    public UkraineHolidayProvider(IOrthodoxProvider orthodoxProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    private HolidaySpecification VictoryDay(int year);
    [NullableContextAttribute("2")]
private HolidaySpecification JulianChristmasDay(int year);
    [NullableContextAttribute("2")]
private HolidaySpecification StatehoodDay(int year);
    [NullableContextAttribute("2")]
private HolidaySpecification DefenderDay(int year);
    [NullableContextAttribute("2")]
private HolidaySpecification GregorianChristmasDay(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.UnitedKingdomHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public UnitedKingdomHolidayProvider(ICatholicProvider catholicProvider);
    public sealed virtual IDictionary`2<string, string> GetSubdivisionCodes();
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    private HolidaySpecification SpringBankHoliday(int year);
    [NullableContextAttribute("2")]
private HolidaySpecification QueensPlatinumJubilee(int year);
    [NullableContextAttribute("2")]
private HolidaySpecification QueensStateFuneral(int year);
    [NullableContextAttribute("2")]
private HolidaySpecification CoronationBankHoliday(int year);
    private HolidaySpecification EarlyMayBankHoliday(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.UnitedStatesHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public UnitedStatesHolidayProvider(ICatholicProvider catholicProvider);
    public sealed virtual IDictionary`2<string, string> GetSubdivisionCodes();
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    private HolidaySpecification JuneteenthNationalIndependenceDay(int year, ObservedRuleSet observedRuleSet);
    [NullableContextAttribute("2")]
private HolidaySpecification IndigenousPeoplesDay(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.UruguayHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public UruguayHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.VaticanCityHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public VaticanCityHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.VenezuelaHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public VenezuelaHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.VietnamHolidayProvider : AbstractHolidayProvider {
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Nager.Date.HolidayProviders.ZimbabweHolidayProvider : AbstractHolidayProvider {
    private ICatholicProvider _catholicProvider;
    public ZimbabweHolidayProvider(ICatholicProvider catholicProvider);
    protected virtual IEnumerable`1<HolidaySpecification> GetHolidaySpecifications(int year);
    public virtual IEnumerable`1<string> GetSources();
}
internal static class Nager.Date.HolidaySpecificationProcessor : object {
    [NullableContextAttribute("1")]
[IteratorStateMachineAttribute("Nager.Date.HolidaySpecificationProcessor/<Process>d__0")]
internal static IEnumerable`1<Holiday> Process(IEnumerable`1<HolidaySpecification> holidaySpecifications, CountryCode countryCode);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Nager.Date.HolidaySystem : object {
    private static string CountryCodeParsingError;
    private static ICatholicProvider _catholicProvider;
    private static IOrthodoxProvider _orthodoxProvider;
    private static Dictionary`2<CountryCode, Lazy`1<IHolidayProvider>> _holidaysProviders;
    private static Nullable`1<bool> _licenseValid;
    [NullableAttribute("2")]
public static string LicenseKey;
    private static HolidaySystem();
    [NullableContextAttribute("2")]
private static void CheckLicense(string licenseKey);
    public static IHolidayProvider GetHolidayProvider(string countryCode);
    public static IHolidayProvider GetHolidayProvider(CountryCode countryCode);
    public static bool TryGetHolidayProvider(CountryCode countryCode, IHolidayProvider& holidayProvider);
    public static IEnumerable`1<Holiday> GetHolidays(int year, string countryCode);
    public static IEnumerable`1<Holiday> GetHolidays(int year, CountryCode countryCode);
    public static IEnumerable`1<Holiday> GetHolidays(DateTime startDate, DateTime endDate, string countryCode);
    [IteratorStateMachineAttribute("Nager.Date.HolidaySystem/<GetHolidays>d__13")]
public static IEnumerable`1<Holiday> GetHolidays(DateTime startDate, DateTime endDate, CountryCode countryCode);
    public static IEnumerable`1<Holiday> GetHolidays(DateTime startDate, DateTime endDate);
    private static Func`2<Holiday, bool> GetHolidayFilter(DateTime date, HolidayTypes holidayTypes, string subdivisionCodes);
    public static bool IsPublicHoliday(DateTime date, string countryCode);
    public static bool IsPublicHoliday(DateTime date, CountryCode countryCode);
    public static bool IsPublicHoliday(DateTime date, CountryCode countryCode, Holiday[]& publicHolidays);
    public static bool IsPublicHoliday(DateTime date, CountryCode countryCode, string subdivisionCode);
    public static bool IsHoliday(DateTime date, CountryCode countryCode, HolidayTypes holidayTypes, Holiday[]& publicHolidays);
}
public class Nager.Date.LicenseKeyException : Exception {
    [NullableContextAttribute("1")]
public LicenseKeyException(string message);
}
internal enum Nager.Date.Models.DateSearchDirection : Enum {
    public int value__;
    public static DateSearchDirection Forward;
    public static DateSearchDirection Backward;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Nager.Date.Models.Holiday : object {
    [CompilerGeneratedAttribute]
private DateTime <Date>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <ObservedDate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EnglishName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LocalName>k__BackingField;
    [CompilerGeneratedAttribute]
private CountryCode <CountryCode>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private String[] <SubdivisionCodes>k__BackingField;
    [CompilerGeneratedAttribute]
private HolidayTypes <HolidayTypes>k__BackingField;
    public DateTime Date { get; public set; }
    public DateTime ObservedDate { get; public set; }
    public string EnglishName { get; public set; }
    public string LocalName { get; public set; }
    public CountryCode CountryCode { get; public set; }
    public bool NationalHoliday { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public String[] SubdivisionCodes { get; public set; }
    public HolidayTypes HolidayTypes { get; public set; }
    [CompilerGeneratedAttribute]
public DateTime get_Date();
    [CompilerGeneratedAttribute]
public void set_Date(DateTime value);
    [CompilerGeneratedAttribute]
public DateTime get_ObservedDate();
    [CompilerGeneratedAttribute]
public void set_ObservedDate(DateTime value);
    [CompilerGeneratedAttribute]
public string get_EnglishName();
    [CompilerGeneratedAttribute]
public void set_EnglishName(string value);
    [CompilerGeneratedAttribute]
public string get_LocalName();
    [CompilerGeneratedAttribute]
public void set_LocalName(string value);
    [CompilerGeneratedAttribute]
public CountryCode get_CountryCode();
    [CompilerGeneratedAttribute]
public void set_CountryCode(CountryCode value);
    public bool get_NationalHoliday();
    [CompilerGeneratedAttribute]
public String[] get_SubdivisionCodes();
    [CompilerGeneratedAttribute]
public void set_SubdivisionCodes(String[] value);
    [CompilerGeneratedAttribute]
public HolidayTypes get_HolidayTypes();
    [CompilerGeneratedAttribute]
public void set_HolidayTypes(HolidayTypes value);
    public virtual string ToString();
}
[FlagsAttribute]
public enum Nager.Date.Models.HolidaySources : Enum {
    public int value__;
    public static HolidaySources UndefinedHoliday;
    public static HolidaySources HistoricalHolidays;
    public static HolidaySources CulturalHolidays;
    public static HolidaySources ReligiousHolidays;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Nager.Date.Models.HolidaySpecification : object {
    [CompilerGeneratedAttribute]
private DateTime <Date>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EnglishName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LocalName>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private String[] <SubdivisionCodes>k__BackingField;
    [CompilerGeneratedAttribute]
private HolidayTypes <HolidayTypes>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private ObservedRuleSet <ObservedRuleSet>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Dictionary`2<string, string> <AdditionalTranslations>k__BackingField;
    [CompilerGeneratedAttribute]
private HolidaySources <HolidaySources>k__BackingField;
    public DateTime Date { get; public set; }
    public string EnglishName { get; public set; }
    public string LocalName { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public String[] SubdivisionCodes { get; public set; }
    public HolidayTypes HolidayTypes { get; public set; }
    [NullableAttribute("2")]
public ObservedRuleSet ObservedRuleSet { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Dictionary`2<string, string> AdditionalTranslations { get; public set; }
    public HolidaySources HolidaySources { get; public set; }
    [CompilerGeneratedAttribute]
public DateTime get_Date();
    [CompilerGeneratedAttribute]
public void set_Date(DateTime value);
    [CompilerGeneratedAttribute]
public string get_EnglishName();
    [CompilerGeneratedAttribute]
public void set_EnglishName(string value);
    [CompilerGeneratedAttribute]
public string get_LocalName();
    [CompilerGeneratedAttribute]
public void set_LocalName(string value);
    [CompilerGeneratedAttribute]
public String[] get_SubdivisionCodes();
    [CompilerGeneratedAttribute]
public void set_SubdivisionCodes(String[] value);
    [CompilerGeneratedAttribute]
public HolidayTypes get_HolidayTypes();
    [CompilerGeneratedAttribute]
public void set_HolidayTypes(HolidayTypes value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public ObservedRuleSet get_ObservedRuleSet();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_ObservedRuleSet(ObservedRuleSet value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_AdditionalTranslations();
    [CompilerGeneratedAttribute]
public void set_AdditionalTranslations(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public HolidaySources get_HolidaySources();
    [CompilerGeneratedAttribute]
public void set_HolidaySources(HolidaySources value);
    internal HolidaySpecification SetSubdivisionCodes(String[] subdivisionCodes);
    internal HolidaySpecification SetHolidayTypes(HolidayTypes holidayType);
}
[FlagsAttribute]
public enum Nager.Date.Models.HolidayTypes : Enum {
    public int value__;
    public static HolidayTypes Public;
    public static HolidayTypes Bank;
    public static HolidayTypes School;
    public static HolidayTypes Authorities;
    public static HolidayTypes Optional;
    public static HolidayTypes Observance;
}
public enum Nager.Date.Models.Month : Enum {
    public int value__;
    public static Month January;
    public static Month February;
    public static Month March;
    public static Month April;
    public static Month May;
    public static Month June;
    public static Month July;
    public static Month August;
    public static Month September;
    public static Month October;
    public static Month November;
    public static Month December;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Nager.Date.Models.ObservedRuleSet : object {
    [CompilerGeneratedAttribute]
private Func`2<DateTime, DateTime> <Monday>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<DateTime, DateTime> <Tuesday>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<DateTime, DateTime> <Wednesday>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<DateTime, DateTime> <Thursday>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<DateTime, DateTime> <Friday>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<DateTime, DateTime> <Saturday>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<DateTime, DateTime> <Sunday>k__BackingField;
    public Func`2<DateTime, DateTime> Monday { get; public set; }
    public Func`2<DateTime, DateTime> Tuesday { get; public set; }
    public Func`2<DateTime, DateTime> Wednesday { get; public set; }
    public Func`2<DateTime, DateTime> Thursday { get; public set; }
    public Func`2<DateTime, DateTime> Friday { get; public set; }
    public Func`2<DateTime, DateTime> Saturday { get; public set; }
    public Func`2<DateTime, DateTime> Sunday { get; public set; }
    [CompilerGeneratedAttribute]
public Func`2<DateTime, DateTime> get_Monday();
    [CompilerGeneratedAttribute]
public void set_Monday(Func`2<DateTime, DateTime> value);
    [CompilerGeneratedAttribute]
public Func`2<DateTime, DateTime> get_Tuesday();
    [CompilerGeneratedAttribute]
public void set_Tuesday(Func`2<DateTime, DateTime> value);
    [CompilerGeneratedAttribute]
public Func`2<DateTime, DateTime> get_Wednesday();
    [CompilerGeneratedAttribute]
public void set_Wednesday(Func`2<DateTime, DateTime> value);
    [CompilerGeneratedAttribute]
public Func`2<DateTime, DateTime> get_Thursday();
    [CompilerGeneratedAttribute]
public void set_Thursday(Func`2<DateTime, DateTime> value);
    [CompilerGeneratedAttribute]
public Func`2<DateTime, DateTime> get_Friday();
    [CompilerGeneratedAttribute]
public void set_Friday(Func`2<DateTime, DateTime> value);
    [CompilerGeneratedAttribute]
public Func`2<DateTime, DateTime> get_Saturday();
    [CompilerGeneratedAttribute]
public void set_Saturday(Func`2<DateTime, DateTime> value);
    [CompilerGeneratedAttribute]
public Func`2<DateTime, DateTime> get_Sunday();
    [CompilerGeneratedAttribute]
public void set_Sunday(Func`2<DateTime, DateTime> value);
    public Nullable`1<DateTime> GetObservedDate(DateTime givenDate);
}
public enum Nager.Date.Models.Occurrence : Enum {
    public int value__;
    public static Occurrence First;
    public static Occurrence Second;
    public static Occurrence Third;
    public static Occurrence Fourth;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Nager.Date.ReligiousProviders.CatholicProvider : object {
    private static ConcurrentDictionary`2<int, DateTime> _cache;
    private static CatholicProvider();
    public sealed virtual DateTime EasterSunday(int year);
    public sealed virtual DateTime AdventSunday(int year);
    public sealed virtual HolidaySpecification MaundyThursday(string localName, int year, ObservedRuleSet observedRuleSet);
    public sealed virtual HolidaySpecification GoodFriday(string localName, int year, ObservedRuleSet observedRuleSet);
    public sealed virtual HolidaySpecification EasterSaturday(string localName, int year, ObservedRuleSet observedRuleSet);
    public sealed virtual HolidaySpecification EasterSunday(string localName, int year, ObservedRuleSet observedRuleSet);
    public sealed virtual HolidaySpecification EasterMonday(string localName, int year, ObservedRuleSet observedRuleSet);
    public sealed virtual HolidaySpecification AscensionDay(string localName, int year, ObservedRuleSet observedRuleSet);
    public sealed virtual HolidaySpecification Pentecost(string localName, int year, ObservedRuleSet observedRuleSet);
    public sealed virtual HolidaySpecification WhitMonday(string localName, int year, ObservedRuleSet observedRuleSet);
    public sealed virtual HolidaySpecification CorpusChristi(string localName, int year, ObservedRuleSet observedRuleSet);
}
[NullableContextAttribute("1")]
public interface Nager.Date.ReligiousProviders.ICatholicProvider {
    public abstract virtual DateTime EasterSunday(int year);
    public abstract virtual DateTime AdventSunday(int year);
    public abstract virtual HolidaySpecification MaundyThursday(string localName, int year, ObservedRuleSet observedRuleSet);
    public abstract virtual HolidaySpecification GoodFriday(string localName, int year, ObservedRuleSet observedRuleSet);
    public abstract virtual HolidaySpecification EasterSaturday(string localName, int year, ObservedRuleSet observedRuleSet);
    public abstract virtual HolidaySpecification EasterSunday(string localName, int year, ObservedRuleSet observedRuleSet);
    public abstract virtual HolidaySpecification EasterMonday(string localName, int year, ObservedRuleSet observedRuleSet);
    public abstract virtual HolidaySpecification AscensionDay(string localName, int year, ObservedRuleSet observedRuleSet);
    public abstract virtual HolidaySpecification Pentecost(string localName, int year, ObservedRuleSet observedRuleSet);
    public abstract virtual HolidaySpecification WhitMonday(string localName, int year, ObservedRuleSet observedRuleSet);
    public abstract virtual HolidaySpecification CorpusChristi(string localName, int year, ObservedRuleSet observedRuleSet);
}
[NullableContextAttribute("1")]
public interface Nager.Date.ReligiousProviders.IOrthodoxProvider {
    public abstract virtual DateTime EasterSunday(int year);
    public abstract virtual HolidaySpecification GoodFriday(string localName, int year, ObservedRuleSet observedRuleSet);
    public abstract virtual HolidaySpecification HolySaturday(string localName, int year, ObservedRuleSet observedRuleSet);
    public abstract virtual HolidaySpecification EasterSunday(string localName, int year, ObservedRuleSet observedRuleSet);
    public abstract virtual HolidaySpecification EasterMonday(string localName, int year, ObservedRuleSet observedRuleSet);
    public abstract virtual HolidaySpecification Pentecost(string localName, int year, ObservedRuleSet observedRuleSet);
    public abstract virtual HolidaySpecification WhitMonday(string localName, int year, ObservedRuleSet observedRuleSet);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Nager.Date.ReligiousProviders.OrthodoxProvider : object {
    private static ConcurrentDictionary`2<int, DateTime> _cache;
    private static OrthodoxProvider();
    public sealed virtual DateTime EasterSunday(int year);
    public sealed virtual HolidaySpecification GoodFriday(string localName, int year, ObservedRuleSet observedRuleSet);
    public sealed virtual HolidaySpecification HolySaturday(string localName, int year, ObservedRuleSet observedRuleSet);
    public sealed virtual HolidaySpecification EasterSunday(string localName, int year, ObservedRuleSet observedRuleSet);
    public sealed virtual HolidaySpecification EasterMonday(string localName, int year, ObservedRuleSet observedRuleSet);
    public sealed virtual HolidaySpecification Pentecost(string localName, int year, ObservedRuleSet observedRuleSet);
    public sealed virtual HolidaySpecification WhitMonday(string localName, int year, ObservedRuleSet observedRuleSet);
}
[NullableContextAttribute("1")]
public interface Nager.Date.WeekendProviders.IWeekendProvider {
    public IEnumerable`1<DayOfWeek> WeekendDays { get; }
    public DayOfWeek FirstWeekendDay { get; }
    public DayOfWeek LastWeekendDay { get; }
    public abstract virtual IEnumerable`1<DayOfWeek> get_WeekendDays();
    public abstract virtual bool IsWeekend(DateTime date);
    public abstract virtual bool IsWeekend(Holiday publicHoliday);
    public abstract virtual bool IsWeekend(DayOfWeek dayOfWeek);
    public abstract virtual DayOfWeek get_FirstWeekendDay();
    public abstract virtual DayOfWeek get_LastWeekendDay();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Nager.Date.Weekends.WeekendProvider : object {
    [CompilerGeneratedAttribute]
private IEnumerable`1<DayOfWeek> <WeekendDays>k__BackingField;
    [CompilerGeneratedAttribute]
private DayOfWeek <FirstWeekendDay>k__BackingField;
    [CompilerGeneratedAttribute]
private DayOfWeek <LastWeekendDay>k__BackingField;
    [CompilerGeneratedAttribute]
private static IWeekendProvider <FridayOnly>k__BackingField;
    [CompilerGeneratedAttribute]
private static IWeekendProvider <SaturdayOnly>k__BackingField;
    [CompilerGeneratedAttribute]
private static IWeekendProvider <SundayOnly>k__BackingField;
    [CompilerGeneratedAttribute]
private static IWeekendProvider <FridaySunday>k__BackingField;
    [CompilerGeneratedAttribute]
private static IWeekendProvider <SemiUniversal>k__BackingField;
    [CompilerGeneratedAttribute]
private static IWeekendProvider <Universal>k__BackingField;
    public IEnumerable`1<DayOfWeek> WeekendDays { get; }
    public DayOfWeek FirstWeekendDay { get; }
    public DayOfWeek LastWeekendDay { get; }
    public static IWeekendProvider FridayOnly { get; }
    public static IWeekendProvider SaturdayOnly { get; }
    public static IWeekendProvider SundayOnly { get; }
    public static IWeekendProvider FridaySunday { get; }
    public static IWeekendProvider SemiUniversal { get; }
    public static IWeekendProvider Universal { get; }
    public WeekendProvider(DayOfWeek[] weekendDays);
    private static WeekendProvider();
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<DayOfWeek> get_WeekendDays();
    public sealed virtual bool IsWeekend(DateTime date);
    public sealed virtual bool IsWeekend(Holiday publicHoliday);
    public sealed virtual bool IsWeekend(DayOfWeek dayOfWeek);
    [CompilerGeneratedAttribute]
public sealed virtual DayOfWeek get_FirstWeekendDay();
    [CompilerGeneratedAttribute]
public sealed virtual DayOfWeek get_LastWeekendDay();
    [CompilerGeneratedAttribute]
public static IWeekendProvider get_FridayOnly();
    [CompilerGeneratedAttribute]
public static IWeekendProvider get_SaturdayOnly();
    [CompilerGeneratedAttribute]
public static IWeekendProvider get_SundayOnly();
    [CompilerGeneratedAttribute]
public static IWeekendProvider get_FridaySunday();
    [CompilerGeneratedAttribute]
public static IWeekendProvider get_SemiUniversal();
    [CompilerGeneratedAttribute]
public static IWeekendProvider get_Universal();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Nager.Date.WeekendSystem : object {
    private static string CountryCodeParsingError;
    private static Dictionary`2<CountryCode, Lazy`1<IWeekendProvider>> _nonUniversalWeekendProviders;
    private static WeekendSystem();
    public static IWeekendProvider GetWeekendProvider(string countryCode);
    public static IWeekendProvider GetWeekendProvider(CountryCode countryCode);
    public static bool IsWeekend(DateTime date, string countryCode);
    public static bool IsWeekend(DateTime date, CountryCode countryCode);
}
