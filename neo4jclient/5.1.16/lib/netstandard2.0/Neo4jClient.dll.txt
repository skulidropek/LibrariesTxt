[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
internal class Neo4jClient.AddressResolver : object {
    private Dictionary`2<ServerAddress, List`1<ServerAddress>> servers;
    public AddressResolver(string virtualUri, IEnumerable`1<string> uris);
    public AddressResolver(Uri virtualUri, IEnumerable`1<Uri> uris);
    public sealed virtual ISet`1<ServerAddress> Resolve(ServerAddress address);
}
[ExtensionAttribute]
internal static class Neo4jClient.AggregateExceptionExtensions : object {
    [ExtensionAttribute]
internal static bool TryUnwrap(AggregateException ex, Exception& exception);
}
public class Neo4jClient.AmbiguousRelationshipDirectionException : Exception {
}
[DefaultMemberAttribute("Item")]
internal class Neo4jClient.ApiModels.BatchResponse : List`1<BatchStepResult> {
    public BatchStepResult Item { get; }
    public BatchStepResult get_Item(BatchStep step);
}
[DebuggerDisplayAttribute("{Id}: {Method} {To}")]
internal class Neo4jClient.ApiModels.BatchStep : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private HttpMethod <Method>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <To>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private object <Body>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private int <Id>k__BackingField;
    [JsonIgnoreAttribute]
public HttpMethod Method { get; public set; }
    [JsonPropertyAttribute("method")]
public string MethodAsString { get; }
    [JsonPropertyAttribute("to")]
public string To { get; public set; }
    [JsonPropertyAttribute("body")]
public object Body { get; public set; }
    [JsonPropertyAttribute("id")]
public int Id { get; public set; }
    [CompilerGeneratedAttribute]
public HttpMethod get_Method();
    [CompilerGeneratedAttribute]
public void set_Method(HttpMethod value);
    public string get_MethodAsString();
    [CompilerGeneratedAttribute]
public string get_To();
    [CompilerGeneratedAttribute]
public void set_To(string value);
    [CompilerGeneratedAttribute]
public object get_Body();
    [CompilerGeneratedAttribute]
public void set_Body(object value);
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
}
[ExtensionAttribute]
internal static class Neo4jClient.ApiModels.BatchStepExtensions : object {
    [ExtensionAttribute]
public static BatchStep Add(IList`1<BatchStep> list, HttpMethod method, string to, object body);
}
internal class Neo4jClient.ApiModels.BatchStepResult : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <From>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Location>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private HttpStatusCode <Status>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Body>k__BackingField;
    [JsonPropertyAttribute("id")]
public int Id { get; public set; }
    [JsonPropertyAttribute("from")]
public string From { get; public set; }
    [JsonPropertyAttribute("location")]
public string Location { get; public set; }
    [JsonPropertyAttribute("status")]
public HttpStatusCode Status { get; public set; }
    [JsonPropertyAttribute("body")]
public string Body { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [CompilerGeneratedAttribute]
public string get_From();
    [CompilerGeneratedAttribute]
public void set_From(string value);
    [CompilerGeneratedAttribute]
public string get_Location();
    [CompilerGeneratedAttribute]
public void set_Location(string value);
    [CompilerGeneratedAttribute]
public HttpStatusCode get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(HttpStatusCode value);
    [CompilerGeneratedAttribute]
public string get_Body();
    [CompilerGeneratedAttribute]
public void set_Body(string value);
}
internal class Neo4jClient.ApiModels.Cypher.CypherApiQuery : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Query>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private IDictionary`2<string, object> <Parameters>k__BackingField;
    [JsonPropertyAttribute("query")]
public string Query { get; }
    [JsonPropertyAttribute("params")]
public IDictionary`2<string, object> Parameters { get; }
    public CypherApiQuery(CypherQuery query);
    [CompilerGeneratedAttribute]
public string get_Query();
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_Parameters();
}
[DefaultMemberAttribute("Item")]
[JsonObjectAttribute]
internal class Neo4jClient.ApiModels.Cypher.CypherStatementList : object {
    private IList`1<CypherTransactionStatement> _statements;
    [JsonPropertyAttribute("statements")]
public IList`1<CypherTransactionStatement> Statements { get; }
    [JsonIgnoreAttribute]
public int Count { get; }
    [JsonIgnoreAttribute]
public bool IsReadOnly { get; }
    [JsonIgnoreAttribute]
public CypherTransactionStatement Item { get; public set; }
    public CypherStatementList(IEnumerable`1<CypherQuery> queries);
    public IList`1<CypherTransactionStatement> get_Statements();
    public sealed virtual IEnumerator`1<CypherTransactionStatement> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public sealed virtual void Add(CypherTransactionStatement item);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(CypherTransactionStatement item);
    public sealed virtual void CopyTo(CypherTransactionStatement[] array, int arrayIndex);
    public sealed virtual bool Remove(CypherTransactionStatement item);
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual int IndexOf(CypherTransactionStatement item);
    public sealed virtual void Insert(int index, CypherTransactionStatement item);
    public sealed virtual void RemoveAt(int index);
    public sealed virtual CypherTransactionStatement get_Item(int index);
    public sealed virtual void set_Item(int index, CypherTransactionStatement value);
}
internal class Neo4jClient.ApiModels.Cypher.CypherTransactionStatement : object {
    private String[] formatContents;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Statement>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private IDictionary`2<string, object> <Parameters>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private Nullable`1<bool> <IncludeStats>k__BackingField;
    [JsonPropertyAttribute("statement")]
public string Statement { get; }
    [JsonPropertyAttribute("resultDataContents")]
public IEnumerable`1<string> ResultDataContents { get; }
    [JsonPropertyAttribute("parameters")]
public IDictionary`2<string, object> Parameters { get; }
    [JsonPropertyAttribute]
public Nullable`1<bool> IncludeStats { get; }
    public CypherTransactionStatement(CypherQuery query);
    [CompilerGeneratedAttribute]
public string get_Statement();
    public IEnumerable`1<string> get_ResultDataContents();
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_Parameters();
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IncludeStats();
}
public class Neo4jClient.ApiModels.Cypher.PathsResult : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Start>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private List`1<string> <Nodes>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private int <Length>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private List`1<string> <Relationships>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <End>k__BackingField;
    [JsonPropertyAttribute("start")]
public string Start { get; public set; }
    [JsonPropertyAttribute("nodes")]
public List`1<string> Nodes { get; public set; }
    [JsonPropertyAttribute("length")]
public int Length { get; public set; }
    [JsonPropertyAttribute("relationships")]
public List`1<string> Relationships { get; public set; }
    [JsonPropertyAttribute("end")]
public string End { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Start();
    [CompilerGeneratedAttribute]
public void set_Start(string value);
    [CompilerGeneratedAttribute]
public List`1<string> get_Nodes();
    [CompilerGeneratedAttribute]
public void set_Nodes(List`1<string> value);
    [CompilerGeneratedAttribute]
public int get_Length();
    [CompilerGeneratedAttribute]
public void set_Length(int value);
    [CompilerGeneratedAttribute]
public List`1<string> get_Relationships();
    [CompilerGeneratedAttribute]
public void set_Relationships(List`1<string> value);
    [CompilerGeneratedAttribute]
public string get_End();
    [CompilerGeneratedAttribute]
public void set_End(string value);
}
public class Neo4jClient.ApiModels.Cypher.PathsResultBolt : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private PathsResultBoltNode <Start>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private PathsResultBoltNode <End>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private List`1<PathsResultBoltNode> <Nodes>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private List`1<PathsResultBoltRelationship> <Relationships>k__BackingField;
    [JsonPropertyAttribute("Start")]
public PathsResultBoltNode Start { get; public set; }
    [JsonPropertyAttribute("End")]
public PathsResultBoltNode End { get; public set; }
    [JsonIgnoreAttribute]
public int Length { get; }
    [JsonPropertyAttribute("Nodes")]
public List`1<PathsResultBoltNode> Nodes { get; public set; }
    [JsonPropertyAttribute("Relationships")]
public List`1<PathsResultBoltRelationship> Relationships { get; public set; }
    internal PathsResultBolt(IPath path);
    [CompilerGeneratedAttribute]
public PathsResultBoltNode get_Start();
    [CompilerGeneratedAttribute]
public void set_Start(PathsResultBoltNode value);
    [CompilerGeneratedAttribute]
public PathsResultBoltNode get_End();
    [CompilerGeneratedAttribute]
public void set_End(PathsResultBoltNode value);
    public int get_Length();
    [CompilerGeneratedAttribute]
public List`1<PathsResultBoltNode> get_Nodes();
    [CompilerGeneratedAttribute]
public void set_Nodes(List`1<PathsResultBoltNode> value);
    [CompilerGeneratedAttribute]
public List`1<PathsResultBoltRelationship> get_Relationships();
    [CompilerGeneratedAttribute]
public void set_Relationships(List`1<PathsResultBoltRelationship> value);
}
public class Neo4jClient.ApiModels.Cypher.QueryStats : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private bool <ContainsUpdates>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private int <NodesCreated>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private int <NodesDeleted>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private int <PropertiesSet>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private int <RelationshipsCreated>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private int <RelationshipsDeleted>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private int <LabelsAdded>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private int <LabelsRemoved>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private int <IndexesAdded>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private int <IndexesRemoved>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private int <ConstraintsAdded>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private int <ConstraintsRemoved>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private bool <ContainsSystemUpdates>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private int <SystemUpdates>k__BackingField;
    [JsonPropertyAttribute("contains_updates")]
public bool ContainsUpdates { get; public set; }
    [JsonPropertyAttribute("nodes_created")]
public int NodesCreated { get; public set; }
    [JsonPropertyAttribute("nodes_deleted")]
public int NodesDeleted { get; public set; }
    [JsonPropertyAttribute("properties_set")]
public int PropertiesSet { get; public set; }
    [JsonPropertyAttribute("relationships_created")]
public int RelationshipsCreated { get; public set; }
    [JsonPropertyAttribute("relationship_deleted")]
public int RelationshipsDeleted { get; public set; }
    [JsonPropertyAttribute("labels_added")]
public int LabelsAdded { get; public set; }
    [JsonPropertyAttribute("labels_removed")]
public int LabelsRemoved { get; public set; }
    [JsonPropertyAttribute("indexes_added")]
public int IndexesAdded { get; public set; }
    [JsonPropertyAttribute("indexes_removed")]
public int IndexesRemoved { get; public set; }
    [JsonPropertyAttribute("constraints_added")]
public int ConstraintsAdded { get; public set; }
    [JsonPropertyAttribute("constraints_removed")]
public int ConstraintsRemoved { get; public set; }
    [JsonPropertyAttribute("contains_system_updates")]
public bool ContainsSystemUpdates { get; public set; }
    [JsonPropertyAttribute("system_updates")]
public int SystemUpdates { get; public set; }
    public QueryStats(ICounters counters);
    [CompilerGeneratedAttribute]
public bool get_ContainsUpdates();
    [CompilerGeneratedAttribute]
public void set_ContainsUpdates(bool value);
    [CompilerGeneratedAttribute]
public int get_NodesCreated();
    [CompilerGeneratedAttribute]
public void set_NodesCreated(int value);
    [CompilerGeneratedAttribute]
public int get_NodesDeleted();
    [CompilerGeneratedAttribute]
public void set_NodesDeleted(int value);
    [CompilerGeneratedAttribute]
public int get_PropertiesSet();
    [CompilerGeneratedAttribute]
public void set_PropertiesSet(int value);
    [CompilerGeneratedAttribute]
public int get_RelationshipsCreated();
    [CompilerGeneratedAttribute]
public void set_RelationshipsCreated(int value);
    [CompilerGeneratedAttribute]
public int get_RelationshipsDeleted();
    [CompilerGeneratedAttribute]
public void set_RelationshipsDeleted(int value);
    [CompilerGeneratedAttribute]
public int get_LabelsAdded();
    [CompilerGeneratedAttribute]
public void set_LabelsAdded(int value);
    [CompilerGeneratedAttribute]
public int get_LabelsRemoved();
    [CompilerGeneratedAttribute]
public void set_LabelsRemoved(int value);
    [CompilerGeneratedAttribute]
public int get_IndexesAdded();
    [CompilerGeneratedAttribute]
public void set_IndexesAdded(int value);
    [CompilerGeneratedAttribute]
public int get_IndexesRemoved();
    [CompilerGeneratedAttribute]
public void set_IndexesRemoved(int value);
    [CompilerGeneratedAttribute]
public int get_ConstraintsAdded();
    [CompilerGeneratedAttribute]
public void set_ConstraintsAdded(int value);
    [CompilerGeneratedAttribute]
public int get_ConstraintsRemoved();
    [CompilerGeneratedAttribute]
public void set_ConstraintsRemoved(int value);
    [CompilerGeneratedAttribute]
public bool get_ContainsSystemUpdates();
    [CompilerGeneratedAttribute]
public void set_ContainsSystemUpdates(bool value);
    [CompilerGeneratedAttribute]
public int get_SystemUpdates();
    [CompilerGeneratedAttribute]
public void set_SystemUpdates(int value);
}
internal class Neo4jClient.ApiModels.ExceptionResponse : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Exception>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <FullName>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private String[] <StackTrace>k__BackingField;
    [JsonPropertyAttribute("message")]
public string Message { get; public set; }
    [JsonPropertyAttribute("exception")]
public string Exception { get; public set; }
    [JsonPropertyAttribute("fullname")]
public string FullName { get; public set; }
    [JsonPropertyAttribute("stacktrace")]
public String[] StackTrace { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_Exception();
    [CompilerGeneratedAttribute]
public void set_Exception(string value);
    [CompilerGeneratedAttribute]
public string get_FullName();
    [CompilerGeneratedAttribute]
public void set_FullName(string value);
    [CompilerGeneratedAttribute]
public String[] get_StackTrace();
    [CompilerGeneratedAttribute]
public void set_StackTrace(String[] value);
}
public class Neo4jClient.ApiModels.FieldChange : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <FieldName>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <OldValue>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <NewValue>k__BackingField;
    public string FieldName { get; public set; }
    public string OldValue { get; public set; }
    public string NewValue { get; public set; }
    [CompilerGeneratedAttribute]
public string get_FieldName();
    [CompilerGeneratedAttribute]
public void set_FieldName(string value);
    [CompilerGeneratedAttribute]
public string get_OldValue();
    [CompilerGeneratedAttribute]
public void set_OldValue(string value);
    [CompilerGeneratedAttribute]
public string get_NewValue();
    [CompilerGeneratedAttribute]
public void set_NewValue(string value);
}
internal class Neo4jClient.ApiModels.NodeApiResponse`1 : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Self>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private TNode <Data>k__BackingField;
    [JsonPropertyAttribute("self")]
public string Self { get; public set; }
    [JsonPropertyAttribute("data")]
public TNode Data { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Self();
    [CompilerGeneratedAttribute]
public void set_Self(string value);
    [CompilerGeneratedAttribute]
public TNode get_Data();
    [CompilerGeneratedAttribute]
public void set_Data(TNode value);
    public Node`1<TNode> ToNode(IGraphClient client);
    private static string GetLastPathSegment(string uri);
}
internal class Neo4jClient.ApiModels.NodeOrRelationshipApiResponse`1 : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private TNode <Data>k__BackingField;
    [JsonPropertyAttribute("data")]
public TNode Data { get; public set; }
    [CompilerGeneratedAttribute]
public TNode get_Data();
    [CompilerGeneratedAttribute]
public void set_Data(TNode value);
}
internal class Neo4jClient.ApiModels.RelationshipApiResponse`1 : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Self>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Start>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <End>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <TypeKey>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private TData <Data>k__BackingField;
    [JsonPropertyAttribute("self")]
public string Self { get; public set; }
    [JsonPropertyAttribute("start")]
public string Start { get; public set; }
    [JsonPropertyAttribute("end")]
public string End { get; public set; }
    [JsonPropertyAttribute("type")]
public string TypeKey { get; public set; }
    [JsonPropertyAttribute("data")]
public TData Data { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Self();
    [CompilerGeneratedAttribute]
public void set_Self(string value);
    [CompilerGeneratedAttribute]
public string get_Start();
    [CompilerGeneratedAttribute]
public void set_Start(string value);
    [CompilerGeneratedAttribute]
public string get_End();
    [CompilerGeneratedAttribute]
public void set_End(string value);
    [CompilerGeneratedAttribute]
public string get_TypeKey();
    [CompilerGeneratedAttribute]
public void set_TypeKey(string value);
    [CompilerGeneratedAttribute]
public TData get_Data();
    [CompilerGeneratedAttribute]
public void set_Data(TData value);
    public RelationshipInstance`1<TData> ToRelationshipInstance(IGraphClient client);
    public RelationshipReference ToRelationshipReference(IGraphClient client);
    private static string GetLastPathSegment(string uri);
}
internal class Neo4jClient.ApiModels.RelationshipTemplate : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <To>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private object <Data>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Type>k__BackingField;
    [JsonPropertyAttribute("to")]
public string To { get; public set; }
    [JsonPropertyAttribute]
public object Data { get; public set; }
    [JsonPropertyAttribute("type")]
public string Type { get; public set; }
    [CompilerGeneratedAttribute]
public string get_To();
    [CompilerGeneratedAttribute]
public void set_To(string value);
    [CompilerGeneratedAttribute]
public object get_Data();
    [CompilerGeneratedAttribute]
public void set_Data(object value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
}
internal class Neo4jClient.ApiModels.RootApiResponse : object {
    private string _transactionFormat;
    private string _transaction;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Batch>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Node>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Relationship>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <NodeIndex>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <RelationshipIndex>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <ReferenceNode>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <ExtensionsInfo>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Neo4jVersion>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Neo4jEdition>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <BoltDirect>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <BoltRouting>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Cluster>k__BackingField;
    [JsonPropertyAttribute("transaction")]
public string Transaction { get; public set; }
    internal string TransactionFormat { get; }
    [JsonPropertyAttribute("batch")]
public string Batch { get; public set; }
    [JsonPropertyAttribute("node")]
public string Node { get; public set; }
    [JsonPropertyAttribute("relationship")]
public string Relationship { get; public set; }
    [JsonPropertyAttribute("node_index")]
public string NodeIndex { get; public set; }
    [JsonPropertyAttribute("relationship_index")]
public string RelationshipIndex { get; public set; }
    [JsonPropertyAttribute("reference_node")]
public string ReferenceNode { get; public set; }
    [JsonPropertyAttribute("extensions_info")]
public string ExtensionsInfo { get; public set; }
    [JsonPropertyAttribute("neo4j_version")]
public string Neo4jVersion { get; public set; }
    [JsonPropertyAttribute("neo4j_edition")]
public string Neo4jEdition { get; public set; }
    [JsonPropertyAttribute("bolt_direct")]
public string BoltDirect { get; public set; }
    [JsonPropertyAttribute("bolt_routing")]
public string BoltRouting { get; public set; }
    [JsonPropertyAttribute("cluster")]
public string Cluster { get; public set; }
    [JsonIgnoreAttribute]
public Version Version { get; }
    public string get_Transaction();
    public void set_Transaction(string value);
    internal string get_TransactionFormat();
    [CompilerGeneratedAttribute]
public string get_Batch();
    [CompilerGeneratedAttribute]
public void set_Batch(string value);
    [CompilerGeneratedAttribute]
public string get_Node();
    [CompilerGeneratedAttribute]
public void set_Node(string value);
    [CompilerGeneratedAttribute]
public string get_Relationship();
    [CompilerGeneratedAttribute]
public void set_Relationship(string value);
    [CompilerGeneratedAttribute]
public string get_NodeIndex();
    [CompilerGeneratedAttribute]
public void set_NodeIndex(string value);
    [CompilerGeneratedAttribute]
public string get_RelationshipIndex();
    [CompilerGeneratedAttribute]
public void set_RelationshipIndex(string value);
    [CompilerGeneratedAttribute]
public string get_ReferenceNode();
    [CompilerGeneratedAttribute]
public void set_ReferenceNode(string value);
    [CompilerGeneratedAttribute]
public string get_ExtensionsInfo();
    [CompilerGeneratedAttribute]
public void set_ExtensionsInfo(string value);
    [CompilerGeneratedAttribute]
public string get_Neo4jVersion();
    [CompilerGeneratedAttribute]
public void set_Neo4jVersion(string value);
    [CompilerGeneratedAttribute]
public string get_Neo4jEdition();
    [CompilerGeneratedAttribute]
public void set_Neo4jEdition(string value);
    [CompilerGeneratedAttribute]
public string get_BoltDirect();
    [CompilerGeneratedAttribute]
public void set_BoltDirect(string value);
    [CompilerGeneratedAttribute]
public string get_BoltRouting();
    [CompilerGeneratedAttribute]
public void set_BoltRouting(string value);
    [CompilerGeneratedAttribute]
public string get_Cluster();
    [CompilerGeneratedAttribute]
public void set_Cluster(string value);
    public Version get_Version();
    internal static Version GetVersion(string version);
    internal void TrimUriFromProperties(string absoluteUri);
}
public class Neo4jClient.BoltGraphClient : object {
    internal static string NotValidForBolt;
    internal static JsonConverter[] DefaultJsonConverters;
    private static DefaultContractResolver DefaultJsonContractResolver;
    private string password;
    private string realm;
    private ITransactionManager`1<BoltResponse> transactionManager;
    private IServerAddressResolver addressResolver;
    private string username;
    private Uri uri;
    private Nullable`1<EncryptionLevel> encryptionLevel;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private IDriver <Driver>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private IExecutionPolicyFactory <PolicyFactory>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private bool <UseDriverDateTypes>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private List`1<JsonConverter> <JsonConverters>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private DefaultContractResolver <JsonContractResolver>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private OperationCompletedEventHandler OperationCompleted;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <DefaultDatabase>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private CypherCapabilities <CypherCapabilities>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private Version <ServerVersion>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private ExecutionConfiguration <ExecutionConfiguration>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private bool <IsConnected>k__BackingField;
    public ITransactionalGraphClient Tx { get; }
    public IDriver Driver { get; public set; }
    internal IServerAddressResolver AddressResolver { get; }
    private IExecutionPolicyFactory PolicyFactory { get; }
    public bool UseDriverDateTypes { get; }
    public ICypherFluentQuery Cypher { get; }
    public List`1<JsonConverter> JsonConverters { get; }
    public DefaultContractResolver JsonContractResolver { get; public set; }
    public ITransaction Transaction { get; }
    public bool InTransaction { get; }
    public Uri TransactionEndpoint { get; }
    public string DefaultDatabase { get; public set; }
    public CypherCapabilities CypherCapabilities { get; private set; }
    public Version ServerVersion { get; private set; }
    [ObsoleteAttribute("This is not available using the BoltGraphClient.")]
public Uri RootEndpoint { get; }
    [ObsoleteAttribute("This is not available using the BoltGraphClient.")]
public Uri BatchEndpoint { get; }
    [ObsoleteAttribute("This is not available using the BoltGraphClient.")]
public Uri CypherEndpoint { get; }
    [ObsoleteAttribute("This is not available using the BoltGraphClient.")]
public ISerializer Serializer { get; }
    public ExecutionConfiguration ExecutionConfiguration { get; }
    public bool IsConnected { get; private set; }
    public BoltGraphClient(Uri uri, IEnumerable`1<Uri> uris, string username, string password, string realm, Nullable`1<EncryptionLevel> encryptionLevel, bool serializeNullValues, bool useDriverDateTypes);
    public BoltGraphClient(Uri uri, string username, string password, string realm, Nullable`1<EncryptionLevel> encryptionLevel, bool serializeNullValues, bool useDriverDateTypes);
    public BoltGraphClient(IEnumerable`1<string> uris, string username, string password, string realm, Nullable`1<EncryptionLevel> encryptionLevel, bool serializeNullValues, bool useDriverDateTypes);
    public BoltGraphClient(string uri, IEnumerable`1<string> uris, string username, string password, string realm, Nullable`1<EncryptionLevel> encryptionLevel, bool serializeNullValues, bool useDriverDateTypes);
    public BoltGraphClient(string uri, string username, string password, string realm, Nullable`1<EncryptionLevel> encryptionLevel, bool serializeNullValues, bool useDriverDateTypes);
    public BoltGraphClient(IDriver driver, bool useDriverDateTypes);
    private static BoltGraphClient();
    public sealed virtual ITransactionalGraphClient get_Tx();
    [CompilerGeneratedAttribute]
public IDriver get_Driver();
    [CompilerGeneratedAttribute]
public void set_Driver(IDriver value);
    internal IServerAddressResolver get_AddressResolver();
    [CompilerGeneratedAttribute]
private IExecutionPolicyFactory get_PolicyFactory();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_UseDriverDateTypes();
    public sealed virtual ICypherFluentQuery get_Cypher();
    private void CheckTransactionEnvironmentWithPolicy(IExecutionPolicy policy);
    protected void Dispose(bool isDisposing);
    public sealed virtual void Dispose();
    [AsyncStateMachineAttribute("Neo4jClient.BoltGraphClient/<ConnectAsync>d__36")]
[DebuggerStepThroughAttribute]
public sealed virtual Task ConnectAsync(NeoServerConfiguration configuration);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<JsonConverter> get_JsonConverters();
    [CompilerGeneratedAttribute]
public sealed virtual DefaultContractResolver get_JsonContractResolver();
    [CompilerGeneratedAttribute]
public sealed virtual void set_JsonContractResolver(DefaultContractResolver value);
    public sealed virtual Uri GetTransactionEndpoint(string database, bool autoCommit);
    [AsyncStateMachineAttribute("Neo4jClient.BoltGraphClient/<Neo4jClient-IRawGraphClient-ExecuteGetCypherResultsAsync>d__45`1")]
[DebuggerStepThroughAttribute]
private sealed virtual override Task`1<IEnumerable`1<TResult>> Neo4jClient.IRawGraphClient.ExecuteGetCypherResultsAsync(CypherQuery query);
    private List`1<TResult> ParseResults(IEnumerable`1<IRecord> result, CypherQuery query);
    [AsyncStateMachineAttribute("Neo4jClient.BoltGraphClient/<Neo4jClient-IRawGraphClient-ExecuteCypherAsync>d__47")]
[DebuggerStepThroughAttribute]
private sealed virtual override Task Neo4jClient.IRawGraphClient.ExecuteCypherAsync(CypherQuery query);
    public sealed virtual ITransaction BeginTransaction();
    public sealed virtual ITransaction BeginTransaction(string bookmark);
    public sealed virtual ITransaction BeginTransaction(IEnumerable`1<string> bookmarks);
    public sealed virtual ITransaction BeginTransaction(TransactionScopeOption scopeOption);
    public sealed virtual ITransaction BeginTransaction(TransactionScopeOption scopeOption, string bookmark);
    public ITransaction BeginTransaction(TransactionScopeOption scopeOption, IEnumerable`1<string> bookmark);
    public sealed virtual ITransaction BeginTransaction(TransactionScopeOption scopeOption, IEnumerable`1<string> bookmarks, string database);
    public sealed virtual ITransaction get_Transaction();
    public sealed virtual bool get_InTransaction();
    public sealed virtual void EndTransaction();
    public sealed virtual Uri get_TransactionEndpoint();
    [CompilerGeneratedAttribute]
public sealed virtual void add_OperationCompleted(OperationCompletedEventHandler value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_OperationCompleted(OperationCompletedEventHandler value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_DefaultDatabase();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DefaultDatabase(string value);
    [CompilerGeneratedAttribute]
public sealed virtual CypherCapabilities get_CypherCapabilities();
    [CompilerGeneratedAttribute]
private void set_CypherCapabilities(CypherCapabilities value);
    [CompilerGeneratedAttribute]
public sealed virtual Version get_ServerVersion();
    [CompilerGeneratedAttribute]
private void set_ServerVersion(Version value);
    public sealed virtual Uri get_RootEndpoint();
    public Uri get_BatchEndpoint();
    public Uri get_CypherEndpoint();
    public sealed virtual ISerializer get_Serializer();
    [CompilerGeneratedAttribute]
public sealed virtual ExecutionConfiguration get_ExecutionConfiguration();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsConnected();
    [CompilerGeneratedAttribute]
private void set_IsConnected(bool value);
    protected void OnOperationCompleted(OperationCompletedEventArgs args);
}
public abstract class Neo4jClient.Cypher.All : object {
    public static long Count();
}
public class Neo4jClient.Cypher.CypherCapabilities : object {
    public static CypherCapabilities Cypher19;
    public static CypherCapabilities Cypher20;
    public static CypherCapabilities Cypher22;
    public static CypherCapabilities Cypher226;
    public static CypherCapabilities Cypher23;
    public static CypherCapabilities Cypher30;
    public static CypherCapabilities Cypher35;
    public static CypherCapabilities Cypher40;
    public static CypherCapabilities Cypher44;
    public static CypherCapabilities Default;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private bool <SupportsMultipleTenancy>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private bool <SupportsShow>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private bool <SupportsPlanner>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private bool <SupportsPropertySuffixesForControllingNullComparisons>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private bool <SupportsNullComparisonsWithIsOperator>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private bool <SupportsStartsWith>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private bool <SupportsStoredProceduresWithTransactionalBatching>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private bool <SupportsRuntime>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private bool <SupportsStoredProcedures>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private bool <AutoRollsBackOnError>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private bool <SupportsHasFunction>k__BackingField;
    public bool SupportsMultipleTenancy { get; public set; }
    public bool SupportsShow { get; public set; }
    public bool SupportsPlanner { get; public set; }
    public bool SupportsPropertySuffixesForControllingNullComparisons { get; public set; }
    public bool SupportsNullComparisonsWithIsOperator { get; public set; }
    public bool SupportsStartsWith { get; public set; }
    public bool SupportsStoredProceduresWithTransactionalBatching { get; public set; }
    public bool SupportsRuntime { get; public set; }
    public bool SupportsStoredProcedures { get; public set; }
    public bool AutoRollsBackOnError { get; public set; }
    public bool SupportsHasFunction { get; public set; }
    public CypherCapabilities(CypherCapabilities cypherCapabilities);
    private static CypherCapabilities();
    [CompilerGeneratedAttribute]
public bool get_SupportsMultipleTenancy();
    [CompilerGeneratedAttribute]
public void set_SupportsMultipleTenancy(bool value);
    [CompilerGeneratedAttribute]
public bool get_SupportsShow();
    [CompilerGeneratedAttribute]
public void set_SupportsShow(bool value);
    [CompilerGeneratedAttribute]
public bool get_SupportsPlanner();
    [CompilerGeneratedAttribute]
public void set_SupportsPlanner(bool value);
    [CompilerGeneratedAttribute]
public bool get_SupportsPropertySuffixesForControllingNullComparisons();
    [CompilerGeneratedAttribute]
public void set_SupportsPropertySuffixesForControllingNullComparisons(bool value);
    [CompilerGeneratedAttribute]
public bool get_SupportsNullComparisonsWithIsOperator();
    [CompilerGeneratedAttribute]
public void set_SupportsNullComparisonsWithIsOperator(bool value);
    [CompilerGeneratedAttribute]
public bool get_SupportsStartsWith();
    [CompilerGeneratedAttribute]
public void set_SupportsStartsWith(bool value);
    [CompilerGeneratedAttribute]
public bool get_SupportsStoredProceduresWithTransactionalBatching();
    [CompilerGeneratedAttribute]
public void set_SupportsStoredProceduresWithTransactionalBatching(bool value);
    [CompilerGeneratedAttribute]
public bool get_SupportsRuntime();
    [CompilerGeneratedAttribute]
public void set_SupportsRuntime(bool value);
    [CompilerGeneratedAttribute]
public bool get_SupportsStoredProcedures();
    [CompilerGeneratedAttribute]
public void set_SupportsStoredProcedures(bool value);
    [CompilerGeneratedAttribute]
public bool get_AutoRollsBackOnError();
    [CompilerGeneratedAttribute]
public void set_AutoRollsBackOnError(bool value);
    [CompilerGeneratedAttribute]
public bool get_SupportsHasFunction();
    [CompilerGeneratedAttribute]
public void set_SupportsHasFunction(bool value);
}
[DebuggerDisplayAttribute("{Query.DebugQueryText}")]
public class Neo4jClient.Cypher.CypherFluentQuery : object {
    private Version minimumCypherParserVersion;
    internal IRawGraphClient Client;
    protected QueryWriter QueryWriter;
    protected bool CamelCaseProperties;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private bool <IncludeQueryStats>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private bool <IsWrite>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private ICypherFluentQueryAdvanced <Advanced>k__BackingField;
    private static string MultipleTenancyExceptionMessage;
    internal static string IdentityLooksLikeAMultiColumnStatementExceptionMessage;
    internal static string IdentityLooksLikeACollectionButTheResultIsNotEnumerableMessage;
    protected bool IncludeQueryStats { get; private set; }
    internal bool IsWrite { get; private set; }
    public string Database { get; public set; }
    public ICypherFluentQuery Read { get; }
    public ICypherFluentQuery WithQueryStats { get; }
    public ICypherFluentQuery Write { get; }
    public CypherQuery Query { get; }
    public ICypherFluentQueryAdvanced Advanced { get; }
    private IGraphClient Neo4jClient.IAttachedReference.Client { get; }
    public CypherFluentQuery(IGraphClient client, bool isWrite, bool includeQueryStats);
    internal CypherFluentQuery(IGraphClient client, QueryWriter queryWriter, bool isWrite, bool includeQueryStats);
    [CompilerGeneratedAttribute]
protected bool get_IncludeQueryStats();
    [CompilerGeneratedAttribute]
private void set_IncludeQueryStats(bool value);
    [CompilerGeneratedAttribute]
internal bool get_IsWrite();
    [CompilerGeneratedAttribute]
private void set_IsWrite(bool value);
    public string get_Database();
    public void set_Database(string value);
    public sealed virtual ICypherFluentQuery Show(string command);
    public sealed virtual ICypherFluentQuery WithDatabase(string databaseName);
    public sealed virtual ICypherFluentQuery Call(Func`1<ICypherFluentQuery`1<T>> subQuery);
    public sealed virtual ICypherFluentQuery InTransactions(Nullable`1<int> rows);
    public sealed virtual ICypherFluentQuery get_Read();
    public sealed virtual ICypherFluentQuery get_WithQueryStats();
    public sealed virtual ICypherFluentQuery get_Write();
    private IOrderedCypherFluentQuery MutateOrdered(Action`1<QueryWriter> callback);
    protected IOrderedCypherFluentQuery`1<TResult> MutateOrdered(Action`1<QueryWriter> callback);
    private ICypherFluentQuery Mutate(Action`1<QueryWriter> callback);
    protected ICypherFluentQuery`1<TResult> Mutate(Action`1<QueryWriter> callback);
    public sealed virtual ICypherFluentQuery WithParam(string key, object value);
    public sealed virtual ICypherFluentQuery WithParams(IDictionary`2<string, object> parameters);
    public sealed virtual ICypherFluentQuery WithParams(object parameters);
    public sealed virtual ICypherFluentQuery Use(string database);
    public sealed virtual ICypherFluentQuery Match(String[] matchText);
    public sealed virtual ICypherFluentQuery UsingIndex(string index);
    public sealed virtual ICypherFluentQuery OptionalMatch(string pattern);
    public sealed virtual ICypherFluentQuery Merge(string mergeText);
    public sealed virtual ICypherFluentQuery OnCreate();
    public sealed virtual ICypherFluentQuery OnMatch();
    public sealed virtual ICypherFluentQuery Call(string storedProcedureText);
    private ICypherFluentQuery Call(string storedProcedureText, IDictionary`2<string, object> parameters);
    private static IDictionary`2<string, object> RebaseParameters(string storedProcedureText, IEnumerable`1<KeyValuePair`2<string, object>> parametersIn, IDictionary`2<string, object> queryQueryParameters, String& newStoredProcText, int rebaseFrom);
    public sealed virtual ICypherFluentQuery Yield(string yieldText);
    public sealed virtual ICypherFluentQuery CreateUnique(string createUniqueText);
    public sealed virtual ICypherFluentQuery Create(string createText);
    public ICypherFluentQuery Create(string identity, TNode node);
    public sealed virtual ICypherFluentQuery CreateUniqueConstraint(string identity, string property);
    public sealed virtual ICypherFluentQuery DropUniqueConstraint(string identity, string property);
    public sealed virtual ICypherFluentQuery Delete(string identities);
    public sealed virtual ICypherFluentQuery DetachDelete(string identities);
    public sealed virtual ICypherFluentQuery Drop(string dropText);
    public sealed virtual ICypherFluentQuery Set(string setText);
    public sealed virtual ICypherFluentQuery Remove(string removeText);
    public sealed virtual ICypherFluentQuery ForEach(string text);
    public sealed virtual ICypherFluentQuery LoadCsv(Uri fileUri, string identifier, bool withHeaders, string fieldTerminator, Nullable`1<int> periodicCommit);
    public sealed virtual ICypherFluentQuery Unwind(string collectionName, string columnName);
    public sealed virtual ICypherFluentQuery Unwind(IEnumerable collection, string identity);
    public sealed virtual ICypherFluentQuery Union();
    public sealed virtual ICypherFluentQuery UnionAll();
    public sealed virtual ICypherFluentQuery Limit(Nullable`1<int> limit);
    public sealed virtual ICypherFluentQuery Skip(Nullable`1<int> skip);
    public sealed virtual IOrderedCypherFluentQuery OrderBy(String[] properties);
    public sealed virtual IOrderedCypherFluentQuery OrderByDescending(String[] properties);
    public sealed virtual IOrderedCypherFluentQuery ThenBy(String[] properties);
    public sealed virtual IOrderedCypherFluentQuery ThenByDescending(String[] properties);
    public sealed virtual CypherQuery get_Query();
    public sealed virtual Task ExecuteWithoutResultsAsync();
    [CompilerGeneratedAttribute]
public sealed virtual ICypherFluentQueryAdvanced get_Advanced();
    private sealed virtual override IGraphClient Neo4jClient.IAttachedReference.get_Client();
    public sealed virtual ICypherFluentQuery ParserVersion(string version);
    public sealed virtual ICypherFluentQuery ParserVersion(Version version);
    public sealed virtual ICypherFluentQuery ParserVersion(int major, int minor);
    public sealed virtual ICypherFluentQuery Runtime(string runtime);
    public sealed virtual ICypherFluentQuery Runtime(CypherRuntime runtime);
    public sealed virtual ICypherFluentQuery Planner(string planner);
    public sealed virtual ICypherFluentQuery Planner(CypherPlanner planner);
    public sealed virtual ICypherFluentQuery MaxExecutionTime(int milliseconds);
    public sealed virtual ICypherFluentQuery CustomHeaders(NameValueCollection headers);
    public static string ApplyCamelCase(bool isCamelCase, string propertyName);
    public sealed virtual ICypherFluentQuery WithIdentifier(string identifier);
    private string DatabaseAdministrationChecks(string databaseName, bool ignoreDatabaseName);
    public sealed virtual ICypherFluentQuery CreateDatabase(string databaseName, bool ifNotExists);
    public sealed virtual ICypherFluentQuery CreateOrReplaceDatabase(string databaseName);
    public sealed virtual ICypherFluentQuery DropDatabase(string databaseName, bool dumpData);
    public sealed virtual ICypherFluentQuery DropDatabaseIfExists(string databaseName, bool dumpData);
    public sealed virtual ICypherFluentQuery StartDatabase(string databaseName);
    public sealed virtual ICypherFluentQuery StopDatabase(string databaseName);
    public sealed virtual ICypherFluentQuery`1<TResult> Return(string identity);
    public sealed virtual ICypherFluentQuery`1<TResult> ReturnDistinct(string identity);
    private ICypherFluentQuery`1<TResult> Return(LambdaExpression expression);
    private ICypherFluentQuery`1<TResult> ReturnDistinct(LambdaExpression expression);
    public sealed virtual ICypherFluentQuery`1<TResult> Return(Expression`1<Func`1<TResult>> expression);
    public sealed virtual ICypherFluentQuery`1<TResult> Return(Expression`1<Func`2<ICypherResultItem, TResult>> expression);
    public sealed virtual ICypherFluentQuery`1<TResult> Return(Expression`1<Func`3<ICypherResultItem, ICypherResultItem, TResult>> expression);
    public sealed virtual ICypherFluentQuery`1<TResult> Return(Expression`1<Func`4<ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public sealed virtual ICypherFluentQuery`1<TResult> Return(Expression`1<Func`5<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public sealed virtual ICypherFluentQuery`1<TResult> Return(Expression`1<Func`6<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public sealed virtual ICypherFluentQuery`1<TResult> Return(Expression`1<Func`7<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public sealed virtual ICypherFluentQuery`1<TResult> Return(Expression`1<Func`8<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public sealed virtual ICypherFluentQuery`1<TResult> Return(Expression`1<Func`9<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public sealed virtual ICypherFluentQuery`1<TResult> Return(Expression`1<Func`10<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public sealed virtual ICypherFluentQuery`1<TResult> Return(Expression`1<Func`11<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public sealed virtual ICypherFluentQuery`1<TResult> Return(Expression`1<Func`12<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public sealed virtual ICypherFluentQuery`1<TResult> Return(Expression`1<Func`13<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public sealed virtual ICypherFluentQuery`1<TResult> Return(Expression`1<Func`14<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public sealed virtual ICypherFluentQuery`1<TResult> Return(Expression`1<Func`15<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public sealed virtual ICypherFluentQuery`1<TResult> Return(Expression`1<Func`16<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public sealed virtual ICypherFluentQuery`1<TResult> Return(Expression`1<Func`17<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public sealed virtual ICypherFluentQuery`1<TResult> ReturnDistinct(Expression`1<Func`2<ICypherResultItem, TResult>> expression);
    public sealed virtual ICypherFluentQuery`1<TResult> ReturnDistinct(Expression`1<Func`3<ICypherResultItem, ICypherResultItem, TResult>> expression);
    public sealed virtual ICypherFluentQuery`1<TResult> ReturnDistinct(Expression`1<Func`4<ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public sealed virtual ICypherFluentQuery`1<TResult> ReturnDistinct(Expression`1<Func`5<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public sealed virtual ICypherFluentQuery`1<TResult> ReturnDistinct(Expression`1<Func`6<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public sealed virtual ICypherFluentQuery`1<TResult> ReturnDistinct(Expression`1<Func`7<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public sealed virtual ICypherFluentQuery`1<TResult> ReturnDistinct(Expression`1<Func`8<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public sealed virtual ICypherFluentQuery`1<TResult> ReturnDistinct(Expression`1<Func`9<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public sealed virtual ICypherFluentQuery`1<TResult> ReturnDistinct(Expression`1<Func`10<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public sealed virtual ICypherFluentQuery`1<TResult> ReturnDistinct(Expression`1<Func`11<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public sealed virtual ICypherFluentQuery`1<TResult> ReturnDistinct(Expression`1<Func`12<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public sealed virtual ICypherFluentQuery`1<TResult> ReturnDistinct(Expression`1<Func`13<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public sealed virtual ICypherFluentQuery`1<TResult> ReturnDistinct(Expression`1<Func`14<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public sealed virtual ICypherFluentQuery`1<TResult> ReturnDistinct(Expression`1<Func`15<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public sealed virtual ICypherFluentQuery`1<TResult> ReturnDistinct(Expression`1<Func`16<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public sealed virtual ICypherFluentQuery`1<TResult> ReturnDistinct(Expression`1<Func`17<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    internal ICypherFluentQuery Where(LambdaExpression expression);
    internal ICypherFluentQuery AndWhere(LambdaExpression expression);
    internal ICypherFluentQuery OrWhere(LambdaExpression expression);
    public sealed virtual ICypherFluentQuery Where(string text);
    public sealed virtual ICypherFluentQuery Where(Expression`1<Func`2<T1, bool>> expression);
    public sealed virtual ICypherFluentQuery Where(Expression`1<Func`3<T1, T2, bool>> expression);
    public sealed virtual ICypherFluentQuery Where(Expression`1<Func`4<T1, T2, T3, bool>> expression);
    public sealed virtual ICypherFluentQuery Where(Expression`1<Func`5<T1, T2, T3, T4, bool>> expression);
    public sealed virtual ICypherFluentQuery Where(Expression`1<Func`6<T1, T2, T3, T4, T5, bool>> expression);
    public sealed virtual ICypherFluentQuery Where(Expression`1<Func`7<T1, T2, T3, T4, T5, T6, bool>> expression);
    public sealed virtual ICypherFluentQuery Where(Expression`1<Func`8<T1, T2, T3, T4, T5, T6, T7, bool>> expression);
    public sealed virtual ICypherFluentQuery Where(Expression`1<Func`9<T1, T2, T3, T4, T5, T6, T7, T8, bool>> expression);
    public sealed virtual ICypherFluentQuery Where(Expression`1<Func`10<T1, T2, T3, T4, T5, T6, T7, T8, T9, bool>> expression);
    public sealed virtual ICypherFluentQuery Where(Expression`1<Func`11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, bool>> expression);
    public sealed virtual ICypherFluentQuery Where(Expression`1<Func`12<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, bool>> expression);
    public sealed virtual ICypherFluentQuery Where(Expression`1<Func`13<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, bool>> expression);
    public sealed virtual ICypherFluentQuery Where(Expression`1<Func`14<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, bool>> expression);
    public sealed virtual ICypherFluentQuery Where(Expression`1<Func`15<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, bool>> expression);
    public sealed virtual ICypherFluentQuery Where(Expression`1<Func`16<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, bool>> expression);
    public sealed virtual ICypherFluentQuery Where(Expression`1<Func`17<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, bool>> expression);
    public sealed virtual ICypherFluentQuery AndWhere(string text);
    public sealed virtual ICypherFluentQuery AndWhere(Expression`1<Func`2<T1, bool>> expression);
    public sealed virtual ICypherFluentQuery AndWhere(Expression`1<Func`3<T1, T2, bool>> expression);
    public sealed virtual ICypherFluentQuery AndWhere(Expression`1<Func`4<T1, T2, T3, bool>> expression);
    public sealed virtual ICypherFluentQuery AndWhere(Expression`1<Func`5<T1, T2, T3, T4, bool>> expression);
    public sealed virtual ICypherFluentQuery AndWhere(Expression`1<Func`6<T1, T2, T3, T4, T5, bool>> expression);
    public sealed virtual ICypherFluentQuery AndWhere(Expression`1<Func`7<T1, T2, T3, T4, T5, T6, bool>> expression);
    public sealed virtual ICypherFluentQuery AndWhere(Expression`1<Func`8<T1, T2, T3, T4, T5, T6, T7, bool>> expression);
    public sealed virtual ICypherFluentQuery AndWhere(Expression`1<Func`9<T1, T2, T3, T4, T5, T6, T7, T8, bool>> expression);
    public sealed virtual ICypherFluentQuery AndWhere(Expression`1<Func`10<T1, T2, T3, T4, T5, T6, T7, T8, T9, bool>> expression);
    public sealed virtual ICypherFluentQuery AndWhere(Expression`1<Func`11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, bool>> expression);
    public sealed virtual ICypherFluentQuery AndWhere(Expression`1<Func`12<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, bool>> expression);
    public sealed virtual ICypherFluentQuery AndWhere(Expression`1<Func`13<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, bool>> expression);
    public sealed virtual ICypherFluentQuery AndWhere(Expression`1<Func`14<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, bool>> expression);
    public sealed virtual ICypherFluentQuery AndWhere(Expression`1<Func`15<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, bool>> expression);
    public sealed virtual ICypherFluentQuery AndWhere(Expression`1<Func`16<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, bool>> expression);
    public sealed virtual ICypherFluentQuery AndWhere(Expression`1<Func`17<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, bool>> expression);
    public sealed virtual ICypherFluentQuery OrWhere(string text);
    public sealed virtual ICypherFluentQuery OrWhere(Expression`1<Func`2<T1, bool>> expression);
    public sealed virtual ICypherFluentQuery OrWhere(Expression`1<Func`3<T1, T2, bool>> expression);
    public sealed virtual ICypherFluentQuery OrWhere(Expression`1<Func`4<T1, T2, T3, bool>> expression);
    public sealed virtual ICypherFluentQuery OrWhere(Expression`1<Func`5<T1, T2, T3, T4, bool>> expression);
    public sealed virtual ICypherFluentQuery OrWhere(Expression`1<Func`6<T1, T2, T3, T4, T5, bool>> expression);
    public sealed virtual ICypherFluentQuery OrWhere(Expression`1<Func`7<T1, T2, T3, T4, T5, T6, bool>> expression);
    public sealed virtual ICypherFluentQuery OrWhere(Expression`1<Func`8<T1, T2, T3, T4, T5, T6, T7, bool>> expression);
    public sealed virtual ICypherFluentQuery OrWhere(Expression`1<Func`9<T1, T2, T3, T4, T5, T6, T7, T8, bool>> expression);
    public sealed virtual ICypherFluentQuery OrWhere(Expression`1<Func`10<T1, T2, T3, T4, T5, T6, T7, T8, T9, bool>> expression);
    public sealed virtual ICypherFluentQuery OrWhere(Expression`1<Func`11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, bool>> expression);
    public sealed virtual ICypherFluentQuery OrWhere(Expression`1<Func`12<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, bool>> expression);
    public sealed virtual ICypherFluentQuery OrWhere(Expression`1<Func`13<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, bool>> expression);
    public sealed virtual ICypherFluentQuery OrWhere(Expression`1<Func`14<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, bool>> expression);
    public sealed virtual ICypherFluentQuery OrWhere(Expression`1<Func`15<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, bool>> expression);
    public sealed virtual ICypherFluentQuery OrWhere(Expression`1<Func`16<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, bool>> expression);
    public sealed virtual ICypherFluentQuery OrWhere(Expression`1<Func`17<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, bool>> expression);
    internal ICypherFluentQuery WhereIf(bool condition, LambdaExpression expression);
    internal ICypherFluentQuery AndWhereIf(bool condition, LambdaExpression expression);
    internal ICypherFluentQuery OrWhereIf(bool condition, LambdaExpression expression);
    public sealed virtual ICypherFluentQuery WhereIf(bool condition, string text);
    public sealed virtual ICypherFluentQuery WhereIf(bool condition, Expression`1<Func`2<T1, bool>> expression);
    public sealed virtual ICypherFluentQuery WhereIf(bool condition, Expression`1<Func`3<T1, T2, bool>> expression);
    public sealed virtual ICypherFluentQuery WhereIf(bool condition, Expression`1<Func`4<T1, T2, T3, bool>> expression);
    public sealed virtual ICypherFluentQuery WhereIf(bool condition, Expression`1<Func`5<T1, T2, T3, T4, bool>> expression);
    public sealed virtual ICypherFluentQuery WhereIf(bool condition, Expression`1<Func`6<T1, T2, T3, T4, T5, bool>> expression);
    public sealed virtual ICypherFluentQuery WhereIf(bool condition, Expression`1<Func`7<T1, T2, T3, T4, T5, T6, bool>> expression);
    public sealed virtual ICypherFluentQuery WhereIf(bool condition, Expression`1<Func`8<T1, T2, T3, T4, T5, T6, T7, bool>> expression);
    public sealed virtual ICypherFluentQuery WhereIf(bool condition, Expression`1<Func`9<T1, T2, T3, T4, T5, T6, T7, T8, bool>> expression);
    public sealed virtual ICypherFluentQuery WhereIf(bool condition, Expression`1<Func`10<T1, T2, T3, T4, T5, T6, T7, T8, T9, bool>> expression);
    public sealed virtual ICypherFluentQuery WhereIf(bool condition, Expression`1<Func`11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, bool>> expression);
    public sealed virtual ICypherFluentQuery WhereIf(bool condition, Expression`1<Func`12<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, bool>> expression);
    public sealed virtual ICypherFluentQuery WhereIf(bool condition, Expression`1<Func`13<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, bool>> expression);
    public sealed virtual ICypherFluentQuery WhereIf(bool condition, Expression`1<Func`14<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, bool>> expression);
    public sealed virtual ICypherFluentQuery WhereIf(bool condition, Expression`1<Func`15<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, bool>> expression);
    public sealed virtual ICypherFluentQuery WhereIf(bool condition, Expression`1<Func`16<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, bool>> expression);
    public sealed virtual ICypherFluentQuery WhereIf(bool condition, Expression`1<Func`17<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, bool>> expression);
    public sealed virtual ICypherFluentQuery AndWhereIf(bool condition, string text);
    public sealed virtual ICypherFluentQuery AndWhereIf(bool condition, Expression`1<Func`2<T1, bool>> expression);
    public sealed virtual ICypherFluentQuery AndWhereIf(bool condition, Expression`1<Func`3<T1, T2, bool>> expression);
    public sealed virtual ICypherFluentQuery AndWhereIf(bool condition, Expression`1<Func`4<T1, T2, T3, bool>> expression);
    public sealed virtual ICypherFluentQuery AndWhereIf(bool condition, Expression`1<Func`5<T1, T2, T3, T4, bool>> expression);
    public sealed virtual ICypherFluentQuery AndWhereIf(bool condition, Expression`1<Func`6<T1, T2, T3, T4, T5, bool>> expression);
    public sealed virtual ICypherFluentQuery AndWhereIf(bool condition, Expression`1<Func`7<T1, T2, T3, T4, T5, T6, bool>> expression);
    public sealed virtual ICypherFluentQuery AndWhereIf(bool condition, Expression`1<Func`8<T1, T2, T3, T4, T5, T6, T7, bool>> expression);
    public sealed virtual ICypherFluentQuery AndWhereIf(bool condition, Expression`1<Func`9<T1, T2, T3, T4, T5, T6, T7, T8, bool>> expression);
    public sealed virtual ICypherFluentQuery AndWhereIf(bool condition, Expression`1<Func`10<T1, T2, T3, T4, T5, T6, T7, T8, T9, bool>> expression);
    public sealed virtual ICypherFluentQuery AndWhereIf(bool condition, Expression`1<Func`11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, bool>> expression);
    public sealed virtual ICypherFluentQuery AndWhereIf(bool condition, Expression`1<Func`12<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, bool>> expression);
    public sealed virtual ICypherFluentQuery AndWhereIf(bool condition, Expression`1<Func`13<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, bool>> expression);
    public sealed virtual ICypherFluentQuery AndWhereIf(bool condition, Expression`1<Func`14<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, bool>> expression);
    public sealed virtual ICypherFluentQuery AndWhereIf(bool condition, Expression`1<Func`15<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, bool>> expression);
    public sealed virtual ICypherFluentQuery AndWhereIf(bool condition, Expression`1<Func`16<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, bool>> expression);
    public sealed virtual ICypherFluentQuery AndWhereIf(bool condition, Expression`1<Func`17<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, bool>> expression);
    public sealed virtual ICypherFluentQuery OrWhereIf(bool condition, string text);
    public sealed virtual ICypherFluentQuery OrWhereIf(bool condition, Expression`1<Func`2<T1, bool>> expression);
    public sealed virtual ICypherFluentQuery OrWhereIf(bool condition, Expression`1<Func`3<T1, T2, bool>> expression);
    public sealed virtual ICypherFluentQuery OrWhereIf(bool condition, Expression`1<Func`4<T1, T2, T3, bool>> expression);
    public sealed virtual ICypherFluentQuery OrWhereIf(bool condition, Expression`1<Func`5<T1, T2, T3, T4, bool>> expression);
    public sealed virtual ICypherFluentQuery OrWhereIf(bool condition, Expression`1<Func`6<T1, T2, T3, T4, T5, bool>> expression);
    public sealed virtual ICypherFluentQuery OrWhereIf(bool condition, Expression`1<Func`7<T1, T2, T3, T4, T5, T6, bool>> expression);
    public sealed virtual ICypherFluentQuery OrWhereIf(bool condition, Expression`1<Func`8<T1, T2, T3, T4, T5, T6, T7, bool>> expression);
    public sealed virtual ICypherFluentQuery OrWhereIf(bool condition, Expression`1<Func`9<T1, T2, T3, T4, T5, T6, T7, T8, bool>> expression);
    public sealed virtual ICypherFluentQuery OrWhereIf(bool condition, Expression`1<Func`10<T1, T2, T3, T4, T5, T6, T7, T8, T9, bool>> expression);
    public sealed virtual ICypherFluentQuery OrWhereIf(bool condition, Expression`1<Func`11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, bool>> expression);
    public sealed virtual ICypherFluentQuery OrWhereIf(bool condition, Expression`1<Func`12<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, bool>> expression);
    public sealed virtual ICypherFluentQuery OrWhereIf(bool condition, Expression`1<Func`13<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, bool>> expression);
    public sealed virtual ICypherFluentQuery OrWhereIf(bool condition, Expression`1<Func`14<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, bool>> expression);
    public sealed virtual ICypherFluentQuery OrWhereIf(bool condition, Expression`1<Func`15<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, bool>> expression);
    public sealed virtual ICypherFluentQuery OrWhereIf(bool condition, Expression`1<Func`16<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, bool>> expression);
    public sealed virtual ICypherFluentQuery OrWhereIf(bool condition, Expression`1<Func`17<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, bool>> expression);
    public sealed virtual ICypherFluentQuery With(string withText);
    private ICypherFluentQuery`1<TResult> With(LambdaExpression expression);
    public sealed virtual ICypherFluentQuery With(Expression`1<Func`2<ICypherResultItem, TResult>> expression);
    public sealed virtual ICypherFluentQuery With(Expression`1<Func`3<ICypherResultItem, ICypherResultItem, TResult>> expression);
    public sealed virtual ICypherFluentQuery With(Expression`1<Func`4<ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public sealed virtual ICypherFluentQuery With(Expression`1<Func`5<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public sealed virtual ICypherFluentQuery With(Expression`1<Func`6<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public sealed virtual ICypherFluentQuery With(Expression`1<Func`7<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public sealed virtual ICypherFluentQuery With(Expression`1<Func`8<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public sealed virtual ICypherFluentQuery With(Expression`1<Func`9<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public sealed virtual ICypherFluentQuery With(Expression`1<Func`10<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public sealed virtual ICypherFluentQuery With(Expression`1<Func`11<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public sealed virtual ICypherFluentQuery With(Expression`1<Func`12<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public sealed virtual ICypherFluentQuery With(Expression`1<Func`13<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public sealed virtual ICypherFluentQuery With(Expression`1<Func`14<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public sealed virtual ICypherFluentQuery With(Expression`1<Func`15<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public sealed virtual ICypherFluentQuery With(Expression`1<Func`16<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public sealed virtual ICypherFluentQuery With(Expression`1<Func`17<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public sealed virtual ICypherFluentQuery With(Expression`1<Func`1<TResult>> expression);
    public sealed virtual ICypherFluentQuery WithBookmark(string bookmark);
    public sealed virtual ICypherFluentQuery WithBookmarks(String[] bookmarks);
}
[DebuggerDisplayAttribute("{Query.DebugQueryText}")]
public class Neo4jClient.Cypher.CypherFluentQuery`1 : CypherFluentQuery {
    public Task`1<IEnumerable`1<TResult>> ResultsAsync { get; }
    public CypherFluentQuery`1(IGraphClient client, QueryWriter writer, bool isWrite, bool includeQueryStats);
    public sealed virtual ICypherFluentQuery`1<TResult> Unwind(string collectionName, string columnName);
    public sealed virtual ICypherFluentQuery`1<TResult> Limit(Nullable`1<int> limit);
    public sealed virtual ICypherFluentQuery`1<TResult> Skip(Nullable`1<int> skip);
    public sealed virtual IOrderedCypherFluentQuery`1<TResult> OrderBy(String[] properties);
    public sealed virtual IOrderedCypherFluentQuery`1<TResult> OrderByDescending(String[] properties);
    public sealed virtual IOrderedCypherFluentQuery`1<TResult> ThenBy(String[] properties);
    public sealed virtual IOrderedCypherFluentQuery`1<TResult> ThenByDescending(String[] properties);
    public sealed virtual Task`1<IEnumerable`1<TResult>> get_ResultsAsync();
}
public class Neo4jClient.Cypher.CypherFluentQueryAdvanced : object {
    private IGraphClient client;
    private QueryWriter queryWriter;
    private bool isWrite;
    private bool includeQueryStats;
    public CypherFluentQueryAdvanced(IGraphClient client, QueryWriter queryWriter, bool isWrite, bool includeQueryStats);
    public sealed virtual ICypherFluentQuery`1<TResult> Return(ReturnExpression returnExpression);
    public sealed virtual ICypherFluentQuery`1<TResult> ReturnDistinct(ReturnExpression returnExpression);
    public sealed virtual ICypherFluentQuery`1<TResult> SetClient(IGraphClient graphClient);
    public sealed virtual ICypherFluentQuery SetClient(IGraphClient graphClient);
    protected ICypherFluentQuery`1<TResult> Mutate(Action`1<QueryWriter> callback);
}
public enum Neo4jClient.Cypher.CypherPlanner : Enum {
    public int value__;
    public static CypherPlanner Rule;
    public static CypherPlanner CostIdp;
    public static CypherPlanner CostGreedy;
}
[DebuggerDisplayAttribute("{DebugQueryText}")]
public class Neo4jClient.Cypher.CypherQuery : object {
    private string queryText;
    private IDictionary`2<string, object> queryParameters;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private bool <IsWrite>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private bool <IncludeQueryStats>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Identifier>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private IEnumerable`1<Bookmark> <Bookmarks>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private CypherResultFormat <ResultFormat>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private CypherResultMode <ResultMode>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private IContractResolver <JsonContractResolver>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Database>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private Nullable`1<int> <MaxExecutionTime>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private NameValueCollection <CustomHeaders>k__BackingField;
    public bool IsWrite { get; }
    public bool IncludeQueryStats { get; }
    public string Identifier { get; public set; }
    public IEnumerable`1<Bookmark> Bookmarks { get; public set; }
    public IDictionary`2<string, object> QueryParameters { get; }
    public string QueryText { get; }
    public CypherResultFormat ResultFormat { get; }
    public CypherResultMode ResultMode { get; }
    public IContractResolver JsonContractResolver { get; }
    public string Database { get; }
    public Nullable`1<int> MaxExecutionTime { get; }
    public NameValueCollection CustomHeaders { get; }
    public string DebugQueryText { get; }
    public CypherQuery(string queryText, IDictionary`2<string, object> queryParameters, CypherResultMode resultMode, string database, IContractResolver contractResolver);
    public CypherQuery(string queryText, IDictionary`2<string, object> queryParameters, CypherResultMode resultMode, CypherResultFormat resultFormat, string database, IContractResolver contractResolver, Nullable`1<int> maxExecutionTime, NameValueCollection customHeaders, bool isWrite, IEnumerable`1<Bookmark> bookmarks, string identifier, bool includeQueryStats);
    [CompilerGeneratedAttribute]
public bool get_IsWrite();
    [CompilerGeneratedAttribute]
public bool get_IncludeQueryStats();
    [CompilerGeneratedAttribute]
public string get_Identifier();
    [CompilerGeneratedAttribute]
public void set_Identifier(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<Bookmark> get_Bookmarks();
    [CompilerGeneratedAttribute]
public void set_Bookmarks(IEnumerable`1<Bookmark> value);
    public IDictionary`2<string, object> get_QueryParameters();
    public string get_QueryText();
    [CompilerGeneratedAttribute]
public CypherResultFormat get_ResultFormat();
    [CompilerGeneratedAttribute]
public CypherResultMode get_ResultMode();
    [CompilerGeneratedAttribute]
public IContractResolver get_JsonContractResolver();
    [CompilerGeneratedAttribute]
public string get_Database();
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaxExecutionTime();
    [CompilerGeneratedAttribute]
public NameValueCollection get_CustomHeaders();
    private CustomJsonSerializer BuildSerializer();
    public string get_DebugQueryText();
}
public enum Neo4jClient.Cypher.CypherResultFormat : Enum {
    public int value__;
    public static CypherResultFormat Rest;
    public static CypherResultFormat Transactional;
    public static CypherResultFormat DependsOnEnvironment;
}
public enum Neo4jClient.Cypher.CypherResultMode : Enum {
    public int value__;
    public static CypherResultMode Set;
    public static CypherResultMode Projection;
}
public class Neo4jClient.Cypher.CypherReturnExpressionBuilder : object {
    internal static string ReturnExpressionCannotBeSerializedToCypherExceptionMessage;
    internal static string ReturnExpressionCannotBeStruct;
    internal static string ReturnExpressionShouldBeOneOfExceptionMessage;
    internal static string ReturnAsTypeShouldBeOneOfExceptionMessage;
    internal static string CollectAsShouldNotBeNodeTExceptionMessage;
    internal static string CollectAsDistinctShouldNotBeNodeTExceptionMessage;
    internal static string UnsupportedBinaryExpressionExceptionMessageFormat;
    internal static string UnsupportedBinaryExpressionComparisonExceptionMessage;
    public static ReturnExpression BuildText(LambdaExpression expression, CypherCapabilities capabilities, IEnumerable`1<JsonConverter> jsonConvertersThatTheDeserializerWillUse, bool camelCaseProperties);
    private static ExpressionBuild BuildText(MemberInitExpression expression, CypherCapabilities capabilities, IEnumerable`1<JsonConverter> jsonConvertersThatTheDeserializerWillUse, bool camelCaseProperties);
    private static ExpressionBuild BuildText(NewExpression expression, CypherCapabilities capabilities, IEnumerable`1<JsonConverter> jsonConvertersThatTheDeserializerWillUse, bool camelCaseProperties);
    private static ExpressionBuild BuildText(MethodCallExpression expression, CypherCapabilities capabilities, IEnumerable`1<JsonConverter> jsonConvertersThatTheDeserializerWillUse);
    private static ExpressionBuild BuildText(MemberExpression expression, CypherCapabilities capabilities, IEnumerable`1<JsonConverter> jsonConvertersThatTheDeserializerWillUse, bool camelCaseProperties);
    private static ExpressionBuild BuildStatement(Expression sourceExpression, MemberInfo targetMember, CypherCapabilities capabilities, IEnumerable`1<JsonConverter> jsonConvertersThatTheDeserializerWillUse, bool camelCaseProperties);
    private static ExpressionBuild BuildStatement(BinaryExpression binaryExpression, MemberInfo targetMember);
    private static ExpressionBuild BuildStatement(MemberExpression memberExpression, MemberInfo targetMember, CypherCapabilities capabilities, bool camelCaseProperties);
    private static string ParseMemberName(MemberInfo memberInfo, bool camelCaseProperties);
    private static ExpressionBuild BuildStatement(MethodCallExpression expression, MemberInfo targetMember, CypherCapabilities capabilities, IEnumerable`1<JsonConverter> jsonConvertersThatTheDeserializerWillUse);
    private static ExpressionBuild BuildStatement(MethodCallExpression expression, bool isNullable, CypherCapabilities capabilities, IEnumerable`1<JsonConverter> jsonConvertersThatTheDeserializerWillUse);
    private static ExpressionBuild BuildCypherResultItemStatement(MethodCallExpression expression, bool isNullable, CypherCapabilities capabilities, IEnumerable`1<JsonConverter> jsonConvertersThatTheDeserializerWillUse);
    private static bool IsNodeOrRelationshipOfT(Type type);
    private static bool IsSupportedForAs(Type type, IEnumerable`1<JsonConverter> jsonConvertersThatTheDeserializerWillUse);
    private static bool IsSupportedElementForAs(Type type, IList`1<JsonConverter> jsonConvertersThatTheDeserializerWillUse);
    private static WrappedFunctionCall BuildWrappedFunction(MethodCallExpression methodCallExpression);
    private static ExpressionBuild BuildCypherAllStatement(MethodCallExpression expression);
    private static ExpressionBuild BuildCypherReturnStatement(MethodCallExpression expression);
    private static Expression UnwrapImplicitCasts(Expression expression);
    private static bool IsMemberNullable(MemberInfo memberInfo);
    private static bool IsMemberNullable(string memberName, Type declaringType);
    private static bool IsTypeNullable(Type type);
}
public enum Neo4jClient.Cypher.CypherRuntime : Enum {
    public int value__;
    public static CypherRuntime Slotted;
    public static CypherRuntime Pipelined;
    public static CypherRuntime Parallel;
}
public class Neo4jClient.Cypher.CypherWhereExpressionBuilder : object {
    public static string BuildText(LambdaExpression expression, Func`2<object, string> createParameterCallback, CypherCapabilities capabilities, bool camelCaseProperties);
}
internal class Neo4jClient.Cypher.CypherWhereExpressionVisitor : ExpressionVisitor {
    private static string NotEqual;
    private static string Equal;
    private static string GreaterThan;
    private static string GreaterThanOrEqual;
    private static string LessThan;
    private static string LessThanOrEqual;
    private Dictionary`2<string, Func`2<MethodCallExpression, Expression>> supportedMethodCalls;
    private string lastWrittenMemberName;
    private Func`2<object, string> createParameterCallback;
    private CypherCapabilities capabilities;
    private bool camelCaseProperties;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private StringBuilder <TextOutput>k__BackingField;
    public StringBuilder TextOutput { get; }
    public CypherWhereExpressionVisitor(Func`2<object, string> createParameterCallback, CypherCapabilities capabilities, bool camelCaseProperties);
    [CompilerGeneratedAttribute]
public StringBuilder get_TextOutput();
    protected virtual Expression VisitMethodCall(MethodCallExpression node);
    private Expression VisitInMethod(MethodCallExpression node);
    private Expression VisitNotInMethod(MethodCallExpression node);
    private Expression VisitStartsWithMethod(MethodCallExpression node);
    private Expression VisitContainsMethod(MethodCallExpression node);
    private Expression VisitEndsWithMethod(MethodCallExpression node);
    protected virtual Expression VisitBinary(BinaryExpression node);
    protected virtual Expression VisitConstant(ConstantExpression node);
    protected virtual Expression VisitMember(MemberExpression node);
    private void VisitStaticMember(MemberExpression node);
    private void VisitParameterMember(MemberExpression node);
    private void VisitConstantMember(MemberExpression node);
    private static object GetConstantExpressionValue(MemberExpression node);
    private static bool IsConstantExpression(MemberExpression node);
    protected virtual Expression VisitUnary(UnaryExpression node);
    private void SwapNullQualifierFromDefaultTrueToDefaultFalseIfTextEndsWithAny(String[] operators);
    private void SwapNullQualifierFromDefaultTrueToDefaultFalse(StringBuilder text);
}
public class Neo4jClient.Cypher.CypherWithExpressionBuilder : object {
    internal static string WithExpressionCannotBeSerializedToCypherExceptionMessage;
    internal static string WithExpressionShouldBeOneOfExceptionMessage;
    internal static string CollectAsShouldNotBeNodeTExceptionMessage;
    internal static string CollectAsDistinctShouldNotBeNodeTExceptionMessage;
    private CypherCapabilities capabilities;
    private bool camelCaseProperties;
    public CypherWithExpressionBuilder(CypherCapabilities capabilities, bool camelCaseProperties);
    public ReturnExpression BuildText(LambdaExpression expression);
    private string BuildText(MemberInitExpression expression);
    private string BuildText(NewExpression expression);
    private string BuildText(MethodCallExpression expression);
    private string BuildText(MemberExpression expression);
    private string BuildStatement(Expression sourceExpression, MemberInfo targetMember);
    private string BuildStatement(MemberExpression memberExpression, MemberInfo targetMember);
    private static string BuildStatement(MethodCallExpression expression, MemberInfo targetMember);
    private static string BuildStatement(MethodCallExpression expression, bool isNullable);
    private static string BuildStatement(ConstantExpression expression, MemberInfo targetMember);
    private static string BuildStatement(ParameterExpression expression, MemberInfo targetMember);
    private static string BuildCypherResultItemStatement(MethodCallExpression expression, bool isNullable);
    private static bool IsNodeOfT(MethodInfo methodInfo);
    private static WrappedFunctionCall BuildWrappedFunction(MethodCallExpression methodCallExpression);
    private static string BuildCypherAllStatement(MethodCallExpression expression);
    private static string BuildCypherReturnStatement(MethodCallExpression expression);
    private static Expression UnwrapImplicitCasts(Expression expression);
    private static bool IsMemberNullable(MemberInfo memberInfo);
    private static bool IsMemberNullable(string memberName, Type declaringType);
    private static bool IsTypeNullable(Type type);
    [CompilerGeneratedAttribute]
private string <BuildText>b__8_0(MemberBinding binding);
}
public interface Neo4jClient.Cypher.ICypherFluentQuery {
    public CypherQuery Query { get; }
    public ICypherFluentQueryAdvanced Advanced { get; }
    public ICypherFluentQuery WithQueryStats { get; }
    public ICypherFluentQuery Read { get; }
    public ICypherFluentQuery Write { get; }
    public abstract virtual CypherQuery get_Query();
    public abstract virtual Task ExecuteWithoutResultsAsync();
    public abstract virtual ICypherFluentQueryAdvanced get_Advanced();
    public abstract virtual ICypherFluentQuery get_WithQueryStats();
    public abstract virtual ICypherFluentQuery WithParam(string key, object value);
    public abstract virtual ICypherFluentQuery WithParams(IDictionary`2<string, object> parameters);
    public abstract virtual ICypherFluentQuery WithParams(object parameters);
    public abstract virtual ICypherFluentQuery ParserVersion(string version);
    public abstract virtual ICypherFluentQuery ParserVersion(Version version);
    public abstract virtual ICypherFluentQuery ParserVersion(int major, int minor);
    public abstract virtual ICypherFluentQuery MaxExecutionTime(int milliseconds);
    public abstract virtual ICypherFluentQuery CustomHeaders(NameValueCollection headers);
    public abstract virtual ICypherFluentQuery Planner(string planner);
    public abstract virtual ICypherFluentQuery Planner(CypherPlanner planner);
    public abstract virtual ICypherFluentQuery Runtime(string runtime);
    public abstract virtual ICypherFluentQuery Runtime(CypherRuntime runtime);
    public abstract virtual ICypherFluentQuery Match(String[] matchText);
    public abstract virtual ICypherFluentQuery UsingIndex(string index);
    public abstract virtual ICypherFluentQuery OptionalMatch(string pattern);
    public abstract virtual ICypherFluentQuery Merge(string mergeText);
    public abstract virtual ICypherFluentQuery OnCreate();
    public abstract virtual ICypherFluentQuery OnMatch();
    public abstract virtual ICypherFluentQuery Call(string storedProcedureText);
    public abstract virtual ICypherFluentQuery Call(Func`1<ICypherFluentQuery`1<T>> subQuery);
    public abstract virtual ICypherFluentQuery InTransactions(Nullable`1<int> rows);
    public abstract virtual ICypherFluentQuery Yield(string yieldText);
    public abstract virtual ICypherFluentQuery CreateUnique(string createUniqueText);
    public abstract virtual ICypherFluentQuery CreateUniqueConstraint(string identity, string property);
    public abstract virtual ICypherFluentQuery DropUniqueConstraint(string identity, string property);
    public abstract virtual ICypherFluentQuery Create(string createText);
    public abstract virtual ICypherFluentQuery Delete(string identities);
    public abstract virtual ICypherFluentQuery DetachDelete(string identities);
    public abstract virtual ICypherFluentQuery Drop(string dropText);
    public abstract virtual ICypherFluentQuery Set(string setText);
    public abstract virtual ICypherFluentQuery Remove(string removeText);
    public abstract virtual ICypherFluentQuery ForEach(string text);
    public abstract virtual ICypherFluentQuery LoadCsv(Uri fileUri, string identifier, bool withHeaders, string fieldTerminator, Nullable`1<int> periodicCommit);
    public abstract virtual ICypherFluentQuery Unwind(string collection, string columnName);
    public abstract virtual ICypherFluentQuery Unwind(IEnumerable collection, string identity);
    public abstract virtual ICypherFluentQuery Union();
    public abstract virtual ICypherFluentQuery UnionAll();
    public abstract virtual ICypherFluentQuery Limit(Nullable`1<int> limit);
    public abstract virtual ICypherFluentQuery Skip(Nullable`1<int> skip);
    public abstract virtual IOrderedCypherFluentQuery OrderBy(String[] properties);
    public abstract virtual IOrderedCypherFluentQuery OrderByDescending(String[] properties);
    public abstract virtual ICypherFluentQuery`1<TResult> Return(string identity);
    public abstract virtual ICypherFluentQuery`1<TResult> Return(Expression`1<Func`1<TResult>> expression);
    public abstract virtual ICypherFluentQuery`1<TResult> Return(Expression`1<Func`2<ICypherResultItem, TResult>> expression);
    public abstract virtual ICypherFluentQuery`1<TResult> Return(Expression`1<Func`3<ICypherResultItem, ICypherResultItem, TResult>> expression);
    public abstract virtual ICypherFluentQuery`1<TResult> Return(Expression`1<Func`4<ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public abstract virtual ICypherFluentQuery`1<TResult> Return(Expression`1<Func`5<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public abstract virtual ICypherFluentQuery`1<TResult> Return(Expression`1<Func`6<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public abstract virtual ICypherFluentQuery`1<TResult> Return(Expression`1<Func`7<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public abstract virtual ICypherFluentQuery`1<TResult> Return(Expression`1<Func`8<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public abstract virtual ICypherFluentQuery`1<TResult> Return(Expression`1<Func`9<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public abstract virtual ICypherFluentQuery`1<TResult> Return(Expression`1<Func`10<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public abstract virtual ICypherFluentQuery`1<TResult> Return(Expression`1<Func`11<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public abstract virtual ICypherFluentQuery`1<TResult> Return(Expression`1<Func`12<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public abstract virtual ICypherFluentQuery`1<TResult> Return(Expression`1<Func`13<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public abstract virtual ICypherFluentQuery`1<TResult> Return(Expression`1<Func`14<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public abstract virtual ICypherFluentQuery`1<TResult> Return(Expression`1<Func`15<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public abstract virtual ICypherFluentQuery`1<TResult> Return(Expression`1<Func`16<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public abstract virtual ICypherFluentQuery`1<TResult> Return(Expression`1<Func`17<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public abstract virtual ICypherFluentQuery`1<TResult> ReturnDistinct(string identity);
    public abstract virtual ICypherFluentQuery`1<TResult> ReturnDistinct(Expression`1<Func`2<ICypherResultItem, TResult>> expression);
    public abstract virtual ICypherFluentQuery`1<TResult> ReturnDistinct(Expression`1<Func`3<ICypherResultItem, ICypherResultItem, TResult>> expression);
    public abstract virtual ICypherFluentQuery`1<TResult> ReturnDistinct(Expression`1<Func`4<ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public abstract virtual ICypherFluentQuery`1<TResult> ReturnDistinct(Expression`1<Func`5<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public abstract virtual ICypherFluentQuery`1<TResult> ReturnDistinct(Expression`1<Func`6<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public abstract virtual ICypherFluentQuery`1<TResult> ReturnDistinct(Expression`1<Func`7<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public abstract virtual ICypherFluentQuery`1<TResult> ReturnDistinct(Expression`1<Func`8<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public abstract virtual ICypherFluentQuery`1<TResult> ReturnDistinct(Expression`1<Func`9<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public abstract virtual ICypherFluentQuery`1<TResult> ReturnDistinct(Expression`1<Func`10<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public abstract virtual ICypherFluentQuery`1<TResult> ReturnDistinct(Expression`1<Func`11<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public abstract virtual ICypherFluentQuery`1<TResult> ReturnDistinct(Expression`1<Func`12<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public abstract virtual ICypherFluentQuery`1<TResult> ReturnDistinct(Expression`1<Func`13<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public abstract virtual ICypherFluentQuery`1<TResult> ReturnDistinct(Expression`1<Func`14<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public abstract virtual ICypherFluentQuery`1<TResult> ReturnDistinct(Expression`1<Func`15<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public abstract virtual ICypherFluentQuery`1<TResult> ReturnDistinct(Expression`1<Func`16<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public abstract virtual ICypherFluentQuery`1<TResult> ReturnDistinct(Expression`1<Func`17<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public abstract virtual ICypherFluentQuery get_Read();
    public abstract virtual ICypherFluentQuery get_Write();
    public abstract virtual ICypherFluentQuery WithDatabase(string databaseName);
    public abstract virtual ICypherFluentQuery WithIdentifier(string identifier);
    public abstract virtual ICypherFluentQuery WithBookmark(string bookmark);
    public abstract virtual ICypherFluentQuery WithBookmarks(String[] bookmarks);
    public abstract virtual ICypherFluentQuery Use(string graphName);
    public abstract virtual ICypherFluentQuery CreateDatabase(string databaseName, bool ifNotExists);
    public abstract virtual ICypherFluentQuery CreateOrReplaceDatabase(string databaseName);
    public abstract virtual ICypherFluentQuery DropDatabase(string databaseName, bool dumpData);
    public abstract virtual ICypherFluentQuery DropDatabaseIfExists(string databaseName, bool dumpData);
    public abstract virtual ICypherFluentQuery StartDatabase(string databaseName);
    public abstract virtual ICypherFluentQuery StopDatabase(string databaseName);
    public abstract virtual ICypherFluentQuery Show(string command);
    public abstract virtual ICypherFluentQuery Where(string text);
    public abstract virtual ICypherFluentQuery Where(Expression`1<Func`2<T1, bool>> expression);
    public abstract virtual ICypherFluentQuery Where(Expression`1<Func`3<T1, T2, bool>> expression);
    public abstract virtual ICypherFluentQuery Where(Expression`1<Func`4<T1, T2, T3, bool>> expression);
    public abstract virtual ICypherFluentQuery Where(Expression`1<Func`5<T1, T2, T3, T4, bool>> expression);
    public abstract virtual ICypherFluentQuery Where(Expression`1<Func`6<T1, T2, T3, T4, T5, bool>> expression);
    public abstract virtual ICypherFluentQuery Where(Expression`1<Func`7<T1, T2, T3, T4, T5, T6, bool>> expression);
    public abstract virtual ICypherFluentQuery Where(Expression`1<Func`8<T1, T2, T3, T4, T5, T6, T7, bool>> expression);
    public abstract virtual ICypherFluentQuery Where(Expression`1<Func`9<T1, T2, T3, T4, T5, T6, T7, T8, bool>> expression);
    public abstract virtual ICypherFluentQuery Where(Expression`1<Func`10<T1, T2, T3, T4, T5, T6, T7, T8, T9, bool>> expression);
    public abstract virtual ICypherFluentQuery Where(Expression`1<Func`11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, bool>> expression);
    public abstract virtual ICypherFluentQuery Where(Expression`1<Func`12<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, bool>> expression);
    public abstract virtual ICypherFluentQuery Where(Expression`1<Func`13<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, bool>> expression);
    public abstract virtual ICypherFluentQuery Where(Expression`1<Func`14<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, bool>> expression);
    public abstract virtual ICypherFluentQuery Where(Expression`1<Func`15<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, bool>> expression);
    public abstract virtual ICypherFluentQuery Where(Expression`1<Func`16<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, bool>> expression);
    public abstract virtual ICypherFluentQuery Where(Expression`1<Func`17<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, bool>> expression);
    public abstract virtual ICypherFluentQuery OrWhere(string text);
    public abstract virtual ICypherFluentQuery OrWhere(Expression`1<Func`2<T1, bool>> expression);
    public abstract virtual ICypherFluentQuery OrWhere(Expression`1<Func`3<T1, T2, bool>> expression);
    public abstract virtual ICypherFluentQuery OrWhere(Expression`1<Func`4<T1, T2, T3, bool>> expression);
    public abstract virtual ICypherFluentQuery OrWhere(Expression`1<Func`5<T1, T2, T3, T4, bool>> expression);
    public abstract virtual ICypherFluentQuery OrWhere(Expression`1<Func`6<T1, T2, T3, T4, T5, bool>> expression);
    public abstract virtual ICypherFluentQuery OrWhere(Expression`1<Func`7<T1, T2, T3, T4, T5, T6, bool>> expression);
    public abstract virtual ICypherFluentQuery OrWhere(Expression`1<Func`8<T1, T2, T3, T4, T5, T6, T7, bool>> expression);
    public abstract virtual ICypherFluentQuery OrWhere(Expression`1<Func`9<T1, T2, T3, T4, T5, T6, T7, T8, bool>> expression);
    public abstract virtual ICypherFluentQuery OrWhere(Expression`1<Func`10<T1, T2, T3, T4, T5, T6, T7, T8, T9, bool>> expression);
    public abstract virtual ICypherFluentQuery OrWhere(Expression`1<Func`11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, bool>> expression);
    public abstract virtual ICypherFluentQuery OrWhere(Expression`1<Func`12<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, bool>> expression);
    public abstract virtual ICypherFluentQuery OrWhere(Expression`1<Func`13<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, bool>> expression);
    public abstract virtual ICypherFluentQuery OrWhere(Expression`1<Func`14<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, bool>> expression);
    public abstract virtual ICypherFluentQuery OrWhere(Expression`1<Func`15<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, bool>> expression);
    public abstract virtual ICypherFluentQuery OrWhere(Expression`1<Func`16<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, bool>> expression);
    public abstract virtual ICypherFluentQuery OrWhere(Expression`1<Func`17<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, bool>> expression);
    public abstract virtual ICypherFluentQuery AndWhere(string text);
    public abstract virtual ICypherFluentQuery AndWhere(Expression`1<Func`2<T1, bool>> expression);
    public abstract virtual ICypherFluentQuery AndWhere(Expression`1<Func`3<T1, T2, bool>> expression);
    public abstract virtual ICypherFluentQuery AndWhere(Expression`1<Func`4<T1, T2, T3, bool>> expression);
    public abstract virtual ICypherFluentQuery AndWhere(Expression`1<Func`5<T1, T2, T3, T4, bool>> expression);
    public abstract virtual ICypherFluentQuery AndWhere(Expression`1<Func`6<T1, T2, T3, T4, T5, bool>> expression);
    public abstract virtual ICypherFluentQuery AndWhere(Expression`1<Func`7<T1, T2, T3, T4, T5, T6, bool>> expression);
    public abstract virtual ICypherFluentQuery AndWhere(Expression`1<Func`8<T1, T2, T3, T4, T5, T6, T7, bool>> expression);
    public abstract virtual ICypherFluentQuery AndWhere(Expression`1<Func`9<T1, T2, T3, T4, T5, T6, T7, T8, bool>> expression);
    public abstract virtual ICypherFluentQuery AndWhere(Expression`1<Func`10<T1, T2, T3, T4, T5, T6, T7, T8, T9, bool>> expression);
    public abstract virtual ICypherFluentQuery AndWhere(Expression`1<Func`11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, bool>> expression);
    public abstract virtual ICypherFluentQuery AndWhere(Expression`1<Func`12<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, bool>> expression);
    public abstract virtual ICypherFluentQuery AndWhere(Expression`1<Func`13<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, bool>> expression);
    public abstract virtual ICypherFluentQuery AndWhere(Expression`1<Func`14<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, bool>> expression);
    public abstract virtual ICypherFluentQuery AndWhere(Expression`1<Func`15<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, bool>> expression);
    public abstract virtual ICypherFluentQuery AndWhere(Expression`1<Func`16<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, bool>> expression);
    public abstract virtual ICypherFluentQuery AndWhere(Expression`1<Func`17<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, bool>> expression);
    public abstract virtual ICypherFluentQuery WhereIf(bool condition, string text);
    public abstract virtual ICypherFluentQuery WhereIf(bool condition, Expression`1<Func`2<T1, bool>> expression);
    public abstract virtual ICypherFluentQuery WhereIf(bool condition, Expression`1<Func`3<T1, T2, bool>> expression);
    public abstract virtual ICypherFluentQuery WhereIf(bool condition, Expression`1<Func`4<T1, T2, T3, bool>> expression);
    public abstract virtual ICypherFluentQuery WhereIf(bool condition, Expression`1<Func`5<T1, T2, T3, T4, bool>> expression);
    public abstract virtual ICypherFluentQuery WhereIf(bool condition, Expression`1<Func`6<T1, T2, T3, T4, T5, bool>> expression);
    public abstract virtual ICypherFluentQuery WhereIf(bool condition, Expression`1<Func`7<T1, T2, T3, T4, T5, T6, bool>> expression);
    public abstract virtual ICypherFluentQuery WhereIf(bool condition, Expression`1<Func`8<T1, T2, T3, T4, T5, T6, T7, bool>> expression);
    public abstract virtual ICypherFluentQuery WhereIf(bool condition, Expression`1<Func`9<T1, T2, T3, T4, T5, T6, T7, T8, bool>> expression);
    public abstract virtual ICypherFluentQuery WhereIf(bool condition, Expression`1<Func`10<T1, T2, T3, T4, T5, T6, T7, T8, T9, bool>> expression);
    public abstract virtual ICypherFluentQuery WhereIf(bool condition, Expression`1<Func`11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, bool>> expression);
    public abstract virtual ICypherFluentQuery WhereIf(bool condition, Expression`1<Func`12<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, bool>> expression);
    public abstract virtual ICypherFluentQuery WhereIf(bool condition, Expression`1<Func`13<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, bool>> expression);
    public abstract virtual ICypherFluentQuery WhereIf(bool condition, Expression`1<Func`14<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, bool>> expression);
    public abstract virtual ICypherFluentQuery WhereIf(bool condition, Expression`1<Func`15<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, bool>> expression);
    public abstract virtual ICypherFluentQuery WhereIf(bool condition, Expression`1<Func`16<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, bool>> expression);
    public abstract virtual ICypherFluentQuery WhereIf(bool condition, Expression`1<Func`17<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, bool>> expression);
    public abstract virtual ICypherFluentQuery OrWhereIf(bool condition, string text);
    public abstract virtual ICypherFluentQuery OrWhereIf(bool condition, Expression`1<Func`2<T1, bool>> expression);
    public abstract virtual ICypherFluentQuery OrWhereIf(bool condition, Expression`1<Func`3<T1, T2, bool>> expression);
    public abstract virtual ICypherFluentQuery OrWhereIf(bool condition, Expression`1<Func`4<T1, T2, T3, bool>> expression);
    public abstract virtual ICypherFluentQuery OrWhereIf(bool condition, Expression`1<Func`5<T1, T2, T3, T4, bool>> expression);
    public abstract virtual ICypherFluentQuery OrWhereIf(bool condition, Expression`1<Func`6<T1, T2, T3, T4, T5, bool>> expression);
    public abstract virtual ICypherFluentQuery OrWhereIf(bool condition, Expression`1<Func`7<T1, T2, T3, T4, T5, T6, bool>> expression);
    public abstract virtual ICypherFluentQuery OrWhereIf(bool condition, Expression`1<Func`8<T1, T2, T3, T4, T5, T6, T7, bool>> expression);
    public abstract virtual ICypherFluentQuery OrWhereIf(bool condition, Expression`1<Func`9<T1, T2, T3, T4, T5, T6, T7, T8, bool>> expression);
    public abstract virtual ICypherFluentQuery OrWhereIf(bool condition, Expression`1<Func`10<T1, T2, T3, T4, T5, T6, T7, T8, T9, bool>> expression);
    public abstract virtual ICypherFluentQuery OrWhereIf(bool condition, Expression`1<Func`11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, bool>> expression);
    public abstract virtual ICypherFluentQuery OrWhereIf(bool condition, Expression`1<Func`12<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, bool>> expression);
    public abstract virtual ICypherFluentQuery OrWhereIf(bool condition, Expression`1<Func`13<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, bool>> expression);
    public abstract virtual ICypherFluentQuery OrWhereIf(bool condition, Expression`1<Func`14<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, bool>> expression);
    public abstract virtual ICypherFluentQuery OrWhereIf(bool condition, Expression`1<Func`15<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, bool>> expression);
    public abstract virtual ICypherFluentQuery OrWhereIf(bool condition, Expression`1<Func`16<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, bool>> expression);
    public abstract virtual ICypherFluentQuery OrWhereIf(bool condition, Expression`1<Func`17<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, bool>> expression);
    public abstract virtual ICypherFluentQuery AndWhereIf(bool condition, string text);
    public abstract virtual ICypherFluentQuery AndWhereIf(bool condition, Expression`1<Func`2<T1, bool>> expression);
    public abstract virtual ICypherFluentQuery AndWhereIf(bool condition, Expression`1<Func`3<T1, T2, bool>> expression);
    public abstract virtual ICypherFluentQuery AndWhereIf(bool condition, Expression`1<Func`4<T1, T2, T3, bool>> expression);
    public abstract virtual ICypherFluentQuery AndWhereIf(bool condition, Expression`1<Func`5<T1, T2, T3, T4, bool>> expression);
    public abstract virtual ICypherFluentQuery AndWhereIf(bool condition, Expression`1<Func`6<T1, T2, T3, T4, T5, bool>> expression);
    public abstract virtual ICypherFluentQuery AndWhereIf(bool condition, Expression`1<Func`7<T1, T2, T3, T4, T5, T6, bool>> expression);
    public abstract virtual ICypherFluentQuery AndWhereIf(bool condition, Expression`1<Func`8<T1, T2, T3, T4, T5, T6, T7, bool>> expression);
    public abstract virtual ICypherFluentQuery AndWhereIf(bool condition, Expression`1<Func`9<T1, T2, T3, T4, T5, T6, T7, T8, bool>> expression);
    public abstract virtual ICypherFluentQuery AndWhereIf(bool condition, Expression`1<Func`10<T1, T2, T3, T4, T5, T6, T7, T8, T9, bool>> expression);
    public abstract virtual ICypherFluentQuery AndWhereIf(bool condition, Expression`1<Func`11<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, bool>> expression);
    public abstract virtual ICypherFluentQuery AndWhereIf(bool condition, Expression`1<Func`12<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, bool>> expression);
    public abstract virtual ICypherFluentQuery AndWhereIf(bool condition, Expression`1<Func`13<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, bool>> expression);
    public abstract virtual ICypherFluentQuery AndWhereIf(bool condition, Expression`1<Func`14<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, bool>> expression);
    public abstract virtual ICypherFluentQuery AndWhereIf(bool condition, Expression`1<Func`15<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, bool>> expression);
    public abstract virtual ICypherFluentQuery AndWhereIf(bool condition, Expression`1<Func`16<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, bool>> expression);
    public abstract virtual ICypherFluentQuery AndWhereIf(bool condition, Expression`1<Func`17<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, bool>> expression);
    public abstract virtual ICypherFluentQuery With(string withText);
    public abstract virtual ICypherFluentQuery With(Expression`1<Func`2<ICypherResultItem, TResult>> expression);
    public abstract virtual ICypherFluentQuery With(Expression`1<Func`3<ICypherResultItem, ICypherResultItem, TResult>> expression);
    public abstract virtual ICypherFluentQuery With(Expression`1<Func`4<ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public abstract virtual ICypherFluentQuery With(Expression`1<Func`5<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public abstract virtual ICypherFluentQuery With(Expression`1<Func`6<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public abstract virtual ICypherFluentQuery With(Expression`1<Func`7<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public abstract virtual ICypherFluentQuery With(Expression`1<Func`8<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public abstract virtual ICypherFluentQuery With(Expression`1<Func`9<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public abstract virtual ICypherFluentQuery With(Expression`1<Func`10<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public abstract virtual ICypherFluentQuery With(Expression`1<Func`11<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public abstract virtual ICypherFluentQuery With(Expression`1<Func`12<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public abstract virtual ICypherFluentQuery With(Expression`1<Func`13<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public abstract virtual ICypherFluentQuery With(Expression`1<Func`14<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public abstract virtual ICypherFluentQuery With(Expression`1<Func`15<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public abstract virtual ICypherFluentQuery With(Expression`1<Func`16<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public abstract virtual ICypherFluentQuery With(Expression`1<Func`17<ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, ICypherResultItem, TResult>> expression);
    public abstract virtual ICypherFluentQuery With(Expression`1<Func`1<TResult>> expression);
}
public interface Neo4jClient.Cypher.ICypherFluentQuery`1 {
    public Task`1<IEnumerable`1<TResult>> ResultsAsync { get; }
    public abstract virtual Task`1<IEnumerable`1<TResult>> get_ResultsAsync();
    public abstract virtual ICypherFluentQuery`1<TResult> Unwind(string collectionName, string columnName);
    public abstract virtual ICypherFluentQuery`1<TResult> Limit(Nullable`1<int> limit);
    public abstract virtual ICypherFluentQuery`1<TResult> Skip(Nullable`1<int> skip);
    public abstract virtual IOrderedCypherFluentQuery`1<TResult> OrderBy(String[] properties);
    public abstract virtual IOrderedCypherFluentQuery`1<TResult> OrderByDescending(String[] properties);
}
public interface Neo4jClient.Cypher.ICypherFluentQueryAdvanced {
    public abstract virtual ICypherFluentQuery`1<TResult> Return(ReturnExpression returnExpression);
    public abstract virtual ICypherFluentQuery`1<TResult> ReturnDistinct(ReturnExpression returnExpression);
    public abstract virtual ICypherFluentQuery`1<TResult> SetClient(IGraphClient graphClient);
    public abstract virtual ICypherFluentQuery SetClient(IGraphClient graphClient);
}
public interface Neo4jClient.Cypher.ICypherResultItem {
    public abstract virtual T As();
    public abstract virtual Node`1<T> Node();
    public abstract virtual IEnumerable`1<T> CollectAs();
    public abstract virtual IEnumerable`1<T> CollectAsDistinct();
    public abstract virtual IFluentCypherResultItem Head();
    public abstract virtual IFluentCypherResultItem Last();
    public abstract virtual long Count();
    public abstract virtual long CountDistinct();
    public abstract virtual long Length();
    public abstract virtual string Type();
    public abstract virtual long Id();
    public abstract virtual IEnumerable`1<string> Labels();
}
public interface Neo4jClient.Cypher.IFluentCypherResultItem {
    public abstract virtual T CollectAs();
}
public interface Neo4jClient.Cypher.IOrderedCypherFluentQuery {
    public abstract virtual IOrderedCypherFluentQuery ThenBy(String[] properties);
    public abstract virtual IOrderedCypherFluentQuery ThenByDescending(String[] properties);
}
public interface Neo4jClient.Cypher.IOrderedCypherFluentQuery`1 {
    public abstract virtual IOrderedCypherFluentQuery`1<TResult> ThenBy(String[] properties);
    public abstract virtual IOrderedCypherFluentQuery`1<TResult> ThenByDescending(String[] properties);
}
public static class Neo4jClient.Cypher.Node : object {
    public static StartBit ByIndexLookup(string indexName, string propertyName, object value);
    public static StartBit ByIndexQuery(string indexName, string query);
}
public enum Neo4jClient.Cypher.OrderByType : Enum {
    public int value__;
    public static OrderByType Ascending;
    public static OrderByType Descending;
}
public class Neo4jClient.Cypher.QueryWriter : object {
    private StringBuilder queryTextBuilder;
    private IDictionary`2<string, object> queryParameters;
    private CypherResultMode resultMode;
    private CypherResultFormat resultFormat;
    private List`1<Bookmark> bookmarks;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private Nullable`1<int> <MaxExecutionTime>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private NameValueCollection <CustomHeaders>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Identifier>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <DatabaseName>k__BackingField;
    public List`1<Bookmark> Bookmarks { get; }
    public CypherResultMode ResultMode { get; public set; }
    public CypherResultFormat ResultFormat { get; public set; }
    public Nullable`1<int> MaxExecutionTime { get; public set; }
    public NameValueCollection CustomHeaders { get; public set; }
    public string Identifier { get; public set; }
    public string DatabaseName { get; public set; }
    public QueryWriter(string databaseName);
    private QueryWriter(StringBuilder queryTextBuilder, IDictionary`2<string, object> queryParameters, CypherResultMode resultMode, CypherResultFormat resultFormat, List`1<Bookmark> bookmarks, string identifier);
    public List`1<Bookmark> get_Bookmarks();
    public CypherResultMode get_ResultMode();
    public void set_ResultMode(CypherResultMode value);
    public CypherResultFormat get_ResultFormat();
    public void set_ResultFormat(CypherResultFormat value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaxExecutionTime();
    [CompilerGeneratedAttribute]
public void set_MaxExecutionTime(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public NameValueCollection get_CustomHeaders();
    [CompilerGeneratedAttribute]
public void set_CustomHeaders(NameValueCollection value);
    [CompilerGeneratedAttribute]
public string get_Identifier();
    [CompilerGeneratedAttribute]
public void set_Identifier(string value);
    [CompilerGeneratedAttribute]
public string get_DatabaseName();
    [CompilerGeneratedAttribute]
public void set_DatabaseName(string value);
    public QueryWriter Clone();
    public CypherQuery ToCypherQuery(IContractResolver contractResolver, bool isWrite, bool includeQueryStats);
    public string CreateParameter(object paramValue);
    public void CreateParameter(string key, object value);
    public void CreateParameters(IDictionary`2<string, object> parameters);
    public bool ContainsParameterWithKey(string key);
    public QueryWriter AppendClause(string clause, Object[] paramValues);
    public QueryWriter AppendToClause(string appendedData, Object[] paramValues);
    private string CreateParameterAndReturnPlaceholder(object paramValue);
}
public static class Neo4jClient.Cypher.Return : object {
    public static T As(string cypherText);
}
public class Neo4jClient.Cypher.ReturnExpression : ValueType {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Text>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private CypherResultMode <ResultMode>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private CypherResultFormat <ResultFormat>k__BackingField;
    public string Text { get; public set; }
    public CypherResultMode ResultMode { get; public set; }
    public CypherResultFormat ResultFormat { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Text();
    [CompilerGeneratedAttribute]
public void set_Text(string value);
    [CompilerGeneratedAttribute]
public CypherResultMode get_ResultMode();
    [CompilerGeneratedAttribute]
public void set_ResultMode(CypherResultMode value);
    [CompilerGeneratedAttribute]
public CypherResultFormat get_ResultFormat();
    [CompilerGeneratedAttribute]
public void set_ResultFormat(CypherResultFormat value);
}
public class Neo4jClient.Cypher.StartBit : object {
    private Func`2<Func`2<object, string>, string> formatCallback;
    public StartBit(Func`2<Func`2<object, string>, string> formatCallback);
    public string ToCypherText(Func`2<object, string> createParameterCallback);
}
internal static class Neo4jClient.Cypher.StartBitFormatter : object {
    private static IDictionary`2<Type, Func`3<object, Func`2<object, string>, string>> Formatters;
    private static StartBitFormatter();
    internal static string FormatAsCypherText(object startBits, Func`2<object, string> createParameterCallback);
    internal static string FormatAsCypherText(IDictionary`2<string, object> startBits, Func`2<object, string> createParameterCallback);
    private static string FormatBitAsCypherText(string identity, object value, Func`2<object, string> createParameterCallback);
    private static bool IsCovariantlyEquivalentEnumerable(Type type1, Type type2);
    private static string FormatValue(StartBit value, Func`2<object, string> createParameterCallback);
    private static string FormatValue(NodeReference value, Func`2<object, string> createParameterCallback);
    private static string FormatValue(IEnumerable`1<NodeReference> value, Func`2<object, string> createParameterCallback);
    private static string FormatValue(RelationshipReference value, Func`2<object, string> createParameterCallback);
    private static string FormatValue(IEnumerable`1<RelationshipReference> value, Func`2<object, string> createParameterCallback);
}
internal class Neo4jClient.Cypher.VbCompareReplacer : ExpressionVisitor {
    public virtual Expression Visit(Expression node);
}
internal class Neo4jClient.CypherPartialResult : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private HttpResponseMessage <ResponseObject>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private PartialDeserializationContext <DeserializationContext>k__BackingField;
    public HttpResponseMessage ResponseObject { get; public set; }
    public PartialDeserializationContext DeserializationContext { get; public set; }
    [CompilerGeneratedAttribute]
public HttpResponseMessage get_ResponseObject();
    [CompilerGeneratedAttribute]
public void set_ResponseObject(HttpResponseMessage value);
    [CompilerGeneratedAttribute]
public PartialDeserializationContext get_DeserializationContext();
    [CompilerGeneratedAttribute]
public void set_DeserializationContext(PartialDeserializationContext value);
}
public enum Neo4jClient.DeleteMode : Enum {
    public int value__;
    public static DeleteMode NodeOnly;
    public static DeleteMode NodeAndRelationships;
}
public class Neo4jClient.DetachedNodeException : Exception {
}
internal class Neo4jClient.DriverWrapper : object {
    private IDriver driver;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Username>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Password>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Realm>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private Nullable`1<EncryptionLevel> <EncryptionLevel>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private Uri <Uri>k__BackingField;
    public string Username { get; }
    public string Password { get; }
    public string Realm { get; }
    public Nullable`1<EncryptionLevel> EncryptionLevel { get; }
    public Config Config { get; }
    public bool Encrypted { get; }
    public Uri Uri { get; private set; }
    public IServerAddressResolver AddressResolver { get; }
    public DriverWrapper(IDriver driver);
    public DriverWrapper(string uri, IServerAddressResolver addressResolver, string username, string pass, string realm, Nullable`1<EncryptionLevel> encryptionLevel);
    public DriverWrapper(Uri uri, IServerAddressResolver addressResolver, string username, string pass, string realm, Nullable`1<EncryptionLevel> encryptionLevel);
    [CompilerGeneratedAttribute]
public string get_Username();
    [CompilerGeneratedAttribute]
public string get_Password();
    [CompilerGeneratedAttribute]
public string get_Realm();
    [CompilerGeneratedAttribute]
public Nullable`1<EncryptionLevel> get_EncryptionLevel();
    public sealed virtual IAsyncSession AsyncSession();
    public sealed virtual IAsyncSession AsyncSession(Action`1<SessionConfigBuilder> action);
    public sealed virtual Task CloseAsync();
    public sealed virtual Task`1<IServerInfo> GetServerInfoAsync();
    public sealed virtual Task`1<bool> TryVerifyConnectivityAsync();
    public sealed virtual Task VerifyConnectivityAsync();
    public sealed virtual Task`1<bool> SupportsMultiDbAsync();
    public sealed virtual Task`1<bool> SupportsSessionAuthAsync();
    public sealed virtual IExecutableQuery`2<IRecord, IRecord> ExecutableQuery(string cypher);
    public sealed virtual Task`1<bool> VerifyAuthenticationAsync(IAuthToken authToken);
    public sealed virtual Config get_Config();
    public sealed virtual bool get_Encrypted();
    [CompilerGeneratedAttribute]
public Uri get_Uri();
    [CompilerGeneratedAttribute]
private void set_Uri(Uri value);
    public IServerAddressResolver get_AddressResolver();
    private static IAuthToken GetAuthToken(string username, string password, string realm);
    public sealed virtual void Dispose();
    public sealed virtual ValueTask DisposeAsync();
}
internal class Neo4jClient.Execution.CypherExecutionPolicy : GraphClientBasedExecutionPolicy {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Database>k__BackingField;
    public TransactionExecutionPolicy TransactionExecutionPolicy { get; }
    public string Database { get; public set; }
    public CypherExecutionPolicy(IGraphClient client);
    private INeo4jTransaction GetTransactionInScope();
    public virtual Uri BaseEndpoint(string database, bool autoCommit);
    public virtual TransactionExecutionPolicy get_TransactionExecutionPolicy();
    public virtual string SerializeRequest(object toSerialize);
    [CompilerGeneratedAttribute]
public virtual string get_Database();
    [CompilerGeneratedAttribute]
public virtual void set_Database(string value);
    public virtual void AfterExecution(IDictionary`2<string, object> executionMetadata, object executionContext);
}
internal class Neo4jClient.Execution.CypherTransactionExecutionPolicy : CypherExecutionPolicy {
    public TransactionExecutionPolicy TransactionExecutionPolicy { get; }
    public CypherTransactionExecutionPolicy(IGraphClient client);
    public virtual TransactionExecutionPolicy get_TransactionExecutionPolicy();
}
[ExtensionAttribute]
internal static class Neo4jClient.Execution.EndpointBuilderExtension : object {
    [ExtensionAttribute]
public static Uri AddPath(Uri startUri, string path);
    [ExtensionAttribute]
public static Uri AddQuery(Uri startUri, string query);
    [ExtensionAttribute]
public static Uri AddPath(Uri startUri, object startReference, IExecutionPolicy policy);
}
internal class Neo4jClient.Execution.ErrorGenerator : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private Func`2<HttpResponseMessage, bool> <Condition>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private Func`2<HttpResponseMessage, Exception> <Generator>k__BackingField;
    public Func`2<HttpResponseMessage, bool> Condition { get; public set; }
    public Func`2<HttpResponseMessage, Exception> Generator { get; public set; }
    [CompilerGeneratedAttribute]
public Func`2<HttpResponseMessage, bool> get_Condition();
    [CompilerGeneratedAttribute]
public void set_Condition(Func`2<HttpResponseMessage, bool> value);
    [CompilerGeneratedAttribute]
public Func`2<HttpResponseMessage, Exception> get_Generator();
    [CompilerGeneratedAttribute]
public void set_Generator(Func`2<HttpResponseMessage, Exception> value);
}
public class Neo4jClient.Execution.ExecutionConfiguration : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private IHttpClient <HttpClient>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private bool <UseJsonStreaming>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <UserAgent>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private IEnumerable`1<JsonConverter> <JsonConverters>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Username>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Password>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private bool <HasErrors>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private Guid <ResourceManagerId>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Realm>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private Nullable`1<EncryptionLevel> <EncryptionLevel>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private bool <SerializeNullValues>k__BackingField;
    public IHttpClient HttpClient { get; public set; }
    public bool UseJsonStreaming { get; public set; }
    public string UserAgent { get; public set; }
    public IEnumerable`1<JsonConverter> JsonConverters { get; public set; }
    public string Username { get; public set; }
    public string Password { get; public set; }
    public bool HasErrors { get; public set; }
    public Guid ResourceManagerId { get; public set; }
    public string Realm { get; public set; }
    public Nullable`1<EncryptionLevel> EncryptionLevel { get; public set; }
    public bool SerializeNullValues { get; public set; }
    [CompilerGeneratedAttribute]
public IHttpClient get_HttpClient();
    [CompilerGeneratedAttribute]
public void set_HttpClient(IHttpClient value);
    [CompilerGeneratedAttribute]
public bool get_UseJsonStreaming();
    [CompilerGeneratedAttribute]
public void set_UseJsonStreaming(bool value);
    [CompilerGeneratedAttribute]
public string get_UserAgent();
    [CompilerGeneratedAttribute]
public void set_UserAgent(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<JsonConverter> get_JsonConverters();
    [CompilerGeneratedAttribute]
public void set_JsonConverters(IEnumerable`1<JsonConverter> value);
    [CompilerGeneratedAttribute]
public string get_Username();
    [CompilerGeneratedAttribute]
public void set_Username(string value);
    [CompilerGeneratedAttribute]
public string get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(string value);
    [CompilerGeneratedAttribute]
public bool get_HasErrors();
    [CompilerGeneratedAttribute]
public void set_HasErrors(bool value);
    [CompilerGeneratedAttribute]
public Guid get_ResourceManagerId();
    [CompilerGeneratedAttribute]
public void set_ResourceManagerId(Guid value);
    [CompilerGeneratedAttribute]
public string get_Realm();
    [CompilerGeneratedAttribute]
public void set_Realm(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<EncryptionLevel> get_EncryptionLevel();
    [CompilerGeneratedAttribute]
public void set_EncryptionLevel(Nullable`1<EncryptionLevel> value);
    [CompilerGeneratedAttribute]
public bool get_SerializeNullValues();
    [CompilerGeneratedAttribute]
public void set_SerializeNullValues(bool value);
}
internal class Neo4jClient.Execution.ExecutionPolicyFactory : object {
    private IGraphClient _client;
    public ExecutionPolicyFactory(IGraphClient client);
    public sealed virtual IExecutionPolicy GetPolicy(PolicyType type);
}
internal abstract class Neo4jClient.Execution.GraphClientBasedExecutionPolicy : object {
    protected IGraphClient Client;
    public bool InTransaction { get; }
    public TransactionExecutionPolicy TransactionExecutionPolicy { get; }
    public string Database { get; public set; }
    protected GraphClientBasedExecutionPolicy(IGraphClient client);
    public sealed virtual bool get_InTransaction();
    public abstract virtual TransactionExecutionPolicy get_TransactionExecutionPolicy();
    public abstract virtual void AfterExecution(IDictionary`2<string, object> executionMetadata, object executionContext);
    public virtual string SerializeRequest(object toSerialize);
    public abstract virtual string get_Database();
    public abstract virtual void set_Database(string value);
    public abstract virtual Uri BaseEndpoint(string database, bool autoCommit);
    public virtual Uri AddPath(Uri startUri, object startReference);
    protected Uri Replace(Uri toReplace, string replaceWith);
}
[ExtensionAttribute]
internal static class Neo4jClient.Execution.HttpResponseMessageExtensions : object {
    [ExtensionAttribute]
internal static Task EnsureExpectedStatusCode(HttpResponseMessage response, HttpStatusCode[] expectedStatusCodes);
    [AsyncStateMachineAttribute("Neo4jClient.Execution.HttpResponseMessageExtensions/<EnsureExpectedStatusCode>d__1")]
[DebuggerStepThroughAttribute]
[ExtensionAttribute]
internal static Task EnsureExpectedStatusCode(HttpResponseMessage response, string commandDescription, HttpStatusCode[] expectedStatusCodes);
    [AsyncStateMachineAttribute("Neo4jClient.Execution.HttpResponseMessageExtensions/<TryBuildNeoException>d__2")]
[DebuggerStepThroughAttribute]
private static Task`1<NeoException> TryBuildNeoException(HttpResponseMessage response);
}
internal interface Neo4jClient.Execution.IExecutionPolicy {
    public bool InTransaction { get; }
    public TransactionExecutionPolicy TransactionExecutionPolicy { get; }
    public string Database { get; public set; }
    public abstract virtual bool get_InTransaction();
    public abstract virtual TransactionExecutionPolicy get_TransactionExecutionPolicy();
    public abstract virtual void AfterExecution(IDictionary`2<string, object> executionMetadata, object executionContext);
    public abstract virtual string SerializeRequest(object toSerialize);
    public abstract virtual Uri BaseEndpoint(string database, bool autoCommit);
    public abstract virtual Uri AddPath(Uri startUri, object startReference);
    public abstract virtual string get_Database();
    public abstract virtual void set_Database(string value);
}
internal interface Neo4jClient.Execution.IExecutionPolicyFactory {
    public abstract virtual IExecutionPolicy GetPolicy(PolicyType type);
}
public interface Neo4jClient.Execution.IHttpClient {
    public string Username { get; }
    public string Password { get; }
    public abstract virtual Task`1<HttpResponseMessage> SendAsync(HttpRequestMessage request);
    public abstract virtual string get_Username();
    public abstract virtual string get_Password();
}
internal interface Neo4jClient.Execution.IRequestTypeBuilder {
    public abstract virtual IResponseBuilder Delete(Uri endpoint);
    public abstract virtual IResponseBuilder Get(Uri endpoint);
    public abstract virtual IRequestWithPendingContentBuilder Post(Uri endpoint);
    public abstract virtual IRequestWithPendingContentBuilder Put(Uri endpoint);
}
internal interface Neo4jClient.Execution.IRequestWithPendingContentBuilder {
    public abstract virtual IResponseBuilder WithContent(string content);
    public abstract virtual IResponseBuilder WithJsonContent(string jsonContent);
}
internal interface Neo4jClient.Execution.IResponseBuilder {
    public abstract virtual IResponseBuilder WithExpectedStatusCodes(HttpStatusCode[] statusCodes);
    public abstract virtual IResponseFailBuilder FailOnCondition(Func`2<HttpResponseMessage, bool> condition);
    public abstract virtual Task`1<HttpResponseMessage> ExecuteAsync();
    public abstract virtual Task`1<HttpResponseMessage> ExecuteAsync(string commandDescription);
    public abstract virtual Task`1<HttpResponseMessage> ExecuteAsync(Func`2<HttpResponseMessage, HttpResponseMessage> continuationFunction);
    public abstract virtual Task`1<HttpResponseMessage> ExecuteAsync(string commandDescription, Func`2<HttpResponseMessage, HttpResponseMessage> continuationFunction);
    public abstract virtual Task`1<TExpected> ExecuteAsync(Func`2<HttpResponseMessage, TExpected> continuationFunction);
    public abstract virtual Task`1<TExpected> ExecuteAsync(string commandDescription, Func`2<HttpResponseMessage, TExpected> continuationFunction);
    public abstract virtual IResponseBuilder`1<TParse> ParseAs();
}
internal interface Neo4jClient.Execution.IResponseBuilder`1 {
    public abstract virtual IResponseBuilder`1<TResult> WithExpectedStatusCodes(HttpStatusCode[] statusCodes);
    public abstract virtual IResponseFailBuilder`1<TResult> FailOnCondition(Func`2<HttpResponseMessage, bool> condition);
    public abstract virtual Task`1<TResult> ExecuteAsync(string commandDescription);
    public abstract virtual Task`1<TResult> ExecuteAsync(Func`2<TResult, TResult> continuationFunction);
    public abstract virtual Task`1<TResult> ExecuteAsync(string commandDescription, Func`2<TResult, TResult> continuationFunction);
    public abstract virtual Task`1<TResult> ExecuteAsync();
    public abstract virtual Task`1<TExpected> ExecuteAsync(Func`2<TResult, TExpected> continuationFunction);
    public abstract virtual Task`1<TExpected> ExecuteAsync(string commandDescription, Func`2<TResult, TExpected> continuationFunction);
}
internal interface Neo4jClient.Execution.IResponseFailBuilder {
    public abstract virtual IResponseBuilder WithError(Func`2<HttpResponseMessage, Exception> errorBuilder);
    public abstract virtual IResponseBuilder WithNull();
}
internal interface Neo4jClient.Execution.IResponseFailBuilder`1 {
    public abstract virtual IResponseBuilder`1<TResult> WithError(Func`2<HttpResponseMessage, Exception> errorBuilder);
    public abstract virtual IResponseBuilder`1<TResult> WithDefault();
}
public enum Neo4jClient.Execution.PolicyType : Enum {
    public int value__;
    public static PolicyType Cypher;
    public static PolicyType Rest;
    public static PolicyType Batch;
    public static PolicyType Transaction;
    public static PolicyType NodeIndex;
    public static PolicyType RelationshipIndex;
}
internal static class Neo4jClient.Execution.Request : object {
    public static IRequestTypeBuilder With(ExecutionConfiguration configuration, NameValueCollection customerHeaders, Nullable`1<int> maxExecutionTime);
}
internal class Neo4jClient.Execution.RequestTypeBuilder : object {
    private ExecutionConfiguration executionConfiguration;
    private NameValueCollection customHeaders;
    private Nullable`1<int> maxExecutionTime;
    public RequestTypeBuilder(ExecutionConfiguration executionConfiguration, NameValueCollection customHeaders, Nullable`1<int> maxExecutionTime);
    public sealed virtual IResponseBuilder Delete(Uri endpoint);
    public sealed virtual IResponseBuilder Get(Uri endpoint);
    public sealed virtual IRequestWithPendingContentBuilder Post(Uri endpoint);
    public sealed virtual IRequestWithPendingContentBuilder Put(Uri endpoint);
}
internal class Neo4jClient.Execution.RequestWithPendingContentBuilder : object {
    private HttpMethod httpMethod;
    private Uri endpoint;
    private ExecutionConfiguration executionConfiguration;
    private NameValueCollection customHeaders;
    private Nullable`1<int> maxExecutionTime;
    public RequestWithPendingContentBuilder(HttpMethod httpMethod, Uri endpoint, ExecutionConfiguration executionConfiguration, NameValueCollection customHeaders, Nullable`1<int> maxExecutionTime);
    public sealed virtual IResponseBuilder WithContent(string content);
    public sealed virtual IResponseBuilder WithJsonContent(string jsonContent);
}
internal class Neo4jClient.Execution.ResponseBuilder : object {
    protected HttpRequestMessage _request;
    protected ExecutionConfiguration _executionConfiguration;
    protected ISet`1<HttpStatusCode> _expectedStatusCodes;
    protected IList`1<ErrorGenerator> _errorGenerators;
    protected NameValueCollection _customHeaders;
    protected Nullable`1<int> _maxExecutionTime;
    internal static string MaxExecutionTimeHeaderKey;
    public ISet`1<HttpStatusCode> ExpectedStatusCodes { get; }
    public IList`1<ErrorGenerator> ErrorGenerators { get; }
    public ResponseBuilder(HttpRequestMessage request, ExecutionConfiguration executionConfiguration, NameValueCollection nameValueCollection, Nullable`1<int> maxExecutionTime);
    public ResponseBuilder(HttpRequestMessage request, ISet`1<HttpStatusCode> expectedStatusCodes, ExecutionConfiguration executionConfiguration);
    public ResponseBuilder(HttpRequestMessage request, ISet`1<HttpStatusCode> expectedStatusCodes, ExecutionConfiguration executionConfiguration, IList`1<ErrorGenerator> errorGenerators, NameValueCollection customHeaders, Nullable`1<int> maxExecutionTime);
    public ISet`1<HttpStatusCode> get_ExpectedStatusCodes();
    public IList`1<ErrorGenerator> get_ErrorGenerators();
    protected ISet`1<HttpStatusCode> UnionStatusCodes(IEnumerable`1<HttpStatusCode> source1, IEnumerable`1<HttpStatusCode> source2);
    public sealed virtual IResponseBuilder WithExpectedStatusCodes(HttpStatusCode[] statusCodes);
    public sealed virtual IResponseFailBuilder FailOnCondition(Func`2<HttpResponseMessage, bool> condition);
    [AsyncStateMachineAttribute("Neo4jClient.Execution.ResponseBuilder/<PrepareAsync>d__17")]
[DebuggerStepThroughAttribute]
private Task`1<HttpResponseMessage> PrepareAsync();
    public sealed virtual Task`1<HttpResponseMessage> ExecuteAsync();
    public sealed virtual Task`1<HttpResponseMessage> ExecuteAsync(string commandDescription);
    public sealed virtual Task`1<HttpResponseMessage> ExecuteAsync(Func`2<HttpResponseMessage, HttpResponseMessage> continuationFunction);
    [AsyncStateMachineAttribute("Neo4jClient.Execution.ResponseBuilder/<ExecuteAsync>d__21")]
[DebuggerStepThroughAttribute]
public sealed virtual Task`1<HttpResponseMessage> ExecuteAsync(string commandDescription, Func`2<HttpResponseMessage, HttpResponseMessage> continuationFunction);
    public sealed virtual Task`1<TExpected> ExecuteAsync(Func`2<HttpResponseMessage, TExpected> continuationFunction);
    [AsyncStateMachineAttribute("Neo4jClient.Execution.ResponseBuilder/<ExecuteAsync>d__23`1")]
[DebuggerStepThroughAttribute]
public sealed virtual Task`1<TExpected> ExecuteAsync(string commandDescription, Func`2<HttpResponseMessage, TExpected> continuationFunction);
    public sealed virtual IResponseBuilder`1<TParse> ParseAs();
}
internal class Neo4jClient.Execution.ResponseBuilder`1 : ResponseBuilder {
    public ResponseBuilder`1(HttpRequestMessage request, ISet`1<HttpStatusCode> expectedStatusCodes, ExecutionConfiguration executionConfiguration);
    public ResponseBuilder`1(HttpRequestMessage request, ISet`1<HttpStatusCode> expectedStatusCodes, ExecutionConfiguration executionConfiguration, IList`1<ErrorGenerator> errorGenerators);
    [AsyncStateMachineAttribute("Neo4jClient.Execution.ResponseBuilder`1/<CastIntoResult>d__2")]
[DebuggerStepThroughAttribute]
private Task`1<TParse> CastIntoResult(HttpResponseMessage response);
    public sealed virtual IResponseBuilder`1<TParse> WithExpectedStatusCodes(HttpStatusCode[] statusCodes);
    public sealed virtual IResponseFailBuilder`1<TParse> FailOnCondition(Func`2<HttpResponseMessage, bool> condition);
    public sealed virtual Task`1<TParse> ExecuteAsync(string commandDescription);
    public sealed virtual Task`1<TParse> ExecuteAsync(Func`2<TParse, TParse> continuationFunction);
    [AsyncStateMachineAttribute("Neo4jClient.Execution.ResponseBuilder`1/<ExecuteAsync>d__7")]
[DebuggerStepThroughAttribute]
public sealed virtual Task`1<TParse> ExecuteAsync(string commandDescription, Func`2<TParse, TParse> continuationFunction);
    public sealed virtual Task`1<TParse> ExecuteAsync();
    public sealed virtual Task`1<TExpected> ExecuteAsync(Func`2<TParse, TExpected> continuationFunction);
    [AsyncStateMachineAttribute("Neo4jClient.Execution.ResponseBuilder`1/<ExecuteAsync>d__10`1")]
[DebuggerStepThroughAttribute]
public sealed virtual Task`1<TExpected> ExecuteAsync(string commandDescription, Func`2<TParse, TExpected> continuationFunction);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<HttpResponseMessage> <>n__0(string commandDescription, Func`2<HttpResponseMessage, HttpResponseMessage> continuationFunction);
}
internal class Neo4jClient.Execution.ResponseFailBuilder : object {
    private HttpRequestMessage _request;
    private ISet`1<HttpStatusCode> _expectedStatusCodes;
    private ExecutionConfiguration _executionConfiguration;
    private IList`1<ErrorGenerator> _errorGenerators;
    private Func`2<HttpResponseMessage, bool> _errorCondition;
    private NameValueCollection _customHeaders;
    public ResponseFailBuilder(HttpRequestMessage request, ISet`1<HttpStatusCode> expectedStatusCodes, ExecutionConfiguration executionConfiguration, IList`1<ErrorGenerator> errorGenerators, Func`2<HttpResponseMessage, bool> errorCondition, NameValueCollection customHeaders);
    public sealed virtual IResponseBuilder WithError(Func`2<HttpResponseMessage, Exception> errorBuilder);
    public sealed virtual IResponseBuilder WithNull();
}
internal class Neo4jClient.Execution.ResponseFailBuilder`1 : object {
    private HttpRequestMessage _request;
    private ISet`1<HttpStatusCode> _expectedStatusCodes;
    private ExecutionConfiguration _executionConfiguration;
    private IList`1<ErrorGenerator> _errorGenerators;
    private Func`2<HttpResponseMessage, bool> _errorCondition;
    public ResponseFailBuilder`1(HttpRequestMessage request, ISet`1<HttpStatusCode> expectedStatusCodes, ExecutionConfiguration executionConfiguration, IList`1<ErrorGenerator> errorGenerators, Func`2<HttpResponseMessage, bool> condition);
    public sealed virtual IResponseBuilder`1<TParse> WithError(Func`2<HttpResponseMessage, Exception> errorBuilder);
    public sealed virtual IResponseBuilder`1<TParse> WithDefault();
}
internal class Neo4jClient.Execution.RestExecutionPolicy : GraphClientBasedExecutionPolicy {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Database>k__BackingField;
    public TransactionExecutionPolicy TransactionExecutionPolicy { get; }
    public string Database { get; public set; }
    public RestExecutionPolicy(IGraphClient client);
    public virtual TransactionExecutionPolicy get_TransactionExecutionPolicy();
    public virtual void AfterExecution(IDictionary`2<string, object> executionMetadata, object executionContext);
    public virtual Uri BaseEndpoint(string database, bool autoCommit);
    public virtual Uri AddPath(Uri startUri, object startReference);
    [CompilerGeneratedAttribute]
public virtual string get_Database();
    [CompilerGeneratedAttribute]
public virtual void set_Database(string value);
    private Uri AddPath(Uri startUri, NodeReference node);
    private Uri AddPath(Uri startUri, RelationshipReference relationship);
}
internal enum Neo4jClient.Execution.TransactionExecutionPolicy : Enum {
    public int value__;
    public static TransactionExecutionPolicy Allowed;
    public static TransactionExecutionPolicy Denied;
    public static TransactionExecutionPolicy Required;
}
[ExtensionAttribute]
public static class Neo4jClient.Extensions.DriverExtensions : object {
    [ExtensionAttribute]
public static IAsyncSession AsyncSession(IDriver driver, Version databaseVersion, string database, bool isWrite, IEnumerable`1<string> bookmarks);
    [ExtensionAttribute]
public static IAsyncSession AsyncSession(IDriver driver, Version databaseVersion, string database, bool isWrite, IEnumerable`1<Bookmark> bookmarks);
}
[ExtensionAttribute]
public static class Neo4jClient.Extensions.EnumerableExtensions : object {
    [ExtensionAttribute]
public static bool ContentsEqual(IReadOnlyCollection`1<T> collection1, IReadOnlyCollection`1<T> collection2);
}
[ExtensionAttribute]
public static class Neo4jClient.Extensions.MemberInfoExtensions : object {
    [ExtensionAttribute]
internal static string GetNameUsingJsonProperty(MemberInfo info);
}
[ExtensionAttribute]
public static class Neo4jClient.Extensions.ObjectExtensions : object {
    [ExtensionAttribute]
public static bool In(T obj, IEnumerable`1<T> enumerable);
    [ExtensionAttribute]
public static bool NotIn(T obj, IEnumerable`1<T> enumerable);
}
public class Neo4jClient.GraphClient : object {
    internal static string GremlinPluginUnavailable;
    internal static string MaxExecutionTimeHeaderKey;
    public static JsonConverter[] DefaultJsonConverters;
    public static DefaultContractResolver DefaultJsonContractResolver;
    private ITransactionManager`1<HttpResponseMessage> transactionManager;
    private IExecutionPolicyFactory policyFactory;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private ExecutionConfiguration <ExecutionConfiguration>k__BackingField;
    internal Uri RootUri;
    internal RootApiResponse RootApiResponse;
    private string defaultDatabase;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private bool <UseJsonStreamingIfAvailable>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private List`1<JsonConverter> <JsonConverters>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private CypherCapabilities <CypherCapabilities>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private OperationCompletedEventHandler OperationCompleted;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private DefaultContractResolver <JsonContractResolver>k__BackingField;
    public ITransactionalGraphClient Tx { get; }
    public ExecutionConfiguration ExecutionConfiguration { get; private set; }
    public bool UseJsonStreamingIfAvailable { get; public set; }
    public bool IsConnected { get; }
    public ISerializer Serializer { get; }
    public ICypherFluentQuery Cypher { get; }
    public string DefaultDatabase { get; public set; }
    public Version ServerVersion { get; }
    public Uri RootEndpoint { get; }
    public Uri TransactionEndpoint { get; }
    public List`1<JsonConverter> JsonConverters { get; }
    public ITransaction Transaction { get; }
    public bool InTransaction { get; }
    public CypherCapabilities CypherCapabilities { get; private set; }
    public DefaultContractResolver JsonContractResolver { get; public set; }
    public ITransactionManager`1<HttpResponseMessage> TransactionManager { get; }
    public GraphClient(string rootUri, string username, string password);
    public GraphClient(Uri rootUri, string username, string password);
    public GraphClient(Uri rootUri, IHttpClient httpClient);
    private static GraphClient();
    public sealed virtual ITransactionalGraphClient get_Tx();
    [CompilerGeneratedAttribute]
public sealed virtual ExecutionConfiguration get_ExecutionConfiguration();
    [CompilerGeneratedAttribute]
private void set_ExecutionConfiguration(ExecutionConfiguration value);
    [CompilerGeneratedAttribute]
public bool get_UseJsonStreamingIfAvailable();
    [CompilerGeneratedAttribute]
public void set_UseJsonStreamingIfAvailable(bool value);
    [AsyncStateMachineAttribute("Neo4jClient.GraphClient/<ConnectAsync>d__21")]
[DebuggerStepThroughAttribute]
public virtual Task ConnectAsync(NeoServerConfiguration configuration);
    private Uri BuildUri(string relativeUri);
    private Uri BuildUri(string relativeUri, string database, bool supportsMultipleTenancy, string end);
    private string SerializeAsJson(object contents);
    public virtual bool get_IsConnected();
    private CustomJsonSerializer BuildSerializer();
    public sealed virtual ISerializer get_Serializer();
    private static string GetLastPathSegment(string uri);
    public sealed virtual ICypherFluentQuery get_Cypher();
    public sealed virtual string get_DefaultDatabase();
    public sealed virtual void set_DefaultDatabase(string value);
    public sealed virtual Version get_ServerVersion();
    public sealed virtual Uri get_RootEndpoint();
    public sealed virtual Uri get_TransactionEndpoint();
    [CompilerGeneratedAttribute]
public sealed virtual List`1<JsonConverter> get_JsonConverters();
    private void CheckTransactionEnvironmentWithPolicy(IExecutionPolicy policy);
    public sealed virtual ITransaction BeginTransaction();
    public sealed virtual ITransaction BeginTransaction(string bookmark);
    public sealed virtual ITransaction BeginTransaction(IEnumerable`1<string> bookmarks);
    public sealed virtual ITransaction BeginTransaction(TransactionScopeOption scopeOption);
    public sealed virtual ITransaction BeginTransaction(TransactionScopeOption scopeOption, string bookmark);
    public ITransaction BeginTransaction(TransactionScopeOption scopeOption, IEnumerable`1<string> bookmark);
    public sealed virtual ITransaction BeginTransaction(TransactionScopeOption scopeOption, IEnumerable`1<string> bookmarks, string database);
    public sealed virtual ITransaction get_Transaction();
    public sealed virtual bool get_InTransaction();
    public sealed virtual void EndTransaction();
    [CompilerGeneratedAttribute]
public sealed virtual CypherCapabilities get_CypherCapabilities();
    [CompilerGeneratedAttribute]
private void set_CypherCapabilities(CypherCapabilities value);
    [AsyncStateMachineAttribute("Neo4jClient.GraphClient/<PrepareCypherRequest>d__63`1")]
[DebuggerStepThroughAttribute]
private Task`1<CypherPartialResult> PrepareCypherRequest(CypherQuery query, IExecutionPolicy policy);
    [AsyncStateMachineAttribute("Neo4jClient.GraphClient/<Neo4jClient-IRawGraphClient-ExecuteGetCypherResultsAsync>d__64`1")]
[DebuggerStepThroughAttribute]
private sealed virtual override Task`1<IEnumerable`1<TResult>> Neo4jClient.IRawGraphClient.ExecuteGetCypherResultsAsync(CypherQuery query);
    [AsyncStateMachineAttribute("Neo4jClient.GraphClient/<Neo4jClient-IRawGraphClient-ExecuteCypherAsync>d__65")]
[DebuggerStepThroughAttribute]
private sealed virtual override Task Neo4jClient.IRawGraphClient.ExecuteCypherAsync(CypherQuery query);
    private void CheckRoot();
    [CompilerGeneratedAttribute]
public sealed virtual void add_OperationCompleted(OperationCompletedEventHandler value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_OperationCompleted(OperationCompletedEventHandler value);
    protected void OnOperationCompleted(OperationCompletedEventArgs args);
    protected virtual void Dispose(bool disposing);
    public sealed virtual void Dispose();
    [CompilerGeneratedAttribute]
public sealed virtual DefaultContractResolver get_JsonContractResolver();
    [CompilerGeneratedAttribute]
public sealed virtual void set_JsonContractResolver(DefaultContractResolver value);
    public sealed virtual Uri GetTransactionEndpoint(string database, bool autoCommit);
    public sealed virtual ITransactionManager`1<HttpResponseMessage> get_TransactionManager();
    [CompilerGeneratedAttribute]
private void <ConnectAsync>g__StopTimerAndNotifyCompleted|21_0(<>c__DisplayClass21_0& );
}
public class Neo4jClient.GraphClientFactory : object {
    private NeoServerConfiguration _configuration;
    public GraphClientFactory(NeoServerConfiguration configuration);
    [AsyncStateMachineAttribute("Neo4jClient.GraphClientFactory/<CreateAsync>d__2")]
[DebuggerStepThroughAttribute]
public sealed virtual Task`1<IGraphClient> CreateAsync();
    [AsyncStateMachineAttribute("Neo4jClient.GraphClientFactory/<CreateAsync>d__3")]
[DebuggerStepThroughAttribute]
public sealed virtual Task`1<IGraphClient> CreateAsync(IHttpClient httpClient);
}
public class Neo4jClient.HttpClientWrapper : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private AuthenticationHeaderValue <AuthenticationHeaderValue>k__BackingField;
    internal HttpClient Client;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Username>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Password>k__BackingField;
    internal AuthenticationHeaderValue AuthenticationHeaderValue { get; private set; }
    public string Username { get; private set; }
    public string Password { get; private set; }
    public HttpClientWrapper(string username, string password, HttpClient client);
    public HttpClientWrapper(HttpClient client);
    [CompilerGeneratedAttribute]
internal AuthenticationHeaderValue get_AuthenticationHeaderValue();
    [CompilerGeneratedAttribute]
private void set_AuthenticationHeaderValue(AuthenticationHeaderValue value);
    public sealed virtual Task`1<HttpResponseMessage> SendAsync(HttpRequestMessage request);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Username();
    [CompilerGeneratedAttribute]
private void set_Username(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Password();
    [CompilerGeneratedAttribute]
private void set_Password(string value);
}
[ExtensionAttribute]
internal static class Neo4jClient.HttpContentExtensions : object {
    [ExtensionAttribute]
public static Task`1<string> ReadAsStringAsync(HttpContent content);
    [AsyncStateMachineAttribute("Neo4jClient.HttpContentExtensions/<ReadAsJsonAsync>d__1`1")]
[DebuggerStepThroughAttribute]
[ExtensionAttribute]
public static Task`1<T> ReadAsJsonAsync(HttpContent content, IEnumerable`1<JsonConverter> jsonConverters, DefaultContractResolver resolver);
    [ExtensionAttribute]
public static Task`1<T> ReadAsJsonAsync(HttpContent content, IEnumerable`1<JsonConverter> jsonConverters);
}
public interface Neo4jClient.IAttachedReference {
    public IGraphClient Client { get; }
    public abstract virtual IGraphClient get_Client();
}
public interface Neo4jClient.IBoltGraphClient {
    public CypherCapabilities CypherCapabilities { get; }
    public Version ServerVersion { get; }
    public ISerializer Serializer { get; }
    public ExecutionConfiguration ExecutionConfiguration { get; }
    public bool IsConnected { get; }
    public bool UseDriverDateTypes { get; }
    [CompilerGeneratedAttribute]
public abstract virtual void add_OperationCompleted(OperationCompletedEventHandler value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_OperationCompleted(OperationCompletedEventHandler value);
    public abstract virtual CypherCapabilities get_CypherCapabilities();
    public abstract virtual Version get_ServerVersion();
    public abstract virtual ISerializer get_Serializer();
    public abstract virtual ExecutionConfiguration get_ExecutionConfiguration();
    public abstract virtual bool get_IsConnected();
    public abstract virtual Task ConnectAsync(NeoServerConfiguration configuration);
    public abstract virtual bool get_UseDriverDateTypes();
}
public interface Neo4jClient.ICypherGraphClient {
    public ICypherFluentQuery Cypher { get; }
    public abstract virtual ICypherFluentQuery get_Cypher();
}
public interface Neo4jClient.IGraphClient {
    public string DefaultDatabase { get; public set; }
    public CypherCapabilities CypherCapabilities { get; }
    public Uri RootEndpoint { get; }
    public Version ServerVersion { get; }
    public Uri TransactionEndpoint { get; }
    public ISerializer Serializer { get; }
    public ExecutionConfiguration ExecutionConfiguration { get; }
    public bool IsConnected { get; }
    public List`1<JsonConverter> JsonConverters { get; }
    public DefaultContractResolver JsonContractResolver { get; public set; }
    public ITransactionalGraphClient Tx { get; }
    [CompilerGeneratedAttribute]
public abstract virtual void add_OperationCompleted(OperationCompletedEventHandler value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_OperationCompleted(OperationCompletedEventHandler value);
    public abstract virtual string get_DefaultDatabase();
    public abstract virtual void set_DefaultDatabase(string value);
    public abstract virtual CypherCapabilities get_CypherCapabilities();
    public abstract virtual Uri get_RootEndpoint();
    public abstract virtual Version get_ServerVersion();
    public abstract virtual Uri get_TransactionEndpoint();
    public abstract virtual ISerializer get_Serializer();
    public abstract virtual ExecutionConfiguration get_ExecutionConfiguration();
    public abstract virtual bool get_IsConnected();
    public abstract virtual Task ConnectAsync(NeoServerConfiguration configuration);
    public abstract virtual List`1<JsonConverter> get_JsonConverters();
    public abstract virtual DefaultContractResolver get_JsonContractResolver();
    public abstract virtual void set_JsonContractResolver(DefaultContractResolver value);
    public abstract virtual Uri GetTransactionEndpoint(string database, bool autoCommit);
    public abstract virtual ITransactionalGraphClient get_Tx();
}
public interface Neo4jClient.IGraphClientFactory {
    public abstract virtual Task`1<IGraphClient> CreateAsync();
    public abstract virtual Task`1<IGraphClient> CreateAsync(IHttpClient client);
}
internal interface Neo4jClient.IHasNodeReference {
    public NodeReference Reference { get; }
    public abstract virtual NodeReference get_Reference();
}
public class Neo4jClient.IndexConfiguration : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private IndexType <Type>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private IndexProvider <Provider>k__BackingField;
    [JsonPropertyAttribute("type")]
public IndexType Type { get; public set; }
    [JsonPropertyAttribute("provider")]
public IndexProvider Provider { get; public set; }
    [CompilerGeneratedAttribute]
public IndexType get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(IndexType value);
    [CompilerGeneratedAttribute]
public IndexProvider get_Provider();
    [CompilerGeneratedAttribute]
public void set_Provider(IndexProvider value);
}
public class Neo4jClient.IndexEntry : object {
    private IList`1<KeyValuePair`2<string, object>> originalKeyValuesList;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private IEnumerable`1<KeyValuePair`2<string, object>> <KeyValues>k__BackingField;
    public string Name { get; public set; }
    public IEnumerable`1<KeyValuePair`2<string, object>> KeyValues { get; public set; }
    public IndexEntry(string name);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<KeyValuePair`2<string, object>> get_KeyValues();
    [CompilerGeneratedAttribute]
public void set_KeyValues(IEnumerable`1<KeyValuePair`2<string, object>> value);
    public void Add(string key, object value);
    public sealed virtual IEnumerator`1<KeyValuePair`2<string, object>> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
public enum Neo4jClient.IndexFor : Enum {
    public int value__;
    public static IndexFor Node;
    public static IndexFor Relationship;
}
public class Neo4jClient.IndexMetaData : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private bool <ToLowerCase>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Template>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Provider>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Type>k__BackingField;
    [JsonPropertyAttribute("to_lower_case")]
public bool ToLowerCase { get; public set; }
    [JsonPropertyAttribute("template")]
public string Template { get; public set; }
    [JsonPropertyAttribute("provider")]
public string Provider { get; public set; }
    [JsonPropertyAttribute("type")]
public string Type { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_ToLowerCase();
    [CompilerGeneratedAttribute]
public void set_ToLowerCase(bool value);
    [CompilerGeneratedAttribute]
public string get_Template();
    [CompilerGeneratedAttribute]
public void set_Template(string value);
    [CompilerGeneratedAttribute]
public string get_Provider();
    [CompilerGeneratedAttribute]
public void set_Provider(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
}
public enum Neo4jClient.IndexProvider : Enum {
    public int value__;
    public static IndexProvider lucene;
}
public enum Neo4jClient.IndexType : Enum {
    public int value__;
    public static IndexType fulltext;
    public static IndexType exact;
}
public interface Neo4jClient.IRawGraphClient {
    public bool InTransaction { get; }
    public abstract virtual Task`1<IEnumerable`1<TResult>> ExecuteGetCypherResultsAsync(CypherQuery query);
    public abstract virtual Task ExecuteCypherAsync(CypherQuery query);
    public abstract virtual bool get_InTransaction();
}
public interface Neo4jClient.IRelationshipAllowingParticipantNode`1 {
}
public interface Neo4jClient.IRelationshipAllowingSourceNode`1 {
}
public interface Neo4jClient.IRelationshipAllowingTargetNode`1 {
}
public interface Neo4jClient.ITypedNodeReference {
    public Type NodeType { get; }
    public abstract virtual Type get_NodeType();
}
[ExtensionAttribute]
internal static class Neo4jClient.JTokenExtensions : object {
    [ExtensionAttribute]
internal static string AsString(JToken token);
}
public class Neo4jClient.Neo4jDateTimeAttribute : Attribute {
}
[ExtensionAttribute]
public static class Neo4jClient.Neo4jDriverExtensions : object {
    private static string DefaultDateTimeFormat;
    private static string DefaultTimeSpanFormat;
    [ExtensionAttribute]
public static Task`1<IResultCursor> Run(IAsyncSession session, CypherQuery query, IGraphClient gc);
    [ExtensionAttribute]
public static Task`1<IResultCursor> RunAsync(IAsyncTransaction transaction, CypherQuery query, IGraphClient gc);
    [ExtensionAttribute]
public static Task`1<IResultCursor> RunAsync(IAsyncQueryRunner queryRunner, CypherQuery query, IGraphClient gc);
    [ExtensionAttribute]
public static Dictionary`2<string, object> ToNeo4jDriverParameters(CypherQuery query, IGraphClient gc);
    private static object Serialize(object value, IList`1<JsonConverter> converters, IGraphClient gc, IEnumerable`1<CustomAttributeData> customAttributes);
    private static bool CanHandleNativeDateTimeType(Type type);
    private static object SerializeObject(Type type, object value, IList`1<JsonConverter> converters, IGraphClient gc);
    private static string GetPropertyName(string argName, IGraphClient gc, Type type);
    private static object SerializeCollection(IEnumerable value, IList`1<JsonConverter> converters, IGraphClient gc);
    private static object SerializePrimitive(Type type, TypeInfo typeInfo, object instance);
    private static string SerializeDateTime(DateTime dateTime);
    private static string SerializeDateTimeOffset(DateTimeOffset dateTime);
    private static string SerializeTimeSpan(TimeSpan timeSpan);
    private static object SerializeDictionary(Type type, object value, IList`1<JsonConverter> converters, IGraphClient gc);
}
[AttributeUsageAttribute("384")]
public class Neo4jClient.Neo4jIgnoreAttribute : Attribute {
}
[DataContractAttribute]
public class Neo4jClient.NeoException : Exception {
    private string neoMessage;
    private string neoException;
    private string neoFullName;
    private String[] neoStackTrace;
    public string NeoMessage { get; }
    public string NeoExceptionName { get; }
    public string NeoFullName { get; }
    public String[] NeoStackTrace { get; }
    internal NeoException(ExceptionResponse response);
    public string get_NeoMessage();
    public string get_NeoExceptionName();
    public string get_NeoFullName();
    public String[] get_NeoStackTrace();
}
public class Neo4jClient.NeoServerConfiguration : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private RootApiResponse <ApiConfig>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private Uri <RootUri>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private Nullable`1<EncryptionLevel> <EncryptionLevel>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Username>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Password>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Realm>k__BackingField;
    internal RootApiResponse ApiConfig { get; private set; }
    internal Uri RootUri { get; private set; }
    internal Nullable`1<EncryptionLevel> EncryptionLevel { get; }
    internal string Username { get; private set; }
    internal string Password { get; private set; }
    internal string Realm { get; private set; }
    private NeoServerConfiguration(RootApiResponse apiConfig);
    [CompilerGeneratedAttribute]
internal RootApiResponse get_ApiConfig();
    [CompilerGeneratedAttribute]
private void set_ApiConfig(RootApiResponse value);
    [CompilerGeneratedAttribute]
internal Uri get_RootUri();
    [CompilerGeneratedAttribute]
private void set_RootUri(Uri value);
    [CompilerGeneratedAttribute]
internal Nullable`1<EncryptionLevel> get_EncryptionLevel();
    [CompilerGeneratedAttribute]
internal string get_Username();
    [CompilerGeneratedAttribute]
private void set_Username(string value);
    [CompilerGeneratedAttribute]
internal string get_Password();
    [CompilerGeneratedAttribute]
private void set_Password(string value);
    [CompilerGeneratedAttribute]
internal string get_Realm();
    [CompilerGeneratedAttribute]
private void set_Realm(string value);
    [AsyncStateMachineAttribute("Neo4jClient.NeoServerConfiguration/<GetConfigurationAsync>d__24")]
[DebuggerStepThroughAttribute]
public static Task`1<NeoServerConfiguration> GetConfigurationAsync(Uri rootUri, string username, string password, string realm, Nullable`1<EncryptionLevel> encryptionLevel);
    [AsyncStateMachineAttribute("Neo4jClient.NeoServerConfiguration/<GetConfigurationAsync>d__25")]
[DebuggerStepThroughAttribute]
internal static Task`1<NeoServerConfiguration> GetConfigurationAsync(Uri rootUri, string username, string password, string realm, Nullable`1<EncryptionLevel> encryptionLevel, ExecutionConfiguration executionConfiguration);
}
public class Neo4jClient.Node`1 : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private NodeReference`1<TNode> <Reference>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private TNode <Data>k__BackingField;
    public NodeReference`1<TNode> Reference { get; }
    public TNode Data { get; }
    private IGraphClient Neo4jClient.IAttachedReference.Client { get; }
    private NodeReference Neo4jClient.IHasNodeReference.Reference { get; }
    public Node`1(TNode data, NodeReference`1<TNode> reference);
    public Node`1(TNode data, long id, IGraphClient client);
    [CompilerGeneratedAttribute]
public NodeReference`1<TNode> get_Reference();
    [CompilerGeneratedAttribute]
public TNode get_Data();
    private sealed virtual override IGraphClient Neo4jClient.IAttachedReference.get_Client();
    private sealed virtual override NodeReference Neo4jClient.IHasNodeReference.get_Reference();
    public static bool op_Equality(Node`1<TNode> lhs, Node`1<TNode> rhs);
    public static bool op_Inequality(Node`1<TNode> lhs, Node`1<TNode> rhs);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
[DebuggerDisplayAttribute("Node {Id}")]
public class Neo4jClient.NodeReference : object {
    private IGraphClient client;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private long <Id>k__BackingField;
    public long Id { get; }
    public Type NodeType { get; }
    private IGraphClient Neo4jClient.IAttachedReference.Client { get; }
    public NodeReference(long id);
    public NodeReference(long id, IGraphClient client);
    [CompilerGeneratedAttribute]
public long get_Id();
    public Type get_NodeType();
    private sealed virtual override IGraphClient Neo4jClient.IAttachedReference.get_Client();
    public static NodeReference op_Implicit(long nodeId);
    public static bool op_Equality(NodeReference lhs, NodeReference rhs);
    public static bool op_Inequality(NodeReference lhs, NodeReference rhs);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
[DebuggerDisplayAttribute("Node {Id}")]
public class Neo4jClient.NodeReference`1 : NodeReference {
    private Type Neo4jClient.ITypedNodeReference.NodeType { get; }
    public NodeReference`1(long id);
    public NodeReference`1(long id, IGraphClient client);
    private static void CheckTNode();
    private sealed virtual override Type Neo4jClient.ITypedNodeReference.get_NodeType();
    public static NodeReference`1<TNode> op_Implicit(long nodeId);
}
public class Neo4jClient.OperationCompletedEventArgs : EventArgs {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Database>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Identifier>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private Bookmark <LastBookmark>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private Bookmarks <LastBookmarks>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <QueryText>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private int <ResourcesReturned>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private TimeSpan <TimeTaken>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private Exception <Exception>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private Nullable`1<int> <MaxExecutionTime>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private NameValueCollection <CustomHeaders>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private IEnumerable`1<Bookmark> <BookmarksUsed>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private QueryStats <QueryStats>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private Config <ConfigUsed>k__BackingField;
    public string Database { get; public set; }
    public string Identifier { get; public set; }
    [ObsoleteAttribute("Replaced with 'LastBookmarks' will be removed in the next version.")]
public Bookmark LastBookmark { get; public set; }
    public Bookmarks LastBookmarks { get; public set; }
    public string QueryText { get; public set; }
    public int ResourcesReturned { get; public set; }
    public TimeSpan TimeTaken { get; public set; }
    public Exception Exception { get; public set; }
    public bool HasException { get; }
    public Nullable`1<int> MaxExecutionTime { get; public set; }
    public NameValueCollection CustomHeaders { get; public set; }
    public IEnumerable`1<Bookmark> BookmarksUsed { get; public set; }
    public QueryStats QueryStats { get; public set; }
    public Config ConfigUsed { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Database();
    [CompilerGeneratedAttribute]
public void set_Database(string value);
    [CompilerGeneratedAttribute]
public string get_Identifier();
    [CompilerGeneratedAttribute]
public void set_Identifier(string value);
    [CompilerGeneratedAttribute]
public Bookmark get_LastBookmark();
    [CompilerGeneratedAttribute]
public void set_LastBookmark(Bookmark value);
    [CompilerGeneratedAttribute]
public Bookmarks get_LastBookmarks();
    [CompilerGeneratedAttribute]
public void set_LastBookmarks(Bookmarks value);
    [CompilerGeneratedAttribute]
public string get_QueryText();
    [CompilerGeneratedAttribute]
public void set_QueryText(string value);
    [CompilerGeneratedAttribute]
public int get_ResourcesReturned();
    [CompilerGeneratedAttribute]
public void set_ResourcesReturned(int value);
    [CompilerGeneratedAttribute]
public TimeSpan get_TimeTaken();
    [CompilerGeneratedAttribute]
public void set_TimeTaken(TimeSpan value);
    [CompilerGeneratedAttribute]
public Exception get_Exception();
    [CompilerGeneratedAttribute]
public void set_Exception(Exception value);
    public bool get_HasException();
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaxExecutionTime();
    [CompilerGeneratedAttribute]
public void set_MaxExecutionTime(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public NameValueCollection get_CustomHeaders();
    [CompilerGeneratedAttribute]
public void set_CustomHeaders(NameValueCollection value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<Bookmark> get_BookmarksUsed();
    [CompilerGeneratedAttribute]
public void set_BookmarksUsed(IEnumerable`1<Bookmark> value);
    [CompilerGeneratedAttribute]
public QueryStats get_QueryStats();
    [CompilerGeneratedAttribute]
public void set_QueryStats(QueryStats value);
    [CompilerGeneratedAttribute]
public Config get_ConfigUsed();
    [CompilerGeneratedAttribute]
public void set_ConfigUsed(Config value);
    public virtual string ToString();
}
public class Neo4jClient.OperationCompletedEventHandler : MulticastDelegate {
    public OperationCompletedEventHandler(object object, IntPtr method);
    public virtual void Invoke(object sender, OperationCompletedEventArgs e);
    public virtual IAsyncResult BeginInvoke(object sender, OperationCompletedEventArgs e, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
public class Neo4jClient.OrphanedTransactionException : Exception {
    private NeoException _internalException;
    private string _transactionEndpoint;
    public NeoException InternalException { get; }
    public string TransactionEndpoint { get; }
    internal OrphanedTransactionException(NeoException internalException, string transactionEndpoint);
    public NeoException get_InternalException();
    public string get_TransactionEndpoint();
}
public abstract class Neo4jClient.Relationship : object {
    private object data;
    private NodeReference otherNode;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private RelationshipDirection <Direction>k__BackingField;
    public NodeReference OtherNode { get; }
    public string RelationshipTypeKey { get; }
    public object Data { get; }
    public RelationshipDirection Direction { get; public set; }
    protected Relationship(NodeReference targetNode);
    protected internal Relationship(NodeReference targetNode, object data);
    public static StartBit ByIndexLookup(string indexName, string propertyName, object value);
    public static StartBit ByIndexQuery(string indexName, string query);
    public NodeReference get_OtherNode();
    public abstract virtual string get_RelationshipTypeKey();
    public object get_Data();
    [CompilerGeneratedAttribute]
public RelationshipDirection get_Direction();
    [CompilerGeneratedAttribute]
public void set_Direction(RelationshipDirection value);
    internal static RelationshipDirection DetermineRelationshipDirection(Type baseNodeType, Relationship relationship);
    internal static IEnumerable`1<Type> GetAllowedNodeTypes(Type relationshipType, RelationshipEnd end);
}
public abstract class Neo4jClient.Relationship`1 : Relationship {
    protected Relationship`1(NodeReference targetNode, TData data);
}
public enum Neo4jClient.RelationshipDirection : Enum {
    public int value__;
    public static RelationshipDirection Automatic;
    public static RelationshipDirection Incoming;
    public static RelationshipDirection Outgoing;
}
public enum Neo4jClient.RelationshipEnd : Enum {
    public int value__;
    public static RelationshipEnd SourceNode;
    public static RelationshipEnd TargetNode;
}
[DebuggerDisplayAttribute("Relationship {Reference.Id} of type {TypeKey} from node {StartNodeReference.Id} to node {EndNodeReference.Id}")]
public class Neo4jClient.RelationshipInstance : object {
    private RelationshipReference reference;
    private NodeReference startNodeReference;
    private NodeReference endNodeReference;
    private string typeKey;
    public RelationshipReference Reference { get; }
    public NodeReference StartNodeReference { get; }
    public NodeReference EndNodeReference { get; }
    public string TypeKey { get; }
    public RelationshipInstance(RelationshipReference reference, NodeReference startNodeReference, NodeReference endNodeReference, string typeKey);
    public RelationshipReference get_Reference();
    public NodeReference get_StartNodeReference();
    public NodeReference get_EndNodeReference();
    public string get_TypeKey();
}
public class Neo4jClient.RelationshipInstance`1 : RelationshipInstance {
    private TData data;
    public RelationshipReference`1<TData> Reference { get; }
    public TData Data { get; }
    public RelationshipInstance`1(RelationshipReference`1<TData> reference, NodeReference startNodeReference, NodeReference endNodeReference, string typeKey, TData data);
    public RelationshipReference`1<TData> get_Reference();
    public TData get_Data();
}
[DebuggerDisplayAttribute("Relationship {id}")]
public class Neo4jClient.RelationshipReference : object {
    private long id;
    private IGraphClient client;
    public long Id { get; }
    private IGraphClient Neo4jClient.IAttachedReference.Client { get; }
    public RelationshipReference(long id);
    public RelationshipReference(long id, IGraphClient client);
    public long get_Id();
    public static RelationshipReference op_Implicit(long relationshipId);
    public static bool op_Equality(RelationshipReference lhs, RelationshipReference rhs);
    public static bool op_Inequality(RelationshipReference lhs, RelationshipReference rhs);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override IGraphClient Neo4jClient.IAttachedReference.get_Client();
}
[DebuggerDisplayAttribute("Relationship {Id}")]
public class Neo4jClient.RelationshipReference`1 : RelationshipReference {
    public RelationshipReference`1(long id);
    public RelationshipReference`1(long id, IGraphClient client);
}
internal class Neo4jClient.Serialization.CommonDeserializerMethods : object {
    private static Regex DateRegex;
    private static Regex DateTypeNameRegex;
    private static Dictionary`2<Type, Dictionary`2<string, PropertyInfo>> PropertyInfoCache;
    private static object PropertyInfoCacheLock;
    private static CommonDeserializerMethods();
    public static string RemoveResultsFromJson(string content);
    public static NeoException DeserializeNeo4jError(JToken error);
    public static string ReplaceAllDateInstancesWithNeoDates(string content);
    public static Nullable`1<DateTimeOffset> ParseDateTimeOffset(JToken value);
    public static Nullable`1<DateTime> ParseDateTime(JToken value);
    public static object CoerceValue(DeserializationContext context, PropertyInfo propertyInfo, JToken value, IEnumerable`1<TypeMapping> typeMappings, int nestingLevel);
    public static void SetPropertyValue(DeserializationContext context, object targetObject, PropertyInfo propertyInfo, JToken value, IEnumerable`1<TypeMapping> typeMappings, int nestingLevel);
    public static object CreateAndMap(DeserializationContext context, Type type, JToken element, IEnumerable`1<TypeMapping> typeMappings, int nestingLevel);
    private static bool TryJsonConverters(DeserializationContext context, Type type, JToken element, Object& instance);
    private static object MutateObject(DeserializationContext context, JToken value, IEnumerable`1<TypeMapping> typeMappings, int nestingLevel, TypeMapping mapping, Type propertyType);
    public static Dictionary`2<string, PropertyInfo> ApplyPropertyCasing(DeserializationContext context, Dictionary`2<string, PropertyInfo> properties);
    public static void Map(DeserializationContext context, object targetObject, JToken parentJsonToken, IEnumerable`1<TypeMapping> typeMappings, int nestingLevel);
    public static IDictionary BuildDictionary(DeserializationContext context, Type type, JEnumerable`1<JToken> elements, IEnumerable`1<TypeMapping> typeMappings, int nestingLevel);
    public static IList BuildList(DeserializationContext context, Type type, JEnumerable`1<JToken> elements, IEnumerable`1<TypeMapping> typeMappings, int nestingLevel);
    public static Array BuildArray(DeserializationContext context, Type type, Type itemType, JEnumerable`1<JToken> elements, IEnumerable`1<TypeMapping> typeMappings, int nestingLevel);
    public static IList BuildIEnumerable(DeserializationContext context, Type type, JEnumerable`1<JToken> elements, IEnumerable`1<TypeMapping> typeMappings, int nestingLevel);
    private static Dictionary`2<string, PropertyInfo> GetPropertiesForType(DeserializationContext context, Type objType);
}
public class Neo4jClient.Serialization.CustomJsonDeserializer : object {
    private IEnumerable`1<JsonConverter> jsonConverters;
    private CultureInfo culture;
    private DefaultContractResolver jsonResolver;
    public CustomJsonDeserializer(IEnumerable`1<JsonConverter> jsonConverters);
    public CustomJsonDeserializer(IEnumerable`1<JsonConverter> jsonConverters, CultureInfo cultureInfo, DefaultContractResolver resolver);
    public T Deserialize(string content);
}
public class Neo4jClient.Serialization.CustomJsonSerializer : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private IEnumerable`1<JsonConverter> <JsonConverters>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <ContentType>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <DateFormat>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Namespace>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <RootElement>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private NullValueHandling <NullHandling>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private bool <QuoteName>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private IContractResolver <JsonContractResolver>k__BackingField;
    public IEnumerable`1<JsonConverter> JsonConverters { get; public set; }
    public string ContentType { get; public set; }
    public string DateFormat { get; public set; }
    public string Namespace { get; public set; }
    public string RootElement { get; public set; }
    public NullValueHandling NullHandling { get; public set; }
    public bool QuoteName { get; public set; }
    public IContractResolver JsonContractResolver { get; public set; }
    [CompilerGeneratedAttribute]
public IEnumerable`1<JsonConverter> get_JsonConverters();
    [CompilerGeneratedAttribute]
public void set_JsonConverters(IEnumerable`1<JsonConverter> value);
    [CompilerGeneratedAttribute]
public string get_ContentType();
    [CompilerGeneratedAttribute]
public void set_ContentType(string value);
    [CompilerGeneratedAttribute]
public string get_DateFormat();
    [CompilerGeneratedAttribute]
public void set_DateFormat(string value);
    [CompilerGeneratedAttribute]
public string get_Namespace();
    [CompilerGeneratedAttribute]
public void set_Namespace(string value);
    [CompilerGeneratedAttribute]
public string get_RootElement();
    [CompilerGeneratedAttribute]
public void set_RootElement(string value);
    [CompilerGeneratedAttribute]
public NullValueHandling get_NullHandling();
    [CompilerGeneratedAttribute]
public void set_NullHandling(NullValueHandling value);
    [CompilerGeneratedAttribute]
public bool get_QuoteName();
    [CompilerGeneratedAttribute]
public void set_QuoteName(bool value);
    [CompilerGeneratedAttribute]
public IContractResolver get_JsonContractResolver();
    [CompilerGeneratedAttribute]
public void set_JsonContractResolver(IContractResolver value);
    public sealed virtual string Serialize(object obj);
    public T Deserialize(string content);
}
public class Neo4jClient.Serialization.CypherJsonDeserializer`1 : object {
    private IGraphClient client;
    private CypherResultMode resultMode;
    private CypherResultFormat resultFormat;
    private bool inTransaction;
    private bool inBolt;
    private CultureInfo culture;
    public CypherJsonDeserializer`1(IGraphClient client, CypherResultMode resultMode, CypherResultFormat resultFormat);
    public CypherJsonDeserializer`1(IGraphClient client, CypherResultMode resultMode, CypherResultFormat resultFormat, bool inTransaction);
    public CypherJsonDeserializer`1(IGraphClient client, CypherResultMode resultMode, CypherResultFormat resultFormat, bool inTransaction, bool inBolt);
    public sealed virtual IEnumerable`1<TResult> Deserialize(string content, bool isHttp);
    private IEnumerable`1<TResult> DeserializeInternal(string content, bool isHttp);
    private IEnumerable`1<TResult> DeserializeResultSet(JToken resultRoot, DeserializationContext context, bool isHttp);
    private string GetStringPropertyFromObject(JObject obj, string propertyName);
    private NeoException BuildNeoException(JToken error);
    public sealed virtual PartialDeserializationContext CheckForErrorsInTransactionResponse(string content);
    private JToken GetRootResultInTransaction(JObject root);
    public sealed virtual IEnumerable`1<TResult> DeserializeFromTransactionPartialContext(PartialDeserializationContext context, bool isHttp);
    private IEnumerable`1<TResult> FullDeserializationFromTransactionResponse(JsonTextReader reader, DeserializationContext context, bool isHttp);
    private IEnumerable`1<TResult> DeserializeFromRoot(string content, JsonTextReader reader, DeserializationContext context, bool isHttp);
    private IEnumerable`1<TResult> ParseInSingleColumnMode(DeserializationContext context, JToken root, String[] columnNames, TypeMapping[] jsonTypeMappings, bool isHttp);
    private IEnumerable`1<TResult> ParseInProjectionMode(DeserializationContext context, JToken root, String[] columnNames, TypeMapping[] jsonTypeMappings, bool isHttp);
    private TResult ReadProjectionRowUsingCtor(DeserializationContext context, JToken row, IDictionary`2<string, PropertyInfo> propertiesDictionary, IList`1<string> columnNames, IEnumerable`1<TypeMapping> jsonTypeMappings, ConstructorInfo ctor);
    private TResult ReadProjectionRowUsingProperties(DeserializationContext context, JToken row, IDictionary`2<string, PropertyInfo> propertiesDictionary, IList`1<string> columnNames, TypeMapping[] jsonTypeMappings);
    private static bool IsNullArray(PropertyInfo property, JToken cell);
    [CompilerGeneratedAttribute]
private object <DeserializeInternal>b__11_3(object n);
    [CompilerGeneratedAttribute]
private object <DeserializeInternal>b__11_6(object n);
    [CompilerGeneratedAttribute]
private object <DeserializeResultSet>b__12_3(object n);
    [CompilerGeneratedAttribute]
private object <DeserializeResultSet>b__12_6(object n);
}
public class Neo4jClient.Serialization.DeserializationContext : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private CultureInfo <Culture>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private JsonConverter[] <JsonConverters>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private IContractResolver <JsonContractResolver>k__BackingField;
    public CultureInfo Culture { get; public set; }
    public JsonConverter[] JsonConverters { get; public set; }
    public IContractResolver JsonContractResolver { get; public set; }
    [CompilerGeneratedAttribute]
public CultureInfo get_Culture();
    [CompilerGeneratedAttribute]
public void set_Culture(CultureInfo value);
    [CompilerGeneratedAttribute]
public JsonConverter[] get_JsonConverters();
    [CompilerGeneratedAttribute]
public void set_JsonConverters(JsonConverter[] value);
    [CompilerGeneratedAttribute]
public IContractResolver get_JsonContractResolver();
    [CompilerGeneratedAttribute]
public void set_JsonContractResolver(IContractResolver value);
}
public class Neo4jClient.Serialization.DeserializationException : Exception {
    public DeserializationException(string message);
    public DeserializationException(string message, Exception innerException);
}
public class Neo4jClient.Serialization.EnumValueConverter : JsonConverter {
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual bool CanConvert(Type objectType);
}
public interface Neo4jClient.Serialization.ICypherJsonDeserializer`1 {
    public abstract virtual PartialDeserializationContext CheckForErrorsInTransactionResponse(string content);
    public abstract virtual IEnumerable`1<TResult> Deserialize(string content, bool isHttp);
    public abstract virtual IEnumerable`1<TResult> DeserializeFromTransactionPartialContext(PartialDeserializationContext context, bool isHttp);
}
public interface Neo4jClient.Serialization.ISerializer {
    public abstract virtual string Serialize(object toSerialize);
}
public class Neo4jClient.Serialization.LocalDateTimeConverter : JsonConverter {
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual bool CanConvert(Type objectType);
}
public class Neo4jClient.Serialization.Neo4jContractResolver : DefaultContractResolver {
    private Dictionary`2<Type, Dictionary`2<string, string>> renames;
    protected virtual JsonProperty CreateProperty(MemberInfo member, MemberSerialization memberSerialization);
    private bool IsRenamed(Type type, string jsonPropertyName, String& newJsonPropertyName);
}
public class Neo4jClient.Serialization.NullableEnumValueConverter : JsonConverter {
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual bool CanConvert(Type objectType);
}
public class Neo4jClient.Serialization.PartialDeserializationContext : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private JToken <RootResult>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private DeserializationContext <DeserializationContext>k__BackingField;
    public JToken RootResult { get; public set; }
    public DeserializationContext DeserializationContext { get; public set; }
    [CompilerGeneratedAttribute]
public JToken get_RootResult();
    [CompilerGeneratedAttribute]
public void set_RootResult(JToken value);
    [CompilerGeneratedAttribute]
public DeserializationContext get_DeserializationContext();
    [CompilerGeneratedAttribute]
public void set_DeserializationContext(DeserializationContext value);
}
public class Neo4jClient.Serialization.TimeZoneInfoConverter : JsonConverter {
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual bool CanConvert(Type objectType);
}
public class Neo4jClient.Serialization.TypeConverterBasedJsonConverter : JsonConverter {
    internal static Type[] BuiltinTypes;
    private static TypeConverterBasedJsonConverter();
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual bool CanConvert(Type objectType);
}
internal class Neo4jClient.Serialization.TypeMapping : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private Func`3<int, Type, bool> <ShouldTriggerForPropertyType>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private Func`2<Type, Type> <DetermineTypeToParseJsonIntoBasedOnPropertyType>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private Func`2<object, object> <MutationCallback>k__BackingField;
    public Func`3<int, Type, bool> ShouldTriggerForPropertyType { get; public set; }
    public Func`2<Type, Type> DetermineTypeToParseJsonIntoBasedOnPropertyType { get; public set; }
    public Func`2<object, object> MutationCallback { get; public set; }
    [CompilerGeneratedAttribute]
public Func`3<int, Type, bool> get_ShouldTriggerForPropertyType();
    [CompilerGeneratedAttribute]
public void set_ShouldTriggerForPropertyType(Func`3<int, Type, bool> value);
    [CompilerGeneratedAttribute]
public Func`2<Type, Type> get_DetermineTypeToParseJsonIntoBasedOnPropertyType();
    [CompilerGeneratedAttribute]
public void set_DetermineTypeToParseJsonIntoBasedOnPropertyType(Func`2<Type, Type> value);
    [CompilerGeneratedAttribute]
public Func`2<object, object> get_MutationCallback();
    [CompilerGeneratedAttribute]
public void set_MutationCallback(Func`2<object, object> value);
}
public class Neo4jClient.Serialization.ZonedDateTimeConverter : JsonConverter {
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual bool CanConvert(Type objectType);
}
[ExtensionAttribute]
internal static class Neo4jClient.StatementResultHelper : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private static JsonSerializerSettings <JsonSettings>k__BackingField;
    internal static JsonSerializerSettings JsonSettings { get; internal set; }
    private static StatementResultHelper();
    [CompilerGeneratedAttribute]
internal static JsonSerializerSettings get_JsonSettings();
    [CompilerGeneratedAttribute]
internal static void set_JsonSettings(JsonSerializerSettings value);
    [ExtensionAttribute]
internal static string ToJsonString(INode node, bool inSet, bool isNested, bool isNestedInList);
    [ExtensionAttribute]
internal static string ToJsonString(IRelationship relationship, bool inSet, bool isNested, bool isNestedInList);
    [ExtensionAttribute]
internal static string ToJsonString(object o, bool inSet, bool isNested, bool isNestedInList, bool isClass);
    private static string GetColumns(IEnumerable`1<string> keys);
    [ExtensionAttribute]
public static IEnumerable`1<T> Deserialize(IRecord record, ICypherJsonDeserializer`1<T> deserializer, CypherResultMode mode);
    [ExtensionAttribute]
public static T Parse(IRecord record, IGraphClient graphClient);
    private static T ParseMultipleKeys(IRecord record, IGraphClient graphClient);
    [ExtensionAttribute]
private static T Parse(IRecord record, string identifier, IGraphClient graphClient);
    [ExtensionAttribute]
private static T ParseCollection(IRecord record, string identifier, IGraphClient graphClient);
    [ExtensionAttribute]
private static T ParseArray(IRecord record, string identifier, IGraphClient graphClient);
    private static MethodInfo GetParsed(Type genericParameter);
    [ExtensionAttribute]
public static string ParseAnonymous(IRecord record, IGraphClient graphClient, bool onlyReturnData);
    private static object ParsePathResponse(IPath path);
    [ExtensionAttribute]
private static object ParseAnonymousAsDynamic(IRecord record, IGraphClient graphClient, bool onlyReturnData);
    private static object ParseElementInCollectionForAnonymous(IGraphClient graphClient, object item, string identifier);
    [ExtensionAttribute]
public static bool IsAnonymous(Type type);
    private static T ConstructNew();
    [ExtensionAttribute]
private static bool IsList(Type type);
    [ExtensionAttribute]
private static bool IsPrimitive(Type type);
    [ExtensionAttribute]
private static T ParsePrimitive(IRecord record, string identifier);
}
internal class Neo4jClient.Transactions.Bolt.BoltNeo4jTransaction : object {
    internal IAsyncTransaction DriverTransaction;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private IAsyncSession <Session>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private IList`1<string> <Bookmarks>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private Guid <Id>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Database>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private bool <IsOpen>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private NameValueCollection <CustomHeaders>k__BackingField;
    internal IAsyncSession Session { get; }
    internal IList`1<string> Bookmarks { get; internal set; }
    public Guid Id { get; private set; }
    public string Database { get; public set; }
    public bool IsOpen { get; private set; }
    public NameValueCollection CustomHeaders { get; public set; }
    public Bookmark LastBookmark { get; }
    public BoltNeo4jTransaction(Version version, IDriver driver, IEnumerable`1<string> bookmarks, string database, bool isWrite);
    public BoltNeo4jTransaction(IAsyncSession session, IAsyncTransaction transaction, string database);
    [CompilerGeneratedAttribute]
internal IAsyncSession get_Session();
    [CompilerGeneratedAttribute]
internal IList`1<string> get_Bookmarks();
    [CompilerGeneratedAttribute]
internal void set_Bookmarks(IList`1<string> value);
    [CompilerGeneratedAttribute]
public Guid get_Id();
    [CompilerGeneratedAttribute]
private void set_Id(Guid value);
    protected virtual void Dispose(bool isDisposing);
    public sealed virtual void Dispose();
    [CompilerGeneratedAttribute]
public sealed virtual string get_Database();
    [CompilerGeneratedAttribute]
public void set_Database(string value);
    [AsyncStateMachineAttribute("Neo4jClient.Transactions.Bolt.BoltNeo4jTransaction/<CommitAsync>d__20")]
[DebuggerStepThroughAttribute]
public sealed virtual Task CommitAsync();
    private void CheckOpenStatus();
    [AsyncStateMachineAttribute("Neo4jClient.Transactions.Bolt.BoltNeo4jTransaction/<RollbackAsync>d__22")]
[DebuggerStepThroughAttribute]
public sealed virtual Task RollbackAsync();
    [AsyncStateMachineAttribute("Neo4jClient.Transactions.Bolt.BoltNeo4jTransaction/<KeepAliveAsync>d__23")]
[DebuggerStepThroughAttribute]
public sealed virtual Task KeepAliveAsync();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsOpen();
    [CompilerGeneratedAttribute]
private void set_IsOpen(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual NameValueCollection get_CustomHeaders();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CustomHeaders(NameValueCollection value);
    public sealed virtual Bookmark get_LastBookmark();
    public static void DoCommit(ITransactionExecutionEnvironmentBolt transactionExecutionEnvironment);
    public static void DoRollback(ITransactionExecutionEnvironmentBolt transactionExecutionEnvironment);
}
internal class Neo4jClient.Transactions.Bolt.BoltNeo4jTransactionProxy : BoltTransactionScopeProxy {
    private bool doCommitInScope;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Database>k__BackingField;
    public bool Committable { get; }
    public bool IsOpen { get; }
    public Bookmark LastBookmark { get; }
    public string Database { get; public set; }
    public BoltNeo4jTransactionProxy(ITransactionalGraphClient client, BoltTransactionContext transactionContext, bool newScope);
    public virtual bool get_Committable();
    public virtual bool get_IsOpen();
    public virtual Bookmark get_LastBookmark();
    [AsyncStateMachineAttribute("Neo4jClient.Transactions.Bolt.BoltNeo4jTransactionProxy/<DoCommitAsync>d__8")]
[DebuggerStepThroughAttribute]
protected virtual Task DoCommitAsync();
    [CompilerGeneratedAttribute]
public virtual string get_Database();
    [CompilerGeneratedAttribute]
public virtual void set_Database(string value);
    protected virtual bool ShouldDisposeTransaction();
    public virtual Task RollbackAsync();
    public virtual Task KeepAliveAsync();
}
public class Neo4jClient.Transactions.Bolt.BoltResponse : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private IResultCursor <StatementResult>k__BackingField;
    public IResultCursor StatementResult { get; public set; }
    [CompilerGeneratedAttribute]
public IResultCursor get_StatementResult();
    [CompilerGeneratedAttribute]
public void set_StatementResult(IResultCursor value);
}
internal class Neo4jClient.Transactions.Bolt.BoltSuppressTransactionProxy : BoltTransactionScopeProxy {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Database>k__BackingField;
    public string Database { get; public set; }
    public bool Committable { get; }
    public bool IsOpen { get; }
    public Bookmark LastBookmark { get; }
    public BoltSuppressTransactionProxy(ITransactionalGraphClient client);
    [CompilerGeneratedAttribute]
public virtual string get_Database();
    [CompilerGeneratedAttribute]
public virtual void set_Database(string value);
    protected virtual bool ShouldDisposeTransaction();
    protected virtual Task DoCommitAsync();
    public virtual bool get_Committable();
    public virtual Task RollbackAsync();
    [AsyncStateMachineAttribute("Neo4jClient.Transactions.Bolt.BoltSuppressTransactionProxy/<KeepAliveAsync>d__10")]
[DebuggerStepThroughAttribute]
public virtual Task KeepAliveAsync();
    public virtual bool get_IsOpen();
    public virtual Bookmark get_LastBookmark();
}
internal class Neo4jClient.Transactions.Bolt.BoltTransactionContext : TransactionContextBase`2<BoltGraphClient, BoltResponse> {
    internal BoltNeo4jTransaction BoltTransaction { get; }
    public BoltTransactionContext(ITransaction transaction);
    internal BoltNeo4jTransaction get_BoltTransaction();
    [AsyncStateMachineAttribute("Neo4jClient.Transactions.Bolt.BoltTransactionContext/<RunQuery>d__3")]
[DebuggerStepThroughAttribute]
protected virtual Task`1<BoltResponse> RunQuery(BoltGraphClient graphClient, CypherQuery query, IExecutionPolicy policy, string commandDescription);
}
internal class Neo4jClient.Transactions.Bolt.BoltTransactionManager : object {
    private static AsyncLocal`1<IScopedTransactions`1<BoltTransactionScopeProxy>> scopedTransactions;
    private ITransactionalGraphClient client;
    internal static IScopedTransactions`1<BoltTransactionScopeProxy> ScopedTransactions { get; internal set; }
    public bool InTransaction { get; }
    public BoltTransactionScopeProxy CurrentInternalTransaction { get; }
    public ITransaction CurrentTransaction { get; }
    public Bookmark LastBookmark { get; }
    public BoltTransactionManager(ITransactionalGraphClient client);
    private static BoltTransactionManager();
    internal static IScopedTransactions`1<BoltTransactionScopeProxy> get_ScopedTransactions();
    internal static void set_ScopedTransactions(IScopedTransactions`1<BoltTransactionScopeProxy> value);
    private BoltTransactionContext GetContext();
    public sealed virtual bool get_InTransaction();
    public BoltTransactionScopeProxy get_CurrentInternalTransaction();
    public sealed virtual ITransaction get_CurrentTransaction();
    public sealed virtual Bookmark get_LastBookmark();
    public sealed virtual ITransaction BeginTransaction(TransactionScopeOption scopeOption, IEnumerable`1<string> bookmarks, string database);
    private BoltTransactionContext GenerateTransaction(IEnumerable`1<string> bookmarks, string database);
    private BoltTransactionContext GenerateTransaction(BoltTransactionContext reference);
    private void PushScopeTransaction(BoltTransactionScopeProxy transaction);
    private ITransaction BeginNewTransaction(IEnumerable`1<string> bookmarks, string database);
    private ITransaction BeginJoinTransaction();
    private ITransaction BeginSuppressTransaction();
    public sealed virtual void EndTransaction();
    public sealed virtual void Dispose();
    public sealed virtual Task`1<BoltResponse> EnqueueCypherRequest(string commandDescription, IGraphClient graphClient, CypherQuery query);
}
internal abstract class Neo4jClient.Transactions.Bolt.BoltTransactionScopeProxy : object {
    private ITransactionalGraphClient client;
    private bool markCommitted;
    private bool disposing;
    private BoltTransactionContext transactionContext;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private NameValueCollection <CustomHeaders>k__BackingField;
    internal IAsyncTransaction DriverTransaction { get; }
    public BoltTransactionContext TransactionContext { get; }
    public NameValueCollection CustomHeaders { get; public set; }
    public string Database { get; public set; }
    public bool Committable { get; }
    public bool IsOpen { get; }
    public Bookmark LastBookmark { get; }
    protected BoltTransactionScopeProxy(ITransactionalGraphClient client, BoltTransactionContext transactionContext);
    internal IAsyncTransaction get_DriverTransaction();
    public BoltTransactionContext get_TransactionContext();
    [CompilerGeneratedAttribute]
public sealed virtual NameValueCollection get_CustomHeaders();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CustomHeaders(NameValueCollection value);
    public virtual void Dispose();
    public abstract virtual string get_Database();
    public abstract virtual void set_Database(string value);
    public sealed virtual Task CommitAsync();
    protected abstract virtual bool ShouldDisposeTransaction();
    protected abstract virtual Task DoCommitAsync();
    public abstract virtual bool get_Committable();
    public abstract virtual Task RollbackAsync();
    public abstract virtual Task KeepAliveAsync();
    public abstract virtual bool get_IsOpen();
    public abstract virtual Bookmark get_LastBookmark();
}
internal class Neo4jClient.Transactions.BoltTransactionExecutionEnvironment : MarshalByRefObject {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private IAsyncSession <Session>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private IList`1<string> <Bookmarks>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private Guid <TransactionId>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private IEnumerable`1<JsonConverter> <JsonConverters>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Username>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Password>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private Guid <ResourceManagerId>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private IAsyncTransaction <DriverTransaction>k__BackingField;
    public IAsyncSession Session { get; public set; }
    public IList`1<string> Bookmarks { get; public set; }
    public Guid TransactionId { get; public set; }
    public IEnumerable`1<JsonConverter> JsonConverters { get; public set; }
    public string Username { get; public set; }
    public string Password { get; public set; }
    public Guid ResourceManagerId { get; public set; }
    public IAsyncTransaction DriverTransaction { get; public set; }
    public BoltTransactionExecutionEnvironment(ExecutionConfiguration executionConfiguration);
    [CompilerGeneratedAttribute]
public IAsyncSession get_Session();
    [CompilerGeneratedAttribute]
public void set_Session(IAsyncSession value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Bookmarks();
    [CompilerGeneratedAttribute]
public void set_Bookmarks(IList`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual Guid get_TransactionId();
    [CompilerGeneratedAttribute]
public void set_TransactionId(Guid value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<JsonConverter> get_JsonConverters();
    [CompilerGeneratedAttribute]
public sealed virtual void set_JsonConverters(IEnumerable`1<JsonConverter> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Username();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Username(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Password();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Password(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Guid get_ResourceManagerId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ResourceManagerId(Guid value);
    [CompilerGeneratedAttribute]
public sealed virtual IAsyncTransaction get_DriverTransaction();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DriverTransaction(IAsyncTransaction value);
}
internal class Neo4jClient.Transactions.BoltTransactionResourceManager : MarshalByRefObject {
    private IDictionary`2<Guid, CommittableTransaction> transactions;
    public sealed virtual void RollbackTransaction(Guid transactionId);
    public sealed virtual void CommitTransaction(Guid transactionId);
    public sealed virtual void Enlist(ITransactionExecutionEnvironmentBolt transactionExecutionEnvironment, Byte[] transactionToken);
    public sealed virtual Byte[] Promote(ITransactionExecutionEnvironmentBolt transactionExecutionEnvironment);
}
internal class Neo4jClient.Transactions.BoltTransactionSinglePhaseNotification : object {
    private ITransactionExecutionEnvironmentBolt transactionExecutionEnvironment;
    public BoltTransactionSinglePhaseNotification(ITransactionExecutionEnvironmentBolt transactionExecutionEnvironment);
    public sealed virtual void Prepare(PreparingEnlistment preparingEnlistment);
    public sealed virtual void Commit(Enlistment enlistment);
    public sealed virtual void Rollback(Enlistment enlistment);
    public sealed virtual void InDoubt(Enlistment enlistment);
    public sealed virtual void SinglePhaseCommit(SinglePhaseEnlistment singlePhaseEnlistment);
    public void Enlist(Transaction tx);
}
public class Neo4jClient.Transactions.ClosedTransactionException : Exception {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <TransactionEndpoint>k__BackingField;
    public string TransactionEndpoint { get; }
    public ClosedTransactionException(string transactionEndpoint);
    [CompilerGeneratedAttribute]
public string get_TransactionEndpoint();
}
internal interface Neo4jClient.Transactions.IInternalTransactionalGraphClient`1 {
    public ITransactionManager`1<T> TransactionManager { get; }
    public abstract virtual ITransactionManager`1<T> get_TransactionManager();
}
internal interface Neo4jClient.Transactions.INeo4jTransaction {
    public Uri Endpoint { get; public set; }
    public abstract virtual Uri get_Endpoint();
    public abstract virtual void set_Endpoint(Uri value);
}
internal interface Neo4jClient.Transactions.IScopedTransactions`1 {
    public int Count { get; }
    public bool HasValue { get; }
    public abstract virtual int get_Count();
    public abstract virtual bool get_HasValue();
    public abstract virtual void Push(T item);
    public abstract virtual T Pop();
    public abstract virtual T TryPop();
    public abstract virtual T Peek();
    public abstract virtual T TryPeek();
}
public interface Neo4jClient.Transactions.ITransaction {
    public string Database { get; }
    public bool IsOpen { get; }
    public NameValueCollection CustomHeaders { get; public set; }
    public Bookmark LastBookmark { get; }
    public abstract virtual string get_Database();
    public abstract virtual Task CommitAsync();
    public abstract virtual Task RollbackAsync();
    public abstract virtual Task KeepAliveAsync();
    public abstract virtual bool get_IsOpen();
    public abstract virtual NameValueCollection get_CustomHeaders();
    public abstract virtual void set_CustomHeaders(NameValueCollection value);
    public abstract virtual Bookmark get_LastBookmark();
}
public interface Neo4jClient.Transactions.ITransactionalGraphClient {
    public ITransaction Transaction { get; }
    public bool InTransaction { get; }
    public abstract virtual ITransaction BeginTransaction();
    public abstract virtual ITransaction BeginTransaction(string bookmark);
    public abstract virtual ITransaction BeginTransaction(IEnumerable`1<string> bookmarks);
    public abstract virtual ITransaction BeginTransaction(TransactionScopeOption scopeOption);
    public abstract virtual ITransaction BeginTransaction(TransactionScopeOption scopeOption, string bookmark);
    public abstract virtual ITransaction BeginTransaction(TransactionScopeOption scopeOption, IEnumerable`1<string> bookmarks, string database);
    public abstract virtual ITransaction get_Transaction();
    public abstract virtual bool get_InTransaction();
    public abstract virtual void EndTransaction();
}
internal interface Neo4jClient.Transactions.ITransactionExecutionEnvironment {
    public Uri TransactionBaseEndpoint { get; }
    public int TransactionId { get; }
    public bool UseJsonStreaming { get; public set; }
    public string UserAgent { get; public set; }
    public IEnumerable`1<JsonConverter> JsonConverters { get; public set; }
    public string Username { get; public set; }
    public string Password { get; public set; }
    public Guid ResourceManagerId { get; public set; }
    public abstract virtual Uri get_TransactionBaseEndpoint();
    public abstract virtual int get_TransactionId();
    public abstract virtual bool get_UseJsonStreaming();
    public abstract virtual void set_UseJsonStreaming(bool value);
    public abstract virtual string get_UserAgent();
    public abstract virtual void set_UserAgent(string value);
    public abstract virtual IEnumerable`1<JsonConverter> get_JsonConverters();
    public abstract virtual void set_JsonConverters(IEnumerable`1<JsonConverter> value);
    public abstract virtual string get_Username();
    public abstract virtual void set_Username(string value);
    public abstract virtual string get_Password();
    public abstract virtual void set_Password(string value);
    public abstract virtual Guid get_ResourceManagerId();
    public abstract virtual void set_ResourceManagerId(Guid value);
}
internal interface Neo4jClient.Transactions.ITransactionExecutionEnvironmentBolt {
    public Guid TransactionId { get; }
    public IEnumerable`1<JsonConverter> JsonConverters { get; public set; }
    public string Username { get; public set; }
    public string Password { get; public set; }
    public Guid ResourceManagerId { get; public set; }
    public IAsyncTransaction DriverTransaction { get; public set; }
    public abstract virtual Guid get_TransactionId();
    public abstract virtual IEnumerable`1<JsonConverter> get_JsonConverters();
    public abstract virtual void set_JsonConverters(IEnumerable`1<JsonConverter> value);
    public abstract virtual string get_Username();
    public abstract virtual void set_Username(string value);
    public abstract virtual string get_Password();
    public abstract virtual void set_Password(string value);
    public abstract virtual Guid get_ResourceManagerId();
    public abstract virtual void set_ResourceManagerId(Guid value);
    public abstract virtual IAsyncTransaction get_DriverTransaction();
    public abstract virtual void set_DriverTransaction(IAsyncTransaction value);
}
public interface Neo4jClient.Transactions.ITransactionManager`1 {
    public bool InTransaction { get; }
    public ITransaction CurrentTransaction { get; }
    public Bookmark LastBookmark { get; }
    public abstract virtual bool get_InTransaction();
    public abstract virtual ITransaction BeginTransaction(TransactionScopeOption option, IEnumerable`1<string> bookmarks, string database);
    public abstract virtual void EndTransaction();
    public abstract virtual ITransaction get_CurrentTransaction();
    public abstract virtual Bookmark get_LastBookmark();
    public abstract virtual Task`1<T> EnqueueCypherRequest(string commandDescription, IGraphClient graphClient, CypherQuery query);
}
internal interface Neo4jClient.Transactions.ITransactionResourceManager {
    public abstract virtual void Enlist(ITransactionExecutionEnvironment transactionExecutionEnvironment, Byte[] transactionToken);
    public abstract virtual Byte[] Promote(ITransactionExecutionEnvironment transactionExecutionEnvironment);
    public abstract virtual void CommitTransaction(int transactionId);
    public abstract virtual void RollbackTransaction(int transactionId);
}
internal interface Neo4jClient.Transactions.ITransactionResourceManagerBolt {
    public abstract virtual void Enlist(ITransactionExecutionEnvironmentBolt transactionExecutionEnvironment, Byte[] transactionToken);
    public abstract virtual Byte[] Promote(ITransactionExecutionEnvironmentBolt transactionExecutionEnvironment);
    public abstract virtual void RollbackTransaction(Guid transactionId);
    public abstract virtual void CommitTransaction(Guid transactionId);
}
internal class Neo4jClient.Transactions.Neo4jRestTransaction : object {
    private ITransactionalGraphClient client;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private bool <IsOpen>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private Uri <Endpoint>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private NameValueCollection <CustomHeaders>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Database>k__BackingField;
    public bool IsOpen { get; private set; }
    public Uri Endpoint { get; public set; }
    public NameValueCollection CustomHeaders { get; public set; }
    public Bookmark LastBookmark { get; }
    internal int Id { get; }
    public string Database { get; public set; }
    public Neo4jRestTransaction(ITransactionalGraphClient graphClient, string database);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsOpen();
    [CompilerGeneratedAttribute]
private void set_IsOpen(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual Uri get_Endpoint();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Endpoint(Uri value);
    [CompilerGeneratedAttribute]
public sealed virtual NameValueCollection get_CustomHeaders();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CustomHeaders(NameValueCollection value);
    public sealed virtual Bookmark get_LastBookmark();
    internal int get_Id();
    [CompilerGeneratedAttribute]
public sealed virtual string get_Database();
    [CompilerGeneratedAttribute]
public void set_Database(string value);
    protected void CleanupAfterClosedTransaction();
    private void CheckForOpenTransaction();
    internal void Cancel();
    [AsyncStateMachineAttribute("Neo4jClient.Transactions.Neo4jRestTransaction/<CommitAsync>d__25")]
[DebuggerStepThroughAttribute]
public sealed virtual Task CommitAsync();
    [AsyncStateMachineAttribute("Neo4jClient.Transactions.Neo4jRestTransaction/<RollbackAsync>d__26")]
[DebuggerStepThroughAttribute]
public sealed virtual Task RollbackAsync();
    public sealed virtual Task KeepAliveAsync();
    [AsyncStateMachineAttribute("Neo4jClient.Transactions.Neo4jRestTransaction/<ForceKeepAlive>d__28")]
[DebuggerStepThroughAttribute]
internal Task ForceKeepAlive();
    private static Task DoCommit(Uri commitUri, ExecutionConfiguration executionConfiguration, ISerializer serializer, NameValueCollection customHeaders);
    private static Task DoRollback(Uri rollbackUri, ExecutionConfiguration executionConfiguration, NameValueCollection customHeaders);
    [AsyncStateMachineAttribute("Neo4jClient.Transactions.Neo4jRestTransaction/<DoKeepAlive>d__31")]
[DebuggerStepThroughAttribute]
private static Task`1<Uri> DoKeepAlive(Uri keepAliveUri, ExecutionConfiguration executionConfiguration, ISerializer serializer, NameValueCollection customHeaders, bool newTransaction);
    internal static Task DoCommit(ITransactionExecutionEnvironment transactionExecutionEnvironment, NameValueCollection customHeaders);
    internal static Task DoRollback(ITransactionExecutionEnvironment transactionExecutionEnvironment, NameValueCollection customHeaders);
    internal static Task DoKeepAlive(ITransactionExecutionEnvironment transactionExecutionEnvironment);
    public sealed virtual void Dispose();
}
internal class Neo4jClient.Transactions.Neo4jTransactionProxy : TransactionScopeProxy {
    private bool doCommitInScope;
    public bool Committable { get; }
    public bool IsOpen { get; }
    public Neo4jTransactionProxy(ITransactionalGraphClient client, TransactionContext transactionContext, bool newScope);
    public virtual bool get_Committable();
    public virtual bool get_IsOpen();
    protected virtual Task DoCommitAsync();
    protected virtual bool ShouldDisposeTransaction();
    public virtual Task RollbackAsync();
    public virtual Task KeepAliveAsync();
}
internal class Neo4jClient.Transactions.Neo4jTransactionResourceManager : MarshalByRefObject {
    private IDictionary`2<int, CommittableTransaction> transactions;
    public sealed virtual void Enlist(ITransactionExecutionEnvironment transactionExecutionEnvironment, Byte[] transactionToken);
    public sealed virtual Byte[] Promote(ITransactionExecutionEnvironment transactionExecutionEnvironment);
    public sealed virtual void CommitTransaction(int transactionId);
    public sealed virtual void RollbackTransaction(int transactionId);
}
internal class Neo4jClient.Transactions.Neo4jTransationSinglePhaseNotification : object {
    private ITransactionExecutionEnvironment transactionExecutionEnvironment;
    public Neo4jTransationSinglePhaseNotification(ITransactionExecutionEnvironment transactionExecutionEnvironment);
    public sealed virtual void Prepare(PreparingEnlistment preparingEnlistment);
    public sealed virtual void Commit(Enlistment enlistment);
    public sealed virtual void Rollback(Enlistment enlistment);
    public sealed virtual void InDoubt(Enlistment enlistment);
    public sealed virtual void SinglePhaseCommit(SinglePhaseEnlistment singlePhaseEnlistment);
    public void Enlist(Transaction tx);
}
internal class Neo4jClient.Transactions.SuppressTransactionProxy : TransactionScopeProxy {
    public bool Committable { get; }
    public bool IsOpen { get; }
    public SuppressTransactionProxy(ITransactionalGraphClient client);
    protected virtual bool ShouldDisposeTransaction();
    protected virtual Task DoCommitAsync();
    public virtual bool get_Committable();
    public virtual Task RollbackAsync();
    public virtual Task KeepAliveAsync();
    public virtual bool get_IsOpen();
}
internal static class Neo4jClient.Transactions.ThreadContextHelper : object {
    internal static IScopedTransactions`1<TransactionScopeProxy> CreateScopedTransactions();
    internal static IScopedTransactions`1<BoltTransactionScopeProxy> CreateBoltScopedTransactions();
}
internal class Neo4jClient.Transactions.ThreadContextWrapper`1 : object {
    private Stack`1<T> _stack;
    public int Count { get; }
    public bool HasValue { get; }
    public sealed virtual int get_Count();
    public sealed virtual bool get_HasValue();
    public sealed virtual T Peek();
    public sealed virtual T TryPeek();
    public sealed virtual T Pop();
    public sealed virtual T TryPop();
    public sealed virtual void Push(T item);
}
internal class Neo4jClient.Transactions.TransactionConnectionContext : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private ITransactionalGraphClient <Client>k__BackingField;
    public ITransactionalGraphClient Client { get; public set; }
    [CompilerGeneratedAttribute]
public ITransactionalGraphClient get_Client();
    [CompilerGeneratedAttribute]
public void set_Client(ITransactionalGraphClient value);
}
internal class Neo4jClient.Transactions.TransactionContext : TransactionContextBase`2<IGraphClient, HttpResponseMessage> {
    public INeo4jTransaction NeoTransaction { get; }
    public Uri Endpoint { get; public set; }
    public TransactionContext(INeo4jTransaction transaction);
    public INeo4jTransaction get_NeoTransaction();
    protected virtual Task`1<HttpResponseMessage> RunQuery(IGraphClient client, CypherQuery query, IExecutionPolicy policy, string commandDescription);
    public sealed virtual Uri get_Endpoint();
    public sealed virtual void set_Endpoint(Uri value);
}
internal abstract class Neo4jClient.Transactions.TransactionContextBase`2 : object {
    private Task previousTask;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private ITransaction <Transaction>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private NameValueCollection <CustomHeaders>k__BackingField;
    public ITransaction Transaction { get; }
    public NameValueCollection CustomHeaders { get; public set; }
    public Bookmark LastBookmark { get; }
    public bool IsOpen { get; }
    public string Database { get; }
    protected TransactionContextBase`2(ITransaction transaction);
    [CompilerGeneratedAttribute]
public ITransaction get_Transaction();
    [CompilerGeneratedAttribute]
public sealed virtual NameValueCollection get_CustomHeaders();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CustomHeaders(NameValueCollection value);
    public sealed virtual Bookmark get_LastBookmark();
    public sealed virtual bool get_IsOpen();
    protected abstract virtual Task`1<TResponse> RunQuery(TClient client, CypherQuery query, IExecutionPolicy policy, string commandDescription);
    [AsyncStateMachineAttribute("Neo4jClient.Transactions.TransactionContextBase`2/<EnqueueTask>d__14")]
[DebuggerStepThroughAttribute]
public Task`1<TResponse> EnqueueTask(string commandDescription, TClient graphClient, IExecutionPolicy policy, CypherQuery query);
    public sealed virtual void Dispose();
    public sealed virtual string get_Database();
    [AsyncStateMachineAttribute("Neo4jClient.Transactions.TransactionContextBase`2/<CommitAsync>d__18")]
[DebuggerStepThroughAttribute]
public sealed virtual Task CommitAsync();
    [AsyncStateMachineAttribute("Neo4jClient.Transactions.TransactionContextBase`2/<RollbackAsync>d__19")]
[DebuggerStepThroughAttribute]
public sealed virtual Task RollbackAsync();
    public sealed virtual Task KeepAliveAsync();
}
internal class Neo4jClient.Transactions.TransactionExecutionEnvironment : MarshalByRefObject {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private Uri <TransactionBaseEndpoint>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private int <TransactionId>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private bool <UseJsonStreaming>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <UserAgent>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private IEnumerable`1<JsonConverter> <JsonConverters>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Username>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Password>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private Guid <ResourceManagerId>k__BackingField;
    public Uri TransactionBaseEndpoint { get; public set; }
    public int TransactionId { get; public set; }
    public bool UseJsonStreaming { get; public set; }
    public string UserAgent { get; public set; }
    public IEnumerable`1<JsonConverter> JsonConverters { get; public set; }
    public string Username { get; public set; }
    public string Password { get; public set; }
    public Guid ResourceManagerId { get; public set; }
    public TransactionExecutionEnvironment(ExecutionConfiguration executionConfiguration);
    [CompilerGeneratedAttribute]
public sealed virtual Uri get_TransactionBaseEndpoint();
    [CompilerGeneratedAttribute]
public void set_TransactionBaseEndpoint(Uri value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_TransactionId();
    [CompilerGeneratedAttribute]
public void set_TransactionId(int value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_UseJsonStreaming();
    [CompilerGeneratedAttribute]
public sealed virtual void set_UseJsonStreaming(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_UserAgent();
    [CompilerGeneratedAttribute]
public sealed virtual void set_UserAgent(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<JsonConverter> get_JsonConverters();
    [CompilerGeneratedAttribute]
public sealed virtual void set_JsonConverters(IEnumerable`1<JsonConverter> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Username();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Username(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Password();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Password(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Guid get_ResourceManagerId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ResourceManagerId(Guid value);
}
internal static class Neo4jClient.Transactions.TransactionHttpUtils : object {
    public static IDictionary`2<string, object> GetMetadataFromResponse(HttpResponseMessage response);
}
internal class Neo4jClient.Transactions.TransactionManager : object {
    private static AsyncLocal`1<IScopedTransactions`1<TransactionScopeProxy>> scopedTransactions;
    private ITransactionalGraphClient client;
    internal static IScopedTransactions`1<TransactionScopeProxy> ScopedTransactions { get; internal set; }
    public bool InTransaction { get; }
    public TransactionScopeProxy CurrentInternalTransaction { get; }
    public ITransaction CurrentTransaction { get; }
    public Bookmark LastBookmark { get; }
    public TransactionManager(ITransactionalGraphClient client);
    private static TransactionManager();
    internal static IScopedTransactions`1<TransactionScopeProxy> get_ScopedTransactions();
    internal static void set_ScopedTransactions(IScopedTransactions`1<TransactionScopeProxy> value);
    private TransactionContext GetContext(NameValueCollection customHeaders);
    public sealed virtual bool get_InTransaction();
    public TransactionScopeProxy get_CurrentInternalTransaction();
    public sealed virtual ITransaction get_CurrentTransaction();
    public sealed virtual Bookmark get_LastBookmark();
    public sealed virtual ITransaction BeginTransaction(TransactionScopeOption option, IEnumerable`1<string> bookmarks, string database);
    public ITransaction BeginTransaction(TransactionScopeOption scopeOption, string database);
    private TransactionContext GenerateTransaction(string database);
    private static TransactionContext GenerateTransaction(TransactionContext reference);
    private static void PushScopeTransaction(TransactionScopeProxy transaction);
    private ITransaction BeginNewTransaction(string database);
    private ITransaction BeginJoinTransaction();
    private ITransaction BeginSuppressTransaction();
    public sealed virtual void EndTransaction();
    public sealed virtual Task`1<HttpResponseMessage> EnqueueCypherRequest(string commandDescription, IGraphClient graphClient, CypherQuery query);
    public sealed virtual void Dispose();
}
public enum Neo4jClient.Transactions.TransactionScopeOption : Enum {
    public int value__;
    public static TransactionScopeOption Join;
    public static TransactionScopeOption RequiresNew;
    public static TransactionScopeOption Suppress;
}
internal abstract class Neo4jClient.Transactions.TransactionScopeProxy : object {
    private ITransactionalGraphClient client;
    private bool markCommitted;
    private bool disposing;
    private TransactionContext transactionContext;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private NameValueCollection <CustomHeaders>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Database>k__BackingField;
    public TransactionContext TransactionContext { get; }
    public Uri Endpoint { get; public set; }
    public NameValueCollection CustomHeaders { get; public set; }
    public Bookmark LastBookmark { get; }
    public string Database { get; public set; }
    public bool Committable { get; }
    public bool IsOpen { get; }
    protected TransactionScopeProxy(ITransactionalGraphClient client, TransactionContext transactionContext);
    public TransactionContext get_TransactionContext();
    public sealed virtual Uri get_Endpoint();
    public sealed virtual void set_Endpoint(Uri value);
    [CompilerGeneratedAttribute]
public sealed virtual NameValueCollection get_CustomHeaders();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CustomHeaders(NameValueCollection value);
    public sealed virtual Bookmark get_LastBookmark();
    public virtual void Dispose();
    [CompilerGeneratedAttribute]
public sealed virtual string get_Database();
    [CompilerGeneratedAttribute]
public void set_Database(string value);
    public sealed virtual Task CommitAsync();
    protected abstract virtual bool ShouldDisposeTransaction();
    protected abstract virtual Task DoCommitAsync();
    public abstract virtual bool get_Committable();
    public abstract virtual Task RollbackAsync();
    public abstract virtual Task KeepAliveAsync();
    public abstract virtual bool get_IsOpen();
}
internal static class Neo4jClient.UriCreator : object {
    public static Uri From(string uri);
}
public class Neo4jClient.Utilities : object {
    public static IEnumerable`1<FieldChange> GetDifferencesBetweenDictionaries(IDictionary`2<string, string> originalValues, IDictionary`2<string, string> newValues);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
