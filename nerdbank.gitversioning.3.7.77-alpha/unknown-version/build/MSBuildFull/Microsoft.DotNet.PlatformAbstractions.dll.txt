public static class Microsoft.DotNet.PlatformAbstractions.ApplicationEnvironment : object {
    [CompilerGeneratedAttribute]
private static string <ApplicationBasePath>k__BackingField;
    public static string ApplicationBasePath { get; }
    private static ApplicationEnvironment();
    [CompilerGeneratedAttribute]
public static string get_ApplicationBasePath();
    private static string GetApplicationBasePath();
}
public class Microsoft.DotNet.PlatformAbstractions.HashCodeCombiner : ValueType {
    private long _combinedHash64;
    public int CombinedHash { get; }
    private HashCodeCombiner(long seed);
    public int get_CombinedHash();
    public void Add(int i);
    public void Add(string s);
    public void Add(object o);
    public void Add(TValue value, IEqualityComparer`1<TValue> comparer);
    public static HashCodeCombiner Start();
}
internal static class Microsoft.DotNet.PlatformAbstractions.Native.NativeMethods : object {
}
internal static class Microsoft.DotNet.PlatformAbstractions.Native.PlatformApis : object {
    private static Lazy`1<Platform> _platform;
    private static Lazy`1<DistroInfo> _distroInfo;
    private static PlatformApis();
    public static string GetOSName();
    public static string GetOSVersion();
    private static string GetDarwinVersion();
    private static string GetFreeBSDVersion();
    public static Platform GetOSPlatform();
    private static string GetDistroId();
    private static string GetDistroVersionId();
    private static DistroInfo LoadDistroInfo();
    private static DistroInfo NormalizeDistroInfo(DistroInfo distroInfo);
    private static Platform DetermineOSPlatform();
}
public enum Microsoft.DotNet.PlatformAbstractions.Platform : Enum {
    public int value__;
    public static Platform Unknown;
    public static Platform Windows;
    public static Platform Linux;
    public static Platform Darwin;
    public static Platform FreeBSD;
}
public static class Microsoft.DotNet.PlatformAbstractions.RuntimeEnvironment : object {
    private static string OverrideEnvironmentVariableName;
    [CompilerGeneratedAttribute]
private static Platform <OperatingSystemPlatform>k__BackingField;
    [CompilerGeneratedAttribute]
private static string <OperatingSystemVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private static string <OperatingSystem>k__BackingField;
    [CompilerGeneratedAttribute]
private static string <RuntimeArchitecture>k__BackingField;
    public static Platform OperatingSystemPlatform { get; }
    public static string OperatingSystemVersion { get; }
    public static string OperatingSystem { get; }
    public static string RuntimeArchitecture { get; }
    private static RuntimeEnvironment();
    [CompilerGeneratedAttribute]
public static Platform get_OperatingSystemPlatform();
    [CompilerGeneratedAttribute]
public static string get_OperatingSystemVersion();
    [CompilerGeneratedAttribute]
public static string get_OperatingSystem();
    [CompilerGeneratedAttribute]
public static string get_RuntimeArchitecture();
    private static string GetArch();
    public static string GetRuntimeIdentifier();
    private static string GetRIDArch();
    private static string GetRIDVersion();
    private static string GetWindowsProductVersion();
    private static string GetRIDOS();
}
