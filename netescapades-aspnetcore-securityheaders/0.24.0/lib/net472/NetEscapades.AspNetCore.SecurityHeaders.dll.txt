[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Builder.ContentSecurityPolicyHeaderExtensions : object {
    [ExtensionAttribute]
public static HeaderPolicyCollection AddContentSecurityPolicy(HeaderPolicyCollection policies, Action`1<CspBuilder> configure, bool asReportOnly);
    [ExtensionAttribute]
public static HeaderPolicyCollection AddContentSecurityPolicyReportOnly(HeaderPolicyCollection policies, Action`1<CspBuilder> configure);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Builder.CrossOriginEmbedderPolicyBuilder : CrossOriginPolicyBuilder {
    public UnsafeNoneDirectiveBuilder UnsafeNone();
    public RequireCorpDirectiveBuilder RequireCorp();
    public CredentiallessDirectiveBuilder Credentialless();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Builder.CrossOriginEmbedderPolicyHeaderExtensions : object {
    [ExtensionAttribute]
public static HeaderPolicyCollection AddCrossOriginEmbedderPolicy(HeaderPolicyCollection policies, Action`1<CrossOriginEmbedderPolicyBuilder> configure, bool asReportOnly);
    [ExtensionAttribute]
public static HeaderPolicyCollection AddCrossOriginEmbedderPolicyReportOnly(HeaderPolicyCollection policies, Action`1<CrossOriginEmbedderPolicyBuilder> configure);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Builder.CrossOriginOpenerPolicyBuilder : CrossOriginPolicyBuilder {
    public UnsafeNoneDirectiveBuilder UnsafeNone();
    public SameOriginDirectiveBuilder SameOrigin();
    public SameOriginAllowPopupsDirectiveBuilder SameOriginAllowPopups();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Builder.CrossOriginOpenerPolicyHeaderExtensions : object {
    [ExtensionAttribute]
public static HeaderPolicyCollection AddCrossOriginOpenerPolicy(HeaderPolicyCollection policies, Action`1<CrossOriginOpenerPolicyBuilder> configure, bool asReportOnly);
    [ExtensionAttribute]
public static HeaderPolicyCollection AddCrossOriginOpenerPolicyReportOnly(HeaderPolicyCollection policies, Action`1<CrossOriginOpenerPolicyBuilder> configure);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Microsoft.AspNetCore.Builder.CrossOriginPolicyBuilder : object {
    private static string _directiveSeparator;
    private Dictionary`2<string, CrossOriginPolicyDirectiveBuilderBase> _directives;
    public ReportDirectiveBuilder AddReport();
    protected T AddDirective(T directive);
    internal CrossOriginPolicyBuilderResult Build();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Builder.CrossOriginResourcePolicyBuilder : CrossOriginPolicyBuilder {
    public SameSiteDirectiveBuilder SameSite();
    public SameOriginDirectiveBuilder SameOrigin();
    public CrossOriginDirectiveBuilder CrossOrigin();
}
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Builder.CrossOriginResourcePolicyHeaderExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static HeaderPolicyCollection AddCrossOriginResourcePolicy(HeaderPolicyCollection policies, Action`1<CrossOriginResourcePolicyBuilder> configure);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Builder.CspBuilder : object {
    private static string _directiveSeparator;
    private Dictionary`2<string, CspDirectiveBuilderBase> _directives;
    public DefaultSourceDirectiveBuilder AddDefaultSrc();
    public ConnectSourceDirectiveBuilder AddConnectSrc();
    public FontSourceDirectiveBuilder AddFontSrc();
    public ObjectSourceDirectiveBuilder AddObjectSrc();
    public FormActionDirectiveBuilder AddFormAction();
    public ImageSourceDirectiveBuilder AddImgSrc();
    public ScriptSourceDirectiveBuilder AddScriptSrc();
    public ScriptSourceAttrDirectiveBuilder AddScriptSrcAttr();
    public ScriptSourceElemDirectiveBuilder AddScriptSrcElem();
    public StyleSourceDirectiveBuilder AddStyleSrc();
    public StyleSourceAttrDirectiveBuilder AddStyleSrcAttr();
    public StyleSourceElemDirectiveBuilder AddStyleSrcElem();
    public MediaSourceDirectiveBuilder AddMediaSrc();
    public ManifestSourceDirectiveBuilder AddManifestSrc();
    public FrameAncestorsDirectiveBuilder AddFrameAncestors();
    public FrameSourceDirectiveBuilder AddFrameSrc();
    [ObsoleteAttribute("Use AddFrameSrc method instead. This method will be removed in a future version of the library.")]
public FrameSourceDirectiveBuilder AddFrameSource();
    public WorkerSourceDirectiveBuilder AddWorkerSrc();
    public BaseUriDirectiveBuilder AddBaseUri();
    public SandboxDirectiveBuilder AddSandbox();
    public UpgradeInsecureRequestsDirectiveBuilder AddUpgradeInsecureRequests();
    public BlockAllMixedContentDirectiveBuilder AddBlockAllMixedContent();
    public ReportUriDirectiveBuilder AddReportUri();
    public ReportToDirectiveBuilder AddReportTo(string groupName);
    public CustomDirective AddCustomDirective(string directive);
    public CustomDirective AddCustomDirective(string directive, string value);
    public CspDirectiveBuilder AddCustomDirectiveBuilder(string directive);
    private T AddDirective(T directive);
    internal CspBuilderResult Build();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Builder.CspDirectiveBuilderExtensions : object {
    [ExtensionAttribute]
public static T Self(T builder);
    [ExtensionAttribute]
public static T Blob(T builder);
    [ExtensionAttribute]
public static T Data(T builder);
    [ExtensionAttribute]
public static T None(T builder);
    [ExtensionAttribute]
public static T From(T builder, string uri);
    [ExtensionAttribute]
public static T From(T builder, IEnumerable`1<string> uris);
    [ExtensionAttribute]
public static T OverHttps(T builder);
    [ExtensionAttribute]
public static T WithHash(T builder, string algorithm, string hash);
    [ExtensionAttribute]
public static T WithHash256(T builder, string hash);
    [ExtensionAttribute]
public static T WithHashSha384(T builder, string hash);
    [ExtensionAttribute]
public static T WithHashSha512(T builder, string hash);
    [ExtensionAttribute]
public static T UnsafeInline(T builder);
    [ExtensionAttribute]
public static T UnsafeHashes(T builder);
    [ExtensionAttribute]
public static T UnsafeEval(T builder);
    [ExtensionAttribute]
public static T WasmUnsafeEval(T builder);
    [ExtensionAttribute]
public static T StrictDynamic(T builder);
    [ExtensionAttribute]
public static T WithNonce(T builder);
}
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Builder.CustomHeaderExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static HeaderPolicyCollection AddCustomHeader(HeaderPolicyCollection policies, string header, string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Builder.ExpectCTHeaderExtensions : object {
    private static String[] _excludedHosts;
    private static ExpectCTHeaderExtensions();
    [ExtensionAttribute]
public static HeaderPolicyCollection AddExpectCTNoEnforceOrReport(HeaderPolicyCollection policies, int maxAgeInSeconds);
    [ExtensionAttribute]
public static HeaderPolicyCollection AddExpectCTEnforceOnly(HeaderPolicyCollection policies, int maxAgeInSeconds);
    [ExtensionAttribute]
public static HeaderPolicyCollection AddExpectCTReportOnly(HeaderPolicyCollection policies, int maxAgeInSeconds, string reportUri);
    [ExtensionAttribute]
public static HeaderPolicyCollection AddExpectCTEnforceAndReport(HeaderPolicyCollection policies, int maxAgeInSeconds, string reportUri);
    [ExtensionAttribute]
public static HeaderPolicyCollection AddExpectCT(HeaderPolicyCollection policies, int maxAgeInSeconds, string reportUri, bool enforce, String[] excludedHosts);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Builder.FeaturePolicyBuilder : object {
    private Dictionary`2<string, FeaturePolicyDirectiveBuilderBase> _directives;
    public AccelerometerFeaturePolicyDirectiveBuilder AddAccelerometer();
    public AmbientLightSensorFeaturePolicyDirectiveBuilder AddAmbientLightSensor();
    public AutoplayFeaturePolicyDirectiveBuilder AddAutoplay();
    public CameraFeaturePolicyDirectiveBuilder AddCamera();
    public EncryptedMediaFeaturePolicyDirectiveBuilder AddEncryptedMedia();
    public FullscreenFeaturePolicyDirectiveBuilder AddFullscreen();
    public GeolocationFeaturePolicyDirectiveBuilder AddGeolocation();
    public GyroscopeFeaturePolicyDirectiveBuilder AddGyroscope();
    public MagnetometerFeaturePolicyDirectiveBuilder AddMagnetometer();
    public MicrophoneFeaturePolicyDirectiveBuilder AddMicrophone();
    public MidiFeaturePolicyDirectiveBuilder AddMidi();
    public PaymentFeaturePolicyDirectiveBuilder AddPayment();
    public PictureInPictureFeaturePolicyDirectiveBuilder AddPictureInPicture();
    public SpeakerFeaturePolicyDirectiveBuilder AddSpeaker();
    public SynchronousXhrFeaturePolicyDirectiveBuilder AddSyncXHR();
    public UsbFeaturePolicyDirectiveBuilder AddUsb();
    public VRFeaturePolicyDirectiveBuilder AddVR();
    public CustomFeaturePolicyDirectiveBuilder AddCustomFeature(string directive);
    public CustomFeaturePolicyDirective AddCustomFeature(string directive, string value);
    private T AddDirective(T directive);
    internal string Build();
}
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Builder.FeaturePolicyHeaderExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static HeaderPolicyCollection AddFeaturePolicy(HeaderPolicyCollection policies, Action`1<FeaturePolicyBuilder> configure);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Microsoft.AspNetCore.Builder.HeaderPolicyCollection : Dictionary`2<string, IHeaderPolicy> {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private String[] <DocumentHeaderContentTypePrefixes>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal String[] DocumentHeaderContentTypePrefixes { get; internal set; }
    [CompilerGeneratedAttribute]
internal String[] get_DocumentHeaderContentTypePrefixes();
    [CompilerGeneratedAttribute]
internal void set_DocumentHeaderContentTypePrefixes(String[] value);
    public HeaderPolicyCollection ApplyDocumentHeadersToContentTypes(String[] contentTypes);
    public HeaderPolicyCollection ApplyDocumentHeadersToAllResponses();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Builder.HeaderPolicyCollectionExtensions : object {
    [ExtensionAttribute]
internal static HeaderPolicyCollection ApplyPolicy(HeaderPolicyCollection policies, IHeaderPolicy policy);
    [ExtensionAttribute]
public static HeaderPolicyCollection AddDefaultSecurityHeaders(HeaderPolicyCollection policies);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Microsoft.AspNetCore.Builder.PermissionsPolicyBuilder : object {
    private Dictionary`2<string, PermissionsPolicyDirectiveBuilderBase> _directives;
    public AccelerometerPermissionsPolicyDirectiveBuilder AddAccelerometer();
    public AttributionReportingPermissionsPolicyDirectiveBuilder AddAttributionReporting();
    public AmbientLightSensorPermissionsPolicyDirectiveBuilder AddAmbientLightSensor();
    public AutoplayPermissionsPolicyDirectiveBuilder AddAutoplay();
    public BluetoothPermissionsPolicyDirectiveBuilder AddBluetooth();
    public CameraPermissionsPolicyDirectiveBuilder AddCamera();
    public DisplayCapturePermissionsPolicyDirectiveBuilder AddDisplayCapture();
    public EncryptedMediaPermissionsPolicyDirectiveBuilder AddEncryptedMedia();
    public FullscreenPermissionsPolicyDirectiveBuilder AddFullscreen();
    public GeolocationPermissionsPolicyDirectiveBuilder AddGeolocation();
    public GyroscopePermissionsPolicyDirectiveBuilder AddGyroscope();
    public FederatedLearningOfCohortsCalculationPermissionsPolicyDirectiveBuilder AddFederatedLearningOfCohortsCalculation();
    public HidPermissionsPolicyDirectiveBuilder AddHid();
    public IdentityCredentialsGetPermissionsPolicyDirectiveBuilder AddIdentityCredentialsGet();
    public IdleDetectionPermissionsPolicyDirectiveBuilder AddIdleDetection();
    public LocalFontsPermissionsPolicyDirectiveBuilder AddLocalFonts();
    public MagnetometerPermissionsPolicyDirectiveBuilder AddMagnetometer();
    public MicrophonePermissionsPolicyDirectiveBuilder AddMicrophone();
    public MidiPermissionsPolicyDirectiveBuilder AddMidi();
    public OtpCredentialsPermissionsPolicyDirectiveBuilder AddOtpCredentials();
    public PaymentPermissionsPolicyDirectiveBuilder AddPayment();
    public PictureInPicturePermissionsPolicyDirectiveBuilder AddPictureInPicture();
    public PublickeyCredentialsCreatePermissionsPolicyDirectiveBuilder AddPublickeyCredentialsCreate();
    public PublickeyCredentialsGetPermissionsPolicyDirectiveBuilder AddPublickeyCredentialsGet();
    public ScreenWakeLockPermissionsPolicyDirectiveBuilder AddScreenWakeLock();
    public SerialPermissionsPolicyDirectiveBuilder AddSerialPermissions();
    public SpeakerPermissionsPolicyDirectiveBuilder AddSpeaker();
    public SpeakerSelectionPermissionsPolicyDirectiveBuilder AddSpeakerSelection();
    public StorageAccessPermissionsPolicyDirectiveBuilder AddStorageAccess();
    public SynchronousXhrPermissionsPolicyDirectiveBuilder AddSyncXHR();
    public UsbPermissionsPolicyDirectiveBuilder AddUsb();
    public VRPermissionsPolicyDirectiveBuilder AddVR();
    public WebSharePermissionsPolicyDirectiveBuilder AddWebShare();
    public WindowManagementPermissionsPolicyDirectiveBuilder AddWindowManagement();
    public XrSpatialTrackingPermissionsPolicyDirectiveBuilder AddXrSpatialTracking();
    public CustomPermissionsPolicyDirectiveBuilder AddCustomFeature(string directive);
    public CustomPermissionsPolicyDirective AddCustomFeature(string directive, string value);
    private T AddDirective(T directive);
    internal string Build();
}
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Builder.PermissionsPolicyHeaderExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static HeaderPolicyCollection AddPermissionsPolicy(HeaderPolicyCollection policies, Action`1<PermissionsPolicyBuilder> configure);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Builder.ReferrerPolicyHeaderExtensions : object {
    [ExtensionAttribute]
public static HeaderPolicyCollection AddReferrerPolicyNone(HeaderPolicyCollection policies);
    [ExtensionAttribute]
public static HeaderPolicyCollection AddReferrerPolicyNoReferrer(HeaderPolicyCollection policies);
    [ExtensionAttribute]
public static HeaderPolicyCollection AddReferrerPolicyNoReferrerWhenDowngrade(HeaderPolicyCollection policies);
    [ExtensionAttribute]
public static HeaderPolicyCollection AddReferrerPolicySameOrigin(HeaderPolicyCollection policies);
    [ExtensionAttribute]
public static HeaderPolicyCollection AddReferrerPolicyOrigin(HeaderPolicyCollection policies);
    [ExtensionAttribute]
public static HeaderPolicyCollection AddReferrerPolicyStrictOrigin(HeaderPolicyCollection policies);
    [ExtensionAttribute]
public static HeaderPolicyCollection AddReferrerPolicyOriginWhenCrossOrigin(HeaderPolicyCollection policies);
    [ExtensionAttribute]
public static HeaderPolicyCollection AddReferrerPolicyStrictOriginWhenCrossOrigin(HeaderPolicyCollection policies);
    [ExtensionAttribute]
public static HeaderPolicyCollection AddReferrerPolicyUnsafeUrl(HeaderPolicyCollection policies);
}
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Builder.RemoveCustomHeaderExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static HeaderPolicyCollection RemoveCustomHeader(HeaderPolicyCollection policies, string header);
}
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Builder.ReportingEndpointsHeaderExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static HeaderPolicyCollection AddReportingEndpoints(HeaderPolicyCollection policies, Action`1<ReportingEndpointsHeaderBuilder> configure);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Builder.SecurityHeadersMiddlewareExtensions : object {
    [ExtensionAttribute]
public static IApplicationBuilder UseSecurityHeaders(IApplicationBuilder app, HeaderPolicyCollection policies);
    [ExtensionAttribute]
public static IApplicationBuilder UseSecurityHeaders(IApplicationBuilder app, Action`1<HeaderPolicyCollection> configure);
    [ExtensionAttribute]
public static IApplicationBuilder UseSecurityHeaders(IApplicationBuilder app);
}
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Builder.ServerHeaderExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static HeaderPolicyCollection RemoveServerHeader(HeaderPolicyCollection policies);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Builder.StrictTransportSecurityHeaderExtensions : object {
    private static String[] _excludedHosts;
    private static StrictTransportSecurityHeaderExtensions();
    [ExtensionAttribute]
public static HeaderPolicyCollection AddStrictTransportSecurityMaxAge(HeaderPolicyCollection policies, int maxAgeInSeconds);
    [ExtensionAttribute]
public static HeaderPolicyCollection AddStrictTransportSecurityMaxAgeIncludeSubDomains(HeaderPolicyCollection policies, int maxAgeInSeconds);
    [ExtensionAttribute]
public static HeaderPolicyCollection AddStrictTransportSecurityMaxAgeIncludeSubDomainsAndPreload(HeaderPolicyCollection policies, int maxAgeInSeconds);
    [ExtensionAttribute]
public static HeaderPolicyCollection AddStrictTransportSecurity(HeaderPolicyCollection policies, int maxAgeInSeconds, bool includeSubdomains, bool preload, String[] excludedHosts);
    [ExtensionAttribute]
public static HeaderPolicyCollection AddStrictTransportSecurityNoCache(HeaderPolicyCollection policies);
}
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Builder.XContentTypeOptionsHeaderExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static HeaderPolicyCollection AddContentTypeOptionsNoSniff(HeaderPolicyCollection policies);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Builder.XFrameOptionsHeaderExtensions : object {
    [ExtensionAttribute]
public static HeaderPolicyCollection AddFrameOptionsDeny(HeaderPolicyCollection policies);
    [ExtensionAttribute]
public static HeaderPolicyCollection AddFrameOptionsSameOrigin(HeaderPolicyCollection policies);
    [ExtensionAttribute]
public static HeaderPolicyCollection AddFrameOptionsSameOrigin(HeaderPolicyCollection policies, string uri);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Builder.XssProtectionHeaderExtensions : object {
    [ExtensionAttribute]
public static HeaderPolicyCollection AddXssProtectionEnabled(HeaderPolicyCollection policies);
    [ExtensionAttribute]
public static HeaderPolicyCollection AddXssProtectionDisabled(HeaderPolicyCollection policies);
    [ExtensionAttribute]
public static HeaderPolicyCollection AddXssProtectionBlock(HeaderPolicyCollection policies);
    [ExtensionAttribute]
public static HeaderPolicyCollection AddXssProtectionReport(HeaderPolicyCollection policies, string reportUrl);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.ContentSecurityPolicy.BaseUriDirectiveBuilder : CspDirectiveBuilder {
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.ContentSecurityPolicy.BlockAllMixedContentDirectiveBuilder : CspDirectiveBuilderBase {
    [NullableContextAttribute("1")]
internal virtual Func`2<HttpContext, string> CreateBuilder();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private string <CreateBuilder>b__1_0(HttpContext ctx);
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.ContentSecurityPolicy.ConnectSourceDirectiveBuilder : CspDirectiveBuilder {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class NetEscapades.AspNetCore.SecurityHeaders.Headers.ContentSecurityPolicy.CspBuilderResult : object {
    [CompilerGeneratedAttribute]
private bool <HasPerRequestValues>k__BackingField;
    internal bool HasPerRequestValues { get; }
    internal string ConstantValue { get; }
    internal Func`2<HttpContext, string> Builder { get; }
    protected CspBuilderResult(bool hasPerRequestValues);
    [CompilerGeneratedAttribute]
internal bool get_HasPerRequestValues();
    internal abstract virtual string get_ConstantValue();
    internal abstract virtual Func`2<HttpContext, string> get_Builder();
    public static CspBuilderResult CreateStaticResult(string constantValue);
    public static CspBuilderResult CreateDynamicResult(Func`2<HttpContext, string> builder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.ContentSecurityPolicy.CspDirectiveBuilder : CspDirectiveBuilderBase {
    private static string Separator;
    [CompilerGeneratedAttribute]
private List`1<string> <Sources>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Func`2<HttpContext, string>> <SourceBuilders>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <BlockResources>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <MustReportSample>k__BackingField;
    public List`1<string> Sources { get; }
    internal List`1<Func`2<HttpContext, string>> SourceBuilders { get; }
    internal bool HasPerRequestValues { get; }
    public bool BlockResources { get; public set; }
    internal bool MustReportSample { get; internal set; }
    public CspDirectiveBuilder(string directive);
    [CompilerGeneratedAttribute]
public List`1<string> get_Sources();
    [CompilerGeneratedAttribute]
internal List`1<Func`2<HttpContext, string>> get_SourceBuilders();
    internal virtual bool get_HasPerRequestValues();
    [CompilerGeneratedAttribute]
public bool get_BlockResources();
    [CompilerGeneratedAttribute]
public void set_BlockResources(bool value);
    [CompilerGeneratedAttribute]
internal bool get_MustReportSample();
    [CompilerGeneratedAttribute]
internal void set_MustReportSample(bool value);
    internal virtual Func`2<HttpContext, string> CreateBuilder();
    private string GetPolicy(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class NetEscapades.AspNetCore.SecurityHeaders.Headers.ContentSecurityPolicy.CspDirectiveBuilderBase : object {
    [CompilerGeneratedAttribute]
private string <Directive>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasPerRequestValues>k__BackingField;
    internal string Directive { get; }
    internal bool HasPerRequestValues { get; }
    public CspDirectiveBuilderBase(string directive);
    [CompilerGeneratedAttribute]
internal string get_Directive();
    [CompilerGeneratedAttribute]
internal virtual bool get_HasPerRequestValues();
    internal abstract virtual Func`2<HttpContext, string> CreateBuilder();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.ContentSecurityPolicy.CustomDirective : CspDirectiveBuilderBase {
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    public string Value { get; }
    public CustomDirective(string directive, string value);
    public CustomDirective(string directive);
    [CompilerGeneratedAttribute]
public string get_Value();
    internal virtual Func`2<HttpContext, string> CreateBuilder();
    [CompilerGeneratedAttribute]
private string <CreateBuilder>b__5_0(HttpContext ctx);
    [CompilerGeneratedAttribute]
private string <CreateBuilder>b__5_1(HttpContext ctx);
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.ContentSecurityPolicy.DefaultSourceDirectiveBuilder : CspDirectiveBuilder {
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.ContentSecurityPolicy.FontSourceDirectiveBuilder : CspDirectiveBuilder {
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.ContentSecurityPolicy.FormActionDirectiveBuilder : CspDirectiveBuilder {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.ContentSecurityPolicy.FrameAncestorsDirectiveBuilder : CspDirectiveBuilderBase {
    [CompilerGeneratedAttribute]
private List`1<string> <Sources>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <BlockResources>k__BackingField;
    public List`1<string> Sources { get; }
    public bool BlockResources { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<string> get_Sources();
    [CompilerGeneratedAttribute]
public bool get_BlockResources();
    [CompilerGeneratedAttribute]
public void set_BlockResources(bool value);
    internal virtual Func`2<HttpContext, string> CreateBuilder();
    private string GetPolicy(string value);
    public FrameAncestorsDirectiveBuilder Self();
    public FrameAncestorsDirectiveBuilder Blob();
    public FrameAncestorsDirectiveBuilder Data();
    public FrameAncestorsDirectiveBuilder None();
    public FrameAncestorsDirectiveBuilder From(string uri);
    public FrameAncestorsDirectiveBuilder From(IEnumerable`1<string> uris);
    public FrameAncestorsDirectiveBuilder OverHttps();
    [CompilerGeneratedAttribute]
private string <CreateBuilder>b__8_0(HttpContext ctx);
    [CompilerGeneratedAttribute]
private string <CreateBuilder>b__8_1(HttpContext ctx);
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.ContentSecurityPolicy.FrameSourceDirectiveBuilder : CspDirectiveBuilder {
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.ContentSecurityPolicy.ImageSourceDirectiveBuilder : CspDirectiveBuilder {
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.ContentSecurityPolicy.ManifestSourceDirectiveBuilder : CspDirectiveBuilder {
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.ContentSecurityPolicy.MediaSourceDirectiveBuilder : CspDirectiveBuilder {
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.ContentSecurityPolicy.ObjectSourceDirectiveBuilder : CspDirectiveBuilder {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.ContentSecurityPolicy.ReportToDirectiveBuilder : CspDirectiveBuilderBase {
    [CompilerGeneratedAttribute]
private string <GroupName>k__BackingField;
    private string GroupName { get; }
    public ReportToDirectiveBuilder(string groupName);
    [CompilerGeneratedAttribute]
private string get_GroupName();
    internal virtual Func`2<HttpContext, string> CreateBuilder();
    [CompilerGeneratedAttribute]
private string <CreateBuilder>b__4_0(HttpContext _);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.ContentSecurityPolicy.ReportUriDirectiveBuilder : CspDirectiveBuilderBase {
    [CompilerGeneratedAttribute]
private string <Uri>k__BackingField;
    private string Uri { get; private set; }
    [CompilerGeneratedAttribute]
private string get_Uri();
    [CompilerGeneratedAttribute]
private void set_Uri(string value);
    internal virtual Func`2<HttpContext, string> CreateBuilder();
    public CspDirectiveBuilderBase To(string uri);
    [CompilerGeneratedAttribute]
private string <CreateBuilder>b__5_1(HttpContext ctx);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.ContentSecurityPolicy.SandboxDirectiveBuilder : CspDirectiveBuilderBase {
    private static string Separator;
    [CompilerGeneratedAttribute]
private List`1<string> <Tokens>k__BackingField;
    private List`1<string> Tokens { get; }
    [CompilerGeneratedAttribute]
private List`1<string> get_Tokens();
    public SandboxDirectiveBuilder AllowDownloads();
    public SandboxDirectiveBuilder AllowForms();
    public SandboxDirectiveBuilder AllowModals();
    public SandboxDirectiveBuilder AllowOrientationLock();
    public SandboxDirectiveBuilder AllowPointerLock();
    public SandboxDirectiveBuilder AllowPopups();
    public SandboxDirectiveBuilder AllowPopupsToEscapeSandbox();
    public SandboxDirectiveBuilder AllowPresentation();
    public SandboxDirectiveBuilder AllowSameOrigin();
    public SandboxDirectiveBuilder AllowScripts();
    public SandboxDirectiveBuilder AllowTopNavigation();
    public SandboxDirectiveBuilder AllowTopNavigationByUserActivation();
    public SandboxDirectiveBuilder AllowTopNavigationToCustomProtocols();
    public SandboxDirectiveBuilder AddCustomToken(string token);
    internal virtual Func`2<HttpContext, string> CreateBuilder();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.ContentSecurityPolicy.ScriptSourceAttrDirectiveBuilder : CspDirectiveBuilder {
    public ScriptSourceAttrDirectiveBuilder ReportSample();
    public ScriptSourceAttrDirectiveBuilder WithHashTagHelper();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.ContentSecurityPolicy.ScriptSourceDirectiveBuilder : CspDirectiveBuilder {
    public ScriptSourceDirectiveBuilder ReportSample();
    public ScriptSourceDirectiveBuilder WithHashTagHelper();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.ContentSecurityPolicy.ScriptSourceElemDirectiveBuilder : CspDirectiveBuilder {
    public ScriptSourceElemDirectiveBuilder ReportSample();
    public ScriptSourceElemDirectiveBuilder WithHashTagHelper();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.ContentSecurityPolicy.StyleSourceAttrDirectiveBuilder : CspDirectiveBuilder {
    public StyleSourceAttrDirectiveBuilder ReportSample();
    public StyleSourceAttrDirectiveBuilder WithHashTagHelper();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.ContentSecurityPolicy.StyleSourceDirectiveBuilder : CspDirectiveBuilder {
    public StyleSourceDirectiveBuilder ReportSample();
    public StyleSourceDirectiveBuilder WithHashTagHelper();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.ContentSecurityPolicy.StyleSourceElemDirectiveBuilder : CspDirectiveBuilder {
    public StyleSourceElemDirectiveBuilder ReportSample();
    public StyleSourceElemDirectiveBuilder WithHashTagHelper();
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.ContentSecurityPolicy.UpgradeInsecureRequestsDirectiveBuilder : CspDirectiveBuilderBase {
    [NullableContextAttribute("1")]
internal virtual Func`2<HttpContext, string> CreateBuilder();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private string <CreateBuilder>b__1_0(HttpContext ctx);
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.ContentSecurityPolicy.WorkerSourceDirectiveBuilder : CspDirectiveBuilder {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class NetEscapades.AspNetCore.SecurityHeaders.Headers.ContentSecurityPolicyHeader : DocumentHeaderPolicyBase {
    [CompilerGeneratedAttribute]
private bool <ReportOnly>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasPerRequestValues>k__BackingField;
    public string Header { get; }
    internal bool ReportOnly { get; }
    internal bool HasPerRequestValues { get; }
    protected ContentSecurityPolicyHeader(bool reportOnly, bool hasPerRequestValues);
    public virtual string get_Header();
    [CompilerGeneratedAttribute]
internal bool get_ReportOnly();
    [CompilerGeneratedAttribute]
internal bool get_HasPerRequestValues();
    public static ContentSecurityPolicyHeader Build(Action`1<CspBuilder> configure, bool asReportOnly);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class NetEscapades.AspNetCore.SecurityHeaders.Headers.CrossOriginEmbedderPolicyHeader : HeaderPolicyBase {
    [CompilerGeneratedAttribute]
private bool <ReportOnly>k__BackingField;
    public string Header { get; }
    internal bool ReportOnly { get; }
    protected CrossOriginEmbedderPolicyHeader(bool reportOnly);
    public virtual string get_Header();
    [CompilerGeneratedAttribute]
internal bool get_ReportOnly();
    public static CrossOriginEmbedderPolicyHeader Build(Action`1<CrossOriginEmbedderPolicyBuilder> configure, bool asReportOnly);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class NetEscapades.AspNetCore.SecurityHeaders.Headers.CrossOriginOpenerPolicyHeader : DocumentHeaderPolicyBase {
    [CompilerGeneratedAttribute]
private bool <ReportOnly>k__BackingField;
    public string Header { get; }
    internal bool ReportOnly { get; }
    protected CrossOriginOpenerPolicyHeader(bool reportOnly);
    public virtual string get_Header();
    [CompilerGeneratedAttribute]
internal bool get_ReportOnly();
    public static CrossOriginOpenerPolicyHeader Build(Action`1<CrossOriginOpenerPolicyBuilder> configure, bool asReportOnly);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class NetEscapades.AspNetCore.SecurityHeaders.Headers.CrossOriginPolicies.CrossOriginPolicyBuilderResult : object {
    internal string ConstantValue { get; }
    internal Func`2<HttpContext, string> Builder { get; }
    internal abstract virtual string get_ConstantValue();
    internal abstract virtual Func`2<HttpContext, string> get_Builder();
    public static CrossOriginPolicyBuilderResult CreateStaticResult(string constantValue);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class NetEscapades.AspNetCore.SecurityHeaders.Headers.CrossOriginPolicies.CrossOriginPolicyDirectiveBuilderBase : object {
    [CompilerGeneratedAttribute]
private string <Directive>k__BackingField;
    internal string Directive { get; }
    protected CrossOriginPolicyDirectiveBuilderBase(string directive);
    [CompilerGeneratedAttribute]
internal string get_Directive();
    internal abstract virtual Func`2<HttpContext, string> CreateBuilder();
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.CrossOriginPolicies.EmbedderPolicy.CredentiallessDirectiveBuilder : CrossOriginEmbedderPolicyDirectiveBuilderBase {
    [NullableContextAttribute("1")]
internal virtual Func`2<HttpContext, string> CreateBuilder();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private string <CreateBuilder>b__1_0(HttpContext ctx);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class NetEscapades.AspNetCore.SecurityHeaders.Headers.CrossOriginPolicies.EmbedderPolicy.CrossOriginEmbedderPolicyDirectiveBuilderBase : CrossOriginPolicyDirectiveBuilderBase {
    protected CrossOriginEmbedderPolicyDirectiveBuilderBase(string directive);
    internal abstract virtual Func`2<HttpContext, string> CreateBuilder();
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.CrossOriginPolicies.EmbedderPolicy.RequireCorpDirectiveBuilder : CrossOriginEmbedderPolicyDirectiveBuilderBase {
    [NullableContextAttribute("1")]
internal virtual Func`2<HttpContext, string> CreateBuilder();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private string <CreateBuilder>b__1_0(HttpContext ctx);
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.CrossOriginPolicies.EmbedderPolicy.UnsafeNoneDirectiveBuilder : CrossOriginEmbedderPolicyDirectiveBuilderBase {
    [NullableContextAttribute("1")]
internal virtual Func`2<HttpContext, string> CreateBuilder();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private string <CreateBuilder>b__1_0(HttpContext ctx);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class NetEscapades.AspNetCore.SecurityHeaders.Headers.CrossOriginPolicies.OpenerPolicy.CrossOriginOpenerPolicyDirectiveBuilderBase : CrossOriginPolicyDirectiveBuilderBase {
    protected CrossOriginOpenerPolicyDirectiveBuilderBase(string directive);
    internal abstract virtual Func`2<HttpContext, string> CreateBuilder();
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.CrossOriginPolicies.OpenerPolicy.SameOriginAllowPopupsDirectiveBuilder : CrossOriginOpenerPolicyDirectiveBuilderBase {
    [NullableContextAttribute("1")]
internal virtual Func`2<HttpContext, string> CreateBuilder();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private string <CreateBuilder>b__1_0(HttpContext ctx);
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.CrossOriginPolicies.OpenerPolicy.SameOriginDirectiveBuilder : CrossOriginOpenerPolicyDirectiveBuilderBase {
    [NullableContextAttribute("1")]
internal virtual Func`2<HttpContext, string> CreateBuilder();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private string <CreateBuilder>b__1_0(HttpContext ctx);
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.CrossOriginPolicies.OpenerPolicy.UnsafeNoneDirectiveBuilder : CrossOriginOpenerPolicyDirectiveBuilderBase {
    [NullableContextAttribute("1")]
internal virtual Func`2<HttpContext, string> CreateBuilder();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private string <CreateBuilder>b__1_0(HttpContext ctx);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.CrossOriginPolicies.ReportDirectiveBuilder : CrossOriginPolicyDirectiveBuilderBase {
    [CompilerGeneratedAttribute]
private string <Endpoint>k__BackingField;
    private string Endpoint { get; private set; }
    [CompilerGeneratedAttribute]
private string get_Endpoint();
    [CompilerGeneratedAttribute]
private void set_Endpoint(string value);
    internal virtual Func`2<HttpContext, string> CreateBuilder();
    public CrossOriginPolicyDirectiveBuilderBase To(string endpoint);
    [CompilerGeneratedAttribute]
private string <CreateBuilder>b__5_1(HttpContext ctx);
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.CrossOriginPolicies.ResourcePolicy.CrossOriginDirectiveBuilder : CrossOriginResourcePolicyDirectiveBuilderBase {
    [NullableContextAttribute("1")]
internal virtual Func`2<HttpContext, string> CreateBuilder();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private string <CreateBuilder>b__1_0(HttpContext ctx);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class NetEscapades.AspNetCore.SecurityHeaders.Headers.CrossOriginPolicies.ResourcePolicy.CrossOriginResourcePolicyDirectiveBuilderBase : CrossOriginPolicyDirectiveBuilderBase {
    protected CrossOriginResourcePolicyDirectiveBuilderBase(string directive);
    internal abstract virtual Func`2<HttpContext, string> CreateBuilder();
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.CrossOriginPolicies.ResourcePolicy.SameOriginDirectiveBuilder : CrossOriginResourcePolicyDirectiveBuilderBase {
    [NullableContextAttribute("1")]
internal virtual Func`2<HttpContext, string> CreateBuilder();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private string <CreateBuilder>b__1_0(HttpContext ctx);
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.CrossOriginPolicies.ResourcePolicy.SameSiteDirectiveBuilder : CrossOriginResourcePolicyDirectiveBuilderBase {
    [NullableContextAttribute("1")]
internal virtual Func`2<HttpContext, string> CreateBuilder();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private string <CreateBuilder>b__1_0(HttpContext ctx);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class NetEscapades.AspNetCore.SecurityHeaders.Headers.CrossOriginResourcePolicyHeader : HeaderPolicyBase {
    public string Header { get; }
    public virtual string get_Header();
    public static CrossOriginResourcePolicyHeader Build(Action`1<CrossOriginResourcePolicyBuilder> configure);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.CustomHeader : HeaderPolicyBase {
    private string _value;
    [CompilerGeneratedAttribute]
private string <Header>k__BackingField;
    public string Header { get; }
    public CustomHeader(string header, string value);
    [CompilerGeneratedAttribute]
public virtual string get_Header();
    protected virtual string GetValue(HttpContext context);
}
public abstract class NetEscapades.AspNetCore.SecurityHeaders.Headers.DocumentHeaderPolicyBase : HeaderPolicyBase {
    [NullableContextAttribute("1")]
public virtual void Apply(HttpContext context, CustomHeadersResult result);
    [NullableContextAttribute("1")]
public sealed virtual void Apply(HttpContext context, CustomHeadersResult result, HeaderPolicyCollection policies);
    [NullableContextAttribute("1")]
private static bool IsMatch(HttpContext context, String[] contentTypes);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.ExpectCTHeader : HeaderPolicyBase {
    private string _value;
    private IReadOnlyList`1<string> _excludedHosts;
    [CompilerGeneratedAttribute]
private string <Header>k__BackingField;
    public string Header { get; }
    public ExpectCTHeader(string value, IReadOnlyList`1<string> excludedHosts);
    [CompilerGeneratedAttribute]
public virtual string get_Header();
    protected virtual string GetValue(HttpContext context);
    protected virtual void EvaluateHttpRequest(HttpContext context, CustomHeadersResult result);
    protected virtual void EvaluateHttpsRequest(HttpContext context, CustomHeadersResult result);
    private bool IsHostExcluded(string host);
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.FeaturePolicy.AccelerometerFeaturePolicyDirectiveBuilder : FeaturePolicyDirectiveBuilder {
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.FeaturePolicy.AmbientLightSensorFeaturePolicyDirectiveBuilder : FeaturePolicyDirectiveBuilder {
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.FeaturePolicy.AutoplayFeaturePolicyDirectiveBuilder : FeaturePolicyDirectiveBuilder {
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.FeaturePolicy.CameraFeaturePolicyDirectiveBuilder : FeaturePolicyDirectiveBuilder {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.FeaturePolicy.CustomFeaturePolicyDirective : FeaturePolicyDirectiveBuilderBase {
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    public string Value { get; }
    public CustomFeaturePolicyDirective(string directive, string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    internal virtual string Build();
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.FeaturePolicy.CustomFeaturePolicyDirectiveBuilder : FeaturePolicyDirectiveBuilder {
    [NullableContextAttribute("1")]
public CustomFeaturePolicyDirectiveBuilder(string directive);
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.FeaturePolicy.EncryptedMediaFeaturePolicyDirectiveBuilder : FeaturePolicyDirectiveBuilder {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.FeaturePolicy.FeaturePolicyDirectiveBuilder : FeaturePolicyDirectiveBuilderBase {
    [CompilerGeneratedAttribute]
private List`1<string> <Sources>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <BlockResources>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowAllResources>k__BackingField;
    public List`1<string> Sources { get; }
    internal bool BlockResources { get; internal set; }
    internal bool AllowAllResources { get; internal set; }
    public FeaturePolicyDirectiveBuilder(string directive);
    [CompilerGeneratedAttribute]
public List`1<string> get_Sources();
    [CompilerGeneratedAttribute]
internal bool get_BlockResources();
    [CompilerGeneratedAttribute]
internal void set_BlockResources(bool value);
    [CompilerGeneratedAttribute]
internal bool get_AllowAllResources();
    [CompilerGeneratedAttribute]
internal void set_AllowAllResources(bool value);
    internal virtual string Build();
    private string GetPolicy(string value);
    public FeaturePolicyDirectiveBuilder All();
    public FeaturePolicyDirectiveBuilder Self();
    public FeaturePolicyDirectiveBuilder None();
    public FeaturePolicyDirectiveBuilder For(string uri);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class NetEscapades.AspNetCore.SecurityHeaders.Headers.FeaturePolicy.FeaturePolicyDirectiveBuilderBase : object {
    [CompilerGeneratedAttribute]
private string <Directive>k__BackingField;
    internal string Directive { get; }
    public FeaturePolicyDirectiveBuilderBase(string directive);
    [CompilerGeneratedAttribute]
internal string get_Directive();
    internal abstract virtual string Build();
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.FeaturePolicy.FullscreenFeaturePolicyDirectiveBuilder : FeaturePolicyDirectiveBuilder {
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.FeaturePolicy.GeolocationFeaturePolicyDirectiveBuilder : FeaturePolicyDirectiveBuilder {
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.FeaturePolicy.GyroscopeFeaturePolicyDirectiveBuilder : FeaturePolicyDirectiveBuilder {
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.FeaturePolicy.MagnetometerFeaturePolicyDirectiveBuilder : FeaturePolicyDirectiveBuilder {
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.FeaturePolicy.MicrophoneFeaturePolicyDirectiveBuilder : FeaturePolicyDirectiveBuilder {
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.FeaturePolicy.MidiFeaturePolicyDirectiveBuilder : FeaturePolicyDirectiveBuilder {
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.FeaturePolicy.PaymentFeaturePolicyDirectiveBuilder : FeaturePolicyDirectiveBuilder {
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.FeaturePolicy.PictureInPictureFeaturePolicyDirectiveBuilder : FeaturePolicyDirectiveBuilder {
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.FeaturePolicy.SpeakerFeaturePolicyDirectiveBuilder : FeaturePolicyDirectiveBuilder {
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.FeaturePolicy.SynchronousXhrFeaturePolicyDirectiveBuilder : FeaturePolicyDirectiveBuilder {
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.FeaturePolicy.UsbFeaturePolicyDirectiveBuilder : FeaturePolicyDirectiveBuilder {
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.FeaturePolicy.VRFeaturePolicyDirectiveBuilder : FeaturePolicyDirectiveBuilder {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.FeaturePolicyHeader : DocumentHeaderPolicyBase {
    private string _value;
    public string Header { get; }
    public FeaturePolicyHeader(string value);
    public virtual string get_Header();
    protected virtual string GetValue(HttpContext context);
    public static FeaturePolicyHeader Build(Action`1<FeaturePolicyBuilder> configure);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class NetEscapades.AspNetCore.SecurityHeaders.Headers.HeaderPolicyBase : object {
    public string Header { get; }
    public abstract virtual string get_Header();
    protected abstract virtual string GetValue(HttpContext context);
    public virtual void Apply(HttpContext context, CustomHeadersResult result);
    protected virtual void EvaluateHttpRequest(HttpContext context, CustomHeadersResult result);
    protected virtual void EvaluateHttpsRequest(HttpContext context, CustomHeadersResult result);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class NetEscapades.AspNetCore.SecurityHeaders.Headers.HtmlOnlyHeaderPolicyBase : HeaderPolicyBase {
    protected virtual void EvaluateHttpRequest(HttpContext context, CustomHeadersResult result);
    protected virtual void EvaluateHttpsRequest(HttpContext context, CustomHeadersResult result);
}
internal interface NetEscapades.AspNetCore.SecurityHeaders.Headers.IDocumentHeaderPolicy {
    [NullableContextAttribute("1")]
public abstract virtual void Apply(HttpContext context, CustomHeadersResult result, HeaderPolicyCollection policies);
}
[NullableContextAttribute("1")]
public interface NetEscapades.AspNetCore.SecurityHeaders.Headers.IHeaderPolicy {
    public string Header { get; }
    public abstract virtual string get_Header();
    public abstract virtual void Apply(HttpContext context, CustomHeadersResult result);
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.PermissionsPolicy.AccelerometerPermissionsPolicyDirectiveBuilder : PermissionsPolicyDirectiveBuilder {
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.PermissionsPolicy.AmbientLightSensorPermissionsPolicyDirectiveBuilder : PermissionsPolicyDirectiveBuilder {
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.PermissionsPolicy.AttributionReportingPermissionsPolicyDirectiveBuilder : PermissionsPolicyDirectiveBuilder {
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.PermissionsPolicy.AutoplayPermissionsPolicyDirectiveBuilder : PermissionsPolicyDirectiveBuilder {
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.PermissionsPolicy.BluetoothPermissionsPolicyDirectiveBuilder : PermissionsPolicyDirectiveBuilder {
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.PermissionsPolicy.CameraPermissionsPolicyDirectiveBuilder : PermissionsPolicyDirectiveBuilder {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.PermissionsPolicy.CustomPermissionsPolicyDirective : PermissionsPolicyDirectiveBuilderBase {
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    public string Value { get; }
    public CustomPermissionsPolicyDirective(string directive, string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    internal virtual string Build();
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.PermissionsPolicy.CustomPermissionsPolicyDirectiveBuilder : PermissionsPolicyDirectiveBuilder {
    [NullableContextAttribute("1")]
public CustomPermissionsPolicyDirectiveBuilder(string directive);
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.PermissionsPolicy.DisplayCapturePermissionsPolicyDirectiveBuilder : PermissionsPolicyDirectiveBuilder {
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.PermissionsPolicy.EncryptedMediaPermissionsPolicyDirectiveBuilder : PermissionsPolicyDirectiveBuilder {
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.PermissionsPolicy.FederatedLearningOfCohortsCalculationPermissionsPolicyDirectiveBuilder : PermissionsPolicyDirectiveBuilder {
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.PermissionsPolicy.FullscreenPermissionsPolicyDirectiveBuilder : PermissionsPolicyDirectiveBuilder {
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.PermissionsPolicy.GeolocationPermissionsPolicyDirectiveBuilder : PermissionsPolicyDirectiveBuilder {
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.PermissionsPolicy.GyroscopePermissionsPolicyDirectiveBuilder : PermissionsPolicyDirectiveBuilder {
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.PermissionsPolicy.HidPermissionsPolicyDirectiveBuilder : PermissionsPolicyDirectiveBuilder {
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.PermissionsPolicy.IdentityCredentialsGetPermissionsPolicyDirectiveBuilder : PermissionsPolicyDirectiveBuilder {
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.PermissionsPolicy.IdleDetectionPermissionsPolicyDirectiveBuilder : PermissionsPolicyDirectiveBuilder {
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.PermissionsPolicy.LocalFontsPermissionsPolicyDirectiveBuilder : PermissionsPolicyDirectiveBuilder {
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.PermissionsPolicy.MagnetometerPermissionsPolicyDirectiveBuilder : PermissionsPolicyDirectiveBuilder {
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.PermissionsPolicy.MicrophonePermissionsPolicyDirectiveBuilder : PermissionsPolicyDirectiveBuilder {
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.PermissionsPolicy.MidiPermissionsPolicyDirectiveBuilder : PermissionsPolicyDirectiveBuilder {
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.PermissionsPolicy.OtpCredentialsPermissionsPolicyDirectiveBuilder : PermissionsPolicyDirectiveBuilder {
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.PermissionsPolicy.PaymentPermissionsPolicyDirectiveBuilder : PermissionsPolicyDirectiveBuilder {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class NetEscapades.AspNetCore.SecurityHeaders.Headers.PermissionsPolicy.PermissionsPolicyDirectiveBuilder : PermissionsPolicyDirectiveBuilderBase {
    [CompilerGeneratedAttribute]
private List`1<string> <Sources>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <BlockResources>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowAllResources>k__BackingField;
    public List`1<string> Sources { get; }
    internal bool BlockResources { get; internal set; }
    internal bool AllowAllResources { get; internal set; }
    public PermissionsPolicyDirectiveBuilder(string directive);
    [CompilerGeneratedAttribute]
public List`1<string> get_Sources();
    [CompilerGeneratedAttribute]
internal bool get_BlockResources();
    [CompilerGeneratedAttribute]
internal void set_BlockResources(bool value);
    [CompilerGeneratedAttribute]
internal bool get_AllowAllResources();
    [CompilerGeneratedAttribute]
internal void set_AllowAllResources(bool value);
    internal virtual string Build();
    public PermissionsPolicyDirectiveBuilder All();
    public PermissionsPolicyDirectiveBuilder Self();
    public PermissionsPolicyDirectiveBuilder None();
    public PermissionsPolicyDirectiveBuilder For(string uri);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class NetEscapades.AspNetCore.SecurityHeaders.Headers.PermissionsPolicy.PermissionsPolicyDirectiveBuilderBase : object {
    [CompilerGeneratedAttribute]
private string <Directive>k__BackingField;
    internal string Directive { get; }
    public PermissionsPolicyDirectiveBuilderBase(string directive);
    [CompilerGeneratedAttribute]
internal string get_Directive();
    internal abstract virtual string Build();
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.PermissionsPolicy.PictureInPicturePermissionsPolicyDirectiveBuilder : PermissionsPolicyDirectiveBuilder {
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.PermissionsPolicy.PublickeyCredentialsCreatePermissionsPolicyDirectiveBuilder : PermissionsPolicyDirectiveBuilder {
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.PermissionsPolicy.PublickeyCredentialsGetPermissionsPolicyDirectiveBuilder : PermissionsPolicyDirectiveBuilder {
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.PermissionsPolicy.ScreenWakeLockPermissionsPolicyDirectiveBuilder : PermissionsPolicyDirectiveBuilder {
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.PermissionsPolicy.SerialPermissionsPolicyDirectiveBuilder : PermissionsPolicyDirectiveBuilder {
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.PermissionsPolicy.SpeakerPermissionsPolicyDirectiveBuilder : PermissionsPolicyDirectiveBuilder {
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.PermissionsPolicy.SpeakerSelectionPermissionsPolicyDirectiveBuilder : PermissionsPolicyDirectiveBuilder {
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.PermissionsPolicy.StorageAccessPermissionsPolicyDirectiveBuilder : PermissionsPolicyDirectiveBuilder {
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.PermissionsPolicy.SynchronousXhrPermissionsPolicyDirectiveBuilder : PermissionsPolicyDirectiveBuilder {
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.PermissionsPolicy.UsbPermissionsPolicyDirectiveBuilder : PermissionsPolicyDirectiveBuilder {
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.PermissionsPolicy.VRPermissionsPolicyDirectiveBuilder : PermissionsPolicyDirectiveBuilder {
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.PermissionsPolicy.WebSharePermissionsPolicyDirectiveBuilder : PermissionsPolicyDirectiveBuilder {
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.PermissionsPolicy.WindowManagementPermissionsPolicyDirectiveBuilder : PermissionsPolicyDirectiveBuilder {
}
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.PermissionsPolicy.XrSpatialTrackingPermissionsPolicyDirectiveBuilder : PermissionsPolicyDirectiveBuilder {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.PermissionsPolicyHeader : DocumentHeaderPolicyBase {
    private string _value;
    public string Header { get; }
    public PermissionsPolicyHeader(string value);
    public virtual string get_Header();
    protected virtual string GetValue(HttpContext context);
    public static PermissionsPolicyHeader Build(Action`1<PermissionsPolicyBuilder> configure);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.ReferrerPolicyHeader : DocumentHeaderPolicyBase {
    private string _value;
    [CompilerGeneratedAttribute]
private string <Header>k__BackingField;
    public string Header { get; }
    public ReferrerPolicyHeader(string value);
    [CompilerGeneratedAttribute]
public virtual string get_Header();
    protected virtual string GetValue(HttpContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.RemoveCustomHeader : HeaderPolicyBase {
    [CompilerGeneratedAttribute]
private string <Header>k__BackingField;
    public string Header { get; }
    public RemoveCustomHeader(string header);
    [CompilerGeneratedAttribute]
public virtual string get_Header();
    protected virtual string GetValue(HttpContext context);
    protected virtual void EvaluateHttpRequest(HttpContext context, CustomHeadersResult result);
    protected virtual void EvaluateHttpsRequest(HttpContext context, CustomHeadersResult result);
    private void EvaluateRequest(HttpContext context, CustomHeadersResult result);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class NetEscapades.AspNetCore.SecurityHeaders.Headers.ReportingEndpointsHeader : HeaderPolicyBase {
    public string Header { get; }
    public virtual string get_Header();
    public static ReportingEndpointsHeader Build(Action`1<ReportingEndpointsHeaderBuilder> configure);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.ReportingEndpointsHeaderBuilder : object {
    private static string Separator;
    private static string DefaultName;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private List`1<KeyValuePair`2<string, string>> _endpoints;
    public ReportingEndpointsHeaderBuilder AddDefaultEndpoint(string url);
    public ReportingEndpointsHeaderBuilder AddDefaultEndpoint(Uri url);
    public ReportingEndpointsHeaderBuilder AddEndpoint(string name, string url);
    public ReportingEndpointsHeaderBuilder AddEndpoint(string name, Uri url);
    private void AddToList(string name, string uri);
    internal string Build();
    private static bool IsValid(Uri uri);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.ServerHeader : HeaderPolicyBase {
    private string _value;
    [CompilerGeneratedAttribute]
private string <Header>k__BackingField;
    public string Header { get; }
    public ServerHeader(string value);
    [CompilerGeneratedAttribute]
public virtual string get_Header();
    protected virtual string GetValue(HttpContext context);
    protected virtual void EvaluateHttpRequest(HttpContext context, CustomHeadersResult result);
    protected virtual void EvaluateHttpsRequest(HttpContext context, CustomHeadersResult result);
    private void EvaluateRequest(HttpContext context, CustomHeadersResult result);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.StrictTransportSecurityHeader : HeaderPolicyBase {
    public static int OneYearInSeconds;
    private string _value;
    private IReadOnlyList`1<string> _excludedHosts;
    [CompilerGeneratedAttribute]
private string <Header>k__BackingField;
    public string Header { get; }
    public StrictTransportSecurityHeader(string value, IReadOnlyList`1<string> excludedHosts);
    [CompilerGeneratedAttribute]
public virtual string get_Header();
    protected virtual string GetValue(HttpContext context);
    protected virtual void EvaluateHttpRequest(HttpContext context, CustomHeadersResult result);
    protected virtual void EvaluateHttpsRequest(HttpContext context, CustomHeadersResult result);
    private bool IsHostExcluded(string host);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.XContentTypeOptionsHeader : HeaderPolicyBase {
    private string _value;
    [CompilerGeneratedAttribute]
private string <Header>k__BackingField;
    public string Header { get; }
    public XContentTypeOptionsHeader(string value);
    [CompilerGeneratedAttribute]
public virtual string get_Header();
    protected virtual string GetValue(HttpContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.XFrameOptionsHeader : DocumentHeaderPolicyBase {
    private string _value;
    [CompilerGeneratedAttribute]
private string <Header>k__BackingField;
    public string Header { get; }
    public XFrameOptionsHeader(string value);
    [CompilerGeneratedAttribute]
public virtual string get_Header();
    protected virtual string GetValue(HttpContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class NetEscapades.AspNetCore.SecurityHeaders.Headers.XssProtectionHeader : DocumentHeaderPolicyBase {
    private string _value;
    [CompilerGeneratedAttribute]
private string <Header>k__BackingField;
    public string Header { get; }
    public XssProtectionHeader(string value);
    [CompilerGeneratedAttribute]
public virtual string get_Header();
    protected virtual string GetValue(HttpContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class NetEscapades.AspNetCore.SecurityHeaders.HttpContextExtensions : object {
    [ExtensionAttribute]
public static string GetNonce(HttpContext context);
    [ExtensionAttribute]
internal static void SetNonce(HttpContext context, string nonce);
    [ExtensionAttribute]
public static void SetScriptCSPHash(HttpContext context, CSPHashType algorithm, string hash);
    [ExtensionAttribute]
public static void SetStylesCSPHash(HttpContext context, CSPHashType algorithm, string hash);
    [ExtensionAttribute]
internal static IEnumerable`1<string> GetScriptCSPHashes(HttpContext context);
    [ExtensionAttribute]
internal static IEnumerable`1<string> GetStyleCSPHashes(HttpContext context);
    private static void SetHash(HttpContext context, string key, CSPHashType algorithm, string hash);
    private static string GetSource(CSPHashType algorithm, string hash);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class NetEscapades.AspNetCore.SecurityHeaders.Infrastructure.Constants : object {
    internal static string DefaultNonceKey;
    internal static int DefaultBytesInNonce;
    internal static string DefaultScriptHashKey;
    internal static string DefaultStylesHashKey;
}
public enum NetEscapades.AspNetCore.SecurityHeaders.Infrastructure.CSPHashType : Enum {
    public int value__;
    public static CSPHashType SHA256;
    public static CSPHashType SHA384;
    public static CSPHashType SHA512;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("This class is unused since v0.5.0, and will be removed in a future version of the package")]
public class NetEscapades.AspNetCore.SecurityHeaders.Infrastructure.CustomHeaderOptions : object {
    private string _defaultPolicyName;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, HeaderPolicyCollection> <PolicyCollections>k__BackingField;
    public Dictionary`2<string, HeaderPolicyCollection> PolicyCollections { get; }
    public string DefaultPolicyName { get; public set; }
    [CompilerGeneratedAttribute]
public Dictionary`2<string, HeaderPolicyCollection> get_PolicyCollections();
    public string get_DefaultPolicyName();
    public void set_DefaultPolicyName(string value);
    public HeaderPolicyCollection GetPolicy(string name);
}
public class NetEscapades.AspNetCore.SecurityHeaders.Infrastructure.CustomHeaderService : object {
    [NullableContextAttribute("1")]
public virtual CustomHeadersResult EvaluatePolicy(HttpContext context, HeaderPolicyCollection policies);
    [NullableContextAttribute("1")]
public virtual void ApplyResult(HttpResponse response, CustomHeadersResult result);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class NetEscapades.AspNetCore.SecurityHeaders.Infrastructure.CustomHeadersResult : object {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <SetHeaders>k__BackingField;
    [CompilerGeneratedAttribute]
private ISet`1<string> <RemoveHeaders>k__BackingField;
    public IDictionary`2<string, string> SetHeaders { get; }
    public ISet`1<string> RemoveHeaders { get; }
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_SetHeaders();
    [CompilerGeneratedAttribute]
public ISet`1<string> get_RemoveHeaders();
}
[NullableContextAttribute("1")]
public interface NetEscapades.AspNetCore.SecurityHeaders.Infrastructure.ICustomHeaderService {
    public abstract virtual CustomHeadersResult EvaluatePolicy(HttpContext context, HeaderPolicyCollection policies);
    public abstract virtual void ApplyResult(HttpResponse response, CustomHeadersResult result);
}
internal class NetEscapades.AspNetCore.SecurityHeaders.Infrastructure.NonceGenerator : object {
    [NullableAttribute("1")]
private RandomNumberGenerator _random;
    [NullableContextAttribute("1")]
public string GetNonce(int nonceBytes);
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class NetEscapades.AspNetCore.SecurityHeaders.SecurityHeadersMiddleware : object {
    private RequestDelegate _next;
    private HeaderPolicyCollection _policy;
    private NonceGenerator _nonceGenerator;
    private bool _mustGenerateNonce;
    [CompilerGeneratedAttribute]
private ICustomHeaderService <CustomHeaderService>k__BackingField;
    private ICustomHeaderService CustomHeaderService { get; }
    public SecurityHeadersMiddleware(RequestDelegate next, ICustomHeaderService service, HeaderPolicyCollection policies);
    internal SecurityHeadersMiddleware(RequestDelegate next, ICustomHeaderService service, HeaderPolicyCollection policies, NonceGenerator nonceGenerator);
    [CompilerGeneratedAttribute]
private ICustomHeaderService get_CustomHeaderService();
    [AsyncStateMachineAttribute("NetEscapades.AspNetCore.SecurityHeaders.SecurityHeadersMiddleware/<Invoke>d__9")]
public Task Invoke(HttpContext context);
    private static Task OnResponseStarting(object state);
    private static bool MustGenerateNonce(HeaderPolicyCollection policy);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
