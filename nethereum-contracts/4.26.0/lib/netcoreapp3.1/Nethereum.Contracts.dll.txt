public static class Nethereum.Contracts.ABITypedRegistry : object {
    private static ConcurrentDictionary`2<Type, FunctionABI> _functionAbiRegistry;
    private static ConcurrentDictionary`2<Type, EventABI> _eventAbiRegistry;
    private static ConcurrentDictionary`2<Type, ErrorABI> _errorAbiRegistry;
    private static AttributesToABIExtractor _abiExtractor;
    private static ABITypedRegistry();
    public static FunctionABI GetFunctionABI();
    public static FunctionABI GetFunctionABI(Type functionABIType);
    public static EventABI GetEvent();
    public static EventABI GetEvent(Type type);
    public static ErrorABI GetError();
    public static ErrorABI GetError(Type type);
}
public class Nethereum.Contracts.BlockRange : ValueType {
    private int _hashCode;
    [CompilerGeneratedAttribute]
private HexBigInteger <From>k__BackingField;
    [CompilerGeneratedAttribute]
private HexBigInteger <To>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <BlockCount>k__BackingField;
    public HexBigInteger From { get; }
    public HexBigInteger To { get; }
    public BigInteger BlockCount { get; }
    public BlockRange(ulong from, ulong to);
    public BlockRange(BigInteger from, BigInteger to);
    public BlockRange(HexBigInteger from, HexBigInteger to);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public HexBigInteger get_From();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public HexBigInteger get_To();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public BigInteger get_BlockCount();
    public sealed virtual bool Equals(BlockRange other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
public class Nethereum.Contracts.Constants.CommonAddresses : object {
    public static string MULTICALL_ADDRESS;
    public static string ENS_REGISTRY_ADDRESS;
    public static string PROOF_OF_HUMANITY_PROXY_ADDRESS;
    public static string PROOF_OF_HUMANITY_CONTRACT_ADDRESS;
}
public class Nethereum.Contracts.Contract : object {
    [CompilerGeneratedAttribute]
private ContractBuilder <ContractBuilder>k__BackingField;
    [CompilerGeneratedAttribute]
private EthApiService <Eth>k__BackingField;
    private IEthNewFilter EthNewFilter { get; }
    public ContractBuilder ContractBuilder { get; public set; }
    public string Address { get; }
    public EthApiService Eth { get; }
    public Contract(EthApiService eth, string abi, string contractAddress);
    public Contract(EthApiService eth, Type contractMessageType, string contractAddress);
    public Contract(EthApiService eth, Type[] contractMessagesTypes, string contractAddress);
    private IEthNewFilter get_EthNewFilter();
    [CompilerGeneratedAttribute]
public ContractBuilder get_ContractBuilder();
    [CompilerGeneratedAttribute]
public void set_ContractBuilder(ContractBuilder value);
    public string get_Address();
    [CompilerGeneratedAttribute]
public EthApiService get_Eth();
    public Task`1<HexBigInteger> CreateFilterAsync();
    public NewFilterInput GetDefaultFilterInput(BlockParameter fromBlock, BlockParameter toBlock);
    public Event GetEvent(string name);
    public Error GetError(string name);
    public Error FindError(string exceptionEncodedData);
    public Event GetEventBySignature(string signature);
    public Event`1<T> GetEvent();
    public Function`1<TFunction> GetFunction();
    public Function GetFunction(string name);
    public Function GetFunctionBySignature(string signature);
    private FunctionBuilder GetFunctionBuilder(string name);
    private FunctionBuilder GetFunctionBuilderBySignature(string signature);
    private FunctionBuilder`1<TFunctionInput> GetFunctionBuilder();
}
public class Nethereum.Contracts.ContractBuilder : object {
    [CompilerGeneratedAttribute]
private ContractABI <ContractABI>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Address>k__BackingField;
    public ContractABI ContractABI { get; public set; }
    public string Address { get; public set; }
    public ContractBuilder(string abi, string contractAddress);
    public ContractBuilder(Type contractMessageType, string contractAddress);
    public ContractBuilder(Type[] contractMessagesTypes, string contractAddress);
    [CompilerGeneratedAttribute]
public ContractABI get_ContractABI();
    [CompilerGeneratedAttribute]
public void set_ContractABI(ContractABI value);
    [CompilerGeneratedAttribute]
public string get_Address();
    [CompilerGeneratedAttribute]
public void set_Address(string value);
    public NewFilterInput GetDefaultFilterInput(BlockParameter fromBlock, BlockParameter toBlock);
    public FunctionBuilder`1<TFunction> GetFunctionBuilder();
    public FunctionBuilder GetFunctionBuilder(string name);
    public FunctionBuilder GetFunctionBuilderBySignature(string signature);
    public ErrorABI GetErrorAbi(string name);
    public EventABI GetEventAbi(string name);
    public EventABI GetEventAbiBySignature(string signature);
    public FunctionABI GetFunctionAbi(string name);
    public FunctionABI GetFunctionAbiBySignature(string signature);
}
public class Nethereum.Contracts.ContractCall : object {
    private IEthCall _ethCall;
    private BlockParameter _defaulBlock;
    public ContractCall(IEthCall ethCall, BlockParameter defaulBlock);
    [AsyncStateMachineAttribute("Nethereum.Contracts.ContractCall/<CallAsync>d__3")]
public Task`1<string> CallAsync(CallInput callInput, BlockParameter block);
}
public class Nethereum.Contracts.ContractDeploymentMessage : ContractMessageBase {
    [CompilerGeneratedAttribute]
private string <ByteCode>k__BackingField;
    public string ByteCode { get; public set; }
    public ContractDeploymentMessage(string byteCode);
    [CompilerGeneratedAttribute]
public string get_ByteCode();
    [CompilerGeneratedAttribute]
public void set_ByteCode(string value);
}
public class Nethereum.Contracts.ContractHandlers.ContractDeploymentTransactionHandler`1 : ContractTransactionHandlerBase {
    private IDeploymentEstimatorHandler`1<TContractDeploymentMessage> _estimatorHandler;
    private IDeploymentTransactionReceiptPollHandler`1<TContractDeploymentMessage> _receiptPollHandler;
    private IDeploymentTransactionSenderHandler`1<TContractDeploymentMessage> _transactionSenderHandler;
    private IDeploymentSigner`1<TContractDeploymentMessage> _transactionSigner;
    public ContractDeploymentTransactionHandler`1(ITransactionManager transactionManager);
    public sealed virtual Task`1<string> SignTransactionAsync(TContractDeploymentMessage contractDeploymentMessage);
    public sealed virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(TContractDeploymentMessage contractDeploymentMessage, CancellationTokenSource tokenSource);
    public sealed virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(TContractDeploymentMessage contractDeploymentMessage, CancellationToken cancellationToken);
    public sealed virtual Task`1<string> SendRequestAsync(TContractDeploymentMessage contractDeploymentMessage);
    public sealed virtual Task`1<HexBigInteger> EstimateGasAsync(TContractDeploymentMessage contractDeploymentMessage);
    [AsyncStateMachineAttribute("Nethereum.Contracts.ContractHandlers.ContractDeploymentTransactionHandler`1/<CreateTransactionInputEstimatingGasAsync>d__10")]
public sealed virtual Task`1<TransactionInput> CreateTransactionInputEstimatingGasAsync(TContractDeploymentMessage deploymentMessage);
}
public class Nethereum.Contracts.ContractHandlers.ContractHandler : object {
    [CompilerGeneratedAttribute]
private string <AddressFrom>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContractAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private EthApiContractService <EthApiContractService>k__BackingField;
    public string AddressFrom { get; protected set; }
    public string ContractAddress { get; }
    public EthApiContractService EthApiContractService { get; }
    public ContractHandler(string contractAddress, EthApiContractService ethApiContractService, string addressFrom);
    [CompilerGeneratedAttribute]
public string get_AddressFrom();
    [CompilerGeneratedAttribute]
protected void set_AddressFrom(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ContractAddress();
    [CompilerGeneratedAttribute]
public sealed virtual EthApiContractService get_EthApiContractService();
    public sealed virtual Event`1<TEventType> GetEvent();
    public virtual Function`1<TEthereumContractFunctionMessage> GetFunction();
    protected void SetAddressFrom(ContractMessageBase contractMessage);
    public virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(TEthereumContractFunctionMessage transactionMessage, CancellationTokenSource tokenSource);
    public virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(TEthereumContractFunctionMessage transactionMessage, CancellationToken cancellationToken);
    public virtual Task`1<string> SendRequestAsync(TEthereumContractFunctionMessage transactionMessage);
    public virtual Task`1<string> SignTransactionAsync(TEthereumContractFunctionMessage transactionMessage);
    public virtual Task`1<HexBigInteger> EstimateGasAsync(TEthereumContractFunctionMessage transactionMessage);
    public virtual Task`1<TEthereumFunctionReturn> QueryDeserializingToObjectAsync(TEthereumContractFunctionMessage ethereumContractFunctionMessage, BlockParameter blockParameter);
    public virtual Task`1<TReturn> QueryAsync(TEthereumContractFunctionMessage ethereumContractFunctionMessage, BlockParameter blockParameter);
    public virtual Task`1<Byte[]> QueryRawAsync(TEthereumContractFunctionMessage ethereumContractFunctionMessage, BlockParameter blockParameter);
    public virtual Task`1<TReturn> QueryRawAsync(BlockParameter blockParameter);
    [AsyncStateMachineAttribute("Nethereum.Contracts.ContractHandlers.ContractHandler/<QueryRawAsync>d__23`3")]
public virtual Task`1<TReturn> QueryRawAsync(TEthereumContractFunctionMessage ethereumContractFunctionMessage, BlockParameter blockParameter);
}
public class Nethereum.Contracts.ContractHandlers.ContractQueryEthCallHandler`1 : ContractQueryHandlerBase`1<TFunctionMessage> {
    [CompilerGeneratedAttribute]
private string <DefaultAddressFrom>k__BackingField;
    [CompilerGeneratedAttribute]
private BlockParameter <DefaultBlockParameter>k__BackingField;
    [CompilerGeneratedAttribute]
private IEthCall <EthCall>k__BackingField;
    public string DefaultAddressFrom { get; public set; }
    public BlockParameter DefaultBlockParameter { get; public set; }
    private IEthCall EthCall { get; }
    public ContractQueryEthCallHandler`1(IEthCall ethCall, string defaultAddressFrom, BlockParameter defaultBlockParameter);
    [CompilerGeneratedAttribute]
public string get_DefaultAddressFrom();
    [CompilerGeneratedAttribute]
public void set_DefaultAddressFrom(string value);
    [CompilerGeneratedAttribute]
public BlockParameter get_DefaultBlockParameter();
    [CompilerGeneratedAttribute]
public void set_DefaultBlockParameter(BlockParameter value);
    [CompilerGeneratedAttribute]
private IEthCall get_EthCall();
    protected virtual QueryToDTOHandler`2<TFunctionMessage, TFunctionOutput> GetQueryDTOHandler();
    protected virtual QueryToSimpleTypeHandler`2<TFunctionMessage, TFunctionOutput> GetQueryToSimpleTypeHandler();
    protected virtual QueryRawHandler`1<TFunctionMessage> GetQueryRawHandler();
}
public class Nethereum.Contracts.ContractHandlers.ContractQueryHandler`1 : ContractQueryHandlerBase`1<TFunctionMessage> {
    private IClient _client;
    private BlockParameter _defaultBlockParameter;
    [CompilerGeneratedAttribute]
private string <DefaultAddressFrom>k__BackingField;
    public string DefaultAddressFrom { get; public set; }
    public ContractQueryHandler`1(IClient client, string defaultAddressFrom, BlockParameter defaultBlockParameter);
    [CompilerGeneratedAttribute]
public string get_DefaultAddressFrom();
    [CompilerGeneratedAttribute]
public void set_DefaultAddressFrom(string value);
    protected virtual QueryToDTOHandler`2<TFunctionMessage, TFunctionOutput> GetQueryDTOHandler();
    protected virtual QueryToSimpleTypeHandler`2<TFunctionMessage, TFunctionOutput> GetQueryToSimpleTypeHandler();
    protected virtual QueryRawHandler`1<TFunctionMessage> GetQueryRawHandler();
}
public abstract class Nethereum.Contracts.ContractHandlers.ContractQueryHandlerBase`1 : object {
    public sealed virtual Task`1<TFunctionOutput> QueryDeserializingToObjectAsync(TFunctionMessage functionMessage, string contractAddress, BlockParameter block);
    protected abstract virtual QueryToDTOHandler`2<TFunctionMessage, TFunctionOutput> GetQueryDTOHandler();
    public sealed virtual Task`1<TFunctionOutput> QueryAsync(string contractAddress, TFunctionMessage functionMessage, BlockParameter block);
    protected abstract virtual QueryToSimpleTypeHandler`2<TFunctionMessage, TFunctionOutput> GetQueryToSimpleTypeHandler();
    [AsyncStateMachineAttribute("Nethereum.Contracts.ContractHandlers.ContractQueryHandlerBase`1/<QueryRawAsBytesAsync>d__4")]
public sealed virtual Task`1<Byte[]> QueryRawAsBytesAsync(string contractAddress, TFunctionMessage functionMessage, BlockParameter block);
    public sealed virtual Task`1<string> QueryRawAsync(string contractAddress, TFunctionMessage functionMessage, BlockParameter block);
    protected abstract virtual QueryRawHandler`1<TFunctionMessage> GetQueryRawHandler();
}
public class Nethereum.Contracts.ContractHandlers.ContractTransactionHandler`1 : ContractTransactionHandlerBase {
    private ITransactionEstimatorHandler`1<TContractMessage> _estimatorHandler;
    private ITransactionReceiptPollHandler`1<TContractMessage> _receiptPollHandler;
    private ITransactionSenderHandler`1<TContractMessage> _transactionSenderHandler;
    private ITransactionSigner`1<TContractMessage> _transactionSigner;
    public ContractTransactionHandler`1(ITransactionManager transactionManager);
    public sealed virtual Task`1<string> SignTransactionAsync(string contractAddress, TContractMessage functionMessage);
    public Task`1<TransactionReceipt> SendTransactionAndWaitForReceiptAsync(string contractAddress, TContractMessage functionMessage, CancellationTokenSource tokenSource);
    public Task`1<TransactionReceipt> SendTransactionAndWaitForReceiptAsync(string contractAddress, TContractMessage functionMessage, CancellationToken cancellationToken);
    public sealed virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(string contractAddress, TContractMessage functionMessage, CancellationToken cancellationToken);
    [ObsoleteAttribute("Use SendTransactionAndWaitForReceiptAsync instead")]
public sealed virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(string contractAddress, TContractMessage functionMessage, CancellationTokenSource tokenSource);
    public Task`1<string> SendTransactionAsync(string contractAddress, TContractMessage functionMessage);
    [ObsoleteAttribute("Use SendTransactionAsync instead")]
public sealed virtual Task`1<string> SendRequestAsync(string contractAddress, TContractMessage functionMessage);
    [AsyncStateMachineAttribute("Nethereum.Contracts.ContractHandlers.ContractTransactionHandler`1/<CreateTransactionInputEstimatingGasAsync>d__12")]
public sealed virtual Task`1<TransactionInput> CreateTransactionInputEstimatingGasAsync(string contractAddress, TContractMessage functionMessage);
    public sealed virtual Task`1<HexBigInteger> EstimateGasAsync(string contractAddress, TContractMessage functionMessage);
}
public abstract class Nethereum.Contracts.ContractHandlers.ContractTransactionHandlerBase : object {
    [CompilerGeneratedAttribute]
private IClient <Client>k__BackingField;
    [CompilerGeneratedAttribute]
private IAccount <Account>k__BackingField;
    [CompilerGeneratedAttribute]
private ITransactionManager <TransactionManager>k__BackingField;
    protected IClient Client { get; }
    protected IAccount Account { get; }
    protected ITransactionManager TransactionManager { get; }
    protected ContractTransactionHandlerBase(ITransactionManager transactionManager);
    [CompilerGeneratedAttribute]
protected IClient get_Client();
    [CompilerGeneratedAttribute]
protected IAccount get_Account();
    [CompilerGeneratedAttribute]
protected ITransactionManager get_TransactionManager();
    public virtual string GetAccountAddressFrom();
}
public interface Nethereum.Contracts.ContractHandlers.IContractHandler {
    public string ContractAddress { get; }
    public EthApiContractService EthApiContractService { get; }
    public abstract virtual string get_ContractAddress();
    public abstract virtual EthApiContractService get_EthApiContractService();
    public abstract virtual Task`1<HexBigInteger> EstimateGasAsync(TEthereumContractFunctionMessage transactionMessage);
    public abstract virtual Event`1<TEventType> GetEvent();
    public abstract virtual Function`1<TEthereumContractFunctionMessage> GetFunction();
    public abstract virtual Task`1<TReturn> QueryAsync(TEthereumContractFunctionMessage ethereumContractFunctionMessage, BlockParameter blockParameter);
    public abstract virtual Task`1<TEthereumFunctionReturn> QueryDeserializingToObjectAsync(TEthereumContractFunctionMessage ethereumContractFunctionMessage, BlockParameter blockParameter);
    public abstract virtual Task`1<TReturn> QueryRawAsync(BlockParameter blockParameter);
    public abstract virtual Task`1<TReturn> QueryRawAsync(TEthereumContractFunctionMessage ethereumContractFunctionMessage, BlockParameter blockParameter);
    public abstract virtual Task`1<Byte[]> QueryRawAsync(TEthereumContractFunctionMessage ethereumContractFunctionMessage, BlockParameter blockParameter);
    public abstract virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(TEthereumContractFunctionMessage transactionMessage, CancellationTokenSource tokenSource);
    public abstract virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(TEthereumContractFunctionMessage transactionMessage, CancellationToken cancellationToken);
    public abstract virtual Task`1<string> SendRequestAsync(TEthereumContractFunctionMessage transactionMessage);
    public abstract virtual Task`1<string> SignTransactionAsync(TEthereumContractFunctionMessage transactionMessage);
}
public interface Nethereum.Contracts.ContractHandlers.IContractQueryHandler`1 {
    public abstract virtual Task`1<TFunctionOutput> QueryAsync(string contractAddress, TFunctionMessage functionMessage, BlockParameter block);
    public abstract virtual Task`1<TFunctionOutput> QueryDeserializingToObjectAsync(TFunctionMessage functionMessage, string contractAddress, BlockParameter block);
    public abstract virtual Task`1<Byte[]> QueryRawAsBytesAsync(string contractAddress, TFunctionMessage functionMessage, BlockParameter block);
    public abstract virtual Task`1<string> QueryRawAsync(string contractAddress, TFunctionMessage functionMessage, BlockParameter block);
}
public interface Nethereum.Contracts.ContractHandlers.IContractTransactionHandler`1 {
    public abstract virtual Task`1<TransactionInput> CreateTransactionInputEstimatingGasAsync(string contractAddress, TContractMessage functionMessage);
    public abstract virtual Task`1<HexBigInteger> EstimateGasAsync(string contractAddress, TContractMessage functionMessage);
    public abstract virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(string contractAddress, TContractMessage functionMessage, CancellationTokenSource tokenSource);
    public abstract virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(string contractAddress, TContractMessage functionMessage, CancellationToken cancellationToken);
    public abstract virtual Task`1<string> SendRequestAsync(string contractAddress, TContractMessage functionMessage);
    public abstract virtual Task`1<string> SignTransactionAsync(string contractAddress, TContractMessage functionMessage);
}
[ExtensionAttribute]
public static class Nethereum.Contracts.ContractMessageAbiEncodeExtensions : object {
    [ExtensionAttribute]
public static Byte[] GetParamsEncoded(TContractMessage contractMessage);
    [ExtensionAttribute]
public static Byte[] GetParamsEncodedPacked(TContractMessage contractMessage);
    [ExtensionAttribute]
public static Byte[] GetSha3ParamsEncoded(TContractMessage contractMessage);
    [ExtensionAttribute]
public static Byte[] GetSha3ParamsEncodedPacked(TContractMessage contractMessage);
}
[ExtensionAttribute]
public static class Nethereum.Contracts.ContractMessageHexBigIntegerExtensions : object {
    [ExtensionAttribute]
public static void SetTransactionType1559(ContractMessageBase contractMessage);
    [ExtensionAttribute]
public static HexBigInteger GetHexTransactionType(ContractMessageBase contractMessage);
    [ExtensionAttribute]
public static HexBigInteger GetHexMaxFeePerGas(ContractMessageBase contractMessage);
    [ExtensionAttribute]
public static HexBigInteger GetMaxPriorityFeePerGas(ContractMessageBase contractMessage);
    [ExtensionAttribute]
public static HexBigInteger GetHexMaximumGas(ContractMessageBase contractMessage);
    [ExtensionAttribute]
public static HexBigInteger GetHexValue(ContractMessageBase contractMessage);
    [ExtensionAttribute]
public static HexBigInteger GetHexGasPrice(ContractMessageBase contractMessage);
    [ExtensionAttribute]
public static void SetGasPriceFromGwei(ContractMessageBase contractMessage, decimal gweiAmount);
    [ExtensionAttribute]
public static HexBigInteger GetHexNonce(ContractMessageBase contractMessage);
    public static HexBigInteger GetDefaultValue(Nullable`1<BigInteger> bigInteger);
    [ExtensionAttribute]
public static string SetDefaultFromAddressIfNotSet(ContractMessageBase contractMessage, string defaultFromAdddress);
}
public class Nethereum.Contracts.ContractRevertExceptionHandler : object {
    public static void HandleContractRevertException(RpcResponseException rpcException);
}
public abstract class Nethereum.Contracts.ContractServiceBase : object {
    [CompilerGeneratedAttribute]
private ContractHandler <ContractHandler>k__BackingField;
    public ContractHandler ContractHandler { get; public set; }
    public string ContractAddress { get; }
    [CompilerGeneratedAttribute]
public sealed virtual ContractHandler get_ContractHandler();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ContractHandler(ContractHandler value);
    public sealed virtual string get_ContractAddress();
    public abstract virtual List`1<Type> GetAllFunctionTypes();
    public sealed virtual List`1<FunctionABI> GetAllFunctionABIs();
    public sealed virtual String[] GetAllFunctionSignatures();
    public abstract virtual List`1<Type> GetAllEventTypes();
    public sealed virtual List`1<EventABI> GetAllEventABIs();
    public sealed virtual String[] GetAllEventsSignatures();
    public sealed virtual List`1<ErrorABI> GetAllErrorABIs();
    public abstract virtual List`1<Type> GetAllErrorTypes();
    public sealed virtual String[] GetAllErrorsSignatures();
    public sealed virtual void HandleCustomErrorException(SmartContractCustomErrorRevertException exception);
    public sealed virtual SmartContractCustomErrorRevertExceptionErrorABI FindCustomErrorException(SmartContractCustomErrorRevertException exception);
}
public class Nethereum.Contracts.ContractStorage.StorageUtil : object {
    public static Byte[] CalculateMappingAddressStorageKey(string address, BigInteger slot);
    public static BigInteger CalculateMappingAddressStorageKeyAsBigInteger(string address, BigInteger slot);
}
public abstract class Nethereum.Contracts.CQS.ContractMessageBase : object {
    [CompilerGeneratedAttribute]
private BigInteger <AmountToSend>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<BigInteger> <Gas>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<BigInteger> <GasPrice>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FromAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<BigInteger> <Nonce>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<BigInteger> <MaxFeePerGas>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<BigInteger> <MaxPriorityFeePerGas>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<byte> <TransactionType>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<AccessList> <AccessList>k__BackingField;
    public BigInteger AmountToSend { get; public set; }
    public Nullable`1<BigInteger> Gas { get; public set; }
    public Nullable`1<BigInteger> GasPrice { get; public set; }
    public string FromAddress { get; public set; }
    public Nullable`1<BigInteger> Nonce { get; public set; }
    public Nullable`1<BigInteger> MaxFeePerGas { get; public set; }
    public Nullable`1<BigInteger> MaxPriorityFeePerGas { get; public set; }
    public Nullable`1<byte> TransactionType { get; public set; }
    public List`1<AccessList> AccessList { get; public set; }
    [CompilerGeneratedAttribute]
public BigInteger get_AmountToSend();
    [CompilerGeneratedAttribute]
public void set_AmountToSend(BigInteger value);
    [CompilerGeneratedAttribute]
public Nullable`1<BigInteger> get_Gas();
    [CompilerGeneratedAttribute]
public void set_Gas(Nullable`1<BigInteger> value);
    [CompilerGeneratedAttribute]
public Nullable`1<BigInteger> get_GasPrice();
    [CompilerGeneratedAttribute]
public void set_GasPrice(Nullable`1<BigInteger> value);
    [CompilerGeneratedAttribute]
public string get_FromAddress();
    [CompilerGeneratedAttribute]
public void set_FromAddress(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<BigInteger> get_Nonce();
    [CompilerGeneratedAttribute]
public void set_Nonce(Nullable`1<BigInteger> value);
    [CompilerGeneratedAttribute]
public Nullable`1<BigInteger> get_MaxFeePerGas();
    [CompilerGeneratedAttribute]
public void set_MaxFeePerGas(Nullable`1<BigInteger> value);
    [CompilerGeneratedAttribute]
public Nullable`1<BigInteger> get_MaxPriorityFeePerGas();
    [CompilerGeneratedAttribute]
public void set_MaxPriorityFeePerGas(Nullable`1<BigInteger> value);
    [CompilerGeneratedAttribute]
public Nullable`1<byte> get_TransactionType();
    [CompilerGeneratedAttribute]
public void set_TransactionType(Nullable`1<byte> value);
    [CompilerGeneratedAttribute]
public List`1<AccessList> get_AccessList();
    [CompilerGeneratedAttribute]
public void set_AccessList(List`1<AccessList> value);
}
public interface Nethereum.Contracts.CQS.IContractDeploymentTransactionHandler`1 {
    public abstract virtual Task`1<TransactionInput> CreateTransactionInputEstimatingGasAsync(TContractDeploymentMessage deploymentMessage);
    public abstract virtual Task`1<HexBigInteger> EstimateGasAsync(TContractDeploymentMessage contractDeploymentMessage);
    public abstract virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(TContractDeploymentMessage contractDeploymentMessage, CancellationTokenSource tokenSource);
    public abstract virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(TContractDeploymentMessage contractDeploymentMessage, CancellationToken cancellationToken);
    public abstract virtual Task`1<string> SendRequestAsync(TContractDeploymentMessage contractDeploymentMessage);
    public abstract virtual Task`1<string> SignTransactionAsync(TContractDeploymentMessage contractDeploymentMessage);
}
public class Nethereum.Contracts.Create2Deployment.Create2ContractDeploymentTransactionReceiptResult : object {
    [CompilerGeneratedAttribute]
private bool <AlreadyDeployed>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Address>k__BackingField;
    [CompilerGeneratedAttribute]
private TransactionReceipt <TransactionReceipt>k__BackingField;
    public bool AlreadyDeployed { get; public set; }
    public string Address { get; public set; }
    public TransactionReceipt TransactionReceipt { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_AlreadyDeployed();
    [CompilerGeneratedAttribute]
public void set_AlreadyDeployed(bool value);
    [CompilerGeneratedAttribute]
public string get_Address();
    [CompilerGeneratedAttribute]
public void set_Address(string value);
    [CompilerGeneratedAttribute]
public TransactionReceipt get_TransactionReceipt();
    [CompilerGeneratedAttribute]
public void set_TransactionReceipt(TransactionReceipt value);
}
public class Nethereum.Contracts.Create2Deployment.Create2ContractDeploymentTransactionResult : object {
    [CompilerGeneratedAttribute]
private bool <AlreadyDeployed>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TransactionHash>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Address>k__BackingField;
    public bool AlreadyDeployed { get; public set; }
    public string TransactionHash { get; public set; }
    public string Address { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_AlreadyDeployed();
    [CompilerGeneratedAttribute]
public void set_AlreadyDeployed(bool value);
    [CompilerGeneratedAttribute]
public string get_TransactionHash();
    [CompilerGeneratedAttribute]
public void set_TransactionHash(string value);
    [CompilerGeneratedAttribute]
public string get_Address();
    [CompilerGeneratedAttribute]
public void set_Address(string value);
}
public class Nethereum.Contracts.Create2Deployment.Create2DeterministicDeploymentProxyDeployment : object {
    public static string DefaultRawTransaction;
    public static string DefaultSignerAddress;
    public static string DefaultAddress;
    public static long DefaultGasPrice;
    public static long DefaultGasLimit;
    public static byte DefaultV;
    public static int DefaultRecId;
    public static Byte[] DefaultR;
    public static Byte[] DefaultS;
    public static string ByteCode;
    public static string RuntimeByteCode;
    [CompilerGeneratedAttribute]
private string <RawTransaction>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SignerAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Address>k__BackingField;
    [CompilerGeneratedAttribute]
private long <GasPrice>k__BackingField;
    [CompilerGeneratedAttribute]
private long <GasLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<BigInteger> <ChainId>k__BackingField;
    public string RawTransaction { get; public set; }
    public string SignerAddress { get; public set; }
    public string Address { get; public set; }
    public long GasPrice { get; public set; }
    public long GasLimit { get; public set; }
    public Nullable`1<BigInteger> ChainId { get; public set; }
    private static Create2DeterministicDeploymentProxyDeployment();
    public static BigInteger CalculateVForChainId(BigInteger chainId);
    public static Byte[] CalculateVForChainIdAsBytes(BigInteger chainId);
    [CompilerGeneratedAttribute]
public string get_RawTransaction();
    [CompilerGeneratedAttribute]
public void set_RawTransaction(string value);
    [CompilerGeneratedAttribute]
public string get_SignerAddress();
    [CompilerGeneratedAttribute]
public void set_SignerAddress(string value);
    [CompilerGeneratedAttribute]
public string get_Address();
    [CompilerGeneratedAttribute]
public void set_Address(string value);
    [CompilerGeneratedAttribute]
public long get_GasPrice();
    [CompilerGeneratedAttribute]
public void set_GasPrice(long value);
    [CompilerGeneratedAttribute]
public long get_GasLimit();
    [CompilerGeneratedAttribute]
public void set_GasLimit(long value);
    [CompilerGeneratedAttribute]
public Nullable`1<BigInteger> get_ChainId();
    [CompilerGeneratedAttribute]
public void set_ChainId(Nullable`1<BigInteger> value);
    public static Create2DeterministicDeploymentProxyDeployment GetDefaultNoneEIP155Create2ContractDeployerService();
}
public class Nethereum.Contracts.Create2Deployment.Create2DeterministicDeploymentProxyService : object {
    private IEthApiContractService _ethApiContractService;
    public Create2DeterministicDeploymentProxyService(IEthApiContractService ethApiContractService);
    [AsyncStateMachineAttribute("Nethereum.Contracts.Create2Deployment.Create2DeterministicDeploymentProxyService/<HasProxyBeenDeployedAsync>d__2")]
public Task`1<bool> HasProxyBeenDeployedAsync(string address);
    [AsyncStateMachineAttribute("Nethereum.Contracts.Create2Deployment.Create2DeterministicDeploymentProxyService/<GenerateEIP155DeterministicDeploymentAsync>d__3")]
public Task`1<Create2DeterministicDeploymentProxyDeployment> GenerateEIP155DeterministicDeploymentAsync(long gasPrice, long gasLimit, long nonce);
    [AsyncStateMachineAttribute("Nethereum.Contracts.Create2Deployment.Create2DeterministicDeploymentProxyService/<GenerateEIP155DeterministicDeploymentUsingPreconfiguredSignatureAsync>d__4")]
public Task`1<Create2DeterministicDeploymentProxyDeployment> GenerateEIP155DeterministicDeploymentUsingPreconfiguredSignatureAsync();
    public Create2DeterministicDeploymentProxyDeployment GenerateEIP155DeterministicDeploymentUsingPreconfiguredSignatureAsync(BigInteger chainId);
    [AsyncStateMachineAttribute("Nethereum.Contracts.Create2Deployment.Create2DeterministicDeploymentProxyService/<DeployProxyAndGetContractAddressAsync>d__6")]
public Task`1<string> DeployProxyAndGetContractAddressAsync(Create2DeterministicDeploymentProxyDeployment deployment);
    [AsyncStateMachineAttribute("Nethereum.Contracts.Create2Deployment.Create2DeterministicDeploymentProxyService/<ValidateAndSendEnoughBalanceForProxyDeploymentAndWaitForReceiptAsync>d__7")]
public Task ValidateAndSendEnoughBalanceForProxyDeploymentAndWaitForReceiptAsync(Create2DeterministicDeploymentProxyDeployment deployment);
    public string CalculateCreate2Address(TDeploymentMessage deploymentMessage, string deployerProxyAddress, string salt, ByteCodeLibrary[] byteCodeLibraries);
    public string CalculateCreate2Address(TDeploymentMessage deploymentMessage, string deployerProxyAddress, string salt);
    public string CalculateCreate2Address(string deployerProxyAddress, string salt, string contractByteCode);
    [AsyncStateMachineAttribute("Nethereum.Contracts.Create2Deployment.Create2DeterministicDeploymentProxyService/<HasContractAlreadyDeployedAsync>d__11")]
public Task`1<bool> HasContractAlreadyDeployedAsync(string deployerProxyAddress, string salt, string contractByteCode);
    [AsyncStateMachineAttribute("Nethereum.Contracts.Create2Deployment.Create2DeterministicDeploymentProxyService/<HasContractAlreadyDeployedAsync>d__12`1")]
public Task`1<bool> HasContractAlreadyDeployedAsync(TDeploymentMessage deploymentMessage, string deployerProxyAddress, string salt);
    [AsyncStateMachineAttribute("Nethereum.Contracts.Create2Deployment.Create2DeterministicDeploymentProxyService/<HasContractAlreadyDeployedAsync>d__13")]
public Task`1<bool> HasContractAlreadyDeployedAsync(string address);
    [AsyncStateMachineAttribute("Nethereum.Contracts.Create2Deployment.Create2DeterministicDeploymentProxyService/<DeployContractRequestAsync>d__14`1")]
public Task`1<Create2ContractDeploymentTransactionResult> DeployContractRequestAsync(TDeploymentMessage deploymentMessage, string deployerProxyAddress, string salt, ByteCodeLibrary[] byteCodeLibraries);
    [AsyncStateMachineAttribute("Nethereum.Contracts.Create2Deployment.Create2DeterministicDeploymentProxyService/<DeployContractRequestAndWaitForReceiptAsync>d__15`1")]
public Task`1<Create2ContractDeploymentTransactionReceiptResult> DeployContractRequestAndWaitForReceiptAsync(TDeploymentMessage deploymentMessage, string deployerProxyAddress, string salt, ByteCodeLibrary[] byteCodeLibraries, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Nethereum.Contracts.Create2Deployment.Create2DeterministicDeploymentProxyService/<DeployContractRequestAsync>d__16")]
public Task`1<Create2ContractDeploymentTransactionResult> DeployContractRequestAsync(string deployerProxyAddress, string salt, string contractByteCode);
    [AsyncStateMachineAttribute("Nethereum.Contracts.Create2Deployment.Create2DeterministicDeploymentProxyService/<DeployContractRequestAndWaitForReceiptAsync>d__17")]
public Task`1<Create2ContractDeploymentTransactionReceiptResult> DeployContractRequestAndWaitForReceiptAsync(string deployerProxyAddress, string salt, string contractByteCode, CancellationToken cancellationToken);
}
public class Nethereum.Contracts.DeployContract : object {
    private DeployContractTransactionBuilder _deployContractTransactionBuilder;
    [CompilerGeneratedAttribute]
private ITransactionManager <TransactionManager>k__BackingField;
    public ITransactionManager TransactionManager { get; public set; }
    public DeployContract(ITransactionManager transactionManager);
    [CompilerGeneratedAttribute]
public sealed virtual ITransactionManager get_TransactionManager();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TransactionManager(ITransactionManager value);
    public sealed virtual string GetData(string contractByteCode, string abi, Object[] values);
    public sealed virtual string GetData(string contractByteCode, TConstructorParams inputParams);
    public sealed virtual Task`1<HexBigInteger> EstimateGasAsync(string abi, string contractByteCode, string from, Object[] values);
    public sealed virtual Task`1<HexBigInteger> EstimateGasAsync(string contractByteCode, string from, TConstructorParams inputParams);
    public sealed virtual Task`1<HexBigInteger> EstimateGasAsync(string contractByteCode, string from, HexBigInteger gas, TConstructorParams inputParams);
    public sealed virtual Task`1<HexBigInteger> EstimateGasAsync(string contractByteCode, string from, HexBigInteger gas, HexBigInteger value, TConstructorParams inputParams);
    public sealed virtual Task`1<string> SendRequestAsync(string abi, string contractByteCode, string from, HexBigInteger gas, Object[] values);
    public sealed virtual Task`1<string> SendRequestAsync(string abi, string contractByteCode, string from, HexBigInteger gas, HexBigInteger value, Object[] values);
    public sealed virtual Task`1<string> SendRequestAsync(string abi, string contractByteCode, string from, HexBigInteger gas, HexBigInteger gasPrice, HexBigInteger value, Object[] values);
    public sealed virtual Task`1<string> SendRequestAsync(string abi, string contractByteCode, string from, HexBigInteger gas, HexBigInteger gasPrice, HexBigInteger value, HexBigInteger nonce, Object[] values);
    public sealed virtual Task`1<string> SendRequestAsync(string abi, string contractByteCode, string from, Object[] values);
    public sealed virtual Task`1<string> SendRequestAsync(string abi, string contractByteCode, string from, HexBigInteger gas, HexBigInteger maxFeePerGas, HexBigInteger maxPriorityFeePerGas, HexBigInteger value, HexBigInteger nonce, Object[] values);
    public sealed virtual Task`1<string> SendRequestAsync(HexBigInteger type, string abi, string contractByteCode, string from, HexBigInteger gas, HexBigInteger maxFeePerGas, HexBigInteger maxPriorityFeePerGas, HexBigInteger value, HexBigInteger nonce, Object[] values);
    public sealed virtual Task`1<string> SendRequestAsync(string contractByteCode, string from, HexBigInteger gas);
    public sealed virtual Task`1<string> SendRequestAsync(string contractByteCode, string from, HexBigInteger gas, HexBigInteger gasPrice, HexBigInteger value);
    public sealed virtual Task`1<string> SendRequestAsync(string contractByteCode, string from, HexBigInteger gas, HexBigInteger maxFeePerGas, HexBigInteger maxPriorityFeePerGas, HexBigInteger value, HexBigInteger nonce);
    public sealed virtual Task`1<string> SendRequestAsync(HexBigInteger type, string contractByteCode, string from, HexBigInteger gas, HexBigInteger maxFeePerGas, HexBigInteger maxPriorityFeePerGas, HexBigInteger value, HexBigInteger nonce);
    public sealed virtual Task`1<string> SendRequestAsync(string contractByteCode, string from, HexBigInteger gas, HexBigInteger value);
    public sealed virtual Task`1<string> SendRequestAsync(string contractByteCode, string from);
    public sealed virtual Task`1<string> SendRequestAsync(string contractByteCode, string from, TConstructorParams inputParams);
    public sealed virtual Task`1<string> SendRequestAsync(string contractByteCode, string from, HexBigInteger gas, TConstructorParams inputParams);
    public sealed virtual Task`1<string> SendRequestAsync(string contractByteCode, string from, HexBigInteger gas, HexBigInteger gasPrice, HexBigInteger value, TConstructorParams inputParams);
    public sealed virtual Task`1<string> SendRequestAsync(string contractByteCode, string from, HexBigInteger gas, HexBigInteger gasPrice, HexBigInteger value, HexBigInteger nonce, TConstructorParams inputParams);
    public sealed virtual Task`1<string> SendRequestAsync(string contractByteCode, string from, HexBigInteger gas, HexBigInteger maxFeePerGas, HexBigInteger maxPriorityFeePerGas, HexBigInteger value, HexBigInteger nonce, TConstructorParams inputParams);
    public sealed virtual Task`1<string> SendRequestAsync(HexBigInteger type, string contractByteCode, string from, HexBigInteger gas, HexBigInteger maxFeePerGas, HexBigInteger maxPriorityFeePerGas, HexBigInteger value, HexBigInteger nonce, TConstructorParams inputParams);
    public sealed virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(string abi, string contractByteCode, string from, HexBigInteger gas, CancellationToken receiptRequestCancellationToken, Object[] values);
    public sealed virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(string abi, string contractByteCode, string from, HexBigInteger gas, HexBigInteger value, CancellationToken receiptRequestCancellationToken, Object[] values);
    public sealed virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(string abi, string contractByteCode, string from, HexBigInteger gas, HexBigInteger gasPrice, HexBigInteger value, CancellationToken receiptRequestCancellationToken, Object[] values);
    public sealed virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(string abi, string contractByteCode, string from, CancellationToken receiptRequestCancellationToken, Object[] values);
    public sealed virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(string contractByteCode, string from, HexBigInteger gas, CancellationToken receiptRequestCancellationToken);
    public sealed virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(string contractByteCode, string from, HexBigInteger gas, HexBigInteger gasPrice, HexBigInteger value, CancellationToken receiptRequestCancellationToken);
    public sealed virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(string contractByteCode, string from, HexBigInteger gas, HexBigInteger value, CancellationToken receiptRequestCancellationToken);
    public sealed virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(string contractByteCode, string from, CancellationToken receiptRequestCancellationToken);
    public sealed virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(string contractByteCode, string from, TConstructorParams inputParams, CancellationToken receiptRequestCancellationToken);
    public sealed virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(string contractByteCode, string from, HexBigInteger gas, TConstructorParams inputParams, CancellationToken receiptRequestCancellationToken);
    public sealed virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(string contractByteCode, string from, HexBigInteger gas, HexBigInteger gasPrice, HexBigInteger value, TConstructorParams inputParams, CancellationToken receiptRequestCancellationToken);
    public sealed virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(string contractByteCode, string from, HexBigInteger gas, HexBigInteger gasPrice, HexBigInteger value, HexBigInteger nonce, TConstructorParams inputParams, CancellationToken receiptRequestCancellationToken);
    public sealed virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(string contractByteCode, string from, HexBigInteger gas, HexBigInteger maxFeePerGas, HexBigInteger maxPriorityFeePerGas, HexBigInteger value, HexBigInteger nonce, TConstructorParams inputParams, CancellationToken receiptRequestCancellationToken);
    public sealed virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(HexBigInteger type, string contractByteCode, string from, HexBigInteger gas, HexBigInteger maxFeePerGas, HexBigInteger maxPriorityFeePerGas, HexBigInteger value, HexBigInteger nonce, TConstructorParams inputParams, CancellationToken receiptRequestCancellationToken);
    public sealed virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(string abi, string contractByteCode, string from, HexBigInteger gas, CancellationTokenSource receiptRequestCancellationToken, Object[] values);
    public sealed virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(string abi, string contractByteCode, string from, HexBigInteger gas, HexBigInteger value, CancellationTokenSource receiptRequestCancellationToken, Object[] values);
    public sealed virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(string abi, string contractByteCode, string from, HexBigInteger gas, HexBigInteger gasPrice, HexBigInteger value, CancellationTokenSource receiptRequestCancellationToken, Object[] values);
    public sealed virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(string abi, string contractByteCode, string from, CancellationTokenSource receiptRequestCancellationToken, Object[] values);
    public sealed virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(string contractByteCode, string from, HexBigInteger gas, CancellationTokenSource receiptRequestCancellationToken);
    public sealed virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(string contractByteCode, string from, HexBigInteger gas, HexBigInteger gasPrice, HexBigInteger value, CancellationTokenSource receiptRequestCancellationToken);
    public sealed virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(string contractByteCode, string from, HexBigInteger gas, HexBigInteger value, CancellationTokenSource receiptRequestCancellationToken);
    public sealed virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(string contractByteCode, string from, CancellationTokenSource receiptRequestCancellationToken);
    public sealed virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(string contractByteCode, string from, TConstructorParams inputParams, CancellationTokenSource receiptRequestCancellationToken);
    public sealed virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(string contractByteCode, string from, HexBigInteger gas, TConstructorParams inputParams, CancellationTokenSource receiptRequestCancellationToken);
    public sealed virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(string contractByteCode, string from, HexBigInteger gas, HexBigInteger gasPrice, HexBigInteger value, TConstructorParams inputParams, CancellationTokenSource receiptRequestCancellationToken);
    public sealed virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(string contractByteCode, string from, HexBigInteger gas, HexBigInteger gasPrice, HexBigInteger value, HexBigInteger nonce, TConstructorParams inputParams, CancellationTokenSource receiptRequestCancellationToken);
    public Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(string contractByteCode, string from, HexBigInteger gas, HexBigInteger maxFeePerGas, HexBigInteger maxPriorityFeePerGas, HexBigInteger value, HexBigInteger nonce, TConstructorParams inputParams, CancellationTokenSource receiptRequestCancellationToken);
    public Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(HexBigInteger type, string contractByteCode, string from, HexBigInteger gas, HexBigInteger maxFeePerGas, HexBigInteger maxPriorityFeePerGas, HexBigInteger value, HexBigInteger nonce, TConstructorParams inputParams, CancellationTokenSource receiptRequestCancellationToken);
    protected Task`1<TransactionReceipt> DeployContractAndWaitForReceiptAsync(TransactionInput transactionInput, CancellationTokenSource cancellationTokenSource);
    protected Task`1<TransactionReceipt> DeployContractAndWaitForReceiptAsync(TransactionInput transactionInput, CancellationToken receiptRequestCancellationToken);
}
public class Nethereum.Contracts.DeployContractTransactionBuilder : object {
    private ConstructorCallEncoder _constructorCallEncoder;
    public string GetData(string contractByteCode, string abi, Object[] values);
    public string GetData(string contractByteCode, TConstructorParams inputParams);
    private string BuildEncodedData(string abi, string contractByteCode, Object[] values);
    public TransactionInput BuildTransaction(string abi, string contractByteCode, string from, HexBigInteger gas, Object[] values);
    public TransactionInput BuildTransaction(string abi, string contractByteCode, string from, HexBigInteger gas, HexBigInteger gasPrice, HexBigInteger value, Object[] values);
    public TransactionInput BuildTransaction(string abi, string contractByteCode, string from, HexBigInteger gas, HexBigInteger gasPrice, HexBigInteger value, HexBigInteger nonce, Object[] values);
    public TransactionInput BuildTransaction(string abi, string contractByteCode, string from, HexBigInteger gas, HexBigInteger maxFeePerGas, HexBigInteger maxPriorityFeePerGas, HexBigInteger value, HexBigInteger nonce, Object[] values);
    public TransactionInput BuildTransaction(HexBigInteger type, string abi, string contractByteCode, string from, HexBigInteger gas, HexBigInteger maxFeePerGas, HexBigInteger maxPriorityFeePerGas, HexBigInteger value, HexBigInteger nonce, Object[] values);
    public TransactionInput BuildTransaction(string abi, string contractByteCode, string from, HexBigInteger gas, HexBigInteger value, Object[] values);
    public TransactionInput BuildTransaction(string abi, string contractByteCode, string from, Object[] values);
    public TransactionInput BuildTransaction(string contractByteCode, string from, TConstructorParams inputParams);
    public TransactionInput BuildTransaction(string contractByteCode, string from, HexBigInteger gas, TConstructorParams inputParams);
    public TransactionInput BuildTransaction(string contractByteCode, string from, HexBigInteger gas, HexBigInteger value, TConstructorParams inputParams);
    public TransactionInput BuildTransaction(string contractByteCode, string from, HexBigInteger gas, HexBigInteger gasPrice, HexBigInteger value, TConstructorParams inputParams);
    public TransactionInput BuildTransaction(string contractByteCode, string from, HexBigInteger gas, HexBigInteger gasPrice, HexBigInteger value, HexBigInteger nonce, TConstructorParams inputParams);
    public TransactionInput BuildTransaction(string contractByteCode, string from, HexBigInteger gas, HexBigInteger maxFeePerGas, HexBigInteger maxPriorityFeePerGas, HexBigInteger value, HexBigInteger nonce, TConstructorParams inputParams);
    public TransactionInput BuildTransaction(HexBigInteger type, string contractByteCode, string from, HexBigInteger gas, HexBigInteger maxFeePerGas, HexBigInteger maxPriorityFeePerGas, HexBigInteger value, HexBigInteger nonce, TConstructorParams inputParams);
    public void EnsureByteCodeDoesNotContainPlaceholders(string byteCode);
}
public class Nethereum.Contracts.DeploymentHandlers.DeploymentEstimatorHandler`1 : DeploymentHandlerBase`1<TContractDeploymentMessage> {
    public DeploymentEstimatorHandler`1(ITransactionManager transactionManager);
    public sealed virtual Task`1<HexBigInteger> EstimateGasAsync(TContractDeploymentMessage deploymentMessage);
}
public abstract class Nethereum.Contracts.DeploymentHandlers.DeploymentHandlerBase`1 : ContractTransactionHandlerBase {
    [CompilerGeneratedAttribute]
private DeploymentMessageEncodingService`1<TContractDeploymentMessage> <DeploymentMessageEncodingService>k__BackingField;
    protected DeploymentMessageEncodingService`1<TContractDeploymentMessage> DeploymentMessageEncodingService { get; protected set; }
    protected DeploymentHandlerBase`1(ITransactionManager transactionManager);
    [CompilerGeneratedAttribute]
protected DeploymentMessageEncodingService`1<TContractDeploymentMessage> get_DeploymentMessageEncodingService();
    [CompilerGeneratedAttribute]
protected void set_DeploymentMessageEncodingService(DeploymentMessageEncodingService`1<TContractDeploymentMessage> value);
    private void InitialiseEncodingService();
}
public class Nethereum.Contracts.DeploymentHandlers.DeploymentSigner`1 : DeploymentHandlerBase`1<TContractDeploymentMessage> {
    private IDeploymentEstimatorHandler`1<TContractDeploymentMessage> _deploymentEstimatorHandler;
    private ITransactionManager _transactionManager;
    public DeploymentSigner`1(ITransactionManager transactionManager);
    public DeploymentSigner`1(ITransactionManager transactionManager, IDeploymentEstimatorHandler`1<TContractDeploymentMessage> deploymentEstimatorHandler);
    [AsyncStateMachineAttribute("Nethereum.Contracts.DeploymentHandlers.DeploymentSigner`1/<SignTransactionAsync>d__4")]
public sealed virtual Task`1<string> SignTransactionAsync(TContractDeploymentMessage deploymentMessage);
    [AsyncStateMachineAttribute("Nethereum.Contracts.DeploymentHandlers.DeploymentSigner`1/<GetOrEstimateMaximumGasAsync>d__5")]
protected virtual Task`1<HexBigInteger> GetOrEstimateMaximumGasAsync(TContractDeploymentMessage deploymentMessage);
}
public class Nethereum.Contracts.DeploymentHandlers.DeploymentTransactionReceiptPollHandler`1 : DeploymentHandlerBase`1<TContractDeploymentMessage> {
    private IDeploymentTransactionSenderHandler`1<TContractDeploymentMessage> _deploymentTransactionHandler;
    public DeploymentTransactionReceiptPollHandler`1(ITransactionManager transactionManager, IDeploymentTransactionSenderHandler`1<TContractDeploymentMessage> deploymentTransactionHandler);
    public DeploymentTransactionReceiptPollHandler`1(ITransactionManager transactionManager);
    [AsyncStateMachineAttribute("Nethereum.Contracts.DeploymentHandlers.DeploymentTransactionReceiptPollHandler`1/<SendTransactionAsync>d__3")]
public sealed virtual Task`1<TransactionReceipt> SendTransactionAsync(TContractDeploymentMessage deploymentMessage, CancellationToken cancellationToken);
    public sealed virtual Task`1<TransactionReceipt> SendTransactionAsync(TContractDeploymentMessage deploymentMessage, CancellationTokenSource cancellationTokenSource);
}
public class Nethereum.Contracts.DeploymentHandlers.DeploymentTransactionSenderHandler`1 : DeploymentHandlerBase`1<TContractDeploymentMessage> {
    private IDeploymentEstimatorHandler`1<TContractDeploymentMessage> _deploymentEstimatorHandler;
    public DeploymentTransactionSenderHandler`1(ITransactionManager transactionManager);
    [AsyncStateMachineAttribute("Nethereum.Contracts.DeploymentHandlers.DeploymentTransactionSenderHandler`1/<SendTransactionAsync>d__2")]
public sealed virtual Task`1<string> SendTransactionAsync(TContractDeploymentMessage deploymentMessage);
    [AsyncStateMachineAttribute("Nethereum.Contracts.DeploymentHandlers.DeploymentTransactionSenderHandler`1/<GetOrEstimateMaximumGasAsync>d__3")]
protected virtual Task`1<HexBigInteger> GetOrEstimateMaximumGasAsync(TContractDeploymentMessage deploymentMessage);
}
public interface Nethereum.Contracts.DeploymentHandlers.IDeploymentEstimatorHandler`1 {
    public abstract virtual Task`1<HexBigInteger> EstimateGasAsync(TContractDeploymentMessage deploymentMessage);
}
public interface Nethereum.Contracts.DeploymentHandlers.IDeploymentSigner`1 {
    public abstract virtual Task`1<string> SignTransactionAsync(TContractDeploymentMessage deploymentMessage);
}
public interface Nethereum.Contracts.DeploymentHandlers.IDeploymentTransactionReceiptPollHandler`1 {
    public abstract virtual Task`1<TransactionReceipt> SendTransactionAsync(TContractDeploymentMessage deploymentMessage, CancellationTokenSource cancellationTokenSource);
    public abstract virtual Task`1<TransactionReceipt> SendTransactionAsync(TContractDeploymentMessage deploymentMessage, CancellationToken cancellationToken);
}
public interface Nethereum.Contracts.DeploymentHandlers.IDeploymentTransactionSenderHandler`1 {
    public abstract virtual Task`1<string> SendTransactionAsync(TContractDeploymentMessage deploymentMessage);
}
[ExtensionAttribute]
public static class Nethereum.Contracts.DeploymentMessageExtensions : object {
    [ExtensionAttribute]
public static DeploymentMessageEncodingService`1<TContractMessage> GetEncodingService(TContractMessage contractMessage);
    [ExtensionAttribute]
public static CallInput CreateCallInput(TContractMessage contractMessage);
    [ExtensionAttribute]
public static TransactionInput CreateTransactionInput(TContractMessage contractMessage);
    [ExtensionAttribute]
public static TContractMessage DecodeTransaction(TContractMessage contractMessage, Transaction transaction);
    [ExtensionAttribute]
public static TContractMessage DecodeTransactionToDeploymentMessage(Transaction transaction);
    [ExtensionAttribute]
public static string GetSwarmAddressFromByteCode(TContractMessage contractMessage);
    [ExtensionAttribute]
public static bool HasASwarmAddressTheByteCode(TContractMessage contractMessage);
    [ExtensionAttribute]
public static void LinkLibraries(TContractMessage contractMessage, ByteCodeLibrary[] byteCodeLibraries);
    [ExtensionAttribute]
public static string CalculateCreate2Address(TContractMessage contractMessage, string deployerAddress, string salt);
    [ExtensionAttribute]
public static string CalculateCreate2Address(TContractMessage contractMessage, string deployerAddress, string salt, ByteCodeLibrary[] byteCodeLibraries);
    [ExtensionAttribute]
public static Byte[] GetDeploymentData(TContractMessage contractMessage);
    [ExtensionAttribute]
public static Byte[] GetDeploymentDataHash(TContractMessage contractMessage);
}
[ExtensionAttribute]
public static class Nethereum.Contracts.ERC2535DiamondFacetCutFactory : object {
    public static FacetCut CreateAddFacetCut(string address, String[] signatures);
    public static FacetCut CreateReplaceFacetCut(string address, String[] signatures);
    public static FacetCut CreateRemoveFacetCut(string address, String[] signatures);
    public static FacetCut CreateAddFacetCut(string address, List`1<string> signatures);
    public static FacetCut CreateReplaceFacetCut(string address, List`1<string> signatures);
    public static FacetCut CreateRemoveFacetCut(string address, List`1<string> signatures);
    [ExtensionAttribute]
public static FacetCut CreateDiamondFacetCutToAddAllFunctionSignatures(ContractServiceBase contractService);
    [ExtensionAttribute]
public static FacetCut CreateDiamondFacetCutToRemoveAllFunctionSignatures(ContractServiceBase contractService);
}
public class Nethereum.Contracts.Error : ErrorBase {
    public Error(ErrorABI errorABI);
    public Error(Type errorTypeAbi);
    public bool IsErrorForErrorType();
    public TError DecodeExceptionEncodedData(string data);
}
public class Nethereum.Contracts.Error`1 : ErrorBase {
    public TError DecodeExceptionEncodedData(string data);
}
public class Nethereum.Contracts.ErrorBase : object {
    [CompilerGeneratedAttribute]
private ErrorABI <ErrorABI>k__BackingField;
    public ErrorABI ErrorABI { get; protected set; }
    public ErrorBase(ErrorABI errorABI);
    public ErrorBase(Type errorTypeAbi);
    [CompilerGeneratedAttribute]
public ErrorABI get_ErrorABI();
    [CompilerGeneratedAttribute]
protected void set_ErrorABI(ErrorABI value);
    public bool IsExceptionEncodedDataForError(string data);
    public bool IsExceptionForError(RpcResponseException exception);
    public List`1<ParameterOutput> DecodeExceptionEncodedDataToDefault(string data);
}
[ExtensionAttribute]
public static class Nethereum.Contracts.ErrorExtensions : object {
    private static FunctionCallDecoder _functionCallDecoder;
    private static ErrorExtensions();
    [ExtensionAttribute]
public static bool IsExceptionEncodedDataForError(string data);
    [ExtensionAttribute]
public static bool IsExceptionEncodedDataForError(string data, ErrorABI errorABI);
    [ExtensionAttribute]
public static bool IsExceptionEncodedDataForError(string data, Type errorType);
    [ExtensionAttribute]
public static bool IsExceptionEncodedDataForError(Type errorType, string data);
    [ExtensionAttribute]
public static bool IsExceptionEncodedDataForError(string data, string signature);
    [ExtensionAttribute]
public static bool IsErrorABIForErrorType(ErrorABI errorABI);
    [ExtensionAttribute]
public static TError DecodeExceptionEncodedData(string data);
    [ExtensionAttribute]
public static List`1<ParameterOutput> DecodeExceptionEncodedDataToDefault(ErrorABI errorABI, string data);
    [ExtensionAttribute]
public static JObject DecodeExceptionEncodedDataToJObject(ErrorABI errorABI, string data);
    [ExtensionAttribute]
public static bool IsExceptionEncodedDataForError(ErrorABI errorABI, string data);
    [ExtensionAttribute]
public static ErrorABI FindErrorABIForExceptionData(List`1<ErrorABI> errorABIs, string data);
    [ExtensionAttribute]
public static object FindAndDecodeToErrorExceptionData(List`1<Type> errorTypes, string data);
    [ExtensionAttribute]
public static JObject FindAndDecodeExceptionDataToJObject(List`1<ErrorABI> errorABIs, string data);
    [ExtensionAttribute]
public static bool IsExceptionForError(ErrorABI errorABI, RpcResponseException exception);
    [ExtensionAttribute]
public static List`1<ErrorABI> FindErrorABIFromRpcResponseException(RpcResponseException exception, IABIInfoStorage abiInfoStorage);
}
public class Nethereum.Contracts.Event : EventBase {
    public Event(Contract contract, EventABI eventABI);
    public Event(IClient client, string contractAddress, EventABI eventABI);
    [AsyncStateMachineAttribute("Nethereum.Contracts.Event/<GetAllChangesAsync>d__2`1")]
public Task`1<List`1<EventLog`1<T>>> GetAllChangesAsync(NewFilterInput filterInput);
    [AsyncStateMachineAttribute("Nethereum.Contracts.Event/<GetAllChangesAsync>d__3`1")]
public Task`1<List`1<EventLog`1<T>>> GetAllChangesAsync(HexBigInteger filterId);
    [AsyncStateMachineAttribute("Nethereum.Contracts.Event/<GetFilterChangesAsync>d__4`1")]
public Task`1<List`1<EventLog`1<T>>> GetFilterChangesAsync(HexBigInteger filterId);
    [AsyncStateMachineAttribute("Nethereum.Contracts.Event/<GetAllChangesDefaultAsync>d__5")]
public Task`1<List`1<EventLog`1<List`1<ParameterOutput>>>> GetAllChangesDefaultAsync(NewFilterInput filterInput);
    [AsyncStateMachineAttribute("Nethereum.Contracts.Event/<GetAllChangesDefaultAsync>d__6")]
public Task`1<List`1<EventLog`1<List`1<ParameterOutput>>>> GetAllChangesDefaultAsync(HexBigInteger filterId);
    [AsyncStateMachineAttribute("Nethereum.Contracts.Event/<GetFilterChangeDefaultAsync>d__7")]
public Task`1<List`1<EventLog`1<List`1<ParameterOutput>>>> GetFilterChangeDefaultAsync(HexBigInteger filterId);
    public List`1<EventLog`1<T>> DecodeAllEventsForEvent(FilterLog[] logs);
    public List`1<EventLog`1<T>> DecodeAllEventsForEvent(JArray logs);
    public List`1<EventLog`1<List`1<ParameterOutput>>> DecodeAllEventsDefaultForEvent(FilterLog[] logs);
    public List`1<EventLog`1<List`1<ParameterOutput>>> DecodeAllEventsDefaultForEvent(JArray logs);
}
public class Nethereum.Contracts.Event`1 : EventBase {
    public Event`1(Contract contract);
    public Event`1(IClient client, string contractAddress);
    public Event`1(IClient client);
    public List`1<EventLog`1<TEventMessage>> DecodeAllEventsForEvent(JArray logs);
    public List`1<EventLog`1<TEventMessage>> DecodeAllEventsForEvent(FilterLog[] logs);
    public static List`1<EventLog`1<TEventMessage>> DecodeAllEvents(FilterLog[] logs);
    public static EventLog`1<TEventMessage> DecodeEvent(FilterLog log);
    public static EventABI GetEventABI();
    [AsyncStateMachineAttribute("Nethereum.Contracts.Event`1/<GetAllChangesAsync>d__8")]
public Task`1<List`1<EventLog`1<TEventMessage>>> GetAllChangesAsync(NewFilterInput filterInput);
    [AsyncStateMachineAttribute("Nethereum.Contracts.Event`1/<GetAllChangesAsync>d__9")]
public Task`1<List`1<EventLog`1<TEventMessage>>> GetAllChangesAsync(HexBigInteger filterId);
    [AsyncStateMachineAttribute("Nethereum.Contracts.Event`1/<GetFilterChangesAsync>d__10")]
public Task`1<List`1<EventLog`1<TEventMessage>>> GetFilterChangesAsync(HexBigInteger filterId);
}
public class Nethereum.Contracts.EventBase : object {
    [CompilerGeneratedAttribute]
private EthGetFilterChangesForEthNewFilter <EthGetFilterChanges>k__BackingField;
    [CompilerGeneratedAttribute]
private EthGetLogs <EthGetLogs>k__BackingField;
    [CompilerGeneratedAttribute]
private EthNewFilter <EthNewFilter>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContractAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private EventABI <EventABI>k__BackingField;
    [CompilerGeneratedAttribute]
private EthGetFilterLogsForEthNewFilter <EthFilterLogs>k__BackingField;
    protected EthGetFilterChangesForEthNewFilter EthGetFilterChanges { get; }
    protected EthGetLogs EthGetLogs { get; }
    protected EthNewFilter EthNewFilter { get; }
    public string ContractAddress { get; }
    public EventABI EventABI { get; }
    protected EthGetFilterLogsForEthNewFilter EthFilterLogs { get; protected set; }
    public EventBase(IClient client, string contractAddress, EventABI eventABI);
    public EventBase(IClient client, string contractAddress, Type eventABIType);
    [CompilerGeneratedAttribute]
protected EthGetFilterChangesForEthNewFilter get_EthGetFilterChanges();
    [CompilerGeneratedAttribute]
protected EthGetLogs get_EthGetLogs();
    [CompilerGeneratedAttribute]
protected EthNewFilter get_EthNewFilter();
    [CompilerGeneratedAttribute]
public string get_ContractAddress();
    [CompilerGeneratedAttribute]
public EventABI get_EventABI();
    [CompilerGeneratedAttribute]
protected EthGetFilterLogsForEthNewFilter get_EthFilterLogs();
    [CompilerGeneratedAttribute]
protected void set_EthFilterLogs(EthGetFilterLogsForEthNewFilter value);
    public Task`1<HexBigInteger> CreateFilterAsync(BlockParameter fromBlock);
    public Task`1<HexBigInteger> CreateFilterAsync(T firstIndexedParameterValue, BlockParameter fromBlock, BlockParameter toBlock);
    public Task`1<HexBigInteger> CreateFilterAsync(T1 firstIndexedParameterValue, T2 secondIndexedParameterValue, BlockParameter fromBlock, BlockParameter toBlock);
    public Task`1<HexBigInteger> CreateFilterAsync(T1 firstIndexedParameterValue, T2 secondIndexedParameterValue, T3 thirdIndexedParameterValue, BlockParameter fromBlock, BlockParameter toBlock);
    public Task`1<HexBigInteger> CreateFilterAsync(T[] firstIndexedParameterValues, BlockParameter fromBlock, BlockParameter toBlock);
    public Task`1<HexBigInteger> CreateFilterAsync(T1[] firstIndexedParameterValues, T2[] secondIndexedParameterValues, BlockParameter fromBlock, BlockParameter toBlock);
    public Task`1<HexBigInteger> CreateFilterAsync(T1[] firstIndexedParameterValues, T2[] secondIndexedParameterValues, T3[] thirdIndexedParameterValues, BlockParameter fromBlock, BlockParameter toBlock);
    public Task`1<HexBigInteger> CreateFilterAsync(Object[] filterTopic1, BlockParameter fromBlock, BlockParameter toBlock);
    public Task`1<HexBigInteger> CreateFilterAsync(Object[] filterTopic1, Object[] filterTopic2, BlockParameter fromBlock, BlockParameter toBlock);
    public Task`1<HexBigInteger> CreateFilterAsync(Object[] filterTopic1, Object[] filterTopic2, Object[] filterTopic3, BlockParameter fromBlock, BlockParameter toBlock);
    public Task`1<HexBigInteger> CreateFilterAsync(NewFilterInput newfilterInput);
    public NewFilterInput CreateFilterInput(T firstIndexedParameterValue, BlockParameter fromBlock, BlockParameter toBlock);
    public NewFilterInput CreateFilterInput(T1 firstIndexedParameterValue, T2 secondIndexedParameterValue, BlockParameter fromBlock, BlockParameter toBlock);
    public NewFilterInput CreateFilterInput(T1 firstIndexedParameterValue, T2 secondIndexedParameterValue, T3 thirdIndexedParameterValue, BlockParameter fromBlock, BlockParameter toBlock);
    public NewFilterInput CreateFilterInput(T[] firstIndexedParameterValues, BlockParameter fromBlock, BlockParameter toBlock);
    public NewFilterInput CreateFilterInput(T1[] firstIndexedParameterValues, T2[] secondIndexedParameterValues, BlockParameter fromBlock, BlockParameter toBlock);
    public NewFilterInput CreateFilterInput(T1[] firstIndexedParameterValues, T2[] secondIndexedParameterValues, T3[] thirdIndexedParameterValues, BlockParameter fromBlock, BlockParameter toBlock);
    public Task`1<HexBigInteger> CreateFilterBlockRangeAsync(BlockParameter fromBlock, BlockParameter toBlock);
    public NewFilterInput CreateFilterInput(BlockParameter fromBlock, BlockParameter toBlock);
    public NewFilterInput CreateFilterInput(Object[] filterTopic1, BlockParameter fromBlock, BlockParameter toBlock);
    public NewFilterInput CreateFilterInput(Object[] filterTopic1, Object[] filterTopic2, BlockParameter fromBlock, BlockParameter toBlock);
    public NewFilterInput CreateFilterInput(Object[] filterTopic1, Object[] filterTopic2, Object[] filterTopic3, BlockParameter fromBlock, BlockParameter toBlock);
    public bool IsLogForEvent(JToken log);
    public bool IsLogForEvent(FilterLog log);
    public FilterLog[] GetLogsForEvent(JArray logs);
    public static List`1<EventLog`1<T>> DecodeAllEvents(FilterLog[] logs);
}
[ObsoleteAttribute("Use the EventABI extensions instead")]
public class Nethereum.Contracts.EventBuilder : object {
    [CompilerGeneratedAttribute]
private string <ContractAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private EventABI <EventABI>k__BackingField;
    public string ContractAddress { get; public set; }
    public EventABI EventABI { get; }
    public EventBuilder(string contractAddress, EventABI eventAbi);
    [CompilerGeneratedAttribute]
public string get_ContractAddress();
    [CompilerGeneratedAttribute]
public void set_ContractAddress(string value);
    [CompilerGeneratedAttribute]
public EventABI get_EventABI();
    public NewFilterInput CreateFilterInput(BlockParameter fromBlock, BlockParameter toBlock);
    public NewFilterInput CreateFilterInput(Object[] filterTopic1, BlockParameter fromBlock, BlockParameter toBlock);
    public NewFilterInput CreateFilterInput(Object[] filterTopic1, Object[] filterTopic2, BlockParameter fromBlock, BlockParameter toBlock);
    public NewFilterInput CreateFilterInput(Object[] filterTopic1, Object[] filterTopic2, Object[] filterTopic3, BlockParameter fromBlock, BlockParameter toBlock);
    public bool IsLogForEvent(JToken log);
    public bool IsLogForEvent(FilterLog log);
    public bool IsFilterInputForEvent(NewFilterInput filterInput);
    public FilterLog[] GetLogsForEvent(JArray logs);
    public List`1<EventLog`1<T>> DecodeAllEventsForEvent(FilterLog[] logs);
    public List`1<EventLog`1<T>> DecodeAllEventsForEvent(JArray logs);
    public static List`1<EventLog`1<T>> DecodeAllEvents(FilterLog[] logs);
}
[ExtensionAttribute]
public static class Nethereum.Contracts.EventExtensions : object {
    [ExtensionAttribute]
public static bool IsLogForEvent(JToken log);
    [ExtensionAttribute]
public static bool IsLogForEvent(FilterLog log);
    [ExtensionAttribute]
public static bool IsLogForEvent(FilterLogVO filterLogVO);
    public static bool IsFilterInputForEvent(string contractAddress, NewFilterInput filterInput);
    [ExtensionAttribute]
public static bool IsLogForEvent(EventABI eventABI, JToken log);
    [ExtensionAttribute]
public static bool IsLogForEvent(EventABI eventABI, FilterLog log);
    [ExtensionAttribute]
public static bool IsLogForEvent(FilterLog log, string signature);
    public static EventABI GetEventABI();
    [ExtensionAttribute]
public static EventABI GetEventABI(TEventDTO eventDTO);
    [ExtensionAttribute]
public static FilterInputBuilder`1<TEventDTO> GetFilterBuilder(IEthApiContractService contractService);
    [ExtensionAttribute]
public static FilterInputBuilder`1<TEventDTO> GetFilterBuilder(Event`1<TEventDTO> e);
    [ExtensionAttribute]
public static FilterInputBuilder`1<TEventDTO> GetFilterBuilder(TEventDTO eventDTO);
    [ExtensionAttribute]
public static EventTopicBuilder GetTopicBuilder(EventABI eventABI);
    [ExtensionAttribute]
public static NewFilterInput CreateFilterInput(EventABI eventABI, BlockParameter fromBlock, BlockParameter toBlock);
    [ExtensionAttribute]
public static NewFilterInput CreateFilterInput(EventABI eventABI, string contractAddress, BlockParameter fromBlock, BlockParameter toBlock);
    [ExtensionAttribute]
public static NewFilterInput CreateFilterInput(EventABI eventABI, String[] contractAddress, BlockParameter fromBlock, BlockParameter toBlock);
    [ExtensionAttribute]
public static NewFilterInput CreateFilterInput(EventABI eventABI, string contractAddress, Object[] filterTopic1, BlockParameter fromBlock, BlockParameter toBlock);
    [ExtensionAttribute]
public static NewFilterInput CreateFilterInput(EventABI eventABI, String[] contractAddress, Object[] filterTopic1, BlockParameter fromBlock, BlockParameter toBlock);
    [ExtensionAttribute]
public static NewFilterInput CreateFilterInput(EventABI eventABI, string contractAddress, T1 filterTopic1, BlockParameter fromBlock, BlockParameter toBlock);
    [ExtensionAttribute]
public static NewFilterInput CreateFilterInput(EventABI eventABI, String[] contractAddress, T1 filterTopic1, BlockParameter fromBlock, BlockParameter toBlock);
    [ExtensionAttribute]
public static NewFilterInput CreateFilterInput(EventABI eventABI, T1 filterTopic1, BlockParameter fromBlock, BlockParameter toBlock);
    [ExtensionAttribute]
public static NewFilterInput CreateFilterInput(EventABI eventABI, string contractAddress, Object[] filterTopic1, Object[] filterTopic2, BlockParameter fromBlock, BlockParameter toBlock);
    [ExtensionAttribute]
public static NewFilterInput CreateFilterInput(EventABI eventABI, String[] contractAddress, Object[] filterTopic1, Object[] filterTopic2, BlockParameter fromBlock, BlockParameter toBlock);
    [ExtensionAttribute]
public static NewFilterInput CreateFilterInput(EventABI eventABI, string contractAddress, T1 filterTopic1, T2 filterTopic2, BlockParameter fromBlock, BlockParameter toBlock);
    [ExtensionAttribute]
public static NewFilterInput CreateFilterInput(EventABI eventABI, String[] contractAddress, T1 filterTopic1, T2 filterTopic2, BlockParameter fromBlock, BlockParameter toBlock);
    [ExtensionAttribute]
public static NewFilterInput CreateFilterInput(EventABI eventABI, T1 filterTopic1, T2 filterTopic2, BlockParameter fromBlock, BlockParameter toBlock);
    [ExtensionAttribute]
public static NewFilterInput CreateFilterInput(EventABI eventABI, string contractAddress, Object[] filterTopic1, Object[] filterTopic2, Object[] filterTopic3, BlockParameter fromBlock, BlockParameter toBlock);
    [ExtensionAttribute]
public static NewFilterInput CreateFilterInput(EventABI eventABI, String[] contractAddress, Object[] filterTopic1, Object[] filterTopic2, Object[] filterTopic3, BlockParameter fromBlock, BlockParameter toBlock);
    [ExtensionAttribute]
public static NewFilterInput CreateFilterInput(EventABI eventABI, string contractAddress, T1 filterTopic1, T2 filterTopic2, T3 filterTopic3, BlockParameter fromBlock, BlockParameter toBlock);
    [ExtensionAttribute]
public static NewFilterInput CreateFilterInput(EventABI eventABI, String[] contractAddress, T1 filterTopic1, T2 filterTopic2, T3 filterTopic3, BlockParameter fromBlock, BlockParameter toBlock);
    [ExtensionAttribute]
public static NewFilterInput CreateFilterInput(EventABI eventABI, T1 filterTopic1, T2 filterTopic2, T3 filterTopic3, BlockParameter fromBlock, BlockParameter toBlock);
    [ExtensionAttribute]
public static NewFilterInput CreateFilterInput(EventABI eventABI, T1[] filterOrTopics1, BlockParameter fromBlock, BlockParameter toBlock);
    [ExtensionAttribute]
public static NewFilterInput CreateFilterInput(EventABI eventABI, string contractAddress, T1[] filterOrTopics1, BlockParameter fromBlock, BlockParameter toBlock);
    [ExtensionAttribute]
public static NewFilterInput CreateFilterInput(EventABI eventABI, String[] contractAddresses, T1[] filterOrTopics1, BlockParameter fromBlock, BlockParameter toBlock);
    [ExtensionAttribute]
public static NewFilterInput CreateFilterInput(EventABI eventABI, T1[] filterOrTopics1, T2[] filterOrTopics2, BlockParameter fromBlock, BlockParameter toBlock);
    [ExtensionAttribute]
public static NewFilterInput CreateFilterInput(EventABI eventABI, string contractAddress, T1[] filterOrTopics1, T2[] filterOrTopics2, BlockParameter fromBlock, BlockParameter toBlock);
    [ExtensionAttribute]
public static NewFilterInput CreateFilterInput(EventABI eventABI, String[] contractAddresses, T1[] filterOrTopics1, T2[] filterOrTopics2, BlockParameter fromBlock, BlockParameter toBlock);
    [ExtensionAttribute]
public static NewFilterInput CreateFilterInput(EventABI eventABI, T1[] filterOrTopics1, T2[] filterOrTopics2, T3[] filterOrTopics3, BlockParameter fromBlock, BlockParameter toBlock);
    [ExtensionAttribute]
public static NewFilterInput CreateFilterInput(EventABI eventABI, string contractAddress, T1[] filterOrTopics1, T2[] filterOrTopics2, T3[] filterOrTopics3, BlockParameter fromBlock, BlockParameter toBlock);
    [ExtensionAttribute]
public static NewFilterInput CreateFilterInput(EventABI eventABI, String[] contractAddresses, T1[] filterOrTopics1, T2[] filterOrTopics2, T3[] filterOrTopics3, BlockParameter fromBlock, BlockParameter toBlock);
    [ExtensionAttribute]
public static bool IsFilterInputForEvent(EventABI eventABI, string contractAddress, NewFilterInput filterInput);
    public static bool IsFilterInputForContractAddress(string contractAdress, NewFilterInput filterInput);
    [ExtensionAttribute]
public static bool IsTopicSignatureForEvent(EventABI eventABI, object topic);
    [ExtensionAttribute]
public static JArray ConvertToJArray(FilterLog[] filterLogs);
    [ExtensionAttribute]
public static JObject ConvertToJObject(FilterLog filterLog);
    [ExtensionAttribute]
public static FilterLog ConvertToFilterLog(JObject log);
    [ExtensionAttribute]
public static FilterLog[] ConvertToFilterLog(JArray logs);
    [ExtensionAttribute]
public static FilterLog[] GetLogsForEvent(EventABI eventABI, JArray logs);
    [ExtensionAttribute]
public static List`1<EventLog`1<TEventDTO>> DecodeAllEvents(JArray logs);
    [ExtensionAttribute]
public static List`1<EventLog`1<TEventDTO>> DecodeAllEvents(FilterLog[] logs);
    [ExtensionAttribute]
public static List`1<EventLog`1<TEventDTO>> DecodeAllEvents(List`1<FilterLog> logs);
    [ExtensionAttribute]
public static List`1<EventLog`1<TEventDTO>> DecodeAllEvents(TransactionReceipt transactionReceipt);
    [ExtensionAttribute]
public static List`1<EventLog`1<TEventDTO>> DecodeAllEvents(EventABI eventABI, JArray logs);
    [ExtensionAttribute]
public static List`1<EventLog`1<List`1<ParameterOutput>>> DecodeAllEventsDefaultTopics(EventABI eventABI, JArray logs);
    [ExtensionAttribute]
public static List`1<EventLog`1<List`1<ParameterOutput>>> DecodeAllEventsDefaultTopics(EventABI eventABI, FilterLog[] logs);
    [ExtensionAttribute]
public static List`1<EventLog`1<TEventDTO>> DecodeAllEvents(EventABI eventABI, FilterLog[] logs);
    [ExtensionAttribute]
public static EventLog`1<List`1<ParameterOutput>> DecodeEventDefaultTopics(EventABI eventABI, FilterLog log);
    [ExtensionAttribute]
public static EventLog`1<List`1<ParameterOutput>> DecodeEventDefaultTopics(EventABI eventABI, JToken log);
    [ExtensionAttribute]
public static JObject DecodeEventToJObject(EventABI eventABI, JToken log);
    [ExtensionAttribute]
public static JObject DecodeEventToJObject(EventABI eventABI, FilterLog log);
    [ExtensionAttribute]
public static EventLog`1<TEventDTO> DecodeEvent(EventABI eventABI, FilterLog log);
    [ExtensionAttribute]
public static EventLog`1<TEventDTO> DecodeEvent(FilterLog log);
    [ExtensionAttribute]
public static TEventDTO DecodeEvent(TEventDTO eventDTO, JToken log);
    [ExtensionAttribute]
public static TEventDTO DecodeEvent(TEventDTO eventDTO, FilterLog log);
    [ExtensionAttribute]
public static TEventDTO DecodeEvent(TEventDTO eventDTO, EventABI eventABI, FilterLog log);
    [ExtensionAttribute]
public static bool IsLogForEvent(TEventDTO eventDTO, JToken log);
    [ExtensionAttribute]
public static bool IsLogForEvent(TEventDTO eventDTO, FilterLog log);
    public static bool HasSameNumberOfIndexes(FilterLog log);
    [ExtensionAttribute]
public static bool HasSameNumberOfIndexes(TEventDTO eventDTO, FilterLog log);
    [ExtensionAttribute]
public static bool HasSameNumberOfIndexes(EventABI eventAbi, FilterLog log);
    [ExtensionAttribute]
public static List`1<EventLog`1<TEventDTO>> DecodeAllEventsIgnoringIndexMisMatches(FilterLog[] logs);
    [ExtensionAttribute]
public static FilterLog[] Sort(IEnumerable`1<FilterLog> logs);
    [ExtensionAttribute]
public static FilterLog[] SortLogs(IEnumerable`1<FilterLog> logs);
    [ExtensionAttribute]
public static EventLog`1[] Sort(IEnumerable`1<EventLog`1<TEventDTO>> events);
    [ExtensionAttribute]
public static EventLog`1[] SortLogs(IEnumerable`1<EventLog`1<TEventDTO>> events);
    [ExtensionAttribute]
public static EventABI FindEventABIFromLogAndContractAddress(IABIInfoStorage abiInfoStorage, FilterLog filterLog, BigInteger chainId);
    [ExtensionAttribute]
public static EventABI FindEventABIFromLogAndContractAddress(IABIInfoStorage abiInfoStorage, JToken log, BigInteger chainId);
    [ExtensionAttribute]
public static EventABI FindEventABIFromLogAndContractAddress(FilterLog filterLog, IABIInfoStorage abiInfoStorage, BigInteger chainId);
    [ExtensionAttribute]
public static EventABI FindEventABIFromLogAndContractAddress(JToken log, IABIInfoStorage abiInfoStorage, BigInteger chainId);
    [ExtensionAttribute]
public static List`1<EventABI> FindEventABIFromLog(IABIInfoStorage abiInfoStorage, FilterLog log);
    [ExtensionAttribute]
public static List`1<EventABI> FindEventABIFromLog(IABIInfoStorage abiInfoStorage, JToken log);
    [ExtensionAttribute]
public static List`1<EventABI> FindEventABIFromLog(FilterLog log, IABIInfoStorage abiInfoStorage);
    [ExtensionAttribute]
public static List`1<EventABI> FindEventABIFromLog(JToken log, IABIInfoStorage abiInfoStorage);
    [ExtensionAttribute]
public static string EventSignature(FilterLog log);
    [ExtensionAttribute]
public static string IndexedVal1(FilterLog log);
    [ExtensionAttribute]
public static string IndexedVal2(FilterLog log);
    [ExtensionAttribute]
public static string IndexedVal3(FilterLog log);
    [ExtensionAttribute]
public static string GetTopic(FilterLog log, int number);
}
public class Nethereum.Contracts.EventLog`1 : object {
    [CompilerGeneratedAttribute]
private T <Event>k__BackingField;
    [CompilerGeneratedAttribute]
private FilterLog <Log>k__BackingField;
    public T Event { get; }
    public FilterLog Log { get; }
    public EventLog`1(T eventObject, FilterLog log);
    [CompilerGeneratedAttribute]
public T get_Event();
    [CompilerGeneratedAttribute]
public sealed virtual FilterLog get_Log();
}
public class Nethereum.Contracts.EventTopicBuilder : object {
    private EventABI _eventABI;
    public EventTopicBuilder(EventABI eventABI);
    public Object[] GetSignatureTopicAsTheOnlyTopic();
    public object GetSignatureTopic();
    public Object[] GetTopics(Object[] firstTopic);
    public Object[] GetTopics(Object[] firstTopic, Object[] secondTopic);
    public Object[] GetTopics(Object[] firstTopic, Object[] secondTopic, Object[] thirdTopic);
    public Object[] GetTopics(object firstTopic);
    public Object[] GetTopics(object firstTopic, object secondTopic);
    public Object[] GetTopics(object firstTopic, object secondTopic, object thirdTopic);
    public Object[] GetTopics(T1 firstTopic);
    public Object[] GetTopics(T1 firstTopic, T2 secondTopic);
    public Object[] GetTopics(T1 firstTopic, T2 secondTopic, T3 thirdTopic);
    public Object[] GetTopics(T1[] firstOrTopics);
    public Object[] GetTopics(T1[] firstOrTopics, T2[] secondOrTopics);
    public Object[] GetTopics(T1[] firstOrTopics, T2[] secondOrTopics, T3[] thirdOrTopics);
    public Object[] GetValueTopic(Object[] values, int paramNumber);
    private string EnsureHexPrefix(string input);
}
public static class Nethereum.Contracts.Extensions.DeploymentMessageExtensions : object {
}
[ExtensionAttribute]
public static class Nethereum.Contracts.FilterExtensions : object {
    private static Object[] EmptyObjectArray;
    private static FilterExtensions();
    [ExtensionAttribute]
public static string Key(FilterLog log);
    [ExtensionAttribute]
public static Dictionary`2<string, FilterLog> Merge(Dictionary`2<string, FilterLog> masterList, FilterLog[] candidates);
    [ExtensionAttribute]
public static Nullable`1<BigInteger> NumberOfBlocksInBlockParameters(NewFilterInput filter);
    [ExtensionAttribute]
public static void SetBlockRange(NewFilterInput filter, BlockRange range);
    [ExtensionAttribute]
public static void SetBlockRange(NewFilterInput filter, BigInteger from, BigInteger to);
    [ExtensionAttribute]
public static void SetBlockRange(NewFilterInput filter, HexBigInteger from, HexBigInteger to);
    [ExtensionAttribute]
public static bool IsTopicFiltered(NewFilterInput filter, UInt32 topicNumber);
    [ExtensionAttribute]
public static string GetFirstTopicValueAsString(NewFilterInput filter, UInt32 topicNumber);
    [ExtensionAttribute]
public static object GetFirstTopicValue(NewFilterInput filter, UInt32 topicNumber);
    [ExtensionAttribute]
public static Object[] GetTopicValues(NewFilterInput filter, UInt32 topicNumber);
}
public class Nethereum.Contracts.FilterInputBuilder : object {
    public static NewFilterInput GetDefaultFilterInput(string address, BlockParameter fromBlock, BlockParameter toBlock);
    public static NewFilterInput GetDefaultFilterInput(String[] addresses, BlockParameter fromBlock, BlockParameter toBlock);
}
public class Nethereum.Contracts.FilterInputBuilder`1 : object {
    private EventABI _eventAbi;
    private TopicFilterContainer`1<TEventDTo> _topics;
    public FilterInputBuilder`1<TEventDTo> AddTopic(Expression`1<Func`2<TEventDTo, TPropertyType>> propertySelector, IEnumerable`1<TPropertyType> desiredValues);
    public FilterInputBuilder`1<TEventDTo> AddTopic(Expression`1<Func`2<TEventDTo, TPropertyType>> propertySelector, TPropertyType desiredValue);
    public NewFilterInput Build(string contractAddress, Nullable`1<BlockRange> blockRange);
    public NewFilterInput Build(string contractAddress, BlockParameter from, BlockParameter to);
    public NewFilterInput Build(String[] contractAddresses, Nullable`1<BlockRange> blockRange);
    public NewFilterInput Build(String[] contractAddresses, BlockParameter from, BlockParameter to);
}
public class Nethereum.Contracts.FilterInputNotForEventException : Exception {
}
public class Nethereum.Contracts.Function : FunctionBase {
    protected FunctionBuilder FunctionBuilder { get; }
    public Function(Contract contract, FunctionBuilder functionBuilder);
    protected FunctionBuilder get_FunctionBuilder();
    public CallInput CreateCallInput(Object[] functionInput);
    public CallInput CreateCallInput(string from, HexBigInteger gas, HexBigInteger value, Object[] functionInput);
    public string GetData(Object[] functionInput);
    public TransactionInput CreateTransactionInput(string from, Object[] functionInput);
    public TransactionInput CreateTransactionInput(string from, HexBigInteger gas, HexBigInteger value, Object[] functionInput);
    public TransactionInput CreateTransactionInput(string from, HexBigInteger gas, HexBigInteger gasPrice, HexBigInteger value, Object[] functionInput);
    public TransactionInput CreateTransactionInput(TransactionInput input, Object[] functionInput);
    public TransactionInput CreateTransactionInput(HexBigInteger type, string from, HexBigInteger gas, HexBigInteger value, HexBigInteger maxFeePerGas, HexBigInteger maxPriorityFeePerGas, Object[] functionInput);
    public TransactionInput CreateTransactionInput(string from, HexBigInteger gas, HexBigInteger value, HexBigInteger maxFeePerGas, HexBigInteger maxPriorityFeePerGas, Object[] functionInput);
    public Task`1<List`1<ParameterOutput>> CallDecodingToDefaultAsync(Object[] functionInput);
    public Task`1<List`1<ParameterOutput>> CallDecodingToDefaultAsync(string from, HexBigInteger gas, HexBigInteger value, Object[] functionInput);
    public Task`1<List`1<ParameterOutput>> CallDecodingToDefaultAsync(string from, HexBigInteger gas, HexBigInteger value, BlockParameter block, Object[] functionInput);
    public Task`1<List`1<ParameterOutput>> CallDecodingToDefaultAsync(BlockParameter block, Object[] functionInput);
    public Task`1<TReturn> CallAsync(Object[] functionInput);
    public Task`1<TReturn> CallAsync(string from, HexBigInteger gas, HexBigInteger value, Object[] functionInput);
    public Task`1<TReturn> CallAsync(string from, HexBigInteger gas, HexBigInteger value, BlockParameter block, Object[] functionInput);
    public Task`1<TReturn> CallAsync(BlockParameter block, Object[] functionInput);
    public Task`1<TReturn> CallDeserializingToObjectAsync(Object[] functionInput);
    public Task`1<TReturn> CallDeserializingToObjectAsync(string from, HexBigInteger gas, HexBigInteger value, Object[] functionInput);
    public Task`1<TReturn> CallDeserializingToObjectAsync(string from, HexBigInteger gas, HexBigInteger value, BlockParameter block, Object[] functionInput);
    public Task`1<TReturn> CallDeserializingToObjectAsync(BlockParameter blockParameter, Object[] functionInput);
    public Task`1<HexBigInteger> EstimateGasAsync(Object[] functionInput);
    public Task`1<HexBigInteger> EstimateGasAsync(string from, HexBigInteger gas, HexBigInteger value, Object[] functionInput);
    public Task`1<string> SendTransactionAsync(string from, Object[] functionInput);
    public Task`1<string> SendTransactionAsync(string from, HexBigInteger gas, HexBigInteger value, Object[] functionInput);
    public Task`1<string> SendTransactionAsync(HexBigInteger type, string from, HexBigInteger gas, HexBigInteger value, HexBigInteger maxFeePerGas, HexBigInteger maxPriorityFeePerGas, Object[] functionInput);
    public Task`1<string> SendTransactionAsync(string from, HexBigInteger gas, HexBigInteger value, HexBigInteger maxFeePerGas, HexBigInteger maxPriorityFeePerGas, Object[] functionInput);
    public Task`1<string> SendTransactionAsync(string from, HexBigInteger gas, HexBigInteger gasPrice, HexBigInteger value, Object[] functionInput);
    public Task`1<string> SendTransactionAsync(TransactionInput input, Object[] functionInput);
    public Task`1<TransactionReceipt> SendTransactionAndWaitForReceiptAsync(string from, CancellationToken receiptRequestCancellationToken, Object[] functionInput);
    public Task`1<TransactionReceipt> SendTransactionAndWaitForReceiptAsync(string from, HexBigInteger gas, HexBigInteger value, CancellationToken receiptRequestCancellationToken, Object[] functionInput);
    public Task`1<TransactionReceipt> SendTransactionAndWaitForReceiptAsync(string from, HexBigInteger gas, HexBigInteger gasPrice, HexBigInteger value, CancellationToken receiptRequestCancellationToken, Object[] functionInput);
    public Task`1<TransactionReceipt> SendTransactionAndWaitForReceiptAsync(TransactionInput input, CancellationToken receiptRequestCancellationToken, Object[] functionInput);
    public Task`1<TransactionReceipt> SendTransactionAndWaitForReceiptAsync(string from, CancellationTokenSource receiptRequestCancellationToken, Object[] functionInput);
    public Task`1<TransactionReceipt> SendTransactionAndWaitForReceiptAsync(string from, HexBigInteger gas, HexBigInteger value, CancellationTokenSource receiptRequestCancellationToken, Object[] functionInput);
    public Task`1<TransactionReceipt> SendTransactionAndWaitForReceiptAsync(string from, HexBigInteger gas, HexBigInteger gasPrice, HexBigInteger value, CancellationTokenSource receiptRequestCancellationToken, Object[] functionInput);
    public Task`1<TransactionReceipt> SendTransactionAndWaitForReceiptAsync(TransactionInput input, CancellationTokenSource receiptRequestCancellationToken, Object[] functionInput);
    public Task`1<TransactionReceipt> SendTransactionAndWaitForReceiptAsync(HexBigInteger type, string from, HexBigInteger gas, HexBigInteger value, HexBigInteger maxFeePerGas, HexBigInteger maxPriorityFeePerGas, Object[] functionInput);
    public Task`1<TransactionReceipt> SendTransactionAndWaitForReceiptAsync(string from, HexBigInteger gas, HexBigInteger value, HexBigInteger maxFeePerGas, HexBigInteger maxPriorityFeePerGas, Object[] functionInput);
}
public class Nethereum.Contracts.Function`1 : FunctionBase {
    protected FunctionBuilder`1<TFunctionInput> FunctionBuilder { get; }
    public Function`1(Contract contract, FunctionBuilder`1<TFunctionInput> functionBuilder);
    protected FunctionBuilder`1<TFunctionInput> get_FunctionBuilder();
    public CallInput CreateCallInputParameterless();
    public CallInput CreateCallInput(TFunctionInput functionInput);
    public CallInput CreateCallInput(TFunctionInput functionInput, string from, HexBigInteger gas, HexBigInteger value);
    public string GetData(TFunctionInput functionInput);
    public TFunctionInput DecodeFunctionInput(TFunctionInput functionInput, TransactionInput transactionInput);
    public TFunctionInput DecodeFunctionInput(TFunctionInput functionInput, string data);
    public TransactionInput CreateTransactionInput(TFunctionInput functionInput, string from);
    public TransactionInput CreateTransactionInput(TFunctionInput functionInput, string from, HexBigInteger gas, HexBigInteger value);
    public TransactionInput CreateTransactionInput(TFunctionInput functionInput, string from, HexBigInteger gas, HexBigInteger gasPrice, HexBigInteger value);
    public Task`1<TReturn> CallAsync();
    public Task`1<TReturn> CallAsync(TFunctionInput functionInput);
    public Task`1<TReturn> CallAsync(TFunctionInput functionInput, string from, HexBigInteger gas, HexBigInteger value);
    public Task`1<TReturn> CallAsync(TFunctionInput functionInput, string from, HexBigInteger gas, HexBigInteger value, BlockParameter block);
    public Task`1<TReturn> CallAsync(TFunctionInput functionInput, BlockParameter blockParameter);
    public Task`1<TReturn> CallDeserializingToObjectAsync();
    public Task`1<TReturn> CallDeserializingToObjectAsync(BlockParameter block);
    public Task`1<TReturn> CallDeserializingToObjectAsync(TFunctionInput functionInput);
    public Task`1<TReturn> CallDeserializingToObjectAsync(TFunctionInput functionInput, BlockParameter block);
    public Task`1<TReturn> CallDeserializingToObjectAsync(TFunctionInput functionInput, string from, HexBigInteger gas, HexBigInteger value);
    public Task`1<TReturn> CallDeserializingToObjectAsync(TFunctionInput functionInput, string from, HexBigInteger gas, HexBigInteger value, BlockParameter block);
    public Task`1<HexBigInteger> EstimateGasAsync();
    public Task`1<HexBigInteger> EstimateGasAsync(TFunctionInput functionInput);
    public Task`1<HexBigInteger> EstimateGasAsync(TFunctionInput functionInput, string from, HexBigInteger gas, HexBigInteger value);
    public Task`1<HexBigInteger> EstimateGasAsync(TFunctionInput functionInput, CallInput callInput);
    public Task`1<string> SendTransactionAsync(TFunctionInput functionInput, string from);
    public Task`1<string> SendTransactionAsync(TFunctionInput functionInput, string from, HexBigInteger gas, HexBigInteger value);
    public Task`1<string> SendTransactionAsync(TFunctionInput functionInput, string from, HexBigInteger gas, HexBigInteger gasPrice, HexBigInteger value);
    public Task`1<string> SendTransactionAsync(TFunctionInput functionInput, TransactionInput input);
    public Task`1<Byte[]> CallRawAsync();
    public Task`1<Byte[]> CallRawAsync(TFunctionInput functionInput);
    public Task`1<Byte[]> CallRawAsync(TFunctionInput functionInput, string from, HexBigInteger gas, HexBigInteger value);
    public Task`1<Byte[]> CallRawAsync(TFunctionInput functionInput, string from, HexBigInteger gas, HexBigInteger value, BlockParameter block);
    public Task`1<Byte[]> CallRawAsync(TFunctionInput functionInput, BlockParameter blockParameter);
    public Task`1<TransactionReceipt> SendTransactionAndWaitForReceiptAsync(TFunctionInput functionInput, string from, CancellationToken receiptRequestCancellationToken);
    public Task`1<TransactionReceipt> SendTransactionAndWaitForReceiptAsync(TFunctionInput functionInput, string from, HexBigInteger gas, HexBigInteger value, CancellationToken receiptRequestCancellationToken);
    public Task`1<TransactionReceipt> SendTransactionAndWaitForReceiptAsync(TFunctionInput functionInput, string from, HexBigInteger gas, HexBigInteger gasPrice, HexBigInteger value, CancellationToken receiptRequestCancellationToken);
    public Task`1<TransactionReceipt> SendTransactionAndWaitForReceiptAsync(TFunctionInput functionInput, TransactionInput input, CancellationToken receiptRequestCancellationToken);
    public Task`1<TransactionReceipt> SendTransactionAndWaitForReceiptAsync(TFunctionInput functionInput, string from, CancellationTokenSource receiptRequestCancellationTokenSource);
    public Task`1<TransactionReceipt> SendTransactionAndWaitForReceiptAsync(TFunctionInput functionInput, string from, HexBigInteger gas, HexBigInteger value, CancellationTokenSource receiptRequestCancellationTokenSource);
    public Task`1<TransactionReceipt> SendTransactionAndWaitForReceiptAsync(TFunctionInput functionInput, string from, HexBigInteger gas, HexBigInteger gasPrice, HexBigInteger value, CancellationTokenSource receiptRequestCancellationTokenSource);
    public Task`1<TransactionReceipt> SendTransactionAndWaitForReceiptAsync(TFunctionInput functionInput, TransactionInput input, CancellationTokenSource receiptRequestCancellationTokenSource);
}
public abstract class Nethereum.Contracts.FunctionBase : object {
    private Contract _contract;
    [CompilerGeneratedAttribute]
private FunctionBuilderBase <FunctionBuilderBase>k__BackingField;
    private ContractCall _contractCall;
    protected FunctionBuilderBase FunctionBuilderBase { get; protected set; }
    protected ITransactionManager TransactionManager { get; }
    public string ContractAddress { get; }
    protected FunctionBase(Contract contract, FunctionBuilderBase functionBuilder);
    [CompilerGeneratedAttribute]
protected FunctionBuilderBase get_FunctionBuilderBase();
    [CompilerGeneratedAttribute]
protected void set_FunctionBuilderBase(FunctionBuilderBase value);
    protected ITransactionManager get_TransactionManager();
    public string get_ContractAddress();
    public Task`1<string> CallAsync(CallInput callInput, BlockParameter block);
    public Task`1<string> SendTransactionAsync(string from, HexBigInteger gas, HexBigInteger value);
    protected Task`1<string> SendTransactionAsync(TransactionInput transactionInput);
    protected Task`1<TransactionReceipt> SendTransactionAndWaitForReceiptAsync(TransactionInput transactionInput, CancellationTokenSource cancellationTokenSource);
    protected Task`1<TransactionReceipt> SendTransactionAndWaitForReceiptAsync(TransactionInput transactionInput, CancellationToken receiptRequestCancellationToken);
    [AsyncStateMachineAttribute("Nethereum.Contracts.FunctionBase/<CallRawAsync>d__16")]
public Task`1<Byte[]> CallRawAsync(CallInput callInput);
    [AsyncStateMachineAttribute("Nethereum.Contracts.FunctionBase/<CallRawAsync>d__17")]
public Task`1<Byte[]> CallRawAsync(CallInput callInput, BlockParameter block);
    [AsyncStateMachineAttribute("Nethereum.Contracts.FunctionBase/<CallDecodingToDefaultAsync>d__18")]
public Task`1<List`1<ParameterOutput>> CallDecodingToDefaultAsync(CallInput callInput, BlockParameter block);
    [AsyncStateMachineAttribute("Nethereum.Contracts.FunctionBase/<CallDecodingToDefaultAsync>d__19")]
public Task`1<List`1<ParameterOutput>> CallDecodingToDefaultAsync(CallInput callInput);
    [AsyncStateMachineAttribute("Nethereum.Contracts.FunctionBase/<CallAsync>d__20`1")]
protected Task`1<TReturn> CallAsync(CallInput callInput);
    [AsyncStateMachineAttribute("Nethereum.Contracts.FunctionBase/<CallAsync>d__21`1")]
protected Task`1<TReturn> CallAsync(CallInput callInput, BlockParameter block);
    [AsyncStateMachineAttribute("Nethereum.Contracts.FunctionBase/<CallAsync>d__22`1")]
protected Task`1<TReturn> CallAsync(TReturn functionOuput, CallInput callInput);
    [AsyncStateMachineAttribute("Nethereum.Contracts.FunctionBase/<CallAsync>d__23`1")]
protected Task`1<TReturn> CallAsync(TReturn functionOuput, CallInput callInput, BlockParameter block);
    [AsyncStateMachineAttribute("Nethereum.Contracts.FunctionBase/<EstimateGasFromEncAsync>d__24")]
protected Task`1<HexBigInteger> EstimateGasFromEncAsync(CallInput callInput);
    public List`1<ParameterOutput> DecodeInput(string data);
    public TReturn DecodeTypeOutput(string output);
    public TReturn DecodeDTOTypeOutput(TReturn functionOuput, string output);
    public TReturn DecodeDTOTypeOutput(string output);
    public TransactionInput CreateTransactionInput(string from, HexBigInteger gas, HexBigInteger value);
    public Object[] ConvertJsonToObjectInputParameters(string json);
    public Object[] ConvertJsonToObjectInputParameters(JObject jObject);
}
public class Nethereum.Contracts.FunctionBuilder : FunctionBuilderBase {
    public FunctionBuilder(string contractAddress, FunctionABI function);
    public CallInput CreateCallInput(Object[] functionInput);
    public CallInput CreateCallInput(string from, HexBigInteger gas, HexBigInteger value, Object[] functionInput);
    public string GetData(Object[] functionInput);
    public TransactionInput CreateTransactionInput(string from, Object[] functionInput);
    public TransactionInput CreateTransactionInput(string from, HexBigInteger gas, HexBigInteger value, Object[] functionInput);
    public TransactionInput CreateTransactionInput(string from, HexBigInteger gas, HexBigInteger gasPrice, HexBigInteger value, Object[] functionInput);
    public TransactionInput CreateTransactionInput(HexBigInteger type, string from, HexBigInteger gas, HexBigInteger value, HexBigInteger maxFeePerGas, HexBigInteger maxPriorityFeePerGas, Object[] functionInput);
    public TransactionInput CreateTransactionInput(string from, HexBigInteger gas, HexBigInteger value, HexBigInteger maxFeePerGas, HexBigInteger maxPriorityFeePerGas, Object[] functionInput);
    public TransactionInput CreateTransactionInput(TransactionInput input, Object[] functionInput);
}
public class Nethereum.Contracts.FunctionBuilder`1 : FunctionBuilderBase {
    public FunctionBuilder`1(string contractAddres);
    public FunctionBuilder`1(string contractAddress, FunctionABI function);
    public CallInput CreateCallInputParameterless();
    public CallInput CreateCallInput(TFunctionInput functionInput);
    public CallInput CreateCallInput(TFunctionInput functionInput, string from, HexBigInteger gas, HexBigInteger value);
    public string GetData(TFunctionInput functionInput);
    public Byte[] GetDataAsBytes(TFunctionInput functionInput);
    public TFunctionInput DecodeFunctionInput(TFunctionInput functionInput, TransactionInput transactionInput);
    public TFunctionInput DecodeFunctionInput(TFunctionInput functionInput, string data);
    public TransactionInput CreateTransactionInput(TFunctionInput functionInput, string from);
    public TransactionInput CreateTransactionInput(TFunctionInput functionInput, string from, HexBigInteger gas, HexBigInteger value);
    public TransactionInput CreateTransactionInput(TFunctionInput functionInput, string from, HexBigInteger gas, HexBigInteger gasPrice, HexBigInteger value);
    public TransactionInput CreateTransactionInput(TFunctionInput functionInput, HexBigInteger type, string from, HexBigInteger gas, HexBigInteger value, HexBigInteger maxFeePerGas, HexBigInteger maxPriorityFeePerGas);
    public TransactionInput CreateTransactionInput(TFunctionInput functionInput, string from, HexBigInteger gas, HexBigInteger value, HexBigInteger maxFeePerGas, HexBigInteger maxPriorityFeePerGas);
}
public abstract class Nethereum.Contracts.FunctionBuilderBase : object {
    [CompilerGeneratedAttribute]
private string <ContractAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private FunctionCallDecoder <FunctionCallDecoder>k__BackingField;
    [CompilerGeneratedAttribute]
private FunctionCallEncoder <FunctionCallEncoder>k__BackingField;
    [CompilerGeneratedAttribute]
private FunctionABI <FunctionABI>k__BackingField;
    public string ContractAddress { get; public set; }
    protected FunctionCallDecoder FunctionCallDecoder { get; protected set; }
    protected FunctionCallEncoder FunctionCallEncoder { get; protected set; }
    public FunctionABI FunctionABI { get; protected set; }
    protected FunctionBuilderBase(string contractAddress, FunctionABI functionAbi);
    protected FunctionBuilderBase(string contractAddress);
    [CompilerGeneratedAttribute]
public string get_ContractAddress();
    [CompilerGeneratedAttribute]
public void set_ContractAddress(string value);
    [CompilerGeneratedAttribute]
protected FunctionCallDecoder get_FunctionCallDecoder();
    [CompilerGeneratedAttribute]
protected void set_FunctionCallDecoder(FunctionCallDecoder value);
    [CompilerGeneratedAttribute]
protected FunctionCallEncoder get_FunctionCallEncoder();
    [CompilerGeneratedAttribute]
protected void set_FunctionCallEncoder(FunctionCallEncoder value);
    [CompilerGeneratedAttribute]
public FunctionABI get_FunctionABI();
    [CompilerGeneratedAttribute]
protected void set_FunctionABI(FunctionABI value);
    public bool IsTransactionInputDataForFunction(string data);
    public List`1<ParameterOutput> DecodeInput(string data);
    public Object[] ConvertJsonToObjectInputParameters(string json);
    public Object[] ConvertJsonToObjectInputParameters(JObject jObject);
    public JObject DecodeOutputToJObject(string data);
    public List`1<ParameterOutput> DecodeOutput(string data);
    public TReturn DecodeTypeOutput(string output);
    public TReturn DecodeDTOTypeOutput(TReturn functionOuput, string output);
    public TReturn DecodeDTOTypeOutput(string output);
    public TransactionInput CreateTransactionInput(string from, HexBigInteger gas, HexBigInteger value);
    public TransactionInput CreateTransactionInput(HexBigInteger type, string from, HexBigInteger gas, HexBigInteger value, HexBigInteger maxFeePerGas, HexBigInteger maxPriorityFeePerGas);
    protected CallInput CreateCallInput(string encodedFunctionCall);
    protected CallInput CreateCallInput(string encodedFunctionCall, string from, HexBigInteger gas, HexBigInteger value);
    protected TransactionInput CreateTransactionInput(string encodedFunctionCall, string from);
    protected TransactionInput CreateTransactionInput(string encodedFunctionCall, string from, HexBigInteger gas, HexBigInteger value);
    protected TransactionInput CreateTransactionInput(string encodedFunctionCall, string from, HexBigInteger gas, HexBigInteger gasPrice, HexBigInteger value);
    protected TransactionInput CreateTransactionInput(HexBigInteger type, string encodedFunctionCall, string from, HexBigInteger gas, HexBigInteger value, HexBigInteger maxFeePerGas, HexBigInteger maxPriorityFeePerGas);
    protected TransactionInput CreateTransactionInput(string encodedFunctionCall, TransactionInput input);
    private Parameter GetFirstParameterOrNull(Parameter[] parameters);
}
public class Nethereum.Contracts.FunctionMessage : ContractMessageBase {
}
[ExtensionAttribute]
public static class Nethereum.Contracts.FunctionMessageExtensions : object {
    [ExtensionAttribute]
public static FunctionMessageEncodingService`1<TContractMessage> GetEncodingService(TContractMessage contractMessage, string contractAddress, string defaultAddressFrom);
    [ExtensionAttribute]
public static CallInput CreateCallInput(TContractMessage contractMessage, string contractAddress);
    [ExtensionAttribute]
public static TransactionInput CreateTransactionInput(TContractMessage contractMessage, string contractAddress);
    [ExtensionAttribute]
public static TContractMessage DecodeInput(TContractMessage contractMessage, string data);
    [ExtensionAttribute]
public static bool IsTransactionForFunctionMessage(Transaction transaction);
    [ExtensionAttribute]
public static TContractMessage DecodeTransactionToFunctionMessage(Transaction transaction);
    [ExtensionAttribute]
public static TContractMessage DecodeTransaction(TContractMessage contractMessage, Transaction transaction);
    [ExtensionAttribute]
public static Byte[] GetCallData(TContractMessage contractMessage);
    [ExtensionAttribute]
public static Byte[] GetCallDataHash(TContractMessage contractMessage);
    [ExtensionAttribute]
public static TFunctionMessage Decode(TransactionReceiptVO transactionWithReceipt);
    [ExtensionAttribute]
public static bool IsTransactionForFunctionMessage(TransactionReceiptVO transactionWithReceipt);
    [ExtensionAttribute]
public static bool IsTransactionForFunctionMessage(TransactionVO transactionVo);
    [ExtensionAttribute]
public static bool IsTransactionForFunction(Transaction transaction, FunctionABI functionABI);
    [ExtensionAttribute]
public static bool IsTransactionForFunction(FunctionABI functionABI, Transaction transaction);
    [ExtensionAttribute]
public static bool IsTransactionForFunction(FunctionABI functionABI, string inputData);
    [ExtensionAttribute]
public static FunctionABI FindFunctionABIFromTransactionInputDataAndContractAddress(IABIInfoStorage abiInfoStorage, Transaction transaction, BigInteger chainId);
    [ExtensionAttribute]
public static FunctionABI FindFunctionABIFromTransactionInputDataAndContractAddress(Transaction transaction, IABIInfoStorage abiInfoStorage, BigInteger chainId);
    [ExtensionAttribute]
public static List`1<FunctionABI> FindFunctionABIFromTransactionInputData(IABIInfoStorage abiInfoStorage, Transaction transaction);
    [ExtensionAttribute]
public static List`1<FunctionABI> FindFunctionABIFromTransactionInputData(Transaction transaction, IABIInfoStorage abiInfoStorage);
}
[ExtensionAttribute]
public static class Nethereum.Contracts.FunctionOuputDTOExtensions : object {
    private static FunctionCallDecoder _functionCallDecoder;
    private static FunctionOuputDTOExtensions();
    [ExtensionAttribute]
public static TFunctionOutputDTO DecodeOutput(TFunctionOutputDTO functionOuputDTO, string output);
}
public interface Nethereum.Contracts.IContractService {
    public string ContractAddress { get; }
    public ContractHandler ContractHandler { get; public set; }
    public abstract virtual string get_ContractAddress();
    public abstract virtual ContractHandler get_ContractHandler();
    public abstract virtual void set_ContractHandler(ContractHandler value);
    public abstract virtual SmartContractCustomErrorRevertExceptionErrorABI FindCustomErrorException(SmartContractCustomErrorRevertException exception);
    public abstract virtual List`1<ErrorABI> GetAllErrorABIs();
    public abstract virtual String[] GetAllErrorsSignatures();
    public abstract virtual List`1<Type> GetAllErrorTypes();
    public abstract virtual List`1<EventABI> GetAllEventABIs();
    public abstract virtual String[] GetAllEventsSignatures();
    public abstract virtual List`1<Type> GetAllEventTypes();
    public abstract virtual List`1<FunctionABI> GetAllFunctionABIs();
    public abstract virtual String[] GetAllFunctionSignatures();
    public abstract virtual List`1<Type> GetAllFunctionTypes();
    public abstract virtual void HandleCustomErrorException(SmartContractCustomErrorRevertException exception);
}
public class Nethereum.Contracts.Identity.ProofOfHumanity.ContractDefinition.AddSubmissionEventDTO : AddSubmissionEventDTOBase {
}
[EventAttribute("AddSubmission")]
public class Nethereum.Contracts.Identity.ProofOfHumanity.ContractDefinition.AddSubmissionEventDTOBase : object {
    [CompilerGeneratedAttribute]
private string <SubmissionID>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <RequestID>k__BackingField;
    [ParameterAttribute("address", "_submissionID", "1", "True")]
public string SubmissionID { get; public set; }
    [ParameterAttribute("uint256", "_requestID", "2", "False")]
public BigInteger RequestID { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_SubmissionID();
    [CompilerGeneratedAttribute]
public virtual void set_SubmissionID(string value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_RequestID();
    [CompilerGeneratedAttribute]
public virtual void set_RequestID(BigInteger value);
}
public class Nethereum.Contracts.Identity.ProofOfHumanity.ContractDefinition.AppealContributionEventDTO : AppealContributionEventDTOBase {
}
[EventAttribute("AppealContribution")]
public class Nethereum.Contracts.Identity.ProofOfHumanity.ContractDefinition.AppealContributionEventDTOBase : object {
    [CompilerGeneratedAttribute]
private string <SubmissionID>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <ChallengeID>k__BackingField;
    [CompilerGeneratedAttribute]
private byte <Party>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Contributor>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <Amount>k__BackingField;
    [ParameterAttribute("address", "_submissionID", "1", "True")]
public string SubmissionID { get; public set; }
    [ParameterAttribute("uint256", "_challengeID", "2", "True")]
public BigInteger ChallengeID { get; public set; }
    [ParameterAttribute("uint8", "_party", "3", "False")]
public byte Party { get; public set; }
    [ParameterAttribute("address", "_contributor", "4", "True")]
public string Contributor { get; public set; }
    [ParameterAttribute("uint256", "_amount", "5", "False")]
public BigInteger Amount { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_SubmissionID();
    [CompilerGeneratedAttribute]
public virtual void set_SubmissionID(string value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_ChallengeID();
    [CompilerGeneratedAttribute]
public virtual void set_ChallengeID(BigInteger value);
    [CompilerGeneratedAttribute]
public virtual byte get_Party();
    [CompilerGeneratedAttribute]
public virtual void set_Party(byte value);
    [CompilerGeneratedAttribute]
public virtual string get_Contributor();
    [CompilerGeneratedAttribute]
public virtual void set_Contributor(string value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_Amount();
    [CompilerGeneratedAttribute]
public virtual void set_Amount(BigInteger value);
}
public class Nethereum.Contracts.Identity.ProofOfHumanity.ContractDefinition.ArbitratorCompleteEventDTO : ArbitratorCompleteEventDTOBase {
}
[EventAttribute("ArbitratorComplete")]
public class Nethereum.Contracts.Identity.ProofOfHumanity.ContractDefinition.ArbitratorCompleteEventDTOBase : object {
    [CompilerGeneratedAttribute]
private string <Arbitrator>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Governor>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <SubmissionBaseDeposit>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <SubmissionDuration>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <ChallengePeriodDuration>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <RequiredNumberOfVouches>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <SharedStakeMultiplier>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <WinnerStakeMultiplier>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <LoserStakeMultiplier>k__BackingField;
    [ParameterAttribute("address", "_arbitrator", "1", "False")]
public string Arbitrator { get; public set; }
    [ParameterAttribute("address", "_governor", "2", "True")]
public string Governor { get; public set; }
    [ParameterAttribute("uint256", "_submissionBaseDeposit", "3", "False")]
public BigInteger SubmissionBaseDeposit { get; public set; }
    [ParameterAttribute("uint256", "_submissionDuration", "4", "False")]
public BigInteger SubmissionDuration { get; public set; }
    [ParameterAttribute("uint256", "_challengePeriodDuration", "5", "False")]
public BigInteger ChallengePeriodDuration { get; public set; }
    [ParameterAttribute("uint256", "_requiredNumberOfVouches", "6", "False")]
public BigInteger RequiredNumberOfVouches { get; public set; }
    [ParameterAttribute("uint256", "_sharedStakeMultiplier", "7", "False")]
public BigInteger SharedStakeMultiplier { get; public set; }
    [ParameterAttribute("uint256", "_winnerStakeMultiplier", "8", "False")]
public BigInteger WinnerStakeMultiplier { get; public set; }
    [ParameterAttribute("uint256", "_loserStakeMultiplier", "9", "False")]
public BigInteger LoserStakeMultiplier { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Arbitrator();
    [CompilerGeneratedAttribute]
public virtual void set_Arbitrator(string value);
    [CompilerGeneratedAttribute]
public virtual string get_Governor();
    [CompilerGeneratedAttribute]
public virtual void set_Governor(string value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_SubmissionBaseDeposit();
    [CompilerGeneratedAttribute]
public virtual void set_SubmissionBaseDeposit(BigInteger value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_SubmissionDuration();
    [CompilerGeneratedAttribute]
public virtual void set_SubmissionDuration(BigInteger value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_ChallengePeriodDuration();
    [CompilerGeneratedAttribute]
public virtual void set_ChallengePeriodDuration(BigInteger value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_RequiredNumberOfVouches();
    [CompilerGeneratedAttribute]
public virtual void set_RequiredNumberOfVouches(BigInteger value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_SharedStakeMultiplier();
    [CompilerGeneratedAttribute]
public virtual void set_SharedStakeMultiplier(BigInteger value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_WinnerStakeMultiplier();
    [CompilerGeneratedAttribute]
public virtual void set_WinnerStakeMultiplier(BigInteger value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_LoserStakeMultiplier();
    [CompilerGeneratedAttribute]
public virtual void set_LoserStakeMultiplier(BigInteger value);
}
public class Nethereum.Contracts.Identity.ProofOfHumanity.ContractDefinition.ChallengeResolvedEventDTO : ChallengeResolvedEventDTOBase {
}
[EventAttribute("ChallengeResolved")]
public class Nethereum.Contracts.Identity.ProofOfHumanity.ContractDefinition.ChallengeResolvedEventDTOBase : object {
    [CompilerGeneratedAttribute]
private string <SubmissionID>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <RequestID>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <ChallengeID>k__BackingField;
    [ParameterAttribute("address", "_submissionID", "1", "True")]
public string SubmissionID { get; public set; }
    [ParameterAttribute("uint256", "_requestID", "2", "True")]
public BigInteger RequestID { get; public set; }
    [ParameterAttribute("uint256", "_challengeID", "3", "False")]
public BigInteger ChallengeID { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_SubmissionID();
    [CompilerGeneratedAttribute]
public virtual void set_SubmissionID(string value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_RequestID();
    [CompilerGeneratedAttribute]
public virtual void set_RequestID(BigInteger value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_ChallengeID();
    [CompilerGeneratedAttribute]
public virtual void set_ChallengeID(BigInteger value);
}
public class Nethereum.Contracts.Identity.ProofOfHumanity.ContractDefinition.DisputeEventDTO : DisputeEventDTOBase {
}
[EventAttribute("Dispute")]
public class Nethereum.Contracts.Identity.ProofOfHumanity.ContractDefinition.DisputeEventDTOBase : object {
    [CompilerGeneratedAttribute]
private string <Arbitrator>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <DisputeID>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <MetaEvidenceID>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <EvidenceGroupID>k__BackingField;
    [ParameterAttribute("address", "_arbitrator", "1", "True")]
public string Arbitrator { get; public set; }
    [ParameterAttribute("uint256", "_disputeID", "2", "True")]
public BigInteger DisputeID { get; public set; }
    [ParameterAttribute("uint256", "_metaEvidenceID", "3", "False")]
public BigInteger MetaEvidenceID { get; public set; }
    [ParameterAttribute("uint256", "_evidenceGroupID", "4", "False")]
public BigInteger EvidenceGroupID { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Arbitrator();
    [CompilerGeneratedAttribute]
public virtual void set_Arbitrator(string value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_DisputeID();
    [CompilerGeneratedAttribute]
public virtual void set_DisputeID(BigInteger value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_MetaEvidenceID();
    [CompilerGeneratedAttribute]
public virtual void set_MetaEvidenceID(BigInteger value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_EvidenceGroupID();
    [CompilerGeneratedAttribute]
public virtual void set_EvidenceGroupID(BigInteger value);
}
public class Nethereum.Contracts.Identity.ProofOfHumanity.ContractDefinition.EvidenceEventDTO : EvidenceEventDTOBase {
}
[EventAttribute("Evidence")]
public class Nethereum.Contracts.Identity.ProofOfHumanity.ContractDefinition.EvidenceEventDTOBase : object {
    [CompilerGeneratedAttribute]
private string <Arbitrator>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <EvidenceGroupID>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Party>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Evidence>k__BackingField;
    [ParameterAttribute("address", "_arbitrator", "1", "True")]
public string Arbitrator { get; public set; }
    [ParameterAttribute("uint256", "_evidenceGroupID", "2", "True")]
public BigInteger EvidenceGroupID { get; public set; }
    [ParameterAttribute("address", "_party", "3", "True")]
public string Party { get; public set; }
    [ParameterAttribute("string", "_evidence", "4", "False")]
public string Evidence { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Arbitrator();
    [CompilerGeneratedAttribute]
public virtual void set_Arbitrator(string value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_EvidenceGroupID();
    [CompilerGeneratedAttribute]
public virtual void set_EvidenceGroupID(BigInteger value);
    [CompilerGeneratedAttribute]
public virtual string get_Party();
    [CompilerGeneratedAttribute]
public virtual void set_Party(string value);
    [CompilerGeneratedAttribute]
public virtual string get_Evidence();
    [CompilerGeneratedAttribute]
public virtual void set_Evidence(string value);
}
public class Nethereum.Contracts.Identity.ProofOfHumanity.ContractDefinition.HasPaidAppealFeeEventDTO : HasPaidAppealFeeEventDTOBase {
}
[EventAttribute("HasPaidAppealFee")]
public class Nethereum.Contracts.Identity.ProofOfHumanity.ContractDefinition.HasPaidAppealFeeEventDTOBase : object {
    [CompilerGeneratedAttribute]
private string <SubmissionID>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <ChallengeID>k__BackingField;
    [CompilerGeneratedAttribute]
private byte <Side>k__BackingField;
    [ParameterAttribute("address", "_submissionID", "1", "True")]
public string SubmissionID { get; public set; }
    [ParameterAttribute("uint256", "_challengeID", "2", "True")]
public BigInteger ChallengeID { get; public set; }
    [ParameterAttribute("uint8", "_side", "3", "False")]
public byte Side { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_SubmissionID();
    [CompilerGeneratedAttribute]
public virtual void set_SubmissionID(string value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_ChallengeID();
    [CompilerGeneratedAttribute]
public virtual void set_ChallengeID(BigInteger value);
    [CompilerGeneratedAttribute]
public virtual byte get_Side();
    [CompilerGeneratedAttribute]
public virtual void set_Side(byte value);
}
public class Nethereum.Contracts.Identity.ProofOfHumanity.ContractDefinition.IsRegisteredFunction : IsRegisteredFunctionBase {
}
[FunctionAttribute("isRegistered", "bool")]
public class Nethereum.Contracts.Identity.ProofOfHumanity.ContractDefinition.IsRegisteredFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private string <SubmissionID>k__BackingField;
    [ParameterAttribute("address", "_submissionID", "1")]
public string SubmissionID { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_SubmissionID();
    [CompilerGeneratedAttribute]
public virtual void set_SubmissionID(string value);
}
public class Nethereum.Contracts.Identity.ProofOfHumanity.ContractDefinition.IsRegisteredOutputDTO : IsRegisteredOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Identity.ProofOfHumanity.ContractDefinition.IsRegisteredOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private bool <IsRegistered>k__BackingField;
    [ParameterAttribute("bool", "", "1")]
public bool IsRegistered { get; public set; }
    [CompilerGeneratedAttribute]
public virtual bool get_IsRegistered();
    [CompilerGeneratedAttribute]
public virtual void set_IsRegistered(bool value);
}
public class Nethereum.Contracts.Identity.ProofOfHumanity.ContractDefinition.MetaEvidenceEventDTO : MetaEvidenceEventDTOBase {
}
[EventAttribute("MetaEvidence")]
public class Nethereum.Contracts.Identity.ProofOfHumanity.ContractDefinition.MetaEvidenceEventDTOBase : object {
    [CompilerGeneratedAttribute]
private BigInteger <MetaEvidenceID>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Evidence>k__BackingField;
    [ParameterAttribute("uint256", "_metaEvidenceID", "1", "True")]
public BigInteger MetaEvidenceID { get; public set; }
    [ParameterAttribute("string", "_evidence", "2", "False")]
public string Evidence { get; public set; }
    [CompilerGeneratedAttribute]
public virtual BigInteger get_MetaEvidenceID();
    [CompilerGeneratedAttribute]
public virtual void set_MetaEvidenceID(BigInteger value);
    [CompilerGeneratedAttribute]
public virtual string get_Evidence();
    [CompilerGeneratedAttribute]
public virtual void set_Evidence(string value);
}
public class Nethereum.Contracts.Identity.ProofOfHumanity.ContractDefinition.ReapplySubmissionEventDTO : ReapplySubmissionEventDTOBase {
}
[EventAttribute("ReapplySubmission")]
public class Nethereum.Contracts.Identity.ProofOfHumanity.ContractDefinition.ReapplySubmissionEventDTOBase : object {
    [CompilerGeneratedAttribute]
private string <SubmissionID>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <RequestID>k__BackingField;
    [ParameterAttribute("address", "_submissionID", "1", "True")]
public string SubmissionID { get; public set; }
    [ParameterAttribute("uint256", "_requestID", "2", "False")]
public BigInteger RequestID { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_SubmissionID();
    [CompilerGeneratedAttribute]
public virtual void set_SubmissionID(string value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_RequestID();
    [CompilerGeneratedAttribute]
public virtual void set_RequestID(BigInteger value);
}
public class Nethereum.Contracts.Identity.ProofOfHumanity.ContractDefinition.RemoveSubmissionEventDTO : RemoveSubmissionEventDTOBase {
}
[EventAttribute("RemoveSubmission")]
public class Nethereum.Contracts.Identity.ProofOfHumanity.ContractDefinition.RemoveSubmissionEventDTOBase : object {
    [CompilerGeneratedAttribute]
private string <Requester>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SubmissionID>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <RequestID>k__BackingField;
    [ParameterAttribute("address", "_requester", "1", "True")]
public string Requester { get; public set; }
    [ParameterAttribute("address", "_submissionID", "2", "True")]
public string SubmissionID { get; public set; }
    [ParameterAttribute("uint256", "_requestID", "3", "False")]
public BigInteger RequestID { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Requester();
    [CompilerGeneratedAttribute]
public virtual void set_Requester(string value);
    [CompilerGeneratedAttribute]
public virtual string get_SubmissionID();
    [CompilerGeneratedAttribute]
public virtual void set_SubmissionID(string value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_RequestID();
    [CompilerGeneratedAttribute]
public virtual void set_RequestID(BigInteger value);
}
public class Nethereum.Contracts.Identity.ProofOfHumanity.ContractDefinition.RulingEventDTO : RulingEventDTOBase {
}
[EventAttribute("Ruling")]
public class Nethereum.Contracts.Identity.ProofOfHumanity.ContractDefinition.RulingEventDTOBase : object {
    [CompilerGeneratedAttribute]
private string <Arbitrator>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <DisputeID>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <Ruling>k__BackingField;
    [ParameterAttribute("address", "_arbitrator", "1", "True")]
public string Arbitrator { get; public set; }
    [ParameterAttribute("uint256", "_disputeID", "2", "True")]
public BigInteger DisputeID { get; public set; }
    [ParameterAttribute("uint256", "_ruling", "3", "False")]
public BigInteger Ruling { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Arbitrator();
    [CompilerGeneratedAttribute]
public virtual void set_Arbitrator(string value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_DisputeID();
    [CompilerGeneratedAttribute]
public virtual void set_DisputeID(BigInteger value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_Ruling();
    [CompilerGeneratedAttribute]
public virtual void set_Ruling(BigInteger value);
}
public class Nethereum.Contracts.Identity.ProofOfHumanity.ContractDefinition.SubmissionChallengedEventDTO : SubmissionChallengedEventDTOBase {
}
[EventAttribute("SubmissionChallenged")]
public class Nethereum.Contracts.Identity.ProofOfHumanity.ContractDefinition.SubmissionChallengedEventDTOBase : object {
    [CompilerGeneratedAttribute]
private string <SubmissionID>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <RequestID>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <ChallengeID>k__BackingField;
    [ParameterAttribute("address", "_submissionID", "1", "True")]
public string SubmissionID { get; public set; }
    [ParameterAttribute("uint256", "_requestID", "2", "True")]
public BigInteger RequestID { get; public set; }
    [ParameterAttribute("uint256", "_challengeID", "3", "False")]
public BigInteger ChallengeID { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_SubmissionID();
    [CompilerGeneratedAttribute]
public virtual void set_SubmissionID(string value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_RequestID();
    [CompilerGeneratedAttribute]
public virtual void set_RequestID(BigInteger value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_ChallengeID();
    [CompilerGeneratedAttribute]
public virtual void set_ChallengeID(BigInteger value);
}
public class Nethereum.Contracts.Identity.ProofOfHumanity.ContractDefinition.VouchAddedEventDTO : VouchAddedEventDTOBase {
}
[EventAttribute("VouchAdded")]
public class Nethereum.Contracts.Identity.ProofOfHumanity.ContractDefinition.VouchAddedEventDTOBase : object {
    [CompilerGeneratedAttribute]
private string <SubmissionID>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Voucher>k__BackingField;
    [ParameterAttribute("address", "_submissionID", "1", "True")]
public string SubmissionID { get; public set; }
    [ParameterAttribute("address", "_voucher", "2", "True")]
public string Voucher { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_SubmissionID();
    [CompilerGeneratedAttribute]
public virtual void set_SubmissionID(string value);
    [CompilerGeneratedAttribute]
public virtual string get_Voucher();
    [CompilerGeneratedAttribute]
public virtual void set_Voucher(string value);
}
public class Nethereum.Contracts.Identity.ProofOfHumanity.ContractDefinition.VouchRemovedEventDTO : VouchRemovedEventDTOBase {
}
[EventAttribute("VouchRemoved")]
public class Nethereum.Contracts.Identity.ProofOfHumanity.ContractDefinition.VouchRemovedEventDTOBase : object {
    [CompilerGeneratedAttribute]
private string <SubmissionID>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Voucher>k__BackingField;
    [ParameterAttribute("address", "_submissionID", "1", "True")]
public string SubmissionID { get; public set; }
    [ParameterAttribute("address", "_voucher", "2", "True")]
public string Voucher { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_SubmissionID();
    [CompilerGeneratedAttribute]
public virtual void set_SubmissionID(string value);
    [CompilerGeneratedAttribute]
public virtual string get_Voucher();
    [CompilerGeneratedAttribute]
public virtual void set_Voucher(string value);
}
public class Nethereum.Contracts.Identity.ProofOfHumanity.IsRegisteredInfo : object {
    [CompilerGeneratedAttribute]
private string <Address>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsRegistered>k__BackingField;
    public string Address { get; public set; }
    public bool IsRegistered { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Address();
    [CompilerGeneratedAttribute]
public void set_Address(string value);
    [CompilerGeneratedAttribute]
public bool get_IsRegistered();
    [CompilerGeneratedAttribute]
public void set_IsRegistered(bool value);
}
public class Nethereum.Contracts.Identity.ProofOfHumanity.Model.Registration : object {
    [CompilerGeneratedAttribute]
private string <FileUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [JsonPropertyAttribute("fileURI")]
public string FileUri { get; public set; }
    [JsonPropertyAttribute("name")]
public string Name { get; public set; }
    [CompilerGeneratedAttribute]
public string get_FileUri();
    [CompilerGeneratedAttribute]
public void set_FileUri(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
}
public class Nethereum.Contracts.Identity.ProofOfHumanity.Model.RegistrationEvidence : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FirstName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LastName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Bio>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Photo>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Video>k__BackingField;
    [JsonPropertyAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyAttribute("firstName")]
public string FirstName { get; public set; }
    [JsonPropertyAttribute("lastName")]
public string LastName { get; public set; }
    [JsonPropertyAttribute("bio")]
public string Bio { get; public set; }
    [JsonPropertyAttribute("photo")]
public string Photo { get; public set; }
    [JsonPropertyAttribute("video")]
public string Video { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_FirstName();
    [CompilerGeneratedAttribute]
public void set_FirstName(string value);
    [CompilerGeneratedAttribute]
public string get_LastName();
    [CompilerGeneratedAttribute]
public void set_LastName(string value);
    [CompilerGeneratedAttribute]
public string get_Bio();
    [CompilerGeneratedAttribute]
public void set_Bio(string value);
    [CompilerGeneratedAttribute]
public string get_Photo();
    [CompilerGeneratedAttribute]
public void set_Photo(string value);
    [CompilerGeneratedAttribute]
public string get_Video();
    [CompilerGeneratedAttribute]
public void set_Video(string value);
}
public class Nethereum.Contracts.Identity.ProofOfHumanity.ProofOfHumanityContractService : object {
    private IEthApiContractService _ethApiContractService;
    [CompilerGeneratedAttribute]
private string <ContractAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private ContractHandler <ContractHandler>k__BackingField;
    public string ContractAddress { get; }
    public ContractHandler ContractHandler { get; }
    public ProofOfHumanityContractService(IEthApiContractService ethApiContractService, string contractAddress);
    [CompilerGeneratedAttribute]
public string get_ContractAddress();
    [CompilerGeneratedAttribute]
public ContractHandler get_ContractHandler();
    public Task`1<bool> IsRegisteredQueryAsync(IsRegisteredFunction isRegisteredFunction, BlockParameter blockParameter);
    public Task`1<bool> IsRegisteredQueryAsync(string submissionID, BlockParameter blockParameter);
    [AsyncStateMachineAttribute("Nethereum.Contracts.Identity.ProofOfHumanity.ProofOfHumanityContractService/<AreRegisteredQueryUsingMulticallAsync>d__10")]
public Task`1<List`1<IsRegisteredInfo>> AreRegisteredQueryUsingMulticallAsync(IEnumerable`1<string> registeredAddresses, BlockParameter block, int numberOfCallsPerRequest, string multiCallAddress);
    public Task`1<List`1<EventLog`1<EvidenceEventDTO>>> GetEvidenceLogsAsync(string party, BlockParameter fromBlock, BlockParameter toBlock);
    [AsyncStateMachineAttribute("Nethereum.Contracts.Identity.ProofOfHumanity.ProofOfHumanityContractService/<GetLatestEvidenceLogAsync>d__12")]
public Task`1<EventLog`1<EvidenceEventDTO>> GetLatestEvidenceLogAsync(string party, BlockParameter fromBlock, BlockParameter toBlock);
    public Task`1<List`1<EventLog`1<EvidenceEventDTO>>> GetEvidenceLogsAsync(string arbitrator, BigInteger evidenceGroupId, string party, BlockParameter fromBlock, BlockParameter toBlock);
    public Task`1<Registration> GetRegistrationFromIpfs(EvidenceEventDTO evidenceEvent, string ipfsGateway);
    public Task`1<Registration> GetRegistrationFromIpfs(string evidencePath, string ipfsGateway);
    public Task`1<RegistrationEvidence> GetRegistrationEvidenceFromIpfs(string registrationEvidencePath, string ipfsGateway);
    public Task`1<RegistrationEvidence> GetRegistrationEvidenceFromIpfs(Registration registration, string ipfsGateway);
    [AsyncStateMachineAttribute("Nethereum.Contracts.Identity.ProofOfHumanity.ProofOfHumanityContractService/<GetRegistrationEvidenceFromIpfs>d__18")]
public Task`1<RegistrationEvidence> GetRegistrationEvidenceFromIpfs(EvidenceEventDTO evidenceEventDTO, string ipfsGateway);
    [AsyncStateMachineAttribute("Nethereum.Contracts.Identity.ProofOfHumanity.ProofOfHumanityContractService/<GetJsonObjectFromIpfsGateway>d__19`1")]
internal Task`1<T> GetJsonObjectFromIpfsGateway(string relativePath, bool addIpfsSuffix, string ipfsGateway);
}
public class Nethereum.Contracts.Identity.ProofOfHumanity.ProofOfHumanityService : object {
    private IEthApiContractService _ethApiContractService;
    public ProofOfHumanityService(IEthApiContractService ethApiContractService);
    public ProofOfHumanityContractService GetContractService(string contractAddress);
}
public interface Nethereum.Contracts.IDeployContract {
    public ITransactionManager TransactionManager { get; public set; }
    public abstract virtual ITransactionManager get_TransactionManager();
    public abstract virtual void set_TransactionManager(ITransactionManager value);
    public abstract virtual string GetData(string contractByteCode, string abi, Object[] values);
    public abstract virtual string GetData(string contractByteCode, TConstructorParams inputParams);
    public abstract virtual Task`1<HexBigInteger> EstimateGasAsync(string abi, string contractByteCode, string from, Object[] values);
    public abstract virtual Task`1<HexBigInteger> EstimateGasAsync(string contractByteCode, string from, HexBigInteger gas, HexBigInteger value, TConstructorParams inputParams);
    public abstract virtual Task`1<HexBigInteger> EstimateGasAsync(string contractByteCode, string from, HexBigInteger gas, TConstructorParams inputParams);
    public abstract virtual Task`1<HexBigInteger> EstimateGasAsync(string contractByteCode, string from, TConstructorParams inputParams);
    public abstract virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(string contractByteCode, string from, CancellationToken receiptRequestCancellationToken);
    public abstract virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(string contractByteCode, string from, HexBigInteger gas, CancellationToken receiptRequestCancellationToken);
    public abstract virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(string contractByteCode, string from, HexBigInteger gas, HexBigInteger value, CancellationToken receiptRequestCancellationToken);
    public abstract virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(string contractByteCode, string from, HexBigInteger gas, HexBigInteger gasPrice, HexBigInteger value, CancellationToken receiptRequestCancellationToken);
    public abstract virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(string abi, string contractByteCode, string from, CancellationToken receiptRequestCancellationToken, Object[] values);
    public abstract virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(string abi, string contractByteCode, string from, HexBigInteger gas, CancellationToken receiptRequestCancellationToken, Object[] values);
    public abstract virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(string abi, string contractByteCode, string from, HexBigInteger gas, HexBigInteger value, CancellationToken receiptRequestCancellationToken, Object[] values);
    public abstract virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(string abi, string contractByteCode, string from, HexBigInteger gas, HexBigInteger gasPrice, HexBigInteger value, CancellationToken receiptRequestCancellationToken, Object[] values);
    public abstract virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(string contractByteCode, string from, HexBigInteger gas, HexBigInteger gasPrice, HexBigInteger value, HexBigInteger nonce, TConstructorParams inputParams, CancellationToken receiptRequestCancellationToken);
    public abstract virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(string contractByteCode, string from, HexBigInteger gas, HexBigInteger gasPrice, HexBigInteger value, TConstructorParams inputParams, CancellationToken receiptRequestCancellationToken);
    public abstract virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(string contractByteCode, string from, HexBigInteger gas, TConstructorParams inputParams, CancellationToken receiptRequestCancellationToken);
    public abstract virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(string contractByteCode, string from, TConstructorParams inputParams, CancellationToken receiptRequestCancellationToken);
    public abstract virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(string contractByteCode, string from, CancellationTokenSource receiptRequestCancellationToken);
    public abstract virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(string contractByteCode, string from, HexBigInteger gas, CancellationTokenSource receiptRequestCancellationToken);
    public abstract virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(string contractByteCode, string from, HexBigInteger gas, HexBigInteger value, CancellationTokenSource receiptRequestCancellationToken);
    public abstract virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(string contractByteCode, string from, HexBigInteger gas, HexBigInteger gasPrice, HexBigInteger value, CancellationTokenSource receiptRequestCancellationToken);
    public abstract virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(string abi, string contractByteCode, string from, CancellationTokenSource receiptRequestCancellationToken, Object[] values);
    public abstract virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(string abi, string contractByteCode, string from, HexBigInteger gas, CancellationTokenSource receiptRequestCancellationToken, Object[] values);
    public abstract virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(string abi, string contractByteCode, string from, HexBigInteger gas, HexBigInteger value, CancellationTokenSource receiptRequestCancellationToken, Object[] values);
    public abstract virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(string abi, string contractByteCode, string from, HexBigInteger gas, HexBigInteger gasPrice, HexBigInteger value, CancellationTokenSource receiptRequestCancellationToken, Object[] values);
    public abstract virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(string contractByteCode, string from, HexBigInteger gas, HexBigInteger gasPrice, HexBigInteger value, HexBigInteger nonce, TConstructorParams inputParams, CancellationTokenSource receiptRequestCancellationToken);
    public abstract virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(string contractByteCode, string from, HexBigInteger gas, HexBigInteger gasPrice, HexBigInteger value, TConstructorParams inputParams, CancellationTokenSource receiptRequestCancellationToken);
    public abstract virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(string contractByteCode, string from, HexBigInteger gas, TConstructorParams inputParams, CancellationTokenSource receiptRequestCancellationToken);
    public abstract virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(string contractByteCode, string from, TConstructorParams inputParams, CancellationTokenSource receiptRequestCancellationToken);
    public abstract virtual Task`1<string> SendRequestAsync(string contractByteCode, string from);
    public abstract virtual Task`1<string> SendRequestAsync(string contractByteCode, string from, HexBigInteger gas);
    public abstract virtual Task`1<string> SendRequestAsync(string contractByteCode, string from, HexBigInteger gas, HexBigInteger value);
    public abstract virtual Task`1<string> SendRequestAsync(string contractByteCode, string from, HexBigInteger gas, HexBigInteger gasPrice, HexBigInteger value);
    public abstract virtual Task`1<string> SendRequestAsync(string abi, string contractByteCode, string from, HexBigInteger gas, HexBigInteger gasPrice, HexBigInteger value, HexBigInteger nonce, Object[] values);
    public abstract virtual Task`1<string> SendRequestAsync(string abi, string contractByteCode, string from, HexBigInteger gas, HexBigInteger gasPrice, HexBigInteger value, Object[] values);
    public abstract virtual Task`1<string> SendRequestAsync(string abi, string contractByteCode, string from, HexBigInteger gas, HexBigInteger value, Object[] values);
    public abstract virtual Task`1<string> SendRequestAsync(string abi, string contractByteCode, string from, HexBigInteger gas, Object[] values);
    public abstract virtual Task`1<string> SendRequestAsync(string abi, string contractByteCode, string from, Object[] values);
    public abstract virtual Task`1<string> SendRequestAsync(string contractByteCode, string from, HexBigInteger gas, HexBigInteger gasPrice, HexBigInteger value, HexBigInteger nonce, TConstructorParams inputParams);
    public abstract virtual Task`1<string> SendRequestAsync(string contractByteCode, string from, HexBigInteger gas, HexBigInteger gasPrice, HexBigInteger value, TConstructorParams inputParams);
    public abstract virtual Task`1<string> SendRequestAsync(string contractByteCode, string from, HexBigInteger gas, TConstructorParams inputParams);
    public abstract virtual Task`1<string> SendRequestAsync(string contractByteCode, string from, TConstructorParams inputParams);
    public abstract virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(string contractByteCode, string from, HexBigInteger gas, HexBigInteger maxFeePerGas, HexBigInteger maxPriorityFeePerGas, HexBigInteger value, HexBigInteger nonce, TConstructorParams inputParams, CancellationToken receiptRequestCancellationToken);
    public abstract virtual Task`1<TransactionReceipt> SendRequestAndWaitForReceiptAsync(HexBigInteger type, string contractByteCode, string from, HexBigInteger gas, HexBigInteger maxFeePerGas, HexBigInteger maxPriorityFeePerGas, HexBigInteger value, HexBigInteger nonce, TConstructorParams inputParams, CancellationToken receiptRequestCancellationToken);
    public abstract virtual Task`1<string> SendRequestAsync(string contractByteCode, string from, HexBigInteger gas, HexBigInteger maxFeePerGas, HexBigInteger maxPriorityFeePerGas, HexBigInteger value, HexBigInteger nonce, TConstructorParams inputParams);
    public abstract virtual Task`1<string> SendRequestAsync(HexBigInteger type, string contractByteCode, string from, HexBigInteger gas, HexBigInteger maxFeePerGas, HexBigInteger maxPriorityFeePerGas, HexBigInteger value, HexBigInteger nonce, TConstructorParams inputParams);
    public abstract virtual Task`1<string> SendRequestAsync(string abi, string contractByteCode, string from, HexBigInteger gas, HexBigInteger maxFeePerGas, HexBigInteger maxPriorityFeePerGas, HexBigInteger value, HexBigInteger nonce, Object[] values);
    public abstract virtual Task`1<string> SendRequestAsync(HexBigInteger type, string abi, string contractByteCode, string from, HexBigInteger gas, HexBigInteger maxFeePerGas, HexBigInteger maxPriorityFeePerGas, HexBigInteger value, HexBigInteger nonce, Object[] values);
    public abstract virtual Task`1<string> SendRequestAsync(string contractByteCode, string from, HexBigInteger gas, HexBigInteger maxFeePerGas, HexBigInteger maxPriorityFeePerGas, HexBigInteger value, HexBigInteger nonce);
    public abstract virtual Task`1<string> SendRequestAsync(HexBigInteger type, string contractByteCode, string from, HexBigInteger gas, HexBigInteger maxFeePerGas, HexBigInteger maxPriorityFeePerGas, HexBigInteger value, HexBigInteger nonce);
}
public interface Nethereum.Contracts.IEventLog {
    public FilterLog Log { get; }
    public abstract virtual FilterLog get_Log();
}
public interface Nethereum.Contracts.IMulticallInput {
    public string Target { get; public set; }
    public BigInteger Value { get; public set; }
    public abstract virtual string get_Target();
    public abstract virtual void set_Target(string value);
    public abstract virtual Byte[] GetCallData();
    public abstract virtual BigInteger get_Value();
    public abstract virtual void set_Value(BigInteger value);
}
public interface Nethereum.Contracts.IMulticallInputOutput {
    public bool Success { get; public set; }
    public bool AllowFailure { get; public set; }
    public abstract virtual void Decode(Byte[] output);
    public abstract virtual bool get_Success();
    public abstract virtual void set_Success(bool value);
    public abstract virtual bool get_AllowFailure();
    public abstract virtual void set_AllowFailure(bool value);
}
public class Nethereum.Contracts.MessageEncodingServices.DeploymentMessageEncodingService`1 : object {
    [CompilerGeneratedAttribute]
private DeployContractTransactionBuilder <DeployContractTransactionBuilder>k__BackingField;
    [CompilerGeneratedAttribute]
private ConstructorCallDecoder <ConstructorCallDecoder>k__BackingField;
    [CompilerGeneratedAttribute]
private ByteCodeSwarmExtractor <ByteCodeSwarmExtractor>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DefaultAddressFrom>k__BackingField;
    protected DeployContractTransactionBuilder DeployContractTransactionBuilder { get; protected set; }
    protected ConstructorCallDecoder ConstructorCallDecoder { get; protected set; }
    protected ByteCodeSwarmExtractor ByteCodeSwarmExtractor { get; protected set; }
    public string DefaultAddressFrom { get; public set; }
    public DeploymentMessageEncodingService`1(string defaultAddressFrom);
    [CompilerGeneratedAttribute]
protected DeployContractTransactionBuilder get_DeployContractTransactionBuilder();
    [CompilerGeneratedAttribute]
protected void set_DeployContractTransactionBuilder(DeployContractTransactionBuilder value);
    [CompilerGeneratedAttribute]
protected ConstructorCallDecoder get_ConstructorCallDecoder();
    [CompilerGeneratedAttribute]
protected void set_ConstructorCallDecoder(ConstructorCallDecoder value);
    [CompilerGeneratedAttribute]
protected ByteCodeSwarmExtractor get_ByteCodeSwarmExtractor();
    [CompilerGeneratedAttribute]
protected void set_ByteCodeSwarmExtractor(ByteCodeSwarmExtractor value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_DefaultAddressFrom();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DefaultAddressFrom(string value);
    public sealed virtual TransactionInput CreateTransactionInput(TContractDeployment contractMessage);
    public string GetDeploymentData(TContractDeployment contractMessage, ByteCodeLibrary[] byteCodeLibraries);
    public string GetDeploymentData(TContractDeployment contractMessage);
    public Byte[] GetDeploymentDataHash(TContractDeployment contractMessage);
    public sealed virtual CallInput CreateCallInput(TContractDeployment contractMessage);
    public TContractDeployment DecodeInput(TContractDeployment contractMessage, string data);
    public TContractDeployment DecodeTransaction(TContractDeployment contractMessageOutput, Transaction transactionInput);
    public string GetSwarmAddressFromByteCode(TContractDeployment contractMessageOutput);
    public bool HasASwarmAddressTheByteCode(TContractDeployment contractMessageOutput);
}
public class Nethereum.Contracts.MessageEncodingServices.FunctionMessageEncodingService`1 : object {
    [CompilerGeneratedAttribute]
private FunctionBuilder`1<TContractFunction> <FunctionBuilder>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DefaultAddressFrom>k__BackingField;
    protected FunctionBuilder`1<TContractFunction> FunctionBuilder { get; protected set; }
    public string ContractAddress { get; }
    public string DefaultAddressFrom { get; public set; }
    public FunctionMessageEncodingService`1(string contractAddress, string defaultAddressFrom);
    [CompilerGeneratedAttribute]
protected FunctionBuilder`1<TContractFunction> get_FunctionBuilder();
    [CompilerGeneratedAttribute]
protected void set_FunctionBuilder(FunctionBuilder`1<TContractFunction> value);
    public sealed virtual string get_ContractAddress();
    [CompilerGeneratedAttribute]
public sealed virtual string get_DefaultAddressFrom();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DefaultAddressFrom(string value);
    public sealed virtual void SetContractAddress(string address);
    public sealed virtual Byte[] GetCallData(TContractFunction contractMessage);
    public Byte[] GetCallDataHash(TContractFunction contractMessage);
    public sealed virtual CallInput CreateCallInput(TContractFunction contractMessage);
    public sealed virtual TransactionInput CreateTransactionInput(TContractFunction contractMessage);
    public bool IsTransactionForFunction(Transaction transaction);
    public TContractFunction DecodeTransactionInput(TContractFunction contractMessageOutput, Transaction transaction);
    public sealed virtual TReturn DecodeSimpleTypeOutput(string output);
    public sealed virtual TReturn DecodeDTOTypeOutput(string output);
    public sealed virtual TContractFunction DecodeInput(TContractFunction function, string data);
}
public interface Nethereum.Contracts.MessageEncodingServices.IContractMessageTransactionInputCreator`1 {
    public abstract virtual TransactionInput CreateTransactionInput(TContractMessage contractMessage);
    public abstract virtual CallInput CreateCallInput(TContractMessage contractMessage);
}
public interface Nethereum.Contracts.MessageEncodingServices.IDefaultAddressService {
    public string DefaultAddressFrom { get; public set; }
    public abstract virtual string get_DefaultAddressFrom();
    public abstract virtual void set_DefaultAddressFrom(string value);
}
public interface Nethereum.Contracts.MessageEncodingServices.IFunctionMessageEncodingService`1 {
    public string ContractAddress { get; }
    public abstract virtual string get_ContractAddress();
    public abstract virtual CallInput CreateCallInput(TContractFunction contractMessage);
    public abstract virtual TransactionInput CreateTransactionInput(TContractFunction contractMessage);
    public abstract virtual TReturn DecodeDTOTypeOutput(string output);
    public abstract virtual TContractFunction DecodeInput(TContractFunction function, string data);
    public abstract virtual TReturn DecodeSimpleTypeOutput(string output);
    public abstract virtual Byte[] GetCallData(TContractFunction contractMessage);
    public abstract virtual void SetContractAddress(string address);
}
public class Nethereum.Contracts.MulticallInput`1 : object {
    [CompilerGeneratedAttribute]
private BigInteger <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Target>k__BackingField;
    [CompilerGeneratedAttribute]
private TFunctionMessage <Input>k__BackingField;
    public BigInteger Value { get; public set; }
    public string Target { get; public set; }
    public TFunctionMessage Input { get; public set; }
    public MulticallInput`1(TFunctionMessage functionMessage, string contractAddressTarget);
    public MulticallInput`1(TFunctionMessage functionMessage);
    [CompilerGeneratedAttribute]
public sealed virtual BigInteger get_Value();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Value(BigInteger value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Target();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Target(string value);
    [CompilerGeneratedAttribute]
public TFunctionMessage get_Input();
    [CompilerGeneratedAttribute]
public void set_Input(TFunctionMessage value);
    public sealed virtual Byte[] GetCallData();
}
public class Nethereum.Contracts.MulticallInputOutput`2 : MulticallInput`1<TFunctionMessage> {
    [CompilerGeneratedAttribute]
private bool <Success>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowFailure>k__BackingField;
    [CompilerGeneratedAttribute]
private TFunctionOutput <Output>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <RawOutput>k__BackingField;
    public bool Success { get; public set; }
    public bool AllowFailure { get; public set; }
    public TFunctionOutput Output { get; private set; }
    public Byte[] RawOutput { get; private set; }
    public MulticallInputOutput`2(TFunctionMessage functionMessage, string contractAddressTarget);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_Success();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Success(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_AllowFailure();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AllowFailure(bool value);
    [CompilerGeneratedAttribute]
public TFunctionOutput get_Output();
    [CompilerGeneratedAttribute]
private void set_Output(TFunctionOutput value);
    [CompilerGeneratedAttribute]
public Byte[] get_RawOutput();
    [CompilerGeneratedAttribute]
private void set_RawOutput(Byte[] value);
    public sealed virtual void Decode(Byte[] output);
}
public interface Nethereum.Contracts.QueryHandlers.IQueryHandler`2 {
    public abstract virtual Task`1<TOutput> QueryAsync(string contractAddress, TFunctionMessage functionMessage, BlockParameter block);
}
public class Nethereum.Contracts.QueryHandlers.MultiCall.Aggregate3Function : Aggregate3FunctionBase {
}
[FunctionAttribute("aggregate3", "Nethereum.Contracts.QueryHandlers.MultiCall.Aggregate3OutputDTO")]
public class Nethereum.Contracts.QueryHandlers.MultiCall.Aggregate3FunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private List`1<Call3> <Calls>k__BackingField;
    [ParameterAttribute("tuple[]", "calls", "1")]
public List`1<Call3> Calls { get; public set; }
    [CompilerGeneratedAttribute]
public virtual List`1<Call3> get_Calls();
    [CompilerGeneratedAttribute]
public virtual void set_Calls(List`1<Call3> value);
}
public class Nethereum.Contracts.QueryHandlers.MultiCall.Aggregate3OutputDTO : Aggregate3OutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.QueryHandlers.MultiCall.Aggregate3OutputDTOBase : object {
    [CompilerGeneratedAttribute]
private List`1<Result> <ReturnData>k__BackingField;
    [ParameterAttribute("tuple[]", "returnData", "1")]
public List`1<Result> ReturnData { get; public set; }
    [CompilerGeneratedAttribute]
public virtual List`1<Result> get_ReturnData();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnData(List`1<Result> value);
}
public class Nethereum.Contracts.QueryHandlers.MultiCall.Aggregate3ValueFunction : Aggregate3ValueFunctionBase {
}
[FunctionAttribute("aggregate3Value", "Nethereum.Contracts.QueryHandlers.MultiCall.Aggregate3ValueOutputDTO")]
public class Nethereum.Contracts.QueryHandlers.MultiCall.Aggregate3ValueFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private List`1<Call3Value> <Calls>k__BackingField;
    [ParameterAttribute("tuple[]", "calls", "1")]
public List`1<Call3Value> Calls { get; public set; }
    [CompilerGeneratedAttribute]
public virtual List`1<Call3Value> get_Calls();
    [CompilerGeneratedAttribute]
public virtual void set_Calls(List`1<Call3Value> value);
}
public class Nethereum.Contracts.QueryHandlers.MultiCall.Aggregate3ValueOutputDTO : Aggregate3ValueOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.QueryHandlers.MultiCall.Aggregate3ValueOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private List`1<Result> <ReturnData>k__BackingField;
    [ParameterAttribute("tuple[]", "returnData", "1")]
public List`1<Result> ReturnData { get; public set; }
    [CompilerGeneratedAttribute]
public virtual List`1<Result> get_ReturnData();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnData(List`1<Result> value);
}
public class Nethereum.Contracts.QueryHandlers.MultiCall.AggregateFunction : AggregateFunctionBase {
}
[FunctionAttribute("aggregate", "Nethereum.Contracts.QueryHandlers.MultiCall.AggregateOutputDTO")]
public class Nethereum.Contracts.QueryHandlers.MultiCall.AggregateFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private List`1<Call> <Calls>k__BackingField;
    [ParameterAttribute("tuple[]", "calls", "1")]
public List`1<Call> Calls { get; public set; }
    [CompilerGeneratedAttribute]
public virtual List`1<Call> get_Calls();
    [CompilerGeneratedAttribute]
public virtual void set_Calls(List`1<Call> value);
}
public class Nethereum.Contracts.QueryHandlers.MultiCall.AggregateOutputDTO : AggregateOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.QueryHandlers.MultiCall.AggregateOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private BigInteger <BlockNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Byte[]> <ReturnData>k__BackingField;
    [ParameterAttribute("uint256", "blockNumber", "1")]
public BigInteger BlockNumber { get; public set; }
    [ParameterAttribute("bytes[]", "returnData", "2")]
public List`1<Byte[]> ReturnData { get; public set; }
    [CompilerGeneratedAttribute]
public virtual BigInteger get_BlockNumber();
    [CompilerGeneratedAttribute]
public virtual void set_BlockNumber(BigInteger value);
    [CompilerGeneratedAttribute]
public virtual List`1<Byte[]> get_ReturnData();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnData(List`1<Byte[]> value);
}
public class Nethereum.Contracts.QueryHandlers.MultiCall.Call : CallBase {
}
public class Nethereum.Contracts.QueryHandlers.MultiCall.Call3 : Call3Base {
}
public class Nethereum.Contracts.QueryHandlers.MultiCall.Call3Base : object {
    [CompilerGeneratedAttribute]
private string <Target>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowFailure>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <CallData>k__BackingField;
    [ParameterAttribute("address", "target", "1")]
public string Target { get; public set; }
    [ParameterAttribute("bool", "allowFailure", "2")]
public bool AllowFailure { get; public set; }
    [ParameterAttribute("bytes", "callData", "3")]
public Byte[] CallData { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Target();
    [CompilerGeneratedAttribute]
public virtual void set_Target(string value);
    [CompilerGeneratedAttribute]
public virtual bool get_AllowFailure();
    [CompilerGeneratedAttribute]
public virtual void set_AllowFailure(bool value);
    [CompilerGeneratedAttribute]
public virtual Byte[] get_CallData();
    [CompilerGeneratedAttribute]
public virtual void set_CallData(Byte[] value);
}
public class Nethereum.Contracts.QueryHandlers.MultiCall.Call3Value : Call3ValueBase {
}
public class Nethereum.Contracts.QueryHandlers.MultiCall.Call3ValueBase : object {
    [CompilerGeneratedAttribute]
private string <Target>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowFailure>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <CallData>k__BackingField;
    [ParameterAttribute("address", "target", "1")]
public string Target { get; public set; }
    [ParameterAttribute("bool", "allowFailure", "2")]
public bool AllowFailure { get; public set; }
    [ParameterAttribute("uint256", "value", "3")]
public BigInteger Value { get; public set; }
    [ParameterAttribute("bytes", "callData", "4")]
public Byte[] CallData { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Target();
    [CompilerGeneratedAttribute]
public virtual void set_Target(string value);
    [CompilerGeneratedAttribute]
public virtual bool get_AllowFailure();
    [CompilerGeneratedAttribute]
public virtual void set_AllowFailure(bool value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_Value();
    [CompilerGeneratedAttribute]
public virtual void set_Value(BigInteger value);
    [CompilerGeneratedAttribute]
public virtual Byte[] get_CallData();
    [CompilerGeneratedAttribute]
public virtual void set_CallData(Byte[] value);
}
public class Nethereum.Contracts.QueryHandlers.MultiCall.CallBase : object {
    [CompilerGeneratedAttribute]
private string <Target>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <CallData>k__BackingField;
    [ParameterAttribute("address", "target", "1")]
public string Target { get; public set; }
    [ParameterAttribute("bytes", "callData", "2")]
public Byte[] CallData { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Target();
    [CompilerGeneratedAttribute]
public virtual void set_Target(string value);
    [CompilerGeneratedAttribute]
public virtual Byte[] get_CallData();
    [CompilerGeneratedAttribute]
public virtual void set_CallData(Byte[] value);
}
public class Nethereum.Contracts.QueryHandlers.MultiCall.MultiQueryBatchRpcHandler : object {
    public static int DEFAULT_CALLS_PER_REQUEST;
    [CompilerGeneratedAttribute]
private IClient <Client>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DefaultAddressFrom>k__BackingField;
    [CompilerGeneratedAttribute]
private BlockParameter <DefaultBlockParameter>k__BackingField;
    public IClient Client { get; }
    public string DefaultAddressFrom { get; public set; }
    public BlockParameter DefaultBlockParameter { get; public set; }
    public MultiQueryBatchRpcHandler(IClient client, string defaultAddressFrom, BlockParameter defaultBlockParameter);
    [CompilerGeneratedAttribute]
public IClient get_Client();
    [CompilerGeneratedAttribute]
public string get_DefaultAddressFrom();
    [CompilerGeneratedAttribute]
public void set_DefaultAddressFrom(string value);
    [CompilerGeneratedAttribute]
public BlockParameter get_DefaultBlockParameter();
    [CompilerGeneratedAttribute]
public void set_DefaultBlockParameter(BlockParameter value);
    public Task`1<IMulticallInputOutput[]> MultiCallAsync(IMulticallInputOutput[] multiCalls);
    public Task`1<IMulticallInputOutput[]> MultiCallAsync(int pageSize, IMulticallInputOutput[] multiCalls);
    [AsyncStateMachineAttribute("Nethereum.Contracts.QueryHandlers.MultiCall.MultiQueryBatchRpcHandler/<MultiCallAsync>d__15")]
public Task`1<IMulticallInputOutput[]> MultiCallAsync(BlockParameter block, int pageSize, IMulticallInputOutput[] multiCalls);
}
public class Nethereum.Contracts.QueryHandlers.MultiCall.MultiQueryHandler : object {
    public static int DEFAULT_CALLS_PER_REQUEST;
    [CompilerGeneratedAttribute]
private string <ContractAddress>k__BackingField;
    private QueryToDTOHandler`2<AggregateFunction, AggregateOutputDTO> _multiQueryV1ToDtoHandler;
    private QueryToDTOHandler`2<Aggregate3Function, Aggregate3OutputDTO> _multiQueryToDtoHandler;
    private QueryToDTOHandler`2<Aggregate3ValueFunction, Aggregate3ValueOutputDTO> _multiQueryToValueDtoHandler;
    public string ContractAddress { get; public set; }
    public MultiQueryHandler(IClient client, string multiCallContractAdress, string defaultAddressFrom, BlockParameter defaultBlockParameter);
    [CompilerGeneratedAttribute]
public string get_ContractAddress();
    [CompilerGeneratedAttribute]
public void set_ContractAddress(string value);
    public Task`1<IMulticallInputOutput[]> MultiCallV1Async(IMulticallInputOutput[] multiCalls);
    [AsyncStateMachineAttribute("Nethereum.Contracts.QueryHandlers.MultiCall.MultiQueryHandler/<MultiCallV1Async>d__10")]
public Task`1<IMulticallInputOutput[]> MultiCallV1Async(BlockParameter block, IMulticallInputOutput[] multiCalls);
    public Task`1<IMulticallInputOutput[]> MultiCallAsync(IMulticallInputOutput[] multiCalls);
    public Task`1<IMulticallInputOutput[]> MultiCallAsync(int pageSize, IMulticallInputOutput[] multiCalls);
    [AsyncStateMachineAttribute("Nethereum.Contracts.QueryHandlers.MultiCall.MultiQueryHandler/<MultiCallAsync>d__13")]
public Task`1<IMulticallInputOutput[]> MultiCallAsync(BlockParameter block, int pageSize, IMulticallInputOutput[] multiCalls);
}
public class Nethereum.Contracts.QueryHandlers.MultiCall.Result : ResultBase {
}
public class Nethereum.Contracts.QueryHandlers.MultiCall.ResultBase : object {
    [CompilerGeneratedAttribute]
private bool <Success>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <ReturnData>k__BackingField;
    [ParameterAttribute("bool", "success", "1")]
public bool Success { get; public set; }
    [ParameterAttribute("bytes", "returnData", "2")]
public Byte[] ReturnData { get; public set; }
    [CompilerGeneratedAttribute]
public virtual bool get_Success();
    [CompilerGeneratedAttribute]
public virtual void set_Success(bool value);
    [CompilerGeneratedAttribute]
public virtual Byte[] get_ReturnData();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnData(Byte[] value);
}
public abstract class Nethereum.Contracts.QueryHandlers.QueryDecoderBaseHandler`2 : object {
    [CompilerGeneratedAttribute]
private QueryRawHandler`1<TFunctionMessage> <QueryRawHandler>k__BackingField;
    protected QueryRawHandler`1<TFunctionMessage> QueryRawHandler { get; protected set; }
    public string DefaultAddressFrom { get; public set; }
    public QueryDecoderBaseHandler`2(IClient client, string defaultAddressFrom, BlockParameter defaultBlockParameter);
    public QueryDecoderBaseHandler`2(IEthCall ethCall, string defaultAddressFrom, BlockParameter defaultBlockParameter);
    [CompilerGeneratedAttribute]
protected QueryRawHandler`1<TFunctionMessage> get_QueryRawHandler();
    [CompilerGeneratedAttribute]
protected void set_QueryRawHandler(QueryRawHandler`1<TFunctionMessage> value);
    public string get_DefaultAddressFrom();
    public void set_DefaultAddressFrom(string value);
    [AsyncStateMachineAttribute("Nethereum.Contracts.QueryHandlers.QueryDecoderBaseHandler`2/<QueryAsync>d__9")]
public sealed virtual Task`1<TFunctionOutput> QueryAsync(string contractAddress, TFunctionMessage functionMessage, BlockParameter block);
    protected abstract virtual TFunctionOutput DecodeOutput(string output);
}
public abstract class Nethereum.Contracts.QueryHandlers.QueryHandlerBase`1 : object {
    [CompilerGeneratedAttribute]
private IEthCall <EthCall>k__BackingField;
    private ContractCall _contractCall;
    [CompilerGeneratedAttribute]
private string <DefaultAddressFrom>k__BackingField;
    [CompilerGeneratedAttribute]
private BlockParameter <DefaultBlockParameter>k__BackingField;
    [CompilerGeneratedAttribute]
private FunctionMessageEncodingService`1<TFunctionMessage> <FunctionMessageEncodingService>k__BackingField;
    protected IEthCall EthCall { get; protected set; }
    public string DefaultAddressFrom { get; public set; }
    protected BlockParameter DefaultBlockParameter { get; protected set; }
    public FunctionMessageEncodingService`1<TFunctionMessage> FunctionMessageEncodingService { get; }
    protected QueryHandlerBase`1(IEthCall ethCall, string defaultAddressFrom, BlockParameter defaultBlockParameter);
    protected QueryHandlerBase`1(IClient client, string defaultAddressFrom, BlockParameter defaultBlockParameter);
    [CompilerGeneratedAttribute]
protected IEthCall get_EthCall();
    [CompilerGeneratedAttribute]
protected void set_EthCall(IEthCall value);
    [CompilerGeneratedAttribute]
public string get_DefaultAddressFrom();
    [CompilerGeneratedAttribute]
public void set_DefaultAddressFrom(string value);
    [CompilerGeneratedAttribute]
protected BlockParameter get_DefaultBlockParameter();
    [CompilerGeneratedAttribute]
protected void set_DefaultBlockParameter(BlockParameter value);
    [CompilerGeneratedAttribute]
public FunctionMessageEncodingService`1<TFunctionMessage> get_FunctionMessageEncodingService();
    public virtual string GetAccountAddressFrom();
    protected void EnsureInitialiseAddress();
    protected Task`1<string> CallAsync(CallInput callInput, BlockParameter block);
}
public class Nethereum.Contracts.QueryHandlers.QueryRawHandler`1 : QueryHandlerBase`1<TFunctionMessage> {
    public QueryRawHandler`1(IClient client, string defaultAddressFrom, BlockParameter defaultBlockParameter);
    public QueryRawHandler`1(IEthCall ethCall, string defaultAddressFrom, BlockParameter defaultBlockParameter);
    public sealed virtual Task`1<string> QueryAsync(string contractAddress, TFunctionMessage contractFunctionMessage, BlockParameter block);
}
public class Nethereum.Contracts.QueryHandlers.QueryToDTOHandler`2 : QueryDecoderBaseHandler`2<TFunctionMessage, TFunctionOutput> {
    public QueryToDTOHandler`2(IClient client, string defaultAddressFrom, BlockParameter defaultBlockParameter);
    public QueryToDTOHandler`2(IEthCall ethCall, string defaultAddressFrom, BlockParameter defaultBlockParameter);
    protected virtual TFunctionOutput DecodeOutput(string output);
}
public class Nethereum.Contracts.QueryHandlers.QueryToSimpleTypeHandler`2 : QueryDecoderBaseHandler`2<TFunctionMessage, TFunctionOutput> {
    public QueryToSimpleTypeHandler`2(IClient client, string defaultAddressFrom, BlockParameter defaultBlockParameter);
    public QueryToSimpleTypeHandler`2(IEthCall ethCall, string defaultAddressFrom, BlockParameter defaultBlockParameter);
    protected virtual TFunctionOutput DecodeOutput(string output);
}
public class Nethereum.Contracts.Services.EthApiContractService : EthApiService {
    [CompilerGeneratedAttribute]
private ERC20Service <ERC20>k__BackingField;
    [CompilerGeneratedAttribute]
private ERC721Service <ERC721>k__BackingField;
    [CompilerGeneratedAttribute]
private ERC1155Service <ERC1155>k__BackingField;
    [CompilerGeneratedAttribute]
private ERC1271Service <ERC1271>k__BackingField;
    [CompilerGeneratedAttribute]
private ERC6492Service <ERC6492>k__BackingField;
    [CompilerGeneratedAttribute]
private ERC165SupportsInterfaceService <ERC165>k__BackingField;
    [CompilerGeneratedAttribute]
private ERC2535DiamondService <ERC2535Diamond>k__BackingField;
    [CompilerGeneratedAttribute]
private ProofOfHumanityService <ProofOfHumanity>k__BackingField;
    [CompilerGeneratedAttribute]
private Create2DeterministicDeploymentProxyService <Create2DeterministicDeploymentProxyService>k__BackingField;
    [CompilerGeneratedAttribute]
private IEthGetContractTransactionErrorReason <GetContractTransactionErrorReason>k__BackingField;
    public IDeployContract DeployContract { get; }
    public ERC20Service ERC20 { get; private set; }
    public ERC20Service StandardTokenERC20 { get; }
    public ERC721Service ERC721 { get; private set; }
    public ERC721Service NonFungibleTokenERC721 { get; }
    public ERC1155Service ERC1155 { get; private set; }
    public ERC1155Service MultiTokenERC1155 { get; }
    public ERC1271Service ERC1271 { get; private set; }
    public ERC1271Service SignatureValidationContractERC1271 { get; }
    public ERC6492Service SignatureValidationPredeployContractERC6492 { get; }
    public ERC6492Service ERC6492 { get; private set; }
    public ERC165SupportsInterfaceService ERC165 { get; }
    public ERC165SupportsInterfaceService SupportsInterfaceServiceERC165 { get; }
    public ERC2535DiamondService ERC2535Diamond { get; private set; }
    public ProofOfHumanityService ProofOfHumanity { get; private set; }
    public Create2DeterministicDeploymentProxyService Create2DeterministicDeploymentProxyService { get; private set; }
    public IEthGetContractTransactionErrorReason GetContractTransactionErrorReason { get; }
    public EthApiContractService(IClient client);
    public EthApiContractService(IClient client, ITransactionManager transactionManager);
    public sealed virtual IDeployContract get_DeployContract();
    public sealed virtual Contract GetContract(string abi, string contractAddress);
    public sealed virtual Contract GetContract(string contractAddress);
    public sealed virtual Event`1<TEventType> GetEvent();
    public sealed virtual Event`1<TEventType> GetEvent(string contractAddress);
    public sealed virtual ContractHandler GetContractHandler(string contractAddress);
    public sealed virtual IContractDeploymentTransactionHandler`1<TContractDeploymentMessage> GetContractDeploymentHandler();
    public sealed virtual IContractTransactionHandler`1<TContractFunctionMessage> GetContractTransactionHandler();
    public sealed virtual MultiQueryHandler GetMultiQueryHandler(string multiContractAdress);
    public sealed virtual MultiQueryBatchRpcHandler GetMultiQueryBatchRpcHandler();
    [CompilerGeneratedAttribute]
public sealed virtual ERC20Service get_ERC20();
    [CompilerGeneratedAttribute]
private void set_ERC20(ERC20Service value);
    public sealed virtual ERC20Service get_StandardTokenERC20();
    [CompilerGeneratedAttribute]
public sealed virtual ERC721Service get_ERC721();
    [CompilerGeneratedAttribute]
private void set_ERC721(ERC721Service value);
    public sealed virtual ERC721Service get_NonFungibleTokenERC721();
    [CompilerGeneratedAttribute]
public sealed virtual ERC1155Service get_ERC1155();
    [CompilerGeneratedAttribute]
private void set_ERC1155(ERC1155Service value);
    public sealed virtual ERC1155Service get_MultiTokenERC1155();
    [CompilerGeneratedAttribute]
public sealed virtual ERC1271Service get_ERC1271();
    [CompilerGeneratedAttribute]
private void set_ERC1271(ERC1271Service value);
    public sealed virtual ERC1271Service get_SignatureValidationContractERC1271();
    public sealed virtual ERC6492Service get_SignatureValidationPredeployContractERC6492();
    [CompilerGeneratedAttribute]
public sealed virtual ERC6492Service get_ERC6492();
    [CompilerGeneratedAttribute]
private void set_ERC6492(ERC6492Service value);
    [CompilerGeneratedAttribute]
public sealed virtual ERC165SupportsInterfaceService get_ERC165();
    public sealed virtual ERC165SupportsInterfaceService get_SupportsInterfaceServiceERC165();
    [CompilerGeneratedAttribute]
public sealed virtual ERC2535DiamondService get_ERC2535Diamond();
    [CompilerGeneratedAttribute]
private void set_ERC2535Diamond(ERC2535DiamondService value);
    [CompilerGeneratedAttribute]
public sealed virtual ProofOfHumanityService get_ProofOfHumanity();
    [CompilerGeneratedAttribute]
private void set_ProofOfHumanity(ProofOfHumanityService value);
    public sealed virtual ENSService GetEnsService(string ensRegistryAddress, IEnsCCIPService ensCCIPService);
    public sealed virtual EthTLSService GetEnsEthTlsService(string ensRegistryAddress);
    [CompilerGeneratedAttribute]
public sealed virtual Create2DeterministicDeploymentProxyService get_Create2DeterministicDeploymentProxyService();
    [CompilerGeneratedAttribute]
private void set_Create2DeterministicDeploymentProxyService(Create2DeterministicDeploymentProxyService value);
    [CompilerGeneratedAttribute]
public sealed virtual IEthGetContractTransactionErrorReason get_GetContractTransactionErrorReason();
    public sealed virtual IContractQueryHandler`1<TContractFunctionMessage> GetContractQueryHandler();
}
public class Nethereum.Contracts.Services.EthGetContractTransactionErrorReason : object {
    private IEthApiTransactionsService _apiTransactionsService;
    public EthGetContractTransactionErrorReason(IEthApiTransactionsService apiTransactionsService);
    [AsyncStateMachineAttribute("Nethereum.Contracts.Services.EthGetContractTransactionErrorReason/<SendRequestAsync>d__2")]
public sealed virtual Task`1<string> SendRequestAsync(string transactionHash);
}
public interface Nethereum.Contracts.Services.IEthApiContractService {
    public IDeployContract DeployContract { get; }
    public ERC20Service ERC20 { get; }
    public ERC20Service StandardTokenERC20 { get; }
    public IEthGetContractTransactionErrorReason GetContractTransactionErrorReason { get; }
    public ERC721Service ERC721 { get; }
    public ERC721Service NonFungibleTokenERC721 { get; }
    public ERC1155Service ERC1155 { get; }
    public ERC1155Service MultiTokenERC1155 { get; }
    public ERC1271Service ERC1271 { get; }
    public ERC1271Service SignatureValidationContractERC1271 { get; }
    public ProofOfHumanityService ProofOfHumanity { get; }
    public ERC2535DiamondService ERC2535Diamond { get; }
    public Create2DeterministicDeploymentProxyService Create2DeterministicDeploymentProxyService { get; }
    public ERC6492Service ERC6492 { get; }
    public ERC6492Service SignatureValidationPredeployContractERC6492 { get; }
    public ERC165SupportsInterfaceService SupportsInterfaceServiceERC165 { get; }
    public ERC165SupportsInterfaceService ERC165 { get; }
    public abstract virtual IDeployContract get_DeployContract();
    public abstract virtual Contract GetContract(string abi, string contractAddress);
    public abstract virtual Contract GetContract(string contractAddress);
    public abstract virtual Event`1<TEventType> GetEvent();
    public abstract virtual Event`1<TEventType> GetEvent(string contractAddress);
    public abstract virtual IContractDeploymentTransactionHandler`1<TContractDeploymentMessage> GetContractDeploymentHandler();
    public abstract virtual ContractHandler GetContractHandler(string contractAddress);
    public abstract virtual IContractQueryHandler`1<TContractFunctionMessage> GetContractQueryHandler();
    public abstract virtual MultiQueryHandler GetMultiQueryHandler(string multiContractAdress);
    public abstract virtual MultiQueryBatchRpcHandler GetMultiQueryBatchRpcHandler();
    public abstract virtual ERC20Service get_ERC20();
    public abstract virtual ERC20Service get_StandardTokenERC20();
    public abstract virtual IContractTransactionHandler`1<TContractFunctionMessage> GetContractTransactionHandler();
    public abstract virtual IEthGetContractTransactionErrorReason get_GetContractTransactionErrorReason();
    public abstract virtual ERC721Service get_ERC721();
    public abstract virtual ERC721Service get_NonFungibleTokenERC721();
    public abstract virtual ERC1155Service get_ERC1155();
    public abstract virtual ERC1155Service get_MultiTokenERC1155();
    public abstract virtual ERC1271Service get_ERC1271();
    public abstract virtual ERC1271Service get_SignatureValidationContractERC1271();
    public abstract virtual ENSService GetEnsService(string ensRegistryAddress, IEnsCCIPService ensCCIPService);
    public abstract virtual ProofOfHumanityService get_ProofOfHumanity();
    public abstract virtual ERC2535DiamondService get_ERC2535Diamond();
    public abstract virtual EthTLSService GetEnsEthTlsService(string ensRegistryAddress);
    public abstract virtual Create2DeterministicDeploymentProxyService get_Create2DeterministicDeploymentProxyService();
    public abstract virtual ERC6492Service get_ERC6492();
    public abstract virtual ERC6492Service get_SignatureValidationPredeployContractERC6492();
    public abstract virtual ERC165SupportsInterfaceService get_SupportsInterfaceServiceERC165();
    public abstract virtual ERC165SupportsInterfaceService get_ERC165();
}
public interface Nethereum.Contracts.Services.IEthGetContractTransactionErrorReason {
    public abstract virtual Task`1<string> SendRequestAsync(string transactionHash);
}
public class Nethereum.Contracts.SmartContractCustomErrorRevertException : Exception {
    private static string ERROR_PREFIX;
    [CompilerGeneratedAttribute]
private string <ExceptionEncodedData>k__BackingField;
    public string ExceptionEncodedData { get; public set; }
    public SmartContractCustomErrorRevertException(string encodedData);
    [CompilerGeneratedAttribute]
public string get_ExceptionEncodedData();
    [CompilerGeneratedAttribute]
public void set_ExceptionEncodedData(string value);
    public List`1<ParameterOutput> DecodeErrorToDefault(ErrorABI errorABI);
    public string DecodeErrorToDefaultString(ErrorABI errorABI);
    public bool IsCustomErrorFor(ErrorABI errorAbi);
    public bool IsCustomErrorFor();
    public bool IsCustomErrorFor(Type errorType);
    public TError DecodeError();
}
public class Nethereum.Contracts.SmartContractCustomErrorRevertException`1 : Exception {
    [CompilerGeneratedAttribute]
private TCustomError <CustomError>k__BackingField;
    [CompilerGeneratedAttribute]
private SmartContractCustomErrorRevertException <InnerCustomErrorRevert>k__BackingField;
    public TCustomError CustomError { get; }
    public SmartContractCustomErrorRevertException InnerCustomErrorRevert { get; }
    public SmartContractCustomErrorRevertException`1(TCustomError customError, SmartContractCustomErrorRevertException innerCustomErrorRevert);
    [CompilerGeneratedAttribute]
public TCustomError get_CustomError();
    [CompilerGeneratedAttribute]
public SmartContractCustomErrorRevertException get_InnerCustomErrorRevert();
}
public class Nethereum.Contracts.SmartContractCustomErrorRevertExceptionErrorABI : Exception {
    private static string ERROR_PREFIX;
    [CompilerGeneratedAttribute]
private string <ExceptionEncodedData>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DecodedError>k__BackingField;
    [CompilerGeneratedAttribute]
private ErrorABI <ErrorABI>k__BackingField;
    public string ExceptionEncodedData { get; }
    public string DecodedError { get; }
    public ErrorABI ErrorABI { get; }
    public SmartContractCustomErrorRevertExceptionErrorABI(string encodedData, ErrorABI errorABI);
    [CompilerGeneratedAttribute]
public string get_ExceptionEncodedData();
    [CompilerGeneratedAttribute]
public string get_DecodedError();
    [CompilerGeneratedAttribute]
public ErrorABI get_ErrorABI();
    private static string DecodeErrorToDefaultString(ErrorABI errorABI, string exceptionEncodedData);
}
public enum Nethereum.Contracts.Standards.ENS.AbiTypeContentType : Enum {
    public int value__;
    public static AbiTypeContentType JSON;
    public static AbiTypeContentType Zlib_JSON;
    public static AbiTypeContentType CBOR;
    public static AbiTypeContentType Url;
}
public class Nethereum.Contracts.Standards.ENS.EnsCCIPService : object {
    [AsyncStateMachineAttribute("Nethereum.Contracts.Standards.ENS.EnsCCIPService/<ResolveCCIPRead>d__0")]
public sealed virtual Task`1<Byte[]> ResolveCCIPRead(OffchainResolverService offchainResolver, OffchainLookupError offchainLookup, int maxLookupRedirects);
    [AsyncStateMachineAttribute("Nethereum.Contracts.Standards.ENS.EnsCCIPService/<HttpGet>d__3`1")]
public virtual Task`1<T> HttpGet(string url);
    [AsyncStateMachineAttribute("Nethereum.Contracts.Standards.ENS.EnsCCIPService/<HttpPost>d__4`2")]
public virtual Task`1<TResponse> HttpPost(string url, TRequest request);
    public static string BuildCCIPReadUrl(string url, string sender, string dataInHex);
}
public class Nethereum.Contracts.Standards.ENS.ENSRegistry.ContractDefinition.NewOwnerEventDTO : NewOwnerEventDTOBase {
}
[EventAttribute("NewOwner")]
public class Nethereum.Contracts.Standards.ENS.ENSRegistry.ContractDefinition.NewOwnerEventDTOBase : object {
    [CompilerGeneratedAttribute]
private Byte[] <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <Label>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Owner>k__BackingField;
    [ParameterAttribute("bytes32", "node", "1", "True")]
public Byte[] Node { get; public set; }
    [ParameterAttribute("bytes32", "label", "2", "True")]
public Byte[] Label { get; public set; }
    [ParameterAttribute("address", "owner", "3", "False")]
public string Owner { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Node();
    [CompilerGeneratedAttribute]
public virtual void set_Node(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Label();
    [CompilerGeneratedAttribute]
public virtual void set_Label(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual string get_Owner();
    [CompilerGeneratedAttribute]
public virtual void set_Owner(string value);
}
public class Nethereum.Contracts.Standards.ENS.ENSRegistry.ContractDefinition.NewResolverEventDTO : NewResolverEventDTOBase {
}
[EventAttribute("NewResolver")]
public class Nethereum.Contracts.Standards.ENS.ENSRegistry.ContractDefinition.NewResolverEventDTOBase : object {
    [CompilerGeneratedAttribute]
private Byte[] <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Resolver>k__BackingField;
    [ParameterAttribute("bytes32", "node", "1", "True")]
public Byte[] Node { get; public set; }
    [ParameterAttribute("address", "resolver", "2", "False")]
public string Resolver { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Node();
    [CompilerGeneratedAttribute]
public virtual void set_Node(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual string get_Resolver();
    [CompilerGeneratedAttribute]
public virtual void set_Resolver(string value);
}
public class Nethereum.Contracts.Standards.ENS.ENSRegistry.ContractDefinition.NewTTLEventDTO : NewTTLEventDTOBase {
}
[EventAttribute("NewTTL")]
public class Nethereum.Contracts.Standards.ENS.ENSRegistry.ContractDefinition.NewTTLEventDTOBase : object {
    [CompilerGeneratedAttribute]
private Byte[] <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private ulong <Ttl>k__BackingField;
    [ParameterAttribute("bytes32", "node", "1", "True")]
public Byte[] Node { get; public set; }
    [ParameterAttribute("uint64", "ttl", "2", "False")]
public ulong Ttl { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Node();
    [CompilerGeneratedAttribute]
public virtual void set_Node(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual ulong get_Ttl();
    [CompilerGeneratedAttribute]
public virtual void set_Ttl(ulong value);
}
public class Nethereum.Contracts.Standards.ENS.ENSRegistry.ContractDefinition.OwnerFunction : OwnerFunctionBase {
}
[FunctionAttribute("owner", "address")]
public class Nethereum.Contracts.Standards.ENS.ENSRegistry.ContractDefinition.OwnerFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private Byte[] <Node>k__BackingField;
    [ParameterAttribute("bytes32", "node", "1")]
public Byte[] Node { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Node();
    [CompilerGeneratedAttribute]
public virtual void set_Node(Byte[] value);
}
public class Nethereum.Contracts.Standards.ENS.ENSRegistry.ContractDefinition.OwnerOutputDTO : OwnerOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ENS.ENSRegistry.ContractDefinition.OwnerOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private string <ReturnValue1>k__BackingField;
    [ParameterAttribute("address", "", "1")]
public string ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(string value);
}
public class Nethereum.Contracts.Standards.ENS.ENSRegistry.ContractDefinition.ResolverFunction : ResolverFunctionBase {
}
[FunctionAttribute("resolver", "address")]
public class Nethereum.Contracts.Standards.ENS.ENSRegistry.ContractDefinition.ResolverFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private Byte[] <Node>k__BackingField;
    [ParameterAttribute("bytes32", "node", "1")]
public Byte[] Node { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Node();
    [CompilerGeneratedAttribute]
public virtual void set_Node(Byte[] value);
}
public class Nethereum.Contracts.Standards.ENS.ENSRegistry.ContractDefinition.ResolverOutputDTO : ResolverOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ENS.ENSRegistry.ContractDefinition.ResolverOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private string <ReturnValue1>k__BackingField;
    [ParameterAttribute("address", "", "1")]
public string ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(string value);
}
public class Nethereum.Contracts.Standards.ENS.ENSRegistry.ContractDefinition.SetOwnerFunction : SetOwnerFunctionBase {
}
[FunctionAttribute("setOwner")]
public class Nethereum.Contracts.Standards.ENS.ENSRegistry.ContractDefinition.SetOwnerFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private Byte[] <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Owner>k__BackingField;
    [ParameterAttribute("bytes32", "node", "1")]
public Byte[] Node { get; public set; }
    [ParameterAttribute("address", "owner", "2")]
public string Owner { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Node();
    [CompilerGeneratedAttribute]
public virtual void set_Node(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual string get_Owner();
    [CompilerGeneratedAttribute]
public virtual void set_Owner(string value);
}
public class Nethereum.Contracts.Standards.ENS.ENSRegistry.ContractDefinition.SetResolverFunction : SetResolverFunctionBase {
}
[FunctionAttribute("setResolver")]
public class Nethereum.Contracts.Standards.ENS.ENSRegistry.ContractDefinition.SetResolverFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private Byte[] <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Resolver>k__BackingField;
    [ParameterAttribute("bytes32", "node", "1")]
public Byte[] Node { get; public set; }
    [ParameterAttribute("address", "resolver", "2")]
public string Resolver { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Node();
    [CompilerGeneratedAttribute]
public virtual void set_Node(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual string get_Resolver();
    [CompilerGeneratedAttribute]
public virtual void set_Resolver(string value);
}
public class Nethereum.Contracts.Standards.ENS.ENSRegistry.ContractDefinition.SetSubnodeOwnerFunction : SetSubnodeOwnerFunctionBase {
}
[FunctionAttribute("setSubnodeOwner")]
public class Nethereum.Contracts.Standards.ENS.ENSRegistry.ContractDefinition.SetSubnodeOwnerFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private Byte[] <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <Label>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Owner>k__BackingField;
    [ParameterAttribute("bytes32", "node", "1")]
public Byte[] Node { get; public set; }
    [ParameterAttribute("bytes32", "label", "2")]
public Byte[] Label { get; public set; }
    [ParameterAttribute("address", "owner", "3")]
public string Owner { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Node();
    [CompilerGeneratedAttribute]
public virtual void set_Node(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Label();
    [CompilerGeneratedAttribute]
public virtual void set_Label(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual string get_Owner();
    [CompilerGeneratedAttribute]
public virtual void set_Owner(string value);
}
public class Nethereum.Contracts.Standards.ENS.ENSRegistry.ContractDefinition.SetTTLFunction : SetTTLFunctionBase {
}
[FunctionAttribute("setTTL")]
public class Nethereum.Contracts.Standards.ENS.ENSRegistry.ContractDefinition.SetTTLFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private Byte[] <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private ulong <Ttl>k__BackingField;
    [ParameterAttribute("bytes32", "node", "1")]
public Byte[] Node { get; public set; }
    [ParameterAttribute("uint64", "ttl", "2")]
public ulong Ttl { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Node();
    [CompilerGeneratedAttribute]
public virtual void set_Node(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual ulong get_Ttl();
    [CompilerGeneratedAttribute]
public virtual void set_Ttl(ulong value);
}
public class Nethereum.Contracts.Standards.ENS.ENSRegistry.ContractDefinition.TransferEventDTO : TransferEventDTOBase {
}
[EventAttribute("Transfer")]
public class Nethereum.Contracts.Standards.ENS.ENSRegistry.ContractDefinition.TransferEventDTOBase : object {
    [CompilerGeneratedAttribute]
private Byte[] <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Owner>k__BackingField;
    [ParameterAttribute("bytes32", "node", "1", "True")]
public Byte[] Node { get; public set; }
    [ParameterAttribute("address", "owner", "2", "False")]
public string Owner { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Node();
    [CompilerGeneratedAttribute]
public virtual void set_Node(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual string get_Owner();
    [CompilerGeneratedAttribute]
public virtual void set_Owner(string value);
}
public class Nethereum.Contracts.Standards.ENS.ENSRegistry.ContractDefinition.TtlFunction : TtlFunctionBase {
}
[FunctionAttribute("ttl", "uint64")]
public class Nethereum.Contracts.Standards.ENS.ENSRegistry.ContractDefinition.TtlFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private Byte[] <Node>k__BackingField;
    [ParameterAttribute("bytes32", "node", "1")]
public Byte[] Node { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Node();
    [CompilerGeneratedAttribute]
public virtual void set_Node(Byte[] value);
}
public class Nethereum.Contracts.Standards.ENS.ENSRegistry.ContractDefinition.TtlOutputDTO : TtlOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ENS.ENSRegistry.ContractDefinition.TtlOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private ulong <ReturnValue1>k__BackingField;
    [ParameterAttribute("uint64", "", "1")]
public ulong ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual ulong get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(ulong value);
}
public class Nethereum.Contracts.Standards.ENS.ENSRegistryService : object {
    [CompilerGeneratedAttribute]
private string <ContractAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private ContractHandler <ContractHandler>k__BackingField;
    public string ContractAddress { get; }
    public ContractHandler ContractHandler { get; }
    public ENSRegistryService(IEthApiContractService ethApiContractService, string contractAddress);
    [CompilerGeneratedAttribute]
public string get_ContractAddress();
    [CompilerGeneratedAttribute]
public ContractHandler get_ContractHandler();
    public Task`1<string> ResolverQueryAsync(ResolverFunction resolverFunction, BlockParameter blockParameter);
    public Task`1<string> ResolverQueryAsync(Byte[] node, BlockParameter blockParameter);
    public Task`1<string> OwnerQueryAsync(OwnerFunction ownerFunction, BlockParameter blockParameter);
    public Task`1<string> OwnerQueryAsync(Byte[] node, BlockParameter blockParameter);
    public Task`1<string> SetSubnodeOwnerRequestAsync(SetSubnodeOwnerFunction setSubnodeOwnerFunction);
    public Task`1<TransactionReceipt> SetSubnodeOwnerRequestAndWaitForReceiptAsync(SetSubnodeOwnerFunction setSubnodeOwnerFunction, CancellationToken cancellationToken);
    public Task`1<string> SetSubnodeOwnerRequestAsync(Byte[] node, Byte[] label, string owner);
    public Task`1<TransactionReceipt> SetSubnodeOwnerRequestAndWaitForReceiptAsync(Byte[] node, Byte[] label, string owner, CancellationToken cancellationToken);
    public Task`1<string> SetTTLRequestAsync(SetTTLFunction setTTLFunction);
    public Task`1<TransactionReceipt> SetTTLRequestAndWaitForReceiptAsync(SetTTLFunction setTTLFunction, CancellationToken cancellationToken);
    public Task`1<string> SetTTLRequestAsync(Byte[] node, ulong ttl);
    public Task`1<TransactionReceipt> SetTTLRequestAndWaitForReceiptAsync(Byte[] node, ulong ttl, CancellationToken cancellationToken);
    public Task`1<ulong> TtlQueryAsync(TtlFunction ttlFunction, BlockParameter blockParameter);
    public Task`1<ulong> TtlQueryAsync(Byte[] node, BlockParameter blockParameter);
    public Task`1<string> SetResolverRequestAsync(SetResolverFunction setResolverFunction);
    public Task`1<TransactionReceipt> SetResolverRequestAndWaitForReceiptAsync(SetResolverFunction setResolverFunction, CancellationToken cancellationToken);
    public Task`1<string> SetResolverRequestAsync(Byte[] node, string resolver);
    public Task`1<TransactionReceipt> SetResolverRequestAndWaitForReceiptAsync(Byte[] node, string resolver, CancellationToken cancellationToken);
    public Task`1<string> SetOwnerRequestAsync(SetOwnerFunction setOwnerFunction);
    public Task`1<TransactionReceipt> SetOwnerRequestAndWaitForReceiptAsync(SetOwnerFunction setOwnerFunction, CancellationToken cancellationToken);
    public Task`1<string> SetOwnerRequestAsync(Byte[] node, string owner);
    public Task`1<TransactionReceipt> SetOwnerRequestAndWaitForReceiptAsync(Byte[] node, string owner, CancellationToken cancellationToken);
}
public class Nethereum.Contracts.Standards.ENS.ENSService : object {
    private IEthApiContractService _ethApiContractService;
    public static string REVERSE_NAME_SUFFIX;
    public static string ENS_ZERO_ADDRESS;
    [CompilerGeneratedAttribute]
private static int <MaxLookupRedirects>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EnsRegistryAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnsCCIPService <CCIPService>k__BackingField;
    [CompilerGeneratedAttribute]
private ENSRegistryService <ENSRegistryService>k__BackingField;
    private EnsUtil _ensUtil;
    public static int MaxLookupRedirects { get; public set; }
    public string EnsRegistryAddress { get; }
    public IEnsCCIPService CCIPService { get; }
    public ENSRegistryService ENSRegistryService { get; private set; }
    public ENSService(IEthApiContractService ethApiContractService, string ensRegistryAddress, IEnsCCIPService ccipService);
    private static ENSService();
    [CompilerGeneratedAttribute]
public static int get_MaxLookupRedirects();
    [CompilerGeneratedAttribute]
public static void set_MaxLookupRedirects(int value);
    [CompilerGeneratedAttribute]
public string get_EnsRegistryAddress();
    [CompilerGeneratedAttribute]
public IEnsCCIPService get_CCIPService();
    [CompilerGeneratedAttribute]
public ENSRegistryService get_ENSRegistryService();
    [CompilerGeneratedAttribute]
private void set_ENSRegistryService(ENSRegistryService value);
    [AsyncStateMachineAttribute("Nethereum.Contracts.Standards.ENS.ENSService/<ResolveAddressAsync>d__19")]
public Task`1<string> ResolveAddressAsync(string fullName);
    [AsyncStateMachineAttribute("Nethereum.Contracts.Standards.ENS.ENSService/<ResolveAsync>d__20`2")]
public Task`1<TFunctionOutputDTO> ResolveAsync(TFunction function, string fullName);
    [AsyncStateMachineAttribute("Nethereum.Contracts.Standards.ENS.ENSService/<ResolveABIAsync>d__21")]
public Task`1<ABIOutputDTO> ResolveABIAsync(string fullName, AbiTypeContentType abiTypeContentType);
    [AsyncStateMachineAttribute("Nethereum.Contracts.Standards.ENS.ENSService/<ResolveTextAsync>d__22")]
public Task`1<string> ResolveTextAsync(string fullName, TextDataKey textDataKey);
    [AsyncStateMachineAttribute("Nethereum.Contracts.Standards.ENS.ENSService/<GetContentHashAsync>d__23")]
public Task`1<Byte[]> GetContentHashAsync(string fullName);
    [AsyncStateMachineAttribute("Nethereum.Contracts.Standards.ENS.ENSService/<ReverseResolveAsync>d__24")]
public Task`1<string> ReverseResolveAsync(string address);
    public Task`1<string> SetSubnodeOwnerRequestAsync(string fullName, string label, string owner);
    public Task`1<TransactionReceipt> SetSubnodeOwnerRequestAndWaitForReceiptAsync(string fullName, string label, string owner);
    [AsyncStateMachineAttribute("Nethereum.Contracts.Standards.ENS.ENSService/<SetTextRequestAsync>d__27")]
public Task`1<string> SetTextRequestAsync(string fullName, TextDataKey textDataKey, string value);
    [AsyncStateMachineAttribute("Nethereum.Contracts.Standards.ENS.ENSService/<SetAddressRequestAsync>d__28")]
public Task`1<string> SetAddressRequestAsync(string fullName, string address);
    [AsyncStateMachineAttribute("Nethereum.Contracts.Standards.ENS.ENSService/<SetContentHashRequestAsync>d__29")]
public Task`1<string> SetContentHashRequestAsync(string fullName, string contentHashInHex);
    [AsyncStateMachineAttribute("Nethereum.Contracts.Standards.ENS.ENSService/<SetTextRequestAndWaitForReceiptAsync>d__30")]
public Task`1<TransactionReceipt> SetTextRequestAndWaitForReceiptAsync(string fullName, TextDataKey textDataKey, string value, CancellationToken cancellationToken);
    public Task`1<PublicResolverService> GetResolverAsync(string fullNameNode);
    [AsyncStateMachineAttribute("Nethereum.Contracts.Standards.ENS.ENSService/<GetResolverAsync>d__32")]
public Task`1<PublicResolverService> GetResolverAsync(Byte[] fullNameNode);
    [AsyncStateMachineAttribute("Nethereum.Contracts.Standards.ENS.ENSService/<GetOfflineDataAsync>d__33")]
private Task`1<Byte[]> GetOfflineDataAsync(IEthApiContractService ethApiContractService, string resolverAddress, string fullName, Byte[] callData);
    [AsyncStateMachineAttribute("Nethereum.Contracts.Standards.ENS.ENSService/<GetResolverAddressAsync>d__34")]
public Task`1<string> GetResolverAddressAsync(string name);
}
public class Nethereum.Contracts.Standards.ENS.EnsUtil : object {
    public string GetLabelHash(string label);
    public string GetNameHash(string name);
    public string Normalise(string name);
    public NormDetails NormaliseDetails(string name);
    public string DnsEncode(string name);
    public string GetParent(string name);
}
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.AvailableFunction : AvailableFunctionBase {
}
[FunctionAttribute("available", "bool")]
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.AvailableFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [ParameterAttribute("string", "name", "1")]
public string Name { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Name();
    [CompilerGeneratedAttribute]
public virtual void set_Name(string value);
}
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.AvailableOutputDTO : AvailableOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.AvailableOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private bool <ReturnValue1>k__BackingField;
    [ParameterAttribute("bool", "", "1")]
public bool ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual bool get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(bool value);
}
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.CommitFunction : CommitFunctionBase {
}
[FunctionAttribute("commit")]
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.CommitFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private Byte[] <Commitment>k__BackingField;
    [ParameterAttribute("bytes32", "commitment", "1")]
public Byte[] Commitment { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Commitment();
    [CompilerGeneratedAttribute]
public virtual void set_Commitment(Byte[] value);
}
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.CommitmentsFunction : CommitmentsFunctionBase {
}
[FunctionAttribute("commitments", "uint256")]
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.CommitmentsFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private Byte[] <ReturnValue1>k__BackingField;
    [ParameterAttribute("bytes32", "", "1")]
public Byte[] ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(Byte[] value);
}
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.CommitmentsOutputDTO : CommitmentsOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.CommitmentsOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private BigInteger <ReturnValue1>k__BackingField;
    [ParameterAttribute("uint256", "", "1")]
public BigInteger ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual BigInteger get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(BigInteger value);
}
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.IsOwnerFunction : IsOwnerFunctionBase {
}
[FunctionAttribute("isOwner", "bool")]
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.IsOwnerFunctionBase : FunctionMessage {
}
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.IsOwnerOutputDTO : IsOwnerOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.IsOwnerOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private bool <ReturnValue1>k__BackingField;
    [ParameterAttribute("bool", "", "1")]
public bool ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual bool get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(bool value);
}
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.MakeCommitmentFunction : MakeCommitmentFunctionBase {
}
[FunctionAttribute("makeCommitment", "bytes32")]
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.MakeCommitmentFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Owner>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <Secret>k__BackingField;
    [ParameterAttribute("string", "name", "1")]
public string Name { get; public set; }
    [ParameterAttribute("address", "owner", "2")]
public string Owner { get; public set; }
    [ParameterAttribute("bytes32", "secret", "3")]
public Byte[] Secret { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Name();
    [CompilerGeneratedAttribute]
public virtual void set_Name(string value);
    [CompilerGeneratedAttribute]
public virtual string get_Owner();
    [CompilerGeneratedAttribute]
public virtual void set_Owner(string value);
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Secret();
    [CompilerGeneratedAttribute]
public virtual void set_Secret(Byte[] value);
}
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.MakeCommitmentOutputDTO : MakeCommitmentOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.MakeCommitmentOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private Byte[] <ReturnValue1>k__BackingField;
    [ParameterAttribute("bytes32", "", "1")]
public Byte[] ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(Byte[] value);
}
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.MakeCommitmentWithConfigFunction : MakeCommitmentWithConfigFunctionBase {
}
[FunctionAttribute("makeCommitmentWithConfig", "bytes32")]
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.MakeCommitmentWithConfigFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Owner>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <Secret>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Resolver>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Addr>k__BackingField;
    [ParameterAttribute("string", "name", "1")]
public string Name { get; public set; }
    [ParameterAttribute("address", "owner", "2")]
public string Owner { get; public set; }
    [ParameterAttribute("bytes32", "secret", "3")]
public Byte[] Secret { get; public set; }
    [ParameterAttribute("address", "resolver", "4")]
public string Resolver { get; public set; }
    [ParameterAttribute("address", "addr", "5")]
public string Addr { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Name();
    [CompilerGeneratedAttribute]
public virtual void set_Name(string value);
    [CompilerGeneratedAttribute]
public virtual string get_Owner();
    [CompilerGeneratedAttribute]
public virtual void set_Owner(string value);
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Secret();
    [CompilerGeneratedAttribute]
public virtual void set_Secret(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual string get_Resolver();
    [CompilerGeneratedAttribute]
public virtual void set_Resolver(string value);
    [CompilerGeneratedAttribute]
public virtual string get_Addr();
    [CompilerGeneratedAttribute]
public virtual void set_Addr(string value);
}
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.MakeCommitmentWithConfigOutputDTO : MakeCommitmentWithConfigOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.MakeCommitmentWithConfigOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private Byte[] <ReturnValue1>k__BackingField;
    [ParameterAttribute("bytes32", "", "1")]
public Byte[] ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(Byte[] value);
}
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.MaxCommitmentAgeFunction : MaxCommitmentAgeFunctionBase {
}
[FunctionAttribute("maxCommitmentAge", "uint256")]
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.MaxCommitmentAgeFunctionBase : FunctionMessage {
}
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.MaxCommitmentAgeOutputDTO : MaxCommitmentAgeOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.MaxCommitmentAgeOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private BigInteger <ReturnValue1>k__BackingField;
    [ParameterAttribute("uint256", "", "1")]
public BigInteger ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual BigInteger get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(BigInteger value);
}
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.MIN_REGISTRATION_DURATIONOutputDTO : MIN_REGISTRATION_DURATIONOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.MIN_REGISTRATION_DURATIONOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private BigInteger <ReturnValue1>k__BackingField;
    [ParameterAttribute("uint256", "", "1")]
public BigInteger ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual BigInteger get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(BigInteger value);
}
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.MinCommitmentAgeFunction : MinCommitmentAgeFunctionBase {
}
[FunctionAttribute("minCommitmentAge", "uint256")]
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.MinCommitmentAgeFunctionBase : FunctionMessage {
}
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.MinCommitmentAgeOutputDTO : MinCommitmentAgeOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.MinCommitmentAgeOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private BigInteger <ReturnValue1>k__BackingField;
    [ParameterAttribute("uint256", "", "1")]
public BigInteger ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual BigInteger get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(BigInteger value);
}
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.MinRegistrationDurationFunction : MinRegistrationDurationFunctionBase {
}
[FunctionAttribute("MIN_REGISTRATION_DURATION", "uint256")]
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.MinRegistrationDurationFunctionBase : FunctionMessage {
}
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.NameRegisteredEventDTO : NameRegisteredEventDTOBase {
}
[EventAttribute("NameRegistered")]
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.NameRegisteredEventDTOBase : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <Label>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Owner>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <Cost>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <Expires>k__BackingField;
    [ParameterAttribute("string", "name", "1", "False")]
public string Name { get; public set; }
    [ParameterAttribute("bytes32", "label", "2", "True")]
public Byte[] Label { get; public set; }
    [ParameterAttribute("address", "owner", "3", "True")]
public string Owner { get; public set; }
    [ParameterAttribute("uint256", "cost", "4", "False")]
public BigInteger Cost { get; public set; }
    [ParameterAttribute("uint256", "expires", "5", "False")]
public BigInteger Expires { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Name();
    [CompilerGeneratedAttribute]
public virtual void set_Name(string value);
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Label();
    [CompilerGeneratedAttribute]
public virtual void set_Label(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual string get_Owner();
    [CompilerGeneratedAttribute]
public virtual void set_Owner(string value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_Cost();
    [CompilerGeneratedAttribute]
public virtual void set_Cost(BigInteger value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_Expires();
    [CompilerGeneratedAttribute]
public virtual void set_Expires(BigInteger value);
}
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.NameRenewedEventDTO : NameRenewedEventDTOBase {
}
[EventAttribute("NameRenewed")]
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.NameRenewedEventDTOBase : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <Label>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <Cost>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <Expires>k__BackingField;
    [ParameterAttribute("string", "name", "1", "False")]
public string Name { get; public set; }
    [ParameterAttribute("bytes32", "label", "2", "True")]
public Byte[] Label { get; public set; }
    [ParameterAttribute("uint256", "cost", "3", "False")]
public BigInteger Cost { get; public set; }
    [ParameterAttribute("uint256", "expires", "4", "False")]
public BigInteger Expires { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Name();
    [CompilerGeneratedAttribute]
public virtual void set_Name(string value);
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Label();
    [CompilerGeneratedAttribute]
public virtual void set_Label(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_Cost();
    [CompilerGeneratedAttribute]
public virtual void set_Cost(BigInteger value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_Expires();
    [CompilerGeneratedAttribute]
public virtual void set_Expires(BigInteger value);
}
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.NewPriceOracleEventDTO : NewPriceOracleEventDTOBase {
}
[EventAttribute("NewPriceOracle")]
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.NewPriceOracleEventDTOBase : object {
    [CompilerGeneratedAttribute]
private string <Oracle>k__BackingField;
    [ParameterAttribute("address", "oracle", "1", "True")]
public string Oracle { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Oracle();
    [CompilerGeneratedAttribute]
public virtual void set_Oracle(string value);
}
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.OwnerFunction : OwnerFunctionBase {
}
[FunctionAttribute("owner", "address")]
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.OwnerFunctionBase : FunctionMessage {
}
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.OwnerOutputDTO : OwnerOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.OwnerOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private string <ReturnValue1>k__BackingField;
    [ParameterAttribute("address", "", "1")]
public string ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(string value);
}
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.OwnershipTransferredEventDTO : OwnershipTransferredEventDTOBase {
}
[EventAttribute("OwnershipTransferred")]
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.OwnershipTransferredEventDTOBase : object {
    [CompilerGeneratedAttribute]
private string <PreviousOwner>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NewOwner>k__BackingField;
    [ParameterAttribute("address", "previousOwner", "1", "True")]
public string PreviousOwner { get; public set; }
    [ParameterAttribute("address", "newOwner", "2", "True")]
public string NewOwner { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_PreviousOwner();
    [CompilerGeneratedAttribute]
public virtual void set_PreviousOwner(string value);
    [CompilerGeneratedAttribute]
public virtual string get_NewOwner();
    [CompilerGeneratedAttribute]
public virtual void set_NewOwner(string value);
}
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.RegisterFunction : RegisterFunctionBase {
}
[FunctionAttribute("register")]
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.RegisterFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Owner>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <Duration>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <Secret>k__BackingField;
    [ParameterAttribute("string", "name", "1")]
public string Name { get; public set; }
    [ParameterAttribute("address", "owner", "2")]
public string Owner { get; public set; }
    [ParameterAttribute("uint256", "duration", "3")]
public BigInteger Duration { get; public set; }
    [ParameterAttribute("bytes32", "secret", "4")]
public Byte[] Secret { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Name();
    [CompilerGeneratedAttribute]
public virtual void set_Name(string value);
    [CompilerGeneratedAttribute]
public virtual string get_Owner();
    [CompilerGeneratedAttribute]
public virtual void set_Owner(string value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_Duration();
    [CompilerGeneratedAttribute]
public virtual void set_Duration(BigInteger value);
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Secret();
    [CompilerGeneratedAttribute]
public virtual void set_Secret(Byte[] value);
}
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.RegisterWithConfigFunction : RegisterWithConfigFunctionBase {
}
[FunctionAttribute("registerWithConfig")]
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.RegisterWithConfigFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Owner>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <Duration>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <Secret>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Resolver>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Addr>k__BackingField;
    [ParameterAttribute("string", "name", "1")]
public string Name { get; public set; }
    [ParameterAttribute("address", "owner", "2")]
public string Owner { get; public set; }
    [ParameterAttribute("uint256", "duration", "3")]
public BigInteger Duration { get; public set; }
    [ParameterAttribute("bytes32", "secret", "4")]
public Byte[] Secret { get; public set; }
    [ParameterAttribute("address", "resolver", "5")]
public string Resolver { get; public set; }
    [ParameterAttribute("address", "addr", "6")]
public string Addr { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Name();
    [CompilerGeneratedAttribute]
public virtual void set_Name(string value);
    [CompilerGeneratedAttribute]
public virtual string get_Owner();
    [CompilerGeneratedAttribute]
public virtual void set_Owner(string value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_Duration();
    [CompilerGeneratedAttribute]
public virtual void set_Duration(BigInteger value);
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Secret();
    [CompilerGeneratedAttribute]
public virtual void set_Secret(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual string get_Resolver();
    [CompilerGeneratedAttribute]
public virtual void set_Resolver(string value);
    [CompilerGeneratedAttribute]
public virtual string get_Addr();
    [CompilerGeneratedAttribute]
public virtual void set_Addr(string value);
}
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.RenewFunction : RenewFunctionBase {
}
[FunctionAttribute("renew")]
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.RenewFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <Duration>k__BackingField;
    [ParameterAttribute("string", "name", "1")]
public string Name { get; public set; }
    [ParameterAttribute("uint256", "duration", "2")]
public BigInteger Duration { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Name();
    [CompilerGeneratedAttribute]
public virtual void set_Name(string value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_Duration();
    [CompilerGeneratedAttribute]
public virtual void set_Duration(BigInteger value);
}
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.RenounceOwnershipFunction : RenounceOwnershipFunctionBase {
}
[FunctionAttribute("renounceOwnership")]
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.RenounceOwnershipFunctionBase : FunctionMessage {
}
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.RentPriceFunction : RentPriceFunctionBase {
}
[FunctionAttribute("rentPrice", "uint256")]
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.RentPriceFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <Duration>k__BackingField;
    [ParameterAttribute("string", "name", "1")]
public string Name { get; public set; }
    [ParameterAttribute("uint256", "duration", "2")]
public BigInteger Duration { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Name();
    [CompilerGeneratedAttribute]
public virtual void set_Name(string value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_Duration();
    [CompilerGeneratedAttribute]
public virtual void set_Duration(BigInteger value);
}
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.RentPriceOutputDTO : RentPriceOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.RentPriceOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private BigInteger <ReturnValue1>k__BackingField;
    [ParameterAttribute("uint256", "", "1")]
public BigInteger ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual BigInteger get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(BigInteger value);
}
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.SetCommitmentAgesFunction : SetCommitmentAgesFunctionBase {
}
[FunctionAttribute("setCommitmentAges")]
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.SetCommitmentAgesFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private BigInteger <MinCommitmentAge>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <MaxCommitmentAge>k__BackingField;
    [ParameterAttribute("uint256", "_minCommitmentAge", "1")]
public BigInteger MinCommitmentAge { get; public set; }
    [ParameterAttribute("uint256", "_maxCommitmentAge", "2")]
public BigInteger MaxCommitmentAge { get; public set; }
    [CompilerGeneratedAttribute]
public virtual BigInteger get_MinCommitmentAge();
    [CompilerGeneratedAttribute]
public virtual void set_MinCommitmentAge(BigInteger value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_MaxCommitmentAge();
    [CompilerGeneratedAttribute]
public virtual void set_MaxCommitmentAge(BigInteger value);
}
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.SetPriceOracleFunction : SetPriceOracleFunctionBase {
}
[FunctionAttribute("setPriceOracle")]
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.SetPriceOracleFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private string <Prices>k__BackingField;
    [ParameterAttribute("address", "_prices", "1")]
public string Prices { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Prices();
    [CompilerGeneratedAttribute]
public virtual void set_Prices(string value);
}
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.SupportsInterfaceFunction : SupportsInterfaceFunctionBase {
}
[FunctionAttribute("supportsInterface", "bool")]
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.SupportsInterfaceFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private Byte[] <InterfaceID>k__BackingField;
    [ParameterAttribute("bytes4", "interfaceID", "1")]
public Byte[] InterfaceID { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_InterfaceID();
    [CompilerGeneratedAttribute]
public virtual void set_InterfaceID(Byte[] value);
}
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.SupportsInterfaceOutputDTO : SupportsInterfaceOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.SupportsInterfaceOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private bool <ReturnValue1>k__BackingField;
    [ParameterAttribute("bool", "", "1")]
public bool ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual bool get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(bool value);
}
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.TransferOwnershipFunction : TransferOwnershipFunctionBase {
}
[FunctionAttribute("transferOwnership")]
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.TransferOwnershipFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private string <NewOwner>k__BackingField;
    [ParameterAttribute("address", "newOwner", "1")]
public string NewOwner { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_NewOwner();
    [CompilerGeneratedAttribute]
public virtual void set_NewOwner(string value);
}
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.ValidFunction : ValidFunctionBase {
}
[FunctionAttribute("valid", "bool")]
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.ValidFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [ParameterAttribute("string", "name", "1")]
public string Name { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Name();
    [CompilerGeneratedAttribute]
public virtual void set_Name(string value);
}
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.ValidOutputDTO : ValidOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.ValidOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private bool <ReturnValue1>k__BackingField;
    [ParameterAttribute("bool", "", "1")]
public bool ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual bool get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(bool value);
}
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.WithdrawFunction : WithdrawFunctionBase {
}
[FunctionAttribute("withdraw")]
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarController.ContractDefinition.WithdrawFunctionBase : FunctionMessage {
}
public class Nethereum.Contracts.Standards.ENS.ETHRegistrarControllerService : object {
    [CompilerGeneratedAttribute]
private string <ContractAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private ContractHandler <ContractHandler>k__BackingField;
    public string ContractAddress { get; }
    public ContractHandler ContractHandler { get; }
    public ETHRegistrarControllerService(IEthApiContractService ethApiContractService, string contractAddress);
    [CompilerGeneratedAttribute]
public string get_ContractAddress();
    [CompilerGeneratedAttribute]
public ContractHandler get_ContractHandler();
    public Task`1<BigInteger> MinRegistrationDurationQueryAsync(MinRegistrationDurationFunction minRegistrationDurationFunction, BlockParameter blockParameter);
    public Task`1<BigInteger> MinRegistrationDurationQueryAsync(BlockParameter blockParameter);
    public Task`1<bool> AvailableQueryAsync(AvailableFunction availableFunction, BlockParameter blockParameter);
    public Task`1<bool> AvailableQueryAsync(string name, BlockParameter blockParameter);
    public Task`1<string> CommitRequestAsync(CommitFunction commitFunction);
    public Task`1<TransactionReceipt> CommitRequestAndWaitForReceiptAsync(CommitFunction commitFunction, CancellationToken cancellationToken);
    public Task`1<string> CommitRequestAsync(Byte[] commitment);
    public Task`1<TransactionReceipt> CommitRequestAndWaitForReceiptAsync(Byte[] commitment, CancellationToken cancellationToken);
    public Task`1<BigInteger> CommitmentsQueryAsync(CommitmentsFunction commitmentsFunction, BlockParameter blockParameter);
    public Task`1<BigInteger> CommitmentsQueryAsync(Byte[] returnValue1, BlockParameter blockParameter);
    public Task`1<bool> IsOwnerQueryAsync(IsOwnerFunction isOwnerFunction, BlockParameter blockParameter);
    public Task`1<bool> IsOwnerQueryAsync(BlockParameter blockParameter);
    public Task`1<Byte[]> MakeCommitmentQueryAsync(MakeCommitmentFunction makeCommitmentFunction, BlockParameter blockParameter);
    public Task`1<Byte[]> MakeCommitmentQueryAsync(string name, string owner, Byte[] secret, BlockParameter blockParameter);
    public Task`1<Byte[]> MakeCommitmentWithConfigQueryAsync(MakeCommitmentWithConfigFunction makeCommitmentWithConfigFunction, BlockParameter blockParameter);
    public Task`1<Byte[]> MakeCommitmentWithConfigQueryAsync(string name, string owner, Byte[] secret, string resolver, string addr, BlockParameter blockParameter);
    public Task`1<BigInteger> MaxCommitmentAgeQueryAsync(MaxCommitmentAgeFunction maxCommitmentAgeFunction, BlockParameter blockParameter);
    public Task`1<BigInteger> MaxCommitmentAgeQueryAsync(BlockParameter blockParameter);
    public Task`1<BigInteger> MinCommitmentAgeQueryAsync(MinCommitmentAgeFunction minCommitmentAgeFunction, BlockParameter blockParameter);
    public Task`1<BigInteger> MinCommitmentAgeQueryAsync(BlockParameter blockParameter);
    public Task`1<string> OwnerQueryAsync(OwnerFunction ownerFunction, BlockParameter blockParameter);
    public Task`1<string> OwnerQueryAsync(BlockParameter blockParameter);
    public Task`1<string> RegisterRequestAsync(RegisterFunction registerFunction);
    public Task`1<TransactionReceipt> RegisterRequestAndWaitForReceiptAsync(RegisterFunction registerFunction, CancellationToken cancellationToken);
    public Task`1<string> RegisterRequestAsync(string name, string owner, BigInteger duration, Byte[] secret);
    public Task`1<TransactionReceipt> RegisterRequestAndWaitForReceiptAsync(string name, string owner, BigInteger duration, Byte[] secret, CancellationToken cancellationToken);
    public Task`1<string> RegisterWithConfigRequestAsync(RegisterWithConfigFunction registerWithConfigFunction);
    public Task`1<TransactionReceipt> RegisterWithConfigRequestAndWaitForReceiptAsync(RegisterWithConfigFunction registerWithConfigFunction, CancellationToken cancellationToken);
    public Task`1<string> RegisterWithConfigRequestAsync(string name, string owner, BigInteger duration, Byte[] secret, string resolver, string addr);
    public Task`1<TransactionReceipt> RegisterWithConfigRequestAndWaitForReceiptAsync(string name, string owner, BigInteger duration, Byte[] secret, string resolver, string addr, CancellationToken cancellationToken);
    public Task`1<string> RenewRequestAsync(RenewFunction renewFunction);
    public Task`1<TransactionReceipt> RenewRequestAndWaitForReceiptAsync(RenewFunction renewFunction, CancellationToken cancellationToken);
    public Task`1<string> RenewRequestAsync(string name, BigInteger duration);
    public Task`1<TransactionReceipt> RenewRequestAndWaitForReceiptAsync(string name, BigInteger duration, CancellationToken cancellationToken);
    public Task`1<string> RenounceOwnershipRequestAsync(RenounceOwnershipFunction renounceOwnershipFunction);
    public Task`1<string> RenounceOwnershipRequestAsync();
    public Task`1<TransactionReceipt> RenounceOwnershipRequestAndWaitForReceiptAsync(RenounceOwnershipFunction renounceOwnershipFunction, CancellationToken cancellationToken);
    public Task`1<TransactionReceipt> RenounceOwnershipRequestAndWaitForReceiptAsync(CancellationToken cancellationToken);
    public Task`1<BigInteger> RentPriceQueryAsync(RentPriceFunction rentPriceFunction, BlockParameter blockParameter);
    public Task`1<BigInteger> RentPriceQueryAsync(string name, BigInteger duration, BlockParameter blockParameter);
    public Task`1<string> SetCommitmentAgesRequestAsync(SetCommitmentAgesFunction setCommitmentAgesFunction);
    public Task`1<TransactionReceipt> SetCommitmentAgesRequestAndWaitForReceiptAsync(SetCommitmentAgesFunction setCommitmentAgesFunction, CancellationToken cancellationToken);
    public Task`1<string> SetCommitmentAgesRequestAsync(BigInteger minCommitmentAge, BigInteger maxCommitmentAge);
    public Task`1<TransactionReceipt> SetCommitmentAgesRequestAndWaitForReceiptAsync(BigInteger minCommitmentAge, BigInteger maxCommitmentAge, CancellationToken cancellationToken);
    public Task`1<string> SetPriceOracleRequestAsync(SetPriceOracleFunction setPriceOracleFunction);
    public Task`1<TransactionReceipt> SetPriceOracleRequestAndWaitForReceiptAsync(SetPriceOracleFunction setPriceOracleFunction, CancellationToken cancellationToken);
    public Task`1<string> SetPriceOracleRequestAsync(string prices);
    public Task`1<TransactionReceipt> SetPriceOracleRequestAndWaitForReceiptAsync(string prices, CancellationToken cancellationToken);
    public Task`1<bool> SupportsInterfaceQueryAsync(SupportsInterfaceFunction supportsInterfaceFunction, BlockParameter blockParameter);
    public Task`1<bool> SupportsInterfaceQueryAsync(Byte[] interfaceID, BlockParameter blockParameter);
    public Task`1<string> TransferOwnershipRequestAsync(TransferOwnershipFunction transferOwnershipFunction);
    public Task`1<TransactionReceipt> TransferOwnershipRequestAndWaitForReceiptAsync(TransferOwnershipFunction transferOwnershipFunction, CancellationToken cancellationToken);
    public Task`1<string> TransferOwnershipRequestAsync(string newOwner);
    public Task`1<TransactionReceipt> TransferOwnershipRequestAndWaitForReceiptAsync(string newOwner, CancellationToken cancellationToken);
    public Task`1<bool> ValidQueryAsync(ValidFunction validFunction, BlockParameter blockParameter);
    public Task`1<bool> ValidQueryAsync(string name, BlockParameter blockParameter);
    public Task`1<string> WithdrawRequestAsync(WithdrawFunction withdrawFunction);
    public Task`1<string> WithdrawRequestAsync();
    public Task`1<TransactionReceipt> WithdrawRequestAndWaitForReceiptAsync(WithdrawFunction withdrawFunction, CancellationToken cancellationToken);
    public Task`1<TransactionReceipt> WithdrawRequestAndWaitForReceiptAsync(CancellationToken cancellationToken);
}
public class Nethereum.Contracts.Standards.ENS.EthTLSService : object {
    private IEthApiContractService _ethApiContractService;
    [CompilerGeneratedAttribute]
private string <EnsRegistryAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TLS>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <TLSNameHash>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TLSRegisterAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TLSResolverAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TLSControllerAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private ENSRegistryService <ENSRegistryService>k__BackingField;
    [CompilerGeneratedAttribute]
private PublicResolverService <TLSResolverService>k__BackingField;
    [CompilerGeneratedAttribute]
private ETHRegistrarControllerService <TLSRegistrarControllerService>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MinimunDurationRegistrationInSeconds>k__BackingField;
    private EnsUtil _ensUtil;
    public string EnsRegistryAddress { get; }
    public string TLS { get; private set; }
    public Byte[] TLSNameHash { get; private set; }
    public string TLSRegisterAddress { get; private set; }
    public string TLSResolverAddress { get; private set; }
    public string TLSControllerAddress { get; private set; }
    public ENSRegistryService ENSRegistryService { get; private set; }
    public PublicResolverService TLSResolverService { get; private set; }
    public ETHRegistrarControllerService TLSRegistrarControllerService { get; private set; }
    public int MinimunDurationRegistrationInSeconds { get; private set; }
    public EthTLSService(IEthApiContractService ethApiContractService, string ensRegistryAddress);
    [CompilerGeneratedAttribute]
public string get_EnsRegistryAddress();
    [CompilerGeneratedAttribute]
public string get_TLS();
    [CompilerGeneratedAttribute]
private void set_TLS(string value);
    [CompilerGeneratedAttribute]
public Byte[] get_TLSNameHash();
    [CompilerGeneratedAttribute]
private void set_TLSNameHash(Byte[] value);
    [CompilerGeneratedAttribute]
public string get_TLSRegisterAddress();
    [CompilerGeneratedAttribute]
private void set_TLSRegisterAddress(string value);
    [CompilerGeneratedAttribute]
public string get_TLSResolverAddress();
    [CompilerGeneratedAttribute]
private void set_TLSResolverAddress(string value);
    [CompilerGeneratedAttribute]
public string get_TLSControllerAddress();
    [CompilerGeneratedAttribute]
private void set_TLSControllerAddress(string value);
    [CompilerGeneratedAttribute]
public ENSRegistryService get_ENSRegistryService();
    [CompilerGeneratedAttribute]
private void set_ENSRegistryService(ENSRegistryService value);
    [CompilerGeneratedAttribute]
public PublicResolverService get_TLSResolverService();
    [CompilerGeneratedAttribute]
private void set_TLSResolverService(PublicResolverService value);
    [CompilerGeneratedAttribute]
public ETHRegistrarControllerService get_TLSRegistrarControllerService();
    [CompilerGeneratedAttribute]
private void set_TLSRegistrarControllerService(ETHRegistrarControllerService value);
    [CompilerGeneratedAttribute]
public int get_MinimunDurationRegistrationInSeconds();
    [CompilerGeneratedAttribute]
private void set_MinimunDurationRegistrationInSeconds(int value);
    [AsyncStateMachineAttribute("Nethereum.Contracts.Standards.ENS.EthTLSService/<InitialiseAsync>d__42")]
public Task InitialiseAsync();
    public int GetMinimumDurationInDays();
    [AsyncStateMachineAttribute("Nethereum.Contracts.Standards.ENS.EthTLSService/<CalculateRentPriceAsync>d__44")]
public Task`1<BigInteger> CalculateRentPriceAsync(string name, int durationInDays);
    [AsyncStateMachineAttribute("Nethereum.Contracts.Standards.ENS.EthTLSService/<CalculateRentPriceInEtherAsync>d__45")]
public Task`1<decimal> CalculateRentPriceInEtherAsync(string name, int durationInDays);
    public int ConvertDurationToSeconds(int durationInDays);
    public int ConvertDurationToDays(int durationInSeconds);
    public Task`1<bool> IsNameAvailableAsync(string name);
    private int ConvertDurationInSecondsValidatingMinimum(int durationInDays);
    public Byte[] ConvertSecretToHash(string secret);
    public Task`1<Byte[]> CalculateCommitmentAsync(string name, string owner, string secret);
    [AsyncStateMachineAttribute("Nethereum.Contracts.Standards.ENS.EthTLSService/<CommitRequestAsync>d__52")]
public Task`1<string> CommitRequestAsync(string name, string owner, string secret);
    [AsyncStateMachineAttribute("Nethereum.Contracts.Standards.ENS.EthTLSService/<CommitRequestAndWaitForReceiptAsync>d__53")]
public Task`1<TransactionReceipt> CommitRequestAndWaitForReceiptAsync(string name, string owner, string secret, CancellationToken cancellationToken);
    public Task`1<string> RegisterRequestAsync(string name, string owner, int durationInDays, string secret, decimal etherRentPrice);
    public Task`1<string> RegisterRequestAsync(string name, string owner, int durationInDays, string secret, BigInteger weiRentPrice);
    private RegisterFunction CreateRegisterFunction(string name, string owner, int durationInDays, string secret, BigInteger weiRentPrice);
    public Task`1<TransactionReceipt> RegisterRequestAndWaitForReceiptAsync(string name, string owner, int durationInDays, string secret, decimal etherRentPrice, CancellationToken cancellationToken);
    public Task`1<TransactionReceipt> RegisterRequestAndWaitForReceiptAsync(string name, string owner, int durationInDays, string secret, BigInteger weiRentPrice, CancellationToken cancellationToken);
    public Task`1<string> CommitRequestAsync(Byte[] commitment);
    public Task`1<TransactionReceipt> CommitRequestAndWaitForReceiptAsync(Byte[] commitment, CancellationToken cancellationToken);
    public Task`1<string> RenewRequestAsync(string name, int durationInDays, decimal etherRentPrice);
    public Task`1<string> RenewRequestAsync(string name, int durationInDays, BigInteger weiRentPrice);
    private RenewFunction CreateRenewFunction(string name, int durationInDays, BigInteger weiPrice);
}
public interface Nethereum.Contracts.Standards.ENS.IEnsCCIPService {
    public abstract virtual Task`1<Byte[]> ResolveCCIPRead(OffchainResolverService offchainResolver, OffchainLookupError offchainLookup, int maxLookupRedirects);
}
public class Nethereum.Contracts.Standards.ENS.OffchainResolver.ContractDefinition.MakeSignatureHashFunction : MakeSignatureHashFunctionBase {
}
[FunctionAttribute("makeSignatureHash", "bytes32")]
public class Nethereum.Contracts.Standards.ENS.OffchainResolver.ContractDefinition.MakeSignatureHashFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private string <Target>k__BackingField;
    [CompilerGeneratedAttribute]
private ulong <Expires>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <Request>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <Result>k__BackingField;
    [ParameterAttribute("address", "target", "1")]
public string Target { get; public set; }
    [ParameterAttribute("uint64", "expires", "2")]
public ulong Expires { get; public set; }
    [ParameterAttribute("bytes", "request", "3")]
public Byte[] Request { get; public set; }
    [ParameterAttribute("bytes", "result", "4")]
public Byte[] Result { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Target();
    [CompilerGeneratedAttribute]
public virtual void set_Target(string value);
    [CompilerGeneratedAttribute]
public virtual ulong get_Expires();
    [CompilerGeneratedAttribute]
public virtual void set_Expires(ulong value);
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Request();
    [CompilerGeneratedAttribute]
public virtual void set_Request(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Result();
    [CompilerGeneratedAttribute]
public virtual void set_Result(Byte[] value);
}
public class Nethereum.Contracts.Standards.ENS.OffchainResolver.ContractDefinition.MakeSignatureHashOutputDTO : MakeSignatureHashOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ENS.OffchainResolver.ContractDefinition.MakeSignatureHashOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private Byte[] <ReturnValue1>k__BackingField;
    [ParameterAttribute("bytes32", "", "1")]
public Byte[] ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(Byte[] value);
}
public class Nethereum.Contracts.Standards.ENS.OffchainResolver.ContractDefinition.NewSignersEventDTO : NewSignersEventDTOBase {
}
[EventAttribute("NewSigners")]
public class Nethereum.Contracts.Standards.ENS.OffchainResolver.ContractDefinition.NewSignersEventDTOBase : object {
    [CompilerGeneratedAttribute]
private List`1<string> <Signers>k__BackingField;
    [ParameterAttribute("address[]", "signers", "1", "False")]
public List`1<string> Signers { get; public set; }
    [CompilerGeneratedAttribute]
public virtual List`1<string> get_Signers();
    [CompilerGeneratedAttribute]
public virtual void set_Signers(List`1<string> value);
}
public class Nethereum.Contracts.Standards.ENS.OffchainResolver.ContractDefinition.OffchainLookupError : OffchainLookupErrorBase {
}
[ErrorAttribute("OffchainLookup")]
public class Nethereum.Contracts.Standards.ENS.OffchainResolver.ContractDefinition.OffchainLookupErrorBase : object {
    [CompilerGeneratedAttribute]
private string <Sender>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <Urls>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <CallData>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <CallbackFunction>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <ExtraData>k__BackingField;
    [ParameterAttribute("address", "sender", "1")]
public string Sender { get; public set; }
    [ParameterAttribute("string[]", "urls", "2")]
public List`1<string> Urls { get; public set; }
    [ParameterAttribute("bytes", "callData", "3")]
public Byte[] CallData { get; public set; }
    [ParameterAttribute("bytes4", "callbackFunction", "4")]
public Byte[] CallbackFunction { get; public set; }
    [ParameterAttribute("bytes", "extraData", "5")]
public Byte[] ExtraData { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Sender();
    [CompilerGeneratedAttribute]
public virtual void set_Sender(string value);
    [CompilerGeneratedAttribute]
public virtual List`1<string> get_Urls();
    [CompilerGeneratedAttribute]
public virtual void set_Urls(List`1<string> value);
    [CompilerGeneratedAttribute]
public virtual Byte[] get_CallData();
    [CompilerGeneratedAttribute]
public virtual void set_CallData(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual Byte[] get_CallbackFunction();
    [CompilerGeneratedAttribute]
public virtual void set_CallbackFunction(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual Byte[] get_ExtraData();
    [CompilerGeneratedAttribute]
public virtual void set_ExtraData(Byte[] value);
}
public class Nethereum.Contracts.Standards.ENS.OffchainResolver.ContractDefinition.OffchainResolverDeployment : OffchainResolverDeploymentBase {
    public OffchainResolverDeployment(string byteCode);
}
public class Nethereum.Contracts.Standards.ENS.OffchainResolver.ContractDefinition.OffchainResolverDeploymentBase : ContractDeploymentMessage {
    public static string BYTECODE;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <Signers>k__BackingField;
    [ParameterAttribute("string", "_url", "1")]
public string Url { get; public set; }
    [ParameterAttribute("address[]", "_signers", "2")]
public List`1<string> Signers { get; public set; }
    public OffchainResolverDeploymentBase(string byteCode);
    private static OffchainResolverDeploymentBase();
    [CompilerGeneratedAttribute]
public virtual string get_Url();
    [CompilerGeneratedAttribute]
public virtual void set_Url(string value);
    [CompilerGeneratedAttribute]
public virtual List`1<string> get_Signers();
    [CompilerGeneratedAttribute]
public virtual void set_Signers(List`1<string> value);
}
public class Nethereum.Contracts.Standards.ENS.OffchainResolver.ContractDefinition.ResolveFunction : ResolveFunctionBase {
}
[FunctionAttribute("resolve", "bytes")]
public class Nethereum.Contracts.Standards.ENS.OffchainResolver.ContractDefinition.ResolveFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private Byte[] <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <Data>k__BackingField;
    [ParameterAttribute("bytes", "name", "1")]
public Byte[] Name { get; public set; }
    [ParameterAttribute("bytes", "data", "2")]
public Byte[] Data { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Name();
    [CompilerGeneratedAttribute]
public virtual void set_Name(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Data();
    [CompilerGeneratedAttribute]
public virtual void set_Data(Byte[] value);
}
public class Nethereum.Contracts.Standards.ENS.OffchainResolver.ContractDefinition.ResolveOutputDTO : ResolveOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ENS.OffchainResolver.ContractDefinition.ResolveOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private Byte[] <ReturnValue1>k__BackingField;
    [ParameterAttribute("bytes", "", "1")]
public Byte[] ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(Byte[] value);
}
public class Nethereum.Contracts.Standards.ENS.OffchainResolver.ContractDefinition.ResolveWithProofFunction : ResolveWithProofFunctionBase {
}
[FunctionAttribute("resolveWithProof", "bytes")]
public class Nethereum.Contracts.Standards.ENS.OffchainResolver.ContractDefinition.ResolveWithProofFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private Byte[] <Response>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <ExtraData>k__BackingField;
    [ParameterAttribute("bytes", "response", "1")]
public Byte[] Response { get; public set; }
    [ParameterAttribute("bytes", "extraData", "2")]
public Byte[] ExtraData { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Response();
    [CompilerGeneratedAttribute]
public virtual void set_Response(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual Byte[] get_ExtraData();
    [CompilerGeneratedAttribute]
public virtual void set_ExtraData(Byte[] value);
}
public class Nethereum.Contracts.Standards.ENS.OffchainResolver.ContractDefinition.ResolveWithProofOutputDTO : ResolveWithProofOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ENS.OffchainResolver.ContractDefinition.ResolveWithProofOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private Byte[] <ReturnValue1>k__BackingField;
    [ParameterAttribute("bytes", "", "1")]
public Byte[] ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(Byte[] value);
}
public class Nethereum.Contracts.Standards.ENS.OffchainResolver.ContractDefinition.SignersFunction : SignersFunctionBase {
}
[FunctionAttribute("signers", "bool")]
public class Nethereum.Contracts.Standards.ENS.OffchainResolver.ContractDefinition.SignersFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private string <ReturnValue1>k__BackingField;
    [ParameterAttribute("address", "", "1")]
public string ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(string value);
}
public class Nethereum.Contracts.Standards.ENS.OffchainResolver.ContractDefinition.SignersOutputDTO : SignersOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ENS.OffchainResolver.ContractDefinition.SignersOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private bool <ReturnValue1>k__BackingField;
    [ParameterAttribute("bool", "", "1")]
public bool ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual bool get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(bool value);
}
public class Nethereum.Contracts.Standards.ENS.OffchainResolver.ContractDefinition.SupportsInterfaceFunction : SupportsInterfaceFunctionBase {
}
[FunctionAttribute("supportsInterface", "bool")]
public class Nethereum.Contracts.Standards.ENS.OffchainResolver.ContractDefinition.SupportsInterfaceFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private Byte[] <InterfaceID>k__BackingField;
    [ParameterAttribute("bytes4", "interfaceID", "1")]
public Byte[] InterfaceID { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_InterfaceID();
    [CompilerGeneratedAttribute]
public virtual void set_InterfaceID(Byte[] value);
}
public class Nethereum.Contracts.Standards.ENS.OffchainResolver.ContractDefinition.SupportsInterfaceOutputDTO : SupportsInterfaceOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ENS.OffchainResolver.ContractDefinition.SupportsInterfaceOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private bool <ReturnValue1>k__BackingField;
    [ParameterAttribute("bool", "", "1")]
public bool ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual bool get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(bool value);
}
public class Nethereum.Contracts.Standards.ENS.OffchainResolver.ContractDefinition.UrlFunction : UrlFunctionBase {
}
[FunctionAttribute("url", "string")]
public class Nethereum.Contracts.Standards.ENS.OffchainResolver.ContractDefinition.UrlFunctionBase : FunctionMessage {
}
public class Nethereum.Contracts.Standards.ENS.OffchainResolver.ContractDefinition.UrlOutputDTO : UrlOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ENS.OffchainResolver.ContractDefinition.UrlOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private string <ReturnValue1>k__BackingField;
    [ParameterAttribute("string", "", "1")]
public string ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(string value);
}
public class Nethereum.Contracts.Standards.ENS.OffchainResolverService : object {
    [CompilerGeneratedAttribute]
private string <ContractAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private ContractHandler <ContractHandler>k__BackingField;
    public static string ENSIP_10_INTERFACEID;
    public string ContractAddress { get; }
    public ContractHandler ContractHandler { get; }
    public OffchainResolverService(IEthApiContractService ethApiContractService, string contractAddress);
    [CompilerGeneratedAttribute]
public string get_ContractAddress();
    [CompilerGeneratedAttribute]
public ContractHandler get_ContractHandler();
    public Task`1<Byte[]> MakeSignatureHashQueryAsync(MakeSignatureHashFunction makeSignatureHashFunction, BlockParameter blockParameter);
    public Task`1<Byte[]> MakeSignatureHashQueryAsync(string target, ulong expires, Byte[] request, Byte[] result, BlockParameter blockParameter);
    public Task`1<Byte[]> ResolveQueryAsync(ResolveFunction resolveFunction, BlockParameter blockParameter);
    public Task`1<Byte[]> ResolveQueryAsync(Byte[] name, Byte[] data, BlockParameter blockParameter);
    public Task`1<Byte[]> ResolveWithProofQueryAsync(ResolveWithProofFunction resolveWithProofFunction, BlockParameter blockParameter);
    public Task`1<Byte[]> ResolveWithProofQueryAsync(Byte[] response, Byte[] extraData, BlockParameter blockParameter);
    public Task`1<bool> SignersQueryAsync(SignersFunction signersFunction, BlockParameter blockParameter);
    public Task`1<bool> SignersQueryAsync(string returnValue1, BlockParameter blockParameter);
    public Task`1<bool> SupportsInterfaceQueryAsync(SupportsInterfaceFunction supportsInterfaceFunction, BlockParameter blockParameter);
    public Task`1<bool> SupportsInterfaceQueryAsync(Byte[] interfaceID, BlockParameter blockParameter);
    public Task`1<string> UrlQueryAsync(UrlFunction urlFunction, BlockParameter blockParameter);
    public Task`1<string> UrlQueryAsync(BlockParameter blockParameter);
    public Task`1<bool> SupportsENSIP10InterfaceQueryAsync();
}
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.ABIChangedEventDTO : ABIChangedEventDTOBase {
}
[EventAttribute("ABIChanged")]
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.ABIChangedEventDTOBase : object {
    [CompilerGeneratedAttribute]
private Byte[] <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <ContentType>k__BackingField;
    [ParameterAttribute("bytes32", "node", "1", "True")]
public Byte[] Node { get; public set; }
    [ParameterAttribute("uint256", "contentType", "2", "True")]
public BigInteger ContentType { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Node();
    [CompilerGeneratedAttribute]
public virtual void set_Node(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_ContentType();
    [CompilerGeneratedAttribute]
public virtual void set_ContentType(BigInteger value);
}
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.ABIFunction : ABIFunctionBase {
}
[FunctionAttribute("ABI", "Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.ABIOutputDTO")]
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.ABIFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private Byte[] <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <ContentTypes>k__BackingField;
    [ParameterAttribute("bytes32", "node", "1")]
public Byte[] Node { get; public set; }
    [ParameterAttribute("uint256", "contentTypes", "2")]
public BigInteger ContentTypes { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Node();
    [CompilerGeneratedAttribute]
public virtual void set_Node(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_ContentTypes();
    [CompilerGeneratedAttribute]
public virtual void set_ContentTypes(BigInteger value);
}
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.ABIOutputDTO : ABIOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.ABIOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private BigInteger <ReturnValue1>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <ReturnValue2>k__BackingField;
    [ParameterAttribute("uint256", "", "1")]
public BigInteger ReturnValue1 { get; public set; }
    [ParameterAttribute("bytes", "", "2")]
public Byte[] ReturnValue2 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual BigInteger get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(BigInteger value);
    [CompilerGeneratedAttribute]
public virtual Byte[] get_ReturnValue2();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue2(Byte[] value);
}
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.AddrChangedEventDTO : AddrChangedEventDTOBase {
}
[EventAttribute("AddrChanged")]
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.AddrChangedEventDTOBase : object {
    [CompilerGeneratedAttribute]
private Byte[] <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private string <A>k__BackingField;
    [ParameterAttribute("bytes32", "node", "1", "True")]
public Byte[] Node { get; public set; }
    [ParameterAttribute("address", "a", "2", "False")]
public string A { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Node();
    [CompilerGeneratedAttribute]
public virtual void set_Node(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual string get_A();
    [CompilerGeneratedAttribute]
public virtual void set_A(string value);
}
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.AddressChangedEventDTO : AddressChangedEventDTOBase {
}
[EventAttribute("AddressChanged")]
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.AddressChangedEventDTOBase : object {
    [CompilerGeneratedAttribute]
private Byte[] <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <CoinType>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <NewAddress>k__BackingField;
    [ParameterAttribute("bytes32", "node", "1", "True")]
public Byte[] Node { get; public set; }
    [ParameterAttribute("uint256", "coinType", "2", "False")]
public BigInteger CoinType { get; public set; }
    [ParameterAttribute("bytes", "newAddress", "3", "False")]
public Byte[] NewAddress { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Node();
    [CompilerGeneratedAttribute]
public virtual void set_Node(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_CoinType();
    [CompilerGeneratedAttribute]
public virtual void set_CoinType(BigInteger value);
    [CompilerGeneratedAttribute]
public virtual Byte[] get_NewAddress();
    [CompilerGeneratedAttribute]
public virtual void set_NewAddress(Byte[] value);
}
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.AddrFunction : AddrFunctionBase {
}
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.AddrFunction2 : AddrFunctionBase2 {
}
[FunctionAttribute("addr", "address")]
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.AddrFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private Byte[] <Node>k__BackingField;
    [ParameterAttribute("bytes32", "node", "1")]
public Byte[] Node { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Node();
    [CompilerGeneratedAttribute]
public virtual void set_Node(Byte[] value);
}
[FunctionAttribute("addr", "bytes")]
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.AddrFunctionBase2 : FunctionMessage {
    [CompilerGeneratedAttribute]
private Byte[] <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <CoinType>k__BackingField;
    [ParameterAttribute("bytes32", "node", "1")]
public Byte[] Node { get; public set; }
    [ParameterAttribute("uint256", "coinType", "2")]
public BigInteger CoinType { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Node();
    [CompilerGeneratedAttribute]
public virtual void set_Node(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_CoinType();
    [CompilerGeneratedAttribute]
public virtual void set_CoinType(BigInteger value);
}
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.AddrOutputDTO : AddrOutputDTOBase {
}
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.AddrOutputDTO2 : AddrOutputDTOBase2 {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.AddrOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private string <ReturnValue1>k__BackingField;
    [ParameterAttribute("address", "", "1")]
public string ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(string value);
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.AddrOutputDTOBase2 : object {
    [CompilerGeneratedAttribute]
private Byte[] <ReturnValue1>k__BackingField;
    [ParameterAttribute("bytes", "", "1")]
public Byte[] ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(Byte[] value);
}
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.AuthorisationChangedEventDTO : AuthorisationChangedEventDTOBase {
}
[EventAttribute("AuthorisationChanged")]
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.AuthorisationChangedEventDTOBase : object {
    [CompilerGeneratedAttribute]
private Byte[] <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Owner>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Target>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsAuthorised>k__BackingField;
    [ParameterAttribute("bytes32", "node", "1", "True")]
public Byte[] Node { get; public set; }
    [ParameterAttribute("address", "owner", "2", "True")]
public string Owner { get; public set; }
    [ParameterAttribute("address", "target", "3", "True")]
public string Target { get; public set; }
    [ParameterAttribute("bool", "isAuthorised", "4", "False")]
public bool IsAuthorised { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Node();
    [CompilerGeneratedAttribute]
public virtual void set_Node(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual string get_Owner();
    [CompilerGeneratedAttribute]
public virtual void set_Owner(string value);
    [CompilerGeneratedAttribute]
public virtual string get_Target();
    [CompilerGeneratedAttribute]
public virtual void set_Target(string value);
    [CompilerGeneratedAttribute]
public virtual bool get_IsAuthorised();
    [CompilerGeneratedAttribute]
public virtual void set_IsAuthorised(bool value);
}
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.AuthorisationsFunction : AuthorisationsFunctionBase {
}
[FunctionAttribute("authorisations", "bool")]
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.AuthorisationsFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private Byte[] <ReturnValue1>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ReturnValue2>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ReturnValue3>k__BackingField;
    [ParameterAttribute("bytes32", "", "1")]
public Byte[] ReturnValue1 { get; public set; }
    [ParameterAttribute("address", "", "2")]
public string ReturnValue2 { get; public set; }
    [ParameterAttribute("address", "", "3")]
public string ReturnValue3 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual string get_ReturnValue2();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue2(string value);
    [CompilerGeneratedAttribute]
public virtual string get_ReturnValue3();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue3(string value);
}
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.AuthorisationsOutputDTO : AuthorisationsOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.AuthorisationsOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private bool <ReturnValue1>k__BackingField;
    [ParameterAttribute("bool", "", "1")]
public bool ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual bool get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(bool value);
}
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.ClearDNSZoneFunction : ClearDNSZoneFunctionBase {
}
[FunctionAttribute("clearDNSZone")]
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.ClearDNSZoneFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private Byte[] <Node>k__BackingField;
    [ParameterAttribute("bytes32", "node", "1")]
public Byte[] Node { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Node();
    [CompilerGeneratedAttribute]
public virtual void set_Node(Byte[] value);
}
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.ContenthashChangedEventDTO : ContenthashChangedEventDTOBase {
}
[EventAttribute("ContenthashChanged")]
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.ContenthashChangedEventDTOBase : object {
    [CompilerGeneratedAttribute]
private Byte[] <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <Hash>k__BackingField;
    [ParameterAttribute("bytes32", "node", "1", "True")]
public Byte[] Node { get; public set; }
    [ParameterAttribute("bytes", "hash", "2", "False")]
public Byte[] Hash { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Node();
    [CompilerGeneratedAttribute]
public virtual void set_Node(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Hash();
    [CompilerGeneratedAttribute]
public virtual void set_Hash(Byte[] value);
}
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.ContenthashFunction : ContenthashFunctionBase {
}
[FunctionAttribute("contenthash", "bytes")]
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.ContenthashFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private Byte[] <Node>k__BackingField;
    [ParameterAttribute("bytes32", "node", "1")]
public Byte[] Node { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Node();
    [CompilerGeneratedAttribute]
public virtual void set_Node(Byte[] value);
}
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.ContenthashOutputDTO : ContenthashOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.ContenthashOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private Byte[] <ReturnValue1>k__BackingField;
    [ParameterAttribute("bytes", "", "1")]
public Byte[] ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(Byte[] value);
}
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.DNSRecordChangedEventDTO : DNSRecordChangedEventDTOBase {
}
[EventAttribute("DNSRecordChanged")]
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.DNSRecordChangedEventDTOBase : object {
    [CompilerGeneratedAttribute]
private Byte[] <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private ushort <Resource>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <Record>k__BackingField;
    [ParameterAttribute("bytes32", "node", "1", "True")]
public Byte[] Node { get; public set; }
    [ParameterAttribute("bytes", "name", "2", "False")]
public Byte[] Name { get; public set; }
    [ParameterAttribute("uint16", "resource", "3", "False")]
public ushort Resource { get; public set; }
    [ParameterAttribute("bytes", "record", "4", "False")]
public Byte[] Record { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Node();
    [CompilerGeneratedAttribute]
public virtual void set_Node(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Name();
    [CompilerGeneratedAttribute]
public virtual void set_Name(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual ushort get_Resource();
    [CompilerGeneratedAttribute]
public virtual void set_Resource(ushort value);
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Record();
    [CompilerGeneratedAttribute]
public virtual void set_Record(Byte[] value);
}
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.DNSRecordDeletedEventDTO : DNSRecordDeletedEventDTOBase {
}
[EventAttribute("DNSRecordDeleted")]
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.DNSRecordDeletedEventDTOBase : object {
    [CompilerGeneratedAttribute]
private Byte[] <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private ushort <Resource>k__BackingField;
    [ParameterAttribute("bytes32", "node", "1", "True")]
public Byte[] Node { get; public set; }
    [ParameterAttribute("bytes", "name", "2", "False")]
public Byte[] Name { get; public set; }
    [ParameterAttribute("uint16", "resource", "3", "False")]
public ushort Resource { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Node();
    [CompilerGeneratedAttribute]
public virtual void set_Node(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Name();
    [CompilerGeneratedAttribute]
public virtual void set_Name(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual ushort get_Resource();
    [CompilerGeneratedAttribute]
public virtual void set_Resource(ushort value);
}
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.DnsRecordFunction : DnsRecordFunctionBase {
}
[FunctionAttribute("dnsRecord", "bytes")]
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.DnsRecordFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private Byte[] <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private ushort <Resource>k__BackingField;
    [ParameterAttribute("bytes32", "node", "1")]
public Byte[] Node { get; public set; }
    [ParameterAttribute("bytes32", "name", "2")]
public Byte[] Name { get; public set; }
    [ParameterAttribute("uint16", "resource", "3")]
public ushort Resource { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Node();
    [CompilerGeneratedAttribute]
public virtual void set_Node(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Name();
    [CompilerGeneratedAttribute]
public virtual void set_Name(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual ushort get_Resource();
    [CompilerGeneratedAttribute]
public virtual void set_Resource(ushort value);
}
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.DnsRecordOutputDTO : DnsRecordOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.DnsRecordOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private Byte[] <ReturnValue1>k__BackingField;
    [ParameterAttribute("bytes", "", "1")]
public Byte[] ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(Byte[] value);
}
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.DNSZoneClearedEventDTO : DNSZoneClearedEventDTOBase {
}
[EventAttribute("DNSZoneCleared")]
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.DNSZoneClearedEventDTOBase : object {
    [CompilerGeneratedAttribute]
private Byte[] <Node>k__BackingField;
    [ParameterAttribute("bytes32", "node", "1", "True")]
public Byte[] Node { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Node();
    [CompilerGeneratedAttribute]
public virtual void set_Node(Byte[] value);
}
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.HasDNSRecordsFunction : HasDNSRecordsFunctionBase {
}
[FunctionAttribute("hasDNSRecords", "bool")]
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.HasDNSRecordsFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private Byte[] <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <Name>k__BackingField;
    [ParameterAttribute("bytes32", "node", "1")]
public Byte[] Node { get; public set; }
    [ParameterAttribute("bytes32", "name", "2")]
public Byte[] Name { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Node();
    [CompilerGeneratedAttribute]
public virtual void set_Node(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Name();
    [CompilerGeneratedAttribute]
public virtual void set_Name(Byte[] value);
}
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.HasDNSRecordsOutputDTO : HasDNSRecordsOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.HasDNSRecordsOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private bool <ReturnValue1>k__BackingField;
    [ParameterAttribute("bool", "", "1")]
public bool ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual bool get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(bool value);
}
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.InterfaceChangedEventDTO : InterfaceChangedEventDTOBase {
}
[EventAttribute("InterfaceChanged")]
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.InterfaceChangedEventDTOBase : object {
    [CompilerGeneratedAttribute]
private Byte[] <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <InterfaceID>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Implementer>k__BackingField;
    [ParameterAttribute("bytes32", "node", "1", "True")]
public Byte[] Node { get; public set; }
    [ParameterAttribute("bytes4", "interfaceID", "2", "True")]
public Byte[] InterfaceID { get; public set; }
    [ParameterAttribute("address", "implementer", "3", "False")]
public string Implementer { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Node();
    [CompilerGeneratedAttribute]
public virtual void set_Node(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual Byte[] get_InterfaceID();
    [CompilerGeneratedAttribute]
public virtual void set_InterfaceID(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual string get_Implementer();
    [CompilerGeneratedAttribute]
public virtual void set_Implementer(string value);
}
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.InterfaceImplementerFunction : InterfaceImplementerFunctionBase {
}
[FunctionAttribute("interfaceImplementer", "address")]
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.InterfaceImplementerFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private Byte[] <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <InterfaceID>k__BackingField;
    [ParameterAttribute("bytes32", "node", "1")]
public Byte[] Node { get; public set; }
    [ParameterAttribute("bytes4", "interfaceID", "2")]
public Byte[] InterfaceID { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Node();
    [CompilerGeneratedAttribute]
public virtual void set_Node(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual Byte[] get_InterfaceID();
    [CompilerGeneratedAttribute]
public virtual void set_InterfaceID(Byte[] value);
}
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.InterfaceImplementerOutputDTO : InterfaceImplementerOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.InterfaceImplementerOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private string <ReturnValue1>k__BackingField;
    [ParameterAttribute("address", "", "1")]
public string ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(string value);
}
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.NameChangedEventDTO : NameChangedEventDTOBase {
}
[EventAttribute("NameChanged")]
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.NameChangedEventDTOBase : object {
    [CompilerGeneratedAttribute]
private Byte[] <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [ParameterAttribute("bytes32", "node", "1", "True")]
public Byte[] Node { get; public set; }
    [ParameterAttribute("string", "name", "2", "False")]
public string Name { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Node();
    [CompilerGeneratedAttribute]
public virtual void set_Node(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual string get_Name();
    [CompilerGeneratedAttribute]
public virtual void set_Name(string value);
}
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.NameFunction : NameFunctionBase {
}
[FunctionAttribute("name", "string")]
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.NameFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private Byte[] <Node>k__BackingField;
    [ParameterAttribute("bytes32", "node", "1")]
public Byte[] Node { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Node();
    [CompilerGeneratedAttribute]
public virtual void set_Node(Byte[] value);
}
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.NameOutputDTO : NameOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.NameOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private string <ReturnValue1>k__BackingField;
    [ParameterAttribute("string", "", "1")]
public string ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(string value);
}
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.PubkeyChangedEventDTO : PubkeyChangedEventDTOBase {
}
[EventAttribute("PubkeyChanged")]
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.PubkeyChangedEventDTOBase : object {
    [CompilerGeneratedAttribute]
private Byte[] <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <X>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <Y>k__BackingField;
    [ParameterAttribute("bytes32", "node", "1", "True")]
public Byte[] Node { get; public set; }
    [ParameterAttribute("bytes32", "x", "2", "False")]
public Byte[] X { get; public set; }
    [ParameterAttribute("bytes32", "y", "3", "False")]
public Byte[] Y { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Node();
    [CompilerGeneratedAttribute]
public virtual void set_Node(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual Byte[] get_X();
    [CompilerGeneratedAttribute]
public virtual void set_X(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Y();
    [CompilerGeneratedAttribute]
public virtual void set_Y(Byte[] value);
}
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.PubkeyFunction : PubkeyFunctionBase {
}
[FunctionAttribute("pubkey", "Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.PubkeyOutputDTO")]
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.PubkeyFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private Byte[] <Node>k__BackingField;
    [ParameterAttribute("bytes32", "node", "1")]
public Byte[] Node { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Node();
    [CompilerGeneratedAttribute]
public virtual void set_Node(Byte[] value);
}
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.PubkeyOutputDTO : PubkeyOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.PubkeyOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private Byte[] <X>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <Y>k__BackingField;
    [ParameterAttribute("bytes32", "x", "1")]
public Byte[] X { get; public set; }
    [ParameterAttribute("bytes32", "y", "2")]
public Byte[] Y { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_X();
    [CompilerGeneratedAttribute]
public virtual void set_X(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Y();
    [CompilerGeneratedAttribute]
public virtual void set_Y(Byte[] value);
}
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.SetABIFunction : SetABIFunctionBase {
}
[FunctionAttribute("setABI")]
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.SetABIFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private Byte[] <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <ContentType>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <Data>k__BackingField;
    [ParameterAttribute("bytes32", "node", "1")]
public Byte[] Node { get; public set; }
    [ParameterAttribute("uint256", "contentType", "2")]
public BigInteger ContentType { get; public set; }
    [ParameterAttribute("bytes", "data", "3")]
public Byte[] Data { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Node();
    [CompilerGeneratedAttribute]
public virtual void set_Node(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_ContentType();
    [CompilerGeneratedAttribute]
public virtual void set_ContentType(BigInteger value);
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Data();
    [CompilerGeneratedAttribute]
public virtual void set_Data(Byte[] value);
}
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.SetAddrFunction : SetAddrFunctionBase {
}
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.SetAddrFunction2 : SetAddrFunctionBase2 {
}
[FunctionAttribute("setAddr")]
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.SetAddrFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private Byte[] <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <CoinType>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <A>k__BackingField;
    [ParameterAttribute("bytes32", "node", "1")]
public Byte[] Node { get; public set; }
    [ParameterAttribute("uint256", "coinType", "2")]
public BigInteger CoinType { get; public set; }
    [ParameterAttribute("bytes", "a", "3")]
public Byte[] A { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Node();
    [CompilerGeneratedAttribute]
public virtual void set_Node(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_CoinType();
    [CompilerGeneratedAttribute]
public virtual void set_CoinType(BigInteger value);
    [CompilerGeneratedAttribute]
public virtual Byte[] get_A();
    [CompilerGeneratedAttribute]
public virtual void set_A(Byte[] value);
}
[FunctionAttribute("setAddr")]
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.SetAddrFunctionBase2 : FunctionMessage {
    [CompilerGeneratedAttribute]
private Byte[] <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private string <A>k__BackingField;
    [ParameterAttribute("bytes32", "node", "1")]
public Byte[] Node { get; public set; }
    [ParameterAttribute("address", "a", "2")]
public string A { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Node();
    [CompilerGeneratedAttribute]
public virtual void set_Node(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual string get_A();
    [CompilerGeneratedAttribute]
public virtual void set_A(string value);
}
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.SetAuthorisationFunction : SetAuthorisationFunctionBase {
}
[FunctionAttribute("setAuthorisation")]
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.SetAuthorisationFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private Byte[] <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Target>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsAuthorised>k__BackingField;
    [ParameterAttribute("bytes32", "node", "1")]
public Byte[] Node { get; public set; }
    [ParameterAttribute("address", "target", "2")]
public string Target { get; public set; }
    [ParameterAttribute("bool", "isAuthorised", "3")]
public bool IsAuthorised { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Node();
    [CompilerGeneratedAttribute]
public virtual void set_Node(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual string get_Target();
    [CompilerGeneratedAttribute]
public virtual void set_Target(string value);
    [CompilerGeneratedAttribute]
public virtual bool get_IsAuthorised();
    [CompilerGeneratedAttribute]
public virtual void set_IsAuthorised(bool value);
}
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.SetContenthashFunction : SetContenthashFunctionBase {
}
[FunctionAttribute("setContenthash")]
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.SetContenthashFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private Byte[] <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <Hash>k__BackingField;
    [ParameterAttribute("bytes32", "node", "1")]
public Byte[] Node { get; public set; }
    [ParameterAttribute("bytes", "hash", "2")]
public Byte[] Hash { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Node();
    [CompilerGeneratedAttribute]
public virtual void set_Node(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Hash();
    [CompilerGeneratedAttribute]
public virtual void set_Hash(Byte[] value);
}
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.SetDNSRecordsFunction : SetDNSRecordsFunctionBase {
}
[FunctionAttribute("setDNSRecords")]
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.SetDNSRecordsFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private Byte[] <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <Data>k__BackingField;
    [ParameterAttribute("bytes32", "node", "1")]
public Byte[] Node { get; public set; }
    [ParameterAttribute("bytes", "data", "2")]
public Byte[] Data { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Node();
    [CompilerGeneratedAttribute]
public virtual void set_Node(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Data();
    [CompilerGeneratedAttribute]
public virtual void set_Data(Byte[] value);
}
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.SetInterfaceFunction : SetInterfaceFunctionBase {
}
[FunctionAttribute("setInterface")]
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.SetInterfaceFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private Byte[] <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <InterfaceID>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Implementer>k__BackingField;
    [ParameterAttribute("bytes32", "node", "1")]
public Byte[] Node { get; public set; }
    [ParameterAttribute("bytes4", "interfaceID", "2")]
public Byte[] InterfaceID { get; public set; }
    [ParameterAttribute("address", "implementer", "3")]
public string Implementer { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Node();
    [CompilerGeneratedAttribute]
public virtual void set_Node(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual Byte[] get_InterfaceID();
    [CompilerGeneratedAttribute]
public virtual void set_InterfaceID(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual string get_Implementer();
    [CompilerGeneratedAttribute]
public virtual void set_Implementer(string value);
}
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.SetNameFunction : SetNameFunctionBase {
}
[FunctionAttribute("setName")]
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.SetNameFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private Byte[] <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [ParameterAttribute("bytes32", "node", "1")]
public Byte[] Node { get; public set; }
    [ParameterAttribute("string", "name", "2")]
public string Name { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Node();
    [CompilerGeneratedAttribute]
public virtual void set_Node(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual string get_Name();
    [CompilerGeneratedAttribute]
public virtual void set_Name(string value);
}
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.SetPubkeyFunction : SetPubkeyFunctionBase {
}
[FunctionAttribute("setPubkey")]
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.SetPubkeyFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private Byte[] <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <X>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <Y>k__BackingField;
    [ParameterAttribute("bytes32", "node", "1")]
public Byte[] Node { get; public set; }
    [ParameterAttribute("bytes32", "x", "2")]
public Byte[] X { get; public set; }
    [ParameterAttribute("bytes32", "y", "3")]
public Byte[] Y { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Node();
    [CompilerGeneratedAttribute]
public virtual void set_Node(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual Byte[] get_X();
    [CompilerGeneratedAttribute]
public virtual void set_X(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Y();
    [CompilerGeneratedAttribute]
public virtual void set_Y(Byte[] value);
}
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.SetTextFunction : SetTextFunctionBase {
}
[FunctionAttribute("setText")]
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.SetTextFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private Byte[] <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [ParameterAttribute("bytes32", "node", "1")]
public Byte[] Node { get; public set; }
    [ParameterAttribute("string", "key", "2")]
public string Key { get; public set; }
    [ParameterAttribute("string", "value", "3")]
public string Value { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Node();
    [CompilerGeneratedAttribute]
public virtual void set_Node(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual string get_Key();
    [CompilerGeneratedAttribute]
public virtual void set_Key(string value);
    [CompilerGeneratedAttribute]
public virtual string get_Value();
    [CompilerGeneratedAttribute]
public virtual void set_Value(string value);
}
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.SupportsInterfaceFunction : SupportsInterfaceFunctionBase {
}
[FunctionAttribute("supportsInterface", "bool")]
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.SupportsInterfaceFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private Byte[] <InterfaceID>k__BackingField;
    [ParameterAttribute("bytes4", "interfaceID", "1")]
public Byte[] InterfaceID { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_InterfaceID();
    [CompilerGeneratedAttribute]
public virtual void set_InterfaceID(Byte[] value);
}
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.SupportsInterfaceOutputDTO : SupportsInterfaceOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.SupportsInterfaceOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private bool <ReturnValue1>k__BackingField;
    [ParameterAttribute("bool", "", "1")]
public bool ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual bool get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(bool value);
}
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.TextChangedEventDTO : TextChangedEventDTOBase {
}
[EventAttribute("TextChanged")]
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.TextChangedEventDTOBase : object {
    [CompilerGeneratedAttribute]
private Byte[] <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IndexedKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    [ParameterAttribute("bytes32", "node", "1", "True")]
public Byte[] Node { get; public set; }
    [ParameterAttribute("string", "indexedKey", "2", "True")]
public string IndexedKey { get; public set; }
    [ParameterAttribute("string", "key", "3", "False")]
public string Key { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Node();
    [CompilerGeneratedAttribute]
public virtual void set_Node(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual string get_IndexedKey();
    [CompilerGeneratedAttribute]
public virtual void set_IndexedKey(string value);
    [CompilerGeneratedAttribute]
public virtual string get_Key();
    [CompilerGeneratedAttribute]
public virtual void set_Key(string value);
}
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.TextFunction : TextFunctionBase {
}
[FunctionAttribute("text", "string")]
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.TextFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private Byte[] <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    [ParameterAttribute("bytes32", "node", "1")]
public Byte[] Node { get; public set; }
    [ParameterAttribute("string", "key", "2")]
public string Key { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Node();
    [CompilerGeneratedAttribute]
public virtual void set_Node(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual string get_Key();
    [CompilerGeneratedAttribute]
public virtual void set_Key(string value);
}
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.TextOutputDTO : TextOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ENS.PublicResolver.ContractDefinition.TextOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private string <ReturnValue1>k__BackingField;
    [ParameterAttribute("string", "", "1")]
public string ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(string value);
}
public class Nethereum.Contracts.Standards.ENS.PublicResolverService : object {
    [CompilerGeneratedAttribute]
private string <ContractAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private ContractHandler <ContractHandler>k__BackingField;
    public string ContractAddress { get; }
    public ContractHandler ContractHandler { get; }
    public PublicResolverService(IEthApiContractService ethApiContractService, string contractAddress);
    [CompilerGeneratedAttribute]
public string get_ContractAddress();
    [CompilerGeneratedAttribute]
public ContractHandler get_ContractHandler();
    public Task`1<ABIOutputDTO> ABIQueryAsync(ABIFunction aBIFunction, BlockParameter blockParameter);
    public Task`1<ABIOutputDTO> ABIQueryAsync(Byte[] node, BigInteger contentTypes, BlockParameter blockParameter);
    public Task`1<string> AddrQueryAsync(AddrFunction addrFunction, BlockParameter blockParameter);
    public Task`1<string> AddrQueryAsync(Byte[] node, BlockParameter blockParameter);
    public Task`1<Byte[]> AddrQueryAsync(AddrFunction2 addrFunction, BlockParameter blockParameter);
    public Task`1<Byte[]> AddrQueryAsync(Byte[] node, BigInteger coinType, BlockParameter blockParameter);
    public Task`1<bool> AuthorisationsQueryAsync(AuthorisationsFunction authorisationsFunction, BlockParameter blockParameter);
    public Task`1<bool> AuthorisationsQueryAsync(Byte[] returnValue1, string returnValue2, string returnValue3, BlockParameter blockParameter);
    public Task`1<string> ClearDNSZoneRequestAsync(ClearDNSZoneFunction clearDNSZoneFunction);
    public Task`1<TransactionReceipt> ClearDNSZoneRequestAndWaitForReceiptAsync(ClearDNSZoneFunction clearDNSZoneFunction, CancellationToken cancellationToken);
    public Task`1<string> ClearDNSZoneRequestAsync(Byte[] node);
    public Task`1<TransactionReceipt> ClearDNSZoneRequestAndWaitForReceiptAsync(Byte[] node, CancellationToken cancellationToken);
    public Task`1<Byte[]> ContenthashQueryAsync(ContenthashFunction contenthashFunction, BlockParameter blockParameter);
    public Task`1<Byte[]> ContenthashQueryAsync(Byte[] node, BlockParameter blockParameter);
    public Task`1<Byte[]> DnsRecordQueryAsync(DnsRecordFunction dnsRecordFunction, BlockParameter blockParameter);
    public Task`1<Byte[]> DnsRecordQueryAsync(Byte[] node, Byte[] name, ushort resource, BlockParameter blockParameter);
    public Task`1<bool> HasDNSRecordsQueryAsync(HasDNSRecordsFunction hasDNSRecordsFunction, BlockParameter blockParameter);
    public Task`1<bool> HasDNSRecordsQueryAsync(Byte[] node, Byte[] name, BlockParameter blockParameter);
    public Task`1<string> InterfaceImplementerQueryAsync(InterfaceImplementerFunction interfaceImplementerFunction, BlockParameter blockParameter);
    public Task`1<string> InterfaceImplementerQueryAsync(Byte[] node, Byte[] interfaceID, BlockParameter blockParameter);
    public Task`1<string> NameQueryAsync(NameFunction nameFunction, BlockParameter blockParameter);
    public Task`1<string> NameQueryAsync(Byte[] node, BlockParameter blockParameter);
    public Task`1<PubkeyOutputDTO> PubkeyQueryAsync(PubkeyFunction pubkeyFunction, BlockParameter blockParameter);
    public Task`1<PubkeyOutputDTO> PubkeyQueryAsync(Byte[] node, BlockParameter blockParameter);
    public Task`1<string> SetABIRequestAsync(SetABIFunction setABIFunction);
    public Task`1<TransactionReceipt> SetABIRequestAndWaitForReceiptAsync(SetABIFunction setABIFunction, CancellationToken cancellationToken);
    public Task`1<string> SetABIRequestAsync(Byte[] node, BigInteger contentType, Byte[] data);
    public Task`1<TransactionReceipt> SetABIRequestAndWaitForReceiptAsync(Byte[] node, BigInteger contentType, Byte[] data, CancellationToken cancellationToken);
    public Task`1<string> SetAddrRequestAsync(SetAddrFunction setAddrFunction);
    public Task`1<TransactionReceipt> SetAddrRequestAndWaitForReceiptAsync(SetAddrFunction setAddrFunction, CancellationToken cancellationToken);
    public Task`1<string> SetAddrRequestAsync(Byte[] node, BigInteger coinType, Byte[] a);
    public Task`1<TransactionReceipt> SetAddrRequestAndWaitForReceiptAsync(Byte[] node, BigInteger coinType, Byte[] a, CancellationToken cancellationToken);
    public Task`1<string> SetAddrRequestAsync(SetAddrFunction2 setAddrFunction);
    public Task`1<TransactionReceipt> SetAddrRequestAndWaitForReceiptAsync(SetAddrFunction2 setAddrFunction, CancellationToken cancellationToken);
    public Task`1<string> SetAddrRequestAsync(Byte[] node, string a);
    public Task`1<TransactionReceipt> SetAddrRequestAndWaitForReceiptAsync(Byte[] node, string a, CancellationToken cancellationToken);
    public Task`1<string> SetAuthorisationRequestAsync(SetAuthorisationFunction setAuthorisationFunction);
    public Task`1<TransactionReceipt> SetAuthorisationRequestAndWaitForReceiptAsync(SetAuthorisationFunction setAuthorisationFunction, CancellationToken cancellationToken);
    public Task`1<string> SetAuthorisationRequestAsync(Byte[] node, string target, bool isAuthorised);
    public Task`1<TransactionReceipt> SetAuthorisationRequestAndWaitForReceiptAsync(Byte[] node, string target, bool isAuthorised, CancellationToken cancellationToken);
    public Task`1<string> SetContenthashRequestAsync(SetContenthashFunction setContenthashFunction);
    public Task`1<TransactionReceipt> SetContenthashRequestAndWaitForReceiptAsync(SetContenthashFunction setContenthashFunction, CancellationToken cancellationToken);
    public Task`1<string> SetContenthashRequestAsync(Byte[] node, Byte[] hash);
    public Task`1<TransactionReceipt> SetContenthashRequestAndWaitForReceiptAsync(Byte[] node, Byte[] hash, CancellationToken cancellationToken);
    public Task`1<string> SetDNSRecordsRequestAsync(SetDNSRecordsFunction setDNSRecordsFunction);
    public Task`1<TransactionReceipt> SetDNSRecordsRequestAndWaitForReceiptAsync(SetDNSRecordsFunction setDNSRecordsFunction, CancellationToken cancellationToken);
    public Task`1<string> SetDNSRecordsRequestAsync(Byte[] node, Byte[] data);
    public Task`1<TransactionReceipt> SetDNSRecordsRequestAndWaitForReceiptAsync(Byte[] node, Byte[] data, CancellationToken cancellationToken);
    public Task`1<string> SetInterfaceRequestAsync(SetInterfaceFunction setInterfaceFunction);
    public Task`1<TransactionReceipt> SetInterfaceRequestAndWaitForReceiptAsync(SetInterfaceFunction setInterfaceFunction, CancellationToken cancellationToken);
    public Task`1<string> SetInterfaceRequestAsync(Byte[] node, Byte[] interfaceID, string implementer);
    public Task`1<TransactionReceipt> SetInterfaceRequestAndWaitForReceiptAsync(Byte[] node, Byte[] interfaceID, string implementer, CancellationToken cancellationToken);
    public Task`1<string> SetNameRequestAsync(SetNameFunction setNameFunction);
    public Task`1<TransactionReceipt> SetNameRequestAndWaitForReceiptAsync(SetNameFunction setNameFunction, CancellationToken cancellationToken);
    public Task`1<string> SetNameRequestAsync(Byte[] node, string name);
    public Task`1<TransactionReceipt> SetNameRequestAndWaitForReceiptAsync(Byte[] node, string name, CancellationToken cancellationToken);
    public Task`1<string> SetPubkeyRequestAsync(SetPubkeyFunction setPubkeyFunction);
    public Task`1<TransactionReceipt> SetPubkeyRequestAndWaitForReceiptAsync(SetPubkeyFunction setPubkeyFunction, CancellationToken cancellationToken);
    public Task`1<string> SetPubkeyRequestAsync(Byte[] node, Byte[] x, Byte[] y);
    public Task`1<TransactionReceipt> SetPubkeyRequestAndWaitForReceiptAsync(Byte[] node, Byte[] x, Byte[] y, CancellationToken cancellationToken);
    public Task`1<string> SetTextRequestAsync(SetTextFunction setTextFunction);
    public Task`1<TransactionReceipt> SetTextRequestAndWaitForReceiptAsync(SetTextFunction setTextFunction, CancellationToken cancellationToken);
    public Task`1<string> SetTextRequestAsync(Byte[] node, string key, string value);
    public Task`1<TransactionReceipt> SetTextRequestAndWaitForReceiptAsync(Byte[] node, string key, string value, CancellationToken cancellationToken);
    public Task`1<bool> SupportsInterfaceQueryAsync(SupportsInterfaceFunction supportsInterfaceFunction, BlockParameter blockParameter);
    public Task`1<bool> SupportsInterfaceQueryAsync(Byte[] interfaceID, BlockParameter blockParameter);
    public Task`1<string> TextQueryAsync(TextFunction textFunction, BlockParameter blockParameter);
    public Task`1<string> TextQueryAsync(Byte[] node, string key, BlockParameter blockParameter);
}
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.AcceptRegistrarTransferFunction : AcceptRegistrarTransferFunctionBase {
}
[FunctionAttribute("acceptRegistrarTransfer")]
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.AcceptRegistrarTransferFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private Byte[] <Hash>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Deed>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <RegistrationDate>k__BackingField;
    [ParameterAttribute("bytes32", "hash", "1")]
public Byte[] Hash { get; public set; }
    [ParameterAttribute("address", "deed", "2")]
public string Deed { get; public set; }
    [ParameterAttribute("uint256", "registrationDate", "3")]
public BigInteger RegistrationDate { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Hash();
    [CompilerGeneratedAttribute]
public virtual void set_Hash(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual string get_Deed();
    [CompilerGeneratedAttribute]
public virtual void set_Deed(string value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_RegistrationDate();
    [CompilerGeneratedAttribute]
public virtual void set_RegistrationDate(BigInteger value);
}
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.AuctionStartedEventDTO : AuctionStartedEventDTOBase {
}
[EventAttribute("AuctionStarted")]
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.AuctionStartedEventDTOBase : object {
    [CompilerGeneratedAttribute]
private Byte[] <Hash>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <RegistrationDate>k__BackingField;
    [ParameterAttribute("bytes32", "hash", "1", "True")]
public Byte[] Hash { get; public set; }
    [ParameterAttribute("uint256", "registrationDate", "2", "False")]
public BigInteger RegistrationDate { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Hash();
    [CompilerGeneratedAttribute]
public virtual void set_Hash(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_RegistrationDate();
    [CompilerGeneratedAttribute]
public virtual void set_RegistrationDate(BigInteger value);
}
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.BidRevealedEventDTO : BidRevealedEventDTOBase {
}
[EventAttribute("BidRevealed")]
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.BidRevealedEventDTOBase : object {
    [CompilerGeneratedAttribute]
private Byte[] <Hash>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Owner>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private byte <Status>k__BackingField;
    [ParameterAttribute("bytes32", "hash", "1", "True")]
public Byte[] Hash { get; public set; }
    [ParameterAttribute("address", "owner", "2", "True")]
public string Owner { get; public set; }
    [ParameterAttribute("uint256", "value", "3", "False")]
public BigInteger Value { get; public set; }
    [ParameterAttribute("uint8", "status", "4", "False")]
public byte Status { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Hash();
    [CompilerGeneratedAttribute]
public virtual void set_Hash(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual string get_Owner();
    [CompilerGeneratedAttribute]
public virtual void set_Owner(string value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_Value();
    [CompilerGeneratedAttribute]
public virtual void set_Value(BigInteger value);
    [CompilerGeneratedAttribute]
public virtual byte get_Status();
    [CompilerGeneratedAttribute]
public virtual void set_Status(byte value);
}
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.CancelBidFunction : CancelBidFunctionBase {
}
[FunctionAttribute("cancelBid")]
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.CancelBidFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private string <Bidder>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <Seal>k__BackingField;
    [ParameterAttribute("address", "bidder", "1")]
public string Bidder { get; public set; }
    [ParameterAttribute("bytes32", "seal", "2")]
public Byte[] Seal { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Bidder();
    [CompilerGeneratedAttribute]
public virtual void set_Bidder(string value);
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Seal();
    [CompilerGeneratedAttribute]
public virtual void set_Seal(Byte[] value);
}
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.EnsFunction : EnsFunctionBase {
}
[FunctionAttribute("ens", "address")]
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.EnsFunctionBase : FunctionMessage {
}
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.EnsOutputDTO : EnsOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.EnsOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private string <ReturnValue1>k__BackingField;
    [ParameterAttribute("address", "", "1")]
public string ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(string value);
}
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.EntriesFunction : EntriesFunctionBase {
}
[FunctionAttribute("entries", "Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.EntriesOutputDTO")]
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.EntriesFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private Byte[] <Hash>k__BackingField;
    [ParameterAttribute("bytes32", "_hash", "1")]
public Byte[] Hash { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Hash();
    [CompilerGeneratedAttribute]
public virtual void set_Hash(Byte[] value);
}
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.EntriesOutputDTO : EntriesOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.EntriesOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private byte <ReturnValue1>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ReturnValue2>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <ReturnValue3>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <ReturnValue4>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <ReturnValue5>k__BackingField;
    [ParameterAttribute("uint8", "", "1")]
public byte ReturnValue1 { get; public set; }
    [ParameterAttribute("address", "", "2")]
public string ReturnValue2 { get; public set; }
    [ParameterAttribute("uint256", "", "3")]
public BigInteger ReturnValue3 { get; public set; }
    [ParameterAttribute("uint256", "", "4")]
public BigInteger ReturnValue4 { get; public set; }
    [ParameterAttribute("uint256", "", "5")]
public BigInteger ReturnValue5 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual byte get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(byte value);
    [CompilerGeneratedAttribute]
public virtual string get_ReturnValue2();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue2(string value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_ReturnValue3();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue3(BigInteger value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_ReturnValue4();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue4(BigInteger value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_ReturnValue5();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue5(BigInteger value);
}
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.EraseNodeFunction : EraseNodeFunctionBase {
}
[FunctionAttribute("eraseNode")]
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.EraseNodeFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private List`1<Byte[]> <Labels>k__BackingField;
    [ParameterAttribute("bytes32[]", "labels", "1")]
public List`1<Byte[]> Labels { get; public set; }
    [CompilerGeneratedAttribute]
public virtual List`1<Byte[]> get_Labels();
    [CompilerGeneratedAttribute]
public virtual void set_Labels(List`1<Byte[]> value);
}
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.FinalizeAuctionFunction : FinalizeAuctionFunctionBase {
}
[FunctionAttribute("finalizeAuction")]
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.FinalizeAuctionFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private Byte[] <Hash>k__BackingField;
    [ParameterAttribute("bytes32", "_hash", "1")]
public Byte[] Hash { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Hash();
    [CompilerGeneratedAttribute]
public virtual void set_Hash(Byte[] value);
}
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.GetAllowedTimeFunction : GetAllowedTimeFunctionBase {
}
[FunctionAttribute("getAllowedTime", "uint256")]
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.GetAllowedTimeFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private Byte[] <Hash>k__BackingField;
    [ParameterAttribute("bytes32", "_hash", "1")]
public Byte[] Hash { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Hash();
    [CompilerGeneratedAttribute]
public virtual void set_Hash(Byte[] value);
}
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.GetAllowedTimeOutputDTO : GetAllowedTimeOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.GetAllowedTimeOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private BigInteger <ReturnValue1>k__BackingField;
    [ParameterAttribute("uint256", "", "1")]
public BigInteger ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual BigInteger get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(BigInteger value);
}
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.HashInvalidatedEventDTO : HashInvalidatedEventDTOBase {
}
[EventAttribute("HashInvalidated")]
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.HashInvalidatedEventDTOBase : object {
    [CompilerGeneratedAttribute]
private Byte[] <Hash>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <RegistrationDate>k__BackingField;
    [ParameterAttribute("bytes32", "hash", "1", "True")]
public Byte[] Hash { get; public set; }
    [ParameterAttribute("string", "name", "2", "True")]
public string Name { get; public set; }
    [ParameterAttribute("uint256", "value", "3", "False")]
public BigInteger Value { get; public set; }
    [ParameterAttribute("uint256", "registrationDate", "4", "False")]
public BigInteger RegistrationDate { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Hash();
    [CompilerGeneratedAttribute]
public virtual void set_Hash(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual string get_Name();
    [CompilerGeneratedAttribute]
public virtual void set_Name(string value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_Value();
    [CompilerGeneratedAttribute]
public virtual void set_Value(BigInteger value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_RegistrationDate();
    [CompilerGeneratedAttribute]
public virtual void set_RegistrationDate(BigInteger value);
}
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.HashRegisteredEventDTO : HashRegisteredEventDTOBase {
}
[EventAttribute("HashRegistered")]
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.HashRegisteredEventDTOBase : object {
    [CompilerGeneratedAttribute]
private Byte[] <Hash>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Owner>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <RegistrationDate>k__BackingField;
    [ParameterAttribute("bytes32", "hash", "1", "True")]
public Byte[] Hash { get; public set; }
    [ParameterAttribute("address", "owner", "2", "True")]
public string Owner { get; public set; }
    [ParameterAttribute("uint256", "value", "3", "False")]
public BigInteger Value { get; public set; }
    [ParameterAttribute("uint256", "registrationDate", "4", "False")]
public BigInteger RegistrationDate { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Hash();
    [CompilerGeneratedAttribute]
public virtual void set_Hash(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual string get_Owner();
    [CompilerGeneratedAttribute]
public virtual void set_Owner(string value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_Value();
    [CompilerGeneratedAttribute]
public virtual void set_Value(BigInteger value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_RegistrationDate();
    [CompilerGeneratedAttribute]
public virtual void set_RegistrationDate(BigInteger value);
}
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.HashReleasedEventDTO : HashReleasedEventDTOBase {
}
[EventAttribute("HashReleased")]
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.HashReleasedEventDTOBase : object {
    [CompilerGeneratedAttribute]
private Byte[] <Hash>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <Value>k__BackingField;
    [ParameterAttribute("bytes32", "hash", "1", "True")]
public Byte[] Hash { get; public set; }
    [ParameterAttribute("uint256", "value", "2", "False")]
public BigInteger Value { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Hash();
    [CompilerGeneratedAttribute]
public virtual void set_Hash(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_Value();
    [CompilerGeneratedAttribute]
public virtual void set_Value(BigInteger value);
}
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.InvalidateNameFunction : InvalidateNameFunctionBase {
}
[FunctionAttribute("invalidateName")]
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.InvalidateNameFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private string <UnhashedName>k__BackingField;
    [ParameterAttribute("string", "unhashedName", "1")]
public string UnhashedName { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_UnhashedName();
    [CompilerGeneratedAttribute]
public virtual void set_UnhashedName(string value);
}
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.IsAllowedFunction : IsAllowedFunctionBase {
}
[FunctionAttribute("isAllowed", "bool")]
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.IsAllowedFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private Byte[] <Hash>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <Timestamp>k__BackingField;
    [ParameterAttribute("bytes32", "_hash", "1")]
public Byte[] Hash { get; public set; }
    [ParameterAttribute("uint256", "_timestamp", "2")]
public BigInteger Timestamp { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Hash();
    [CompilerGeneratedAttribute]
public virtual void set_Hash(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_Timestamp();
    [CompilerGeneratedAttribute]
public virtual void set_Timestamp(BigInteger value);
}
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.IsAllowedOutputDTO : IsAllowedOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.IsAllowedOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private bool <Allowed>k__BackingField;
    [ParameterAttribute("bool", "allowed", "1")]
public bool Allowed { get; public set; }
    [CompilerGeneratedAttribute]
public virtual bool get_Allowed();
    [CompilerGeneratedAttribute]
public virtual void set_Allowed(bool value);
}
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.LaunchLengthFunction : LaunchLengthFunctionBase {
}
[FunctionAttribute("launchLength", "uint32")]
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.LaunchLengthFunctionBase : FunctionMessage {
}
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.LaunchLengthOutputDTO : LaunchLengthOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.LaunchLengthOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private UInt32 <ReturnValue1>k__BackingField;
    [ParameterAttribute("uint32", "", "1")]
public UInt32 ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual UInt32 get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(UInt32 value);
}
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.NewBidEventDTO : NewBidEventDTOBase {
}
[EventAttribute("NewBid")]
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.NewBidEventDTOBase : object {
    [CompilerGeneratedAttribute]
private Byte[] <Hash>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Bidder>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <Deposit>k__BackingField;
    [ParameterAttribute("bytes32", "hash", "1", "True")]
public Byte[] Hash { get; public set; }
    [ParameterAttribute("address", "bidder", "2", "True")]
public string Bidder { get; public set; }
    [ParameterAttribute("uint256", "deposit", "3", "False")]
public BigInteger Deposit { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Hash();
    [CompilerGeneratedAttribute]
public virtual void set_Hash(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual string get_Bidder();
    [CompilerGeneratedAttribute]
public virtual void set_Bidder(string value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_Deposit();
    [CompilerGeneratedAttribute]
public virtual void set_Deposit(BigInteger value);
}
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.NewBidFunction : NewBidFunctionBase {
}
[FunctionAttribute("newBid")]
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.NewBidFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private Byte[] <SealedBid>k__BackingField;
    [ParameterAttribute("bytes32", "sealedBid", "1")]
public Byte[] SealedBid { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_SealedBid();
    [CompilerGeneratedAttribute]
public virtual void set_SealedBid(Byte[] value);
}
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.RegistryStartedFunction : RegistryStartedFunctionBase {
}
[FunctionAttribute("registryStarted", "uint256")]
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.RegistryStartedFunctionBase : FunctionMessage {
}
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.RegistryStartedOutputDTO : RegistryStartedOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.RegistryStartedOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private BigInteger <ReturnValue1>k__BackingField;
    [ParameterAttribute("uint256", "", "1")]
public BigInteger ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual BigInteger get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(BigInteger value);
}
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.ReleaseDeedFunction : ReleaseDeedFunctionBase {
}
[FunctionAttribute("releaseDeed")]
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.ReleaseDeedFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private Byte[] <Hash>k__BackingField;
    [ParameterAttribute("bytes32", "_hash", "1")]
public Byte[] Hash { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Hash();
    [CompilerGeneratedAttribute]
public virtual void set_Hash(Byte[] value);
}
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.RootNodeFunction : RootNodeFunctionBase {
}
[FunctionAttribute("rootNode", "bytes32")]
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.RootNodeFunctionBase : FunctionMessage {
}
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.RootNodeOutputDTO : RootNodeOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.RootNodeOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private Byte[] <ReturnValue1>k__BackingField;
    [ParameterAttribute("bytes32", "", "1")]
public Byte[] ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(Byte[] value);
}
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.SealedBidsFunction : SealedBidsFunctionBase {
}
[FunctionAttribute("sealedBids", "address")]
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.SealedBidsFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private string <ReturnValue1>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <ReturnValue2>k__BackingField;
    [ParameterAttribute("address", "", "1")]
public string ReturnValue1 { get; public set; }
    [ParameterAttribute("bytes32", "", "2")]
public Byte[] ReturnValue2 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(string value);
    [CompilerGeneratedAttribute]
public virtual Byte[] get_ReturnValue2();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue2(Byte[] value);
}
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.SealedBidsOutputDTO : SealedBidsOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.SealedBidsOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private string <ReturnValue1>k__BackingField;
    [ParameterAttribute("address", "", "1")]
public string ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(string value);
}
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.ShaBidFunction : ShaBidFunctionBase {
}
[FunctionAttribute("shaBid", "bytes32")]
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.ShaBidFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private Byte[] <Hash>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Owner>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <Salt>k__BackingField;
    [ParameterAttribute("bytes32", "hash", "1")]
public Byte[] Hash { get; public set; }
    [ParameterAttribute("address", "owner", "2")]
public string Owner { get; public set; }
    [ParameterAttribute("uint256", "value", "3")]
public BigInteger Value { get; public set; }
    [ParameterAttribute("bytes32", "salt", "4")]
public Byte[] Salt { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Hash();
    [CompilerGeneratedAttribute]
public virtual void set_Hash(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual string get_Owner();
    [CompilerGeneratedAttribute]
public virtual void set_Owner(string value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_Value();
    [CompilerGeneratedAttribute]
public virtual void set_Value(BigInteger value);
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Salt();
    [CompilerGeneratedAttribute]
public virtual void set_Salt(Byte[] value);
}
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.ShaBidOutputDTO : ShaBidOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.ShaBidOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private Byte[] <ReturnValue1>k__BackingField;
    [ParameterAttribute("bytes32", "", "1")]
public Byte[] ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(Byte[] value);
}
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.StartAuctionFunction : StartAuctionFunctionBase {
}
[FunctionAttribute("startAuction")]
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.StartAuctionFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private Byte[] <Hash>k__BackingField;
    [ParameterAttribute("bytes32", "_hash", "1")]
public Byte[] Hash { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Hash();
    [CompilerGeneratedAttribute]
public virtual void set_Hash(Byte[] value);
}
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.StartAuctionsAndBidFunction : StartAuctionsAndBidFunctionBase {
}
[FunctionAttribute("startAuctionsAndBid")]
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.StartAuctionsAndBidFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private List`1<Byte[]> <Hashes>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <SealedBid>k__BackingField;
    [ParameterAttribute("bytes32[]", "hashes", "1")]
public List`1<Byte[]> Hashes { get; public set; }
    [ParameterAttribute("bytes32", "sealedBid", "2")]
public Byte[] SealedBid { get; public set; }
    [CompilerGeneratedAttribute]
public virtual List`1<Byte[]> get_Hashes();
    [CompilerGeneratedAttribute]
public virtual void set_Hashes(List`1<Byte[]> value);
    [CompilerGeneratedAttribute]
public virtual Byte[] get_SealedBid();
    [CompilerGeneratedAttribute]
public virtual void set_SealedBid(Byte[] value);
}
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.StartAuctionsFunction : StartAuctionsFunctionBase {
}
[FunctionAttribute("startAuctions")]
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.StartAuctionsFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private List`1<Byte[]> <Hashes>k__BackingField;
    [ParameterAttribute("bytes32[]", "_hashes", "1")]
public List`1<Byte[]> Hashes { get; public set; }
    [CompilerGeneratedAttribute]
public virtual List`1<Byte[]> get_Hashes();
    [CompilerGeneratedAttribute]
public virtual void set_Hashes(List`1<Byte[]> value);
}
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.StateFunction : StateFunctionBase {
}
[FunctionAttribute("state", "uint8")]
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.StateFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private Byte[] <Hash>k__BackingField;
    [ParameterAttribute("bytes32", "_hash", "1")]
public Byte[] Hash { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Hash();
    [CompilerGeneratedAttribute]
public virtual void set_Hash(Byte[] value);
}
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.StateOutputDTO : StateOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.StateOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private byte <ReturnValue1>k__BackingField;
    [ParameterAttribute("uint8", "", "1")]
public byte ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual byte get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(byte value);
}
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.TransferFunction : TransferFunctionBase {
}
[FunctionAttribute("transfer")]
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.TransferFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private Byte[] <Hash>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NewOwner>k__BackingField;
    [ParameterAttribute("bytes32", "_hash", "1")]
public Byte[] Hash { get; public set; }
    [ParameterAttribute("address", "newOwner", "2")]
public string NewOwner { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Hash();
    [CompilerGeneratedAttribute]
public virtual void set_Hash(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual string get_NewOwner();
    [CompilerGeneratedAttribute]
public virtual void set_NewOwner(string value);
}
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.TransferRegistrarsFunction : TransferRegistrarsFunctionBase {
}
[FunctionAttribute("transferRegistrars")]
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.TransferRegistrarsFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private Byte[] <Hash>k__BackingField;
    [ParameterAttribute("bytes32", "_hash", "1")]
public Byte[] Hash { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Hash();
    [CompilerGeneratedAttribute]
public virtual void set_Hash(Byte[] value);
}
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.UnsealBidFunction : UnsealBidFunctionBase {
}
[FunctionAttribute("unsealBid")]
public class Nethereum.Contracts.Standards.ENS.Registrar.ContractDefinition.UnsealBidFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private Byte[] <Hash>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <Salt>k__BackingField;
    [ParameterAttribute("bytes32", "_hash", "1")]
public Byte[] Hash { get; public set; }
    [ParameterAttribute("uint256", "_value", "2")]
public BigInteger Value { get; public set; }
    [ParameterAttribute("bytes32", "_salt", "3")]
public Byte[] Salt { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Hash();
    [CompilerGeneratedAttribute]
public virtual void set_Hash(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_Value();
    [CompilerGeneratedAttribute]
public virtual void set_Value(BigInteger value);
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Salt();
    [CompilerGeneratedAttribute]
public virtual void set_Salt(Byte[] value);
}
public class Nethereum.Contracts.Standards.ENS.RegistrarService : object {
    [CompilerGeneratedAttribute]
private string <ContractAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private ContractHandler <ContractHandler>k__BackingField;
    public string ContractAddress { get; }
    public ContractHandler ContractHandler { get; }
    public RegistrarService(IEthApiContractService ethApiContractService, string contractAddress);
    [CompilerGeneratedAttribute]
public string get_ContractAddress();
    [CompilerGeneratedAttribute]
public ContractHandler get_ContractHandler();
    public Task`1<string> ReleaseDeedRequestAsync(ReleaseDeedFunction releaseDeedFunction);
    public Task`1<TransactionReceipt> ReleaseDeedRequestAndWaitForReceiptAsync(ReleaseDeedFunction releaseDeedFunction, CancellationToken cancellationToken);
    public Task`1<string> ReleaseDeedRequestAsync(Byte[] hash);
    public Task`1<TransactionReceipt> ReleaseDeedRequestAndWaitForReceiptAsync(Byte[] hash, CancellationToken cancellationToken);
    public Task`1<BigInteger> GetAllowedTimeQueryAsync(GetAllowedTimeFunction getAllowedTimeFunction, BlockParameter blockParameter);
    public Task`1<BigInteger> GetAllowedTimeQueryAsync(Byte[] hash, BlockParameter blockParameter);
    public Task`1<string> InvalidateNameRequestAsync(InvalidateNameFunction invalidateNameFunction);
    public Task`1<TransactionReceipt> InvalidateNameRequestAndWaitForReceiptAsync(InvalidateNameFunction invalidateNameFunction, CancellationToken cancellationToken);
    public Task`1<string> InvalidateNameRequestAsync(string unhashedName);
    public Task`1<TransactionReceipt> InvalidateNameRequestAndWaitForReceiptAsync(string unhashedName, CancellationToken cancellationToken);
    public Task`1<Byte[]> ShaBidQueryAsync(ShaBidFunction shaBidFunction, BlockParameter blockParameter);
    public Task`1<Byte[]> ShaBidQueryAsync(Byte[] hash, string owner, BigInteger value, Byte[] salt, BlockParameter blockParameter);
    public Task`1<string> CancelBidRequestAsync(CancelBidFunction cancelBidFunction);
    public Task`1<TransactionReceipt> CancelBidRequestAndWaitForReceiptAsync(CancelBidFunction cancelBidFunction, CancellationToken cancellationToken);
    public Task`1<string> CancelBidRequestAsync(string bidder, Byte[] seal);
    public Task`1<TransactionReceipt> CancelBidRequestAndWaitForReceiptAsync(string bidder, Byte[] seal, CancellationToken cancellationToken);
    public Task`1<EntriesOutputDTO> EntriesQueryAsync(EntriesFunction entriesFunction, BlockParameter blockParameter);
    public Task`1<EntriesOutputDTO> EntriesQueryAsync(Byte[] hash, BlockParameter blockParameter);
    public Task`1<string> EnsQueryAsync(EnsFunction ensFunction, BlockParameter blockParameter);
    public Task`1<string> EnsQueryAsync(BlockParameter blockParameter);
    public Task`1<string> UnsealBidRequestAsync(UnsealBidFunction unsealBidFunction);
    public Task`1<TransactionReceipt> UnsealBidRequestAndWaitForReceiptAsync(UnsealBidFunction unsealBidFunction, CancellationToken cancellationToken);
    public Task`1<string> UnsealBidRequestAsync(Byte[] hash, BigInteger value, Byte[] salt);
    public Task`1<TransactionReceipt> UnsealBidRequestAndWaitForReceiptAsync(Byte[] hash, BigInteger value, Byte[] salt, CancellationToken cancellationToken);
    public Task`1<string> TransferRegistrarsRequestAsync(TransferRegistrarsFunction transferRegistrarsFunction);
    public Task`1<TransactionReceipt> TransferRegistrarsRequestAndWaitForReceiptAsync(TransferRegistrarsFunction transferRegistrarsFunction, CancellationToken cancellationToken);
    public Task`1<string> TransferRegistrarsRequestAsync(Byte[] hash);
    public Task`1<TransactionReceipt> TransferRegistrarsRequestAndWaitForReceiptAsync(Byte[] hash, CancellationToken cancellationToken);
    public Task`1<string> SealedBidsQueryAsync(SealedBidsFunction sealedBidsFunction, BlockParameter blockParameter);
    public Task`1<string> SealedBidsQueryAsync(string returnValue1, Byte[] returnValue2, BlockParameter blockParameter);
    public Task`1<byte> StateQueryAsync(StateFunction stateFunction, BlockParameter blockParameter);
    public Task`1<byte> StateQueryAsync(Byte[] hash, BlockParameter blockParameter);
    public Task`1<string> TransferRequestAsync(TransferFunction transferFunction);
    public Task`1<TransactionReceipt> TransferRequestAndWaitForReceiptAsync(TransferFunction transferFunction, CancellationToken cancellationToken);
    public Task`1<string> TransferRequestAsync(Byte[] hash, string newOwner);
    public Task`1<TransactionReceipt> TransferRequestAndWaitForReceiptAsync(Byte[] hash, string newOwner, CancellationToken cancellationToken);
    public Task`1<bool> IsAllowedQueryAsync(IsAllowedFunction isAllowedFunction, BlockParameter blockParameter);
    public Task`1<bool> IsAllowedQueryAsync(Byte[] hash, BigInteger timestamp, BlockParameter blockParameter);
    public Task`1<string> FinalizeAuctionRequestAsync(FinalizeAuctionFunction finalizeAuctionFunction);
    public Task`1<TransactionReceipt> FinalizeAuctionRequestAndWaitForReceiptAsync(FinalizeAuctionFunction finalizeAuctionFunction, CancellationToken cancellationToken);
    public Task`1<string> FinalizeAuctionRequestAsync(Byte[] hash);
    public Task`1<TransactionReceipt> FinalizeAuctionRequestAndWaitForReceiptAsync(Byte[] hash, CancellationToken cancellationToken);
    public Task`1<BigInteger> RegistryStartedQueryAsync(RegistryStartedFunction registryStartedFunction, BlockParameter blockParameter);
    public Task`1<BigInteger> RegistryStartedQueryAsync(BlockParameter blockParameter);
    public Task`1<UInt32> LaunchLengthQueryAsync(LaunchLengthFunction launchLengthFunction, BlockParameter blockParameter);
    public Task`1<UInt32> LaunchLengthQueryAsync(BlockParameter blockParameter);
    public Task`1<string> NewBidRequestAsync(NewBidFunction newBidFunction);
    public Task`1<TransactionReceipt> NewBidRequestAndWaitForReceiptAsync(NewBidFunction newBidFunction, CancellationToken cancellationToken);
    public Task`1<string> NewBidRequestAsync(Byte[] sealedBid);
    public Task`1<TransactionReceipt> NewBidRequestAndWaitForReceiptAsync(Byte[] sealedBid, CancellationToken cancellationToken);
    public Task`1<string> EraseNodeRequestAsync(EraseNodeFunction eraseNodeFunction);
    public Task`1<TransactionReceipt> EraseNodeRequestAndWaitForReceiptAsync(EraseNodeFunction eraseNodeFunction, CancellationToken cancellationToken);
    public Task`1<string> EraseNodeRequestAsync(List`1<Byte[]> labels);
    public Task`1<TransactionReceipt> EraseNodeRequestAndWaitForReceiptAsync(List`1<Byte[]> labels, CancellationToken cancellationToken);
    public Task`1<string> StartAuctionsRequestAsync(StartAuctionsFunction startAuctionsFunction);
    public Task`1<TransactionReceipt> StartAuctionsRequestAndWaitForReceiptAsync(StartAuctionsFunction startAuctionsFunction, CancellationToken cancellationToken);
    public Task`1<string> StartAuctionsRequestAsync(List`1<Byte[]> hashes);
    public Task`1<TransactionReceipt> StartAuctionsRequestAndWaitForReceiptAsync(List`1<Byte[]> hashes, CancellationToken cancellationToken);
    public Task`1<string> AcceptRegistrarTransferRequestAsync(AcceptRegistrarTransferFunction acceptRegistrarTransferFunction);
    public Task`1<TransactionReceipt> AcceptRegistrarTransferRequestAndWaitForReceiptAsync(AcceptRegistrarTransferFunction acceptRegistrarTransferFunction, CancellationToken cancellationToken);
    public Task`1<string> AcceptRegistrarTransferRequestAsync(Byte[] hash, string deed, BigInteger registrationDate);
    public Task`1<TransactionReceipt> AcceptRegistrarTransferRequestAndWaitForReceiptAsync(Byte[] hash, string deed, BigInteger registrationDate, CancellationToken cancellationToken);
    public Task`1<string> StartAuctionRequestAsync(StartAuctionFunction startAuctionFunction);
    public Task`1<TransactionReceipt> StartAuctionRequestAndWaitForReceiptAsync(StartAuctionFunction startAuctionFunction, CancellationToken cancellationToken);
    public Task`1<string> StartAuctionRequestAsync(Byte[] hash);
    public Task`1<TransactionReceipt> StartAuctionRequestAndWaitForReceiptAsync(Byte[] hash, CancellationToken cancellationToken);
    public Task`1<Byte[]> RootNodeQueryAsync(RootNodeFunction rootNodeFunction, BlockParameter blockParameter);
    public Task`1<Byte[]> RootNodeQueryAsync(BlockParameter blockParameter);
    public Task`1<string> StartAuctionsAndBidRequestAsync(StartAuctionsAndBidFunction startAuctionsAndBidFunction);
    public Task`1<TransactionReceipt> StartAuctionsAndBidRequestAndWaitForReceiptAsync(StartAuctionsAndBidFunction startAuctionsAndBidFunction, CancellationToken cancellationToken);
    public Task`1<string> StartAuctionsAndBidRequestAsync(List`1<Byte[]> hashes, Byte[] sealedBid);
    public Task`1<TransactionReceipt> StartAuctionsAndBidRequestAndWaitForReceiptAsync(List`1<Byte[]> hashes, Byte[] sealedBid, CancellationToken cancellationToken);
}
public class Nethereum.Contracts.Standards.ENS.ReverseRegistrar.ContractDefinition.AddrReverseNodeFunction : AddrReverseNodeFunctionBase {
}
[FunctionAttribute("ADDR_REVERSE_NODE", "bytes32")]
public class Nethereum.Contracts.Standards.ENS.ReverseRegistrar.ContractDefinition.AddrReverseNodeFunctionBase : FunctionMessage {
}
public class Nethereum.Contracts.Standards.ENS.ReverseRegistrar.ContractDefinition.AddrReverseNodeOutputDto : AddrReverseNodeOutputDtoBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ENS.ReverseRegistrar.ContractDefinition.AddrReverseNodeOutputDtoBase : object {
    [CompilerGeneratedAttribute]
private Byte[] <ReturnValue1>k__BackingField;
    [ParameterAttribute("bytes32", "", "1")]
public Byte[] ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(Byte[] value);
}
public class Nethereum.Contracts.Standards.ENS.ReverseRegistrar.ContractDefinition.ClaimFunction : ClaimFunctionBase {
}
[FunctionAttribute("claim", "bytes32")]
public class Nethereum.Contracts.Standards.ENS.ReverseRegistrar.ContractDefinition.ClaimFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private string <Owner>k__BackingField;
    [ParameterAttribute("address", "owner", "1")]
public string Owner { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Owner();
    [CompilerGeneratedAttribute]
public virtual void set_Owner(string value);
}
public class Nethereum.Contracts.Standards.ENS.ReverseRegistrar.ContractDefinition.ClaimWithResolverFunction : ClaimWithResolverFunctionBase {
}
[FunctionAttribute("claimWithResolver", "bytes32")]
public class Nethereum.Contracts.Standards.ENS.ReverseRegistrar.ContractDefinition.ClaimWithResolverFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private string <Owner>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Resolver>k__BackingField;
    [ParameterAttribute("address", "owner", "1")]
public string Owner { get; public set; }
    [ParameterAttribute("address", "resolver", "2")]
public string Resolver { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Owner();
    [CompilerGeneratedAttribute]
public virtual void set_Owner(string value);
    [CompilerGeneratedAttribute]
public virtual string get_Resolver();
    [CompilerGeneratedAttribute]
public virtual void set_Resolver(string value);
}
public class Nethereum.Contracts.Standards.ENS.ReverseRegistrar.ContractDefinition.DefaultResolverFunction : DefaultResolverFunctionBase {
}
[FunctionAttribute("defaultResolver", "address")]
public class Nethereum.Contracts.Standards.ENS.ReverseRegistrar.ContractDefinition.DefaultResolverFunctionBase : FunctionMessage {
}
public class Nethereum.Contracts.Standards.ENS.ReverseRegistrar.ContractDefinition.DefaultResolverOutputDTO : DefaultResolverOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ENS.ReverseRegistrar.ContractDefinition.DefaultResolverOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private string <ReturnValue1>k__BackingField;
    [ParameterAttribute("address", "", "1")]
public string ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(string value);
}
public class Nethereum.Contracts.Standards.ENS.ReverseRegistrar.ContractDefinition.EnsFunction : EnsFunctionBase {
}
[FunctionAttribute("ens", "address")]
public class Nethereum.Contracts.Standards.ENS.ReverseRegistrar.ContractDefinition.EnsFunctionBase : FunctionMessage {
}
public class Nethereum.Contracts.Standards.ENS.ReverseRegistrar.ContractDefinition.EnsOutputDTO : EnsOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ENS.ReverseRegistrar.ContractDefinition.EnsOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private string <ReturnValue1>k__BackingField;
    [ParameterAttribute("address", "", "1")]
public string ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(string value);
}
public class Nethereum.Contracts.Standards.ENS.ReverseRegistrar.ContractDefinition.NodeFunction : NodeFunctionBase {
}
[FunctionAttribute("node", "bytes32")]
public class Nethereum.Contracts.Standards.ENS.ReverseRegistrar.ContractDefinition.NodeFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private string <Addr>k__BackingField;
    [ParameterAttribute("address", "addr", "1")]
public string Addr { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Addr();
    [CompilerGeneratedAttribute]
public virtual void set_Addr(string value);
}
public class Nethereum.Contracts.Standards.ENS.ReverseRegistrar.ContractDefinition.NodeOutputDTO : NodeOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ENS.ReverseRegistrar.ContractDefinition.NodeOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private Byte[] <ReturnValue1>k__BackingField;
    [ParameterAttribute("bytes32", "", "1")]
public Byte[] ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(Byte[] value);
}
public class Nethereum.Contracts.Standards.ENS.ReverseRegistrar.ContractDefinition.SetNameFunction : SetNameFunctionBase {
}
[FunctionAttribute("setName", "bytes32")]
public class Nethereum.Contracts.Standards.ENS.ReverseRegistrar.ContractDefinition.SetNameFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [ParameterAttribute("string", "name", "1")]
public string Name { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Name();
    [CompilerGeneratedAttribute]
public virtual void set_Name(string value);
}
public enum Nethereum.Contracts.Standards.ENS.TextDataKey : Enum {
    public int value__;
    public static TextDataKey email;
    public static TextDataKey url;
    public static TextDataKey avatar;
    public static TextDataKey description;
    public static TextDataKey notice;
    public static TextDataKey keywords;
    public static TextDataKey vnd_twitter;
    public static TextDataKey vnd_github;
    public static TextDataKey com_twitter;
    public static TextDataKey com_github;
    public static TextDataKey com_discord;
    public static TextDataKey com_reddit;
    public static TextDataKey org_telegram;
    public static TextDataKey eth_ens_delegate;
    public static TextDataKey display;
    public static TextDataKey mail;
    public static TextDataKey location;
    public static TextDataKey phone;
    public static TextDataKey com_peepeth;
    public static TextDataKey com_linkedin;
    public static TextDataKey io_keybase;
}
[ExtensionAttribute]
public static class Nethereum.Contracts.Standards.ENS.TextDataKeyExtensions : object {
    [ExtensionAttribute]
public static string GetDataKeyAsString(TextDataKey textDataKey);
}
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.ApprovalForAllEventDTO : ApprovalForAllEventDTOBase {
}
[EventAttribute("ApprovalForAll")]
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.ApprovalForAllEventDTOBase : object {
    [CompilerGeneratedAttribute]
private string <Account>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Operator>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Approved>k__BackingField;
    [ParameterAttribute("address", "account", "1", "True")]
public string Account { get; public set; }
    [ParameterAttribute("address", "operator", "2", "True")]
public string Operator { get; public set; }
    [ParameterAttribute("bool", "approved", "3", "False")]
public bool Approved { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Account();
    [CompilerGeneratedAttribute]
public virtual void set_Account(string value);
    [CompilerGeneratedAttribute]
public virtual string get_Operator();
    [CompilerGeneratedAttribute]
public virtual void set_Operator(string value);
    [CompilerGeneratedAttribute]
public virtual bool get_Approved();
    [CompilerGeneratedAttribute]
public virtual void set_Approved(bool value);
}
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.BalanceOfBatchFunction : BalanceOfBatchFunctionBase {
}
[FunctionAttribute("balanceOfBatch", "uint256[]")]
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.BalanceOfBatchFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private List`1<string> <Accounts>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<BigInteger> <Ids>k__BackingField;
    [ParameterAttribute("address[]", "accounts", "1")]
public List`1<string> Accounts { get; public set; }
    [ParameterAttribute("uint256[]", "ids", "2")]
public List`1<BigInteger> Ids { get; public set; }
    [CompilerGeneratedAttribute]
public virtual List`1<string> get_Accounts();
    [CompilerGeneratedAttribute]
public virtual void set_Accounts(List`1<string> value);
    [CompilerGeneratedAttribute]
public virtual List`1<BigInteger> get_Ids();
    [CompilerGeneratedAttribute]
public virtual void set_Ids(List`1<BigInteger> value);
}
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.BalanceOfBatchOutputDTO : BalanceOfBatchOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.BalanceOfBatchOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private List`1<BigInteger> <ReturnValue1>k__BackingField;
    [ParameterAttribute("uint256[]", "", "1")]
public List`1<BigInteger> ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual List`1<BigInteger> get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(List`1<BigInteger> value);
}
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.BalanceOfFunction : BalanceOfFunctionBase {
}
[FunctionAttribute("balanceOf", "uint256")]
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.BalanceOfFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private string <Account>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <Id>k__BackingField;
    [ParameterAttribute("address", "account", "1")]
public string Account { get; public set; }
    [ParameterAttribute("uint256", "id", "2")]
public BigInteger Id { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Account();
    [CompilerGeneratedAttribute]
public virtual void set_Account(string value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_Id();
    [CompilerGeneratedAttribute]
public virtual void set_Id(BigInteger value);
}
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.BalanceOfOutputDTO : BalanceOfOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.BalanceOfOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private BigInteger <ReturnValue1>k__BackingField;
    [ParameterAttribute("uint256", "", "1")]
public BigInteger ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual BigInteger get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(BigInteger value);
}
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.BurnBatchFunction : BurnBatchFunctionBase {
}
[FunctionAttribute("burnBatch")]
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.BurnBatchFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private string <Account>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<BigInteger> <Ids>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<BigInteger> <Values>k__BackingField;
    [ParameterAttribute("address", "account", "1")]
public string Account { get; public set; }
    [ParameterAttribute("uint256[]", "ids", "2")]
public List`1<BigInteger> Ids { get; public set; }
    [ParameterAttribute("uint256[]", "values", "3")]
public List`1<BigInteger> Values { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Account();
    [CompilerGeneratedAttribute]
public virtual void set_Account(string value);
    [CompilerGeneratedAttribute]
public virtual List`1<BigInteger> get_Ids();
    [CompilerGeneratedAttribute]
public virtual void set_Ids(List`1<BigInteger> value);
    [CompilerGeneratedAttribute]
public virtual List`1<BigInteger> get_Values();
    [CompilerGeneratedAttribute]
public virtual void set_Values(List`1<BigInteger> value);
}
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.BurnFunction : BurnFunctionBase {
}
[FunctionAttribute("burn")]
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.BurnFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private string <Account>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <Value>k__BackingField;
    [ParameterAttribute("address", "account", "1")]
public string Account { get; public set; }
    [ParameterAttribute("uint256", "id", "2")]
public BigInteger Id { get; public set; }
    [ParameterAttribute("uint256", "value", "3")]
public BigInteger Value { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Account();
    [CompilerGeneratedAttribute]
public virtual void set_Account(string value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_Id();
    [CompilerGeneratedAttribute]
public virtual void set_Id(BigInteger value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_Value();
    [CompilerGeneratedAttribute]
public virtual void set_Value(BigInteger value);
}
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.ExistsFunction : ExistsFunctionBase {
}
[FunctionAttribute("exists", "bool")]
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.ExistsFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private BigInteger <Id>k__BackingField;
    [ParameterAttribute("uint256", "id", "1")]
public BigInteger Id { get; public set; }
    [CompilerGeneratedAttribute]
public virtual BigInteger get_Id();
    [CompilerGeneratedAttribute]
public virtual void set_Id(BigInteger value);
}
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.ExistsOutputDTO : ExistsOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.ExistsOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private bool <ReturnValue1>k__BackingField;
    [ParameterAttribute("bool", "", "1")]
public bool ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual bool get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(bool value);
}
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.IsApprovedForAllFunction : IsApprovedForAllFunctionBase {
}
[FunctionAttribute("isApprovedForAll", "bool")]
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.IsApprovedForAllFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private string <Account>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Operator>k__BackingField;
    [ParameterAttribute("address", "account", "1")]
public string Account { get; public set; }
    [ParameterAttribute("address", "operator", "2")]
public string Operator { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Account();
    [CompilerGeneratedAttribute]
public virtual void set_Account(string value);
    [CompilerGeneratedAttribute]
public virtual string get_Operator();
    [CompilerGeneratedAttribute]
public virtual void set_Operator(string value);
}
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.IsApprovedForAllOutputDTO : IsApprovedForAllOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.IsApprovedForAllOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private bool <ReturnValue1>k__BackingField;
    [ParameterAttribute("bool", "", "1")]
public bool ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual bool get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(bool value);
}
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.MintBatchFunction : MintBatchFunctionBase {
}
[FunctionAttribute("mintBatch")]
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.MintBatchFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private string <To>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<BigInteger> <Ids>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<BigInteger> <Amounts>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <Data>k__BackingField;
    [ParameterAttribute("address", "to", "1")]
public string To { get; public set; }
    [ParameterAttribute("uint256[]", "ids", "2")]
public List`1<BigInteger> Ids { get; public set; }
    [ParameterAttribute("uint256[]", "amounts", "3")]
public List`1<BigInteger> Amounts { get; public set; }
    [ParameterAttribute("bytes", "data", "4")]
public Byte[] Data { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_To();
    [CompilerGeneratedAttribute]
public virtual void set_To(string value);
    [CompilerGeneratedAttribute]
public virtual List`1<BigInteger> get_Ids();
    [CompilerGeneratedAttribute]
public virtual void set_Ids(List`1<BigInteger> value);
    [CompilerGeneratedAttribute]
public virtual List`1<BigInteger> get_Amounts();
    [CompilerGeneratedAttribute]
public virtual void set_Amounts(List`1<BigInteger> value);
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Data();
    [CompilerGeneratedAttribute]
public virtual void set_Data(Byte[] value);
}
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.MintFunction : MintFunctionBase {
}
[FunctionAttribute("mint")]
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.MintFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private string <Account>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <Amount>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <Data>k__BackingField;
    [ParameterAttribute("address", "account", "1")]
public string Account { get; public set; }
    [ParameterAttribute("uint256", "id", "2")]
public BigInteger Id { get; public set; }
    [ParameterAttribute("uint256", "amount", "3")]
public BigInteger Amount { get; public set; }
    [ParameterAttribute("bytes", "data", "4")]
public Byte[] Data { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Account();
    [CompilerGeneratedAttribute]
public virtual void set_Account(string value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_Id();
    [CompilerGeneratedAttribute]
public virtual void set_Id(BigInteger value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_Amount();
    [CompilerGeneratedAttribute]
public virtual void set_Amount(BigInteger value);
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Data();
    [CompilerGeneratedAttribute]
public virtual void set_Data(Byte[] value);
}
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.OwnerFunction : OwnerFunctionBase {
}
[FunctionAttribute("owner", "address")]
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.OwnerFunctionBase : FunctionMessage {
}
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.OwnerOutputDTO : OwnerOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.OwnerOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private string <ReturnValue1>k__BackingField;
    [ParameterAttribute("address", "", "1")]
public string ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(string value);
}
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.OwnershipTransferredEventDTO : OwnershipTransferredEventDTOBase {
}
[EventAttribute("OwnershipTransferred")]
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.OwnershipTransferredEventDTOBase : object {
    [CompilerGeneratedAttribute]
private string <PreviousOwner>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NewOwner>k__BackingField;
    [ParameterAttribute("address", "previousOwner", "1", "True")]
public string PreviousOwner { get; public set; }
    [ParameterAttribute("address", "newOwner", "2", "True")]
public string NewOwner { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_PreviousOwner();
    [CompilerGeneratedAttribute]
public virtual void set_PreviousOwner(string value);
    [CompilerGeneratedAttribute]
public virtual string get_NewOwner();
    [CompilerGeneratedAttribute]
public virtual void set_NewOwner(string value);
}
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.PausedEventDTO : PausedEventDTOBase {
}
[EventAttribute("Paused")]
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.PausedEventDTOBase : object {
    [CompilerGeneratedAttribute]
private string <Account>k__BackingField;
    [ParameterAttribute("address", "account", "1", "False")]
public string Account { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Account();
    [CompilerGeneratedAttribute]
public virtual void set_Account(string value);
}
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.PausedFunction : PausedFunctionBase {
}
[FunctionAttribute("paused", "bool")]
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.PausedFunctionBase : FunctionMessage {
}
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.PausedOutputDTO : PausedOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.PausedOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private bool <ReturnValue1>k__BackingField;
    [ParameterAttribute("bool", "", "1")]
public bool ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual bool get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(bool value);
}
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.PauseFunction : PauseFunctionBase {
}
[FunctionAttribute("pause")]
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.PauseFunctionBase : FunctionMessage {
}
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.RenounceOwnershipFunction : RenounceOwnershipFunctionBase {
}
[FunctionAttribute("renounceOwnership")]
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.RenounceOwnershipFunctionBase : FunctionMessage {
}
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.SafeBatchTransferFromFunction : SafeBatchTransferFromFunctionBase {
}
[FunctionAttribute("safeBatchTransferFrom")]
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.SafeBatchTransferFromFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private string <From>k__BackingField;
    [CompilerGeneratedAttribute]
private string <To>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<BigInteger> <Ids>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<BigInteger> <Amounts>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <Data>k__BackingField;
    [ParameterAttribute("address", "from", "1")]
public string From { get; public set; }
    [ParameterAttribute("address", "to", "2")]
public string To { get; public set; }
    [ParameterAttribute("uint256[]", "ids", "3")]
public List`1<BigInteger> Ids { get; public set; }
    [ParameterAttribute("uint256[]", "amounts", "4")]
public List`1<BigInteger> Amounts { get; public set; }
    [ParameterAttribute("bytes", "data", "5")]
public Byte[] Data { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_From();
    [CompilerGeneratedAttribute]
public virtual void set_From(string value);
    [CompilerGeneratedAttribute]
public virtual string get_To();
    [CompilerGeneratedAttribute]
public virtual void set_To(string value);
    [CompilerGeneratedAttribute]
public virtual List`1<BigInteger> get_Ids();
    [CompilerGeneratedAttribute]
public virtual void set_Ids(List`1<BigInteger> value);
    [CompilerGeneratedAttribute]
public virtual List`1<BigInteger> get_Amounts();
    [CompilerGeneratedAttribute]
public virtual void set_Amounts(List`1<BigInteger> value);
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Data();
    [CompilerGeneratedAttribute]
public virtual void set_Data(Byte[] value);
}
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.SafeTransferFromFunction : SafeTransferFromFunctionBase {
}
[FunctionAttribute("safeTransferFrom")]
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.SafeTransferFromFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private string <From>k__BackingField;
    [CompilerGeneratedAttribute]
private string <To>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <Amount>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <Data>k__BackingField;
    [ParameterAttribute("address", "from", "1")]
public string From { get; public set; }
    [ParameterAttribute("address", "to", "2")]
public string To { get; public set; }
    [ParameterAttribute("uint256", "id", "3")]
public BigInteger Id { get; public set; }
    [ParameterAttribute("uint256", "amount", "4")]
public BigInteger Amount { get; public set; }
    [ParameterAttribute("bytes", "data", "5")]
public Byte[] Data { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_From();
    [CompilerGeneratedAttribute]
public virtual void set_From(string value);
    [CompilerGeneratedAttribute]
public virtual string get_To();
    [CompilerGeneratedAttribute]
public virtual void set_To(string value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_Id();
    [CompilerGeneratedAttribute]
public virtual void set_Id(BigInteger value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_Amount();
    [CompilerGeneratedAttribute]
public virtual void set_Amount(BigInteger value);
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Data();
    [CompilerGeneratedAttribute]
public virtual void set_Data(Byte[] value);
}
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.SetApprovalForAllFunction : SetApprovalForAllFunctionBase {
}
[FunctionAttribute("setApprovalForAll")]
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.SetApprovalForAllFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private string <Operator>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Approved>k__BackingField;
    [ParameterAttribute("address", "operator", "1")]
public string Operator { get; public set; }
    [ParameterAttribute("bool", "approved", "2")]
public bool Approved { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Operator();
    [CompilerGeneratedAttribute]
public virtual void set_Operator(string value);
    [CompilerGeneratedAttribute]
public virtual bool get_Approved();
    [CompilerGeneratedAttribute]
public virtual void set_Approved(bool value);
}
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.SetTokenUriFunction : SetTokenUriFunctionBase {
}
[FunctionAttribute("setTokenUri")]
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.SetTokenUriFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private BigInteger <TokenId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TokenURI>k__BackingField;
    [ParameterAttribute("uint256", "tokenId", "1")]
public BigInteger TokenId { get; public set; }
    [ParameterAttribute("string", "tokenURI", "2")]
public string TokenURI { get; public set; }
    [CompilerGeneratedAttribute]
public virtual BigInteger get_TokenId();
    [CompilerGeneratedAttribute]
public virtual void set_TokenId(BigInteger value);
    [CompilerGeneratedAttribute]
public virtual string get_TokenURI();
    [CompilerGeneratedAttribute]
public virtual void set_TokenURI(string value);
}
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.SetURIFunction : SetURIFunctionBase {
}
[FunctionAttribute("setURI")]
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.SetURIFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private string <Newuri>k__BackingField;
    [ParameterAttribute("string", "newuri", "1")]
public string Newuri { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Newuri();
    [CompilerGeneratedAttribute]
public virtual void set_Newuri(string value);
}
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.SupportsInterfaceFunction : SupportsInterfaceFunctionBase {
}
[FunctionAttribute("supportsInterface", "bool")]
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.SupportsInterfaceFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private Byte[] <InterfaceId>k__BackingField;
    [ParameterAttribute("bytes4", "interfaceId", "1")]
public Byte[] InterfaceId { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_InterfaceId();
    [CompilerGeneratedAttribute]
public virtual void set_InterfaceId(Byte[] value);
}
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.SupportsInterfaceOutputDTO : SupportsInterfaceOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.SupportsInterfaceOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private bool <ReturnValue1>k__BackingField;
    [ParameterAttribute("bool", "", "1")]
public bool ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual bool get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(bool value);
}
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.TotalSupplyFunction : TotalSupplyFunctionBase {
}
[FunctionAttribute("totalSupply", "uint256")]
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.TotalSupplyFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private BigInteger <Id>k__BackingField;
    [ParameterAttribute("uint256", "id", "1")]
public BigInteger Id { get; public set; }
    [CompilerGeneratedAttribute]
public virtual BigInteger get_Id();
    [CompilerGeneratedAttribute]
public virtual void set_Id(BigInteger value);
}
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.TotalSupplyOutputDTO : TotalSupplyOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.TotalSupplyOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private BigInteger <ReturnValue1>k__BackingField;
    [ParameterAttribute("uint256", "", "1")]
public BigInteger ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual BigInteger get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(BigInteger value);
}
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.TransferBatchEventDTO : TransferBatchEventDTOBase {
}
[EventAttribute("TransferBatch")]
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.TransferBatchEventDTOBase : object {
    [CompilerGeneratedAttribute]
private string <Operator>k__BackingField;
    [CompilerGeneratedAttribute]
private string <From>k__BackingField;
    [CompilerGeneratedAttribute]
private string <To>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<BigInteger> <Ids>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<BigInteger> <Values>k__BackingField;
    [ParameterAttribute("address", "operator", "1", "True")]
public string Operator { get; public set; }
    [ParameterAttribute("address", "from", "2", "True")]
public string From { get; public set; }
    [ParameterAttribute("address", "to", "3", "True")]
public string To { get; public set; }
    [ParameterAttribute("uint256[]", "ids", "4", "False")]
public List`1<BigInteger> Ids { get; public set; }
    [ParameterAttribute("uint256[]", "values", "5", "False")]
public List`1<BigInteger> Values { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Operator();
    [CompilerGeneratedAttribute]
public virtual void set_Operator(string value);
    [CompilerGeneratedAttribute]
public virtual string get_From();
    [CompilerGeneratedAttribute]
public virtual void set_From(string value);
    [CompilerGeneratedAttribute]
public virtual string get_To();
    [CompilerGeneratedAttribute]
public virtual void set_To(string value);
    [CompilerGeneratedAttribute]
public virtual List`1<BigInteger> get_Ids();
    [CompilerGeneratedAttribute]
public virtual void set_Ids(List`1<BigInteger> value);
    [CompilerGeneratedAttribute]
public virtual List`1<BigInteger> get_Values();
    [CompilerGeneratedAttribute]
public virtual void set_Values(List`1<BigInteger> value);
}
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.TransferOwnershipFunction : TransferOwnershipFunctionBase {
}
[FunctionAttribute("transferOwnership")]
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.TransferOwnershipFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private string <NewOwner>k__BackingField;
    [ParameterAttribute("address", "newOwner", "1")]
public string NewOwner { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_NewOwner();
    [CompilerGeneratedAttribute]
public virtual void set_NewOwner(string value);
}
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.TransferSingleEventDTO : TransferSingleEventDTOBase {
}
[EventAttribute("TransferSingle")]
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.TransferSingleEventDTOBase : object {
    [CompilerGeneratedAttribute]
private string <Operator>k__BackingField;
    [CompilerGeneratedAttribute]
private string <From>k__BackingField;
    [CompilerGeneratedAttribute]
private string <To>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <Value>k__BackingField;
    [ParameterAttribute("address", "operator", "1", "True")]
public string Operator { get; public set; }
    [ParameterAttribute("address", "from", "2", "True")]
public string From { get; public set; }
    [ParameterAttribute("address", "to", "3", "True")]
public string To { get; public set; }
    [ParameterAttribute("uint256", "id", "4", "False")]
public BigInteger Id { get; public set; }
    [ParameterAttribute("uint256", "value", "5", "False")]
public BigInteger Value { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Operator();
    [CompilerGeneratedAttribute]
public virtual void set_Operator(string value);
    [CompilerGeneratedAttribute]
public virtual string get_From();
    [CompilerGeneratedAttribute]
public virtual void set_From(string value);
    [CompilerGeneratedAttribute]
public virtual string get_To();
    [CompilerGeneratedAttribute]
public virtual void set_To(string value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_Id();
    [CompilerGeneratedAttribute]
public virtual void set_Id(BigInteger value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_Value();
    [CompilerGeneratedAttribute]
public virtual void set_Value(BigInteger value);
}
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.UnpausedEventDTO : UnpausedEventDTOBase {
}
[EventAttribute("Unpaused")]
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.UnpausedEventDTOBase : object {
    [CompilerGeneratedAttribute]
private string <Account>k__BackingField;
    [ParameterAttribute("address", "account", "1", "False")]
public string Account { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Account();
    [CompilerGeneratedAttribute]
public virtual void set_Account(string value);
}
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.UnpauseFunction : UnpauseFunctionBase {
}
[FunctionAttribute("unpause")]
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.UnpauseFunctionBase : FunctionMessage {
}
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.URIEventDTO : URIEventDTOBase {
}
[EventAttribute("URI")]
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.URIEventDTOBase : object {
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <Id>k__BackingField;
    [ParameterAttribute("string", "value", "1", "False")]
public string Value { get; public set; }
    [ParameterAttribute("uint256", "id", "2", "True")]
public BigInteger Id { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Value();
    [CompilerGeneratedAttribute]
public virtual void set_Value(string value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_Id();
    [CompilerGeneratedAttribute]
public virtual void set_Id(BigInteger value);
}
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.UriFunction : UriFunctionBase {
}
[FunctionAttribute("uri", "string")]
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.UriFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private BigInteger <TokenId>k__BackingField;
    [ParameterAttribute("uint256", "tokenId", "1")]
public BigInteger TokenId { get; public set; }
    [CompilerGeneratedAttribute]
public virtual BigInteger get_TokenId();
    [CompilerGeneratedAttribute]
public virtual void set_TokenId(BigInteger value);
}
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.UriOutputDTO : UriOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ERC1155.ContractDefinition.UriOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private string <ReturnValue1>k__BackingField;
    [ParameterAttribute("string", "", "1")]
public string ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(string value);
}
public class Nethereum.Contracts.Standards.ERC1155.ERC1155ContractService : object {
    [CompilerGeneratedAttribute]
private string <ContractAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private ContractHandler <ContractHandler>k__BackingField;
    public string ContractAddress { get; }
    public ContractHandler ContractHandler { get; }
    public ERC1155ContractService(IEthApiContractService ethApiContractService, string contractAddress);
    [CompilerGeneratedAttribute]
public string get_ContractAddress();
    [CompilerGeneratedAttribute]
public ContractHandler get_ContractHandler();
    public Task`1<bool> SupportsErc1155InterfaceQueryAsync();
    public Task`1<BigInteger> BalanceOfQueryAsync(BalanceOfFunction balanceOfFunction, BlockParameter blockParameter);
    public Task`1<BigInteger> BalanceOfQueryAsync(string account, BigInteger id, BlockParameter blockParameter);
    public Task`1<List`1<BigInteger>> BalanceOfBatchQueryAsync(BalanceOfBatchFunction balanceOfBatchFunction, BlockParameter blockParameter);
    public Task`1<List`1<BigInteger>> BalanceOfBatchQueryAsync(List`1<string> accounts, List`1<BigInteger> ids, BlockParameter blockParameter);
    public Task`1<string> BurnRequestAsync(BurnFunction burnFunction);
    public Task`1<TransactionReceipt> BurnRequestAndWaitForReceiptAsync(BurnFunction burnFunction, CancellationToken cancellationToken);
    public Task`1<string> BurnRequestAsync(string account, BigInteger id, BigInteger value);
    public Task`1<TransactionReceipt> BurnRequestAndWaitForReceiptAsync(string account, BigInteger id, BigInteger value, CancellationToken cancellationToken);
    public Task`1<string> BurnBatchRequestAsync(BurnBatchFunction burnBatchFunction);
    public Task`1<TransactionReceipt> BurnBatchRequestAndWaitForReceiptAsync(BurnBatchFunction burnBatchFunction, CancellationToken cancellationToken);
    public Task`1<string> BurnBatchRequestAsync(string account, List`1<BigInteger> ids, List`1<BigInteger> values);
    public Task`1<TransactionReceipt> BurnBatchRequestAndWaitForReceiptAsync(string account, List`1<BigInteger> ids, List`1<BigInteger> values, CancellationToken cancellationToken);
    public Task`1<bool> ExistsQueryAsync(ExistsFunction existsFunction, BlockParameter blockParameter);
    public Task`1<bool> ExistsQueryAsync(BigInteger id, BlockParameter blockParameter);
    public Task`1<bool> IsApprovedForAllQueryAsync(IsApprovedForAllFunction isApprovedForAllFunction, BlockParameter blockParameter);
    public Task`1<bool> IsApprovedForAllQueryAsync(string account, string operator, BlockParameter blockParameter);
    public Task`1<string> MintRequestAsync(MintFunction mintFunction);
    public Task`1<TransactionReceipt> MintRequestAndWaitForReceiptAsync(MintFunction mintFunction, CancellationToken cancellationToken);
    public Task`1<string> MintRequestAsync(string account, BigInteger id, BigInteger amount, Byte[] data);
    public Task`1<TransactionReceipt> MintRequestAndWaitForReceiptAsync(string account, BigInteger id, BigInteger amount, Byte[] data, CancellationToken cancellationToken);
    public Task`1<string> MintBatchRequestAsync(MintBatchFunction mintBatchFunction);
    public Task`1<TransactionReceipt> MintBatchRequestAndWaitForReceiptAsync(MintBatchFunction mintBatchFunction, CancellationToken cancellationToken);
    public Task`1<string> MintBatchRequestAsync(string to, List`1<BigInteger> ids, List`1<BigInteger> amounts, Byte[] data);
    public Task`1<TransactionReceipt> MintBatchRequestAndWaitForReceiptAsync(string to, List`1<BigInteger> ids, List`1<BigInteger> amounts, Byte[] data, CancellationToken cancellationToken);
    public Task`1<string> OwnerQueryAsync(OwnerFunction ownerFunction, BlockParameter blockParameter);
    public Task`1<string> OwnerQueryAsync(BlockParameter blockParameter);
    public Task`1<string> PauseRequestAsync(PauseFunction pauseFunction);
    public Task`1<string> PauseRequestAsync();
    public Task`1<TransactionReceipt> PauseRequestAndWaitForReceiptAsync(PauseFunction pauseFunction, CancellationToken cancellationToken);
    public Task`1<TransactionReceipt> PauseRequestAndWaitForReceiptAsync(CancellationToken cancellationToken);
    public Task`1<bool> PausedQueryAsync(PausedFunction pausedFunction, BlockParameter blockParameter);
    public Task`1<bool> PausedQueryAsync(BlockParameter blockParameter);
    public Task`1<string> RenounceOwnershipRequestAsync(RenounceOwnershipFunction renounceOwnershipFunction);
    public Task`1<string> RenounceOwnershipRequestAsync();
    public Task`1<TransactionReceipt> RenounceOwnershipRequestAndWaitForReceiptAsync(RenounceOwnershipFunction renounceOwnershipFunction, CancellationToken cancellationToken);
    public Task`1<TransactionReceipt> RenounceOwnershipRequestAndWaitForReceiptAsync(CancellationToken cancellationToken);
    public Task`1<string> SafeBatchTransferFromRequestAsync(SafeBatchTransferFromFunction safeBatchTransferFromFunction);
    public Task`1<TransactionReceipt> SafeBatchTransferFromRequestAndWaitForReceiptAsync(SafeBatchTransferFromFunction safeBatchTransferFromFunction, CancellationToken cancellationToken);
    public Task`1<string> SafeBatchTransferFromRequestAsync(string from, string to, List`1<BigInteger> ids, List`1<BigInteger> amounts, Byte[] data);
    public Task`1<TransactionReceipt> SafeBatchTransferFromRequestAndWaitForReceiptAsync(string from, string to, List`1<BigInteger> ids, List`1<BigInteger> amounts, Byte[] data, CancellationToken cancellationToken);
    public Task`1<string> SafeTransferFromRequestAsync(SafeTransferFromFunction safeTransferFromFunction);
    public Task`1<TransactionReceipt> SafeTransferFromRequestAndWaitForReceiptAsync(SafeTransferFromFunction safeTransferFromFunction, CancellationToken cancellationToken);
    public Task`1<string> SafeTransferFromRequestAsync(string from, string to, BigInteger id, BigInteger amount, Byte[] data);
    public Task`1<TransactionReceipt> SafeTransferFromRequestAndWaitForReceiptAsync(string from, string to, BigInteger id, BigInteger amount, Byte[] data, CancellationToken cancellationToken);
    public Task`1<string> SetApprovalForAllRequestAsync(SetApprovalForAllFunction setApprovalForAllFunction);
    public Task`1<TransactionReceipt> SetApprovalForAllRequestAndWaitForReceiptAsync(SetApprovalForAllFunction setApprovalForAllFunction, CancellationToken cancellationToken);
    public Task`1<string> SetApprovalForAllRequestAsync(string operator, bool approved);
    public Task`1<TransactionReceipt> SetApprovalForAllRequestAndWaitForReceiptAsync(string operator, bool approved, CancellationToken cancellationToken);
    public Task`1<string> SetTokenUriRequestAsync(SetTokenUriFunction setTokenUriFunction);
    public Task`1<TransactionReceipt> SetTokenUriRequestAndWaitForReceiptAsync(SetTokenUriFunction setTokenUriFunction, CancellationToken cancellationToken);
    public Task`1<string> SetTokenUriRequestAsync(BigInteger tokenId, string tokenURI);
    public Task`1<TransactionReceipt> SetTokenUriRequestAndWaitForReceiptAsync(BigInteger tokenId, string tokenURI, CancellationToken cancellationToken);
    public Task`1<string> SetURIRequestAsync(SetURIFunction setURIFunction);
    public Task`1<TransactionReceipt> SetURIRequestAndWaitForReceiptAsync(SetURIFunction setURIFunction, CancellationToken cancellationToken);
    public Task`1<string> SetURIRequestAsync(string newuri);
    public Task`1<TransactionReceipt> SetURIRequestAndWaitForReceiptAsync(string newuri, CancellationToken cancellationToken);
    public Task`1<bool> SupportsInterfaceQueryAsync(SupportsInterfaceFunction supportsInterfaceFunction, BlockParameter blockParameter);
    public Task`1<bool> SupportsInterfaceQueryAsync(Byte[] interfaceId, BlockParameter blockParameter);
    public Task`1<BigInteger> TotalSupplyQueryAsync(TotalSupplyFunction totalSupplyFunction, BlockParameter blockParameter);
    public Task`1<BigInteger> TotalSupplyQueryAsync(BigInteger id, BlockParameter blockParameter);
    public Task`1<string> TransferOwnershipRequestAsync(TransferOwnershipFunction transferOwnershipFunction);
    public Task`1<TransactionReceipt> TransferOwnershipRequestAndWaitForReceiptAsync(TransferOwnershipFunction transferOwnershipFunction, CancellationToken cancellationToken);
    public Task`1<string> TransferOwnershipRequestAsync(string newOwner);
    public Task`1<TransactionReceipt> TransferOwnershipRequestAndWaitForReceiptAsync(string newOwner, CancellationToken cancellationToken);
    public Task`1<string> UnpauseRequestAsync(UnpauseFunction unpauseFunction);
    public Task`1<string> UnpauseRequestAsync();
    public Task`1<TransactionReceipt> UnpauseRequestAndWaitForReceiptAsync(UnpauseFunction unpauseFunction, CancellationToken cancellationToken);
    public Task`1<TransactionReceipt> UnpauseRequestAndWaitForReceiptAsync(CancellationToken cancellationToken);
    public Task`1<string> UriQueryAsync(UriFunction uriFunction, BlockParameter blockParameter);
    public Task`1<string> UriQueryAsync(BigInteger tokenId, BlockParameter blockParameter);
}
public class Nethereum.Contracts.Standards.ERC1155.ERC1155Service : object {
    private IEthApiContractService _ethApiContractService;
    public ERC1155Service(IEthApiContractService ethApiContractService);
    public ERC1155ContractService GetContractService(string contractAddress);
    public List`1<FunctionABI> GetRequiredFunctionAbis();
    public String[] GetRequiredFunctionSignatures();
    public List`1<FunctionABI> GetOptionalMetadataExtensionsFunctionAbis();
    public List`1<FunctionABI> GetOptionalEnumerableExtensionFunctionAbis();
    public String[] GetOptionalMetadataFunctionSignatures();
    public String[] GetOptionalEnumerableExtensionFunctionSignatures();
}
public class Nethereum.Contracts.Standards.ERC1155.NFT1155Metadata : NftMetadata {
    [CompilerGeneratedAttribute]
private int <Decimals>k__BackingField;
    [JsonPropertyAttribute("decimals")]
public int Decimals { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Decimals();
    [CompilerGeneratedAttribute]
public void set_Decimals(int value);
}
public class Nethereum.Contracts.Standards.ERC1271.ContractDefinition.IsValidSignatureFunction : IsValidSignatureFunctionBase {
}
[FunctionAttribute("isValidSignature", "bytes4")]
public class Nethereum.Contracts.Standards.ERC1271.ContractDefinition.IsValidSignatureFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private Byte[] <Hash>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <Signature>k__BackingField;
    [ParameterAttribute("bytes32", "_hash", "1")]
public Byte[] Hash { get; public set; }
    [ParameterAttribute("bytes", "_signature", "2")]
public Byte[] Signature { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Hash();
    [CompilerGeneratedAttribute]
public virtual void set_Hash(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Signature();
    [CompilerGeneratedAttribute]
public virtual void set_Signature(Byte[] value);
}
public class Nethereum.Contracts.Standards.ERC1271.ContractDefinition.IsValidSignatureOutputDTO : IsValidSignatureOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ERC1271.ContractDefinition.IsValidSignatureOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private Byte[] <MagicValue>k__BackingField;
    [ParameterAttribute("bytes4", "magicValue", "1")]
public Byte[] MagicValue { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_MagicValue();
    [CompilerGeneratedAttribute]
public virtual void set_MagicValue(Byte[] value);
}
public class Nethereum.Contracts.Standards.ERC1271.ERC1271ContractService : object {
    public static string MAGICVALUE;
    [CompilerGeneratedAttribute]
private string <ContractAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private ContractHandler <ContractHandler>k__BackingField;
    public string ContractAddress { get; }
    public ContractHandler ContractHandler { get; }
    public ERC1271ContractService(IEthApiContractService ethApiContractService, string contractAddress);
    [CompilerGeneratedAttribute]
public string get_ContractAddress();
    [CompilerGeneratedAttribute]
public ContractHandler get_ContractHandler();
    public Task`1<Byte[]> IsValidSignatureQueryAsync(IsValidSignatureFunction isValidSignature, BlockParameter blockParameter);
    public Task`1<Byte[]> IsValidSignatureQueryAsync(string hash, string signature, BlockParameter blockParameter);
    public Task`1<Byte[]> IsValidSignatureQueryAsync(Byte[] hash, Byte[] signature, BlockParameter blockParameter);
    [AsyncStateMachineAttribute("Nethereum.Contracts.Standards.ERC1271.ERC1271ContractService/<IsValidSignatureAndValidateReturnQueryAsync>d__11")]
public Task`1<bool> IsValidSignatureAndValidateReturnQueryAsync(Byte[] hash, Byte[] signature, BlockParameter blockParameter);
    [AsyncStateMachineAttribute("Nethereum.Contracts.Standards.ERC1271.ERC1271ContractService/<IsValidSignatureAndValidateReturnQueryAsync>d__12")]
public Task`1<bool> IsValidSignatureAndValidateReturnQueryAsync(string hash, string signature, BlockParameter blockParameter);
    public static bool IsValidSignatureOutputTheSameAsMagicValue(Byte[] returnOutput);
}
public class Nethereum.Contracts.Standards.ERC1271.ERC1271Service : object {
    private IEthApiContractService _ethApiContractService;
    public ERC1271Service(IEthApiContractService ethApiContractService);
    public ERC1271ContractService GetContractService(string contractAddress);
}
public class Nethereum.Contracts.Standards.ERC165.ERC165SupportsInterfaceContractService : object {
    [CompilerGeneratedAttribute]
private string <ContractAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private ContractHandler <ContractHandler>k__BackingField;
    public string ContractAddress { get; }
    public ContractHandler ContractHandler { get; }
    public ERC165SupportsInterfaceContractService(IEthApiContractService ethApiContractService, string contractAddress);
    [CompilerGeneratedAttribute]
public string get_ContractAddress();
    [CompilerGeneratedAttribute]
public ContractHandler get_ContractHandler();
    public Task`1<bool> SupportsInterfaceQueryAsync(string hexSignatureString);
    public Task`1<bool> SupportsInterfaceQueryAsync(Byte[] interfaceId);
    public Task`1<bool> SupportsInterfaceQueryAsync();
    public Task`1<bool> SupportsInterfaceQueryAsync(TFunctionMessage functionMessage);
    public Task`1<bool> SupportsInterfaceQueryAsync(FunctionABI functionABI);
}
public class Nethereum.Contracts.Standards.ERC165.ERC165SupportsInterfaceService : object {
    private IEthApiContractService _ethApiContractService;
    public ERC165SupportsInterfaceService(IEthApiContractService ethApiContractService);
    public ERC165SupportsInterfaceContractService GetContractService(string contractAddress);
}
public class Nethereum.Contracts.Standards.ERC20.ContractDefinition.AllowanceFunction : AllowanceFunctionBase {
}
[FunctionAttribute("allowance", "uint256")]
public class Nethereum.Contracts.Standards.ERC20.ContractDefinition.AllowanceFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private string <Owner>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Spender>k__BackingField;
    [ParameterAttribute("address", "_owner", "1")]
public string Owner { get; public set; }
    [ParameterAttribute("address", "_spender", "2")]
public string Spender { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Owner();
    [CompilerGeneratedAttribute]
public virtual void set_Owner(string value);
    [CompilerGeneratedAttribute]
public virtual string get_Spender();
    [CompilerGeneratedAttribute]
public virtual void set_Spender(string value);
}
public class Nethereum.Contracts.Standards.ERC20.ContractDefinition.AllowanceOutputDTO : AllowanceOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ERC20.ContractDefinition.AllowanceOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private BigInteger <Remaining>k__BackingField;
    [ParameterAttribute("uint256", "remaining", "1")]
public BigInteger Remaining { get; public set; }
    [CompilerGeneratedAttribute]
public virtual BigInteger get_Remaining();
    [CompilerGeneratedAttribute]
public virtual void set_Remaining(BigInteger value);
}
public class Nethereum.Contracts.Standards.ERC20.ContractDefinition.AllowedFunction : AllowedFunctionBase {
}
[FunctionAttribute("allowed", "uint256")]
public class Nethereum.Contracts.Standards.ERC20.ContractDefinition.AllowedFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private string <Owner>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Spender>k__BackingField;
    [ParameterAttribute("address", "", "1")]
public string Owner { get; public set; }
    [ParameterAttribute("address", "", "2")]
public string Spender { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Owner();
    [CompilerGeneratedAttribute]
public virtual void set_Owner(string value);
    [CompilerGeneratedAttribute]
public virtual string get_Spender();
    [CompilerGeneratedAttribute]
public virtual void set_Spender(string value);
}
public class Nethereum.Contracts.Standards.ERC20.ContractDefinition.AllowedOutputDTO : AllowedOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ERC20.ContractDefinition.AllowedOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private BigInteger <Amount>k__BackingField;
    [ParameterAttribute("uint256", "", "1")]
public BigInteger Amount { get; public set; }
    [CompilerGeneratedAttribute]
public virtual BigInteger get_Amount();
    [CompilerGeneratedAttribute]
public virtual void set_Amount(BigInteger value);
}
public class Nethereum.Contracts.Standards.ERC20.ContractDefinition.ApprovalEventDTO : ApprovalEventDTOBase {
}
[EventAttribute("Approval")]
public class Nethereum.Contracts.Standards.ERC20.ContractDefinition.ApprovalEventDTOBase : object {
    [CompilerGeneratedAttribute]
private string <Owner>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Spender>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <Value>k__BackingField;
    [ParameterAttribute("address", "_owner", "1", "True")]
public string Owner { get; public set; }
    [ParameterAttribute("address", "_spender", "2", "True")]
public string Spender { get; public set; }
    [ParameterAttribute("uint256", "_value", "3", "False")]
public BigInteger Value { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Owner();
    [CompilerGeneratedAttribute]
public virtual void set_Owner(string value);
    [CompilerGeneratedAttribute]
public virtual string get_Spender();
    [CompilerGeneratedAttribute]
public virtual void set_Spender(string value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_Value();
    [CompilerGeneratedAttribute]
public virtual void set_Value(BigInteger value);
}
public class Nethereum.Contracts.Standards.ERC20.ContractDefinition.ApproveFunction : ApproveFunctionBase {
}
[FunctionAttribute("approve", "bool")]
public class Nethereum.Contracts.Standards.ERC20.ContractDefinition.ApproveFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private string <Spender>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <Value>k__BackingField;
    [ParameterAttribute("address", "_spender", "1")]
public string Spender { get; public set; }
    [ParameterAttribute("uint256", "_value", "2")]
public BigInteger Value { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Spender();
    [CompilerGeneratedAttribute]
public virtual void set_Spender(string value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_Value();
    [CompilerGeneratedAttribute]
public virtual void set_Value(BigInteger value);
}
public class Nethereum.Contracts.Standards.ERC20.ContractDefinition.BalanceOfFunction : BalanceOfFunctionBase {
}
[FunctionAttribute("balanceOf", "uint256")]
public class Nethereum.Contracts.Standards.ERC20.ContractDefinition.BalanceOfFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private string <Owner>k__BackingField;
    [ParameterAttribute("address", "_owner", "1")]
public string Owner { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Owner();
    [CompilerGeneratedAttribute]
public virtual void set_Owner(string value);
}
public class Nethereum.Contracts.Standards.ERC20.ContractDefinition.BalanceOfOutputDTO : BalanceOfOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ERC20.ContractDefinition.BalanceOfOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private BigInteger <Balance>k__BackingField;
    [ParameterAttribute("uint256", "balance", "1")]
public BigInteger Balance { get; public set; }
    [CompilerGeneratedAttribute]
public virtual BigInteger get_Balance();
    [CompilerGeneratedAttribute]
public virtual void set_Balance(BigInteger value);
}
public class Nethereum.Contracts.Standards.ERC20.ContractDefinition.BalancesFunction : BalancesFunctionBase {
}
[FunctionAttribute("balances", "uint256")]
public class Nethereum.Contracts.Standards.ERC20.ContractDefinition.BalancesFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private string <Address>k__BackingField;
    [ParameterAttribute("address", "", "1")]
public string Address { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Address();
    [CompilerGeneratedAttribute]
public virtual void set_Address(string value);
}
public class Nethereum.Contracts.Standards.ERC20.ContractDefinition.BalancesOutputDTO : BalancesOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ERC20.ContractDefinition.BalancesOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private BigInteger <Balance>k__BackingField;
    [ParameterAttribute("uint256", "", "1")]
public BigInteger Balance { get; public set; }
    [CompilerGeneratedAttribute]
public virtual BigInteger get_Balance();
    [CompilerGeneratedAttribute]
public virtual void set_Balance(BigInteger value);
}
public class Nethereum.Contracts.Standards.ERC20.ContractDefinition.DecimalsFunction : DecimalsFunctionBase {
}
[FunctionAttribute("decimals", "uint8")]
public class Nethereum.Contracts.Standards.ERC20.ContractDefinition.DecimalsFunctionBase : FunctionMessage {
}
public class Nethereum.Contracts.Standards.ERC20.ContractDefinition.DecimalsOutputDTO : DecimalsOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ERC20.ContractDefinition.DecimalsOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private byte <Decimals>k__BackingField;
    [ParameterAttribute("uint8", "", "1")]
public byte Decimals { get; public set; }
    [CompilerGeneratedAttribute]
public virtual byte get_Decimals();
    [CompilerGeneratedAttribute]
public virtual void set_Decimals(byte value);
}
public class Nethereum.Contracts.Standards.ERC20.ContractDefinition.NameFunction : NameFunctionBase {
}
[FunctionAttribute("name", "string")]
public class Nethereum.Contracts.Standards.ERC20.ContractDefinition.NameFunctionBase : FunctionMessage {
}
public class Nethereum.Contracts.Standards.ERC20.ContractDefinition.NameOutputDTO : NameOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ERC20.ContractDefinition.NameOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [ParameterAttribute("string", "", "1")]
public string Name { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Name();
    [CompilerGeneratedAttribute]
public virtual void set_Name(string value);
}
public class Nethereum.Contracts.Standards.ERC20.ContractDefinition.SymbolFunction : SymbolFunctionBase {
}
[FunctionAttribute("symbol", "string")]
public class Nethereum.Contracts.Standards.ERC20.ContractDefinition.SymbolFunctionBase : FunctionMessage {
}
public class Nethereum.Contracts.Standards.ERC20.ContractDefinition.SymbolOutputDTO : SymbolOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ERC20.ContractDefinition.SymbolOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private string <Symbol>k__BackingField;
    [ParameterAttribute("string", "", "1")]
public string Symbol { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Symbol();
    [CompilerGeneratedAttribute]
public virtual void set_Symbol(string value);
}
public class Nethereum.Contracts.Standards.ERC20.ContractDefinition.TotalSupplyFunction : TotalSupplyFunctionBase {
}
[FunctionAttribute("totalSupply", "uint256")]
public class Nethereum.Contracts.Standards.ERC20.ContractDefinition.TotalSupplyFunctionBase : FunctionMessage {
}
public class Nethereum.Contracts.Standards.ERC20.ContractDefinition.TotalSupplyOutputDTO : TotalSupplyOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ERC20.ContractDefinition.TotalSupplyOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private BigInteger <TotalSupply>k__BackingField;
    [ParameterAttribute("uint256", "", "1")]
public BigInteger TotalSupply { get; public set; }
    [CompilerGeneratedAttribute]
public virtual BigInteger get_TotalSupply();
    [CompilerGeneratedAttribute]
public virtual void set_TotalSupply(BigInteger value);
}
public class Nethereum.Contracts.Standards.ERC20.ContractDefinition.TransferEventDTO : TransferEventDTOBase {
}
[EventAttribute("Transfer")]
public class Nethereum.Contracts.Standards.ERC20.ContractDefinition.TransferEventDTOBase : object {
    [CompilerGeneratedAttribute]
private string <From>k__BackingField;
    [CompilerGeneratedAttribute]
private string <To>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <Value>k__BackingField;
    [ParameterAttribute("address", "_from", "1", "True")]
public string From { get; public set; }
    [ParameterAttribute("address", "_to", "2", "True")]
public string To { get; public set; }
    [ParameterAttribute("uint256", "_value", "3", "False")]
public BigInteger Value { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_From();
    [CompilerGeneratedAttribute]
public virtual void set_From(string value);
    [CompilerGeneratedAttribute]
public virtual string get_To();
    [CompilerGeneratedAttribute]
public virtual void set_To(string value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_Value();
    [CompilerGeneratedAttribute]
public virtual void set_Value(BigInteger value);
}
public class Nethereum.Contracts.Standards.ERC20.ContractDefinition.TransferFromFunction : TransferFromFunctionBase {
}
[FunctionAttribute("transferFrom", "bool")]
public class Nethereum.Contracts.Standards.ERC20.ContractDefinition.TransferFromFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private string <From>k__BackingField;
    [CompilerGeneratedAttribute]
private string <To>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <Value>k__BackingField;
    [ParameterAttribute("address", "_from", "1")]
public string From { get; public set; }
    [ParameterAttribute("address", "_to", "2")]
public string To { get; public set; }
    [ParameterAttribute("uint256", "_value", "3")]
public BigInteger Value { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_From();
    [CompilerGeneratedAttribute]
public virtual void set_From(string value);
    [CompilerGeneratedAttribute]
public virtual string get_To();
    [CompilerGeneratedAttribute]
public virtual void set_To(string value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_Value();
    [CompilerGeneratedAttribute]
public virtual void set_Value(BigInteger value);
}
public class Nethereum.Contracts.Standards.ERC20.ContractDefinition.TransferFunction : TransferFunctionBase {
}
[FunctionAttribute("transfer", "bool")]
public class Nethereum.Contracts.Standards.ERC20.ContractDefinition.TransferFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private string <To>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <Value>k__BackingField;
    [ParameterAttribute("address", "_to", "1")]
public string To { get; public set; }
    [ParameterAttribute("uint256", "_value", "2")]
public BigInteger Value { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_To();
    [CompilerGeneratedAttribute]
public virtual void set_To(string value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_Value();
    [CompilerGeneratedAttribute]
public virtual void set_Value(BigInteger value);
}
public class Nethereum.Contracts.Standards.ERC20.ERC20ContractService : object {
    [CompilerGeneratedAttribute]
private string <ContractAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private ContractHandler <ContractHandler>k__BackingField;
    public string ContractAddress { get; }
    public ContractHandler ContractHandler { get; }
    public ERC20ContractService(IEthApiContractService ethApiContractService, string contractAddress);
    [CompilerGeneratedAttribute]
public string get_ContractAddress();
    [CompilerGeneratedAttribute]
public ContractHandler get_ContractHandler();
    public Event`1<ApprovalEventDTO> GetApprovalEvent();
    public Event`1<TransferEventDTO> GetTransferEvent();
    public Task`1<string> NameQueryAsync(NameFunction nameFunction, BlockParameter blockParameter);
    public Task`1<string> SymbolQueryAsync(SymbolFunction symbolFunction, BlockParameter blockParameter);
    public Task`1<string> ApproveRequestAsync(ApproveFunction approveFunction);
    public Task`1<TransactionReceipt> ApproveRequestAndWaitForReceiptAsync(ApproveFunction approveFunction, CancellationToken cancellationToken);
    public Task`1<string> ApproveRequestAsync(string spender, BigInteger value);
    public Task`1<TransactionReceipt> ApproveRequestAndWaitForReceiptAsync(string spender, BigInteger value, CancellationToken cancellationToken);
    public Task`1<BigInteger> TotalSupplyQueryAsync(TotalSupplyFunction totalSupplyFunction, BlockParameter blockParameter);
    public Task`1<BigInteger> TotalSupplyQueryAsync(BlockParameter blockParameter);
    public Task`1<string> TransferFromRequestAsync(TransferFromFunction transferFromFunction);
    public Task`1<TransactionReceipt> TransferFromRequestAndWaitForReceiptAsync(TransferFromFunction transferFromFunction, CancellationToken cancellationToken);
    public Task`1<string> TransferFromRequestAsync(string from, string to, BigInteger value);
    public Task`1<TransactionReceipt> TransferFromRequestAndWaitForReceiptAsync(string from, string to, BigInteger value, CancellationToken cancellationToken);
    public Task`1<BigInteger> BalancesQueryAsync(BalancesFunction balancesFunction, BlockParameter blockParameter);
    [AsyncStateMachineAttribute("Nethereum.Contracts.Standards.ERC20.ERC20ContractService/<GetBalanceFromStorageAsync>d__22")]
public Task`1<BigInteger> GetBalanceFromStorageAsync(string address, BigInteger slot, BlockParameter blockParameter);
    public Task`1<BigInteger> BalancesQueryAsync(string address, BlockParameter blockParameter);
    public Task`1<byte> DecimalsQueryAsync(DecimalsFunction decimalsFunction, BlockParameter blockParameter);
    public Task`1<byte> DecimalsQueryAsync(BlockParameter blockParameter);
    public Task`1<BigInteger> AllowedQueryAsync(AllowedFunction allowedFunction, BlockParameter blockParameter);
    public Task`1<BigInteger> AllowedQueryAsync(string owner, string spender, BlockParameter blockParameter);
    public Task`1<BigInteger> BalanceOfQueryAsync(BalanceOfFunction balanceOfFunction, BlockParameter blockParameter);
    public Task`1<BigInteger> BalanceOfQueryAsync(string owner, BlockParameter blockParameter);
    public Task`1<string> TransferRequestAsync(TransferFunction transferFunction);
    public Task`1<TransactionReceipt> TransferRequestAndWaitForReceiptAsync(TransferFunction transferFunction, CancellationToken cancellationToken);
    public Task`1<string> TransferRequestAsync(string to, BigInteger value);
    public Task`1<TransactionReceipt> TransferRequestAndWaitForReceiptAsync(string to, BigInteger value, CancellationToken cancellationToken);
    public Task`1<BigInteger> AllowanceQueryAsync(AllowanceFunction allowanceFunction, BlockParameter blockParameter);
    public Task`1<BigInteger> AllowanceQueryAsync(string owner, string spender, BlockParameter blockParameter);
}
public class Nethereum.Contracts.Standards.ERC20.ERC20Service : object {
    private IEthApiContractService _ethApiContractService;
    public ERC20Service(IEthApiContractService ethApiContractService);
    public ERC20ContractService GetContractService(string contractAddress);
    public List`1<FunctionABI> GetRequiredFunctionAbis();
    public String[] GetRequiredFunctionSignatures();
    public List`1<FunctionABI> GetOptionalFunctionAbis();
    public String[] GetOptionalFunctionSignatures();
    [AsyncStateMachineAttribute("Nethereum.Contracts.Standards.ERC20.ERC20Service/<GetAllTokenBalancesUsingMultiCallAsync>d__7")]
public Task`1<List`1<TokenOwnerBalance>> GetAllTokenBalancesUsingMultiCallAsync(IEnumerable`1<string> ownerAddresses, IEnumerable`1<string> contractAddresses, BlockParameter block, int numberOfCallsPerRequest, string multiCallAddress);
    public Task`1<List`1<TokenOwnerBalance>> GetAllTokenBalancesUsingMultiCallAsync(IEnumerable`1<string> ownerAddresses, IEnumerable`1<string> contractAddresses, int numberOfCallsPerRequest, string multiCallAddress);
    public Task`1<List`1<TokenOwnerBalance>> GetAllTokenBalancesUsingMultiCallAsync(string ownerAddress, IEnumerable`1<string> contractAddresses, int numberOfCallsPerRequest, string multiCallAddress);
    [AsyncStateMachineAttribute("Nethereum.Contracts.Standards.ERC20.ERC20Service/<GetAllTokenBalancesUsingMultiCallAsync>d__10")]
public Task`1<List`1<TokenOwnerInfo>> GetAllTokenBalancesUsingMultiCallAsync(IEnumerable`1<string> ownerAddresses, IEnumerable`1<Token> tokens, BlockParameter block, int numberOfCallsPerRequest, string multiCallAddress);
}
public class Nethereum.Contracts.Standards.ERC20.TokenExchangeRate : object {
    [CompilerGeneratedAttribute]
private string <Currency>k__BackingField;
    [CompilerGeneratedAttribute]
private decimal <Price>k__BackingField;
    public string Currency { get; public set; }
    public decimal Price { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Currency();
    [CompilerGeneratedAttribute]
public void set_Currency(string value);
    [CompilerGeneratedAttribute]
public decimal get_Price();
    [CompilerGeneratedAttribute]
public void set_Price(decimal value);
}
public class Nethereum.Contracts.Standards.ERC20.TokenList.Root : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <Timestamp>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <Keywords>k__BackingField;
    [CompilerGeneratedAttribute]
private Version <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Token> <Tokens>k__BackingField;
    [JsonPropertyAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyAttribute("timestamp")]
public DateTime Timestamp { get; public set; }
    [JsonPropertyAttribute("keywords")]
public List`1<string> Keywords { get; public set; }
    [JsonPropertyAttribute("version")]
public Version Version { get; public set; }
    [JsonPropertyAttribute("tokens")]
public List`1<Token> Tokens { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public DateTime get_Timestamp();
    [CompilerGeneratedAttribute]
public void set_Timestamp(DateTime value);
    [CompilerGeneratedAttribute]
public List`1<string> get_Keywords();
    [CompilerGeneratedAttribute]
public void set_Keywords(List`1<string> value);
    [CompilerGeneratedAttribute]
public Version get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(Version value);
    [CompilerGeneratedAttribute]
public List`1<Token> get_Tokens();
    [CompilerGeneratedAttribute]
public void set_Tokens(List`1<Token> value);
}
public class Nethereum.Contracts.Standards.ERC20.TokenList.Token : object {
    [CompilerGeneratedAttribute]
private int <ChainId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Address>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Symbol>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Decimals>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LogoURI>k__BackingField;
    [JsonPropertyAttribute("chainId")]
public int ChainId { get; public set; }
    [JsonPropertyAttribute("address")]
public string Address { get; public set; }
    [JsonPropertyAttribute("symbol")]
public string Symbol { get; public set; }
    [JsonPropertyAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyAttribute("decimals")]
public int Decimals { get; public set; }
    [JsonPropertyAttribute("logoURI")]
public string LogoURI { get; public set; }
    [CompilerGeneratedAttribute]
public int get_ChainId();
    [CompilerGeneratedAttribute]
public void set_ChainId(int value);
    [CompilerGeneratedAttribute]
public string get_Address();
    [CompilerGeneratedAttribute]
public void set_Address(string value);
    [CompilerGeneratedAttribute]
public string get_Symbol();
    [CompilerGeneratedAttribute]
public void set_Symbol(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public int get_Decimals();
    [CompilerGeneratedAttribute]
public void set_Decimals(int value);
    [CompilerGeneratedAttribute]
public string get_LogoURI();
    [CompilerGeneratedAttribute]
public void set_LogoURI(string value);
}
public class Nethereum.Contracts.Standards.ERC20.TokenList.TokenListService : object {
    private IRestHttpHelper _restHttpHelper;
    public TokenListService(IRestHttpHelper restHttpHelper);
    [AsyncStateMachineAttribute("Nethereum.Contracts.Standards.ERC20.TokenList.TokenListService/<LoadFromUrlAsync>d__3")]
public Task`1<List`1<Token>> LoadFromUrlAsync(string url);
}
public class Nethereum.Contracts.Standards.ERC20.TokenList.TokenListSources : object {
    public static string ONE_INCH;
    public static string AAVE;
    public static string CMC_DEFI;
    public static string CMC_STABLECOIN;
    public static string CMC_ERC20;
    public static string COINGECKO;
    public static string MY_CRYPTO;
    public static string UNISWAP;
}
public class Nethereum.Contracts.Standards.ERC20.TokenList.Version : object {
    [CompilerGeneratedAttribute]
private int <Major>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Minor>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Patch>k__BackingField;
    [JsonPropertyAttribute("major")]
public int Major { get; public set; }
    [JsonPropertyAttribute("minor")]
public int Minor { get; public set; }
    [JsonPropertyAttribute("patch")]
public int Patch { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Major();
    [CompilerGeneratedAttribute]
public void set_Major(int value);
    [CompilerGeneratedAttribute]
public int get_Minor();
    [CompilerGeneratedAttribute]
public void set_Minor(int value);
    [CompilerGeneratedAttribute]
public int get_Patch();
    [CompilerGeneratedAttribute]
public void set_Patch(int value);
}
public class Nethereum.Contracts.Standards.ERC20.TokenOwnerBalance : object {
    [CompilerGeneratedAttribute]
private string <ContractAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <Balance>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Owner>k__BackingField;
    public string ContractAddress { get; public set; }
    public BigInteger Balance { get; public set; }
    public string Owner { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ContractAddress();
    [CompilerGeneratedAttribute]
public void set_ContractAddress(string value);
    [CompilerGeneratedAttribute]
public BigInteger get_Balance();
    [CompilerGeneratedAttribute]
public void set_Balance(BigInteger value);
    [CompilerGeneratedAttribute]
public string get_Owner();
    [CompilerGeneratedAttribute]
public void set_Owner(string value);
}
public class Nethereum.Contracts.Standards.ERC20.TokenOwnerInfo : object {
    [CompilerGeneratedAttribute]
private Token <Token>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<TokenOwnerBalance> <OwnersBalances>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<TokenExchangeRate> <TokenExchangeRate>k__BackingField;
    public Token Token { get; public set; }
    public List`1<TokenOwnerBalance> OwnersBalances { get; public set; }
    public List`1<TokenExchangeRate> TokenExchangeRate { get; public set; }
    [CompilerGeneratedAttribute]
public Token get_Token();
    [CompilerGeneratedAttribute]
public void set_Token(Token value);
    public BigInteger GetTotalBalance();
    [CompilerGeneratedAttribute]
public List`1<TokenOwnerBalance> get_OwnersBalances();
    [CompilerGeneratedAttribute]
public void set_OwnersBalances(List`1<TokenOwnerBalance> value);
    [CompilerGeneratedAttribute]
public List`1<TokenExchangeRate> get_TokenExchangeRate();
    [CompilerGeneratedAttribute]
public void set_TokenExchangeRate(List`1<TokenExchangeRate> value);
}
public class Nethereum.Contracts.Standards.ERC2535Diamond.DiamondCutFacet.ContractDefinition.DiamondCutEventDTO : DiamondCutEventDTOBase {
}
[EventAttribute("DiamondCut")]
public class Nethereum.Contracts.Standards.ERC2535Diamond.DiamondCutFacet.ContractDefinition.DiamondCutEventDTOBase : object {
    [CompilerGeneratedAttribute]
private List`1<FacetCut> <DiamondCut>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Init>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <Calldata>k__BackingField;
    [ParameterAttribute("tuple[]", "_diamondCut", "1", "False")]
public List`1<FacetCut> DiamondCut { get; public set; }
    [ParameterAttribute("address", "_init", "2", "False")]
public string Init { get; public set; }
    [ParameterAttribute("bytes", "_calldata", "3", "False")]
public Byte[] Calldata { get; public set; }
    [CompilerGeneratedAttribute]
public virtual List`1<FacetCut> get_DiamondCut();
    [CompilerGeneratedAttribute]
public virtual void set_DiamondCut(List`1<FacetCut> value);
    [CompilerGeneratedAttribute]
public virtual string get_Init();
    [CompilerGeneratedAttribute]
public virtual void set_Init(string value);
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Calldata();
    [CompilerGeneratedAttribute]
public virtual void set_Calldata(Byte[] value);
}
public class Nethereum.Contracts.Standards.ERC2535Diamond.DiamondCutFacet.ContractDefinition.DiamondCutFacetDeployment : DiamondCutFacetDeploymentBase {
    public DiamondCutFacetDeployment(string byteCode);
}
public class Nethereum.Contracts.Standards.ERC2535Diamond.DiamondCutFacet.ContractDefinition.DiamondCutFacetDeploymentBase : ContractDeploymentMessage {
    public static string BYTECODE;
    public DiamondCutFacetDeploymentBase(string byteCode);
    private static DiamondCutFacetDeploymentBase();
}
public class Nethereum.Contracts.Standards.ERC2535Diamond.DiamondCutFacet.ContractDefinition.DiamondCutFunction : DiamondCutFunctionBase {
}
[FunctionAttribute("diamondCut")]
public class Nethereum.Contracts.Standards.ERC2535Diamond.DiamondCutFacet.ContractDefinition.DiamondCutFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private List`1<FacetCut> <DiamondCut>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Init>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <Calldata>k__BackingField;
    [ParameterAttribute("tuple[]", "_diamondCut", "1")]
public List`1<FacetCut> DiamondCut { get; public set; }
    [ParameterAttribute("address", "_init", "2")]
public string Init { get; public set; }
    [ParameterAttribute("bytes", "_calldata", "3")]
public Byte[] Calldata { get; public set; }
    [CompilerGeneratedAttribute]
public virtual List`1<FacetCut> get_DiamondCut();
    [CompilerGeneratedAttribute]
public virtual void set_DiamondCut(List`1<FacetCut> value);
    [CompilerGeneratedAttribute]
public virtual string get_Init();
    [CompilerGeneratedAttribute]
public virtual void set_Init(string value);
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Calldata();
    [CompilerGeneratedAttribute]
public virtual void set_Calldata(Byte[] value);
}
public class Nethereum.Contracts.Standards.ERC2535Diamond.DiamondCutFacet.ContractDefinition.FacetCut : FacetCutBase {
}
public class Nethereum.Contracts.Standards.ERC2535Diamond.DiamondCutFacet.ContractDefinition.FacetCutBase : object {
    [CompilerGeneratedAttribute]
private string <FacetAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private byte <Action>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Byte[]> <FunctionSelectors>k__BackingField;
    [ParameterAttribute("address", "facetAddress", "1")]
public string FacetAddress { get; public set; }
    [ParameterAttribute("uint8", "action", "2")]
public byte Action { get; public set; }
    [ParameterAttribute("bytes4[]", "functionSelectors", "3")]
public List`1<Byte[]> FunctionSelectors { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_FacetAddress();
    [CompilerGeneratedAttribute]
public virtual void set_FacetAddress(string value);
    [CompilerGeneratedAttribute]
public virtual byte get_Action();
    [CompilerGeneratedAttribute]
public virtual void set_Action(byte value);
    [CompilerGeneratedAttribute]
public virtual List`1<Byte[]> get_FunctionSelectors();
    [CompilerGeneratedAttribute]
public virtual void set_FunctionSelectors(List`1<Byte[]> value);
}
public class Nethereum.Contracts.Standards.ERC2535Diamond.DiamondCutFacet.ERC2535DiamondCutFacetContractService : ContractServiceBase {
    public ERC2535DiamondCutFacetContractService(IEthApiContractService ethApiContractService, string contractAddress);
    public Task`1<string> DiamondCutRequestAsync(DiamondCutFunction diamondCutFunction);
    public Task`1<TransactionReceipt> DiamondCutRequestAndWaitForReceiptAsync(DiamondCutFunction diamondCutFunction, CancellationTokenSource cancellationToken);
    public Task`1<string> DiamondCutRequestAsync(List`1<FacetCut> diamondCut, string addressInit, Byte[] callData);
    public Task`1<string> DiamondCutAddRequestAsync(List`1<string> signatures, string address, string addressInit, Byte[] callData);
    public Task`1<TransactionReceipt> DiamondCutRequestAndWaitForReceiptAsync(List`1<FacetCut> diamondCut, string addressInit, Byte[] callData, CancellationTokenSource cancellationToken);
    public static void InitialiseAddressAndCallData(string addressInit, Byte[] callData, DiamondCutFunction diamondCutFunction);
    public virtual List`1<Type> GetAllFunctionTypes();
    public virtual List`1<Type> GetAllEventTypes();
    public virtual List`1<Type> GetAllErrorTypes();
}
public enum Nethereum.Contracts.Standards.ERC2535Diamond.DiamondCutFacet.FacetCutAction : Enum {
    public int value__;
    public static FacetCutAction Add;
    public static FacetCutAction Replace;
    public static FacetCutAction Remove;
}
public class Nethereum.Contracts.Standards.ERC2535Diamond.DiamondLoupeFacet.ContractDefinition.DiamondLoupeFacetDeployment : DiamondLoupeFacetDeploymentBase {
    public DiamondLoupeFacetDeployment(string byteCode);
}
public class Nethereum.Contracts.Standards.ERC2535Diamond.DiamondLoupeFacet.ContractDefinition.DiamondLoupeFacetDeploymentBase : ContractDeploymentMessage {
    public static string BYTECODE;
    public DiamondLoupeFacetDeploymentBase(string byteCode);
    private static DiamondLoupeFacetDeploymentBase();
}
public class Nethereum.Contracts.Standards.ERC2535Diamond.DiamondLoupeFacet.ContractDefinition.Facet : FacetBase {
}
public class Nethereum.Contracts.Standards.ERC2535Diamond.DiamondLoupeFacet.ContractDefinition.FacetAddressesFunction : FacetAddressesFunctionBase {
}
[FunctionAttribute("facetAddresses", "address[]")]
public class Nethereum.Contracts.Standards.ERC2535Diamond.DiamondLoupeFacet.ContractDefinition.FacetAddressesFunctionBase : FunctionMessage {
}
public class Nethereum.Contracts.Standards.ERC2535Diamond.DiamondLoupeFacet.ContractDefinition.FacetAddressesOutputDTO : FacetAddressesOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ERC2535Diamond.DiamondLoupeFacet.ContractDefinition.FacetAddressesOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private List`1<string> <Facetaddresses>k__BackingField;
    [ParameterAttribute("address[]", "facetAddresses_", "1")]
public List`1<string> Facetaddresses { get; public set; }
    [CompilerGeneratedAttribute]
public virtual List`1<string> get_Facetaddresses();
    [CompilerGeneratedAttribute]
public virtual void set_Facetaddresses(List`1<string> value);
}
public class Nethereum.Contracts.Standards.ERC2535Diamond.DiamondLoupeFacet.ContractDefinition.FacetAddressFunction : FacetAddressFunctionBase {
}
[FunctionAttribute("facetAddress", "address")]
public class Nethereum.Contracts.Standards.ERC2535Diamond.DiamondLoupeFacet.ContractDefinition.FacetAddressFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private Byte[] <FunctionSelector>k__BackingField;
    [ParameterAttribute("bytes4", "_functionSelector", "1")]
public Byte[] FunctionSelector { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_FunctionSelector();
    [CompilerGeneratedAttribute]
public virtual void set_FunctionSelector(Byte[] value);
}
public class Nethereum.Contracts.Standards.ERC2535Diamond.DiamondLoupeFacet.ContractDefinition.FacetAddressOutputDTO : FacetAddressOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ERC2535Diamond.DiamondLoupeFacet.ContractDefinition.FacetAddressOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private string <Facetaddress>k__BackingField;
    [ParameterAttribute("address", "facetAddress_", "1")]
public string Facetaddress { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Facetaddress();
    [CompilerGeneratedAttribute]
public virtual void set_Facetaddress(string value);
}
public class Nethereum.Contracts.Standards.ERC2535Diamond.DiamondLoupeFacet.ContractDefinition.FacetBase : object {
    [CompilerGeneratedAttribute]
private string <FacetAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Byte[]> <FunctionSelectors>k__BackingField;
    [ParameterAttribute("address", "facetAddress", "1")]
public string FacetAddress { get; public set; }
    [ParameterAttribute("bytes4[]", "functionSelectors", "2")]
public List`1<Byte[]> FunctionSelectors { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_FacetAddress();
    [CompilerGeneratedAttribute]
public virtual void set_FacetAddress(string value);
    [CompilerGeneratedAttribute]
public virtual List`1<Byte[]> get_FunctionSelectors();
    [CompilerGeneratedAttribute]
public virtual void set_FunctionSelectors(List`1<Byte[]> value);
}
public class Nethereum.Contracts.Standards.ERC2535Diamond.DiamondLoupeFacet.ContractDefinition.FacetFunctionSelectorsFunction : FacetFunctionSelectorsFunctionBase {
}
[FunctionAttribute("facetFunctionSelectors", "bytes4[]")]
public class Nethereum.Contracts.Standards.ERC2535Diamond.DiamondLoupeFacet.ContractDefinition.FacetFunctionSelectorsFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private string <Facet>k__BackingField;
    [ParameterAttribute("address", "_facet", "1")]
public string Facet { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Facet();
    [CompilerGeneratedAttribute]
public virtual void set_Facet(string value);
}
public class Nethereum.Contracts.Standards.ERC2535Diamond.DiamondLoupeFacet.ContractDefinition.FacetFunctionSelectorsOutputDTO : FacetFunctionSelectorsOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ERC2535Diamond.DiamondLoupeFacet.ContractDefinition.FacetFunctionSelectorsOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private List`1<Byte[]> <Facetfunctionselectors>k__BackingField;
    [ParameterAttribute("bytes4[]", "facetFunctionSelectors_", "1")]
public List`1<Byte[]> Facetfunctionselectors { get; public set; }
    [CompilerGeneratedAttribute]
public virtual List`1<Byte[]> get_Facetfunctionselectors();
    [CompilerGeneratedAttribute]
public virtual void set_Facetfunctionselectors(List`1<Byte[]> value);
}
public class Nethereum.Contracts.Standards.ERC2535Diamond.DiamondLoupeFacet.ContractDefinition.FacetsFunction : FacetsFunctionBase {
}
[FunctionAttribute("facets", "Nethereum.Contracts.Standards.ERC2535Diamond.DiamondLoupeFacet.ContractDefinition.FacetsOutputDTO")]
public class Nethereum.Contracts.Standards.ERC2535Diamond.DiamondLoupeFacet.ContractDefinition.FacetsFunctionBase : FunctionMessage {
}
public class Nethereum.Contracts.Standards.ERC2535Diamond.DiamondLoupeFacet.ContractDefinition.FacetsOutputDTO : FacetsOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ERC2535Diamond.DiamondLoupeFacet.ContractDefinition.FacetsOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private List`1<Facet> <Facets>k__BackingField;
    [ParameterAttribute("tuple[]", "facets_", "1")]
public List`1<Facet> Facets { get; public set; }
    [CompilerGeneratedAttribute]
public virtual List`1<Facet> get_Facets();
    [CompilerGeneratedAttribute]
public virtual void set_Facets(List`1<Facet> value);
}
public class Nethereum.Contracts.Standards.ERC2535Diamond.DiamondLoupeFacet.ContractDefinition.SupportsInterfaceFunction : SupportsInterfaceFunctionBase {
}
[FunctionAttribute("supportsInterface", "bool")]
public class Nethereum.Contracts.Standards.ERC2535Diamond.DiamondLoupeFacet.ContractDefinition.SupportsInterfaceFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private Byte[] <InterfaceId>k__BackingField;
    [ParameterAttribute("bytes4", "_interfaceId", "1")]
public Byte[] InterfaceId { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_InterfaceId();
    [CompilerGeneratedAttribute]
public virtual void set_InterfaceId(Byte[] value);
}
public class Nethereum.Contracts.Standards.ERC2535Diamond.DiamondLoupeFacet.ContractDefinition.SupportsInterfaceOutputDTO : SupportsInterfaceOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ERC2535Diamond.DiamondLoupeFacet.ContractDefinition.SupportsInterfaceOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private bool <ReturnValue1>k__BackingField;
    [ParameterAttribute("bool", "", "1")]
public bool ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual bool get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(bool value);
}
public class Nethereum.Contracts.Standards.ERC2535Diamond.DiamondLoupeFacet.ERC2535DiamondLoupeFacetContractService : ContractServiceBase {
    public ERC2535DiamondLoupeFacetContractService(IEthApiContractService ethApiContractService, string contractAddress);
    public Task`1<string> FacetAddressQueryAsync(FacetAddressFunction facetAddressFunction, BlockParameter blockParameter);
    public Task`1<string> FacetAddressQueryAsync(Byte[] functionSelector, BlockParameter blockParameter);
    public Task`1<List`1<string>> FacetAddressesQueryAsync(FacetAddressesFunction facetAddressesFunction, BlockParameter blockParameter);
    public Task`1<List`1<string>> FacetAddressesQueryAsync(BlockParameter blockParameter);
    public Task`1<List`1<Byte[]>> FacetFunctionSelectorsQueryAsync(FacetFunctionSelectorsFunction facetFunctionSelectorsFunction, BlockParameter blockParameter);
    public Task`1<List`1<Byte[]>> FacetFunctionSelectorsQueryAsync(string facet, BlockParameter blockParameter);
    public Task`1<FacetsOutputDTO> FacetsQueryAsync(FacetsFunction facetsFunction, BlockParameter blockParameter);
    public Task`1<FacetsOutputDTO> FacetsQueryAsync(BlockParameter blockParameter);
    public Task`1<bool> SupportsInterfaceQueryAsync(SupportsInterfaceFunction supportsInterfaceFunction, BlockParameter blockParameter);
    public Task`1<bool> SupportsInterfaceQueryAsync(Byte[] interfaceId, BlockParameter blockParameter);
    public virtual List`1<Type> GetAllFunctionTypes();
    public virtual List`1<Type> GetAllEventTypes();
    public virtual List`1<Type> GetAllErrorTypes();
}
public class Nethereum.Contracts.Standards.ERC2535Diamond.ERC2535DiamondService : object {
    private IEthApiContractService _ethApiContractService;
    public ERC2535DiamondService(IEthApiContractService ethApiContractService);
    public ERC2535DiamondCutFacetContractService GetDiamondCutFacetContractService(string contractAddress);
    public ERC2535DiamondLoupeFacetContractService GetDiamondLoupeFacetService(string contractAddress);
}
public class Nethereum.Contracts.Standards.ERC6492.ERC6492Service : object {
    public static string MAGIC_SUFFIX;
    private IEthApiContractService _ethApiContractService;
    public ERC6492Service(IEthApiContractService ethApiContractService);
    public sealed virtual Byte[] BuildSignature(string create2FactoryAddress, Byte[] factoryCallData, Byte[] originalSignature);
    public sealed virtual bool IsERC6492Signature(Byte[] signature);
    public bool IsERC6492Signature(string signature);
    [AsyncStateMachineAttribute("Nethereum.Contracts.Standards.ERC6492.ERC6492Service/<IsValidSignatureAsync>d__6")]
public sealed virtual Task`1<bool> IsValidSignatureAsync(string signer, string create2FactoryAddress, Byte[] factoryCallData, Byte[] hash, Byte[] originalSignature);
    [AsyncStateMachineAttribute("Nethereum.Contracts.Standards.ERC6492.ERC6492Service/<IsValidSignatureMessageAsync>d__7")]
public sealed virtual Task`1<bool> IsValidSignatureMessageAsync(string signer, Byte[] plainMessage, Byte[] signature);
    [AsyncStateMachineAttribute("Nethereum.Contracts.Standards.ERC6492.ERC6492Service/<IsValidSignatureMessageAsync>d__8")]
public sealed virtual Task`1<bool> IsValidSignatureMessageAsync(string signer, string plainUTF8Message, Byte[] signature);
    [AsyncStateMachineAttribute("Nethereum.Contracts.Standards.ERC6492.ERC6492Service/<IsValidSignatureAsync>d__9")]
public sealed virtual Task`1<bool> IsValidSignatureAsync(string signer, Byte[] hash, Byte[] signature);
}
public interface Nethereum.Contracts.Standards.ERC6492.IERC6492Service {
    public abstract virtual Byte[] BuildSignature(string create2FactoryAddress, Byte[] factoryCallData, Byte[] originalSignature);
    public abstract virtual bool IsERC6492Signature(Byte[] signature);
    public abstract virtual Task`1<bool> IsValidSignatureAsync(string signer, Byte[] hash, Byte[] signature);
    public abstract virtual Task`1<bool> IsValidSignatureAsync(string signer, string create2FactoryAddress, Byte[] factoryCallData, Byte[] hash, Byte[] originalSignature);
    public abstract virtual Task`1<bool> IsValidSignatureMessageAsync(string signer, string plainUTF8Message, Byte[] signature);
    public abstract virtual Task`1<bool> IsValidSignatureMessageAsync(string signer, Byte[] plainMessage, Byte[] signature);
}
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.ApprovalEventDTO : ApprovalEventDTOBase {
}
[EventAttribute("Approval")]
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.ApprovalEventDTOBase : object {
    [CompilerGeneratedAttribute]
private string <Owner>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Approved>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <TokenId>k__BackingField;
    [ParameterAttribute("address", "owner", "1", "True")]
public string Owner { get; public set; }
    [ParameterAttribute("address", "approved", "2", "True")]
public string Approved { get; public set; }
    [ParameterAttribute("uint256", "tokenId", "3", "True")]
public BigInteger TokenId { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Owner();
    [CompilerGeneratedAttribute]
public virtual void set_Owner(string value);
    [CompilerGeneratedAttribute]
public virtual string get_Approved();
    [CompilerGeneratedAttribute]
public virtual void set_Approved(string value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_TokenId();
    [CompilerGeneratedAttribute]
public virtual void set_TokenId(BigInteger value);
}
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.ApprovalForAllEventDTO : ApprovalForAllEventDTOBase {
}
[EventAttribute("ApprovalForAll")]
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.ApprovalForAllEventDTOBase : object {
    [CompilerGeneratedAttribute]
private string <Owner>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Operator>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Approved>k__BackingField;
    [ParameterAttribute("address", "owner", "1", "True")]
public string Owner { get; public set; }
    [ParameterAttribute("address", "operator", "2", "True")]
public string Operator { get; public set; }
    [ParameterAttribute("bool", "approved", "3", "False")]
public bool Approved { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Owner();
    [CompilerGeneratedAttribute]
public virtual void set_Owner(string value);
    [CompilerGeneratedAttribute]
public virtual string get_Operator();
    [CompilerGeneratedAttribute]
public virtual void set_Operator(string value);
    [CompilerGeneratedAttribute]
public virtual bool get_Approved();
    [CompilerGeneratedAttribute]
public virtual void set_Approved(bool value);
}
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.ApproveFunction : ApproveFunctionBase {
}
[FunctionAttribute("approve")]
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.ApproveFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private string <To>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <TokenId>k__BackingField;
    [ParameterAttribute("address", "to", "1")]
public string To { get; public set; }
    [ParameterAttribute("uint256", "tokenId", "2")]
public BigInteger TokenId { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_To();
    [CompilerGeneratedAttribute]
public virtual void set_To(string value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_TokenId();
    [CompilerGeneratedAttribute]
public virtual void set_TokenId(BigInteger value);
}
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.BalanceOfFunction : BalanceOfFunctionBase {
}
[FunctionAttribute("balanceOf", "uint256")]
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.BalanceOfFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private string <Owner>k__BackingField;
    [ParameterAttribute("address", "owner", "1")]
public string Owner { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Owner();
    [CompilerGeneratedAttribute]
public virtual void set_Owner(string value);
}
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.BalanceOfOutputDTO : BalanceOfOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.BalanceOfOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private BigInteger <ReturnValue1>k__BackingField;
    [ParameterAttribute("uint256", "", "1")]
public BigInteger ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual BigInteger get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(BigInteger value);
}
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.BurnFunction : BurnFunctionBase {
}
[FunctionAttribute("burn")]
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.BurnFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private BigInteger <TokenId>k__BackingField;
    [ParameterAttribute("uint256", "tokenId", "1")]
public BigInteger TokenId { get; public set; }
    [CompilerGeneratedAttribute]
public virtual BigInteger get_TokenId();
    [CompilerGeneratedAttribute]
public virtual void set_TokenId(BigInteger value);
}
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.DelegateBySigFunction : DelegateBySigFunctionBase {
}
[FunctionAttribute("delegateBySig")]
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.DelegateBySigFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private string <Delegatee>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <Nonce>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <Expiry>k__BackingField;
    [CompilerGeneratedAttribute]
private byte <V>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <R>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <S>k__BackingField;
    [ParameterAttribute("address", "delegatee", "1")]
public string Delegatee { get; public set; }
    [ParameterAttribute("uint256", "nonce", "2")]
public BigInteger Nonce { get; public set; }
    [ParameterAttribute("uint256", "expiry", "3")]
public BigInteger Expiry { get; public set; }
    [ParameterAttribute("uint8", "v", "4")]
public byte V { get; public set; }
    [ParameterAttribute("bytes32", "r", "5")]
public Byte[] R { get; public set; }
    [ParameterAttribute("bytes32", "s", "6")]
public Byte[] S { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Delegatee();
    [CompilerGeneratedAttribute]
public virtual void set_Delegatee(string value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_Nonce();
    [CompilerGeneratedAttribute]
public virtual void set_Nonce(BigInteger value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_Expiry();
    [CompilerGeneratedAttribute]
public virtual void set_Expiry(BigInteger value);
    [CompilerGeneratedAttribute]
public virtual byte get_V();
    [CompilerGeneratedAttribute]
public virtual void set_V(byte value);
    [CompilerGeneratedAttribute]
public virtual Byte[] get_R();
    [CompilerGeneratedAttribute]
public virtual void set_R(Byte[] value);
    [CompilerGeneratedAttribute]
public virtual Byte[] get_S();
    [CompilerGeneratedAttribute]
public virtual void set_S(Byte[] value);
}
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.DelegateChangedEventDTO : DelegateChangedEventDTOBase {
}
[EventAttribute("DelegateChanged")]
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.DelegateChangedEventDTOBase : object {
    [CompilerGeneratedAttribute]
private string <Delegator>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FromDelegate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ToDelegate>k__BackingField;
    [ParameterAttribute("address", "delegator", "1", "True")]
public string Delegator { get; public set; }
    [ParameterAttribute("address", "fromDelegate", "2", "True")]
public string FromDelegate { get; public set; }
    [ParameterAttribute("address", "toDelegate", "3", "True")]
public string ToDelegate { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Delegator();
    [CompilerGeneratedAttribute]
public virtual void set_Delegator(string value);
    [CompilerGeneratedAttribute]
public virtual string get_FromDelegate();
    [CompilerGeneratedAttribute]
public virtual void set_FromDelegate(string value);
    [CompilerGeneratedAttribute]
public virtual string get_ToDelegate();
    [CompilerGeneratedAttribute]
public virtual void set_ToDelegate(string value);
}
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.DelegateFunction : DelegateFunctionBase {
}
[FunctionAttribute("delegate")]
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.DelegateFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private string <Delegatee>k__BackingField;
    [ParameterAttribute("address", "delegatee", "1")]
public string Delegatee { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Delegatee();
    [CompilerGeneratedAttribute]
public virtual void set_Delegatee(string value);
}
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.DelegatesFunction : DelegatesFunctionBase {
}
[FunctionAttribute("delegates", "address")]
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.DelegatesFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private string <Account>k__BackingField;
    [ParameterAttribute("address", "account", "1")]
public string Account { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Account();
    [CompilerGeneratedAttribute]
public virtual void set_Account(string value);
}
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.DelegatesOutputDTO : DelegatesOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.DelegatesOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private string <ReturnValue1>k__BackingField;
    [ParameterAttribute("address", "", "1")]
public string ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(string value);
}
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.DelegateVotesChangedEventDTO : DelegateVotesChangedEventDTOBase {
}
[EventAttribute("DelegateVotesChanged")]
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.DelegateVotesChangedEventDTOBase : object {
    [CompilerGeneratedAttribute]
private string <Delegate>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <PreviousBalance>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <NewBalance>k__BackingField;
    [ParameterAttribute("address", "delegate", "1", "True")]
public string Delegate { get; public set; }
    [ParameterAttribute("uint256", "previousBalance", "2", "False")]
public BigInteger PreviousBalance { get; public set; }
    [ParameterAttribute("uint256", "newBalance", "3", "False")]
public BigInteger NewBalance { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Delegate();
    [CompilerGeneratedAttribute]
public virtual void set_Delegate(string value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_PreviousBalance();
    [CompilerGeneratedAttribute]
public virtual void set_PreviousBalance(BigInteger value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_NewBalance();
    [CompilerGeneratedAttribute]
public virtual void set_NewBalance(BigInteger value);
}
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.DomainSeparatorFunction : DomainSeparatorFunctionBase {
}
[FunctionAttribute("DOMAIN_SEPARATOR", "bytes32")]
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.DomainSeparatorFunctionBase : FunctionMessage {
}
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.DomainSeparatorOutputDto : DomainSeparatorOutputDtoBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.DomainSeparatorOutputDtoBase : object {
    [CompilerGeneratedAttribute]
private Byte[] <ReturnValue1>k__BackingField;
    [ParameterAttribute("bytes32", "", "1")]
public Byte[] ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(Byte[] value);
}
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.GetApprovedFunction : GetApprovedFunctionBase {
}
[FunctionAttribute("getApproved", "address")]
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.GetApprovedFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private BigInteger <TokenId>k__BackingField;
    [ParameterAttribute("uint256", "tokenId", "1")]
public BigInteger TokenId { get; public set; }
    [CompilerGeneratedAttribute]
public virtual BigInteger get_TokenId();
    [CompilerGeneratedAttribute]
public virtual void set_TokenId(BigInteger value);
}
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.GetApprovedOutputDTO : GetApprovedOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.GetApprovedOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private string <ReturnValue1>k__BackingField;
    [ParameterAttribute("address", "", "1")]
public string ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(string value);
}
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.GetPastTotalSupplyFunction : GetPastTotalSupplyFunctionBase {
}
[FunctionAttribute("getPastTotalSupply", "uint256")]
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.GetPastTotalSupplyFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private BigInteger <BlockNumber>k__BackingField;
    [ParameterAttribute("uint256", "blockNumber", "1")]
public BigInteger BlockNumber { get; public set; }
    [CompilerGeneratedAttribute]
public virtual BigInteger get_BlockNumber();
    [CompilerGeneratedAttribute]
public virtual void set_BlockNumber(BigInteger value);
}
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.GetPastTotalSupplyOutputDTO : GetPastTotalSupplyOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.GetPastTotalSupplyOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private BigInteger <ReturnValue1>k__BackingField;
    [ParameterAttribute("uint256", "", "1")]
public BigInteger ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual BigInteger get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(BigInteger value);
}
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.GetPastVotesFunction : GetPastVotesFunctionBase {
}
[FunctionAttribute("getPastVotes", "uint256")]
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.GetPastVotesFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private string <Account>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <BlockNumber>k__BackingField;
    [ParameterAttribute("address", "account", "1")]
public string Account { get; public set; }
    [ParameterAttribute("uint256", "blockNumber", "2")]
public BigInteger BlockNumber { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Account();
    [CompilerGeneratedAttribute]
public virtual void set_Account(string value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_BlockNumber();
    [CompilerGeneratedAttribute]
public virtual void set_BlockNumber(BigInteger value);
}
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.GetPastVotesOutputDTO : GetPastVotesOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.GetPastVotesOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private BigInteger <ReturnValue1>k__BackingField;
    [ParameterAttribute("uint256", "", "1")]
public BigInteger ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual BigInteger get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(BigInteger value);
}
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.GetVotesFunction : GetVotesFunctionBase {
}
[FunctionAttribute("getVotes", "uint256")]
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.GetVotesFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private string <Account>k__BackingField;
    [ParameterAttribute("address", "account", "1")]
public string Account { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Account();
    [CompilerGeneratedAttribute]
public virtual void set_Account(string value);
}
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.GetVotesOutputDTO : GetVotesOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.GetVotesOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private BigInteger <ReturnValue1>k__BackingField;
    [ParameterAttribute("uint256", "", "1")]
public BigInteger ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual BigInteger get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(BigInteger value);
}
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.IsApprovedForAllFunction : IsApprovedForAllFunctionBase {
}
[FunctionAttribute("isApprovedForAll", "bool")]
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.IsApprovedForAllFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private string <Owner>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Operator>k__BackingField;
    [ParameterAttribute("address", "owner", "1")]
public string Owner { get; public set; }
    [ParameterAttribute("address", "operator", "2")]
public string Operator { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Owner();
    [CompilerGeneratedAttribute]
public virtual void set_Owner(string value);
    [CompilerGeneratedAttribute]
public virtual string get_Operator();
    [CompilerGeneratedAttribute]
public virtual void set_Operator(string value);
}
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.IsApprovedForAllOutputDTO : IsApprovedForAllOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.IsApprovedForAllOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private bool <ReturnValue1>k__BackingField;
    [ParameterAttribute("bool", "", "1")]
public bool ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual bool get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(bool value);
}
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.NameFunction : NameFunctionBase {
}
[FunctionAttribute("name", "string")]
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.NameFunctionBase : FunctionMessage {
}
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.NameOutputDTO : NameOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.NameOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private string <ReturnValue1>k__BackingField;
    [ParameterAttribute("string", "", "1")]
public string ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(string value);
}
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.NoncesFunction : NoncesFunctionBase {
}
[FunctionAttribute("nonces", "uint256")]
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.NoncesFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private string <Owner>k__BackingField;
    [ParameterAttribute("address", "owner", "1")]
public string Owner { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Owner();
    [CompilerGeneratedAttribute]
public virtual void set_Owner(string value);
}
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.NoncesOutputDTO : NoncesOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.NoncesOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private BigInteger <ReturnValue1>k__BackingField;
    [ParameterAttribute("uint256", "", "1")]
public BigInteger ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual BigInteger get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(BigInteger value);
}
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.OwnerFunction : OwnerFunctionBase {
}
[FunctionAttribute("owner", "address")]
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.OwnerFunctionBase : FunctionMessage {
}
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.OwnerOfFunction : OwnerOfFunctionBase {
}
[FunctionAttribute("ownerOf", "address")]
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.OwnerOfFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private BigInteger <TokenId>k__BackingField;
    [ParameterAttribute("uint256", "tokenId", "1")]
public BigInteger TokenId { get; public set; }
    [CompilerGeneratedAttribute]
public virtual BigInteger get_TokenId();
    [CompilerGeneratedAttribute]
public virtual void set_TokenId(BigInteger value);
}
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.OwnerOfOutputDTO : OwnerOfOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.OwnerOfOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private string <ReturnValue1>k__BackingField;
    [ParameterAttribute("address", "", "1")]
public string ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(string value);
}
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.OwnerOutputDTO : OwnerOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.OwnerOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private string <ReturnValue1>k__BackingField;
    [ParameterAttribute("address", "", "1")]
public string ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(string value);
}
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.OwnershipTransferredEventDTO : OwnershipTransferredEventDTOBase {
}
[EventAttribute("OwnershipTransferred")]
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.OwnershipTransferredEventDTOBase : object {
    [CompilerGeneratedAttribute]
private string <PreviousOwner>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NewOwner>k__BackingField;
    [ParameterAttribute("address", "previousOwner", "1", "True")]
public string PreviousOwner { get; public set; }
    [ParameterAttribute("address", "newOwner", "2", "True")]
public string NewOwner { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_PreviousOwner();
    [CompilerGeneratedAttribute]
public virtual void set_PreviousOwner(string value);
    [CompilerGeneratedAttribute]
public virtual string get_NewOwner();
    [CompilerGeneratedAttribute]
public virtual void set_NewOwner(string value);
}
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.PausedEventDTO : PausedEventDTOBase {
}
[EventAttribute("Paused")]
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.PausedEventDTOBase : object {
    [CompilerGeneratedAttribute]
private string <Account>k__BackingField;
    [ParameterAttribute("address", "account", "1", "False")]
public string Account { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Account();
    [CompilerGeneratedAttribute]
public virtual void set_Account(string value);
}
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.PausedFunction : PausedFunctionBase {
}
[FunctionAttribute("paused", "bool")]
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.PausedFunctionBase : FunctionMessage {
}
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.PausedOutputDTO : PausedOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.PausedOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private bool <ReturnValue1>k__BackingField;
    [ParameterAttribute("bool", "", "1")]
public bool ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual bool get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(bool value);
}
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.PauseFunction : PauseFunctionBase {
}
[FunctionAttribute("pause")]
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.PauseFunctionBase : FunctionMessage {
}
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.RenounceOwnershipFunction : RenounceOwnershipFunctionBase {
}
[FunctionAttribute("renounceOwnership")]
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.RenounceOwnershipFunctionBase : FunctionMessage {
}
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.SafeMintFunction : SafeMintFunctionBase {
}
[FunctionAttribute("safeMint")]
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.SafeMintFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private string <To>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Uri>k__BackingField;
    [ParameterAttribute("address", "to", "1")]
public string To { get; public set; }
    [ParameterAttribute("string", "uri", "2")]
public string Uri { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_To();
    [CompilerGeneratedAttribute]
public virtual void set_To(string value);
    [CompilerGeneratedAttribute]
public virtual string get_Uri();
    [CompilerGeneratedAttribute]
public virtual void set_Uri(string value);
}
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.SafeTransferFrom1Function : SafeTransferFrom1FunctionBase {
}
[FunctionAttribute("safeTransferFrom")]
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.SafeTransferFrom1FunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private string <From>k__BackingField;
    [CompilerGeneratedAttribute]
private string <To>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <TokenId>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <Data>k__BackingField;
    [ParameterAttribute("address", "from", "1")]
public string From { get; public set; }
    [ParameterAttribute("address", "to", "2")]
public string To { get; public set; }
    [ParameterAttribute("uint256", "tokenId", "3")]
public BigInteger TokenId { get; public set; }
    [ParameterAttribute("bytes", "_data", "4")]
public Byte[] Data { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_From();
    [CompilerGeneratedAttribute]
public virtual void set_From(string value);
    [CompilerGeneratedAttribute]
public virtual string get_To();
    [CompilerGeneratedAttribute]
public virtual void set_To(string value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_TokenId();
    [CompilerGeneratedAttribute]
public virtual void set_TokenId(BigInteger value);
    [CompilerGeneratedAttribute]
public virtual Byte[] get_Data();
    [CompilerGeneratedAttribute]
public virtual void set_Data(Byte[] value);
}
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.SafeTransferFromFunction : SafeTransferFromFunctionBase {
}
[FunctionAttribute("safeTransferFrom")]
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.SafeTransferFromFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private string <From>k__BackingField;
    [CompilerGeneratedAttribute]
private string <To>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <TokenId>k__BackingField;
    [ParameterAttribute("address", "from", "1")]
public string From { get; public set; }
    [ParameterAttribute("address", "to", "2")]
public string To { get; public set; }
    [ParameterAttribute("uint256", "tokenId", "3")]
public BigInteger TokenId { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_From();
    [CompilerGeneratedAttribute]
public virtual void set_From(string value);
    [CompilerGeneratedAttribute]
public virtual string get_To();
    [CompilerGeneratedAttribute]
public virtual void set_To(string value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_TokenId();
    [CompilerGeneratedAttribute]
public virtual void set_TokenId(BigInteger value);
}
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.SetApprovalForAllFunction : SetApprovalForAllFunctionBase {
}
[FunctionAttribute("setApprovalForAll")]
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.SetApprovalForAllFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private string <Operator>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Approved>k__BackingField;
    [ParameterAttribute("address", "operator", "1")]
public string Operator { get; public set; }
    [ParameterAttribute("bool", "approved", "2")]
public bool Approved { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Operator();
    [CompilerGeneratedAttribute]
public virtual void set_Operator(string value);
    [CompilerGeneratedAttribute]
public virtual bool get_Approved();
    [CompilerGeneratedAttribute]
public virtual void set_Approved(bool value);
}
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.SupportsInterfaceFunction : SupportsInterfaceFunctionBase {
}
[FunctionAttribute("supportsInterface", "bool")]
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.SupportsInterfaceFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private Byte[] <InterfaceId>k__BackingField;
    [ParameterAttribute("bytes4", "interfaceId", "1")]
public Byte[] InterfaceId { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Byte[] get_InterfaceId();
    [CompilerGeneratedAttribute]
public virtual void set_InterfaceId(Byte[] value);
}
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.SupportsInterfaceOutputDTO : SupportsInterfaceOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.SupportsInterfaceOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private bool <ReturnValue1>k__BackingField;
    [ParameterAttribute("bool", "", "1")]
public bool ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual bool get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(bool value);
}
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.SymbolFunction : SymbolFunctionBase {
}
[FunctionAttribute("symbol", "string")]
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.SymbolFunctionBase : FunctionMessage {
}
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.SymbolOutputDTO : SymbolOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.SymbolOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private string <ReturnValue1>k__BackingField;
    [ParameterAttribute("string", "", "1")]
public string ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(string value);
}
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.TokenByIndexFunction : TokenByIndexFunctionBase {
}
[FunctionAttribute("tokenByIndex", "uint256")]
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.TokenByIndexFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private BigInteger <Index>k__BackingField;
    [ParameterAttribute("uint256", "index", "1")]
public BigInteger Index { get; public set; }
    [CompilerGeneratedAttribute]
public virtual BigInteger get_Index();
    [CompilerGeneratedAttribute]
public virtual void set_Index(BigInteger value);
}
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.TokenByIndexOutputDTO : TokenByIndexOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.TokenByIndexOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private BigInteger <ReturnValue1>k__BackingField;
    [ParameterAttribute("uint256", "", "1")]
public BigInteger ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual BigInteger get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(BigInteger value);
}
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.TokenOfOwnerByIndexFunction : TokenOfOwnerByIndexFunctionBase {
}
[FunctionAttribute("tokenOfOwnerByIndex", "uint256")]
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.TokenOfOwnerByIndexFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private string <Owner>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <Index>k__BackingField;
    [ParameterAttribute("address", "owner", "1")]
public string Owner { get; public set; }
    [ParameterAttribute("uint256", "index", "2")]
public BigInteger Index { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Owner();
    [CompilerGeneratedAttribute]
public virtual void set_Owner(string value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_Index();
    [CompilerGeneratedAttribute]
public virtual void set_Index(BigInteger value);
}
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.TokenOfOwnerByIndexOutputDTO : TokenOfOwnerByIndexOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.TokenOfOwnerByIndexOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private BigInteger <ReturnValue1>k__BackingField;
    [ParameterAttribute("uint256", "", "1")]
public BigInteger ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual BigInteger get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(BigInteger value);
}
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.TokenURIFunction : TokenURIFunctionBase {
}
[FunctionAttribute("tokenURI", "string")]
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.TokenURIFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private BigInteger <TokenId>k__BackingField;
    [ParameterAttribute("uint256", "tokenId", "1")]
public BigInteger TokenId { get; public set; }
    [CompilerGeneratedAttribute]
public virtual BigInteger get_TokenId();
    [CompilerGeneratedAttribute]
public virtual void set_TokenId(BigInteger value);
}
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.TokenURIOutputDTO : TokenURIOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.TokenURIOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private string <ReturnValue1>k__BackingField;
    [ParameterAttribute("string", "", "1")]
public string ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(string value);
}
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.TotalSupplyFunction : TotalSupplyFunctionBase {
}
[FunctionAttribute("totalSupply", "uint256")]
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.TotalSupplyFunctionBase : FunctionMessage {
}
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.TotalSupplyOutputDTO : TotalSupplyOutputDTOBase {
}
[FunctionOutputAttribute]
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.TotalSupplyOutputDTOBase : object {
    [CompilerGeneratedAttribute]
private BigInteger <ReturnValue1>k__BackingField;
    [ParameterAttribute("uint256", "", "1")]
public BigInteger ReturnValue1 { get; public set; }
    [CompilerGeneratedAttribute]
public virtual BigInteger get_ReturnValue1();
    [CompilerGeneratedAttribute]
public virtual void set_ReturnValue1(BigInteger value);
}
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.TransferEventDTO : TransferEventDTOBase {
}
[EventAttribute("Transfer")]
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.TransferEventDTOBase : object {
    [CompilerGeneratedAttribute]
private string <From>k__BackingField;
    [CompilerGeneratedAttribute]
private string <To>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <TokenId>k__BackingField;
    [ParameterAttribute("address", "from", "1", "True")]
public string From { get; public set; }
    [ParameterAttribute("address", "to", "2", "True")]
public string To { get; public set; }
    [ParameterAttribute("uint256", "tokenId", "3", "True")]
public BigInteger TokenId { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_From();
    [CompilerGeneratedAttribute]
public virtual void set_From(string value);
    [CompilerGeneratedAttribute]
public virtual string get_To();
    [CompilerGeneratedAttribute]
public virtual void set_To(string value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_TokenId();
    [CompilerGeneratedAttribute]
public virtual void set_TokenId(BigInteger value);
}
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.TransferFromFunction : TransferFromFunctionBase {
}
[FunctionAttribute("transferFrom")]
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.TransferFromFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private string <From>k__BackingField;
    [CompilerGeneratedAttribute]
private string <To>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <TokenId>k__BackingField;
    [ParameterAttribute("address", "from", "1")]
public string From { get; public set; }
    [ParameterAttribute("address", "to", "2")]
public string To { get; public set; }
    [ParameterAttribute("uint256", "tokenId", "3")]
public BigInteger TokenId { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_From();
    [CompilerGeneratedAttribute]
public virtual void set_From(string value);
    [CompilerGeneratedAttribute]
public virtual string get_To();
    [CompilerGeneratedAttribute]
public virtual void set_To(string value);
    [CompilerGeneratedAttribute]
public virtual BigInteger get_TokenId();
    [CompilerGeneratedAttribute]
public virtual void set_TokenId(BigInteger value);
}
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.TransferOwnershipFunction : TransferOwnershipFunctionBase {
}
[FunctionAttribute("transferOwnership")]
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.TransferOwnershipFunctionBase : FunctionMessage {
    [CompilerGeneratedAttribute]
private string <NewOwner>k__BackingField;
    [ParameterAttribute("address", "newOwner", "1")]
public string NewOwner { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_NewOwner();
    [CompilerGeneratedAttribute]
public virtual void set_NewOwner(string value);
}
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.UnpausedEventDTO : UnpausedEventDTOBase {
}
[EventAttribute("Unpaused")]
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.UnpausedEventDTOBase : object {
    [CompilerGeneratedAttribute]
private string <Account>k__BackingField;
    [ParameterAttribute("address", "account", "1", "False")]
public string Account { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Account();
    [CompilerGeneratedAttribute]
public virtual void set_Account(string value);
}
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.UnpauseFunction : UnpauseFunctionBase {
}
[FunctionAttribute("unpause")]
public class Nethereum.Contracts.Standards.ERC721.ContractDefinition.UnpauseFunctionBase : FunctionMessage {
}
public class Nethereum.Contracts.Standards.ERC721.ERC721ContractService : object {
    private IEthApiContractService _ethApiContractService;
    [CompilerGeneratedAttribute]
private string <ContractAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private ContractHandler <ContractHandler>k__BackingField;
    public string ContractAddress { get; }
    public ContractHandler ContractHandler { get; }
    public ERC721ContractService(IEthApiContractService ethApiContractService, string contractAddress);
    [CompilerGeneratedAttribute]
public string get_ContractAddress();
    [CompilerGeneratedAttribute]
public ContractHandler get_ContractHandler();
    public Task`1<Byte[]> DomainSeparatorQueryAsync(DomainSeparatorFunction domainSeparatorFunction, BlockParameter blockParameter);
    public Task`1<Byte[]> DomainSeparatorQueryAsync(BlockParameter blockParameter);
    public Task`1<string> ApproveRequestAsync(ApproveFunction approveFunction);
    public Task`1<TransactionReceipt> ApproveRequestAndWaitForReceiptAsync(ApproveFunction approveFunction, CancellationToken cancellationToken);
    public Task`1<string> ApproveRequestAsync(string to, BigInteger tokenId);
    public Task`1<TransactionReceipt> ApproveRequestAndWaitForReceiptAsync(string to, BigInteger tokenId, CancellationToken cancellationToken);
    public Task`1<BigInteger> BalanceOfQueryAsync(BalanceOfFunction balanceOfFunction, BlockParameter blockParameter);
    public Task`1<BigInteger> BalanceOfQueryAsync(string owner, BlockParameter blockParameter);
    public Task`1<string> BurnRequestAsync(BurnFunction burnFunction);
    public Task`1<TransactionReceipt> BurnRequestAndWaitForReceiptAsync(BurnFunction burnFunction, CancellationToken cancellationToken);
    public Task`1<string> BurnRequestAsync(BigInteger tokenId);
    public Task`1<TransactionReceipt> BurnRequestAndWaitForReceiptAsync(BigInteger tokenId, CancellationToken cancellationToken);
    public Task`1<string> DelegateRequestAsync(DelegateFunction delegateFunction);
    public Task`1<TransactionReceipt> DelegateRequestAndWaitForReceiptAsync(DelegateFunction delegateFunction, CancellationToken cancellationToken);
    public Task`1<string> DelegateRequestAsync(string delegatee);
    public Task`1<TransactionReceipt> DelegateRequestAndWaitForReceiptAsync(string delegatee, CancellationToken cancellationToken);
    public Task`1<string> DelegateBySigRequestAsync(DelegateBySigFunction delegateBySigFunction);
    public Task`1<TransactionReceipt> DelegateBySigRequestAndWaitForReceiptAsync(DelegateBySigFunction delegateBySigFunction, CancellationToken cancellationToken);
    public Task`1<string> DelegateBySigRequestAsync(string delegatee, BigInteger nonce, BigInteger expiry, byte v, Byte[] r, Byte[] s);
    public Task`1<TransactionReceipt> DelegateBySigRequestAndWaitForReceiptAsync(string delegatee, BigInteger nonce, BigInteger expiry, byte v, Byte[] r, Byte[] s, CancellationToken cancellationToken);
    public Task`1<string> DelegatesQueryAsync(DelegatesFunction delegatesFunction, BlockParameter blockParameter);
    public Task`1<string> DelegatesQueryAsync(string account, BlockParameter blockParameter);
    public Task`1<string> GetApprovedQueryAsync(GetApprovedFunction getApprovedFunction, BlockParameter blockParameter);
    public Task`1<string> GetApprovedQueryAsync(BigInteger tokenId, BlockParameter blockParameter);
    public Task`1<BigInteger> GetPastTotalSupplyQueryAsync(GetPastTotalSupplyFunction getPastTotalSupplyFunction, BlockParameter blockParameter);
    public Task`1<BigInteger> GetPastTotalSupplyQueryAsync(BigInteger blockNumber, BlockParameter blockParameter);
    public Task`1<BigInteger> GetPastVotesQueryAsync(GetPastVotesFunction getPastVotesFunction, BlockParameter blockParameter);
    public Task`1<BigInteger> GetPastVotesQueryAsync(string account, BigInteger blockNumber, BlockParameter blockParameter);
    public Task`1<BigInteger> GetVotesQueryAsync(GetVotesFunction getVotesFunction, BlockParameter blockParameter);
    public Task`1<BigInteger> GetVotesQueryAsync(string account, BlockParameter blockParameter);
    public Task`1<bool> IsApprovedForAllQueryAsync(IsApprovedForAllFunction isApprovedForAllFunction, BlockParameter blockParameter);
    public Task`1<bool> IsApprovedForAllQueryAsync(string owner, string operator, BlockParameter blockParameter);
    public Task`1<string> NameQueryAsync(NameFunction nameFunction, BlockParameter blockParameter);
    public Task`1<string> NameQueryAsync(BlockParameter blockParameter);
    public Task`1<BigInteger> NoncesQueryAsync(NoncesFunction noncesFunction, BlockParameter blockParameter);
    public Task`1<BigInteger> NoncesQueryAsync(string owner, BlockParameter blockParameter);
    public Task`1<string> OwnerQueryAsync(OwnerFunction ownerFunction, BlockParameter blockParameter);
    public Task`1<string> OwnerQueryAsync(BlockParameter blockParameter);
    public Task`1<string> OwnerOfQueryAsync(OwnerOfFunction ownerOfFunction, BlockParameter blockParameter);
    public Task`1<string> OwnerOfQueryAsync(BigInteger tokenId, BlockParameter blockParameter);
    public Task`1<string> PauseRequestAsync(PauseFunction pauseFunction);
    public Task`1<string> PauseRequestAsync();
    public Task`1<TransactionReceipt> PauseRequestAndWaitForReceiptAsync(PauseFunction pauseFunction, CancellationToken cancellationToken);
    public Task`1<TransactionReceipt> PauseRequestAndWaitForReceiptAsync(CancellationToken cancellationToken);
    public Task`1<bool> PausedQueryAsync(PausedFunction pausedFunction, BlockParameter blockParameter);
    public Task`1<bool> PausedQueryAsync(BlockParameter blockParameter);
    public Task`1<string> RenounceOwnershipRequestAsync(RenounceOwnershipFunction renounceOwnershipFunction);
    public Task`1<string> RenounceOwnershipRequestAsync();
    public Task`1<TransactionReceipt> RenounceOwnershipRequestAndWaitForReceiptAsync(RenounceOwnershipFunction renounceOwnershipFunction, CancellationToken cancellationToken);
    public Task`1<TransactionReceipt> RenounceOwnershipRequestAndWaitForReceiptAsync(CancellationToken cancellationToken);
    public Task`1<string> SafeMintRequestAsync(SafeMintFunction safeMintFunction);
    public Task`1<TransactionReceipt> SafeMintRequestAndWaitForReceiptAsync(SafeMintFunction safeMintFunction, CancellationToken cancellationToken);
    public Task`1<string> SafeMintRequestAsync(string to, string uri);
    public Task`1<TransactionReceipt> SafeMintRequestAndWaitForReceiptAsync(string to, string uri, CancellationToken cancellationToken);
    public Task`1<string> SafeTransferFromRequestAsync(SafeTransferFromFunction safeTransferFromFunction);
    public Task`1<TransactionReceipt> SafeTransferFromRequestAndWaitForReceiptAsync(SafeTransferFromFunction safeTransferFromFunction, CancellationToken cancellationToken);
    public Task`1<string> SafeTransferFromRequestAsync(string from, string to, BigInteger tokenId);
    public Task`1<TransactionReceipt> SafeTransferFromRequestAndWaitForReceiptAsync(string from, string to, BigInteger tokenId, CancellationToken cancellationToken);
    public Task`1<string> SafeTransferFromRequestAsync(SafeTransferFrom1Function safeTransferFrom1Function);
    public Task`1<TransactionReceipt> SafeTransferFromRequestAndWaitForReceiptAsync(SafeTransferFrom1Function safeTransferFrom1Function, CancellationToken cancellationToken);
    public Task`1<string> SafeTransferFromRequestAsync(string from, string to, BigInteger tokenId, Byte[] data);
    public Task`1<TransactionReceipt> SafeTransferFromRequestAndWaitForReceiptAsync(string from, string to, BigInteger tokenId, Byte[] data, CancellationToken cancellationToken);
    public Task`1<string> SetApprovalForAllRequestAsync(SetApprovalForAllFunction setApprovalForAllFunction);
    public Task`1<TransactionReceipt> SetApprovalForAllRequestAndWaitForReceiptAsync(SetApprovalForAllFunction setApprovalForAllFunction, CancellationToken cancellationToken);
    public Task`1<string> SetApprovalForAllRequestAsync(string operator, bool approved);
    public Task`1<TransactionReceipt> SetApprovalForAllRequestAndWaitForReceiptAsync(string operator, bool approved, CancellationToken cancellationToken);
    public Task`1<bool> SupportsInterfaceQueryAsync(SupportsInterfaceFunction supportsInterfaceFunction, BlockParameter blockParameter);
    public Task`1<bool> SupportsInterfaceQueryAsync(Byte[] interfaceId, BlockParameter blockParameter);
    public Task`1<string> SymbolQueryAsync(SymbolFunction symbolFunction, BlockParameter blockParameter);
    public Task`1<string> SymbolQueryAsync(BlockParameter blockParameter);
    public Task`1<BigInteger> TokenByIndexQueryAsync(TokenByIndexFunction tokenByIndexFunction, BlockParameter blockParameter);
    public Task`1<BigInteger> TokenByIndexQueryAsync(BigInteger index, BlockParameter blockParameter);
    public Task`1<BigInteger> TokenOfOwnerByIndexQueryAsync(TokenOfOwnerByIndexFunction tokenOfOwnerByIndexFunction, BlockParameter blockParameter);
    public Task`1<BigInteger> TokenOfOwnerByIndexQueryAsync(string owner, BigInteger index, BlockParameter blockParameter);
    public Task`1<string> TokenURIQueryAsync(TokenURIFunction tokenURIFunction, BlockParameter blockParameter);
    public Task`1<string> TokenURIQueryAsync(BigInteger tokenId, BlockParameter blockParameter);
    public Task`1<BigInteger> TotalSupplyQueryAsync(TotalSupplyFunction totalSupplyFunction, BlockParameter blockParameter);
    public Task`1<BigInteger> TotalSupplyQueryAsync(BlockParameter blockParameter);
    public Task`1<string> TransferFromRequestAsync(TransferFromFunction transferFromFunction);
    public Task`1<TransactionReceipt> TransferFromRequestAndWaitForReceiptAsync(TransferFromFunction transferFromFunction, CancellationToken cancellationToken);
    public Task`1<string> TransferFromRequestAsync(string from, string to, BigInteger tokenId);
    public Task`1<TransactionReceipt> TransferFromRequestAndWaitForReceiptAsync(string from, string to, BigInteger tokenId, CancellationToken cancellationToken);
    public Task`1<string> TransferOwnershipRequestAsync(TransferOwnershipFunction transferOwnershipFunction);
    public Task`1<TransactionReceipt> TransferOwnershipRequestAndWaitForReceiptAsync(TransferOwnershipFunction transferOwnershipFunction, CancellationToken cancellationToken);
    public Task`1<string> TransferOwnershipRequestAsync(string newOwner);
    public Task`1<TransactionReceipt> TransferOwnershipRequestAndWaitForReceiptAsync(string newOwner, CancellationToken cancellationToken);
    public Task`1<string> UnpauseRequestAsync(UnpauseFunction unpauseFunction);
    public Task`1<string> UnpauseRequestAsync();
    public Task`1<TransactionReceipt> UnpauseRequestAndWaitForReceiptAsync(UnpauseFunction unpauseFunction, CancellationToken cancellationToken);
    public Task`1<TransactionReceipt> UnpauseRequestAndWaitForReceiptAsync(CancellationToken cancellationToken);
    public Task`1<bool> SupportsErc721InterfaceQueryAsync();
    public Task`1<bool> SupportsErc721MetadataInterfaceQueryAsync();
    public Task`1<bool> SupportsErc721EnumberableInterfaceQueryAsync();
    [AsyncStateMachineAttribute("Nethereum.Contracts.Standards.ERC721.ERC721ContractService/<GetAllOwnersUsingTotalSupplyAndMultiCallAsync>d__101")]
public Task`1<List`1<ERC721TokenOwnerInfo>> GetAllOwnersUsingTotalSupplyAndMultiCallAsync(int startTokenId, int numberOfCallsPerRequest, string multiCallAddress);
    [AsyncStateMachineAttribute("Nethereum.Contracts.Standards.ERC721.ERC721ContractService/<GetAllOwnersUsingIdRangeAndMultiCallAsync>d__102")]
public Task`1<List`1<ERC721TokenOwnerInfo>> GetAllOwnersUsingIdRangeAndMultiCallAsync(int startTokenId, int endTokenId, int numberOfCallsPerRequest, string multiCallAddress);
    [AsyncStateMachineAttribute("Nethereum.Contracts.Standards.ERC721.ERC721ContractService/<GetAllMetadataUrlsUsingIdRangeAndMultiCallAsync>d__103")]
public Task`1<List`1<ERC721TokenOwnerInfo>> GetAllMetadataUrlsUsingIdRangeAndMultiCallAsync(int startTokenId, int endTokenId, int numberOfCallsPerRequest, string multiCallAddress);
    [AsyncStateMachineAttribute("Nethereum.Contracts.Standards.ERC721.ERC721ContractService/<GetAllMetadataUrlsUsingMultiCallAsync>d__104")]
public Task`1<List`1<ERC721TokenOwnerInfo>> GetAllMetadataUrlsUsingMultiCallAsync(Int32[] tokenIds, int numberOfCallsPerRequest, string multiCallAddress);
    [AsyncStateMachineAttribute("Nethereum.Contracts.Standards.ERC721.ERC721ContractService/<GetAllTokenIdsOfOwnerUsingTokenOfOwnerByIndexAndMultiCallAsync>d__105")]
public Task`1<List`1<BigInteger>> GetAllTokenIdsOfOwnerUsingTokenOfOwnerByIndexAndMultiCallAsync(string ownerAddress, int numberOfCallsPerRequest, string multiCallAddress);
    [AsyncStateMachineAttribute("Nethereum.Contracts.Standards.ERC721.ERC721ContractService/<GetAllTokenUrlsOfOwnerUsingTokenOfOwnerByIndexAndMultiCallAsync>d__106")]
public Task`1<List`1<ERC721TokenOwnerInfo>> GetAllTokenUrlsOfOwnerUsingTokenOfOwnerByIndexAndMultiCallAsync(string ownerAddress, int numberOfCallsPerRequest, string multiCallAddress);
    [CompilerGeneratedAttribute]
private ERC721TokenOwnerInfo <GetAllOwnersUsingIdRangeAndMultiCallAsync>b__102_0(MulticallInputOutput`2<OwnerOfFunction, OwnerOfOutputDTO> x);
    [CompilerGeneratedAttribute]
private ERC721TokenOwnerInfo <GetAllMetadataUrlsUsingIdRangeAndMultiCallAsync>b__103_0(MulticallInputOutput`2<TokenURIFunction, TokenURIOutputDTO> x);
    [CompilerGeneratedAttribute]
private ERC721TokenOwnerInfo <GetAllMetadataUrlsUsingMultiCallAsync>b__104_0(MulticallInputOutput`2<TokenURIFunction, TokenURIOutputDTO> x);
}
public class Nethereum.Contracts.Standards.ERC721.ERC721Service : object {
    private IEthApiContractService _ethApiContractService;
    public ERC721Service(IEthApiContractService ethApiContractService);
    public ERC721ContractService GetContractService(string contractAddress);
    public List`1<FunctionABI> GetRequiredFunctionAbis();
    public String[] GetRequiredFunctionSignatures();
    public List`1<FunctionABI> GetOptionalMetadataExtensionsFunctionAbis();
    public List`1<FunctionABI> GetOptionalEnumerableExtensionFunctionAbis();
    public String[] GetOptionalMetadataFunctionSignatures();
    public String[] GetOptionalEnumerableExtensionFunctionSignatures();
    [AsyncStateMachineAttribute("Nethereum.Contracts.Standards.ERC721.ERC721Service/<GetAllTokenIdsOfOwnerUsingTokenOfOwnerByIndexAndMultiCallAsync>d__9")]
public Task`1<List`1<ERC721TokenOwnerInfo>> GetAllTokenIdsOfOwnerUsingTokenOfOwnerByIndexAndMultiCallAsync(string ownerAddress, String[] contractAddresses, string multiCallAddress);
    [AsyncStateMachineAttribute("Nethereum.Contracts.Standards.ERC721.ERC721Service/<GetAllTokenUrlsOfOwnerUsingTokenOfOwnerByIndexAndMultiCallAsync>d__10")]
public Task`1<List`1<ERC721TokenOwnerInfo>> GetAllTokenUrlsOfOwnerUsingTokenOfOwnerByIndexAndMultiCallAsync(string ownerAddress, String[] contractAddresses, string multiCallAddress);
}
public class Nethereum.Contracts.Standards.ERC721.ERC721TokenOwnerInfo : object {
    [CompilerGeneratedAttribute]
private string <Owner>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContractAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <TokenId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MetadataUrl>k__BackingField;
    public string Owner { get; public set; }
    public string ContractAddress { get; public set; }
    public BigInteger TokenId { get; public set; }
    public string MetadataUrl { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Owner();
    [CompilerGeneratedAttribute]
public void set_Owner(string value);
    [CompilerGeneratedAttribute]
public string get_ContractAddress();
    [CompilerGeneratedAttribute]
public void set_ContractAddress(string value);
    [CompilerGeneratedAttribute]
public BigInteger get_TokenId();
    [CompilerGeneratedAttribute]
public void set_TokenId(BigInteger value);
    [CompilerGeneratedAttribute]
public string get_MetadataUrl();
    [CompilerGeneratedAttribute]
public void set_MetadataUrl(string value);
}
public class Nethereum.Contracts.Standards.ERC721.NftMetadata : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ExternalUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Image>k__BackingField;
    [JsonPropertyAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyAttribute("description")]
public string Description { get; public set; }
    [JsonPropertyAttribute("external_url")]
public string ExternalUrl { get; public set; }
    [JsonPropertyAttribute("image")]
public string Image { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public string get_ExternalUrl();
    [CompilerGeneratedAttribute]
public void set_ExternalUrl(string value);
    [CompilerGeneratedAttribute]
public string get_Image();
    [CompilerGeneratedAttribute]
public void set_Image(string value);
}
internal class Nethereum.Contracts.TopicFilter : object {
    internal static TopicFilter Empty;
    private List`1<object> _values;
    [CompilerGeneratedAttribute]
private PropertyInfo <EventDtoProperty>k__BackingField;
    [CompilerGeneratedAttribute]
private ParameterAttribute <ParameterAttribute>k__BackingField;
    public PropertyInfo EventDtoProperty { get; }
    public ParameterAttribute ParameterAttribute { get; }
    internal TopicFilter(PropertyInfo eventDtoProperty, ParameterAttribute parameterAttribute);
    private static TopicFilter();
    [CompilerGeneratedAttribute]
public PropertyInfo get_EventDtoProperty();
    [CompilerGeneratedAttribute]
public ParameterAttribute get_ParameterAttribute();
    public Object[] GetValues();
    public void AddValue(object val);
}
internal class Nethereum.Contracts.TopicFilterContainer`1 : object {
    [CompilerGeneratedAttribute]
private bool <Empty>k__BackingField;
    [CompilerGeneratedAttribute]
private TopicFilter <Topic1>k__BackingField;
    [CompilerGeneratedAttribute]
private TopicFilter <Topic2>k__BackingField;
    [CompilerGeneratedAttribute]
private TopicFilter <Topic3>k__BackingField;
    [CompilerGeneratedAttribute]
private TopicFilter[] <Topics>k__BackingField;
    public bool Empty { get; private set; }
    public TopicFilter Topic1 { get; private set; }
    public TopicFilter Topic2 { get; private set; }
    public TopicFilter Topic3 { get; private set; }
    private TopicFilter[] Topics { get; private set; }
    [CompilerGeneratedAttribute]
public bool get_Empty();
    [CompilerGeneratedAttribute]
private void set_Empty(bool value);
    [CompilerGeneratedAttribute]
public TopicFilter get_Topic1();
    [CompilerGeneratedAttribute]
private void set_Topic1(TopicFilter value);
    [CompilerGeneratedAttribute]
public TopicFilter get_Topic2();
    [CompilerGeneratedAttribute]
private void set_Topic2(TopicFilter value);
    [CompilerGeneratedAttribute]
public TopicFilter get_Topic3();
    [CompilerGeneratedAttribute]
private void set_Topic3(TopicFilter value);
    [CompilerGeneratedAttribute]
private TopicFilter[] get_Topics();
    [CompilerGeneratedAttribute]
private void set_Topics(TopicFilter[] value);
    public TopicFilter GetTopic(PropertyInfo pInfo);
}
public interface Nethereum.Contracts.TransactionHandlers.ITransactionEstimatorHandler`1 {
    public abstract virtual Task`1<HexBigInteger> EstimateGasAsync(string contractAddress, TFunctionMessage functionMessage);
}
public interface Nethereum.Contracts.TransactionHandlers.ITransactionReceiptPollHandler`1 {
    public abstract virtual Task`1<TransactionReceipt> SendTransactionAsync(string contractAddress, TFunctionMessage functionMessage, CancellationTokenSource cancellationTokenSource);
    public abstract virtual Task`1<TransactionReceipt> SendTransactionAsync(string contractAddress, TFunctionMessage functionMessage, CancellationToken cancellationToken);
}
public interface Nethereum.Contracts.TransactionHandlers.ITransactionSenderHandler`1 {
    public abstract virtual Task`1<string> SendTransactionAsync(string contractAddress, TFunctionMessage functionMessage);
}
public interface Nethereum.Contracts.TransactionHandlers.ITransactionSigner`1 {
    public abstract virtual Task`1<string> SignTransactionAsync(string contractAddress, TFunctionMessage functionMessage);
}
public enum Nethereum.Contracts.TransactionHandlers.MultiSend.ContractOperationType : Enum {
    public int value__;
    public static ContractOperationType Call;
    public static ContractOperationType DelegateCall;
}
public interface Nethereum.Contracts.TransactionHandlers.MultiSend.IMultiSendInput {
    public string Target { get; public set; }
    public BigInteger Value { get; public set; }
    public abstract virtual string get_Target();
    public abstract virtual void set_Target(string value);
    public abstract virtual BigInteger get_Value();
    public abstract virtual void set_Value(BigInteger value);
    public abstract virtual Byte[] GetCallData();
    public abstract virtual Byte[] GetTransactionEncoded();
}
public class Nethereum.Contracts.TransactionHandlers.MultiSend.MultiSendEncoder : object {
    public static Byte[] EncodeMultiSend(IMultiSendInput multiSendInput);
    public static Byte[] EncodeMultiSendList(IMultiSendInput[] multiSendInputs);
}
[FunctionAttribute("multiSend")]
public class Nethereum.Contracts.TransactionHandlers.MultiSend.MultiSendFunction : FunctionMessage {
    [CompilerGeneratedAttribute]
private Byte[] <Transactions>k__BackingField;
    [ParameterAttribute("bytes", "transactions", "1")]
public Byte[] Transactions { get; public set; }
    public MultiSendFunction(IMultiSendInput[] multiSendInputs);
    [CompilerGeneratedAttribute]
public Byte[] get_Transactions();
    [CompilerGeneratedAttribute]
public void set_Transactions(Byte[] value);
}
public class Nethereum.Contracts.TransactionHandlers.MultiSend.MultiSendFunctionInput`1 : object {
    [CompilerGeneratedAttribute]
private string <Target>k__BackingField;
    [CompilerGeneratedAttribute]
private TFunctionMessage <Input>k__BackingField;
    [CompilerGeneratedAttribute]
private BigInteger <Value>k__BackingField;
    public string Target { get; public set; }
    public TFunctionMessage Input { get; public set; }
    public BigInteger Value { get; public set; }
    public MultiSendFunctionInput`1(TFunctionMessage functionMessage, string contractAddressTarget, BigInteger value);
    public MultiSendFunctionInput`1(TFunctionMessage functionMessage, string contractAddressTarget);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Target();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Target(string value);
    [CompilerGeneratedAttribute]
public TFunctionMessage get_Input();
    [CompilerGeneratedAttribute]
public void set_Input(TFunctionMessage value);
    [CompilerGeneratedAttribute]
public sealed virtual BigInteger get_Value();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Value(BigInteger value);
    public sealed virtual Byte[] GetCallData();
    public sealed virtual Byte[] GetTransactionEncoded();
}
public class Nethereum.Contracts.TransactionHandlers.TransactionEstimatorHandler`1 : TransactionHandlerBase`1<TFunctionMessage> {
    public TransactionEstimatorHandler`1(ITransactionManager transactionManager);
    [AsyncStateMachineAttribute("Nethereum.Contracts.TransactionHandlers.TransactionEstimatorHandler`1/<EstimateGasAsync>d__1")]
public sealed virtual Task`1<HexBigInteger> EstimateGasAsync(string contractAddress, TFunctionMessage functionMessage);
}
public abstract class Nethereum.Contracts.TransactionHandlers.TransactionHandlerBase`1 : ContractTransactionHandlerBase {
    [CompilerGeneratedAttribute]
private FunctionMessageEncodingService`1<TFunctionMessage> <FunctionMessageEncodingService>k__BackingField;
    protected FunctionMessageEncodingService`1<TFunctionMessage> FunctionMessageEncodingService { get; protected set; }
    protected TransactionHandlerBase`1(ITransactionManager transactionManager);
    [CompilerGeneratedAttribute]
protected FunctionMessageEncodingService`1<TFunctionMessage> get_FunctionMessageEncodingService();
    [CompilerGeneratedAttribute]
protected void set_FunctionMessageEncodingService(FunctionMessageEncodingService`1<TFunctionMessage> value);
    private void InitialiseEncodingService();
    protected void SetEncoderContractAddress(string contractAddress);
}
public class Nethereum.Contracts.TransactionHandlers.TransactionReceiptPollHandler`1 : TransactionHandlerBase`1<TFunctionMessage> {
    private ITransactionSenderHandler`1<TFunctionMessage> _contractTransactionSender;
    public TransactionReceiptPollHandler`1(ITransactionManager transactionManager);
    public TransactionReceiptPollHandler`1(ITransactionManager transactionManager, ITransactionSenderHandler`1<TFunctionMessage> contractTransactionSender);
    [AsyncStateMachineAttribute("Nethereum.Contracts.TransactionHandlers.TransactionReceiptPollHandler`1/<SendTransactionAsync>d__3")]
public sealed virtual Task`1<TransactionReceipt> SendTransactionAsync(string contractAddress, TFunctionMessage functionMessage, CancellationToken cancellationToken);
    public sealed virtual Task`1<TransactionReceipt> SendTransactionAsync(string contractAddress, TFunctionMessage functionMessage, CancellationTokenSource cancellationTokenSource);
}
public class Nethereum.Contracts.TransactionHandlers.TransactionSenderHandler`1 : TransactionHandlerBase`1<TFunctionMessage> {
    private ITransactionEstimatorHandler`1<TFunctionMessage> _contractTransactionEstimatorHandler;
    public TransactionSenderHandler`1(ITransactionManager transactionManager);
    public TransactionSenderHandler`1(ITransactionManager transactionManager, ITransactionEstimatorHandler`1<TFunctionMessage> contractTransactionEstimatorHandler);
    [AsyncStateMachineAttribute("Nethereum.Contracts.TransactionHandlers.TransactionSenderHandler`1/<SendTransactionAsync>d__3")]
public sealed virtual Task`1<string> SendTransactionAsync(string contractAddress, TFunctionMessage functionMessage);
    [AsyncStateMachineAttribute("Nethereum.Contracts.TransactionHandlers.TransactionSenderHandler`1/<GetOrEstimateMaximumGasAsync>d__4")]
protected virtual Task`1<HexBigInteger> GetOrEstimateMaximumGasAsync(TFunctionMessage functionMessage, string contractAddress);
}
public class Nethereum.Contracts.TransactionHandlers.TransactionSignerHandler`1 : TransactionHandlerBase`1<TFunctionMessage> {
    private ITransactionEstimatorHandler`1<TFunctionMessage> _contractTransactionEstimatorHandler;
    public TransactionSignerHandler`1(ITransactionManager transactionManager);
    public TransactionSignerHandler`1(ITransactionManager transactionManager, ITransactionEstimatorHandler`1<TFunctionMessage> contractTransactionEstimatorHandler);
    [AsyncStateMachineAttribute("Nethereum.Contracts.TransactionHandlers.TransactionSignerHandler`1/<SignTransactionAsync>d__3")]
public sealed virtual Task`1<string> SignTransactionAsync(string contractAddress, TFunctionMessage functionMessage);
    [AsyncStateMachineAttribute("Nethereum.Contracts.TransactionHandlers.TransactionSignerHandler`1/<GetOrEstimateMaximumGasAsync>d__4")]
protected virtual Task`1<HexBigInteger> GetOrEstimateMaximumGasAsync(TFunctionMessage functionMessage, string contractAddress);
}
public class Nethereum.RPC.Eth.DTOs.Comparers.EventLogBlockNumberTransactionIndexComparer : object {
    public sealed virtual int Compare(object x, object y);
}
public class Nethereum.RPC.Eth.DTOs.Comparers.EventLogBlockNumberTransactionIndexComparer`1 : object {
    public sealed virtual int Compare(TEventLog x, TEventLog y);
}
