public abstract class Nethereum.JsonRpc.Client.ClientBase : object {
    [CompilerGeneratedAttribute]
private static TimeSpan <ConnectionTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private RequestInterceptor <OverridingRequestInterceptor>k__BackingField;
    public static TimeSpan ConnectionTimeout { get; public set; }
    public RequestInterceptor OverridingRequestInterceptor { get; public set; }
    private static ClientBase();
    [CompilerGeneratedAttribute]
public static TimeSpan get_ConnectionTimeout();
    [CompilerGeneratedAttribute]
public static void set_ConnectionTimeout(TimeSpan value);
    [CompilerGeneratedAttribute]
public sealed virtual RequestInterceptor get_OverridingRequestInterceptor();
    [CompilerGeneratedAttribute]
public sealed virtual void set_OverridingRequestInterceptor(RequestInterceptor value);
    [AsyncStateMachineAttribute("Nethereum.JsonRpc.Client.ClientBase/<SendRequestAsync>d__8`1")]
public sealed virtual Task`1<T> SendRequestAsync(RpcRequest request, string route);
    [AsyncStateMachineAttribute("Nethereum.JsonRpc.Client.ClientBase/<SendBatchRequestAsync>d__9")]
public virtual Task`1<RpcRequestResponseBatch> SendBatchRequestAsync(RpcRequestResponseBatch rpcRequestResponseBatch);
    [AsyncStateMachineAttribute("Nethereum.JsonRpc.Client.ClientBase/<SendRequestAsync>d__10`1")]
public sealed virtual Task`1<T> SendRequestAsync(string method, string route, Object[] paramList);
    protected void HandleRpcError(RpcResponseMessage response, string reqMsg);
    [AsyncStateMachineAttribute("Nethereum.JsonRpc.Client.ClientBase/<SendInnerRequestAsync>d__12`1")]
private Task`1<T> SendInnerRequestAsync(RpcRequestMessage reqMsg, string route);
    protected virtual Task`1<T> SendInnerRequestAsync(RpcRequest request, string route);
    protected virtual Task`1<T> SendInnerRequestAsync(string method, string route, Object[] paramList);
    [AsyncStateMachineAttribute("Nethereum.JsonRpc.Client.ClientBase/<SendRequestAsync>d__15")]
public virtual Task SendRequestAsync(RpcRequest request, string route);
    protected abstract virtual Task`1<RpcResponseMessage> SendAsync(RpcRequestMessage rpcRequestMessage, string route);
    protected abstract virtual Task`1<RpcResponseMessage[]> SendAsync(RpcRequestMessage[] requests);
    [AsyncStateMachineAttribute("Nethereum.JsonRpc.Client.ClientBase/<SendRequestAsync>d__18")]
public virtual Task SendRequestAsync(string method, string route, Object[] paramList);
}
public class Nethereum.JsonRpc.Client.Configuration : object {
    [CompilerGeneratedAttribute]
private static object <DefaultRequestId>k__BackingField;
    public static object DefaultRequestId { get; public set; }
    private static Configuration();
    [CompilerGeneratedAttribute]
public static object get_DefaultRequestId();
    [CompilerGeneratedAttribute]
public static void set_DefaultRequestId(object value);
}
public static class Nethereum.JsonRpc.Client.DefaultJsonSerializerSettingsFactory : object {
    public static JsonSerializerSettings BuildDefaultJsonSerializerSettings();
}
public interface Nethereum.JsonRpc.Client.IBaseClient {
    public RequestInterceptor OverridingRequestInterceptor { get; public set; }
    public abstract virtual RequestInterceptor get_OverridingRequestInterceptor();
    public abstract virtual void set_OverridingRequestInterceptor(RequestInterceptor value);
    public abstract virtual Task SendRequestAsync(RpcRequest request, string route);
    public abstract virtual Task SendRequestAsync(string method, string route, Object[] paramList);
}
public interface Nethereum.JsonRpc.Client.IClient {
    public abstract virtual Task`1<RpcRequestResponseBatch> SendBatchRequestAsync(RpcRequestResponseBatch rpcRequestResponseBatch);
    public abstract virtual Task`1<T> SendRequestAsync(RpcRequest request, string route);
    public abstract virtual Task`1<T> SendRequestAsync(string method, string route, Object[] paramList);
}
public interface Nethereum.JsonRpc.Client.IClientRequestHeaderSupport {
    public Dictionary`2<string, string> RequestHeaders { get; public set; }
    public abstract virtual Dictionary`2<string, string> get_RequestHeaders();
    public abstract virtual void set_RequestHeaders(Dictionary`2<string, string> value);
}
public interface Nethereum.JsonRpc.Client.IRpcRequestHandler`1 {
    public string MethodName { get; }
    public IClient Client { get; }
    public abstract virtual string get_MethodName();
    public abstract virtual IClient get_Client();
    public abstract virtual TResponse DecodeResponse(RpcResponseMessage rpcResponseMessage);
}
public interface Nethereum.JsonRpc.Client.IRpcRequestResponse {
}
public interface Nethereum.JsonRpc.Client.IRpcRequestResponseBatchItem {
    public bool HasError { get; }
    public object RawResponse { get; }
    public RpcError RpcError { get; }
    public RpcRequestMessage RpcRequestMessage { get; }
    public abstract virtual bool get_HasError();
    public abstract virtual object get_RawResponse();
    public abstract virtual RpcError get_RpcError();
    public abstract virtual RpcRequestMessage get_RpcRequestMessage();
    public abstract virtual void DecodeResponse(RpcResponseMessage rpcResponse);
}
public class Nethereum.JsonRpc.Client.NullParamsFirstElementResolver : DefaultContractResolver {
    protected virtual IList`1<JsonProperty> CreateProperties(Type type, MemberSerialization memberSerialization);
}
public class Nethereum.JsonRpc.Client.NullParamsValueProvider : object {
    private PropertyInfo _memberInfo;
    public NullParamsValueProvider(PropertyInfo memberInfo);
    public sealed virtual object GetValue(object target);
    public sealed virtual void SetValue(object target, object value);
}
public abstract class Nethereum.JsonRpc.Client.RequestInterceptor : object {
    [AsyncStateMachineAttribute("Nethereum.JsonRpc.Client.RequestInterceptor/<InterceptSendRequestAsync>d__0`1")]
public virtual Task`1<object> InterceptSendRequestAsync(Func`3<RpcRequest, string, Task`1<T>> interceptedSendRequestAsync, RpcRequest request, string route);
    [AsyncStateMachineAttribute("Nethereum.JsonRpc.Client.RequestInterceptor/<InterceptSendRequestAsync>d__1")]
public virtual Task InterceptSendRequestAsync(Func`3<RpcRequest, string, Task> interceptedSendRequestAsync, RpcRequest request, string route);
    [AsyncStateMachineAttribute("Nethereum.JsonRpc.Client.RequestInterceptor/<InterceptSendRequestAsync>d__2`1")]
public virtual Task`1<object> InterceptSendRequestAsync(Func`4<string, string, Object[], Task`1<T>> interceptedSendRequestAsync, string method, string route, Object[] paramList);
    public virtual Task InterceptSendRequestAsync(Func`4<string, string, Object[], Task> interceptedSendRequestAsync, string method, string route, Object[] paramList);
}
public class Nethereum.JsonRpc.Client.RpcClientTimeoutException : Exception {
    public RpcClientTimeoutException(string message);
    public RpcClientTimeoutException(string message, Exception innerException);
}
public class Nethereum.JsonRpc.Client.RpcClientUnknownException : Exception {
    public RpcClientUnknownException(string message);
    public RpcClientUnknownException(string message, Exception innerException);
}
public class Nethereum.JsonRpc.Client.RpcError : object {
    [CompilerGeneratedAttribute]
private int <Code>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private JToken <Data>k__BackingField;
    public int Code { get; private set; }
    public string Message { get; private set; }
    public JToken Data { get; private set; }
    public RpcError(int code, string message, JToken data);
    [CompilerGeneratedAttribute]
public int get_Code();
    [CompilerGeneratedAttribute]
private void set_Code(int value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
private void set_Message(string value);
    [CompilerGeneratedAttribute]
public JToken get_Data();
    [CompilerGeneratedAttribute]
private void set_Data(JToken value);
}
public class Nethereum.JsonRpc.Client.RpcLogger : object {
    [CompilerGeneratedAttribute]
private ILogger <Log>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RequestJsonMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private RpcResponseMessage <ResponseMessage>k__BackingField;
    public ILogger Log { get; private set; }
    public string RequestJsonMessage { get; private set; }
    public RpcResponseMessage ResponseMessage { get; private set; }
    public RpcLogger(ILogger log);
    [CompilerGeneratedAttribute]
public ILogger get_Log();
    [CompilerGeneratedAttribute]
private void set_Log(ILogger value);
    [CompilerGeneratedAttribute]
public string get_RequestJsonMessage();
    [CompilerGeneratedAttribute]
private void set_RequestJsonMessage(string value);
    [CompilerGeneratedAttribute]
public RpcResponseMessage get_ResponseMessage();
    [CompilerGeneratedAttribute]
private void set_ResponseMessage(RpcResponseMessage value);
    public void LogRequest(string requestJsonMessage);
    private string GetRPCRequestLogMessage();
    private string GetRPCResponseLogMessage();
    private bool IsLogErrorEnabled();
    public void LogResponse(RpcResponseMessage responseMessage);
    public void LogException(Exception ex);
    private bool HasError(RpcResponseMessage message);
    private bool IsLogTraceEnabled();
}
[JsonObjectAttribute]
public class Nethereum.JsonRpc.Client.RpcMessages.RpcError : object {
    [CompilerGeneratedAttribute]
private int <Code>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private JToken <Data>k__BackingField;
    [JsonPropertyAttribute("code")]
public int Code { get; private set; }
    [JsonPropertyAttribute]
public string Message { get; private set; }
    [JsonPropertyAttribute("data")]
public JToken Data { get; private set; }
    [CompilerGeneratedAttribute]
public int get_Code();
    [CompilerGeneratedAttribute]
private void set_Code(int value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
private void set_Message(string value);
    [CompilerGeneratedAttribute]
public JToken get_Data();
    [CompilerGeneratedAttribute]
private void set_Data(JToken value);
}
public class Nethereum.JsonRpc.Client.RpcMessages.RpcParametersJsonConverter : JsonConverter {
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual bool CanConvert(Type objectType);
}
[JsonObjectAttribute]
public class Nethereum.JsonRpc.Client.RpcMessages.RpcRequestMessage : object {
    [CompilerGeneratedAttribute]
private object <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <JsonRpcVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Method>k__BackingField;
    [CompilerGeneratedAttribute]
private object <RawParameters>k__BackingField;
    [JsonPropertyAttribute("id")]
public object Id { get; public set; }
    [JsonPropertyAttribute]
public string JsonRpcVersion { get; private set; }
    [JsonPropertyAttribute]
public string Method { get; private set; }
    [JsonPropertyAttribute("params")]
[JsonConverterAttribute("Nethereum.JsonRpc.Client.RpcMessages.RpcParametersJsonConverter")]
public object RawParameters { get; private set; }
    public RpcRequestMessage(object id, string method, Object[] parameterList);
    public RpcRequestMessage(object id, string method, Dictionary`2<string, object> parameterMap);
    [CompilerGeneratedAttribute]
public object get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(object value);
    [CompilerGeneratedAttribute]
public string get_JsonRpcVersion();
    [CompilerGeneratedAttribute]
private void set_JsonRpcVersion(string value);
    [CompilerGeneratedAttribute]
public string get_Method();
    [CompilerGeneratedAttribute]
private void set_Method(string value);
    [CompilerGeneratedAttribute]
public object get_RawParameters();
    [CompilerGeneratedAttribute]
private void set_RawParameters(object value);
}
[ExtensionAttribute]
public static class Nethereum.JsonRpc.Client.RpcMessages.RpcResponseExtensions : object {
    [ExtensionAttribute]
public static T GetResult(RpcResponseMessage response, bool returnDefaultIfNull, JsonSerializerSettings settings);
    [ExtensionAttribute]
public static T GetStreamingResult(RpcStreamingResponseMessage response, bool returnDefaultIfNull, JsonSerializerSettings settings);
}
[JsonObjectAttribute]
public class Nethereum.JsonRpc.Client.RpcMessages.RpcResponseMessage : object {
    [CompilerGeneratedAttribute]
private object <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <JsonRpcVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private JToken <Result>k__BackingField;
    [CompilerGeneratedAttribute]
private RpcError <Error>k__BackingField;
    [JsonPropertyAttribute]
public object Id { get; private set; }
    [JsonPropertyAttribute]
public string JsonRpcVersion { get; private set; }
    [JsonPropertyAttribute]
public JToken Result { get; private set; }
    [JsonPropertyAttribute]
public RpcError Error { get; protected set; }
    [JsonIgnoreAttribute]
public bool HasError { get; }
    protected RpcResponseMessage(object id);
    public RpcResponseMessage(object id, RpcError error);
    public RpcResponseMessage(object id, JToken result);
    [CompilerGeneratedAttribute]
public object get_Id();
    [CompilerGeneratedAttribute]
private void set_Id(object value);
    [CompilerGeneratedAttribute]
public string get_JsonRpcVersion();
    [CompilerGeneratedAttribute]
private void set_JsonRpcVersion(string value);
    [CompilerGeneratedAttribute]
public JToken get_Result();
    [CompilerGeneratedAttribute]
private void set_Result(JToken value);
    [CompilerGeneratedAttribute]
public RpcError get_Error();
    [CompilerGeneratedAttribute]
protected void set_Error(RpcError value);
    public bool get_HasError();
}
[JsonObjectAttribute]
public class Nethereum.JsonRpc.Client.RpcMessages.RpcStreamingParams : object {
    [CompilerGeneratedAttribute]
private string <Subscription>k__BackingField;
    [CompilerGeneratedAttribute]
private JToken <Result>k__BackingField;
    [JsonPropertyAttribute]
public string Subscription { get; private set; }
    [JsonPropertyAttribute]
public JToken Result { get; private set; }
    [CompilerGeneratedAttribute]
public string get_Subscription();
    [CompilerGeneratedAttribute]
private void set_Subscription(string value);
    [CompilerGeneratedAttribute]
public JToken get_Result();
    [CompilerGeneratedAttribute]
private void set_Result(JToken value);
}
[JsonObjectAttribute]
public class Nethereum.JsonRpc.Client.RpcMessages.RpcStreamingResponseMessage : RpcResponseMessage {
    [CompilerGeneratedAttribute]
private string <Method>k__BackingField;
    [CompilerGeneratedAttribute]
private RpcStreamingParams <Params>k__BackingField;
    [JsonPropertyAttribute]
public string Method { get; private set; }
    [JsonPropertyAttribute]
public RpcStreamingParams Params { get; private set; }
    public RpcStreamingResponseMessage(RpcError error);
    public RpcStreamingResponseMessage(string method, RpcStreamingParams params);
    [CompilerGeneratedAttribute]
public string get_Method();
    [CompilerGeneratedAttribute]
private void set_Method(string value);
    [CompilerGeneratedAttribute]
public RpcStreamingParams get_Params();
    [CompilerGeneratedAttribute]
private void set_Params(RpcStreamingParams value);
}
public class Nethereum.JsonRpc.Client.RpcRequest : object {
    [CompilerGeneratedAttribute]
private object <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Method>k__BackingField;
    [CompilerGeneratedAttribute]
private Object[] <RawParameters>k__BackingField;
    public object Id { get; public set; }
    public string Method { get; private set; }
    public Object[] RawParameters { get; private set; }
    public RpcRequest(object id, string method, Object[] parameterList);
    [CompilerGeneratedAttribute]
public object get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(object value);
    [CompilerGeneratedAttribute]
public string get_Method();
    [CompilerGeneratedAttribute]
private void set_Method(string value);
    [CompilerGeneratedAttribute]
public Object[] get_RawParameters();
    [CompilerGeneratedAttribute]
private void set_RawParameters(Object[] value);
}
public class Nethereum.JsonRpc.Client.RpcRequestBuilder : object {
    [CompilerGeneratedAttribute]
private string <MethodName>k__BackingField;
    public string MethodName { get; }
    public RpcRequestBuilder(string methodName);
    [CompilerGeneratedAttribute]
public string get_MethodName();
    public virtual RpcRequest BuildRequest(object id, Object[] paramList);
    public virtual RpcRequest BuildRequest(object id);
}
public class Nethereum.JsonRpc.Client.RpcRequestResponseBatch : object {
    [CompilerGeneratedAttribute]
private List`1<IRpcRequestResponseBatchItem> <BatchItems>k__BackingField;
    public List`1<IRpcRequestResponseBatchItem> BatchItems { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<IRpcRequestResponseBatchItem> get_BatchItems();
    [CompilerGeneratedAttribute]
public void set_BatchItems(List`1<IRpcRequestResponseBatchItem> value);
    public RpcRequestMessage[] GetRpcRequests();
    public void UpdateBatchItemResponses(IEnumerable`1<RpcResponseMessage> responses);
}
public class Nethereum.JsonRpc.Client.RpcRequestResponseBatchItem`2 : object {
    [CompilerGeneratedAttribute]
private TRequestHandler <RequestHandler>k__BackingField;
    [CompilerGeneratedAttribute]
private RpcRequestMessage <RpcRequestMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private TResponse <Response>k__BackingField;
    [CompilerGeneratedAttribute]
private object <RawResponse>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasError>k__BackingField;
    [CompilerGeneratedAttribute]
private RpcError <RpcError>k__BackingField;
    public TRequestHandler RequestHandler { get; private set; }
    public RpcRequestMessage RpcRequestMessage { get; private set; }
    public TResponse Response { get; private set; }
    public object RawResponse { get; private set; }
    public bool HasError { get; private set; }
    public RpcError RpcError { get; private set; }
    public RpcRequestResponseBatchItem`2(TRequestHandler requestHandler, RpcRequest rpcRequest);
    [CompilerGeneratedAttribute]
public TRequestHandler get_RequestHandler();
    [CompilerGeneratedAttribute]
private void set_RequestHandler(TRequestHandler value);
    [CompilerGeneratedAttribute]
public sealed virtual RpcRequestMessage get_RpcRequestMessage();
    [CompilerGeneratedAttribute]
private void set_RpcRequestMessage(RpcRequestMessage value);
    [CompilerGeneratedAttribute]
public TResponse get_Response();
    [CompilerGeneratedAttribute]
private void set_Response(TResponse value);
    [CompilerGeneratedAttribute]
public sealed virtual object get_RawResponse();
    [CompilerGeneratedAttribute]
private void set_RawResponse(object value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_HasError();
    [CompilerGeneratedAttribute]
private void set_HasError(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual RpcError get_RpcError();
    [CompilerGeneratedAttribute]
private void set_RpcError(RpcError value);
    public sealed virtual void DecodeResponse(RpcResponseMessage rpcResponse);
}
public class Nethereum.JsonRpc.Client.RpcRequestResponseHandler`1 : object {
    [CompilerGeneratedAttribute]
private RpcRequestBuilder <RpcRequestBuilder>k__BackingField;
    [CompilerGeneratedAttribute]
private IClient <Client>k__BackingField;
    protected RpcRequestBuilder RpcRequestBuilder { get; }
    public string MethodName { get; }
    public IClient Client { get; }
    public RpcRequestResponseHandler`1(IClient client, string methodName);
    [CompilerGeneratedAttribute]
protected RpcRequestBuilder get_RpcRequestBuilder();
    public sealed virtual string get_MethodName();
    [CompilerGeneratedAttribute]
public sealed virtual IClient get_Client();
    protected Task`1<TResponse> SendRequestAsync(object id, Object[] paramList);
    public RpcRequest BuildRequest(object id, Object[] paramList);
    public virtual TResponse DecodeResponse(RpcResponseMessage rpcResponseMessage);
}
public class Nethereum.JsonRpc.Client.RpcRequestResponseHandlerNoParam`1 : object {
    [CompilerGeneratedAttribute]
private RpcRequestBuilder <RpcRequestBuilder>k__BackingField;
    [CompilerGeneratedAttribute]
private IClient <Client>k__BackingField;
    protected RpcRequestBuilder RpcRequestBuilder { get; }
    public string MethodName { get; }
    public IClient Client { get; }
    public RpcRequestResponseHandlerNoParam`1(IClient client, string methodName);
    [CompilerGeneratedAttribute]
protected RpcRequestBuilder get_RpcRequestBuilder();
    public sealed virtual string get_MethodName();
    [CompilerGeneratedAttribute]
public sealed virtual IClient get_Client();
    public virtual Task`1<TResponse> SendRequestAsync(object id);
    public RpcRequestResponseBatchItem`2<RpcRequestResponseHandlerNoParam`1<TResponse>, TResponse> CreateBatchItem(object id);
    public RpcRequest BuildRequest(object id);
    public virtual TResponse DecodeResponse(RpcResponseMessage rpcResponseMessage);
}
public class Nethereum.JsonRpc.Client.RpcResponseBatchException : Exception {
    [CompilerGeneratedAttribute]
private RpcError[] <RpcErrors>k__BackingField;
    public RpcError[] RpcErrors { get; }
    public RpcResponseBatchException(RpcError[] rpcErrors);
    [CompilerGeneratedAttribute]
public RpcError[] get_RpcErrors();
}
public class Nethereum.JsonRpc.Client.RpcResponseException : Exception {
    [CompilerGeneratedAttribute]
private RpcError <RpcError>k__BackingField;
    public RpcError RpcError { get; }
    public RpcResponseException(RpcError rpcError);
    [CompilerGeneratedAttribute]
public RpcError get_RpcError();
}
public class Nethereum.JsonRpc.Client.RpcResponseFormatException : Exception {
    public RpcResponseFormatException(string message, FormatException innerException);
}
public interface Nethereum.JsonRpc.Client.Streaming.IRpcStreamingResponseHandler {
    public abstract virtual void HandleResponse(RpcStreamingResponseMessage rpcStreamingResponse);
    public abstract virtual void HandleClientError(Exception ex);
    public abstract virtual void HandleClientDisconnection();
}
public interface Nethereum.JsonRpc.Client.Streaming.IRpcStreamingSubscriptionHandler {
    public string SubscriptionId { get; }
    public SubscriptionState SubscriptionState { get; }
    public abstract virtual string get_SubscriptionId();
    public abstract virtual SubscriptionState get_SubscriptionState();
}
public interface Nethereum.JsonRpc.Client.Streaming.IStreamingClient {
    public bool IsStarted { get; }
    public abstract virtual bool get_IsStarted();
    public abstract virtual bool AddSubscription(string subscriptionId, IRpcStreamingResponseHandler handler);
    public abstract virtual bool RemoveSubscription(string subscriptionId);
    public abstract virtual Task SendRequestAsync(RpcRequest request, IRpcStreamingResponseHandler requestResponseHandler, string route);
    public abstract virtual Task StartAsync();
    public abstract virtual Task StopAsync();
}
public interface Nethereum.JsonRpc.Client.Streaming.IUnsubscribeSubscriptionRpcRequestBuilder {
    public abstract virtual RpcRequest BuildRequest(string subscriptionId, object requestId);
}
public class Nethereum.JsonRpc.Client.Streaming.RpcStreamingSubscriptionEventResponseHandler`1 : RpcStreamingSubscriptionHandler`1<TSubscriptionDataResponse> {
    [CompilerGeneratedAttribute]
private EventHandler`1<StreamingEventArgs`1<string>> SubscribeResponse;
    [CompilerGeneratedAttribute]
private EventHandler`1<StreamingEventArgs`1<bool>> UnsubscribeResponse;
    [CompilerGeneratedAttribute]
private EventHandler`1<StreamingEventArgs`1<TSubscriptionDataResponse>> SubscriptionDataResponse;
    protected RpcStreamingSubscriptionEventResponseHandler`1(IStreamingClient streamingClient, IUnsubscribeSubscriptionRpcRequestBuilder unsubscribeSubscriptionRpcRequestBuilder);
    [CompilerGeneratedAttribute]
public void add_SubscribeResponse(EventHandler`1<StreamingEventArgs`1<string>> value);
    [CompilerGeneratedAttribute]
public void remove_SubscribeResponse(EventHandler`1<StreamingEventArgs`1<string>> value);
    [CompilerGeneratedAttribute]
public void add_UnsubscribeResponse(EventHandler`1<StreamingEventArgs`1<bool>> value);
    [CompilerGeneratedAttribute]
public void remove_UnsubscribeResponse(EventHandler`1<StreamingEventArgs`1<bool>> value);
    [CompilerGeneratedAttribute]
public void add_SubscriptionDataResponse(EventHandler`1<StreamingEventArgs`1<TSubscriptionDataResponse>> value);
    [CompilerGeneratedAttribute]
public void remove_SubscriptionDataResponse(EventHandler`1<StreamingEventArgs`1<TSubscriptionDataResponse>> value);
    protected virtual void HandleDataResponse(TSubscriptionDataResponse subscriptionDataResponse);
    protected virtual void HandleDataResponseError(RpcResponseException exception);
    protected virtual void HandleSubscribeResponse(string subscriptionId);
    protected virtual void HandleSubscribeResponseError(RpcResponseException exception);
    protected virtual void HandleUnsubscribeResponse(bool success);
    protected virtual void HandleUnsubscribeResponseError(RpcResponseException exception);
}
public abstract class Nethereum.JsonRpc.Client.Streaming.RpcStreamingSubscriptionHandler`1 : object {
    [CompilerGeneratedAttribute]
private IStreamingClient <StreamingClient>k__BackingField;
    [CompilerGeneratedAttribute]
private IUnsubscribeSubscriptionRpcRequestBuilder <UnsubscribeSubscriptionRpcRequestBuilder>k__BackingField;
    [CompilerGeneratedAttribute]
private object <SubscribeRequestId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UnsubscribeRequestId>k__BackingField;
    private object _lockingObject;
    [CompilerGeneratedAttribute]
private string <SubscriptionId>k__BackingField;
    [CompilerGeneratedAttribute]
private SubscriptionState <SubscriptionState>k__BackingField;
    protected IStreamingClient StreamingClient { get; protected set; }
    protected IUnsubscribeSubscriptionRpcRequestBuilder UnsubscribeSubscriptionRpcRequestBuilder { get; protected set; }
    protected object SubscribeRequestId { get; protected set; }
    protected string UnsubscribeRequestId { get; protected set; }
    public string SubscriptionId { get; protected set; }
    public SubscriptionState SubscriptionState { get; protected set; }
    protected RpcStreamingSubscriptionHandler`1(IStreamingClient streamingClient, IUnsubscribeSubscriptionRpcRequestBuilder unsubscribeSubscriptionRpcRequestBuilder);
    [CompilerGeneratedAttribute]
protected IStreamingClient get_StreamingClient();
    [CompilerGeneratedAttribute]
protected void set_StreamingClient(IStreamingClient value);
    [CompilerGeneratedAttribute]
protected IUnsubscribeSubscriptionRpcRequestBuilder get_UnsubscribeSubscriptionRpcRequestBuilder();
    [CompilerGeneratedAttribute]
protected void set_UnsubscribeSubscriptionRpcRequestBuilder(IUnsubscribeSubscriptionRpcRequestBuilder value);
    [CompilerGeneratedAttribute]
protected object get_SubscribeRequestId();
    [CompilerGeneratedAttribute]
protected void set_SubscribeRequestId(object value);
    [CompilerGeneratedAttribute]
protected string get_UnsubscribeRequestId();
    [CompilerGeneratedAttribute]
protected void set_UnsubscribeRequestId(string value);
    protected Task SubscribeAsync(RpcRequest rpcRequest);
    public Task UnsubscribeAsync();
    protected RpcResponseException GetException(RpcStreamingResponseMessage rpcStreamingResponse);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SubscriptionId();
    [CompilerGeneratedAttribute]
protected void set_SubscriptionId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual SubscriptionState get_SubscriptionState();
    [CompilerGeneratedAttribute]
protected void set_SubscriptionState(SubscriptionState value);
    protected abstract virtual void HandleSubscribeResponseError(RpcResponseException exception);
    protected abstract virtual void HandleUnsubscribeResponseError(RpcResponseException exception);
    protected abstract virtual void HandleDataResponseError(RpcResponseException exception);
    protected abstract virtual void HandleSubscribeResponse(string subscriptionId);
    protected abstract virtual void HandleUnsubscribeResponse(bool success);
    protected abstract virtual void HandleDataResponse(TSubscriptionDataResponse subscriptionDataResponse);
    public sealed virtual void HandleClientError(Exception ex);
    public sealed virtual void HandleClientDisconnection();
    public sealed virtual void HandleResponse(RpcStreamingResponseMessage rpcStreamingResponse);
}
public class Nethereum.JsonRpc.Client.Streaming.StreamingEventArgs`1 : EventArgs {
    [CompilerGeneratedAttribute]
private TEntity <Response>k__BackingField;
    [CompilerGeneratedAttribute]
private RpcResponseException <Exception>k__BackingField;
    public TEntity Response { get; private set; }
    public RpcResponseException Exception { get; private set; }
    public StreamingEventArgs`1(TEntity entity, RpcResponseException exception);
    public StreamingEventArgs`1(RpcResponseException exception);
    [CompilerGeneratedAttribute]
public TEntity get_Response();
    [CompilerGeneratedAttribute]
private void set_Response(TEntity value);
    [CompilerGeneratedAttribute]
public RpcResponseException get_Exception();
    [CompilerGeneratedAttribute]
private void set_Exception(RpcResponseException value);
}
public enum Nethereum.JsonRpc.Client.Streaming.SubscriptionState : Enum {
    public int value__;
    public static SubscriptionState Idle;
    public static SubscriptionState Subscribing;
    public static SubscriptionState Subscribed;
    public static SubscriptionState Unsubscribing;
    public static SubscriptionState Unsubscribed;
}
[ExtensionAttribute]
public static class Nethereum.JsonRpc.Client.UserAuthentication : object {
    public static string GetBasicAuthentication(string userName, string password);
    public static BasicAuthenticationUserInfo GetBasicAuthenticationUserInfoFromUri(Uri uri);
    [ExtensionAttribute]
public static void SetBasicAuthenticationHeaderFromUri(IClientRequestHeaderSupport client, Uri uri);
    [ExtensionAttribute]
public static void SetBasicAuthenticationHeader(IClientRequestHeaderSupport client, string userName, string password);
}
public abstract class Nethereum.JsonRpc.WebSocketStreamingClient.RpcStreamingRequestResponseHandler`1 : object {
    [CompilerGeneratedAttribute]
private IStreamingClient <StreamingClient>k__BackingField;
    protected IStreamingClient StreamingClient { get; }
    protected RpcStreamingRequestResponseHandler`1(IStreamingClient streamingClient);
    [CompilerGeneratedAttribute]
protected IStreamingClient get_StreamingClient();
    protected abstract virtual void HandleResponse(TResponse subscriptionDataResponse);
    protected abstract virtual void HandleResponseError(RpcResponseException exception);
    protected Task SendRequestAsync(RpcRequest request);
    public sealed virtual void HandleResponse(RpcStreamingResponseMessage rpcStreamingResponse);
    public sealed virtual void HandleClientError(Exception ex);
    public sealed virtual void HandleClientDisconnection();
}
public class Nethereum.JsonRpc.WebSocketStreamingClient.RpcStreamingResponseEventHandler`1 : RpcStreamingRequestResponseHandler`1<TResponse> {
    [CompilerGeneratedAttribute]
private EventHandler`1<StreamingEventArgs`1<TResponse>> Response;
    protected RpcStreamingResponseEventHandler`1(IStreamingClient streamingClient);
    [CompilerGeneratedAttribute]
public void add_Response(EventHandler`1<StreamingEventArgs`1<TResponse>> value);
    [CompilerGeneratedAttribute]
public void remove_Response(EventHandler`1<StreamingEventArgs`1<TResponse>> value);
    protected virtual void HandleResponse(TResponse subscriptionDataResponse);
    protected virtual void HandleResponseError(RpcResponseException exception);
}
