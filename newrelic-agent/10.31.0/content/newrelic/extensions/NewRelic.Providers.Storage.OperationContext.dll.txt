[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
public class NewRelic.Providers.Storage.OperationContext.OperationContextExtension : object {
    private IDictionary _items;
    public IDictionary Items { get; }
    public static OperationContextExtension Current { get; }
    public static bool CanProvide { get; }
    public IDictionary get_Items();
    public static OperationContextExtension get_Current();
    public static bool get_CanProvide();
    public sealed virtual void Attach(OperationContext owner);
    public sealed virtual void Detach(OperationContext owner);
}
public class NewRelic.Providers.Storage.OperationContext.OperationContextStorage`1 : object {
    private string _key;
    private byte NewRelic.Agent.Extensions.Providers.IContextStorage<T>.Priority { get; }
    private bool NewRelic.Agent.Extensions.Providers.IContextStorage<T>.CanProvide { get; }
    public OperationContextStorage`1(string key);
    private sealed virtual override byte NewRelic.Agent.Extensions.Providers.IContextStorage<T>.get_Priority();
    private sealed virtual override bool NewRelic.Agent.Extensions.Providers.IContextStorage<T>.get_CanProvide();
    private sealed virtual override T NewRelic.Agent.Extensions.Providers.IContextStorage<T>.GetData();
    private sealed virtual override void NewRelic.Agent.Extensions.Providers.IContextStorage<T>.SetData(T value);
    private sealed virtual override void NewRelic.Agent.Extensions.Providers.IContextStorage<T>.Clear();
}
public class NewRelic.Providers.Storage.OperationContext.OperationContextStorageFactory : object {
    public bool IsAsyncStorage { get; }
    private bool NewRelic.Agent.Extensions.Providers.IContextStorageFactory.IsValid { get; }
    private ContextStorageType NewRelic.Agent.Extensions.Providers.IContextStorageFactory.Type { get; }
    public sealed virtual bool get_IsAsyncStorage();
    private sealed virtual override bool NewRelic.Agent.Extensions.Providers.IContextStorageFactory.get_IsValid();
    private sealed virtual override ContextStorageType NewRelic.Agent.Extensions.Providers.IContextStorageFactory.get_Type();
    private sealed virtual override IContextStorage`1<T> NewRelic.Agent.Extensions.Providers.IContextStorageFactory.CreateContext(string key);
    private void AccessOperationContext();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
