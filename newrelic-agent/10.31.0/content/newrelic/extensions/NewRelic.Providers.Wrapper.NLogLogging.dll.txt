[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
public class NewRelic.Providers.Wrapper.NLogLogging.NLogWrapper : object {
    private static Action`2<object, string> _setFormattedMessage;
    private static Func`2<object, object> _getLevel;
    private static Func`2<object, string> _getFormattedMessage;
    private static Func`2<object, string> _messageGetter;
    private static Func`2<object, DateTime> _getTimestamp;
    private static Func`2<object, Exception> _getLogException;
    private static Func`2<object, IDictionary`2<object, object>> _getPropertiesDictionary;
    private static Func`1<IEnumerable`1<KeyValuePair`2<string, object>>> _getScopeData;
    private static string WrapperName;
    private static string FormattedMessage45Plus;
    private static string FormattedMessagePre45;
    public bool IsTransactionRequired { get; }
    public sealed virtual bool get_IsTransactionRequired();
    public sealed virtual CanWrapResponse CanWrap(InstrumentedMethodInfo methodInfo);
    public sealed virtual AfterWrappedMethodDelegate BeforeWrappedMethod(InstrumentedMethodCall instrumentedMethodCall, IAgent agent, ITransaction transaction);
    private void RecordLogMessage(object logEvent, Type logEventType, IAgent agent);
    private void DecorateLogMessage(object logEvent, Type logEventType, IAgent agent);
    private Func`2<object, string> GetFormattedMessageFunc(Type logEventType);
    private Dictionary`2<string, object> GetContextData(object logEvent);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
