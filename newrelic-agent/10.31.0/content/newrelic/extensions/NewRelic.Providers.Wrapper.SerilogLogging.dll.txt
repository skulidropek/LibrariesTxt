[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
public class NewRelic.Providers.Wrapper.SerilogLogging.NewRelicSerilogSink : object {
    private IAgent _agent;
    public NewRelicSerilogSink(IAgent agent);
    public sealed virtual void Emit(LogEvent logEvent);
    private void RecordLogMessage(LogEvent logEvent);
}
public class NewRelic.Providers.Wrapper.SerilogLogging.SerilogCreateLoggerWrapper : object {
    private static string WrapperName;
    public bool IsTransactionRequired { get; }
    public sealed virtual bool get_IsTransactionRequired();
    public sealed virtual CanWrapResponse CanWrap(InstrumentedMethodInfo methodInfo);
    public sealed virtual AfterWrappedMethodDelegate BeforeWrappedMethod(InstrumentedMethodCall instrumentedMethodCall, IAgent agent, ITransaction transaction);
}
public class NewRelic.Providers.Wrapper.SerilogLogging.SerilogDispatchWrapper : object {
    private static string AssemblyName;
    private static string TypeName;
    private static string NrLinkingString;
    private static Func`2<object, IDictionary> _getProperties;
    private static Func`2<string, object> _createScalarValue;
    private static string WrapperName;
    public bool IsTransactionRequired { get; }
    public sealed virtual bool get_IsTransactionRequired();
    public sealed virtual CanWrapResponse CanWrap(InstrumentedMethodInfo methodInfo);
    public sealed virtual AfterWrappedMethodDelegate BeforeWrappedMethod(InstrumentedMethodCall instrumentedMethodCall, IAgent agent, ITransaction transaction);
    private void DecorateLogMessage(object logEvent, IAgent agent);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
