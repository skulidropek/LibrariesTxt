[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
internal class NewRelic.Providers.Wrapper.Owin.OwinStartupMiddleware : OwinMiddleware {
    private OwinMiddleware _next;
    private IAgent _agent;
    public OwinStartupMiddleware(OwinMiddleware next, IAgent agent);
    [AsyncStateMachineAttribute("NewRelic.Providers.Wrapper.Owin.OwinStartupMiddleware/<Invoke>d__3")]
public virtual Task Invoke(IOwinContext context);
    private ITransaction SetupTransaction(IOwinRequest request);
    private string ConvertQueryStringValueToSingleValue(String[] values);
    private void ProcessHeaders(IOwinContext owinContext);
    private IEnumerable`1<string> GetHeaderValue(IOwinContext owinContext, string key);
    private ISegment SetupSegment(ITransaction transaction, IOwinContext owinContext);
    private string GetHeaderValue(IHeaderDictionary headers, string key);
    private void EndTransaction(ISegment segment, ITransaction transaction, IOwinContext owinContext, Exception appException);
    private void TryWriteResponseHeaders(IOwinContext owinContext, ITransaction transaction);
}
public class NewRelic.Providers.Wrapper.Owin.ResolveAppWrapper : object {
    private static int _isNewRelicMiddlewareAdded;
    private Func`2<object, object> _getBuilder;
    public bool IsTransactionRequired { get; }
    public Func`2<object, object> GetBuilder { get; }
    public sealed virtual bool get_IsTransactionRequired();
    public Func`2<object, object> get_GetBuilder();
    public sealed virtual CanWrapResponse CanWrap(InstrumentedMethodInfo methodInfo);
    public sealed virtual AfterWrappedMethodDelegate BeforeWrappedMethod(InstrumentedMethodCall instrumentedMethodCall, IAgent agent, ITransaction transaction);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
