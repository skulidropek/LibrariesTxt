[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
public class NewRelic.Providers.Wrapper.CosmosDb.ExecuteItemQueryAsyncWrapper : object {
    private static string AssemblyName;
    private static string ClientContextCoreFullTypeName;
    private static string CosmosClientFullTypeName;
    private static string CosmosQueryClientCoreFullTypeName;
    private static string SqlQuerySpecFullTypeName;
    private Func`2<object, object> _getClient;
    private Func`2<object, Uri> _endpointGetter;
    private Func`2<object, object> _getClientContextGetter;
    private Func`2<object, string> _queryGetter;
    private static string WrapperName;
    public bool IsTransactionRequired { get; }
    public sealed virtual bool get_IsTransactionRequired();
    public sealed virtual CanWrapResponse CanWrap(InstrumentedMethodInfo methodInfo);
    public sealed virtual AfterWrappedMethodDelegate BeforeWrappedMethod(InstrumentedMethodCall instrumentedMethodCall, IAgent agent, ITransaction transaction);
}
public class NewRelic.Providers.Wrapper.CosmosDb.RequestInvokerHandlerWrapper : object {
    private static string AssemblyName;
    private static string RequestInvokerHandlerFullTypeName;
    private static string CosmosClientFullTypeName;
    private Func`2<object, object> _getClient;
    private Func`2<object, Uri> _endpointGetter;
    private static string WrapperName;
    public bool IsTransactionRequired { get; }
    public sealed virtual bool get_IsTransactionRequired();
    public sealed virtual CanWrapResponse CanWrap(InstrumentedMethodInfo methodInfo);
    public sealed virtual AfterWrappedMethodDelegate BeforeWrappedMethod(InstrumentedMethodCall instrumentedMethodCall, IAgent agent, ITransaction transaction);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
