[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
public class NewRelic.Providers.Wrapper.StackExchangeRedis2Plus.ConnectWrapperV2 : object {
    private static string WrapperName;
    private static object _lock;
    public bool IsTransactionRequired { get; }
    private static ConnectWrapperV2();
    public sealed virtual bool get_IsTransactionRequired();
    public sealed virtual CanWrapResponse CanWrap(InstrumentedMethodInfo methodInfo);
    public sealed virtual AfterWrappedMethodDelegate BeforeWrappedMethod(InstrumentedMethodCall instrumentedMethodCall, IAgent agent, ITransaction transaction);
}
public class NewRelic.Providers.Wrapper.StackExchangeRedis2Plus.SessionCache : object {
    private static string SessionCacheCleanupSupportabilityMetricName;
    private EventWaitHandle _stopHandle;
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ConcurrentDictionary`2<ISegment, ValueTuple`2<WeakReference`1<ITransaction>, ProfilingSession>> _sessionCache;
    private IAgent _agent;
    private int _invocationTargetHashCode;
    public SessionCache(IAgent agent, int invocationTargetHashCode);
    public sealed virtual void Harvest(ISegment hostSegment);
    private void CleanUp();
    private ConnectionInfo GetConnectionInfo(EndPoint endpoint);
    public Func`1<ProfilingSession> GetProfilingSession();
    public sealed virtual void Dispose();
    [CompilerGeneratedAttribute]
private ProfilingSession <GetProfilingSession>b__9_0();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
