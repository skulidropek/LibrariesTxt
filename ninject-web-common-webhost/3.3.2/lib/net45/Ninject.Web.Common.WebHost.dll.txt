public class Ninject.Web.Common.HttpApplicationInitializationHttpModule : DisposableObject {
    private Func`1<IKernel> lazyKernel;
    public HttpApplicationInitializationHttpModule(Func`1<IKernel> lazyKernel);
    public sealed virtual void Init(HttpApplication context);
}
public abstract class Ninject.Web.Common.WebHost.NinjectHttpApplication : HttpApplication {
    private OnePerRequestHttpModule onePerRequestHttpModule;
    private IBootstrapper bootstrapper;
    [ObsoleteAttribute("Do not use Ninject as Service Locator")]
public IKernel Kernel { get; }
    public sealed virtual IKernel get_Kernel();
    public virtual void Init();
    public void Application_Start();
    public void Application_End();
    protected abstract virtual IKernel CreateKernel();
    protected virtual void OnApplicationStarted();
    protected virtual void OnApplicationStopped();
}
public class Ninject.Web.Common.WebHost.NinjectHttpModule : object {
    private IList`1<IHttpModule> httpModules;
    public sealed virtual void Init(HttpApplication context);
    public sealed virtual void Dispose();
}
public class Ninject.Web.Common.WebHost.OnePerRequestHttpModule : GlobalKernelRegistration {
    [CompilerGeneratedAttribute]
private bool <ReleaseScopeAtRequestEnd>k__BackingField;
    public bool ReleaseScopeAtRequestEnd { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_ReleaseScopeAtRequestEnd();
    [CompilerGeneratedAttribute]
public void set_ReleaseScopeAtRequestEnd(bool value);
    public sealed virtual void Init(HttpApplication application);
    public sealed virtual void Dispose();
    public void DeactivateInstancesForCurrentHttpRequest();
    [CompilerGeneratedAttribute]
private void <Init>b__5_0(object o, EventArgs e);
}
public class Ninject.Web.Common.WebHost.WebHostNinjectModule : GlobalKernelRegistrationModule`1<OnePerRequestHttpModule> {
    public virtual void Load();
}
