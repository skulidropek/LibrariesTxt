[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("4")]
[BaseTypeRequiredAttribute("System.Attribute")]
internal class JetBrains.Annotations.BaseTypeRequiredAttribute : Attribute {
    [CompilerGeneratedAttribute]
private Type <BaseType>k__BackingField;
    public Type BaseType { get; }
    public BaseTypeRequiredAttribute(Type baseType);
    [CompilerGeneratedAttribute]
public Type get_BaseType();
}
[AttributeUsageAttribute("1036")]
internal class JetBrains.Annotations.CannotApplyEqualityOperatorAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("64")]
internal class JetBrains.Annotations.ContractAnnotationAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Contract>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ForceFullStates>k__BackingField;
    public string Contract { get; }
    public bool ForceFullStates { get; }
    public ContractAnnotationAttribute(string contract);
    public ContractAnnotationAttribute(string contract, bool forceFullStates);
    [CompilerGeneratedAttribute]
public string get_Contract();
    [CompilerGeneratedAttribute]
public bool get_ForceFullStates();
}
[FlagsAttribute]
internal enum JetBrains.Annotations.ImplicitUseKindFlags : Enum {
    public int value__;
    public static ImplicitUseKindFlags Default;
    public static ImplicitUseKindFlags Access;
    public static ImplicitUseKindFlags Assign;
    public static ImplicitUseKindFlags InstantiatedWithFixedConstructorSignature;
    public static ImplicitUseKindFlags InstantiatedNoFixedConstructorSignature;
}
[FlagsAttribute]
internal enum JetBrains.Annotations.ImplicitUseTargetFlags : Enum {
    public int value__;
    public static ImplicitUseTargetFlags Default;
    public static ImplicitUseTargetFlags Itself;
    public static ImplicitUseTargetFlags Members;
    public static ImplicitUseTargetFlags WithInheritors;
    public static ImplicitUseTargetFlags WithMembers;
}
[AttributeUsageAttribute("2048")]
internal class JetBrains.Annotations.InvokerParameterNameAttribute : Attribute {
}
[AttributeUsageAttribute("32767")]
internal class JetBrains.Annotations.LocalizationRequiredAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <Required>k__BackingField;
    public bool Required { get; }
    public LocalizationRequiredAttribute(bool required);
    [CompilerGeneratedAttribute]
public bool get_Required();
}
[AttributeUsageAttribute("18436")]
internal class JetBrains.Annotations.MeansImplicitUseAttribute : Attribute {
    [CompilerGeneratedAttribute]
private ImplicitUseKindFlags <UseKindFlags>k__BackingField;
    [CompilerGeneratedAttribute]
private ImplicitUseTargetFlags <TargetFlags>k__BackingField;
    [UsedImplicitlyAttribute]
public ImplicitUseKindFlags UseKindFlags { get; }
    [UsedImplicitlyAttribute]
public ImplicitUseTargetFlags TargetFlags { get; }
    public MeansImplicitUseAttribute(ImplicitUseKindFlags useKindFlags);
    public MeansImplicitUseAttribute(ImplicitUseTargetFlags targetFlags);
    public MeansImplicitUseAttribute(ImplicitUseKindFlags useKindFlags, ImplicitUseTargetFlags targetFlags);
    [CompilerGeneratedAttribute]
public ImplicitUseKindFlags get_UseKindFlags();
    [CompilerGeneratedAttribute]
public ImplicitUseTargetFlags get_TargetFlags();
}
[AttributeUsageAttribute("2048")]
internal class JetBrains.Annotations.NoEnumerationAttribute : Attribute {
}
[AttributeUsageAttribute("6592")]
internal class JetBrains.Annotations.NonNegativeValueAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
internal class JetBrains.Annotations.RegexPatternAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("4320")]
internal class JetBrains.Annotations.StringFormatMethodAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <FormatParameterName>k__BackingField;
    public string FormatParameterName { get; }
    public StringFormatMethodAttribute(string formatParameterName);
    [CompilerGeneratedAttribute]
public string get_FormatParameterName();
}
[AttributeUsageAttribute("32767")]
internal class JetBrains.Annotations.UsedImplicitlyAttribute : Attribute {
    [CompilerGeneratedAttribute]
private ImplicitUseKindFlags <UseKindFlags>k__BackingField;
    [CompilerGeneratedAttribute]
private ImplicitUseTargetFlags <TargetFlags>k__BackingField;
    public ImplicitUseKindFlags UseKindFlags { get; }
    public ImplicitUseTargetFlags TargetFlags { get; }
    public UsedImplicitlyAttribute(ImplicitUseKindFlags useKindFlags);
    public UsedImplicitlyAttribute(ImplicitUseTargetFlags targetFlags);
    public UsedImplicitlyAttribute(ImplicitUseKindFlags useKindFlags, ImplicitUseTargetFlags targetFlags);
    [CompilerGeneratedAttribute]
public ImplicitUseKindFlags get_UseKindFlags();
    [CompilerGeneratedAttribute]
public ImplicitUseTargetFlags get_TargetFlags();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("2432")]
internal class JetBrains.Annotations.ValueProviderAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public string Name { get; }
    public ValueProviderAttribute(string name);
    [CompilerGeneratedAttribute]
public string get_Name();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("6592")]
internal class JetBrains.Annotations.ValueRangeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private object <From>k__BackingField;
    [CompilerGeneratedAttribute]
private object <To>k__BackingField;
    public object From { get; }
    public object To { get; }
    public ValueRangeAttribute(long from, long to);
    public ValueRangeAttribute(ulong from, ulong to);
    public ValueRangeAttribute(long value);
    public ValueRangeAttribute(ulong value);
    [CompilerGeneratedAttribute]
public object get_From();
    [CompilerGeneratedAttribute]
public object get_To();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Microsoft.EntityFrameworkCore.Internal.NonCapturingLazyInitializer : object {
    public static TValue EnsureInitialized(TValue& target, TParam param, Func`2<TParam, TValue> valueFactory);
    public static TValue EnsureInitialized(TValue& target, TParam1 param1, TParam2 param2, Func`3<TParam1, TParam2, TValue> valueFactory);
    public static TValue EnsureInitialized(TValue& target, TParam1 param1, TParam2 param2, TParam3 param3, Func`4<TParam1, TParam2, TParam3, TValue> valueFactory);
    public static TValue EnsureInitialized(TValue& target, Boolean& initialized, TParam param, Func`2<TParam, TValue> valueFactory);
    public static TValue EnsureInitialized(TValue& target, TValue value);
    public static TValue EnsureInitialized(TValue& target, TParam param, Action`1<TParam> valueFactory);
}
[ExtensionAttribute]
public static class Microsoft.EntityFrameworkCore.NpgsqlNodaTimeDbContextOptionsBuilderExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static NpgsqlDbContextOptionsBuilder UseNodaTime(NpgsqlDbContextOptionsBuilder optionsBuilder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.EntityFrameworkCore.NpgsqlNodaTimeDbFunctionsExtensions : object {
    [ExtensionAttribute]
public static Period Sum(DbFunctions _, IEnumerable`1<Period> input);
    [ExtensionAttribute]
public static Nullable`1<Duration> Sum(DbFunctions _, IEnumerable`1<Duration> input);
    [ExtensionAttribute]
public static Period Average(DbFunctions _, IEnumerable`1<Period> input);
    [ExtensionAttribute]
public static Nullable`1<Duration> Average(DbFunctions _, IEnumerable`1<Duration> input);
    [ExtensionAttribute]
public static int Distance(DbFunctions _, Instant a, Instant b);
    [ExtensionAttribute]
public static int Distance(DbFunctions _, ZonedDateTime a, ZonedDateTime b);
    [ExtensionAttribute]
public static int Distance(DbFunctions _, LocalDateTime a, LocalDateTime b);
    [ExtensionAttribute]
public static int Distance(DbFunctions _, LocalDate a, LocalDate b);
    [ExtensionAttribute]
public static Interval[] RangeAgg(DbFunctions _, IEnumerable`1<Interval> input);
    [ExtensionAttribute]
public static DateInterval[] RangeAgg(DbFunctions _, IEnumerable`1<DateInterval> input);
    [ExtensionAttribute]
public static Interval RangeIntersectAgg(DbFunctions _, IEnumerable`1<Interval> input);
    [ExtensionAttribute]
public static DateInterval RangeIntersectAgg(DbFunctions _, IEnumerable`1<DateInterval> input);
    [ExtensionAttribute]
public static Interval[] RangeIntersectAgg(DbFunctions _, IEnumerable`1<Interval[]> input);
    [ExtensionAttribute]
public static DateInterval[] RangeIntersectAgg(DbFunctions _, IEnumerable`1<DateInterval[]> input);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DebuggerStepThroughAttribute]
internal static class Microsoft.EntityFrameworkCore.Utilities.Check : object {
    [ContractAnnotationAttribute("value:null => halt")]
public static T NotNull(T value, string parameterName);
    [ContractAnnotationAttribute("value:null => halt")]
public static IReadOnlyList`1<T> NotEmpty(IReadOnlyList`1<T> value, string parameterName);
    [ContractAnnotationAttribute("value:null => halt")]
public static string NotEmpty(string value, string parameterName);
    [NullableContextAttribute("2")]
public static string NullButNotEmpty(string value, string parameterName);
    public static IReadOnlyCollection`1<T> NullButNotEmpty(IReadOnlyCollection`1<T> value, string parameterName);
    public static IReadOnlyList`1<T> HasNoNulls(IReadOnlyList`1<T> value, string parameterName);
    public static IReadOnlyList`1<string> HasNoEmptyElements(IReadOnlyList`1<string> value, string parameterName);
    [ConditionalAttribute("DEBUG")]
public static void DebugAssert(bool condition, string message);
    [ConditionalAttribute("DEBUG")]
[DoesNotReturnAttribute]
public static void DebugFail(string message);
}
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.NpgsqlNodaTimeServiceCollectionExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static IServiceCollection AddEntityFrameworkNpgsqlNodaTime(IServiceCollection serviceCollection);
}
[UsedImplicitlyAttribute]
public class Npgsql.EntityFrameworkCore.PostgreSQL.Design.Internal.NpgsqlNodaTimeDesignTimeServices : object {
    [NullableContextAttribute("1")]
public virtual void ConfigureDesignTimeServices(IServiceCollection serviceCollection);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlNodaTimeOptionsExtension : object {
    [NullableAttribute("2")]
private DbContextOptionsExtensionInfo _info;
    public DbContextOptionsExtensionInfo Info { get; }
    public virtual void ApplyServices(IServiceCollection services);
    public virtual DbContextOptionsExtensionInfo get_Info();
    public virtual void Validate(IDbContextOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Npgsql.EntityFrameworkCore.PostgreSQL.NodaTime.Query.Internal.NpgsqlNodaTimeAggregateMethodCallTranslatorPlugin : object {
    [CompilerGeneratedAttribute]
private IEnumerable`1<IAggregateMethodCallTranslator> <Translators>k__BackingField;
    public IEnumerable`1<IAggregateMethodCallTranslator> Translators { get; }
    public NpgsqlNodaTimeAggregateMethodCallTranslatorPlugin(ISqlExpressionFactory sqlExpressionFactory, IRelationalTypeMappingSource typeMappingSource);
    [CompilerGeneratedAttribute]
public virtual IEnumerable`1<IAggregateMethodCallTranslator> get_Translators();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Npgsql.EntityFrameworkCore.PostgreSQL.NodaTime.Query.Internal.NpgsqlNodaTimeAggregateMethodTranslator : object {
    private static Boolean[][] FalseArrays;
    private NpgsqlSqlExpressionFactory _sqlExpressionFactory;
    private IRelationalTypeMappingSource _typeMappingSource;
    public NpgsqlNodaTimeAggregateMethodTranslator(NpgsqlSqlExpressionFactory sqlExpressionFactory, IRelationalTypeMappingSource typeMappingSource);
    private static NpgsqlNodaTimeAggregateMethodTranslator();
    public virtual SqlExpression Translate(MethodInfo method, EnumerableExpression source, IReadOnlyList`1<SqlExpression> arguments, IDiagnosticsLogger`1<Query> logger);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Npgsql.EntityFrameworkCore.PostgreSQL.NodaTime.Query.Internal.NpgsqlNodaTimeEvaluatableExpressionFilterPlugin : object {
    private static MethodInfo GetCurrentInstantMethod;
    private static MemberInfo SystemClockInstanceMember;
    private static NpgsqlNodaTimeEvaluatableExpressionFilterPlugin();
    public virtual bool IsEvaluatableExpression(Expression expression);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Npgsql.EntityFrameworkCore.PostgreSQL.NodaTime.Query.Internal.NpgsqlNodaTimeMemberTranslator : object {
    private static MemberInfo SystemClock_Instance;
    private static MemberInfo ZonedDateTime_LocalDateTime;
    private static MemberInfo Interval_Start;
    private static MemberInfo Interval_End;
    private static MemberInfo Interval_HasStart;
    private static MemberInfo Interval_HasEnd;
    private static MemberInfo Interval_Duration;
    private static MemberInfo DateInterval_Start;
    private static MemberInfo DateInterval_End;
    private static MemberInfo DateInterval_Length;
    private static MemberInfo DateTimeZoneProviders_TzDb;
    private NpgsqlSqlExpressionFactory _sqlExpressionFactory;
    private IRelationalTypeMappingSource _typeMappingSource;
    private RelationalTypeMapping _dateTypeMapping;
    private RelationalTypeMapping _periodTypeMapping;
    private RelationalTypeMapping _localDateTimeTypeMapping;
    private static Boolean[][] TrueArrays;
    public NpgsqlNodaTimeMemberTranslator(IRelationalTypeMappingSource typeMappingSource, NpgsqlSqlExpressionFactory sqlExpressionFactory);
    private static NpgsqlNodaTimeMemberTranslator();
    public virtual SqlExpression Translate(SqlExpression instance, MemberInfo member, Type returnType, IDiagnosticsLogger`1<Query> logger);
    private SqlExpression TranslateDuration(SqlExpression instance, MemberInfo member);
    private SqlExpression TranslateInterval(SqlExpression instance, MemberInfo member);
    private SqlExpression TranslateDateInterval(SqlExpression instance, MemberInfo member);
    private SqlExpression TranslateDateTime(SqlExpression instance, MemberInfo member);
    private SqlExpression GetDatePartExpression(SqlExpression instance, string partName, bool floor);
    private SqlExpression GetDatePartExpressionDouble(SqlExpression instance, string partName, bool floor);
    private SqlExpression TranslateZonedDateTime(SqlExpression instance, MemberInfo member, Type returnType);
    [CompilerGeneratedAttribute]
private SqlBinaryExpression <TranslateDuration>g__TranslateDurationTotalMember|19_0(SqlExpression instance, double divisor);
    [CompilerGeneratedAttribute]
private SqlExpression <TranslateInterval>g__Lower|20_0(<>c__DisplayClass20_0& );
    [CompilerGeneratedAttribute]
private SqlExpression <TranslateInterval>g__Upper|20_1(<>c__DisplayClass20_0& );
    [CompilerGeneratedAttribute]
private SqlExpression <TranslateDateInterval>g__Lower|21_0(<>c__DisplayClass21_0& );
    [CompilerGeneratedAttribute]
private SqlExpression <TranslateDateInterval>g__Upper|21_1(<>c__DisplayClass21_0& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Npgsql.EntityFrameworkCore.PostgreSQL.NodaTime.Query.Internal.NpgsqlNodaTimeMemberTranslatorPlugin : object {
    [CompilerGeneratedAttribute]
private IEnumerable`1<IMemberTranslator> <Translators>k__BackingField;
    public IEnumerable`1<IMemberTranslator> Translators { get; }
    public NpgsqlNodaTimeMemberTranslatorPlugin(IRelationalTypeMappingSource typeMappingSource, ISqlExpressionFactory sqlExpressionFactory);
    [CompilerGeneratedAttribute]
public virtual IEnumerable`1<IMemberTranslator> get_Translators();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Npgsql.EntityFrameworkCore.PostgreSQL.NodaTime.Query.Internal.NpgsqlNodaTimeMethodCallTranslator : object {
    private IRelationalTypeMappingSource _typeMappingSource;
    private NpgsqlSqlExpressionFactory _sqlExpressionFactory;
    private static MethodInfo SystemClock_GetCurrentInstant;
    private static MethodInfo Instant_InUtc;
    private static MethodInfo Instant_InZone;
    private static MethodInfo Instant_ToDateTimeUtc;
    private static MethodInfo Instant_Distance;
    private static MethodInfo ZonedDateTime_ToInstant;
    private static MethodInfo ZonedDateTime_Distance;
    private static MethodInfo LocalDateTime_InZoneLeniently;
    private static MethodInfo LocalDateTime_Distance;
    private static MethodInfo LocalDate_Distance;
    private static MethodInfo Period_FromYears;
    private static MethodInfo Period_FromMonths;
    private static MethodInfo Period_FromWeeks;
    private static MethodInfo Period_FromDays;
    private static MethodInfo Period_FromHours;
    private static MethodInfo Period_FromMinutes;
    private static MethodInfo Period_FromSeconds;
    private static MethodInfo Interval_Contains;
    private static MethodInfo DateInterval_Contains_LocalDate;
    private static MethodInfo DateInterval_Contains_DateInterval;
    private static MethodInfo DateInterval_Intersection;
    private static MethodInfo DateInterval_Union;
    private static MethodInfo IDateTimeZoneProvider_get_Item;
    private static Boolean[][] TrueArrays;
    public NpgsqlNodaTimeMethodCallTranslator(IRelationalTypeMappingSource typeMappingSource, NpgsqlSqlExpressionFactory sqlExpressionFactory);
    private static NpgsqlNodaTimeMethodCallTranslator();
    public virtual SqlExpression Translate(SqlExpression instance, MethodInfo method, IReadOnlyList`1<SqlExpression> arguments, IDiagnosticsLogger`1<Query> logger);
    private SqlExpression TranslateInstant(SqlExpression instance, MethodInfo method, IReadOnlyList`1<SqlExpression> arguments);
    private SqlExpression TranslateZonedDateTime(SqlExpression instance, MethodInfo method, IReadOnlyList`1<SqlExpression> arguments);
    private SqlExpression TranslateLocalDateTime(SqlExpression instance, MethodInfo method, IReadOnlyList`1<SqlExpression> arguments);
    private SqlExpression TranslateLocalDate(SqlExpression instance, MethodInfo method, IReadOnlyList`1<SqlExpression> arguments);
    private SqlExpression TranslatePeriod(SqlExpression instance, MethodInfo method, IReadOnlyList`1<SqlExpression> arguments, IDiagnosticsLogger`1<Query> logger);
    private SqlExpression TranslateInterval(SqlExpression instance, MethodInfo method, IReadOnlyList`1<SqlExpression> arguments, IDiagnosticsLogger`1<Query> logger);
    private SqlExpression TranslateDateInterval(SqlExpression instance, MethodInfo method, IReadOnlyList`1<SqlExpression> arguments, IDiagnosticsLogger`1<Query> logger);
    [CompilerGeneratedAttribute]
internal static PgFunctionExpression <TranslatePeriod>g__IntervalPart|32_0(string datePart, SqlExpression parameter);
    [CompilerGeneratedAttribute]
private PgFunctionExpression <TranslatePeriod>g__IntervalPartOverBigInt|32_1(string datePart, SqlExpression parameter);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Npgsql.EntityFrameworkCore.PostgreSQL.NodaTime.Query.Internal.NpgsqlNodaTimeMethodCallTranslatorPlugin : object {
    [CompilerGeneratedAttribute]
private IEnumerable`1<IMethodCallTranslator> <Translators>k__BackingField;
    public IEnumerable`1<IMethodCallTranslator> Translators { get; }
    public NpgsqlNodaTimeMethodCallTranslatorPlugin(IRelationalTypeMappingSource typeMappingSource, ISqlExpressionFactory sqlExpressionFactory);
    [CompilerGeneratedAttribute]
public virtual IEnumerable`1<IMethodCallTranslator> get_Translators();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Npgsql.EntityFrameworkCore.PostgreSQL.NodaTime.Query.Internal.PendingDateTimeZoneProviderExpression : SqlExpression {
    internal static PendingDateTimeZoneProviderExpression Instance;
    private static PendingDateTimeZoneProviderExpression();
    protected virtual void Print(ExpressionPrinter expressionPrinter);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Npgsql.EntityFrameworkCore.PostgreSQL.NodaTime.Query.Internal.PendingZonedDateTimeExpression : SqlExpression {
    [CompilerGeneratedAttribute]
private SqlExpression <Operand>k__BackingField;
    [CompilerGeneratedAttribute]
private SqlExpression <TimeZoneId>k__BackingField;
    internal SqlExpression Operand { get; }
    internal SqlExpression TimeZoneId { get; }
    internal PendingZonedDateTimeExpression(SqlExpression operand, SqlExpression timeZoneId);
    [CompilerGeneratedAttribute]
internal SqlExpression get_Operand();
    [CompilerGeneratedAttribute]
internal SqlExpression get_TimeZoneId();
    protected virtual void Print(ExpressionPrinter expressionPrinter);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Npgsql.EntityFrameworkCore.PostgreSQL.NodaTime.Scaffolding.Internal.NpgsqlNodaTimeCodeGeneratorPlugin : ProviderCodeGeneratorPlugin {
    private static MethodInfo _useNodaTimeMethodInfo;
    private static NpgsqlNodaTimeCodeGeneratorPlugin();
    public virtual MethodCallCodeFragment GenerateProviderOptions();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Npgsql.EntityFrameworkCore.PostgreSQL.NodaTime.Utilties.Util : object {
    internal static NewExpression ConstantNew(ConstructorInfo constructor, Object[] parameters);
    internal static MethodCallExpression ConstantCall(MethodInfo method, Object[] parameters);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.DateIntervalMultirangeMapping : NpgsqlTypeMapping {
    private DateIntervalRangeMapping _dateIntervalRangeMapping;
    public DateIntervalMultirangeMapping(Type clrType, DateIntervalRangeMapping dateIntervalRangeMapping);
    protected DateIntervalMultirangeMapping(RelationalTypeMappingParameters parameters, DateIntervalRangeMapping dateIntervalRangeMapping);
    protected virtual RelationalTypeMapping Clone(RelationalTypeMappingParameters parameters);
    public virtual RelationalTypeMapping WithStoreTypeAndSize(string storeType, Nullable`1<int> size);
    protected virtual string GenerateNonNullSqlLiteral(object value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.DateIntervalRangeMapping : NpgsqlTypeMapping {
    private static ConstructorInfo _constructorWithDates;
    private static ConstructorInfo _localDateConstructor;
    [CompilerGeneratedAttribute]
private static DateIntervalRangeMapping <Default>k__BackingField;
    public static DateIntervalRangeMapping Default { get; }
    protected DateIntervalRangeMapping(RelationalTypeMappingParameters parameters);
    private static DateIntervalRangeMapping();
    [CompilerGeneratedAttribute]
public static DateIntervalRangeMapping get_Default();
    protected virtual RelationalTypeMapping Clone(RelationalTypeMappingParameters parameters);
    public virtual RelationalTypeMapping WithStoreTypeAndSize(string storeType, Nullable`1<int> size);
    protected virtual string GenerateNonNullSqlLiteral(object value);
    protected virtual string GenerateEmbeddedNonNullSqlLiteral(object value);
    public virtual Expression GenerateCodeLiteral(object value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.DateMapping : NpgsqlTypeMapping {
    private static ConstructorInfo Constructor;
    [CompilerGeneratedAttribute]
private static DateMapping <Default>k__BackingField;
    public static DateMapping Default { get; }
    protected DateMapping(RelationalTypeMappingParameters parameters);
    private static DateMapping();
    [CompilerGeneratedAttribute]
public static DateMapping get_Default();
    protected virtual RelationalTypeMapping Clone(RelationalTypeMappingParameters parameters);
    public virtual RelationalTypeMapping WithStoreTypeAndSize(string storeType, Nullable`1<int> size);
    protected virtual string GenerateNonNullSqlLiteral(object value);
    protected virtual string GenerateEmbeddedNonNullSqlLiteral(object value);
    private static string FormatLocalDate(LocalDate date);
    public virtual Expression GenerateCodeLiteral(object value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.DateTimeZoneMapping : RelationalTypeMapping {
    public DateTimeZoneMapping(string storeType);
    protected DateTimeZoneMapping(RelationalTypeMappingParameters parameters);
    protected virtual RelationalTypeMapping Clone(RelationalTypeMappingParameters parameters);
    public virtual Expression GenerateCodeLiteral(object value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.DurationIntervalMapping : NpgsqlTypeMapping {
    private static MethodInfo FromDays;
    private static MethodInfo FromHours;
    private static MethodInfo FromMinutes;
    private static MethodInfo FromSeconds;
    private static MethodInfo FromMilliseconds;
    private static PropertyInfo Zero;
    [CompilerGeneratedAttribute]
private static DurationIntervalMapping <Default>k__BackingField;
    public static DurationIntervalMapping Default { get; }
    protected DurationIntervalMapping(RelationalTypeMappingParameters parameters);
    private static DurationIntervalMapping();
    [CompilerGeneratedAttribute]
public static DurationIntervalMapping get_Default();
    protected virtual RelationalTypeMapping Clone(RelationalTypeMappingParameters parameters);
    public virtual RelationalTypeMapping WithStoreTypeAndSize(string storeType, Nullable`1<int> size);
    protected virtual string GenerateNonNullSqlLiteral(object value);
    protected virtual string GenerateEmbeddedNonNullSqlLiteral(object value);
    public virtual Expression GenerateCodeLiteral(object value);
    [CompilerGeneratedAttribute]
internal static void <GenerateCodeLiteral>g__Compose|15_0(Expression toAdd, <>c__DisplayClass15_0& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.IntervalMultirangeMapping : NpgsqlTypeMapping {
    private IntervalRangeMapping _intervalRangeMapping;
    public IntervalMultirangeMapping(Type clrType, IntervalRangeMapping intervalRangeMapping);
    protected IntervalMultirangeMapping(RelationalTypeMappingParameters parameters, IntervalRangeMapping intervalRangeMapping);
    protected virtual RelationalTypeMapping Clone(RelationalTypeMappingParameters parameters);
    public virtual RelationalTypeMapping WithStoreTypeAndSize(string storeType, Nullable`1<int> size);
    protected virtual string GenerateNonNullSqlLiteral(object value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.IntervalRangeMapping : NpgsqlTypeMapping {
    private static ConstructorInfo _constructor;
    private static ConstructorInfo _constructorWithNulls;
    [CompilerGeneratedAttribute]
private static IntervalRangeMapping <Default>k__BackingField;
    public static IntervalRangeMapping Default { get; }
    protected IntervalRangeMapping(RelationalTypeMappingParameters parameters);
    private static IntervalRangeMapping();
    [CompilerGeneratedAttribute]
public static IntervalRangeMapping get_Default();
    protected virtual RelationalTypeMapping Clone(RelationalTypeMappingParameters parameters);
    public virtual RelationalTypeMapping WithStoreTypeAndSize(string storeType, Nullable`1<int> size);
    protected virtual string GenerateNonNullSqlLiteral(object value);
    protected virtual string GenerateEmbeddedNonNullSqlLiteral(object value);
    public virtual Expression GenerateCodeLiteral(object value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.LegacyTimestampInstantMapping : NpgsqlTypeMapping {
    [CompilerGeneratedAttribute]
private static LegacyTimestampInstantMapping <Default>k__BackingField;
    public static LegacyTimestampInstantMapping Default { get; }
    protected LegacyTimestampInstantMapping(RelationalTypeMappingParameters parameters);
    private static LegacyTimestampInstantMapping();
    [CompilerGeneratedAttribute]
public static LegacyTimestampInstantMapping get_Default();
    protected virtual RelationalTypeMapping Clone(RelationalTypeMappingParameters parameters);
    public virtual RelationalTypeMapping WithStoreTypeAndSize(string storeType, Nullable`1<int> size);
    protected virtual string ProcessStoreType(RelationalTypeMappingParameters parameters, string storeType, string _);
    protected virtual string GenerateNonNullSqlLiteral(object value);
    protected virtual string GenerateEmbeddedNonNullSqlLiteral(object value);
    private string GenerateLiteralCore(object value);
    public virtual Expression GenerateCodeLiteral(object value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlNodaTimeTypeMappingSourcePlugin : object {
    internal static bool LegacyTimestampBehavior;
    internal static bool DisableDateTimeInfinityConversions;
    [CompilerGeneratedAttribute]
private ConcurrentDictionary`2<string, RelationalTypeMapping[]> <StoreTypeMappings>k__BackingField;
    [CompilerGeneratedAttribute]
private ConcurrentDictionary`2<Type, RelationalTypeMapping> <ClrTypeMappings>k__BackingField;
    private TimestampLocalDateTimeMapping _timestampLocalDateTime;
    private LegacyTimestampInstantMapping _legacyTimestampInstant;
    private TimestampTzInstantMapping _timestamptzInstant;
    private TimestampTzZonedDateTimeMapping _timestamptzZonedDateTime;
    private TimestampTzOffsetDateTimeMapping _timestamptzOffsetDateTime;
    private DateMapping _date;
    private TimeMapping _time;
    private TimeTzMapping _timetz;
    private PeriodIntervalMapping _periodInterval;
    private DurationIntervalMapping _durationInterval;
    private DateTimeZoneMapping _timeZone;
    private NpgsqlRangeTypeMapping _timestampLocalDateTimeRange;
    private NpgsqlRangeTypeMapping _legacyTimestampInstantRange;
    private NpgsqlRangeTypeMapping _timestamptzInstantRange;
    private NpgsqlRangeTypeMapping _timestamptzZonedDateTimeRange;
    private NpgsqlRangeTypeMapping _timestamptzOffsetDateTimeRange;
    private NpgsqlRangeTypeMapping _dateRange;
    private DateIntervalRangeMapping _dateIntervalRange;
    private IntervalRangeMapping _intervalRange;
    public ConcurrentDictionary`2<string, RelationalTypeMapping[]> StoreTypeMappings { get; }
    public ConcurrentDictionary`2<Type, RelationalTypeMapping> ClrTypeMappings { get; }
    private static NpgsqlNodaTimeTypeMappingSourcePlugin();
    public NpgsqlNodaTimeTypeMappingSourcePlugin(ISqlGenerationHelper sqlGenerationHelper);
    [CompilerGeneratedAttribute]
public virtual ConcurrentDictionary`2<string, RelationalTypeMapping[]> get_StoreTypeMappings();
    [CompilerGeneratedAttribute]
public virtual ConcurrentDictionary`2<Type, RelationalTypeMapping> get_ClrTypeMappings();
    [NullableContextAttribute("2")]
public virtual RelationalTypeMapping FindMapping(RelationalTypeMappingInfo& modreq(System.Runtime.InteropServices.InAttribute) mappingInfo);
    [NullableContextAttribute("2")]
protected virtual RelationalTypeMapping FindBaseMapping(RelationalTypeMappingInfo& modreq(System.Runtime.InteropServices.InAttribute) mappingInfo);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.PeriodIntervalMapping : NpgsqlTypeMapping {
    private static MethodInfo FromYears;
    private static MethodInfo FromMonths;
    private static MethodInfo FromWeeks;
    private static MethodInfo FromDays;
    private static MethodInfo FromHours;
    private static MethodInfo FromMinutes;
    private static MethodInfo FromSeconds;
    private static MethodInfo FromMilliseconds;
    private static MethodInfo FromNanoseconds;
    private static PropertyInfo Zero;
    [CompilerGeneratedAttribute]
private static PeriodIntervalMapping <Default>k__BackingField;
    public static PeriodIntervalMapping Default { get; }
    protected PeriodIntervalMapping(RelationalTypeMappingParameters parameters);
    private static PeriodIntervalMapping();
    [CompilerGeneratedAttribute]
public static PeriodIntervalMapping get_Default();
    protected virtual RelationalTypeMapping Clone(RelationalTypeMappingParameters parameters);
    public virtual RelationalTypeMapping WithStoreTypeAndSize(string storeType, Nullable`1<int> size);
    protected virtual string GenerateNonNullSqlLiteral(object value);
    protected virtual string GenerateEmbeddedNonNullSqlLiteral(object value);
    private string GenerateLiteralCore(object value);
    public virtual Expression GenerateCodeLiteral(object value);
    [CompilerGeneratedAttribute]
internal static void <GenerateCodeLiteral>g__Compose|20_0(Expression toAdd, <>c__DisplayClass20_0& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.TimeMapping : NpgsqlTypeMapping {
    private static ConstructorInfo ConstructorWithMinutes;
    private static ConstructorInfo ConstructorWithSeconds;
    private static MethodInfo FromHourMinuteSecondNanosecondMethod;
    [CompilerGeneratedAttribute]
private static TimeMapping <Default>k__BackingField;
    public static TimeMapping Default { get; }
    protected TimeMapping(RelationalTypeMappingParameters parameters);
    private static TimeMapping();
    [CompilerGeneratedAttribute]
public static TimeMapping get_Default();
    protected virtual RelationalTypeMapping Clone(RelationalTypeMappingParameters parameters);
    public virtual RelationalTypeMapping WithStoreTypeAndSize(string storeType, Nullable`1<int> size);
    protected virtual string ProcessStoreType(RelationalTypeMappingParameters parameters, string storeType, string _);
    protected virtual string GenerateNonNullSqlLiteral(object value);
    protected virtual string GenerateEmbeddedNonNullSqlLiteral(object value);
    public virtual Expression GenerateCodeLiteral(object value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.TimestampLocalDateTimeMapping : NpgsqlTypeMapping {
    private static ConstructorInfo ConstructorWithMinutes;
    private static ConstructorInfo ConstructorWithSeconds;
    private static MethodInfo PlusNanosecondsMethod;
    [CompilerGeneratedAttribute]
private static TimestampLocalDateTimeMapping <Default>k__BackingField;
    public static TimestampLocalDateTimeMapping Default { get; }
    protected TimestampLocalDateTimeMapping(RelationalTypeMappingParameters parameters);
    private static TimestampLocalDateTimeMapping();
    [CompilerGeneratedAttribute]
public static TimestampLocalDateTimeMapping get_Default();
    protected virtual RelationalTypeMapping Clone(RelationalTypeMappingParameters parameters);
    public virtual RelationalTypeMapping WithStoreTypeAndSize(string storeType, Nullable`1<int> size);
    protected virtual string ProcessStoreType(RelationalTypeMappingParameters parameters, string storeType, string _);
    protected virtual string GenerateNonNullSqlLiteral(object value);
    protected virtual string GenerateEmbeddedNonNullSqlLiteral(object value);
    private static string Format(LocalDateTime localDateTime);
    public virtual Expression GenerateCodeLiteral(object value);
    internal static Expression GenerateCodeLiteral(LocalDateTime dateTime);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.TimestampTzInstantMapping : NpgsqlTypeMapping {
    [CompilerGeneratedAttribute]
private static TimestampTzInstantMapping <Default>k__BackingField;
    private static MethodInfo _fromUnixTimeTicks;
    public static TimestampTzInstantMapping Default { get; }
    protected TimestampTzInstantMapping(RelationalTypeMappingParameters parameters);
    private static TimestampTzInstantMapping();
    [CompilerGeneratedAttribute]
public static TimestampTzInstantMapping get_Default();
    protected virtual RelationalTypeMapping Clone(RelationalTypeMappingParameters parameters);
    public virtual RelationalTypeMapping WithStoreTypeAndSize(string storeType, Nullable`1<int> size);
    protected virtual string ProcessStoreType(RelationalTypeMappingParameters parameters, string storeType, string _);
    protected virtual string GenerateNonNullSqlLiteral(object value);
    protected virtual string GenerateEmbeddedNonNullSqlLiteral(object value);
    private static string Format(Instant instant);
    internal static Expression GenerateCodeLiteral(Instant instant);
    public virtual Expression GenerateCodeLiteral(object value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.TimestampTzOffsetDateTimeMapping : NpgsqlTypeMapping {
    private static ConstructorInfo Constructor;
    private static MethodInfo OffsetFromHoursMethod;
    private static MethodInfo OffsetFromSecondsMethod;
    [CompilerGeneratedAttribute]
private static TimestampTzOffsetDateTimeMapping <Default>k__BackingField;
    public static TimestampTzOffsetDateTimeMapping Default { get; }
    protected TimestampTzOffsetDateTimeMapping(RelationalTypeMappingParameters parameters);
    private static TimestampTzOffsetDateTimeMapping();
    [CompilerGeneratedAttribute]
public static TimestampTzOffsetDateTimeMapping get_Default();
    protected virtual RelationalTypeMapping Clone(RelationalTypeMappingParameters parameters);
    public virtual RelationalTypeMapping WithStoreTypeAndSize(string storeType, Nullable`1<int> size);
    protected virtual string ProcessStoreType(RelationalTypeMappingParameters parameters, string storeType, string _);
    protected virtual string GenerateNonNullSqlLiteral(object value);
    protected virtual string GenerateEmbeddedNonNullSqlLiteral(object value);
    private static string Format(OffsetDateTime offsetDateTime);
    public virtual Expression GenerateCodeLiteral(object value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.TimestampTzZonedDateTimeMapping : NpgsqlTypeMapping {
    private static ZonedDateTimePattern Pattern;
    [CompilerGeneratedAttribute]
private static TimestampTzZonedDateTimeMapping <Default>k__BackingField;
    private static ConstructorInfo Constructor;
    private static MemberInfo TzdbDateTimeZoneSourceDefaultMember;
    private static MethodInfo ForIdMethod;
    public static TimestampTzZonedDateTimeMapping Default { get; }
    protected TimestampTzZonedDateTimeMapping(RelationalTypeMappingParameters parameters);
    private static TimestampTzZonedDateTimeMapping();
    [CompilerGeneratedAttribute]
public static TimestampTzZonedDateTimeMapping get_Default();
    protected virtual RelationalTypeMapping Clone(RelationalTypeMappingParameters parameters);
    public virtual RelationalTypeMapping WithStoreTypeAndSize(string storeType, Nullable`1<int> size);
    protected virtual string ProcessStoreType(RelationalTypeMappingParameters parameters, string storeType, string _);
    protected virtual string GenerateNonNullSqlLiteral(object value);
    protected virtual string GenerateEmbeddedNonNullSqlLiteral(object value);
    public virtual Expression GenerateCodeLiteral(object value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.TimeTzMapping : NpgsqlTypeMapping {
    private static ConstructorInfo OffsetTimeConstructor;
    private static ConstructorInfo LocalTimeConstructorWithMinutes;
    private static ConstructorInfo LocalTimeConstructorWithSeconds;
    private static MethodInfo LocalTimeFromHourMinuteSecondNanosecondMethod;
    private static MethodInfo OffsetFromHoursMethod;
    private static MethodInfo OffsetFromSeconds;
    private static OffsetTimePattern Pattern;
    [CompilerGeneratedAttribute]
private static TimeTzMapping <Default>k__BackingField;
    public static TimeTzMapping Default { get; }
    protected TimeTzMapping(RelationalTypeMappingParameters parameters);
    private static TimeTzMapping();
    [CompilerGeneratedAttribute]
public static TimeTzMapping get_Default();
    protected virtual RelationalTypeMapping Clone(RelationalTypeMappingParameters parameters);
    public virtual RelationalTypeMapping WithStoreTypeAndSize(string storeType, Nullable`1<int> size);
    protected virtual string ProcessStoreType(RelationalTypeMappingParameters parameters, string storeType, string _);
    protected virtual string GenerateNonNullSqlLiteral(object value);
    protected virtual string GenerateEmbeddedNonNullSqlLiteral(object value);
    public virtual Expression GenerateCodeLiteral(object value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Npgsql.EntityFrameworkCore.PostgreSQL.TypeExtensions : object {
    [ExtensionAttribute]
internal static bool IsGenericList(Type type);
    [ExtensionAttribute]
internal static bool IsArrayOrGenericList(Type type);
    [ExtensionAttribute]
internal static bool TryGetElementType(Type type, Type& elementType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
[DebuggerStepThroughAttribute]
internal static class System.SharedTypeExtensions : object {
    private static Dictionary`2<Type, string> _builtInTypeNames;
    [NullableAttribute("0")]
private static Dictionary`2<Type, object> _commonTypeDictionary;
    [NullableAttribute("0")]
private static MethodInfo _generateDefaultValueConstantMethod;
    private static SharedTypeExtensions();
    [ExtensionAttribute]
public static Type UnwrapNullableType(Type type);
    [ExtensionAttribute]
public static bool IsNullableValueType(Type type);
    [ExtensionAttribute]
public static bool IsNullableType(Type type);
    [ExtensionAttribute]
public static bool IsValidEntityType(Type type);
    [ExtensionAttribute]
public static bool IsPropertyBagType(Type type);
    [ExtensionAttribute]
public static Type MakeNullable(Type type, bool nullable);
    [ExtensionAttribute]
public static bool IsNumeric(Type type);
    [ExtensionAttribute]
public static bool IsInteger(Type type);
    [ExtensionAttribute]
public static bool IsSignedInteger(Type type);
    [ExtensionAttribute]
public static bool IsAnonymousType(Type type);
    [ExtensionAttribute]
public static bool IsTupleType(Type type);
    [ExtensionAttribute]
public static PropertyInfo GetAnyProperty(Type type, string name);
    [ExtensionAttribute]
public static MethodInfo GetRequiredMethod(Type type, string name, Type[] parameters);
    [ExtensionAttribute]
public static PropertyInfo GetRequiredProperty(Type type, string name);
    [ExtensionAttribute]
public static FieldInfo GetRequiredDeclaredField(Type type, string name);
    [ExtensionAttribute]
public static MethodInfo GetRequiredDeclaredMethod(Type type, string name);
    [ExtensionAttribute]
public static PropertyInfo GetRequiredDeclaredProperty(Type type, string name);
    [ExtensionAttribute]
public static MethodInfo GetRequiredRuntimeMethod(Type type, string name, Type[] parameters);
    [ExtensionAttribute]
public static PropertyInfo GetRequiredRuntimeProperty(Type type, string name);
    [ExtensionAttribute]
public static bool IsInstantiable(Type type);
    [ExtensionAttribute]
public static Type UnwrapEnumType(Type type);
    [ExtensionAttribute]
public static Type GetSequenceType(Type type);
    [ExtensionAttribute]
public static Type TryGetSequenceType(Type type);
    [ExtensionAttribute]
public static Type TryGetElementType(Type type, Type interfaceOrBaseType);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static bool IsCompatibleWith(Type propertyType, Type fieldType);
    [NullableContextAttribute("0")]
[IteratorStateMachineAttribute("System.SharedTypeExtensions/<GetGenericTypeImplementations>d__26")]
[ExtensionAttribute]
public static IEnumerable`1<Type> GetGenericTypeImplementations(Type type, Type interfaceOrBaseType);
    [NullableContextAttribute("0")]
[IteratorStateMachineAttribute("System.SharedTypeExtensions/<GetBaseTypes>d__27")]
[ExtensionAttribute]
public static IEnumerable`1<Type> GetBaseTypes(Type type);
    [NullableContextAttribute("0")]
[IteratorStateMachineAttribute("System.SharedTypeExtensions/<GetTypesInHierarchy>d__28")]
[ExtensionAttribute]
public static IEnumerable`1<Type> GetTypesInHierarchy(Type type);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ConstructorInfo GetDeclaredConstructor(Type type, Type[] types);
    [NullableContextAttribute("0")]
[IteratorStateMachineAttribute("System.SharedTypeExtensions/<GetPropertiesInHierarchy>d__30")]
[ExtensionAttribute]
public static IEnumerable`1<PropertyInfo> GetPropertiesInHierarchy(Type type, string name);
    [NullableContextAttribute("0")]
[IteratorStateMachineAttribute("System.SharedTypeExtensions/<GetMembersInHierarchy>d__31")]
[ExtensionAttribute]
public static IEnumerable`1<MemberInfo> GetMembersInHierarchy(Type type);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static IEnumerable`1<MemberInfo> GetMembersInHierarchy(Type type, string name);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static object GetDefaultValue(Type type);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static IEnumerable`1<TypeInfo> GetConstructibleTypes(Assembly assembly);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static IEnumerable`1<TypeInfo> GetLoadableDefinedTypes(Assembly assembly);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static bool IsQueryableType(Type type);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static string DisplayName(Type type, bool fullName);
    [NullableContextAttribute("0")]
private static void ProcessType(StringBuilder builder, Type type, bool fullName);
    [NullableContextAttribute("0")]
private static void ProcessArrayType(StringBuilder builder, Type type, bool fullName);
    [NullableContextAttribute("0")]
private static void ProcessGenericType(StringBuilder builder, Type type, Type[] genericArguments, int length, bool fullName);
    [NullableContextAttribute("0")]
[IteratorStateMachineAttribute("System.SharedTypeExtensions/<GetNamespaces>d__42")]
[ExtensionAttribute]
public static IEnumerable`1<string> GetNamespaces(Type type);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static ConstantExpression GetDefaultValueConstant(Type type);
    [NullableContextAttribute("0")]
private static ConstantExpression GenerateDefaultValueConstant();
}
