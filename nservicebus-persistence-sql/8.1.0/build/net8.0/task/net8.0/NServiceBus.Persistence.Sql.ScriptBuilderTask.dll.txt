internal class BuildLogger : object {
    private IBuildEngine buildEngine;
    public bool ErrorOccurred;
    public BuildLogger(IBuildEngine buildEngine);
    public void LogInfo(string message);
    private static string PrependMessage(string message);
    public void LogError(string message, string file);
}
[ExtensionAttribute]
internal static class ExceptionExtensions : object {
    [ExtensionAttribute]
public static string ToFriendlyString(Exception exception);
}
internal class InnerTask : object {
    private string assemblyPath;
    private string intermediateDirectory;
    private string projectDirectory;
    private string solutionDirectory;
    private Action`2<string, string> logError;
    public InnerTask(string assemblyPath, string intermediateDirectory, string projectDirectory, string solutionDirectory, Action`2<string, string> logError);
    public void Execute();
    private string FindPromotionPath(string promotionPath);
    private static string GetFullPathWithEndingSlashes(string input);
}
public class NServiceBus.Persistence.Sql.PublishDedupeTask : Task {
    [CompilerGeneratedAttribute]
private ITaskItem[] <FilesToPublish>k__BackingField;
    [CompilerGeneratedAttribute]
private ITaskItem[] <FilesToRemove>k__BackingField;
    [RequiredAttribute]
public ITaskItem[] FilesToPublish { get; public set; }
    [OutputAttribute]
public ITaskItem[] FilesToRemove { get; private set; }
    [CompilerGeneratedAttribute]
public ITaskItem[] get_FilesToPublish();
    [CompilerGeneratedAttribute]
public void set_FilesToPublish(ITaskItem[] value);
    [CompilerGeneratedAttribute]
public ITaskItem[] get_FilesToRemove();
    [CompilerGeneratedAttribute]
private void set_FilesToRemove(ITaskItem[] value);
    public virtual bool Execute();
}
public class NServiceBus.Persistence.Sql.SqlPersistenceScriptBuilderTask : Task {
    private BuildLogger logger;
    [CompilerGeneratedAttribute]
private string <AssemblyPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IntermediateDirectory>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectDirectory>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SolutionDirectory>k__BackingField;
    private static Version assemblyVersion;
    [RequiredAttribute]
public string AssemblyPath { get; public set; }
    [RequiredAttribute]
public string IntermediateDirectory { get; public set; }
    [RequiredAttribute]
public string ProjectDirectory { get; public set; }
    public string SolutionDirectory { get; public set; }
    private static SqlPersistenceScriptBuilderTask();
    [CompilerGeneratedAttribute]
public string get_AssemblyPath();
    [CompilerGeneratedAttribute]
public void set_AssemblyPath(string value);
    [CompilerGeneratedAttribute]
public string get_IntermediateDirectory();
    [CompilerGeneratedAttribute]
public void set_IntermediateDirectory(string value);
    [CompilerGeneratedAttribute]
public string get_ProjectDirectory();
    [CompilerGeneratedAttribute]
public void set_ProjectDirectory(string value);
    [CompilerGeneratedAttribute]
public string get_SolutionDirectory();
    [CompilerGeneratedAttribute]
public void set_SolutionDirectory(string value);
    public virtual bool Execute();
    private void ValidateInputs();
    [CompilerGeneratedAttribute]
private void <Execute>b__18_0(string error, string file);
}
