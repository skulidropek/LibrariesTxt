[ExtensionAttribute]
public static class Microsoft.AspNetCore.Builder.NSwagApplicationBuilderExtensions : object {
    [ExtensionAttribute]
public static IApplicationBuilder UseOpenApi(IApplicationBuilder app, Action`1<OpenApiDocumentMiddlewareSettings> configure);
    [ExtensionAttribute]
public static IApplicationBuilder UseSwaggerUi(IApplicationBuilder app, Action`1<SwaggerUiSettings> configure);
    [ExtensionAttribute]
public static IApplicationBuilder UseReDoc(IApplicationBuilder app, Action`1<ReDocSettings> configure);
    [ExtensionAttribute]
public static IApplicationBuilder UseApimundo(IApplicationBuilder app, Action`1<ApimundoUiSettings> configure);
    private static void UseSwaggerUiWithDocumentNamePlaceholderExpanding(IApplicationBuilder app, SwaggerUiSettingsBase settings, Action`2<string, string> register, Func`2<IEnumerable`1<OpenApiDocumentRegistration>, bool> registerMultiple);
}
internal interface Microsoft.Extensions.ApiDescriptions.IDocumentProvider {
    public abstract virtual IEnumerable`1<string> GetDocumentNames();
    public abstract virtual Task GenerateAsync(string documentName, TextWriter writer);
}
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.NSwagServiceCollectionExtensions : object {
    [ExtensionAttribute]
public static IServiceCollection AddOpenApiDocument(IServiceCollection serviceCollection, Action`1<AspNetCoreOpenApiDocumentGeneratorSettings> configure);
    [ExtensionAttribute]
public static IServiceCollection AddOpenApiDocument(IServiceCollection serviceCollection, Action`2<AspNetCoreOpenApiDocumentGeneratorSettings, IServiceProvider> configure);
    [ExtensionAttribute]
public static IServiceCollection AddSwaggerDocument(IServiceCollection serviceCollection, Action`1<AspNetCoreOpenApiDocumentGeneratorSettings> configure);
    [ExtensionAttribute]
public static IServiceCollection AddSwaggerDocument(IServiceCollection serviceCollection, Action`2<AspNetCoreOpenApiDocumentGeneratorSettings, IServiceProvider> configure);
    [ExtensionAttribute]
[ObsoleteAttribute("Use AddSwaggerDocument() instead.")]
public static IServiceCollection AddSwagger(IServiceCollection serviceCollection, Action`1<AspNetCoreOpenApiDocumentGeneratorSettings> configure);
}
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.NSwagSwaggerGeneratorSettingsExtensions : object {
    [ExtensionAttribute]
public static OpenApiDocumentGeneratorSettings AddSecurity(OpenApiDocumentGeneratorSettings settings, string name, OpenApiSecurityScheme swaggerSecurityScheme);
    [ExtensionAttribute]
public static OpenApiDocumentGeneratorSettings AddSecurity(OpenApiDocumentGeneratorSettings settings, string name, IEnumerable`1<string> globalScopeNames, OpenApiSecurityScheme swaggerSecurityScheme);
}
public class NSwag.AspNetCore.ApimundoUiSettings : SwaggerUiSettingsBase {
    [CompilerGeneratedAttribute]
private string <CompareWith>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ApimundoUrl>k__BackingField;
    public string CompareWith { get; public set; }
    public string ApimundoUrl { get; public set; }
    [CompilerGeneratedAttribute]
public string get_CompareWith();
    [CompilerGeneratedAttribute]
public void set_CompareWith(string value);
    [CompilerGeneratedAttribute]
public string get_ApimundoUrl();
    [CompilerGeneratedAttribute]
public void set_ApimundoUrl(string value);
    internal virtual Task`1<string> TransformHtmlAsync(string html, HttpRequest request, CancellationToken cancellationToken);
}
[ExtensionAttribute]
internal static class NSwag.AspNetCore.HttpRequestExtension : object {
    private static string ForwardedProtoHeader;
    private static string ForwardedPrefixHeader;
    private static string ForwardedHostHeader;
    [ExtensionAttribute]
private static string GetHttpScheme(HttpRequest request);
    [ExtensionAttribute]
public static string GetServerUrl(HttpRequest request);
    [ExtensionAttribute]
public static string GetBasePath(HttpRequest request);
    [ExtensionAttribute]
private static string TryGetFirstHeader(IHeaderDictionary headers, string name);
}
public class NSwag.AspNetCore.JsonExceptionFilterAttribute : ActionFilterAttribute {
    private bool _hideStackTrace;
    private IDictionary`2<string, Assembly> _searchedNamespaces;
    private List`1<Type> _exceptionTypes;
    public JsonExceptionFilterAttribute(Type[] exceptionTypes);
    public JsonExceptionFilterAttribute(bool hideStackTrace, Type[] exceptionTypes);
    public JsonExceptionFilterAttribute(bool hideStackTrace, IDictionary`2<string, Assembly> searchedNamespaces, Type[] exceptionTypes);
    public virtual void OnActionExecuted(ActionExecutedContext context);
    private int GetStatusCode(Exception exception, ActionExecutedContext context);
    private JsonSerializerSettings CopySettings(JsonSerializerSettings settings);
}
public class NSwag.AspNetCore.Middlewares.OpenApiDocumentMiddleware : object {
    private RequestDelegate _nextDelegate;
    private string _documentName;
    private string _path;
    private IApiDescriptionGroupCollectionProvider _apiDescriptionGroupCollectionProvider;
    private OpenApiDocumentProvider _documentProvider;
    private OpenApiDocumentMiddlewareSettings _settings;
    private int _version;
    private object _documentsCacheLock;
    private Dictionary`2<string, Tuple`3<string, ExceptionDispatchInfo, DateTimeOffset>> _documentsCache;
    public OpenApiDocumentMiddleware(RequestDelegate nextDelegate, IServiceProvider serviceProvider, string documentName, string path, OpenApiDocumentMiddlewareSettings settings);
    [AsyncStateMachineAttribute("NSwag.AspNetCore.Middlewares.OpenApiDocumentMiddleware/<Invoke>d__10")]
public Task Invoke(HttpContext context);
    [AsyncStateMachineAttribute("NSwag.AspNetCore.Middlewares.OpenApiDocumentMiddleware/<GetDocumentAsync>d__11")]
protected virtual Task`1<string> GetDocumentAsync(HttpContext context);
    [AsyncStateMachineAttribute("NSwag.AspNetCore.Middlewares.OpenApiDocumentMiddleware/<GenerateDocumentAsync>d__12")]
protected virtual Task`1<OpenApiDocument> GenerateDocumentAsync(HttpContext context);
}
internal class NSwag.AspNetCore.Middlewares.RedirectToIndexMiddleware : object {
    private RequestDelegate _nextDelegate;
    private string _swaggerUiRoute;
    private string _swaggerRoute;
    private Func`3<string, HttpRequest, string> _transformToExternal;
    public RedirectToIndexMiddleware(RequestDelegate nextDelegate, string internalSwaggerUiRoute, string internalSwaggerRoute, Func`3<string, HttpRequest, string> transformToExternal);
    [AsyncStateMachineAttribute("NSwag.AspNetCore.Middlewares.RedirectToIndexMiddleware/<Invoke>d__5")]
public Task Invoke(HttpContext context);
}
internal class NSwag.AspNetCore.Middlewares.SwaggerUiIndexMiddleware : object {
    private RequestDelegate _nextDelegate;
    private string _indexPath;
    private SwaggerUiSettingsBase _settings;
    private string _resourcePath;
    public SwaggerUiIndexMiddleware(RequestDelegate nextDelegate, string indexPath, SwaggerUiSettingsBase settings, string resourcePath);
    [AsyncStateMachineAttribute("NSwag.AspNetCore.Middlewares.SwaggerUiIndexMiddleware/<Invoke>d__5")]
public Task Invoke(HttpContext context);
}
public class NSwag.AspNetCore.OAuth2ClientSettings : object {
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientSecret>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Realm>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AppName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ScopeSeparator>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<string> <Scopes>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <AdditionalQueryStringParameters>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UsePkceWithAuthorizationCodeGrant>k__BackingField;
    public string ClientId { get; public set; }
    public string ClientSecret { get; public set; }
    public string Realm { get; public set; }
    public string AppName { get; public set; }
    public string ScopeSeparator { get; public set; }
    public ICollection`1<string> Scopes { get; }
    public IDictionary`2<string, string> AdditionalQueryStringParameters { get; }
    public bool UsePkceWithAuthorizationCodeGrant { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public string get_ClientSecret();
    [CompilerGeneratedAttribute]
public void set_ClientSecret(string value);
    [CompilerGeneratedAttribute]
public string get_Realm();
    [CompilerGeneratedAttribute]
public void set_Realm(string value);
    [CompilerGeneratedAttribute]
public string get_AppName();
    [CompilerGeneratedAttribute]
public void set_AppName(string value);
    [CompilerGeneratedAttribute]
public string get_ScopeSeparator();
    [CompilerGeneratedAttribute]
public void set_ScopeSeparator(string value);
    [CompilerGeneratedAttribute]
public ICollection`1<string> get_Scopes();
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_AdditionalQueryStringParameters();
    [CompilerGeneratedAttribute]
public bool get_UsePkceWithAuthorizationCodeGrant();
    [CompilerGeneratedAttribute]
public void set_UsePkceWithAuthorizationCodeGrant(bool value);
}
internal class NSwag.AspNetCore.OpenApiConfigureMvcOptions : ConfigureOptions`1<MvcOptions> {
}
public class NSwag.AspNetCore.OpenApiDocumentMiddlewareSettings : object {
    [CompilerGeneratedAttribute]
private string <DocumentName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <ExceptionCacheTime>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`2<OpenApiDocument, HttpRequest> <PostProcess>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<HttpRequest, string> <CreateDocumentCacheKey>k__BackingField;
    public string DocumentName { get; public set; }
    public string Path { get; public set; }
    public TimeSpan ExceptionCacheTime { get; public set; }
    public Action`2<OpenApiDocument, HttpRequest> PostProcess { get; public set; }
    public Func`2<HttpRequest, string> CreateDocumentCacheKey { get; public set; }
    [CompilerGeneratedAttribute]
public string get_DocumentName();
    [CompilerGeneratedAttribute]
public void set_DocumentName(string value);
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(string value);
    [CompilerGeneratedAttribute]
public TimeSpan get_ExceptionCacheTime();
    [CompilerGeneratedAttribute]
public void set_ExceptionCacheTime(TimeSpan value);
    [CompilerGeneratedAttribute]
public Action`2<OpenApiDocument, HttpRequest> get_PostProcess();
    [CompilerGeneratedAttribute]
public void set_PostProcess(Action`2<OpenApiDocument, HttpRequest> value);
    [CompilerGeneratedAttribute]
public Func`2<HttpRequest, string> get_CreateDocumentCacheKey();
    [CompilerGeneratedAttribute]
public void set_CreateDocumentCacheKey(Func`2<HttpRequest, string> value);
}
internal class NSwag.AspNetCore.OpenApiDocumentProvider : object {
    private IServiceProvider _serviceProvider;
    private IEnumerable`1<OpenApiDocumentRegistration> _documents;
    public OpenApiDocumentProvider(IServiceProvider serviceProvider, IEnumerable`1<OpenApiDocumentRegistration> documents);
    public sealed virtual Task`1<OpenApiDocument> GenerateAsync(string documentName);
    private sealed virtual override IEnumerable`1<string> Microsoft.Extensions.ApiDescriptions.IDocumentProvider.GetDocumentNames();
    [AsyncStateMachineAttribute("NSwag.AspNetCore.OpenApiDocumentProvider/<Microsoft-Extensions-ApiDescriptions-IDocumentProvider-GenerateAsync>d__5")]
private sealed virtual override Task Microsoft.Extensions.ApiDescriptions.IDocumentProvider.GenerateAsync(string documentName, TextWriter writer);
}
public class NSwag.AspNetCore.OpenApiDocumentRegistration : object {
    [CompilerGeneratedAttribute]
private string <DocumentName>k__BackingField;
    [CompilerGeneratedAttribute]
private AspNetCoreOpenApiDocumentGeneratorSettings <Settings>k__BackingField;
    public string DocumentName { get; }
    public AspNetCoreOpenApiDocumentGeneratorSettings Settings { get; }
    public OpenApiDocumentRegistration(string documentName, AspNetCoreOpenApiDocumentGeneratorSettings settings);
    [CompilerGeneratedAttribute]
public string get_DocumentName();
    [CompilerGeneratedAttribute]
public AspNetCoreOpenApiDocumentGeneratorSettings get_Settings();
}
internal class NSwag.AspNetCore.OpenApiMvcApplicationModelConvention : object {
    public sealed virtual void Apply(ApplicationModel application);
}
public class NSwag.AspNetCore.ReDocSettings : SwaggerUiSettingsBase {
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <AdditionalSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DocumentTitle>k__BackingField;
    public IDictionary`2<string, object> AdditionalSettings { get; }
    public string DocumentTitle { get; public set; }
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_AdditionalSettings();
    [CompilerGeneratedAttribute]
public string get_DocumentTitle();
    [CompilerGeneratedAttribute]
public void set_DocumentTitle(string value);
    internal virtual Task`1<string> TransformHtmlAsync(string html, HttpRequest request, CancellationToken cancellationToken);
}
public class NSwag.AspNetCore.SwaggerSettings : object {
    [CompilerGeneratedAttribute]
private string <MiddlewareBasePath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DocumentPath>k__BackingField;
    [ObsoleteAttribute("This property is ignored when using AspNetCoreToSwaggerGenerator and will be removed eventually.")]
public string MiddlewareBasePath { get; public set; }
    public string DocumentPath { get; public set; }
    internal string ActualSwaggerDocumentPath { get; }
    [CompilerGeneratedAttribute]
public string get_MiddlewareBasePath();
    [CompilerGeneratedAttribute]
public void set_MiddlewareBasePath(string value);
    [CompilerGeneratedAttribute]
public string get_DocumentPath();
    [CompilerGeneratedAttribute]
public void set_DocumentPath(string value);
    internal virtual string get_ActualSwaggerDocumentPath();
}
public class NSwag.AspNetCore.SwaggerUiRoute : object {
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [JsonPropertyAttribute("url")]
public string Url { get; internal set; }
    [JsonPropertyAttribute("name")]
public string Name { get; internal set; }
    public SwaggerUiRoute(string name, string url);
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
internal void set_Url(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
internal void set_Name(string value);
}
public class NSwag.AspNetCore.SwaggerUiSettings : SwaggerUiSettingsBase {
    [CompilerGeneratedAttribute]
private OAuth2ClientSettings <OAuth2Client>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServerUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableTryItOut>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DocumentTitle>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CustomHeadContent>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ValidateSpecification>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <AdditionalSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<SwaggerUiRoute> <SwaggerRoutes>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`3<HttpRequest, CancellationToken, Task`1<IEnumerable`1<SwaggerUiRoute>>> <SwaggerRoutesFactory>k__BackingField;
    public OAuth2ClientSettings OAuth2Client { get; public set; }
    public string ServerUrl { get; public set; }
    public bool EnableTryItOut { get; public set; }
    public string DocumentTitle { get; public set; }
    public string CustomHeadContent { get; public set; }
    public bool ValidateSpecification { get; public set; }
    public IDictionary`2<string, object> AdditionalSettings { get; }
    public string DocExpansion { get; public set; }
    public string OperationsSorter { get; public set; }
    public int DefaultModelsExpandDepth { get; public set; }
    public int DefaultModelExpandDepth { get; public set; }
    public string TagsSorter { get; public set; }
    public bool PersistAuthorization { get; public set; }
    public bool WithCredentials { get; public set; }
    public ICollection`1<SwaggerUiRoute> SwaggerRoutes { get; }
    public Func`3<HttpRequest, CancellationToken, Task`1<IEnumerable`1<SwaggerUiRoute>>> SwaggerRoutesFactory { get; public set; }
    internal string ActualSwaggerDocumentPath { get; }
    [CompilerGeneratedAttribute]
public OAuth2ClientSettings get_OAuth2Client();
    [CompilerGeneratedAttribute]
public void set_OAuth2Client(OAuth2ClientSettings value);
    [CompilerGeneratedAttribute]
public string get_ServerUrl();
    [CompilerGeneratedAttribute]
public void set_ServerUrl(string value);
    [CompilerGeneratedAttribute]
public bool get_EnableTryItOut();
    [CompilerGeneratedAttribute]
public void set_EnableTryItOut(bool value);
    [CompilerGeneratedAttribute]
public string get_DocumentTitle();
    [CompilerGeneratedAttribute]
public void set_DocumentTitle(string value);
    [CompilerGeneratedAttribute]
public string get_CustomHeadContent();
    [CompilerGeneratedAttribute]
public void set_CustomHeadContent(string value);
    [CompilerGeneratedAttribute]
public bool get_ValidateSpecification();
    [CompilerGeneratedAttribute]
public void set_ValidateSpecification(bool value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_AdditionalSettings();
    public string get_DocExpansion();
    public void set_DocExpansion(string value);
    public string get_OperationsSorter();
    public void set_OperationsSorter(string value);
    public int get_DefaultModelsExpandDepth();
    public void set_DefaultModelsExpandDepth(int value);
    public int get_DefaultModelExpandDepth();
    public void set_DefaultModelExpandDepth(int value);
    public string get_TagsSorter();
    public void set_TagsSorter(string value);
    public bool get_PersistAuthorization();
    public void set_PersistAuthorization(bool value);
    public bool get_WithCredentials();
    public void set_WithCredentials(bool value);
    [CompilerGeneratedAttribute]
public ICollection`1<SwaggerUiRoute> get_SwaggerRoutes();
    [CompilerGeneratedAttribute]
public Func`3<HttpRequest, CancellationToken, Task`1<IEnumerable`1<SwaggerUiRoute>>> get_SwaggerRoutesFactory();
    [CompilerGeneratedAttribute]
public void set_SwaggerRoutesFactory(Func`3<HttpRequest, CancellationToken, Task`1<IEnumerable`1<SwaggerUiRoute>>> value);
    internal virtual string get_ActualSwaggerDocumentPath();
    [AsyncStateMachineAttribute("NSwag.AspNetCore.SwaggerUiSettings/<TransformHtmlAsync>d__58")]
internal virtual Task`1<string> TransformHtmlAsync(string html, HttpRequest request, CancellationToken cancellationToken);
}
public abstract class NSwag.AspNetCore.SwaggerUiSettingsBase : SwaggerSettings {
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CustomInlineStyles>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CustomStylesheetPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CustomJavaScriptPath>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseModuleTypeForCustomJavaScript>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`3<string, HttpRequest, string> <TransformToExternalPath>k__BackingField;
    public string Path { get; public set; }
    internal string ActualSwaggerUiPath { get; }
    public string CustomInlineStyles { get; public set; }
    public string CustomStylesheetPath { get; public set; }
    public string CustomJavaScriptPath { get; public set; }
    public bool UseModuleTypeForCustomJavaScript { get; public set; }
    public Func`3<string, HttpRequest, string> TransformToExternalPath { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(string value);
    internal string get_ActualSwaggerUiPath();
    [CompilerGeneratedAttribute]
public string get_CustomInlineStyles();
    [CompilerGeneratedAttribute]
public void set_CustomInlineStyles(string value);
    [CompilerGeneratedAttribute]
public string get_CustomStylesheetPath();
    [CompilerGeneratedAttribute]
public void set_CustomStylesheetPath(string value);
    [CompilerGeneratedAttribute]
public string get_CustomJavaScriptPath();
    [CompilerGeneratedAttribute]
public void set_CustomJavaScriptPath(string value);
    [CompilerGeneratedAttribute]
public bool get_UseModuleTypeForCustomJavaScript();
    [CompilerGeneratedAttribute]
public void set_UseModuleTypeForCustomJavaScript(bool value);
    [CompilerGeneratedAttribute]
public Func`3<string, HttpRequest, string> get_TransformToExternalPath();
    [CompilerGeneratedAttribute]
public void set_TransformToExternalPath(Func`3<string, HttpRequest, string> value);
    internal abstract virtual Task`1<string> TransformHtmlAsync(string html, HttpRequest request, CancellationToken cancellationToken);
    protected string GetCustomStyleHtml(HttpRequest request);
    protected string GetCustomScriptHtml(HttpRequest request);
    protected string GenerateAdditionalSettings(IDictionary`2<string, object> additionalSettings);
}
