[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class NJsonSchema.CodeGeneration.TypeScript.DataConversionGenerator : object {
    public static string RenderConvertToJavaScriptCode(DataConversionParameters parameters);
    public static string RenderConvertToClassCode(DataConversionParameters parameters);
    private static object CreateModel(DataConversionParameters parameters);
    private static string GetStringToDateTime(DataConversionParameters parameters, JsonSchema typeSchema);
    private static string GetDateToString(DataConversionParameters parameters, JsonSchema typeSchema);
    private static string GetDateTimeToString(DataConversionParameters parameters, JsonSchema typeSchema);
    [NullableContextAttribute("2")]
private static bool IsDateTime(string format, TypeScriptDateTimeType type);
    [NullableContextAttribute("2")]
private static bool IsDate(string format, TypeScriptDateTimeType type);
    private static bool IsNewableObject(JsonSchema schema, DataConversionParameters parameters);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RequiredMemberAttribute]
public class NJsonSchema.CodeGeneration.TypeScript.DataConversionParameters : object {
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Variable>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private JsonSchema <Schema>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsPropertyNullable>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CheckNewableObject>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <TypeNameHint>k__BackingField;
    [CompilerGeneratedAttribute]
private TypeScriptTypeResolver <Resolver>k__BackingField;
    [CompilerGeneratedAttribute]
private TypeScriptNullValue <NullValue>k__BackingField;
    [CompilerGeneratedAttribute]
private TypeScriptGeneratorSettings <Settings>k__BackingField;
    [NullableAttribute("2")]
public string Variable { get; public set; }
    [NullableAttribute("2")]
public string Value { get; public set; }
    [RequiredMemberAttribute]
public JsonSchema Schema { get; public set; }
    public bool IsPropertyNullable { get; public set; }
    public bool CheckNewableObject { get; public set; }
    [NullableAttribute("2")]
public string TypeNameHint { get; public set; }
    [RequiredMemberAttribute]
public TypeScriptTypeResolver Resolver { get; public set; }
    public TypeScriptNullValue NullValue { get; public set; }
    [RequiredMemberAttribute]
public TypeScriptGeneratorSettings Settings { get; public set; }
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Variable();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Variable(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Value();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Value(string value);
    [CompilerGeneratedAttribute]
public JsonSchema get_Schema();
    [CompilerGeneratedAttribute]
public void set_Schema(JsonSchema value);
    [CompilerGeneratedAttribute]
public bool get_IsPropertyNullable();
    [CompilerGeneratedAttribute]
public void set_IsPropertyNullable(bool value);
    [CompilerGeneratedAttribute]
public bool get_CheckNewableObject();
    [CompilerGeneratedAttribute]
public void set_CheckNewableObject(bool value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_TypeNameHint();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_TypeNameHint(string value);
    [CompilerGeneratedAttribute]
public TypeScriptTypeResolver get_Resolver();
    [CompilerGeneratedAttribute]
public void set_Resolver(TypeScriptTypeResolver value);
    [CompilerGeneratedAttribute]
public TypeScriptNullValue get_NullValue();
    [CompilerGeneratedAttribute]
public void set_NullValue(TypeScriptNullValue value);
    [CompilerGeneratedAttribute]
public TypeScriptGeneratorSettings get_Settings();
    [CompilerGeneratedAttribute]
public void set_Settings(TypeScriptGeneratorSettings value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class NJsonSchema.CodeGeneration.TypeScript.Models.ClassTemplateModel : ClassTemplateModelBase {
    private TypeScriptGeneratorSettings _settings;
    private JsonSchema _schema;
    private TypeScriptTypeResolver _resolver;
    private string _discriminatorName;
    [CompilerGeneratedAttribute]
private string <ClassName>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<PropertyModel> <Properties>k__BackingField;
    public string ClassName { get; }
    public string DiscriminatorName { get; }
    public bool HasDiscriminator { get; }
    public bool HasBaseDiscriminator { get; }
    [NullableAttribute("2")]
public string BaseDiscriminator { get; }
    public bool HasDescription { get; }
    public string Description { get; }
    public bool HasInheritance { get; }
    public string Inheritance { get; }
    public string InterfaceInheritance { get; }
    [NullableAttribute("2")]
public string BaseClass { get; }
    public bool GenerateCloneMethod { get; }
    public bool GenerateConstructorInterface { get; }
    public bool ConvertConstructorInterfaceData { get; }
    public string NullValue { get; }
    public bool HasIndexerProperty { get; }
    public string IndexerPropertyValueType { get; }
    public bool HandleReferences { get; }
    public bool HasProperties { get; }
    public List`1<PropertyModel> Properties { get; }
    public bool HasDefaultValues { get; }
    public bool RequiresStrictPropertyInitialization { get; }
    public bool SupportsOverrideKeyword { get; }
    public bool ExportTypes { get; }
    public bool GenerateTypeCheckFunctions { get; }
    [NullableAttribute("2")]
private JsonSchema InheritedSchema { get; }
    public ClassTemplateModel(string typeName, string discriminatorName, TypeScriptGeneratorSettings settings, TypeScriptTypeResolver resolver, JsonSchema schema, object rootObject);
    [CompilerGeneratedAttribute]
public virtual string get_ClassName();
    public string get_DiscriminatorName();
    public bool get_HasDiscriminator();
    public bool get_HasBaseDiscriminator();
    [NullableContextAttribute("2")]
public string get_BaseDiscriminator();
    public bool get_HasDescription();
    public string get_Description();
    public bool get_HasInheritance();
    public string get_Inheritance();
    public string get_InterfaceInheritance();
    [NullableContextAttribute("2")]
public string get_BaseClass();
    public bool get_GenerateCloneMethod();
    public bool get_GenerateConstructorInterface();
    public bool get_ConvertConstructorInterfaceData();
    public string get_NullValue();
    public bool get_HasIndexerProperty();
    public string get_IndexerPropertyValueType();
    public bool get_HandleReferences();
    public bool get_HasProperties();
    [CompilerGeneratedAttribute]
public List`1<PropertyModel> get_Properties();
    public bool get_HasDefaultValues();
    public bool get_RequiresStrictPropertyInitialization();
    public bool get_SupportsOverrideKeyword();
    public bool get_ExportTypes();
    public bool get_GenerateTypeCheckFunctions();
    [NullableContextAttribute("2")]
private JsonSchema get_InheritedSchema();
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private bool <get_DiscriminatorName>b__9_0(KeyValuePair`2<string, JsonSchema> m);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class NJsonSchema.CodeGeneration.TypeScript.Models.EnumTemplateModel : object {
    private JsonSchema _schema;
    private TypeScriptGeneratorSettings _settings;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public string Name { get; }
    public bool HasDescription { get; }
    public string Description { get; }
    public bool ExportTypes { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IDictionary`2<string, object> ExtensionData { get; }
    public List`1<EnumerationItemModel> Enums { get; }
    public EnumTemplateModel(string typeName, JsonSchema schema, TypeScriptGeneratorSettings settings);
    [CompilerGeneratedAttribute]
public string get_Name();
    public bool get_HasDescription();
    public string get_Description();
    public bool get_ExportTypes();
    public IDictionary`2<string, object> get_ExtensionData();
    public List`1<EnumerationItemModel> get_Enums();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RequiredMemberAttribute]
public class NJsonSchema.CodeGeneration.TypeScript.Models.FileTemplateModel : object {
    private TypeScriptGeneratorSettings _settings;
    [CompilerGeneratedAttribute]
private string <Types>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private TypeScriptExtensionCode <ExtensionCode>k__BackingField;
    [RequiredMemberAttribute]
public string Types { get; public set; }
    [NullableAttribute("2")]
public TypeScriptExtensionCode ExtensionCode { get; public set; }
    public bool HasModuleName { get; }
    public string ModuleName { get; }
    public bool HasNamespace { get; }
    public string Namespace { get; }
    public bool HandleReferences { get; }
    [ObsoleteAttribute("Constructors of types with required members are not supported in this version of your compiler.", "True")]
[CompilerFeatureRequiredAttribute("RequiredMembers")]
public FileTemplateModel(TypeScriptGeneratorSettings settings);
    [CompilerGeneratedAttribute]
public string get_Types();
    [CompilerGeneratedAttribute]
public void set_Types(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public TypeScriptExtensionCode get_ExtensionCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_ExtensionCode(TypeScriptExtensionCode value);
    public bool get_HasModuleName();
    public string get_ModuleName();
    public bool get_HasNamespace();
    public string get_Namespace();
    public bool get_HandleReferences();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class NJsonSchema.CodeGeneration.TypeScript.Models.PropertyModel : PropertyModelBase {
    private static string _validPropertyNameRegex;
    private string _parentTypeName;
    private TypeScriptGeneratorSettings _settings;
    private ClassTemplateModel _classTemplateModel;
    private JsonSchemaProperty _property;
    private TypeScriptTypeResolver _resolver;
    public string InterfaceName { get; }
    public bool HasDescription { get; }
    [NullableAttribute("2")]
public string Description { get; }
    public string Type { get; }
    public string ConstructorInterfaceType { get; }
    public bool SupportsConstructorConversion { get; }
    public bool IsArray { get; }
    public bool IsDictionary { get; }
    public string ArrayItemType { get; }
    public string DictionaryItemType { get; }
    public string TypePostfix { get; }
    public bool IsReadOnly { get; }
    public bool IsOptional { get; }
    public bool IsDiscriminator { get; }
    public string ConvertToClassCode { get; }
    public string ConvertToJavaScriptCode { get; }
    public PropertyModel(ClassTemplateModel classTemplateModel, JsonSchemaProperty property, string parentTypeName, TypeScriptTypeResolver typeResolver, TypeScriptGeneratorSettings settings);
    private static PropertyModel();
    public string get_InterfaceName();
    public bool get_HasDescription();
    [NullableContextAttribute("2")]
public string get_Description();
    public virtual string get_Type();
    public string get_ConstructorInterfaceType();
    public bool get_SupportsConstructorConversion();
    public bool get_IsArray();
    public bool get_IsDictionary();
    public string get_ArrayItemType();
    public string get_DictionaryItemType();
    public string get_TypePostfix();
    public bool get_IsReadOnly();
    public bool get_IsOptional();
    public bool get_IsDiscriminator();
    public string get_ConvertToClassCode();
    public string get_ConvertToJavaScriptCode();
}
public enum NJsonSchema.CodeGeneration.TypeScript.TypeScriptDateTimeType : Enum {
    public int value__;
    public static TypeScriptDateTimeType Date;
    public static TypeScriptDateTimeType MomentJS;
    public static TypeScriptDateTimeType String;
    public static TypeScriptDateTimeType OffsetMomentJS;
    public static TypeScriptDateTimeType Luxon;
    public static TypeScriptDateTimeType DayJS;
}
public enum NJsonSchema.CodeGeneration.TypeScript.TypeScriptEnumStyle : Enum {
    public int value__;
    public static TypeScriptEnumStyle Enum;
    public static TypeScriptEnumStyle StringLiteral;
}
public class NJsonSchema.CodeGeneration.TypeScript.TypeScriptExtensionCode : ExtensionCode {
    [NullableContextAttribute("1")]
public TypeScriptExtensionCode(string code, String[] extendedClasses, String[] baseClasses);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class NJsonSchema.CodeGeneration.TypeScript.TypeScriptGenerator : GeneratorBase {
    private TypeScriptTypeResolver _resolver;
    [NullableAttribute("2")]
private TypeScriptExtensionCode _extensionCode;
    [CompilerGeneratedAttribute]
private TypeScriptGeneratorSettings <Settings>k__BackingField;
    public TypeScriptGeneratorSettings Settings { get; }
    public TypeScriptGenerator(JsonSchema schema);
    public TypeScriptGenerator(object rootObject, TypeScriptGeneratorSettings settings);
    public TypeScriptGenerator(object rootObject, TypeScriptGeneratorSettings settings, TypeScriptTypeResolver resolver);
    [CompilerGeneratedAttribute]
public TypeScriptGeneratorSettings get_Settings();
    public virtual IEnumerable`1<CodeArtifact> GenerateTypes();
    [IteratorStateMachineAttribute("NJsonSchema.CodeGeneration.TypeScript.TypeScriptGenerator/<GenerateTypes>d__9")]
public IEnumerable`1<CodeArtifact> GenerateTypes(TypeScriptExtensionCode extensionCode);
    protected virtual string GenerateFile(IEnumerable`1<CodeArtifact> artifacts);
    protected virtual CodeArtifact GenerateType(JsonSchema schema, string typeNameHint);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<CodeArtifact> <>n__0();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class NJsonSchema.CodeGeneration.TypeScript.TypeScriptGeneratorSettings : CodeGeneratorSettingsBase {
    [CompilerGeneratedAttribute]
private decimal <TypeScriptVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <MarkOptionalProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private TypeScriptTypeStyle <TypeStyle>k__BackingField;
    [CompilerGeneratedAttribute]
private TypeScriptDateTimeType <DateTimeType>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ConvertDateToLocalTimezone>k__BackingField;
    [CompilerGeneratedAttribute]
private TypeScriptEnumStyle <EnumStyle>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseLeafType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ModuleName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Namespace>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <ExtendedClasses>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ExtensionCode>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <ClassTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private TypeScriptNullValue <NullValue>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HandleReferences>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <GenerateCloneMethod>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <GenerateConstructorInterface>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ConvertConstructorInterfaceData>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ExportTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <InlineNamedDictionaries>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <GenerateTypeCheckFunctions>k__BackingField;
    public decimal TypeScriptVersion { get; public set; }
    public bool SupportsStrictNullChecks { get; }
    public bool RequiresStrictPropertyInitialization { get; }
    public bool SupportsOverrideKeyword { get; }
    public bool MarkOptionalProperties { get; public set; }
    public TypeScriptTypeStyle TypeStyle { get; public set; }
    public TypeScriptDateTimeType DateTimeType { get; public set; }
    public bool ConvertDateToLocalTimezone { get; public set; }
    public TypeScriptEnumStyle EnumStyle { get; public set; }
    public bool UseLeafType { get; public set; }
    public string ModuleName { get; public set; }
    public string Namespace { get; public set; }
    public String[] ExtendedClasses { get; public set; }
    public string ExtensionCode { get; public set; }
    public String[] ClassTypes { get; public set; }
    public TypeScriptNullValue NullValue { get; public set; }
    public bool HandleReferences { get; public set; }
    public bool GenerateCloneMethod { get; public set; }
    public bool GenerateConstructorInterface { get; public set; }
    public bool ConvertConstructorInterfaceData { get; public set; }
    public bool ExportTypes { get; public set; }
    public bool InlineNamedDictionaries { get; public set; }
    public bool GenerateTypeCheckFunctions { get; public set; }
    [CompilerGeneratedAttribute]
public decimal get_TypeScriptVersion();
    [CompilerGeneratedAttribute]
public void set_TypeScriptVersion(decimal value);
    public bool get_SupportsStrictNullChecks();
    public bool get_RequiresStrictPropertyInitialization();
    public bool get_SupportsOverrideKeyword();
    [CompilerGeneratedAttribute]
public bool get_MarkOptionalProperties();
    [CompilerGeneratedAttribute]
public void set_MarkOptionalProperties(bool value);
    [CompilerGeneratedAttribute]
public TypeScriptTypeStyle get_TypeStyle();
    [CompilerGeneratedAttribute]
public void set_TypeStyle(TypeScriptTypeStyle value);
    [CompilerGeneratedAttribute]
public TypeScriptDateTimeType get_DateTimeType();
    [CompilerGeneratedAttribute]
public void set_DateTimeType(TypeScriptDateTimeType value);
    [CompilerGeneratedAttribute]
public bool get_ConvertDateToLocalTimezone();
    [CompilerGeneratedAttribute]
public void set_ConvertDateToLocalTimezone(bool value);
    [CompilerGeneratedAttribute]
public TypeScriptEnumStyle get_EnumStyle();
    [CompilerGeneratedAttribute]
public void set_EnumStyle(TypeScriptEnumStyle value);
    [CompilerGeneratedAttribute]
public bool get_UseLeafType();
    [CompilerGeneratedAttribute]
public void set_UseLeafType(bool value);
    [CompilerGeneratedAttribute]
public string get_ModuleName();
    [CompilerGeneratedAttribute]
public void set_ModuleName(string value);
    [CompilerGeneratedAttribute]
public string get_Namespace();
    [CompilerGeneratedAttribute]
public void set_Namespace(string value);
    [CompilerGeneratedAttribute]
public String[] get_ExtendedClasses();
    [CompilerGeneratedAttribute]
public void set_ExtendedClasses(String[] value);
    [CompilerGeneratedAttribute]
public string get_ExtensionCode();
    [CompilerGeneratedAttribute]
public void set_ExtensionCode(string value);
    [CompilerGeneratedAttribute]
public String[] get_ClassTypes();
    [CompilerGeneratedAttribute]
public void set_ClassTypes(String[] value);
    [CompilerGeneratedAttribute]
public TypeScriptNullValue get_NullValue();
    [CompilerGeneratedAttribute]
public void set_NullValue(TypeScriptNullValue value);
    [CompilerGeneratedAttribute]
public bool get_HandleReferences();
    [CompilerGeneratedAttribute]
public void set_HandleReferences(bool value);
    [CompilerGeneratedAttribute]
public bool get_GenerateCloneMethod();
    [CompilerGeneratedAttribute]
public void set_GenerateCloneMethod(bool value);
    [CompilerGeneratedAttribute]
public bool get_GenerateConstructorInterface();
    [CompilerGeneratedAttribute]
public void set_GenerateConstructorInterface(bool value);
    [CompilerGeneratedAttribute]
public bool get_ConvertConstructorInterfaceData();
    [CompilerGeneratedAttribute]
public void set_ConvertConstructorInterfaceData(bool value);
    [CompilerGeneratedAttribute]
public bool get_ExportTypes();
    [CompilerGeneratedAttribute]
public void set_ExportTypes(bool value);
    [CompilerGeneratedAttribute]
public bool get_InlineNamedDictionaries();
    [CompilerGeneratedAttribute]
public void set_InlineNamedDictionaries(bool value);
    [CompilerGeneratedAttribute]
public bool get_GenerateTypeCheckFunctions();
    [CompilerGeneratedAttribute]
public void set_GenerateTypeCheckFunctions(bool value);
    internal ITemplate CreateTemplate(string typeName, object model);
    public TypeScriptTypeStyle GetTypeStyle(string typeName);
}
public enum NJsonSchema.CodeGeneration.TypeScript.TypeScriptNullValue : Enum {
    public int value__;
    public static TypeScriptNullValue Null;
    public static TypeScriptNullValue Undefined;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class NJsonSchema.CodeGeneration.TypeScript.TypeScriptPropertyNameGenerator : object {
    private static Char[] _reservedFirstPassChars;
    private static Char[] _reservedSecondPassChars;
    [CompilerGeneratedAttribute]
private HashSet`1<string> <ReservedPropertyNames>k__BackingField;
    public HashSet`1<string> ReservedPropertyNames { get; public set; }
    private static TypeScriptPropertyNameGenerator();
    [CompilerGeneratedAttribute]
public HashSet`1<string> get_ReservedPropertyNames();
    [CompilerGeneratedAttribute]
public void set_ReservedPropertyNames(HashSet`1<string> value);
    public sealed virtual string Generate(JsonSchemaProperty property);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class NJsonSchema.CodeGeneration.TypeScript.TypeScriptTypeResolver : TypeResolverBase {
    private static string UnionPipe;
    [CompilerGeneratedAttribute]
private TypeScriptGeneratorSettings <Settings>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Namespace>k__BackingField;
    public TypeScriptGeneratorSettings Settings { get; }
    [NullableAttribute("2")]
public string Namespace { get; public set; }
    public TypeScriptTypeResolver(TypeScriptGeneratorSettings settings);
    [CompilerGeneratedAttribute]
public TypeScriptGeneratorSettings get_Settings();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Namespace();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Namespace(string value);
    public string ResolveConstructorInterfaceName(JsonSchema schema, bool isNullable, string typeNameHint);
    public virtual string Resolve(JsonSchema schema, bool isNullable, string typeNameHint);
    [NullableContextAttribute("2")]
public bool SupportsConstructorConversion(JsonSchema schema);
    protected virtual bool IsDefinitionTypeSchema(JsonSchema schema);
    private string Resolve(JsonSchema schema, string typeNameHint, bool addInterfacePrefix);
    private string ResolveString(JsonSchema schema, string typeNameHint);
    private static string ResolveInteger(JsonSchema schema, string typeNameHint);
    private string ResolveArrayOrTuple(JsonSchema schema, string typeNameHint, bool addInterfacePrefix);
    private string GetNullableItemType(JsonSchema schema, string itemType);
}
public enum NJsonSchema.CodeGeneration.TypeScript.TypeScriptTypeStyle : Enum {
    public int value__;
    public static TypeScriptTypeStyle Interface;
    public static TypeScriptTypeStyle Class;
    public static TypeScriptTypeStyle KnockoutClass;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class NJsonSchema.CodeGeneration.TypeScript.TypeScriptValueGenerator : ValueGeneratorBase {
    private List`1<string> _supportedFormatStrings;
    public TypeScriptValueGenerator(TypeScriptGeneratorSettings settings);
    protected virtual string GetEnumDefaultValue(JsonSchema schema, JsonSchema actualSchema, string typeNameHint, TypeResolverBase typeResolver);
    public virtual string GetDefaultValue(JsonSchema schema, bool allowsNull, string targetType, string typeNameHint, bool useSchemaDefault, TypeResolverBase typeResolver);
    public virtual string GetNumericValue(JsonObjectType type, object value, string format);
}
[ExtensionAttribute]
internal static class NJsonSchema.EnumExtensions : object {
    private static MethodImplOptions OptionAggressiveInlining;
    [ExtensionAttribute]
public static bool IsNull(JsonObjectType type);
    [ExtensionAttribute]
public static bool IsNumber(JsonObjectType type);
    [ExtensionAttribute]
public static bool IsObject(JsonObjectType type);
    [ExtensionAttribute]
public static bool IsArray(JsonObjectType type);
    [ExtensionAttribute]
public static bool IsInteger(JsonObjectType type);
    [ExtensionAttribute]
public static bool IsString(JsonObjectType type);
    [ExtensionAttribute]
public static bool IsBoolean(JsonObjectType type);
    [ExtensionAttribute]
public static bool IsFile(JsonObjectType type);
    [ExtensionAttribute]
public static bool IsNone(JsonObjectType type);
}
[AttributeUsageAttribute("2432")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.AllowNullAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.DisallowNullAttribute : Attribute {
}
[AttributeUsageAttribute("64")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ParameterValue>k__BackingField;
    public bool ParameterValue { get; }
    public DoesNotReturnIfAttribute(bool parameterValue);
    [CompilerGeneratedAttribute]
public bool get_ParameterValue();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("6143")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.ExperimentalAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <DiagnosticId>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <UrlFormat>k__BackingField;
    public string DiagnosticId { get; }
    [NullableAttribute("2")]
public string UrlFormat { get; public set; }
    public ExperimentalAttribute(string diagnosticId);
    [CompilerGeneratedAttribute]
public string get_DiagnosticId();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_UrlFormat();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_UrlFormat(string value);
}
[AttributeUsageAttribute("10624")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.MaybeNullAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public MaybeNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("192")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public String[] Members { get; }
    public MemberNotNullAttribute(string member);
    public MemberNotNullAttribute(String[] members);
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("192")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public bool ReturnValue { get; }
    public String[] Members { get; }
    public MemberNotNullWhenAttribute(bool returnValue, string member);
    public MemberNotNullWhenAttribute(bool returnValue, String[] members);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[AttributeUsageAttribute("10624")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.NotNullAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("10368")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ParameterName>k__BackingField;
    public string ParameterName { get; }
    public NotNullIfNotNullAttribute(string parameterName);
    [CompilerGeneratedAttribute]
public string get_ParameterName();
}
[AttributeUsageAttribute("2048")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.NotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public NotNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[AttributeUsageAttribute("32")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.SetsRequiredMembersAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("2432")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.StringSyntaxAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Syntax>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Object[] <Arguments>k__BackingField;
    public static string CompositeFormat;
    public static string DateOnlyFormat;
    public static string DateTimeFormat;
    public static string EnumFormat;
    public static string GuidFormat;
    public static string Json;
    public static string NumericFormat;
    public static string Regex;
    public static string TimeOnlyFormat;
    public static string TimeSpanFormat;
    public static string Uri;
    public static string Xml;
    public string Syntax { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Object[] Arguments { get; }
    public StringSyntaxAttribute(string syntax);
    public StringSyntaxAttribute(string syntax, Object[] arguments);
    [CompilerGeneratedAttribute]
public string get_Syntax();
    [CompilerGeneratedAttribute]
public Object[] get_Arguments();
}
[AttributeUsageAttribute("2240")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Diagnostics.CodeAnalysis.UnscopedRefAttribute : Attribute {
}
[IsReadOnlyAttribute]
[ExcludeFromCodeCoverageAttribute]
internal class System.Index : ValueType {
    private int _value;
    public static Index Start { get; }
    public static Index End { get; }
    public int Value { get; }
    public bool IsFromEnd { get; }
    public Index(int value, bool fromEnd);
    private Index(int value);
    public static Index get_Start();
    public static Index get_End();
    public static Index FromStart(int value);
    public static Index FromEnd(int value);
    public int get_Value();
    public bool get_IsFromEnd();
    public int GetOffset(int length);
    [NullableContextAttribute("2")]
public virtual bool Equals(object value);
    public sealed virtual bool Equals(Index other);
    public virtual int GetHashCode();
    public static Index op_Implicit(int value);
    [NullableContextAttribute("1")]
public virtual string ToString();
    [NullableContextAttribute("1")]
private string ToStringFromEnd();
}
[IsReadOnlyAttribute]
[ExcludeFromCodeCoverageAttribute]
internal class System.Range : ValueType {
    [CompilerGeneratedAttribute]
private Index <Start>k__BackingField;
    [CompilerGeneratedAttribute]
private Index <End>k__BackingField;
    public Index Start { get; }
    public Index End { get; }
    public static Range All { get; }
    public Range(Index start, Index end);
    [CompilerGeneratedAttribute]
public Index get_Start();
    [CompilerGeneratedAttribute]
public Index get_End();
    [NullableContextAttribute("2")]
public virtual bool Equals(object value);
    public sealed virtual bool Equals(Range other);
    public virtual int GetHashCode();
    [NullableContextAttribute("1")]
public virtual string ToString();
    public static Range StartAt(Index start);
    public static Range EndAt(Index end);
    public static Range get_All();
    public ValueTuple`2<int, int> GetOffsetAndLength(int length);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("2048")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Runtime.CompilerServices.CallerArgumentExpressionAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ParameterName>k__BackingField;
    public string ParameterName { get; }
    public CallerArgumentExpressionAttribute(string parameterName);
    [CompilerGeneratedAttribute]
public string get_ParameterName();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("1036")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Runtime.CompilerServices.CollectionBuilderAttribute : Attribute {
    [CompilerGeneratedAttribute]
private Type <BuilderType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MethodName>k__BackingField;
    public Type BuilderType { get; }
    public string MethodName { get; }
    public CollectionBuilderAttribute(Type builderType, string methodName);
    [CompilerGeneratedAttribute]
public Type get_BuilderType();
    [CompilerGeneratedAttribute]
public string get_MethodName();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("2048")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Runtime.CompilerServices.InterpolatedStringHandlerArgumentAttribute : Attribute {
    [CompilerGeneratedAttribute]
private String[] <Arguments>k__BackingField;
    public String[] Arguments { get; }
    public InterpolatedStringHandlerArgumentAttribute(string argument);
    public InterpolatedStringHandlerArgumentAttribute(String[] arguments);
    [CompilerGeneratedAttribute]
public String[] get_Arguments();
}
[AttributeUsageAttribute("12")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Runtime.CompilerServices.InterpolatedStringHandlerAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class System.Runtime.CompilerServices.IsReadOnlyAttribute : Attribute {
}
[AttributeUsageAttribute("64")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Runtime.CompilerServices.ModuleInitializerAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
[AttributeUsageAttribute("2048")]
[EditorBrowsableAttribute("1")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Runtime.CompilerServices.RequiresLocationAttribute : Attribute {
}
[AttributeUsageAttribute("1774")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Runtime.CompilerServices.SkipLocalsInitAttribute : Attribute {
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("6143")]
[ExcludeFromCodeCoverageAttribute]
internal class System.Runtime.Versioning.RequiresPreviewFeaturesAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    public string Message { get; }
    public string Url { get; public set; }
    public RequiresPreviewFeaturesAttribute(string message);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
}
