public interface NSwag.SwaggerGeneration.ISwaggerDocumentProvider {
    public abstract virtual Task`1<SwaggerDocument> GenerateAsync(string documentName);
}
public interface NSwag.SwaggerGeneration.ISwaggerGenerator {
    public abstract virtual Task`1<SwaggerDocument> GenerateAsync(object serviceProvider);
}
public class NSwag.SwaggerGeneration.Processors.ActionDocumentProcessor : object {
    private Func`2<DocumentProcessorContext, Task> _action;
    public ActionDocumentProcessor(Action`1<DocumentProcessorContext> action);
    public ActionDocumentProcessor(Func`2<DocumentProcessorContext, Task> action);
    [AsyncStateMachineAttribute("NSwag.SwaggerGeneration.Processors.ActionDocumentProcessor/<ProcessAsync>d__3")]
public sealed virtual Task ProcessAsync(DocumentProcessorContext context);
}
public class NSwag.SwaggerGeneration.Processors.ApiVersionProcessor : object {
    [CompilerGeneratedAttribute]
private String[] <IncludedVersions>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IgnoreParameter>k__BackingField;
    public String[] IncludedVersions { get; public set; }
    public bool IgnoreParameter { get; public set; }
    [CompilerGeneratedAttribute]
public String[] get_IncludedVersions();
    [CompilerGeneratedAttribute]
public void set_IncludedVersions(String[] value);
    [CompilerGeneratedAttribute]
public bool get_IgnoreParameter();
    [CompilerGeneratedAttribute]
public void set_IgnoreParameter(bool value);
    public sealed virtual Task`1<bool> ProcessAsync(OperationProcessorContext context);
    private bool UseVersionedApiExplorer(OperationProcessorContext context);
    private void RemoveApiVersionPathParameter(OperationProcessorContext context, string version);
    private String[] GetVersions(OperationProcessorContext context, string attributeType);
    [CompilerGeneratedAttribute]
private bool <ProcessAsync>b__8_0(string v);
    [CompilerGeneratedAttribute]
private bool <ProcessAsync>b__8_1(string v);
}
public class NSwag.SwaggerGeneration.Processors.Collections.DocumentProcessorCollection : Collection`1<IDocumentProcessor> {
    public T TryGet();
}
public class NSwag.SwaggerGeneration.Processors.Collections.OperationProcessorCollection : Collection`1<IOperationProcessor> {
    public T TryGet();
    public bool Replace(IOperationProcessor newItem);
}
public class NSwag.SwaggerGeneration.Processors.Contexts.DocumentProcessorContext : object {
    [CompilerGeneratedAttribute]
private SwaggerDocument <Document>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<Type> <AllControllerTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<Type> <ControllerTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private JsonSchemaResolver <SchemaResolver>k__BackingField;
    [CompilerGeneratedAttribute]
private JsonSchemaGenerator <SchemaGenerator>k__BackingField;
    [CompilerGeneratedAttribute]
private SwaggerGeneratorSettings <Settings>k__BackingField;
    public SwaggerDocument Document { get; }
    public IEnumerable`1<Type> AllControllerTypes { get; }
    public IEnumerable`1<Type> ControllerTypes { get; }
    public JsonSchemaResolver SchemaResolver { get; }
    public JsonSchemaGenerator SchemaGenerator { get; }
    public SwaggerGeneratorSettings Settings { get; }
    public DocumentProcessorContext(SwaggerDocument document, IEnumerable`1<Type> allControllerTypes, IEnumerable`1<Type> controllerTypes, JsonSchemaResolver schemaResolver, JsonSchemaGenerator schemaGenerator, SwaggerGeneratorSettings settings);
    [CompilerGeneratedAttribute]
public SwaggerDocument get_Document();
    [CompilerGeneratedAttribute]
public IEnumerable`1<Type> get_AllControllerTypes();
    [CompilerGeneratedAttribute]
public IEnumerable`1<Type> get_ControllerTypes();
    [CompilerGeneratedAttribute]
public JsonSchemaResolver get_SchemaResolver();
    [CompilerGeneratedAttribute]
public JsonSchemaGenerator get_SchemaGenerator();
    [CompilerGeneratedAttribute]
public SwaggerGeneratorSettings get_Settings();
}
public class NSwag.SwaggerGeneration.Processors.Contexts.OperationProcessorContext : object {
    [CompilerGeneratedAttribute]
private SwaggerDocument <Document>k__BackingField;
    [CompilerGeneratedAttribute]
private SwaggerOperationDescription <OperationDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <ControllerType>k__BackingField;
    [CompilerGeneratedAttribute]
private MethodInfo <MethodInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private SwaggerGenerator <SwaggerGenerator>k__BackingField;
    [CompilerGeneratedAttribute]
private JsonSchemaResolver <SchemaResolver>k__BackingField;
    [CompilerGeneratedAttribute]
private SwaggerGeneratorSettings <Settings>k__BackingField;
    [CompilerGeneratedAttribute]
private JsonSchemaGenerator <SchemaGenerator>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<SwaggerOperationDescription> <AllOperationDescriptions>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<ParameterInfo, SwaggerParameter> <Parameters>k__BackingField;
    public SwaggerDocument Document { get; }
    public SwaggerOperationDescription OperationDescription { get; }
    public Type ControllerType { get; }
    public MethodInfo MethodInfo { get; }
    public SwaggerGenerator SwaggerGenerator { get; }
    public JsonSchemaResolver SchemaResolver { get; }
    public SwaggerGeneratorSettings Settings { get; }
    public JsonSchemaGenerator SchemaGenerator { get; }
    public IList`1<SwaggerOperationDescription> AllOperationDescriptions { get; }
    public IReadOnlyDictionary`2<ParameterInfo, SwaggerParameter> Parameters { get; }
    public OperationProcessorContext(SwaggerDocument document, SwaggerOperationDescription operationDescription, Type controllerType, MethodInfo methodInfo, SwaggerGenerator swaggerGenerator, JsonSchemaGenerator schemaGenerator, JsonSchemaResolver schemaResolver, SwaggerGeneratorSettings settings, IList`1<SwaggerOperationDescription> allOperationDescriptions);
    [CompilerGeneratedAttribute]
public SwaggerDocument get_Document();
    [CompilerGeneratedAttribute]
public SwaggerOperationDescription get_OperationDescription();
    [CompilerGeneratedAttribute]
public Type get_ControllerType();
    [CompilerGeneratedAttribute]
public MethodInfo get_MethodInfo();
    [CompilerGeneratedAttribute]
public SwaggerGenerator get_SwaggerGenerator();
    [CompilerGeneratedAttribute]
public JsonSchemaResolver get_SchemaResolver();
    [CompilerGeneratedAttribute]
public SwaggerGeneratorSettings get_Settings();
    [CompilerGeneratedAttribute]
public JsonSchemaGenerator get_SchemaGenerator();
    [CompilerGeneratedAttribute]
public IList`1<SwaggerOperationDescription> get_AllOperationDescriptions();
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<ParameterInfo, SwaggerParameter> get_Parameters();
}
public class NSwag.SwaggerGeneration.Processors.DocumentExtensionDataProcessor : object {
    public sealed virtual Task ProcessAsync(DocumentProcessorContext context);
}
public class NSwag.SwaggerGeneration.Processors.DocumentTagsProcessor : object {
    [AsyncStateMachineAttribute("NSwag.SwaggerGeneration.Processors.DocumentTagsProcessor/<ProcessAsync>d__0")]
public sealed virtual Task ProcessAsync(DocumentProcessorContext context);
    private static void ProcessSwaggerTagsAttribute(SwaggerDocument document, Type controllerType);
    private static void ProcessSwaggerTagAttributes(SwaggerDocument document, Type controllerType);
    internal static void AddTagFromSwaggerTagAttribute(SwaggerDocument document, object tagAttribute);
}
public interface NSwag.SwaggerGeneration.Processors.IDocumentProcessor {
    public abstract virtual Task ProcessAsync(DocumentProcessorContext context);
}
public interface NSwag.SwaggerGeneration.Processors.IOperationProcessor {
    public abstract virtual Task`1<bool> ProcessAsync(OperationProcessorContext context);
}
public class NSwag.SwaggerGeneration.Processors.OperationExtensionDataProcessor : object {
    public sealed virtual Task`1<bool> ProcessAsync(OperationProcessorContext context);
}
public class NSwag.SwaggerGeneration.Processors.OperationProcessor : object {
    private Func`2<OperationProcessorContext, Task`1<bool>> _func;
    public OperationProcessor(Func`2<OperationProcessorContext, Task`1<bool>> func);
    [AsyncStateMachineAttribute("NSwag.SwaggerGeneration.Processors.OperationProcessor/<ProcessAsync>d__2")]
public sealed virtual Task`1<bool> ProcessAsync(OperationProcessorContext context);
}
public class NSwag.SwaggerGeneration.Processors.OperationResponseDescription : object {
    [CompilerGeneratedAttribute]
private string <StatusCode>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <ResponseType>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsNullable>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    public string StatusCode { get; }
    public Type ResponseType { get; }
    public bool IsNullable { get; }
    public string Description { get; }
    public OperationResponseDescription(string statusCode, Type responseType, bool isNullable, string description);
    [CompilerGeneratedAttribute]
public string get_StatusCode();
    [CompilerGeneratedAttribute]
public Type get_ResponseType();
    [CompilerGeneratedAttribute]
public bool get_IsNullable();
    [CompilerGeneratedAttribute]
public string get_Description();
}
public abstract class NSwag.SwaggerGeneration.Processors.OperationResponseProcessorBase : object {
    private SwaggerGeneratorSettings _settings;
    public OperationResponseProcessorBase(SwaggerGeneratorSettings settings);
    protected abstract virtual string GetVoidResponseStatusCode();
    [AsyncStateMachineAttribute("NSwag.SwaggerGeneration.Processors.OperationResponseProcessorBase/<ProcessResponseTypeAttributes>d__3")]
public Task ProcessResponseTypeAttributes(OperationProcessorContext operationProcessorContext, IEnumerable`1<Attribute> responseTypeAttributes);
    protected IEnumerable`1<Attribute> GetParameterAttributes(ParameterInfo parameter);
    [AsyncStateMachineAttribute("NSwag.SwaggerGeneration.Processors.OperationResponseProcessorBase/<UpdateResponseDescriptionAsync>d__5")]
protected Task UpdateResponseDescriptionAsync(OperationProcessorContext operationProcessorContext);
    [IteratorStateMachineAttribute("NSwag.SwaggerGeneration.Processors.OperationResponseProcessorBase/<GetOperationResponseDescriptions>d__6")]
private IEnumerable`1<OperationResponseDescription> GetOperationResponseDescriptions(IEnumerable`1<Attribute> responseTypeAttributes, string successResponseDescription);
    [AsyncStateMachineAttribute("NSwag.SwaggerGeneration.Processors.OperationResponseProcessorBase/<ProcessOperationDescriptionsAsync>d__7")]
private Task ProcessOperationDescriptionsAsync(IEnumerable`1<OperationResponseDescription> operationDescriptions, ParameterInfo returnParameter, OperationProcessorContext context, string successResponseDescription);
    [AsyncStateMachineAttribute("NSwag.SwaggerGeneration.Processors.OperationResponseProcessorBase/<GenerateExpectedSchemasAsync>d__8")]
private Task`1<ICollection`1<JsonExpectedSchema>> GenerateExpectedSchemasAsync(IGrouping`2<string, OperationResponseDescription> group, OperationProcessorContext context);
    [AsyncStateMachineAttribute("NSwag.SwaggerGeneration.Processors.OperationResponseProcessorBase/<LoadDefaultSuccessResponseAsync>d__9")]
private Task LoadDefaultSuccessResponseAsync(ParameterInfo returnParameter, string successXmlDescription, OperationProcessorContext context);
    private bool IsVoidResponse(Type returnType);
}
public class NSwag.SwaggerGeneration.Processors.OperationSummaryAndDescriptionProcessor : object {
    [AsyncStateMachineAttribute("NSwag.SwaggerGeneration.Processors.OperationSummaryAndDescriptionProcessor/<ProcessAsync>d__0")]
public sealed virtual Task`1<bool> ProcessAsync(OperationProcessorContext context);
}
public class NSwag.SwaggerGeneration.Processors.OperationTagsProcessor : object {
    public sealed virtual Task`1<bool> ProcessAsync(OperationProcessorContext context);
    protected virtual void AddControllerNameTag(OperationProcessorContext context);
    private void ProcessSwaggerTagAttributes(SwaggerDocument document, SwaggerOperationDescription operationDescription, MethodInfo methodInfo);
    private void ProcessSwaggerTagsAttribute(SwaggerDocument document, SwaggerOperationDescription operationDescription, MethodInfo methodInfo);
}
public class NSwag.SwaggerGeneration.Processors.Security.OperationSecurityScopeProcessor : object {
    private string _name;
    public OperationSecurityScopeProcessor(string name);
    public sealed virtual Task`1<bool> ProcessAsync(OperationProcessorContext context);
    protected virtual IEnumerable`1<string> GetScopes(SwaggerOperationDescription operationDescription, MethodInfo methodInfo);
}
public class NSwag.SwaggerGeneration.Processors.Security.SecurityDefinitionAppender : object {
    private string _name;
    private IEnumerable`1<string> _scopeNames;
    private SwaggerSecurityScheme _swaggerSecurityScheme;
    [ObsoleteAttribute("Use the constructor with scopeNames parameter instead.")]
public SecurityDefinitionAppender(string name, SwaggerSecurityScheme swaggerSecurityScheme);
    public SecurityDefinitionAppender(string name, IEnumerable`1<string> scopeNames, SwaggerSecurityScheme swaggerSecurityScheme);
    [AsyncStateMachineAttribute("NSwag.SwaggerGeneration.Processors.Security.SecurityDefinitionAppender/<ProcessAsync>d__5")]
public sealed virtual Task ProcessAsync(DocumentProcessorContext context);
}
public class NSwag.SwaggerGeneration.SwaggerGenerator : object {
    private JsonSchemaGenerator _schemaGenerator;
    private JsonSchemaResolver _schemaResolver;
    private JsonSchemaGeneratorSettings _settings;
    public SwaggerGenerator(JsonSchemaGenerator schemaGenerator, JsonSchemaGeneratorSettings schemaGeneratorSettings, JsonSchemaResolver schemaResolver);
    public SwaggerParameter CreateUntypedPathParameter(string parameterName, string parameterType);
    [AsyncStateMachineAttribute("NSwag.SwaggerGeneration.SwaggerGenerator/<CreatePrimitiveParameterAsync>d__5")]
public Task`1<SwaggerParameter> CreatePrimitiveParameterAsync(string name, ParameterInfo parameter);
    [AsyncStateMachineAttribute("NSwag.SwaggerGeneration.SwaggerGenerator/<CreatePrimitiveParameterAsync>d__6")]
public Task`1<SwaggerParameter> CreatePrimitiveParameterAsync(string name, string description, Type parameterType, IEnumerable`1<Attribute> parentAttributes);
    private bool IsParameterRequired(ParameterInfo parameter);
}
public class NSwag.SwaggerGeneration.SwaggerGeneratorSettings : JsonSchemaGeneratorSettings {
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowNullableBodyParameters>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceTypeNullHandling <DefaultResponseReferenceTypeNullHandling>k__BackingField;
    [CompilerGeneratedAttribute]
private OperationProcessorCollection <OperationProcessors>k__BackingField;
    [CompilerGeneratedAttribute]
private DocumentProcessorCollection <DocumentProcessors>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DocumentTemplate>k__BackingField;
    public string Title { get; public set; }
    public string Description { get; public set; }
    public string Version { get; public set; }
    public bool AllowNullableBodyParameters { get; public set; }
    public ReferenceTypeNullHandling DefaultResponseReferenceTypeNullHandling { get; public set; }
    [JsonIgnoreAttribute]
public OperationProcessorCollection OperationProcessors { get; }
    [JsonIgnoreAttribute]
public DocumentProcessorCollection DocumentProcessors { get; }
    public string DocumentTemplate { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
    [CompilerGeneratedAttribute]
public bool get_AllowNullableBodyParameters();
    [CompilerGeneratedAttribute]
public void set_AllowNullableBodyParameters(bool value);
    [CompilerGeneratedAttribute]
public ReferenceTypeNullHandling get_DefaultResponseReferenceTypeNullHandling();
    [CompilerGeneratedAttribute]
public void set_DefaultResponseReferenceTypeNullHandling(ReferenceTypeNullHandling value);
    [CompilerGeneratedAttribute]
public OperationProcessorCollection get_OperationProcessors();
    [CompilerGeneratedAttribute]
public DocumentProcessorCollection get_DocumentProcessors();
    [CompilerGeneratedAttribute]
public string get_DocumentTemplate();
    [CompilerGeneratedAttribute]
public void set_DocumentTemplate(string value);
    public void AddOperationFilter(Func`2<OperationProcessorContext, Task`1<bool>> filter);
    public void ApplySettings(JsonSerializerSettings serializerSettings, object mvcOptions);
}
public class NSwag.SwaggerGeneration.SwaggerJsonSchemaGenerator : JsonSchemaGenerator {
    private bool _isRootType;
    public SwaggerJsonSchemaGenerator(JsonSchemaGeneratorSettings settings);
    [AsyncStateMachineAttribute("NSwag.SwaggerGeneration.SwaggerJsonSchemaGenerator/<GenerateObjectAsync>d__2")]
protected virtual Task GenerateObjectAsync(Type type, JsonTypeDescription typeDescription, JsonSchema4 schema, JsonSchemaResolver schemaResolver);
    [AsyncStateMachineAttribute("NSwag.SwaggerGeneration.SwaggerJsonSchemaGenerator/<GenerateWithReferenceAndNullabilityAsync>d__3`1")]
public virtual Task`1<TSchemaType> GenerateWithReferenceAndNullabilityAsync(Type type, IEnumerable`1<Attribute> parentAttributes, bool isNullable, JsonSchemaResolver schemaResolver, Func`3<TSchemaType, JsonSchema4, Task> transformation);
    private bool IsFileResponse(Type returnType);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task <>n__0(Type type, JsonTypeDescription typeDescription, JsonSchema4 schema, JsonSchemaResolver schemaResolver);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<TSchemaType> <>n__1(Type type, IEnumerable`1<Attribute> parentAttributes, bool isNullable, JsonSchemaResolver schemaResolver, Func`3<TSchemaType, JsonSchema4, Task> transformation);
}
