[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[PublicAPIAttribute]
internal class Nuke.Build.Shared.Link : object {
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public string Text { get; }
    public string Url { get; }
    public Link(string Text, string Url);
    [CompilerGeneratedAttribute]
protected Link(Link original);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public string get_Text();
    [CompilerGeneratedAttribute]
public string get_Url();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual string ToString();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(Link left, Link right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(Link left, Link right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(Link other);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual Link <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(String& Text, String& Url);
}
[PublicAPIAttribute]
internal class Nuke.Build.Shared.Notification : object {
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    [CompilerGeneratedAttribute]
private Link[] <Links>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
protected Type EqualityContract { get; }
    public string Title { get; }
    public string Text { get; }
    public Link[] Links { get; }
    public Notification(string Title, string Text, Link[] Links);
    [CompilerGeneratedAttribute]
protected Notification(Notification original);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual Type get_EqualityContract();
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
public string get_Text();
    [CompilerGeneratedAttribute]
public Link[] get_Links();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual string ToString();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
protected virtual bool PrintMembers(StringBuilder builder);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Inequality(Notification left, Notification right);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static bool op_Equality(Notification left, Notification right);
    [CompilerGeneratedAttribute]
public virtual int GetHashCode();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(object obj);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual bool Equals(Notification other);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual Notification <Clone>$();
    [CompilerGeneratedAttribute]
public void Deconstruct(String& Title, String& Text, Link[]& Links);
}
[PublicAPIAttribute]
internal class Nuke.Build.Shared.NotificationFetcher : object {
    private static string NotificationEndpoint;
    private static string UtmMedium;
    private AbsolutePath _notificationDirectory;
    private string _utmSource;
    public NotificationFetcher(string utmSource);
    [AsyncStateMachineAttribute("Nuke.Build.Shared.NotificationFetcher/<GetNotificationAsync>d__5")]
public Task`1<Notification> GetNotificationAsync();
    [AsyncStateMachineAttribute("Nuke.Build.Shared.NotificationFetcher/<GetNotificationInternal>d__6")]
private Task`1<Notification> GetNotificationInternal();
    [CompilerGeneratedAttribute]
private ValueTuple`2<JsonElement, AbsolutePath> <GetNotificationInternal>b__6_0(JsonElement x);
    [CompilerGeneratedAttribute]
private bool <GetNotificationInternal>g__IsApplicable|6_2(JsonElement element);
    [CompilerGeneratedAttribute]
private Link <GetNotificationInternal>g__GetLink|6_3(JsonElement obj);
}
[UsedImplicitlyAttribute]
internal static class Nuke.Common.Constants : object {
    internal static string NukeFileName;
    internal static string NukeDirectoryName;
    internal static string NukeCommonPackageId;
    internal static string BuildSchemaFileName;
    internal static string VisualStudioDebugFileName;
    internal static string TargetsSeparator;
    internal static string RootDirectoryParameterName;
    internal static string InvokedTargetsParameterName;
    internal static string SkippedTargetsParameterName;
    internal static string LoadedLocalProfilesParameterName;
    public static string VisualStudioDebugParameterName;
    internal static string CompletionParameterName;
    internal static string ParametersFilePrefix;
    internal static string DefaultProfileName;
    internal static string GlobalToolVersionEnvironmentKey;
    internal static string GlobalToolStartTimeEnvironmentKey;
    internal static string InterceptorEnvironmentKey;
    internal static AbsolutePath GlobalTemporaryDirectory { get; }
    internal static AbsolutePath GlobalNukeDirectory { get; }
    internal static AbsolutePath get_GlobalTemporaryDirectory();
    internal static AbsolutePath get_GlobalNukeDirectory();
    [CanBeNullAttribute]
internal static AbsolutePath TryGetRootDirectoryFrom(AbsolutePath startDirectory, bool includeLegacy);
    internal static bool IsLegacy(AbsolutePath rootDirectory);
    internal static AbsolutePath GetNukeDirectory(AbsolutePath rootDirectory);
    internal static AbsolutePath GetTemporaryDirectory(AbsolutePath rootDirectory);
    internal static AbsolutePath GetCompletionFile(AbsolutePath rootDirectory);
    internal static AbsolutePath GetBuildAttemptFile(AbsolutePath rootDirectory);
    public static AbsolutePath GetVisualStudioDebugFile(AbsolutePath rootDirectory);
    public static AbsolutePath GetReSharperSurrogateFile(AbsolutePath rootDirectory);
    internal static AbsolutePath GetBuildSchemaFile(AbsolutePath rootDirectory);
    internal static AbsolutePath GetDefaultParametersFile(AbsolutePath rootDirectory);
    internal static IEnumerable`1<AbsolutePath> GetParametersProfileFiles(AbsolutePath rootDirectory);
    internal static AbsolutePath GetParametersProfileFile(AbsolutePath rootDirectory, string profile);
    internal static string GetParametersFileName(string profile);
    public static IEnumerable`1<string> GetProfileNames(AbsolutePath rootDirectory);
    internal static string GetCredentialStoreName(AbsolutePath rootDirectory, string profile);
    internal static string GetProfilePasswordParameterName(string profile);
}
public static class Nuke.Common.Utilities.CompletionUtility : object {
    public static IReadOnlyDictionary`2<string, String[]> GetItemsFromSchema(AbsolutePath schemaFile, IEnumerable`1<string> profileNames);
    public static IReadOnlyDictionary`2<string, String[]> GetItemsFromSchema(JsonDocument schema, IEnumerable`1<string> profileNames);
    public static IEnumerable`1<string> GetRelevantItems(string words, IReadOnlyDictionary`2<string, String[]> completionItems);
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
