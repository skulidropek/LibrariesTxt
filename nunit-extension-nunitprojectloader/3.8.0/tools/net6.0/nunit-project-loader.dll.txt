[ExtensionAttribute]
internal static class NUnit.Common.StringHelper : object {
    [ExtensionAttribute]
public static string Enquote(string source);
    [IteratorStateMachineAttribute("NUnit.Common.StringHelper/<Enquote>d__1")]
[ExtensionAttribute]
public static IEnumerable`1<string> Enquote(IEnumerable`1<string> source);
    [ExtensionAttribute]
public static string Join(IEnumerable`1<string> source, string delimiter);
}
public static class NUnit.Engine.RunnerSettings : object {
    public static string AutoBinPath;
    public static string BasePath;
    public static string ConfigurationFile;
    public static string DomainUsage;
    public static string PrivateBinPath;
    public static string ProcessModel;
    public static string RuntimeFramework;
}
public class NUnit.Engine.Services.ProjectLoaders.NUnitProject : object {
    private static string ROOT_NODE;
    private static string SETTINGS_NODE;
    private static string CONFIG_NODE;
    private static string ASSEMBLY_NODE;
    private static string ACTIVECONFIG_ATTR;
    private static string NAME_ATTR;
    private static string PATH_ATTR;
    private static string APPBASE_ATTR;
    private static string CONFIGFILE_ATTR;
    private static string BINPATH_ATTR;
    private static string BINPATHTYPE_ATTR;
    private static string RUNTIME_ATTR;
    private static string PROCESS_ATTR;
    private static string DOMAIN_ATTR;
    private static string BINPATH_AUTO;
    [CompilerGeneratedAttribute]
private string <ProjectPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ActiveConfigName>k__BackingField;
    [CompilerGeneratedAttribute]
private XmlNode <RootNode>k__BackingField;
    [CompilerGeneratedAttribute]
private XmlNode <SettingsNode>k__BackingField;
    [CompilerGeneratedAttribute]
private XmlNodeList <ConfigNodes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RuntimeFramework>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProcessModel>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DomainUsage>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectBase>k__BackingField;
    private static Char[] PATH_SEPARATORS;
    public string ProjectPath { get; private set; }
    public string ActiveConfigName { get; private set; }
    public IList`1<string> ConfigNames { get; }
    internal XmlNode RootNode { get; private set; }
    internal XmlNode SettingsNode { get; private set; }
    internal XmlNodeList ConfigNodes { get; private set; }
    internal string RuntimeFramework { get; private set; }
    internal string ProcessModel { get; private set; }
    internal string DomainUsage { get; private set; }
    internal string ProjectBase { get; private set; }
    private static NUnitProject();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ProjectPath();
    [CompilerGeneratedAttribute]
private void set_ProjectPath(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ActiveConfigName();
    [CompilerGeneratedAttribute]
private void set_ActiveConfigName(string value);
    public sealed virtual IList`1<string> get_ConfigNames();
    public sealed virtual TestPackage GetTestPackage();
    public sealed virtual TestPackage GetTestPackage(string configName);
    public void Load(string filename);
    public void LoadXml(string xmlText);
    [CompilerGeneratedAttribute]
internal XmlNode get_RootNode();
    [CompilerGeneratedAttribute]
private void set_RootNode(XmlNode value);
    [CompilerGeneratedAttribute]
internal XmlNode get_SettingsNode();
    [CompilerGeneratedAttribute]
private void set_SettingsNode(XmlNode value);
    [CompilerGeneratedAttribute]
internal XmlNodeList get_ConfigNodes();
    [CompilerGeneratedAttribute]
private void set_ConfigNodes(XmlNodeList value);
    [CompilerGeneratedAttribute]
internal string get_RuntimeFramework();
    [CompilerGeneratedAttribute]
private void set_RuntimeFramework(string value);
    [CompilerGeneratedAttribute]
internal string get_ProcessModel();
    [CompilerGeneratedAttribute]
private void set_ProcessModel(string value);
    [CompilerGeneratedAttribute]
internal string get_DomainUsage();
    [CompilerGeneratedAttribute]
private void set_DomainUsage(string value);
    [CompilerGeneratedAttribute]
internal string get_ProjectBase();
    [CompilerGeneratedAttribute]
private void set_ProjectBase(string value);
    private void Initialize(XmlDocument doc);
    [IteratorStateMachineAttribute("NUnit.Engine.Services.ProjectLoaders.NUnitProject/<GetConfigNodeNames>d__58")]
private IEnumerable`1<string> GetConfigNodeNames();
    private XmlNode GetConfigNode(string name);
    private string GetBasePathForConfig(XmlNode configNode);
    private IDictionary`2<string, object> GetSettingsForConfig(XmlNode configNode);
    private string NormalizePath(string path);
}
[ExtensionAttribute]
[ExtensionPropertyAttribute("FileExtension", ".nunit")]
public class NUnit.Engine.Services.ProjectLoaders.NUnitProjectLoader : object {
    public sealed virtual bool CanLoadFrom(string path);
    public sealed virtual IProject LoadFrom(string path);
    public TestPackage GetTestPackage(string path);
    public TestPackage GetTestPackage(string path, string configName);
}
[ExtensionAttribute]
public static class NUnit.Engine.Services.ProjectLoaders.SafeAttributeAccess : object {
    [ExtensionAttribute]
public static string GetAttribute(XmlNode result, string name);
}
[AttributeUsageAttribute("69")]
internal class System.Runtime.CompilerServices.ExtensionAttribute : Attribute {
}
