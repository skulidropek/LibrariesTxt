public class NUnit.Engine.Addins.NUnit2ResultSummary : object {
    private int resultCount;
    private int testsRun;
    private int failureCount;
    private int errorCount;
    private int successCount;
    private int inconclusiveCount;
    private int skipCount;
    private int ignoreCount;
    private int notRunnable;
    private DateTime startTime;
    private DateTime endTime;
    private double duration;
    private string name;
    public string Name { get; }
    public bool Success { get; }
    public int ResultCount { get; }
    public int TestsRun { get; }
    public int Passed { get; }
    public int Errors { get; }
    public int Failures { get; }
    public int Inconclusive { get; }
    public int NotRunnable { get; }
    public int Skipped { get; }
    public int Ignored { get; }
    public DateTime StartTime { get; }
    public DateTime EndTime { get; }
    public double Duration { get; }
    public int TestsNotRun { get; }
    public int ErrorsAndFailures { get; }
    public NUnit2ResultSummary(XmlNode result);
    private void Summarize(XmlNode node);
    public string get_Name();
    public bool get_Success();
    public int get_ResultCount();
    public int get_TestsRun();
    public int get_Passed();
    public int get_Errors();
    public int get_Failures();
    public int get_Inconclusive();
    public int get_NotRunnable();
    public int get_Skipped();
    public int get_Ignored();
    public DateTime get_StartTime();
    public DateTime get_EndTime();
    public double get_Duration();
    public int get_TestsNotRun();
    public int get_ErrorsAndFailures();
}
[ExtensionAttribute]
[ExtensionPropertyAttribute("Format", "nunit2")]
public class NUnit.Engine.Addins.NUnit2XmlResultWriter : object {
    private XmlWriter _xmlWriter;
    public sealed virtual void CheckWritability(string outputPath);
    public sealed virtual void WriteResultFile(XmlNode result, string outputPath);
    public sealed virtual void WriteResultFile(XmlNode result, TextWriter writer);
    private void WriteXmlOutput(XmlNode result, XmlWriter xmlWriter);
    private void InitializeXmlFile(XmlNode result);
    private void WriteCultureInfo();
    private string GetFrameworkVersion(XmlNodeList assemblies);
    private void WriteEnvironment(string frameworkVersion);
    private string TranslateResult(string resultState, string label);
    private void WriteResultElement(XmlNode result);
    private void TerminateXmlFile();
    private void StartTestElement(XmlNode result);
    private void WriteCategoriesElement(XmlNode properties);
    private void WritePropertiesElement(XmlNode properties);
    private void WriteReasonElement(string message);
    private void WriteFailureElement(string message, string stackTrace);
    private void WriteChildResults(XmlNode result);
    private void WriteChildElements(XmlNode result);
    private static string CharacterSafeString(string encodedString);
    private void WriteCData(string text);
}
[ExtensionAttribute]
public static class NUnit.Engine.Addins.SafeAttributeAccess : object {
    [ExtensionAttribute]
public static string GetAttribute(XmlNode result, string name);
    [ExtensionAttribute]
public static double GetAttribute(XmlNode result, string name, double defaultValue);
    [ExtensionAttribute]
public static DateTime GetAttribute(XmlNode result, string name, DateTime defaultValue);
}
[AttributeUsageAttribute("69")]
internal class System.Runtime.CompilerServices.ExtensionAttribute : Attribute {
}
