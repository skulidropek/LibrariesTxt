[AttributeUsageAttribute("4")]
public class NUnit.Engine.Extensibility.ExtensionAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Enabled>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EngineVersion>k__BackingField;
    public string Path { get; public set; }
    public string Description { get; public set; }
    public bool Enabled { get; public set; }
    public string EngineVersion { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public bool get_Enabled();
    [CompilerGeneratedAttribute]
public void set_Enabled(bool value);
    [CompilerGeneratedAttribute]
public string get_EngineVersion();
    [CompilerGeneratedAttribute]
public void set_EngineVersion(string value);
}
[AttributeUsageAttribute("1")]
public class NUnit.Engine.Extensibility.ExtensionPointAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    public string Path { get; private set; }
    public Type Type { get; private set; }
    public string Description { get; public set; }
    public ExtensionPointAttribute(string path, Type type);
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
private void set_Path(string value);
    [CompilerGeneratedAttribute]
public Type get_Type();
    [CompilerGeneratedAttribute]
private void set_Type(Type value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
}
[AttributeUsageAttribute("4")]
public class NUnit.Engine.Extensibility.ExtensionPropertyAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    public string Name { get; private set; }
    public string Value { get; private set; }
    public ExtensionPropertyAttribute(string name, string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
private void set_Value(string value);
}
[TypeExtensionPointAttribute]
public interface NUnit.Engine.Extensibility.IDriverFactory {
    public abstract virtual bool IsSupportedTestFramework(AssemblyName reference);
    public abstract virtual IFrameworkDriver GetDriver(AppDomain domain, AssemblyName reference);
}
public interface NUnit.Engine.Extensibility.IExtensionNode {
    public string TypeName { get; }
    public bool Enabled { get; }
    public string Path { get; }
    public string Description { get; }
    public IRuntimeFramework TargetFramework { get; }
    public IEnumerable`1<string> PropertyNames { get; }
    public string AssemblyPath { get; }
    public Version AssemblyVersion { get; }
    public abstract virtual string get_TypeName();
    public abstract virtual bool get_Enabled();
    public abstract virtual string get_Path();
    public abstract virtual string get_Description();
    public abstract virtual IRuntimeFramework get_TargetFramework();
    public abstract virtual IEnumerable`1<string> get_PropertyNames();
    public abstract virtual IEnumerable`1<string> GetValues(string name);
    public abstract virtual string get_AssemblyPath();
    public abstract virtual Version get_AssemblyVersion();
}
public interface NUnit.Engine.Extensibility.IExtensionPoint {
    public string Path { get; }
    public string Description { get; }
    public string TypeName { get; }
    public IEnumerable`1<IExtensionNode> Extensions { get; }
    public abstract virtual string get_Path();
    public abstract virtual string get_Description();
    public abstract virtual string get_TypeName();
    public abstract virtual IEnumerable`1<IExtensionNode> get_Extensions();
}
public interface NUnit.Engine.Extensibility.IFrameworkDriver {
    public string ID { get; public set; }
    public abstract virtual string get_ID();
    public abstract virtual void set_ID(string value);
    public abstract virtual string Load(string testAssemblyPath, IDictionary`2<string, object> settings);
    public abstract virtual int CountTestCases(string filter);
    public abstract virtual string Run(ITestEventListener listener, string filter);
    public abstract virtual string Explore(string filter);
    public abstract virtual void StopRun(bool force);
}
public interface NUnit.Engine.Extensibility.IProject {
    public string ProjectPath { get; }
    public string ActiveConfigName { get; }
    public IList`1<string> ConfigNames { get; }
    public abstract virtual string get_ProjectPath();
    public abstract virtual string get_ActiveConfigName();
    public abstract virtual IList`1<string> get_ConfigNames();
    public abstract virtual TestPackage GetTestPackage();
    public abstract virtual TestPackage GetTestPackage(string configName);
}
[TypeExtensionPointAttribute]
public interface NUnit.Engine.Extensibility.IProjectLoader {
    public abstract virtual bool CanLoadFrom(string path);
    public abstract virtual IProject LoadFrom(string path);
}
[TypeExtensionPointAttribute]
public interface NUnit.Engine.Extensibility.IResultWriter {
    public abstract virtual void CheckWritability(string outputPath);
    public abstract virtual void WriteResultFile(XmlNode resultNode, string outputPath);
    public abstract virtual void WriteResultFile(XmlNode resultNode, TextWriter writer);
}
[AttributeUsageAttribute("1028")]
public class NUnit.Engine.Extensibility.TypeExtensionPointAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    public string Path { get; private set; }
    public string Description { get; public set; }
    public TypeExtensionPointAttribute(string path);
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
private void set_Path(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
}
public interface NUnit.Engine.IAvailableRuntimes {
    public IList`1<IRuntimeFramework> AvailableRuntimes { get; }
    public abstract virtual IList`1<IRuntimeFramework> get_AvailableRuntimes();
}
public interface NUnit.Engine.IExtensionService {
    public IEnumerable`1<IExtensionPoint> ExtensionPoints { get; }
    public IEnumerable`1<IExtensionNode> Extensions { get; }
    public abstract virtual IEnumerable`1<IExtensionPoint> get_ExtensionPoints();
    public abstract virtual IEnumerable`1<IExtensionNode> get_Extensions();
    public abstract virtual IExtensionPoint GetExtensionPoint(string path);
    public abstract virtual IEnumerable`1<IExtensionNode> GetExtensionNodes(string path);
    public abstract virtual void EnableExtension(string typeName, bool enabled);
}
public interface NUnit.Engine.ILogger {
    public abstract virtual void Error(string message);
    public abstract virtual void Error(string format, Object[] args);
    public abstract virtual void Warning(string message);
    public abstract virtual void Warning(string format, Object[] args);
    public abstract virtual void Info(string message);
    public abstract virtual void Info(string format, Object[] args);
    public abstract virtual void Debug(string message);
    public abstract virtual void Debug(string format, Object[] args);
}
public interface NUnit.Engine.ILogging {
    public abstract virtual ILogger GetLogger(string name);
}
public enum NUnit.Engine.InternalTraceLevel : Enum {
    public int value__;
    public static InternalTraceLevel Default;
    public static InternalTraceLevel Off;
    public static InternalTraceLevel Error;
    public static InternalTraceLevel Warning;
    public static InternalTraceLevel Info;
    public static InternalTraceLevel Debug;
    public static InternalTraceLevel Verbose;
}
public interface NUnit.Engine.IRecentFiles {
    public int MaxFiles { get; public set; }
    public IList`1<string> Entries { get; }
    public abstract virtual int get_MaxFiles();
    public abstract virtual void set_MaxFiles(int value);
    public abstract virtual IList`1<string> get_Entries();
    public abstract virtual void SetMostRecent(string fileName);
    public abstract virtual void Remove(string fileName);
}
public interface NUnit.Engine.IResultService {
    public String[] Formats { get; }
    public abstract virtual String[] get_Formats();
    public abstract virtual IResultWriter GetResultWriter(string format, Object[] args);
}
public interface NUnit.Engine.IRuntimeFramework {
    public string Id { get; }
    public string DisplayName { get; }
    public Version FrameworkVersion { get; }
    public Version ClrVersion { get; }
    public string Profile { get; }
    public abstract virtual string get_Id();
    public abstract virtual string get_DisplayName();
    public abstract virtual Version get_FrameworkVersion();
    public abstract virtual Version get_ClrVersion();
    public abstract virtual string get_Profile();
}
public interface NUnit.Engine.IRuntimeFrameworkService {
    public abstract virtual bool IsAvailable(string framework);
    public abstract virtual string SelectRuntimeFramework(TestPackage package);
}
[TypeExtensionPointAttribute]
public interface NUnit.Engine.IService {
    public IServiceLocator ServiceContext { get; public set; }
    public ServiceStatus Status { get; }
    public abstract virtual IServiceLocator get_ServiceContext();
    public abstract virtual void set_ServiceContext(IServiceLocator value);
    public abstract virtual ServiceStatus get_Status();
    public abstract virtual void StartService();
    public abstract virtual void StopService();
}
public interface NUnit.Engine.IServiceLocator {
    public abstract virtual T GetService();
    public abstract virtual object GetService(Type serviceType);
}
public interface NUnit.Engine.ISettings {
    [CompilerGeneratedAttribute]
public abstract virtual void add_Changed(SettingsEventHandler value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_Changed(SettingsEventHandler value);
    public abstract virtual object GetSetting(string settingName);
    public abstract virtual T GetSetting(string settingName, T defaultValue);
    public abstract virtual void RemoveSetting(string settingName);
    public abstract virtual void RemoveGroup(string groupName);
    public abstract virtual void SaveSetting(string settingName, object settingValue);
}
public interface NUnit.Engine.ITestEngine {
    public IServiceLocator Services { get; }
    public string WorkDirectory { get; public set; }
    public InternalTraceLevel InternalTraceLevel { get; public set; }
    public abstract virtual IServiceLocator get_Services();
    public abstract virtual string get_WorkDirectory();
    public abstract virtual void set_WorkDirectory(string value);
    public abstract virtual InternalTraceLevel get_InternalTraceLevel();
    public abstract virtual void set_InternalTraceLevel(InternalTraceLevel value);
    public abstract virtual void Initialize();
    public abstract virtual ITestRunner GetRunner(TestPackage package);
}
[TypeExtensionPointAttribute]
public interface NUnit.Engine.ITestEventListener {
    public abstract virtual void OnTestEvent(string report);
}
public interface NUnit.Engine.ITestFilterBuilder {
    public abstract virtual void AddTest(string fullName);
    public abstract virtual void SelectWhere(string whereClause);
    public abstract virtual TestFilter GetFilter();
}
public interface NUnit.Engine.ITestFilterService {
    public abstract virtual ITestFilterBuilder GetTestFilterBuilder();
}
public interface NUnit.Engine.ITestRun {
    public XmlNode Result { get; }
    public abstract virtual XmlNode get_Result();
    public abstract virtual bool Wait(int timeout);
}
public interface NUnit.Engine.ITestRunner {
    public bool IsTestRunning { get; }
    public abstract virtual bool get_IsTestRunning();
    public abstract virtual XmlNode Load();
    public abstract virtual void Unload();
    public abstract virtual XmlNode Reload();
    public abstract virtual int CountTestCases(TestFilter filter);
    public abstract virtual XmlNode Run(ITestEventListener listener, TestFilter filter);
    public abstract virtual ITestRun RunAsync(ITestEventListener listener, TestFilter filter);
    public abstract virtual void StopRun(bool force);
    public abstract virtual XmlNode Explore(TestFilter filter);
}
public class NUnit.Engine.NUnitEngineException : Exception {
    public NUnitEngineException(string message);
    public NUnitEngineException(string message, Exception innerException);
    public NUnitEngineException(SerializationInfo info, StreamingContext context);
}
public class NUnit.Engine.NUnitEngineNotFoundException : Exception {
    internal NUnitEngineNotFoundException(Version minVersion);
    private static string CreateMessage(Version minVersion);
}
public class NUnit.Engine.NUnitEngineUnloadException : NUnitEngineException {
    private static string AggregatedExceptionsMsg;
    [CompilerGeneratedAttribute]
private ICollection`1<Exception> <AggregatedExceptions>k__BackingField;
    public ICollection`1<Exception> AggregatedExceptions { get; }
    public NUnitEngineUnloadException(string message);
    public NUnitEngineUnloadException(string message, Exception innerException);
    public NUnitEngineUnloadException(ICollection`1<Exception> aggregatedExceptions);
    public NUnitEngineUnloadException(SerializationInfo info, StreamingContext context);
    [CompilerGeneratedAttribute]
public ICollection`1<Exception> get_AggregatedExceptions();
}
public enum NUnit.Engine.ServiceStatus : Enum {
    public int value__;
    public static ServiceStatus Stopped;
    public static ServiceStatus Started;
    public static ServiceStatus Error;
}
public class NUnit.Engine.SettingsEventArgs : EventArgs {
    [CompilerGeneratedAttribute]
private string <SettingName>k__BackingField;
    public string SettingName { get; private set; }
    public SettingsEventArgs(string settingName);
    [CompilerGeneratedAttribute]
public string get_SettingName();
    [CompilerGeneratedAttribute]
private void set_SettingName(string value);
}
public class NUnit.Engine.SettingsEventHandler : MulticastDelegate {
    public SettingsEventHandler(object object, IntPtr method);
    public virtual void Invoke(object sender, SettingsEventArgs args);
    public virtual IAsyncResult BeginInvoke(object sender, SettingsEventArgs args, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
public static class NUnit.Engine.TestEngineActivator : object {
    internal static Version DefaultMinimumVersion;
    private static string DefaultAssemblyName;
    internal static string DefaultTypeName;
    private static TestEngineActivator();
    public static ITestEngine CreateInstance(bool unused);
    public static ITestEngine CreateInstance(Version minVersion, bool unused);
    private static Assembly FindNewestEngine(Version minVersion);
    private static Assembly CheckPathForEngine(string path, Version minVersion, Version& newestVersionFound, Assembly newestAssemblyFound);
    private static string FindEngineInRegistry(RegistryKey rootKey, string subKey);
}
public class NUnit.Engine.TestFilter : object {
    public static TestFilter Empty;
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    public string Text { get; private set; }
    public TestFilter(string xmlText);
    private static TestFilter();
    [CompilerGeneratedAttribute]
public string get_Text();
    [CompilerGeneratedAttribute]
private void set_Text(string value);
}
public class NUnit.Engine.TestPackage : object {
    private static int _nextID;
    [CompilerGeneratedAttribute]
private string <ID>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FullName>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<TestPackage> <SubPackages>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, object> <Settings>k__BackingField;
    public string ID { get; private set; }
    public string Name { get; }
    public string FullName { get; private set; }
    public IList`1<TestPackage> SubPackages { get; private set; }
    public IDictionary`2<string, object> Settings { get; private set; }
    public TestPackage(string filePath);
    public TestPackage(IList`1<string> testFiles);
    private static TestPackage();
    private string GetNextID();
    [CompilerGeneratedAttribute]
public string get_ID();
    [CompilerGeneratedAttribute]
private void set_ID(string value);
    public string get_Name();
    [CompilerGeneratedAttribute]
public string get_FullName();
    [CompilerGeneratedAttribute]
private void set_FullName(string value);
    [CompilerGeneratedAttribute]
public IList`1<TestPackage> get_SubPackages();
    [CompilerGeneratedAttribute]
private void set_SubPackages(IList`1<TestPackage> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, object> get_Settings();
    [CompilerGeneratedAttribute]
private void set_Settings(IDictionary`2<string, object> value);
    public void AddSubPackage(TestPackage subPackage);
    public void AddSetting(string name, object value);
    public T GetSetting(string name, T defaultSetting);
}
public class NUnit.Engine.TestSelectionParserException : Exception {
    public TestSelectionParserException(string message);
    public TestSelectionParserException(string message, Exception innerException);
    public TestSelectionParserException(SerializationInfo info, StreamingContext context);
}
