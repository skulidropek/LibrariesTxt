public class NUnit.Engine.Listeners.Event : ValueType {
    public string RootFlowId;
    public string MessageName;
    public string FullName;
    public string Name;
    public string Id;
    public string ParentId;
    public string TestId;
    public XmlNode TestEvent;
    public Event(string rootFlowId, string messageName, string fullName, string name, string id, string parentId, string testId, XmlNode testEvent);
    public virtual string ToString();
}
internal class NUnit.Engine.Listeners.EventConverter2 : object {
    private IServiceMessageFactory _serviceMessageFactory;
    private IHierarchy _hierarchy;
    private Statistics _statistics;
    private ITeamCityInfo _teamCityInfo;
    private Dictionary`2<string, string> _inAssembly;
    private List`1<XmlNode> _notStartedNUnit2Tests;
    public EventConverter2(IServiceMessageFactory serviceMessageFactory, IHierarchy hierarchy, Statistics statistics, ITeamCityInfo teamCityInfo);
    [IteratorStateMachineAttribute("NUnit.Engine.Listeners.EventConverter2/<Convert>d__7")]
public sealed virtual IEnumerable`1<IEnumerable`1<ServiceMessage>> Convert(Event testEvent);
    [IteratorStateMachineAttribute("NUnit.Engine.Listeners.EventConverter2/<ProcessNotStartedTests>d__8")]
private IEnumerable`1<ServiceMessage> ProcessNotStartedTests(string flowId, XmlNode currentEvent);
}
internal class NUnit.Engine.Listeners.EventConverter3 : object {
    private IServiceMessageFactory _serviceMessageFactory;
    private IHierarchy _hierarchy;
    private Statistics _statistics;
    private ITeamCityInfo _teamCityInfo;
    private Dictionary`2<string, XmlNode> _notStartedNUnit3Tests;
    public EventConverter3(IServiceMessageFactory serviceMessageFactory, IHierarchy hierarchy, Statistics statistics, ITeamCityInfo teamCityInfo);
    [IteratorStateMachineAttribute("NUnit.Engine.Listeners.EventConverter3/<Convert>d__6")]
public sealed virtual IEnumerable`1<IEnumerable`1<ServiceMessage>> Convert(Event testEvent);
    [IteratorStateMachineAttribute("NUnit.Engine.Listeners.EventConverter3/<ProcessNotStartedTests>d__7")]
private IEnumerable`1<ServiceMessage> ProcessNotStartedTests(string flowId, string id, XmlNode currentEvent);
}
internal class NUnit.Engine.Listeners.EventId : ValueType {
    public string FlowId;
    public string FullName;
    public EventId(ITeamCityInfo tamCityInfo, string flowId, string fullName);
}
internal class NUnit.Engine.Listeners.Hierarchy : object {
    private Dictionary`2<string, string> _links;
    public sealed virtual bool AddLink(string childId, string parentId);
    public sealed virtual void Clear();
    public sealed virtual bool TryFindRootId(string childId, String& rootId);
    public sealed virtual bool TryFindParentId(string childId, String& parentId);
}
public interface NUnit.Engine.Listeners.IEventConverter {
    public abstract virtual IEnumerable`1<IEnumerable`1<ServiceMessage>> Convert(Event testEvent);
}
internal interface NUnit.Engine.Listeners.IHierarchy {
    public abstract virtual bool AddLink(string childId, string parentId);
    public abstract virtual void Clear();
    public abstract virtual bool TryFindRootId(string childId, String& rootId);
    public abstract virtual bool TryFindParentId(string childId, String& parentId);
}
internal interface NUnit.Engine.Listeners.IServiceMessageFactory {
    public abstract virtual IEnumerable`1<ServiceMessage> SuiteStarted(EventId eventId, Event testEvent);
    public abstract virtual IEnumerable`1<ServiceMessage> SuiteFinished(EventId eventId, Event testEvent);
    public abstract virtual IEnumerable`1<ServiceMessage> FlowStarted(string flowId, string parentFlowId);
    public abstract virtual IEnumerable`1<ServiceMessage> FlowFinished(string flowId);
    public abstract virtual IEnumerable`1<ServiceMessage> TestStarted(EventId eventId);
    public abstract virtual IEnumerable`1<ServiceMessage> TestFinished(EventId eventId, XmlNode testEvent, XmlNode infoEvent);
    public abstract virtual IEnumerable`1<ServiceMessage> TestOutput(EventId eventId, XmlNode testEvent);
    public abstract virtual IEnumerable`1<ServiceMessage> TestOutputAsMessage(EventId eventId, XmlNode testEvent);
}
public interface NUnit.Engine.Listeners.IServiceMessageWriter {
    public abstract virtual void Write(TextWriter writer, IEnumerable`1<ServiceMessage> serviceMessages);
}
internal interface NUnit.Engine.Listeners.ISuiteNameReplacer {
    public abstract virtual string Replace(string suiteName);
}
public interface NUnit.Engine.Listeners.ITeamCityInfo {
    public bool MetadataEnabled { get; }
    public string RootFlowId { get; }
    public bool AllowDiagnostics { get; }
    public int ProcessId { get; }
    public string SuitePattern { get; }
    public string ColonReplacement { get; }
    public abstract virtual bool get_MetadataEnabled();
    public abstract virtual string get_RootFlowId();
    public abstract virtual bool get_AllowDiagnostics();
    public abstract virtual int get_ProcessId();
    public abstract virtual string get_SuitePattern();
    public abstract virtual string get_ColonReplacement();
    public abstract virtual bool SuppressParsingMessagesInside(string eventId);
}
[ExtensionAttribute]
public static class NUnit.Engine.Listeners.SafeAttributeAccess : object {
    [ExtensionAttribute]
public static string GetAttribute(XmlNode result, string name);
}
public class NUnit.Engine.Listeners.ServiceMessage : ValueType {
    private static ServiceMessageAttr[] EmptyAttrs;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<ServiceMessageAttr> <Attributes>k__BackingField;
    public string Name { get; private set; }
    public string Value { get; private set; }
    public IEnumerable`1<ServiceMessageAttr> Attributes { get; private set; }
    public ServiceMessage(string name, ServiceMessageAttr[] attributes);
    public ServiceMessage(string name, IList`1<ServiceMessageAttr> attributes);
    public ServiceMessage(string name, string value);
    private static ServiceMessage();
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
private void set_Value(string value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<ServiceMessageAttr> get_Attributes();
    [CompilerGeneratedAttribute]
private void set_Attributes(IEnumerable`1<ServiceMessageAttr> value);
}
public class NUnit.Engine.Listeners.ServiceMessageAttr : ValueType {
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public string Value { get; private set; }
    public string Name { get; private set; }
    public ServiceMessageAttr(string name, string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
private void set_Value(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
}
internal class NUnit.Engine.Listeners.ServiceMessageFactory : object {
    private ITeamCityInfo _teamCityInfo;
    private ISuiteNameReplacer _suiteNameReplacer;
    private static string TcParseServiceMessagesInside;
    private static IEnumerable`1<ServiceMessage> EmptyServiceMessages;
    private static Regex AttachmentDescriptionRegex;
    public ServiceMessageFactory(ITeamCityInfo teamCityInfo, ISuiteNameReplacer suiteNameReplacer);
    private static ServiceMessageFactory();
    [IteratorStateMachineAttribute("NUnit.Engine.Listeners.ServiceMessageFactory/<SuiteStarted>d__6")]
public sealed virtual IEnumerable`1<ServiceMessage> SuiteStarted(EventId eventId, Event testEvent);
    [IteratorStateMachineAttribute("NUnit.Engine.Listeners.ServiceMessageFactory/<SuiteFinished>d__7")]
public sealed virtual IEnumerable`1<ServiceMessage> SuiteFinished(EventId eventId, Event testEvent);
    [IteratorStateMachineAttribute("NUnit.Engine.Listeners.ServiceMessageFactory/<FlowStarted>d__8")]
public sealed virtual IEnumerable`1<ServiceMessage> FlowStarted(string flowId, string parentFlowId);
    [IteratorStateMachineAttribute("NUnit.Engine.Listeners.ServiceMessageFactory/<FlowFinished>d__9")]
public sealed virtual IEnumerable`1<ServiceMessage> FlowFinished(string flowId);
    [IteratorStateMachineAttribute("NUnit.Engine.Listeners.ServiceMessageFactory/<TestStarted>d__10")]
public sealed virtual IEnumerable`1<ServiceMessage> TestStarted(EventId eventId);
    [IteratorStateMachineAttribute("NUnit.Engine.Listeners.ServiceMessageFactory/<TestFinished>d__11")]
public sealed virtual IEnumerable`1<ServiceMessage> TestFinished(EventId eventId, XmlNode testEvent, XmlNode infoEvent);
    [IteratorStateMachineAttribute("NUnit.Engine.Listeners.ServiceMessageFactory/<TestOutput>d__12")]
public sealed virtual IEnumerable`1<ServiceMessage> TestOutput(EventId eventId, XmlNode testEvent);
    [IteratorStateMachineAttribute("NUnit.Engine.Listeners.ServiceMessageFactory/<TestOutputAsMessage>d__13")]
public sealed virtual IEnumerable`1<ServiceMessage> TestOutputAsMessage(EventId eventId, XmlNode testEvent);
    [IteratorStateMachineAttribute("NUnit.Engine.Listeners.ServiceMessageFactory/<TestFinished>d__14")]
private IEnumerable`1<ServiceMessage> TestFinished(EventId eventId, XmlNode testFinishedEvent);
    [IteratorStateMachineAttribute("NUnit.Engine.Listeners.ServiceMessageFactory/<TestFailed>d__15")]
private IEnumerable`1<ServiceMessage> TestFailed(EventId eventId, XmlNode testFailedEvent, XmlNode infoSource);
    [IteratorStateMachineAttribute("NUnit.Engine.Listeners.ServiceMessageFactory/<TestSkipped>d__16")]
private IEnumerable`1<ServiceMessage> TestSkipped(EventId eventId, XmlNode testSkippedEvent);
    [IteratorStateMachineAttribute("NUnit.Engine.Listeners.ServiceMessageFactory/<TestInconclusive>d__17")]
private IEnumerable`1<ServiceMessage> TestInconclusive(EventId eventId, XmlNode testInconclusiveEvent);
    [IteratorStateMachineAttribute("NUnit.Engine.Listeners.ServiceMessageFactory/<Output>d__18")]
private IEnumerable`1<ServiceMessage> Output(EventId eventId, string messageName, string outputStr);
    [IteratorStateMachineAttribute("NUnit.Engine.Listeners.ServiceMessageFactory/<OutputAsMessage>d__19")]
private IEnumerable`1<ServiceMessage> OutputAsMessage(EventId eventId, string outputStr);
    [IteratorStateMachineAttribute("NUnit.Engine.Listeners.ServiceMessageFactory/<GetAttributes>d__20")]
private IEnumerable`1<ServiceMessageAttr> GetAttributes(EventId eventId, string messageName);
    [IteratorStateMachineAttribute("NUnit.Engine.Listeners.ServiceMessageFactory/<Output>d__21")]
private IEnumerable`1<ServiceMessage> Output(EventId eventId, XmlNode sendOutputEvent);
    [IteratorStateMachineAttribute("NUnit.Engine.Listeners.ServiceMessageFactory/<ReasonMessage>d__22")]
private IEnumerable`1<ServiceMessage> ReasonMessage(EventId eventId, XmlNode ev);
    [IteratorStateMachineAttribute("NUnit.Engine.Listeners.ServiceMessageFactory/<Attachments>d__23")]
private static IEnumerable`1<ServiceMessage> Attachments(EventId eventId, XmlNode testEvent);
}
public class NUnit.Engine.Listeners.ServiceMessageWriter : object {
    private static string Header;
    private static string Footer;
    public sealed virtual void Write(TextWriter writer, IEnumerable`1<ServiceMessage> serviceMessages);
    private static void Write(TextWriter writer, ServiceMessageAttr attribute);
    private static void Write(TextWriter writer, string value);
    public static string EscapeString(string value);
}
internal class NUnit.Engine.Listeners.Statistics : object {
    private long _suiteStart;
    private long _suiteFinish;
    private long _testStart;
    private long _testFinish;
    public void RegisterSuiteStart();
    public void RegisterSuiteFinish();
    public void RegisterTestStart();
    public void RegisterTestFinish();
    public virtual string ToString();
}
public class NUnit.Engine.Listeners.SuiteNameReplacer : object {
    private ITeamCityInfo _teamCityInfo;
    public SuiteNameReplacer(ITeamCityInfo teamCityInfo);
    public sealed virtual string Replace(string suiteName);
}
[ExtensionAttribute]
public class NUnit.Engine.Listeners.TeamCityEventListener : object {
    private IServiceMessageWriter _serviceMessageWriter;
    private IEventConverter _eventConverter2;
    private IEventConverter _eventConverter3;
    private Statistics _statistics;
    private ITeamCityInfo _teamCityInfo;
    private object _lockObject;
    private TextWriter _outWriter;
    private string _rootFlowId;
    unknown string RootFlowId {public set; }
    public TeamCityEventListener(TextWriter outWriter, ITeamCityInfo teamCityInfo);
    public void set_RootFlowId(string value);
    public sealed virtual void OnTestEvent(string report);
    public void RegisterMessage(XmlNode xmlEvent);
    private static string GetId(string rootFlowId, string flowId);
}
public class NUnit.Engine.Listeners.TeamCityInfo : object {
    private static TeamCityVersion TestMetadataSupportVersion;
    private static TeamCityVersion Version;
    private static bool AllowExperimentalValue;
    private static int ProcessIdValue;
    private static bool MetadataEnabledValue;
    private static string RootFlowIdValue;
    private static bool AllowDiagnosticsValue;
    private static string SuitePatternValue;
    private static string ColonReplacementValue;
    private static string MessagesToSuppressParsingMessagesInsideValue;
    private static Dictionary`2<string, string> MessagesToSuppressParsingMessagesInside;
    public bool MetadataEnabled { get; }
    public string RootFlowId { get; }
    public bool AllowDiagnostics { get; }
    public int ProcessId { get; }
    public string SuitePattern { get; }
    public string ColonReplacement { get; }
    private static TeamCityInfo();
    public sealed virtual bool get_MetadataEnabled();
    public sealed virtual string get_RootFlowId();
    public sealed virtual bool get_AllowDiagnostics();
    public sealed virtual int get_ProcessId();
    public sealed virtual string get_SuitePattern();
    public sealed virtual string get_ColonReplacement();
    public sealed virtual bool SuppressParsingMessagesInside(string eventId);
    private static bool GetBool(string value, bool defaultValue);
}
public class NUnit.Engine.Listeners.TeamCityVersion : object {
    private static Regex VersionRegex;
    [CompilerGeneratedAttribute]
private int <Major>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Minor>k__BackingField;
    public int Major { get; private set; }
    public int Minor { get; private set; }
    public TeamCityVersion(string version);
    private static TeamCityVersion();
    [CompilerGeneratedAttribute]
public int get_Major();
    [CompilerGeneratedAttribute]
private void set_Major(int value);
    [CompilerGeneratedAttribute]
public int get_Minor();
    [CompilerGeneratedAttribute]
private void set_Minor(int value);
    public sealed virtual int CompareTo(TeamCityVersion other);
    public virtual string ToString();
}
[AttributeUsageAttribute("69")]
internal class System.Runtime.CompilerServices.ExtensionAttribute : Attribute {
}
