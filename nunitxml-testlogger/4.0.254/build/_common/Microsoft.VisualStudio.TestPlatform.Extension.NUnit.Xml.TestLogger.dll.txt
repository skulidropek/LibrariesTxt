[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
public class Microsoft.VisualStudio.TestPlatform.Extension.NUnit.Xml.TestLogger.NUnitXmlSerializer : object {
    private static string DateFormat;
    private static string ResultStatusPassed;
    private static string ResultStatusFailed;
    [CompilerGeneratedAttribute]
private IInputSanitizer <InputSanitizer>k__BackingField;
    public IInputSanitizer InputSanitizer { get; }
    [CompilerGeneratedAttribute]
public sealed virtual IInputSanitizer get_InputSanitizer();
    public static IEnumerable`1<TestSuite> GroupTestSuites(IEnumerable`1<TestSuite> suites);
    public sealed virtual string Serialize(LoggerConfiguration loggerConfiguration, TestRunConfiguration runConfiguration, List`1<TestResultInfo> results, List`1<TestMessageInfo> messages);
    private static TestSuite AggregateTestSuites(IEnumerable`1<TestSuite> suites, string testSuiteType, string name, string fullName);
    private static TestSuite CreateFixture(IGrouping`2<string, TestResultInfo> resultsByType);
    private static XElement CreateTestCaseElement(TestResultInfo result);
    private static XAttribute CreateSeedAttribute(TestResultInfo result);
    private static XElement CreatePropertiesElement(TestResultInfo result);
    private static XElement CreatePropertyElement(Trait trait);
    [IteratorStateMachineAttribute("Microsoft.VisualStudio.TestPlatform.Extension.NUnit.Xml.TestLogger.NUnitXmlSerializer/<CreatePropertyElement>d__14")]
private static IEnumerable`1<XElement> CreatePropertyElement(string name, String[] values);
    private static string OutcomeToString(TestOutcome outcome);
    private XElement CreateTestRunElement(List`1<TestResultInfo> results, TestRunConfiguration runConfiguration);
    private XElement CreateAssemblyElement(IGrouping`2<string, TestResultInfo> resultsByAssembly);
    [CompilerGeneratedAttribute]
private XElement <CreateTestRunElement>b__16_2(IGrouping`2<string, TestResultInfo> resultsByAssembly);
}
[FriendlyNameAttribute("nunit")]
[ExtensionUriAttribute("logger://Microsoft/TestPlatform/NUnitXmlLogger/v1")]
public class Microsoft.VisualStudio.TestPlatform.Extension.NUnit.Xml.TestLogger.NUnitXmlTestLogger : TestLogger {
    public static string ExtensionUri;
    public static string FriendlyName;
    protected string DefaultTestResultFile { get; }
    protected virtual string get_DefaultTestResultFile();
}
[AttributeUsageAttribute("749")]
internal class System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
