[ExtensionAttribute]
public static class Microsoft.AspNetCore.Builder.ApplicationBuilderExtensions : object {
    [ExtensionAttribute]
public static IApplicationBuilder UseRedirectValidation(IApplicationBuilder app);
    [ExtensionAttribute]
public static IApplicationBuilder UseRedirectValidation(IApplicationBuilder app, Action`1<IFluentRedirectValidationOptions> configurer);
    [ExtensionAttribute]
public static IApplicationBuilder UseNoCacheHttpHeaders(IApplicationBuilder app);
    [ExtensionAttribute]
public static IApplicationBuilder UseHsts(IApplicationBuilder app, Action`1<IFluentHstsOptions> configurer);
    [ExtensionAttribute]
[ObsoleteAttribute("The Public-Key-Pins header has been deprecated since recent browser versions have removed support for it.", "True")]
public static IApplicationBuilder UseHpkp(IApplicationBuilder app, Action`1<IFluentHpkpOptions> configurer);
    [ExtensionAttribute]
[ObsoleteAttribute("The Public-Key-Pins-Report-Only header has been deprecated since recent browser versions have removed support for it.", "True")]
public static IApplicationBuilder UseHpkpReportOnly(IApplicationBuilder app, Action`1<IFluentHpkpOptions> configurer);
    [ExtensionAttribute]
public static IApplicationBuilder UseXContentTypeOptions(IApplicationBuilder app);
    [ExtensionAttribute]
public static IApplicationBuilder UseXDownloadOptions(IApplicationBuilder app);
    [ExtensionAttribute]
public static IApplicationBuilder UseXfo(IApplicationBuilder app, Action`1<IFluentXFrameOptions> configurer);
    [ExtensionAttribute]
public static IApplicationBuilder UseReferrerPolicy(IApplicationBuilder app, Action`1<IFluentReferrerPolicyOptions> configurer);
    [ExtensionAttribute]
public static IApplicationBuilder UseXRobotsTag(IApplicationBuilder app, Action`1<IFluentXRobotsTagOptions> configurer);
    [ExtensionAttribute]
public static IApplicationBuilder UseXXssProtection(IApplicationBuilder app, Action`1<IFluentXXssProtectionOptions> configurer);
    [ExtensionAttribute]
public static IApplicationBuilder UseCsp(IApplicationBuilder app, Action`1<IFluentCspOptions> configurer);
    [ExtensionAttribute]
public static IApplicationBuilder UseCspReportOnly(IApplicationBuilder app, Action`1<IFluentCspOptions> configurer);
}
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Builder.CspDirectiveExtensions : object {
    [ExtensionAttribute]
public static void None(T directive);
    [ExtensionAttribute]
public static T Self(T directive);
    [ExtensionAttribute]
public static T CustomSources(T directive, String[] sources);
    [ExtensionAttribute]
public static T UnsafeInline(T directive);
    [ExtensionAttribute]
public static T UnsafeEval(T directive);
    [ExtensionAttribute]
public static T StrictDynamic(T directive);
    private static void ValidateBeforeSettingNoneSource(ICspDirectiveBasicConfiguration basicDirective);
}
internal class NWebsec.AspNetCore.Middleware.Helpers.CspUpgradeHelper : object {
    internal static bool UaSupportsUpgradeInsecureRequests(HttpContext env);
}
public class NWebsec.AspNetCore.Middleware.Middleware.CspMiddleware : object {
    private ICspConfiguration _config;
    private HeaderResult _headerResult;
    private bool _reportOnly;
    private RequestDelegate _next;
    public CspMiddleware(RequestDelegate next, ICspConfiguration options, bool reportOnly);
    [AsyncStateMachineAttribute("NWebsec.AspNetCore.Middleware.Middleware.CspMiddleware/<Invoke>d__5")]
public Task Invoke(HttpContext context);
    internal bool HandleUpgradeInsecureRequest(HttpContext context);
    internal void SetCspHeaders(HttpContext context);
}
public class NWebsec.AspNetCore.Middleware.Middleware.HstsMiddleware : MiddlewareBase {
    private IHstsConfiguration _config;
    private HeaderResult _headerResult;
    public HstsMiddleware(RequestDelegate next, HstsOptions options);
    internal virtual void PreInvokeNext(HttpContext context);
}
public class NWebsec.AspNetCore.Middleware.Middleware.MiddlewareBase : object {
    private RequestDelegate _next;
    public MiddlewareBase(RequestDelegate next);
    [AsyncStateMachineAttribute("NWebsec.AspNetCore.Middleware.Middleware.MiddlewareBase/<Invoke>d__2")]
public Task Invoke(HttpContext context);
    internal virtual void PreInvokeNext(HttpContext context);
    internal virtual void PostInvokeNext(HttpContext context);
}
public class NWebsec.AspNetCore.Middleware.Middleware.NoCacheHttpHeadersMiddleware : MiddlewareBase {
    public NoCacheHttpHeadersMiddleware(RequestDelegate next);
    internal virtual void PreInvokeNext(HttpContext context);
}
public class NWebsec.AspNetCore.Middleware.Middleware.RedirectValidationMiddleware : MiddlewareBase {
    private RedirectValidationOptions _config;
    private RedirectValidator _redirectValidator;
    public RedirectValidationMiddleware(RequestDelegate next, RedirectValidationOptions options);
    internal virtual void PostInvokeNext(HttpContext context);
}
public class NWebsec.AspNetCore.Middleware.Middleware.ReferrerPolicyMiddleware : MiddlewareBase {
    private IReferrerPolicyConfiguration _config;
    private HeaderResult _headerResult;
    public ReferrerPolicyMiddleware(RequestDelegate next, ReferrerPolicyOptions options);
    internal virtual void PreInvokeNext(HttpContext owinEnvironment);
}
public class NWebsec.AspNetCore.Middleware.Middleware.XContentTypeOptionsMiddleware : MiddlewareBase {
    private ISimpleBooleanConfiguration _config;
    private HeaderResult _headerResult;
    public XContentTypeOptionsMiddleware(RequestDelegate next);
    internal virtual void PreInvokeNext(HttpContext owinEnvironment);
}
public class NWebsec.AspNetCore.Middleware.Middleware.XDownloadOptionsMiddleware : MiddlewareBase {
    private ISimpleBooleanConfiguration _config;
    private HeaderResult _headerResult;
    public XDownloadOptionsMiddleware(RequestDelegate next);
    internal virtual void PreInvokeNext(HttpContext owinEnvironment);
}
public class NWebsec.AspNetCore.Middleware.Middleware.XfoMiddleware : MiddlewareBase {
    private IXFrameOptionsConfiguration _config;
    private HeaderResult _headerResult;
    public XfoMiddleware(RequestDelegate next, XFrameOptions options);
    internal virtual void PreInvokeNext(HttpContext owinEnvironment);
}
public class NWebsec.AspNetCore.Middleware.Middleware.XRobotsTagMiddleware : MiddlewareBase {
    private IXRobotsTagConfiguration _config;
    private HeaderResult _headerResult;
    public XRobotsTagMiddleware(RequestDelegate next, XRobotsTagOptions options);
    internal virtual void PreInvokeNext(HttpContext owinEnvironment);
}
public class NWebsec.AspNetCore.Middleware.Middleware.XXssMiddleware : MiddlewareBase {
    private IXXssProtectionConfiguration _config;
    private HeaderResult _headerResult;
    public XXssMiddleware(RequestDelegate next, XXssProtectionOptions options);
    internal virtual void PreInvokeNext(HttpContext owinEnvironment);
}
