internal static class FxResources.System.ComponentModel.Annotations.SR : object {
}
internal static class FxResources.System.Data.Common.SR : object {
}
internal static class FxResources.System.Globalization.Extensions.SR : object {
}
internal static class FxResources.System.IO.Compression.SR : object {
}
internal static class FxResources.System.Net.Http.SR : object {
}
internal static class FxResources.System.Runtime.InteropServices.RuntimeInformation.SR : object {
}
internal static class FxResources.System.Runtime.Serialization.Primitives.SR : object {
}
internal static class FxResources.System.Security.Cryptography.Algorithms.SR : object {
}
internal static class FxResources.System.Threading.Overlapped.SR : object {
}
internal static class FxResources.System.ValueTuple.SR : object {
}
internal static class Interop : object {
}
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[AttributeUsageAttribute("64")]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal class JetBrains.Annotations.ContractAnnotationAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Contract>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ForceFullStates>k__BackingField;
    public string Contract { get; private set; }
    public bool ForceFullStates { get; private set; }
    public ContractAnnotationAttribute(string contract);
    public ContractAnnotationAttribute(string contract, bool forceFullStates);
    [CompilerGeneratedAttribute]
public string get_Contract();
    [CompilerGeneratedAttribute]
private void set_Contract(string value);
    [CompilerGeneratedAttribute]
public bool get_ForceFullStates();
    [CompilerGeneratedAttribute]
private void set_ForceFullStates(bool value);
}
[AttributeUsageAttribute("2048")]
internal class JetBrains.Annotations.InvokerParameterNameAttribute : Attribute {
}
[AttributeUsageAttribute("64")]
internal class JetBrains.Annotations.PureAttribute : Attribute {
}
[AttributeUsageAttribute("96")]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal class JetBrains.Annotations.StringFormatMethodAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <FormatParameterName>k__BackingField;
    public string FormatParameterName { get; private set; }
    public StringFormatMethodAttribute(string formatParameterName);
    [CompilerGeneratedAttribute]
public string get_FormatParameterName();
    [CompilerGeneratedAttribute]
private void set_FormatParameterName(string value);
}
[<0d7ff737-4cad-4dea-bf45-c870c743cf98>EmbeddedAttribute]
[CompilerGeneratedAttribute]
internal class Microsoft.CodeAnalysis.<0d7ff737-4cad-4dea-bf45-c870c743cf98>EmbeddedAttribute : Attribute {
}
[<1bfbc8ad-7051-4b12-839c-d1d228cdbf91>EmbeddedAttribute]
[CompilerGeneratedAttribute]
internal class Microsoft.CodeAnalysis.<1bfbc8ad-7051-4b12-839c-d1d228cdbf91>EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[<4a8e267e-932f-4677-a3b3-6c2dca899a53>EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.<4a8e267e-932f-4677-a3b3-6c2dca899a53>EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[<891e8447-969a-4444-b8fd-23aeb3eb64d3>EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.<891e8447-969a-4444-b8fd-23aeb3eb64d3>EmbeddedAttribute : Attribute {
}
[<d26ad42d-e9b5-4389-b79e-39a5ceecb498>EmbeddedAttribute]
[CompilerGeneratedAttribute]
internal class Microsoft.CodeAnalysis.<d26ad42d-e9b5-4389-b79e-39a5ceecb498>EmbeddedAttribute : Attribute {
}
[<e4402215-eb58-4809-a34b-498b37ba923e>EmbeddedAttribute]
[CompilerGeneratedAttribute]
internal class Microsoft.CodeAnalysis.<e4402215-eb58-4809-a34b-498b37ba923e>EmbeddedAttribute : Attribute {
}
[<f2e404b9-0ed2-43a2-a034-d5167cd1a306>EmbeddedAttribute]
[CompilerGeneratedAttribute]
internal class Microsoft.CodeAnalysis.<f2e404b9-0ed2-43a2-a034-d5167cd1a306>EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
internal class Newtonsoft.Json.Bson.BsonArray : BsonToken {
    private List`1<BsonToken> _children;
    public BsonType Type { get; }
    public void Add(BsonToken token);
    public virtual BsonType get_Type();
    public sealed virtual IEnumerator`1<BsonToken> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
internal class Newtonsoft.Json.Bson.BsonBinary : BsonValue {
    [CompilerGeneratedAttribute]
private BsonBinaryType <BinaryType>k__BackingField;
    public BsonBinaryType BinaryType { get; public set; }
    public BsonBinary(Byte[] value, BsonBinaryType binaryType);
    [CompilerGeneratedAttribute]
public BsonBinaryType get_BinaryType();
    [CompilerGeneratedAttribute]
public void set_BinaryType(BsonBinaryType value);
}
internal enum Newtonsoft.Json.Bson.BsonBinaryType : Enum {
    public byte value__;
    public static BsonBinaryType Binary;
    public static BsonBinaryType Function;
    [ObsoleteAttribute("This type has been deprecated in the BSON specification. Use Binary instead.")]
public static BsonBinaryType BinaryOld;
    [ObsoleteAttribute("This type has been deprecated in the BSON specification. Use Uuid instead.")]
public static BsonBinaryType UuidOld;
    public static BsonBinaryType Uuid;
    public static BsonBinaryType Md5;
    public static BsonBinaryType UserDefined;
}
internal class Newtonsoft.Json.Bson.BsonBinaryWriter : object {
    private static Encoding Encoding;
    private BinaryWriter _writer;
    private Byte[] _largeByteBuffer;
    [CompilerGeneratedAttribute]
private DateTimeKind <DateTimeKindHandling>k__BackingField;
    public DateTimeKind DateTimeKindHandling { get; public set; }
    public BsonBinaryWriter(BinaryWriter writer);
    private static BsonBinaryWriter();
    [CompilerGeneratedAttribute]
public DateTimeKind get_DateTimeKindHandling();
    [CompilerGeneratedAttribute]
public void set_DateTimeKindHandling(DateTimeKind value);
    public void Flush();
    public void Close();
    public void WriteToken(BsonToken t);
    private void WriteTokenInternal(BsonToken t);
    private void WriteString(string s, int byteCount, Nullable`1<int> calculatedlengthPrefix);
    public void WriteUtf8Bytes(string s, int byteCount);
    private int CalculateSize(int stringByteCount);
    private int CalculateSizeWithLength(int stringByteCount, bool includeSize);
    private int CalculateSize(BsonToken t);
}
internal class Newtonsoft.Json.Bson.BsonBoolean : BsonValue {
    public static BsonBoolean False;
    public static BsonBoolean True;
    private BsonBoolean(bool value);
    private static BsonBoolean();
}
internal class Newtonsoft.Json.Bson.BsonEmpty : BsonToken {
    public static BsonToken Null;
    public static BsonToken Undefined;
    [CompilerGeneratedAttribute]
private BsonType <Type>k__BackingField;
    public BsonType Type { get; }
    private BsonEmpty(BsonType type);
    private static BsonEmpty();
    [CompilerGeneratedAttribute]
public virtual BsonType get_Type();
}
internal class Newtonsoft.Json.Bson.BsonObject : BsonToken {
    private List`1<BsonProperty> _children;
    public BsonType Type { get; }
    public void Add(string name, BsonToken token);
    public virtual BsonType get_Type();
    public sealed virtual IEnumerator`1<BsonProperty> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
[ObsoleteAttribute("BSON reading and writing has been moved to its own package. See https://www.nuget.org/packages/Newtonsoft.Json.Bson for more details.")]
internal class Newtonsoft.Json.Bson.BsonObjectId : object {
    [CompilerGeneratedAttribute]
private Byte[] <Value>k__BackingField;
    public Byte[] Value { get; }
    public BsonObjectId(Byte[] value);
    [CompilerGeneratedAttribute]
public Byte[] get_Value();
}
internal class Newtonsoft.Json.Bson.BsonProperty : object {
    [CompilerGeneratedAttribute]
private BsonString <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private BsonToken <Value>k__BackingField;
    public BsonString Name { get; public set; }
    public BsonToken Value { get; public set; }
    [CompilerGeneratedAttribute]
public BsonString get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(BsonString value);
    [CompilerGeneratedAttribute]
public BsonToken get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(BsonToken value);
}
[ObsoleteAttribute("BSON reading and writing has been moved to its own package. See https://www.nuget.org/packages/Newtonsoft.Json.Bson for more details.")]
internal class Newtonsoft.Json.Bson.BsonReader : JsonReader {
    private static int MaxCharBytesSize;
    private static Byte[] SeqRange1;
    private static Byte[] SeqRange2;
    private static Byte[] SeqRange3;
    private static Byte[] SeqRange4;
    private BinaryReader _reader;
    private List`1<ContainerContext> _stack;
    private Byte[] _byteBuffer;
    private Char[] _charBuffer;
    private BsonType _currentElementType;
    private BsonReaderState _bsonReaderState;
    private ContainerContext _currentContext;
    private bool _readRootValueAsArray;
    private bool _jsonNet35BinaryCompatibility;
    private DateTimeKind _dateTimeKindHandling;
    [ObsoleteAttribute("JsonNet35BinaryCompatibility will be removed in a future version of Json.NET.")]
public bool JsonNet35BinaryCompatibility { get; public set; }
    public bool ReadRootValueAsArray { get; public set; }
    public DateTimeKind DateTimeKindHandling { get; public set; }
    public BsonReader(Stream stream);
    public BsonReader(BinaryReader reader);
    public BsonReader(Stream stream, bool readRootValueAsArray, DateTimeKind dateTimeKindHandling);
    public BsonReader(BinaryReader reader, bool readRootValueAsArray, DateTimeKind dateTimeKindHandling);
    private static BsonReader();
    public bool get_JsonNet35BinaryCompatibility();
    public void set_JsonNet35BinaryCompatibility(bool value);
    public bool get_ReadRootValueAsArray();
    public void set_ReadRootValueAsArray(bool value);
    public DateTimeKind get_DateTimeKindHandling();
    public void set_DateTimeKindHandling(DateTimeKind value);
    private string ReadElement();
    public virtual bool Read();
    public virtual void Close();
    private bool ReadCodeWScope();
    private bool ReadReference();
    private bool ReadNormal();
    private void PopContext();
    private void PushContext(ContainerContext newContext);
    private byte ReadByte();
    private void ReadType(BsonType type);
    private Byte[] ReadBinary(BsonBinaryType& binaryType);
    private string ReadString();
    private string ReadLengthString();
    private string GetString(int length);
    private int GetLastFullCharStop(int start);
    private int BytesInSequence(byte b);
    private void EnsureBuffers();
    private double ReadDouble();
    private int ReadInt32();
    private long ReadInt64();
    private BsonType ReadType();
    private void MovePosition(int count);
    private Byte[] ReadBytes(int count);
}
internal class Newtonsoft.Json.Bson.BsonRegex : BsonToken {
    [CompilerGeneratedAttribute]
private BsonString <Pattern>k__BackingField;
    [CompilerGeneratedAttribute]
private BsonString <Options>k__BackingField;
    public BsonString Pattern { get; public set; }
    public BsonString Options { get; public set; }
    public BsonType Type { get; }
    public BsonRegex(string pattern, string options);
    [CompilerGeneratedAttribute]
public BsonString get_Pattern();
    [CompilerGeneratedAttribute]
public void set_Pattern(BsonString value);
    [CompilerGeneratedAttribute]
public BsonString get_Options();
    [CompilerGeneratedAttribute]
public void set_Options(BsonString value);
    public virtual BsonType get_Type();
}
internal class Newtonsoft.Json.Bson.BsonString : BsonValue {
    [CompilerGeneratedAttribute]
private int <ByteCount>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IncludeLength>k__BackingField;
    public int ByteCount { get; public set; }
    public bool IncludeLength { get; }
    public BsonString(object value, bool includeLength);
    [CompilerGeneratedAttribute]
public int get_ByteCount();
    [CompilerGeneratedAttribute]
public void set_ByteCount(int value);
    [CompilerGeneratedAttribute]
public bool get_IncludeLength();
}
internal abstract class Newtonsoft.Json.Bson.BsonToken : object {
    [CompilerGeneratedAttribute]
private BsonToken <Parent>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CalculatedSize>k__BackingField;
    public BsonType Type { get; }
    public BsonToken Parent { get; public set; }
    public int CalculatedSize { get; public set; }
    public abstract virtual BsonType get_Type();
    [CompilerGeneratedAttribute]
public BsonToken get_Parent();
    [CompilerGeneratedAttribute]
public void set_Parent(BsonToken value);
    [CompilerGeneratedAttribute]
public int get_CalculatedSize();
    [CompilerGeneratedAttribute]
public void set_CalculatedSize(int value);
}
internal enum Newtonsoft.Json.Bson.BsonType : Enum {
    public sbyte value__;
    public static BsonType Number;
    public static BsonType String;
    public static BsonType Object;
    public static BsonType Array;
    public static BsonType Binary;
    public static BsonType Undefined;
    public static BsonType Oid;
    public static BsonType Boolean;
    public static BsonType Date;
    public static BsonType Null;
    public static BsonType Regex;
    public static BsonType Reference;
    public static BsonType Code;
    public static BsonType Symbol;
    public static BsonType CodeWScope;
    public static BsonType Integer;
    public static BsonType TimeStamp;
    public static BsonType Long;
    public static BsonType MinKey;
    public static BsonType MaxKey;
}
internal class Newtonsoft.Json.Bson.BsonValue : BsonToken {
    private object _value;
    private BsonType _type;
    public object Value { get; }
    public BsonType Type { get; }
    public BsonValue(object value, BsonType type);
    public object get_Value();
    public virtual BsonType get_Type();
}
[ObsoleteAttribute("BSON reading and writing has been moved to its own package. See https://www.nuget.org/packages/Newtonsoft.Json.Bson for more details.")]
internal class Newtonsoft.Json.Bson.BsonWriter : JsonWriter {
    private BsonBinaryWriter _writer;
    private BsonToken _root;
    private BsonToken _parent;
    private string _propertyName;
    public DateTimeKind DateTimeKindHandling { get; public set; }
    public BsonWriter(Stream stream);
    public BsonWriter(BinaryWriter writer);
    public DateTimeKind get_DateTimeKindHandling();
    public void set_DateTimeKindHandling(DateTimeKind value);
    public virtual void Flush();
    protected virtual void WriteEnd(JsonToken token);
    public virtual void WriteComment(string text);
    public virtual void WriteStartConstructor(string name);
    public virtual void WriteRaw(string json);
    public virtual void WriteRawValue(string json);
    public virtual void WriteStartArray();
    public virtual void WriteStartObject();
    public virtual void WritePropertyName(string name);
    public virtual void Close();
    private void AddParent(BsonToken container);
    private void RemoveParent();
    private void AddValue(object value, BsonType type);
    internal void AddToken(BsonToken token);
    public virtual void WriteValue(object value);
    public virtual void WriteNull();
    public virtual void WriteUndefined();
    public virtual void WriteValue(string value);
    public virtual void WriteValue(int value);
    [CLSCompliantAttribute("False")]
public virtual void WriteValue(UInt32 value);
    public virtual void WriteValue(long value);
    [CLSCompliantAttribute("False")]
public virtual void WriteValue(ulong value);
    public virtual void WriteValue(float value);
    public virtual void WriteValue(double value);
    public virtual void WriteValue(bool value);
    public virtual void WriteValue(short value);
    [CLSCompliantAttribute("False")]
public virtual void WriteValue(ushort value);
    public virtual void WriteValue(char value);
    public virtual void WriteValue(byte value);
    [CLSCompliantAttribute("False")]
public virtual void WriteValue(sbyte value);
    public virtual void WriteValue(decimal value);
    public virtual void WriteValue(DateTime value);
    public virtual void WriteValue(DateTimeOffset value);
    public virtual void WriteValue(Byte[] value);
    public virtual void WriteValue(Guid value);
    public virtual void WriteValue(TimeSpan value);
    public virtual void WriteValue(Uri value);
    public void WriteObjectId(Byte[] value);
    public void WriteRegex(string pattern, string options);
}
internal enum Newtonsoft.Json.ConstructorHandling : Enum {
    public int value__;
    public static ConstructorHandling Default;
    public static ConstructorHandling AllowNonPublicDefaultConstructor;
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal class Newtonsoft.Json.Converters.BinaryConverter : JsonConverter {
    private static string BinaryTypeName;
    private static string BinaryToArrayName;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
private static ReflectionObject _reflectionObject;
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    private Byte[] GetByteArray(object value);
    private static void EnsureReflectionObject(Type t);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    private Byte[] ReadByteArray(JsonReader reader);
    public virtual bool CanConvert(Type objectType);
}
[ObsoleteAttribute("BSON reading and writing has been moved to its own package. See https://www.nuget.org/packages/Newtonsoft.Json.Bson for more details.")]
internal class Newtonsoft.Json.Converters.BsonObjectIdConverter : JsonConverter {
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual bool CanConvert(Type objectType);
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal abstract class Newtonsoft.Json.Converters.CustomCreationConverter`1 : JsonConverter {
    public bool CanWrite { get; }
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public abstract virtual T Create(Type objectType);
    public virtual bool CanConvert(Type objectType);
    public virtual bool get_CanWrite();
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal class Newtonsoft.Json.Converters.DataSetConverter : JsonConverter {
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual bool CanConvert(Type valueType);
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal class Newtonsoft.Json.Converters.DataTableConverter : JsonConverter {
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    private static void CreateRow(JsonReader reader, DataTable dt, JsonSerializer serializer);
    private static Type GetColumnDataType(JsonReader reader);
    public virtual bool CanConvert(Type valueType);
}
internal abstract class Newtonsoft.Json.Converters.DateTimeConverterBase : JsonConverter {
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public virtual bool CanConvert(Type objectType);
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal class Newtonsoft.Json.Converters.DiscriminatedUnionConverter : JsonConverter {
    private static string CasePropertyName;
    private static string FieldsPropertyName;
    private static ThreadSafeStore`2<Type, Union> UnionCache;
    private static ThreadSafeStore`2<Type, Type> UnionTypeLookupCache;
    private static DiscriminatedUnionConverter();
    private static Type CreateUnionTypeLookup(Type t);
    private static Union CreateUnion(Type t);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual bool CanConvert(Type objectType);
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal class Newtonsoft.Json.Converters.EntityKeyMemberConverter : JsonConverter {
    private static string EntityKeyMemberFullTypeName;
    private static string KeyPropertyName;
    private static string TypePropertyName;
    private static string ValuePropertyName;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
private static ReflectionObject _reflectionObject;
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    private static void ReadAndAssertProperty(JsonReader reader, string propertyName);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    private static void EnsureReflectionObject(Type objectType);
    public virtual bool CanConvert(Type objectType);
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal class Newtonsoft.Json.Converters.ExpandoObjectConverter : JsonConverter {
    public bool CanWrite { get; }
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    private object ReadValue(JsonReader reader);
    private object ReadList(JsonReader reader);
    private object ReadObject(JsonReader reader);
    public virtual bool CanConvert(Type objectType);
    public virtual bool get_CanWrite();
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal class Newtonsoft.Json.Converters.IsoDateTimeConverter : DateTimeConverterBase {
    private static string DefaultDateTimeFormat;
    private DateTimeStyles _dateTimeStyles;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
private string _dateTimeFormat;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
private CultureInfo _culture;
    public DateTimeStyles DateTimeStyles { get; public set; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
public string DateTimeFormat { get; public set; }
    public CultureInfo Culture { get; public set; }
    public DateTimeStyles get_DateTimeStyles();
    public void set_DateTimeStyles(DateTimeStyles value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public string get_DateTimeFormat();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public void set_DateTimeFormat(string value);
    public CultureInfo get_Culture();
    public void set_Culture(CultureInfo value);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal interface Newtonsoft.Json.Converters.IXmlDeclaration {
    public string Version { get; }
    public string Encoding { get; public set; }
    public string Standalone { get; public set; }
    public abstract virtual string get_Version();
    public abstract virtual string get_Encoding();
    public abstract virtual void set_Encoding(string value);
    public abstract virtual string get_Standalone();
    public abstract virtual void set_Standalone(string value);
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal interface Newtonsoft.Json.Converters.IXmlDocument {
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
public IXmlElement DocumentElement { get; }
    public abstract virtual IXmlNode CreateComment(string text);
    public abstract virtual IXmlNode CreateTextNode(string text);
    public abstract virtual IXmlNode CreateCDataSection(string data);
    public abstract virtual IXmlNode CreateWhitespace(string text);
    public abstract virtual IXmlNode CreateSignificantWhitespace(string text);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public abstract virtual IXmlNode CreateXmlDeclaration(string version, string encoding, string standalone);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public abstract virtual IXmlNode CreateXmlDocumentType(string name, string publicId, string systemId, string internalSubset);
    public abstract virtual IXmlNode CreateProcessingInstruction(string target, string data);
    public abstract virtual IXmlElement CreateElement(string elementName);
    public abstract virtual IXmlElement CreateElement(string qualifiedName, string namespaceUri);
    public abstract virtual IXmlNode CreateAttribute(string name, string value);
    public abstract virtual IXmlNode CreateAttribute(string qualifiedName, string namespaceUri, string value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public abstract virtual IXmlElement get_DocumentElement();
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal interface Newtonsoft.Json.Converters.IXmlDocumentType {
    public string Name { get; }
    public string System { get; }
    public string Public { get; }
    public string InternalSubset { get; }
    public abstract virtual string get_Name();
    public abstract virtual string get_System();
    public abstract virtual string get_Public();
    public abstract virtual string get_InternalSubset();
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal interface Newtonsoft.Json.Converters.IXmlElement {
    public bool IsEmpty { get; }
    public abstract virtual void SetAttributeNode(IXmlNode attribute);
    public abstract virtual string GetPrefixOfNamespace(string namespaceUri);
    public abstract virtual bool get_IsEmpty();
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
internal interface Newtonsoft.Json.Converters.IXmlNode {
    public XmlNodeType NodeType { get; }
    public string LocalName { get; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("1")]
public List`1<IXmlNode> ChildNodes { get; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("1")]
public List`1<IXmlNode> Attributes { get; }
    public IXmlNode ParentNode { get; }
    public string Value { get; public set; }
    public string NamespaceUri { get; }
    public object WrappedNode { get; }
    public abstract virtual XmlNodeType get_NodeType();
    public abstract virtual string get_LocalName();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public abstract virtual List`1<IXmlNode> get_ChildNodes();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public abstract virtual List`1<IXmlNode> get_Attributes();
    public abstract virtual IXmlNode get_ParentNode();
    public abstract virtual string get_Value();
    public abstract virtual void set_Value(string value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public abstract virtual IXmlNode AppendChild(IXmlNode newChild);
    public abstract virtual string get_NamespaceUri();
    public abstract virtual object get_WrappedNode();
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal class Newtonsoft.Json.Converters.JavaScriptDateTimeConverter : DateTimeConverterBase {
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal class Newtonsoft.Json.Converters.KeyValuePairConverter : JsonConverter {
    private static string KeyName;
    private static string ValueName;
    private static ThreadSafeStore`2<Type, ReflectionObject> ReflectionObjectPerType;
    private static KeyValuePairConverter();
    private static ReflectionObject InitializeReflectionObject(Type t);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual bool CanConvert(Type objectType);
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal class Newtonsoft.Json.Converters.RegexConverter : JsonConverter {
    private static string PatternName;
    private static string OptionsName;
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    private bool HasFlag(RegexOptions options, RegexOptions flag);
    private void WriteBson(BsonWriter writer, Regex regex);
    private void WriteJson(JsonWriter writer, Regex regex, JsonSerializer serializer);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    private object ReadRegexString(JsonReader reader);
    private Regex ReadRegexObject(JsonReader reader, JsonSerializer serializer);
    public virtual bool CanConvert(Type objectType);
    private bool IsRegex(Type objectType);
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal class Newtonsoft.Json.Converters.StringEnumConverter : JsonConverter {
    [CompilerGeneratedAttribute]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
private NamingStrategy <NamingStrategy>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowIntegerValues>k__BackingField;
    [ObsoleteAttribute("StringEnumConverter.CamelCaseText is obsolete. Set StringEnumConverter.NamingStrategy with CamelCaseNamingStrategy instead.")]
public bool CamelCaseText { get; public set; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
public NamingStrategy NamingStrategy { get; public set; }
    public bool AllowIntegerValues { get; public set; }
    [ObsoleteAttribute("StringEnumConverter(bool) is obsolete. Create a converter with StringEnumConverter(NamingStrategy, bool) instead.")]
public StringEnumConverter(bool camelCaseText);
    public StringEnumConverter(NamingStrategy namingStrategy, bool allowIntegerValues);
    public StringEnumConverter(Type namingStrategyType);
    public StringEnumConverter(Type namingStrategyType, Object[] namingStrategyParameters);
    public StringEnumConverter(Type namingStrategyType, Object[] namingStrategyParameters, bool allowIntegerValues);
    public bool get_CamelCaseText();
    public void set_CamelCaseText(bool value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public NamingStrategy get_NamingStrategy();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_NamingStrategy(NamingStrategy value);
    [CompilerGeneratedAttribute]
public bool get_AllowIntegerValues();
    [CompilerGeneratedAttribute]
public void set_AllowIntegerValues(bool value);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual bool CanConvert(Type objectType);
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal class Newtonsoft.Json.Converters.UnixDateTimeConverter : DateTimeConverterBase {
    internal static DateTime UnixEpoch;
    private static UnixDateTimeConverter();
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal class Newtonsoft.Json.Converters.VersionConverter : JsonConverter {
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual bool CanConvert(Type objectType);
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal class Newtonsoft.Json.Converters.XAttributeWrapper : XObjectWrapper {
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("1")]
private XAttribute Attribute { get; }
    public string Value { get; public set; }
    public string LocalName { get; }
    public string NamespaceUri { get; }
    public IXmlNode ParentNode { get; }
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public XAttributeWrapper(XAttribute attribute);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
private XAttribute get_Attribute();
    public virtual string get_Value();
    public virtual void set_Value(string value);
    public virtual string get_LocalName();
    public virtual string get_NamespaceUri();
    public virtual IXmlNode get_ParentNode();
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal class Newtonsoft.Json.Converters.XCommentWrapper : XObjectWrapper {
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("1")]
private XComment Text { get; }
    public string Value { get; public set; }
    public IXmlNode ParentNode { get; }
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public XCommentWrapper(XComment text);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
private XComment get_Text();
    public virtual string get_Value();
    public virtual void set_Value(string value);
    public virtual IXmlNode get_ParentNode();
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal class Newtonsoft.Json.Converters.XContainerWrapper : XObjectWrapper {
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private List`1<IXmlNode> _childNodes;
    private XContainer Container { get; }
    public List`1<IXmlNode> ChildNodes { get; }
    protected bool HasChildNodes { get; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
public IXmlNode ParentNode { get; }
    public XContainerWrapper(XContainer container);
    private XContainer get_Container();
    public virtual List`1<IXmlNode> get_ChildNodes();
    protected virtual bool get_HasChildNodes();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public virtual IXmlNode get_ParentNode();
    internal static IXmlNode WrapNode(XObject node);
    public virtual IXmlNode AppendChild(IXmlNode newChild);
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal class Newtonsoft.Json.Converters.XDeclarationWrapper : XObjectWrapper {
    [CompilerGeneratedAttribute]
private XDeclaration <Declaration>k__BackingField;
    internal XDeclaration Declaration { get; }
    public XmlNodeType NodeType { get; }
    public string Version { get; }
    public string Encoding { get; public set; }
    public string Standalone { get; public set; }
    public XDeclarationWrapper(XDeclaration declaration);
    [CompilerGeneratedAttribute]
internal XDeclaration get_Declaration();
    public virtual XmlNodeType get_NodeType();
    public sealed virtual string get_Version();
    public sealed virtual string get_Encoding();
    public sealed virtual void set_Encoding(string value);
    public sealed virtual string get_Standalone();
    public sealed virtual void set_Standalone(string value);
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal class Newtonsoft.Json.Converters.XDocumentTypeWrapper : XObjectWrapper {
    private XDocumentType _documentType;
    public string Name { get; }
    public string System { get; }
    public string Public { get; }
    public string InternalSubset { get; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
public string LocalName { get; }
    public XDocumentTypeWrapper(XDocumentType documentType);
    public sealed virtual string get_Name();
    public sealed virtual string get_System();
    public sealed virtual string get_Public();
    public sealed virtual string get_InternalSubset();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public virtual string get_LocalName();
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal class Newtonsoft.Json.Converters.XDocumentWrapper : XContainerWrapper {
    private XDocument Document { get; }
    public List`1<IXmlNode> ChildNodes { get; }
    protected bool HasChildNodes { get; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
public IXmlElement DocumentElement { get; }
    public XDocumentWrapper(XDocument document);
    private XDocument get_Document();
    public virtual List`1<IXmlNode> get_ChildNodes();
    protected virtual bool get_HasChildNodes();
    public sealed virtual IXmlNode CreateComment(string text);
    public sealed virtual IXmlNode CreateTextNode(string text);
    public sealed virtual IXmlNode CreateCDataSection(string data);
    public sealed virtual IXmlNode CreateWhitespace(string text);
    public sealed virtual IXmlNode CreateSignificantWhitespace(string text);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public sealed virtual IXmlNode CreateXmlDeclaration(string version, string encoding, string standalone);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public sealed virtual IXmlNode CreateXmlDocumentType(string name, string publicId, string systemId, string internalSubset);
    public sealed virtual IXmlNode CreateProcessingInstruction(string target, string data);
    public sealed virtual IXmlElement CreateElement(string elementName);
    public sealed virtual IXmlElement CreateElement(string qualifiedName, string namespaceUri);
    public sealed virtual IXmlNode CreateAttribute(string name, string value);
    public sealed virtual IXmlNode CreateAttribute(string qualifiedName, string namespaceUri, string value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public sealed virtual IXmlElement get_DocumentElement();
    public virtual IXmlNode AppendChild(IXmlNode newChild);
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal class Newtonsoft.Json.Converters.XElementWrapper : XContainerWrapper {
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private List`1<IXmlNode> _attributes;
    private XElement Element { get; }
    public List`1<IXmlNode> Attributes { get; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
public string Value { get; public set; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
public string LocalName { get; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
public string NamespaceUri { get; }
    public bool IsEmpty { get; }
    public XElementWrapper(XElement element);
    private XElement get_Element();
    public sealed virtual void SetAttributeNode(IXmlNode attribute);
    public virtual List`1<IXmlNode> get_Attributes();
    private bool HasImplicitNamespaceAttribute(string namespaceUri);
    public virtual IXmlNode AppendChild(IXmlNode newChild);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public virtual string get_Value();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public virtual void set_Value(string value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public virtual string get_LocalName();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public virtual string get_NamespaceUri();
    public sealed virtual string GetPrefixOfNamespace(string namespaceUri);
    public sealed virtual bool get_IsEmpty();
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal class Newtonsoft.Json.Converters.XmlDeclarationWrapper : XmlNodeWrapper {
    private XmlDeclaration _declaration;
    public string Version { get; }
    public string Encoding { get; public set; }
    public string Standalone { get; public set; }
    public XmlDeclarationWrapper(XmlDeclaration declaration);
    public sealed virtual string get_Version();
    public sealed virtual string get_Encoding();
    public sealed virtual void set_Encoding(string value);
    public sealed virtual string get_Standalone();
    public sealed virtual void set_Standalone(string value);
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal class Newtonsoft.Json.Converters.XmlDocumentTypeWrapper : XmlNodeWrapper {
    private XmlDocumentType _documentType;
    public string Name { get; }
    public string System { get; }
    public string Public { get; }
    public string InternalSubset { get; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
public string LocalName { get; }
    public XmlDocumentTypeWrapper(XmlDocumentType documentType);
    public sealed virtual string get_Name();
    public sealed virtual string get_System();
    public sealed virtual string get_Public();
    public sealed virtual string get_InternalSubset();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public virtual string get_LocalName();
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal class Newtonsoft.Json.Converters.XmlDocumentWrapper : XmlNodeWrapper {
    private XmlDocument _document;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
public IXmlElement DocumentElement { get; }
    public XmlDocumentWrapper(XmlDocument document);
    public sealed virtual IXmlNode CreateComment(string data);
    public sealed virtual IXmlNode CreateTextNode(string text);
    public sealed virtual IXmlNode CreateCDataSection(string data);
    public sealed virtual IXmlNode CreateWhitespace(string text);
    public sealed virtual IXmlNode CreateSignificantWhitespace(string text);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public sealed virtual IXmlNode CreateXmlDeclaration(string version, string encoding, string standalone);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public sealed virtual IXmlNode CreateXmlDocumentType(string name, string publicId, string systemId, string internalSubset);
    public sealed virtual IXmlNode CreateProcessingInstruction(string target, string data);
    public sealed virtual IXmlElement CreateElement(string elementName);
    public sealed virtual IXmlElement CreateElement(string qualifiedName, string namespaceUri);
    public sealed virtual IXmlNode CreateAttribute(string name, string value);
    public sealed virtual IXmlNode CreateAttribute(string qualifiedName, string namespaceUri, string value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public sealed virtual IXmlElement get_DocumentElement();
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal class Newtonsoft.Json.Converters.XmlElementWrapper : XmlNodeWrapper {
    private XmlElement _element;
    public bool IsEmpty { get; }
    public XmlElementWrapper(XmlElement element);
    public sealed virtual void SetAttributeNode(IXmlNode attribute);
    public sealed virtual string GetPrefixOfNamespace(string namespaceUri);
    public sealed virtual bool get_IsEmpty();
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal class Newtonsoft.Json.Converters.XmlNodeConverter : JsonConverter {
    internal static List`1<IXmlNode> EmptyChildNodes;
    private static string TextName;
    private static string CommentName;
    private static string CDataName;
    private static string WhitespaceName;
    private static string SignificantWhitespaceName;
    private static string DeclarationName;
    private static string JsonNamespaceUri;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <DeserializeRootElementName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <WriteArrayAttribute>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <OmitRootObject>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EncodeSpecialCharacters>k__BackingField;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
public string DeserializeRootElementName { get; public set; }
    public bool WriteArrayAttribute { get; public set; }
    public bool OmitRootObject { get; public set; }
    public bool EncodeSpecialCharacters { get; public set; }
    private static XmlNodeConverter();
    [CompilerGeneratedAttribute]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public string get_DeserializeRootElementName();
    [CompilerGeneratedAttribute]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public void set_DeserializeRootElementName(string value);
    [CompilerGeneratedAttribute]
public bool get_WriteArrayAttribute();
    [CompilerGeneratedAttribute]
public void set_WriteArrayAttribute(bool value);
    [CompilerGeneratedAttribute]
public bool get_OmitRootObject();
    [CompilerGeneratedAttribute]
public void set_OmitRootObject(bool value);
    [CompilerGeneratedAttribute]
public bool get_EncodeSpecialCharacters();
    [CompilerGeneratedAttribute]
public void set_EncodeSpecialCharacters(bool value);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    private IXmlNode WrapXml(object value);
    private void PushParentNamespaces(IXmlNode node, XmlNamespaceManager manager);
    private string ResolveFullName(IXmlNode node, XmlNamespaceManager manager);
    private string GetPropertyName(IXmlNode node, XmlNamespaceManager manager);
    private bool IsArray(IXmlNode node);
    private void SerializeGroupedNodes(JsonWriter writer, IXmlNode node, XmlNamespaceManager manager, bool writePropertyName);
    private void WriteGroupedNodes(JsonWriter writer, XmlNamespaceManager manager, bool writePropertyName, List`1<IXmlNode> groupedNodes, string elementNames);
    private void WriteGroupedNodes(JsonWriter writer, XmlNamespaceManager manager, bool writePropertyName, IXmlNode node, string elementNames);
    private void SerializeNode(JsonWriter writer, IXmlNode node, XmlNamespaceManager manager, bool writePropertyName);
    private static bool AllSameName(IXmlNode node);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    private void DeserializeValue(JsonReader reader, IXmlDocument document, XmlNamespaceManager manager, string propertyName, IXmlNode currentNode);
    private void ReadElement(JsonReader reader, IXmlDocument document, IXmlNode currentNode, string propertyName, XmlNamespaceManager manager);
    private void CreateElement(JsonReader reader, IXmlDocument document, IXmlNode currentNode, string elementName, XmlNamespaceManager manager, string elementPrefix, Dictionary`2<string, string> attributeNameValues);
    private static void AddAttribute(JsonReader reader, IXmlDocument document, IXmlNode currentNode, string propertyName, string attributeName, XmlNamespaceManager manager, string attributePrefix);
    private static string ConvertTokenToXmlValue(JsonReader reader);
    private void ReadArrayElements(JsonReader reader, IXmlDocument document, string propertyName, IXmlNode currentNode, XmlNamespaceManager manager);
    private void AddJsonArrayAttribute(IXmlElement element, IXmlDocument document);
    private bool ShouldReadInto(JsonReader reader);
    private Dictionary`2<string, string> ReadAttributeElements(JsonReader reader, XmlNamespaceManager manager);
    private void CreateInstruction(JsonReader reader, IXmlDocument document, IXmlNode currentNode, string propertyName);
    private void CreateDocumentType(JsonReader reader, IXmlDocument document, IXmlNode currentNode);
    private IXmlElement CreateElement(string elementName, IXmlDocument document, string elementPrefix, XmlNamespaceManager manager);
    private void DeserializeNode(JsonReader reader, IXmlDocument document, XmlNamespaceManager manager, IXmlNode currentNode);
    private bool IsNamespaceAttribute(string attributeName, String& prefix);
    private bool ValueAttributes(List`1<IXmlNode> c);
    public virtual bool CanConvert(Type valueType);
    private bool IsXObject(Type valueType);
    private bool IsXmlNode(Type valueType);
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
internal class Newtonsoft.Json.Converters.XmlNodeWrapper : object {
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("1")]
private XmlNode _node;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private List`1<IXmlNode> _childNodes;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private List`1<IXmlNode> _attributes;
    public object WrappedNode { get; }
    public XmlNodeType NodeType { get; }
    public string LocalName { get; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("1")]
public List`1<IXmlNode> ChildNodes { get; }
    protected bool HasChildNodes { get; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("1")]
public List`1<IXmlNode> Attributes { get; }
    private bool HasAttributes { get; }
    public IXmlNode ParentNode { get; }
    public string Value { get; public set; }
    public string NamespaceUri { get; }
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public XmlNodeWrapper(XmlNode node);
    public sealed virtual object get_WrappedNode();
    public sealed virtual XmlNodeType get_NodeType();
    public virtual string get_LocalName();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public sealed virtual List`1<IXmlNode> get_ChildNodes();
    protected virtual bool get_HasChildNodes();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal static IXmlNode WrapNode(XmlNode node);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public sealed virtual List`1<IXmlNode> get_Attributes();
    private bool get_HasAttributes();
    public sealed virtual IXmlNode get_ParentNode();
    public sealed virtual string get_Value();
    public sealed virtual void set_Value(string value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public sealed virtual IXmlNode AppendChild(IXmlNode newChild);
    public sealed virtual string get_NamespaceUri();
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
internal class Newtonsoft.Json.Converters.XObjectWrapper : object {
    private XObject _xmlObject;
    public object WrappedNode { get; }
    public XmlNodeType NodeType { get; }
    public string LocalName { get; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("1")]
public List`1<IXmlNode> ChildNodes { get; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("1")]
public List`1<IXmlNode> Attributes { get; }
    public IXmlNode ParentNode { get; }
    public string Value { get; public set; }
    public string NamespaceUri { get; }
    public XObjectWrapper(XObject xmlObject);
    public sealed virtual object get_WrappedNode();
    public virtual XmlNodeType get_NodeType();
    public virtual string get_LocalName();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public virtual List`1<IXmlNode> get_ChildNodes();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public virtual List`1<IXmlNode> get_Attributes();
    public virtual IXmlNode get_ParentNode();
    public virtual string get_Value();
    public virtual void set_Value(string value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public virtual IXmlNode AppendChild(IXmlNode newChild);
    public virtual string get_NamespaceUri();
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal class Newtonsoft.Json.Converters.XProcessingInstructionWrapper : XObjectWrapper {
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("1")]
private XProcessingInstruction ProcessingInstruction { get; }
    public string LocalName { get; }
    public string Value { get; public set; }
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public XProcessingInstructionWrapper(XProcessingInstruction processingInstruction);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
private XProcessingInstruction get_ProcessingInstruction();
    public virtual string get_LocalName();
    public virtual string get_Value();
    public virtual void set_Value(string value);
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal class Newtonsoft.Json.Converters.XTextWrapper : XObjectWrapper {
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("1")]
private XText Text { get; }
    public string Value { get; public set; }
    public IXmlNode ParentNode { get; }
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public XTextWrapper(XText text);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
private XText get_Text();
    public virtual string get_Value();
    public virtual void set_Value(string value);
    public virtual IXmlNode get_ParentNode();
}
internal enum Newtonsoft.Json.DateFormatHandling : Enum {
    public int value__;
    public static DateFormatHandling IsoDateFormat;
    public static DateFormatHandling MicrosoftDateFormat;
}
internal enum Newtonsoft.Json.DateParseHandling : Enum {
    public int value__;
    public static DateParseHandling None;
    public static DateParseHandling DateTime;
    public static DateParseHandling DateTimeOffset;
}
internal enum Newtonsoft.Json.DateTimeZoneHandling : Enum {
    public int value__;
    public static DateTimeZoneHandling Local;
    public static DateTimeZoneHandling Utc;
    public static DateTimeZoneHandling Unspecified;
    public static DateTimeZoneHandling RoundtripKind;
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal class Newtonsoft.Json.DefaultJsonNameTable : JsonNameTable {
    private static int HashCodeRandomizer;
    private int _count;
    private Entry[] _entries;
    private int _mask;
    private static DefaultJsonNameTable();
    public virtual string Get(Char[] key, int start, int length);
    public string Add(string key);
    private string AddEntry(string str, int hashCode);
    private void Grow();
    private static bool TextEquals(string str1, Char[] str2, int str2Start, int str2Length);
}
[FlagsAttribute]
internal enum Newtonsoft.Json.DefaultValueHandling : Enum {
    public int value__;
    public static DefaultValueHandling Include;
    public static DefaultValueHandling Ignore;
    public static DefaultValueHandling Populate;
    public static DefaultValueHandling IgnoreAndPopulate;
}
internal enum Newtonsoft.Json.FloatFormatHandling : Enum {
    public int value__;
    public static FloatFormatHandling String;
    public static FloatFormatHandling Symbol;
    public static FloatFormatHandling DefaultValue;
}
internal enum Newtonsoft.Json.FloatParseHandling : Enum {
    public int value__;
    public static FloatParseHandling Double;
    public static FloatParseHandling Decimal;
}
internal enum Newtonsoft.Json.Formatting : Enum {
    public int value__;
    public static Formatting None;
    public static Formatting Indented;
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal interface Newtonsoft.Json.IArrayPool`1 {
    public abstract virtual T[] Rent(int minimumLength);
    public abstract virtual void Return(T[] array);
}
internal interface Newtonsoft.Json.IJsonLineInfo {
    public int LineNumber { get; }
    public int LinePosition { get; }
    public abstract virtual bool HasLineInfo();
    public abstract virtual int get_LineNumber();
    public abstract virtual int get_LinePosition();
}
[AttributeUsageAttribute("1028")]
internal class Newtonsoft.Json.JsonArrayAttribute : JsonContainerAttribute {
    private bool _allowNullItems;
    public bool AllowNullItems { get; public set; }
    public JsonArrayAttribute(bool allowNullItems);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public JsonArrayAttribute(string id);
    public bool get_AllowNullItems();
    public void set_AllowNullItems(bool value);
}
[AttributeUsageAttribute("32")]
internal class Newtonsoft.Json.JsonConstructorAttribute : Attribute {
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
[AttributeUsageAttribute("1028")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal abstract class Newtonsoft.Json.JsonContainerAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <ItemConverterType>k__BackingField;
    [CompilerGeneratedAttribute]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Object[] <ItemConverterParameters>k__BackingField;
    [CompilerGeneratedAttribute]
private NamingStrategy <NamingStrategyInstance>k__BackingField;
    internal Nullable`1<bool> _isReference;
    internal Nullable`1<bool> _itemIsReference;
    internal Nullable`1<ReferenceLoopHandling> _itemReferenceLoopHandling;
    internal Nullable`1<TypeNameHandling> _itemTypeNameHandling;
    private Type _namingStrategyType;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Object[] _namingStrategyParameters;
    public string Id { get; public set; }
    public string Title { get; public set; }
    public string Description { get; public set; }
    public Type ItemConverterType { get; public set; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Object[] ItemConverterParameters { get; public set; }
    public Type NamingStrategyType { get; public set; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Object[] NamingStrategyParameters { get; public set; }
    internal NamingStrategy NamingStrategyInstance { get; internal set; }
    public bool IsReference { get; public set; }
    public bool ItemIsReference { get; public set; }
    public ReferenceLoopHandling ItemReferenceLoopHandling { get; public set; }
    public TypeNameHandling ItemTypeNameHandling { get; public set; }
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
protected JsonContainerAttribute(string id);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public Type get_ItemConverterType();
    [CompilerGeneratedAttribute]
public void set_ItemConverterType(Type value);
    [CompilerGeneratedAttribute]
public Object[] get_ItemConverterParameters();
    [CompilerGeneratedAttribute]
public void set_ItemConverterParameters(Object[] value);
    public Type get_NamingStrategyType();
    public void set_NamingStrategyType(Type value);
    public Object[] get_NamingStrategyParameters();
    public void set_NamingStrategyParameters(Object[] value);
    [CompilerGeneratedAttribute]
internal NamingStrategy get_NamingStrategyInstance();
    [CompilerGeneratedAttribute]
internal void set_NamingStrategyInstance(NamingStrategy value);
    public bool get_IsReference();
    public void set_IsReference(bool value);
    public bool get_ItemIsReference();
    public void set_ItemIsReference(bool value);
    public ReferenceLoopHandling get_ItemReferenceLoopHandling();
    public void set_ItemReferenceLoopHandling(ReferenceLoopHandling value);
    public TypeNameHandling get_ItemTypeNameHandling();
    public void set_ItemTypeNameHandling(TypeNameHandling value);
}
internal enum Newtonsoft.Json.JsonContainerType : Enum {
    public int value__;
    public static JsonContainerType None;
    public static JsonContainerType Object;
    public static JsonContainerType Array;
    public static JsonContainerType Constructor;
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal static class Newtonsoft.Json.JsonConvert : object {
    [CompilerGeneratedAttribute]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Func`1<JsonSerializerSettings> <DefaultSettings>k__BackingField;
    public static string True;
    public static string False;
    public static string Null;
    public static string Undefined;
    public static string PositiveInfinity;
    public static string NegativeInfinity;
    public static string NaN;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Func`1<JsonSerializerSettings> DefaultSettings { get; public set; }
    private static JsonConvert();
    [CompilerGeneratedAttribute]
public static Func`1<JsonSerializerSettings> get_DefaultSettings();
    [CompilerGeneratedAttribute]
public static void set_DefaultSettings(Func`1<JsonSerializerSettings> value);
    public static string ToString(DateTime value);
    public static string ToString(DateTime value, DateFormatHandling format, DateTimeZoneHandling timeZoneHandling);
    public static string ToString(DateTimeOffset value);
    public static string ToString(DateTimeOffset value, DateFormatHandling format);
    public static string ToString(bool value);
    public static string ToString(char value);
    public static string ToString(Enum value);
    public static string ToString(int value);
    public static string ToString(short value);
    [CLSCompliantAttribute("False")]
public static string ToString(ushort value);
    [CLSCompliantAttribute("False")]
public static string ToString(UInt32 value);
    public static string ToString(long value);
    private static string ToStringInternal(BigInteger value);
    [CLSCompliantAttribute("False")]
public static string ToString(ulong value);
    public static string ToString(float value);
    internal static string ToString(float value, FloatFormatHandling floatFormatHandling, char quoteChar, bool nullable);
    private static string EnsureFloatFormat(double value, string text, FloatFormatHandling floatFormatHandling, char quoteChar, bool nullable);
    public static string ToString(double value);
    internal static string ToString(double value, FloatFormatHandling floatFormatHandling, char quoteChar, bool nullable);
    private static string EnsureDecimalPlace(double value, string text);
    private static string EnsureDecimalPlace(string text);
    public static string ToString(byte value);
    [CLSCompliantAttribute("False")]
public static string ToString(sbyte value);
    public static string ToString(decimal value);
    public static string ToString(Guid value);
    internal static string ToString(Guid value, char quoteChar);
    public static string ToString(TimeSpan value);
    internal static string ToString(TimeSpan value, char quoteChar);
    public static string ToString(Uri value);
    internal static string ToString(Uri value, char quoteChar);
    public static string ToString(string value);
    public static string ToString(string value, char delimiter);
    public static string ToString(string value, char delimiter, StringEscapeHandling stringEscapeHandling);
    public static string ToString(object value);
    [DebuggerStepThroughAttribute]
public static string SerializeObject(object value);
    [DebuggerStepThroughAttribute]
public static string SerializeObject(object value, Formatting formatting);
    [DebuggerStepThroughAttribute]
public static string SerializeObject(object value, JsonConverter[] converters);
    [DebuggerStepThroughAttribute]
public static string SerializeObject(object value, Formatting formatting, JsonConverter[] converters);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
[DebuggerStepThroughAttribute]
public static string SerializeObject(object value, JsonSerializerSettings settings);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
[DebuggerStepThroughAttribute]
public static string SerializeObject(object value, Type type, JsonSerializerSettings settings);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
[DebuggerStepThroughAttribute]
public static string SerializeObject(object value, Formatting formatting, JsonSerializerSettings settings);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
[DebuggerStepThroughAttribute]
public static string SerializeObject(object value, Type type, Formatting formatting, JsonSerializerSettings settings);
    private static string SerializeObjectInternal(object value, Type type, JsonSerializer jsonSerializer);
    [DebuggerStepThroughAttribute]
public static object DeserializeObject(string value);
    [DebuggerStepThroughAttribute]
public static object DeserializeObject(string value, JsonSerializerSettings settings);
    [DebuggerStepThroughAttribute]
public static object DeserializeObject(string value, Type type);
    [DebuggerStepThroughAttribute]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public static T DeserializeObject(string value);
    [DebuggerStepThroughAttribute]
public static T DeserializeAnonymousType(string value, T anonymousTypeObject);
    [DebuggerStepThroughAttribute]
public static T DeserializeAnonymousType(string value, T anonymousTypeObject, JsonSerializerSettings settings);
    [DebuggerStepThroughAttribute]
public static T DeserializeObject(string value, JsonConverter[] converters);
    [DebuggerStepThroughAttribute]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public static T DeserializeObject(string value, JsonSerializerSettings settings);
    [DebuggerStepThroughAttribute]
public static object DeserializeObject(string value, Type type, JsonConverter[] converters);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public static object DeserializeObject(string value, Type type, JsonSerializerSettings settings);
    [DebuggerStepThroughAttribute]
public static void PopulateObject(string value, object target);
    public static void PopulateObject(string value, object target, JsonSerializerSettings settings);
    public static string SerializeXmlNode(XmlNode node);
    public static string SerializeXmlNode(XmlNode node, Formatting formatting);
    public static string SerializeXmlNode(XmlNode node, Formatting formatting, bool omitRootObject);
    public static XmlDocument DeserializeXmlNode(string value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public static XmlDocument DeserializeXmlNode(string value, string deserializeRootElementName);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public static XmlDocument DeserializeXmlNode(string value, string deserializeRootElementName, bool writeArrayAttribute);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public static XmlDocument DeserializeXmlNode(string value, string deserializeRootElementName, bool writeArrayAttribute, bool encodeSpecialCharacters);
    public static string SerializeXNode(XObject node);
    public static string SerializeXNode(XObject node, Formatting formatting);
    public static string SerializeXNode(XObject node, Formatting formatting, bool omitRootObject);
    public static XDocument DeserializeXNode(string value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public static XDocument DeserializeXNode(string value, string deserializeRootElementName);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public static XDocument DeserializeXNode(string value, string deserializeRootElementName, bool writeArrayAttribute);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public static XDocument DeserializeXNode(string value, string deserializeRootElementName, bool writeArrayAttribute, bool encodeSpecialCharacters);
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal abstract class Newtonsoft.Json.JsonConverter : object {
    public bool CanRead { get; }
    public bool CanWrite { get; }
    public abstract virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public abstract virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public abstract virtual bool CanConvert(Type objectType);
    public virtual bool get_CanRead();
    public virtual bool get_CanWrite();
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal abstract class Newtonsoft.Json.JsonConverter`1 : JsonConverter {
    public sealed virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public abstract virtual void WriteJson(JsonWriter writer, T value, JsonSerializer serializer);
    public sealed virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public abstract virtual T ReadJson(JsonReader reader, Type objectType, T existingValue, bool hasExistingValue, JsonSerializer serializer);
    public sealed virtual bool CanConvert(Type objectType);
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[AttributeUsageAttribute("3484")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal class Newtonsoft.Json.JsonConverterAttribute : Attribute {
    private Type _converterType;
    [CompilerGeneratedAttribute]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Object[] <ConverterParameters>k__BackingField;
    public Type ConverterType { get; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Object[] ConverterParameters { get; }
    public JsonConverterAttribute(Type converterType);
    public JsonConverterAttribute(Type converterType, Object[] converterParameters);
    public Type get_ConverterType();
    [CompilerGeneratedAttribute]
public Object[] get_ConverterParameters();
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Newtonsoft.Json.JsonConverterCollection : Collection`1<JsonConverter> {
}
[AttributeUsageAttribute("1028")]
internal class Newtonsoft.Json.JsonDictionaryAttribute : JsonContainerAttribute {
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public JsonDictionaryAttribute(string id);
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal class Newtonsoft.Json.JsonException : Exception {
    public JsonException(string message);
    public JsonException(string message, Exception innerException);
    public JsonException(SerializationInfo info, StreamingContext context);
    internal static JsonException Create(IJsonLineInfo lineInfo, string path, string message);
}
[AttributeUsageAttribute("384")]
internal class Newtonsoft.Json.JsonExtensionDataAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <WriteData>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ReadData>k__BackingField;
    public bool WriteData { get; public set; }
    public bool ReadData { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_WriteData();
    [CompilerGeneratedAttribute]
public void set_WriteData(bool value);
    [CompilerGeneratedAttribute]
public bool get_ReadData();
    [CompilerGeneratedAttribute]
public void set_ReadData(bool value);
}
[AttributeUsageAttribute("384")]
internal class Newtonsoft.Json.JsonIgnoreAttribute : Attribute {
}
internal abstract class Newtonsoft.Json.JsonNameTable : object {
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public abstract virtual string Get(Char[] key, int start, int length);
}
[AttributeUsageAttribute("1036")]
internal class Newtonsoft.Json.JsonObjectAttribute : JsonContainerAttribute {
    private MemberSerialization _memberSerialization;
    internal Nullable`1<MissingMemberHandling> _missingMemberHandling;
    internal Nullable`1<Required> _itemRequired;
    internal Nullable`1<NullValueHandling> _itemNullValueHandling;
    public MemberSerialization MemberSerialization { get; public set; }
    public MissingMemberHandling MissingMemberHandling { get; public set; }
    public NullValueHandling ItemNullValueHandling { get; public set; }
    public Required ItemRequired { get; public set; }
    public JsonObjectAttribute(MemberSerialization memberSerialization);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public JsonObjectAttribute(string id);
    public MemberSerialization get_MemberSerialization();
    public void set_MemberSerialization(MemberSerialization value);
    public MissingMemberHandling get_MissingMemberHandling();
    public void set_MissingMemberHandling(MissingMemberHandling value);
    public NullValueHandling get_ItemNullValueHandling();
    public void set_ItemNullValueHandling(NullValueHandling value);
    public Required get_ItemRequired();
    public void set_ItemRequired(Required value);
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal class Newtonsoft.Json.JsonPosition : ValueType {
    private static Char[] SpecialCharacters;
    internal JsonContainerType Type;
    internal int Position;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
internal string PropertyName;
    internal bool HasIndex;
    public JsonPosition(JsonContainerType type);
    private static JsonPosition();
    internal int CalculateLength();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
internal void WriteTo(StringBuilder sb, StringWriter& writer, Char[]& buffer);
    internal static bool TypeHasIndex(JsonContainerType type);
    internal static string BuildPath(List`1<JsonPosition> positions, Nullable`1<JsonPosition> currentPosition);
    internal static string FormatMessage(IJsonLineInfo lineInfo, string path, string message);
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[AttributeUsageAttribute("2432")]
internal class Newtonsoft.Json.JsonPropertyAttribute : Attribute {
    internal Nullable`1<NullValueHandling> _nullValueHandling;
    internal Nullable`1<DefaultValueHandling> _defaultValueHandling;
    internal Nullable`1<ReferenceLoopHandling> _referenceLoopHandling;
    internal Nullable`1<ObjectCreationHandling> _objectCreationHandling;
    internal Nullable`1<TypeNameHandling> _typeNameHandling;
    internal Nullable`1<bool> _isReference;
    internal Nullable`1<int> _order;
    internal Nullable`1<Required> _required;
    internal Nullable`1<bool> _itemIsReference;
    internal Nullable`1<ReferenceLoopHandling> _itemReferenceLoopHandling;
    internal Nullable`1<TypeNameHandling> _itemTypeNameHandling;
    [CompilerGeneratedAttribute]
private Type <ItemConverterType>k__BackingField;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Object[] <ItemConverterParameters>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <NamingStrategyType>k__BackingField;
    [CompilerGeneratedAttribute]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Object[] <NamingStrategyParameters>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PropertyName>k__BackingField;
    public Type ItemConverterType { get; public set; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Object[] ItemConverterParameters { get; public set; }
    public Type NamingStrategyType { get; public set; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Object[] NamingStrategyParameters { get; public set; }
    public NullValueHandling NullValueHandling { get; public set; }
    public DefaultValueHandling DefaultValueHandling { get; public set; }
    public ReferenceLoopHandling ReferenceLoopHandling { get; public set; }
    public ObjectCreationHandling ObjectCreationHandling { get; public set; }
    public TypeNameHandling TypeNameHandling { get; public set; }
    public bool IsReference { get; public set; }
    public int Order { get; public set; }
    public Required Required { get; public set; }
    public string PropertyName { get; public set; }
    public ReferenceLoopHandling ItemReferenceLoopHandling { get; public set; }
    public TypeNameHandling ItemTypeNameHandling { get; public set; }
    public bool ItemIsReference { get; public set; }
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public JsonPropertyAttribute(string propertyName);
    [CompilerGeneratedAttribute]
public Type get_ItemConverterType();
    [CompilerGeneratedAttribute]
public void set_ItemConverterType(Type value);
    [CompilerGeneratedAttribute]
public Object[] get_ItemConverterParameters();
    [CompilerGeneratedAttribute]
public void set_ItemConverterParameters(Object[] value);
    [CompilerGeneratedAttribute]
public Type get_NamingStrategyType();
    [CompilerGeneratedAttribute]
public void set_NamingStrategyType(Type value);
    [CompilerGeneratedAttribute]
public Object[] get_NamingStrategyParameters();
    [CompilerGeneratedAttribute]
public void set_NamingStrategyParameters(Object[] value);
    public NullValueHandling get_NullValueHandling();
    public void set_NullValueHandling(NullValueHandling value);
    public DefaultValueHandling get_DefaultValueHandling();
    public void set_DefaultValueHandling(DefaultValueHandling value);
    public ReferenceLoopHandling get_ReferenceLoopHandling();
    public void set_ReferenceLoopHandling(ReferenceLoopHandling value);
    public ObjectCreationHandling get_ObjectCreationHandling();
    public void set_ObjectCreationHandling(ObjectCreationHandling value);
    public TypeNameHandling get_TypeNameHandling();
    public void set_TypeNameHandling(TypeNameHandling value);
    public bool get_IsReference();
    public void set_IsReference(bool value);
    public int get_Order();
    public void set_Order(int value);
    public Required get_Required();
    public void set_Required(Required value);
    [CompilerGeneratedAttribute]
public string get_PropertyName();
    [CompilerGeneratedAttribute]
public void set_PropertyName(string value);
    public ReferenceLoopHandling get_ItemReferenceLoopHandling();
    public void set_ItemReferenceLoopHandling(ReferenceLoopHandling value);
    public TypeNameHandling get_ItemTypeNameHandling();
    public void set_ItemTypeNameHandling(TypeNameHandling value);
    public bool get_ItemIsReference();
    public void set_ItemIsReference(bool value);
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
internal abstract class Newtonsoft.Json.JsonReader : object {
    private JsonToken _tokenType;
    private object _value;
    internal char _quoteChar;
    internal State _currentState;
    private JsonPosition _currentPosition;
    private CultureInfo _culture;
    private DateTimeZoneHandling _dateTimeZoneHandling;
    private Nullable`1<int> _maxDepth;
    private bool _hasExceededMaxDepth;
    internal DateParseHandling _dateParseHandling;
    internal FloatParseHandling _floatParseHandling;
    private string _dateFormatString;
    private List`1<JsonPosition> _stack;
    [CompilerGeneratedAttribute]
private bool <CloseInput>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SupportMultipleContent>k__BackingField;
    protected State CurrentState { get; }
    public bool CloseInput { get; public set; }
    public bool SupportMultipleContent { get; public set; }
    public char QuoteChar { get; protected internal set; }
    public DateTimeZoneHandling DateTimeZoneHandling { get; public set; }
    public DateParseHandling DateParseHandling { get; public set; }
    public FloatParseHandling FloatParseHandling { get; public set; }
    public string DateFormatString { get; public set; }
    public Nullable`1<int> MaxDepth { get; public set; }
    public JsonToken TokenType { get; }
    public object Value { get; }
    public Type ValueType { get; }
    public int Depth { get; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("1")]
public string Path { get; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("1")]
public CultureInfo Culture { get; public set; }
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public virtual Task`1<bool> ReadAsync(CancellationToken cancellationToken);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Newtonsoft.Json.JsonReader/<SkipAsync>d__1")]
public Task SkipAsync(CancellationToken cancellationToken);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Newtonsoft.Json.JsonReader/<ReaderReadAndAssertAsync>d__2")]
internal Task ReaderReadAndAssertAsync(CancellationToken cancellationToken);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public virtual Task`1<Nullable`1<bool>> ReadAsBooleanAsync(CancellationToken cancellationToken);
    public virtual Task`1<Byte[]> ReadAsBytesAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonReader/<ReadArrayIntoByteArrayAsync>d__5")]
internal Task`1<Byte[]> ReadArrayIntoByteArrayAsync(CancellationToken cancellationToken);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public virtual Task`1<Nullable`1<DateTime>> ReadAsDateTimeAsync(CancellationToken cancellationToken);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public virtual Task`1<Nullable`1<DateTimeOffset>> ReadAsDateTimeOffsetAsync(CancellationToken cancellationToken);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public virtual Task`1<Nullable`1<decimal>> ReadAsDecimalAsync(CancellationToken cancellationToken);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public virtual Task`1<Nullable`1<double>> ReadAsDoubleAsync(CancellationToken cancellationToken);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public virtual Task`1<Nullable`1<int>> ReadAsInt32Async(CancellationToken cancellationToken);
    public virtual Task`1<string> ReadAsStringAsync(CancellationToken cancellationToken);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Newtonsoft.Json.JsonReader/<ReadAndMoveToContentAsync>d__12")]
internal Task`1<bool> ReadAndMoveToContentAsync(CancellationToken cancellationToken);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal Task`1<bool> MoveToContentAsync(CancellationToken cancellationToken);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Newtonsoft.Json.JsonReader/<MoveToContentFromNonContentAsync>d__14")]
private Task`1<bool> MoveToContentFromNonContentAsync(CancellationToken cancellationToken);
    protected State get_CurrentState();
    [CompilerGeneratedAttribute]
public bool get_CloseInput();
    [CompilerGeneratedAttribute]
public void set_CloseInput(bool value);
    [CompilerGeneratedAttribute]
public bool get_SupportMultipleContent();
    [CompilerGeneratedAttribute]
public void set_SupportMultipleContent(bool value);
    public virtual char get_QuoteChar();
    protected internal virtual void set_QuoteChar(char value);
    public DateTimeZoneHandling get_DateTimeZoneHandling();
    public void set_DateTimeZoneHandling(DateTimeZoneHandling value);
    public DateParseHandling get_DateParseHandling();
    public void set_DateParseHandling(DateParseHandling value);
    public FloatParseHandling get_FloatParseHandling();
    public void set_FloatParseHandling(FloatParseHandling value);
    public string get_DateFormatString();
    public void set_DateFormatString(string value);
    public Nullable`1<int> get_MaxDepth();
    public void set_MaxDepth(Nullable`1<int> value);
    public virtual JsonToken get_TokenType();
    public virtual object get_Value();
    public virtual Type get_ValueType();
    public virtual int get_Depth();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public virtual string get_Path();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public CultureInfo get_Culture();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public void set_Culture(CultureInfo value);
    internal JsonPosition GetPosition(int depth);
    private void Push(JsonContainerType value);
    private JsonContainerType Pop();
    private JsonContainerType Peek();
    public abstract virtual bool Read();
    public virtual Nullable`1<int> ReadAsInt32();
    internal Nullable`1<int> ReadInt32String(string s);
    public virtual string ReadAsString();
    public virtual Byte[] ReadAsBytes();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal Byte[] ReadArrayIntoByteArray();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
private bool ReadArrayElementIntoByteArrayReportDone(List`1<byte> buffer);
    public virtual Nullable`1<double> ReadAsDouble();
    internal Nullable`1<double> ReadDoubleString(string s);
    public virtual Nullable`1<bool> ReadAsBoolean();
    internal Nullable`1<bool> ReadBooleanString(string s);
    public virtual Nullable`1<decimal> ReadAsDecimal();
    internal Nullable`1<decimal> ReadDecimalString(string s);
    public virtual Nullable`1<DateTime> ReadAsDateTime();
    internal Nullable`1<DateTime> ReadDateTimeString(string s);
    public virtual Nullable`1<DateTimeOffset> ReadAsDateTimeOffset();
    internal Nullable`1<DateTimeOffset> ReadDateTimeOffsetString(string s);
    internal void ReaderReadAndAssert();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal JsonReaderException CreateUnexpectedEndException();
    internal void ReadIntoWrappedTypeObject();
    public void Skip();
    protected void SetToken(JsonToken newToken);
    protected void SetToken(JsonToken newToken, object value);
    protected void SetToken(JsonToken newToken, object value, bool updateIndex);
    internal void SetPostValueState(bool updateIndex);
    private void UpdateScopeWithFinishedValue();
    private void ValidateEnd(JsonToken endToken);
    protected void SetStateBasedOnCurrent();
    private void SetFinished();
    private JsonContainerType GetTypeForCloseToken(JsonToken token);
    private sealed virtual override void System.IDisposable.Dispose();
    protected virtual void Dispose(bool disposing);
    public virtual void Close();
    internal void ReadAndAssert();
    internal void ReadForTypeAndAssert(JsonContract contract, bool hasConverter);
    internal bool ReadForType(JsonContract contract, bool hasConverter);
    internal bool ReadAndMoveToContent();
    internal bool MoveToContent();
    private JsonToken GetContentToken();
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal class Newtonsoft.Json.JsonReaderException : JsonException {
    [CompilerGeneratedAttribute]
private int <LineNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private int <LinePosition>k__BackingField;
    [CompilerGeneratedAttribute]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
private string <Path>k__BackingField;
    public int LineNumber { get; }
    public int LinePosition { get; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
public string Path { get; }
    public JsonReaderException(string message);
    public JsonReaderException(string message, Exception innerException);
    public JsonReaderException(SerializationInfo info, StreamingContext context);
    public JsonReaderException(string message, string path, int lineNumber, int linePosition, Exception innerException);
    [CompilerGeneratedAttribute]
public int get_LineNumber();
    [CompilerGeneratedAttribute]
public int get_LinePosition();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Path();
    internal static JsonReaderException Create(JsonReader reader, string message);
    internal static JsonReaderException Create(JsonReader reader, string message, Exception ex);
    internal static JsonReaderException Create(IJsonLineInfo lineInfo, string path, string message, Exception ex);
}
[AttributeUsageAttribute("384")]
internal class Newtonsoft.Json.JsonRequiredAttribute : Attribute {
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal class Newtonsoft.Json.JsonSerializationException : JsonException {
    [CompilerGeneratedAttribute]
private int <LineNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private int <LinePosition>k__BackingField;
    [CompilerGeneratedAttribute]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
private string <Path>k__BackingField;
    public int LineNumber { get; }
    public int LinePosition { get; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
public string Path { get; }
    public JsonSerializationException(string message);
    public JsonSerializationException(string message, Exception innerException);
    public JsonSerializationException(SerializationInfo info, StreamingContext context);
    public JsonSerializationException(string message, string path, int lineNumber, int linePosition, Exception innerException);
    [CompilerGeneratedAttribute]
public int get_LineNumber();
    [CompilerGeneratedAttribute]
public int get_LinePosition();
    [CompilerGeneratedAttribute]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public string get_Path();
    internal static JsonSerializationException Create(JsonReader reader, string message);
    internal static JsonSerializationException Create(JsonReader reader, string message, Exception ex);
    internal static JsonSerializationException Create(IJsonLineInfo lineInfo, string path, string message, Exception ex);
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal class Newtonsoft.Json.JsonSerializer : object {
    internal TypeNameHandling _typeNameHandling;
    internal TypeNameAssemblyFormatHandling _typeNameAssemblyFormatHandling;
    internal PreserveReferencesHandling _preserveReferencesHandling;
    internal ReferenceLoopHandling _referenceLoopHandling;
    internal MissingMemberHandling _missingMemberHandling;
    internal ObjectCreationHandling _objectCreationHandling;
    internal NullValueHandling _nullValueHandling;
    internal DefaultValueHandling _defaultValueHandling;
    internal ConstructorHandling _constructorHandling;
    internal MetadataPropertyHandling _metadataPropertyHandling;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
internal JsonConverterCollection _converters;
    internal IContractResolver _contractResolver;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
internal ITraceWriter _traceWriter;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
internal IEqualityComparer _equalityComparer;
    internal ISerializationBinder _serializationBinder;
    internal StreamingContext _context;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
private IReferenceResolver _referenceResolver;
    private Nullable`1<Formatting> _formatting;
    private Nullable`1<DateFormatHandling> _dateFormatHandling;
    private Nullable`1<DateTimeZoneHandling> _dateTimeZoneHandling;
    private Nullable`1<DateParseHandling> _dateParseHandling;
    private Nullable`1<FloatFormatHandling> _floatFormatHandling;
    private Nullable`1<FloatParseHandling> _floatParseHandling;
    private Nullable`1<StringEscapeHandling> _stringEscapeHandling;
    private CultureInfo _culture;
    private Nullable`1<int> _maxDepth;
    private bool _maxDepthSet;
    private Nullable`1<bool> _checkAdditionalContent;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
private string _dateFormatString;
    private bool _dateFormatStringSet;
    [CompilerGeneratedAttribute]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private EventHandler`1<ErrorEventArgs> Error;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
public IReferenceResolver ReferenceResolver { get; public set; }
    [ObsoleteAttribute("Binder is obsolete. Use SerializationBinder instead.")]
public SerializationBinder Binder { get; public set; }
    public ISerializationBinder SerializationBinder { get; public set; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
public ITraceWriter TraceWriter { get; public set; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
public IEqualityComparer EqualityComparer { get; public set; }
    public TypeNameHandling TypeNameHandling { get; public set; }
    [ObsoleteAttribute("TypeNameAssemblyFormat is obsolete. Use TypeNameAssemblyFormatHandling instead.")]
public FormatterAssemblyStyle TypeNameAssemblyFormat { get; public set; }
    public TypeNameAssemblyFormatHandling TypeNameAssemblyFormatHandling { get; public set; }
    public PreserveReferencesHandling PreserveReferencesHandling { get; public set; }
    public ReferenceLoopHandling ReferenceLoopHandling { get; public set; }
    public MissingMemberHandling MissingMemberHandling { get; public set; }
    public NullValueHandling NullValueHandling { get; public set; }
    public DefaultValueHandling DefaultValueHandling { get; public set; }
    public ObjectCreationHandling ObjectCreationHandling { get; public set; }
    public ConstructorHandling ConstructorHandling { get; public set; }
    public MetadataPropertyHandling MetadataPropertyHandling { get; public set; }
    public JsonConverterCollection Converters { get; }
    public IContractResolver ContractResolver { get; public set; }
    public StreamingContext Context { get; public set; }
    public Formatting Formatting { get; public set; }
    public DateFormatHandling DateFormatHandling { get; public set; }
    public DateTimeZoneHandling DateTimeZoneHandling { get; public set; }
    public DateParseHandling DateParseHandling { get; public set; }
    public FloatParseHandling FloatParseHandling { get; public set; }
    public FloatFormatHandling FloatFormatHandling { get; public set; }
    public StringEscapeHandling StringEscapeHandling { get; public set; }
    public string DateFormatString { get; public set; }
    public CultureInfo Culture { get; public set; }
    public Nullable`1<int> MaxDepth { get; public set; }
    public bool CheckAdditionalContent { get; public set; }
    [CompilerGeneratedAttribute]
public virtual void add_Error(EventHandler`1<ErrorEventArgs> value);
    [CompilerGeneratedAttribute]
public virtual void remove_Error(EventHandler`1<ErrorEventArgs> value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public virtual IReferenceResolver get_ReferenceResolver();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public virtual void set_ReferenceResolver(IReferenceResolver value);
    public virtual SerializationBinder get_Binder();
    public virtual void set_Binder(SerializationBinder value);
    public virtual ISerializationBinder get_SerializationBinder();
    public virtual void set_SerializationBinder(ISerializationBinder value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public virtual ITraceWriter get_TraceWriter();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public virtual void set_TraceWriter(ITraceWriter value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public virtual IEqualityComparer get_EqualityComparer();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public virtual void set_EqualityComparer(IEqualityComparer value);
    public virtual TypeNameHandling get_TypeNameHandling();
    public virtual void set_TypeNameHandling(TypeNameHandling value);
    public virtual FormatterAssemblyStyle get_TypeNameAssemblyFormat();
    public virtual void set_TypeNameAssemblyFormat(FormatterAssemblyStyle value);
    public virtual TypeNameAssemblyFormatHandling get_TypeNameAssemblyFormatHandling();
    public virtual void set_TypeNameAssemblyFormatHandling(TypeNameAssemblyFormatHandling value);
    public virtual PreserveReferencesHandling get_PreserveReferencesHandling();
    public virtual void set_PreserveReferencesHandling(PreserveReferencesHandling value);
    public virtual ReferenceLoopHandling get_ReferenceLoopHandling();
    public virtual void set_ReferenceLoopHandling(ReferenceLoopHandling value);
    public virtual MissingMemberHandling get_MissingMemberHandling();
    public virtual void set_MissingMemberHandling(MissingMemberHandling value);
    public virtual NullValueHandling get_NullValueHandling();
    public virtual void set_NullValueHandling(NullValueHandling value);
    public virtual DefaultValueHandling get_DefaultValueHandling();
    public virtual void set_DefaultValueHandling(DefaultValueHandling value);
    public virtual ObjectCreationHandling get_ObjectCreationHandling();
    public virtual void set_ObjectCreationHandling(ObjectCreationHandling value);
    public virtual ConstructorHandling get_ConstructorHandling();
    public virtual void set_ConstructorHandling(ConstructorHandling value);
    public virtual MetadataPropertyHandling get_MetadataPropertyHandling();
    public virtual void set_MetadataPropertyHandling(MetadataPropertyHandling value);
    public virtual JsonConverterCollection get_Converters();
    public virtual IContractResolver get_ContractResolver();
    public virtual void set_ContractResolver(IContractResolver value);
    public virtual StreamingContext get_Context();
    public virtual void set_Context(StreamingContext value);
    public virtual Formatting get_Formatting();
    public virtual void set_Formatting(Formatting value);
    public virtual DateFormatHandling get_DateFormatHandling();
    public virtual void set_DateFormatHandling(DateFormatHandling value);
    public virtual DateTimeZoneHandling get_DateTimeZoneHandling();
    public virtual void set_DateTimeZoneHandling(DateTimeZoneHandling value);
    public virtual DateParseHandling get_DateParseHandling();
    public virtual void set_DateParseHandling(DateParseHandling value);
    public virtual FloatParseHandling get_FloatParseHandling();
    public virtual void set_FloatParseHandling(FloatParseHandling value);
    public virtual FloatFormatHandling get_FloatFormatHandling();
    public virtual void set_FloatFormatHandling(FloatFormatHandling value);
    public virtual StringEscapeHandling get_StringEscapeHandling();
    public virtual void set_StringEscapeHandling(StringEscapeHandling value);
    public virtual string get_DateFormatString();
    public virtual void set_DateFormatString(string value);
    public virtual CultureInfo get_Culture();
    public virtual void set_Culture(CultureInfo value);
    public virtual Nullable`1<int> get_MaxDepth();
    public virtual void set_MaxDepth(Nullable`1<int> value);
    public virtual bool get_CheckAdditionalContent();
    public virtual void set_CheckAdditionalContent(bool value);
    internal bool IsCheckAdditionalContentSet();
    public static JsonSerializer Create();
    public static JsonSerializer Create(JsonSerializerSettings settings);
    public static JsonSerializer CreateDefault();
    public static JsonSerializer CreateDefault(JsonSerializerSettings settings);
    private static void ApplySerializerSettings(JsonSerializer serializer, JsonSerializerSettings settings);
    [DebuggerStepThroughAttribute]
public void Populate(TextReader reader, object target);
    [DebuggerStepThroughAttribute]
public void Populate(JsonReader reader, object target);
    internal virtual void PopulateInternal(JsonReader reader, object target);
    [DebuggerStepThroughAttribute]
public object Deserialize(JsonReader reader);
    [DebuggerStepThroughAttribute]
public object Deserialize(TextReader reader, Type objectType);
    [DebuggerStepThroughAttribute]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public T Deserialize(JsonReader reader);
    [DebuggerStepThroughAttribute]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public object Deserialize(JsonReader reader, Type objectType);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
internal virtual object DeserializeInternal(JsonReader reader, Type objectType);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
private void SetupReader(JsonReader reader, CultureInfo& previousCulture, Nullable`1& previousDateTimeZoneHandling, Nullable`1& previousDateParseHandling, Nullable`1& previousFloatParseHandling, Nullable`1& previousMaxDepth, String& previousDateFormatString);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
private void ResetReader(JsonReader reader, CultureInfo previousCulture, Nullable`1<DateTimeZoneHandling> previousDateTimeZoneHandling, Nullable`1<DateParseHandling> previousDateParseHandling, Nullable`1<FloatParseHandling> previousFloatParseHandling, Nullable`1<int> previousMaxDepth, string previousDateFormatString);
    public void Serialize(TextWriter textWriter, object value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public void Serialize(JsonWriter jsonWriter, object value, Type objectType);
    public void Serialize(TextWriter textWriter, object value, Type objectType);
    public void Serialize(JsonWriter jsonWriter, object value);
    private TraceJsonReader CreateTraceJsonReader(JsonReader reader);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
internal virtual void SerializeInternal(JsonWriter jsonWriter, object value, Type objectType);
    internal IReferenceResolver GetReferenceResolver();
    internal JsonConverter GetMatchingConverter(Type type);
    internal static JsonConverter GetMatchingConverter(IList`1<JsonConverter> converters, Type objectType);
    internal void OnError(ErrorEventArgs e);
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal class Newtonsoft.Json.JsonSerializerSettings : object {
    internal static ReferenceLoopHandling DefaultReferenceLoopHandling;
    internal static MissingMemberHandling DefaultMissingMemberHandling;
    internal static NullValueHandling DefaultNullValueHandling;
    internal static DefaultValueHandling DefaultDefaultValueHandling;
    internal static ObjectCreationHandling DefaultObjectCreationHandling;
    internal static PreserveReferencesHandling DefaultPreserveReferencesHandling;
    internal static ConstructorHandling DefaultConstructorHandling;
    internal static TypeNameHandling DefaultTypeNameHandling;
    internal static MetadataPropertyHandling DefaultMetadataPropertyHandling;
    internal static StreamingContext DefaultContext;
    internal static Formatting DefaultFormatting;
    internal static DateFormatHandling DefaultDateFormatHandling;
    internal static DateTimeZoneHandling DefaultDateTimeZoneHandling;
    internal static DateParseHandling DefaultDateParseHandling;
    internal static FloatParseHandling DefaultFloatParseHandling;
    internal static FloatFormatHandling DefaultFloatFormatHandling;
    internal static StringEscapeHandling DefaultStringEscapeHandling;
    internal static TypeNameAssemblyFormatHandling DefaultTypeNameAssemblyFormatHandling;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("1")]
internal static CultureInfo DefaultCulture;
    internal static bool DefaultCheckAdditionalContent;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("1")]
internal static string DefaultDateFormatString;
    internal static int DefaultMaxDepth;
    internal Nullable`1<Formatting> _formatting;
    internal Nullable`1<DateFormatHandling> _dateFormatHandling;
    internal Nullable`1<DateTimeZoneHandling> _dateTimeZoneHandling;
    internal Nullable`1<DateParseHandling> _dateParseHandling;
    internal Nullable`1<FloatFormatHandling> _floatFormatHandling;
    internal Nullable`1<FloatParseHandling> _floatParseHandling;
    internal Nullable`1<StringEscapeHandling> _stringEscapeHandling;
    internal CultureInfo _culture;
    internal Nullable`1<bool> _checkAdditionalContent;
    internal Nullable`1<int> _maxDepth;
    internal bool _maxDepthSet;
    internal string _dateFormatString;
    internal bool _dateFormatStringSet;
    internal Nullable`1<TypeNameAssemblyFormatHandling> _typeNameAssemblyFormatHandling;
    internal Nullable`1<DefaultValueHandling> _defaultValueHandling;
    internal Nullable`1<PreserveReferencesHandling> _preserveReferencesHandling;
    internal Nullable`1<NullValueHandling> _nullValueHandling;
    internal Nullable`1<ObjectCreationHandling> _objectCreationHandling;
    internal Nullable`1<MissingMemberHandling> _missingMemberHandling;
    internal Nullable`1<ReferenceLoopHandling> _referenceLoopHandling;
    internal Nullable`1<StreamingContext> _context;
    internal Nullable`1<ConstructorHandling> _constructorHandling;
    internal Nullable`1<TypeNameHandling> _typeNameHandling;
    internal Nullable`1<MetadataPropertyHandling> _metadataPropertyHandling;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("1")]
[CompilerGeneratedAttribute]
private IList`1<JsonConverter> <Converters>k__BackingField;
    [CompilerGeneratedAttribute]
private IContractResolver <ContractResolver>k__BackingField;
    [CompilerGeneratedAttribute]
private IEqualityComparer <EqualityComparer>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`1<IReferenceResolver> <ReferenceResolverProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private ITraceWriter <TraceWriter>k__BackingField;
    [CompilerGeneratedAttribute]
private ISerializationBinder <SerializationBinder>k__BackingField;
    [CompilerGeneratedAttribute]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private EventHandler`1<ErrorEventArgs> <Error>k__BackingField;
    public ReferenceLoopHandling ReferenceLoopHandling { get; public set; }
    public MissingMemberHandling MissingMemberHandling { get; public set; }
    public ObjectCreationHandling ObjectCreationHandling { get; public set; }
    public NullValueHandling NullValueHandling { get; public set; }
    public DefaultValueHandling DefaultValueHandling { get; public set; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("1")]
public IList`1<JsonConverter> Converters { get; public set; }
    public PreserveReferencesHandling PreserveReferencesHandling { get; public set; }
    public TypeNameHandling TypeNameHandling { get; public set; }
    public MetadataPropertyHandling MetadataPropertyHandling { get; public set; }
    [ObsoleteAttribute("TypeNameAssemblyFormat is obsolete. Use TypeNameAssemblyFormatHandling instead.")]
public FormatterAssemblyStyle TypeNameAssemblyFormat { get; public set; }
    public TypeNameAssemblyFormatHandling TypeNameAssemblyFormatHandling { get; public set; }
    public ConstructorHandling ConstructorHandling { get; public set; }
    public IContractResolver ContractResolver { get; public set; }
    public IEqualityComparer EqualityComparer { get; public set; }
    [ObsoleteAttribute("ReferenceResolver property is obsolete. Use the ReferenceResolverProvider property to set the IReferenceResolver: settings.ReferenceResolverProvider = () => resolver")]
public IReferenceResolver ReferenceResolver { get; public set; }
    public Func`1<IReferenceResolver> ReferenceResolverProvider { get; public set; }
    public ITraceWriter TraceWriter { get; public set; }
    [ObsoleteAttribute("Binder is obsolete. Use SerializationBinder instead.")]
public SerializationBinder Binder { get; public set; }
    public ISerializationBinder SerializationBinder { get; public set; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public EventHandler`1<ErrorEventArgs> Error { get; public set; }
    public StreamingContext Context { get; public set; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("1")]
public string DateFormatString { get; public set; }
    public Nullable`1<int> MaxDepth { get; public set; }
    public Formatting Formatting { get; public set; }
    public DateFormatHandling DateFormatHandling { get; public set; }
    public DateTimeZoneHandling DateTimeZoneHandling { get; public set; }
    public DateParseHandling DateParseHandling { get; public set; }
    public FloatFormatHandling FloatFormatHandling { get; public set; }
    public FloatParseHandling FloatParseHandling { get; public set; }
    public StringEscapeHandling StringEscapeHandling { get; public set; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("1")]
public CultureInfo Culture { get; public set; }
    public bool CheckAdditionalContent { get; public set; }
    private static JsonSerializerSettings();
    public ReferenceLoopHandling get_ReferenceLoopHandling();
    public void set_ReferenceLoopHandling(ReferenceLoopHandling value);
    public MissingMemberHandling get_MissingMemberHandling();
    public void set_MissingMemberHandling(MissingMemberHandling value);
    public ObjectCreationHandling get_ObjectCreationHandling();
    public void set_ObjectCreationHandling(ObjectCreationHandling value);
    public NullValueHandling get_NullValueHandling();
    public void set_NullValueHandling(NullValueHandling value);
    public DefaultValueHandling get_DefaultValueHandling();
    public void set_DefaultValueHandling(DefaultValueHandling value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public IList`1<JsonConverter> get_Converters();
    [CompilerGeneratedAttribute]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public void set_Converters(IList`1<JsonConverter> value);
    public PreserveReferencesHandling get_PreserveReferencesHandling();
    public void set_PreserveReferencesHandling(PreserveReferencesHandling value);
    public TypeNameHandling get_TypeNameHandling();
    public void set_TypeNameHandling(TypeNameHandling value);
    public MetadataPropertyHandling get_MetadataPropertyHandling();
    public void set_MetadataPropertyHandling(MetadataPropertyHandling value);
    public FormatterAssemblyStyle get_TypeNameAssemblyFormat();
    public void set_TypeNameAssemblyFormat(FormatterAssemblyStyle value);
    public TypeNameAssemblyFormatHandling get_TypeNameAssemblyFormatHandling();
    public void set_TypeNameAssemblyFormatHandling(TypeNameAssemblyFormatHandling value);
    public ConstructorHandling get_ConstructorHandling();
    public void set_ConstructorHandling(ConstructorHandling value);
    [CompilerGeneratedAttribute]
public IContractResolver get_ContractResolver();
    [CompilerGeneratedAttribute]
public void set_ContractResolver(IContractResolver value);
    [CompilerGeneratedAttribute]
public IEqualityComparer get_EqualityComparer();
    [CompilerGeneratedAttribute]
public void set_EqualityComparer(IEqualityComparer value);
    public IReferenceResolver get_ReferenceResolver();
    public void set_ReferenceResolver(IReferenceResolver value);
    [CompilerGeneratedAttribute]
public Func`1<IReferenceResolver> get_ReferenceResolverProvider();
    [CompilerGeneratedAttribute]
public void set_ReferenceResolverProvider(Func`1<IReferenceResolver> value);
    [CompilerGeneratedAttribute]
public ITraceWriter get_TraceWriter();
    [CompilerGeneratedAttribute]
public void set_TraceWriter(ITraceWriter value);
    public SerializationBinder get_Binder();
    public void set_Binder(SerializationBinder value);
    [CompilerGeneratedAttribute]
public ISerializationBinder get_SerializationBinder();
    [CompilerGeneratedAttribute]
public void set_SerializationBinder(ISerializationBinder value);
    [CompilerGeneratedAttribute]
public EventHandler`1<ErrorEventArgs> get_Error();
    [CompilerGeneratedAttribute]
public void set_Error(EventHandler`1<ErrorEventArgs> value);
    public StreamingContext get_Context();
    public void set_Context(StreamingContext value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public string get_DateFormatString();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public void set_DateFormatString(string value);
    public Nullable`1<int> get_MaxDepth();
    public void set_MaxDepth(Nullable`1<int> value);
    public Formatting get_Formatting();
    public void set_Formatting(Formatting value);
    public DateFormatHandling get_DateFormatHandling();
    public void set_DateFormatHandling(DateFormatHandling value);
    public DateTimeZoneHandling get_DateTimeZoneHandling();
    public void set_DateTimeZoneHandling(DateTimeZoneHandling value);
    public DateParseHandling get_DateParseHandling();
    public void set_DateParseHandling(DateParseHandling value);
    public FloatFormatHandling get_FloatFormatHandling();
    public void set_FloatFormatHandling(FloatFormatHandling value);
    public FloatParseHandling get_FloatParseHandling();
    public void set_FloatParseHandling(FloatParseHandling value);
    public StringEscapeHandling get_StringEscapeHandling();
    public void set_StringEscapeHandling(StringEscapeHandling value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public CultureInfo get_Culture();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public void set_Culture(CultureInfo value);
    public bool get_CheckAdditionalContent();
    public void set_CheckAdditionalContent(bool value);
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal class Newtonsoft.Json.JsonTextReader : JsonReader {
    private bool _safeAsync;
    private static char UnicodeReplacementChar;
    private static int MaximumJavascriptIntegerCharacterLength;
    private static int LargeBufferLength;
    private TextReader _reader;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
private Char[] _chars;
    private int _charsUsed;
    private int _charPos;
    private int _lineStartPos;
    private int _lineNumber;
    private bool _isEndOfFile;
    private StringBuffer _stringBuffer;
    private StringReference _stringReference;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
private IArrayPool`1<char> _arrayPool;
    [CompilerGeneratedAttribute]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
private JsonNameTable <PropertyNameTable>k__BackingField;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
public JsonNameTable PropertyNameTable { get; public set; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
public IArrayPool`1<char> ArrayPool { get; public set; }
    public int LineNumber { get; }
    public int LinePosition { get; }
    public JsonTextReader(TextReader reader);
    public virtual Task`1<bool> ReadAsync(CancellationToken cancellationToken);
    internal Task`1<bool> DoReadAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonTextReader/<DoReadAsync>d__3")]
private Task`1<bool> DoReadAsync(Task`1<bool> task, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonTextReader/<ParsePostValueAsync>d__4")]
private Task`1<bool> ParsePostValueAsync(bool ignoreComments, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonTextReader/<ReadFromFinishedAsync>d__5")]
private Task`1<bool> ReadFromFinishedAsync(CancellationToken cancellationToken);
    private Task`1<int> ReadDataAsync(bool append, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonTextReader/<ReadDataAsync>d__7")]
private Task`1<int> ReadDataAsync(bool append, int charsRequired, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonTextReader/<ParseValueAsync>d__8")]
private Task`1<bool> ParseValueAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonTextReader/<ReadStringIntoBufferAsync>d__9")]
private Task ReadStringIntoBufferAsync(char quote, CancellationToken cancellationToken);
    private Task ProcessCarriageReturnAsync(bool append, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonTextReader/<ProcessCarriageReturnAsync>d__11")]
private Task ProcessCarriageReturnAsync(Task`1<bool> task);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonTextReader/<ParseUnicodeAsync>d__12")]
private Task`1<char> ParseUnicodeAsync(CancellationToken cancellationToken);
    private Task`1<bool> EnsureCharsAsync(int relativePosition, bool append, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonTextReader/<ReadCharsAsync>d__14")]
private Task`1<bool> ReadCharsAsync(int relativePosition, bool append, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonTextReader/<ParseObjectAsync>d__15")]
private Task`1<bool> ParseObjectAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonTextReader/<ParseCommentAsync>d__16")]
private Task ParseCommentAsync(bool setToken, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonTextReader/<EatWhitespaceAsync>d__17")]
private Task EatWhitespaceAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonTextReader/<ParseStringAsync>d__18")]
private Task ParseStringAsync(char quote, ReadType readType, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonTextReader/<MatchValueAsync>d__19")]
private Task`1<bool> MatchValueAsync(string value, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonTextReader/<MatchValueWithTrailingSeparatorAsync>d__20")]
private Task`1<bool> MatchValueWithTrailingSeparatorAsync(string value, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonTextReader/<MatchAndSetAsync>d__21")]
private Task MatchAndSetAsync(string value, JsonToken newToken, object tokenValue, CancellationToken cancellationToken);
    private Task ParseTrueAsync(CancellationToken cancellationToken);
    private Task ParseFalseAsync(CancellationToken cancellationToken);
    private Task ParseNullAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonTextReader/<ParseConstructorAsync>d__25")]
private Task ParseConstructorAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonTextReader/<ParseNumberNaNAsync>d__26")]
private Task`1<object> ParseNumberNaNAsync(ReadType readType, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonTextReader/<ParseNumberPositiveInfinityAsync>d__27")]
private Task`1<object> ParseNumberPositiveInfinityAsync(ReadType readType, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonTextReader/<ParseNumberNegativeInfinityAsync>d__28")]
private Task`1<object> ParseNumberNegativeInfinityAsync(ReadType readType, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonTextReader/<ParseNumberAsync>d__29")]
private Task ParseNumberAsync(ReadType readType, CancellationToken cancellationToken);
    private Task ParseUndefinedAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonTextReader/<ParsePropertyAsync>d__31")]
private Task`1<bool> ParsePropertyAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonTextReader/<ReadNumberIntoBufferAsync>d__32")]
private Task ReadNumberIntoBufferAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonTextReader/<ParseUnquotedPropertyAsync>d__33")]
private Task ParseUnquotedPropertyAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonTextReader/<ReadNullCharAsync>d__34")]
private Task`1<bool> ReadNullCharAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonTextReader/<HandleNullAsync>d__35")]
private Task HandleNullAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonTextReader/<ReadFinishedAsync>d__36")]
private Task ReadFinishedAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonTextReader/<ReadStringValueAsync>d__37")]
private Task`1<object> ReadStringValueAsync(ReadType readType, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonTextReader/<ReadNumberValueAsync>d__38")]
private Task`1<object> ReadNumberValueAsync(ReadType readType, CancellationToken cancellationToken);
    public virtual Task`1<Nullable`1<bool>> ReadAsBooleanAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonTextReader/<DoReadAsBooleanAsync>d__40")]
internal Task`1<Nullable`1<bool>> DoReadAsBooleanAsync(CancellationToken cancellationToken);
    public virtual Task`1<Byte[]> ReadAsBytesAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonTextReader/<DoReadAsBytesAsync>d__42")]
internal Task`1<Byte[]> DoReadAsBytesAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonTextReader/<ReadIntoWrappedTypeObjectAsync>d__43")]
private Task ReadIntoWrappedTypeObjectAsync(CancellationToken cancellationToken);
    public virtual Task`1<Nullable`1<DateTime>> ReadAsDateTimeAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonTextReader/<DoReadAsDateTimeAsync>d__45")]
internal Task`1<Nullable`1<DateTime>> DoReadAsDateTimeAsync(CancellationToken cancellationToken);
    public virtual Task`1<Nullable`1<DateTimeOffset>> ReadAsDateTimeOffsetAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonTextReader/<DoReadAsDateTimeOffsetAsync>d__47")]
internal Task`1<Nullable`1<DateTimeOffset>> DoReadAsDateTimeOffsetAsync(CancellationToken cancellationToken);
    public virtual Task`1<Nullable`1<decimal>> ReadAsDecimalAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonTextReader/<DoReadAsDecimalAsync>d__49")]
internal Task`1<Nullable`1<decimal>> DoReadAsDecimalAsync(CancellationToken cancellationToken);
    public virtual Task`1<Nullable`1<double>> ReadAsDoubleAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonTextReader/<DoReadAsDoubleAsync>d__51")]
internal Task`1<Nullable`1<double>> DoReadAsDoubleAsync(CancellationToken cancellationToken);
    public virtual Task`1<Nullable`1<int>> ReadAsInt32Async(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonTextReader/<DoReadAsInt32Async>d__53")]
internal Task`1<Nullable`1<int>> DoReadAsInt32Async(CancellationToken cancellationToken);
    public virtual Task`1<string> ReadAsStringAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonTextReader/<DoReadAsStringAsync>d__55")]
internal Task`1<string> DoReadAsStringAsync(CancellationToken cancellationToken);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public JsonNameTable get_PropertyNameTable();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_PropertyNameTable(JsonNameTable value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public IArrayPool`1<char> get_ArrayPool();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public void set_ArrayPool(IArrayPool`1<char> value);
    private void EnsureBufferNotEmpty();
    private void SetNewLine(bool hasNextChar);
    private void OnNewLine(int pos);
    private void ParseString(char quote, ReadType readType);
    private void ParseReadString(char quote, ReadType readType);
    private static void BlockCopyChars(Char[] src, int srcOffset, Char[] dst, int dstOffset, int count);
    private void ShiftBufferIfNeeded();
    private int ReadData(bool append);
    private void PrepareBufferForReadData(bool append, int charsRequired);
    private int ReadData(bool append, int charsRequired);
    private bool EnsureChars(int relativePosition, bool append);
    private bool ReadChars(int relativePosition, bool append);
    public virtual bool Read();
    public virtual Nullable`1<int> ReadAsInt32();
    public virtual Nullable`1<DateTime> ReadAsDateTime();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public virtual string ReadAsString();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public virtual Byte[] ReadAsBytes();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
private object ReadStringValue(ReadType readType);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
private object FinishReadQuotedStringValue(ReadType readType);
    private JsonReaderException CreateUnexpectedCharacterException(char c);
    public virtual Nullable`1<bool> ReadAsBoolean();
    private void ProcessValueComma();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
private object ReadNumberValue(ReadType readType);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
private object FinishReadQuotedNumber(ReadType readType);
    public virtual Nullable`1<DateTimeOffset> ReadAsDateTimeOffset();
    public virtual Nullable`1<decimal> ReadAsDecimal();
    public virtual Nullable`1<double> ReadAsDouble();
    private void HandleNull();
    private void ReadFinished();
    private bool ReadNullChar();
    private void EnsureBuffer();
    private void ReadStringIntoBuffer(char quote);
    private void FinishReadStringIntoBuffer(int charPos, int initialPosition, int lastWritePosition);
    private void WriteCharToBuffer(char writeChar, int lastWritePosition, int writeToPosition);
    private char ConvertUnicode(bool enoughChars);
    private char ParseUnicode();
    private void ReadNumberIntoBuffer();
    private bool ReadNumberCharIntoBuffer(char currentChar, int charPos);
    private void ClearRecentString();
    private bool ParsePostValue(bool ignoreComments);
    private bool ParseObject();
    private bool ParseProperty();
    private bool ValidIdentifierChar(char value);
    private void ParseUnquotedProperty();
    private bool ReadUnquotedPropertyReportIfDone(char currentChar, int initialPosition);
    private bool ParseValue();
    private void ProcessLineFeed();
    private void ProcessCarriageReturn(bool append);
    private void EatWhitespace();
    private void ParseConstructor();
    private void ParseNumber(ReadType readType);
    private void ParseReadNumber(ReadType readType, char firstChar, int initialPosition);
    private JsonReaderException ThrowReaderError(string message, Exception ex);
    private static object BigIntegerParse(string number, CultureInfo culture);
    private void ParseComment(bool setToken);
    private void EndComment(bool setToken, int initialPosition, int endPosition);
    private bool MatchValue(string value);
    private bool MatchValue(bool enoughChars, string value);
    private bool MatchValueWithTrailingSeparator(string value);
    private bool IsSeparator(char c);
    private void ParseTrue();
    private void ParseNull();
    private void ParseUndefined();
    private void ParseFalse();
    private object ParseNumberNegativeInfinity(ReadType readType);
    private object ParseNumberNegativeInfinity(ReadType readType, bool matched);
    private object ParseNumberPositiveInfinity(ReadType readType);
    private object ParseNumberPositiveInfinity(ReadType readType, bool matched);
    private object ParseNumberNaN(ReadType readType);
    private object ParseNumberNaN(ReadType readType, bool matched);
    public virtual void Close();
    public sealed virtual bool HasLineInfo();
    public sealed virtual int get_LineNumber();
    public sealed virtual int get_LinePosition();
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal class Newtonsoft.Json.JsonTextWriter : JsonWriter {
    private bool _safeAsync;
    private static int IndentCharBufferSize;
    private TextWriter _writer;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
private Base64Encoder _base64Encoder;
    private char _indentChar;
    private int _indentation;
    private char _quoteChar;
    private bool _quoteName;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
private Boolean[] _charEscapeFlags;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
private Char[] _writeBuffer;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
private IArrayPool`1<char> _arrayPool;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
private Char[] _indentChars;
    private Base64Encoder Base64Encoder { get; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
public IArrayPool`1<char> ArrayPool { get; public set; }
    public int Indentation { get; public set; }
    public char QuoteChar { get; public set; }
    public char IndentChar { get; public set; }
    public bool QuoteName { get; public set; }
    public JsonTextWriter(TextWriter textWriter);
    public virtual Task FlushAsync(CancellationToken cancellationToken);
    internal Task DoFlushAsync(CancellationToken cancellationToken);
    protected virtual Task WriteValueDelimiterAsync(CancellationToken cancellationToken);
    internal Task DoWriteValueDelimiterAsync(CancellationToken cancellationToken);
    protected virtual Task WriteEndAsync(JsonToken token, CancellationToken cancellationToken);
    internal Task DoWriteEndAsync(JsonToken token, CancellationToken cancellationToken);
    public virtual Task CloseAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonTextWriter/<DoCloseAsync>d__8")]
internal Task DoCloseAsync(CancellationToken cancellationToken);
    public virtual Task WriteEndAsync(CancellationToken cancellationToken);
    protected virtual Task WriteIndentAsync(CancellationToken cancellationToken);
    internal Task DoWriteIndentAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonTextWriter/<WriteIndentAsync>d__12")]
private Task WriteIndentAsync(int currentIndentCount, int newLineLen, CancellationToken cancellationToken);
    private Task WriteValueInternalAsync(JsonToken token, string value, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonTextWriter/<WriteValueInternalAsync>d__14")]
private Task WriteValueInternalAsync(Task task, string value, CancellationToken cancellationToken);
    protected virtual Task WriteIndentSpaceAsync(CancellationToken cancellationToken);
    internal Task DoWriteIndentSpaceAsync(CancellationToken cancellationToken);
    public virtual Task WriteRawAsync(string json, CancellationToken cancellationToken);
    internal Task DoWriteRawAsync(string json, CancellationToken cancellationToken);
    public virtual Task WriteNullAsync(CancellationToken cancellationToken);
    internal Task DoWriteNullAsync(CancellationToken cancellationToken);
    private Task WriteDigitsAsync(ulong uvalue, bool negative, CancellationToken cancellationToken);
    private Task WriteIntegerValueAsync(ulong uvalue, bool negative, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonTextWriter/<WriteIntegerValueAsync>d__23")]
private Task WriteIntegerValueAsync(Task task, ulong uvalue, bool negative, CancellationToken cancellationToken);
    internal Task WriteIntegerValueAsync(long value, CancellationToken cancellationToken);
    internal Task WriteIntegerValueAsync(ulong uvalue, CancellationToken cancellationToken);
    private Task WriteEscapedStringAsync(string value, bool quote, CancellationToken cancellationToken);
    public virtual Task WritePropertyNameAsync(string name, CancellationToken cancellationToken);
    internal Task DoWritePropertyNameAsync(string name, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonTextWriter/<DoWritePropertyNameAsync>d__29")]
private Task DoWritePropertyNameAsync(Task task, string name, CancellationToken cancellationToken);
    public virtual Task WritePropertyNameAsync(string name, bool escape, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonTextWriter/<DoWritePropertyNameAsync>d__31")]
internal Task DoWritePropertyNameAsync(string name, bool escape, CancellationToken cancellationToken);
    public virtual Task WriteStartArrayAsync(CancellationToken cancellationToken);
    internal Task DoWriteStartArrayAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonTextWriter/<DoWriteStartArrayAsync>d__34")]
internal Task DoWriteStartArrayAsync(Task task, CancellationToken cancellationToken);
    public virtual Task WriteStartObjectAsync(CancellationToken cancellationToken);
    internal Task DoWriteStartObjectAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonTextWriter/<DoWriteStartObjectAsync>d__37")]
internal Task DoWriteStartObjectAsync(Task task, CancellationToken cancellationToken);
    public virtual Task WriteStartConstructorAsync(string name, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonTextWriter/<DoWriteStartConstructorAsync>d__39")]
internal Task DoWriteStartConstructorAsync(string name, CancellationToken cancellationToken);
    public virtual Task WriteUndefinedAsync(CancellationToken cancellationToken);
    internal Task DoWriteUndefinedAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonTextWriter/<DoWriteUndefinedAsync>d__42")]
private Task DoWriteUndefinedAsync(Task task, CancellationToken cancellationToken);
    public virtual Task WriteWhitespaceAsync(string ws, CancellationToken cancellationToken);
    internal Task DoWriteWhitespaceAsync(string ws, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(bool value, CancellationToken cancellationToken);
    internal Task DoWriteValueAsync(bool value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Nullable`1<bool> value, CancellationToken cancellationToken);
    internal Task DoWriteValueAsync(Nullable`1<bool> value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(byte value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Nullable`1<byte> value, CancellationToken cancellationToken);
    internal Task DoWriteValueAsync(Nullable`1<byte> value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Byte[] value, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonTextWriter/<WriteValueNonNullAsync>d__53")]
internal Task WriteValueNonNullAsync(Byte[] value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(char value, CancellationToken cancellationToken);
    internal Task DoWriteValueAsync(char value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Nullable`1<char> value, CancellationToken cancellationToken);
    internal Task DoWriteValueAsync(Nullable`1<char> value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(DateTime value, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonTextWriter/<DoWriteValueAsync>d__59")]
internal Task DoWriteValueAsync(DateTime value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Nullable`1<DateTime> value, CancellationToken cancellationToken);
    internal Task DoWriteValueAsync(Nullable`1<DateTime> value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(DateTimeOffset value, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonTextWriter/<DoWriteValueAsync>d__63")]
internal Task DoWriteValueAsync(DateTimeOffset value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Nullable`1<DateTimeOffset> value, CancellationToken cancellationToken);
    internal Task DoWriteValueAsync(Nullable`1<DateTimeOffset> value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(decimal value, CancellationToken cancellationToken);
    internal Task DoWriteValueAsync(decimal value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Nullable`1<decimal> value, CancellationToken cancellationToken);
    internal Task DoWriteValueAsync(Nullable`1<decimal> value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(double value, CancellationToken cancellationToken);
    internal Task WriteValueAsync(double value, bool nullable, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Nullable`1<double> value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(float value, CancellationToken cancellationToken);
    internal Task WriteValueAsync(float value, bool nullable, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Nullable`1<float> value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Guid value, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonTextWriter/<DoWriteValueAsync>d__77")]
internal Task DoWriteValueAsync(Guid value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Nullable`1<Guid> value, CancellationToken cancellationToken);
    internal Task DoWriteValueAsync(Nullable`1<Guid> value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(int value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Nullable`1<int> value, CancellationToken cancellationToken);
    internal Task DoWriteValueAsync(Nullable`1<int> value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(long value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Nullable`1<long> value, CancellationToken cancellationToken);
    internal Task DoWriteValueAsync(Nullable`1<long> value, CancellationToken cancellationToken);
    internal Task WriteValueAsync(BigInteger value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(object value, CancellationToken cancellationToken);
    [CLSCompliantAttribute("False")]
public virtual Task WriteValueAsync(sbyte value, CancellationToken cancellationToken);
    [CLSCompliantAttribute("False")]
public virtual Task WriteValueAsync(Nullable`1<sbyte> value, CancellationToken cancellationToken);
    internal Task DoWriteValueAsync(Nullable`1<sbyte> value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(short value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Nullable`1<short> value, CancellationToken cancellationToken);
    internal Task DoWriteValueAsync(Nullable`1<short> value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(string value, CancellationToken cancellationToken);
    internal Task DoWriteValueAsync(string value, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonTextWriter/<DoWriteValueAsync>d__96")]
private Task DoWriteValueAsync(Task task, string value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(TimeSpan value, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonTextWriter/<DoWriteValueAsync>d__98")]
internal Task DoWriteValueAsync(TimeSpan value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Nullable`1<TimeSpan> value, CancellationToken cancellationToken);
    internal Task DoWriteValueAsync(Nullable`1<TimeSpan> value, CancellationToken cancellationToken);
    [CLSCompliantAttribute("False")]
public virtual Task WriteValueAsync(UInt32 value, CancellationToken cancellationToken);
    [CLSCompliantAttribute("False")]
public virtual Task WriteValueAsync(Nullable`1<UInt32> value, CancellationToken cancellationToken);
    internal Task DoWriteValueAsync(Nullable`1<UInt32> value, CancellationToken cancellationToken);
    [CLSCompliantAttribute("False")]
public virtual Task WriteValueAsync(ulong value, CancellationToken cancellationToken);
    [CLSCompliantAttribute("False")]
public virtual Task WriteValueAsync(Nullable`1<ulong> value, CancellationToken cancellationToken);
    internal Task DoWriteValueAsync(Nullable`1<ulong> value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Uri value, CancellationToken cancellationToken);
    internal Task WriteValueNotNullAsync(Uri value, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonTextWriter/<WriteValueNotNullAsync>d__109")]
internal Task WriteValueNotNullAsync(Task task, Uri value, CancellationToken cancellationToken);
    [CLSCompliantAttribute("False")]
public virtual Task WriteValueAsync(ushort value, CancellationToken cancellationToken);
    [CLSCompliantAttribute("False")]
public virtual Task WriteValueAsync(Nullable`1<ushort> value, CancellationToken cancellationToken);
    internal Task DoWriteValueAsync(Nullable`1<ushort> value, CancellationToken cancellationToken);
    public virtual Task WriteCommentAsync(string text, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonTextWriter/<DoWriteCommentAsync>d__114")]
internal Task DoWriteCommentAsync(string text, CancellationToken cancellationToken);
    public virtual Task WriteEndArrayAsync(CancellationToken cancellationToken);
    public virtual Task WriteEndConstructorAsync(CancellationToken cancellationToken);
    public virtual Task WriteEndObjectAsync(CancellationToken cancellationToken);
    public virtual Task WriteRawValueAsync(string json, CancellationToken cancellationToken);
    internal Task DoWriteRawValueAsync(string json, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonTextWriter/<DoWriteRawValueAsync>d__120")]
private Task DoWriteRawValueAsync(Task task, string json, CancellationToken cancellationToken);
    internal Char[] EnsureWriteBuffer(int length, int copyTo);
    private Base64Encoder get_Base64Encoder();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public IArrayPool`1<char> get_ArrayPool();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public void set_ArrayPool(IArrayPool`1<char> value);
    public int get_Indentation();
    public void set_Indentation(int value);
    public char get_QuoteChar();
    public void set_QuoteChar(char value);
    public char get_IndentChar();
    public void set_IndentChar(char value);
    public bool get_QuoteName();
    public void set_QuoteName(bool value);
    public virtual void Flush();
    public virtual void Close();
    private void CloseBufferAndWriter();
    public virtual void WriteStartObject();
    public virtual void WriteStartArray();
    public virtual void WriteStartConstructor(string name);
    protected virtual void WriteEnd(JsonToken token);
    public virtual void WritePropertyName(string name);
    public virtual void WritePropertyName(string name, bool escape);
    internal virtual void OnStringEscapeHandlingChanged();
    private void UpdateCharEscapeFlags();
    protected virtual void WriteIndent();
    private int SetIndentChars();
    protected virtual void WriteValueDelimiter();
    protected virtual void WriteIndentSpace();
    private void WriteValueInternal(string value, JsonToken token);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public virtual void WriteValue(object value);
    public virtual void WriteNull();
    public virtual void WriteUndefined();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public virtual void WriteRaw(string json);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public virtual void WriteValue(string value);
    private void WriteEscapedString(string value, bool quote);
    public virtual void WriteValue(int value);
    [CLSCompliantAttribute("False")]
public virtual void WriteValue(UInt32 value);
    public virtual void WriteValue(long value);
    [CLSCompliantAttribute("False")]
public virtual void WriteValue(ulong value);
    public virtual void WriteValue(float value);
    public virtual void WriteValue(Nullable`1<float> value);
    public virtual void WriteValue(double value);
    public virtual void WriteValue(Nullable`1<double> value);
    public virtual void WriteValue(bool value);
    public virtual void WriteValue(short value);
    [CLSCompliantAttribute("False")]
public virtual void WriteValue(ushort value);
    public virtual void WriteValue(char value);
    public virtual void WriteValue(byte value);
    [CLSCompliantAttribute("False")]
public virtual void WriteValue(sbyte value);
    public virtual void WriteValue(decimal value);
    public virtual void WriteValue(DateTime value);
    private int WriteValueToBuffer(DateTime value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public virtual void WriteValue(Byte[] value);
    public virtual void WriteValue(DateTimeOffset value);
    private int WriteValueToBuffer(DateTimeOffset value);
    public virtual void WriteValue(Guid value);
    public virtual void WriteValue(TimeSpan value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public virtual void WriteValue(Uri value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public virtual void WriteComment(string text);
    public virtual void WriteWhitespace(string ws);
    private void EnsureWriteBuffer();
    private void WriteIntegerValue(long value);
    private void WriteIntegerValue(ulong value, bool negative);
    private int WriteNumberToBuffer(ulong value, bool negative);
    private void WriteIntegerValue(int value);
    private void WriteIntegerValue(UInt32 value, bool negative);
    private int WriteNumberToBuffer(UInt32 value, bool negative);
}
internal enum Newtonsoft.Json.JsonToken : Enum {
    public int value__;
    public static JsonToken None;
    public static JsonToken StartObject;
    public static JsonToken StartArray;
    public static JsonToken StartConstructor;
    public static JsonToken PropertyName;
    public static JsonToken Comment;
    public static JsonToken Raw;
    public static JsonToken Integer;
    public static JsonToken Float;
    public static JsonToken String;
    public static JsonToken Boolean;
    public static JsonToken Null;
    public static JsonToken Undefined;
    public static JsonToken EndObject;
    public static JsonToken EndArray;
    public static JsonToken EndConstructor;
    public static JsonToken Date;
    public static JsonToken Bytes;
}
[ObsoleteAttribute("JSON Schema validation has been moved to its own package. See https://www.newtonsoft.com/jsonschema for more details.")]
internal class Newtonsoft.Json.JsonValidatingReader : JsonReader {
    private JsonReader _reader;
    private Stack`1<SchemaScope> _stack;
    private JsonSchema _schema;
    private JsonSchemaModel _model;
    private SchemaScope _currentScope;
    [CompilerGeneratedAttribute]
private ValidationEventHandler ValidationEventHandler;
    private static IList`1<JsonSchemaModel> EmptySchemaList;
    public object Value { get; }
    public int Depth { get; }
    public string Path { get; }
    public char QuoteChar { get; protected internal set; }
    public JsonToken TokenType { get; }
    public Type ValueType { get; }
    private IList`1<JsonSchemaModel> CurrentSchemas { get; }
    private IList`1<JsonSchemaModel> CurrentMemberSchemas { get; }
    public JsonSchema Schema { get; public set; }
    public JsonReader Reader { get; }
    private int Newtonsoft.Json.IJsonLineInfo.LineNumber { get; }
    private int Newtonsoft.Json.IJsonLineInfo.LinePosition { get; }
    public JsonValidatingReader(JsonReader reader);
    private static JsonValidatingReader();
    [CompilerGeneratedAttribute]
public void add_ValidationEventHandler(ValidationEventHandler value);
    [CompilerGeneratedAttribute]
public void remove_ValidationEventHandler(ValidationEventHandler value);
    public virtual object get_Value();
    public virtual int get_Depth();
    public virtual string get_Path();
    public virtual char get_QuoteChar();
    protected internal virtual void set_QuoteChar(char value);
    public virtual JsonToken get_TokenType();
    public virtual Type get_ValueType();
    private void Push(SchemaScope scope);
    private SchemaScope Pop();
    private IList`1<JsonSchemaModel> get_CurrentSchemas();
    private IList`1<JsonSchemaModel> get_CurrentMemberSchemas();
    private void RaiseError(string message, JsonSchemaModel schema);
    private void OnValidationEvent(JsonSchemaException exception);
    public JsonSchema get_Schema();
    public void set_Schema(JsonSchema value);
    public JsonReader get_Reader();
    public virtual void Close();
    private void ValidateNotDisallowed(JsonSchemaModel schema);
    private Nullable`1<JsonSchemaType> GetCurrentNodeSchemaType();
    public virtual Nullable`1<int> ReadAsInt32();
    public virtual Byte[] ReadAsBytes();
    public virtual Nullable`1<decimal> ReadAsDecimal();
    public virtual Nullable`1<double> ReadAsDouble();
    public virtual Nullable`1<bool> ReadAsBoolean();
    public virtual string ReadAsString();
    public virtual Nullable`1<DateTime> ReadAsDateTime();
    public virtual Nullable`1<DateTimeOffset> ReadAsDateTimeOffset();
    public virtual bool Read();
    private void ValidateCurrentToken();
    private void WriteToken(IList`1<JsonSchemaModel> schemas);
    private void ValidateEndObject(JsonSchemaModel schema);
    private void ValidateEndArray(JsonSchemaModel schema);
    private void ValidateNull(JsonSchemaModel schema);
    private void ValidateBoolean(JsonSchemaModel schema);
    private void ValidateString(JsonSchemaModel schema);
    private void ValidateInteger(JsonSchemaModel schema);
    private void ProcessValue();
    private void ValidateFloat(JsonSchemaModel schema);
    private static double FloatingPointRemainder(double dividend, double divisor);
    private static bool IsZero(double value);
    private void ValidatePropertyName(JsonSchemaModel schema);
    private bool IsPropertyDefinied(JsonSchemaModel schema, string propertyName);
    private bool ValidateArray(JsonSchemaModel schema);
    private bool ValidateObject(JsonSchemaModel schema);
    private bool TestType(JsonSchemaModel currentSchema, JsonSchemaType currentType);
    private sealed virtual override bool Newtonsoft.Json.IJsonLineInfo.HasLineInfo();
    private sealed virtual override int Newtonsoft.Json.IJsonLineInfo.get_LineNumber();
    private sealed virtual override int Newtonsoft.Json.IJsonLineInfo.get_LinePosition();
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal abstract class Newtonsoft.Json.JsonWriter : object {
    private static State[][] StateArray;
    internal static State[][] StateArrayTemplate;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
private List`1<JsonPosition> _stack;
    private JsonPosition _currentPosition;
    private State _currentState;
    private Formatting _formatting;
    [CompilerGeneratedAttribute]
private bool <CloseOutput>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AutoCompleteOnClose>k__BackingField;
    private DateFormatHandling _dateFormatHandling;
    private DateTimeZoneHandling _dateTimeZoneHandling;
    private StringEscapeHandling _stringEscapeHandling;
    private FloatFormatHandling _floatFormatHandling;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
private string _dateFormatString;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
private CultureInfo _culture;
    public bool CloseOutput { get; public set; }
    public bool AutoCompleteOnClose { get; public set; }
    protected internal int Top { get; }
    public WriteState WriteState { get; }
    internal string ContainerPath { get; }
    public string Path { get; }
    public Formatting Formatting { get; public set; }
    public DateFormatHandling DateFormatHandling { get; public set; }
    public DateTimeZoneHandling DateTimeZoneHandling { get; public set; }
    public StringEscapeHandling StringEscapeHandling { get; public set; }
    public FloatFormatHandling FloatFormatHandling { get; public set; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
public string DateFormatString { get; public set; }
    public CultureInfo Culture { get; public set; }
    private static JsonWriter();
    internal Task AutoCompleteAsync(JsonToken tokenBeingWritten, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonWriter/<AutoCompleteAsync>d__1")]
private Task AutoCompleteAsync(CancellationToken cancellationToken);
    public virtual Task CloseAsync(CancellationToken cancellationToken);
    public virtual Task FlushAsync(CancellationToken cancellationToken);
    protected virtual Task WriteEndAsync(JsonToken token, CancellationToken cancellationToken);
    protected virtual Task WriteIndentAsync(CancellationToken cancellationToken);
    protected virtual Task WriteValueDelimiterAsync(CancellationToken cancellationToken);
    protected virtual Task WriteIndentSpaceAsync(CancellationToken cancellationToken);
    public virtual Task WriteRawAsync(string json, CancellationToken cancellationToken);
    public virtual Task WriteEndAsync(CancellationToken cancellationToken);
    internal Task WriteEndInternalAsync(CancellationToken cancellationToken);
    internal Task InternalWriteEndAsync(JsonContainerType type, CancellationToken cancellationToken);
    public virtual Task WriteEndArrayAsync(CancellationToken cancellationToken);
    public virtual Task WriteEndConstructorAsync(CancellationToken cancellationToken);
    public virtual Task WriteEndObjectAsync(CancellationToken cancellationToken);
    public virtual Task WriteNullAsync(CancellationToken cancellationToken);
    public virtual Task WritePropertyNameAsync(string name, CancellationToken cancellationToken);
    public virtual Task WritePropertyNameAsync(string name, bool escape, CancellationToken cancellationToken);
    internal Task InternalWritePropertyNameAsync(string name, CancellationToken cancellationToken);
    public virtual Task WriteStartArrayAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonWriter/<InternalWriteStartAsync>d__20")]
internal Task InternalWriteStartAsync(JsonToken token, JsonContainerType container, CancellationToken cancellationToken);
    public virtual Task WriteCommentAsync(string text, CancellationToken cancellationToken);
    internal Task InternalWriteCommentAsync(CancellationToken cancellationToken);
    public virtual Task WriteRawValueAsync(string json, CancellationToken cancellationToken);
    public virtual Task WriteStartConstructorAsync(string name, CancellationToken cancellationToken);
    public virtual Task WriteStartObjectAsync(CancellationToken cancellationToken);
    public Task WriteTokenAsync(JsonReader reader, CancellationToken cancellationToken);
    public Task WriteTokenAsync(JsonReader reader, bool writeChildren, CancellationToken cancellationToken);
    public Task WriteTokenAsync(JsonToken token, CancellationToken cancellationToken);
    public Task WriteTokenAsync(JsonToken token, object value, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonWriter/<WriteTokenAsync>d__30")]
internal virtual Task WriteTokenAsync(JsonReader reader, bool writeChildren, bool writeDateConstructorAsDate, bool writeComments, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonWriter/<WriteTokenSyncReadingAsync>d__31")]
internal Task WriteTokenSyncReadingAsync(JsonReader reader, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonWriter/<WriteConstructorDateAsync>d__32")]
private Task WriteConstructorDateAsync(JsonReader reader, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(bool value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Nullable`1<bool> value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(byte value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Nullable`1<byte> value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Byte[] value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(char value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Nullable`1<char> value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(DateTime value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Nullable`1<DateTime> value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(DateTimeOffset value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Nullable`1<DateTimeOffset> value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(decimal value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Nullable`1<decimal> value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(double value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Nullable`1<double> value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(float value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Nullable`1<float> value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Guid value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Nullable`1<Guid> value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(int value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Nullable`1<int> value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(long value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Nullable`1<long> value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(object value, CancellationToken cancellationToken);
    [CLSCompliantAttribute("False")]
public virtual Task WriteValueAsync(sbyte value, CancellationToken cancellationToken);
    [CLSCompliantAttribute("False")]
public virtual Task WriteValueAsync(Nullable`1<sbyte> value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(short value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Nullable`1<short> value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(string value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(TimeSpan value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Nullable`1<TimeSpan> value, CancellationToken cancellationToken);
    [CLSCompliantAttribute("False")]
public virtual Task WriteValueAsync(UInt32 value, CancellationToken cancellationToken);
    [CLSCompliantAttribute("False")]
public virtual Task WriteValueAsync(Nullable`1<UInt32> value, CancellationToken cancellationToken);
    [CLSCompliantAttribute("False")]
public virtual Task WriteValueAsync(ulong value, CancellationToken cancellationToken);
    [CLSCompliantAttribute("False")]
public virtual Task WriteValueAsync(Nullable`1<ulong> value, CancellationToken cancellationToken);
    public virtual Task WriteValueAsync(Uri value, CancellationToken cancellationToken);
    [CLSCompliantAttribute("False")]
public virtual Task WriteValueAsync(ushort value, CancellationToken cancellationToken);
    [CLSCompliantAttribute("False")]
public virtual Task WriteValueAsync(Nullable`1<ushort> value, CancellationToken cancellationToken);
    public virtual Task WriteUndefinedAsync(CancellationToken cancellationToken);
    public virtual Task WriteWhitespaceAsync(string ws, CancellationToken cancellationToken);
    internal Task InternalWriteValueAsync(JsonToken token, CancellationToken cancellationToken);
    protected Task SetWriteStateAsync(JsonToken token, object value, CancellationToken cancellationToken);
    internal static Task WriteValueAsync(JsonWriter writer, PrimitiveTypeCode typeCode, object value, CancellationToken cancellationToken);
    internal static State[][] BuildStateArray();
    [CompilerGeneratedAttribute]
public bool get_CloseOutput();
    [CompilerGeneratedAttribute]
public void set_CloseOutput(bool value);
    [CompilerGeneratedAttribute]
public bool get_AutoCompleteOnClose();
    [CompilerGeneratedAttribute]
public void set_AutoCompleteOnClose(bool value);
    protected internal int get_Top();
    public WriteState get_WriteState();
    internal string get_ContainerPath();
    public string get_Path();
    public Formatting get_Formatting();
    public void set_Formatting(Formatting value);
    public DateFormatHandling get_DateFormatHandling();
    public void set_DateFormatHandling(DateFormatHandling value);
    public DateTimeZoneHandling get_DateTimeZoneHandling();
    public void set_DateTimeZoneHandling(DateTimeZoneHandling value);
    public StringEscapeHandling get_StringEscapeHandling();
    public void set_StringEscapeHandling(StringEscapeHandling value);
    internal virtual void OnStringEscapeHandlingChanged();
    public FloatFormatHandling get_FloatFormatHandling();
    public void set_FloatFormatHandling(FloatFormatHandling value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public string get_DateFormatString();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public void set_DateFormatString(string value);
    public CultureInfo get_Culture();
    public void set_Culture(CultureInfo value);
    internal void UpdateScopeWithFinishedValue();
    private void Push(JsonContainerType value);
    private JsonContainerType Pop();
    private JsonContainerType Peek();
    public abstract virtual void Flush();
    public virtual void Close();
    public virtual void WriteStartObject();
    public virtual void WriteEndObject();
    public virtual void WriteStartArray();
    public virtual void WriteEndArray();
    public virtual void WriteStartConstructor(string name);
    public virtual void WriteEndConstructor();
    public virtual void WritePropertyName(string name);
    public virtual void WritePropertyName(string name, bool escape);
    public virtual void WriteEnd();
    public void WriteToken(JsonReader reader);
    public void WriteToken(JsonReader reader, bool writeChildren);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public void WriteToken(JsonToken token, object value);
    public void WriteToken(JsonToken token);
    internal virtual void WriteToken(JsonReader reader, bool writeChildren, bool writeDateConstructorAsDate, bool writeComments);
    private bool IsWriteTokenIncomplete(JsonReader reader, bool writeChildren, int initialDepth);
    private int CalculateWriteTokenInitialDepth(JsonReader reader);
    private int CalculateWriteTokenFinalDepth(JsonReader reader);
    private void WriteConstructorDate(JsonReader reader);
    private void WriteEnd(JsonContainerType type);
    private void AutoCompleteAll();
    private JsonToken GetCloseTokenForType(JsonContainerType type);
    private void AutoCompleteClose(JsonContainerType type);
    private int CalculateLevelsToComplete(JsonContainerType type);
    private void UpdateCurrentState();
    protected virtual void WriteEnd(JsonToken token);
    protected virtual void WriteIndent();
    protected virtual void WriteValueDelimiter();
    protected virtual void WriteIndentSpace();
    internal void AutoComplete(JsonToken tokenBeingWritten);
    public virtual void WriteNull();
    public virtual void WriteUndefined();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public virtual void WriteRaw(string json);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public virtual void WriteRawValue(string json);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public virtual void WriteValue(string value);
    public virtual void WriteValue(int value);
    [CLSCompliantAttribute("False")]
public virtual void WriteValue(UInt32 value);
    public virtual void WriteValue(long value);
    [CLSCompliantAttribute("False")]
public virtual void WriteValue(ulong value);
    public virtual void WriteValue(float value);
    public virtual void WriteValue(double value);
    public virtual void WriteValue(bool value);
    public virtual void WriteValue(short value);
    [CLSCompliantAttribute("False")]
public virtual void WriteValue(ushort value);
    public virtual void WriteValue(char value);
    public virtual void WriteValue(byte value);
    [CLSCompliantAttribute("False")]
public virtual void WriteValue(sbyte value);
    public virtual void WriteValue(decimal value);
    public virtual void WriteValue(DateTime value);
    public virtual void WriteValue(DateTimeOffset value);
    public virtual void WriteValue(Guid value);
    public virtual void WriteValue(TimeSpan value);
    public virtual void WriteValue(Nullable`1<int> value);
    [CLSCompliantAttribute("False")]
public virtual void WriteValue(Nullable`1<UInt32> value);
    public virtual void WriteValue(Nullable`1<long> value);
    [CLSCompliantAttribute("False")]
public virtual void WriteValue(Nullable`1<ulong> value);
    public virtual void WriteValue(Nullable`1<float> value);
    public virtual void WriteValue(Nullable`1<double> value);
    public virtual void WriteValue(Nullable`1<bool> value);
    public virtual void WriteValue(Nullable`1<short> value);
    [CLSCompliantAttribute("False")]
public virtual void WriteValue(Nullable`1<ushort> value);
    public virtual void WriteValue(Nullable`1<char> value);
    public virtual void WriteValue(Nullable`1<byte> value);
    [CLSCompliantAttribute("False")]
public virtual void WriteValue(Nullable`1<sbyte> value);
    public virtual void WriteValue(Nullable`1<decimal> value);
    public virtual void WriteValue(Nullable`1<DateTime> value);
    public virtual void WriteValue(Nullable`1<DateTimeOffset> value);
    public virtual void WriteValue(Nullable`1<Guid> value);
    public virtual void WriteValue(Nullable`1<TimeSpan> value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public virtual void WriteValue(Byte[] value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public virtual void WriteValue(Uri value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public virtual void WriteValue(object value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public virtual void WriteComment(string text);
    public virtual void WriteWhitespace(string ws);
    private sealed virtual override void System.IDisposable.Dispose();
    protected virtual void Dispose(bool disposing);
    internal static void WriteValue(JsonWriter writer, PrimitiveTypeCode typeCode, object value);
    private static void ResolveConvertibleValue(IConvertible convertible, PrimitiveTypeCode& typeCode, Object& value);
    private static JsonWriterException CreateUnsupportedTypeException(JsonWriter writer, object value);
    protected void SetWriteState(JsonToken token, object value);
    internal void InternalWriteEnd(JsonContainerType container);
    internal void InternalWritePropertyName(string name);
    internal void InternalWriteRaw();
    internal void InternalWriteStart(JsonToken token, JsonContainerType container);
    internal void InternalWriteValue(JsonToken token);
    internal void InternalWriteWhitespace(string ws);
    internal void InternalWriteComment();
    [CompilerGeneratedAttribute]
[AsyncStateMachineAttribute("Newtonsoft.Json.JsonWriter/<<InternalWriteEndAsync>g__AwaitProperty|11_0>d")]
private Task <InternalWriteEndAsync>g__AwaitProperty|11_0(Task task, int LevelsToComplete, JsonToken token, CancellationToken CancellationToken);
    [CompilerGeneratedAttribute]
[AsyncStateMachineAttribute("Newtonsoft.Json.JsonWriter/<<InternalWriteEndAsync>g__AwaitIndent|11_1>d")]
private Task <InternalWriteEndAsync>g__AwaitIndent|11_1(Task task, int LevelsToComplete, JsonToken token, CancellationToken CancellationToken);
    [CompilerGeneratedAttribute]
[AsyncStateMachineAttribute("Newtonsoft.Json.JsonWriter/<<InternalWriteEndAsync>g__AwaitEnd|11_2>d")]
private Task <InternalWriteEndAsync>g__AwaitEnd|11_2(Task task, int LevelsToComplete, CancellationToken CancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.JsonWriter/<<InternalWriteEndAsync>g__AwaitRemaining|11_3>d")]
[CompilerGeneratedAttribute]
private Task <InternalWriteEndAsync>g__AwaitRemaining|11_3(int LevelsToComplete, CancellationToken CancellationToken);
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal class Newtonsoft.Json.JsonWriterException : JsonException {
    [CompilerGeneratedAttribute]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
private string <Path>k__BackingField;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
public string Path { get; }
    public JsonWriterException(string message);
    public JsonWriterException(string message, Exception innerException);
    public JsonWriterException(SerializationInfo info, StreamingContext context);
    public JsonWriterException(string message, string path, Exception innerException);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Path();
    internal static JsonWriterException Create(JsonWriter writer, string message, Exception ex);
    internal static JsonWriterException Create(string path, string message, Exception ex);
}
internal enum Newtonsoft.Json.Linq.CommentHandling : Enum {
    public int value__;
    public static CommentHandling Ignore;
    public static CommentHandling Load;
}
internal enum Newtonsoft.Json.Linq.DuplicatePropertyNameHandling : Enum {
    public int value__;
    public static DuplicatePropertyNameHandling Replace;
    public static DuplicatePropertyNameHandling Ignore;
    public static DuplicatePropertyNameHandling Error;
}
[ExtensionAttribute]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal static class Newtonsoft.Json.Linq.Extensions : object {
    [ExtensionAttribute]
public static IJEnumerable`1<JToken> Ancestors(IEnumerable`1<T> source);
    [ExtensionAttribute]
public static IJEnumerable`1<JToken> AncestorsAndSelf(IEnumerable`1<T> source);
    [ExtensionAttribute]
public static IJEnumerable`1<JToken> Descendants(IEnumerable`1<T> source);
    [ExtensionAttribute]
public static IJEnumerable`1<JToken> DescendantsAndSelf(IEnumerable`1<T> source);
    [ExtensionAttribute]
public static IJEnumerable`1<JProperty> Properties(IEnumerable`1<JObject> source);
    [ExtensionAttribute]
public static IJEnumerable`1<JToken> Values(IEnumerable`1<JToken> source, object key);
    [ExtensionAttribute]
public static IJEnumerable`1<JToken> Values(IEnumerable`1<JToken> source);
    [ExtensionAttribute]
public static IEnumerable`1<U> Values(IEnumerable`1<JToken> source, object key);
    [ExtensionAttribute]
public static IEnumerable`1<U> Values(IEnumerable`1<JToken> source);
    [ExtensionAttribute]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public static U Value(IEnumerable`1<JToken> value);
    [ExtensionAttribute]
public static U Value(IEnumerable`1<T> value);
    [ExtensionAttribute]
[IteratorStateMachineAttribute("Newtonsoft.Json.Linq.Extensions/<Values>d__11`2")]
internal static IEnumerable`1<U> Values(IEnumerable`1<T> source, object key);
    [ExtensionAttribute]
public static IJEnumerable`1<JToken> Children(IEnumerable`1<T> source);
    [ExtensionAttribute]
public static IEnumerable`1<U> Children(IEnumerable`1<T> source);
    [IteratorStateMachineAttribute("Newtonsoft.Json.Linq.Extensions/<Convert>d__14`2")]
[ExtensionAttribute]
internal static IEnumerable`1<U> Convert(IEnumerable`1<T> source);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
[ExtensionAttribute]
internal static U Convert(T token);
    [ExtensionAttribute]
public static IJEnumerable`1<JToken> AsJEnumerable(IEnumerable`1<JToken> source);
    [ExtensionAttribute]
public static IJEnumerable`1<T> AsJEnumerable(IEnumerable`1<T> source);
}
[DefaultMemberAttribute("Item")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal interface Newtonsoft.Json.Linq.IJEnumerable`1 {
    public IJEnumerable`1<JToken> Item { get; }
    public abstract virtual IJEnumerable`1<JToken> get_Item(object key);
}
[DefaultMemberAttribute("Item")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal class Newtonsoft.Json.Linq.JArray : JContainer {
    private List`1<JToken> _values;
    protected IList`1<JToken> ChildrenTokens { get; }
    public JTokenType Type { get; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
public JToken Item { get; public set; }
    public JToken Item { get; public set; }
    public bool IsReadOnly { get; }
    public JArray(JArray other);
    public JArray(Object[] content);
    public JArray(object content);
    [AsyncStateMachineAttribute("Newtonsoft.Json.Linq.JArray/<WriteToAsync>d__0")]
public virtual Task WriteToAsync(JsonWriter writer, CancellationToken cancellationToken, JsonConverter[] converters);
    public static Task`1<JArray> LoadAsync(JsonReader reader, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.Linq.JArray/<LoadAsync>d__2")]
public static Task`1<JArray> LoadAsync(JsonReader reader, JsonLoadSettings settings, CancellationToken cancellationToken);
    protected virtual IList`1<JToken> get_ChildrenTokens();
    public virtual JTokenType get_Type();
    internal virtual bool DeepEquals(JToken node);
    internal virtual JToken CloneToken();
    public static JArray Load(JsonReader reader);
    public static JArray Load(JsonReader reader, JsonLoadSettings settings);
    public static JArray Parse(string json);
    public static JArray Parse(string json, JsonLoadSettings settings);
    public static JArray FromObject(object o);
    public static JArray FromObject(object o, JsonSerializer jsonSerializer);
    public virtual void WriteTo(JsonWriter writer, JsonConverter[] converters);
    public virtual JToken get_Item(object key);
    public virtual void set_Item(object key, JToken value);
    public sealed virtual JToken get_Item(int index);
    public sealed virtual void set_Item(int index, JToken value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
internal virtual int IndexOfItem(JToken item);
    internal virtual void MergeItem(object content, JsonMergeSettings settings);
    public sealed virtual int IndexOf(JToken item);
    public sealed virtual void Insert(int index, JToken item);
    public sealed virtual void RemoveAt(int index);
    public sealed virtual IEnumerator`1<JToken> GetEnumerator();
    public sealed virtual void Add(JToken item);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(JToken item);
    public sealed virtual void CopyTo(JToken[] array, int arrayIndex);
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual bool Remove(JToken item);
    internal virtual int GetDeepHashCode();
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal class Newtonsoft.Json.Linq.JConstructor : JContainer {
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
private string _name;
    private List`1<JToken> _values;
    protected IList`1<JToken> ChildrenTokens { get; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
public string Name { get; public set; }
    public JTokenType Type { get; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
public JToken Item { get; public set; }
    public JConstructor(JConstructor other);
    public JConstructor(string name, Object[] content);
    public JConstructor(string name, object content);
    public JConstructor(string name);
    [AsyncStateMachineAttribute("Newtonsoft.Json.Linq.JConstructor/<WriteToAsync>d__0")]
public virtual Task WriteToAsync(JsonWriter writer, CancellationToken cancellationToken, JsonConverter[] converters);
    public static Task`1<JConstructor> LoadAsync(JsonReader reader, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.Linq.JConstructor/<LoadAsync>d__2")]
public static Task`1<JConstructor> LoadAsync(JsonReader reader, JsonLoadSettings settings, CancellationToken cancellationToken);
    protected virtual IList`1<JToken> get_ChildrenTokens();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
internal virtual int IndexOfItem(JToken item);
    internal virtual void MergeItem(object content, JsonMergeSettings settings);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public string get_Name();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public void set_Name(string value);
    public virtual JTokenType get_Type();
    internal virtual bool DeepEquals(JToken node);
    internal virtual JToken CloneToken();
    public virtual void WriteTo(JsonWriter writer, JsonConverter[] converters);
    public virtual JToken get_Item(object key);
    public virtual void set_Item(object key, JToken value);
    internal virtual int GetDeepHashCode();
    public static JConstructor Load(JsonReader reader);
    public static JConstructor Load(JsonReader reader, JsonLoadSettings settings);
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal abstract class Newtonsoft.Json.Linq.JContainer : JToken {
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
internal ListChangedEventHandler _listChanged;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
internal AddingNewEventHandler _addingNew;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
internal NotifyCollectionChangedEventHandler _collectionChanged;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
private object _syncRoot;
    private bool _busy;
    protected IList`1<JToken> ChildrenTokens { get; }
    public bool HasValues { get; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
public JToken First { get; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
public JToken Last { get; }
    private JToken System.Collections.Generic.IList<Newtonsoft.Json.Linq.JToken>.Item { get; private set; }
    private bool System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.IsReadOnly { get; }
    private bool System.Collections.IList.IsFixedSize { get; }
    private bool System.Collections.IList.IsReadOnly { get; }
    private object System.Collections.IList.Item { get; private set; }
    public int Count { get; }
    private bool System.Collections.ICollection.IsSynchronized { get; }
    private object System.Collections.ICollection.SyncRoot { get; }
    private bool System.ComponentModel.IBindingList.AllowEdit { get; }
    private bool System.ComponentModel.IBindingList.AllowNew { get; }
    private bool System.ComponentModel.IBindingList.AllowRemove { get; }
    private bool System.ComponentModel.IBindingList.IsSorted { get; }
    private ListSortDirection System.ComponentModel.IBindingList.SortDirection { get; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
private PropertyDescriptor System.ComponentModel.IBindingList.SortProperty { get; }
    private bool System.ComponentModel.IBindingList.SupportsChangeNotification { get; }
    private bool System.ComponentModel.IBindingList.SupportsSearching { get; }
    private bool System.ComponentModel.IBindingList.SupportsSorting { get; }
    internal JContainer(JContainer other);
    [AsyncStateMachineAttribute("Newtonsoft.Json.Linq.JContainer/<ReadTokenFromAsync>d__0")]
internal Task ReadTokenFromAsync(JsonReader reader, JsonLoadSettings options, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.Linq.JContainer/<ReadContentFromAsync>d__1")]
private Task ReadContentFromAsync(JsonReader reader, JsonLoadSettings settings, CancellationToken cancellationToken);
    public sealed virtual void add_ListChanged(ListChangedEventHandler value);
    public sealed virtual void remove_ListChanged(ListChangedEventHandler value);
    public void add_AddingNew(AddingNewEventHandler value);
    public void remove_AddingNew(AddingNewEventHandler value);
    public sealed virtual void add_CollectionChanged(NotifyCollectionChangedEventHandler value);
    public sealed virtual void remove_CollectionChanged(NotifyCollectionChangedEventHandler value);
    protected abstract virtual IList`1<JToken> get_ChildrenTokens();
    internal void CheckReentrancy();
    internal virtual IList`1<JToken> CreateChildrenCollection();
    protected virtual void OnAddingNew(AddingNewEventArgs e);
    protected virtual void OnListChanged(ListChangedEventArgs e);
    protected virtual void OnCollectionChanged(NotifyCollectionChangedEventArgs e);
    public virtual bool get_HasValues();
    internal bool ContentsEqual(JContainer container);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public virtual JToken get_First();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public virtual JToken get_Last();
    public virtual JEnumerable`1<JToken> Children();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public virtual IEnumerable`1<T> Values();
    public IEnumerable`1<JToken> Descendants();
    public IEnumerable`1<JToken> DescendantsAndSelf();
    [IteratorStateMachineAttribute("Newtonsoft.Json.Linq.JContainer/<GetDescendants>d__36")]
internal IEnumerable`1<JToken> GetDescendants(bool self);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
internal bool IsMultiContent(object content);
    internal JToken EnsureParentToken(JToken item, bool skipParentCheck);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
internal abstract virtual int IndexOfItem(JToken item);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
internal virtual bool InsertItem(int index, JToken item, bool skipParentCheck);
    internal virtual void RemoveItemAt(int index);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
internal virtual bool RemoveItem(JToken item);
    internal virtual JToken GetItem(int index);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
internal virtual void SetItem(int index, JToken item);
    internal virtual void ClearItems();
    internal virtual void ReplaceItem(JToken existing, JToken replacement);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
internal virtual bool ContainsItem(JToken item);
    internal virtual void CopyItemsTo(Array array, int arrayIndex);
    internal static bool IsTokenUnchanged(JToken currentValue, JToken newValue);
    internal virtual void ValidateToken(JToken o, JToken existing);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public virtual void Add(object content);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
internal bool TryAdd(object content);
    internal void AddAndSkipParentCheck(JToken token);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public void AddFirst(object content);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
internal bool TryAddInternal(int index, object content, bool skipParentCheck);
    internal static JToken CreateFromContent(object content);
    public JsonWriter CreateWriter();
    public void ReplaceAll(object content);
    public void RemoveAll();
    internal abstract virtual void MergeItem(object content, JsonMergeSettings settings);
    public void Merge(object content);
    public void Merge(object content, JsonMergeSettings settings);
    internal void ReadTokenFrom(JsonReader reader, JsonLoadSettings options);
    internal void ReadContentFrom(JsonReader r, JsonLoadSettings settings);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
private static JProperty ReadProperty(JsonReader r, JsonLoadSettings settings, IJsonLineInfo lineInfo, JContainer parent);
    internal int ContentsHashCode();
    private sealed virtual override string System.ComponentModel.ITypedList.GetListName(PropertyDescriptor[] listAccessors);
    private sealed virtual override PropertyDescriptorCollection System.ComponentModel.ITypedList.GetItemProperties(PropertyDescriptor[] listAccessors);
    private sealed virtual override int System.Collections.Generic.IList<Newtonsoft.Json.Linq.JToken>.IndexOf(JToken item);
    private sealed virtual override void System.Collections.Generic.IList<Newtonsoft.Json.Linq.JToken>.Insert(int index, JToken item);
    private sealed virtual override void System.Collections.Generic.IList<Newtonsoft.Json.Linq.JToken>.RemoveAt(int index);
    private sealed virtual override JToken System.Collections.Generic.IList<Newtonsoft.Json.Linq.JToken>.get_Item(int index);
    private sealed virtual override void System.Collections.Generic.IList<Newtonsoft.Json.Linq.JToken>.set_Item(int index, JToken value);
    private sealed virtual override void System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.Add(JToken item);
    private sealed virtual override void System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.Clear();
    private sealed virtual override bool System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.Contains(JToken item);
    private sealed virtual override void System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.CopyTo(JToken[] array, int arrayIndex);
    private sealed virtual override bool System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.get_IsReadOnly();
    private sealed virtual override bool System.Collections.Generic.ICollection<Newtonsoft.Json.Linq.JToken>.Remove(JToken item);
    private JToken EnsureValue(object value);
    private sealed virtual override int System.Collections.IList.Add(object value);
    private sealed virtual override void System.Collections.IList.Clear();
    private sealed virtual override bool System.Collections.IList.Contains(object value);
    private sealed virtual override int System.Collections.IList.IndexOf(object value);
    private sealed virtual override void System.Collections.IList.Insert(int index, object value);
    private sealed virtual override bool System.Collections.IList.get_IsFixedSize();
    private sealed virtual override bool System.Collections.IList.get_IsReadOnly();
    private sealed virtual override void System.Collections.IList.Remove(object value);
    private sealed virtual override void System.Collections.IList.RemoveAt(int index);
    private sealed virtual override object System.Collections.IList.get_Item(int index);
    private sealed virtual override void System.Collections.IList.set_Item(int index, object value);
    private sealed virtual override void System.Collections.ICollection.CopyTo(Array array, int index);
    public sealed virtual int get_Count();
    private sealed virtual override bool System.Collections.ICollection.get_IsSynchronized();
    private sealed virtual override object System.Collections.ICollection.get_SyncRoot();
    private sealed virtual override void System.ComponentModel.IBindingList.AddIndex(PropertyDescriptor property);
    private sealed virtual override object System.ComponentModel.IBindingList.AddNew();
    private sealed virtual override bool System.ComponentModel.IBindingList.get_AllowEdit();
    private sealed virtual override bool System.ComponentModel.IBindingList.get_AllowNew();
    private sealed virtual override bool System.ComponentModel.IBindingList.get_AllowRemove();
    private sealed virtual override void System.ComponentModel.IBindingList.ApplySort(PropertyDescriptor property, ListSortDirection direction);
    private sealed virtual override int System.ComponentModel.IBindingList.Find(PropertyDescriptor property, object key);
    private sealed virtual override bool System.ComponentModel.IBindingList.get_IsSorted();
    private sealed virtual override void System.ComponentModel.IBindingList.RemoveIndex(PropertyDescriptor property);
    private sealed virtual override void System.ComponentModel.IBindingList.RemoveSort();
    private sealed virtual override ListSortDirection System.ComponentModel.IBindingList.get_SortDirection();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
private sealed virtual override PropertyDescriptor System.ComponentModel.IBindingList.get_SortProperty();
    private sealed virtual override bool System.ComponentModel.IBindingList.get_SupportsChangeNotification();
    private sealed virtual override bool System.ComponentModel.IBindingList.get_SupportsSearching();
    private sealed virtual override bool System.ComponentModel.IBindingList.get_SupportsSorting();
    internal static void MergeEnumerableContent(JContainer target, IEnumerable content, JsonMergeSettings settings);
}
[DefaultMemberAttribute("Item")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<f87e9192-349b-4fe9-9283-65da525832f1>IsReadOnlyAttribute]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal class Newtonsoft.Json.Linq.JEnumerable`1 : ValueType {
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static JEnumerable`1<T> Empty;
    private IEnumerable`1<T> _enumerable;
    public IJEnumerable`1<JToken> Item { get; }
    public JEnumerable`1(IEnumerable`1<T> enumerable);
    private static JEnumerable`1();
    public sealed virtual IEnumerator`1<T> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public sealed virtual IJEnumerable`1<JToken> get_Item(object key);
    public sealed virtual bool Equals(JEnumerable`1<T> other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal class Newtonsoft.Json.Linq.JObject : JContainer {
    private JPropertyKeyedCollection _properties;
    [CompilerGeneratedAttribute]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
private PropertyChangedEventHandler PropertyChanged;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
[CompilerGeneratedAttribute]
private PropertyChangingEventHandler PropertyChanging;
    protected IList`1<JToken> ChildrenTokens { get; }
    public JTokenType Type { get; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
public JToken Item { get; public set; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
public JToken Item { get; public set; }
    private ICollection`1<string> System.Collections.Generic.IDictionary<System.String,Newtonsoft.Json.Linq.JToken>.Keys { get; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ICollection`1<JToken> System.Collections.Generic.IDictionary<System.String,Newtonsoft.Json.Linq.JToken>.Values { get; }
    private bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,Newtonsoft.Json.Linq.JToken>>.IsReadOnly { get; }
    public JObject(JObject other);
    public JObject(Object[] content);
    public JObject(object content);
    public virtual Task WriteToAsync(JsonWriter writer, CancellationToken cancellationToken, JsonConverter[] converters);
    public static Task`1<JObject> LoadAsync(JsonReader reader, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.Linq.JObject/<LoadAsync>d__2")]
public static Task`1<JObject> LoadAsync(JsonReader reader, JsonLoadSettings settings, CancellationToken cancellationToken);
    protected virtual IList`1<JToken> get_ChildrenTokens();
    [CompilerGeneratedAttribute]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public sealed virtual void add_PropertyChanged(PropertyChangedEventHandler value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual void remove_PropertyChanged(PropertyChangedEventHandler value);
    [CompilerGeneratedAttribute]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public sealed virtual void add_PropertyChanging(PropertyChangingEventHandler value);
    [CompilerGeneratedAttribute]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public sealed virtual void remove_PropertyChanging(PropertyChangingEventHandler value);
    internal virtual bool DeepEquals(JToken node);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
internal virtual int IndexOfItem(JToken item);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
internal virtual bool InsertItem(int index, JToken item, bool skipParentCheck);
    internal virtual void ValidateToken(JToken o, JToken existing);
    internal virtual void MergeItem(object content, JsonMergeSettings settings);
    private static bool IsNull(JToken token);
    internal void InternalPropertyChanged(JProperty childProperty);
    internal void InternalPropertyChanging(JProperty childProperty);
    internal virtual JToken CloneToken();
    public virtual JTokenType get_Type();
    public IEnumerable`1<JProperty> Properties();
    public JProperty Property(string name);
    public JProperty Property(string name, StringComparison comparison);
    public JEnumerable`1<JToken> PropertyValues();
    public virtual JToken get_Item(object key);
    public virtual void set_Item(object key, JToken value);
    public sealed virtual JToken get_Item(string propertyName);
    public sealed virtual void set_Item(string propertyName, JToken value);
    public static JObject Load(JsonReader reader);
    public static JObject Load(JsonReader reader, JsonLoadSettings settings);
    public static JObject Parse(string json);
    public static JObject Parse(string json, JsonLoadSettings settings);
    public static JObject FromObject(object o);
    public static JObject FromObject(object o, JsonSerializer jsonSerializer);
    public virtual void WriteTo(JsonWriter writer, JsonConverter[] converters);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public JToken GetValue(string propertyName);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public JToken GetValue(string propertyName, StringComparison comparison);
    public bool TryGetValue(string propertyName, StringComparison comparison, JToken& value);
    public sealed virtual void Add(string propertyName, JToken value);
    public sealed virtual bool ContainsKey(string propertyName);
    private sealed virtual override ICollection`1<string> System.Collections.Generic.IDictionary<System.String,Newtonsoft.Json.Linq.JToken>.get_Keys();
    public sealed virtual bool Remove(string propertyName);
    public sealed virtual bool TryGetValue(string propertyName, JToken& value);
    private sealed virtual override ICollection`1<JToken> System.Collections.Generic.IDictionary<System.String,Newtonsoft.Json.Linq.JToken>.get_Values();
    private sealed virtual override void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,Newtonsoft.Json.Linq.JToken>>.Add(KeyValuePair`2<string, JToken> item);
    private sealed virtual override void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,Newtonsoft.Json.Linq.JToken>>.Clear();
    private sealed virtual override bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,Newtonsoft.Json.Linq.JToken>>.Contains(KeyValuePair`2<string, JToken> item);
    private sealed virtual override void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,Newtonsoft.Json.Linq.JToken>>.CopyTo(KeyValuePair`2[] array, int arrayIndex);
    private sealed virtual override bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,Newtonsoft.Json.Linq.JToken>>.get_IsReadOnly();
    private sealed virtual override bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,Newtonsoft.Json.Linq.JToken>>.Remove(KeyValuePair`2<string, JToken> item);
    internal virtual int GetDeepHashCode();
    [IteratorStateMachineAttribute("Newtonsoft.Json.Linq.JObject/<GetEnumerator>d__63")]
public sealed virtual IEnumerator`1<KeyValuePair`2<string, JToken>> GetEnumerator();
    protected virtual void OnPropertyChanged(string propertyName);
    protected virtual void OnPropertyChanging(string propertyName);
    private sealed virtual override PropertyDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetProperties();
    private sealed virtual override PropertyDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetProperties(Attribute[] attributes);
    private sealed virtual override AttributeCollection System.ComponentModel.ICustomTypeDescriptor.GetAttributes();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
private sealed virtual override string System.ComponentModel.ICustomTypeDescriptor.GetClassName();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
private sealed virtual override string System.ComponentModel.ICustomTypeDescriptor.GetComponentName();
    private sealed virtual override TypeConverter System.ComponentModel.ICustomTypeDescriptor.GetConverter();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
private sealed virtual override EventDescriptor System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
private sealed virtual override PropertyDescriptor System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty();
    private sealed virtual override object System.ComponentModel.ICustomTypeDescriptor.GetEditor(Type editorBaseType);
    private sealed virtual override EventDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetEvents(Attribute[] attributes);
    private sealed virtual override EventDescriptorCollection System.ComponentModel.ICustomTypeDescriptor.GetEvents();
    private sealed virtual override object System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(PropertyDescriptor pd);
    protected virtual DynamicMetaObject GetMetaObject(Expression parameter);
    [AsyncStateMachineAttribute("Newtonsoft.Json.Linq.JObject/<<WriteToAsync>g__AwaitProperties|0_0>d")]
[CompilerGeneratedAttribute]
private Task <WriteToAsync>g__AwaitProperties|0_0(Task task, int i, JsonWriter Writer, CancellationToken CancellationToken, JsonConverter[] Converters);
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal class Newtonsoft.Json.Linq.JProperty : JContainer {
    private JPropertyList _content;
    private string _name;
    protected IList`1<JToken> ChildrenTokens { get; }
    public string Name { get; }
    public JToken Value { get; public set; }
    public JTokenType Type { get; }
    public JProperty(JProperty other);
    internal JProperty(string name);
    public JProperty(string name, Object[] content);
    public JProperty(string name, object content);
    public virtual Task WriteToAsync(JsonWriter writer, CancellationToken cancellationToken, JsonConverter[] converters);
    [AsyncStateMachineAttribute("Newtonsoft.Json.Linq.JProperty/<WriteToAsync>d__1")]
private Task WriteToAsync(Task task, JsonWriter writer, CancellationToken cancellationToken, JsonConverter[] converters);
    private Task WriteValueAsync(JsonWriter writer, CancellationToken cancellationToken, JsonConverter[] converters);
    public static Task`1<JProperty> LoadAsync(JsonReader reader, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.Linq.JProperty/<LoadAsync>d__4")]
public static Task`1<JProperty> LoadAsync(JsonReader reader, JsonLoadSettings settings, CancellationToken cancellationToken);
    protected virtual IList`1<JToken> get_ChildrenTokens();
    [DebuggerStepThroughAttribute]
public string get_Name();
    [DebuggerStepThroughAttribute]
public JToken get_Value();
    public void set_Value(JToken value);
    internal virtual JToken GetItem(int index);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
internal virtual void SetItem(int index, JToken item);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
internal virtual bool RemoveItem(JToken item);
    internal virtual void RemoveItemAt(int index);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
internal virtual int IndexOfItem(JToken item);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
internal virtual bool InsertItem(int index, JToken item, bool skipParentCheck);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
internal virtual bool ContainsItem(JToken item);
    internal virtual void MergeItem(object content, JsonMergeSettings settings);
    internal virtual void ClearItems();
    internal virtual bool DeepEquals(JToken node);
    internal virtual JToken CloneToken();
    [DebuggerStepThroughAttribute]
public virtual JTokenType get_Type();
    public virtual void WriteTo(JsonWriter writer, JsonConverter[] converters);
    internal virtual int GetDeepHashCode();
    public static JProperty Load(JsonReader reader);
    public static JProperty Load(JsonReader reader, JsonLoadSettings settings);
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal class Newtonsoft.Json.Linq.JPropertyDescriptor : PropertyDescriptor {
    public Type ComponentType { get; }
    public bool IsReadOnly { get; }
    public Type PropertyType { get; }
    protected int NameHashCode { get; }
    public JPropertyDescriptor(string name);
    private static JObject CastInstance(object instance);
    public virtual bool CanResetValue(object component);
    public virtual object GetValue(object component);
    public virtual void ResetValue(object component);
    public virtual void SetValue(object component, object value);
    public virtual bool ShouldSerializeValue(object component);
    public virtual Type get_ComponentType();
    public virtual bool get_IsReadOnly();
    public virtual Type get_PropertyType();
    protected virtual int get_NameHashCode();
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DefaultMemberAttribute("Item")]
internal class Newtonsoft.Json.Linq.JPropertyKeyedCollection : Collection`1<JToken> {
    private static IEqualityComparer`1<string> Comparer;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Dictionary`2<string, JToken> _dictionary;
    public JToken Item { get; }
    public ICollection`1<string> Keys { get; }
    public ICollection`1<JToken> Values { get; }
    private static JPropertyKeyedCollection();
    private void AddKey(string key, JToken item);
    protected void ChangeItemKey(JToken item, string newKey);
    protected virtual void ClearItems();
    public bool Contains(string key);
    private bool ContainsItem(JToken item);
    private void EnsureDictionary();
    private string GetKeyForItem(JToken item);
    protected virtual void InsertItem(int index, JToken item);
    public bool Remove(string key);
    protected virtual void RemoveItem(int index);
    private void RemoveKey(string key);
    protected virtual void SetItem(int index, JToken item);
    public JToken get_Item(string key);
    public bool TryGetValue(string key, JToken& value);
    public ICollection`1<string> get_Keys();
    public ICollection`1<JToken> get_Values();
    public int IndexOfReference(JToken t);
    public bool Compare(JPropertyKeyedCollection other);
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal class Newtonsoft.Json.Linq.JRaw : JValue {
    public JRaw(JRaw other);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public JRaw(object rawJson);
    [AsyncStateMachineAttribute("Newtonsoft.Json.Linq.JRaw/<CreateAsync>d__0")]
public static Task`1<JRaw> CreateAsync(JsonReader reader, CancellationToken cancellationToken);
    public static JRaw Create(JsonReader reader);
    internal virtual JToken CloneToken();
}
internal class Newtonsoft.Json.Linq.JsonLoadSettings : object {
    private CommentHandling _commentHandling;
    private LineInfoHandling _lineInfoHandling;
    private DuplicatePropertyNameHandling _duplicatePropertyNameHandling;
    public CommentHandling CommentHandling { get; public set; }
    public LineInfoHandling LineInfoHandling { get; public set; }
    public DuplicatePropertyNameHandling DuplicatePropertyNameHandling { get; public set; }
    public CommentHandling get_CommentHandling();
    public void set_CommentHandling(CommentHandling value);
    public LineInfoHandling get_LineInfoHandling();
    public void set_LineInfoHandling(LineInfoHandling value);
    public DuplicatePropertyNameHandling get_DuplicatePropertyNameHandling();
    public void set_DuplicatePropertyNameHandling(DuplicatePropertyNameHandling value);
}
internal class Newtonsoft.Json.Linq.JsonMergeSettings : object {
    private MergeArrayHandling _mergeArrayHandling;
    private MergeNullValueHandling _mergeNullValueHandling;
    private StringComparison _propertyNameComparison;
    public MergeArrayHandling MergeArrayHandling { get; public set; }
    public MergeNullValueHandling MergeNullValueHandling { get; public set; }
    public StringComparison PropertyNameComparison { get; public set; }
    public MergeArrayHandling get_MergeArrayHandling();
    public void set_MergeArrayHandling(MergeArrayHandling value);
    public MergeNullValueHandling get_MergeNullValueHandling();
    public void set_MergeNullValueHandling(MergeNullValueHandling value);
    public StringComparison get_PropertyNameComparison();
    public void set_PropertyNameComparison(StringComparison value);
}
internal class Newtonsoft.Json.Linq.JsonPath.ArrayIndexFilter : PathFilter {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Index>k__BackingField;
    public Nullable`1<int> Index { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Index();
    [CompilerGeneratedAttribute]
public void set_Index(Nullable`1<int> value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[IteratorStateMachineAttribute("Newtonsoft.Json.Linq.JsonPath.ArrayIndexFilter/<ExecuteFilter>d__4")]
public virtual IEnumerable`1<JToken> ExecuteFilter(JToken root, IEnumerable`1<JToken> current, JsonSelectSettings settings);
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal class Newtonsoft.Json.Linq.JsonPath.ArrayMultipleIndexFilter : PathFilter {
    internal List`1<int> Indexes;
    public ArrayMultipleIndexFilter(List`1<int> indexes);
    [IteratorStateMachineAttribute("Newtonsoft.Json.Linq.JsonPath.ArrayMultipleIndexFilter/<ExecuteFilter>d__2")]
public virtual IEnumerable`1<JToken> ExecuteFilter(JToken root, IEnumerable`1<JToken> current, JsonSelectSettings settings);
}
internal class Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter : PathFilter {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Start>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <End>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Step>k__BackingField;
    public Nullable`1<int> Start { get; public set; }
    public Nullable`1<int> End { get; public set; }
    public Nullable`1<int> Step { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Start();
    [CompilerGeneratedAttribute]
public void set_Start(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_End();
    [CompilerGeneratedAttribute]
public void set_End(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Step();
    [CompilerGeneratedAttribute]
public void set_Step(Nullable`1<int> value);
    [IteratorStateMachineAttribute("Newtonsoft.Json.Linq.JsonPath.ArraySliceFilter/<ExecuteFilter>d__12")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public virtual IEnumerable`1<JToken> ExecuteFilter(JToken root, IEnumerable`1<JToken> current, JsonSelectSettings settings);
    private bool IsValid(int index, int stopIndex, bool positiveStep);
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal class Newtonsoft.Json.Linq.JsonPath.BooleanQueryExpression : QueryExpression {
    public object Left;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
public object Right;
    public BooleanQueryExpression(QueryOperator operator, object left, object right);
    private IEnumerable`1<JToken> GetResult(JToken root, JToken t, object o);
    public virtual bool IsMatch(JToken root, JToken t, JsonSelectSettings settings);
    private bool MatchTokens(JToken leftResult, JToken rightResult, JsonSelectSettings settings);
    private static bool RegexEquals(JValue input, JValue pattern, JsonSelectSettings settings);
    internal static bool EqualsWithStringCoercion(JValue value, JValue queryValue);
    internal static bool EqualsWithStrictMatch(JValue value, JValue queryValue);
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal class Newtonsoft.Json.Linq.JsonPath.CompositeExpression : QueryExpression {
    [CompilerGeneratedAttribute]
private List`1<QueryExpression> <Expressions>k__BackingField;
    public List`1<QueryExpression> Expressions { get; public set; }
    public CompositeExpression(QueryOperator operator);
    [CompilerGeneratedAttribute]
public List`1<QueryExpression> get_Expressions();
    [CompilerGeneratedAttribute]
public void set_Expressions(List`1<QueryExpression> value);
    public virtual bool IsMatch(JToken root, JToken t, JsonSelectSettings settings);
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
internal class Newtonsoft.Json.Linq.JsonPath.FieldFilter : PathFilter {
    internal string Name;
    public FieldFilter(string name);
    [IteratorStateMachineAttribute("Newtonsoft.Json.Linq.JsonPath.FieldFilter/<ExecuteFilter>d__2")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public virtual IEnumerable`1<JToken> ExecuteFilter(JToken root, IEnumerable`1<JToken> current, JsonSelectSettings settings);
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal class Newtonsoft.Json.Linq.JsonPath.FieldMultipleFilter : PathFilter {
    internal List`1<string> Names;
    public FieldMultipleFilter(List`1<string> names);
    [IteratorStateMachineAttribute("Newtonsoft.Json.Linq.JsonPath.FieldMultipleFilter/<ExecuteFilter>d__2")]
public virtual IEnumerable`1<JToken> ExecuteFilter(JToken root, IEnumerable`1<JToken> current, JsonSelectSettings settings);
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal class Newtonsoft.Json.Linq.JsonPath.JPath : object {
    private static Char[] FloatCharacters;
    private string _expression;
    [CompilerGeneratedAttribute]
private List`1<PathFilter> <Filters>k__BackingField;
    private int _currentIndex;
    public List`1<PathFilter> Filters { get; }
    public JPath(string expression);
    private static JPath();
    [CompilerGeneratedAttribute]
public List`1<PathFilter> get_Filters();
    private void ParseMain();
    private bool ParsePath(List`1<PathFilter> filters, int currentPartStartIndex, bool query);
    private static PathFilter CreatePathFilter(string member, bool scan);
    private PathFilter ParseIndexer(char indexerOpenChar, bool scan);
    private PathFilter ParseArrayIndexer(char indexerCloseChar);
    private void EatWhitespace();
    private PathFilter ParseQuery(char indexerCloseChar, bool scan);
    private bool TryParseExpression(List`1& expressionPath);
    private JsonException CreateUnexpectedCharacterException();
    private object ParseSide();
    private QueryExpression ParseExpression();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
private bool TryParseValue(Object& value);
    private string ReadQuotedString();
    private string ReadRegexString();
    private bool Match(string s);
    private QueryOperator ParseOperator();
    private PathFilter ParseQuotedField(char indexerCloseChar, bool scan);
    private void EnsureLength(string message);
    internal IEnumerable`1<JToken> Evaluate(JToken root, JToken t, JsonSelectSettings settings);
    internal static IEnumerable`1<JToken> Evaluate(List`1<PathFilter> filters, JToken root, JToken t, JsonSelectSettings settings);
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
internal abstract class Newtonsoft.Json.Linq.JsonPath.PathFilter : object {
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public abstract virtual IEnumerable`1<JToken> ExecuteFilter(JToken root, IEnumerable`1<JToken> current, JsonSelectSettings settings);
    protected static JToken GetTokenIndex(JToken t, JsonSelectSettings settings, int index);
    protected static JToken GetNextScanValue(JToken originalParent, JToken container, JToken value);
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal abstract class Newtonsoft.Json.Linq.JsonPath.QueryExpression : object {
    internal QueryOperator Operator;
    public QueryExpression(QueryOperator operator);
    public bool IsMatch(JToken root, JToken t);
    public abstract virtual bool IsMatch(JToken root, JToken t, JsonSelectSettings settings);
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal class Newtonsoft.Json.Linq.JsonPath.QueryFilter : PathFilter {
    internal QueryExpression Expression;
    public QueryFilter(QueryExpression expression);
    [IteratorStateMachineAttribute("Newtonsoft.Json.Linq.JsonPath.QueryFilter/<ExecuteFilter>d__2")]
public virtual IEnumerable`1<JToken> ExecuteFilter(JToken root, IEnumerable`1<JToken> current, JsonSelectSettings settings);
}
internal enum Newtonsoft.Json.Linq.JsonPath.QueryOperator : Enum {
    public int value__;
    public static QueryOperator None;
    public static QueryOperator Equals;
    public static QueryOperator NotEquals;
    public static QueryOperator Exists;
    public static QueryOperator LessThan;
    public static QueryOperator LessThanOrEquals;
    public static QueryOperator GreaterThan;
    public static QueryOperator GreaterThanOrEquals;
    public static QueryOperator And;
    public static QueryOperator Or;
    public static QueryOperator RegexEquals;
    public static QueryOperator StrictEquals;
    public static QueryOperator StrictNotEquals;
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal class Newtonsoft.Json.Linq.JsonPath.QueryScanFilter : PathFilter {
    internal QueryExpression Expression;
    public QueryScanFilter(QueryExpression expression);
    [IteratorStateMachineAttribute("Newtonsoft.Json.Linq.JsonPath.QueryScanFilter/<ExecuteFilter>d__2")]
public virtual IEnumerable`1<JToken> ExecuteFilter(JToken root, IEnumerable`1<JToken> current, JsonSelectSettings settings);
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal class Newtonsoft.Json.Linq.JsonPath.RootFilter : PathFilter {
    public static RootFilter Instance;
    private static RootFilter();
    public virtual IEnumerable`1<JToken> ExecuteFilter(JToken root, IEnumerable`1<JToken> current, JsonSelectSettings settings);
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
internal class Newtonsoft.Json.Linq.JsonPath.ScanFilter : PathFilter {
    internal string Name;
    public ScanFilter(string name);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[IteratorStateMachineAttribute("Newtonsoft.Json.Linq.JsonPath.ScanFilter/<ExecuteFilter>d__2")]
public virtual IEnumerable`1<JToken> ExecuteFilter(JToken root, IEnumerable`1<JToken> current, JsonSelectSettings settings);
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal class Newtonsoft.Json.Linq.JsonPath.ScanMultipleFilter : PathFilter {
    private List`1<string> _names;
    public ScanMultipleFilter(List`1<string> names);
    [IteratorStateMachineAttribute("Newtonsoft.Json.Linq.JsonPath.ScanMultipleFilter/<ExecuteFilter>d__2")]
public virtual IEnumerable`1<JToken> ExecuteFilter(JToken root, IEnumerable`1<JToken> current, JsonSelectSettings settings);
}
internal class Newtonsoft.Json.Linq.JsonSelectSettings : object {
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <RegexMatchTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ErrorWhenNoMatch>k__BackingField;
    public Nullable`1<TimeSpan> RegexMatchTimeout { get; public set; }
    public bool ErrorWhenNoMatch { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_RegexMatchTimeout();
    [CompilerGeneratedAttribute]
public void set_RegexMatchTimeout(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public bool get_ErrorWhenNoMatch();
    [CompilerGeneratedAttribute]
public void set_ErrorWhenNoMatch(bool value);
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
internal abstract class Newtonsoft.Json.Linq.JToken : object {
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
private static JTokenEqualityComparer _equalityComparer;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
private JContainer _parent;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
private JToken _previous;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
private JToken _next;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
private object _annotations;
    private static JTokenType[] BooleanTypes;
    private static JTokenType[] NumberTypes;
    private static JTokenType[] BigIntegerTypes;
    private static JTokenType[] StringTypes;
    private static JTokenType[] GuidTypes;
    private static JTokenType[] TimeSpanTypes;
    private static JTokenType[] UriTypes;
    private static JTokenType[] CharTypes;
    private static JTokenType[] DateTimeTypes;
    private static JTokenType[] BytesTypes;
    public static JTokenEqualityComparer EqualityComparer { get; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
public JContainer Parent { get; internal set; }
    public JToken Root { get; }
    public JTokenType Type { get; }
    public bool HasValues { get; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
public JToken Next { get; internal set; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
public JToken Previous { get; internal set; }
    public string Path { get; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
public JToken Item { get; public set; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
public JToken First { get; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
public JToken Last { get; }
    private IJEnumerable`1<JToken> Newtonsoft.Json.Linq.IJEnumerable<Newtonsoft.Json.Linq.JToken>.Item { get; }
    private int Newtonsoft.Json.IJsonLineInfo.LineNumber { get; }
    private int Newtonsoft.Json.IJsonLineInfo.LinePosition { get; }
    private static JToken();
    public virtual Task WriteToAsync(JsonWriter writer, CancellationToken cancellationToken, JsonConverter[] converters);
    public Task WriteToAsync(JsonWriter writer, JsonConverter[] converters);
    public static Task`1<JToken> ReadFromAsync(JsonReader reader, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.Linq.JToken/<ReadFromAsync>d__3")]
public static Task`1<JToken> ReadFromAsync(JsonReader reader, JsonLoadSettings settings, CancellationToken cancellationToken);
    public static Task`1<JToken> LoadAsync(JsonReader reader, CancellationToken cancellationToken);
    public static Task`1<JToken> LoadAsync(JsonReader reader, JsonLoadSettings settings, CancellationToken cancellationToken);
    public static JTokenEqualityComparer get_EqualityComparer();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
[DebuggerStepThroughAttribute]
public JContainer get_Parent();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
internal void set_Parent(JContainer value);
    public JToken get_Root();
    internal abstract virtual JToken CloneToken();
    internal abstract virtual bool DeepEquals(JToken node);
    public abstract virtual JTokenType get_Type();
    public abstract virtual bool get_HasValues();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public static bool DeepEquals(JToken t1, JToken t2);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public JToken get_Next();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
internal void set_Next(JToken value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public JToken get_Previous();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
internal void set_Previous(JToken value);
    public string get_Path();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public void AddAfterSelf(object content);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public void AddBeforeSelf(object content);
    public IEnumerable`1<JToken> Ancestors();
    public IEnumerable`1<JToken> AncestorsAndSelf();
    [IteratorStateMachineAttribute("Newtonsoft.Json.Linq.JToken/<GetAncestors>d__48")]
internal IEnumerable`1<JToken> GetAncestors(bool self);
    [IteratorStateMachineAttribute("Newtonsoft.Json.Linq.JToken/<AfterSelf>d__49")]
public IEnumerable`1<JToken> AfterSelf();
    [IteratorStateMachineAttribute("Newtonsoft.Json.Linq.JToken/<BeforeSelf>d__50")]
public IEnumerable`1<JToken> BeforeSelf();
    public virtual JToken get_Item(object key);
    public virtual void set_Item(object key, JToken value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public virtual T Value(object key);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public virtual JToken get_First();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public virtual JToken get_Last();
    public virtual JEnumerable`1<JToken> Children();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("0")]
public JEnumerable`1<T> Children();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public virtual IEnumerable`1<T> Values();
    public void Remove();
    public void Replace(JToken value);
    public abstract virtual void WriteTo(JsonWriter writer, JsonConverter[] converters);
    public virtual string ToString();
    public string ToString(Formatting formatting, JsonConverter[] converters);
    private static JValue EnsureValue(JToken value);
    private static string GetType(JToken token);
    private static bool ValidateToken(JToken o, JTokenType[] validTypes, bool nullable);
    public static bool op_Explicit(JToken value);
    public static DateTimeOffset op_Explicit(JToken value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public static Nullable`1<bool> op_Explicit(JToken value);
    public static long op_Explicit(JToken value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public static Nullable`1<DateTime> op_Explicit(JToken value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public static Nullable`1<DateTimeOffset> op_Explicit(JToken value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public static Nullable`1<decimal> op_Explicit(JToken value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public static Nullable`1<double> op_Explicit(JToken value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public static Nullable`1<char> op_Explicit(JToken value);
    public static int op_Explicit(JToken value);
    public static short op_Explicit(JToken value);
    [CLSCompliantAttribute("False")]
public static ushort op_Explicit(JToken value);
    [CLSCompliantAttribute("False")]
public static char op_Explicit(JToken value);
    public static byte op_Explicit(JToken value);
    [CLSCompliantAttribute("False")]
public static sbyte op_Explicit(JToken value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public static Nullable`1<int> op_Explicit(JToken value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public static Nullable`1<short> op_Explicit(JToken value);
    [CLSCompliantAttribute("False")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public static Nullable`1<ushort> op_Explicit(JToken value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public static Nullable`1<byte> op_Explicit(JToken value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
[CLSCompliantAttribute("False")]
public static Nullable`1<sbyte> op_Explicit(JToken value);
    public static DateTime op_Explicit(JToken value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public static Nullable`1<long> op_Explicit(JToken value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public static Nullable`1<float> op_Explicit(JToken value);
    public static decimal op_Explicit(JToken value);
    [CLSCompliantAttribute("False")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public static Nullable`1<UInt32> op_Explicit(JToken value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
[CLSCompliantAttribute("False")]
public static Nullable`1<ulong> op_Explicit(JToken value);
    public static double op_Explicit(JToken value);
    public static float op_Explicit(JToken value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public static string op_Explicit(JToken value);
    [CLSCompliantAttribute("False")]
public static UInt32 op_Explicit(JToken value);
    [CLSCompliantAttribute("False")]
public static ulong op_Explicit(JToken value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public static Byte[] op_Explicit(JToken value);
    public static Guid op_Explicit(JToken value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public static Nullable`1<Guid> op_Explicit(JToken value);
    public static TimeSpan op_Explicit(JToken value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public static Nullable`1<TimeSpan> op_Explicit(JToken value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public static Uri op_Explicit(JToken value);
    private static BigInteger ToBigInteger(JToken value);
    private static Nullable`1<BigInteger> ToBigIntegerNullable(JToken value);
    public static JToken op_Implicit(bool value);
    public static JToken op_Implicit(DateTimeOffset value);
    public static JToken op_Implicit(byte value);
    public static JToken op_Implicit(Nullable`1<byte> value);
    [CLSCompliantAttribute("False")]
public static JToken op_Implicit(sbyte value);
    [CLSCompliantAttribute("False")]
public static JToken op_Implicit(Nullable`1<sbyte> value);
    public static JToken op_Implicit(Nullable`1<bool> value);
    public static JToken op_Implicit(long value);
    public static JToken op_Implicit(Nullable`1<DateTime> value);
    public static JToken op_Implicit(Nullable`1<DateTimeOffset> value);
    public static JToken op_Implicit(Nullable`1<decimal> value);
    public static JToken op_Implicit(Nullable`1<double> value);
    [CLSCompliantAttribute("False")]
public static JToken op_Implicit(short value);
    [CLSCompliantAttribute("False")]
public static JToken op_Implicit(ushort value);
    public static JToken op_Implicit(int value);
    public static JToken op_Implicit(Nullable`1<int> value);
    public static JToken op_Implicit(DateTime value);
    public static JToken op_Implicit(Nullable`1<long> value);
    public static JToken op_Implicit(Nullable`1<float> value);
    public static JToken op_Implicit(decimal value);
    [CLSCompliantAttribute("False")]
public static JToken op_Implicit(Nullable`1<short> value);
    [CLSCompliantAttribute("False")]
public static JToken op_Implicit(Nullable`1<ushort> value);
    [CLSCompliantAttribute("False")]
public static JToken op_Implicit(Nullable`1<UInt32> value);
    [CLSCompliantAttribute("False")]
public static JToken op_Implicit(Nullable`1<ulong> value);
    public static JToken op_Implicit(double value);
    public static JToken op_Implicit(float value);
    public static JToken op_Implicit(string value);
    [CLSCompliantAttribute("False")]
public static JToken op_Implicit(UInt32 value);
    [CLSCompliantAttribute("False")]
public static JToken op_Implicit(ulong value);
    public static JToken op_Implicit(Byte[] value);
    public static JToken op_Implicit(Uri value);
    public static JToken op_Implicit(TimeSpan value);
    public static JToken op_Implicit(Nullable`1<TimeSpan> value);
    public static JToken op_Implicit(Guid value);
    public static JToken op_Implicit(Nullable`1<Guid> value);
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override IEnumerator`1<JToken> System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.GetEnumerator();
    internal abstract virtual int GetDeepHashCode();
    private sealed virtual override IJEnumerable`1<JToken> Newtonsoft.Json.Linq.IJEnumerable<Newtonsoft.Json.Linq.JToken>.get_Item(object key);
    public JsonReader CreateReader();
    internal static JToken FromObjectInternal(object o, JsonSerializer jsonSerializer);
    public static JToken FromObject(object o);
    public static JToken FromObject(object o, JsonSerializer jsonSerializer);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public T ToObject();
    public object ToObject(Type objectType);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public T ToObject(JsonSerializer jsonSerializer);
    public object ToObject(Type objectType, JsonSerializer jsonSerializer);
    public static JToken ReadFrom(JsonReader reader);
    public static JToken ReadFrom(JsonReader reader, JsonLoadSettings settings);
    public static JToken Parse(string json);
    public static JToken Parse(string json, JsonLoadSettings settings);
    public static JToken Load(JsonReader reader, JsonLoadSettings settings);
    public static JToken Load(JsonReader reader);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
internal void SetLineInfo(IJsonLineInfo lineInfo, JsonLoadSettings settings);
    internal void SetLineInfo(int lineNumber, int linePosition);
    private sealed virtual override bool Newtonsoft.Json.IJsonLineInfo.HasLineInfo();
    private sealed virtual override int Newtonsoft.Json.IJsonLineInfo.get_LineNumber();
    private sealed virtual override int Newtonsoft.Json.IJsonLineInfo.get_LinePosition();
    public JToken SelectToken(string path);
    public JToken SelectToken(string path, bool errorWhenNoMatch);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public JToken SelectToken(string path, JsonSelectSettings settings);
    public IEnumerable`1<JToken> SelectTokens(string path);
    public IEnumerable`1<JToken> SelectTokens(string path, bool errorWhenNoMatch);
    public IEnumerable`1<JToken> SelectTokens(string path, JsonSelectSettings settings);
    protected virtual DynamicMetaObject GetMetaObject(Expression parameter);
    private sealed virtual override DynamicMetaObject System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(Expression parameter);
    private sealed virtual override object System.ICloneable.Clone();
    public JToken DeepClone();
    public void AddAnnotation(object annotation);
    public T Annotation();
    public object Annotation(Type type);
    [IteratorStateMachineAttribute("Newtonsoft.Json.Linq.JToken/<Annotations>d__184`1")]
public IEnumerable`1<T> Annotations();
    [IteratorStateMachineAttribute("Newtonsoft.Json.Linq.JToken/<Annotations>d__185")]
public IEnumerable`1<object> Annotations(Type type);
    public void RemoveAnnotations();
    public void RemoveAnnotations(Type type);
    internal void CopyAnnotations(JToken target, JToken source);
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal class Newtonsoft.Json.Linq.JTokenEqualityComparer : object {
    public sealed virtual bool Equals(JToken x, JToken y);
    public sealed virtual int GetHashCode(JToken obj);
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal class Newtonsoft.Json.Linq.JTokenReader : JsonReader {
    private JToken _root;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
private string _initialPath;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
private JToken _parent;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
private JToken _current;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
public JToken CurrentToken { get; }
    private int Newtonsoft.Json.IJsonLineInfo.LineNumber { get; }
    private int Newtonsoft.Json.IJsonLineInfo.LinePosition { get; }
    public string Path { get; }
    public JTokenReader(JToken token);
    public JTokenReader(JToken token, string initialPath);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public JToken get_CurrentToken();
    public virtual bool Read();
    private bool ReadOver(JToken t);
    private bool ReadToEnd();
    private Nullable`1<JsonToken> GetEndToken(JContainer c);
    private bool ReadInto(JContainer c);
    private bool SetEnd(JContainer c);
    private void SetToken(JToken token);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
private string SafeToString(object value);
    private sealed virtual override bool Newtonsoft.Json.IJsonLineInfo.HasLineInfo();
    private sealed virtual override int Newtonsoft.Json.IJsonLineInfo.get_LineNumber();
    private sealed virtual override int Newtonsoft.Json.IJsonLineInfo.get_LinePosition();
    public virtual string get_Path();
}
internal enum Newtonsoft.Json.Linq.JTokenType : Enum {
    public int value__;
    public static JTokenType None;
    public static JTokenType Object;
    public static JTokenType Array;
    public static JTokenType Constructor;
    public static JTokenType Property;
    public static JTokenType Comment;
    public static JTokenType Integer;
    public static JTokenType Float;
    public static JTokenType String;
    public static JTokenType Boolean;
    public static JTokenType Null;
    public static JTokenType Undefined;
    public static JTokenType Date;
    public static JTokenType Raw;
    public static JTokenType Bytes;
    public static JTokenType Guid;
    public static JTokenType Uri;
    public static JTokenType TimeSpan;
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
internal class Newtonsoft.Json.Linq.JTokenWriter : JsonWriter {
    private JContainer _token;
    private JContainer _parent;
    private JValue _value;
    private JToken _current;
    public JToken CurrentToken { get; }
    public JToken Token { get; }
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public JTokenWriter(JContainer container);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal virtual Task WriteTokenAsync(JsonReader reader, bool writeChildren, bool writeDateConstructorAsDate, bool writeComments, CancellationToken cancellationToken);
    public JToken get_CurrentToken();
    public JToken get_Token();
    public virtual void Flush();
    public virtual void Close();
    public virtual void WriteStartObject();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
private void AddParent(JContainer container);
    private void RemoveParent();
    public virtual void WriteStartArray();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public virtual void WriteStartConstructor(string name);
    protected virtual void WriteEnd(JsonToken token);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public virtual void WritePropertyName(string name);
    private void AddValue(object value, JsonToken token);
    internal void AddValue(JValue value, JsonToken token);
    public virtual void WriteValue(object value);
    public virtual void WriteNull();
    public virtual void WriteUndefined();
    public virtual void WriteRaw(string json);
    public virtual void WriteComment(string text);
    public virtual void WriteValue(string value);
    public virtual void WriteValue(int value);
    [CLSCompliantAttribute("False")]
public virtual void WriteValue(UInt32 value);
    public virtual void WriteValue(long value);
    [CLSCompliantAttribute("False")]
public virtual void WriteValue(ulong value);
    public virtual void WriteValue(float value);
    public virtual void WriteValue(double value);
    public virtual void WriteValue(bool value);
    public virtual void WriteValue(short value);
    [CLSCompliantAttribute("False")]
public virtual void WriteValue(ushort value);
    public virtual void WriteValue(char value);
    public virtual void WriteValue(byte value);
    [CLSCompliantAttribute("False")]
public virtual void WriteValue(sbyte value);
    public virtual void WriteValue(decimal value);
    public virtual void WriteValue(DateTime value);
    public virtual void WriteValue(DateTimeOffset value);
    public virtual void WriteValue(Byte[] value);
    public virtual void WriteValue(TimeSpan value);
    public virtual void WriteValue(Guid value);
    public virtual void WriteValue(Uri value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal virtual void WriteToken(JsonReader reader, bool writeChildren, bool writeDateConstructorAsDate, bool writeComments);
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal class Newtonsoft.Json.Linq.JValue : JToken {
    private JTokenType _valueType;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
private object _value;
    public bool HasValues { get; }
    public JTokenType Type { get; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
public object Value { get; public set; }
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
internal JValue(object value, JTokenType type);
    public JValue(JValue other);
    public JValue(long value);
    public JValue(decimal value);
    public JValue(char value);
    [CLSCompliantAttribute("False")]
public JValue(ulong value);
    public JValue(double value);
    public JValue(float value);
    public JValue(DateTime value);
    public JValue(DateTimeOffset value);
    public JValue(bool value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public JValue(string value);
    public JValue(Guid value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public JValue(Uri value);
    public JValue(TimeSpan value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public JValue(object value);
    public virtual Task WriteToAsync(JsonWriter writer, CancellationToken cancellationToken, JsonConverter[] converters);
    internal virtual bool DeepEquals(JToken node);
    public virtual bool get_HasValues();
    private static int CompareBigInteger(BigInteger i1, object i2);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
internal static int Compare(JTokenType valueType, object objA, object objB);
    private static int CompareFloat(object objA, object objB);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
private static bool Operation(ExpressionType operation, object objA, object objB, Object& result);
    internal virtual JToken CloneToken();
    public static JValue CreateComment(string value);
    public static JValue CreateString(string value);
    public static JValue CreateNull();
    public static JValue CreateUndefined();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
private static JTokenType GetValueType(Nullable`1<JTokenType> current, object value);
    private static JTokenType GetStringValueType(Nullable`1<JTokenType> current);
    public virtual JTokenType get_Type();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public object get_Value();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public void set_Value(object value);
    public virtual void WriteTo(JsonWriter writer, JsonConverter[] converters);
    internal virtual int GetDeepHashCode();
    private static bool ValuesEquals(JValue v1, JValue v2);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public sealed virtual bool Equals(JValue other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public virtual string ToString();
    public string ToString(string format);
    public sealed virtual string ToString(IFormatProvider formatProvider);
    public sealed virtual string ToString(string format, IFormatProvider formatProvider);
    protected virtual DynamicMetaObject GetMetaObject(Expression parameter);
    private sealed virtual override int System.IComparable.CompareTo(object obj);
    public sealed virtual int CompareTo(JValue obj);
    private sealed virtual override TypeCode System.IConvertible.GetTypeCode();
    private sealed virtual override bool System.IConvertible.ToBoolean(IFormatProvider provider);
    private sealed virtual override char System.IConvertible.ToChar(IFormatProvider provider);
    private sealed virtual override sbyte System.IConvertible.ToSByte(IFormatProvider provider);
    private sealed virtual override byte System.IConvertible.ToByte(IFormatProvider provider);
    private sealed virtual override short System.IConvertible.ToInt16(IFormatProvider provider);
    private sealed virtual override ushort System.IConvertible.ToUInt16(IFormatProvider provider);
    private sealed virtual override int System.IConvertible.ToInt32(IFormatProvider provider);
    private sealed virtual override UInt32 System.IConvertible.ToUInt32(IFormatProvider provider);
    private sealed virtual override long System.IConvertible.ToInt64(IFormatProvider provider);
    private sealed virtual override ulong System.IConvertible.ToUInt64(IFormatProvider provider);
    private sealed virtual override float System.IConvertible.ToSingle(IFormatProvider provider);
    private sealed virtual override double System.IConvertible.ToDouble(IFormatProvider provider);
    private sealed virtual override decimal System.IConvertible.ToDecimal(IFormatProvider provider);
    private sealed virtual override DateTime System.IConvertible.ToDateTime(IFormatProvider provider);
    private sealed virtual override object System.IConvertible.ToType(Type conversionType, IFormatProvider provider);
}
internal enum Newtonsoft.Json.Linq.LineInfoHandling : Enum {
    public int value__;
    public static LineInfoHandling Ignore;
    public static LineInfoHandling Load;
}
internal enum Newtonsoft.Json.Linq.MergeArrayHandling : Enum {
    public int value__;
    public static MergeArrayHandling Concat;
    public static MergeArrayHandling Union;
    public static MergeArrayHandling Replace;
    public static MergeArrayHandling Merge;
}
[FlagsAttribute]
internal enum Newtonsoft.Json.Linq.MergeNullValueHandling : Enum {
    public int value__;
    public static MergeNullValueHandling Ignore;
    public static MergeNullValueHandling Merge;
}
internal enum Newtonsoft.Json.MemberSerialization : Enum {
    public int value__;
    public static MemberSerialization OptOut;
    public static MemberSerialization OptIn;
    public static MemberSerialization Fields;
}
internal enum Newtonsoft.Json.MetadataPropertyHandling : Enum {
    public int value__;
    public static MetadataPropertyHandling Default;
    public static MetadataPropertyHandling ReadAhead;
    public static MetadataPropertyHandling Ignore;
}
internal enum Newtonsoft.Json.MissingMemberHandling : Enum {
    public int value__;
    public static MissingMemberHandling Ignore;
    public static MissingMemberHandling Error;
}
internal enum Newtonsoft.Json.NullValueHandling : Enum {
    public int value__;
    public static NullValueHandling Include;
    public static NullValueHandling Ignore;
}
internal enum Newtonsoft.Json.ObjectCreationHandling : Enum {
    public int value__;
    public static ObjectCreationHandling Auto;
    public static ObjectCreationHandling Reuse;
    public static ObjectCreationHandling Replace;
}
[FlagsAttribute]
internal enum Newtonsoft.Json.PreserveReferencesHandling : Enum {
    public int value__;
    public static PreserveReferencesHandling None;
    public static PreserveReferencesHandling Objects;
    public static PreserveReferencesHandling Arrays;
    public static PreserveReferencesHandling All;
}
internal enum Newtonsoft.Json.ReadType : Enum {
    public int value__;
    public static ReadType Read;
    public static ReadType ReadAsInt32;
    public static ReadType ReadAsInt64;
    public static ReadType ReadAsBytes;
    public static ReadType ReadAsString;
    public static ReadType ReadAsDecimal;
    public static ReadType ReadAsDateTime;
    public static ReadType ReadAsDateTimeOffset;
    public static ReadType ReadAsDouble;
    public static ReadType ReadAsBoolean;
}
internal enum Newtonsoft.Json.ReferenceLoopHandling : Enum {
    public int value__;
    public static ReferenceLoopHandling Error;
    public static ReferenceLoopHandling Ignore;
    public static ReferenceLoopHandling Serialize;
}
internal enum Newtonsoft.Json.Required : Enum {
    public int value__;
    public static Required Default;
    public static Required AllowNull;
    public static Required Always;
    public static Required DisallowNull;
}
[ObsoleteAttribute("JSON Schema validation has been moved to its own package. See https://www.newtonsoft.com/jsonschema for more details.")]
[ExtensionAttribute]
internal static class Newtonsoft.Json.Schema.Extensions : object {
    [ExtensionAttribute]
[ObsoleteAttribute("JSON Schema validation has been moved to its own package. See https://www.newtonsoft.com/jsonschema for more details.")]
public static bool IsValid(JToken source, JsonSchema schema);
    [ExtensionAttribute]
[ObsoleteAttribute("JSON Schema validation has been moved to its own package. See https://www.newtonsoft.com/jsonschema for more details.")]
public static bool IsValid(JToken source, JsonSchema schema, IList`1& errorMessages);
    [ExtensionAttribute]
[ObsoleteAttribute("JSON Schema validation has been moved to its own package. See https://www.newtonsoft.com/jsonschema for more details.")]
public static void Validate(JToken source, JsonSchema schema);
    [ObsoleteAttribute("JSON Schema validation has been moved to its own package. See https://www.newtonsoft.com/jsonschema for more details.")]
[ExtensionAttribute]
public static void Validate(JToken source, JsonSchema schema, ValidationEventHandler validationEventHandler);
}
[ObsoleteAttribute("JSON Schema validation has been moved to its own package. See https://www.newtonsoft.com/jsonschema for more details.")]
internal class Newtonsoft.Json.Schema.JsonSchema : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Required>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ReadOnly>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Hidden>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Transient>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<JsonSchemaType> <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Pattern>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MinimumLength>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaximumLength>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <DivisibleBy>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Minimum>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Maximum>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ExclusiveMinimum>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ExclusiveMaximum>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MinimumItems>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaximumItems>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<JsonSchema> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <PositionalItemsValidation>k__BackingField;
    [CompilerGeneratedAttribute]
private JsonSchema <AdditionalItems>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowAdditionalItems>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UniqueItems>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, JsonSchema> <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private JsonSchema <AdditionalProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, JsonSchema> <PatternProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowAdditionalProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Requires>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<JToken> <Enum>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<JsonSchemaType> <Disallow>k__BackingField;
    [CompilerGeneratedAttribute]
private JToken <Default>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<JsonSchema> <Extends>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Format>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Location>k__BackingField;
    private string _internalId;
    [CompilerGeneratedAttribute]
private string <DeferredReference>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ReferencesResolved>k__BackingField;
    public string Id { get; public set; }
    public string Title { get; public set; }
    public Nullable`1<bool> Required { get; public set; }
    public Nullable`1<bool> ReadOnly { get; public set; }
    public Nullable`1<bool> Hidden { get; public set; }
    public Nullable`1<bool> Transient { get; public set; }
    public string Description { get; public set; }
    public Nullable`1<JsonSchemaType> Type { get; public set; }
    public string Pattern { get; public set; }
    public Nullable`1<int> MinimumLength { get; public set; }
    public Nullable`1<int> MaximumLength { get; public set; }
    public Nullable`1<double> DivisibleBy { get; public set; }
    public Nullable`1<double> Minimum { get; public set; }
    public Nullable`1<double> Maximum { get; public set; }
    public Nullable`1<bool> ExclusiveMinimum { get; public set; }
    public Nullable`1<bool> ExclusiveMaximum { get; public set; }
    public Nullable`1<int> MinimumItems { get; public set; }
    public Nullable`1<int> MaximumItems { get; public set; }
    public IList`1<JsonSchema> Items { get; public set; }
    public bool PositionalItemsValidation { get; public set; }
    public JsonSchema AdditionalItems { get; public set; }
    public bool AllowAdditionalItems { get; public set; }
    public bool UniqueItems { get; public set; }
    public IDictionary`2<string, JsonSchema> Properties { get; public set; }
    public JsonSchema AdditionalProperties { get; public set; }
    public IDictionary`2<string, JsonSchema> PatternProperties { get; public set; }
    public bool AllowAdditionalProperties { get; public set; }
    public string Requires { get; public set; }
    public IList`1<JToken> Enum { get; public set; }
    public Nullable`1<JsonSchemaType> Disallow { get; public set; }
    public JToken Default { get; public set; }
    public IList`1<JsonSchema> Extends { get; public set; }
    public string Format { get; public set; }
    internal string Location { get; internal set; }
    internal string InternalId { get; }
    internal string DeferredReference { get; internal set; }
    internal bool ReferencesResolved { get; internal set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Required();
    [CompilerGeneratedAttribute]
public void set_Required(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ReadOnly();
    [CompilerGeneratedAttribute]
public void set_ReadOnly(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Hidden();
    [CompilerGeneratedAttribute]
public void set_Hidden(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_Transient();
    [CompilerGeneratedAttribute]
public void set_Transient(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<JsonSchemaType> get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(Nullable`1<JsonSchemaType> value);
    [CompilerGeneratedAttribute]
public string get_Pattern();
    [CompilerGeneratedAttribute]
public void set_Pattern(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MinimumLength();
    [CompilerGeneratedAttribute]
public void set_MinimumLength(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaximumLength();
    [CompilerGeneratedAttribute]
public void set_MaximumLength(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_DivisibleBy();
    [CompilerGeneratedAttribute]
public void set_DivisibleBy(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_Minimum();
    [CompilerGeneratedAttribute]
public void set_Minimum(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_Maximum();
    [CompilerGeneratedAttribute]
public void set_Maximum(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ExclusiveMinimum();
    [CompilerGeneratedAttribute]
public void set_ExclusiveMinimum(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ExclusiveMaximum();
    [CompilerGeneratedAttribute]
public void set_ExclusiveMaximum(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MinimumItems();
    [CompilerGeneratedAttribute]
public void set_MinimumItems(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaximumItems();
    [CompilerGeneratedAttribute]
public void set_MaximumItems(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public IList`1<JsonSchema> get_Items();
    [CompilerGeneratedAttribute]
public void set_Items(IList`1<JsonSchema> value);
    [CompilerGeneratedAttribute]
public bool get_PositionalItemsValidation();
    [CompilerGeneratedAttribute]
public void set_PositionalItemsValidation(bool value);
    [CompilerGeneratedAttribute]
public JsonSchema get_AdditionalItems();
    [CompilerGeneratedAttribute]
public void set_AdditionalItems(JsonSchema value);
    [CompilerGeneratedAttribute]
public bool get_AllowAdditionalItems();
    [CompilerGeneratedAttribute]
public void set_AllowAdditionalItems(bool value);
    [CompilerGeneratedAttribute]
public bool get_UniqueItems();
    [CompilerGeneratedAttribute]
public void set_UniqueItems(bool value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, JsonSchema> get_Properties();
    [CompilerGeneratedAttribute]
public void set_Properties(IDictionary`2<string, JsonSchema> value);
    [CompilerGeneratedAttribute]
public JsonSchema get_AdditionalProperties();
    [CompilerGeneratedAttribute]
public void set_AdditionalProperties(JsonSchema value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, JsonSchema> get_PatternProperties();
    [CompilerGeneratedAttribute]
public void set_PatternProperties(IDictionary`2<string, JsonSchema> value);
    [CompilerGeneratedAttribute]
public bool get_AllowAdditionalProperties();
    [CompilerGeneratedAttribute]
public void set_AllowAdditionalProperties(bool value);
    [CompilerGeneratedAttribute]
public string get_Requires();
    [CompilerGeneratedAttribute]
public void set_Requires(string value);
    [CompilerGeneratedAttribute]
public IList`1<JToken> get_Enum();
    [CompilerGeneratedAttribute]
public void set_Enum(IList`1<JToken> value);
    [CompilerGeneratedAttribute]
public Nullable`1<JsonSchemaType> get_Disallow();
    [CompilerGeneratedAttribute]
public void set_Disallow(Nullable`1<JsonSchemaType> value);
    [CompilerGeneratedAttribute]
public JToken get_Default();
    [CompilerGeneratedAttribute]
public void set_Default(JToken value);
    [CompilerGeneratedAttribute]
public IList`1<JsonSchema> get_Extends();
    [CompilerGeneratedAttribute]
public void set_Extends(IList`1<JsonSchema> value);
    [CompilerGeneratedAttribute]
public string get_Format();
    [CompilerGeneratedAttribute]
public void set_Format(string value);
    [CompilerGeneratedAttribute]
internal string get_Location();
    [CompilerGeneratedAttribute]
internal void set_Location(string value);
    internal string get_InternalId();
    [CompilerGeneratedAttribute]
internal string get_DeferredReference();
    [CompilerGeneratedAttribute]
internal void set_DeferredReference(string value);
    [CompilerGeneratedAttribute]
internal bool get_ReferencesResolved();
    [CompilerGeneratedAttribute]
internal void set_ReferencesResolved(bool value);
    public static JsonSchema Read(JsonReader reader);
    public static JsonSchema Read(JsonReader reader, JsonSchemaResolver resolver);
    public static JsonSchema Parse(string json);
    public static JsonSchema Parse(string json, JsonSchemaResolver resolver);
    public void WriteTo(JsonWriter writer);
    public void WriteTo(JsonWriter writer, JsonSchemaResolver resolver);
    public virtual string ToString();
}
[ObsoleteAttribute("JSON Schema validation has been moved to its own package. See https://www.newtonsoft.com/jsonschema for more details.")]
internal class Newtonsoft.Json.Schema.JsonSchemaBuilder : object {
    private IList`1<JsonSchema> _stack;
    private JsonSchemaResolver _resolver;
    private IDictionary`2<string, JsonSchema> _documentSchemas;
    private JsonSchema _currentSchema;
    private JObject _rootSchema;
    private JsonSchema CurrentSchema { get; }
    public JsonSchemaBuilder(JsonSchemaResolver resolver);
    private void Push(JsonSchema value);
    private JsonSchema Pop();
    private JsonSchema get_CurrentSchema();
    internal JsonSchema Read(JsonReader reader);
    private string UnescapeReference(string reference);
    private JsonSchema ResolveReferences(JsonSchema schema);
    private JsonSchema BuildSchema(JToken token);
    private void ProcessSchemaProperties(JObject schemaObject);
    private void ProcessExtends(JToken token);
    private void ProcessEnum(JToken token);
    private void ProcessAdditionalProperties(JToken token);
    private void ProcessAdditionalItems(JToken token);
    private IDictionary`2<string, JsonSchema> ProcessProperties(JToken token);
    private void ProcessItems(JToken token);
    private Nullable`1<JsonSchemaType> ProcessType(JToken token);
    internal static JsonSchemaType MapType(string type);
    internal static string MapType(JsonSchemaType type);
}
[ObsoleteAttribute("JSON Schema validation has been moved to its own package. See https://www.newtonsoft.com/jsonschema for more details.")]
internal static class Newtonsoft.Json.Schema.JsonSchemaConstants : object {
    public static string TypePropertyName;
    public static string PropertiesPropertyName;
    public static string ItemsPropertyName;
    public static string AdditionalItemsPropertyName;
    public static string RequiredPropertyName;
    public static string PatternPropertiesPropertyName;
    public static string AdditionalPropertiesPropertyName;
    public static string RequiresPropertyName;
    public static string MinimumPropertyName;
    public static string MaximumPropertyName;
    public static string ExclusiveMinimumPropertyName;
    public static string ExclusiveMaximumPropertyName;
    public static string MinimumItemsPropertyName;
    public static string MaximumItemsPropertyName;
    public static string PatternPropertyName;
    public static string MaximumLengthPropertyName;
    public static string MinimumLengthPropertyName;
    public static string EnumPropertyName;
    public static string ReadOnlyPropertyName;
    public static string TitlePropertyName;
    public static string DescriptionPropertyName;
    public static string FormatPropertyName;
    public static string DefaultPropertyName;
    public static string TransientPropertyName;
    public static string DivisibleByPropertyName;
    public static string HiddenPropertyName;
    public static string DisallowPropertyName;
    public static string ExtendsPropertyName;
    public static string IdPropertyName;
    public static string UniqueItemsPropertyName;
    public static string OptionValuePropertyName;
    public static string OptionLabelPropertyName;
    public static IDictionary`2<string, JsonSchemaType> JsonSchemaTypeMapping;
    private static JsonSchemaConstants();
}
[ObsoleteAttribute("JSON Schema validation has been moved to its own package. See https://www.newtonsoft.com/jsonschema for more details.")]
internal class Newtonsoft.Json.Schema.JsonSchemaException : JsonException {
    [CompilerGeneratedAttribute]
private int <LineNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private int <LinePosition>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    public int LineNumber { get; }
    public int LinePosition { get; }
    public string Path { get; }
    public JsonSchemaException(string message);
    public JsonSchemaException(string message, Exception innerException);
    public JsonSchemaException(SerializationInfo info, StreamingContext context);
    internal JsonSchemaException(string message, Exception innerException, string path, int lineNumber, int linePosition);
    [CompilerGeneratedAttribute]
public int get_LineNumber();
    [CompilerGeneratedAttribute]
public int get_LinePosition();
    [CompilerGeneratedAttribute]
public string get_Path();
}
[ObsoleteAttribute("JSON Schema validation has been moved to its own package. See https://www.newtonsoft.com/jsonschema for more details.")]
internal class Newtonsoft.Json.Schema.JsonSchemaGenerator : object {
    [CompilerGeneratedAttribute]
private UndefinedSchemaIdHandling <UndefinedSchemaIdHandling>k__BackingField;
    private IContractResolver _contractResolver;
    private JsonSchemaResolver _resolver;
    private IList`1<TypeSchema> _stack;
    private JsonSchema _currentSchema;
    public UndefinedSchemaIdHandling UndefinedSchemaIdHandling { get; public set; }
    public IContractResolver ContractResolver { get; public set; }
    private JsonSchema CurrentSchema { get; }
    [CompilerGeneratedAttribute]
public UndefinedSchemaIdHandling get_UndefinedSchemaIdHandling();
    [CompilerGeneratedAttribute]
public void set_UndefinedSchemaIdHandling(UndefinedSchemaIdHandling value);
    public IContractResolver get_ContractResolver();
    public void set_ContractResolver(IContractResolver value);
    private JsonSchema get_CurrentSchema();
    private void Push(TypeSchema typeSchema);
    private TypeSchema Pop();
    public JsonSchema Generate(Type type);
    public JsonSchema Generate(Type type, JsonSchemaResolver resolver);
    public JsonSchema Generate(Type type, bool rootSchemaNullable);
    public JsonSchema Generate(Type type, JsonSchemaResolver resolver, bool rootSchemaNullable);
    private string GetTitle(Type type);
    private string GetDescription(Type type);
    private string GetTypeId(Type type, bool explicitOnly);
    private JsonSchema GenerateInternal(Type type, Required valueRequired, bool required);
    private JsonSchemaType AddNullType(JsonSchemaType type, Required valueRequired);
    private bool HasFlag(DefaultValueHandling value, DefaultValueHandling flag);
    private void GenerateObjectSchema(Type type, JsonObjectContract contract);
    private void GenerateISerializableContract(Type type, JsonISerializableContract contract);
    internal static bool HasFlag(Nullable`1<JsonSchemaType> value, JsonSchemaType flag);
    private JsonSchemaType GetJsonSchemaType(Type type, Required valueRequired);
}
[ObsoleteAttribute("JSON Schema validation has been moved to its own package. See https://www.newtonsoft.com/jsonschema for more details.")]
internal class Newtonsoft.Json.Schema.JsonSchemaModel : object {
    [CompilerGeneratedAttribute]
private bool <Required>k__BackingField;
    [CompilerGeneratedAttribute]
private JsonSchemaType <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MinimumLength>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaximumLength>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <DivisibleBy>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Minimum>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Maximum>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ExclusiveMinimum>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ExclusiveMaximum>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MinimumItems>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaximumItems>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Patterns>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<JsonSchemaModel> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, JsonSchemaModel> <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, JsonSchemaModel> <PatternProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private JsonSchemaModel <AdditionalProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private JsonSchemaModel <AdditionalItems>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <PositionalItemsValidation>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowAdditionalProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowAdditionalItems>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UniqueItems>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<JToken> <Enum>k__BackingField;
    [CompilerGeneratedAttribute]
private JsonSchemaType <Disallow>k__BackingField;
    public bool Required { get; public set; }
    public JsonSchemaType Type { get; public set; }
    public Nullable`1<int> MinimumLength { get; public set; }
    public Nullable`1<int> MaximumLength { get; public set; }
    public Nullable`1<double> DivisibleBy { get; public set; }
    public Nullable`1<double> Minimum { get; public set; }
    public Nullable`1<double> Maximum { get; public set; }
    public bool ExclusiveMinimum { get; public set; }
    public bool ExclusiveMaximum { get; public set; }
    public Nullable`1<int> MinimumItems { get; public set; }
    public Nullable`1<int> MaximumItems { get; public set; }
    public IList`1<string> Patterns { get; public set; }
    public IList`1<JsonSchemaModel> Items { get; public set; }
    public IDictionary`2<string, JsonSchemaModel> Properties { get; public set; }
    public IDictionary`2<string, JsonSchemaModel> PatternProperties { get; public set; }
    public JsonSchemaModel AdditionalProperties { get; public set; }
    public JsonSchemaModel AdditionalItems { get; public set; }
    public bool PositionalItemsValidation { get; public set; }
    public bool AllowAdditionalProperties { get; public set; }
    public bool AllowAdditionalItems { get; public set; }
    public bool UniqueItems { get; public set; }
    public IList`1<JToken> Enum { get; public set; }
    public JsonSchemaType Disallow { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_Required();
    [CompilerGeneratedAttribute]
public void set_Required(bool value);
    [CompilerGeneratedAttribute]
public JsonSchemaType get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(JsonSchemaType value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MinimumLength();
    [CompilerGeneratedAttribute]
public void set_MinimumLength(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaximumLength();
    [CompilerGeneratedAttribute]
public void set_MaximumLength(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_DivisibleBy();
    [CompilerGeneratedAttribute]
public void set_DivisibleBy(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_Minimum();
    [CompilerGeneratedAttribute]
public void set_Minimum(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public Nullable`1<double> get_Maximum();
    [CompilerGeneratedAttribute]
public void set_Maximum(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public bool get_ExclusiveMinimum();
    [CompilerGeneratedAttribute]
public void set_ExclusiveMinimum(bool value);
    [CompilerGeneratedAttribute]
public bool get_ExclusiveMaximum();
    [CompilerGeneratedAttribute]
public void set_ExclusiveMaximum(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MinimumItems();
    [CompilerGeneratedAttribute]
public void set_MinimumItems(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaximumItems();
    [CompilerGeneratedAttribute]
public void set_MaximumItems(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Patterns();
    [CompilerGeneratedAttribute]
public void set_Patterns(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<JsonSchemaModel> get_Items();
    [CompilerGeneratedAttribute]
public void set_Items(IList`1<JsonSchemaModel> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, JsonSchemaModel> get_Properties();
    [CompilerGeneratedAttribute]
public void set_Properties(IDictionary`2<string, JsonSchemaModel> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, JsonSchemaModel> get_PatternProperties();
    [CompilerGeneratedAttribute]
public void set_PatternProperties(IDictionary`2<string, JsonSchemaModel> value);
    [CompilerGeneratedAttribute]
public JsonSchemaModel get_AdditionalProperties();
    [CompilerGeneratedAttribute]
public void set_AdditionalProperties(JsonSchemaModel value);
    [CompilerGeneratedAttribute]
public JsonSchemaModel get_AdditionalItems();
    [CompilerGeneratedAttribute]
public void set_AdditionalItems(JsonSchemaModel value);
    [CompilerGeneratedAttribute]
public bool get_PositionalItemsValidation();
    [CompilerGeneratedAttribute]
public void set_PositionalItemsValidation(bool value);
    [CompilerGeneratedAttribute]
public bool get_AllowAdditionalProperties();
    [CompilerGeneratedAttribute]
public void set_AllowAdditionalProperties(bool value);
    [CompilerGeneratedAttribute]
public bool get_AllowAdditionalItems();
    [CompilerGeneratedAttribute]
public void set_AllowAdditionalItems(bool value);
    [CompilerGeneratedAttribute]
public bool get_UniqueItems();
    [CompilerGeneratedAttribute]
public void set_UniqueItems(bool value);
    [CompilerGeneratedAttribute]
public IList`1<JToken> get_Enum();
    [CompilerGeneratedAttribute]
public void set_Enum(IList`1<JToken> value);
    [CompilerGeneratedAttribute]
public JsonSchemaType get_Disallow();
    [CompilerGeneratedAttribute]
public void set_Disallow(JsonSchemaType value);
    public static JsonSchemaModel Create(IList`1<JsonSchema> schemata);
    private static void Combine(JsonSchemaModel model, JsonSchema schema);
}
[ObsoleteAttribute("JSON Schema validation has been moved to its own package. See https://www.newtonsoft.com/jsonschema for more details.")]
internal class Newtonsoft.Json.Schema.JsonSchemaModelBuilder : object {
    private JsonSchemaNodeCollection _nodes;
    private Dictionary`2<JsonSchemaNode, JsonSchemaModel> _nodeModels;
    private JsonSchemaNode _node;
    public JsonSchemaModel Build(JsonSchema schema);
    public JsonSchemaNode AddSchema(JsonSchemaNode existingNode, JsonSchema schema);
    public void AddProperties(IDictionary`2<string, JsonSchema> source, IDictionary`2<string, JsonSchemaNode> target);
    public void AddProperty(IDictionary`2<string, JsonSchemaNode> target, string propertyName, JsonSchema schema);
    public void AddItem(JsonSchemaNode parentNode, int index, JsonSchema schema);
    public void AddAdditionalProperties(JsonSchemaNode parentNode, JsonSchema schema);
    public void AddAdditionalItems(JsonSchemaNode parentNode, JsonSchema schema);
    private JsonSchemaModel BuildNodeModel(JsonSchemaNode node);
}
[ObsoleteAttribute("JSON Schema validation has been moved to its own package. See https://www.newtonsoft.com/jsonschema for more details.")]
internal class Newtonsoft.Json.Schema.JsonSchemaNode : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private ReadOnlyCollection`1<JsonSchema> <Schemas>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, JsonSchemaNode> <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, JsonSchemaNode> <PatternProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<JsonSchemaNode> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private JsonSchemaNode <AdditionalProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private JsonSchemaNode <AdditionalItems>k__BackingField;
    public string Id { get; }
    public ReadOnlyCollection`1<JsonSchema> Schemas { get; }
    public Dictionary`2<string, JsonSchemaNode> Properties { get; }
    public Dictionary`2<string, JsonSchemaNode> PatternProperties { get; }
    public List`1<JsonSchemaNode> Items { get; }
    public JsonSchemaNode AdditionalProperties { get; public set; }
    public JsonSchemaNode AdditionalItems { get; public set; }
    public JsonSchemaNode(JsonSchema schema);
    private JsonSchemaNode(JsonSchemaNode source, JsonSchema schema);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public ReadOnlyCollection`1<JsonSchema> get_Schemas();
    [CompilerGeneratedAttribute]
public Dictionary`2<string, JsonSchemaNode> get_Properties();
    [CompilerGeneratedAttribute]
public Dictionary`2<string, JsonSchemaNode> get_PatternProperties();
    [CompilerGeneratedAttribute]
public List`1<JsonSchemaNode> get_Items();
    [CompilerGeneratedAttribute]
public JsonSchemaNode get_AdditionalProperties();
    [CompilerGeneratedAttribute]
public void set_AdditionalProperties(JsonSchemaNode value);
    [CompilerGeneratedAttribute]
public JsonSchemaNode get_AdditionalItems();
    [CompilerGeneratedAttribute]
public void set_AdditionalItems(JsonSchemaNode value);
    public JsonSchemaNode Combine(JsonSchema schema);
    public static string GetId(IEnumerable`1<JsonSchema> schemata);
}
[ObsoleteAttribute("JSON Schema validation has been moved to its own package. See https://www.newtonsoft.com/jsonschema for more details.")]
internal class Newtonsoft.Json.Schema.JsonSchemaNodeCollection : KeyedCollection`2<string, JsonSchemaNode> {
    protected virtual string GetKeyForItem(JsonSchemaNode item);
}
[ObsoleteAttribute("JSON Schema validation has been moved to its own package. See https://www.newtonsoft.com/jsonschema for more details.")]
internal class Newtonsoft.Json.Schema.JsonSchemaResolver : object {
    [CompilerGeneratedAttribute]
private IList`1<JsonSchema> <LoadedSchemas>k__BackingField;
    public IList`1<JsonSchema> LoadedSchemas { get; protected set; }
    [CompilerGeneratedAttribute]
public IList`1<JsonSchema> get_LoadedSchemas();
    [CompilerGeneratedAttribute]
protected void set_LoadedSchemas(IList`1<JsonSchema> value);
    public virtual JsonSchema GetSchema(string reference);
}
[ObsoleteAttribute("JSON Schema validation has been moved to its own package. See https://www.newtonsoft.com/jsonschema for more details.")]
[FlagsAttribute]
internal enum Newtonsoft.Json.Schema.JsonSchemaType : Enum {
    public int value__;
    public static JsonSchemaType None;
    public static JsonSchemaType String;
    public static JsonSchemaType Float;
    public static JsonSchemaType Integer;
    public static JsonSchemaType Boolean;
    public static JsonSchemaType Object;
    public static JsonSchemaType Array;
    public static JsonSchemaType Null;
    public static JsonSchemaType Any;
}
[ObsoleteAttribute("JSON Schema validation has been moved to its own package. See https://www.newtonsoft.com/jsonschema for more details.")]
internal class Newtonsoft.Json.Schema.JsonSchemaWriter : object {
    private JsonWriter _writer;
    private JsonSchemaResolver _resolver;
    public JsonSchemaWriter(JsonWriter writer, JsonSchemaResolver resolver);
    private void ReferenceOrWriteSchema(JsonSchema schema);
    public void WriteSchema(JsonSchema schema);
    private void WriteSchemaDictionaryIfNotNull(JsonWriter writer, string propertyName, IDictionary`2<string, JsonSchema> properties);
    private void WriteItems(JsonSchema schema);
    private void WriteType(string propertyName, JsonWriter writer, JsonSchemaType type);
    private void WritePropertyIfNotNull(JsonWriter writer, string propertyName, object value);
}
[ObsoleteAttribute("JSON Schema validation has been moved to its own package. See https://www.newtonsoft.com/jsonschema for more details.")]
internal enum Newtonsoft.Json.Schema.UndefinedSchemaIdHandling : Enum {
    public int value__;
    public static UndefinedSchemaIdHandling None;
    public static UndefinedSchemaIdHandling UseTypeName;
    public static UndefinedSchemaIdHandling UseAssemblyQualifiedName;
}
[ObsoleteAttribute("JSON Schema validation has been moved to its own package. See https://www.newtonsoft.com/jsonschema for more details.")]
internal class Newtonsoft.Json.Schema.ValidationEventArgs : EventArgs {
    private JsonSchemaException _ex;
    public JsonSchemaException Exception { get; }
    public string Path { get; }
    public string Message { get; }
    internal ValidationEventArgs(JsonSchemaException ex);
    public JsonSchemaException get_Exception();
    public string get_Path();
    public string get_Message();
}
[ObsoleteAttribute("JSON Schema validation has been moved to its own package. See https://www.newtonsoft.com/jsonschema for more details.")]
internal class Newtonsoft.Json.Schema.ValidationEventHandler : MulticastDelegate {
    public ValidationEventHandler(object object, IntPtr method);
    public virtual void Invoke(object sender, ValidationEventArgs e);
    public virtual IAsyncResult BeginInvoke(object sender, ValidationEventArgs e, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal static class Newtonsoft.Json.Serialization.CachedAttributeGetter`1 : object {
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static ThreadSafeStore`2<object, T> TypeAttributeCache;
    private static CachedAttributeGetter`1();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public static T GetAttribute(object type);
}
internal class Newtonsoft.Json.Serialization.CamelCaseNamingStrategy : NamingStrategy {
    public CamelCaseNamingStrategy(bool processDictionaryKeys, bool overrideSpecifiedNames);
    public CamelCaseNamingStrategy(bool processDictionaryKeys, bool overrideSpecifiedNames, bool processExtensionDataNames);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
protected virtual string ResolvePropertyName(string name);
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal class Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver : DefaultContractResolver {
    private static object TypeContractCacheLock;
    private static DefaultJsonNameTable NameTable;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Dictionary`2<StructMultiKey`2<Type, Type>, JsonContract> _contractCache;
    private static CamelCasePropertyNamesContractResolver();
    public virtual JsonContract ResolveContract(Type type);
    internal virtual DefaultJsonNameTable GetNameTable();
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal class Newtonsoft.Json.Serialization.DefaultContractResolver : object {
    private static IContractResolver _instance;
    private static String[] BlacklistedTypeNames;
    private static JsonConverter[] BuiltInConverters;
    private DefaultJsonNameTable _nameTable;
    private ThreadSafeStore`2<Type, JsonContract> _contractCache;
    [CompilerGeneratedAttribute]
private BindingFlags <DefaultMembersSearchFlags>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SerializeCompilerGeneratedMembers>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IgnoreSerializableInterface>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IgnoreSerializableAttribute>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IgnoreIsSpecifiedMembers>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IgnoreShouldSerializeMembers>k__BackingField;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
[CompilerGeneratedAttribute]
private NamingStrategy <NamingStrategy>k__BackingField;
    internal static IContractResolver Instance { get; }
    public bool DynamicCodeGeneration { get; }
    [ObsoleteAttribute("DefaultMembersSearchFlags is obsolete. To modify the members serialized inherit from DefaultContractResolver and override the GetSerializableMembers method instead.")]
public BindingFlags DefaultMembersSearchFlags { get; public set; }
    public bool SerializeCompilerGeneratedMembers { get; public set; }
    public bool IgnoreSerializableInterface { get; public set; }
    public bool IgnoreSerializableAttribute { get; public set; }
    public bool IgnoreIsSpecifiedMembers { get; public set; }
    public bool IgnoreShouldSerializeMembers { get; public set; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
public NamingStrategy NamingStrategy { get; public set; }
    private static DefaultContractResolver();
    internal static IContractResolver get_Instance();
    public bool get_DynamicCodeGeneration();
    [CompilerGeneratedAttribute]
public BindingFlags get_DefaultMembersSearchFlags();
    [CompilerGeneratedAttribute]
public void set_DefaultMembersSearchFlags(BindingFlags value);
    [CompilerGeneratedAttribute]
public bool get_SerializeCompilerGeneratedMembers();
    [CompilerGeneratedAttribute]
public void set_SerializeCompilerGeneratedMembers(bool value);
    [CompilerGeneratedAttribute]
public bool get_IgnoreSerializableInterface();
    [CompilerGeneratedAttribute]
public void set_IgnoreSerializableInterface(bool value);
    [CompilerGeneratedAttribute]
public bool get_IgnoreSerializableAttribute();
    [CompilerGeneratedAttribute]
public void set_IgnoreSerializableAttribute(bool value);
    [CompilerGeneratedAttribute]
public bool get_IgnoreIsSpecifiedMembers();
    [CompilerGeneratedAttribute]
public void set_IgnoreIsSpecifiedMembers(bool value);
    [CompilerGeneratedAttribute]
public bool get_IgnoreShouldSerializeMembers();
    [CompilerGeneratedAttribute]
public void set_IgnoreShouldSerializeMembers(bool value);
    [CompilerGeneratedAttribute]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public NamingStrategy get_NamingStrategy();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_NamingStrategy(NamingStrategy value);
    public virtual JsonContract ResolveContract(Type type);
    private static bool FilterMembers(MemberInfo member);
    protected virtual List`1<MemberInfo> GetSerializableMembers(Type objectType);
    private bool ShouldSerializeEntityMember(MemberInfo memberInfo);
    protected virtual JsonObjectContract CreateObjectContract(Type objectType);
    private static void ThrowUnableToSerializeError(object o, StreamingContext context);
    private MemberInfo GetExtensionDataMemberForType(Type type);
    private static void SetExtensionDataDelegates(JsonObjectContract contract, MemberInfo member);
    private ConstructorInfo GetAttributeConstructor(Type objectType);
    private ConstructorInfo GetImmutableConstructor(Type objectType, JsonPropertyCollection memberProperties);
    private ConstructorInfo GetParameterizedConstructor(Type objectType);
    protected virtual IList`1<JsonProperty> CreateConstructorParameters(ConstructorInfo constructor, JsonPropertyCollection memberProperties);
    private JsonProperty MatchProperty(JsonPropertyCollection properties, string name, Type type);
    protected virtual JsonProperty CreatePropertyFromConstructorParameter(JsonProperty matchingMemberProperty, ParameterInfo parameterInfo);
    protected virtual JsonConverter ResolveContractConverter(Type objectType);
    private Func`1<object> GetDefaultCreator(Type createdType);
    private void InitializeContract(JsonContract contract);
    private void ResolveCallbackMethods(JsonContract contract, Type t);
    private void GetCallbackMethodsForType(Type type, List`1& onSerializing, List`1& onSerialized, List`1& onDeserializing, List`1& onDeserialized, List`1& onError);
    private static bool IsConcurrentOrObservableCollection(Type t);
    private static bool ShouldSkipDeserialized(Type t);
    private static bool ShouldSkipSerializing(Type t);
    private List`1<Type> GetClassHierarchyForType(Type type);
    protected virtual JsonDictionaryContract CreateDictionaryContract(Type objectType);
    protected virtual JsonArrayContract CreateArrayContract(Type objectType);
    protected virtual JsonPrimitiveContract CreatePrimitiveContract(Type objectType);
    protected virtual JsonLinqContract CreateLinqContract(Type objectType);
    protected virtual JsonISerializableContract CreateISerializableContract(Type objectType);
    protected virtual JsonDynamicContract CreateDynamicContract(Type objectType);
    protected virtual JsonStringContract CreateStringContract(Type objectType);
    protected virtual JsonContract CreateContract(Type objectType);
    internal static bool IsJsonPrimitiveType(Type t);
    internal static bool IsIConvertible(Type t);
    internal static bool CanConvertToString(Type type);
    private static bool IsValidCallback(MethodInfo method, ParameterInfo[] parameters, Type attributeType, MethodInfo currentCallback, Type& prevAttributeType);
    internal static string GetClrTypeFullName(Type type);
    protected virtual IList`1<JsonProperty> CreateProperties(Type type, MemberSerialization memberSerialization);
    internal virtual DefaultJsonNameTable GetNameTable();
    protected virtual IValueProvider CreateMemberValueProvider(MemberInfo member);
    protected virtual JsonProperty CreateProperty(MemberInfo member, MemberSerialization memberSerialization);
    private void SetPropertySettingsFromAttributes(JsonProperty property, object attributeProvider, string name, Type declaringType, MemberSerialization memberSerialization, Boolean& allowNonPublicAccess);
    private Predicate`1<object> CreateShouldSerializeTest(MemberInfo member);
    private void SetIsSpecifiedActions(JsonProperty property, MemberInfo member, bool allowNonPublicAccess);
    protected virtual string ResolvePropertyName(string propertyName);
    protected virtual string ResolveExtensionDataName(string extensionDataName);
    protected virtual string ResolveDictionaryKey(string dictionaryKey);
    public string GetResolvedPropertyName(string propertyName);
}
internal class Newtonsoft.Json.Serialization.DefaultNamingStrategy : NamingStrategy {
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
protected virtual string ResolvePropertyName(string name);
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal class Newtonsoft.Json.Serialization.DefaultReferenceResolver : object {
    private int _referenceCount;
    private BidirectionalDictionary`2<string, object> GetMappings(object context);
    public sealed virtual object ResolveReference(object context, string reference);
    public sealed virtual string GetReference(object context, object value);
    public sealed virtual void AddReference(object context, string reference, object value);
    public sealed virtual bool IsReferenced(object context, object value);
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal class Newtonsoft.Json.Serialization.DefaultSerializationBinder : SerializationBinder {
    internal static DefaultSerializationBinder Instance;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ThreadSafeStore`2<StructMultiKey`2<string, string>, Type> _typeCache;
    private static DefaultSerializationBinder();
    private Type GetTypeFromTypeNameKey(StructMultiKey`2<string, string> typeNameKey);
    private Type GetGenericTypeFromTypeName(string typeName, Assembly assembly);
    private Type GetTypeByName(StructMultiKey`2<string, string> typeNameKey);
    public virtual Type BindToType(string assemblyName, string typeName);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public virtual void BindToName(Type serializedType, String& assemblyName, String& typeName);
}
internal class Newtonsoft.Json.Serialization.DiagnosticsTraceWriter : object {
    [CompilerGeneratedAttribute]
private TraceLevel <LevelFilter>k__BackingField;
    public TraceLevel LevelFilter { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual TraceLevel get_LevelFilter();
    [CompilerGeneratedAttribute]
public void set_LevelFilter(TraceLevel value);
    private TraceEventType GetTraceEventType(TraceLevel level);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public sealed virtual void Trace(TraceLevel level, string message, Exception ex);
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal class Newtonsoft.Json.Serialization.DynamicValueProvider : object {
    private MemberInfo _memberInfo;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Func`2<object, object> _getter;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Action`2<object, object> _setter;
    public DynamicValueProvider(MemberInfo memberInfo);
    public sealed virtual void SetValue(object target, object value);
    public sealed virtual object GetValue(object target);
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal class Newtonsoft.Json.Serialization.ErrorContext : object {
    [CompilerGeneratedAttribute]
private bool <Traced>k__BackingField;
    [CompilerGeneratedAttribute]
private Exception <Error>k__BackingField;
    [CompilerGeneratedAttribute]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
private object <OriginalObject>k__BackingField;
    [CompilerGeneratedAttribute]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
private object <Member>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Handled>k__BackingField;
    internal bool Traced { get; internal set; }
    public Exception Error { get; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
public object OriginalObject { get; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
public object Member { get; }
    public string Path { get; }
    public bool Handled { get; public set; }
    internal ErrorContext(object originalObject, object member, string path, Exception error);
    [CompilerGeneratedAttribute]
internal bool get_Traced();
    [CompilerGeneratedAttribute]
internal void set_Traced(bool value);
    [CompilerGeneratedAttribute]
public Exception get_Error();
    [CompilerGeneratedAttribute]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public object get_OriginalObject();
    [CompilerGeneratedAttribute]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public object get_Member();
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public bool get_Handled();
    [CompilerGeneratedAttribute]
public void set_Handled(bool value);
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal class Newtonsoft.Json.Serialization.ErrorEventArgs : EventArgs {
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
[CompilerGeneratedAttribute]
private object <CurrentObject>k__BackingField;
    [CompilerGeneratedAttribute]
private ErrorContext <ErrorContext>k__BackingField;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
public object CurrentObject { get; }
    public ErrorContext ErrorContext { get; }
    public ErrorEventArgs(object currentObject, ErrorContext errorContext);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public object get_CurrentObject();
    [CompilerGeneratedAttribute]
public ErrorContext get_ErrorContext();
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal class Newtonsoft.Json.Serialization.ExpressionValueProvider : object {
    private MemberInfo _memberInfo;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Func`2<object, object> _getter;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Action`2<object, object> _setter;
    public ExpressionValueProvider(MemberInfo memberInfo);
    public sealed virtual void SetValue(object target, object value);
    public sealed virtual object GetValue(object target);
}
internal class Newtonsoft.Json.Serialization.ExtensionDataGetter : MulticastDelegate {
    public ExtensionDataGetter(object object, IntPtr method);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public virtual IEnumerable`1<KeyValuePair`2<object, object>> Invoke(object o);
    public virtual IAsyncResult BeginInvoke(object o, AsyncCallback callback, object object);
    public virtual IEnumerable`1<KeyValuePair`2<object, object>> EndInvoke(IAsyncResult result);
}
internal class Newtonsoft.Json.Serialization.ExtensionDataSetter : MulticastDelegate {
    public ExtensionDataSetter(object object, IntPtr method);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public virtual void Invoke(object o, string key, object value);
    public virtual IAsyncResult BeginInvoke(object o, string key, object value, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal interface Newtonsoft.Json.Serialization.IAttributeProvider {
    public abstract virtual IList`1<Attribute> GetAttributes(bool inherit);
    public abstract virtual IList`1<Attribute> GetAttributes(Type attributeType, bool inherit);
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal interface Newtonsoft.Json.Serialization.IContractResolver {
    public abstract virtual JsonContract ResolveContract(Type type);
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal interface Newtonsoft.Json.Serialization.IReferenceResolver {
    public abstract virtual object ResolveReference(object context, string reference);
    public abstract virtual string GetReference(object context, object value);
    public abstract virtual bool IsReferenced(object context, object value);
    public abstract virtual void AddReference(object context, string reference, object value);
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal interface Newtonsoft.Json.Serialization.ISerializationBinder {
    public abstract virtual Type BindToType(string assemblyName, string typeName);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public abstract virtual void BindToName(Type serializedType, String& assemblyName, String& typeName);
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal interface Newtonsoft.Json.Serialization.ITraceWriter {
    public TraceLevel LevelFilter { get; }
    public abstract virtual TraceLevel get_LevelFilter();
    public abstract virtual void Trace(TraceLevel level, string message, Exception ex);
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal interface Newtonsoft.Json.Serialization.IValueProvider {
    public abstract virtual void SetValue(object target, object value);
    public abstract virtual object GetValue(object target);
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
internal class Newtonsoft.Json.Serialization.JsonArrayContract : JsonContainerContract {
    [CompilerGeneratedAttribute]
private Type <CollectionItemType>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsMultidimensionalArray>k__BackingField;
    private Type _genericCollectionDefinitionType;
    private Type _genericWrapperType;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ObjectConstructor`1<object> _genericWrapperCreator;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Func`1<object> _genericTemporaryCollectionCreator;
    [CompilerGeneratedAttribute]
private bool <IsArray>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ShouldCreateWrapper>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CanDeserialize>k__BackingField;
    private ConstructorInfo _parameterizedConstructor;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ObjectConstructor`1<object> _parameterizedCreator;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ObjectConstructor`1<object> _overrideCreator;
    [CompilerGeneratedAttribute]
private bool <HasParameterizedCreator>k__BackingField;
    public Type CollectionItemType { get; }
    public bool IsMultidimensionalArray { get; }
    internal bool IsArray { get; }
    internal bool ShouldCreateWrapper { get; }
    internal bool CanDeserialize { get; private set; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal ObjectConstructor`1<object> ParameterizedCreator { get; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ObjectConstructor`1<object> OverrideCreator { get; public set; }
    public bool HasParameterizedCreator { get; public set; }
    internal bool HasParameterizedCreatorInternal { get; }
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public JsonArrayContract(Type underlyingType);
    [CompilerGeneratedAttribute]
public Type get_CollectionItemType();
    [CompilerGeneratedAttribute]
public bool get_IsMultidimensionalArray();
    [CompilerGeneratedAttribute]
internal bool get_IsArray();
    [CompilerGeneratedAttribute]
internal bool get_ShouldCreateWrapper();
    [CompilerGeneratedAttribute]
internal bool get_CanDeserialize();
    [CompilerGeneratedAttribute]
private void set_CanDeserialize(bool value);
    internal ObjectConstructor`1<object> get_ParameterizedCreator();
    public ObjectConstructor`1<object> get_OverrideCreator();
    public void set_OverrideCreator(ObjectConstructor`1<object> value);
    [CompilerGeneratedAttribute]
public bool get_HasParameterizedCreator();
    [CompilerGeneratedAttribute]
public void set_HasParameterizedCreator(bool value);
    internal bool get_HasParameterizedCreatorInternal();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal IWrappedCollection CreateWrapper(object list);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal IList CreateTemporaryCollection();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
private void StoreFSharpListCreatorIfNecessary(Type underlyingType);
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal class Newtonsoft.Json.Serialization.JsonContainerContract : JsonContract {
    private JsonContract _itemContract;
    private JsonContract _finalItemContract;
    [CompilerGeneratedAttribute]
private JsonConverter <ItemConverter>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ItemIsReference>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ReferenceLoopHandling> <ItemReferenceLoopHandling>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TypeNameHandling> <ItemTypeNameHandling>k__BackingField;
    internal JsonContract ItemContract { get; internal set; }
    internal JsonContract FinalItemContract { get; }
    public JsonConverter ItemConverter { get; public set; }
    public Nullable`1<bool> ItemIsReference { get; public set; }
    public Nullable`1<ReferenceLoopHandling> ItemReferenceLoopHandling { get; public set; }
    public Nullable`1<TypeNameHandling> ItemTypeNameHandling { get; public set; }
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal JsonContainerContract(Type underlyingType);
    internal JsonContract get_ItemContract();
    internal void set_ItemContract(JsonContract value);
    internal JsonContract get_FinalItemContract();
    [CompilerGeneratedAttribute]
public JsonConverter get_ItemConverter();
    [CompilerGeneratedAttribute]
public void set_ItemConverter(JsonConverter value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ItemIsReference();
    [CompilerGeneratedAttribute]
public void set_ItemIsReference(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<ReferenceLoopHandling> get_ItemReferenceLoopHandling();
    [CompilerGeneratedAttribute]
public void set_ItemReferenceLoopHandling(Nullable`1<ReferenceLoopHandling> value);
    [CompilerGeneratedAttribute]
public Nullable`1<TypeNameHandling> get_ItemTypeNameHandling();
    [CompilerGeneratedAttribute]
public void set_ItemTypeNameHandling(Nullable`1<TypeNameHandling> value);
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal abstract class Newtonsoft.Json.Serialization.JsonContract : object {
    internal bool IsNullable;
    internal bool IsConvertable;
    internal bool IsEnum;
    internal Type NonNullableUnderlyingType;
    internal ReadType InternalReadType;
    internal JsonContractType ContractType;
    internal bool IsReadOnlyOrFixedSize;
    internal bool IsSealed;
    internal bool IsInstantiable;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private List`1<SerializationCallback> _onDeserializedCallbacks;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private List`1<SerializationCallback> _onDeserializingCallbacks;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private List`1<SerializationCallback> _onSerializedCallbacks;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private List`1<SerializationCallback> _onSerializingCallbacks;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private List`1<SerializationErrorCallback> _onErrorCallbacks;
    private Type _createdType;
    [CompilerGeneratedAttribute]
private Type <UnderlyingType>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsReference>k__BackingField;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
[CompilerGeneratedAttribute]
private JsonConverter <Converter>k__BackingField;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
[CompilerGeneratedAttribute]
private JsonConverter <InternalConverter>k__BackingField;
    [CompilerGeneratedAttribute]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Func`1<object> <DefaultCreator>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DefaultCreatorNonPublic>k__BackingField;
    public Type UnderlyingType { get; }
    public Type CreatedType { get; public set; }
    public Nullable`1<bool> IsReference { get; public set; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
public JsonConverter Converter { get; public set; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
public JsonConverter InternalConverter { get; internal set; }
    public IList`1<SerializationCallback> OnDeserializedCallbacks { get; }
    public IList`1<SerializationCallback> OnDeserializingCallbacks { get; }
    public IList`1<SerializationCallback> OnSerializedCallbacks { get; }
    public IList`1<SerializationCallback> OnSerializingCallbacks { get; }
    public IList`1<SerializationErrorCallback> OnErrorCallbacks { get; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`1<object> DefaultCreator { get; public set; }
    public bool DefaultCreatorNonPublic { get; public set; }
    internal JsonContract(Type underlyingType);
    [CompilerGeneratedAttribute]
public Type get_UnderlyingType();
    public Type get_CreatedType();
    public void set_CreatedType(Type value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IsReference();
    [CompilerGeneratedAttribute]
public void set_IsReference(Nullable`1<bool> value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public JsonConverter get_Converter();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Converter(JsonConverter value);
    [CompilerGeneratedAttribute]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public JsonConverter get_InternalConverter();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal void set_InternalConverter(JsonConverter value);
    public IList`1<SerializationCallback> get_OnDeserializedCallbacks();
    public IList`1<SerializationCallback> get_OnDeserializingCallbacks();
    public IList`1<SerializationCallback> get_OnSerializedCallbacks();
    public IList`1<SerializationCallback> get_OnSerializingCallbacks();
    public IList`1<SerializationErrorCallback> get_OnErrorCallbacks();
    [CompilerGeneratedAttribute]
public Func`1<object> get_DefaultCreator();
    [CompilerGeneratedAttribute]
public void set_DefaultCreator(Func`1<object> value);
    [CompilerGeneratedAttribute]
public bool get_DefaultCreatorNonPublic();
    [CompilerGeneratedAttribute]
public void set_DefaultCreatorNonPublic(bool value);
    internal void InvokeOnSerializing(object o, StreamingContext context);
    internal void InvokeOnSerialized(object o, StreamingContext context);
    internal void InvokeOnDeserializing(object o, StreamingContext context);
    internal void InvokeOnDeserialized(object o, StreamingContext context);
    internal void InvokeOnError(object o, StreamingContext context, ErrorContext errorContext);
    internal static SerializationCallback CreateSerializationCallback(MethodInfo callbackMethodInfo);
    internal static SerializationErrorCallback CreateSerializationErrorCallback(MethodInfo callbackMethodInfo);
}
internal enum Newtonsoft.Json.Serialization.JsonContractType : Enum {
    public int value__;
    public static JsonContractType None;
    public static JsonContractType Object;
    public static JsonContractType Array;
    public static JsonContractType Primitive;
    public static JsonContractType String;
    public static JsonContractType Dictionary;
    public static JsonContractType Dynamic;
    public static JsonContractType Serializable;
    public static JsonContractType Linq;
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal class Newtonsoft.Json.Serialization.JsonDictionaryContract : JsonContainerContract {
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Func`2<string, string> <DictionaryKeyResolver>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <DictionaryKeyType>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <DictionaryValueType>k__BackingField;
    [CompilerGeneratedAttribute]
private JsonContract <KeyContract>k__BackingField;
    private Type _genericCollectionDefinitionType;
    private Type _genericWrapperType;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ObjectConstructor`1<object> _genericWrapperCreator;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Func`1<object> _genericTemporaryDictionaryCreator;
    [CompilerGeneratedAttribute]
private bool <ShouldCreateWrapper>k__BackingField;
    private ConstructorInfo _parameterizedConstructor;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ObjectConstructor`1<object> _overrideCreator;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ObjectConstructor`1<object> _parameterizedCreator;
    [CompilerGeneratedAttribute]
private bool <HasParameterizedCreator>k__BackingField;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`2<string, string> DictionaryKeyResolver { get; public set; }
    public Type DictionaryKeyType { get; }
    public Type DictionaryValueType { get; }
    internal JsonContract KeyContract { get; internal set; }
    internal bool ShouldCreateWrapper { get; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal ObjectConstructor`1<object> ParameterizedCreator { get; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ObjectConstructor`1<object> OverrideCreator { get; public set; }
    public bool HasParameterizedCreator { get; public set; }
    internal bool HasParameterizedCreatorInternal { get; }
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public JsonDictionaryContract(Type underlyingType);
    [CompilerGeneratedAttribute]
public Func`2<string, string> get_DictionaryKeyResolver();
    [CompilerGeneratedAttribute]
public void set_DictionaryKeyResolver(Func`2<string, string> value);
    [CompilerGeneratedAttribute]
public Type get_DictionaryKeyType();
    [CompilerGeneratedAttribute]
public Type get_DictionaryValueType();
    [CompilerGeneratedAttribute]
internal JsonContract get_KeyContract();
    [CompilerGeneratedAttribute]
internal void set_KeyContract(JsonContract value);
    [CompilerGeneratedAttribute]
internal bool get_ShouldCreateWrapper();
    internal ObjectConstructor`1<object> get_ParameterizedCreator();
    public ObjectConstructor`1<object> get_OverrideCreator();
    public void set_OverrideCreator(ObjectConstructor`1<object> value);
    [CompilerGeneratedAttribute]
public bool get_HasParameterizedCreator();
    [CompilerGeneratedAttribute]
public void set_HasParameterizedCreator(bool value);
    internal bool get_HasParameterizedCreatorInternal();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal IWrappedDictionary CreateWrapper(object dictionary);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal IDictionary CreateTemporaryDictionary();
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal class Newtonsoft.Json.Serialization.JsonDynamicContract : JsonContainerContract {
    [CompilerGeneratedAttribute]
private JsonPropertyCollection <Properties>k__BackingField;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Func`2<string, string> <PropertyNameResolver>k__BackingField;
    private ThreadSafeStore`2<string, CallSite`1<Func`3<CallSite, object, object>>> _callSiteGetters;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ThreadSafeStore`2<string, CallSite`1<Func`4<CallSite, object, object, object>>> _callSiteSetters;
    public JsonPropertyCollection Properties { get; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`2<string, string> PropertyNameResolver { get; public set; }
    public JsonDynamicContract(Type underlyingType);
    [CompilerGeneratedAttribute]
public JsonPropertyCollection get_Properties();
    [CompilerGeneratedAttribute]
public Func`2<string, string> get_PropertyNameResolver();
    [CompilerGeneratedAttribute]
public void set_PropertyNameResolver(Func`2<string, string> value);
    private static CallSite`1<Func`3<CallSite, object, object>> CreateCallSiteGetter(string name);
    private static CallSite`1<Func`4<CallSite, object, object, object>> CreateCallSiteSetter(string name);
    internal bool TryGetMember(IDynamicMetaObjectProvider dynamicProvider, string name, Object& value);
    internal bool TrySetMember(IDynamicMetaObjectProvider dynamicProvider, string name, object value);
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal class Newtonsoft.Json.Serialization.JsonFormatterConverter : object {
    private JsonSerializerInternalReader _reader;
    private JsonISerializableContract _contract;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
private JsonProperty _member;
    public JsonFormatterConverter(JsonSerializerInternalReader reader, JsonISerializableContract contract, JsonProperty member);
    private T GetTokenValue(object value);
    public sealed virtual object Convert(object value, Type type);
    public sealed virtual object Convert(object value, TypeCode typeCode);
    public sealed virtual bool ToBoolean(object value);
    public sealed virtual byte ToByte(object value);
    public sealed virtual char ToChar(object value);
    public sealed virtual DateTime ToDateTime(object value);
    public sealed virtual decimal ToDecimal(object value);
    public sealed virtual double ToDouble(object value);
    public sealed virtual short ToInt16(object value);
    public sealed virtual int ToInt32(object value);
    public sealed virtual long ToInt64(object value);
    public sealed virtual sbyte ToSByte(object value);
    public sealed virtual float ToSingle(object value);
    public sealed virtual string ToString(object value);
    public sealed virtual ushort ToUInt16(object value);
    public sealed virtual UInt32 ToUInt32(object value);
    public sealed virtual ulong ToUInt64(object value);
}
internal class Newtonsoft.Json.Serialization.JsonISerializableContract : JsonContainerContract {
    [CompilerGeneratedAttribute]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ObjectConstructor`1<object> <ISerializableCreator>k__BackingField;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ObjectConstructor`1<object> ISerializableCreator { get; public set; }
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public JsonISerializableContract(Type underlyingType);
    [CompilerGeneratedAttribute]
public ObjectConstructor`1<object> get_ISerializableCreator();
    [CompilerGeneratedAttribute]
public void set_ISerializableCreator(ObjectConstructor`1<object> value);
}
internal class Newtonsoft.Json.Serialization.JsonLinqContract : JsonContract {
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public JsonLinqContract(Type underlyingType);
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal class Newtonsoft.Json.Serialization.JsonObjectContract : JsonContainerContract {
    [CompilerGeneratedAttribute]
private MemberSerialization <MemberSerialization>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<MissingMemberHandling> <MissingMemberHandling>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Required> <ItemRequired>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<NullValueHandling> <ItemNullValueHandling>k__BackingField;
    [CompilerGeneratedAttribute]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("1")]
private JsonPropertyCollection <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private ExtensionDataSetter <ExtensionDataSetter>k__BackingField;
    [CompilerGeneratedAttribute]
private ExtensionDataGetter <ExtensionDataGetter>k__BackingField;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Func`2<string, string> <ExtensionDataNameResolver>k__BackingField;
    internal bool ExtensionDataIsJToken;
    private Nullable`1<bool> _hasRequiredOrDefaultValueProperties;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ObjectConstructor`1<object> _overrideCreator;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ObjectConstructor`1<object> _parameterizedCreator;
    private JsonPropertyCollection _creatorParameters;
    private Type _extensionDataValueType;
    public MemberSerialization MemberSerialization { get; public set; }
    public Nullable`1<MissingMemberHandling> MissingMemberHandling { get; public set; }
    public Nullable`1<Required> ItemRequired { get; public set; }
    public Nullable`1<NullValueHandling> ItemNullValueHandling { get; public set; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("1")]
public JsonPropertyCollection Properties { get; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("1")]
public JsonPropertyCollection CreatorParameters { get; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ObjectConstructor`1<object> OverrideCreator { get; public set; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal ObjectConstructor`1<object> ParameterizedCreator { get; internal set; }
    public ExtensionDataSetter ExtensionDataSetter { get; public set; }
    public ExtensionDataGetter ExtensionDataGetter { get; public set; }
    public Type ExtensionDataValueType { get; public set; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`2<string, string> ExtensionDataNameResolver { get; public set; }
    internal bool HasRequiredOrDefaultValueProperties { get; }
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public JsonObjectContract(Type underlyingType);
    [CompilerGeneratedAttribute]
public MemberSerialization get_MemberSerialization();
    [CompilerGeneratedAttribute]
public void set_MemberSerialization(MemberSerialization value);
    [CompilerGeneratedAttribute]
public Nullable`1<MissingMemberHandling> get_MissingMemberHandling();
    [CompilerGeneratedAttribute]
public void set_MissingMemberHandling(Nullable`1<MissingMemberHandling> value);
    [CompilerGeneratedAttribute]
public Nullable`1<Required> get_ItemRequired();
    [CompilerGeneratedAttribute]
public void set_ItemRequired(Nullable`1<Required> value);
    [CompilerGeneratedAttribute]
public Nullable`1<NullValueHandling> get_ItemNullValueHandling();
    [CompilerGeneratedAttribute]
public void set_ItemNullValueHandling(Nullable`1<NullValueHandling> value);
    [CompilerGeneratedAttribute]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public JsonPropertyCollection get_Properties();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public JsonPropertyCollection get_CreatorParameters();
    public ObjectConstructor`1<object> get_OverrideCreator();
    public void set_OverrideCreator(ObjectConstructor`1<object> value);
    internal ObjectConstructor`1<object> get_ParameterizedCreator();
    internal void set_ParameterizedCreator(ObjectConstructor`1<object> value);
    [CompilerGeneratedAttribute]
public ExtensionDataSetter get_ExtensionDataSetter();
    [CompilerGeneratedAttribute]
public void set_ExtensionDataSetter(ExtensionDataSetter value);
    [CompilerGeneratedAttribute]
public ExtensionDataGetter get_ExtensionDataGetter();
    [CompilerGeneratedAttribute]
public void set_ExtensionDataGetter(ExtensionDataGetter value);
    public Type get_ExtensionDataValueType();
    public void set_ExtensionDataValueType(Type value);
    [CompilerGeneratedAttribute]
public Func`2<string, string> get_ExtensionDataNameResolver();
    [CompilerGeneratedAttribute]
public void set_ExtensionDataNameResolver(Func`2<string, string> value);
    internal bool get_HasRequiredOrDefaultValueProperties();
    [SecuritySafeCriticalAttribute]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal object GetUninitializedObject();
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal class Newtonsoft.Json.Serialization.JsonPrimitiveContract : JsonContract {
    [CompilerGeneratedAttribute]
private PrimitiveTypeCode <TypeCode>k__BackingField;
    private static Dictionary`2<Type, ReadType> ReadTypeMap;
    internal PrimitiveTypeCode TypeCode { get; internal set; }
    public JsonPrimitiveContract(Type underlyingType);
    private static JsonPrimitiveContract();
    [CompilerGeneratedAttribute]
internal PrimitiveTypeCode get_TypeCode();
    [CompilerGeneratedAttribute]
internal void set_TypeCode(PrimitiveTypeCode value);
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
internal class Newtonsoft.Json.Serialization.JsonProperty : object {
    internal Nullable`1<Required> _required;
    internal bool _hasExplicitDefaultValue;
    private object _defaultValue;
    private bool _hasGeneratedDefaultValue;
    private string _propertyName;
    internal bool _skipPropertyNameEscape;
    private Type _propertyType;
    [CompilerGeneratedAttribute]
private JsonContract <PropertyContract>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <DeclaringType>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Order>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UnderlyingName>k__BackingField;
    [CompilerGeneratedAttribute]
private IValueProvider <ValueProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private IAttributeProvider <AttributeProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private JsonConverter <Converter>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Ignored>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Readable>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Writable>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasMemberAttribute>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsReference>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<NullValueHandling> <NullValueHandling>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DefaultValueHandling> <DefaultValueHandling>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ReferenceLoopHandling> <ReferenceLoopHandling>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ObjectCreationHandling> <ObjectCreationHandling>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TypeNameHandling> <TypeNameHandling>k__BackingField;
    [CompilerGeneratedAttribute]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Predicate`1<object> <ShouldSerialize>k__BackingField;
    [CompilerGeneratedAttribute]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Predicate`1<object> <ShouldDeserialize>k__BackingField;
    [CompilerGeneratedAttribute]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Predicate`1<object> <GetIsSpecified>k__BackingField;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Action`2<object, object> <SetIsSpecified>k__BackingField;
    [CompilerGeneratedAttribute]
private JsonConverter <ItemConverter>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ItemIsReference>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TypeNameHandling> <ItemTypeNameHandling>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<ReferenceLoopHandling> <ItemReferenceLoopHandling>k__BackingField;
    internal JsonContract PropertyContract { get; internal set; }
    public string PropertyName { get; public set; }
    public Type DeclaringType { get; public set; }
    public Nullable`1<int> Order { get; public set; }
    public string UnderlyingName { get; public set; }
    public IValueProvider ValueProvider { get; public set; }
    public IAttributeProvider AttributeProvider { get; public set; }
    public Type PropertyType { get; public set; }
    public JsonConverter Converter { get; public set; }
    [ObsoleteAttribute("MemberConverter is obsolete. Use Converter instead.")]
public JsonConverter MemberConverter { get; public set; }
    public bool Ignored { get; public set; }
    public bool Readable { get; public set; }
    public bool Writable { get; public set; }
    public bool HasMemberAttribute { get; public set; }
    public object DefaultValue { get; public set; }
    public Required Required { get; public set; }
    public bool IsRequiredSpecified { get; }
    public Nullable`1<bool> IsReference { get; public set; }
    public Nullable`1<NullValueHandling> NullValueHandling { get; public set; }
    public Nullable`1<DefaultValueHandling> DefaultValueHandling { get; public set; }
    public Nullable`1<ReferenceLoopHandling> ReferenceLoopHandling { get; public set; }
    public Nullable`1<ObjectCreationHandling> ObjectCreationHandling { get; public set; }
    public Nullable`1<TypeNameHandling> TypeNameHandling { get; public set; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Predicate`1<object> ShouldSerialize { get; public set; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Predicate`1<object> ShouldDeserialize { get; public set; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Predicate`1<object> GetIsSpecified { get; public set; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Action`2<object, object> SetIsSpecified { get; public set; }
    public JsonConverter ItemConverter { get; public set; }
    public Nullable`1<bool> ItemIsReference { get; public set; }
    public Nullable`1<TypeNameHandling> ItemTypeNameHandling { get; public set; }
    public Nullable`1<ReferenceLoopHandling> ItemReferenceLoopHandling { get; public set; }
    [CompilerGeneratedAttribute]
internal JsonContract get_PropertyContract();
    [CompilerGeneratedAttribute]
internal void set_PropertyContract(JsonContract value);
    public string get_PropertyName();
    public void set_PropertyName(string value);
    [CompilerGeneratedAttribute]
public Type get_DeclaringType();
    [CompilerGeneratedAttribute]
public void set_DeclaringType(Type value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Order();
    [CompilerGeneratedAttribute]
public void set_Order(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_UnderlyingName();
    [CompilerGeneratedAttribute]
public void set_UnderlyingName(string value);
    [CompilerGeneratedAttribute]
public IValueProvider get_ValueProvider();
    [CompilerGeneratedAttribute]
public void set_ValueProvider(IValueProvider value);
    [CompilerGeneratedAttribute]
public IAttributeProvider get_AttributeProvider();
    [CompilerGeneratedAttribute]
public void set_AttributeProvider(IAttributeProvider value);
    public Type get_PropertyType();
    public void set_PropertyType(Type value);
    [CompilerGeneratedAttribute]
public JsonConverter get_Converter();
    [CompilerGeneratedAttribute]
public void set_Converter(JsonConverter value);
    public JsonConverter get_MemberConverter();
    public void set_MemberConverter(JsonConverter value);
    [CompilerGeneratedAttribute]
public bool get_Ignored();
    [CompilerGeneratedAttribute]
public void set_Ignored(bool value);
    [CompilerGeneratedAttribute]
public bool get_Readable();
    [CompilerGeneratedAttribute]
public void set_Readable(bool value);
    [CompilerGeneratedAttribute]
public bool get_Writable();
    [CompilerGeneratedAttribute]
public void set_Writable(bool value);
    [CompilerGeneratedAttribute]
public bool get_HasMemberAttribute();
    [CompilerGeneratedAttribute]
public void set_HasMemberAttribute(bool value);
    public object get_DefaultValue();
    public void set_DefaultValue(object value);
    internal object GetResolvedDefaultValue();
    public Required get_Required();
    public void set_Required(Required value);
    public bool get_IsRequiredSpecified();
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IsReference();
    [CompilerGeneratedAttribute]
public void set_IsReference(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<NullValueHandling> get_NullValueHandling();
    [CompilerGeneratedAttribute]
public void set_NullValueHandling(Nullable`1<NullValueHandling> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DefaultValueHandling> get_DefaultValueHandling();
    [CompilerGeneratedAttribute]
public void set_DefaultValueHandling(Nullable`1<DefaultValueHandling> value);
    [CompilerGeneratedAttribute]
public Nullable`1<ReferenceLoopHandling> get_ReferenceLoopHandling();
    [CompilerGeneratedAttribute]
public void set_ReferenceLoopHandling(Nullable`1<ReferenceLoopHandling> value);
    [CompilerGeneratedAttribute]
public Nullable`1<ObjectCreationHandling> get_ObjectCreationHandling();
    [CompilerGeneratedAttribute]
public void set_ObjectCreationHandling(Nullable`1<ObjectCreationHandling> value);
    [CompilerGeneratedAttribute]
public Nullable`1<TypeNameHandling> get_TypeNameHandling();
    [CompilerGeneratedAttribute]
public void set_TypeNameHandling(Nullable`1<TypeNameHandling> value);
    [CompilerGeneratedAttribute]
public Predicate`1<object> get_ShouldSerialize();
    [CompilerGeneratedAttribute]
public void set_ShouldSerialize(Predicate`1<object> value);
    [CompilerGeneratedAttribute]
public Predicate`1<object> get_ShouldDeserialize();
    [CompilerGeneratedAttribute]
public void set_ShouldDeserialize(Predicate`1<object> value);
    [CompilerGeneratedAttribute]
public Predicate`1<object> get_GetIsSpecified();
    [CompilerGeneratedAttribute]
public void set_GetIsSpecified(Predicate`1<object> value);
    [CompilerGeneratedAttribute]
public Action`2<object, object> get_SetIsSpecified();
    [CompilerGeneratedAttribute]
public void set_SetIsSpecified(Action`2<object, object> value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public virtual string ToString();
    [CompilerGeneratedAttribute]
public JsonConverter get_ItemConverter();
    [CompilerGeneratedAttribute]
public void set_ItemConverter(JsonConverter value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ItemIsReference();
    [CompilerGeneratedAttribute]
public void set_ItemIsReference(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<TypeNameHandling> get_ItemTypeNameHandling();
    [CompilerGeneratedAttribute]
public void set_ItemTypeNameHandling(Nullable`1<TypeNameHandling> value);
    [CompilerGeneratedAttribute]
public Nullable`1<ReferenceLoopHandling> get_ItemReferenceLoopHandling();
    [CompilerGeneratedAttribute]
public void set_ItemReferenceLoopHandling(Nullable`1<ReferenceLoopHandling> value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal void WritePropertyName(JsonWriter writer);
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Newtonsoft.Json.Serialization.JsonPropertyCollection : KeyedCollection`2<string, JsonProperty> {
    private Type _type;
    private List`1<JsonProperty> _list;
    public JsonPropertyCollection(Type type);
    protected virtual string GetKeyForItem(JsonProperty item);
    public void AddProperty(JsonProperty property);
    public JsonProperty GetClosestMatchProperty(string propertyName);
    private bool TryGetValue(string key, JsonProperty& item);
    public JsonProperty GetProperty(string propertyName, StringComparison comparisonType);
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal abstract class Newtonsoft.Json.Serialization.JsonSerializerInternalBase : object {
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
private ErrorContext _currentErrorContext;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private BidirectionalDictionary`2<string, object> _mappings;
    internal JsonSerializer Serializer;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
internal ITraceWriter TraceWriter;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
protected JsonSerializerProxy InternalSerializer;
    internal BidirectionalDictionary`2<string, object> DefaultReferenceMappings { get; }
    protected JsonSerializerInternalBase(JsonSerializer serializer);
    internal BidirectionalDictionary`2<string, object> get_DefaultReferenceMappings();
    protected NullValueHandling ResolvedNullValueHandling(JsonObjectContract containerContract, JsonProperty property);
    private ErrorContext GetErrorContext(object currentObject, object member, string path, Exception error);
    protected void ClearErrorContext();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
protected bool IsErrorHandled(object currentObject, JsonContract contract, object keyValue, IJsonLineInfo lineInfo, string path, Exception ex);
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal class Newtonsoft.Json.Serialization.JsonSerializerInternalReader : JsonSerializerInternalBase {
    public JsonSerializerInternalReader(JsonSerializer serializer);
    public void Populate(JsonReader reader, object target);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
private JsonContract GetContractSafe(Type type);
    private JsonContract GetContract(Type type);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public object Deserialize(JsonReader reader, Type objectType, bool checkAdditionalContent);
    private JsonSerializerProxy GetInternalSerializer();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
private JToken CreateJToken(JsonReader reader, JsonContract contract);
    private JToken CreateJObject(JsonReader reader);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
private object CreateValueInternal(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, object existingValue);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
private static bool CoerceEmptyStringToNull(Type objectType, JsonContract contract, string s);
    internal string GetExpectedDescription(JsonContract contract);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
private JsonConverter GetConverter(JsonContract contract, JsonConverter memberConverter, JsonContainerContract containerContract, JsonProperty containerProperty);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
private object CreateObject(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, object existingValue);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
private bool ReadMetadataPropertiesToken(JTokenReader reader, Type& objectType, JsonContract& contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, object existingValue, Object& newValue, String& id);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
private bool ReadMetadataProperties(JsonReader reader, Type& objectType, JsonContract& contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, object existingValue, Object& newValue, String& id);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
private void ResolveTypeName(JsonReader reader, Type& objectType, JsonContract& contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerMember, string qualifiedTypeName);
    private JsonArrayContract EnsureArrayContract(JsonReader reader, Type objectType, JsonContract contract);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
private object CreateList(JsonReader reader, Type objectType, JsonContract contract, JsonProperty member, object existingValue, string id);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
private bool HasNoDefinedType(JsonContract contract);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
private object EnsureType(JsonReader reader, object value, CultureInfo culture, JsonContract contract, Type targetType);
    private bool SetPropertyValue(JsonProperty property, JsonConverter propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, object target);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
private bool CalculatePropertyDetails(JsonProperty property, JsonConverter& propertyConverter, JsonContainerContract containerContract, JsonProperty containerProperty, JsonReader reader, object target, Boolean& useExistingValue, Object& currentValue, JsonContract& propertyContract, Boolean& gottenCurrentValue, Boolean& ignoredValue);
    private void AddReference(JsonReader reader, string id, object value);
    private bool HasFlag(DefaultValueHandling value, DefaultValueHandling flag);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
private bool ShouldSetPropertyValue(JsonProperty property, JsonObjectContract contract, object value);
    private IList CreateNewList(JsonReader reader, JsonArrayContract contract, Boolean& createdFromNonDefaultCreator);
    private IDictionary CreateNewDictionary(JsonReader reader, JsonDictionaryContract contract, Boolean& createdFromNonDefaultCreator);
    private void OnDeserializing(JsonReader reader, JsonContract contract, object value);
    private void OnDeserialized(JsonReader reader, JsonContract contract, object value);
    private object PopulateDictionary(IDictionary dictionary, JsonReader reader, JsonDictionaryContract contract, JsonProperty containerProperty, string id);
    private object PopulateMultidimensionalArray(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, string id);
    private void ThrowUnexpectedEndException(JsonReader reader, JsonContract contract, object currentObject, string message);
    private object PopulateList(IList list, JsonReader reader, JsonArrayContract contract, JsonProperty containerProperty, string id);
    private object CreateISerializable(JsonReader reader, JsonISerializableContract contract, JsonProperty member, string id);
    internal object CreateISerializableItem(JToken token, Type type, JsonISerializableContract contract, JsonProperty member);
    private object CreateDynamic(JsonReader reader, JsonDynamicContract contract, JsonProperty member, string id);
    private object CreateObjectUsingCreatorWithParameters(JsonReader reader, JsonObjectContract contract, JsonProperty containerProperty, ObjectConstructor`1<object> creator, string id);
    private object DeserializeConvertable(JsonConverter converter, JsonReader reader, Type objectType, object existingValue);
    private List`1<CreatorPropertyContext> ResolvePropertyAndCreatorValues(JsonObjectContract contract, JsonProperty containerProperty, JsonReader reader, Type objectType);
    public object CreateNewObject(JsonReader reader, JsonObjectContract objectContract, JsonProperty containerMember, JsonProperty containerProperty, string id, Boolean& createdFromNonDefaultCreator);
    private object PopulateObject(object newObject, JsonReader reader, JsonObjectContract contract, JsonProperty member, string id);
    private bool ShouldDeserialize(JsonReader reader, JsonProperty property, object target);
    private bool CheckPropertyName(JsonReader reader, string memberName);
    private void SetExtensionData(JsonObjectContract contract, JsonProperty member, JsonReader reader, string memberName, object o);
    private object ReadExtensionDataValue(JsonObjectContract contract, JsonProperty member, JsonReader reader);
    private void EndProcessProperty(object newObject, JsonReader reader, JsonObjectContract contract, int initialDepth, JsonProperty property, PropertyPresence presence, bool setDefaultValue);
    private void SetPropertyPresence(JsonReader reader, JsonProperty property, Dictionary`2<JsonProperty, PropertyPresence> requiredProperties);
    private void HandleError(JsonReader reader, bool readPastError, int initialDepth);
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal class Newtonsoft.Json.Serialization.JsonSerializerInternalWriter : JsonSerializerInternalBase {
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
private Type _rootType;
    private int _rootLevel;
    private List`1<object> _serializeStack;
    public JsonSerializerInternalWriter(JsonSerializer serializer);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public void Serialize(JsonWriter jsonWriter, object value, Type objectType);
    private JsonSerializerProxy GetInternalSerializer();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
private JsonContract GetContractSafe(object value);
    private JsonContract GetContract(object value);
    private void SerializePrimitive(JsonWriter writer, object value, JsonPrimitiveContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
private void SerializeValue(JsonWriter writer, object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
private Nullable`1<bool> ResolveIsReference(JsonContract contract, JsonProperty property, JsonContainerContract collectionContract, JsonProperty containerProperty);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
private bool ShouldWriteReference(object value, JsonProperty property, JsonContract valueContract, JsonContainerContract collectionContract, JsonProperty containerProperty);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
private bool ShouldWriteProperty(object memberValue, JsonObjectContract containerContract, JsonProperty property);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
private bool CheckForCircularReference(JsonWriter writer, object value, JsonProperty property, JsonContract contract, JsonContainerContract containerContract, JsonProperty containerProperty);
    private void WriteReference(JsonWriter writer, object value);
    private string GetReference(JsonWriter writer, object value);
    internal static bool TryConvertToString(object value, Type type, String& s);
    private void SerializeString(JsonWriter writer, object value, JsonStringContract contract);
    private void OnSerializing(JsonWriter writer, JsonContract contract, object value);
    private void OnSerialized(JsonWriter writer, JsonContract contract, object value);
    private void SerializeObject(JsonWriter writer, object value, JsonObjectContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty);
    private bool CalculatePropertyValues(JsonWriter writer, object value, JsonContainerContract contract, JsonProperty member, JsonProperty property, JsonContract& memberContract, Object& memberValue);
    private void WriteObjectStart(JsonWriter writer, object value, JsonContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty);
    private bool HasCreatorParameter(JsonContainerContract contract, JsonProperty property);
    private void WriteReferenceIdProperty(JsonWriter writer, Type type, object value);
    private void WriteTypeProperty(JsonWriter writer, Type type);
    private bool HasFlag(DefaultValueHandling value, DefaultValueHandling flag);
    private bool HasFlag(PreserveReferencesHandling value, PreserveReferencesHandling flag);
    private bool HasFlag(TypeNameHandling value, TypeNameHandling flag);
    private void SerializeConvertable(JsonWriter writer, JsonConverter converter, object value, JsonContract contract, JsonContainerContract collectionContract, JsonProperty containerProperty);
    private void SerializeList(JsonWriter writer, IEnumerable values, JsonArrayContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty);
    private void SerializeMultidimensionalArray(JsonWriter writer, Array values, JsonArrayContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty);
    private void SerializeMultidimensionalArray(JsonWriter writer, Array values, JsonArrayContract contract, JsonProperty member, int initialDepth, Int32[] indices);
    private bool WriteStartArray(JsonWriter writer, object values, JsonArrayContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty);
    [SecuritySafeCriticalAttribute]
private void SerializeISerializable(JsonWriter writer, ISerializable value, JsonISerializableContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty);
    private void SerializeDynamic(JsonWriter writer, IDynamicMetaObjectProvider value, JsonDynamicContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
private bool ShouldWriteDynamicProperty(object memberValue);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
private bool ShouldWriteType(TypeNameHandling typeNameHandlingFlag, JsonContract contract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty);
    private void SerializeDictionary(JsonWriter writer, IDictionary values, JsonDictionaryContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty);
    private string GetPropertyName(JsonWriter writer, object name, JsonContract contract, Boolean& escape);
    private void HandleError(JsonWriter writer, int initialDepth);
    private bool ShouldSerialize(JsonWriter writer, JsonProperty property, object target);
    private bool IsSpecified(JsonWriter writer, JsonProperty property, object target);
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal class Newtonsoft.Json.Serialization.JsonSerializerProxy : JsonSerializer {
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
private JsonSerializerInternalReader _serializerReader;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
private JsonSerializerInternalWriter _serializerWriter;
    private JsonSerializer _serializer;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
public IReferenceResolver ReferenceResolver { get; public set; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
public ITraceWriter TraceWriter { get; public set; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
public IEqualityComparer EqualityComparer { get; public set; }
    public JsonConverterCollection Converters { get; }
    public DefaultValueHandling DefaultValueHandling { get; public set; }
    public IContractResolver ContractResolver { get; public set; }
    public MissingMemberHandling MissingMemberHandling { get; public set; }
    public NullValueHandling NullValueHandling { get; public set; }
    public ObjectCreationHandling ObjectCreationHandling { get; public set; }
    public ReferenceLoopHandling ReferenceLoopHandling { get; public set; }
    public PreserveReferencesHandling PreserveReferencesHandling { get; public set; }
    public TypeNameHandling TypeNameHandling { get; public set; }
    public MetadataPropertyHandling MetadataPropertyHandling { get; public set; }
    [ObsoleteAttribute("TypeNameAssemblyFormat is obsolete. Use TypeNameAssemblyFormatHandling instead.")]
public FormatterAssemblyStyle TypeNameAssemblyFormat { get; public set; }
    public TypeNameAssemblyFormatHandling TypeNameAssemblyFormatHandling { get; public set; }
    public ConstructorHandling ConstructorHandling { get; public set; }
    [ObsoleteAttribute("Binder is obsolete. Use SerializationBinder instead.")]
public SerializationBinder Binder { get; public set; }
    public ISerializationBinder SerializationBinder { get; public set; }
    public StreamingContext Context { get; public set; }
    public Formatting Formatting { get; public set; }
    public DateFormatHandling DateFormatHandling { get; public set; }
    public DateTimeZoneHandling DateTimeZoneHandling { get; public set; }
    public DateParseHandling DateParseHandling { get; public set; }
    public FloatFormatHandling FloatFormatHandling { get; public set; }
    public FloatParseHandling FloatParseHandling { get; public set; }
    public StringEscapeHandling StringEscapeHandling { get; public set; }
    public string DateFormatString { get; public set; }
    public CultureInfo Culture { get; public set; }
    public Nullable`1<int> MaxDepth { get; public set; }
    public bool CheckAdditionalContent { get; public set; }
    public JsonSerializerProxy(JsonSerializerInternalReader serializerReader);
    public JsonSerializerProxy(JsonSerializerInternalWriter serializerWriter);
    public virtual void add_Error(EventHandler`1<ErrorEventArgs> value);
    public virtual void remove_Error(EventHandler`1<ErrorEventArgs> value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public virtual IReferenceResolver get_ReferenceResolver();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public virtual void set_ReferenceResolver(IReferenceResolver value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public virtual ITraceWriter get_TraceWriter();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public virtual void set_TraceWriter(ITraceWriter value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public virtual IEqualityComparer get_EqualityComparer();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public virtual void set_EqualityComparer(IEqualityComparer value);
    public virtual JsonConverterCollection get_Converters();
    public virtual DefaultValueHandling get_DefaultValueHandling();
    public virtual void set_DefaultValueHandling(DefaultValueHandling value);
    public virtual IContractResolver get_ContractResolver();
    public virtual void set_ContractResolver(IContractResolver value);
    public virtual MissingMemberHandling get_MissingMemberHandling();
    public virtual void set_MissingMemberHandling(MissingMemberHandling value);
    public virtual NullValueHandling get_NullValueHandling();
    public virtual void set_NullValueHandling(NullValueHandling value);
    public virtual ObjectCreationHandling get_ObjectCreationHandling();
    public virtual void set_ObjectCreationHandling(ObjectCreationHandling value);
    public virtual ReferenceLoopHandling get_ReferenceLoopHandling();
    public virtual void set_ReferenceLoopHandling(ReferenceLoopHandling value);
    public virtual PreserveReferencesHandling get_PreserveReferencesHandling();
    public virtual void set_PreserveReferencesHandling(PreserveReferencesHandling value);
    public virtual TypeNameHandling get_TypeNameHandling();
    public virtual void set_TypeNameHandling(TypeNameHandling value);
    public virtual MetadataPropertyHandling get_MetadataPropertyHandling();
    public virtual void set_MetadataPropertyHandling(MetadataPropertyHandling value);
    public virtual FormatterAssemblyStyle get_TypeNameAssemblyFormat();
    public virtual void set_TypeNameAssemblyFormat(FormatterAssemblyStyle value);
    public virtual TypeNameAssemblyFormatHandling get_TypeNameAssemblyFormatHandling();
    public virtual void set_TypeNameAssemblyFormatHandling(TypeNameAssemblyFormatHandling value);
    public virtual ConstructorHandling get_ConstructorHandling();
    public virtual void set_ConstructorHandling(ConstructorHandling value);
    public virtual SerializationBinder get_Binder();
    public virtual void set_Binder(SerializationBinder value);
    public virtual ISerializationBinder get_SerializationBinder();
    public virtual void set_SerializationBinder(ISerializationBinder value);
    public virtual StreamingContext get_Context();
    public virtual void set_Context(StreamingContext value);
    public virtual Formatting get_Formatting();
    public virtual void set_Formatting(Formatting value);
    public virtual DateFormatHandling get_DateFormatHandling();
    public virtual void set_DateFormatHandling(DateFormatHandling value);
    public virtual DateTimeZoneHandling get_DateTimeZoneHandling();
    public virtual void set_DateTimeZoneHandling(DateTimeZoneHandling value);
    public virtual DateParseHandling get_DateParseHandling();
    public virtual void set_DateParseHandling(DateParseHandling value);
    public virtual FloatFormatHandling get_FloatFormatHandling();
    public virtual void set_FloatFormatHandling(FloatFormatHandling value);
    public virtual FloatParseHandling get_FloatParseHandling();
    public virtual void set_FloatParseHandling(FloatParseHandling value);
    public virtual StringEscapeHandling get_StringEscapeHandling();
    public virtual void set_StringEscapeHandling(StringEscapeHandling value);
    public virtual string get_DateFormatString();
    public virtual void set_DateFormatString(string value);
    public virtual CultureInfo get_Culture();
    public virtual void set_Culture(CultureInfo value);
    public virtual Nullable`1<int> get_MaxDepth();
    public virtual void set_MaxDepth(Nullable`1<int> value);
    public virtual bool get_CheckAdditionalContent();
    public virtual void set_CheckAdditionalContent(bool value);
    internal JsonSerializerInternalBase GetInternalSerializer();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
internal virtual object DeserializeInternal(JsonReader reader, Type objectType);
    internal virtual void PopulateInternal(JsonReader reader, object target);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
internal virtual void SerializeInternal(JsonWriter jsonWriter, object value, Type rootType);
}
internal class Newtonsoft.Json.Serialization.JsonStringContract : JsonPrimitiveContract {
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public JsonStringContract(Type underlyingType);
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal static class Newtonsoft.Json.Serialization.JsonTypeReflector : object {
    private static Nullable`1<bool> _dynamicCodeGeneration;
    private static Nullable`1<bool> _fullyTrusted;
    public static string IdPropertyName;
    public static string RefPropertyName;
    public static string TypePropertyName;
    public static string ValuePropertyName;
    public static string ArrayValuesPropertyName;
    public static string ShouldSerializePrefix;
    public static string SpecifiedPostfix;
    public static string ConcurrentDictionaryTypeName;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static ThreadSafeStore`2<Type, Func`2<Object[], object>> CreatorCache;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static ThreadSafeStore`2<Type, Type> AssociatedMetadataTypesCache;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
private static ReflectionObject _metadataTypeAttributeReflectionObject;
    public static bool DynamicCodeGeneration { get; }
    public static bool FullyTrusted { get; }
    public static ReflectionDelegateFactory ReflectionDelegateFactory { get; }
    private static JsonTypeReflector();
    public static T GetCachedAttribute(object attributeProvider);
    public static bool CanTypeDescriptorConvertString(Type type, TypeConverter& typeConverter);
    public static DataContractAttribute GetDataContractAttribute(Type type);
    public static DataMemberAttribute GetDataMemberAttribute(MemberInfo memberInfo);
    public static MemberSerialization GetObjectMemberSerialization(Type objectType, bool ignoreSerializableAttribute);
    public static JsonConverter GetJsonConverter(object attributeProvider);
    public static JsonConverter CreateJsonConverterInstance(Type converterType, Object[] args);
    public static NamingStrategy CreateNamingStrategyInstance(Type namingStrategyType, Object[] args);
    public static NamingStrategy GetContainerNamingStrategy(JsonContainerAttribute containerAttribute);
    private static Func`2<Object[], object> GetCreator(Type type);
    private static Type GetAssociatedMetadataType(Type type);
    private static Type GetAssociateMetadataTypeFromAttribute(Type type);
    private static T GetAttribute(Type type);
    private static T GetAttribute(MemberInfo memberInfo);
    public static bool IsNonSerializable(object provider);
    public static bool IsSerializable(object provider);
    public static T GetAttribute(object provider);
    [SecuritySafeCriticalAttribute]
public static bool get_DynamicCodeGeneration();
    public static bool get_FullyTrusted();
    public static ReflectionDelegateFactory get_ReflectionDelegateFactory();
}
internal class Newtonsoft.Json.Serialization.KebabCaseNamingStrategy : NamingStrategy {
    public KebabCaseNamingStrategy(bool processDictionaryKeys, bool overrideSpecifiedNames);
    public KebabCaseNamingStrategy(bool processDictionaryKeys, bool overrideSpecifiedNames, bool processExtensionDataNames);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
protected virtual string ResolvePropertyName(string name);
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal class Newtonsoft.Json.Serialization.MemoryTraceWriter : object {
    private Queue`1<string> _traceMessages;
    private object _lock;
    [CompilerGeneratedAttribute]
private TraceLevel <LevelFilter>k__BackingField;
    public TraceLevel LevelFilter { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual TraceLevel get_LevelFilter();
    [CompilerGeneratedAttribute]
public void set_LevelFilter(TraceLevel value);
    public sealed virtual void Trace(TraceLevel level, string message, Exception ex);
    public IEnumerable`1<string> GetTraceMessages();
    public virtual string ToString();
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal abstract class Newtonsoft.Json.Serialization.NamingStrategy : object {
    [CompilerGeneratedAttribute]
private bool <ProcessDictionaryKeys>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ProcessExtensionDataNames>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <OverrideSpecifiedNames>k__BackingField;
    public bool ProcessDictionaryKeys { get; public set; }
    public bool ProcessExtensionDataNames { get; public set; }
    public bool OverrideSpecifiedNames { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_ProcessDictionaryKeys();
    [CompilerGeneratedAttribute]
public void set_ProcessDictionaryKeys(bool value);
    [CompilerGeneratedAttribute]
public bool get_ProcessExtensionDataNames();
    [CompilerGeneratedAttribute]
public void set_ProcessExtensionDataNames(bool value);
    [CompilerGeneratedAttribute]
public bool get_OverrideSpecifiedNames();
    [CompilerGeneratedAttribute]
public void set_OverrideSpecifiedNames(bool value);
    public virtual string GetPropertyName(string name, bool hasSpecifiedName);
    public virtual string GetExtensionDataName(string name);
    public virtual string GetDictionaryKey(string key);
    protected abstract virtual string ResolvePropertyName(string name);
    public virtual int GetHashCode();
    public virtual bool Equals(object obj);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
protected bool Equals(NamingStrategy other);
}
internal class Newtonsoft.Json.Serialization.ObjectConstructor`1 : MulticastDelegate {
    public ObjectConstructor`1(object object, IntPtr method);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public virtual object Invoke(Object[] args);
    public virtual IAsyncResult BeginInvoke(Object[] args, AsyncCallback callback, object object);
    public virtual object EndInvoke(IAsyncResult result);
}
[AttributeUsageAttribute("64")]
internal class Newtonsoft.Json.Serialization.OnErrorAttribute : Attribute {
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal class Newtonsoft.Json.Serialization.ReflectionAttributeProvider : object {
    private object _attributeProvider;
    public ReflectionAttributeProvider(object attributeProvider);
    public sealed virtual IList`1<Attribute> GetAttributes(bool inherit);
    public sealed virtual IList`1<Attribute> GetAttributes(Type attributeType, bool inherit);
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal class Newtonsoft.Json.Serialization.ReflectionValueProvider : object {
    private MemberInfo _memberInfo;
    public ReflectionValueProvider(MemberInfo memberInfo);
    public sealed virtual void SetValue(object target, object value);
    public sealed virtual object GetValue(object target);
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal class Newtonsoft.Json.Serialization.SerializationBinderAdapter : object {
    public SerializationBinder SerializationBinder;
    public SerializationBinderAdapter(SerializationBinder serializationBinder);
    public sealed virtual Type BindToType(string assemblyName, string typeName);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public sealed virtual void BindToName(Type serializedType, String& assemblyName, String& typeName);
}
internal class Newtonsoft.Json.Serialization.SerializationCallback : MulticastDelegate {
    public SerializationCallback(object object, IntPtr method);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public virtual void Invoke(object o, StreamingContext context);
    public virtual IAsyncResult BeginInvoke(object o, StreamingContext context, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class Newtonsoft.Json.Serialization.SerializationErrorCallback : MulticastDelegate {
    public SerializationErrorCallback(object object, IntPtr method);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public virtual void Invoke(object o, StreamingContext context, ErrorContext errorContext);
    public virtual IAsyncResult BeginInvoke(object o, StreamingContext context, ErrorContext errorContext, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class Newtonsoft.Json.Serialization.SnakeCaseNamingStrategy : NamingStrategy {
    public SnakeCaseNamingStrategy(bool processDictionaryKeys, bool overrideSpecifiedNames);
    public SnakeCaseNamingStrategy(bool processDictionaryKeys, bool overrideSpecifiedNames, bool processExtensionDataNames);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
protected virtual string ResolvePropertyName(string name);
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal class Newtonsoft.Json.Serialization.TraceJsonReader : JsonReader {
    private JsonReader _innerReader;
    private JsonTextWriter _textWriter;
    private StringWriter _sw;
    public int Depth { get; }
    public string Path { get; }
    public char QuoteChar { get; protected internal set; }
    public JsonToken TokenType { get; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
public object Value { get; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
public Type ValueType { get; }
    private int Newtonsoft.Json.IJsonLineInfo.LineNumber { get; }
    private int Newtonsoft.Json.IJsonLineInfo.LinePosition { get; }
    public TraceJsonReader(JsonReader innerReader);
    public string GetDeserializedJsonMessage();
    public virtual bool Read();
    public virtual Nullable`1<int> ReadAsInt32();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public virtual string ReadAsString();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public virtual Byte[] ReadAsBytes();
    public virtual Nullable`1<decimal> ReadAsDecimal();
    public virtual Nullable`1<double> ReadAsDouble();
    public virtual Nullable`1<bool> ReadAsBoolean();
    public virtual Nullable`1<DateTime> ReadAsDateTime();
    public virtual Nullable`1<DateTimeOffset> ReadAsDateTimeOffset();
    public void WriteCurrentToken();
    public virtual int get_Depth();
    public virtual string get_Path();
    public virtual char get_QuoteChar();
    protected internal virtual void set_QuoteChar(char value);
    public virtual JsonToken get_TokenType();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public virtual object get_Value();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public virtual Type get_ValueType();
    public virtual void Close();
    private sealed virtual override bool Newtonsoft.Json.IJsonLineInfo.HasLineInfo();
    private sealed virtual override int Newtonsoft.Json.IJsonLineInfo.get_LineNumber();
    private sealed virtual override int Newtonsoft.Json.IJsonLineInfo.get_LinePosition();
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal class Newtonsoft.Json.Serialization.TraceJsonWriter : JsonWriter {
    private JsonWriter _innerWriter;
    private JsonTextWriter _textWriter;
    private StringWriter _sw;
    public TraceJsonWriter(JsonWriter innerWriter);
    public string GetSerializedJsonMessage();
    public virtual void WriteValue(decimal value);
    public virtual void WriteValue(Nullable`1<decimal> value);
    public virtual void WriteValue(bool value);
    public virtual void WriteValue(Nullable`1<bool> value);
    public virtual void WriteValue(byte value);
    public virtual void WriteValue(Nullable`1<byte> value);
    public virtual void WriteValue(char value);
    public virtual void WriteValue(Nullable`1<char> value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public virtual void WriteValue(Byte[] value);
    public virtual void WriteValue(DateTime value);
    public virtual void WriteValue(Nullable`1<DateTime> value);
    public virtual void WriteValue(DateTimeOffset value);
    public virtual void WriteValue(Nullable`1<DateTimeOffset> value);
    public virtual void WriteValue(double value);
    public virtual void WriteValue(Nullable`1<double> value);
    public virtual void WriteUndefined();
    public virtual void WriteNull();
    public virtual void WriteValue(float value);
    public virtual void WriteValue(Nullable`1<float> value);
    public virtual void WriteValue(Guid value);
    public virtual void WriteValue(Nullable`1<Guid> value);
    public virtual void WriteValue(int value);
    public virtual void WriteValue(Nullable`1<int> value);
    public virtual void WriteValue(long value);
    public virtual void WriteValue(Nullable`1<long> value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public virtual void WriteValue(object value);
    public virtual void WriteValue(sbyte value);
    public virtual void WriteValue(Nullable`1<sbyte> value);
    public virtual void WriteValue(short value);
    public virtual void WriteValue(Nullable`1<short> value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public virtual void WriteValue(string value);
    public virtual void WriteValue(TimeSpan value);
    public virtual void WriteValue(Nullable`1<TimeSpan> value);
    public virtual void WriteValue(UInt32 value);
    public virtual void WriteValue(Nullable`1<UInt32> value);
    public virtual void WriteValue(ulong value);
    public virtual void WriteValue(Nullable`1<ulong> value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public virtual void WriteValue(Uri value);
    public virtual void WriteValue(ushort value);
    public virtual void WriteValue(Nullable`1<ushort> value);
    public virtual void WriteWhitespace(string ws);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public virtual void WriteComment(string text);
    public virtual void WriteStartArray();
    public virtual void WriteEndArray();
    public virtual void WriteStartConstructor(string name);
    public virtual void WriteEndConstructor();
    public virtual void WritePropertyName(string name);
    public virtual void WritePropertyName(string name, bool escape);
    public virtual void WriteStartObject();
    public virtual void WriteEndObject();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public virtual void WriteRawValue(string json);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public virtual void WriteRaw(string json);
    public virtual void Close();
    public virtual void Flush();
}
internal enum Newtonsoft.Json.StringEscapeHandling : Enum {
    public int value__;
    public static StringEscapeHandling Default;
    public static StringEscapeHandling EscapeNonAscii;
    public static StringEscapeHandling EscapeHtml;
}
internal enum Newtonsoft.Json.TypeNameAssemblyFormatHandling : Enum {
    public int value__;
    public static TypeNameAssemblyFormatHandling Simple;
    public static TypeNameAssemblyFormatHandling Full;
}
[FlagsAttribute]
internal enum Newtonsoft.Json.TypeNameHandling : Enum {
    public int value__;
    public static TypeNameHandling None;
    public static TypeNameHandling Objects;
    public static TypeNameHandling Arrays;
    public static TypeNameHandling All;
    public static TypeNameHandling Auto;
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[ExtensionAttribute]
internal static class Newtonsoft.Json.Utilities.AsyncUtils : object {
    public static Task`1<bool> False;
    public static Task`1<bool> True;
    internal static Task CompletedTask;
    private static AsyncUtils();
    [ExtensionAttribute]
internal static Task`1<bool> ToAsync(bool value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
[ExtensionAttribute]
public static Task CancelIfRequestedAsync(CancellationToken cancellationToken);
    [ExtensionAttribute]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public static Task`1<T> CancelIfRequestedAsync(CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task FromCanceled(CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<T> FromCanceled(CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task WriteAsync(TextWriter writer, char value, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task WriteAsync(TextWriter writer, string value, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task WriteAsync(TextWriter writer, Char[] value, int start, int count, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static Task`1<int> ReadAsync(TextReader reader, Char[] buffer, int index, int count, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static bool IsCompletedSucessfully(Task task);
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal class Newtonsoft.Json.Utilities.Base64Encoder : object {
    private static int Base64LineSize;
    private static int LineSizeInBytes;
    private Char[] _charsLine;
    private TextWriter _writer;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
private Byte[] _leftOverBytes;
    private int _leftOverBytesCount;
    public Base64Encoder(TextWriter writer);
    private void ValidateEncode(Byte[] buffer, int index, int count);
    public void Encode(Byte[] buffer, int index, int count);
    private void StoreLeftOverBytes(Byte[] buffer, int index, Int32& count);
    private bool FulfillFromLeftover(Byte[] buffer, int index, Int32& count);
    public void Flush();
    private void WriteChars(Char[] chars, int index, int count);
    [AsyncStateMachineAttribute("Newtonsoft.Json.Utilities.Base64Encoder/<EncodeAsync>d__13")]
public Task EncodeAsync(Byte[] buffer, int index, int count, CancellationToken cancellationToken);
    private Task WriteCharsAsync(Char[] chars, int index, int count, CancellationToken cancellationToken);
    public Task FlushAsync(CancellationToken cancellationToken);
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal class Newtonsoft.Json.Utilities.BidirectionalDictionary`2 : object {
    private IDictionary`2<TFirst, TSecond> _firstToSecond;
    private IDictionary`2<TSecond, TFirst> _secondToFirst;
    private string _duplicateFirstErrorMessage;
    private string _duplicateSecondErrorMessage;
    public BidirectionalDictionary`2(IEqualityComparer`1<TFirst> firstEqualityComparer, IEqualityComparer`1<TSecond> secondEqualityComparer);
    public BidirectionalDictionary`2(IEqualityComparer`1<TFirst> firstEqualityComparer, IEqualityComparer`1<TSecond> secondEqualityComparer, string duplicateFirstErrorMessage, string duplicateSecondErrorMessage);
    public void Set(TFirst first, TSecond second);
    public bool TryGetByFirst(TFirst first, TSecond& second);
    public bool TryGetBySecond(TSecond second, TFirst& first);
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
internal static class Newtonsoft.Json.Utilities.BufferUtils : object {
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public static Char[] RentBuffer(IArrayPool`1<char> bufferPool, int minSize);
    public static void ReturnBuffer(IArrayPool`1<char> bufferPool, Char[] buffer);
    public static Char[] EnsureBufferSize(IArrayPool`1<char> bufferPool, int size, Char[] buffer);
}
[ExtensionAttribute]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal static class Newtonsoft.Json.Utilities.CollectionUtils : object {
    public static bool IsNullOrEmpty(ICollection`1<T> collection);
    [ExtensionAttribute]
public static void AddRange(IList`1<T> initial, IEnumerable`1<T> collection);
    public static bool IsDictionaryType(Type type);
    public static ConstructorInfo ResolveEnumerableCollectionConstructor(Type collectionType, Type collectionItemType);
    public static ConstructorInfo ResolveEnumerableCollectionConstructor(Type collectionType, Type collectionItemType, Type constructorArgumentType);
    [ExtensionAttribute]
public static bool AddDistinct(IList`1<T> list, T value);
    [ExtensionAttribute]
public static bool AddDistinct(IList`1<T> list, T value, IEqualityComparer`1<T> comparer);
    [ExtensionAttribute]
public static bool ContainsValue(IEnumerable`1<TSource> source, TSource value, IEqualityComparer`1<TSource> comparer);
    [ExtensionAttribute]
public static bool AddRangeDistinct(IList`1<T> list, IEnumerable`1<T> values, IEqualityComparer`1<T> comparer);
    [ExtensionAttribute]
public static int IndexOf(IEnumerable`1<T> collection, Func`2<T, bool> predicate);
    [ExtensionAttribute]
public static bool Contains(List`1<T> list, T value, IEqualityComparer comparer);
    [ExtensionAttribute]
public static int IndexOfReference(List`1<T> list, T item);
    [ExtensionAttribute]
public static void FastReverse(List`1<T> list);
    private static IList`1<int> GetDimensions(IList values, int dimensionsCount);
    private static void CopyFromJaggedToMultidimensionalArray(IList values, Array multidimensionalArray, Int32[] indices);
    private static object JaggedArrayGetValue(IList values, Int32[] indices);
    public static Array ToMultidimensionalArray(IList values, Type type, int rank);
    public static T[] ArrayEmpty();
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal class Newtonsoft.Json.Utilities.CollectionWrapper`1 : object {
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
private IList _list;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ICollection`1<T> _genericCollection;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
private object _syncRoot;
    public int Count { get; }
    public bool IsReadOnly { get; }
    private bool System.Collections.IList.IsFixedSize { get; }
    private object System.Collections.IList.Item { get; private set; }
    private bool System.Collections.ICollection.IsSynchronized { get; }
    private object System.Collections.ICollection.SyncRoot { get; }
    public object UnderlyingCollection { get; }
    public CollectionWrapper`1(IList list);
    public CollectionWrapper`1(ICollection`1<T> list);
    public virtual void Add(T item);
    public virtual void Clear();
    public virtual bool Contains(T item);
    public virtual void CopyTo(T[] array, int arrayIndex);
    public virtual int get_Count();
    public virtual bool get_IsReadOnly();
    public virtual bool Remove(T item);
    public virtual IEnumerator`1<T> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override int System.Collections.IList.Add(object value);
    private sealed virtual override bool System.Collections.IList.Contains(object value);
    private sealed virtual override int System.Collections.IList.IndexOf(object value);
    private sealed virtual override void System.Collections.IList.RemoveAt(int index);
    private sealed virtual override void System.Collections.IList.Insert(int index, object value);
    private sealed virtual override bool System.Collections.IList.get_IsFixedSize();
    private sealed virtual override void System.Collections.IList.Remove(object value);
    private sealed virtual override object System.Collections.IList.get_Item(int index);
    private sealed virtual override void System.Collections.IList.set_Item(int index, object value);
    private sealed virtual override void System.Collections.ICollection.CopyTo(Array array, int arrayIndex);
    private sealed virtual override bool System.Collections.ICollection.get_IsSynchronized();
    private sealed virtual override object System.Collections.ICollection.get_SyncRoot();
    private static void VerifyValueType(object value);
    private static bool IsCompatibleObject(object value);
    public sealed virtual object get_UnderlyingCollection();
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal static class Newtonsoft.Json.Utilities.ConvertUtils : object {
    private static Dictionary`2<Type, PrimitiveTypeCode> TypeCodeMap;
    private static TypeInformation[] PrimitiveTypeCodes;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static ThreadSafeStore`2<StructMultiKey`2<Type, Type>, Func`2<object, object>> CastConverters;
    private static ConvertUtils();
    public static PrimitiveTypeCode GetTypeCode(Type t);
    public static PrimitiveTypeCode GetTypeCode(Type t, Boolean& isEnum);
    public static TypeInformation GetTypeInformation(IConvertible convertable);
    public static bool IsConvertible(Type t);
    public static TimeSpan ParseTimeSpan(string input);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
private static Func`2<object, object> CreateCastConverter(StructMultiKey`2<Type, Type> t);
    internal static BigInteger ToBigInteger(object value);
    public static object FromBigInteger(BigInteger i, Type targetType);
    public static object Convert(object initialValue, CultureInfo culture, Type targetType);
    private static bool TryConvert(object initialValue, CultureInfo culture, Type targetType, Object& value);
    private static ConvertResult TryConvertInternal(object initialValue, CultureInfo culture, Type targetType, Object& value);
    public static object ConvertOrCast(object initialValue, CultureInfo culture, Type targetType);
    private static object EnsureTypeAssignable(object value, Type initialType, Type targetType);
    public static bool VersionTryParse(string input, Version& result);
    public static bool IsInteger(object value);
    public static ParseResult Int32TryParse(Char[] chars, int start, int length, Int32& value);
    public static ParseResult Int64TryParse(Char[] chars, int start, int length, Int64& value);
    public static ParseResult DecimalTryParse(Char[] chars, int start, int length, Decimal& value);
    public static bool TryConvertGuid(string s, Guid& g);
    public static bool TryHexTextToInt(Char[] text, int start, int end, Int32& value);
}
internal class Newtonsoft.Json.Utilities.Creator`1 : MulticastDelegate {
    public Creator`1(object object, IntPtr method);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public virtual T Invoke();
    public virtual IAsyncResult BeginInvoke(AsyncCallback callback, object object);
    public virtual T EndInvoke(IAsyncResult result);
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal class Newtonsoft.Json.Utilities.DateTimeParser : ValueType {
    public int Year;
    public int Month;
    public int Day;
    public int Hour;
    public int Minute;
    public int Second;
    public int Fraction;
    public int ZoneHour;
    public int ZoneMinute;
    public ParserTimeZone Zone;
    private Char[] _text;
    private int _end;
    private static Int32[] Power10;
    private static int Lzyyyy;
    private static int Lzyyyy_;
    private static int Lzyyyy_MM;
    private static int Lzyyyy_MM_;
    private static int Lzyyyy_MM_dd;
    private static int Lzyyyy_MM_ddT;
    private static int LzHH;
    private static int LzHH_;
    private static int LzHH_mm;
    private static int LzHH_mm_;
    private static int LzHH_mm_ss;
    private static int Lz_;
    private static int Lz_zz;
    private static short MaxFractionDigits;
    private static DateTimeParser();
    public bool Parse(Char[] text, int startIndex, int length);
    private bool ParseDate(int start);
    private bool ParseTimeAndZoneAndWhitespace(int start);
    private bool ParseTime(Int32& start);
    private bool ParseZone(int start);
    private bool Parse4Digit(int start, Int32& num);
    private bool Parse2Digit(int start, Int32& num);
    private bool ParseChar(int start, char ch);
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[ExtensionAttribute]
internal static class Newtonsoft.Json.Utilities.DateTimeUtils : object {
    internal static long InitialJavaScriptDateTicks;
    private static string IsoDateFormat;
    private static int DaysPer100Years;
    private static int DaysPer400Years;
    private static int DaysPer4Years;
    private static int DaysPerYear;
    private static long TicksPerDay;
    private static Int32[] DaysToMonth365;
    private static Int32[] DaysToMonth366;
    private static DateTimeUtils();
    [ExtensionAttribute]
public static TimeSpan GetUtcOffset(DateTime d);
    public static XmlDateTimeSerializationMode ToSerializationMode(DateTimeKind kind);
    internal static DateTime EnsureDateTime(DateTime value, DateTimeZoneHandling timeZone);
    private static DateTime SwitchToLocalTime(DateTime value);
    private static DateTime SwitchToUtcTime(DateTime value);
    private static long ToUniversalTicks(DateTime dateTime);
    private static long ToUniversalTicks(DateTime dateTime, TimeSpan offset);
    internal static long ConvertDateTimeToJavaScriptTicks(DateTime dateTime, TimeSpan offset);
    internal static long ConvertDateTimeToJavaScriptTicks(DateTime dateTime);
    internal static long ConvertDateTimeToJavaScriptTicks(DateTime dateTime, bool convertToUtc);
    private static long UniversalTicksToJavaScriptTicks(long universalTicks);
    internal static DateTime ConvertJavaScriptTicksToDateTime(long javaScriptTicks);
    internal static bool TryParseDateTimeIso(StringReference text, DateTimeZoneHandling dateTimeZoneHandling, DateTime& dt);
    internal static bool TryParseDateTimeOffsetIso(StringReference text, DateTimeOffset& dt);
    private static DateTime CreateDateTime(DateTimeParser dateTimeParser);
    internal static bool TryParseDateTime(StringReference s, DateTimeZoneHandling dateTimeZoneHandling, string dateFormatString, CultureInfo culture, DateTime& dt);
    internal static bool TryParseDateTime(string s, DateTimeZoneHandling dateTimeZoneHandling, string dateFormatString, CultureInfo culture, DateTime& dt);
    internal static bool TryParseDateTimeOffset(StringReference s, string dateFormatString, CultureInfo culture, DateTimeOffset& dt);
    internal static bool TryParseDateTimeOffset(string s, string dateFormatString, CultureInfo culture, DateTimeOffset& dt);
    private static bool TryParseMicrosoftDate(StringReference text, Int64& ticks, TimeSpan& offset, DateTimeKind& kind);
    private static bool TryParseDateTimeMicrosoft(StringReference text, DateTimeZoneHandling dateTimeZoneHandling, DateTime& dt);
    private static bool TryParseDateTimeExact(string text, DateTimeZoneHandling dateTimeZoneHandling, string dateFormatString, CultureInfo culture, DateTime& dt);
    private static bool TryParseDateTimeOffsetMicrosoft(StringReference text, DateTimeOffset& dt);
    private static bool TryParseDateTimeOffsetExact(string text, string dateFormatString, CultureInfo culture, DateTimeOffset& dt);
    private static bool TryReadOffset(StringReference offsetText, int startIndex, TimeSpan& offset);
    internal static void WriteDateTimeString(TextWriter writer, DateTime value, DateFormatHandling format, string formatString, CultureInfo culture);
    internal static int WriteDateTimeString(Char[] chars, int start, DateTime value, Nullable`1<TimeSpan> offset, DateTimeKind kind, DateFormatHandling format);
    internal static int WriteDefaultIsoDate(Char[] chars, int start, DateTime dt);
    private static void CopyIntToCharArray(Char[] chars, int start, int value, int digits);
    internal static int WriteDateTimeOffset(Char[] chars, int start, TimeSpan offset, DateFormatHandling format);
    internal static void WriteDateTimeOffsetString(TextWriter writer, DateTimeOffset value, DateFormatHandling format, string formatString, CultureInfo culture);
    private static void GetDateValues(DateTime td, Int32& year, Int32& month, Int32& day);
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal class Newtonsoft.Json.Utilities.DictionaryWrapper`2 : object {
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
private IDictionary _dictionary;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IDictionary`2<TKey, TValue> _genericDictionary;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IReadOnlyDictionary`2<TKey, TValue> _readOnlyDictionary;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
private object _syncRoot;
    internal IDictionary`2<TKey, TValue> GenericDictionary { get; }
    public ICollection`1<TKey> Keys { get; }
    public ICollection`1<TValue> Values { get; }
    public TValue Item { get; public set; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
private object System.Collections.IDictionary.Item { get; private set; }
    private bool System.Collections.IDictionary.IsFixedSize { get; }
    private ICollection System.Collections.IDictionary.Keys { get; }
    private ICollection System.Collections.IDictionary.Values { get; }
    private bool System.Collections.ICollection.IsSynchronized { get; }
    private object System.Collections.ICollection.SyncRoot { get; }
    public object UnderlyingDictionary { get; }
    public DictionaryWrapper`2(IDictionary dictionary);
    public DictionaryWrapper`2(IDictionary`2<TKey, TValue> dictionary);
    public DictionaryWrapper`2(IReadOnlyDictionary`2<TKey, TValue> dictionary);
    internal IDictionary`2<TKey, TValue> get_GenericDictionary();
    public sealed virtual void Add(TKey key, TValue value);
    public sealed virtual bool ContainsKey(TKey key);
    public sealed virtual ICollection`1<TKey> get_Keys();
    public sealed virtual bool Remove(TKey key);
    public sealed virtual bool TryGetValue(TKey key, TValue& value);
    public sealed virtual ICollection`1<TValue> get_Values();
    public sealed virtual TValue get_Item(TKey key);
    public sealed virtual void set_Item(TKey key, TValue value);
    public sealed virtual void Add(KeyValuePair`2<TKey, TValue> item);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(KeyValuePair`2<TKey, TValue> item);
    public sealed virtual void CopyTo(KeyValuePair`2[] array, int arrayIndex);
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual bool Remove(KeyValuePair`2<TKey, TValue> item);
    public sealed virtual IEnumerator`1<KeyValuePair`2<TKey, TValue>> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private sealed virtual override void System.Collections.IDictionary.Add(object key, object value);
    private sealed virtual override object System.Collections.IDictionary.get_Item(object key);
    private sealed virtual override void System.Collections.IDictionary.set_Item(object key, object value);
    private sealed virtual override IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator();
    private sealed virtual override bool System.Collections.IDictionary.Contains(object key);
    private sealed virtual override bool System.Collections.IDictionary.get_IsFixedSize();
    private sealed virtual override ICollection System.Collections.IDictionary.get_Keys();
    public sealed virtual void Remove(object key);
    private sealed virtual override ICollection System.Collections.IDictionary.get_Values();
    private sealed virtual override void System.Collections.ICollection.CopyTo(Array array, int index);
    private sealed virtual override bool System.Collections.ICollection.get_IsSynchronized();
    private sealed virtual override object System.Collections.ICollection.get_SyncRoot();
    public sealed virtual object get_UnderlyingDictionary();
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal class Newtonsoft.Json.Utilities.DynamicProxy`1 : object {
    public virtual IEnumerable`1<string> GetDynamicMemberNames(T instance);
    public virtual bool TryBinaryOperation(T instance, BinaryOperationBinder binder, object arg, Object& result);
    public virtual bool TryConvert(T instance, ConvertBinder binder, Object& result);
    public virtual bool TryCreateInstance(T instance, CreateInstanceBinder binder, Object[] args, Object& result);
    public virtual bool TryDeleteIndex(T instance, DeleteIndexBinder binder, Object[] indexes);
    public virtual bool TryDeleteMember(T instance, DeleteMemberBinder binder);
    public virtual bool TryGetIndex(T instance, GetIndexBinder binder, Object[] indexes, Object& result);
    public virtual bool TryGetMember(T instance, GetMemberBinder binder, Object& result);
    public virtual bool TryInvoke(T instance, InvokeBinder binder, Object[] args, Object& result);
    public virtual bool TryInvokeMember(T instance, InvokeMemberBinder binder, Object[] args, Object& result);
    public virtual bool TrySetIndex(T instance, SetIndexBinder binder, Object[] indexes, object value);
    public virtual bool TrySetMember(T instance, SetMemberBinder binder, object value);
    public virtual bool TryUnaryOperation(T instance, UnaryOperationBinder binder, Object& result);
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal class Newtonsoft.Json.Utilities.DynamicProxyMetaObject`1 : DynamicMetaObject {
    private DynamicProxy`1<T> _proxy;
    private static Expression[] NoArgs { get; }
    internal DynamicProxyMetaObject`1(Expression expression, T value, DynamicProxy`1<T> proxy);
    private bool IsOverridden(string method);
    public virtual DynamicMetaObject BindGetMember(GetMemberBinder binder);
    public virtual DynamicMetaObject BindSetMember(SetMemberBinder binder, DynamicMetaObject value);
    public virtual DynamicMetaObject BindDeleteMember(DeleteMemberBinder binder);
    public virtual DynamicMetaObject BindConvert(ConvertBinder binder);
    public virtual DynamicMetaObject BindInvokeMember(InvokeMemberBinder binder, DynamicMetaObject[] args);
    public virtual DynamicMetaObject BindCreateInstance(CreateInstanceBinder binder, DynamicMetaObject[] args);
    public virtual DynamicMetaObject BindInvoke(InvokeBinder binder, DynamicMetaObject[] args);
    public virtual DynamicMetaObject BindBinaryOperation(BinaryOperationBinder binder, DynamicMetaObject arg);
    public virtual DynamicMetaObject BindUnaryOperation(UnaryOperationBinder binder);
    public virtual DynamicMetaObject BindGetIndex(GetIndexBinder binder, DynamicMetaObject[] indexes);
    public virtual DynamicMetaObject BindSetIndex(SetIndexBinder binder, DynamicMetaObject[] indexes, DynamicMetaObject value);
    public virtual DynamicMetaObject BindDeleteIndex(DeleteIndexBinder binder, DynamicMetaObject[] indexes);
    private static Expression[] get_NoArgs();
    private static IEnumerable`1<Expression> GetArgs(DynamicMetaObject[] args);
    private static Expression[] GetArgArray(DynamicMetaObject[] args);
    private static Expression[] GetArgArray(DynamicMetaObject[] args, DynamicMetaObject value);
    private static ConstantExpression Constant(DynamicMetaObjectBinder binder);
    private DynamicMetaObject CallMethodWithResult(string methodName, DynamicMetaObjectBinder binder, IEnumerable`1<Expression> args, Fallback<T> fallback, Fallback<T> fallbackInvoke);
    private DynamicMetaObject BuildCallMethodWithResult(string methodName, DynamicMetaObjectBinder binder, IEnumerable`1<Expression> args, DynamicMetaObject fallbackResult, Fallback<T> fallbackInvoke);
    private DynamicMetaObject CallMethodReturnLast(string methodName, DynamicMetaObjectBinder binder, IEnumerable`1<Expression> args, Fallback<T> fallback);
    private DynamicMetaObject CallMethodNoResult(string methodName, DynamicMetaObjectBinder binder, Expression[] args, Fallback<T> fallback);
    private BindingRestrictions GetRestrictions();
    public virtual IEnumerable`1<string> GetDynamicMemberNames();
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal class Newtonsoft.Json.Utilities.DynamicReflectionDelegateFactory : ReflectionDelegateFactory {
    [CompilerGeneratedAttribute]
private static DynamicReflectionDelegateFactory <Instance>k__BackingField;
    internal static DynamicReflectionDelegateFactory Instance { get; }
    private static DynamicReflectionDelegateFactory();
    [CompilerGeneratedAttribute]
internal static DynamicReflectionDelegateFactory get_Instance();
    private static DynamicMethod CreateDynamicMethod(string name, Type returnType, Type[] parameterTypes, Type owner);
    public virtual ObjectConstructor`1<object> CreateParameterizedConstructor(MethodBase method);
    public virtual MethodCall`2<T, object> CreateMethodCall(MethodBase method);
    private void GenerateCreateMethodCallIL(MethodBase method, ILGenerator generator, int argsIndex);
    public virtual Func`1<T> CreateDefaultConstructor(Type type);
    private void GenerateCreateDefaultConstructorIL(Type type, ILGenerator generator, Type delegateType);
    public virtual Func`2<T, object> CreateGet(PropertyInfo propertyInfo);
    private void GenerateCreateGetPropertyIL(PropertyInfo propertyInfo, ILGenerator generator);
    public virtual Func`2<T, object> CreateGet(FieldInfo fieldInfo);
    private void GenerateCreateGetFieldIL(FieldInfo fieldInfo, ILGenerator generator);
    public virtual Action`2<T, object> CreateSet(FieldInfo fieldInfo);
    internal static void GenerateCreateSetFieldIL(FieldInfo fieldInfo, ILGenerator generator);
    public virtual Action`2<T, object> CreateSet(PropertyInfo propertyInfo);
    internal static void GenerateCreateSetPropertyIL(PropertyInfo propertyInfo, ILGenerator generator);
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[ExtensionAttribute]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal static class Newtonsoft.Json.Utilities.DynamicUtils : object {
    [ExtensionAttribute]
public static IEnumerable`1<string> GetDynamicMemberNames(IDynamicMetaObjectProvider dynamicProvider);
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal class Newtonsoft.Json.Utilities.EnumInfo : object {
    public bool IsFlags;
    public UInt64[] Values;
    public String[] Names;
    public String[] ResolvedNames;
    public EnumInfo(bool isFlags, UInt64[] values, String[] names, String[] resolvedNames);
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal static class Newtonsoft.Json.Utilities.EnumUtils : object {
    private static char EnumSeparatorChar;
    private static string EnumSeparatorString;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static ThreadSafeStore`2<StructMultiKey`2<Type, NamingStrategy>, EnumInfo> ValuesAndNamesPerEnum;
    private static CamelCaseNamingStrategy _camelCaseNamingStrategy;
    private static EnumUtils();
    private static EnumInfo InitializeValuesAndNames(StructMultiKey`2<Type, NamingStrategy> key);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("0")]
public static IList`1<T> GetFlagsValues(T value);
    public static bool TryToString(Type enumType, object value, bool camelCase, String& name);
    public static bool TryToString(Type enumType, object value, NamingStrategy namingStrategy, String& name);
    private static string InternalFlagsFormat(EnumInfo entry, ulong result);
    public static EnumInfo GetEnumValuesAndNames(Type enumType);
    private static ulong ToUInt64(object value);
    public static object ParseEnum(Type enumType, NamingStrategy namingStrategy, string value, bool disallowNumber);
    private static Nullable`1<int> MatchName(string value, String[] enumNames, String[] resolvedNames, int valueIndex, int valueSubstringLength, StringComparison comparison);
    private static Nullable`1<int> FindIndexByName(String[] enumNames, string value, int valueIndex, int valueSubstringLength, StringComparison comparison);
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal class Newtonsoft.Json.Utilities.ExpressionReflectionDelegateFactory : ReflectionDelegateFactory {
    private static ExpressionReflectionDelegateFactory _instance;
    internal static ReflectionDelegateFactory Instance { get; }
    private static ExpressionReflectionDelegateFactory();
    internal static ReflectionDelegateFactory get_Instance();
    public virtual ObjectConstructor`1<object> CreateParameterizedConstructor(MethodBase method);
    public virtual MethodCall`2<T, object> CreateMethodCall(MethodBase method);
    private Expression BuildMethodCall(MethodBase method, Type type, ParameterExpression targetParameterExpression, ParameterExpression argsParameterExpression);
    public virtual Func`1<T> CreateDefaultConstructor(Type type);
    public virtual Func`2<T, object> CreateGet(PropertyInfo propertyInfo);
    public virtual Func`2<T, object> CreateGet(FieldInfo fieldInfo);
    public virtual Action`2<T, object> CreateSet(FieldInfo fieldInfo);
    public virtual Action`2<T, object> CreateSet(PropertyInfo propertyInfo);
    private Expression EnsureCastExpression(Expression expression, Type targetType, bool allowWidening);
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
internal class Newtonsoft.Json.Utilities.FSharpFunction : object {
    private object _instance;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private MethodCall`2<object, object> _invoker;
    public FSharpFunction(object instance, MethodCall`2<object, object> invoker);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public object Invoke(Object[] args);
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal class Newtonsoft.Json.Utilities.FSharpUtils : object {
    private static object Lock;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("2")]
private static FSharpUtils _instance;
    private MethodInfo _ofSeq;
    private Type _mapType;
    [CompilerGeneratedAttribute]
private Assembly <FSharpCoreAssembly>k__BackingField;
    [CompilerGeneratedAttribute]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private MethodCall`2<object, object> <IsUnion>k__BackingField;
    [CompilerGeneratedAttribute]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private MethodCall`2<object, object> <GetUnionCases>k__BackingField;
    [CompilerGeneratedAttribute]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private MethodCall`2<object, object> <PreComputeUnionTagReader>k__BackingField;
    [CompilerGeneratedAttribute]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private MethodCall`2<object, object> <PreComputeUnionReader>k__BackingField;
    [CompilerGeneratedAttribute]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private MethodCall`2<object, object> <PreComputeUnionConstructor>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<object, object> <GetUnionCaseInfoDeclaringType>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<object, object> <GetUnionCaseInfoName>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<object, object> <GetUnionCaseInfoTag>k__BackingField;
    [CompilerGeneratedAttribute]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private MethodCall`2<object, object> <GetUnionCaseInfoFields>k__BackingField;
    public static string FSharpSetTypeName;
    public static string FSharpListTypeName;
    public static string FSharpMapTypeName;
    public static FSharpUtils Instance { get; }
    public Assembly FSharpCoreAssembly { get; private set; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public MethodCall`2<object, object> IsUnion { get; private set; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public MethodCall`2<object, object> GetUnionCases { get; private set; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public MethodCall`2<object, object> PreComputeUnionTagReader { get; private set; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public MethodCall`2<object, object> PreComputeUnionReader { get; private set; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public MethodCall`2<object, object> PreComputeUnionConstructor { get; private set; }
    public Func`2<object, object> GetUnionCaseInfoDeclaringType { get; private set; }
    public Func`2<object, object> GetUnionCaseInfoName { get; private set; }
    public Func`2<object, object> GetUnionCaseInfoTag { get; private set; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public MethodCall`2<object, object> GetUnionCaseInfoFields { get; private set; }
    private FSharpUtils(Assembly fsharpCoreAssembly);
    private static FSharpUtils();
    public static FSharpUtils get_Instance();
    [CompilerGeneratedAttribute]
public Assembly get_FSharpCoreAssembly();
    [CompilerGeneratedAttribute]
private void set_FSharpCoreAssembly(Assembly value);
    [CompilerGeneratedAttribute]
public MethodCall`2<object, object> get_IsUnion();
    [CompilerGeneratedAttribute]
private void set_IsUnion(MethodCall`2<object, object> value);
    [CompilerGeneratedAttribute]
public MethodCall`2<object, object> get_GetUnionCases();
    [CompilerGeneratedAttribute]
private void set_GetUnionCases(MethodCall`2<object, object> value);
    [CompilerGeneratedAttribute]
public MethodCall`2<object, object> get_PreComputeUnionTagReader();
    [CompilerGeneratedAttribute]
private void set_PreComputeUnionTagReader(MethodCall`2<object, object> value);
    [CompilerGeneratedAttribute]
public MethodCall`2<object, object> get_PreComputeUnionReader();
    [CompilerGeneratedAttribute]
private void set_PreComputeUnionReader(MethodCall`2<object, object> value);
    [CompilerGeneratedAttribute]
public MethodCall`2<object, object> get_PreComputeUnionConstructor();
    [CompilerGeneratedAttribute]
private void set_PreComputeUnionConstructor(MethodCall`2<object, object> value);
    [CompilerGeneratedAttribute]
public Func`2<object, object> get_GetUnionCaseInfoDeclaringType();
    [CompilerGeneratedAttribute]
private void set_GetUnionCaseInfoDeclaringType(Func`2<object, object> value);
    [CompilerGeneratedAttribute]
public Func`2<object, object> get_GetUnionCaseInfoName();
    [CompilerGeneratedAttribute]
private void set_GetUnionCaseInfoName(Func`2<object, object> value);
    [CompilerGeneratedAttribute]
public Func`2<object, object> get_GetUnionCaseInfoTag();
    [CompilerGeneratedAttribute]
private void set_GetUnionCaseInfoTag(Func`2<object, object> value);
    [CompilerGeneratedAttribute]
public MethodCall`2<object, object> get_GetUnionCaseInfoFields();
    [CompilerGeneratedAttribute]
private void set_GetUnionCaseInfoFields(MethodCall`2<object, object> value);
    public static void EnsureInitialized(Assembly fsharpCoreAssembly);
    private static MethodInfo GetMethodWithNonPublicFallback(Type type, string methodName, BindingFlags bindingFlags);
    private static MethodCall`2<object, object> CreateFSharpFuncCall(Type type, string methodName);
    public ObjectConstructor`1<object> CreateSeq(Type t);
    public ObjectConstructor`1<object> CreateMap(Type keyType, Type valueType);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public ObjectConstructor`1<object> BuildMapCreator();
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[ExtensionAttribute]
internal static class Newtonsoft.Json.Utilities.ILGeneratorExtensions : object {
    [ExtensionAttribute]
public static void PushInstance(ILGenerator generator, Type type);
    [ExtensionAttribute]
public static void PushArrayInstance(ILGenerator generator, int argsIndex, int arrayIndex);
    [ExtensionAttribute]
public static void BoxIfNeeded(ILGenerator generator, Type type);
    [ExtensionAttribute]
public static void UnboxIfNeeded(ILGenerator generator, Type type);
    [ExtensionAttribute]
public static void CallMethod(ILGenerator generator, MethodInfo methodInfo);
    [ExtensionAttribute]
public static void Return(ILGenerator generator);
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal static class Newtonsoft.Json.Utilities.ImmutableCollectionsUtils : object {
    private static string ImmutableListGenericInterfaceTypeName;
    private static string ImmutableQueueGenericInterfaceTypeName;
    private static string ImmutableStackGenericInterfaceTypeName;
    private static string ImmutableSetGenericInterfaceTypeName;
    private static string ImmutableArrayTypeName;
    private static string ImmutableArrayGenericTypeName;
    private static string ImmutableListTypeName;
    private static string ImmutableListGenericTypeName;
    private static string ImmutableQueueTypeName;
    private static string ImmutableQueueGenericTypeName;
    private static string ImmutableStackTypeName;
    private static string ImmutableStackGenericTypeName;
    private static string ImmutableSortedSetTypeName;
    private static string ImmutableSortedSetGenericTypeName;
    private static string ImmutableHashSetTypeName;
    private static string ImmutableHashSetGenericTypeName;
    private static IList`1<ImmutableCollectionTypeInfo> ArrayContractImmutableCollectionDefinitions;
    private static string ImmutableDictionaryGenericInterfaceTypeName;
    private static string ImmutableDictionaryTypeName;
    private static string ImmutableDictionaryGenericTypeName;
    private static string ImmutableSortedDictionaryTypeName;
    private static string ImmutableSortedDictionaryGenericTypeName;
    private static IList`1<ImmutableCollectionTypeInfo> DictionaryContractImmutableCollectionDefinitions;
    private static ImmutableCollectionsUtils();
    internal static bool TryBuildImmutableForArrayContract(Type underlyingType, Type collectionItemType, Type& createdType, ObjectConstructor`1& parameterizedCreator);
    internal static bool TryBuildImmutableForDictionaryContract(Type underlyingType, Type keyItemType, Type valueItemType, Type& createdType, ObjectConstructor`1& parameterizedCreator);
}
internal interface Newtonsoft.Json.Utilities.IWrappedCollection {
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("1")]
public object UnderlyingCollection { get; }
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public abstract virtual object get_UnderlyingCollection();
}
internal interface Newtonsoft.Json.Utilities.IWrappedDictionary {
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("1")]
public object UnderlyingDictionary { get; }
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public abstract virtual object get_UnderlyingDictionary();
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal static class Newtonsoft.Json.Utilities.JavaScriptUtils : object {
    internal static Boolean[] SingleQuoteCharEscapeFlags;
    internal static Boolean[] DoubleQuoteCharEscapeFlags;
    internal static Boolean[] HtmlCharEscapeFlags;
    private static int UnicodeTextLength;
    private static string EscapedUnicodeText;
    private static JavaScriptUtils();
    public static Boolean[] GetCharEscapeFlags(StringEscapeHandling stringEscapeHandling, char quoteChar);
    public static bool ShouldEscapeJavaScriptString(string s, Boolean[] charEscapeFlags);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public static void WriteEscapedJavaScriptString(TextWriter writer, string s, char delimiter, bool appendDelimiters, Boolean[] charEscapeFlags, StringEscapeHandling stringEscapeHandling, IArrayPool`1<char> bufferPool, Char[]& writeBuffer);
    public static string ToEscapedJavaScriptString(string value, char delimiter, bool appendDelimiters, StringEscapeHandling stringEscapeHandling);
    private static int FirstCharToEscape(string s, Boolean[] charEscapeFlags, StringEscapeHandling stringEscapeHandling);
    public static Task WriteEscapedJavaScriptStringAsync(TextWriter writer, string s, char delimiter, bool appendDelimiters, Boolean[] charEscapeFlags, StringEscapeHandling stringEscapeHandling, JsonTextWriter client, Char[] writeBuffer, CancellationToken cancellationToken);
    private static Task WriteEscapedJavaScriptStringWithDelimitersAsync(TextWriter writer, string s, char delimiter, Boolean[] charEscapeFlags, StringEscapeHandling stringEscapeHandling, JsonTextWriter client, Char[] writeBuffer, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.Utilities.JavaScriptUtils/<WriteEscapedJavaScriptStringWithDelimitersAsync>d__13")]
private static Task WriteEscapedJavaScriptStringWithDelimitersAsync(Task task, TextWriter writer, string s, char delimiter, Boolean[] charEscapeFlags, StringEscapeHandling stringEscapeHandling, JsonTextWriter client, Char[] writeBuffer, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.Utilities.JavaScriptUtils/<WriteCharAsync>d__14")]
public static Task WriteCharAsync(Task task, TextWriter writer, char c, CancellationToken cancellationToken);
    private static Task WriteEscapedJavaScriptStringWithoutDelimitersAsync(TextWriter writer, string s, Boolean[] charEscapeFlags, StringEscapeHandling stringEscapeHandling, JsonTextWriter client, Char[] writeBuffer, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Newtonsoft.Json.Utilities.JavaScriptUtils/<WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync>d__16")]
private static Task WriteDefinitelyEscapedJavaScriptStringWithoutDelimitersAsync(TextWriter writer, string s, int lastWritePosition, Boolean[] charEscapeFlags, StringEscapeHandling stringEscapeHandling, JsonTextWriter client, Char[] writeBuffer, CancellationToken cancellationToken);
    public static bool TryGetDateFromConstructorJson(JsonReader reader, DateTime& dateTime, String& errorMessage);
    private static bool TryGetDateConstructorValue(JsonReader reader, Nullable`1& integer, String& errorMessage);
}
internal static class Newtonsoft.Json.Utilities.JsonTokenUtils : object {
    internal static bool IsEndToken(JsonToken token);
    internal static bool IsStartToken(JsonToken token);
    internal static bool IsPrimitiveToken(JsonToken token);
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal class Newtonsoft.Json.Utilities.LateBoundReflectionDelegateFactory : ReflectionDelegateFactory {
    private static LateBoundReflectionDelegateFactory _instance;
    internal static ReflectionDelegateFactory Instance { get; }
    private static LateBoundReflectionDelegateFactory();
    internal static ReflectionDelegateFactory get_Instance();
    public virtual ObjectConstructor`1<object> CreateParameterizedConstructor(MethodBase method);
    public virtual MethodCall`2<T, object> CreateMethodCall(MethodBase method);
    public virtual Func`1<T> CreateDefaultConstructor(Type type);
    public virtual Func`2<T, object> CreateGet(PropertyInfo propertyInfo);
    public virtual Func`2<T, object> CreateGet(FieldInfo fieldInfo);
    public virtual Action`2<T, object> CreateSet(FieldInfo fieldInfo);
    public virtual Action`2<T, object> CreateSet(PropertyInfo propertyInfo);
}
internal static class Newtonsoft.Json.Utilities.MathUtils : object {
    public static int IntLength(ulong i);
    public static char IntToHex(int n);
    public static Nullable`1<int> Min(Nullable`1<int> val1, Nullable`1<int> val2);
    public static Nullable`1<int> Max(Nullable`1<int> val1, Nullable`1<int> val2);
    public static Nullable`1<double> Max(Nullable`1<double> val1, Nullable`1<double> val2);
    public static bool ApproxEquals(double d1, double d2);
}
internal class Newtonsoft.Json.Utilities.MethodCall`2 : MulticastDelegate {
    public MethodCall`2(object object, IntPtr method);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public virtual TResult Invoke(T target, Object[] args);
    public virtual IAsyncResult BeginInvoke(T target, Object[] args, AsyncCallback callback, object object);
    public virtual TResult EndInvoke(IAsyncResult result);
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal static class Newtonsoft.Json.Utilities.MiscellaneousUtils : object {
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
[ConditionalAttribute("DEBUG")]
public static void Assert(bool condition, string message);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public static bool ValueEquals(object objA, object objB);
    public static ArgumentOutOfRangeException CreateArgumentOutOfRangeException(string paramName, object actualValue, string message);
    public static string ToString(object value);
    public static int ByteArrayCompare(Byte[] a1, Byte[] a2);
    public static string GetPrefix(string qualifiedName);
    public static string GetLocalName(string qualifiedName);
    public static void GetQualifiedNameParts(string qualifiedName, String& prefix, String& localName);
    internal static RegexOptions GetRegexOptions(string optionsText);
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal class Newtonsoft.Json.Utilities.NoThrowExpressionVisitor : ExpressionVisitor {
    internal static object ErrorResult;
    private static NoThrowExpressionVisitor();
    protected virtual Expression VisitConditional(ConditionalExpression node);
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal class Newtonsoft.Json.Utilities.NoThrowGetBinderMember : GetMemberBinder {
    private GetMemberBinder _innerBinder;
    public NoThrowGetBinderMember(GetMemberBinder innerBinder);
    public virtual DynamicMetaObject FallbackGetMember(DynamicMetaObject target, DynamicMetaObject errorSuggestion);
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal class Newtonsoft.Json.Utilities.NoThrowSetBinderMember : SetMemberBinder {
    private SetMemberBinder _innerBinder;
    public NoThrowSetBinderMember(SetMemberBinder innerBinder);
    public virtual DynamicMetaObject FallbackSetMember(DynamicMetaObject target, DynamicMetaObject value, DynamicMetaObject errorSuggestion);
}
internal enum Newtonsoft.Json.Utilities.ParseResult : Enum {
    public int value__;
    public static ParseResult None;
    public static ParseResult Success;
    public static ParseResult Overflow;
    public static ParseResult Invalid;
}
internal enum Newtonsoft.Json.Utilities.ParserTimeZone : Enum {
    public int value__;
    public static ParserTimeZone Unspecified;
    public static ParserTimeZone Utc;
    public static ParserTimeZone LocalWestOfUtc;
    public static ParserTimeZone LocalEastOfUtc;
}
internal enum Newtonsoft.Json.Utilities.PrimitiveTypeCode : Enum {
    public int value__;
    public static PrimitiveTypeCode Empty;
    public static PrimitiveTypeCode Object;
    public static PrimitiveTypeCode Char;
    public static PrimitiveTypeCode CharNullable;
    public static PrimitiveTypeCode Boolean;
    public static PrimitiveTypeCode BooleanNullable;
    public static PrimitiveTypeCode SByte;
    public static PrimitiveTypeCode SByteNullable;
    public static PrimitiveTypeCode Int16;
    public static PrimitiveTypeCode Int16Nullable;
    public static PrimitiveTypeCode UInt16;
    public static PrimitiveTypeCode UInt16Nullable;
    public static PrimitiveTypeCode Int32;
    public static PrimitiveTypeCode Int32Nullable;
    public static PrimitiveTypeCode Byte;
    public static PrimitiveTypeCode ByteNullable;
    public static PrimitiveTypeCode UInt32;
    public static PrimitiveTypeCode UInt32Nullable;
    public static PrimitiveTypeCode Int64;
    public static PrimitiveTypeCode Int64Nullable;
    public static PrimitiveTypeCode UInt64;
    public static PrimitiveTypeCode UInt64Nullable;
    public static PrimitiveTypeCode Single;
    public static PrimitiveTypeCode SingleNullable;
    public static PrimitiveTypeCode Double;
    public static PrimitiveTypeCode DoubleNullable;
    public static PrimitiveTypeCode DateTime;
    public static PrimitiveTypeCode DateTimeNullable;
    public static PrimitiveTypeCode DateTimeOffset;
    public static PrimitiveTypeCode DateTimeOffsetNullable;
    public static PrimitiveTypeCode Decimal;
    public static PrimitiveTypeCode DecimalNullable;
    public static PrimitiveTypeCode Guid;
    public static PrimitiveTypeCode GuidNullable;
    public static PrimitiveTypeCode TimeSpan;
    public static PrimitiveTypeCode TimeSpanNullable;
    public static PrimitiveTypeCode BigInteger;
    public static PrimitiveTypeCode BigIntegerNullable;
    public static PrimitiveTypeCode Uri;
    public static PrimitiveTypeCode String;
    public static PrimitiveTypeCode Bytes;
    public static PrimitiveTypeCode DBNull;
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal abstract class Newtonsoft.Json.Utilities.ReflectionDelegateFactory : object {
    public Func`2<T, object> CreateGet(MemberInfo memberInfo);
    public Action`2<T, object> CreateSet(MemberInfo memberInfo);
    public abstract virtual MethodCall`2<T, object> CreateMethodCall(MethodBase method);
    public abstract virtual ObjectConstructor`1<object> CreateParameterizedConstructor(MethodBase method);
    public abstract virtual Func`1<T> CreateDefaultConstructor(Type type);
    public abstract virtual Func`2<T, object> CreateGet(PropertyInfo propertyInfo);
    public abstract virtual Func`2<T, object> CreateGet(FieldInfo fieldInfo);
    public abstract virtual Action`2<T, object> CreateSet(FieldInfo fieldInfo);
    public abstract virtual Action`2<T, object> CreateSet(PropertyInfo propertyInfo);
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal class Newtonsoft.Json.Utilities.ReflectionMember : object {
    [CompilerGeneratedAttribute]
private Type <MemberType>k__BackingField;
    [CompilerGeneratedAttribute]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Func`2<object, object> <Getter>k__BackingField;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Action`2<object, object> <Setter>k__BackingField;
    public Type MemberType { get; public set; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`2<object, object> Getter { get; public set; }
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Action`2<object, object> Setter { get; public set; }
    [CompilerGeneratedAttribute]
public Type get_MemberType();
    [CompilerGeneratedAttribute]
public void set_MemberType(Type value);
    [CompilerGeneratedAttribute]
public Func`2<object, object> get_Getter();
    [CompilerGeneratedAttribute]
public void set_Getter(Func`2<object, object> value);
    [CompilerGeneratedAttribute]
public Action`2<object, object> get_Setter();
    [CompilerGeneratedAttribute]
public void set_Setter(Action`2<object, object> value);
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal class Newtonsoft.Json.Utilities.ReflectionObject : object {
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ObjectConstructor`1<object> <Creator>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, ReflectionMember> <Members>k__BackingField;
    [<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ObjectConstructor`1<object> Creator { get; }
    public IDictionary`2<string, ReflectionMember> Members { get; }
    private ReflectionObject(ObjectConstructor`1<object> creator);
    [CompilerGeneratedAttribute]
public ObjectConstructor`1<object> get_Creator();
    [CompilerGeneratedAttribute]
public IDictionary`2<string, ReflectionMember> get_Members();
    public object GetValue(object target, string member);
    public void SetValue(object target, string member, object value);
    public Type GetType(string member);
    public static ReflectionObject Create(Type t, String[] memberNames);
    public static ReflectionObject Create(Type t, MethodBase creator, String[] memberNames);
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[ExtensionAttribute]
internal static class Newtonsoft.Json.Utilities.ReflectionUtils : object {
    public static Type[] EmptyTypes;
    private static ReflectionUtils();
    [ExtensionAttribute]
public static bool IsVirtual(PropertyInfo propertyInfo);
    [ExtensionAttribute]
public static MethodInfo GetBaseDefinition(PropertyInfo propertyInfo);
    public static bool IsPublic(PropertyInfo property);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public static Type GetObjectType(object v);
    public static string GetTypeName(Type t, TypeNameAssemblyFormatHandling assemblyFormat, ISerializationBinder binder);
    private static string GetFullyQualifiedTypeName(Type t, ISerializationBinder binder);
    private static string RemoveAssemblyDetails(string fullyQualifiedTypeName);
    public static bool HasDefaultConstructor(Type t, bool nonPublic);
    public static ConstructorInfo GetDefaultConstructor(Type t);
    public static ConstructorInfo GetDefaultConstructor(Type t, bool nonPublic);
    public static bool IsNullable(Type t);
    public static bool IsNullableType(Type t);
    public static Type EnsureNotNullableType(Type t);
    public static Type EnsureNotByRefType(Type t);
    public static bool IsGenericDefinition(Type type, Type genericInterfaceDefinition);
    public static bool ImplementsGenericDefinition(Type type, Type genericInterfaceDefinition);
    public static bool ImplementsGenericDefinition(Type type, Type genericInterfaceDefinition, Type& implementingType);
    public static bool InheritsGenericDefinition(Type type, Type genericClassDefinition);
    public static bool InheritsGenericDefinition(Type type, Type genericClassDefinition, Type& implementingType);
    private static bool InheritsGenericDefinitionInternal(Type currentType, Type genericClassDefinition, Type& implementingType);
    public static Type GetCollectionItemType(Type type);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public static void GetDictionaryKeyValueTypes(Type dictionaryType, Type& keyType, Type& valueType);
    public static Type GetMemberUnderlyingType(MemberInfo member);
    public static bool IsByRefLikeType(Type type);
    public static bool IsIndexedProperty(PropertyInfo property);
    public static object GetMemberValue(MemberInfo member, object target);
    public static void SetMemberValue(MemberInfo member, object target, object value);
    public static bool CanReadMemberValue(MemberInfo member, bool nonPublic);
    public static bool CanSetMemberValue(MemberInfo member, bool nonPublic, bool canSetReadOnly);
    public static List`1<MemberInfo> GetFieldsAndProperties(Type type, BindingFlags bindingAttr);
    private static bool IsOverridenGenericMember(MemberInfo memberInfo, BindingFlags bindingAttr);
    public static T GetAttribute(object attributeProvider);
    public static T GetAttribute(object attributeProvider, bool inherit);
    public static T[] GetAttributes(object attributeProvider, bool inherit);
    public static Attribute[] GetAttributes(object attributeProvider, Type attributeType, bool inherit);
    public static StructMultiKey`2<string, string> SplitFullyQualifiedTypeName(string fullyQualifiedTypeName);
    private static Nullable`1<int> GetAssemblyDelimiterIndex(string fullyQualifiedTypeName);
    public static MemberInfo GetMemberInfoFromType(Type targetType, MemberInfo memberInfo);
    public static IEnumerable`1<FieldInfo> GetFields(Type targetType, BindingFlags bindingAttr);
    private static void GetChildPrivateFields(IList`1<MemberInfo> initialFields, Type targetType, BindingFlags bindingAttr);
    public static IEnumerable`1<PropertyInfo> GetProperties(Type targetType, BindingFlags bindingAttr);
    [ExtensionAttribute]
public static BindingFlags RemoveFlag(BindingFlags bindingAttr, BindingFlags flag);
    private static void GetChildPrivateProperties(IList`1<PropertyInfo> initialProperties, Type targetType, BindingFlags bindingAttr);
    public static bool IsMethodOverridden(Type currentType, Type methodDeclaringType, string method);
    public static object GetDefaultValue(Type type);
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
internal class Newtonsoft.Json.Utilities.StringBuffer : ValueType {
    private Char[] _buffer;
    private int _position;
    public int Position { get; public set; }
    public bool IsEmpty { get; }
    public Char[] InternalBuffer { get; }
    public StringBuffer(IArrayPool`1<char> bufferPool, int initalSize);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
private StringBuffer(Char[] buffer);
    public int get_Position();
    public void set_Position(int value);
    public bool get_IsEmpty();
    public void Append(IArrayPool`1<char> bufferPool, char value);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public void Append(IArrayPool`1<char> bufferPool, Char[] buffer, int startIndex, int count);
    public void Clear(IArrayPool`1<char> bufferPool);
    private void EnsureSize(IArrayPool`1<char> bufferPool, int appendLength);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public virtual string ToString();
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public string ToString(int start, int length);
    public Char[] get_InternalBuffer();
}
[<f87e9192-349b-4fe9-9283-65da525832f1>IsReadOnlyAttribute]
[DefaultMemberAttribute("Item")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal class Newtonsoft.Json.Utilities.StringReference : ValueType {
    private Char[] _chars;
    private int _startIndex;
    private int _length;
    public char Item { get; }
    public Char[] Chars { get; }
    public int StartIndex { get; }
    public int Length { get; }
    public StringReference(Char[] chars, int startIndex, int length);
    public char get_Item(int i);
    public Char[] get_Chars();
    public int get_StartIndex();
    public int get_Length();
    public virtual string ToString();
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[ExtensionAttribute]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal static class Newtonsoft.Json.Utilities.StringReferenceExtensions : object {
    [ExtensionAttribute]
public static int IndexOf(StringReference s, char c, int startIndex, int length);
    [ExtensionAttribute]
public static bool StartsWith(StringReference s, string text);
    [ExtensionAttribute]
public static bool EndsWith(StringReference s, string text);
}
[ExtensionAttribute]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal static class Newtonsoft.Json.Utilities.StringUtils : object {
    public static string CarriageReturnLineFeed;
    public static string Empty;
    public static char CarriageReturn;
    public static char LineFeed;
    public static char Tab;
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
public static bool IsNullOrEmpty(string value);
    [ExtensionAttribute]
public static string FormatWith(string format, IFormatProvider provider, object arg0);
    [ExtensionAttribute]
public static string FormatWith(string format, IFormatProvider provider, object arg0, object arg1);
    [ExtensionAttribute]
public static string FormatWith(string format, IFormatProvider provider, object arg0, object arg1, object arg2);
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("2")]
[ExtensionAttribute]
public static string FormatWith(string format, IFormatProvider provider, object arg0, object arg1, object arg2, object arg3);
    [ExtensionAttribute]
private static string FormatWith(string format, IFormatProvider provider, Object[] args);
    public static bool IsWhiteSpace(string s);
    public static StringWriter CreateStringWriter(int capacity);
    public static void ToCharAsUnicode(char c, Char[] buffer);
    [ExtensionAttribute]
public static TSource ForgivingCaseSensitiveFind(IEnumerable`1<TSource> source, Func`2<TSource, string> valueSelector, string testValue);
    public static string ToCamelCase(string s);
    private static char ToLower(char c);
    public static string ToSnakeCase(string s);
    public static string ToKebabCase(string s);
    private static string ToSeparatedCase(string s, char separator);
    public static bool IsHighSurrogate(char c);
    public static bool IsLowSurrogate(char c);
    [ExtensionAttribute]
public static bool StartsWith(string source, char value);
    [ExtensionAttribute]
public static bool EndsWith(string source, char value);
    [ExtensionAttribute]
public static string Trim(string s, int start, int length);
}
[<f87e9192-349b-4fe9-9283-65da525832f1>IsReadOnlyAttribute]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal class Newtonsoft.Json.Utilities.StructMultiKey`2 : ValueType {
    public T1 Value1;
    public T2 Value2;
    public StructMultiKey`2(T1 v1, T2 v2);
    public virtual int GetHashCode();
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(StructMultiKey`2<T1, T2> other);
}
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
internal class Newtonsoft.Json.Utilities.ThreadSafeStore`2 : object {
    private ConcurrentDictionary`2<TKey, TValue> _concurrentStore;
    private Func`2<TKey, TValue> _creator;
    public ThreadSafeStore`2(Func`2<TKey, TValue> creator);
    public TValue Get(TKey key);
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[ExtensionAttribute]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal static class Newtonsoft.Json.Utilities.TypeExtensions : object {
    [ExtensionAttribute]
public static MethodInfo Method(Delegate d);
    [ExtensionAttribute]
public static MemberTypes MemberType(MemberInfo memberInfo);
    [ExtensionAttribute]
public static bool ContainsGenericParameters(Type type);
    [ExtensionAttribute]
public static bool IsInterface(Type type);
    [ExtensionAttribute]
public static bool IsGenericType(Type type);
    [ExtensionAttribute]
public static bool IsGenericTypeDefinition(Type type);
    [ExtensionAttribute]
public static Type BaseType(Type type);
    [ExtensionAttribute]
public static Assembly Assembly(Type type);
    [ExtensionAttribute]
public static bool IsEnum(Type type);
    [ExtensionAttribute]
public static bool IsClass(Type type);
    [ExtensionAttribute]
public static bool IsSealed(Type type);
    [ExtensionAttribute]
public static bool IsAbstract(Type type);
    [ExtensionAttribute]
public static bool IsVisible(Type type);
    [ExtensionAttribute]
public static bool IsValueType(Type type);
    [ExtensionAttribute]
public static bool IsPrimitive(Type type);
    [ExtensionAttribute]
public static bool AssignableToTypeName(Type type, string fullTypeName, bool searchInterfaces, Type& match);
    [ExtensionAttribute]
public static bool AssignableToTypeName(Type type, string fullTypeName, bool searchInterfaces);
    [ExtensionAttribute]
public static bool ImplementInterface(Type type, Type interfaceType);
}
[<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute("0")]
[<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
internal class Newtonsoft.Json.Utilities.TypeInformation : object {
    [CompilerGeneratedAttribute]
private Type <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private PrimitiveTypeCode <TypeCode>k__BackingField;
    public Type Type { get; }
    public PrimitiveTypeCode TypeCode { get; }
    public TypeInformation(Type type, PrimitiveTypeCode typeCode);
    [CompilerGeneratedAttribute]
public Type get_Type();
    [CompilerGeneratedAttribute]
public PrimitiveTypeCode get_TypeCode();
}
internal static class Newtonsoft.Json.Utilities.ValidationUtils : object {
    [<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute("1")]
public static void ArgumentNotNull(object value, string parameterName);
}
internal enum Newtonsoft.Json.WriteState : Enum {
    public int value__;
    public static WriteState Error;
    public static WriteState Closed;
    public static WriteState Object;
    public static WriteState Array;
    public static WriteState Constructor;
    public static WriteState Property;
    public static WriteState Start;
}
[MutableAttribute]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal class NodaTime.AmbiguousTimeException : ArgumentOutOfRangeException {
    [CompilerGeneratedAttribute]
private ZonedDateTime <EarlierMapping>k__BackingField;
    [CompilerGeneratedAttribute]
private ZonedDateTime <LaterMapping>k__BackingField;
    internal LocalDateTime LocalDateTime { get; }
    public DateTimeZone Zone { get; }
    public ZonedDateTime EarlierMapping { get; }
    public ZonedDateTime LaterMapping { get; }
    public AmbiguousTimeException(ZonedDateTime earlierMapping, ZonedDateTime laterMapping);
    internal LocalDateTime get_LocalDateTime();
    public DateTimeZone get_Zone();
    [CompilerGeneratedAttribute]
public ZonedDateTime get_EarlierMapping();
    [CompilerGeneratedAttribute]
public ZonedDateTime get_LaterMapping();
}
[AttributeUsageAttribute("12")]
internal class NodaTime.Annotations.ImmutableAttribute : Attribute {
}
[AttributeUsageAttribute("12")]
internal class NodaTime.Annotations.MutableAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
internal class NodaTime.Annotations.SpecialNullHandlingAttribute : Attribute {
}
[AttributeUsageAttribute("32767")]
internal class NodaTime.Annotations.TestExemptionAttribute : Attribute {
    [CompilerGeneratedAttribute]
private TestExemptionCategory <Category>k__BackingField;
    internal TestExemptionCategory Category { get; }
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
internal TestExemptionAttribute(TestExemptionCategory category, string message);
    [CompilerGeneratedAttribute]
internal TestExemptionCategory get_Category();
}
internal enum NodaTime.Annotations.TestExemptionCategory : Enum {
    public int value__;
    public static TestExemptionCategory ConversionName;
}
[AttributeUsageAttribute("2048")]
internal class NodaTime.Annotations.TrustedAttribute : Attribute {
}
[AttributeUsageAttribute("228")]
internal class NodaTime.Annotations.VisibleForTestingAttribute : Attribute {
}
[TypeConverterAttribute("NodaTime.Text.AnnualDateTypeConverter")]
[XmlSchemaProviderAttribute("AddSchema")]
[<e6d5c873-dec8-4703-a863-d4c8912e7d9b>IsReadOnlyAttribute]
internal class NodaTime.AnnualDate : ValueType {
    private YearMonthDay value;
    public int Month { get; }
    public int Day { get; }
    public AnnualDate(int month, int day);
    public int get_Month();
    public int get_Day();
    [PureAttribute]
public LocalDate InYear(int year);
    [PureAttribute]
public bool IsValidYear(int year);
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
public virtual string ToString();
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
public sealed virtual string ToString(string patternText, IFormatProvider formatProvider);
    public sealed virtual bool Equals(AnnualDate other);
    public sealed virtual int CompareTo(AnnualDate other);
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
public sealed virtual int CompareTo(object obj);
    public static bool op_Equality(AnnualDate lhs, AnnualDate rhs);
    public static bool op_Inequality(AnnualDate lhs, AnnualDate rhs);
    public static bool op_LessThan(AnnualDate lhs, AnnualDate rhs);
    public static bool op_LessThanOrEqual(AnnualDate lhs, AnnualDate rhs);
    public static bool op_GreaterThan(AnnualDate lhs, AnnualDate rhs);
    public static bool op_GreaterThanOrEqual(AnnualDate lhs, AnnualDate rhs);
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
public static XmlQualifiedName AddSchema(XmlSchemaSet xmlSchemaSet);
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
private sealed virtual override XmlSchema System.Xml.Serialization.IXmlSerializable.GetSchema();
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
private sealed virtual override void System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader reader);
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
private sealed virtual override void System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter writer);
}
internal enum NodaTime.CalendarOrdinal : Enum {
    public int value__;
    public static CalendarOrdinal Iso;
    public static CalendarOrdinal Gregorian;
    public static CalendarOrdinal Julian;
    public static CalendarOrdinal Coptic;
    public static CalendarOrdinal HebrewCivil;
    public static CalendarOrdinal HebrewScriptural;
    public static CalendarOrdinal PersianSimple;
    public static CalendarOrdinal PersianArithmetic;
    public static CalendarOrdinal PersianAstronomical;
    public static CalendarOrdinal IslamicAstronomicalBase15;
    public static CalendarOrdinal IslamicAstronomicalBase16;
    public static CalendarOrdinal IslamicAstronomicalIndian;
    public static CalendarOrdinal IslamicAstronomicalHabashAlHasib;
    public static CalendarOrdinal IslamicCivilBase15;
    public static CalendarOrdinal IslamicCivilBase16;
    public static CalendarOrdinal IslamicCivilIndian;
    public static CalendarOrdinal IslamicCivilHabashAlHasib;
    public static CalendarOrdinal UmAlQura;
    public static CalendarOrdinal Badi;
    public static CalendarOrdinal Size;
}
internal class NodaTime.Calendars.BadiYearMonthDayCalculator : YearMonthDayCalculator {
    private static int AverageDaysPer10Years;
    private static int DaysInAyyamiHaInLeapYear;
    private static int DaysInAyyamiHaInNormalYear;
    internal static int DaysInMonth;
    private static int FirstYearOfStandardizedCalendar;
    private static int GregorianYearOfFirstBadiYear;
    internal static int Month18;
    private static int Month19;
    private static int MonthsInYear;
    private static int UnixEpochDayAtStartOfYear1;
    private static int BadiMaxYear;
    private static int BadiMinYear;
    [<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("1")]
private static Byte[] YearInfoRaw;
    private static BadiYearMonthDayCalculator();
    internal static int GetDaysInAyyamiHa(int year);
    private static int GetNawRuzDayInMarch(int year);
    protected virtual int CalculateStartOfYearDays(int year);
    protected virtual int GetDaysFromStartOfYearToStartOfMonth(int year, int month);
    internal virtual YearMonthDay AddMonths(YearMonthDay start, int months);
    internal virtual int GetDaysInMonth(int year, int month);
    internal virtual int GetDaysInYear(int year);
    internal virtual int GetDaysSinceEpoch(YearMonthDay target);
    internal virtual int GetMonthsInYear(int year);
    internal virtual YearMonthDay GetYearMonthDay(int year, int dayOfYear);
    internal bool IsInAyyamiHa(YearMonthDay ymd);
    internal virtual bool IsLeapYear(int year);
    internal virtual int MonthsBetween(YearMonthDay start, YearMonthDay end);
    internal virtual YearMonthDay SetYear(YearMonthDay start, int newYear);
    internal virtual void ValidateYearMonthDay(int year, int month, int day);
}
internal class NodaTime.Calendars.CopticYearMonthDayCalculator : FixedMonthYearMonthDayCalculator {
    protected virtual int CalculateStartOfYearDays(int year);
}
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[ImmutableAttribute]
internal class NodaTime.Calendars.Era : object {
    [CompilerGeneratedAttribute]
private static Era <Common>k__BackingField;
    [CompilerGeneratedAttribute]
private static Era <BeforeCommon>k__BackingField;
    [CompilerGeneratedAttribute]
private static Era <AnnoMartyrum>k__BackingField;
    [CompilerGeneratedAttribute]
private static Era <AnnoHegirae>k__BackingField;
    [CompilerGeneratedAttribute]
private static Era <AnnoMundi>k__BackingField;
    [CompilerGeneratedAttribute]
private static Era <AnnoPersico>k__BackingField;
    [CompilerGeneratedAttribute]
private static Era <Bahai>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResourceIdentifier>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public static Era Common { get; }
    public static Era BeforeCommon { get; }
    public static Era AnnoMartyrum { get; }
    public static Era AnnoHegirae { get; }
    public static Era AnnoMundi { get; }
    public static Era AnnoPersico { get; }
    public static Era Bahai { get; }
    internal string ResourceIdentifier { get; }
    public string Name { get; }
    internal Era(string name, string resourceIdentifier);
    private static Era();
    [CompilerGeneratedAttribute]
public static Era get_Common();
    [CompilerGeneratedAttribute]
public static Era get_BeforeCommon();
    [CompilerGeneratedAttribute]
public static Era get_AnnoMartyrum();
    [CompilerGeneratedAttribute]
public static Era get_AnnoHegirae();
    [CompilerGeneratedAttribute]
public static Era get_AnnoMundi();
    [CompilerGeneratedAttribute]
public static Era get_AnnoPersico();
    [CompilerGeneratedAttribute]
public static Era get_Bahai();
    [CompilerGeneratedAttribute]
internal string get_ResourceIdentifier();
    [CompilerGeneratedAttribute]
public string get_Name();
    public virtual string ToString();
}
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal abstract class NodaTime.Calendars.EraCalculator : object {
    [CompilerGeneratedAttribute]
private ReadOnlyCollection`1<Era> <Eras>k__BackingField;
    internal ReadOnlyCollection`1<Era> Eras { get; }
    protected EraCalculator(Era[] eras);
    [CompilerGeneratedAttribute]
internal ReadOnlyCollection`1<Era> get_Eras();
    internal abstract virtual int GetMinYearOfEra(Era era);
    internal abstract virtual int GetMaxYearOfEra(Era era);
    internal abstract virtual Era GetEra(int absoluteYear);
    internal abstract virtual int GetYearOfEra(int absoluteYear);
    internal abstract virtual int GetAbsoluteYear(int yearOfEra, Era era);
}
internal abstract class NodaTime.Calendars.FixedMonthYearMonthDayCalculator : RegularYearMonthDayCalculator {
    private static int DaysInMonth;
    private static int AverageDaysPer10Years;
    protected FixedMonthYearMonthDayCalculator(int minYear, int maxYear, int daysAtStartOfYear1);
    internal virtual int GetDaysSinceEpoch(YearMonthDay yearMonthDay);
    protected virtual int GetDaysFromStartOfYearToStartOfMonth(int year, int month);
    internal virtual bool IsLeapYear(int year);
    internal virtual int GetDaysInYear(int year);
    internal virtual int GetDaysInMonth(int year, int month);
    internal virtual YearMonthDay GetYearMonthDay(int year, int dayOfYear);
}
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal class NodaTime.Calendars.GJEraCalculator : EraCalculator {
    private int maxYearOfBc;
    private int maxYearOfAd;
    internal GJEraCalculator(YearMonthDayCalculator ymdCalculator);
    private void ValidateEra(Era era);
    internal virtual int GetAbsoluteYear(int yearOfEra, Era era);
    internal virtual int GetYearOfEra(int absoluteYear);
    internal virtual Era GetEra(int absoluteYear);
    internal virtual int GetMinYearOfEra(Era era);
    internal virtual int GetMaxYearOfEra(Era era);
}
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
internal abstract class NodaTime.Calendars.GJYearMonthDayCalculator : RegularYearMonthDayCalculator {
    protected static Int32[] MinDaysPerMonth;
    protected static Int32[] MaxDaysPerMonth;
    private static Int32[] MinTotalDaysByMonth;
    private static Int32[] MaxTotalDaysByMonth;
    private static GJYearMonthDayCalculator();
    protected GJYearMonthDayCalculator(int minYear, int maxYear, int averageDaysPer10Years, int daysAtStartOfYear1);
    internal virtual YearMonthDay GetYearMonthDay(int year, int d);
    internal virtual int GetDaysInYear(int year);
    internal sealed virtual int GetDaysInMonth(int year, int month);
    protected virtual int GetDaysFromStartOfYearToStartOfMonth(int year, int month);
}
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
internal class NodaTime.Calendars.GregorianYearMonthDayCalculator : GJYearMonthDayCalculator {
    internal static int MinGregorianYear;
    internal static int MaxGregorianYear;
    private static int FirstOptimizedYear;
    private static int LastOptimizedYear;
    private static int FirstOptimizedDay;
    private static int LastOptimizedDay;
    private static Int32[] MonthStartDays;
    private static Int32[] YearStartDays;
    private static int DaysFrom0000To1970;
    private static int AverageDaysPer10Years;
    private static GregorianYearMonthDayCalculator();
    internal static YearMonthDayCalendar GetGregorianYearMonthDayCalendarFromDaysSinceEpoch(int daysSinceEpoch);
    internal virtual int GetStartOfYearInDays(int year);
    internal virtual int GetDaysSinceEpoch(YearMonthDay yearMonthDay);
    internal virtual void ValidateYearMonthDay(int year, int month, int day);
    internal static void ValidateGregorianYearMonthDay(int year, int month, int day);
    protected virtual int CalculateStartOfYearDays(int year);
    internal virtual int GetDaysInYear(int year);
    internal virtual bool IsLeapYear(int year);
    private static bool IsGregorianLeapYear(int year);
}
internal static class NodaTime.Calendars.HebrewMonthConverter : object {
    internal static int CivilToScriptural(int year, int month);
    internal static int ScripturalToCivil(int year, int month);
}
internal enum NodaTime.Calendars.HebrewMonthNumbering : Enum {
    public int value__;
    public static HebrewMonthNumbering Civil;
    public static HebrewMonthNumbering Scriptural;
}
internal static class NodaTime.Calendars.HebrewScripturalCalculator : object {
    internal static int MaxYear;
    internal static int MinYear;
    private static int IsHeshvanLongCacheBit;
    private static int IsKislevShortCacheBit;
    private static int ElapsedDaysCacheShift;
    [<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("1")]
private static YearStartCacheEntry[] YearCache;
    private static HebrewScripturalCalculator();
    internal static bool IsLeapYear(int year);
    internal static YearMonthDay GetYearMonthDay(int year, int dayOfYear);
    internal static int GetDaysFromStartOfYearToStartOfMonth(int year, int month);
    internal static int DaysInMonth(int year, int month);
    private static bool IsHeshvanLong(int year);
    private static bool IsKislevShort(int year);
    internal static int ElapsedDays(int year);
    private static int ElapsedDaysNoCache(int year);
    private static int GetOrPopulateCache(int year);
    private static int ComputeCacheEntry(int year);
    internal static int DaysInYear(int year);
}
internal class NodaTime.Calendars.HebrewYearMonthDayCalculator : YearMonthDayCalculator {
    private static int UnixEpochDayAtStartOfYear1;
    private static int MonthsPerLeapCycle;
    private static int YearsPerLeapCycle;
    private HebrewMonthNumbering monthNumbering;
    internal HebrewYearMonthDayCalculator(HebrewMonthNumbering monthNumbering);
    private int CalendarToCivilMonth(int year, int month);
    private int CalendarToScripturalMonth(int year, int month);
    private int CivilToCalendarMonth(int year, int month);
    private int ScripturalToCalendarMonth(int year, int month);
    internal virtual bool IsLeapYear(int year);
    protected virtual int GetDaysFromStartOfYearToStartOfMonth(int year, int month);
    protected virtual int CalculateStartOfYearDays(int year);
    internal virtual YearMonthDay GetYearMonthDay(int year, int dayOfYear);
    internal virtual int GetDaysInYear(int year);
    internal virtual int GetMonthsInYear(int year);
    internal virtual YearMonthDay SetYear(YearMonthDay yearMonthDay, int year);
    internal virtual int GetDaysInMonth(int year, int month);
    internal virtual YearMonthDay AddMonths(YearMonthDay yearMonthDay, int months);
    internal virtual int MonthsBetween(YearMonthDay start, YearMonthDay end);
    public virtual int Compare(YearMonthDay lhs, YearMonthDay rhs);
}
internal enum NodaTime.Calendars.IslamicEpoch : Enum {
    public int value__;
    public static IslamicEpoch Astronomical;
    public static IslamicEpoch Civil;
}
internal enum NodaTime.Calendars.IslamicLeapYearPattern : Enum {
    public int value__;
    public static IslamicLeapYearPattern Base15;
    public static IslamicLeapYearPattern Base16;
    public static IslamicLeapYearPattern Indian;
    public static IslamicLeapYearPattern HabashAlHasib;
}
internal class NodaTime.Calendars.IslamicYearMonthDayCalculator : RegularYearMonthDayCalculator {
    private static int MonthPairLength;
    private static int LongMonthLength;
    private static int ShortMonthLength;
    private static int AverageDaysPer10Years;
    private static int DaysPerNonLeapYear;
    private static int DaysPerLeapYear;
    private static int DaysAtCivilEpoch;
    private static int DaysAtAstronomicalEpoch;
    private static int LeapYearCycleLength;
    private static int DaysPerLeapCycle;
    private int leapYearPatternBits;
    [<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("1")]
private static Int32[] TotalDaysByMonth;
    private static IslamicYearMonthDayCalculator();
    internal IslamicYearMonthDayCalculator(IslamicLeapYearPattern leapYearPattern, IslamicEpoch epoch);
    protected virtual int GetDaysFromStartOfYearToStartOfMonth(int year, int month);
    internal virtual YearMonthDay GetYearMonthDay(int year, int dayOfYear);
    internal virtual bool IsLeapYear(int year);
    internal virtual int GetDaysInYear(int year);
    internal virtual int GetDaysInMonth(int year, int month);
    protected virtual int CalculateStartOfYearDays(int year);
    private static int GetLeapYearPatternBits(IslamicLeapYearPattern leapYearPattern);
    private static int GetYear1Days(IslamicEpoch epoch);
}
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal interface NodaTime.Calendars.IWeekYearRule {
    public abstract virtual LocalDate GetLocalDate(int weekYear, int weekOfWeekYear, IsoDayOfWeek dayOfWeek, CalendarSystem calendar);
    public abstract virtual int GetWeekYear(LocalDate date);
    public abstract virtual int GetWeekOfWeekYear(LocalDate date);
    public abstract virtual int GetWeeksInWeekYear(int weekYear, CalendarSystem calendar);
}
internal class NodaTime.Calendars.JulianYearMonthDayCalculator : GJYearMonthDayCalculator {
    private static int AverageDaysPer10JulianYears;
    internal virtual bool IsLeapYear(int year);
    protected virtual int CalculateStartOfYearDays(int year);
}
internal abstract class NodaTime.Calendars.PersianYearMonthDayCalculator : RegularYearMonthDayCalculator {
    private static int DaysPerNonLeapYear;
    private static int DaysPerLeapYear;
    private static int AverageDaysPer10Years;
    internal static int MaxPersianYear;
    [<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("1")]
private static Int32[] TotalDaysByMonth;
    [<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("1")]
private Int32[] startOfYearInDaysCache;
    private static PersianYearMonthDayCalculator();
    private PersianYearMonthDayCalculator(int daysAtStartOfYear1);
    protected sealed virtual int GetDaysFromStartOfYearToStartOfMonth(int year, int month);
    internal sealed virtual int GetStartOfYearInDays(int year);
    [ExcludeFromCodeCoverageAttribute]
protected sealed virtual int CalculateStartOfYearDays(int year);
    internal sealed virtual YearMonthDay GetYearMonthDay(int year, int dayOfYear);
    internal sealed virtual int GetDaysInMonth(int year, int month);
    internal sealed virtual int GetDaysInYear(int year);
}
internal abstract class NodaTime.Calendars.RegularYearMonthDayCalculator : YearMonthDayCalculator {
    private int monthsInYear;
    protected RegularYearMonthDayCalculator(int minYear, int maxYear, int monthsInYear, int averageDaysPer10Years, int daysAtStartOfYear1);
    internal virtual int GetMonthsInYear(int year);
    internal virtual YearMonthDay SetYear(YearMonthDay yearMonthDay, int year);
    internal virtual YearMonthDay AddMonths(YearMonthDay yearMonthDay, int months);
    internal virtual int MonthsBetween(YearMonthDay start, YearMonthDay end);
}
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[ImmutableAttribute]
internal class NodaTime.Calendars.SimpleWeekYearRule : object {
    private int minDaysInFirstWeek;
    private IsoDayOfWeek firstDayOfWeek;
    private bool irregularWeeks;
    internal SimpleWeekYearRule(int minDaysInFirstWeek, IsoDayOfWeek firstDayOfWeek, bool irregularWeeks);
    public sealed virtual LocalDate GetLocalDate(int weekYear, int weekOfWeekYear, IsoDayOfWeek dayOfWeek, CalendarSystem calendar);
    public sealed virtual int GetWeekOfWeekYear(LocalDate date);
    public sealed virtual int GetWeeksInWeekYear(int weekYear, CalendarSystem calendar);
    public sealed virtual int GetWeekYear(LocalDate date);
    private void ValidateWeekYear(int weekYear, CalendarSystem calendar);
    private int GetWeekYearDaysSinceEpoch(YearMonthDayCalculator yearMonthDayCalculator, int weekYear);
}
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
internal class NodaTime.Calendars.SingleEraCalculator : EraCalculator {
    private Era era;
    private int minYear;
    private int maxYear;
    internal SingleEraCalculator(Era era, YearMonthDayCalculator ymdCalculator);
    private void ValidateEra(Era era);
    internal virtual int GetAbsoluteYear(int yearOfEra, Era era);
    internal virtual int GetYearOfEra(int absoluteYear);
    internal virtual int GetMinYearOfEra(Era era);
    internal virtual int GetMaxYearOfEra(Era era);
    internal virtual Era GetEra(int absoluteYear);
}
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal class NodaTime.Calendars.UmAlQuraYearMonthDayCalculator : RegularYearMonthDayCalculator {
    private static int AverageDaysPer10Years;
    private static int ComputedMinYear;
    private static int ComputedMaxYear;
    private static int ComputedDaysAtStartOfMinYear;
    private static string GeneratedData;
    private static int ComputedDaysAtStartOfYear1;
    private static Int32[] YearLengths;
    private static UInt16[] MonthLengths;
    private static Int32[] YearStartDays;
    private static UmAlQuraYearMonthDayCalculator();
    internal virtual int GetStartOfYearInDays(int year);
    [ExcludeFromCodeCoverageAttribute]
protected virtual int CalculateStartOfYearDays(int year);
    protected virtual int GetDaysFromStartOfYearToStartOfMonth(int year, int month);
    internal virtual int GetDaysInMonth(int year, int month);
    internal virtual int GetDaysInYear(int year);
    internal virtual YearMonthDay GetYearMonthDay(int year, int dayOfYear);
    internal virtual bool IsLeapYear(int year);
}
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[ExtensionAttribute]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
internal static class NodaTime.Calendars.WeekYearRuleExtensions : object {
    [ExtensionAttribute]
public static LocalDate GetLocalDate(IWeekYearRule rule, int weekYear, int weekOfWeekYear, IsoDayOfWeek dayOfWeek);
    [ExtensionAttribute]
public static int GetWeeksInWeekYear(IWeekYearRule rule, int weekYear);
}
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
internal static class NodaTime.Calendars.WeekYearRules : object {
    [CompilerGeneratedAttribute]
private static IWeekYearRule <Iso>k__BackingField;
    public static IWeekYearRule Iso { get; }
    private static WeekYearRules();
    [CompilerGeneratedAttribute]
public static IWeekYearRule get_Iso();
    public static IWeekYearRule ForMinDaysInFirstWeek(int minDaysInFirstWeek);
    public static IWeekYearRule ForMinDaysInFirstWeek(int minDaysInFirstWeek, IsoDayOfWeek firstDayOfWeek);
    public static IWeekYearRule FromCalendarWeekRule(CalendarWeekRule calendarWeekRule, DayOfWeek firstDayOfWeek);
}
internal abstract class NodaTime.Calendars.YearMonthDayCalculator : object {
    [<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("1")]
private YearStartCacheEntry[] yearCache;
    [CompilerGeneratedAttribute]
private int <MinYear>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaxYear>k__BackingField;
    [CompilerGeneratedAttribute]
private int <DaysAtStartOfYear1>k__BackingField;
    private int averageDaysPer10Years;
    internal int MinYear { get; }
    internal int MaxYear { get; }
    [VisibleForTestingAttribute]
internal int DaysAtStartOfYear1 { get; }
    protected YearMonthDayCalculator(int minYear, int maxYear, int averageDaysPer10Years, int daysAtStartOfYear1);
    [CompilerGeneratedAttribute]
internal int get_MinYear();
    [CompilerGeneratedAttribute]
internal int get_MaxYear();
    [CompilerGeneratedAttribute]
internal int get_DaysAtStartOfYear1();
    protected abstract virtual int GetDaysFromStartOfYearToStartOfMonth(int year, int month);
    protected abstract virtual int CalculateStartOfYearDays(int year);
    internal abstract virtual int GetMonthsInYear(int year);
    internal abstract virtual int GetDaysInMonth(int year, int month);
    internal abstract virtual bool IsLeapYear(int year);
    internal abstract virtual YearMonthDay AddMonths(YearMonthDay yearMonthDay, int months);
    internal abstract virtual YearMonthDay GetYearMonthDay(int year, int dayOfYear);
    internal abstract virtual int GetDaysInYear(int year);
    internal abstract virtual int MonthsBetween(YearMonthDay start, YearMonthDay end);
    internal abstract virtual YearMonthDay SetYear(YearMonthDay yearMonthDay, int year);
    internal virtual int GetDaysSinceEpoch(YearMonthDay yearMonthDay);
    internal virtual int GetStartOfYearInDays(int year);
    public virtual int Compare(YearMonthDay lhs, YearMonthDay rhs);
    internal virtual void ValidateYearMonthDay(int year, int month, int day);
    internal int GetDayOfYear(YearMonthDay yearMonthDay);
    internal YearMonthDay GetYearMonthDay(int daysSinceEpoch);
    [VisibleForTestingAttribute]
internal int GetYear(int daysSinceEpoch, Int32& zeroBasedDayOfYear);
}
[<e6d5c873-dec8-4703-a863-d4c8912e7d9b>IsReadOnlyAttribute]
internal class NodaTime.Calendars.YearStartCacheEntry : ValueType {
    private static int CacheIndexBits;
    private static int CacheIndexMask;
    private static int EntryValidationBits;
    private static int EntryValidationMask;
    private static int CacheSize;
    internal static int InvalidEntryYear;
    private static YearStartCacheEntry Invalid;
    private int value;
    internal int StartOfYearDays { get; }
    internal YearStartCacheEntry(int year, int days);
    private static YearStartCacheEntry();
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal static YearStartCacheEntry[] CreateCache();
    private static int GetValidator(int year);
    internal static int GetCacheIndex(int year);
    internal bool IsValidForYear(int year);
    internal int get_StartOfYearDays();
}
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[ImmutableAttribute]
internal class NodaTime.CalendarSystem : object {
    private static string GregorianName;
    private static string GregorianId;
    private static string IsoName;
    private static string IsoId;
    private static string CopticName;
    private static string CopticId;
    private static string BadiName;
    private static string BadiId;
    private static string JulianName;
    private static string JulianId;
    private static string IslamicName;
    private static string IslamicIdBase;
    private static string PersianName;
    private static string PersianIdBase;
    private static string PersianSimpleId;
    private static string PersianAstronomicalId;
    private static string PersianArithmeticId;
    private static string HebrewName;
    private static string HebrewIdBase;
    private static string HebrewCivilId;
    private static string HebrewScripturalId;
    private static string UmAlQuraName;
    private static string UmAlQuraId;
    private static CalendarSystem[] CalendarByOrdinal;
    private static Dictionary`2<string, Func`1<CalendarSystem>> IdToFactoryMap;
    [CompilerGeneratedAttribute]
private static CalendarSystem <Iso>k__BackingField;
    private EraCalculator eraCalculator;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MinYear>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaxYear>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MinDays>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaxDays>k__BackingField;
    [CompilerGeneratedAttribute]
private CalendarOrdinal <Ordinal>k__BackingField;
    [CompilerGeneratedAttribute]
private YearMonthDayCalculator <YearMonthDayCalculator>k__BackingField;
    public static IEnumerable`1<string> Ids { get; }
    public static CalendarSystem Iso { get; }
    public static CalendarSystem Badi { get; }
    public string Id { get; }
    public string Name { get; }
    public int MinYear { get; }
    public int MaxYear { get; }
    internal int MinDays { get; }
    internal int MaxDays { get; }
    internal CalendarOrdinal Ordinal { get; }
    public IList`1<Era> Eras { get; }
    internal YearMonthDayCalculator YearMonthDayCalculator { get; }
    public static CalendarSystem Gregorian { get; }
    public static CalendarSystem Julian { get; }
    public static CalendarSystem Coptic { get; }
    public static CalendarSystem IslamicBcl { get; }
    public static CalendarSystem PersianSimple { get; }
    public static CalendarSystem PersianArithmetic { get; }
    public static CalendarSystem PersianAstronomical { get; }
    public static CalendarSystem HebrewCivil { get; }
    public static CalendarSystem HebrewScriptural { get; }
    public static CalendarSystem UmAlQura { get; }
    private static CalendarSystem();
    private CalendarSystem(CalendarOrdinal ordinal, string id, string name, YearMonthDayCalculator yearMonthDayCalculator, Era singleEra);
    private CalendarSystem(CalendarOrdinal ordinal, string id, string name, YearMonthDayCalculator yearMonthDayCalculator, EraCalculator eraCalculator);
    internal static string GetIslamicId(IslamicLeapYearPattern leapYearPattern, IslamicEpoch epoch);
    public static CalendarSystem ForId(string id);
    internal static CalendarSystem ForOrdinal(CalendarOrdinal ordinal);
    public static IEnumerable`1<string> get_Ids();
    [CompilerGeneratedAttribute]
public static CalendarSystem get_Iso();
    public static CalendarSystem GetHebrewCalendar(HebrewMonthNumbering monthNumbering);
    public static CalendarSystem get_Badi();
    public static CalendarSystem GetIslamicCalendar(IslamicLeapYearPattern leapYearPattern, IslamicEpoch epoch);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public int get_MinYear();
    [CompilerGeneratedAttribute]
public int get_MaxYear();
    [CompilerGeneratedAttribute]
internal int get_MinDays();
    [CompilerGeneratedAttribute]
internal int get_MaxDays();
    [CompilerGeneratedAttribute]
internal CalendarOrdinal get_Ordinal();
    public IList`1<Era> get_Eras();
    public int GetAbsoluteYear(int yearOfEra, Era era);
    public int GetMaxYearOfEra(Era era);
    public int GetMinYearOfEra(Era era);
    [CompilerGeneratedAttribute]
internal YearMonthDayCalculator get_YearMonthDayCalculator();
    internal YearMonthDayCalendar GetYearMonthDayCalendarFromDaysSinceEpoch(int daysSinceEpoch);
    public virtual string ToString();
    internal int GetDaysSinceEpoch(YearMonthDay yearMonthDay);
    internal IsoDayOfWeek GetDayOfWeek(YearMonthDay yearMonthDay);
    public int GetDaysInYear(int year);
    public int GetDaysInMonth(int year, int month);
    public bool IsLeapYear(int year);
    public int GetMonthsInYear(int year);
    internal void ValidateYearMonthDay(int year, int month, int day);
    internal int Compare(YearMonthDay lhs, YearMonthDay rhs);
    internal int GetDayOfYear(YearMonthDay yearMonthDay);
    internal int GetYearOfEra(int absoluteYear);
    internal Era GetEra(int absoluteYear);
    [ExcludeFromCodeCoverageAttribute]
[ConditionalAttribute("DEBUG")]
internal void DebugValidateYearMonthDay(YearMonthDay yearMonthDay);
    public static CalendarSystem get_Gregorian();
    public static CalendarSystem get_Julian();
    public static CalendarSystem get_Coptic();
    public static CalendarSystem get_IslamicBcl();
    public static CalendarSystem get_PersianSimple();
    public static CalendarSystem get_PersianArithmetic();
    public static CalendarSystem get_PersianAstronomical();
    public static CalendarSystem get_HebrewCivil();
    public static CalendarSystem get_HebrewScriptural();
    public static CalendarSystem get_UmAlQura();
    [VisibleForTestingAttribute]
internal static CalendarSystem ForOrdinalUncached(CalendarOrdinal ordinal);
}
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
internal static class NodaTime.DateAdjusters : object {
    [CompilerGeneratedAttribute]
private static Func`2<LocalDate, LocalDate> <StartOfMonth>k__BackingField;
    [CompilerGeneratedAttribute]
private static Func`2<LocalDate, LocalDate> <EndOfMonth>k__BackingField;
    public static Func`2<LocalDate, LocalDate> StartOfMonth { get; }
    public static Func`2<LocalDate, LocalDate> EndOfMonth { get; }
    private static DateAdjusters();
    [CompilerGeneratedAttribute]
public static Func`2<LocalDate, LocalDate> get_StartOfMonth();
    [CompilerGeneratedAttribute]
public static Func`2<LocalDate, LocalDate> get_EndOfMonth();
    public static Func`2<LocalDate, LocalDate> DayOfMonth(int day);
    public static Func`2<LocalDate, LocalDate> Month(int month);
    public static Func`2<LocalDate, LocalDate> NextOrSame(IsoDayOfWeek dayOfWeek);
    public static Func`2<LocalDate, LocalDate> PreviousOrSame(IsoDayOfWeek dayOfWeek);
    public static Func`2<LocalDate, LocalDate> Next(IsoDayOfWeek dayOfWeek);
    public static Func`2<LocalDate, LocalDate> Previous(IsoDayOfWeek dayOfWeek);
    public static Func`2<LocalDate, LocalDate> AddPeriod(Period period);
}
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[ImmutableAttribute]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal class NodaTime.DateInterval : object {
    [CompilerGeneratedAttribute]
private LocalDate <Start>k__BackingField;
    [CompilerGeneratedAttribute]
private LocalDate <End>k__BackingField;
    public LocalDate Start { get; }
    public LocalDate End { get; }
    public int Length { get; }
    public CalendarSystem Calendar { get; }
    public DateInterval(LocalDate start, LocalDate end);
    [CompilerGeneratedAttribute]
public LocalDate get_Start();
    [CompilerGeneratedAttribute]
public LocalDate get_End();
    public virtual int GetHashCode();
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
public static bool op_Equality(DateInterval lhs, DateInterval rhs);
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
public static bool op_Inequality(DateInterval lhs, DateInterval rhs);
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
public sealed virtual bool Equals(DateInterval other);
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public bool Contains(LocalDate date);
    public bool Contains(DateInterval interval);
    public int get_Length();
    public CalendarSystem get_Calendar();
    public virtual string ToString();
    public void Deconstruct(LocalDate& start, LocalDate& end);
    public DateInterval Intersection(DateInterval interval);
    public DateInterval Union(DateInterval interval);
    private void ValidateInterval(DateInterval interval);
    [IteratorStateMachineAttribute("NodaTime.DateInterval/<GetEnumerator>d__23")]
public sealed virtual IEnumerator`1<LocalDate> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[ImmutableAttribute]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
internal abstract class NodaTime.DateTimeZone : object {
    internal static string UtcId;
    [CompilerGeneratedAttribute]
private static DateTimeZone <Utc>k__BackingField;
    private static int FixedZoneCacheGranularitySeconds;
    private static int FixedZoneCacheMinimumSeconds;
    private static int FixedZoneCacheSize;
    private static DateTimeZone[] FixedZoneCache;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsFixed>k__BackingField;
    [CompilerGeneratedAttribute]
private Offset <MinOffset>k__BackingField;
    [CompilerGeneratedAttribute]
private Offset <MaxOffset>k__BackingField;
    public static DateTimeZone Utc { get; }
    public string Id { get; }
    internal bool IsFixed { get; }
    public Offset MinOffset { get; }
    public Offset MaxOffset { get; }
    protected DateTimeZone(string id, bool isFixed, Offset minOffset, Offset maxOffset);
    private static DateTimeZone();
    [CompilerGeneratedAttribute]
public static DateTimeZone get_Utc();
    public static DateTimeZone ForOffset(Offset offset);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
internal bool get_IsFixed();
    [CompilerGeneratedAttribute]
public sealed virtual Offset get_MinOffset();
    [CompilerGeneratedAttribute]
public sealed virtual Offset get_MaxOffset();
    public virtual Offset GetUtcOffset(Instant instant);
    public abstract virtual ZoneInterval GetZoneInterval(Instant instant);
    public virtual ZoneLocalMapping MapLocal(LocalDateTime localDateTime);
    public ZonedDateTime AtStartOfDay(LocalDate date);
    public ZonedDateTime ResolveLocal(LocalDateTime localDateTime, ZoneLocalMappingResolver resolver);
    public ZonedDateTime AtStrictly(LocalDateTime localDateTime);
    public ZonedDateTime AtLeniently(LocalDateTime localDateTime);
    private ZoneInterval GetEarlierMatchingInterval(ZoneInterval interval, LocalInstant localInstant);
    private ZoneInterval GetLaterMatchingInterval(ZoneInterval interval, LocalInstant localInstant);
    private ZoneInterval GetIntervalBeforeGap(LocalInstant localInstant);
    private ZoneInterval GetIntervalAfterGap(LocalInstant localInstant);
    public virtual string ToString();
    private static DateTimeZone[] BuildFixedZoneCache();
    public IEnumerable`1<ZoneInterval> GetZoneIntervals(Instant start, Instant end);
    [IteratorStateMachineAttribute("NodaTime.DateTimeZone/<GetZoneIntervals>d__36")]
public IEnumerable`1<ZoneInterval> GetZoneIntervals(Interval interval);
    public IEnumerable`1<ZoneInterval> GetZoneIntervals(Interval interval, Options options);
}
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal static class NodaTime.DateTimeZoneProviders : object {
    public static IDateTimeZoneProvider Tzdb { get; }
    public static IDateTimeZoneProvider Bcl { get; }
    [ObsoleteAttribute("This property exists primarily for binary backward compatibility. Please use NodaTime.Xml.XmlSerializationSettings.DateTimeZoneProvider instead.")]
public static IDateTimeZoneProvider Serialization { get; public set; }
    public static IDateTimeZoneProvider get_Tzdb();
    public static IDateTimeZoneProvider get_Bcl();
    public static IDateTimeZoneProvider get_Serialization();
    public static void set_Serialization(IDateTimeZoneProvider value);
}
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[TypeConverterAttribute("NodaTime.Text.DurationTypeConverter")]
[XmlSchemaProviderAttribute("AddSchema")]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[<e6d5c873-dec8-4703-a863-d4c8912e7d9b>IsReadOnlyAttribute]
internal class NodaTime.Duration : ValueType {
    internal static int MaxDays;
    internal static int MinDays;
    internal static BigInteger MinNanoseconds;
    internal static BigInteger MaxNanoseconds;
    internal static decimal MinDecimalNanoseconds;
    internal static decimal MaxDecimalNanoseconds;
    private static double MinDoubleNanoseconds;
    private static double MaxDoubleNanoseconds;
    private static long MaxDaysForLongNanos;
    private static long MinDaysForLongNanos;
    private int days;
    private long nanoOfDay;
    public static Duration Zero { get; }
    public static Duration Epsilon { get; }
    public static Duration MaxValue { get; }
    public static Duration MinValue { get; }
    internal static Duration OneWeek { get; }
    internal static Duration OneDay { get; }
    internal int FloorDays { get; }
    internal long NanosecondOfFloorDay { get; }
    public int Days { get; }
    public long NanosecondOfDay { get; }
    public int Hours { get; }
    public int Minutes { get; }
    public int Seconds { get; }
    public int Milliseconds { get; }
    public int SubsecondTicks { get; }
    public int SubsecondNanoseconds { get; }
    public long BclCompatibleTicks { get; }
    public double TotalDays { get; }
    public double TotalHours { get; }
    public double TotalMinutes { get; }
    public double TotalSeconds { get; }
    public double TotalMilliseconds { get; }
    public double TotalTicks { get; }
    public double TotalNanoseconds { get; }
    internal bool IsInt64Representable { get; }
    private Duration(int days, long nanoOfDay, bool noValidation);
    private Duration(long units, string paramName, long minValue, long maxValue, long unitsPerDay, long nanosPerUnit);
    internal Duration(int days, long nanoOfDay);
    private static Duration();
    public static Duration get_Zero();
    public static Duration get_Epsilon();
    public static Duration get_MaxValue();
    public static Duration get_MinValue();
    internal static Duration get_OneWeek();
    internal static Duration get_OneDay();
    internal int get_FloorDays();
    internal long get_NanosecondOfFloorDay();
    public int get_Days();
    public long get_NanosecondOfDay();
    public int get_Hours();
    public int get_Minutes();
    public int get_Seconds();
    public int get_Milliseconds();
    public int get_SubsecondTicks();
    public int get_SubsecondNanoseconds();
    public long get_BclCompatibleTicks();
    public double get_TotalDays();
    public double get_TotalHours();
    public double get_TotalMinutes();
    public double get_TotalSeconds();
    public double get_TotalMilliseconds();
    public double get_TotalTicks();
    public double get_TotalNanoseconds();
    [PureAttribute]
internal Duration PlusSmallNanoseconds(long smallNanos);
    [PureAttribute]
internal Duration MinusSmallNanoseconds(long smallNanos);
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public virtual string ToString();
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
public sealed virtual string ToString(string patternText, IFormatProvider formatProvider);
    public static Duration op_Addition(Duration left, Duration right);
    public static Duration Add(Duration left, Duration right);
    [PureAttribute]
public Duration Plus(Duration other);
    public static Duration op_Subtraction(Duration left, Duration right);
    public static Duration Subtract(Duration left, Duration right);
    [PureAttribute]
public Duration Minus(Duration other);
    public static Duration op_Division(Duration left, long right);
    public static Duration op_Division(Duration left, double right);
    public static double op_Division(Duration left, Duration right);
    public static Duration Divide(Duration left, long right);
    public static Duration Divide(Duration left, double right);
    public static double Divide(Duration left, Duration right);
    public static Duration op_Multiply(Duration left, double right);
    public static Duration op_Multiply(Duration left, long right);
    public static Duration op_Multiply(long left, Duration right);
    public static Duration Multiply(Duration left, long right);
    public static Duration Multiply(Duration left, double right);
    public static Duration Multiply(long left, Duration right);
    public static bool op_Equality(Duration left, Duration right);
    public static bool op_Inequality(Duration left, Duration right);
    public static bool op_LessThan(Duration left, Duration right);
    public static bool op_LessThanOrEqual(Duration left, Duration right);
    public static bool op_GreaterThan(Duration left, Duration right);
    public static bool op_GreaterThanOrEqual(Duration left, Duration right);
    public static Duration op_UnaryNegation(Duration duration);
    public static Duration Negate(Duration duration);
    public sealed virtual int CompareTo(Duration other);
    private sealed virtual override int System.IComparable.CompareTo(object obj);
    public sealed virtual bool Equals(Duration other);
    public static Duration FromDays(int days);
    public static Duration FromDays(double days);
    public static Duration FromHours(int hours);
    public static Duration FromHours(double hours);
    public static Duration FromMinutes(long minutes);
    public static Duration FromMinutes(double minutes);
    public static Duration FromSeconds(long seconds);
    public static Duration FromSeconds(double seconds);
    public static Duration FromMilliseconds(long milliseconds);
    public static Duration FromMilliseconds(double milliseconds);
    public static Duration FromTicks(long ticks);
    public static Duration FromTicks(double ticks);
    public static Duration FromNanoseconds(long nanoseconds);
    public static Duration FromNanoseconds(double nanoseconds);
    public static Duration FromNanoseconds(BigInteger nanoseconds);
    internal static Duration FromNanoseconds(decimal nanoseconds);
    public static Duration FromTimeSpan(TimeSpan timeSpan);
    [PureAttribute]
public TimeSpan ToTimeSpan();
    public static XmlQualifiedName AddSchema(XmlSchemaSet xmlSchemaSet);
    private sealed virtual override XmlSchema System.Xml.Serialization.IXmlSerializable.GetSchema();
    private sealed virtual override void System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader reader);
    private sealed virtual override void System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter writer);
    [PureAttribute]
public long ToInt64Nanoseconds();
    internal bool get_IsInt64Representable();
    [PureAttribute]
private long ToInt64NanosecondsUnchecked();
    [PureAttribute]
public BigInteger ToBigIntegerNanoseconds();
    [PureAttribute]
internal decimal ToDecimalNanoseconds();
    public static Duration Max(Duration x, Duration y);
    public static Duration Min(Duration x, Duration y);
}
[ExtensionAttribute]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
internal static class NodaTime.Extensions.ClockExtensions : object {
    [ExtensionAttribute]
public static ZonedClock InZone(IClock clock, DateTimeZone zone);
    [ExtensionAttribute]
public static ZonedClock InZone(IClock clock, DateTimeZone zone, CalendarSystem calendar);
    [ExtensionAttribute]
public static ZonedClock InUtc(IClock clock);
    [ExtensionAttribute]
public static ZonedClock InTzdbSystemDefaultZone(IClock clock);
    [ExtensionAttribute]
public static ZonedClock InBclSystemDefaultZone(IClock clock);
}
[ExtensionAttribute]
internal static class NodaTime.Extensions.DateTimeExtensions : object {
    [ExtensionAttribute]
public static LocalDateTime ToLocalDateTime(DateTime dateTime);
    [ExtensionAttribute]
public static Instant ToInstant(DateTime dateTime);
}
[ExtensionAttribute]
internal static class NodaTime.Extensions.DateTimeOffsetExtensions : object {
    [ExtensionAttribute]
public static OffsetDateTime ToOffsetDateTime(DateTimeOffset dateTimeOffset);
    [ExtensionAttribute]
public static ZonedDateTime ToZonedDateTime(DateTimeOffset dateTimeOffset);
    [ExtensionAttribute]
public static Instant ToInstant(DateTimeOffset dateTimeOffset);
}
[ExtensionAttribute]
internal static class NodaTime.Extensions.DateTimeZoneProviderExtensions : object {
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[ExtensionAttribute]
public static IEnumerable`1<DateTimeZone> GetAllZones(IDateTimeZoneProvider provider);
}
[ExtensionAttribute]
internal static class NodaTime.Extensions.DayOfWeekExtensions : object {
    [ExtensionAttribute]
public static IsoDayOfWeek ToIsoDayOfWeek(DayOfWeek dayOfWeek);
}
[ExtensionAttribute]
internal static class NodaTime.Extensions.IsoDayOfWeekExtensions : object {
    [ExtensionAttribute]
public static DayOfWeek ToDayOfWeek(IsoDayOfWeek isoDayOfWeek);
}
[ExtensionAttribute]
internal static class NodaTime.Extensions.StopwatchExtensions : object {
    [ExtensionAttribute]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
public static Duration ElapsedDuration(Stopwatch stopwatch);
}
[ExtensionAttribute]
internal static class NodaTime.Extensions.TimeSpanExtensions : object {
    [ExtensionAttribute]
public static Duration ToDuration(TimeSpan timeSpan);
    [ExtensionAttribute]
public static Offset ToOffset(TimeSpan timeSpan);
}
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal static class NodaTime.Fields.DatePeriodFields : object {
    internal static IDatePeriodField DaysField;
    internal static IDatePeriodField WeeksField;
    internal static IDatePeriodField MonthsField;
    internal static IDatePeriodField YearsField;
    private static DatePeriodFields();
}
internal class NodaTime.Fields.FixedLengthDatePeriodField : object {
    private int unitDays;
    internal FixedLengthDatePeriodField(int unitDays);
    public sealed virtual LocalDate Add(LocalDate localDate, int value);
    public sealed virtual int UnitsBetween(LocalDate start, LocalDate end);
}
internal interface NodaTime.Fields.IDatePeriodField {
    public abstract virtual LocalDate Add(LocalDate localDate, int value);
    public abstract virtual int UnitsBetween(LocalDate start, LocalDate end);
}
internal class NodaTime.Fields.MonthsPeriodField : object {
    public sealed virtual LocalDate Add(LocalDate localDate, int value);
    public sealed virtual int UnitsBetween(LocalDate start, LocalDate end);
}
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
internal class NodaTime.Fields.TimePeriodField : object {
    internal static TimePeriodField Nanoseconds;
    internal static TimePeriodField Ticks;
    internal static TimePeriodField Milliseconds;
    internal static TimePeriodField Seconds;
    internal static TimePeriodField Minutes;
    internal static TimePeriodField Hours;
    private long unitNanoseconds;
    private long maxLongUnits;
    private long unitsPerDay;
    private TimePeriodField(long unitNanoseconds);
    private static TimePeriodField();
    internal LocalDateTime Add(LocalDateTime start, long units);
    internal LocalTime Add(LocalTime localTime, long value);
    internal LocalTime Add(LocalTime localTime, long value, Int32& extraDays);
    internal long UnitsBetween(LocalDateTime start, LocalDateTime end);
    internal long GetUnitsInDuration(Duration duration);
    internal Duration ToDuration(long units);
}
internal class NodaTime.Fields.YearsPeriodField : object {
    public sealed virtual LocalDate Add(LocalDate localDate, int value);
    public sealed virtual int UnitsBetween(LocalDate start, LocalDate end);
}
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal class NodaTime.Globalization.NodaFormatInfo : object {
    private static String[] ShortInvariantMonthNames;
    private static String[] LongInvariantMonthNames;
    private object fieldLock;
    [<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("2")]
private FixedFormatInfoPatternParser`1<Duration> durationPatternParser;
    [<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("2")]
private FixedFormatInfoPatternParser`1<Offset> offsetPatternParser;
    [<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("2")]
private FixedFormatInfoPatternParser`1<Instant> instantPatternParser;
    [<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("2")]
private FixedFormatInfoPatternParser`1<LocalTime> localTimePatternParser;
    [<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("2")]
private FixedFormatInfoPatternParser`1<LocalDate> localDatePatternParser;
    [<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("2")]
private FixedFormatInfoPatternParser`1<LocalDateTime> localDateTimePatternParser;
    [<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("2")]
private FixedFormatInfoPatternParser`1<OffsetDateTime> offsetDateTimePatternParser;
    [<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("2")]
private FixedFormatInfoPatternParser`1<OffsetDate> offsetDatePatternParser;
    [<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("2")]
private FixedFormatInfoPatternParser`1<OffsetTime> offsetTimePatternParser;
    [<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("2")]
private FixedFormatInfoPatternParser`1<ZonedDateTime> zonedDateTimePatternParser;
    [<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("2")]
private FixedFormatInfoPatternParser`1<AnnualDate> annualDatePatternParser;
    [<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("2")]
private FixedFormatInfoPatternParser`1<YearMonth> yearMonthPatternParser;
    public static NodaFormatInfo InvariantInfo;
    private static Cache`2<CultureInfo, NodaFormatInfo> Cache;
    [<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IReadOnlyList`1<string> longMonthNames;
    [<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IReadOnlyList`1<string> longMonthGenitiveNames;
    [<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IReadOnlyList`1<string> longDayNames;
    [<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IReadOnlyList`1<string> shortMonthNames;
    [<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IReadOnlyList`1<string> shortMonthGenitiveNames;
    [<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IReadOnlyList`1<string> shortDayNames;
    private ConcurrentDictionary`2<Era, EraDescription> eraDescriptions;
    [CompilerGeneratedAttribute]
private CultureInfo <CultureInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeFormatInfo <DateTimeFormat>k__BackingField;
    public CultureInfo CultureInfo { get; }
    public CompareInfo CompareInfo { get; }
    internal FixedFormatInfoPatternParser`1<Duration> DurationPatternParser { get; }
    internal FixedFormatInfoPatternParser`1<Offset> OffsetPatternParser { get; }
    internal FixedFormatInfoPatternParser`1<Instant> InstantPatternParser { get; }
    internal FixedFormatInfoPatternParser`1<LocalTime> LocalTimePatternParser { get; }
    internal FixedFormatInfoPatternParser`1<LocalDate> LocalDatePatternParser { get; }
    internal FixedFormatInfoPatternParser`1<LocalDateTime> LocalDateTimePatternParser { get; }
    internal FixedFormatInfoPatternParser`1<OffsetDateTime> OffsetDateTimePatternParser { get; }
    internal FixedFormatInfoPatternParser`1<OffsetDate> OffsetDatePatternParser { get; }
    internal FixedFormatInfoPatternParser`1<OffsetTime> OffsetTimePatternParser { get; }
    internal FixedFormatInfoPatternParser`1<ZonedDateTime> ZonedDateTimePatternParser { get; }
    internal FixedFormatInfoPatternParser`1<AnnualDate> AnnualDatePatternParser { get; }
    internal FixedFormatInfoPatternParser`1<YearMonth> YearMonthPatternParser { get; }
    public IReadOnlyList`1<string> LongMonthNames { get; }
    public IReadOnlyList`1<string> ShortMonthNames { get; }
    public IReadOnlyList`1<string> LongMonthGenitiveNames { get; }
    public IReadOnlyList`1<string> ShortMonthGenitiveNames { get; }
    public IReadOnlyList`1<string> LongDayNames { get; }
    public IReadOnlyList`1<string> ShortDayNames { get; }
    public DateTimeFormatInfo DateTimeFormat { get; }
    public string TimeSeparator { get; }
    public string DateSeparator { get; }
    public string AMDesignator { get; }
    public string PMDesignator { get; }
    public static NodaFormatInfo CurrentInfo { get; }
    public string OffsetPatternLong { get; }
    public string OffsetPatternMedium { get; }
    public string OffsetPatternShort { get; }
    public string OffsetPatternLongNoPunctuation { get; }
    public string OffsetPatternMediumNoPunctuation { get; }
    public string OffsetPatternShortNoPunctuation { get; }
    [VisibleForTestingAttribute]
internal NodaFormatInfo(CultureInfo cultureInfo);
    [VisibleForTestingAttribute]
internal NodaFormatInfo(CultureInfo cultureInfo, DateTimeFormatInfo dateTimeFormat);
    private static NodaFormatInfo();
    private void EnsureMonthsInitialized();
    private static IReadOnlyList`1<string> ConvertMonthArray(String[] monthNames);
    private void EnsureDaysInitialized();
    private static IReadOnlyList`1<string> ConvertDayArray(String[] dayNames);
    private IReadOnlyList`1<string> ConvertGenitiveMonthArray(IReadOnlyList`1<string> nonGenitiveNames, String[] bclNames, String[] invariantNames);
    [CompilerGeneratedAttribute]
public CultureInfo get_CultureInfo();
    public CompareInfo get_CompareInfo();
    internal FixedFormatInfoPatternParser`1<Duration> get_DurationPatternParser();
    internal FixedFormatInfoPatternParser`1<Offset> get_OffsetPatternParser();
    internal FixedFormatInfoPatternParser`1<Instant> get_InstantPatternParser();
    internal FixedFormatInfoPatternParser`1<LocalTime> get_LocalTimePatternParser();
    internal FixedFormatInfoPatternParser`1<LocalDate> get_LocalDatePatternParser();
    internal FixedFormatInfoPatternParser`1<LocalDateTime> get_LocalDateTimePatternParser();
    internal FixedFormatInfoPatternParser`1<OffsetDateTime> get_OffsetDateTimePatternParser();
    internal FixedFormatInfoPatternParser`1<OffsetDate> get_OffsetDatePatternParser();
    internal FixedFormatInfoPatternParser`1<OffsetTime> get_OffsetTimePatternParser();
    internal FixedFormatInfoPatternParser`1<ZonedDateTime> get_ZonedDateTimePatternParser();
    internal FixedFormatInfoPatternParser`1<AnnualDate> get_AnnualDatePatternParser();
    internal FixedFormatInfoPatternParser`1<YearMonth> get_YearMonthPatternParser();
    private FixedFormatInfoPatternParser`1<T> EnsureFixedFormatInitialized(FixedFormatInfoPatternParser`1& field, Func`1<IPatternParser`1<T>> patternParserFactory);
    public IReadOnlyList`1<string> get_LongMonthNames();
    public IReadOnlyList`1<string> get_ShortMonthNames();
    public IReadOnlyList`1<string> get_LongMonthGenitiveNames();
    public IReadOnlyList`1<string> get_ShortMonthGenitiveNames();
    public IReadOnlyList`1<string> get_LongDayNames();
    public IReadOnlyList`1<string> get_ShortDayNames();
    [CompilerGeneratedAttribute]
public DateTimeFormatInfo get_DateTimeFormat();
    public string get_TimeSeparator();
    public string get_DateSeparator();
    public string get_AMDesignator();
    public string get_PMDesignator();
    public IReadOnlyList`1<string> GetEraNames(Era era);
    public string GetEraPrimaryName(Era era);
    private EraDescription GetEraDescription(Era era);
    public static NodaFormatInfo get_CurrentInfo();
    public string get_OffsetPatternLong();
    public string get_OffsetPatternMedium();
    public string get_OffsetPatternShort();
    public string get_OffsetPatternLongNoPunctuation();
    public string get_OffsetPatternMediumNoPunctuation();
    public string get_OffsetPatternShortNoPunctuation();
    internal static void ClearCache();
    internal static NodaFormatInfo GetFormatInfo(CultureInfo cultureInfo);
    public static NodaFormatInfo GetInstance(IFormatProvider provider);
    public virtual string ToString();
    [CompilerGeneratedAttribute]
private EraDescription <GetEraDescription>b__86_0(Era key);
}
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
internal static class NodaTime.Globalization.PatternResources : object {
    [CompilerGeneratedAttribute]
private static ResourceManager <ResourceManager>k__BackingField;
    internal static ResourceManager ResourceManager { get; }
    private static PatternResources();
    [CompilerGeneratedAttribute]
internal static ResourceManager get_ResourceManager();
}
internal interface NodaTime.IClock {
    public abstract virtual Instant GetCurrentInstant();
}
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[DefaultMemberAttribute("Item")]
internal interface NodaTime.IDateTimeZoneProvider {
    public string VersionId { get; }
    public ReadOnlyCollection`1<string> Ids { get; }
    public DateTimeZone Item { get; }
    public abstract virtual string get_VersionId();
    public abstract virtual ReadOnlyCollection`1<string> get_Ids();
    public abstract virtual DateTimeZone GetSystemDefault();
    public abstract virtual DateTimeZone GetZoneOrNull(string id);
    public abstract virtual DateTimeZone get_Item(string id);
}
[<e6d5c873-dec8-4703-a863-d4c8912e7d9b>IsReadOnlyAttribute]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[TypeConverterAttribute("NodaTime.Text.InstantTypeConverter")]
[XmlSchemaProviderAttribute("AddSchema")]
internal class NodaTime.Instant : ValueType {
    internal static int MinDays;
    internal static int MaxDays;
    private static long MinTicks;
    private static long MaxTicks;
    private static long MinMilliseconds;
    private static long MaxMilliseconds;
    private static long MinSeconds;
    private static long MaxSeconds;
    [CompilerGeneratedAttribute]
private static Instant <MinValue>k__BackingField;
    [CompilerGeneratedAttribute]
private static Instant <MaxValue>k__BackingField;
    internal static Instant BeforeMinValue;
    internal static Instant AfterMaxValue;
    private Duration duration;
    public static Instant MinValue { get; }
    public static Instant MaxValue { get; }
    internal bool IsValid { get; }
    internal Duration TimeSinceEpoch { get; }
    internal int DaysSinceEpoch { get; }
    internal long NanosecondOfDay { get; }
    private Instant(int days, bool deliberatelyInvalid);
    private Instant(Duration duration);
    internal Instant(int days, long nanoOfDay);
    private static Instant();
    [CompilerGeneratedAttribute]
public static Instant get_MinValue();
    [CompilerGeneratedAttribute]
public static Instant get_MaxValue();
    internal static Instant FromTrustedDuration(Duration duration);
    internal static Instant FromUntrustedDuration(Duration duration);
    internal bool get_IsValid();
    internal Duration get_TimeSinceEpoch();
    internal int get_DaysSinceEpoch();
    internal long get_NanosecondOfDay();
    public sealed virtual int CompareTo(Instant other);
    private sealed virtual override int System.IComparable.CompareTo(object obj);
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    [PureAttribute]
public Instant PlusTicks(long ticks);
    [PureAttribute]
public Instant PlusNanoseconds(long nanoseconds);
    public static Instant op_Addition(Instant left, Duration right);
    [PureAttribute]
internal LocalInstant Plus(Offset offset);
    internal LocalInstant SafePlus(Offset offset);
    public static Instant Add(Instant left, Duration right);
    [PureAttribute]
public Instant Plus(Duration duration);
    public static Duration op_Subtraction(Instant left, Instant right);
    public static Instant op_Subtraction(Instant left, Duration right);
    public static Duration Subtract(Instant left, Instant right);
    [PureAttribute]
public Duration Minus(Instant other);
    [PureAttribute]
public static Instant Subtract(Instant left, Duration right);
    [PureAttribute]
public Instant Minus(Duration duration);
    public static bool op_Equality(Instant left, Instant right);
    public static bool op_Inequality(Instant left, Instant right);
    public static bool op_LessThan(Instant left, Instant right);
    public static bool op_LessThanOrEqual(Instant left, Instant right);
    public static bool op_GreaterThan(Instant left, Instant right);
    public static bool op_GreaterThanOrEqual(Instant left, Instant right);
    public static Instant FromUtc(int year, int monthOfYear, int dayOfMonth, int hourOfDay, int minuteOfHour);
    public static Instant FromUtc(int year, int monthOfYear, int dayOfMonth, int hourOfDay, int minuteOfHour, int secondOfMinute);
    public static Instant Max(Instant x, Instant y);
    public static Instant Min(Instant x, Instant y);
    public virtual string ToString();
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
public sealed virtual string ToString(string patternText, IFormatProvider formatProvider);
    public sealed virtual bool Equals(Instant other);
    [TestExemptionAttribute("1", "")]
[PureAttribute]
public double ToJulianDate();
    [PureAttribute]
public DateTime ToDateTimeUtc();
    [PureAttribute]
public DateTimeOffset ToDateTimeOffset();
    public static Instant FromDateTimeOffset(DateTimeOffset dateTimeOffset);
    public static Instant FromJulianDate(double julianDate);
    public static Instant FromDateTimeUtc(DateTime dateTime);
    public static Instant FromUnixTimeSeconds(long seconds);
    public static Instant FromUnixTimeMilliseconds(long milliseconds);
    public static Instant FromUnixTimeTicks(long ticks);
    [PureAttribute]
[TestExemptionAttribute("1", "")]
public long ToUnixTimeSeconds();
    [TestExemptionAttribute("1", "")]
[PureAttribute]
public long ToUnixTimeMilliseconds();
    [TestExemptionAttribute("1", "")]
[PureAttribute]
public long ToUnixTimeTicks();
    [PureAttribute]
public ZonedDateTime InUtc();
    [PureAttribute]
public ZonedDateTime InZone(DateTimeZone zone);
    [PureAttribute]
public ZonedDateTime InZone(DateTimeZone zone, CalendarSystem calendar);
    [PureAttribute]
public OffsetDateTime WithOffset(Offset offset);
    [PureAttribute]
public OffsetDateTime WithOffset(Offset offset, CalendarSystem calendar);
    public static XmlQualifiedName AddSchema(XmlSchemaSet xmlSchemaSet);
    private sealed virtual override XmlSchema System.Xml.Serialization.IXmlSerializable.GetSchema();
    private sealed virtual override void System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader reader);
    private sealed virtual override void System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter writer);
}
[XmlSchemaProviderAttribute("AddSchema")]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[<e6d5c873-dec8-4703-a863-d4c8912e7d9b>IsReadOnlyAttribute]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal class NodaTime.Interval : ValueType {
    private Instant start;
    private Instant end;
    public Instant Start { get; }
    public bool HasStart { get; }
    public Instant End { get; }
    internal Instant RawEnd { get; }
    public bool HasEnd { get; }
    public Duration Duration { get; }
    public Interval(Instant start, Instant end);
    public Interval(Nullable`1<Instant> start, Nullable`1<Instant> end);
    public Instant get_Start();
    public bool get_HasStart();
    public Instant get_End();
    internal Instant get_RawEnd();
    public bool get_HasEnd();
    public Duration get_Duration();
    [PureAttribute]
public bool Contains(Instant instant);
    [PureAttribute]
public void Deconstruct(Nullable`1& start, Nullable`1& end);
    public sealed virtual bool Equals(Interval other);
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public virtual string ToString();
    public static bool op_Equality(Interval left, Interval right);
    public static bool op_Inequality(Interval left, Interval right);
    public static XmlQualifiedName AddSchema(XmlSchemaSet xmlSchemaSet);
    private sealed virtual override XmlSchema System.Xml.Serialization.IXmlSerializable.GetSchema();
    private sealed virtual override void System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader reader);
    private sealed virtual override void System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter writer);
}
internal enum NodaTime.IsoDayOfWeek : Enum {
    public int value__;
    public static IsoDayOfWeek None;
    public static IsoDayOfWeek Monday;
    public static IsoDayOfWeek Tuesday;
    public static IsoDayOfWeek Wednesday;
    public static IsoDayOfWeek Thursday;
    public static IsoDayOfWeek Friday;
    public static IsoDayOfWeek Saturday;
    public static IsoDayOfWeek Sunday;
}
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[XmlSchemaProviderAttribute("AddSchema")]
[TypeConverterAttribute("NodaTime.Text.LocalDateTypeConverter")]
[<e6d5c873-dec8-4703-a863-d4c8912e7d9b>IsReadOnlyAttribute]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal class NodaTime.LocalDate : ValueType {
    private YearMonthDayCalendar yearMonthDayCalendar;
    public static LocalDate MaxIsoValue { get; }
    public static LocalDate MinIsoValue { get; }
    public CalendarSystem Calendar { get; }
    private CalendarOrdinal CalendarOrdinal { get; }
    public int Year { get; }
    public int Month { get; }
    public int Day { get; }
    internal int DaysSinceEpoch { get; }
    public IsoDayOfWeek DayOfWeek { get; }
    public int YearOfEra { get; }
    public Era Era { get; }
    public int DayOfYear { get; }
    internal YearMonthDay YearMonthDay { get; }
    internal YearMonthDayCalendar YearMonthDayCalendar { get; }
    internal LocalDate(YearMonthDayCalendar yearMonthDayCalendar);
    internal LocalDate(int daysSinceEpoch);
    internal LocalDate(int daysSinceEpoch, CalendarSystem calendar);
    public LocalDate(int year, int month, int day);
    public LocalDate(int year, int month, int day, CalendarSystem calendar);
    public LocalDate(Era era, int yearOfEra, int month, int day);
    public LocalDate(Era era, int yearOfEra, int month, int day, CalendarSystem calendar);
    public static LocalDate get_MaxIsoValue();
    public static LocalDate get_MinIsoValue();
    public CalendarSystem get_Calendar();
    private CalendarOrdinal get_CalendarOrdinal();
    public int get_Year();
    public int get_Month();
    public int get_Day();
    internal int get_DaysSinceEpoch();
    public IsoDayOfWeek get_DayOfWeek();
    public int get_YearOfEra();
    public Era get_Era();
    public int get_DayOfYear();
    internal YearMonthDay get_YearMonthDay();
    internal YearMonthDayCalendar get_YearMonthDayCalendar();
    [PureAttribute]
public LocalDateTime AtMidnight();
    [PureAttribute]
public DateTime ToDateTimeUnspecified();
    private static int NonNegativeTicksToDays(long ticks);
    public static LocalDate FromDateTime(DateTime dateTime);
    public static LocalDate FromDateTime(DateTime dateTime, CalendarSystem calendar);
    public static LocalDate FromWeekYearWeekAndDay(int weekYear, int weekOfWeekYear, IsoDayOfWeek dayOfWeek);
    public static LocalDate FromYearMonthWeekAndDay(int year, int month, int occurrence, IsoDayOfWeek dayOfWeek);
    [PureAttribute]
public YearMonth ToYearMonth();
    public static LocalDate op_Addition(LocalDate date, Period period);
    public static LocalDate Add(LocalDate date, Period period);
    [PureAttribute]
public LocalDate Plus(Period period);
    public static LocalDateTime op_Addition(LocalDate date, LocalTime time);
    public static LocalDate op_Subtraction(LocalDate date, Period period);
    public static LocalDate Subtract(LocalDate date, Period period);
    [PureAttribute]
public LocalDate Minus(Period period);
    public static Period op_Subtraction(LocalDate lhs, LocalDate rhs);
    public static Period Subtract(LocalDate lhs, LocalDate rhs);
    [PureAttribute]
public Period Minus(LocalDate date);
    public static bool op_Equality(LocalDate lhs, LocalDate rhs);
    public static bool op_Inequality(LocalDate lhs, LocalDate rhs);
    public static bool op_LessThan(LocalDate lhs, LocalDate rhs);
    public static bool op_LessThanOrEqual(LocalDate lhs, LocalDate rhs);
    public static bool op_GreaterThan(LocalDate lhs, LocalDate rhs);
    public static bool op_GreaterThanOrEqual(LocalDate lhs, LocalDate rhs);
    public sealed virtual int CompareTo(LocalDate other);
    private int TrustedCompareTo(LocalDate other);
    private sealed virtual override int System.IComparable.CompareTo(object obj);
    public static LocalDate Max(LocalDate x, LocalDate y);
    public static LocalDate Min(LocalDate x, LocalDate y);
    public virtual int GetHashCode();
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(LocalDate other);
    [PureAttribute]
public ZonedDateTime AtStartOfDayInZone(DateTimeZone zone);
    [PureAttribute]
public LocalDate WithCalendar(CalendarSystem calendar);
    [PureAttribute]
public LocalDate PlusYears(int years);
    [PureAttribute]
public LocalDate PlusMonths(int months);
    [PureAttribute]
public LocalDate PlusDays(int days);
    [PureAttribute]
public LocalDate PlusWeeks(int weeks);
    [PureAttribute]
public LocalDate Next(IsoDayOfWeek targetDayOfWeek);
    [PureAttribute]
public LocalDate Previous(IsoDayOfWeek targetDayOfWeek);
    [PureAttribute]
public OffsetDate WithOffset(Offset offset);
    [PureAttribute]
public LocalDateTime At(LocalTime time);
    [PureAttribute]
public LocalDate With(Func`2<LocalDate, LocalDate> adjuster);
    [PureAttribute]
public void Deconstruct(Int32& year, Int32& month, Int32& day);
    [PureAttribute]
public void Deconstruct(Int32& year, Int32& month, Int32& day, CalendarSystem& calendar);
    public virtual string ToString();
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
public sealed virtual string ToString(string patternText, IFormatProvider formatProvider);
    public static XmlQualifiedName AddSchema(XmlSchemaSet xmlSchemaSet);
    private sealed virtual override XmlSchema System.Xml.Serialization.IXmlSerializable.GetSchema();
    private sealed virtual override void System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader reader);
    private sealed virtual override void System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter writer);
}
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[XmlSchemaProviderAttribute("AddSchema")]
[<e6d5c873-dec8-4703-a863-d4c8912e7d9b>IsReadOnlyAttribute]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[TypeConverterAttribute("NodaTime.Text.LocalDateTimeTypeConverter")]
internal class NodaTime.LocalDateTime : ValueType {
    private LocalDate date;
    private LocalTime time;
    public CalendarSystem Calendar { get; }
    public int Year { get; }
    public int YearOfEra { get; }
    public Era Era { get; }
    public int Month { get; }
    public int DayOfYear { get; }
    public int Day { get; }
    public IsoDayOfWeek DayOfWeek { get; }
    public int Hour { get; }
    public int ClockHourOfHalfDay { get; }
    public int Minute { get; }
    public int Second { get; }
    public int Millisecond { get; }
    public int TickOfSecond { get; }
    public long TickOfDay { get; }
    public int NanosecondOfSecond { get; }
    public long NanosecondOfDay { get; }
    public LocalTime TimeOfDay { get; }
    public LocalDate Date { get; }
    internal LocalDateTime(LocalInstant localInstant);
    public LocalDateTime(int year, int month, int day, int hour, int minute);
    public LocalDateTime(int year, int month, int day, int hour, int minute, CalendarSystem calendar);
    public LocalDateTime(int year, int month, int day, int hour, int minute, int second);
    public LocalDateTime(int year, int month, int day, int hour, int minute, int second, CalendarSystem calendar);
    public LocalDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond);
    public LocalDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, CalendarSystem calendar);
    internal LocalDateTime(LocalDate date, LocalTime time);
    public CalendarSystem get_Calendar();
    public int get_Year();
    public int get_YearOfEra();
    public Era get_Era();
    public int get_Month();
    public int get_DayOfYear();
    public int get_Day();
    public IsoDayOfWeek get_DayOfWeek();
    public int get_Hour();
    public int get_ClockHourOfHalfDay();
    public int get_Minute();
    public int get_Second();
    public int get_Millisecond();
    public int get_TickOfSecond();
    public long get_TickOfDay();
    public int get_NanosecondOfSecond();
    public long get_NanosecondOfDay();
    public LocalTime get_TimeOfDay();
    public LocalDate get_Date();
    [PureAttribute]
public DateTime ToDateTimeUnspecified();
    [PureAttribute]
internal LocalInstant ToLocalInstant();
    public static LocalDateTime FromDateTime(DateTime dateTime);
    public static LocalDateTime FromDateTime(DateTime dateTime, CalendarSystem calendar);
    public sealed virtual bool Equals(LocalDateTime other);
    public static bool op_Equality(LocalDateTime left, LocalDateTime right);
    public static bool op_Inequality(LocalDateTime left, LocalDateTime right);
    public static bool op_LessThan(LocalDateTime lhs, LocalDateTime rhs);
    public static bool op_LessThanOrEqual(LocalDateTime lhs, LocalDateTime rhs);
    public static bool op_GreaterThan(LocalDateTime lhs, LocalDateTime rhs);
    public static bool op_GreaterThanOrEqual(LocalDateTime lhs, LocalDateTime rhs);
    public sealed virtual int CompareTo(LocalDateTime other);
    private sealed virtual override int System.IComparable.CompareTo(object obj);
    public static LocalDateTime op_Addition(LocalDateTime localDateTime, Period period);
    public static LocalDateTime Add(LocalDateTime localDateTime, Period period);
    [PureAttribute]
public LocalDateTime Plus(Period period);
    public static LocalDateTime op_Subtraction(LocalDateTime localDateTime, Period period);
    public static LocalDateTime Subtract(LocalDateTime localDateTime, Period period);
    [PureAttribute]
public LocalDateTime Minus(Period period);
    public static Period op_Subtraction(LocalDateTime lhs, LocalDateTime rhs);
    public static Period Subtract(LocalDateTime lhs, LocalDateTime rhs);
    [PureAttribute]
public Period Minus(LocalDateTime localDateTime);
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    [PureAttribute]
public LocalDateTime With(Func`2<LocalDate, LocalDate> adjuster);
    [PureAttribute]
public LocalDateTime With(Func`2<LocalTime, LocalTime> adjuster);
    [PureAttribute]
public LocalDateTime WithCalendar(CalendarSystem calendar);
    [PureAttribute]
public LocalDateTime PlusYears(int years);
    [PureAttribute]
public LocalDateTime PlusMonths(int months);
    [PureAttribute]
public LocalDateTime PlusDays(int days);
    [PureAttribute]
public LocalDateTime PlusWeeks(int weeks);
    [PureAttribute]
public LocalDateTime PlusHours(long hours);
    [PureAttribute]
public LocalDateTime PlusMinutes(long minutes);
    [PureAttribute]
public LocalDateTime PlusSeconds(long seconds);
    [PureAttribute]
public LocalDateTime PlusMilliseconds(long milliseconds);
    [PureAttribute]
public LocalDateTime PlusTicks(long ticks);
    [PureAttribute]
public LocalDateTime PlusNanoseconds(long nanoseconds);
    [PureAttribute]
public LocalDateTime Next(IsoDayOfWeek targetDayOfWeek);
    [PureAttribute]
public LocalDateTime Previous(IsoDayOfWeek targetDayOfWeek);
    [PureAttribute]
public OffsetDateTime WithOffset(Offset offset);
    [PureAttribute]
public ZonedDateTime InUtc();
    [PureAttribute]
public ZonedDateTime InZoneStrictly(DateTimeZone zone);
    [PureAttribute]
public ZonedDateTime InZoneLeniently(DateTimeZone zone);
    [PureAttribute]
public ZonedDateTime InZone(DateTimeZone zone, ZoneLocalMappingResolver resolver);
    [PureAttribute]
public void Deconstruct(LocalDate& date, LocalTime& time);
    public static LocalDateTime Max(LocalDateTime x, LocalDateTime y);
    public static LocalDateTime Min(LocalDateTime x, LocalDateTime y);
    public virtual string ToString();
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
public sealed virtual string ToString(string patternText, IFormatProvider formatProvider);
    public static XmlQualifiedName AddSchema(XmlSchemaSet xmlSchemaSet);
    private sealed virtual override XmlSchema System.Xml.Serialization.IXmlSerializable.GetSchema();
    private sealed virtual override void System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader reader);
    private sealed virtual override void System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter writer);
}
[<e6d5c873-dec8-4703-a863-d4c8912e7d9b>IsReadOnlyAttribute]
internal class NodaTime.LocalInstant : ValueType {
    public static LocalInstant BeforeMinValue;
    public static LocalInstant AfterMaxValue;
    private Duration duration;
    internal bool IsValid { get; }
    internal Duration TimeSinceLocalEpoch { get; }
    internal int DaysSinceEpoch { get; }
    internal long NanosecondOfDay { get; }
    private LocalInstant(int days, bool deliberatelyInvalid);
    internal LocalInstant(Duration nanoseconds);
    internal LocalInstant(int days, long nanoOfDay);
    private static LocalInstant();
    internal bool get_IsValid();
    internal Duration get_TimeSinceLocalEpoch();
    internal int get_DaysSinceEpoch();
    internal long get_NanosecondOfDay();
    internal Instant MinusZeroOffset();
    public Instant Minus(Offset offset);
    public static bool op_Equality(LocalInstant left, LocalInstant right);
    internal Instant SafeMinus(Offset offset);
    public static bool op_Inequality(LocalInstant left, LocalInstant right);
    public static bool op_LessThan(LocalInstant left, LocalInstant right);
    public static bool op_LessThanOrEqual(LocalInstant left, LocalInstant right);
    public static bool op_GreaterThan(LocalInstant left, LocalInstant right);
    public static bool op_GreaterThanOrEqual(LocalInstant left, LocalInstant right);
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
public virtual string ToString();
    public sealed virtual bool Equals(LocalInstant other);
}
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[TypeConverterAttribute("NodaTime.Text.LocalTimeTypeConverter")]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[XmlSchemaProviderAttribute("AddSchema")]
[<e6d5c873-dec8-4703-a863-d4c8912e7d9b>IsReadOnlyAttribute]
internal class NodaTime.LocalTime : ValueType {
    [CompilerGeneratedAttribute]
private static LocalTime <Midnight>k__BackingField;
    [CompilerGeneratedAttribute]
private static LocalTime <Noon>k__BackingField;
    [CompilerGeneratedAttribute]
private static LocalTime <MaxValue>k__BackingField;
    private long nanoseconds;
    public static LocalTime Midnight { get; }
    public static LocalTime MinValue { get; }
    public static LocalTime Noon { get; }
    public static LocalTime MaxValue { get; }
    public int Hour { get; }
    public int ClockHourOfHalfDay { get; }
    public int Minute { get; }
    public int Second { get; }
    public int Millisecond { get; }
    public int TickOfSecond { get; }
    public long TickOfDay { get; }
    public int NanosecondOfSecond { get; }
    public long NanosecondOfDay { get; }
    public LocalTime(int hour, int minute);
    public LocalTime(int hour, int minute, int second);
    public LocalTime(int hour, int minute, int second, int millisecond);
    internal LocalTime(long nanoseconds);
    private static LocalTime();
    [CompilerGeneratedAttribute]
public static LocalTime get_Midnight();
    public static LocalTime get_MinValue();
    [CompilerGeneratedAttribute]
public static LocalTime get_Noon();
    [CompilerGeneratedAttribute]
public static LocalTime get_MaxValue();
    public static LocalTime FromHourMinuteSecondMillisecondTick(int hour, int minute, int second, int millisecond, int tickWithinMillisecond);
    public static LocalTime FromHourMinuteSecondTick(int hour, int minute, int second, int tickWithinSecond);
    public static LocalTime FromHourMinuteSecondNanosecond(int hour, int minute, int second, long nanosecondWithinSecond);
    internal static LocalTime FromHourMinuteSecondNanosecondTrusted(int hour, int minute, int second, long nanosecondWithinSecond);
    public static LocalTime FromNanosecondsSinceMidnight(long nanoseconds);
    public static LocalTime FromTicksSinceMidnight(long ticks);
    public static LocalTime FromMillisecondsSinceMidnight(int milliseconds);
    public static LocalTime FromSecondsSinceMidnight(int seconds);
    public static LocalTime FromMinutesSinceMidnight(int minutes);
    public static LocalTime FromHoursSinceMidnight(int hours);
    public int get_Hour();
    public int get_ClockHourOfHalfDay();
    public int get_Minute();
    public int get_Second();
    public int get_Millisecond();
    public int get_TickOfSecond();
    public long get_TickOfDay();
    public int get_NanosecondOfSecond();
    public long get_NanosecondOfDay();
    public static LocalTime op_Addition(LocalTime time, Period period);
    public static LocalTime Add(LocalTime time, Period period);
    [PureAttribute]
public LocalTime Plus(Period period);
    public static LocalTime op_Subtraction(LocalTime time, Period period);
    public static LocalTime Subtract(LocalTime time, Period period);
    [PureAttribute]
public LocalTime Minus(Period period);
    public static Period op_Subtraction(LocalTime lhs, LocalTime rhs);
    public static Period Subtract(LocalTime lhs, LocalTime rhs);
    [PureAttribute]
public Period Minus(LocalTime time);
    public static bool op_Equality(LocalTime lhs, LocalTime rhs);
    public static bool op_Inequality(LocalTime lhs, LocalTime rhs);
    public static bool op_LessThan(LocalTime lhs, LocalTime rhs);
    public static bool op_LessThanOrEqual(LocalTime lhs, LocalTime rhs);
    public static bool op_GreaterThan(LocalTime lhs, LocalTime rhs);
    public static bool op_GreaterThanOrEqual(LocalTime lhs, LocalTime rhs);
    public sealed virtual int CompareTo(LocalTime other);
    private sealed virtual override int System.IComparable.CompareTo(object obj);
    public virtual int GetHashCode();
    public sealed virtual bool Equals(LocalTime other);
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    [PureAttribute]
public LocalTime PlusHours(long hours);
    [PureAttribute]
public LocalTime PlusMinutes(long minutes);
    [PureAttribute]
public LocalTime PlusSeconds(long seconds);
    [PureAttribute]
public LocalTime PlusMilliseconds(long milliseconds);
    [PureAttribute]
public LocalTime PlusTicks(long ticks);
    [PureAttribute]
public LocalTime PlusNanoseconds(long nanoseconds);
    [PureAttribute]
public LocalTime With(Func`2<LocalTime, LocalTime> adjuster);
    [PureAttribute]
public OffsetTime WithOffset(Offset offset);
    [PureAttribute]
public LocalDateTime On(LocalDate date);
    [PureAttribute]
public void Deconstruct(Int32& hour, Int32& minute, Int32& second);
    public static LocalTime Max(LocalTime x, LocalTime y);
    public static LocalTime Min(LocalTime x, LocalTime y);
    public virtual string ToString();
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
public sealed virtual string ToString(string patternText, IFormatProvider formatProvider);
    public static XmlQualifiedName AddSchema(XmlSchemaSet xmlSchemaSet);
    private sealed virtual override XmlSchema System.Xml.Serialization.IXmlSerializable.GetSchema();
    private sealed virtual override void System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader reader);
    private sealed virtual override void System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter writer);
}
internal static class NodaTime.NodaConstants : object {
    public static long NanosecondsPerTick;
    public static long NanosecondsPerMillisecond;
    public static long NanosecondsPerSecond;
    public static long NanosecondsPerMinute;
    public static long NanosecondsPerHour;
    public static long NanosecondsPerDay;
    public static long NanosecondsPerWeek;
    public static long TicksPerMillisecond;
    public static long TicksPerSecond;
    public static long TicksPerMinute;
    public static long TicksPerHour;
    public static long TicksPerDay;
    public static long TicksPerWeek;
    public static int MillisecondsPerSecond;
    public static int MillisecondsPerMinute;
    public static int MillisecondsPerHour;
    public static int MillisecondsPerDay;
    public static int MillisecondsPerWeek;
    public static int SecondsPerMinute;
    public static int SecondsPerHour;
    public static int SecondsPerDay;
    public static int SecondsPerWeek;
    public static int MinutesPerHour;
    public static int MinutesPerDay;
    public static int MinutesPerWeek;
    public static int HoursPerDay;
    public static int HoursPerWeek;
    public static int DaysPerWeek;
    [CompilerGeneratedAttribute]
private static Instant <UnixEpoch>k__BackingField;
    [CompilerGeneratedAttribute]
private static Instant <BclEpoch>k__BackingField;
    [CompilerGeneratedAttribute]
private static Instant <JulianEpoch>k__BackingField;
    internal static long BclTicksAtUnixEpoch;
    internal static int BclDaysAtUnixEpoch;
    public static Instant UnixEpoch { get; }
    public static Instant BclEpoch { get; }
    public static Instant JulianEpoch { get; }
    private static NodaConstants();
    [CompilerGeneratedAttribute]
public static Instant get_UnixEpoch();
    [CompilerGeneratedAttribute]
public static Instant get_BclEpoch();
    [CompilerGeneratedAttribute]
public static Instant get_JulianEpoch();
}
[<e6d5c873-dec8-4703-a863-d4c8912e7d9b>IsReadOnlyAttribute]
[TypeConverterAttribute("NodaTime.Text.OffsetTypeConverter")]
[XmlSchemaProviderAttribute("AddSchema")]
internal class NodaTime.Offset : ValueType {
    public static Offset Zero;
    public static Offset MinValue;
    public static Offset MaxValue;
    private static int MinHours;
    private static int MaxHours;
    internal static int MinSeconds;
    internal static int MaxSeconds;
    private static int MinMilliseconds;
    private static int MaxMilliseconds;
    private static long MinTicks;
    private static long MaxTicks;
    private static long MinNanoseconds;
    private static long MaxNanoseconds;
    private int seconds;
    public int Seconds { get; }
    public int Milliseconds { get; }
    public long Ticks { get; }
    public long Nanoseconds { get; }
    internal Offset(int seconds);
    private static Offset();
    public int get_Seconds();
    public int get_Milliseconds();
    public long get_Ticks();
    public long get_Nanoseconds();
    public static Offset Max(Offset x, Offset y);
    public static Offset Min(Offset x, Offset y);
    public static Offset op_UnaryNegation(Offset offset);
    public static Offset Negate(Offset offset);
    public static Offset op_UnaryPlus(Offset offset);
    public static Offset op_Addition(Offset left, Offset right);
    public static Offset Add(Offset left, Offset right);
    [PureAttribute]
public Offset Plus(Offset other);
    public static Offset op_Subtraction(Offset minuend, Offset subtrahend);
    public static Offset Subtract(Offset minuend, Offset subtrahend);
    [PureAttribute]
public Offset Minus(Offset other);
    public static bool op_Equality(Offset left, Offset right);
    public static bool op_Inequality(Offset left, Offset right);
    public static bool op_LessThan(Offset left, Offset right);
    public static bool op_LessThanOrEqual(Offset left, Offset right);
    public static bool op_GreaterThan(Offset left, Offset right);
    public static bool op_GreaterThanOrEqual(Offset left, Offset right);
    public sealed virtual int CompareTo(Offset other);
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
private sealed virtual override int System.IComparable.CompareTo(object obj);
    public sealed virtual bool Equals(Offset other);
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
public virtual string ToString();
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
public sealed virtual string ToString(string patternText, IFormatProvider formatProvider);
    public static Offset FromSeconds(int seconds);
    public static Offset FromMilliseconds(int milliseconds);
    public static Offset FromTicks(long ticks);
    public static Offset FromNanoseconds(long nanoseconds);
    public static Offset FromHours(int hours);
    public static Offset FromHoursAndMinutes(int hours, int minutes);
    [PureAttribute]
public TimeSpan ToTimeSpan();
    public static Offset FromTimeSpan(TimeSpan timeSpan);
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
public static XmlQualifiedName AddSchema(XmlSchemaSet xmlSchemaSet);
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
private sealed virtual override XmlSchema System.Xml.Serialization.IXmlSerializable.GetSchema();
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
private sealed virtual override void System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader reader);
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
private sealed virtual override void System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter writer);
}
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[TypeConverterAttribute("NodaTime.Text.OffsetDateTypeConverter")]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[<e6d5c873-dec8-4703-a863-d4c8912e7d9b>IsReadOnlyAttribute]
[XmlSchemaProviderAttribute("AddSchema")]
internal class NodaTime.OffsetDate : ValueType {
    private LocalDate date;
    private Offset offset;
    public LocalDate Date { get; }
    public Offset Offset { get; }
    public CalendarSystem Calendar { get; }
    public int Year { get; }
    public int Month { get; }
    public int Day { get; }
    public IsoDayOfWeek DayOfWeek { get; }
    public int YearOfEra { get; }
    public Era Era { get; }
    public int DayOfYear { get; }
    public OffsetDate(LocalDate date, Offset offset);
    public LocalDate get_Date();
    public Offset get_Offset();
    public CalendarSystem get_Calendar();
    public int get_Year();
    public int get_Month();
    public int get_Day();
    public IsoDayOfWeek get_DayOfWeek();
    public int get_YearOfEra();
    public Era get_Era();
    public int get_DayOfYear();
    [PureAttribute]
public OffsetDate WithOffset(Offset offset);
    [PureAttribute]
public OffsetDate With(Func`2<LocalDate, LocalDate> adjuster);
    [PureAttribute]
public OffsetDate WithCalendar(CalendarSystem calendar);
    [PureAttribute]
public OffsetDateTime At(LocalTime time);
    public virtual int GetHashCode();
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(OffsetDate other);
    public static bool op_Equality(OffsetDate left, OffsetDate right);
    public static bool op_Inequality(OffsetDate left, OffsetDate right);
    public virtual string ToString();
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
public sealed virtual string ToString(string patternText, IFormatProvider formatProvider);
    [PureAttribute]
public void Deconstruct(LocalDate& localDate, Offset& offset);
    public static XmlQualifiedName AddSchema(XmlSchemaSet xmlSchemaSet);
    private sealed virtual override XmlSchema System.Xml.Serialization.IXmlSerializable.GetSchema();
    private sealed virtual override void System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader reader);
    private sealed virtual override void System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter writer);
}
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[TypeConverterAttribute("NodaTime.Text.OffsetDateTimeTypeConverter")]
[<e6d5c873-dec8-4703-a863-d4c8912e7d9b>IsReadOnlyAttribute]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[XmlSchemaProviderAttribute("AddSchema")]
internal class NodaTime.OffsetDateTime : ValueType {
    private static int MinBclOffsetMinutes;
    private static int MaxBclOffsetMinutes;
    private LocalDate localDate;
    private OffsetTime offsetTime;
    public CalendarSystem Calendar { get; }
    public int Year { get; }
    public int Month { get; }
    public int Day { get; }
    internal YearMonthDay YearMonthDay { get; }
    public IsoDayOfWeek DayOfWeek { get; }
    public int YearOfEra { get; }
    public Era Era { get; }
    public int DayOfYear { get; }
    public int Hour { get; }
    public int ClockHourOfHalfDay { get; }
    public int Minute { get; }
    public int Second { get; }
    public int Millisecond { get; }
    public int TickOfSecond { get; }
    public long TickOfDay { get; }
    public int NanosecondOfSecond { get; }
    public long NanosecondOfDay { get; }
    public LocalDateTime LocalDateTime { get; }
    public LocalDate Date { get; }
    public LocalTime TimeOfDay { get; }
    public Offset Offset { get; }
    internal OffsetDateTime(LocalDate localDate, OffsetTime offsetTime);
    internal OffsetDateTime(Instant instant, Offset offset);
    internal OffsetDateTime(Instant instant, Offset offset, CalendarSystem calendar);
    public OffsetDateTime(LocalDateTime localDateTime, Offset offset);
    public CalendarSystem get_Calendar();
    public int get_Year();
    public int get_Month();
    public int get_Day();
    internal YearMonthDay get_YearMonthDay();
    public IsoDayOfWeek get_DayOfWeek();
    public int get_YearOfEra();
    public Era get_Era();
    public int get_DayOfYear();
    public int get_Hour();
    public int get_ClockHourOfHalfDay();
    public int get_Minute();
    public int get_Second();
    public int get_Millisecond();
    public int get_TickOfSecond();
    public long get_TickOfDay();
    public int get_NanosecondOfSecond();
    public long get_NanosecondOfDay();
    public LocalDateTime get_LocalDateTime();
    public LocalDate get_Date();
    public LocalTime get_TimeOfDay();
    public Offset get_Offset();
    [PureAttribute]
public Instant ToInstant();
    private Duration ToElapsedTimeSinceEpoch();
    [PureAttribute]
public ZonedDateTime InFixedZone();
    [PureAttribute]
public ZonedDateTime InZone(DateTimeZone zone);
    [PureAttribute]
public DateTimeOffset ToDateTimeOffset();
    [PureAttribute]
public static OffsetDateTime FromDateTimeOffset(DateTimeOffset dateTimeOffset);
    [PureAttribute]
public OffsetDateTime WithCalendar(CalendarSystem calendar);
    [PureAttribute]
public OffsetDateTime With(Func`2<LocalDate, LocalDate> adjuster);
    [PureAttribute]
public OffsetDateTime With(Func`2<LocalTime, LocalTime> adjuster);
    [PureAttribute]
public OffsetDateTime WithOffset(Offset offset);
    [PureAttribute]
public OffsetDate ToOffsetDate();
    [PureAttribute]
public OffsetTime ToOffsetTime();
    public virtual int GetHashCode();
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(OffsetDateTime other);
    [PureAttribute]
public void Deconstruct(LocalDateTime& localDateTime, Offset& offset);
    [PureAttribute]
public void Deconstruct(LocalDate& localDate, LocalTime& localTime, Offset& offset);
    public virtual string ToString();
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
public sealed virtual string ToString(string patternText, IFormatProvider formatProvider);
    public static OffsetDateTime Add(OffsetDateTime offsetDateTime, Duration duration);
    [PureAttribute]
public OffsetDateTime Plus(Duration duration);
    [PureAttribute]
public OffsetDateTime PlusHours(int hours);
    [PureAttribute]
public OffsetDateTime PlusMinutes(int minutes);
    [PureAttribute]
public OffsetDateTime PlusSeconds(long seconds);
    [PureAttribute]
public OffsetDateTime PlusMilliseconds(long milliseconds);
    [PureAttribute]
public OffsetDateTime PlusTicks(long ticks);
    [PureAttribute]
public OffsetDateTime PlusNanoseconds(long nanoseconds);
    public static OffsetDateTime op_Addition(OffsetDateTime offsetDateTime, Duration duration);
    public static OffsetDateTime Subtract(OffsetDateTime offsetDateTime, Duration duration);
    [PureAttribute]
public OffsetDateTime Minus(Duration duration);
    public static OffsetDateTime op_Subtraction(OffsetDateTime offsetDateTime, Duration duration);
    public static Duration Subtract(OffsetDateTime end, OffsetDateTime start);
    [PureAttribute]
public Duration Minus(OffsetDateTime other);
    public static Duration op_Subtraction(OffsetDateTime end, OffsetDateTime start);
    public static bool op_Equality(OffsetDateTime left, OffsetDateTime right);
    public static bool op_Inequality(OffsetDateTime left, OffsetDateTime right);
    public static XmlQualifiedName AddSchema(XmlSchemaSet xmlSchemaSet);
    private sealed virtual override XmlSchema System.Xml.Serialization.IXmlSerializable.GetSchema();
    private sealed virtual override void System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader reader);
    private sealed virtual override void System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter writer);
}
[XmlSchemaProviderAttribute("AddSchema")]
[TypeConverterAttribute("NodaTime.Text.OffsetTimeTypeConverter")]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[<e6d5c873-dec8-4703-a863-d4c8912e7d9b>IsReadOnlyAttribute]
internal class NodaTime.OffsetTime : ValueType {
    private static int NanosecondsBits;
    private static long NanosecondsMask;
    private long nanosecondsAndOffset;
    public LocalTime TimeOfDay { get; }
    public Offset Offset { get; }
    internal int OffsetSeconds { get; }
    internal long OffsetNanoseconds { get; }
    public int Hour { get; }
    public int ClockHourOfHalfDay { get; }
    public int Minute { get; }
    public int Second { get; }
    public int Millisecond { get; }
    public int TickOfSecond { get; }
    public long TickOfDay { get; }
    public int NanosecondOfSecond { get; }
    public long NanosecondOfDay { get; }
    internal OffsetTime(long nanosecondOfDayZeroOffset);
    internal OffsetTime(long nanosecondOfDay, int offsetSeconds);
    public OffsetTime(LocalTime time, Offset offset);
    public LocalTime get_TimeOfDay();
    public Offset get_Offset();
    internal int get_OffsetSeconds();
    internal long get_OffsetNanoseconds();
    public int get_Hour();
    public int get_ClockHourOfHalfDay();
    public int get_Minute();
    public int get_Second();
    public int get_Millisecond();
    public int get_TickOfSecond();
    public long get_TickOfDay();
    public int get_NanosecondOfSecond();
    public long get_NanosecondOfDay();
    [PureAttribute]
public OffsetTime WithOffset(Offset offset);
    [PureAttribute]
public OffsetTime With(Func`2<LocalTime, LocalTime> adjuster);
    [PureAttribute]
public OffsetDateTime On(LocalDate date);
    public virtual int GetHashCode();
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(OffsetTime other);
    public static bool op_Equality(OffsetTime left, OffsetTime right);
    public static bool op_Inequality(OffsetTime left, OffsetTime right);
    public virtual string ToString();
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
public sealed virtual string ToString(string patternText, IFormatProvider formatProvider);
    [PureAttribute]
public void Deconstruct(LocalTime& localTime, Offset& offset);
    public static XmlQualifiedName AddSchema(XmlSchemaSet xmlSchemaSet);
    private sealed virtual override XmlSchema System.Xml.Serialization.IXmlSerializable.GetSchema();
    private sealed virtual override void System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader reader);
    private sealed virtual override void System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter writer);
}
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[ImmutableAttribute]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[TypeConverterAttribute("NodaTime.Text.PeriodTypeConverter")]
internal class NodaTime.Period : object {
    [CompilerGeneratedAttribute]
private static Period <Zero>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Nanoseconds>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Ticks>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Milliseconds>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Seconds>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Minutes>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Hours>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Days>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Weeks>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Months>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Years>k__BackingField;
    public static Period Zero { get; }
    [<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IEqualityComparer`1<Period> NormalizingEqualityComparer { get; }
    public long Nanoseconds { get; }
    public long Ticks { get; }
    public long Milliseconds { get; }
    public long Seconds { get; }
    public long Minutes { get; }
    public long Hours { get; }
    public int Days { get; }
    public int Weeks { get; }
    public int Months { get; }
    public int Years { get; }
    public bool HasTimeComponent { get; }
    public bool HasDateComponent { get; }
    private long TotalNanoseconds { get; }
    private Period(int years, int months, int weeks, int days);
    private Period(long hours, long minutes, long seconds, long milliseconds, long ticks, long nanoseconds);
    internal Period(int years, int months, int weeks, int days, long hours, long minutes, long seconds, long milliseconds, long ticks, long nanoseconds);
    private static Period();
    [CompilerGeneratedAttribute]
public static Period get_Zero();
    public static IEqualityComparer`1<Period> get_NormalizingEqualityComparer();
    [CompilerGeneratedAttribute]
public long get_Nanoseconds();
    [CompilerGeneratedAttribute]
public long get_Ticks();
    [CompilerGeneratedAttribute]
public long get_Milliseconds();
    [CompilerGeneratedAttribute]
public long get_Seconds();
    [CompilerGeneratedAttribute]
public long get_Minutes();
    [CompilerGeneratedAttribute]
public long get_Hours();
    [CompilerGeneratedAttribute]
public int get_Days();
    [CompilerGeneratedAttribute]
public int get_Weeks();
    [CompilerGeneratedAttribute]
public int get_Months();
    [CompilerGeneratedAttribute]
public int get_Years();
    public static Period FromYears(int years);
    public static Period FromMonths(int months);
    public static Period FromWeeks(int weeks);
    public static Period FromDays(int days);
    public static Period FromHours(long hours);
    public static Period FromMinutes(long minutes);
    public static Period FromSeconds(long seconds);
    public static Period FromMilliseconds(long milliseconds);
    public static Period FromTicks(long ticks);
    public static Period FromNanoseconds(long nanoseconds);
    public static Period op_Addition(Period left, Period right);
    public static IComparer`1<Period> CreateComparer(LocalDateTime baseDateTime);
    public static Period op_Subtraction(Period minuend, Period subtrahend);
    public static Period Between(LocalDateTime start, LocalDateTime end, PeriodUnits units);
    private static LocalDate DateComponentsBetween(LocalDate start, LocalDate end, PeriodUnits units, Int32& years, Int32& months, Int32& weeks, Int32& days);
    private static void TimeComponentsBetween(long totalNanoseconds, PeriodUnits units, Int64& hours, Int64& minutes, Int64& seconds, Int64& milliseconds, Int64& ticks, Int64& nanoseconds);
    [PureAttribute]
public static Period Between(LocalDateTime start, LocalDateTime end);
    [PureAttribute]
public static Period Between(LocalDate start, LocalDate end, PeriodUnits units);
    [PureAttribute]
public static Period Between(LocalDate start, LocalDate end);
    [PureAttribute]
public static Period Between(LocalTime start, LocalTime end, PeriodUnits units);
    [PureAttribute]
public static Period Between(LocalTime start, LocalTime end);
    internal static int DaysBetween(LocalDate start, LocalDate end);
    public bool get_HasTimeComponent();
    public bool get_HasDateComponent();
    [PureAttribute]
public Duration ToDuration();
    private long get_TotalNanoseconds();
    [PureAttribute]
[TestExemptionAttribute("1", "")]
public PeriodBuilder ToBuilder();
    [PureAttribute]
public Period Normalize();
    public virtual string ToString();
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
public virtual bool Equals(object other);
    public virtual int GetHashCode();
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
public sealed virtual bool Equals(Period other);
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
public static bool op_Equality(Period left, Period right);
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
public static bool op_Inequality(Period left, Period right);
    [CompilerGeneratedAttribute]
internal static long <Between>g__UnitsBetween|51_0(PeriodUnits mask, TimePeriodField timeField, <>c__DisplayClass51_0& );
    [CompilerGeneratedAttribute]
internal static int <DateComponentsBetween>g__UnitsBetween|52_0(PeriodUnits maskedUnits, LocalDate& startDate, LocalDate endDate, IDatePeriodField dateField);
    [CompilerGeneratedAttribute]
internal static long <TimeComponentsBetween>g__UnitsBetween|53_0(PeriodUnits mask, long nanosecondsPerUnit, <>c__DisplayClass53_0& );
}
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[MutableAttribute]
[XmlSchemaProviderAttribute("AddSchema")]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
internal class NodaTime.PeriodBuilder : object {
    [CompilerGeneratedAttribute]
private int <Years>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Months>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Weeks>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Days>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Hours>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Minutes>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Seconds>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Milliseconds>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Ticks>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Nanoseconds>k__BackingField;
    public int Years { get; public set; }
    public int Months { get; public set; }
    public int Weeks { get; public set; }
    public int Days { get; public set; }
    public long Hours { get; public set; }
    public long Minutes { get; public set; }
    public long Seconds { get; public set; }
    public long Milliseconds { get; public set; }
    public long Ticks { get; public set; }
    public long Nanoseconds { get; public set; }
    public long Item { get; public set; }
    public PeriodBuilder(Period period);
    [CompilerGeneratedAttribute]
public int get_Years();
    [CompilerGeneratedAttribute]
public void set_Years(int value);
    [CompilerGeneratedAttribute]
public int get_Months();
    [CompilerGeneratedAttribute]
public void set_Months(int value);
    [CompilerGeneratedAttribute]
public int get_Weeks();
    [CompilerGeneratedAttribute]
public void set_Weeks(int value);
    [CompilerGeneratedAttribute]
public int get_Days();
    [CompilerGeneratedAttribute]
public void set_Days(int value);
    [CompilerGeneratedAttribute]
public long get_Hours();
    [CompilerGeneratedAttribute]
public void set_Hours(long value);
    [CompilerGeneratedAttribute]
public long get_Minutes();
    [CompilerGeneratedAttribute]
public void set_Minutes(long value);
    [CompilerGeneratedAttribute]
public long get_Seconds();
    [CompilerGeneratedAttribute]
public void set_Seconds(long value);
    [CompilerGeneratedAttribute]
public long get_Milliseconds();
    [CompilerGeneratedAttribute]
public void set_Milliseconds(long value);
    [CompilerGeneratedAttribute]
public long get_Ticks();
    [CompilerGeneratedAttribute]
public void set_Ticks(long value);
    [CompilerGeneratedAttribute]
public long get_Nanoseconds();
    [CompilerGeneratedAttribute]
public void set_Nanoseconds(long value);
    public long get_Item(PeriodUnits unit);
    public void set_Item(PeriodUnits unit, long value);
    public Period Build();
    public static XmlQualifiedName AddSchema(XmlSchemaSet xmlSchemaSet);
    private sealed virtual override XmlSchema System.Xml.Serialization.IXmlSerializable.GetSchema();
    private sealed virtual override void System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader reader);
    private sealed virtual override void System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter writer);
}
[FlagsAttribute]
internal enum NodaTime.PeriodUnits : Enum {
    public int value__;
    public static PeriodUnits None;
    public static PeriodUnits Years;
    public static PeriodUnits Months;
    public static PeriodUnits Weeks;
    public static PeriodUnits Days;
    public static PeriodUnits AllDateUnits;
    public static PeriodUnits YearMonthDay;
    public static PeriodUnits Hours;
    public static PeriodUnits Minutes;
    public static PeriodUnits Seconds;
    public static PeriodUnits Milliseconds;
    public static PeriodUnits Ticks;
    public static PeriodUnits Nanoseconds;
    public static PeriodUnits HourMinuteSecond;
    public static PeriodUnits AllTimeUnits;
    public static PeriodUnits DateAndTime;
    public static PeriodUnits AllUnits;
}
internal static class NodaTime.Properties.AssemblyInfo : object {
    [<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("1")]
internal static string PublicKeySuffix;
}
internal abstract class NodaTime.Serialization.JsonNet.DelegatingConverterBase : JsonConverter {
    private JsonConverter original;
    public bool CanRead { get; }
    public bool CanWrite { get; }
    protected DelegatingConverterBase(JsonConverter original);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual bool get_CanRead();
    public virtual bool get_CanWrite();
    public virtual bool CanConvert(Type objectType);
}
[ExtensionAttribute]
internal static class NodaTime.Serialization.JsonNet.Extensions : object {
    [ExtensionAttribute]
public static JsonSerializerSettings ConfigureForNodaTime(JsonSerializerSettings settings, IDateTimeZoneProvider provider);
    [ExtensionAttribute]
public static JsonSerializer ConfigureForNodaTime(JsonSerializer serializer, IDateTimeZoneProvider provider);
    [ExtensionAttribute]
public static JsonSerializerSettings WithIsoIntervalConverter(JsonSerializerSettings settings);
    [ExtensionAttribute]
public static JsonSerializer WithIsoIntervalConverter(JsonSerializer serializer);
    [ExtensionAttribute]
public static JsonSerializerSettings WithIsoDateIntervalConverter(JsonSerializerSettings settings);
    [ExtensionAttribute]
public static JsonSerializer WithIsoDateIntervalConverter(JsonSerializer serializer);
    private static void AddDefaultConverters(IList`1<JsonConverter> converters, IDateTimeZoneProvider provider);
    private static void ReplaceExistingConverters(IList`1<JsonConverter> converters, JsonConverter newConverter);
    [ExtensionAttribute]
internal static string ResolvePropertyName(JsonSerializer serializer, string propertyName);
}
internal abstract class NodaTime.Serialization.JsonNet.NodaConverterBase`1 : JsonConverter {
    private static bool CheckAssignableFrom;
    private static Type NullableT;
    private static NodaConverterBase`1();
    public virtual bool CanConvert(Type objectType);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    protected abstract virtual T ReadJsonImpl(JsonReader reader, JsonSerializer serializer);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    protected abstract virtual void WriteJsonImpl(JsonWriter writer, T value, JsonSerializer serializer);
}
internal static class NodaTime.Serialization.JsonNet.NodaConverters : object {
    [CompilerGeneratedAttribute]
private static JsonConverter <InstantConverter>k__BackingField;
    [CompilerGeneratedAttribute]
private static JsonConverter <LocalDateConverter>k__BackingField;
    [CompilerGeneratedAttribute]
private static JsonConverter <LocalDateTimeConverter>k__BackingField;
    [CompilerGeneratedAttribute]
private static JsonConverter <LocalTimeConverter>k__BackingField;
    [CompilerGeneratedAttribute]
private static JsonConverter <AnnualDateConverter>k__BackingField;
    [CompilerGeneratedAttribute]
private static JsonConverter <IntervalConverter>k__BackingField;
    [CompilerGeneratedAttribute]
private static JsonConverter <IsoIntervalConverter>k__BackingField;
    [CompilerGeneratedAttribute]
private static JsonConverter <DateIntervalConverter>k__BackingField;
    [CompilerGeneratedAttribute]
private static JsonConverter <IsoDateIntervalConverter>k__BackingField;
    [CompilerGeneratedAttribute]
private static JsonConverter <OffsetConverter>k__BackingField;
    [CompilerGeneratedAttribute]
private static JsonConverter <OffsetDateTimeConverter>k__BackingField;
    [CompilerGeneratedAttribute]
private static JsonConverter <OffsetDateConverter>k__BackingField;
    [CompilerGeneratedAttribute]
private static JsonConverter <OffsetTimeConverter>k__BackingField;
    [CompilerGeneratedAttribute]
private static JsonConverter <DurationConverter>k__BackingField;
    [CompilerGeneratedAttribute]
private static JsonConverter <RoundtripPeriodConverter>k__BackingField;
    [CompilerGeneratedAttribute]
private static JsonConverter <NormalizingIsoPeriodConverter>k__BackingField;
    public static JsonConverter InstantConverter { get; }
    public static JsonConverter LocalDateConverter { get; }
    public static JsonConverter LocalDateTimeConverter { get; }
    public static JsonConverter LocalTimeConverter { get; }
    public static JsonConverter AnnualDateConverter { get; }
    public static JsonConverter IntervalConverter { get; }
    public static JsonConverter IsoIntervalConverter { get; }
    public static JsonConverter DateIntervalConverter { get; }
    public static JsonConverter IsoDateIntervalConverter { get; }
    public static JsonConverter OffsetConverter { get; }
    public static JsonConverter OffsetDateTimeConverter { get; }
    public static JsonConverter OffsetDateConverter { get; }
    public static JsonConverter OffsetTimeConverter { get; }
    public static JsonConverter DurationConverter { get; }
    public static JsonConverter RoundtripPeriodConverter { get; }
    public static JsonConverter NormalizingIsoPeriodConverter { get; }
    private static NodaConverters();
    [CompilerGeneratedAttribute]
public static JsonConverter get_InstantConverter();
    [CompilerGeneratedAttribute]
public static JsonConverter get_LocalDateConverter();
    [CompilerGeneratedAttribute]
public static JsonConverter get_LocalDateTimeConverter();
    [CompilerGeneratedAttribute]
public static JsonConverter get_LocalTimeConverter();
    [CompilerGeneratedAttribute]
public static JsonConverter get_AnnualDateConverter();
    [CompilerGeneratedAttribute]
public static JsonConverter get_IntervalConverter();
    [CompilerGeneratedAttribute]
public static JsonConverter get_IsoIntervalConverter();
    [CompilerGeneratedAttribute]
public static JsonConverter get_DateIntervalConverter();
    [CompilerGeneratedAttribute]
public static JsonConverter get_IsoDateIntervalConverter();
    [CompilerGeneratedAttribute]
public static JsonConverter get_OffsetConverter();
    [CompilerGeneratedAttribute]
public static JsonConverter get_OffsetDateTimeConverter();
    [CompilerGeneratedAttribute]
public static JsonConverter get_OffsetDateConverter();
    [CompilerGeneratedAttribute]
public static JsonConverter get_OffsetTimeConverter();
    public static JsonConverter CreateZonedDateTimeConverter(IDateTimeZoneProvider provider);
    public static JsonConverter CreateDateTimeZoneConverter(IDateTimeZoneProvider provider);
    [CompilerGeneratedAttribute]
public static JsonConverter get_DurationConverter();
    [CompilerGeneratedAttribute]
public static JsonConverter get_RoundtripPeriodConverter();
    [CompilerGeneratedAttribute]
public static JsonConverter get_NormalizingIsoPeriodConverter();
    private static Action`1<T> CreateIsoValidator(Func`2<T, CalendarSystem> calendarProjection);
}
internal class NodaTime.Serialization.JsonNet.NodaDateIntervalConverter : NodaConverterBase`1<DateInterval> {
    protected virtual DateInterval ReadJsonImpl(JsonReader reader, JsonSerializer serializer);
    protected virtual void WriteJsonImpl(JsonWriter writer, DateInterval value, JsonSerializer serializer);
}
internal class NodaTime.Serialization.JsonNet.NodaDateTimeZoneConverter : NodaConverterBase`1<DateTimeZone> {
    private IDateTimeZoneProvider provider;
    public NodaDateTimeZoneConverter(IDateTimeZoneProvider provider);
    protected virtual DateTimeZone ReadJsonImpl(JsonReader reader, JsonSerializer serializer);
    protected virtual void WriteJsonImpl(JsonWriter writer, DateTimeZone value, JsonSerializer serializer);
}
internal class NodaTime.Serialization.JsonNet.NodaIntervalConverter : NodaConverterBase`1<Interval> {
    protected virtual Interval ReadJsonImpl(JsonReader reader, JsonSerializer serializer);
    protected virtual void WriteJsonImpl(JsonWriter writer, Interval value, JsonSerializer serializer);
}
internal class NodaTime.Serialization.JsonNet.NodaIsoDateIntervalConverter : NodaConverterBase`1<DateInterval> {
    protected virtual DateInterval ReadJsonImpl(JsonReader reader, JsonSerializer serializer);
    protected virtual void WriteJsonImpl(JsonWriter writer, DateInterval value, JsonSerializer serializer);
}
internal class NodaTime.Serialization.JsonNet.NodaIsoIntervalConverter : NodaConverterBase`1<Interval> {
    protected virtual Interval ReadJsonImpl(JsonReader reader, JsonSerializer serializer);
    protected virtual void WriteJsonImpl(JsonWriter writer, Interval value, JsonSerializer serializer);
}
internal class NodaTime.Serialization.JsonNet.NodaPatternConverter`1 : NodaConverterBase`1<T> {
    private IPattern`1<T> pattern;
    private Action`1<T> validator;
    public NodaPatternConverter`1(IPattern`1<T> pattern);
    public NodaPatternConverter`1(IPattern`1<T> pattern, Action`1<T> validator);
    protected virtual T ReadJsonImpl(JsonReader reader, JsonSerializer serializer);
    protected virtual void WriteJsonImpl(JsonWriter writer, T value, JsonSerializer serializer);
}
internal static class NodaTime.Serialization.JsonNet.Preconditions : object {
    internal static T CheckNotNull(T argument, string paramName);
    internal static void CheckArgument(bool expression, string parameter, string message);
    internal static void CheckData(bool expression, string messageFormat, T messageArg);
}
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[MutableAttribute]
internal class NodaTime.SkippedTimeException : ArgumentOutOfRangeException {
    [CompilerGeneratedAttribute]
private LocalDateTime <LocalDateTime>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeZone <Zone>k__BackingField;
    public LocalDateTime LocalDateTime { get; }
    public DateTimeZone Zone { get; }
    public SkippedTimeException(LocalDateTime localDateTime, DateTimeZone zone);
    [CompilerGeneratedAttribute]
public LocalDateTime get_LocalDateTime();
    [CompilerGeneratedAttribute]
public DateTimeZone get_Zone();
}
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[ImmutableAttribute]
internal class NodaTime.SystemClock : object {
    [CompilerGeneratedAttribute]
private static SystemClock <Instance>k__BackingField;
    public static SystemClock Instance { get; }
    private static SystemClock();
    [CompilerGeneratedAttribute]
public static SystemClock get_Instance();
    public sealed virtual Instant GetCurrentInstant();
}
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[ImmutableAttribute]
internal class NodaTime.Text.AnnualDatePattern : object {
    internal static AnnualDate DefaultTemplateValue;
    private static string DefaultFormatPattern;
    internal static PatternBclSupport`1<AnnualDate> BclSupport;
    [CompilerGeneratedAttribute]
private IPartialPattern`1<AnnualDate> <UnderlyingPattern>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PatternText>k__BackingField;
    [CompilerGeneratedAttribute]
private NodaFormatInfo <FormatInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private AnnualDate <TemplateValue>k__BackingField;
    public static AnnualDatePattern Iso { get; }
    internal IPartialPattern`1<AnnualDate> UnderlyingPattern { get; }
    public string PatternText { get; }
    private NodaFormatInfo FormatInfo { get; }
    public AnnualDate TemplateValue { get; }
    private AnnualDatePattern(string patternText, NodaFormatInfo formatInfo, AnnualDate templateValue, IPartialPattern`1<AnnualDate> pattern);
    private static AnnualDatePattern();
    public static AnnualDatePattern get_Iso();
    [CompilerGeneratedAttribute]
internal IPartialPattern`1<AnnualDate> get_UnderlyingPattern();
    [CompilerGeneratedAttribute]
public string get_PatternText();
    [CompilerGeneratedAttribute]
private NodaFormatInfo get_FormatInfo();
    [CompilerGeneratedAttribute]
public AnnualDate get_TemplateValue();
    public sealed virtual ParseResult`1<AnnualDate> Parse(string text);
    public sealed virtual string Format(AnnualDate value);
    public sealed virtual StringBuilder AppendFormat(AnnualDate value, StringBuilder builder);
    internal static AnnualDatePattern Create(string patternText, NodaFormatInfo formatInfo, AnnualDate templateValue);
    public static AnnualDatePattern Create(string patternText, CultureInfo cultureInfo, AnnualDate templateValue);
    public static AnnualDatePattern Create(string patternText, CultureInfo cultureInfo);
    public static AnnualDatePattern CreateWithCurrentCulture(string patternText);
    public static AnnualDatePattern CreateWithInvariantCulture(string patternText);
    private AnnualDatePattern WithFormatInfo(NodaFormatInfo formatInfo);
    public AnnualDatePattern WithCulture(CultureInfo cultureInfo);
    public AnnualDatePattern WithTemplateValue(AnnualDate newTemplateValue);
}
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal class NodaTime.Text.AnnualDatePatternParser : object {
    private AnnualDate templateValue;
    private static Dictionary`2<char, CharacterHandler`2<AnnualDate, AnnualDateParseBucket>> PatternCharacterHandlers;
    internal AnnualDatePatternParser(AnnualDate templateValue);
    private static AnnualDatePatternParser();
    public sealed virtual IPattern`1<AnnualDate> ParsePattern(string patternText, NodaFormatInfo formatInfo);
    private static void HandleDayOfMonth(PatternCursor pattern, SteppedPatternBuilder`2<AnnualDate, AnnualDateParseBucket> builder);
    [CompilerGeneratedAttribute]
private AnnualDateParseBucket <ParsePattern>b__3_0();
}
internal class NodaTime.Text.AnnualDateTypeConverter : TypeConverterBase`1<AnnualDate> {
}
internal class NodaTime.Text.CharacterHandler`2 : MulticastDelegate {
    public CharacterHandler`2(object object, IntPtr method);
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
public virtual void Invoke(PatternCursor patternCursor, SteppedPatternBuilder`2<TResult, TBucket> patternBuilder);
    public virtual IAsyncResult BeginInvoke(PatternCursor patternCursor, SteppedPatternBuilder`2<TResult, TBucket> patternBuilder, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[MutableAttribute]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
internal class NodaTime.Text.CompositePatternBuilder`1 : object {
    private List`1<IPattern`1<T>> patterns;
    private List`1<Func`2<T, bool>> formatPredicates;
    public void Add(IPattern`1<T> pattern, Func`2<T, bool> formatPredicate);
    public IPattern`1<T> Build();
    internal IPartialPattern`1<T> BuildAsPartial();
    private sealed virtual override IEnumerator`1<IPattern`1<T>> System.Collections.Generic.IEnumerable<NodaTime.Text.IPattern<T>>.GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
[ImmutableAttribute]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal class NodaTime.Text.DurationPattern : object {
    internal static PatternBclSupport`1<Duration> BclSupport;
    private IPattern`1<Duration> pattern;
    [CompilerGeneratedAttribute]
private string <PatternText>k__BackingField;
    public static DurationPattern Roundtrip { get; }
    public static DurationPattern JsonRoundtrip { get; }
    public string PatternText { get; }
    private DurationPattern(string patternText, IPattern`1<Duration> pattern);
    private static DurationPattern();
    public static DurationPattern get_Roundtrip();
    public static DurationPattern get_JsonRoundtrip();
    [CompilerGeneratedAttribute]
public string get_PatternText();
    public sealed virtual ParseResult`1<Duration> Parse(string text);
    public sealed virtual string Format(Duration value);
    public sealed virtual StringBuilder AppendFormat(Duration value, StringBuilder builder);
    private static DurationPattern Create(string patternText, NodaFormatInfo formatInfo);
    public static DurationPattern Create(string patternText, CultureInfo cultureInfo);
    public static DurationPattern CreateWithCurrentCulture(string patternText);
    public static DurationPattern CreateWithInvariantCulture(string patternText);
    public DurationPattern WithCulture(CultureInfo cultureInfo);
}
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
internal class NodaTime.Text.DurationPatternParser : object {
    private static Dictionary`2<char, CharacterHandler`2<Duration, DurationParseBucket>> PatternCharacterHandlers;
    private static DurationPatternParser();
    public sealed virtual IPattern`1<Duration> ParsePattern(string patternText, NodaFormatInfo formatInfo);
    private static int GetPositiveNanosecondOfSecond(Duration duration);
    private static CharacterHandler`2<Duration, DurationParseBucket> CreateTotalHandler(PatternFields field, long nanosecondsPerUnit, int unitsPerDay, long maxValue);
    private static CharacterHandler`2<Duration, DurationParseBucket> CreateDayHandler();
    private static CharacterHandler`2<Duration, DurationParseBucket> CreatePartialHandler(PatternFields field, long nanosecondsPerUnit, int unitsPerContainer);
    private static void HandlePlus(PatternCursor pattern, SteppedPatternBuilder`2<Duration, DurationParseBucket> builder);
    private static void HandleMinus(PatternCursor pattern, SteppedPatternBuilder`2<Duration, DurationParseBucket> builder);
    private static long GetPositiveNanosecondUnits(Duration duration, long nanosecondsPerUnit, int unitsPerDay);
}
internal class NodaTime.Text.DurationTypeConverter : TypeConverterBase`1<Duration> {
}
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal class NodaTime.Text.FixedFormatInfoPatternParser`1 : object {
    private static int CacheSize;
    private Cache`2<string, IPattern`1<T>> cache;
    internal FixedFormatInfoPatternParser`1(IPatternParser`1<T> patternParser, NodaFormatInfo formatInfo);
    internal IPattern`1<T> ParsePattern(string pattern);
}
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
internal static class NodaTime.Text.FormatHelper : object {
    private static int MaximumPaddingLength;
    private static int MaximumInt64Length;
    internal static void Format2DigitsNonNegative(int value, StringBuilder outputBuffer);
    internal static void Format4DigitsValueFits(int value, StringBuilder outputBuffer);
    internal static void LeftPad(int value, int length, StringBuilder outputBuffer);
    internal static void LeftPadNonNegative(int value, int length, StringBuilder outputBuffer);
    internal static void LeftPadNonNegativeInt64(long value, int length, StringBuilder outputBuffer);
    internal static void AppendFraction(int value, int length, int scale, StringBuilder outputBuffer);
    internal static void AppendFractionTruncate(int value, int length, int scale, StringBuilder outputBuffer);
    internal static void FormatInvariant(long value, StringBuilder outputBuffer);
}
[ImmutableAttribute]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal class NodaTime.Text.InstantPattern : object {
    internal static Instant DefaultTemplateValue;
    private static string DefaultFormatPattern;
    internal static PatternBclSupport`1<Instant> BclSupport;
    private IPattern`1<Instant> pattern;
    [CompilerGeneratedAttribute]
private string <PatternText>k__BackingField;
    [CompilerGeneratedAttribute]
private Instant <TemplateValue>k__BackingField;
    [CompilerGeneratedAttribute]
private NodaFormatInfo <FormatInfo>k__BackingField;
    public static InstantPattern General { get; }
    public static InstantPattern ExtendedIso { get; }
    public string PatternText { get; }
    public Instant TemplateValue { get; }
    private NodaFormatInfo FormatInfo { get; }
    private InstantPattern(string patternText, NodaFormatInfo formatInfo, Instant templateValue, IPattern`1<Instant> pattern);
    private static InstantPattern();
    public static InstantPattern get_General();
    public static InstantPattern get_ExtendedIso();
    [CompilerGeneratedAttribute]
public string get_PatternText();
    [CompilerGeneratedAttribute]
public Instant get_TemplateValue();
    [CompilerGeneratedAttribute]
private NodaFormatInfo get_FormatInfo();
    public sealed virtual ParseResult`1<Instant> Parse(string text);
    public sealed virtual string Format(Instant value);
    public sealed virtual StringBuilder AppendFormat(Instant value, StringBuilder builder);
    private static InstantPattern Create(string patternText, NodaFormatInfo formatInfo, Instant templateValue);
    public static InstantPattern Create(string patternText, CultureInfo cultureInfo);
    public static InstantPattern CreateWithCurrentCulture(string patternText);
    public static InstantPattern CreateWithInvariantCulture(string patternText);
    private InstantPattern WithFormatInfo(NodaFormatInfo formatInfo);
    public InstantPattern WithCulture(CultureInfo cultureInfo);
    public InstantPattern WithTemplateValue(Instant newTemplateValue);
}
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
internal class NodaTime.Text.InstantPatternParser : object {
    private static string GeneralPatternText;
    internal static string BeforeMinValueText;
    internal static string AfterMaxValueText;
    private LocalDateTime localTemplateValue;
    internal InstantPatternParser(Instant templateValue);
    public sealed virtual IPattern`1<Instant> ParsePattern(string patternText, NodaFormatInfo formatInfo);
}
internal class NodaTime.Text.InstantTypeConverter : TypeConverterBase`1<Instant> {
}
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[MutableAttribute]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal class NodaTime.Text.InvalidPatternException : FormatException {
    public InvalidPatternException(string message);
    internal InvalidPatternException(string formatString, Object[] parameters);
}
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal interface NodaTime.Text.IPartialPattern`1 {
    public abstract virtual ParseResult`1<T> ParsePartial(ValueCursor cursor);
}
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal interface NodaTime.Text.IPattern`1 {
    public abstract virtual ParseResult`1<T> Parse(string text);
    public abstract virtual string Format(T value);
    public abstract virtual StringBuilder AppendFormat(T value, StringBuilder builder);
}
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[ImmutableAttribute]
internal class NodaTime.Text.LocalDatePattern : object {
    internal static LocalDate DefaultTemplateValue;
    private static string DefaultFormatPattern;
    internal static PatternBclSupport`1<LocalDate> BclSupport;
    [CompilerGeneratedAttribute]
private IPartialPattern`1<LocalDate> <UnderlyingPattern>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PatternText>k__BackingField;
    [CompilerGeneratedAttribute]
private NodaFormatInfo <FormatInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private LocalDate <TemplateValue>k__BackingField;
    public static LocalDatePattern Iso { get; }
    public static LocalDatePattern FullRoundtrip { get; }
    internal IPartialPattern`1<LocalDate> UnderlyingPattern { get; }
    public string PatternText { get; }
    private NodaFormatInfo FormatInfo { get; }
    public LocalDate TemplateValue { get; }
    private LocalDatePattern(string patternText, NodaFormatInfo formatInfo, LocalDate templateValue, IPartialPattern`1<LocalDate> pattern);
    private static LocalDatePattern();
    public static LocalDatePattern get_Iso();
    public static LocalDatePattern get_FullRoundtrip();
    [CompilerGeneratedAttribute]
internal IPartialPattern`1<LocalDate> get_UnderlyingPattern();
    [CompilerGeneratedAttribute]
public string get_PatternText();
    [CompilerGeneratedAttribute]
private NodaFormatInfo get_FormatInfo();
    [CompilerGeneratedAttribute]
public LocalDate get_TemplateValue();
    public sealed virtual ParseResult`1<LocalDate> Parse(string text);
    public sealed virtual string Format(LocalDate value);
    public sealed virtual StringBuilder AppendFormat(LocalDate value, StringBuilder builder);
    internal static LocalDatePattern Create(string patternText, NodaFormatInfo formatInfo, LocalDate templateValue);
    public static LocalDatePattern Create(string patternText, CultureInfo cultureInfo, LocalDate templateValue);
    public static LocalDatePattern Create(string patternText, CultureInfo cultureInfo);
    public static LocalDatePattern CreateWithCurrentCulture(string patternText);
    public static LocalDatePattern CreateWithInvariantCulture(string patternText);
    private LocalDatePattern WithFormatInfo(NodaFormatInfo formatInfo);
    public LocalDatePattern WithCulture(CultureInfo cultureInfo);
    public LocalDatePattern WithTemplateValue(LocalDate newTemplateValue);
    public LocalDatePattern WithCalendar(CalendarSystem calendar);
}
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal class NodaTime.Text.LocalDatePatternParser : object {
    private LocalDate templateValue;
    private static int TwoDigitYearMax;
    private static Dictionary`2<char, CharacterHandler`2<LocalDate, LocalDateParseBucket>> PatternCharacterHandlers;
    internal LocalDatePatternParser(LocalDate templateValue);
    private static LocalDatePatternParser();
    public sealed virtual IPattern`1<LocalDate> ParsePattern(string patternText, NodaFormatInfo formatInfo);
}
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[ImmutableAttribute]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal class NodaTime.Text.LocalDateTimePattern : object {
    internal static LocalDateTime DefaultTemplateValue;
    private static string DefaultFormatPattern;
    internal static PatternBclSupport`1<LocalDateTime> BclSupport;
    [CompilerGeneratedAttribute]
private string <PatternText>k__BackingField;
    [CompilerGeneratedAttribute]
private NodaFormatInfo <FormatInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private LocalDateTime <TemplateValue>k__BackingField;
    [CompilerGeneratedAttribute]
private IPartialPattern`1<LocalDateTime> <UnderlyingPattern>k__BackingField;
    public static LocalDateTimePattern GeneralIso { get; }
    public static LocalDateTimePattern ExtendedIso { get; }
    public static LocalDateTimePattern BclRoundtrip { get; }
    public static LocalDateTimePattern FullRoundtripWithoutCalendar { get; }
    public static LocalDateTimePattern FullRoundtrip { get; }
    public string PatternText { get; }
    private NodaFormatInfo FormatInfo { get; }
    public LocalDateTime TemplateValue { get; }
    internal IPartialPattern`1<LocalDateTime> UnderlyingPattern { get; }
    private LocalDateTimePattern(string patternText, NodaFormatInfo formatInfo, LocalDateTime templateValue, IPartialPattern`1<LocalDateTime> pattern);
    private static LocalDateTimePattern();
    public static LocalDateTimePattern get_GeneralIso();
    public static LocalDateTimePattern get_ExtendedIso();
    public static LocalDateTimePattern get_BclRoundtrip();
    public static LocalDateTimePattern get_FullRoundtripWithoutCalendar();
    public static LocalDateTimePattern get_FullRoundtrip();
    [CompilerGeneratedAttribute]
public string get_PatternText();
    [CompilerGeneratedAttribute]
private NodaFormatInfo get_FormatInfo();
    [CompilerGeneratedAttribute]
public LocalDateTime get_TemplateValue();
    [CompilerGeneratedAttribute]
internal IPartialPattern`1<LocalDateTime> get_UnderlyingPattern();
    public sealed virtual ParseResult`1<LocalDateTime> Parse(string text);
    public sealed virtual string Format(LocalDateTime value);
    public sealed virtual StringBuilder AppendFormat(LocalDateTime value, StringBuilder builder);
    internal static LocalDateTimePattern Create(string patternText, NodaFormatInfo formatInfo, LocalDateTime templateValue);
    public static LocalDateTimePattern Create(string patternText, CultureInfo cultureInfo, LocalDateTime templateValue);
    public static LocalDateTimePattern Create(string patternText, CultureInfo cultureInfo);
    public static LocalDateTimePattern CreateWithCurrentCulture(string patternText);
    public static LocalDateTimePattern CreateWithInvariantCulture(string patternText);
    private LocalDateTimePattern WithFormatInfo(NodaFormatInfo formatInfo);
    public LocalDateTimePattern WithCulture(CultureInfo cultureInfo);
    public LocalDateTimePattern WithTemplateValue(LocalDateTime newTemplateValue);
    public LocalDateTimePattern WithCalendar(CalendarSystem calendar);
}
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal class NodaTime.Text.LocalDateTimePatternParser : object {
    private LocalDate templateValueDate;
    private LocalTime templateValueTime;
    private static Dictionary`2<char, CharacterHandler`2<LocalDateTime, LocalDateTimeParseBucket>> PatternCharacterHandlers;
    internal LocalDateTimePatternParser(LocalDateTime templateValue);
    private static LocalDateTimePatternParser();
    public sealed virtual IPattern`1<LocalDateTime> ParsePattern(string patternText, NodaFormatInfo formatInfo);
}
internal class NodaTime.Text.LocalDateTimeTypeConverter : TypeConverterBase`1<LocalDateTime> {
}
internal class NodaTime.Text.LocalDateTypeConverter : TypeConverterBase`1<LocalDate> {
}
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[ImmutableAttribute]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
internal class NodaTime.Text.LocalTimePattern : object {
    private static string DefaultFormatPattern;
    internal static PatternBclSupport`1<LocalTime> BclSupport;
    [CompilerGeneratedAttribute]
private IPartialPattern`1<LocalTime> <UnderlyingPattern>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PatternText>k__BackingField;
    [CompilerGeneratedAttribute]
private NodaFormatInfo <FormatInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private LocalTime <TemplateValue>k__BackingField;
    public static LocalTimePattern ExtendedIso { get; }
    public static LocalTimePattern LongExtendedIso { get; }
    public static LocalTimePattern GeneralIso { get; }
    internal IPartialPattern`1<LocalTime> UnderlyingPattern { get; }
    public string PatternText { get; }
    private NodaFormatInfo FormatInfo { get; }
    public LocalTime TemplateValue { get; }
    private LocalTimePattern(string patternText, NodaFormatInfo formatInfo, LocalTime templateValue, IPartialPattern`1<LocalTime> pattern);
    private static LocalTimePattern();
    public static LocalTimePattern get_ExtendedIso();
    public static LocalTimePattern get_LongExtendedIso();
    public static LocalTimePattern get_GeneralIso();
    [CompilerGeneratedAttribute]
internal IPartialPattern`1<LocalTime> get_UnderlyingPattern();
    [CompilerGeneratedAttribute]
public string get_PatternText();
    [CompilerGeneratedAttribute]
private NodaFormatInfo get_FormatInfo();
    [CompilerGeneratedAttribute]
public LocalTime get_TemplateValue();
    public sealed virtual ParseResult`1<LocalTime> Parse(string text);
    public sealed virtual string Format(LocalTime value);
    public sealed virtual StringBuilder AppendFormat(LocalTime value, StringBuilder builder);
    internal static LocalTimePattern Create(string patternText, NodaFormatInfo formatInfo, LocalTime templateValue);
    public static LocalTimePattern Create(string patternText, CultureInfo cultureInfo, LocalTime templateValue);
    public static LocalTimePattern Create(string patternText, CultureInfo cultureInfo);
    public static LocalTimePattern CreateWithCurrentCulture(string patternText);
    public static LocalTimePattern CreateWithInvariantCulture(string patternText);
    private LocalTimePattern WithFormatInfo(NodaFormatInfo formatInfo);
    public LocalTimePattern WithCulture(CultureInfo cultureInfo);
    public LocalTimePattern WithTemplateValue(LocalTime newTemplateValue);
}
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal class NodaTime.Text.LocalTimePatternParser : object {
    private LocalTime templateValue;
    private static Dictionary`2<char, CharacterHandler`2<LocalTime, LocalTimeParseBucket>> PatternCharacterHandlers;
    public LocalTimePatternParser(LocalTime templateValue);
    private static LocalTimePatternParser();
    public sealed virtual IPattern`1<LocalTime> ParsePattern(string patternText, NodaFormatInfo formatInfo);
}
internal class NodaTime.Text.LocalTimeTypeConverter : TypeConverterBase`1<LocalTime> {
}
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[ImmutableAttribute]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
internal class NodaTime.Text.OffsetDatePattern : object {
    internal static OffsetDate DefaultTemplateValue;
    private IPattern`1<OffsetDate> pattern;
    [CompilerGeneratedAttribute]
private string <PatternText>k__BackingField;
    [CompilerGeneratedAttribute]
private NodaFormatInfo <FormatInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private OffsetDate <TemplateValue>k__BackingField;
    public static OffsetDatePattern GeneralIso { get; }
    public static OffsetDatePattern FullRoundtrip { get; }
    public string PatternText { get; }
    internal NodaFormatInfo FormatInfo { get; }
    public OffsetDate TemplateValue { get; }
    private OffsetDatePattern(string patternText, NodaFormatInfo formatInfo, OffsetDate templateValue, IPattern`1<OffsetDate> pattern);
    private static OffsetDatePattern();
    public static OffsetDatePattern get_GeneralIso();
    public static OffsetDatePattern get_FullRoundtrip();
    [CompilerGeneratedAttribute]
public string get_PatternText();
    [CompilerGeneratedAttribute]
internal NodaFormatInfo get_FormatInfo();
    [CompilerGeneratedAttribute]
public OffsetDate get_TemplateValue();
    public sealed virtual ParseResult`1<OffsetDate> Parse(string text);
    public sealed virtual string Format(OffsetDate value);
    public sealed virtual StringBuilder AppendFormat(OffsetDate value, StringBuilder builder);
    private static OffsetDatePattern Create(string patternText, NodaFormatInfo formatInfo, OffsetDate templateValue);
    public static OffsetDatePattern Create(string patternText, CultureInfo cultureInfo, OffsetDate templateValue);
    public static OffsetDatePattern CreateWithInvariantCulture(string patternText);
    public static OffsetDatePattern CreateWithCurrentCulture(string patternText);
    public OffsetDatePattern WithPatternText(string patternText);
    private OffsetDatePattern WithFormatInfo(NodaFormatInfo formatInfo);
    public OffsetDatePattern WithCulture(CultureInfo cultureInfo);
    public OffsetDatePattern WithTemplateValue(OffsetDate newTemplateValue);
    public OffsetDatePattern WithCalendar(CalendarSystem calendar);
}
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal class NodaTime.Text.OffsetDatePatternParser : object {
    private OffsetDate templateValue;
    private static Dictionary`2<char, CharacterHandler`2<OffsetDate, OffsetDateParseBucket>> PatternCharacterHandlers;
    internal OffsetDatePatternParser(OffsetDate templateValue);
    private static OffsetDatePatternParser();
    public sealed virtual IPattern`1<OffsetDate> ParsePattern(string patternText, NodaFormatInfo formatInfo);
    private static void HandleOffset(PatternCursor pattern, SteppedPatternBuilder`2<OffsetDate, OffsetDateParseBucket> builder);
    [CompilerGeneratedAttribute]
private OffsetDateParseBucket <ParsePattern>b__3_0();
}
[ImmutableAttribute]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
internal class NodaTime.Text.OffsetDateTimePattern : object {
    internal static OffsetDateTime DefaultTemplateValue;
    private IPattern`1<OffsetDateTime> pattern;
    [CompilerGeneratedAttribute]
private string <PatternText>k__BackingField;
    [CompilerGeneratedAttribute]
private NodaFormatInfo <FormatInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private OffsetDateTime <TemplateValue>k__BackingField;
    public static OffsetDateTimePattern GeneralIso { get; }
    public static OffsetDateTimePattern ExtendedIso { get; }
    public static OffsetDateTimePattern Rfc3339 { get; }
    public static OffsetDateTimePattern FullRoundtrip { get; }
    public string PatternText { get; }
    internal NodaFormatInfo FormatInfo { get; }
    public OffsetDateTime TemplateValue { get; }
    private OffsetDateTimePattern(string patternText, NodaFormatInfo formatInfo, OffsetDateTime templateValue, IPattern`1<OffsetDateTime> pattern);
    private static OffsetDateTimePattern();
    public static OffsetDateTimePattern get_GeneralIso();
    public static OffsetDateTimePattern get_ExtendedIso();
    public static OffsetDateTimePattern get_Rfc3339();
    public static OffsetDateTimePattern get_FullRoundtrip();
    [CompilerGeneratedAttribute]
public string get_PatternText();
    [CompilerGeneratedAttribute]
internal NodaFormatInfo get_FormatInfo();
    [CompilerGeneratedAttribute]
public OffsetDateTime get_TemplateValue();
    public sealed virtual ParseResult`1<OffsetDateTime> Parse(string text);
    public sealed virtual string Format(OffsetDateTime value);
    public sealed virtual StringBuilder AppendFormat(OffsetDateTime value, StringBuilder builder);
    private static OffsetDateTimePattern Create(string patternText, NodaFormatInfo formatInfo, OffsetDateTime templateValue);
    public static OffsetDateTimePattern Create(string patternText, CultureInfo cultureInfo, OffsetDateTime templateValue);
    public static OffsetDateTimePattern CreateWithInvariantCulture(string patternText);
    public static OffsetDateTimePattern CreateWithCurrentCulture(string patternText);
    public OffsetDateTimePattern WithPatternText(string patternText);
    private OffsetDateTimePattern WithFormatInfo(NodaFormatInfo formatInfo);
    public OffsetDateTimePattern WithCulture(CultureInfo cultureInfo);
    public OffsetDateTimePattern WithTemplateValue(OffsetDateTime newTemplateValue);
    public OffsetDateTimePattern WithCalendar(CalendarSystem calendar);
}
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
internal class NodaTime.Text.OffsetDateTimePatternParser : object {
    private OffsetDateTime templateValue;
    private static Dictionary`2<char, CharacterHandler`2<OffsetDateTime, OffsetDateTimeParseBucket>> PatternCharacterHandlers;
    internal OffsetDateTimePatternParser(OffsetDateTime templateValue);
    private static OffsetDateTimePatternParser();
    public sealed virtual IPattern`1<OffsetDateTime> ParsePattern(string patternText, NodaFormatInfo formatInfo);
    private static void HandleOffset(PatternCursor pattern, SteppedPatternBuilder`2<OffsetDateTime, OffsetDateTimeParseBucket> builder);
    [CompilerGeneratedAttribute]
private OffsetDateTimeParseBucket <ParsePattern>b__3_0();
}
internal class NodaTime.Text.OffsetDateTimeTypeConverter : TypeConverterBase`1<OffsetDateTime> {
}
internal class NodaTime.Text.OffsetDateTypeConverter : TypeConverterBase`1<OffsetDate> {
}
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[ImmutableAttribute]
internal class NodaTime.Text.OffsetPattern : object {
    [CompilerGeneratedAttribute]
private static OffsetPattern <GeneralInvariant>k__BackingField;
    [CompilerGeneratedAttribute]
private static OffsetPattern <GeneralInvariantWithZ>k__BackingField;
    private static string DefaultFormatPattern;
    internal static PatternBclSupport`1<Offset> BclSupport;
    [CompilerGeneratedAttribute]
private string <PatternText>k__BackingField;
    [CompilerGeneratedAttribute]
private IPartialPattern`1<Offset> <UnderlyingPattern>k__BackingField;
    public static OffsetPattern GeneralInvariant { get; }
    public static OffsetPattern GeneralInvariantWithZ { get; }
    public string PatternText { get; }
    internal IPartialPattern`1<Offset> UnderlyingPattern { get; }
    private OffsetPattern(string patternText, IPartialPattern`1<Offset> pattern);
    private static OffsetPattern();
    [CompilerGeneratedAttribute]
public static OffsetPattern get_GeneralInvariant();
    [CompilerGeneratedAttribute]
public static OffsetPattern get_GeneralInvariantWithZ();
    [CompilerGeneratedAttribute]
public string get_PatternText();
    [CompilerGeneratedAttribute]
internal IPartialPattern`1<Offset> get_UnderlyingPattern();
    public sealed virtual ParseResult`1<Offset> Parse(string text);
    public sealed virtual string Format(Offset value);
    public sealed virtual StringBuilder AppendFormat(Offset value, StringBuilder builder);
    internal static OffsetPattern Create(string patternText, NodaFormatInfo formatInfo);
    public static OffsetPattern Create(string patternText, CultureInfo cultureInfo);
    public static OffsetPattern CreateWithCurrentCulture(string patternText);
    public static OffsetPattern CreateWithInvariantCulture(string patternText);
    public OffsetPattern WithCulture(CultureInfo cultureInfo);
}
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal class NodaTime.Text.OffsetPatternParser : object {
    private static Dictionary`2<char, CharacterHandler`2<Offset, OffsetParseBucket>> PatternCharacterHandlers;
    private static OffsetPatternParser();
    private static int GetPositiveHours(Offset offset);
    private static int GetPositiveMinutes(Offset offset);
    private static int GetPositiveSeconds(Offset offset);
    public sealed virtual IPattern`1<Offset> ParsePattern(string patternText, NodaFormatInfo formatInfo);
    private IPartialPattern`1<Offset> ParsePartialPattern(string patternText, NodaFormatInfo formatInfo);
    private static bool HasZeroSeconds(Offset offset);
    private static bool HasZeroSecondsAndMinutes(Offset offset);
    private static void HandlePlus(PatternCursor pattern, SteppedPatternBuilder`2<Offset, OffsetParseBucket> builder);
    private static void HandleMinus(PatternCursor pattern, SteppedPatternBuilder`2<Offset, OffsetParseBucket> builder);
}
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[ImmutableAttribute]
internal class NodaTime.Text.OffsetTimePattern : object {
    internal static OffsetTime DefaultTemplateValue;
    private IPattern`1<OffsetTime> pattern;
    [CompilerGeneratedAttribute]
private string <PatternText>k__BackingField;
    [CompilerGeneratedAttribute]
private NodaFormatInfo <FormatInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private OffsetTime <TemplateValue>k__BackingField;
    public static OffsetTimePattern GeneralIso { get; }
    public static OffsetTimePattern ExtendedIso { get; }
    public static OffsetTimePattern Rfc3339 { get; }
    public string PatternText { get; }
    internal NodaFormatInfo FormatInfo { get; }
    public OffsetTime TemplateValue { get; }
    private OffsetTimePattern(string patternText, NodaFormatInfo formatInfo, OffsetTime templateValue, IPattern`1<OffsetTime> pattern);
    private static OffsetTimePattern();
    public static OffsetTimePattern get_GeneralIso();
    public static OffsetTimePattern get_ExtendedIso();
    public static OffsetTimePattern get_Rfc3339();
    [CompilerGeneratedAttribute]
public string get_PatternText();
    [CompilerGeneratedAttribute]
internal NodaFormatInfo get_FormatInfo();
    [CompilerGeneratedAttribute]
public OffsetTime get_TemplateValue();
    public sealed virtual ParseResult`1<OffsetTime> Parse(string text);
    public sealed virtual string Format(OffsetTime value);
    public sealed virtual StringBuilder AppendFormat(OffsetTime value, StringBuilder builder);
    private static OffsetTimePattern Create(string patternText, NodaFormatInfo formatInfo, OffsetTime templateValue);
    public static OffsetTimePattern Create(string patternText, CultureInfo cultureInfo, OffsetTime templateValue);
    public static OffsetTimePattern CreateWithInvariantCulture(string patternText);
    public static OffsetTimePattern CreateWithCurrentCulture(string patternText);
    public OffsetTimePattern WithPatternText(string patternText);
    private OffsetTimePattern WithFormatInfo(NodaFormatInfo formatInfo);
    public OffsetTimePattern WithCulture(CultureInfo cultureInfo);
    public OffsetTimePattern WithTemplateValue(OffsetTime newTemplateValue);
}
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal class NodaTime.Text.OffsetTimePatternParser : object {
    private OffsetTime templateValue;
    private static Dictionary`2<char, CharacterHandler`2<OffsetTime, OffsetTimeParseBucket>> PatternCharacterHandlers;
    internal OffsetTimePatternParser(OffsetTime templateValue);
    private static OffsetTimePatternParser();
    public sealed virtual IPattern`1<OffsetTime> ParsePattern(string patternText, NodaFormatInfo formatInfo);
    private static void HandleOffset(PatternCursor pattern, SteppedPatternBuilder`2<OffsetTime, OffsetTimeParseBucket> builder);
    [CompilerGeneratedAttribute]
private OffsetTimeParseBucket <ParsePattern>b__3_0();
}
internal class NodaTime.Text.OffsetTimeTypeConverter : TypeConverterBase`1<OffsetTime> {
}
internal class NodaTime.Text.OffsetTypeConverter : TypeConverterBase`1<Offset> {
}
internal abstract class NodaTime.Text.ParseBucket`1 : object {
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal abstract virtual ParseResult`1<T> CalculateValue(PatternFields usedFields, string value);
}
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[ImmutableAttribute]
internal class NodaTime.Text.ParseResult`1 : object {
    private T value;
    [<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Func`1<Exception> exceptionProvider;
    [CompilerGeneratedAttribute]
private bool <ContinueAfterErrorWithMultipleFormats>k__BackingField;
    internal static ParseResult`1<T> ValueStringEmpty;
    internal static ParseResult`1<T> FormatOnlyPattern;
    internal bool ContinueAfterErrorWithMultipleFormats { get; }
    public T Value { get; }
    public Exception Exception { get; }
    public bool Success { get; }
    private ParseResult`1(Func`1<Exception> exceptionProvider, bool continueWithMultiple);
    private ParseResult`1(T value);
    private static ParseResult`1();
    [CompilerGeneratedAttribute]
internal bool get_ContinueAfterErrorWithMultipleFormats();
    public T get_Value();
    public Exception get_Exception();
    public T GetValueOrThrow();
    public bool TryGetValue(T failureValue, T& result);
    public bool get_Success();
    public ParseResult`1<TTarget> Convert(Func`2<T, TTarget> projection);
    public ParseResult`1<TTarget> ConvertError();
    public static ParseResult`1<T> ForValue(T value);
    public static ParseResult`1<T> ForException(Func`1<Exception> exceptionProvider);
    internal static ParseResult`1<T> ForInvalidValue(ValueCursor cursor, string formatString, Object[] parameters);
    internal static ParseResult`1<T> ForInvalidValuePostParse(string text, string formatString, Object[] parameters);
    private static ParseResult`1<T> ForInvalidValue(Func`1<Exception> exceptionProvider);
    internal static ParseResult`1<T> ArgumentNull(string parameter);
    internal static ParseResult`1<T> PositiveSignInvalid(ValueCursor cursor);
    internal static ParseResult`1<T> ExtraValueCharacters(ValueCursor cursor, string remainder);
    internal static ParseResult`1<T> QuotedStringMismatch(ValueCursor cursor);
    internal static ParseResult`1<T> EscapedCharacterMismatch(ValueCursor cursor, char patternCharacter);
    internal static ParseResult`1<T> EndOfString(ValueCursor cursor);
    internal static ParseResult`1<T> TimeSeparatorMismatch(ValueCursor cursor);
    internal static ParseResult`1<T> DateSeparatorMismatch(ValueCursor cursor);
    internal static ParseResult`1<T> MissingNumber(ValueCursor cursor);
    internal static ParseResult`1<T> UnexpectedNegative(ValueCursor cursor);
    internal static ParseResult`1<T> MismatchedNumber(ValueCursor cursor, string pattern);
    internal static ParseResult`1<T> MismatchedCharacter(ValueCursor cursor, char patternCharacter);
    internal static ParseResult`1<T> MismatchedText(ValueCursor cursor, char field);
    internal static ParseResult`1<T> NoMatchingFormat(ValueCursor cursor);
    internal static ParseResult`1<T> ValueOutOfRange(ValueCursor cursor, object value);
    internal static ParseResult`1<T> MissingSign(ValueCursor cursor);
    internal static ParseResult`1<T> MissingAmPmDesignator(ValueCursor cursor);
    internal static ParseResult`1<T> NoMatchingCalendarSystem(ValueCursor cursor);
    internal static ParseResult`1<T> NoMatchingZoneId(ValueCursor cursor);
    internal static ParseResult`1<T> InvalidHour24(string text);
    internal static ParseResult`1<T> FieldValueOutOfRange(ValueCursor cursor, int value, char field);
    internal static ParseResult`1<T> FieldValueOutOfRange(ValueCursor cursor, long value, char field);
    internal static ParseResult`1<T> FieldValueOutOfRangePostParse(string text, int value, char field, Type eventualResultType);
    internal static ParseResult`1<T> InconsistentValues(string text, char field1, char field2, Type eventualResultType);
    internal static ParseResult`1<T> InconsistentMonthValues(string text);
    internal static ParseResult`1<T> InconsistentDayOfWeekTextValue(string text);
    internal static ParseResult`1<T> ExpectedEndOfString(ValueCursor cursor);
    internal static ParseResult`1<T> YearOfEraOutOfRange(string text, int value, Era era, CalendarSystem calendar);
    internal static ParseResult`1<T> MonthOutOfRange(string text, int month, int year);
    internal static ParseResult`1<T> IsoMonthOutOfRange(string text, int month);
    internal static ParseResult`1<T> DayOfMonthOutOfRange(string text, int day, int month, int year);
    internal static ParseResult`1<T> DayOfMonthOutOfRangeNoYear(string text, int day, int month);
    internal static ParseResult`1<T> InvalidOffset(string text);
    internal static ParseResult`1<T> SkippedLocalTime(string text);
    internal static ParseResult`1<T> AmbiguousLocalTime(string text);
}
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal static class NodaTime.Text.Patterns.DatePatternHelper : object {
    internal static CharacterHandler`2<TResult, TBucket> CreateYearOfEraHandler(Func`2<TResult, int> yearGetter, Action`2<TBucket, int> setter);
    internal static CharacterHandler`2<TResult, TBucket> CreateMonthOfYearHandler(Func`2<TResult, int> numberGetter, Action`2<TBucket, int> textSetter, Action`2<TBucket, int> numberSetter);
    internal static CharacterHandler`2<TResult, TBucket> CreateDayHandler(Func`2<TResult, int> dayOfMonthGetter, Func`2<TResult, int> dayOfWeekGetter, Action`2<TBucket, int> dayOfMonthSetter, Action`2<TBucket, int> dayOfWeekSetter);
    internal static CharacterHandler`2<TResult, TBucket> CreateEraHandler(Func`2<TResult, Era> eraFromValue, Func`2<TBucket, LocalDateParseBucket> dateBucketFromBucket);
    internal static CharacterHandler`2<TResult, TBucket> CreateCalendarHandler(Func`2<TResult, CalendarSystem> getter, Action`2<TBucket, CalendarSystem> setter);
}
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal interface NodaTime.Text.Patterns.IPatternParser`1 {
    public abstract virtual IPattern`1<T> ParsePattern(string pattern, NodaFormatInfo formatInfo);
}
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal class NodaTime.Text.Patterns.PatternBclSupport`1 : object {
    private Func`2<NodaFormatInfo, FixedFormatInfoPatternParser`1<T>> patternParser;
    private string defaultFormatPattern;
    internal PatternBclSupport`1(string defaultFormatPattern, Func`2<NodaFormatInfo, FixedFormatInfoPatternParser`1<T>> patternParser);
    internal string Format(T value, string patternText, IFormatProvider formatProvider);
}
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
internal class NodaTime.Text.Patterns.PatternCursor : TextCursor {
    internal static char EmbeddedPatternStart;
    internal static char EmbeddedPatternEnd;
    internal PatternCursor(string pattern);
    internal string GetQuotedString(char closeQuote);
    internal int GetRepeatCount(int maximumCount);
    internal string GetEmbeddedPattern();
}
[FlagsAttribute]
internal enum NodaTime.Text.Patterns.PatternFields : Enum {
    public int value__;
    public static PatternFields None;
    public static PatternFields Sign;
    public static PatternFields Hours12;
    public static PatternFields Hours24;
    public static PatternFields Minutes;
    public static PatternFields Seconds;
    public static PatternFields FractionalSeconds;
    public static PatternFields AmPm;
    public static PatternFields Year;
    public static PatternFields YearTwoDigits;
    public static PatternFields YearOfEra;
    public static PatternFields MonthOfYearNumeric;
    public static PatternFields MonthOfYearText;
    public static PatternFields DayOfMonth;
    public static PatternFields DayOfWeek;
    public static PatternFields Era;
    public static PatternFields Calendar;
    public static PatternFields Zone;
    public static PatternFields ZoneAbbreviation;
    public static PatternFields EmbeddedOffset;
    public static PatternFields TotalDuration;
    public static PatternFields EmbeddedDate;
    public static PatternFields EmbeddedTime;
    public static PatternFields AllTimeFields;
    public static PatternFields AllDateFields;
}
[ExtensionAttribute]
internal static class NodaTime.Text.Patterns.PatternFieldsExtensions : object {
    [ExtensionAttribute]
internal static bool HasAny(PatternFields fields, PatternFields target);
    [ExtensionAttribute]
internal static bool HasAll(PatternFields fields, PatternFields target);
}
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal class NodaTime.Text.Patterns.SteppedPatternBuilder`2 : object {
    private List`1<Action`2<TResult, StringBuilder>> formatActions;
    [<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private List`1<ParseAction<TResult, TBucket>> parseActions;
    private Func`1<TBucket> bucketProvider;
    private PatternFields usedFields;
    private bool formatOnly;
    [CompilerGeneratedAttribute]
private NodaFormatInfo <FormatInfo>k__BackingField;
    internal NodaFormatInfo FormatInfo { get; }
    internal PatternFields UsedFields { get; }
    internal SteppedPatternBuilder`2(NodaFormatInfo formatInfo, Func`1<TBucket> bucketProvider);
    [CompilerGeneratedAttribute]
internal NodaFormatInfo get_FormatInfo();
    internal PatternFields get_UsedFields();
    internal TBucket CreateSampleBucket();
    internal void SetFormatOnly();
    internal void ParseCustomPattern(string patternText, Dictionary`2<char, CharacterHandler`2<TResult, TBucket>> characterHandlers);
    internal void ValidateUsedFields();
    internal IPartialPattern`1<TResult> Build(TResult sample);
    internal void AddField(PatternFields field, char characterInPattern);
    internal void AddParseAction(ParseAction<TResult, TBucket> parseAction);
    internal void AddFormatAction(Action`2<TResult, StringBuilder> formatAction);
    internal void AddParseInt64ValueAction(int minimumDigits, int maximumDigits, char patternChar, long minimumValue, long maximumValue, Action`2<TBucket, long> valueSetter);
    internal void AddParseValueAction(int minimumDigits, int maximumDigits, char patternChar, int minimumValue, int maximumValue, Action`2<TBucket, int> valueSetter);
    internal void AddLiteral(string expectedText, Func`2<ValueCursor, ParseResult`1<TResult>> failure);
    internal static void HandleQuote(PatternCursor pattern, SteppedPatternBuilder`2<TResult, TBucket> builder);
    internal static void HandleBackslash(PatternCursor pattern, SteppedPatternBuilder`2<TResult, TBucket> builder);
    internal static void HandlePercent(PatternCursor pattern, SteppedPatternBuilder`2<TResult, TBucket> builder);
    internal static CharacterHandler`2<TResult, TBucket> HandlePaddedField(int maxCount, PatternFields field, int minValue, int maxValue, Func`2<TResult, int> getter, Action`2<TBucket, int> setter);
    internal void AddLiteral(char expectedChar, Func`3<ValueCursor, char, ParseResult`1<TResult>> failureSelector);
    internal void AddParseLongestTextAction(char field, Action`2<TBucket, int> setter, CompareInfo compareInfo, IReadOnlyList`1<string> textValues);
    internal void AddParseLongestTextAction(char field, Action`2<TBucket, int> setter, CompareInfo compareInfo, IReadOnlyList`1<string> textValues1, IReadOnlyList`1<string> textValues2);
    private static void FindLongestMatch(CompareInfo compareInfo, ValueCursor cursor, IReadOnlyList`1<string> values, Int32& bestIndex, Int32& longestMatch);
    public void AddRequiredSign(Action`2<TBucket, bool> signSetter, Func`2<TResult, bool> nonNegativePredicate);
    public void AddNegativeOnlySign(Action`2<TBucket, bool> signSetter, Func`2<TResult, bool> nonNegativePredicate);
    internal void AddFormatLeftPad(int count, Func`2<TResult, int> selector, bool assumeNonNegative, bool assumeFitsInCount);
    internal void AddFormatFraction(int width, int scale, Func`2<TResult, int> selector);
    internal void AddFormatFractionTruncate(int width, int scale, Func`2<TResult, int> selector);
    internal void AddEmbeddedLocalPartial(PatternCursor pattern, Func`2<TBucket, LocalDateParseBucket> dateBucketExtractor, Func`2<TBucket, LocalTimeParseBucket> timeBucketExtractor, Func`2<TResult, LocalDate> dateExtractor, Func`2<TResult, LocalTime> timeExtractor, Func`2<TResult, LocalDateTime> dateTimeExtractor);
    internal void AddEmbeddedDatePattern(char characterInPattern, string embeddedPatternText, Func`2<TBucket, LocalDateParseBucket> dateBucketExtractor, Func`2<TResult, LocalDate> dateExtractor);
    internal void AddEmbeddedTimePattern(char characterInPattern, string embeddedPatternText, Func`2<TBucket, LocalTimeParseBucket> timeBucketExtractor, Func`2<TResult, LocalTime> timeExtractor);
    internal void AddEmbeddedPattern(IPartialPattern`1<TEmbedded> embeddedPattern, Action`2<TBucket, TEmbedded> parseAction, Func`2<TResult, TEmbedded> valueExtractor);
}
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal static class NodaTime.Text.Patterns.TimePatternHelper : object {
    internal static CharacterHandler`2<TResult, TBucket> CreatePeriodHandler(int maxCount, Func`2<TResult, int> getter, Action`2<TBucket, int> setter);
    internal static CharacterHandler`2<TResult, TBucket> CreateCommaDotHandler(int maxCount, Func`2<TResult, int> getter, Action`2<TBucket, int> setter);
    internal static CharacterHandler`2<TResult, TBucket> CreateFractionHandler(int maxCount, Func`2<TResult, int> getter, Action`2<TBucket, int> setter);
    internal static CharacterHandler`2<TResult, TBucket> CreateAmPmHandler(Func`2<TResult, int> hourOfDayGetter, Action`2<TBucket, int> amPmSetter);
    private static void HandleHalfAmPmDesignator(int count, string specifiedDesignator, int specifiedDesignatorValue, Func`2<TResult, int> hourOfDayGetter, Action`2<TBucket, int> amPmSetter, SteppedPatternBuilder`2<TResult, TBucket> builder);
}
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[ImmutableAttribute]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
internal class NodaTime.Text.PeriodPattern : object {
    [CompilerGeneratedAttribute]
private static PeriodPattern <Roundtrip>k__BackingField;
    [CompilerGeneratedAttribute]
private static PeriodPattern <NormalizingIso>k__BackingField;
    private IPattern`1<Period> pattern;
    public static PeriodPattern Roundtrip { get; }
    public static PeriodPattern NormalizingIso { get; }
    private PeriodPattern(IPattern`1<Period> pattern);
    private static PeriodPattern();
    [CompilerGeneratedAttribute]
public static PeriodPattern get_Roundtrip();
    [CompilerGeneratedAttribute]
public static PeriodPattern get_NormalizingIso();
    public sealed virtual ParseResult`1<Period> Parse(string text);
    public sealed virtual string Format(Period value);
    public sealed virtual StringBuilder AppendFormat(Period value, StringBuilder builder);
    private static void AppendValue(StringBuilder builder, long value, string suffix);
    private static ParseResult`1<Period> InvalidUnit(ValueCursor cursor, char unitCharacter);
    private static ParseResult`1<Period> RepeatedUnit(ValueCursor cursor, char unitCharacter);
    private static ParseResult`1<Period> MisplacedUnit(ValueCursor cursor, char unitCharacter);
}
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class NodaTime.Text.PeriodTypeConverter : TypeConverterBase`1<Period> {
}
[DebuggerStepThroughAttribute]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
internal abstract class NodaTime.Text.TextCursor : object {
    [CompilerGeneratedAttribute]
private int <Length>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    internal static char Nul;
    [CompilerGeneratedAttribute]
private char <Current>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Index>k__BackingField;
    internal int Length { get; }
    internal string Value { get; }
    internal char Current { get; private set; }
    internal bool HasMoreCharacters { get; }
    internal int Index { get; private set; }
    internal string Remainder { get; }
    protected TextCursor(string value);
    [CompilerGeneratedAttribute]
internal int get_Length();
    [CompilerGeneratedAttribute]
internal string get_Value();
    [CompilerGeneratedAttribute]
internal char get_Current();
    [CompilerGeneratedAttribute]
private void set_Current(char value);
    internal bool get_HasMoreCharacters();
    [CompilerGeneratedAttribute]
internal int get_Index();
    [CompilerGeneratedAttribute]
private void set_Index(int value);
    internal string get_Remainder();
    public virtual string ToString();
    internal char PeekNext();
    internal bool Move(int targetIndex);
    internal bool MoveNext();
    internal bool MovePrevious();
}
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal static class NodaTime.Text.TextErrorMessages : object {
    internal static string AmbiguousLocalTime;
    internal static string CalendarAndEra;
    internal static string DateFieldAndEmbeddedDate;
    internal static string DateSeparatorMismatch;
    internal static string DayOfMonthOutOfRange;
    internal static string DayOfMonthOutOfRangeNoYear;
    internal static string EmptyPeriod;
    internal static string EmptyZPrefixedOffsetPattern;
    internal static string EndOfString;
    internal static string EraWithoutYearOfEra;
    internal static string EscapeAtEndOfString;
    internal static string EscapedCharacterMismatch;
    internal static string ExpectedEndOfString;
    internal static string ExtraValueCharacters;
    internal static string FieldValueOutOfRange;
    internal static string FormatOnlyPattern;
    internal static string FormatStringEmpty;
    internal static string Hour12PatternNotSupported;
    internal static string InconsistentDayOfWeekTextValue;
    internal static string InconsistentMonthTextValue;
    internal static string InconsistentValues2;
    internal static string InvalidEmbeddedPatternType;
    internal static string InvalidHour24;
    internal static string InvalidOffset;
    internal static string InvalidRepeatCount;
    internal static string InvalidUnitSpecifier;
    internal static string IsoMonthOutOfRange;
    internal static string MismatchedCharacter;
    internal static string MismatchedNumber;
    internal static string MismatchedText;
    internal static string MisplacedUnitSpecifier;
    internal static string MissingAmPmDesignator;
    internal static string MissingEmbeddedPatternEnd;
    internal static string MissingEmbeddedPatternStart;
    internal static string MissingEndQuote;
    internal static string MissingNumber;
    internal static string MissingSign;
    internal static string MonthOutOfRange;
    internal static string MultipleCapitalDurationFields;
    internal static string NoMatchingCalendarSystem;
    internal static string NoMatchingFormat;
    internal static string NoMatchingZoneId;
    internal static string OverallValueOutOfRange;
    internal static string PercentAtEndOfString;
    internal static string PercentDoubled;
    internal static string PositiveSignInvalid;
    internal static string QuotedStringMismatch;
    internal static string RepeatCountExceeded;
    internal static string RepeatedFieldInPattern;
    internal static string RepeatedUnitSpecifier;
    internal static string SkippedLocalTime;
    internal static string TimeFieldAndEmbeddedTime;
    internal static string TimeSeparatorMismatch;
    internal static string UnexpectedNegative;
    internal static string UnknownStandardFormat;
    internal static string UnparsableValue;
    internal static string UnparsableValuePostParse;
    internal static string UnquotedLiteral;
    internal static string ValueOutOfRange;
    internal static string ValueStringEmpty;
    internal static string YearOfEraOutOfRange;
    internal static string ZPrefixNotAtStartOfPattern;
}
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
internal abstract class NodaTime.Text.TypeConverterBase`1 : TypeConverter {
    private IPattern`1<T> pattern;
    protected TypeConverterBase`1(IPattern`1<T> pattern);
    [PureAttribute]
public virtual bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType);
    [PureAttribute]
public virtual object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value);
    [PureAttribute]
public virtual object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType);
}
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
internal static class NodaTime.Text.TypeConverterSettings : object {
    private static object stateLock;
    private static IDateTimeZoneProvider dateTimeZoneProvider;
    public static IDateTimeZoneProvider DateTimeZoneProvider { get; public set; }
    private static TypeConverterSettings();
    public static IDateTimeZoneProvider get_DateTimeZoneProvider();
    public static void set_DateTimeZoneProvider(IDateTimeZoneProvider value);
}
[MutableAttribute]
internal class NodaTime.Text.UnparsableValueException : FormatException {
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
public UnparsableValueException(string message);
}
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
internal class NodaTime.Text.ValueCursor : TextCursor {
    internal ValueCursor(string value);
    internal bool Match(char character);
    internal bool Match(string match);
    internal bool MatchCaseInsensitive(string match, CompareInfo compareInfo, bool moveOnSuccess);
    internal int CompareOrdinal(string match);
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
internal ParseResult`1<T> ParseInt64(Int64& result);
    private ParseResult`1<T> BuildNumberOutOfRangeResult(int startIndex);
    internal bool ParseInt64Digits(int minimumDigits, int maximumDigits, Int64& result);
    internal bool ParseDigits(int minimumDigits, int maximumDigits, Int32& result);
    internal bool ParseFraction(int maximumDigits, int scale, Int32& result, int minimumDigits);
    private int GetDigit();
}
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[ImmutableAttribute]
internal class NodaTime.Text.YearMonthPattern : object {
    internal static YearMonth DefaultTemplateValue;
    private static string DefaultFormatPattern;
    internal static PatternBclSupport`1<YearMonth> BclSupport;
    [CompilerGeneratedAttribute]
private IPartialPattern`1<YearMonth> <UnderlyingPattern>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PatternText>k__BackingField;
    [CompilerGeneratedAttribute]
private NodaFormatInfo <FormatInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private YearMonth <TemplateValue>k__BackingField;
    public static YearMonthPattern Iso { get; }
    internal IPartialPattern`1<YearMonth> UnderlyingPattern { get; }
    public string PatternText { get; }
    private NodaFormatInfo FormatInfo { get; }
    public YearMonth TemplateValue { get; }
    private YearMonthPattern(string patternText, NodaFormatInfo formatInfo, YearMonth templateValue, IPartialPattern`1<YearMonth> pattern);
    private static YearMonthPattern();
    public static YearMonthPattern get_Iso();
    [CompilerGeneratedAttribute]
internal IPartialPattern`1<YearMonth> get_UnderlyingPattern();
    [CompilerGeneratedAttribute]
public string get_PatternText();
    [CompilerGeneratedAttribute]
private NodaFormatInfo get_FormatInfo();
    [CompilerGeneratedAttribute]
public YearMonth get_TemplateValue();
    public sealed virtual ParseResult`1<YearMonth> Parse(string text);
    public sealed virtual string Format(YearMonth value);
    public sealed virtual StringBuilder AppendFormat(YearMonth value, StringBuilder builder);
    internal static YearMonthPattern Create(string patternText, NodaFormatInfo formatInfo, YearMonth templateValue);
    public static YearMonthPattern Create(string patternText, CultureInfo cultureInfo, YearMonth templateValue);
    public static YearMonthPattern Create(string patternText, CultureInfo cultureInfo);
    public static YearMonthPattern CreateWithCurrentCulture(string patternText);
    public static YearMonthPattern CreateWithInvariantCulture(string patternText);
    private YearMonthPattern WithFormatInfo(NodaFormatInfo formatInfo);
    public YearMonthPattern WithCulture(CultureInfo cultureInfo);
    public YearMonthPattern WithTemplateValue(YearMonth newTemplateValue);
}
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
internal class NodaTime.Text.YearMonthPatternParser : object {
    private YearMonth templateValue;
    private static Dictionary`2<char, CharacterHandler`2<YearMonth, YearMonthParseBucket>> PatternCharacterHandlers;
    internal YearMonthPatternParser(YearMonth templateValue);
    private static YearMonthPatternParser();
    public sealed virtual IPattern`1<YearMonth> ParsePattern(string patternText, NodaFormatInfo formatInfo);
    [CompilerGeneratedAttribute]
private YearMonthParseBucket <ParsePattern>b__3_0();
}
internal class NodaTime.Text.YearMonthTypeConverter : TypeConverterBase`1<YearMonth> {
}
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[ImmutableAttribute]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal class NodaTime.Text.ZonedDateTimePattern : object {
    [CompilerGeneratedAttribute]
private static ZonedDateTime <DefaultTemplateValue>k__BackingField;
    private IPattern`1<ZonedDateTime> pattern;
    [CompilerGeneratedAttribute]
private string <PatternText>k__BackingField;
    [CompilerGeneratedAttribute]
private NodaFormatInfo <FormatInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private ZonedDateTime <TemplateValue>k__BackingField;
    [<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("2")]
[CompilerGeneratedAttribute]
private ZoneLocalMappingResolver <Resolver>k__BackingField;
    [CompilerGeneratedAttribute]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("2")]
private IDateTimeZoneProvider <ZoneProvider>k__BackingField;
    internal static ZonedDateTime DefaultTemplateValue { get; }
    public static ZonedDateTimePattern GeneralFormatOnlyIso { get; }
    public static ZonedDateTimePattern ExtendedFormatOnlyIso { get; }
    public string PatternText { get; }
    private NodaFormatInfo FormatInfo { get; }
    public ZonedDateTime TemplateValue { get; }
    [<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("2")]
public ZoneLocalMappingResolver Resolver { get; }
    [<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("2")]
public IDateTimeZoneProvider ZoneProvider { get; }
    private ZonedDateTimePattern(string patternText, NodaFormatInfo formatInfo, ZonedDateTime templateValue, ZoneLocalMappingResolver resolver, IDateTimeZoneProvider zoneProvider, IPattern`1<ZonedDateTime> pattern);
    private static ZonedDateTimePattern();
    [CompilerGeneratedAttribute]
internal static ZonedDateTime get_DefaultTemplateValue();
    public static ZonedDateTimePattern get_GeneralFormatOnlyIso();
    public static ZonedDateTimePattern get_ExtendedFormatOnlyIso();
    [CompilerGeneratedAttribute]
public string get_PatternText();
    [CompilerGeneratedAttribute]
private NodaFormatInfo get_FormatInfo();
    [CompilerGeneratedAttribute]
public ZonedDateTime get_TemplateValue();
    [CompilerGeneratedAttribute]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
public ZoneLocalMappingResolver get_Resolver();
    [CompilerGeneratedAttribute]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
public IDateTimeZoneProvider get_ZoneProvider();
    public sealed virtual ParseResult`1<ZonedDateTime> Parse(string text);
    public sealed virtual string Format(ZonedDateTime value);
    public sealed virtual StringBuilder AppendFormat(ZonedDateTime value, StringBuilder builder);
    private static ZonedDateTimePattern Create(string patternText, NodaFormatInfo formatInfo, ZoneLocalMappingResolver resolver, IDateTimeZoneProvider zoneProvider, ZonedDateTime templateValue);
    public static ZonedDateTimePattern Create(string patternText, CultureInfo cultureInfo, ZoneLocalMappingResolver resolver, IDateTimeZoneProvider zoneProvider, ZonedDateTime templateValue);
    public static ZonedDateTimePattern CreateWithInvariantCulture(string patternText, IDateTimeZoneProvider zoneProvider);
    public static ZonedDateTimePattern CreateWithCurrentCulture(string patternText, IDateTimeZoneProvider zoneProvider);
    public ZonedDateTimePattern WithPatternText(string patternText);
    private ZonedDateTimePattern WithFormatInfo(NodaFormatInfo formatInfo);
    public ZonedDateTimePattern WithCulture(CultureInfo cultureInfo);
    public ZonedDateTimePattern WithResolver(ZoneLocalMappingResolver resolver);
    public ZonedDateTimePattern WithZoneProvider(IDateTimeZoneProvider newZoneProvider);
    public ZonedDateTimePattern WithTemplateValue(ZonedDateTime newTemplateValue);
    public ZonedDateTimePattern WithCalendar(CalendarSystem calendar);
}
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal class NodaTime.Text.ZonedDateTimePatternParser : object {
    private ZonedDateTime templateValue;
    [<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("2")]
private IDateTimeZoneProvider zoneProvider;
    [<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("2")]
private ZoneLocalMappingResolver resolver;
    private static Dictionary`2<char, CharacterHandler`2<ZonedDateTime, ZonedDateTimeParseBucket>> PatternCharacterHandlers;
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
internal ZonedDateTimePatternParser(ZonedDateTime templateValue, ZoneLocalMappingResolver resolver, IDateTimeZoneProvider zoneProvider);
    private static ZonedDateTimePatternParser();
    public sealed virtual IPattern`1<ZonedDateTime> ParsePattern(string patternText, NodaFormatInfo formatInfo);
    private static void HandleZone(PatternCursor pattern, SteppedPatternBuilder`2<ZonedDateTime, ZonedDateTimeParseBucket> builder);
    private static void HandleZoneAbbreviation(PatternCursor pattern, SteppedPatternBuilder`2<ZonedDateTime, ZonedDateTimeParseBucket> builder);
    private static void HandleOffset(PatternCursor pattern, SteppedPatternBuilder`2<ZonedDateTime, ZonedDateTimeParseBucket> builder);
    private static ParseResult`1<ZonedDateTime> ParseZone(ValueCursor value, ZonedDateTimeParseBucket bucket);
    [CompilerGeneratedAttribute]
private ZonedDateTimeParseBucket <ParsePattern>b__5_0();
}
internal class NodaTime.Text.ZonedDateTimeTypeConverter : TypeConverterBase`1<ZonedDateTime> {
    [<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("2")]
private static ZonedDateTimePattern cachedPattern;
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
private static ZonedDateTimePattern GetCurrentPattern();
}
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal static class NodaTime.TimeAdjusters : object {
    [CompilerGeneratedAttribute]
private static Func`2<LocalTime, LocalTime> <TruncateToSecond>k__BackingField;
    [CompilerGeneratedAttribute]
private static Func`2<LocalTime, LocalTime> <TruncateToMinute>k__BackingField;
    [CompilerGeneratedAttribute]
private static Func`2<LocalTime, LocalTime> <TruncateToHour>k__BackingField;
    public static Func`2<LocalTime, LocalTime> TruncateToSecond { get; }
    public static Func`2<LocalTime, LocalTime> TruncateToMinute { get; }
    public static Func`2<LocalTime, LocalTime> TruncateToHour { get; }
    private static TimeAdjusters();
    [CompilerGeneratedAttribute]
public static Func`2<LocalTime, LocalTime> get_TruncateToSecond();
    [CompilerGeneratedAttribute]
public static Func`2<LocalTime, LocalTime> get_TruncateToMinute();
    [CompilerGeneratedAttribute]
public static Func`2<LocalTime, LocalTime> get_TruncateToHour();
}
internal class NodaTime.TimeZones.AmbiguousTimeResolver : MulticastDelegate {
    public AmbiguousTimeResolver(object object, IntPtr method);
    public virtual ZonedDateTime Invoke(ZonedDateTime earlier, ZonedDateTime later);
    public virtual IAsyncResult BeginInvoke(ZonedDateTime earlier, ZonedDateTime later, AsyncCallback callback, object object);
    public virtual ZonedDateTime EndInvoke(IAsyncResult result);
}
[ImmutableAttribute]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal class NodaTime.TimeZones.BclDateTimeZone : DateTimeZone {
    [<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("2")]
private static BclDateTimeZone systemDefault;
    private IZoneIntervalMap map;
    [CompilerGeneratedAttribute]
private TimeZoneInfo <OriginalZone>k__BackingField;
    public TimeZoneInfo OriginalZone { get; }
    public string DisplayName { get; }
    private BclDateTimeZone(TimeZoneInfo bclZone, Offset minOffset, Offset maxOffset, IZoneIntervalMap map);
    [CompilerGeneratedAttribute]
public TimeZoneInfo get_OriginalZone();
    public string get_DisplayName();
    public virtual ZoneInterval GetZoneInterval(Instant instant);
    public static BclDateTimeZone FromTimeZoneInfo(TimeZoneInfo bclZone);
    internal static bool AreWindowsStyleRules(AdjustmentRule[] rules);
    private static bool IsWindowsRule(AdjustmentRule rule);
    private static IZoneIntervalMap BuildMap(BclAdjustmentRule[] rules, Offset standardOffset, string standardName);
    public static BclDateTimeZone ForSystemDefault();
    [CompilerGeneratedAttribute]
internal static bool <AreWindowsStyleRules>g__IsWindowsRule|10_0(AdjustmentRule rule);
}
[ImmutableAttribute]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
internal class NodaTime.TimeZones.BclDateTimeZoneSource : object {
    public string VersionId { get; }
    public sealed virtual IEnumerable`1<string> GetIds();
    private static IEnumerable`1<string> GetTimeZoneInfoLocalIdOrEmpty();
    public sealed virtual string get_VersionId();
    private sealed virtual override DateTimeZone NodaTime.TimeZones.IDateTimeZoneSource.ForId(string id);
    public BclDateTimeZone ForId(string id);
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
public sealed virtual string GetSystemDefaultId();
}
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal class NodaTime.TimeZones.CachedDateTimeZone : DateTimeZone {
    private IZoneIntervalMap map;
    [CompilerGeneratedAttribute]
private DateTimeZone <TimeZone>k__BackingField;
    internal DateTimeZone TimeZone { get; }
    private CachedDateTimeZone(DateTimeZone timeZone, IZoneIntervalMap map);
    [CompilerGeneratedAttribute]
internal DateTimeZone get_TimeZone();
    internal static DateTimeZone ForZone(DateTimeZone timeZone);
    public virtual ZoneInterval GetZoneInterval(Instant instant);
}
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
internal static class NodaTime.TimeZones.CachingZoneIntervalMap : object {
    internal static IZoneIntervalMap CacheMap(IZoneIntervalMap map);
}
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[ImmutableAttribute]
internal class NodaTime.TimeZones.Cldr.MapZone : object {
    public static string PrimaryTerritory;
    public static string FixedOffsetTerritory;
    [CompilerGeneratedAttribute]
private string <WindowsId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Territory>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <TzdbIds>k__BackingField;
    public string WindowsId { get; }
    public string Territory { get; }
    public IList`1<string> TzdbIds { get; }
    public MapZone(string windowsId, string territory, IList`1<string> tzdbIds);
    private MapZone(string windowsId, string territory, ReadOnlyCollection`1<string> tzdbIds);
    [CompilerGeneratedAttribute]
public string get_WindowsId();
    [CompilerGeneratedAttribute]
public string get_Territory();
    [CompilerGeneratedAttribute]
public IList`1<string> get_TzdbIds();
    internal static MapZone Read(IDateTimeZoneReader reader);
    internal void Write(IDateTimeZoneWriter writer);
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
public sealed virtual bool Equals(MapZone other);
    public virtual int GetHashCode();
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual string ToString();
}
[ImmutableAttribute]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal class NodaTime.TimeZones.Cldr.WindowsZones : object {
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TzdbVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <WindowsVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<MapZone> <MapZones>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <PrimaryMapping>k__BackingField;
    public string Version { get; }
    public string TzdbVersion { get; }
    public string WindowsVersion { get; }
    public IList`1<MapZone> MapZones { get; }
    public IDictionary`2<string, string> PrimaryMapping { get; }
    internal WindowsZones(string version, string tzdbVersion, string windowsVersion, IList`1<MapZone> mapZones);
    private WindowsZones(string version, string tzdbVersion, string windowsVersion, ReadOnlyCollection`1<MapZone> mapZones);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public string get_TzdbVersion();
    [CompilerGeneratedAttribute]
public string get_WindowsVersion();
    [CompilerGeneratedAttribute]
public IList`1<MapZone> get_MapZones();
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_PrimaryMapping();
    internal static WindowsZones Read(IDateTimeZoneReader reader);
    internal void Write(IDateTimeZoneWriter writer);
}
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
[ImmutableAttribute]
internal class NodaTime.TimeZones.DateTimeZoneCache : object {
    private IDateTimeZoneSource source;
    [<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ConcurrentDictionary`2<string, DateTimeZone> timeZoneMap;
    [CompilerGeneratedAttribute]
private string <VersionId>k__BackingField;
    [CompilerGeneratedAttribute]
private ReadOnlyCollection`1<string> <Ids>k__BackingField;
    public string VersionId { get; }
    public ReadOnlyCollection`1<string> Ids { get; }
    public DateTimeZone Item { get; }
    public DateTimeZoneCache(IDateTimeZoneSource source);
    [CompilerGeneratedAttribute]
public sealed virtual string get_VersionId();
    [CompilerGeneratedAttribute]
public sealed virtual ReadOnlyCollection`1<string> get_Ids();
    public sealed virtual DateTimeZone GetSystemDefault();
    public sealed virtual DateTimeZone GetZoneOrNull(string id);
    private DateTimeZone GetZoneFromSourceOrNull(string id);
    public sealed virtual DateTimeZone get_Item(string id);
}
[MutableAttribute]
internal class NodaTime.TimeZones.DateTimeZoneNotFoundException : TimeZoneNotFoundException {
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
public DateTimeZoneNotFoundException(string message);
}
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
internal class NodaTime.TimeZones.FixedDateTimeZone : DateTimeZone {
    private ZoneInterval interval;
    public Offset Offset { get; }
    public string Name { get; }
    internal FixedDateTimeZone(Offset offset);
    internal FixedDateTimeZone(string id, Offset offset);
    internal FixedDateTimeZone(string id, Offset offset, string name);
    private static string MakeId(Offset offset);
    internal static DateTimeZone GetFixedZoneOrNull(string id);
    public Offset get_Offset();
    public string get_Name();
    public virtual ZoneInterval GetZoneInterval(Instant instant);
    public virtual ZoneLocalMapping MapLocal(LocalDateTime localDateTime);
    public virtual Offset GetUtcOffset(Instant instant);
    internal void Write(IDateTimeZoneWriter writer);
    public static DateTimeZone Read(IDateTimeZoneReader reader, string id);
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
public sealed virtual bool Equals(FixedDateTimeZone other);
    public virtual int GetHashCode();
    public virtual string ToString();
}
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal interface NodaTime.TimeZones.IDateTimeZoneSource {
    public string VersionId { get; }
    public abstract virtual IEnumerable`1<string> GetIds();
    public abstract virtual string get_VersionId();
    public abstract virtual DateTimeZone ForId(string id);
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
public abstract virtual string GetSystemDefaultId();
}
[MutableAttribute]
internal class NodaTime.TimeZones.InvalidDateTimeZoneSourceException : Exception {
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
public InvalidDateTimeZoneSourceException(string message);
}
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
internal class NodaTime.TimeZones.IO.DateTimeZoneReader : object {
    private Stream input;
    [<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IReadOnlyList`1<string> stringPool;
    private Nullable`1<byte> bufferedByte;
    public bool HasMoreData { get; }
    internal DateTimeZoneReader(Stream input, IReadOnlyList`1<string> stringPool);
    public sealed virtual bool get_HasMoreData();
    public sealed virtual int ReadCount();
    public sealed virtual int ReadSignedCount();
    private UInt32 ReadVarint();
    public sealed virtual int ReadMilliseconds();
    public sealed virtual Offset ReadOffset();
    public sealed virtual IDictionary`2<string, string> ReadDictionary();
    public sealed virtual Instant ReadZoneIntervalTransition(Nullable`1<Instant> previous);
    public sealed virtual string ReadString();
    private int ReadInt16();
    private int ReadInt32();
    private long ReadInt64();
    public sealed virtual byte ReadByte();
}
internal class NodaTime.TimeZones.IO.DateTimeZoneWriter : object {
    [<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("1")]
private Stream output;
    [<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IList`1<string> stringPool;
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal DateTimeZoneWriter(Stream output, IList`1<string> stringPool);
    public sealed virtual void WriteCount(int value);
    public sealed virtual void WriteSignedCount(int count);
    private void WriteVarint(UInt32 value);
    public sealed virtual void WriteMilliseconds(int millis);
    public sealed virtual void WriteOffset(Offset offset);
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
public sealed virtual void WriteDictionary(IDictionary`2<string, string> dictionary);
    public sealed virtual void WriteZoneIntervalTransition(Nullable`1<Instant> previous, Instant value);
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
public sealed virtual void WriteString(string value);
    private void WriteInt16(short value);
    private void WriteInt32(int value);
    private void WriteInt64(long value);
    public sealed virtual void WriteByte(byte value);
}
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal interface NodaTime.TimeZones.IO.IDateTimeZoneReader {
    public bool HasMoreData { get; }
    public abstract virtual bool get_HasMoreData();
    public abstract virtual int ReadCount();
    public abstract virtual int ReadSignedCount();
    public abstract virtual string ReadString();
    public abstract virtual byte ReadByte();
    public abstract virtual int ReadMilliseconds();
    public abstract virtual Offset ReadOffset();
    public abstract virtual Instant ReadZoneIntervalTransition(Nullable`1<Instant> previous);
    public abstract virtual IDictionary`2<string, string> ReadDictionary();
}
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal interface NodaTime.TimeZones.IO.IDateTimeZoneWriter {
    public abstract virtual void WriteCount(int count);
    public abstract virtual void WriteSignedCount(int count);
    public abstract virtual void WriteString(string value);
    public abstract virtual void WriteMilliseconds(int millis);
    public abstract virtual void WriteOffset(Offset offset);
    public abstract virtual void WriteZoneIntervalTransition(Nullable`1<Instant> previous, Instant value);
    public abstract virtual void WriteDictionary(IDictionary`2<string, string> dictionary);
    public abstract virtual void WriteByte(byte value);
}
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
internal class NodaTime.TimeZones.IO.TzdbStreamData : object {
    private static Dictionary`2<TzdbStreamFieldId, Action`2<Builder, TzdbStreamField>> FieldHandlers;
    private static int AcceptedVersion;
    private IReadOnlyList`1<string> stringPool;
    private IDictionary`2<string, TzdbStreamField> zoneFields;
    [CompilerGeneratedAttribute]
private string <TzdbVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private ReadOnlyDictionary`2<string, string> <TzdbIdMap>k__BackingField;
    [CompilerGeneratedAttribute]
private WindowsZones <WindowsMapping>k__BackingField;
    [<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ReadOnlyCollection`1<TzdbZoneLocation> <ZoneLocations>k__BackingField;
    [CompilerGeneratedAttribute]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ReadOnlyCollection`1<TzdbZone1970Location> <Zone1970Locations>k__BackingField;
    public string TzdbVersion { get; }
    public ReadOnlyDictionary`2<string, string> TzdbIdMap { get; }
    public WindowsZones WindowsMapping { get; }
    [<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ReadOnlyCollection`1<TzdbZoneLocation> ZoneLocations { get; }
    [<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ReadOnlyCollection`1<TzdbZone1970Location> Zone1970Locations { get; }
    [VisibleForTestingAttribute]
internal TzdbStreamData(Builder builder);
    private static TzdbStreamData();
    [CompilerGeneratedAttribute]
public string get_TzdbVersion();
    [CompilerGeneratedAttribute]
public ReadOnlyDictionary`2<string, string> get_TzdbIdMap();
    [CompilerGeneratedAttribute]
public WindowsZones get_WindowsMapping();
    [CompilerGeneratedAttribute]
public ReadOnlyCollection`1<TzdbZoneLocation> get_ZoneLocations();
    [CompilerGeneratedAttribute]
public ReadOnlyCollection`1<TzdbZone1970Location> get_Zone1970Locations();
    public DateTimeZone CreateZone(string id, string canonicalId);
    private static T CheckNotNull(T input, string name);
    internal static TzdbStreamData FromStream(Stream stream);
}
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
internal class NodaTime.TimeZones.IO.TzdbStreamField : object {
    private Byte[] data;
    [CompilerGeneratedAttribute]
private TzdbStreamFieldId <Id>k__BackingField;
    internal TzdbStreamFieldId Id { get; }
    [VisibleForTestingAttribute]
internal TzdbStreamField(TzdbStreamFieldId id, Byte[] data);
    [CompilerGeneratedAttribute]
internal TzdbStreamFieldId get_Id();
    internal Stream CreateStream();
    internal T ExtractSingleValue(Func`2<DateTimeZoneReader, T> readerFunction, IReadOnlyList`1<string> stringPool);
    [IteratorStateMachineAttribute("NodaTime.TimeZones.IO.TzdbStreamField/<ReadFields>d__7")]
internal static IEnumerable`1<TzdbStreamField> ReadFields(Stream input);
}
internal enum NodaTime.TimeZones.IO.TzdbStreamFieldId : Enum {
    public byte value__;
    public static TzdbStreamFieldId StringPool;
    public static TzdbStreamFieldId TimeZone;
    public static TzdbStreamFieldId TzdbVersion;
    public static TzdbStreamFieldId TzdbIdMap;
    public static TzdbStreamFieldId CldrSupplementalWindowsZones;
    public static TzdbStreamFieldId WindowsAdditionalStandardNameToIdMapping;
    public static TzdbStreamFieldId ZoneLocations;
    public static TzdbStreamFieldId Zone1970Locations;
}
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal interface NodaTime.TimeZones.IZoneIntervalMap {
    public abstract virtual ZoneInterval GetZoneInterval(Instant instant);
}
internal interface NodaTime.TimeZones.IZoneIntervalMapWithMinMax {
    public Offset MinOffset { get; }
    public Offset MaxOffset { get; }
    public abstract virtual Offset get_MinOffset();
    public abstract virtual Offset get_MaxOffset();
}
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
internal class NodaTime.TimeZones.PartialZoneIntervalMap : object {
    private IZoneIntervalMap map;
    [CompilerGeneratedAttribute]
private Instant <Start>k__BackingField;
    [CompilerGeneratedAttribute]
private Instant <End>k__BackingField;
    internal Instant Start { get; }
    internal Instant End { get; }
    private bool IsSingleInterval { get; }
    internal PartialZoneIntervalMap(Instant start, Instant end, IZoneIntervalMap map);
    [CompilerGeneratedAttribute]
internal Instant get_Start();
    [CompilerGeneratedAttribute]
internal Instant get_End();
    internal static PartialZoneIntervalMap ForZoneInterval(string name, Instant start, Instant end, Offset wallOffset, Offset savings);
    internal static PartialZoneIntervalMap ForZoneInterval(ZoneInterval interval);
    internal ZoneInterval GetZoneInterval(Instant instant);
    private bool get_IsSingleInterval();
    internal PartialZoneIntervalMap WithStart(Instant start);
    internal PartialZoneIntervalMap WithEnd(Instant end);
    internal static IZoneIntervalMap ConvertToFullMap(IEnumerable`1<PartialZoneIntervalMap> maps);
}
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal class NodaTime.TimeZones.PrecalculatedDateTimeZone : DateTimeZone {
    private ZoneInterval[] periods;
    [<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("2")]
private IZoneIntervalMapWithMinMax tailZone;
    private Instant tailZoneStart;
    [<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("2")]
private ZoneInterval firstTailZoneInterval;
    [VisibleForTestingAttribute]
internal PrecalculatedDateTimeZone(string id, ZoneInterval[] intervals, IZoneIntervalMapWithMinMax tailZone);
    internal static void ValidatePeriods(ZoneInterval[] periods, IZoneIntervalMap tailZone);
    public virtual ZoneInterval GetZoneInterval(Instant instant);
    internal void Write(IDateTimeZoneWriter writer);
    internal static DateTimeZone Read(IDateTimeZoneReader reader, string id);
    private static Offset ComputeOffset(ZoneInterval[] intervals, IZoneIntervalMapWithMinMax tailZone, OffsetAggregator aggregator);
}
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal static class NodaTime.TimeZones.Resolvers : object {
    [CompilerGeneratedAttribute]
private static AmbiguousTimeResolver <ReturnEarlier>k__BackingField;
    [CompilerGeneratedAttribute]
private static AmbiguousTimeResolver <ReturnLater>k__BackingField;
    [CompilerGeneratedAttribute]
private static AmbiguousTimeResolver <ThrowWhenAmbiguous>k__BackingField;
    [CompilerGeneratedAttribute]
private static SkippedTimeResolver <ReturnEndOfIntervalBefore>k__BackingField;
    [CompilerGeneratedAttribute]
private static SkippedTimeResolver <ReturnStartOfIntervalAfter>k__BackingField;
    [CompilerGeneratedAttribute]
private static SkippedTimeResolver <ReturnForwardShifted>k__BackingField;
    [CompilerGeneratedAttribute]
private static SkippedTimeResolver <ThrowWhenSkipped>k__BackingField;
    [CompilerGeneratedAttribute]
private static ZoneLocalMappingResolver <StrictResolver>k__BackingField;
    [CompilerGeneratedAttribute]
private static ZoneLocalMappingResolver <LenientResolver>k__BackingField;
    public static AmbiguousTimeResolver ReturnEarlier { get; }
    public static AmbiguousTimeResolver ReturnLater { get; }
    public static AmbiguousTimeResolver ThrowWhenAmbiguous { get; }
    public static SkippedTimeResolver ReturnEndOfIntervalBefore { get; }
    public static SkippedTimeResolver ReturnStartOfIntervalAfter { get; }
    public static SkippedTimeResolver ReturnForwardShifted { get; }
    public static SkippedTimeResolver ThrowWhenSkipped { get; }
    public static ZoneLocalMappingResolver StrictResolver { get; }
    public static ZoneLocalMappingResolver LenientResolver { get; }
    private static Resolvers();
    [CompilerGeneratedAttribute]
public static AmbiguousTimeResolver get_ReturnEarlier();
    [CompilerGeneratedAttribute]
public static AmbiguousTimeResolver get_ReturnLater();
    [CompilerGeneratedAttribute]
public static AmbiguousTimeResolver get_ThrowWhenAmbiguous();
    [CompilerGeneratedAttribute]
public static SkippedTimeResolver get_ReturnEndOfIntervalBefore();
    [CompilerGeneratedAttribute]
public static SkippedTimeResolver get_ReturnStartOfIntervalAfter();
    [CompilerGeneratedAttribute]
public static SkippedTimeResolver get_ReturnForwardShifted();
    [CompilerGeneratedAttribute]
public static SkippedTimeResolver get_ThrowWhenSkipped();
    [CompilerGeneratedAttribute]
public static ZoneLocalMappingResolver get_StrictResolver();
    [CompilerGeneratedAttribute]
public static ZoneLocalMappingResolver get_LenientResolver();
    public static ZoneLocalMappingResolver CreateMappingResolver(AmbiguousTimeResolver ambiguousTimeResolver, SkippedTimeResolver skippedTimeResolver);
}
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
internal class NodaTime.TimeZones.SingleZoneIntervalMap : object {
    private ZoneInterval interval;
    internal SingleZoneIntervalMap(ZoneInterval interval);
    public sealed virtual ZoneInterval GetZoneInterval(Instant instant);
}
internal class NodaTime.TimeZones.SkippedTimeResolver : MulticastDelegate {
    public SkippedTimeResolver(object object, IntPtr method);
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
public virtual ZonedDateTime Invoke(LocalDateTime localDateTime, DateTimeZone zone, ZoneInterval intervalBefore, ZoneInterval intervalAfter);
    public virtual IAsyncResult BeginInvoke(LocalDateTime localDateTime, DateTimeZone zone, ZoneInterval intervalBefore, ZoneInterval intervalAfter, AsyncCallback callback, object object);
    public virtual ZonedDateTime EndInvoke(IAsyncResult result);
}
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal class NodaTime.TimeZones.StandardDaylightAlternatingMap : object {
    private Offset standardOffset;
    private ZoneRecurrence standardRecurrence;
    private ZoneRecurrence dstRecurrence;
    public Offset MinOffset { get; }
    public Offset MaxOffset { get; }
    internal StandardDaylightAlternatingMap(Offset standardOffset, ZoneRecurrence startRecurrence, ZoneRecurrence endRecurrence);
    public sealed virtual Offset get_MinOffset();
    public sealed virtual Offset get_MaxOffset();
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
public virtual bool Equals(object other);
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
public sealed virtual bool Equals(StandardDaylightAlternatingMap other);
    public virtual int GetHashCode();
    public sealed virtual ZoneInterval GetZoneInterval(Instant instant);
    private Transition NextTransition(Instant instant, ZoneRecurrence& recurrence);
    internal void Write(IDateTimeZoneWriter writer);
    internal static StandardDaylightAlternatingMap Read(IDateTimeZoneReader reader);
}
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal static class NodaTime.TimeZones.TimeZoneInfoInterceptor : object {
    [CompilerGeneratedAttribute]
private static ITimeZoneInfoShim <Shim>k__BackingField;
    internal static ITimeZoneInfoShim Shim { get; internal set; }
    [<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("2")]
internal static TimeZoneInfo Local { get; }
    private static TimeZoneInfoInterceptor();
    [CompilerGeneratedAttribute]
internal static ITimeZoneInfoShim get_Shim();
    [CompilerGeneratedAttribute]
internal static void set_Shim(ITimeZoneInfoShim value);
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
internal static TimeZoneInfo get_Local();
    internal static TimeZoneInfo FindSystemTimeZoneById(string id);
    internal static ReadOnlyCollection`1<TimeZoneInfo> GetSystemTimeZones();
}
[<e6d5c873-dec8-4703-a863-d4c8912e7d9b>IsReadOnlyAttribute]
internal class NodaTime.TimeZones.Transition : ValueType {
    [CompilerGeneratedAttribute]
private Instant <Instant>k__BackingField;
    [CompilerGeneratedAttribute]
private Offset <NewOffset>k__BackingField;
    internal Instant Instant { get; }
    internal Offset NewOffset { get; }
    internal Transition(Instant instant, Offset newOffset);
    [CompilerGeneratedAttribute]
internal Instant get_Instant();
    [CompilerGeneratedAttribute]
internal Offset get_NewOffset();
    public sealed virtual bool Equals(Transition other);
    public static bool op_Equality(Transition left, Transition right);
    public static bool op_Inequality(Transition left, Transition right);
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
public virtual string ToString();
}
internal enum NodaTime.TimeZones.TransitionMode : Enum {
    public int value__;
    public static TransitionMode Utc;
    public static TransitionMode Wall;
    public static TransitionMode Standard;
}
[ImmutableAttribute]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal class NodaTime.TimeZones.TzdbDateTimeZoneSource : object {
    private TzdbStreamData source;
    private string version;
    private Lazy`1<IReadOnlyDictionary`2<string, string>> tzdbToWindowsId;
    private Lazy`1<IReadOnlyDictionary`2<string, string>> windowsToTzdbId;
    [CompilerGeneratedAttribute]
private ILookup`2<string, string> <Aliases>k__BackingField;
    [<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ConcurrentDictionary`2<string, string> guesses;
    public static TzdbDateTimeZoneSource Default { get; }
    public ILookup`2<string, string> Aliases { get; }
    public IDictionary`2<string, string> CanonicalIdMap { get; }
    [<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IList`1<TzdbZoneLocation> ZoneLocations { get; }
    [<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IList`1<TzdbZone1970Location> Zone1970Locations { get; }
    public string VersionId { get; }
    public string TzdbVersion { get; }
    public WindowsZones WindowsMapping { get; }
    public IReadOnlyDictionary`2<string, string> TzdbToWindowsIds { get; }
    public IReadOnlyDictionary`2<string, string> WindowsToTzdbIds { get; }
    [VisibleForTestingAttribute]
internal TzdbDateTimeZoneSource(TzdbStreamData source);
    public static TzdbDateTimeZoneSource get_Default();
    [CompilerGeneratedAttribute]
public ILookup`2<string, string> get_Aliases();
    public IDictionary`2<string, string> get_CanonicalIdMap();
    public IList`1<TzdbZoneLocation> get_ZoneLocations();
    public IList`1<TzdbZone1970Location> get_Zone1970Locations();
    public sealed virtual string get_VersionId();
    public static TzdbDateTimeZoneSource FromStream(Stream stream);
    private IReadOnlyDictionary`2<string, string> BuildTzdbToWindowsIdMap();
    private IReadOnlyDictionary`2<string, string> BuildWindowsToTzdbId();
    public sealed virtual DateTimeZone ForId(string id);
    [DebuggerStepThroughAttribute]
public sealed virtual IEnumerable`1<string> GetIds();
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
public sealed virtual string GetSystemDefaultId();
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
[VisibleForTestingAttribute]
internal string MapTimeZoneInfoId(TimeZoneInfo timeZone);
    private string GuessZoneIdByTransitions(TimeZoneInfo zone);
    internal string GuessZoneIdByTransitionsUncached(TimeZoneInfo zone, List`1<DateTimeZone> candidates);
    public string get_TzdbVersion();
    public WindowsZones get_WindowsMapping();
    public IReadOnlyDictionary`2<string, string> get_TzdbToWindowsIds();
    public IReadOnlyDictionary`2<string, string> get_WindowsToTzdbIds();
    public void Validate();
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private string <BuildWindowsToTzdbId>b__21_1(KeyValuePair`2<string, string> pair);
}
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[ImmutableAttribute]
internal class NodaTime.TimeZones.TzdbZone1970Location : object {
    private int latitudeSeconds;
    private int longitudeSeconds;
    [CompilerGeneratedAttribute]
private IList`1<Country> <Countries>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ZoneId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Comment>k__BackingField;
    public double Latitude { get; }
    public double Longitude { get; }
    public IList`1<Country> Countries { get; }
    public string ZoneId { get; }
    public string Comment { get; }
    public TzdbZone1970Location(int latitudeSeconds, int longitudeSeconds, IEnumerable`1<Country> countries, string zoneId, string comment);
    public double get_Latitude();
    public double get_Longitude();
    [CompilerGeneratedAttribute]
public IList`1<Country> get_Countries();
    [CompilerGeneratedAttribute]
public string get_ZoneId();
    [CompilerGeneratedAttribute]
public string get_Comment();
    internal void Write(IDateTimeZoneWriter writer);
    internal static TzdbZone1970Location Read(IDateTimeZoneReader reader);
}
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[ImmutableAttribute]
internal class NodaTime.TimeZones.TzdbZoneLocation : object {
    private int latitudeSeconds;
    private int longitudeSeconds;
    [CompilerGeneratedAttribute]
private string <CountryName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CountryCode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ZoneId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Comment>k__BackingField;
    public double Latitude { get; }
    public double Longitude { get; }
    public string CountryName { get; }
    public string CountryCode { get; }
    public string ZoneId { get; }
    public string Comment { get; }
    public TzdbZoneLocation(int latitudeSeconds, int longitudeSeconds, string countryName, string countryCode, string zoneId, string comment);
    public double get_Latitude();
    public double get_Longitude();
    [CompilerGeneratedAttribute]
public string get_CountryName();
    [CompilerGeneratedAttribute]
public string get_CountryCode();
    [CompilerGeneratedAttribute]
public string get_ZoneId();
    [CompilerGeneratedAttribute]
public string get_Comment();
    internal void Write(IDateTimeZoneWriter writer);
    internal static TzdbZoneLocation Read(IDateTimeZoneReader reader);
}
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[ImmutableAttribute]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal class NodaTime.TimeZones.ZoneEqualityComparer : object {
    private Interval interval;
    private Options options;
    private ZoneIntervalEqualityComparer zoneIntervalComparer;
    [VisibleForTestingAttribute]
internal Interval IntervalForTest { get; }
    [VisibleForTestingAttribute]
internal Options OptionsForTest { get; }
    private ZoneEqualityComparer(Interval interval, Options options);
    private static bool CheckOption(Options options, Options candidate);
    internal Interval get_IntervalForTest();
    internal Options get_OptionsForTest();
    public static ZoneEqualityComparer ForInterval(Interval interval);
    public ZoneEqualityComparer WithOptions(Options options);
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
public sealed virtual bool Equals(DateTimeZone x, DateTimeZone y);
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
public sealed virtual int GetHashCode(DateTimeZone obj);
    private IEnumerable`1<ZoneInterval> GetIntervals(DateTimeZone zone);
}
[ImmutableAttribute]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal class NodaTime.TimeZones.ZoneInterval : object {
    [CompilerGeneratedAttribute]
private Instant <RawStart>k__BackingField;
    [CompilerGeneratedAttribute]
private Instant <RawEnd>k__BackingField;
    private LocalInstant localStart;
    private LocalInstant localEnd;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Offset <WallOffset>k__BackingField;
    [CompilerGeneratedAttribute]
private Offset <Savings>k__BackingField;
    internal Instant RawStart { get; }
    internal Instant RawEnd { get; }
    public Offset StandardOffset { get; }
    public Duration Duration { get; }
    public bool HasStart { get; }
    public Instant End { get; }
    public bool HasEnd { get; }
    public LocalDateTime IsoLocalStart { get; }
    public LocalDateTime IsoLocalEnd { get; }
    public string Name { get; }
    public Offset WallOffset { get; }
    public Offset Savings { get; }
    public Instant Start { get; }
    public ZoneInterval(string name, Nullable`1<Instant> start, Nullable`1<Instant> end, Offset wallOffset, Offset savings);
    internal ZoneInterval(string name, Instant start, Instant end, Offset wallOffset, Offset savings);
    [CompilerGeneratedAttribute]
internal Instant get_RawStart();
    [CompilerGeneratedAttribute]
internal Instant get_RawEnd();
    [DebuggerStepThroughAttribute]
public Offset get_StandardOffset();
    [DebuggerStepThroughAttribute]
public Duration get_Duration();
    public bool get_HasStart();
    [DebuggerStepThroughAttribute]
public Instant get_End();
    public bool get_HasEnd();
    [DebuggerStepThroughAttribute]
public LocalDateTime get_IsoLocalStart();
    [DebuggerStepThroughAttribute]
public LocalDateTime get_IsoLocalEnd();
    [CompilerGeneratedAttribute]
[DebuggerStepThroughAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
[DebuggerStepThroughAttribute]
public Offset get_WallOffset();
    [CompilerGeneratedAttribute]
[DebuggerStepThroughAttribute]
public Offset get_Savings();
    [DebuggerStepThroughAttribute]
public Instant get_Start();
    internal ZoneInterval WithStart(Instant newStart);
    internal ZoneInterval WithEnd(Instant newEnd);
    [DebuggerStepThroughAttribute]
public bool Contains(Instant instant);
    [DebuggerStepThroughAttribute]
internal bool Contains(LocalInstant localInstant);
    internal bool EqualIgnoreBounds(ZoneInterval other);
    [DebuggerStepThroughAttribute]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
public sealed virtual bool Equals(ZoneInterval other);
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
public static bool op_Equality(ZoneInterval left, ZoneInterval right);
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
public static bool op_Inequality(ZoneInterval left, ZoneInterval right);
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
[DebuggerStepThroughAttribute]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public virtual string ToString();
}
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[ImmutableAttribute]
internal class NodaTime.TimeZones.ZoneLocalMapping : object {
    [CompilerGeneratedAttribute]
private DateTimeZone <Zone>k__BackingField;
    [CompilerGeneratedAttribute]
private LocalDateTime <LocalDateTime>k__BackingField;
    [CompilerGeneratedAttribute]
private ZoneInterval <EarlyInterval>k__BackingField;
    [CompilerGeneratedAttribute]
private ZoneInterval <LateInterval>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Count>k__BackingField;
    public DateTimeZone Zone { get; }
    public LocalDateTime LocalDateTime { get; }
    public ZoneInterval EarlyInterval { get; }
    public ZoneInterval LateInterval { get; }
    public int Count { get; }
    internal ZoneLocalMapping(DateTimeZone zone, LocalDateTime localDateTime, ZoneInterval earlyInterval, ZoneInterval lateInterval, int count);
    [CompilerGeneratedAttribute]
public DateTimeZone get_Zone();
    [CompilerGeneratedAttribute]
public LocalDateTime get_LocalDateTime();
    [CompilerGeneratedAttribute]
public ZoneInterval get_EarlyInterval();
    [CompilerGeneratedAttribute]
public ZoneInterval get_LateInterval();
    [CompilerGeneratedAttribute]
public int get_Count();
    public ZonedDateTime Single();
    public ZonedDateTime First();
    public ZonedDateTime Last();
    private ZonedDateTime BuildZonedDateTime(ZoneInterval interval);
}
internal class NodaTime.TimeZones.ZoneLocalMappingResolver : MulticastDelegate {
    public ZoneLocalMappingResolver(object object, IntPtr method);
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
public virtual ZonedDateTime Invoke(ZoneLocalMapping mapping);
    public virtual IAsyncResult BeginInvoke(ZoneLocalMapping mapping, AsyncCallback callback, object object);
    public virtual ZonedDateTime EndInvoke(IAsyncResult result);
}
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal class NodaTime.TimeZones.ZoneRecurrence : object {
    private LocalInstant maxLocalInstant;
    private LocalInstant minLocalInstant;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Offset <Savings>k__BackingField;
    [CompilerGeneratedAttribute]
private ZoneYearOffset <YearOffset>k__BackingField;
    [CompilerGeneratedAttribute]
private int <FromYear>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ToYear>k__BackingField;
    public string Name { get; }
    public Offset Savings { get; }
    public ZoneYearOffset YearOffset { get; }
    public int FromYear { get; }
    public int ToYear { get; }
    public bool IsInfinite { get; }
    public ZoneRecurrence(string name, Offset savings, ZoneYearOffset yearOffset, int fromYear, int toYear);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public Offset get_Savings();
    [CompilerGeneratedAttribute]
public ZoneYearOffset get_YearOffset();
    [CompilerGeneratedAttribute]
public int get_FromYear();
    [CompilerGeneratedAttribute]
public int get_ToYear();
    public bool get_IsInfinite();
    internal ZoneRecurrence WithName(string name);
    internal ZoneRecurrence ForSingleYear(int year);
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
public sealed virtual bool Equals(ZoneRecurrence other);
    internal Nullable`1<Transition> Next(Instant instant, Offset standardOffset, Offset previousSavings);
    internal Nullable`1<Transition> PreviousOrSame(Instant instant, Offset standardOffset, Offset previousSavings);
    internal Transition NextOrFail(Instant instant, Offset standardOffset, Offset previousSavings);
    internal Transition PreviousOrSameOrFail(Instant instant, Offset standardOffset, Offset previousSavings);
    internal void Write(IDateTimeZoneWriter writer);
    public static ZoneRecurrence Read(IDateTimeZoneReader reader);
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public virtual string ToString();
    internal ZoneRecurrence ToStartOfTime();
}
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal class NodaTime.TimeZones.ZoneYearOffset : object {
    private int dayOfMonth;
    private int dayOfWeek;
    private int monthOfYear;
    private bool addDay;
    [CompilerGeneratedAttribute]
private TransitionMode <Mode>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AdvanceDayOfWeek>k__BackingField;
    [CompilerGeneratedAttribute]
private LocalTime <TimeOfDay>k__BackingField;
    public TransitionMode Mode { get; }
    public bool AdvanceDayOfWeek { get; }
    public LocalTime TimeOfDay { get; }
    internal ZoneYearOffset(TransitionMode mode, int monthOfYear, int dayOfMonth, int dayOfWeek, bool advance, LocalTime timeOfDay);
    internal ZoneYearOffset(TransitionMode mode, int monthOfYear, int dayOfMonth, int dayOfWeek, bool advance, LocalTime timeOfDay, bool addDay);
    [CompilerGeneratedAttribute]
public TransitionMode get_Mode();
    [CompilerGeneratedAttribute]
public bool get_AdvanceDayOfWeek();
    [CompilerGeneratedAttribute]
public LocalTime get_TimeOfDay();
    private static void VerifyFieldValue(long minimum, long maximum, string name, long value, bool allowNegated);
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
public sealed virtual bool Equals(ZoneYearOffset other);
    public virtual string ToString();
    internal LocalInstant GetOccurrenceForYear(int year);
    internal void Write(IDateTimeZoneWriter writer);
    public static ZoneYearOffset Read(IDateTimeZoneReader reader);
    internal Offset GetRuleOffset(Offset standardOffset, Offset savings);
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
internal static class NodaTime.Utility.BclConversions : object {
    public static DayOfWeek ToDayOfWeek(IsoDayOfWeek isoDayOfWeek);
    public static IsoDayOfWeek ToIsoDayOfWeek(DayOfWeek dayOfWeek);
}
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
internal class NodaTime.Utility.Cache`2 : object {
    private int size;
    private Func`2<TKey, TValue> valueFactory;
    private ConcurrentQueue`1<TKey> keyList;
    private ConcurrentDictionary`2<TKey, TValue> dictionary;
    internal int Count { get; }
    internal List`1<TKey> Keys { get; }
    internal Cache`2(int size, Func`2<TKey, TValue> valueFactory, IEqualityComparer`1<TKey> keyComparer);
    internal TValue GetOrAdd(TKey key);
    internal int get_Count();
    internal List`1<TKey> get_Keys();
    internal void Clear();
}
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[<e6d5c873-dec8-4703-a863-d4c8912e7d9b>IsReadOnlyAttribute]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
internal class NodaTime.Utility.HashCodeHelper : ValueType {
    private static int HashCodeMultiplier;
    private static int HashCodeInitializer;
    [CompilerGeneratedAttribute]
private int <Value>k__BackingField;
    public int Value { get; }
    internal HashCodeHelper(int value);
    [CompilerGeneratedAttribute]
public int get_Value();
    internal static int Hash(T1 t1, T2 t2);
    internal static int Hash(T1 t1, T2 t2, T3 t3);
    internal static HashCodeHelper Initialize();
    internal HashCodeHelper Hash(T value);
}
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[MutableAttribute]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal class NodaTime.Utility.InvalidNodaDataException : Exception {
    public InvalidNodaDataException(string message);
    public InvalidNodaDataException(string message, Exception innerException);
}
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
internal static class NodaTime.Utility.Preconditions : object {
    [ContractAnnotationAttribute("argument:null => halt")]
internal static T CheckNotNull(T argument, string paramName);
    [ContractAnnotationAttribute("argument:null => halt")]
[ConditionalAttribute("DEBUG")]
internal static void DebugCheckNotNull(T argument, string paramName);
    internal static void CheckArgumentRange(string paramName, int value, int minInclusive, int maxInclusive);
    internal static void CheckArgumentRange(string paramName, long value, long minInclusive, long maxInclusive);
    internal static void CheckArgumentRange(string paramName, double value, double minInclusive, double maxInclusive);
    private static void ThrowArgumentOutOfRangeException(string paramName, T value, T minInclusive, T maxInclusive);
    internal static T ThrowArgumentOutOfRangeExceptionWithReturn(string paramName, T value, T minInclusive, T maxInclusive);
    [ConditionalAttribute("DEBUG")]
internal static void DebugCheckArgumentRange(string paramName, int value, int minInclusive, int maxInclusive);
    [ConditionalAttribute("DEBUG")]
internal static void DebugCheckArgumentRange(string paramName, long value, long minInclusive, long maxInclusive);
    [ContractAnnotationAttribute("expression:false => halt")]
[ConditionalAttribute("DEBUG")]
internal static void DebugCheckArgument(bool expression, string parameter, string messageFormat, Object[] messageArgs);
    [ContractAnnotationAttribute("expression:false => halt")]
internal static void CheckArgument(bool expression, string parameter, string message);
    [StringFormatMethodAttribute("messageFormat")]
[ContractAnnotationAttribute("expression:false => halt")]
internal static void CheckArgument(bool expression, string parameter, string messageFormat, T messageArg);
    [StringFormatMethodAttribute("messageFormat")]
[ContractAnnotationAttribute("expression:false => halt")]
internal static void CheckArgument(bool expression, string parameter, string messageFormat, T1 messageArg1, T2 messageArg2);
    internal static void CheckState(bool expression, string message);
    [ContractAnnotationAttribute("expression:false => halt")]
[ConditionalAttribute("DEBUG")]
internal static void DebugCheckState(bool expression, string message);
}
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal class NodaTime.Utility.ReferenceEqualityComparer`1 : object {
    public sealed virtual bool Equals(T first, T second);
    public sealed virtual int GetHashCode(T value);
}
internal static class NodaTime.Utility.TickArithmetic : object {
    internal static int TicksToDaysAndTickOfDay(long ticks, Int64& tickOfDay);
    internal static int NonNegativeTicksToDaysAndTickOfDay(long ticks, Int64& tickOfDay);
    internal static long DaysAndTickOfDayToTicks(int days, long tickOfDay);
    internal static long BoundedDaysAndTickOfDayToTicks(int days, long tickOfDay);
}
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[ExtensionAttribute]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal static class NodaTime.Xml.XmlSchemaDefinition : object {
    [CompilerGeneratedAttribute]
private static XmlQualifiedName <NodaTimeXmlNamespace>k__BackingField;
    [CompilerGeneratedAttribute]
private static XmlSchema <NodaTimeXmlSchema>k__BackingField;
    private static string YearPattern;
    private static string MonthPattern;
    private static string DayPattern;
    private static string TimePattern;
    private static string OffsetPattern;
    private static string PeriodBuilderPattern;
    private static string DurationPattern;
    private static XmlSchemaType AnnualDateSchemaType;
    private static XmlSchemaType DurationSchemaType;
    private static XmlSchemaType InstantSchemaType;
    private static XmlSchemaType IntervalSchemaType;
    private static XmlSchemaType LocalDateSchemaType;
    private static XmlSchemaType LocalDateTimeSchemaType;
    private static XmlSchemaType LocalTimeSchemaType;
    private static XmlSchemaType OffsetSchemaType;
    private static XmlSchemaType OffsetDateSchemaType;
    private static XmlSchemaType OffsetDateTimeSchemaType;
    private static XmlSchemaType OffsetTimeSchemaType;
    private static XmlSchemaType PeriodBuilderSchemaType;
    private static XmlSchemaType YearMonthSchemaType;
    private static XmlSchemaType ZonedDateTimeSchemaType;
    private static Dictionary`2<XmlSchemaType, IEnumerable`1<XmlSchemaType>> DependentSchemaTypes;
    public static XmlQualifiedName NodaTimeXmlNamespace { get; }
    public static XmlSchema NodaTimeXmlSchema { get; }
    private static XmlSchemaDefinition();
    [CompilerGeneratedAttribute]
public static XmlQualifiedName get_NodaTimeXmlNamespace();
    [CompilerGeneratedAttribute]
public static XmlSchema get_NodaTimeXmlSchema();
    internal static XmlQualifiedName AddAnnualDateSchemaType(XmlSchemaSet schemaSet);
    internal static XmlQualifiedName AddDurationSchemaType(XmlSchemaSet schemaSet);
    internal static XmlQualifiedName AddInstantSchemaType(XmlSchemaSet schemaSet);
    internal static XmlQualifiedName AddIntervalSchemaType(XmlSchemaSet schemaSet);
    internal static XmlQualifiedName AddLocalDateSchemaType(XmlSchemaSet schemaSet);
    internal static XmlQualifiedName AddLocalDateTimeSchemaType(XmlSchemaSet schemaSet);
    internal static XmlQualifiedName AddLocalTimeSchemaType(XmlSchemaSet schemaSet);
    internal static XmlQualifiedName AddOffsetSchemaType(XmlSchemaSet schemaSet);
    internal static XmlQualifiedName AddOffsetDateSchemaType(XmlSchemaSet schemaSet);
    internal static XmlQualifiedName AddOffsetDateTimeSchemaType(XmlSchemaSet schemaSet);
    internal static XmlQualifiedName AddOffsetTimeSchemaType(XmlSchemaSet schemaSet);
    internal static XmlQualifiedName AddPeriodBuilderSchemaType(XmlSchemaSet schemaSet);
    internal static XmlQualifiedName AddYearMonthSchemaType(XmlSchemaSet schemaSet);
    internal static XmlQualifiedName AddZonedDateTimeSchemaType(XmlSchemaSet schemaSet);
    [ExtensionAttribute]
private static XmlQualifiedName AddSchemaType(XmlSchemaSet schemaSet, XmlSchemaType schemaType);
    private static XmlSchema CreateNodaTimeXmlSchema();
    private static XmlSchemaComplexType CreateSchemaTypeWithAttributes(XmlSchemaType baseType, XmlSchemaAttribute[] attributes);
    private static XmlSchemaSimpleType CreatePatternRestriction(XmlSchemaType baseType, string pattern);
    private static XmlSchemaSimpleType CreatePatternRestriction(string name, XmlSchemaType baseType, string pattern);
    private static XmlSchemaType CreateEnumerationRestriction(string name, XmlSchemaType baseType, IEnumerable`1<string> values);
    private static T QualifySchemaType(T schemaType);
}
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal static class NodaTime.Xml.XmlSerializationSettings : object {
    private static object stateLock;
    private static IDateTimeZoneProvider dateTimeZoneProvider;
    public static IDateTimeZoneProvider DateTimeZoneProvider { get; public set; }
    private static XmlSerializationSettings();
    public static IDateTimeZoneProvider get_DateTimeZoneProvider();
    public static void set_DateTimeZoneProvider(IDateTimeZoneProvider value);
}
[TypeConverterAttribute("NodaTime.Text.YearMonthTypeConverter")]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[XmlSchemaProviderAttribute("AddSchema")]
internal class NodaTime.YearMonth : ValueType {
    private YearMonthDayCalendar startOfMonth;
    public CalendarSystem Calendar { get; }
    private CalendarOrdinal CalendarOrdinal { get; }
    public int Year { get; }
    public int Month { get; }
    public int YearOfEra { get; }
    public Era Era { get; }
    internal LocalDate StartDate { get; }
    internal LocalDate EndDate { get; }
    private YearMonthDay YearMonthDay { get; }
    public YearMonth(int year, int month);
    public YearMonth(int year, int month, CalendarSystem calendar);
    public YearMonth(Era era, int yearOfEra, int month);
    public YearMonth(Era era, int yearOfEra, int month, CalendarSystem calendar);
    public CalendarSystem get_Calendar();
    private CalendarOrdinal get_CalendarOrdinal();
    public int get_Year();
    public int get_Month();
    public int get_YearOfEra();
    public Era get_Era();
    internal LocalDate get_StartDate();
    internal LocalDate get_EndDate();
    private YearMonthDay get_YearMonthDay();
    [PureAttribute]
public DateInterval ToDateInterval();
    [PureAttribute]
public LocalDate OnDayOfMonth(int day);
    public sealed virtual int CompareTo(YearMonth other);
    private int TrustedCompareTo(YearMonth other);
    private sealed virtual override int System.IComparable.CompareTo(object obj);
    public static bool op_LessThan(YearMonth lhs, YearMonth rhs);
    public static bool op_LessThanOrEqual(YearMonth lhs, YearMonth rhs);
    public static bool op_GreaterThan(YearMonth lhs, YearMonth rhs);
    public static bool op_GreaterThanOrEqual(YearMonth lhs, YearMonth rhs);
    public virtual int GetHashCode();
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(YearMonth other);
    public static bool op_Equality(YearMonth lhs, YearMonth rhs);
    public static bool op_Inequality(YearMonth lhs, YearMonth rhs);
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
public sealed virtual string ToString(string patternText, IFormatProvider formatProvider);
    public static XmlQualifiedName AddSchema(XmlSchemaSet xmlSchemaSet);
    private sealed virtual override XmlSchema System.Xml.Serialization.IXmlSerializable.GetSchema();
    private sealed virtual override void System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader reader);
    private sealed virtual override void System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter writer);
}
[<e6d5c873-dec8-4703-a863-d4c8912e7d9b>IsReadOnlyAttribute]
internal class NodaTime.YearMonthDay : ValueType {
    private static int DayMask;
    private static int MonthMask;
    private int value;
    internal int Year { get; }
    internal int Month { get; }
    internal int Day { get; }
    internal YearMonthDay(int rawValue);
    internal YearMonthDay(int year, int month, int day);
    internal int get_Year();
    internal int get_Month();
    internal int get_Day();
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal static YearMonthDay Parse(string text);
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
public virtual string ToString();
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal YearMonthDayCalendar WithCalendar(CalendarSystem calendar);
    internal YearMonthDayCalendar WithCalendarOrdinal(CalendarOrdinal calendarOrdinal);
    public sealed virtual int CompareTo(YearMonthDay other);
    public sealed virtual bool Equals(YearMonthDay other);
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(YearMonthDay lhs, YearMonthDay rhs);
    public static bool op_Inequality(YearMonthDay lhs, YearMonthDay rhs);
    public static bool op_LessThan(YearMonthDay lhs, YearMonthDay rhs);
    public static bool op_LessThanOrEqual(YearMonthDay lhs, YearMonthDay rhs);
    public static bool op_GreaterThan(YearMonthDay lhs, YearMonthDay rhs);
    public static bool op_GreaterThanOrEqual(YearMonthDay lhs, YearMonthDay rhs);
}
[<e6d5c873-dec8-4703-a863-d4c8912e7d9b>IsReadOnlyAttribute]
internal class NodaTime.YearMonthDayCalendar : ValueType {
    internal static int CalendarBits;
    internal static int DayBits;
    internal static int MonthBits;
    internal static int YearBits;
    private static int CalendarDayBits;
    private static int CalendarDayMonthBits;
    private static int CalendarMask;
    private static int DayMask;
    private static int MonthMask;
    private static int YearMask;
    private int value;
    internal CalendarOrdinal CalendarOrdinal { get; }
    internal int Year { get; }
    internal int Month { get; }
    internal int Day { get; }
    internal YearMonthDayCalendar(int yearMonthDay, CalendarOrdinal calendarOrdinal);
    internal YearMonthDayCalendar(int year, int month, int day, CalendarOrdinal calendarOrdinal);
    internal CalendarOrdinal get_CalendarOrdinal();
    internal int get_Year();
    internal int get_Month();
    internal int get_Day();
    [VisibleForTestingAttribute]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
internal static YearMonthDayCalendar Parse(string text);
    internal YearMonthDay ToYearMonthDay();
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
public virtual string ToString();
    public static bool op_Equality(YearMonthDayCalendar lhs, YearMonthDayCalendar rhs);
    public static bool op_Inequality(YearMonthDayCalendar lhs, YearMonthDayCalendar rhs);
    public sealed virtual bool Equals(YearMonthDayCalendar other);
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[ImmutableAttribute]
internal class NodaTime.ZonedClock : object {
    [CompilerGeneratedAttribute]
private IClock <Clock>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeZone <Zone>k__BackingField;
    [CompilerGeneratedAttribute]
private CalendarSystem <Calendar>k__BackingField;
    public IClock Clock { get; }
    public DateTimeZone Zone { get; }
    public CalendarSystem Calendar { get; }
    public ZonedClock(IClock clock, DateTimeZone zone, CalendarSystem calendar);
    [CompilerGeneratedAttribute]
public IClock get_Clock();
    [CompilerGeneratedAttribute]
public DateTimeZone get_Zone();
    [CompilerGeneratedAttribute]
public CalendarSystem get_Calendar();
    public sealed virtual Instant GetCurrentInstant();
    [PureAttribute]
public ZonedDateTime GetCurrentZonedDateTime();
    [PureAttribute]
public LocalDateTime GetCurrentLocalDateTime();
    [PureAttribute]
public OffsetDateTime GetCurrentOffsetDateTime();
    [PureAttribute]
public LocalDate GetCurrentDate();
    [PureAttribute]
public LocalTime GetCurrentTimeOfDay();
}
[<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute("0")]
[<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("1")]
[<e6d5c873-dec8-4703-a863-d4c8912e7d9b>IsReadOnlyAttribute]
[XmlSchemaProviderAttribute("AddSchema")]
[TypeConverterAttribute("NodaTime.Text.ZonedDateTimeTypeConverter")]
internal class NodaTime.ZonedDateTime : ValueType {
    private OffsetDateTime offsetDateTime;
    private DateTimeZone zone;
    public Offset Offset { get; }
    public DateTimeZone Zone { get; }
    public LocalDateTime LocalDateTime { get; }
    public CalendarSystem Calendar { get; }
    public LocalDate Date { get; }
    public LocalTime TimeOfDay { get; }
    public Era Era { get; }
    public int Year { get; }
    public int YearOfEra { get; }
    public int Month { get; }
    public int DayOfYear { get; }
    public int Day { get; }
    public IsoDayOfWeek DayOfWeek { get; }
    public int Hour { get; }
    public int ClockHourOfHalfDay { get; }
    public int Minute { get; }
    public int Second { get; }
    public int Millisecond { get; }
    public int TickOfSecond { get; }
    public long TickOfDay { get; }
    public int NanosecondOfSecond { get; }
    public long NanosecondOfDay { get; }
    internal ZonedDateTime(OffsetDateTime offsetDateTime, DateTimeZone zone);
    public ZonedDateTime(Instant instant, DateTimeZone zone, CalendarSystem calendar);
    public ZonedDateTime(Instant instant, DateTimeZone zone);
    public ZonedDateTime(LocalDateTime localDateTime, DateTimeZone zone, Offset offset);
    public Offset get_Offset();
    public DateTimeZone get_Zone();
    public LocalDateTime get_LocalDateTime();
    public CalendarSystem get_Calendar();
    public LocalDate get_Date();
    public LocalTime get_TimeOfDay();
    public Era get_Era();
    public int get_Year();
    public int get_YearOfEra();
    public int get_Month();
    public int get_DayOfYear();
    public int get_Day();
    public IsoDayOfWeek get_DayOfWeek();
    public int get_Hour();
    public int get_ClockHourOfHalfDay();
    public int get_Minute();
    public int get_Second();
    public int get_Millisecond();
    public int get_TickOfSecond();
    public long get_TickOfDay();
    public int get_NanosecondOfSecond();
    public long get_NanosecondOfDay();
    [PureAttribute]
public Instant ToInstant();
    [PureAttribute]
public ZonedDateTime WithZone(DateTimeZone targetZone);
    [PureAttribute]
public ZonedDateTime WithCalendar(CalendarSystem calendar);
    public sealed virtual bool Equals(ZonedDateTime other);
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(ZonedDateTime left, ZonedDateTime right);
    public static bool op_Inequality(ZonedDateTime left, ZonedDateTime right);
    public static ZonedDateTime Add(ZonedDateTime zonedDateTime, Duration duration);
    [PureAttribute]
public ZonedDateTime Plus(Duration duration);
    [PureAttribute]
public ZonedDateTime PlusHours(int hours);
    [PureAttribute]
public ZonedDateTime PlusMinutes(int minutes);
    [PureAttribute]
public ZonedDateTime PlusSeconds(long seconds);
    [PureAttribute]
public ZonedDateTime PlusMilliseconds(long milliseconds);
    [PureAttribute]
public ZonedDateTime PlusTicks(long ticks);
    [PureAttribute]
public ZonedDateTime PlusNanoseconds(long nanoseconds);
    public static ZonedDateTime op_Addition(ZonedDateTime zonedDateTime, Duration duration);
    public static ZonedDateTime Subtract(ZonedDateTime zonedDateTime, Duration duration);
    [PureAttribute]
public ZonedDateTime Minus(Duration duration);
    public static ZonedDateTime op_Subtraction(ZonedDateTime zonedDateTime, Duration duration);
    public static Duration Subtract(ZonedDateTime end, ZonedDateTime start);
    [PureAttribute]
public Duration Minus(ZonedDateTime other);
    public static Duration op_Subtraction(ZonedDateTime end, ZonedDateTime start);
    [PureAttribute]
public ZoneInterval GetZoneInterval();
    [PureAttribute]
public bool IsDaylightSavingTime();
    public virtual string ToString();
    [<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute("2")]
public sealed virtual string ToString(string patternText, IFormatProvider formatProvider);
    [PureAttribute]
public DateTimeOffset ToDateTimeOffset();
    public static ZonedDateTime FromDateTimeOffset(DateTimeOffset dateTimeOffset);
    [PureAttribute]
public DateTime ToDateTimeUtc();
    [PureAttribute]
public DateTime ToDateTimeUnspecified();
    [PureAttribute]
public OffsetDateTime ToOffsetDateTime();
    [PureAttribute]
public void Deconstruct(LocalDateTime& localDateTime, DateTimeZone& dateTimeZone, Offset& offset);
    public static XmlQualifiedName AddSchema(XmlSchemaSet xmlSchemaSet);
    private sealed virtual override XmlSchema System.Xml.Serialization.IXmlSerializable.GetSchema();
    private sealed virtual override void System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader reader);
    private sealed virtual override void System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter writer);
}
[CommandAttribute("delta", "Mono.Cecil.CustomAttributeArgument[]")]
internal class Octodiff.CommandLine.DeltaCommand : object {
    private List`1<Action`1<DeltaBuilder>> configuration;
    private OptionSet options;
    private string newFilePath;
    private string signatureFilePath;
    private string deltaFilePath;
    public sealed virtual void GetHelp(TextWriter writer);
    public sealed virtual int Execute(String[] commandLineArguments);
    [CompilerGeneratedAttribute]
private void <.ctor>b__5_0(string v);
    [CompilerGeneratedAttribute]
private void <.ctor>b__5_1(string v);
    [CompilerGeneratedAttribute]
private void <.ctor>b__5_2(string v);
    [CompilerGeneratedAttribute]
private void <.ctor>b__5_3(string v);
}
[CommandAttribute("explain-delta", "Mono.Cecil.CustomAttributeArgument[]")]
internal class Octodiff.CommandLine.ExplainDeltaCommand : object {
    private OptionSet options;
    private string deltaFilePath;
    public sealed virtual void GetHelp(TextWriter writer);
    public sealed virtual int Execute(String[] commandLineArguments);
    [CompilerGeneratedAttribute]
private void <.ctor>b__2_0(string v);
}
[CommandAttribute("help", "Mono.Cecil.CustomAttributeArgument[]")]
internal class Octodiff.CommandLine.HelpCommand : object {
    private ICommandLocator commands;
    public sealed virtual void GetHelp(TextWriter writer);
    public sealed virtual int Execute(String[] commandLineArguments);
    private void PrintCommandHelp(string executable, ICommand command, ICommandMetadata commandMetadata, string commandName);
    private void PrintGeneralHelp(string executable);
}
internal abstract class Octodiff.CommandLine.Option : object {
    private string prototype;
    private string description;
    private String[] names;
    private OptionValueType type;
    private int count;
    private String[] separators;
    private static Char[] NameTerminator;
    public string Prototype { get; }
    public string Description { get; }
    public OptionValueType OptionValueType { get; }
    public int MaxValueCount { get; }
    internal String[] Names { get; }
    internal String[] ValueSeparators { get; }
    protected Option(string prototype, string description);
    protected Option(string prototype, string description, int maxValueCount);
    private static Option();
    public string get_Prototype();
    public string get_Description();
    public OptionValueType get_OptionValueType();
    public int get_MaxValueCount();
    public String[] GetNames();
    public String[] GetValueSeparators();
    protected static T Parse(string value, OptionContext c);
    internal String[] get_Names();
    internal String[] get_ValueSeparators();
    private OptionValueType ParsePrototype();
    private static void AddSeparators(string name, int end, ICollection`1<string> seps);
    public void Invoke(OptionContext c);
    protected abstract virtual void OnParseComplete(OptionContext c);
    public virtual string ToString();
}
internal class Octodiff.CommandLine.OptionAction`2 : MulticastDelegate {
    public OptionAction`2(object object, IntPtr method);
    public virtual void Invoke(TKey key, TValue value);
    public virtual IAsyncResult BeginInvoke(TKey key, TValue value, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class Octodiff.CommandLine.OptionContext : object {
    private Option option;
    private string name;
    private int index;
    private OptionSet set;
    private OptionValueCollection c;
    public Option Option { get; public set; }
    public string OptionName { get; public set; }
    public int OptionIndex { get; public set; }
    public OptionSet OptionSet { get; }
    public OptionValueCollection OptionValues { get; }
    public OptionContext(OptionSet set);
    public Option get_Option();
    public void set_Option(Option value);
    public string get_OptionName();
    public void set_OptionName(string value);
    public int get_OptionIndex();
    public void set_OptionIndex(int value);
    public OptionSet get_OptionSet();
    public OptionValueCollection get_OptionValues();
}
internal class Octodiff.CommandLine.OptionException : Exception {
    private string option;
    public string OptionName { get; }
    public OptionException(string message, string optionName);
    public OptionException(string message, string optionName, Exception innerException);
    public string get_OptionName();
}
internal class Octodiff.CommandLine.OptionSet : KeyedCollection`2<string, Option> {
    private List`1<Tuple`3<string, string, Action`1<string>>> positionalParameters;
    private Func`2<string, string> localizer;
    private Regex ValueOption;
    private static int OptionWidth;
    public Func`2<string, string> MessageLocalizer { get; }
    public OptionSet(Func`2<string, string> localizer);
    public Func`2<string, string> get_MessageLocalizer();
    protected virtual string GetKeyForItem(Option item);
    [ObsoleteAttribute("Use KeyedCollection.this[string]")]
protected Option GetOptionForName(string option);
    protected virtual void InsertItem(int index, Option item);
    protected virtual void RemoveItem(int index);
    protected virtual void SetItem(int index, Option item);
    private void AddImpl(Option option);
    public OptionSet Add(Option option);
    public void Positional(string name, string description, Action`1<string> valueCallback);
    public OptionSet Add(string prototype, Action`1<string> action);
    public OptionSet Add(string prototype, string description, Action`1<string> action);
    public OptionSet Add(string prototype, OptionAction`2<string, string> action);
    public OptionSet Add(string prototype, string description, OptionAction`2<string, string> action);
    public OptionSet Add(string prototype, Action`1<T> action);
    public OptionSet Add(string prototype, string description, Action`1<T> action);
    public OptionSet Add(string prototype, OptionAction`2<TKey, TValue> action);
    public OptionSet Add(string prototype, string description, OptionAction`2<TKey, TValue> action);
    protected virtual OptionContext CreateOptionContext();
    public List`1<string> Parse(IEnumerable`1<string> arguments);
    private static bool Unprocessed(ICollection`1<string> extra, Option def, OptionContext c, string argument);
    protected bool GetOptionParts(string argument, String& flag, String& name, String& sep, String& value);
    protected virtual bool Parse(string argument, OptionContext c);
    private void ParseValue(string option, OptionContext c);
    private bool ParseBool(string option, string n, OptionContext c);
    private bool ParseBundledValue(string f, string n, OptionContext c);
    private static void Invoke(OptionContext c, string name, string value, Option option);
    public List`1<string> GetPositionals();
    public void WriteOptionDescriptions(TextWriter o);
    private bool WriteOptionPrototype(TextWriter o, Option p, Int32& written);
    private static int GetNextOptionIndex(String[] names, int i);
    private static void Write(TextWriter o, Int32& n, string s);
    private static string GetArgumentName(int index, int maxIndex, string description);
    private static string GetDescription(string description);
    [IteratorStateMachineAttribute("Octodiff.CommandLine.OptionSet/<GetLines>d__43")]
private static IEnumerable`1<string> GetLines(string description);
    private static bool IsEolChar(char c);
    private static int GetLineEnd(int start, int length, string description);
}
[DefaultMemberAttribute("Item")]
internal class Octodiff.CommandLine.OptionValueCollection : object {
    private List`1<string> values;
    private OptionContext c;
    private bool System.Collections.ICollection.IsSynchronized { get; }
    private object System.Collections.ICollection.SyncRoot { get; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    private bool System.Collections.IList.IsFixedSize { get; }
    private object System.Collections.IList.Item { get; private set; }
    public string Item { get; public set; }
    internal OptionValueCollection(OptionContext c);
    private sealed virtual override void System.Collections.ICollection.CopyTo(Array array, int index);
    private sealed virtual override bool System.Collections.ICollection.get_IsSynchronized();
    private sealed virtual override object System.Collections.ICollection.get_SyncRoot();
    public sealed virtual void Add(string item);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(string item);
    public sealed virtual void CopyTo(String[] array, int arrayIndex);
    public sealed virtual bool Remove(string item);
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public sealed virtual IEnumerator`1<string> GetEnumerator();
    private sealed virtual override int System.Collections.IList.Add(object value);
    private sealed virtual override bool System.Collections.IList.Contains(object value);
    private sealed virtual override int System.Collections.IList.IndexOf(object value);
    private sealed virtual override void System.Collections.IList.Insert(int index, object value);
    private sealed virtual override void System.Collections.IList.Remove(object value);
    private sealed virtual override void System.Collections.IList.RemoveAt(int index);
    private sealed virtual override bool System.Collections.IList.get_IsFixedSize();
    private sealed virtual override object System.Collections.IList.get_Item(int index);
    private sealed virtual override void System.Collections.IList.set_Item(int index, object value);
    public sealed virtual int IndexOf(string item);
    public sealed virtual void Insert(int index, string item);
    public sealed virtual void RemoveAt(int index);
    private void AssertValid(int index);
    public sealed virtual string get_Item(int index);
    public sealed virtual void set_Item(int index, string value);
    public List`1<string> ToList();
    public String[] ToArray();
    public virtual string ToString();
}
internal enum Octodiff.CommandLine.OptionValueType : Enum {
    public int value__;
    public static OptionValueType None;
    public static OptionValueType Optional;
    public static OptionValueType Required;
}
[CommandAttribute("patch", "Mono.Cecil.CustomAttributeArgument[]")]
internal class Octodiff.CommandLine.PatchCommand : object {
    private OptionSet options;
    private IProgressReporter progressReporter;
    private string basisFilePath;
    private string deltaFilePath;
    private string newFilePath;
    private bool skipHashCheck;
    public sealed virtual void GetHelp(TextWriter writer);
    public sealed virtual int Execute(String[] commandLineArguments);
    [CompilerGeneratedAttribute]
private void <.ctor>b__6_0(string v);
    [CompilerGeneratedAttribute]
private void <.ctor>b__6_1(string v);
    [CompilerGeneratedAttribute]
private void <.ctor>b__6_2(string v);
    [CompilerGeneratedAttribute]
private void <.ctor>b__6_3(string v);
    [CompilerGeneratedAttribute]
private void <.ctor>b__6_4(string v);
}
[CommandAttribute("signature", "Mono.Cecil.CustomAttributeArgument[]")]
internal class Octodiff.CommandLine.SignatureCommand : object {
    private List`1<Action`1<SignatureBuilder>> configuration;
    private OptionSet options;
    private string basisFilePath;
    private string signatureFilePath;
    public sealed virtual void GetHelp(TextWriter writer);
    public sealed virtual int Execute(String[] commandLineArguments);
    [CompilerGeneratedAttribute]
private void <.ctor>b__4_0(string v);
    [CompilerGeneratedAttribute]
private void <.ctor>b__4_1(string v);
    [CompilerGeneratedAttribute]
private void <.ctor>b__4_2(string v);
    [CompilerGeneratedAttribute]
private void <.ctor>b__4_3(string v);
}
[AttributeUsageAttribute("4")]
internal class Octodiff.CommandLine.Support.CommandAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Aliases>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Usage>k__BackingField;
    public string Name { get; public set; }
    public String[] Aliases { get; public set; }
    public string Description { get; public set; }
    public string Usage { get; public set; }
    public CommandAttribute(string name, String[] aliases);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public sealed virtual String[] get_Aliases();
    [CompilerGeneratedAttribute]
public void set_Aliases(String[] value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Usage();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Usage(string value);
}
internal class Octodiff.CommandLine.Support.CommandException : Exception {
    public CommandException(string message);
}
internal class Octodiff.CommandLine.Support.CommandLocator : object {
    private IEnumerable`1<Type> assemblyCommands { get; }
    public sealed virtual ICommandMetadata[] List();
    public sealed virtual ICommandMetadata Find(string name);
    public sealed virtual ICommand Create(ICommandMetadata metadata);
    private IEnumerable`1<Type> get_assemblyCommands();
    private ICommandMetadata GetCommandAttribute(Type type);
    [CompilerGeneratedAttribute]
private <>f__AnonymousType0`2<Type, ICommandMetadata> <List>b__0_0(Type t);
}
internal interface Octodiff.CommandLine.Support.ICommand {
    public abstract virtual void GetHelp(TextWriter writer);
    public abstract virtual int Execute(String[] commandLineArguments);
}
internal interface Octodiff.CommandLine.Support.ICommandLocator {
    public abstract virtual ICommandMetadata[] List();
    public abstract virtual ICommandMetadata Find(string name);
    public abstract virtual ICommand Create(ICommandMetadata metadata);
}
internal interface Octodiff.CommandLine.Support.ICommandMetadata {
    public string Name { get; }
    public String[] Aliases { get; }
    public string Description { get; }
    public string Usage { get; public set; }
    public abstract virtual string get_Name();
    public abstract virtual String[] get_Aliases();
    public abstract virtual string get_Description();
    public abstract virtual string get_Usage();
    public abstract virtual void set_Usage(string value);
}
[ObsoleteAttribute("This is non standard implimentation of Adler32, Adler32RollingChecksumV2 should be used instead.", "False")]
internal class Octodiff.Core.Adler32RollingChecksum : object {
    public string Name { get; }
    public sealed virtual string get_Name();
    public sealed virtual UInt32 Calculate(Byte[] block, int offset, int count);
    public sealed virtual UInt32 Rotate(UInt32 checksum, byte remove, byte add, int chunkSize);
}
internal class Octodiff.Core.Adler32RollingChecksumV2 : object {
    private static ushort Modulus;
    public string Name { get; }
    public sealed virtual string get_Name();
    public sealed virtual UInt32 Calculate(Byte[] block, int offset, int count);
    public sealed virtual UInt32 Rotate(UInt32 checksum, byte remove, byte add, int chunkSize);
}
internal class Octodiff.Core.AggregateCopyOperationsDecorator : object {
    private IDeltaWriter decorated;
    private DataRange bufferedCopy;
    public AggregateCopyOperationsDecorator(IDeltaWriter decorated);
    public sealed virtual void WriteDataCommand(Stream source, long offset, long length);
    public sealed virtual void WriteMetadata(IHashAlgorithm hashAlgorithm, Byte[] expectedNewFileHash);
    public sealed virtual void WriteCopyCommand(DataRange chunk);
    private void FlushCurrentCopyCommand();
    public sealed virtual void Finish();
}
internal class Octodiff.Core.BinaryDeltaReader : object {
    private BinaryReader reader;
    private IProgressReporter progressReporter;
    private Byte[] expectedHash;
    private IHashAlgorithm hashAlgorithm;
    private bool hasReadMetadata;
    private static int DefaultBufferSize;
    public Byte[] ExpectedHash { get; }
    public IHashAlgorithm HashAlgorithm { get; }
    public BinaryDeltaReader(Stream stream, IProgressReporter progressReporter);
    public sealed virtual Byte[] get_ExpectedHash();
    public sealed virtual IHashAlgorithm get_HashAlgorithm();
    private void EnsureMetadata();
    public sealed virtual void Apply(Action`3<Byte[], int, int> writeData, Action`2<long, long> copy);
}
internal class Octodiff.Core.BinaryDeltaWriter : object {
    private BinaryWriter writer;
    public BinaryDeltaWriter(Stream stream);
    public sealed virtual void WriteMetadata(IHashAlgorithm hashAlgorithm, Byte[] expectedNewFileHash);
    public sealed virtual void WriteCopyCommand(DataRange segment);
    public sealed virtual void WriteDataCommand(Stream source, long offset, long length);
    public sealed virtual void Finish();
}
internal class Octodiff.Core.BinaryFormat : object {
    public static Byte[] SignatureHeader;
    public static Byte[] DeltaHeader;
    public static Byte[] EndOfMetadata;
    public static byte CopyCommand;
    public static byte DataCommand;
    public static byte Version;
    private static BinaryFormat();
}
internal class Octodiff.Core.ChunkSignature : object {
    public long StartOffset;
    public short Length;
    public Byte[] Hash;
    public UInt32 RollingChecksum;
    public virtual string ToString();
}
internal class Octodiff.Core.ChunkSignatureChecksumComparer : object {
    public sealed virtual int Compare(ChunkSignature x, ChunkSignature y);
}
internal class Octodiff.Core.CompatibilityException : Exception {
    public CompatibilityException(string message);
}
internal class Octodiff.Core.CorruptFileFormatException : Exception {
    public CorruptFileFormatException(string message);
}
internal class Octodiff.Core.DataRange : ValueType {
    public long StartOffset;
    public long Length;
    public DataRange(long startOffset, long length);
}
internal class Octodiff.Core.DefaultChecksumSupportedAlgorithm : object {
    public IRollingChecksum Adler32Rolling(bool useV2);
    public virtual IRollingChecksum Default();
    public virtual IRollingChecksum Create(string algorithm);
}
internal class Octodiff.Core.DefaultHashingSupportedAlgorithm : object {
    public IHashAlgorithm Sha1();
    public virtual IHashAlgorithm Default();
    public virtual IHashAlgorithm Create(string algorithm);
}
internal class Octodiff.Core.DeltaApplier : object {
    private static int BufferLength;
    [CompilerGeneratedAttribute]
private bool <SkipHashCheck>k__BackingField;
    public bool SkipHashCheck { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_SkipHashCheck();
    [CompilerGeneratedAttribute]
public void set_SkipHashCheck(bool value);
    public void Apply(Stream basisFileStream, IDeltaReader delta, Stream outputStream);
}
internal class Octodiff.Core.DeltaBuilder : object {
    private static int ReadBufferSize;
    [CompilerGeneratedAttribute]
private IProgressReporter <ProgressReporter>k__BackingField;
    public IProgressReporter ProgressReporter { get; public set; }
    [CompilerGeneratedAttribute]
public IProgressReporter get_ProgressReporter();
    [CompilerGeneratedAttribute]
public void set_ProgressReporter(IProgressReporter value);
    public void BuildDelta(Stream newFileStream, ISignatureReader signatureReader, IDeltaWriter deltaWriter);
    private static List`1<ChunkSignature> OrderChunksByChecksum(List`1<ChunkSignature> chunks);
    private Dictionary`2<UInt32, int> CreateChunkMap(IList`1<ChunkSignature> chunks, Int32& maxChunkSize, Int32& minChunkSize);
}
internal class Octodiff.Core.DeltaStatistics : object {
    [CompilerGeneratedAttribute]
private int <ChunksCopied>k__BackingField;
    [CompilerGeneratedAttribute]
private long <BytesCopied>k__BackingField;
    public int ChunksCopied { get; public set; }
    public long BytesCopied { get; public set; }
    [CompilerGeneratedAttribute]
public int get_ChunksCopied();
    [CompilerGeneratedAttribute]
public void set_ChunksCopied(int value);
    [CompilerGeneratedAttribute]
public long get_BytesCopied();
    [CompilerGeneratedAttribute]
public void set_BytesCopied(long value);
}
internal class Octodiff.Core.HashAlgorithmWrapper : object {
    private HashAlgorithm algorithm;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public string Name { get; private set; }
    public int HashLength { get; }
    public HashAlgorithmWrapper(string name, HashAlgorithm algorithm);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
    public sealed virtual int get_HashLength();
    public sealed virtual Byte[] ComputeHash(Stream stream);
    public sealed virtual Byte[] ComputeHash(Byte[] buffer, int offset, int length);
}
internal interface Octodiff.Core.IChecksumSupportedAlgorithm {
    public abstract virtual IRollingChecksum Default();
    public abstract virtual IRollingChecksum Create(string algorithm);
}
internal interface Octodiff.Core.IDeltaReader {
    public Byte[] ExpectedHash { get; }
    public IHashAlgorithm HashAlgorithm { get; }
    public abstract virtual Byte[] get_ExpectedHash();
    public abstract virtual IHashAlgorithm get_HashAlgorithm();
    public abstract virtual void Apply(Action`3<Byte[], int, int> writeData, Action`2<long, long> copy);
}
internal interface Octodiff.Core.IDeltaWriter {
    public abstract virtual void WriteMetadata(IHashAlgorithm hashAlgorithm, Byte[] expectedNewFileHash);
    public abstract virtual void WriteCopyCommand(DataRange segment);
    public abstract virtual void WriteDataCommand(Stream source, long offset, long length);
    public abstract virtual void Finish();
}
internal interface Octodiff.Core.IHashAlgorithm {
    public string Name { get; }
    public int HashLength { get; }
    public abstract virtual string get_Name();
    public abstract virtual int get_HashLength();
    public abstract virtual Byte[] ComputeHash(Stream stream);
    public abstract virtual Byte[] ComputeHash(Byte[] buffer, int offset, int length);
}
internal interface Octodiff.Core.IHashingSupportedAlgorithm {
    public abstract virtual IHashAlgorithm Default();
    public abstract virtual IHashAlgorithm Create(string algorithm);
}
internal interface Octodiff.Core.IRollingChecksum {
    public string Name { get; }
    public abstract virtual string get_Name();
    public abstract virtual UInt32 Calculate(Byte[] block, int offset, int count);
    public abstract virtual UInt32 Rotate(UInt32 checksum, byte remove, byte add, int chunkSize);
}
internal interface Octodiff.Core.ISignatureReader {
    public abstract virtual Signature ReadSignature();
}
internal interface Octodiff.Core.ISignatureWriter {
    public abstract virtual void WriteMetadata(IHashAlgorithm hashAlgorithm, IRollingChecksum rollingChecksumAlgorithm);
    public abstract virtual void WriteChunk(ChunkSignature signature);
}
internal class Octodiff.Core.Signature : object {
    [CompilerGeneratedAttribute]
private IHashAlgorithm <HashAlgorithm>k__BackingField;
    [CompilerGeneratedAttribute]
private IRollingChecksum <RollingChecksumAlgorithm>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ChunkSignature> <Chunks>k__BackingField;
    public IHashAlgorithm HashAlgorithm { get; private set; }
    public IRollingChecksum RollingChecksumAlgorithm { get; private set; }
    public List`1<ChunkSignature> Chunks { get; private set; }
    public Signature(IHashAlgorithm hashAlgorithm, IRollingChecksum rollingChecksumAlgorithm);
    [CompilerGeneratedAttribute]
public IHashAlgorithm get_HashAlgorithm();
    [CompilerGeneratedAttribute]
private void set_HashAlgorithm(IHashAlgorithm value);
    [CompilerGeneratedAttribute]
public IRollingChecksum get_RollingChecksumAlgorithm();
    [CompilerGeneratedAttribute]
private void set_RollingChecksumAlgorithm(IRollingChecksum value);
    [CompilerGeneratedAttribute]
public List`1<ChunkSignature> get_Chunks();
    [CompilerGeneratedAttribute]
private void set_Chunks(List`1<ChunkSignature> value);
}
internal class Octodiff.Core.SignatureBuilder : object {
    public static short MinimumChunkSize;
    public static short DefaultChunkSize;
    public static short MaximumChunkSize;
    private short chunkSize;
    [CompilerGeneratedAttribute]
private IProgressReporter <ProgressReporter>k__BackingField;
    [CompilerGeneratedAttribute]
private IHashAlgorithm <HashAlgorithm>k__BackingField;
    [CompilerGeneratedAttribute]
private IRollingChecksum <RollingChecksumAlgorithm>k__BackingField;
    public IProgressReporter ProgressReporter { get; public set; }
    public IHashAlgorithm HashAlgorithm { get; public set; }
    public IRollingChecksum RollingChecksumAlgorithm { get; public set; }
    public short ChunkSize { get; public set; }
    private static SignatureBuilder();
    [CompilerGeneratedAttribute]
public IProgressReporter get_ProgressReporter();
    [CompilerGeneratedAttribute]
public void set_ProgressReporter(IProgressReporter value);
    [CompilerGeneratedAttribute]
public IHashAlgorithm get_HashAlgorithm();
    [CompilerGeneratedAttribute]
public void set_HashAlgorithm(IHashAlgorithm value);
    [CompilerGeneratedAttribute]
public IRollingChecksum get_RollingChecksumAlgorithm();
    [CompilerGeneratedAttribute]
public void set_RollingChecksumAlgorithm(IRollingChecksum value);
    public short get_ChunkSize();
    public void set_ChunkSize(short value);
    public void Build(Stream stream, ISignatureWriter signatureWriter);
    private void WriteMetadata(Stream stream, ISignatureWriter signatureWriter);
    private void WriteChunkSignatures(Stream stream, ISignatureWriter signatureWriter);
}
internal class Octodiff.Core.SignatureReader : object {
    private IProgressReporter reporter;
    private BinaryReader reader;
    public SignatureReader(Stream stream, IProgressReporter reporter);
    public sealed virtual Signature ReadSignature();
    private void Progress();
}
internal class Octodiff.Core.SignatureWriter : object {
    private BinaryWriter signatureStream;
    public SignatureWriter(Stream signatureStream);
    public sealed virtual void WriteMetadata(IHashAlgorithm hashAlgorithm, IRollingChecksum rollingChecksumAlgorithm);
    public sealed virtual void WriteChunk(ChunkSignature signature);
}
internal static class Octodiff.Core.SupportedAlgorithms : object {
    [CompilerGeneratedAttribute]
private static IHashingSupportedAlgorithm <Hashing>k__BackingField;
    [CompilerGeneratedAttribute]
private static IChecksumSupportedAlgorithm <Checksum>k__BackingField;
    public static IHashingSupportedAlgorithm Hashing { get; public set; }
    public static IChecksumSupportedAlgorithm Checksum { get; public set; }
    private static SupportedAlgorithms();
    [CompilerGeneratedAttribute]
public static IHashingSupportedAlgorithm get_Hashing();
    [CompilerGeneratedAttribute]
public static void set_Hashing(IHashingSupportedAlgorithm value);
    [CompilerGeneratedAttribute]
public static IChecksumSupportedAlgorithm get_Checksum();
    [CompilerGeneratedAttribute]
public static void set_Checksum(IChecksumSupportedAlgorithm value);
}
internal class Octodiff.Core.UsageException : Exception {
    public UsageException(string message);
}
internal class Octodiff.Diagnostics.ConsoleProgressReporter : object {
    private string currentOperation;
    private int progressPercentage;
    public sealed virtual void ReportProgress(string operation, long currentPosition, long total);
}
internal interface Octodiff.Diagnostics.IProgressReporter {
    public abstract virtual void ReportProgress(string operation, long currentPosition, long total);
}
internal class Octodiff.Diagnostics.NullProgressReporter : object {
    public sealed virtual void ReportProgress(string operation, long currentPosition, long total);
}
internal class Octodiff.Program : object {
    public static int Main(String[] args);
    private static void WriteError(Exception ex, bool details);
    private static string ExtractCommand(ICollection`1<string> args, String[]& remaining);
}
internal static class Octopus.Client.AppDomainScanner : object {
    public static Type[] ScanForAllTypes();
}
public class Octopus.Client.AutomationEnvironments.AutomationEnvironmentProvider : object {
    private static ILog Logger;
    internal static Dictionary`2<AutomationEnvironment, String[]> KnownEnvironmentVariables;
    internal static IEnvironmentVariableReader environmentVariableReader;
    private static AutomationEnvironmentProvider();
    private static bool EnvironmentVariableHasValue(string variableName);
    public sealed virtual AutomationEnvironment DetermineAutomationEnvironment();
    public sealed virtual string DetermineAutomationEnvironmentWithVersion();
}
internal class Octopus.Client.AutomationEnvironments.EnvironmentVariableReader : object {
    public sealed virtual string GetVariableValue(string name);
}
internal interface Octopus.Client.AutomationEnvironments.IAutomationEnvironmentProvider {
    public abstract virtual AutomationEnvironment DetermineAutomationEnvironment();
    public abstract virtual string DetermineAutomationEnvironmentWithVersion();
}
internal interface Octopus.Client.AutomationEnvironments.IEnvironmentVariableReader {
    public abstract virtual string GetVariableValue(string name);
}
public class Octopus.Client.DefaultLinkResolver : object {
    private string baseUri;
    private string rootUri;
    public bool IsUsingSecureConnection { get; }
    public DefaultLinkResolver(Uri root, string allUrisStartWith);
    public sealed virtual bool get_IsUsingSecureConnection();
    public sealed virtual Uri Resolve(string link);
    public virtual string ToString();
}
public class Octopus.Client.Editors.AccountEditor`2 : object {
    protected IAccountRepository Repository;
    [CompilerGeneratedAttribute]
private TAccountResource <Instance>k__BackingField;
    public TAccountResource Instance { get; private set; }
    public AccountEditor`2(IAccountRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual TAccountResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(TAccountResource value);
    public TAccountEditor CreateOrModify(string name);
    public TAccountEditor FindByName(string name);
    public virtual TAccountEditor Customize(Action`1<TAccountResource> customize);
    public virtual TAccountEditor Save();
    public AccountUsageResource Usages();
}
public class Octopus.Client.Editors.AmazonWebServicesAccountEditor : AccountEditor`2<AmazonWebServicesAccountResource, AmazonWebServicesAccountEditor> {
    public AmazonWebServicesAccountEditor(IAccountRepository repository);
}
public class Octopus.Client.Editors.Async.AccountEditor`2 : object {
    protected IAccountRepository Repository;
    [CompilerGeneratedAttribute]
private TAccountResource <Instance>k__BackingField;
    public TAccountResource Instance { get; private set; }
    public AccountEditor`2(IAccountRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual TAccountResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(TAccountResource value);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.AccountEditor`2/<CreateOrModify>d__6")]
public Task`1<TAccountEditor> CreateOrModify(string name);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.AccountEditor`2/<FindByName>d__7")]
public Task`1<TAccountEditor> FindByName(string name);
    public virtual TAccountEditor Customize(Action`1<TAccountResource> customize);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.AccountEditor`2/<Save>d__9")]
public virtual Task`1<TAccountEditor> Save();
    public Task`1<AccountUsageResource> Usages();
}
public class Octopus.Client.Editors.Async.AmazonWebServicesAccountEditor : AccountEditor`2<AmazonWebServicesAccountResource, AmazonWebServicesAccountEditor> {
    public AmazonWebServicesAccountEditor(IAccountRepository repository);
}
public class Octopus.Client.Editors.Async.AzureOidcAccountEditor : AccountEditor`2<AzureSubscriptionAccountResource, AzureOidcAccountEditor> {
    public AzureOidcAccountEditor(IAccountRepository repository);
    public Task`1<List`1<ResourceGroup>> ResourceGroups();
    public Task`1<List`1<WebSite>> WebSites();
    public Task`1<List`1<WebSlot>> WebSlots(WebSite site);
    public Task`1<List`1<AzureStorageAccount>> StorageAccounts();
}
public class Octopus.Client.Editors.Async.AzureServicePrincipalAccountEditor : AccountEditor`2<AzureServicePrincipalAccountResource, AzureServicePrincipalAccountEditor> {
    public AzureServicePrincipalAccountEditor(IAccountRepository repository);
    public Task`1<List`1<ResourceGroup>> ResourceGroups();
    public Task`1<List`1<WebSite>> WebSites();
    public Task`1<List`1<WebSlot>> WebSlots(WebSite site);
    public Task`1<List`1<AzureStorageAccount>> StorageAccounts();
}
public class Octopus.Client.Editors.Async.AzureSubscriptionAccountEditor : AccountEditor`2<AzureSubscriptionAccountResource, AzureSubscriptionAccountEditor> {
    public AzureSubscriptionAccountEditor(IAccountRepository repository);
    public Task`1<List`1<AzureStorageAccount>> StorageAccounts(AzureSubscriptionAccountResource account);
    public Task`1<List`1<WebSite>> WebSites(AzureSubscriptionAccountResource account);
    public Task`1<List`1<WebSite>> WebSites();
    public Task`1<List`1<WebSlot>> WebSlots(AzureSubscriptionAccountResource account, WebSite site);
    public Task`1<List`1<WebSlot>> WebSlots(WebSite site);
}
public class Octopus.Client.Editors.Async.CertificateEditor : object {
    private ICertificateRepository repository;
    [CompilerGeneratedAttribute]
private CertificateResource <Instance>k__BackingField;
    public CertificateResource Instance { get; private set; }
    public CertificateEditor(ICertificateRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual CertificateResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(CertificateResource value);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.CertificateEditor/<Create>d__6")]
public Task`1<CertificateEditor> Create(string name, string certificateData);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.CertificateEditor/<FindByName>d__7")]
public Task`1<CertificateEditor> FindByName(string name);
    public sealed virtual CertificateEditor Customize(Action`1<CertificateResource> customize);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.CertificateEditor/<Save>d__9")]
public sealed virtual Task`1<CertificateEditor> Save();
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.CertificateEditor/<Usages>d__10")]
public Task`1<CertificateUsageResource> Usages();
}
public class Octopus.Client.Editors.Async.ChannelEditor : object {
    private IChannelRepository repository;
    [CompilerGeneratedAttribute]
private ChannelResource <Instance>k__BackingField;
    public ChannelResource Instance { get; private set; }
    public ChannelEditor(IChannelRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual ChannelResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(ChannelResource value);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.ChannelEditor/<CreateOrModify>d__6")]
public Task`1<ChannelEditor> CreateOrModify(ProjectResource project, string name);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.ChannelEditor/<CreateOrModify>d__7")]
public Task`1<ChannelEditor> CreateOrModify(ProjectResource project, string name, string description);
    public ChannelEditor SetAsDefaultChannel();
    public ChannelEditor UsingLifecycle(LifecycleResource lifecycle);
    public ChannelEditor ClearRules();
    public ChannelEditor AddRule(ChannelVersionRuleResource rule);
    public ChannelEditor AddCommonRuleForAllActions(string versionRange, string tagRegex, DeploymentProcessResource process);
    public ChannelEditor AddRule(string versionRange, string tagRegex, DeploymentActionResource[] actions);
    public ChannelEditor ClearGitReferenceRules();
    public ChannelEditor AddGitReferenceRule(string rule);
    public ChannelEditor ClearGitResourceRules();
    public ChannelEditor AddGitResourceRule(ChannelGitResourceRuleResource rule);
    public ChannelEditor ClearTenantTags();
    public ChannelEditor AddOrUpdateTenantTags(TagResource[] tags);
    public sealed virtual ChannelEditor Customize(Action`1<ChannelResource> customize);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.ChannelEditor/<Save>d__21")]
public sealed virtual Task`1<ChannelEditor> Save();
}
public class Octopus.Client.Editors.Async.DeploymentProcessEditor : object {
    private IDeploymentProcessRepository repository;
    [CompilerGeneratedAttribute]
private DeploymentProcessResource <Instance>k__BackingField;
    public DeploymentProcessResource Instance { get; private set; }
    public DeploymentProcessEditor(IDeploymentProcessRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual DeploymentProcessResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(DeploymentProcessResource value);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.DeploymentProcessEditor/<Load>d__6")]
public Task`1<DeploymentProcessEditor> Load(string id);
    public DeploymentStepResource FindStep(string name);
    public DeploymentStepResource AddOrUpdateStep(string name);
    public DeploymentProcessEditor RemoveStep(string name);
    public DeploymentProcessEditor ClearSteps();
    public sealed virtual DeploymentProcessEditor Customize(Action`1<DeploymentProcessResource> customize);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.DeploymentProcessEditor/<Save>d__12")]
public sealed virtual Task`1<DeploymentProcessEditor> Save();
}
public class Octopus.Client.Editors.Async.EnvironmentEditor : object {
    private IEnvironmentRepository repository;
    [CompilerGeneratedAttribute]
private EnvironmentResource <Instance>k__BackingField;
    public EnvironmentResource Instance { get; private set; }
    public EnvironmentEditor(IEnvironmentRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual EnvironmentResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(EnvironmentResource value);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.EnvironmentEditor/<CreateOrModify>d__6")]
public Task`1<EnvironmentEditor> CreateOrModify(string name);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.EnvironmentEditor/<CreateOrModify>d__7")]
public Task`1<EnvironmentEditor> CreateOrModify(string name, string description, bool allowDynamicInfrastructure);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.EnvironmentEditor/<CreateOrModify>d__8")]
public Task`1<EnvironmentEditor> CreateOrModify(string name, string description);
    public sealed virtual EnvironmentEditor Customize(Action`1<EnvironmentResource> customize);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.EnvironmentEditor/<Save>d__10")]
public sealed virtual Task`1<EnvironmentEditor> Save();
}
public interface Octopus.Client.Editors.Async.IResourceBuilder {
}
public interface Octopus.Client.Editors.Async.IResourceEditor`2 {
    public TResource Instance { get; }
    public abstract virtual TResource get_Instance();
    public abstract virtual TResourceBuilder Customize(Action`1<TResource> customize);
    public abstract virtual Task`1<TResourceBuilder> Save();
}
public class Octopus.Client.Editors.Async.LibraryVariableSetEditor : object {
    private ILibraryVariableSetRepository repository;
    private Lazy`1<Task`1<VariableSetEditor>> variables;
    [CompilerGeneratedAttribute]
private LibraryVariableSetResource <Instance>k__BackingField;
    public LibraryVariableSetResource Instance { get; private set; }
    public Task`1<VariableSetEditor> Variables { get; }
    public IVariableTemplateContainerEditor`1<LibraryVariableSetResource> VariableTemplates { get; }
    public LibraryVariableSetEditor(ILibraryVariableSetRepository repository, IVariableSetRepository variableSetRepository);
    [CompilerGeneratedAttribute]
public sealed virtual LibraryVariableSetResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(LibraryVariableSetResource value);
    public Task`1<VariableSetEditor> get_Variables();
    public IVariableTemplateContainerEditor`1<LibraryVariableSetResource> get_VariableTemplates();
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.LibraryVariableSetEditor/<CreateOrModify>d__11")]
public Task`1<LibraryVariableSetEditor> CreateOrModify(string name);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.LibraryVariableSetEditor/<CreateOrModify>d__12")]
public Task`1<LibraryVariableSetEditor> CreateOrModify(string name, string description);
    public sealed virtual LibraryVariableSetEditor Customize(Action`1<LibraryVariableSetResource> customize);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.LibraryVariableSetEditor/<Save>d__14")]
public sealed virtual Task`1<LibraryVariableSetEditor> Save();
}
public class Octopus.Client.Editors.Async.LifecycleEditor : object {
    private ILifecyclesRepository repository;
    [CompilerGeneratedAttribute]
private LifecycleResource <Instance>k__BackingField;
    public LifecycleResource Instance { get; private set; }
    public LifecycleEditor(ILifecyclesRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual LifecycleResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(LifecycleResource value);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.LifecycleEditor/<CreateOrModify>d__6")]
public Task`1<LifecycleEditor> CreateOrModify(string name);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.LifecycleEditor/<CreateOrModify>d__7")]
public Task`1<LifecycleEditor> CreateOrModify(string name, string description);
    public PhaseResource AddOrUpdatePhase(string name);
    public LifecycleEditor AsSimplePromotionLifecycle(IEnumerable`1<EnvironmentResource> environments);
    public LifecycleEditor Clear();
    public sealed virtual LifecycleEditor Customize(Action`1<LifecycleResource> customize);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.LifecycleEditor/<Save>d__12")]
public sealed virtual Task`1<LifecycleEditor> Save();
}
public class Octopus.Client.Editors.Async.MachineEditor : object {
    private IMachineRepository repository;
    [CompilerGeneratedAttribute]
private MachineResource <Instance>k__BackingField;
    public MachineResource Instance { get; private set; }
    public MachineEditor(IMachineRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual MachineResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(MachineResource value);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.MachineEditor/<CreateOrModify>d__6")]
public Task`1<MachineEditor> CreateOrModify(string name, EndpointResource endpoint, EnvironmentResource[] environments, String[] roles);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.MachineEditor/<CreateOrModify>d__7")]
public Task`1<MachineEditor> CreateOrModify(string name, EndpointResource endpoint, EnvironmentResource[] environments, String[] roles, TenantResource[] tenants, TagResource[] tenantTags, Nullable`1<TenantedDeploymentMode> tenantedDeploymentParticipation);
    public sealed virtual MachineEditor Customize(Action`1<MachineResource> customize);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.MachineEditor/<Save>d__9")]
public sealed virtual Task`1<MachineEditor> Save();
}
public class Octopus.Client.Editors.Async.ProjectChannelsEditor : object {
    private IChannelRepository repository;
    private ProjectResource owner;
    private List`1<ChannelEditor> trackedChannelBuilders;
    public ProjectChannelsEditor(IChannelRepository repository, ProjectResource owner);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.ProjectChannelsEditor/<CreateOrModify>d__4")]
public Task`1<ChannelEditor> CreateOrModify(string name);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.ProjectChannelsEditor/<CreateOrModify>d__5")]
public Task`1<ChannelEditor> CreateOrModify(string name, string description);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.ProjectChannelsEditor/<Delete>d__6")]
public Task`1<ProjectChannelsEditor> Delete(string name);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.ProjectChannelsEditor/<SaveAll>d__7")]
public Task`1<ProjectChannelsEditor> SaveAll();
}
public class Octopus.Client.Editors.Async.ProjectEditor : object {
    private IProjectRepository repository;
    private Lazy`1<ProjectChannelsEditor> channels;
    private Lazy`1<Task`1<DeploymentProcessEditor>> deploymentProcess;
    private Lazy`1<ProjectTriggersEditor> triggers;
    private Lazy`1<Task`1<VariableSetEditor>> variables;
    [CompilerGeneratedAttribute]
private ProjectResource <Instance>k__BackingField;
    public ProjectResource Instance { get; private set; }
    public ProjectChannelsEditor Channels { get; }
    public Task`1<DeploymentProcessEditor> DeploymentProcess { get; }
    public ProjectTriggersEditor Triggers { get; }
    public Task`1<VariableSetEditor> Variables { get; }
    public IVariableTemplateContainerEditor`1<ProjectResource> VariableTemplates { get; }
    public ProjectEditor(IProjectRepository repository, IChannelRepository channelRepository, IDeploymentProcessRepository deploymentProcessRepository, IProjectTriggerRepository projectTriggerRepository, IVariableSetRepository variableSetRepository);
    [CompilerGeneratedAttribute]
public sealed virtual ProjectResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(ProjectResource value);
    public ProjectChannelsEditor get_Channels();
    public Task`1<DeploymentProcessEditor> get_DeploymentProcess();
    public ProjectTriggersEditor get_Triggers();
    public Task`1<VariableSetEditor> get_Variables();
    public IVariableTemplateContainerEditor`1<ProjectResource> get_VariableTemplates();
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.ProjectEditor/<CreateOrModify>d__20")]
public Task`1<ProjectEditor> CreateOrModify(string name, ProjectGroupResource projectGroup, LifecycleResource lifecycle);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.ProjectEditor/<CreateOrModify>d__21")]
public Task`1<ProjectEditor> CreateOrModify(string name, ProjectGroupResource projectGroup, LifecycleResource lifecycle, string description, string cloneId);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.ProjectEditor/<CreateOrModify>d__22")]
public Task`1<ProjectEditor> CreateOrModify(string name, ProjectGroupResource projectGroup, LifecycleResource lifecycle, string description, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.ProjectEditor/<CreateOrModify>d__23")]
public Task`1<ProjectEditor> CreateOrModify(string name, ProjectGroupResource projectGroup, LifecycleResource lifecycle, string description, string cloneId, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.ProjectEditor/<SetLogo>d__24")]
public Task`1<ProjectEditor> SetLogo(string logoFilePath);
    public ProjectEditor IncludingLibraryVariableSets(LibraryVariableSetResource[] libraryVariableSets);
    public sealed virtual ProjectEditor Customize(Action`1<ProjectResource> customize);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.ProjectEditor/<Save>d__27")]
public sealed virtual Task`1<ProjectEditor> Save();
}
public class Octopus.Client.Editors.Async.ProjectGroupEditor : object {
    private IProjectGroupRepository repository;
    [CompilerGeneratedAttribute]
private ProjectGroupResource <Instance>k__BackingField;
    public ProjectGroupResource Instance { get; private set; }
    public ProjectGroupEditor(IProjectGroupRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual ProjectGroupResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(ProjectGroupResource value);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.ProjectGroupEditor/<CreateOrModify>d__6")]
public Task`1<ProjectGroupEditor> CreateOrModify(string name);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.ProjectGroupEditor/<CreateOrModify>d__7")]
public Task`1<ProjectGroupEditor> CreateOrModify(string name, string description);
    public sealed virtual ProjectGroupEditor Customize(Action`1<ProjectGroupResource> customize);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.ProjectGroupEditor/<Save>d__9")]
public sealed virtual Task`1<ProjectGroupEditor> Save();
}
public class Octopus.Client.Editors.Async.ProjectTriggerEditor : object {
    private IProjectTriggerRepository repository;
    [CompilerGeneratedAttribute]
private ProjectTriggerResource <Instance>k__BackingField;
    public ProjectTriggerResource Instance { get; private set; }
    public ProjectTriggerEditor(IProjectTriggerRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual ProjectTriggerResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(ProjectTriggerResource value);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.ProjectTriggerEditor/<CreateOrModify>d__6")]
public Task`1<ProjectTriggerEditor> CreateOrModify(ProjectResource project, string name, TriggerFilterResource filter, TriggerActionResource action);
    public sealed virtual ProjectTriggerEditor Customize(Action`1<ProjectTriggerResource> customize);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.ProjectTriggerEditor/<Save>d__8")]
public sealed virtual Task`1<ProjectTriggerEditor> Save();
}
public class Octopus.Client.Editors.Async.ProjectTriggersEditor : object {
    private IProjectTriggerRepository repository;
    private ProjectResource owner;
    private List`1<ProjectTriggerEditor> trackedProjectTriggerBuilders;
    public ProjectTriggersEditor(IProjectTriggerRepository repository, ProjectResource owner);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.ProjectTriggersEditor/<CreateOrModify>d__4")]
public Task`1<ProjectTriggerEditor> CreateOrModify(string name, TriggerFilterResource filter, TriggerActionResource action);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.ProjectTriggersEditor/<Delete>d__5")]
public Task`1<ProjectTriggersEditor> Delete(string name);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.ProjectTriggersEditor/<SaveAll>d__6")]
public Task`1<ProjectTriggersEditor> SaveAll();
}
public class Octopus.Client.Editors.Async.RunbookEditor : object {
    private IRunbookRepository repository;
    private Lazy`1<Task`1<RunbookProcessEditor>> runbookProcess;
    [CompilerGeneratedAttribute]
private RunbookResource <Instance>k__BackingField;
    public RunbookResource Instance { get; private set; }
    public Task`1<RunbookProcessEditor> RunbookProcess { get; }
    public RunbookEditor(IRunbookRepository repository, IRunbookProcessRepository runbookProcessRepository);
    [CompilerGeneratedAttribute]
public sealed virtual RunbookResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(RunbookResource value);
    public Task`1<RunbookProcessEditor> get_RunbookProcess();
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.RunbookEditor/<CreateOrModify>d__9")]
public Task`1<RunbookEditor> CreateOrModify(ProjectResource project, string name, string description);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.RunbookEditor/<Load>d__10")]
public Task`1<RunbookEditor> Load(string id);
    public sealed virtual RunbookEditor Customize(Action`1<RunbookResource> customize);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.RunbookEditor/<Save>d__12")]
public sealed virtual Task`1<RunbookEditor> Save();
}
public class Octopus.Client.Editors.Async.RunbookProcessEditor : object {
    private IRunbookProcessRepository repository;
    [CompilerGeneratedAttribute]
private RunbookProcessResource <Instance>k__BackingField;
    public RunbookProcessResource Instance { get; private set; }
    public RunbookProcessEditor(IRunbookProcessRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual RunbookProcessResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(RunbookProcessResource value);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.RunbookProcessEditor/<Load>d__6")]
public Task`1<RunbookProcessEditor> Load(string id);
    public DeploymentStepResource FindStep(string name);
    public DeploymentStepResource AddOrUpdateStep(string name);
    public RunbookProcessEditor RemoveStep(string name);
    public RunbookProcessEditor ClearSteps();
    public sealed virtual RunbookProcessEditor Customize(Action`1<RunbookProcessResource> customize);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.RunbookProcessEditor/<Save>d__12")]
public sealed virtual Task`1<RunbookProcessEditor> Save();
}
public class Octopus.Client.Editors.Async.SshKeyPairAccountEditor : AccountEditor`2<SshKeyPairAccountResource, SshKeyPairAccountEditor> {
    public SshKeyPairAccountEditor(IAccountRepository repository);
}
public class Octopus.Client.Editors.Async.SubscriptionEditor : object {
    private ISubscriptionRepository repository;
    [CompilerGeneratedAttribute]
private SubscriptionResource <Instance>k__BackingField;
    public SubscriptionResource Instance { get; private set; }
    public SubscriptionEditor(ISubscriptionRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual SubscriptionResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(SubscriptionResource value);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.SubscriptionEditor/<CreateOrModify>d__6")]
public Task`1<SubscriptionEditor> CreateOrModify(string name, EventNotificationSubscription eventNotificationSubscription, bool isDisabled);
    public sealed virtual SubscriptionEditor Customize(Action`1<SubscriptionResource> customize);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.SubscriptionEditor/<Save>d__8")]
public sealed virtual Task`1<SubscriptionEditor> Save();
}
public class Octopus.Client.Editors.Async.TagSetEditor : object {
    private ITagSetRepository repository;
    [CompilerGeneratedAttribute]
private TagSetResource <Instance>k__BackingField;
    public TagSetResource Instance { get; private set; }
    public TagSetEditor(ITagSetRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual TagSetResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(TagSetResource value);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.TagSetEditor/<CreateOrModify>d__6")]
public Task`1<TagSetEditor> CreateOrModify(string name);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.TagSetEditor/<CreateOrModify>d__7")]
public Task`1<TagSetEditor> CreateOrModify(string name, string description);
    public TagSetEditor ClearTags();
    public TagSetEditor AddOrUpdateTag(string name, string description, string color);
    public TagSetEditor RemoveTag(string name);
    public sealed virtual TagSetEditor Customize(Action`1<TagSetResource> customize);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.TagSetEditor/<Save>d__12")]
public sealed virtual Task`1<TagSetEditor> Save();
}
public class Octopus.Client.Editors.Async.TenantEditor : object {
    private ITenantRepository repository;
    private Lazy`1<Task`1<TenantVariablesEditor>> variables;
    [CompilerGeneratedAttribute]
private TenantResource <Instance>k__BackingField;
    public TenantResource Instance { get; private set; }
    public Task`1<TenantVariablesEditor> Variables { get; }
    public TenantEditor(ITenantRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual TenantResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(TenantResource value);
    public Task`1<TenantVariablesEditor> get_Variables();
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.TenantEditor/<CreateOrModify>d__9")]
public Task`1<TenantEditor> CreateOrModify(string name);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.TenantEditor/<CreateOrModify>d__10")]
public Task`1<TenantEditor> CreateOrModify(string name, string description, string cloneId);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.TenantEditor/<SetLogo>d__11")]
public Task`1<TenantEditor> SetLogo(string logoFilePath);
    public TenantEditor ClearTags();
    public TenantEditor WithTag(TagResource tag);
    public TenantEditor ClearProjects();
    public TenantEditor ConnectToProjectAndEnvironments(ProjectResource project, EnvironmentResource[] environments);
    public sealed virtual TenantEditor Customize(Action`1<TenantResource> customize);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.TenantEditor/<Save>d__17")]
public sealed virtual Task`1<TenantEditor> Save();
}
public class Octopus.Client.Editors.Async.TenantVariablesEditor : object {
    private ITenantRepository repository;
    private TenantResource tenant;
    [CompilerGeneratedAttribute]
private TenantVariableResource <Instance>k__BackingField;
    public TenantVariableResource Instance { get; private set; }
    public TenantVariablesEditor(ITenantRepository repository, TenantResource tenant);
    [CompilerGeneratedAttribute]
public sealed virtual TenantVariableResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(TenantVariableResource value);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.TenantVariablesEditor/<Load>d__7")]
public Task`1<TenantVariablesEditor> Load();
    public sealed virtual TenantVariablesEditor Customize(Action`1<TenantVariableResource> customize);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.TenantVariablesEditor/<Save>d__9")]
public sealed virtual Task`1<TenantVariablesEditor> Save();
    public TenantVariablesEditor SetProjectVariableValue(ProjectResource projectResource, EnvironmentResource environmentResource, string templateName, PropertyValueResource value);
    public TenantVariablesEditor SetLibraryVariableValue(LibraryVariableSetResource libraryVariableSetResource, string templateName, PropertyValueResource value);
}
public class Octopus.Client.Editors.Async.UsernamePasswordAccountEditor : AccountEditor`2<UsernamePasswordAccountResource, UsernamePasswordAccountEditor> {
    public UsernamePasswordAccountEditor(IAccountRepository repository);
}
public class Octopus.Client.Editors.Async.VariableSetEditor : object {
    private IVariableSetRepository repository;
    [CompilerGeneratedAttribute]
private VariableSetResource <Instance>k__BackingField;
    public VariableSetResource Instance { get; private set; }
    public VariableSetEditor(IVariableSetRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual VariableSetResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(VariableSetResource value);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.VariableSetEditor/<Load>d__6")]
public Task`1<VariableSetEditor> Load(string id);
    public VariableSetEditor AddOrUpdateVariableValue(string name, string value, ScopeSpecification scope, bool isSensitive);
    public VariableSetEditor AddOrUpdateVariableValue(string name, string value, ScopeSpecification scope, bool isSensitive, string description);
    public VariableSetEditor AddOrUpdateVariableValue(string name, string value, ScopeSpecification scope);
    public VariableSetEditor AddOrUpdateVariableValue(string name, string value);
    public VariableSetEditor AddOrUpdateVariableValue(string name, string value, string description);
    public sealed virtual VariableSetEditor Customize(Action`1<VariableSetResource> customize);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.VariableSetEditor/<Save>d__13")]
public sealed virtual Task`1<VariableSetEditor> Save();
}
public class Octopus.Client.Editors.Async.VariableTemplateContainerEditor`1 : object {
    private IVariableTemplateContainerEditor`1<TContainer> container;
    public VariableTemplateContainerEditor`1(IVariableTemplateContainerEditor`1<TContainer> container);
    public VariableTemplateContainerEditor`1<TContainer> AddOrUpdateVariableTemplate(string name, string label, IDictionary`2<string, string> displaySettings);
    public VariableTemplateContainerEditor`1<TContainer> AddOrUpdateVariableTemplate(string name, string label, IDictionary`2<string, string> displaySettings, string defaultValue, string helpText);
    public VariableTemplateContainerEditor`1<TContainer> AddOrUpdateSingleLineTextTemplate(string name, string label);
    public VariableTemplateContainerEditor`1<TContainer> AddOrUpdateSingleLineTextTemplate(string name, string label, string defaultValue, string helpText);
    public VariableTemplateContainerEditor`1<TContainer> AddOrUpdateMultiLineTextTemplate(string name, string label);
    public VariableTemplateContainerEditor`1<TContainer> AddOrUpdateMultiLineTextTemplate(string name, string label, string defaultValue, string helpText);
    public VariableTemplateContainerEditor`1<TContainer> AddOrUpdateSensitiveTemplate(string name, string label);
    public VariableTemplateContainerEditor`1<TContainer> AddOrUpdateSensitiveTemplate(string name, string label, string defaultValue, string helpText);
    public VariableTemplateContainerEditor`1<TContainer> AddOrUpdateSelectTemplate(string name, string label, IDictionary`2<string, string> options);
    public VariableTemplateContainerEditor`1<TContainer> AddOrUpdateSelectTemplate(string name, string label, IDictionary`2<string, string> options, string defaultValue, string helpText);
}
public class Octopus.Client.Editors.Async.WorkerEditor : object {
    private IWorkerRepository repository;
    [CompilerGeneratedAttribute]
private WorkerResource <Instance>k__BackingField;
    public WorkerResource Instance { get; private set; }
    public WorkerEditor(IWorkerRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual WorkerResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(WorkerResource value);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.WorkerEditor/<CreateOrModify>d__6")]
public Task`1<WorkerEditor> CreateOrModify(string name, EndpointResource endpoint, WorkerPoolResource[] workerpools);
    public sealed virtual WorkerEditor Customize(Action`1<WorkerResource> customize);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.WorkerEditor/<Save>d__8")]
public sealed virtual Task`1<WorkerEditor> Save();
}
public class Octopus.Client.Editors.Async.WorkerPoolEditor : object {
    private IWorkerPoolRepository repository;
    [CompilerGeneratedAttribute]
private WorkerPoolResource <Instance>k__BackingField;
    public WorkerPoolResource Instance { get; private set; }
    public WorkerPoolEditor(IWorkerPoolRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual WorkerPoolResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(WorkerPoolResource value);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.WorkerPoolEditor/<CreateOrModify>d__6")]
public Task`1<WorkerPoolEditor> CreateOrModify(string name);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.WorkerPoolEditor/<CreateOrModify>d__7")]
public Task`1<WorkerPoolEditor> CreateOrModify(string name, string description);
    public sealed virtual WorkerPoolEditor Customize(Action`1<WorkerPoolResource> customize);
    [AsyncStateMachineAttribute("Octopus.Client.Editors.Async.WorkerPoolEditor/<Save>d__9")]
public sealed virtual Task`1<WorkerPoolEditor> Save();
}
public class Octopus.Client.Editors.AzureOidcAccountEditor : AccountEditor`2<AzureOidcAccountResource, AzureOidcAccountEditor> {
    public AzureOidcAccountEditor(IAccountRepository repository);
    public List`1<ResourceGroup> ResourceGroups();
    public List`1<WebSite> WebSites();
    public List`1<WebSlot> WebSiteSlots(WebSite site);
    public List`1<AzureStorageAccount> StorageAccounts();
}
public class Octopus.Client.Editors.AzureServicePrincipalAccountEditor : AccountEditor`2<AzureServicePrincipalAccountResource, AzureServicePrincipalAccountEditor> {
    public AzureServicePrincipalAccountEditor(IAccountRepository repository);
    public List`1<ResourceGroup> ResourceGroups();
    public List`1<WebSite> WebSites();
    public List`1<WebSlot> WebSiteSlots(WebSite site);
    public List`1<AzureStorageAccount> StorageAccounts();
}
public class Octopus.Client.Editors.AzureSubscriptionAccountEditor : AccountEditor`2<AzureSubscriptionAccountResource, AzureSubscriptionAccountEditor> {
    public AzureSubscriptionAccountEditor(IAccountRepository repository);
    public List`1<AzureStorageAccount> StorageAccounts(AzureSubscriptionAccountResource account);
    public List`1<WebSite> WebSites(AzureSubscriptionAccountResource account);
    public List`1<WebSite> WebSites();
    public List`1<WebSlot> WebSiteSlots(AzureSubscriptionAccountResource account, WebSite site);
    public List`1<WebSlot> WebSiteSlots(WebSite site);
}
public class Octopus.Client.Editors.CertificateEditor : object {
    private ICertificateRepository repository;
    [CompilerGeneratedAttribute]
private CertificateResource <Instance>k__BackingField;
    public CertificateResource Instance { get; private set; }
    public CertificateEditor(ICertificateRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual CertificateResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(CertificateResource value);
    public CertificateEditor Create(string name, string certificateData);
    public CertificateEditor FindByName(string name);
    public sealed virtual CertificateEditor Customize(Action`1<CertificateResource> customize);
    public sealed virtual CertificateEditor Save();
    public CertificateUsageResource Usages();
}
public class Octopus.Client.Editors.ChannelEditor : object {
    private IChannelRepository repository;
    [CompilerGeneratedAttribute]
private ChannelResource <Instance>k__BackingField;
    public ChannelResource Instance { get; private set; }
    public ChannelEditor(IChannelRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual ChannelResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(ChannelResource value);
    public ChannelEditor CreateOrModify(ProjectResource project, string name);
    public ChannelEditor CreateOrModify(ProjectResource project, string name, string description);
    public ChannelEditor SetAsDefaultChannel();
    public ChannelEditor UsingLifecycle(LifecycleResource lifecycle);
    public ChannelEditor ClearRules();
    public ChannelEditor AddRule(ChannelVersionRuleResource rule);
    public ChannelEditor AddCommonRuleForAllActions(string versionRange, string tagRegex, DeploymentProcessResource process);
    public ChannelEditor AddRule(string versionRange, string tagRegex, DeploymentActionResource[] actions);
    public ChannelEditor ClearTenantTags();
    public ChannelEditor AddOrUpdateTenantTags(TagResource[] tags);
    public sealed virtual ChannelEditor Customize(Action`1<ChannelResource> customize);
    public sealed virtual ChannelEditor Save();
}
public class Octopus.Client.Editors.DeploymentProcessEditor : object {
    private IDeploymentProcessRepository repository;
    [CompilerGeneratedAttribute]
private DeploymentProcessResource <Instance>k__BackingField;
    public DeploymentProcessResource Instance { get; private set; }
    public DeploymentProcessEditor(IDeploymentProcessRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual DeploymentProcessResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(DeploymentProcessResource value);
    public DeploymentProcessEditor Load(string id);
    public DeploymentStepResource FindStep(string name);
    public DeploymentStepResource AddOrUpdateStep(string name);
    public DeploymentProcessEditor RemoveStep(string name);
    public DeploymentProcessEditor ClearSteps();
    public sealed virtual DeploymentProcessEditor Customize(Action`1<DeploymentProcessResource> customize);
    public sealed virtual DeploymentProcessEditor Save();
}
public class Octopus.Client.Editors.EnvironmentEditor : object {
    private IEnvironmentRepository repository;
    [CompilerGeneratedAttribute]
private EnvironmentResource <Instance>k__BackingField;
    public EnvironmentResource Instance { get; private set; }
    public EnvironmentEditor(IEnvironmentRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual EnvironmentResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(EnvironmentResource value);
    public EnvironmentEditor CreateOrModify(string name);
    public EnvironmentEditor CreateOrModify(string name, string description, bool allowDynamicInfrastructure);
    public EnvironmentEditor CreateOrModify(string name, string description);
    public sealed virtual EnvironmentEditor Customize(Action`1<EnvironmentResource> customize);
    public sealed virtual EnvironmentEditor Save();
}
public interface Octopus.Client.Editors.IResourceBuilder {
}
public interface Octopus.Client.Editors.IResourceEditor`2 {
    public TResource Instance { get; }
    public abstract virtual TResource get_Instance();
    public abstract virtual TResourceBuilder Customize(Action`1<TResource> customize);
    public abstract virtual TResourceBuilder Save();
}
public class Octopus.Client.Editors.LibraryVariableSetEditor : object {
    private ILibraryVariableSetRepository repository;
    private Lazy`1<VariableSetEditor> variables;
    [CompilerGeneratedAttribute]
private LibraryVariableSetResource <Instance>k__BackingField;
    public LibraryVariableSetResource Instance { get; private set; }
    public VariableSetEditor Variables { get; }
    public IVariableTemplateContainerEditor`1<LibraryVariableSetResource> VariableTemplates { get; }
    public LibraryVariableSetEditor(ILibraryVariableSetRepository repository, IVariableSetRepository variableSetRepository);
    [CompilerGeneratedAttribute]
public sealed virtual LibraryVariableSetResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(LibraryVariableSetResource value);
    public VariableSetEditor get_Variables();
    public IVariableTemplateContainerEditor`1<LibraryVariableSetResource> get_VariableTemplates();
    public LibraryVariableSetEditor CreateOrModify(string name);
    public LibraryVariableSetEditor CreateOrModify(string name, string description);
    public LibraryVariableSetEditor Load(string id);
    public sealed virtual LibraryVariableSetEditor Customize(Action`1<LibraryVariableSetResource> customize);
    public sealed virtual LibraryVariableSetEditor Save();
    public LibraryVariableSetUsageResource Usages();
}
public class Octopus.Client.Editors.LifecycleEditor : object {
    private ILifecyclesRepository repository;
    [CompilerGeneratedAttribute]
private LifecycleResource <Instance>k__BackingField;
    public LifecycleResource Instance { get; private set; }
    public LifecycleEditor(ILifecyclesRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual LifecycleResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(LifecycleResource value);
    public LifecycleEditor CreateOrModify(string name);
    public LifecycleEditor CreateOrModify(string name, string description);
    public PhaseResource AddOrUpdatePhase(string name);
    public LifecycleEditor AsSimplePromotionLifecycle(IEnumerable`1<EnvironmentResource> environments);
    public LifecycleEditor Clear();
    public sealed virtual LifecycleEditor Customize(Action`1<LifecycleResource> customize);
    public sealed virtual LifecycleEditor Save();
}
public class Octopus.Client.Editors.MachineEditor : object {
    private IMachineRepository repository;
    [CompilerGeneratedAttribute]
private MachineResource <Instance>k__BackingField;
    public MachineResource Instance { get; private set; }
    public MachineEditor(IMachineRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual MachineResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(MachineResource value);
    public MachineEditor CreateOrModify(string name, EndpointResource endpoint, EnvironmentResource[] environments, String[] roles);
    public MachineEditor CreateOrModify(string name, EndpointResource endpoint, EnvironmentResource[] environments, String[] roles, TenantResource[] tenants, TagResource[] tenantTags, Nullable`1<TenantedDeploymentMode> tenantedDeploymentParticipation);
    public sealed virtual MachineEditor Customize(Action`1<MachineResource> customize);
    public sealed virtual MachineEditor Save();
}
public class Octopus.Client.Editors.ProjectChannelsEditor : object {
    private IChannelRepository repository;
    private ProjectResource owner;
    private List`1<ChannelEditor> trackedChannelBuilders;
    public ProjectChannelsEditor(IChannelRepository repository, ProjectResource owner);
    public ChannelEditor CreateOrModify(string name);
    public ChannelEditor CreateOrModify(string name, string description);
    public ProjectChannelsEditor Delete(string name);
    public ProjectChannelsEditor SaveAll();
}
public class Octopus.Client.Editors.ProjectEditor : object {
    private IProjectRepository repository;
    private Lazy`1<ProjectChannelsEditor> channels;
    private Lazy`1<DeploymentProcessEditor> deploymentProcess;
    private Lazy`1<ProjectTriggersEditor> triggers;
    private Lazy`1<VariableSetEditor> variables;
    [CompilerGeneratedAttribute]
private ProjectResource <Instance>k__BackingField;
    public ProjectResource Instance { get; private set; }
    public ProjectChannelsEditor Channels { get; }
    public DeploymentProcessEditor DeploymentProcess { get; }
    public ProjectTriggersEditor Triggers { get; }
    public VariableSetEditor Variables { get; }
    public IVariableTemplateContainerEditor`1<ProjectResource> VariableTemplates { get; }
    public ProjectEditor(IProjectRepository repository, IChannelRepository channelRepository, IDeploymentProcessRepository deploymentProcessRepository, IProjectTriggerRepository projectTriggerRepository, IVariableSetRepository variableSetRepository);
    [CompilerGeneratedAttribute]
public sealed virtual ProjectResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(ProjectResource value);
    public ProjectChannelsEditor get_Channels();
    public DeploymentProcessEditor get_DeploymentProcess();
    public ProjectTriggersEditor get_Triggers();
    public VariableSetEditor get_Variables();
    public IVariableTemplateContainerEditor`1<ProjectResource> get_VariableTemplates();
    public ProjectEditor CreateOrModify(string name, ProjectGroupResource projectGroup, LifecycleResource lifecycle);
    public ProjectEditor CreateOrModify(string name, ProjectGroupResource projectGroup, LifecycleResource lifecycle, string description, string cloneId);
    public ProjectEditor SetLogo(string logoFilePath);
    public ProjectEditor IncludingLibraryVariableSets(LibraryVariableSetResource[] libraryVariableSets);
    public sealed virtual ProjectEditor Customize(Action`1<ProjectResource> customize);
    public sealed virtual ProjectEditor Save();
}
public class Octopus.Client.Editors.ProjectGroupEditor : object {
    private IProjectGroupRepository repository;
    [CompilerGeneratedAttribute]
private ProjectGroupResource <Instance>k__BackingField;
    public ProjectGroupResource Instance { get; private set; }
    public ProjectGroupEditor(IProjectGroupRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual ProjectGroupResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(ProjectGroupResource value);
    public ProjectGroupEditor CreateOrModify(string name);
    public ProjectGroupEditor CreateOrModify(string name, string description);
    public sealed virtual ProjectGroupEditor Customize(Action`1<ProjectGroupResource> customize);
    public sealed virtual ProjectGroupEditor Save();
}
public class Octopus.Client.Editors.ProjectTriggerEditor : object {
    private IProjectTriggerRepository repository;
    [CompilerGeneratedAttribute]
private ProjectTriggerResource <Instance>k__BackingField;
    public ProjectTriggerResource Instance { get; private set; }
    public ProjectTriggerEditor(IProjectTriggerRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual ProjectTriggerResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(ProjectTriggerResource value);
    public ProjectTriggerEditor CreateOrModify(ProjectResource project, string name, TriggerFilterResource filter, TriggerActionResource action);
    public sealed virtual ProjectTriggerEditor Customize(Action`1<ProjectTriggerResource> customize);
    public sealed virtual ProjectTriggerEditor Save();
}
public class Octopus.Client.Editors.ProjectTriggersEditor : object {
    private IProjectTriggerRepository repository;
    private ProjectResource owner;
    private List`1<ProjectTriggerEditor> trackedProjectTriggerBuilders;
    public ProjectTriggersEditor(IProjectTriggerRepository repository, ProjectResource owner);
    public ProjectTriggerEditor CreateOrModify(string name, TriggerFilterResource filter, TriggerActionResource action);
    public ProjectTriggersEditor Delete(string name);
    public ProjectTriggersEditor SaveAll();
}
public class Octopus.Client.Editors.RunbookEditor : object {
    private IRunbookRepository repository;
    private Lazy`1<RunbookProcessEditor> runbookProcess;
    [CompilerGeneratedAttribute]
private RunbookResource <Instance>k__BackingField;
    public RunbookResource Instance { get; private set; }
    public RunbookProcessEditor RunbookProcess { get; }
    public RunbookEditor(IRunbookRepository repository, IRunbookProcessRepository runbookProcessRepository);
    [CompilerGeneratedAttribute]
public sealed virtual RunbookResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(RunbookResource value);
    public RunbookProcessEditor get_RunbookProcess();
    public RunbookEditor CreateOrModify(ProjectResource project, string name, string description);
    public RunbookEditor Load(string id);
    public sealed virtual RunbookEditor Customize(Action`1<RunbookResource> customize);
    public sealed virtual RunbookEditor Save();
}
public class Octopus.Client.Editors.RunbookProcessEditor : object {
    private IRunbookProcessRepository repository;
    [CompilerGeneratedAttribute]
private RunbookProcessResource <Instance>k__BackingField;
    public RunbookProcessResource Instance { get; private set; }
    public RunbookProcessEditor(IRunbookProcessRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual RunbookProcessResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(RunbookProcessResource value);
    public RunbookProcessEditor Load(string id);
    public DeploymentStepResource FindStep(string name);
    public DeploymentStepResource AddOrUpdateStep(string name);
    public RunbookProcessEditor RemoveStep(string name);
    public RunbookProcessEditor ClearSteps();
    public sealed virtual RunbookProcessEditor Customize(Action`1<RunbookProcessResource> customize);
    public sealed virtual RunbookProcessEditor Save();
}
public class Octopus.Client.Editors.SshKeyPairAccountEditor : AccountEditor`2<SshKeyPairAccountResource, SshKeyPairAccountEditor> {
    public SshKeyPairAccountEditor(IAccountRepository repository);
}
public class Octopus.Client.Editors.SubscriptionEditor : object {
    private ISubscriptionRepository repository;
    [CompilerGeneratedAttribute]
private SubscriptionResource <Instance>k__BackingField;
    public SubscriptionResource Instance { get; private set; }
    public SubscriptionEditor(ISubscriptionRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual SubscriptionResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(SubscriptionResource value);
    public SubscriptionEditor CreateOrModify(string name, EventNotificationSubscription eventNotificationSubscription, bool isDisabled);
    public sealed virtual SubscriptionEditor Customize(Action`1<SubscriptionResource> customize);
    public sealed virtual SubscriptionEditor Save();
}
public class Octopus.Client.Editors.TagSetEditor : object {
    private ITagSetRepository repository;
    [CompilerGeneratedAttribute]
private TagSetResource <Instance>k__BackingField;
    public TagSetResource Instance { get; private set; }
    public TagSetEditor(ITagSetRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual TagSetResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(TagSetResource value);
    public TagSetEditor CreateOrModify(string name);
    public TagSetEditor CreateOrModify(string name, string description);
    public TagSetEditor ClearTags();
    public TagSetEditor AddOrUpdateTag(string name, string description, string color);
    public TagSetEditor RemoveTag(string name);
    public sealed virtual TagSetEditor Customize(Action`1<TagSetResource> customize);
    public sealed virtual TagSetEditor Save();
}
public class Octopus.Client.Editors.TenantEditor : object {
    private ITenantRepository repository;
    private Lazy`1<TenantVariablesEditor> variables;
    [CompilerGeneratedAttribute]
private TenantResource <Instance>k__BackingField;
    public TenantResource Instance { get; private set; }
    public TenantVariablesEditor Variables { get; }
    public TenantEditor(ITenantRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual TenantResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(TenantResource value);
    public TenantVariablesEditor get_Variables();
    public TenantEditor CreateOrModify(string name);
    public TenantEditor CreateOrModify(string name, string description, string cloneId);
    public TenantEditor SetLogo(string logoFilePath);
    public TenantEditor ClearTags();
    public TenantEditor WithTag(TagResource tag);
    public TenantEditor ClearProjects();
    public TenantEditor ConnectToProjectAndEnvironments(ProjectResource project, EnvironmentResource[] environments);
    public sealed virtual TenantEditor Customize(Action`1<TenantResource> customize);
    public sealed virtual TenantEditor Save();
}
public class Octopus.Client.Editors.TenantVariablesEditor : object {
    private ITenantRepository repository;
    private TenantResource tenant;
    [CompilerGeneratedAttribute]
private TenantVariableResource <Instance>k__BackingField;
    public TenantVariableResource Instance { get; private set; }
    public TenantVariablesEditor(ITenantRepository repository, TenantResource tenant);
    [CompilerGeneratedAttribute]
public sealed virtual TenantVariableResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(TenantVariableResource value);
    public TenantVariablesEditor Load();
    public sealed virtual TenantVariablesEditor Customize(Action`1<TenantVariableResource> customize);
    public sealed virtual TenantVariablesEditor Save();
    public TenantVariablesEditor SetProjectVariableValue(ProjectResource projectResource, EnvironmentResource environmentResource, string templateName, PropertyValueResource value);
    public TenantVariablesEditor SetLibraryVariableValue(LibraryVariableSetResource libraryVariableSetResource, string templateName, PropertyValueResource value);
}
public class Octopus.Client.Editors.UsernamePasswordAccountEditor : AccountEditor`2<UsernamePasswordAccountResource, UsernamePasswordAccountEditor> {
    public UsernamePasswordAccountEditor(IAccountRepository repository);
}
public class Octopus.Client.Editors.VariableSetEditor : object {
    private IVariableSetRepository repository;
    [CompilerGeneratedAttribute]
private VariableSetResource <Instance>k__BackingField;
    public VariableSetResource Instance { get; private set; }
    public VariableSetEditor(IVariableSetRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual VariableSetResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(VariableSetResource value);
    public VariableSetEditor Load(string id);
    public VariableSetEditor AddOrUpdateVariableValue(string name, string value, ScopeSpecification scope, bool isSensitive);
    public VariableSetEditor AddOrUpdateVariableValue(string name, string value, ScopeSpecification scope, bool isSensitive, string description);
    public VariableSetEditor AddOrUpdateVariableValue(string name, string value, ScopeSpecification scope);
    public VariableSetEditor AddOrUpdateVariableValue(string name, string value);
    public VariableSetEditor AddOrUpdateVariableValue(string name, string value, string description);
    public sealed virtual VariableSetEditor Customize(Action`1<VariableSetResource> customize);
    public sealed virtual VariableSetEditor Save();
}
public class Octopus.Client.Editors.VariableTemplateContainerEditor`1 : object {
    private IVariableTemplateContainerEditor`1<TContainer> container;
    public VariableTemplateContainerEditor`1(IVariableTemplateContainerEditor`1<TContainer> container);
    public VariableTemplateContainerEditor`1<TContainer> AddOrUpdateVariableTemplate(string name, string label, IDictionary`2<string, string> displaySettings);
    public VariableTemplateContainerEditor`1<TContainer> AddOrUpdateVariableTemplate(string name, string label, IDictionary`2<string, string> displaySettings, string defaultValue, string helpText);
    public VariableTemplateContainerEditor`1<TContainer> AddOrUpdateSingleLineTextTemplate(string name, string label);
    public VariableTemplateContainerEditor`1<TContainer> AddOrUpdateSingleLineTextTemplate(string name, string label, string defaultValue, string helpText);
    public VariableTemplateContainerEditor`1<TContainer> AddOrUpdateMultiLineTextTemplate(string name, string label);
    public VariableTemplateContainerEditor`1<TContainer> AddOrUpdateMultiLineTextTemplate(string name, string label, string defaultValue, string helpText);
    public VariableTemplateContainerEditor`1<TContainer> AddOrUpdateSensitiveTemplate(string name, string label);
    public VariableTemplateContainerEditor`1<TContainer> AddOrUpdateSensitiveTemplate(string name, string label, string defaultValue, string helpText);
    public VariableTemplateContainerEditor`1<TContainer> AddOrUpdateSelectTemplate(string name, string label, IDictionary`2<string, string> options);
    public VariableTemplateContainerEditor`1<TContainer> AddOrUpdateSelectTemplate(string name, string label, IDictionary`2<string, string> options, string defaultValue, string helpText);
}
public class Octopus.Client.Editors.WorkerEditor : object {
    private IWorkerRepository repository;
    [CompilerGeneratedAttribute]
private WorkerResource <Instance>k__BackingField;
    public WorkerResource Instance { get; private set; }
    public WorkerEditor(IWorkerRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual WorkerResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(WorkerResource value);
    public WorkerEditor CreateOrModify(string name, EndpointResource endpoint, WorkerPoolResource[] pools);
    public sealed virtual WorkerEditor Customize(Action`1<WorkerResource> customize);
    public sealed virtual WorkerEditor Save();
}
public class Octopus.Client.Editors.WorkerPoolEditor : object {
    private IWorkerPoolRepository repository;
    [CompilerGeneratedAttribute]
private WorkerPoolResource <Instance>k__BackingField;
    public WorkerPoolResource Instance { get; private set; }
    public WorkerPoolEditor(IWorkerPoolRepository repository);
    [CompilerGeneratedAttribute]
public sealed virtual WorkerPoolResource get_Instance();
    [CompilerGeneratedAttribute]
private void set_Instance(WorkerPoolResource value);
    public WorkerPoolEditor CreateOrModify(string name);
    public WorkerPoolEditor CreateOrModify(string name, string description);
    public sealed virtual WorkerPoolEditor Customize(Action`1<WorkerPoolResource> customize);
    public sealed virtual WorkerPoolEditor Save();
}
public class Octopus.Client.Exceptions.DefaultSpaceNotFoundException : Exception {
    public DefaultSpaceNotFoundException(IHaveSpaceResource spaceResource);
}
public class Octopus.Client.Exceptions.OctopusDeserializationException : OctopusException {
    public OctopusDeserializationException(int httpStatusCode, string message);
    public OctopusDeserializationException(int httpStatusCode, string message, Exception innerException);
}
public abstract class Octopus.Client.Exceptions.OctopusException : Exception {
    private int httpStatusCode;
    [CompilerGeneratedAttribute]
private string <HelpText>k__BackingField;
    public int HttpStatusCode { get; }
    public string HelpText { get; internal set; }
    protected OctopusException(int httpStatusCode, string message);
    protected OctopusException(int httpStatusCode, string message, Exception innerException);
    protected OctopusException(SerializationInfo info, StreamingContext context);
    public int get_HttpStatusCode();
    [CompilerGeneratedAttribute]
public string get_HelpText();
    [CompilerGeneratedAttribute]
internal void set_HelpText(string value);
}
public static class Octopus.Client.Exceptions.OctopusExceptionFactory : object {
    public static OctopusException CreateException(WebException webException, HttpWebResponse response);
    [AsyncStateMachineAttribute("Octopus.Client.Exceptions.OctopusExceptionFactory/<CreateException>d__1")]
public static Task`1<OctopusException> CreateException(HttpResponseMessage response);
    public static OctopusException CreateException(int statusCode, string body);
    private static OctopusSecurityException CreateOctopusSecurityException(int statusCode, string body);
    private static OctopusValidationException CreateOctopusValidationException(int statusCode, string body);
    private static OctopusServerException CreateOctopusServerException(int statusCode, string body);
    private static OctopusErrorsContract OctopusErrorsContractFromBody(string body);
}
public class Octopus.Client.Exceptions.OctopusMethodNotAllowedFoundException : OctopusException {
    public OctopusMethodNotAllowedFoundException(string message);
}
public class Octopus.Client.Exceptions.OctopusResourceNotFoundException : OctopusException {
    public OctopusResourceNotFoundException(string message);
}
public class Octopus.Client.Exceptions.OctopusSecurityException : OctopusException {
    public OctopusSecurityException(int httpStatusCode, string message);
}
public class Octopus.Client.Exceptions.OctopusServerException : OctopusException {
    public OctopusServerException(int httpStatusCode, string message);
}
public class Octopus.Client.Exceptions.OctopusValidationException : OctopusException {
    [CompilerGeneratedAttribute]
private string <ErrorMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private ReadOnlyCollection`1<string> <Errors>k__BackingField;
    [CompilerGeneratedAttribute]
[DynamicAttribute]
private object <Details>k__BackingField;
    public string ErrorMessage { get; private set; }
    public ReadOnlyCollection`1<string> Errors { get; private set; }
    [DynamicAttribute]
public object Details { get; private set; }
    public OctopusValidationException(string message, ICollection`1<string> errors);
    public OctopusValidationException(int httpStatusCode, string message, ICollection`1<string> errors);
    public OctopusValidationException(int httpStatusCode, string message, ICollection`1<string> errors, object details);
    public TDetails DetailsAs();
    [CompilerGeneratedAttribute]
public string get_ErrorMessage();
    [CompilerGeneratedAttribute]
private void set_ErrorMessage(string value);
    [CompilerGeneratedAttribute]
public ReadOnlyCollection`1<string> get_Errors();
    [CompilerGeneratedAttribute]
private void set_Errors(ReadOnlyCollection`1<string> value);
    [CompilerGeneratedAttribute]
public object get_Details();
    [CompilerGeneratedAttribute]
private void set_Details(object value);
}
public class Octopus.Client.Exceptions.OperationNotSupportedByOctopusServerException : OctopusException {
    [CompilerGeneratedAttribute]
private string <RequiredOctopusVersion>k__BackingField;
    public string RequiredOctopusVersion { get; }
    public OperationNotSupportedByOctopusServerException(string message, string requiresVersion);
    [CompilerGeneratedAttribute]
public string get_RequiredOctopusVersion();
}
public class Octopus.Client.Exceptions.ResourceSpaceDoesNotMatchRepositorySpaceException : Exception {
    public ResourceSpaceDoesNotMatchRepositorySpaceException(IHaveSpaceResource spaceResource, SpaceResource repositorySpace);
}
public class Octopus.Client.Exceptions.UnsupportedApiVersionException : OctopusException {
    public UnsupportedApiVersionException(string message);
}
public abstract class Octopus.Client.Extensibility.Attributes.ApiPropertyAttribute : Attribute {
}
[AttributeUsageAttribute("128")]
public class Octopus.Client.Extensibility.Attributes.WriteableAttribute : ApiPropertyAttribute {
}
[AttributeUsageAttribute("128")]
public class Octopus.Client.Extensibility.Attributes.WriteableOnCreateAttribute : ApiPropertyAttribute {
}
public abstract class Octopus.Client.Extensibility.Extensions.Infrastructure.Configuration.ExtensionConfigurationResource : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private LinkCollection <Links>k__BackingField;
    public string Id { get; public set; }
    [RequiredAttribute]
[DisplayNameAttribute("Is Enabled")]
[WriteableAttribute]
[DescriptionAttribute("Whether or not this extension is enabled")]
public bool IsEnabled { get; public set; }
    public LinkCollection Links { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public bool get_IsEnabled();
    [CompilerGeneratedAttribute]
public void set_IsEnabled(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual LinkCollection get_Links();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Links(LinkCollection value);
}
public class Octopus.Client.Extensibility.Href : object {
    private string link;
    public Href(string link);
    public string AsString();
    public sealed virtual bool Equals(Href other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public virtual string ToString();
    public static bool op_Equality(Href left, Href right);
    public static bool op_Inequality(Href left, Href right);
    public static string op_Implicit(Href href);
    public static Href op_Implicit(string href);
}
public interface Octopus.Client.Extensibility.IHaveSpaceResource {
    public string SpaceId { get; public set; }
    public abstract virtual string get_SpaceId();
    public abstract virtual void set_SpaceId(string value);
}
public interface Octopus.Client.Extensibility.INamedResource {
    public string Name { get; }
    public abstract virtual string get_Name();
}
public interface Octopus.Client.Extensibility.IResource {
    public string Id { get; }
    public LinkCollection Links { get; public set; }
    public abstract virtual string get_Id();
    public abstract virtual LinkCollection get_Links();
    public abstract virtual void set_Links(LinkCollection value);
}
public class Octopus.Client.Extensibility.LinkCollection : Dictionary`2<string, Href> {
    public LinkCollection Add(string name, Href value);
    public static LinkCollection Self(Href self);
}
[ExtensionAttribute]
internal static class Octopus.Client.Extensions.AssemblyExtensions : object {
    [ExtensionAttribute]
public static string GetInformationalVersion(Type type);
    [ExtensionAttribute]
public static SemanticVersion GetSemanticVersion(Type type);
}
[ExtensionAttribute]
[<775b3474-4bdb-4dfa-9504-95167a40b14b>NullableContextAttribute("1")]
[<7ee1374a-350e-48d8-b14b-16bf02905262>NullableAttribute("0")]
public static class Octopus.Client.Extensions.DateTimeExtensions : object {
    [ExtensionAttribute]
public static DateTimeZone ToDateTimeZone(string timeZoneId);
    [ExtensionAttribute]
public static DateTimeZone ToDateTimeZoneOrNull(string timeZoneId);
    [ExtensionAttribute]
public static string ToWindowsTimeZoneId(DateTimeZone zone);
    [CompilerGeneratedAttribute]
[<775b3474-4bdb-4dfa-9504-95167a40b14b>NullableContextAttribute("2")]
internal static DateTimeZone <ToDateTimeZoneOrNull>g__ConvertFromWindows|1_0(<>c__DisplayClass1_0& );
}
[ExtensionAttribute]
internal static class Octopus.Client.Extensions.EnumerableExtensions : object {
    [ExtensionAttribute]
[IteratorStateMachineAttribute("Octopus.Client.Extensions.EnumerableExtensions/<TakeWhile>d__0`1")]
public static IEnumerable`1<T> TakeWhile(IEnumerable`1<T> source, Func`2<T, bool> predicate, bool inclusive);
}
[ExtensionAttribute]
internal static class Octopus.Client.Extensions.LazyExtensions : object {
    [ExtensionAttribute]
public static T LoadValue(Lazy`1<T> lazy);
}
[ExtensionAttribute]
public static class Octopus.Client.Extensions.StringExtensions : object {
    [ExtensionAttribute]
public static string StringJoin(IEnumerable`1<string> items, string separator);
    [ExtensionAttribute]
public static string NewLineSeparate(IEnumerable`1<object> items);
    [ExtensionAttribute]
public static string CommaSeparate(IEnumerable`1<object> items);
    [ExtensionAttribute]
public static string ToCamelCase(string s);
    [ExtensionAttribute]
public static bool Contains(string s, string text, StringComparison comp);
}
[ExtensionAttribute]
public static class Octopus.Client.Extensions.TaskStateExtensions : object {
    [ExtensionAttribute]
public static bool IsCompleted(TaskState state);
}
[ExtensionAttribute]
public static class Octopus.Client.Extensions.TypeExtensions : object {
    [ExtensionAttribute]
public static object GetDefault(Type t);
    [ExtensionAttribute]
public static AccountType DetermineAccountType(Type type);
    [ExtensionAttribute]
internal static bool IsClosedTypeOfOpenGeneric(Type type, Type openGenericType);
    [ExtensionAttribute]
internal static IEnumerable`1<Type> CompleteTypeHierarchy(Type type);
    [ExtensionAttribute]
[IteratorStateMachineAttribute("Octopus.Client.Extensions.TypeExtensions/<DepthFirst>d__4`1")]
internal static IEnumerable`1<T> DepthFirst(IEnumerable`1<T> items, Func`2<T, IEnumerable`1<T>> childrenFunc);
}
public static class Octopus.Client.Extensions.UriExtensions : object {
    private static Char[] HexUpperChars;
    private static UriExtensions();
    public static string HexEscape(char character);
    private static void EscapeAsciiChar(char ch, Char[] to, Int32& pos);
}
internal class Octopus.Client.Features.DeltaCompression : object {
    private static ILog Logger;
    private static DeltaCompression();
    public static bool CreateDelta(Stream contents, PackageSignatureResource signatureResult, string deltaTempFile);
}
public class Octopus.Client.HttpRouting.HttpRouteExtractor : object {
    private static Regex TokensRegex;
    private ConcurrentDictionary`2<Type, HttpMethod> httpMethodsByPayloadType;
    private ConcurrentDictionary`2<Type, Type> httpRouteTypesByPayloadType;
    private Func`1<Type[]> scanForHttpRouteTypes;
    public HttpRouteExtractor(Func`1<Type[]> scanForHttpRouteTypes);
    private static HttpRouteExtractor();
    public sealed virtual HttpMethod ExtractHttpMethod(ICommand`2<TCommand, TResponse> command);
    public sealed virtual HttpMethod ExtractHttpMethod(IRequest`2<TRequest, TResponse> request);
    public sealed virtual Uri ExtractHttpRoute(ICommand`2<TCommand, TResponse> command);
    public sealed virtual Uri ExtractHttpRoute(IRequest`2<TRequest, TResponse> request);
    private Uri ExtractHttpRouteInternal(HttpMethod httpMethod, T payload, Type routeType);
    private bool TryReplaceAllRouteTokens(HttpMethod httpMethod, string routeTemplate, String[] tokens, object payload, String& route);
    private static IDictionary`2<string, object> PayloadProperties(object payload);
    private Type FindRouteType(Type httpRouteTypeInterface);
    private static HttpMethod MapFromOctopusHttpMethodToSystemNetHttpMethod(HttpMethod httpMethod);
    [CompilerGeneratedAttribute]
private HttpMethod <ExtractHttpMethod>b__5_0(Type t);
    [CompilerGeneratedAttribute]
private HttpMethod <ExtractHttpMethod>b__6_0(Type t);
    [CompilerGeneratedAttribute]
private Type <FindRouteType>b__12_0(Type t);
}
public interface Octopus.Client.HttpRouting.IHttpRouteExtractor {
    public abstract virtual HttpMethod ExtractHttpMethod(ICommand`2<TCommand, TResponse> command);
    public abstract virtual HttpMethod ExtractHttpMethod(IRequest`2<TRequest, TResponse> request);
    public abstract virtual Uri ExtractHttpRoute(ICommand`2<TCommand, TResponse> command);
    public abstract virtual Uri ExtractHttpRoute(IRequest`2<TRequest, TResponse> request);
}
public class Octopus.Client.HttpRouting.PayloadRoutingException : OctopusException {
    public PayloadRoutingException(string message);
    public PayloadRoutingException(string message, Exception inner);
    protected PayloadRoutingException(SerializationInfo info, StreamingContext context);
}
internal static class Octopus.Client.IdValueConstant : object {
    public static string IdAll;
}
public interface Octopus.Client.IHttpOctopusClient {
    [CompilerGeneratedAttribute]
public abstract virtual void add_BeforeSendingHttpRequest(Action`1<WebRequest> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_BeforeSendingHttpRequest(Action`1<WebRequest> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_AfterReceivingHttpResponse(Action`1<WebResponse> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_AfterReceivingHttpResponse(Action`1<WebResponse> value);
}
public interface Octopus.Client.ILinkResolver {
    public bool IsUsingSecureConnection { get; }
    public abstract virtual bool get_IsUsingSecureConnection();
    public abstract virtual Uri Resolve(string link);
}
public interface Octopus.Client.IOctopusAsyncClient {
    [ObsoleteAttribute("This call is a blocking call. For a non-blocking call, access the root document through the IOctopusSystemAsyncRepository instead: client.Repository.LoadRootDocument()", "False")]
[EditorBrowsableAttribute("1")]
public RootResource RootDocument { get; }
    public IOctopusAsyncRepository Repository { get; }
    public bool IsUsingSecureConnection { get; }
    public abstract virtual RootResource get_RootDocument();
    [CompilerGeneratedAttribute]
public abstract virtual void add_SendingOctopusRequest(Action`1<OctopusRequest> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_SendingOctopusRequest(Action`1<OctopusRequest> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_ReceivedOctopusResponse(Action`1<OctopusResponse> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_ReceivedOctopusResponse(Action`1<OctopusResponse> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_BeforeSendingHttpRequest(Action`1<HttpRequestMessage> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_BeforeSendingHttpRequest(Action`1<HttpRequestMessage> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_AfterReceivedHttpResponse(Action`1<HttpResponseMessage> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_AfterReceivedHttpResponse(Action`1<HttpResponseMessage> value);
    public abstract virtual IOctopusAsyncRepository get_Repository();
    public abstract virtual bool get_IsUsingSecureConnection();
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<ResourceCollection`1<TResource>> List(string path, object pathParameters);
    public abstract virtual Task`1<ResourceCollection`1<TResource>> List(string path, CancellationToken cancellationToken);
    public abstract virtual Task`1<ResourceCollection`1<TResource>> List(string path, object pathParameters, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<IReadOnlyList`1<TResource>> ListAll(string path, object pathParameters);
    public abstract virtual Task`1<IReadOnlyList`1<TResource>> ListAll(string path, CancellationToken cancellationToken);
    public abstract virtual Task`1<IReadOnlyList`1<TResource>> ListAll(string path, object pathParameters, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task Paginate(string path, Func`2<ResourceCollection`1<TResource>, bool> getNextPage);
    public abstract virtual Task Paginate(string path, Func`2<ResourceCollection`1<TResource>, bool> getNextPage, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task Paginate(string path, object pathParameters, Func`2<ResourceCollection`1<TResource>, bool> getNextPage);
    public abstract virtual Task Paginate(string path, object pathParameters, Func`2<ResourceCollection`1<TResource>, bool> getNextPage, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<TResource> Get(string path, object pathParameters);
    public abstract virtual Task`1<TResource> Get(string path, CancellationToken cancellationToken);
    public abstract virtual Task`1<TResource> Get(string path, object pathParameters, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<TResource> Create(string path, TResource resource, object pathParameters);
    public abstract virtual Task`1<TResource> Create(string path, TResource resource, CancellationToken cancellationToken);
    public abstract virtual Task`1<TResource> Create(string path, TResource resource, object pathParameters, CancellationToken cancellationToken);
    public abstract virtual Task`1<TResponse> Create(string path, TCommand command, object pathParameters, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task Post(string path, TResource resource, object pathParameters);
    public abstract virtual Task Post(string path, TResource resource, CancellationToken cancellationToken);
    public abstract virtual Task Post(string path, TResource resource, object pathParameters, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<TResponse> Post(string path, TResource resource, object pathParameters);
    public abstract virtual Task`1<TResponse> Post(string path, TResource resource, CancellationToken cancellationToken);
    public abstract virtual Task`1<TResponse> Post(string path, TResource resource, object pathParameters, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task Post(string path);
    public abstract virtual Task Post(string path, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task Put(string path, TResource resource);
    public abstract virtual Task Put(string path, TResource resource, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task Put(string path, TResource resource, object pathParameters);
    public abstract virtual Task Put(string path, TResource resource, object pathParameters, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task Put(string path);
    public abstract virtual Task Put(string path, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<TResource> Update(string path, TResource resource, object pathParameters);
    public abstract virtual Task`1<TResource> Update(string path, TResource resource, CancellationToken cancellationToken);
    public abstract virtual Task`1<TResource> Update(string path, TResource resource, object pathParameters, CancellationToken cancellationToken);
    public abstract virtual Task`1<TResponse> Update(string path, TCommand command, object pathParameters, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task Delete(string path, object pathParameters, object resource);
    public abstract virtual Task Delete(string path, CancellationToken cancellationToken);
    public abstract virtual Task Delete(string path, object pathParameters, object resource, CancellationToken cancellationToken);
    public abstract virtual Task`1<TResponse> Delete(string path, TCommand command, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<Stream> GetContent(string path, object pathParameters);
    public abstract virtual Task`1<Stream> GetContent(string path, CancellationToken cancellationToken);
    public abstract virtual Task`1<Stream> GetContent(string path, object pathParameters, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task PutContent(string path, Stream contentStream);
    public abstract virtual Task PutContent(string path, Stream contentStream, CancellationToken cancellationToken);
    public abstract virtual Uri QualifyUri(string path, object parameters);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task SignIn(LoginCommand loginCommand);
    public abstract virtual Task SignIn(LoginCommand loginCommand, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task SignOut();
    public abstract virtual Task SignOut(CancellationToken cancellationToken);
    public abstract virtual IOctopusSpaceAsyncRepository ForSpace(SpaceResource space);
    public abstract virtual IOctopusSystemAsyncRepository ForSystem();
    public abstract virtual Task`1<TResponse> Do(ICommand`2<TCommand, TResponse> command, CancellationToken cancellationToken);
    public abstract virtual Task`1<TResponse> Request(IRequest`2<TRequest, TResponse> request, CancellationToken cancellationToken);
}
public interface Octopus.Client.IOctopusAsyncRepository {
}
public interface Octopus.Client.IOctopusClient {
    [ObsoleteAttribute("Access the root document through the IOctopusSystemRepository instead: client.Repository.LoadRootDocument()", "False")]
[EditorBrowsableAttribute("1")]
public RootResource RootDocument { get; }
    public IOctopusRepository Repository { get; }
    public bool IsUsingSecureConnection { get; }
    public abstract virtual RootResource get_RootDocument();
    public abstract virtual IOctopusRepository get_Repository();
    public abstract virtual bool get_IsUsingSecureConnection();
    [CompilerGeneratedAttribute]
public abstract virtual void add_SendingOctopusRequest(Action`1<OctopusRequest> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_SendingOctopusRequest(Action`1<OctopusRequest> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_ReceivedOctopusResponse(Action`1<OctopusResponse> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_ReceivedOctopusResponse(Action`1<OctopusResponse> value);
    public abstract virtual ResourceCollection`1<TResource> List(string path, object pathParameters);
    public abstract virtual IReadOnlyList`1<TResource> ListAll(string path, object pathParameters);
    public abstract virtual void Paginate(string path, Func`2<ResourceCollection`1<TResource>, bool> getNextPage);
    public abstract virtual void Paginate(string path, object pathParameters, Func`2<ResourceCollection`1<TResource>, bool> getNextPage);
    public abstract virtual TResource Get(string path, object pathParameters);
    public abstract virtual TResource Create(string path, TResource resource, object pathParameters);
    public abstract virtual TResponse Create(string path, TCommand command, object pathParameters);
    public abstract virtual void Post(string path, TResource resource, object pathParameters);
    public abstract virtual TResponse Post(string path, TResource resource, object pathParameters);
    public abstract virtual void Post(string path);
    public abstract virtual void Put(string path, TResource resource);
    public abstract virtual void Put(string path);
    public abstract virtual void Put(string path, TResource resource, object pathParameters);
    public abstract virtual TResource Update(string path, TResource resource, object pathParameters);
    public abstract virtual TResponse Update(string path, TCommand command, object pathParameters);
    public abstract virtual void Delete(string path, object pathParameters, object resource);
    public abstract virtual TResponse Delete(string path, TCommand command, object pathParameters);
    public abstract virtual Stream GetContent(string path, object pathParameters);
    public abstract virtual void PutContent(string path, Stream contentStream);
    public abstract virtual Uri QualifyUri(string path, object parameters);
    public abstract virtual void SignIn(LoginCommand loginCommand);
    public abstract virtual void SignOut();
    public abstract virtual IOctopusSpaceRepository ForSpace(SpaceResource space);
    public abstract virtual IOctopusSystemRepository ForSystem();
    public abstract virtual TResponse Do(ICommand`2<TCommand, TResponse> command, CancellationToken cancellationToken);
    public abstract virtual TResponse Request(IRequest`2<TRequest, TResponse> request, CancellationToken cancellationToken);
}
public interface Octopus.Client.IOctopusClientFactory {
    public abstract virtual IOctopusClient CreateClient(OctopusServerEndpoint serverEndpoint, OctopusClientOptions options);
    public abstract virtual Task`1<IOctopusAsyncClient> CreateAsyncClient(OctopusServerEndpoint serverEndpoint, OctopusClientOptions options);
}
public interface Octopus.Client.IOctopusCommonAsyncRepository {
    public IEventRepository Events { get; }
    public IArchivedEventFileRepository ArchivedEventFiles { get; }
    public ITaskRepository Tasks { get; }
    public ITeamsRepository Teams { get; }
    public IScopedUserRoleRepository ScopedUserRoles { get; }
    public IUserPermissionsRepository UserPermissions { get; }
    public IUserTeamsRepository UserTeams { get; }
    public ICommunityActionTemplateRepository CommunityActionTemplates { get; }
    public IUserInvitesRepository UserInvites { get; }
    public IOctopusAsyncClient Client { get; }
    public RepositoryScope Scope { get; }
    public abstract virtual IEventRepository get_Events();
    public abstract virtual IArchivedEventFileRepository get_ArchivedEventFiles();
    public abstract virtual ITaskRepository get_Tasks();
    public abstract virtual ITeamsRepository get_Teams();
    public abstract virtual IScopedUserRoleRepository get_ScopedUserRoles();
    public abstract virtual IUserPermissionsRepository get_UserPermissions();
    public abstract virtual IUserTeamsRepository get_UserTeams();
    public abstract virtual ICommunityActionTemplateRepository get_CommunityActionTemplates();
    public abstract virtual IUserInvitesRepository get_UserInvites();
    public abstract virtual IOctopusAsyncClient get_Client();
    public abstract virtual RepositoryScope get_Scope();
    public abstract virtual Task`1<bool> HasLink(string name);
    public abstract virtual Task`1<bool> HasLinkParameter(string linkName, string parameterName);
    public abstract virtual Task`1<string> Link(string name);
}
public interface Octopus.Client.IOctopusCommonRepository {
    public IEventRepository Events { get; }
    public IArchivedEventFileRepository ArchivedEventFiles { get; }
    public ITaskRepository Tasks { get; }
    public ITeamsRepository Teams { get; }
    public IScopedUserRoleRepository ScopedUserRoles { get; }
    public IUserPermissionsRepository UserPermissions { get; }
    public IUserTeamsRepository UserTeams { get; }
    public IUserInvitesRepository UserInvites { get; }
    public IOctopusClient Client { get; }
    public RepositoryScope Scope { get; }
    public abstract virtual IEventRepository get_Events();
    public abstract virtual IArchivedEventFileRepository get_ArchivedEventFiles();
    public abstract virtual ITaskRepository get_Tasks();
    public abstract virtual ITeamsRepository get_Teams();
    public abstract virtual IScopedUserRoleRepository get_ScopedUserRoles();
    public abstract virtual IUserPermissionsRepository get_UserPermissions();
    public abstract virtual IUserTeamsRepository get_UserTeams();
    public abstract virtual IUserInvitesRepository get_UserInvites();
    public abstract virtual IOctopusClient get_Client();
    public abstract virtual RepositoryScope get_Scope();
    public abstract virtual bool HasLink(string name);
    public abstract virtual bool HasLinkParameter(string linkName, string parameterName);
    public abstract virtual string Link(string name);
}
public interface Octopus.Client.IOctopusRepository {
}
public interface Octopus.Client.IOctopusSpaceAsyncRepository {
    public IAccountRepository Accounts { get; }
    public IActionTemplateRepository ActionTemplates { get; }
    public IArtifactRepository Artifacts { get; }
    public IBuiltInPackageRepositoryRepository BuiltInPackageRepository { get; }
    public IBuildInformationRepository BuildInformationRepository { get; }
    public ICertificateRepository Certificates { get; }
    public IChannelRepository Channels { get; }
    public IDashboardConfigurationRepository DashboardConfigurations { get; }
    public IDashboardRepository Dashboards { get; }
    public IDefectsRepository Defects { get; }
    public IDeploymentProcessRepository DeploymentProcesses { get; }
    public IDeploymentSettingsRepository DeploymentSettings { get; }
    public IDeploymentRepository Deployments { get; }
    public IEnvironmentRepository Environments { get; }
    public IFeedRepository Feeds { get; }
    public IGitCredentialRepository GitCredentials { get; }
    public IInterruptionRepository Interruptions { get; }
    public ILibraryVariableSetRepository LibraryVariableSets { get; }
    public ILifecyclesRepository Lifecycles { get; }
    public IMachinePolicyRepository MachinePolicies { get; }
    public IMachineRepository Machines { get; }
    public IMachineRoleRepository MachineRoles { get; }
    public IProjectGroupRepository ProjectGroups { get; }
    public IProjectRepository Projects { get; }
    public IRunbookRepository Runbooks { get; }
    public IRunbookProcessRepository RunbookProcesses { get; }
    public IRunbookSnapshotRepository RunbookSnapshots { get; }
    public IRunbookRunRepository RunbookRuns { get; }
    public IProjectTriggerRepository ProjectTriggers { get; }
    public IProxyRepository Proxies { get; }
    public IReleaseRepository Releases { get; }
    public IRetentionPolicyRepository RetentionPolicies { get; }
    public ISubscriptionRepository Subscriptions { get; }
    public ITagSetRepository TagSets { get; }
    public ITenantRepository Tenants { get; }
    public ITenantVariablesRepository TenantVariables { get; }
    public IVariableSetRepository VariableSets { get; }
    public IWorkerPoolRepository WorkerPools { get; }
    public IWorkerRepository Workers { get; }
    public abstract virtual IAccountRepository get_Accounts();
    public abstract virtual IActionTemplateRepository get_ActionTemplates();
    public abstract virtual IArtifactRepository get_Artifacts();
    public abstract virtual IBuiltInPackageRepositoryRepository get_BuiltInPackageRepository();
    public abstract virtual IBuildInformationRepository get_BuildInformationRepository();
    public abstract virtual ICertificateRepository get_Certificates();
    public abstract virtual IChannelRepository get_Channels();
    public abstract virtual IDashboardConfigurationRepository get_DashboardConfigurations();
    public abstract virtual IDashboardRepository get_Dashboards();
    public abstract virtual IDefectsRepository get_Defects();
    public abstract virtual IDeploymentProcessRepository get_DeploymentProcesses();
    public abstract virtual IDeploymentSettingsRepository get_DeploymentSettings();
    public abstract virtual IDeploymentRepository get_Deployments();
    public abstract virtual IEnvironmentRepository get_Environments();
    public abstract virtual IFeedRepository get_Feeds();
    public abstract virtual IGitCredentialRepository get_GitCredentials();
    public abstract virtual IInterruptionRepository get_Interruptions();
    public abstract virtual ILibraryVariableSetRepository get_LibraryVariableSets();
    public abstract virtual ILifecyclesRepository get_Lifecycles();
    public abstract virtual IMachinePolicyRepository get_MachinePolicies();
    public abstract virtual IMachineRepository get_Machines();
    public abstract virtual IMachineRoleRepository get_MachineRoles();
    public abstract virtual IProjectGroupRepository get_ProjectGroups();
    public abstract virtual IProjectRepository get_Projects();
    public abstract virtual IRunbookRepository get_Runbooks();
    public abstract virtual IRunbookProcessRepository get_RunbookProcesses();
    public abstract virtual IRunbookSnapshotRepository get_RunbookSnapshots();
    public abstract virtual IRunbookRunRepository get_RunbookRuns();
    public abstract virtual IProjectTriggerRepository get_ProjectTriggers();
    public abstract virtual IProxyRepository get_Proxies();
    public abstract virtual IReleaseRepository get_Releases();
    public abstract virtual IRetentionPolicyRepository get_RetentionPolicies();
    public abstract virtual ISubscriptionRepository get_Subscriptions();
    public abstract virtual ITagSetRepository get_TagSets();
    public abstract virtual ITenantRepository get_Tenants();
    public abstract virtual ITenantVariablesRepository get_TenantVariables();
    public abstract virtual IVariableSetRepository get_VariableSets();
    public abstract virtual IWorkerPoolRepository get_WorkerPools();
    public abstract virtual IWorkerRepository get_Workers();
    public abstract virtual Task`1<SpaceRootResource> LoadSpaceRootDocument();
}
public interface Octopus.Client.IOctopusSpaceRepository {
    public IAccountRepository Accounts { get; }
    public IActionTemplateRepository ActionTemplates { get; }
    public IArtifactRepository Artifacts { get; }
    public IBuiltInPackageRepositoryRepository BuiltInPackageRepository { get; }
    public IBuildInformationRepository BuildInformationRepository { get; }
    public ICertificateConfigurationRepository CertificateConfiguration { get; }
    public ICertificateRepository Certificates { get; }
    public IChannelRepository Channels { get; }
    public IDashboardConfigurationRepository DashboardConfigurations { get; }
    public IDashboardRepository Dashboards { get; }
    public IDefectsRepository Defects { get; }
    public IDeploymentProcessRepository DeploymentProcesses { get; }
    public IDeploymentSettingsRepository DeploymentSettings { get; }
    public IDeploymentRepository Deployments { get; }
    public IEnvironmentRepository Environments { get; }
    public IFeedRepository Feeds { get; }
    public IInterruptionRepository Interruptions { get; }
    public ILibraryVariableSetRepository LibraryVariableSets { get; }
    public ILifecyclesRepository Lifecycles { get; }
    public IMachinePolicyRepository MachinePolicies { get; }
    public IMachineRepository Machines { get; }
    public IMachineRoleRepository MachineRoles { get; }
    public IProjectGroupRepository ProjectGroups { get; }
    public IProjectRepository Projects { get; }
    public IRunbookRepository Runbooks { get; }
    public IRunbookProcessRepository RunbookProcesses { get; }
    public IRunbookSnapshotRepository RunbookSnapshots { get; }
    public IRunbookRunRepository RunbookRuns { get; }
    public IProjectTriggerRepository ProjectTriggers { get; }
    public IProxyRepository Proxies { get; }
    public IReleaseRepository Releases { get; }
    public IRetentionPolicyRepository RetentionPolicies { get; }
    public ISubscriptionRepository Subscriptions { get; }
    public ITagSetRepository TagSets { get; }
    public ITenantRepository Tenants { get; }
    public ITenantVariablesRepository TenantVariables { get; }
    public IVariableSetRepository VariableSets { get; }
    public IWorkerPoolRepository WorkerPools { get; }
    public IWorkerRepository Workers { get; }
    public abstract virtual IAccountRepository get_Accounts();
    public abstract virtual IActionTemplateRepository get_ActionTemplates();
    public abstract virtual IArtifactRepository get_Artifacts();
    public abstract virtual IBuiltInPackageRepositoryRepository get_BuiltInPackageRepository();
    public abstract virtual IBuildInformationRepository get_BuildInformationRepository();
    public abstract virtual ICertificateConfigurationRepository get_CertificateConfiguration();
    public abstract virtual ICertificateRepository get_Certificates();
    public abstract virtual IChannelRepository get_Channels();
    public abstract virtual IDashboardConfigurationRepository get_DashboardConfigurations();
    public abstract virtual IDashboardRepository get_Dashboards();
    public abstract virtual IDefectsRepository get_Defects();
    public abstract virtual IDeploymentProcessRepository get_DeploymentProcesses();
    public abstract virtual IDeploymentSettingsRepository get_DeploymentSettings();
    public abstract virtual IDeploymentRepository get_Deployments();
    public abstract virtual IEnvironmentRepository get_Environments();
    public abstract virtual IFeedRepository get_Feeds();
    public abstract virtual IInterruptionRepository get_Interruptions();
    public abstract virtual ILibraryVariableSetRepository get_LibraryVariableSets();
    public abstract virtual ILifecyclesRepository get_Lifecycles();
    public abstract virtual IMachinePolicyRepository get_MachinePolicies();
    public abstract virtual IMachineRepository get_Machines();
    public abstract virtual IMachineRoleRepository get_MachineRoles();
    public abstract virtual IProjectGroupRepository get_ProjectGroups();
    public abstract virtual IProjectRepository get_Projects();
    public abstract virtual IRunbookRepository get_Runbooks();
    public abstract virtual IRunbookProcessRepository get_RunbookProcesses();
    public abstract virtual IRunbookSnapshotRepository get_RunbookSnapshots();
    public abstract virtual IRunbookRunRepository get_RunbookRuns();
    public abstract virtual IProjectTriggerRepository get_ProjectTriggers();
    public abstract virtual IProxyRepository get_Proxies();
    public abstract virtual IReleaseRepository get_Releases();
    public abstract virtual IRetentionPolicyRepository get_RetentionPolicies();
    public abstract virtual ISubscriptionRepository get_Subscriptions();
    public abstract virtual ITagSetRepository get_TagSets();
    public abstract virtual ITenantRepository get_Tenants();
    public abstract virtual ITenantVariablesRepository get_TenantVariables();
    public abstract virtual IVariableSetRepository get_VariableSets();
    public abstract virtual IWorkerPoolRepository get_WorkerPools();
    public abstract virtual IWorkerRepository get_Workers();
    public abstract virtual SpaceRootResource LoadSpaceRootDocument();
}
public interface Octopus.Client.IOctopusSystemAsyncRepository {
    public ISchedulerRepository Schedulers { get; }
    public IBackupRepository Backups { get; }
    public ICertificateConfigurationRepository CertificateConfiguration { get; }
    public IConfigurationRepository Configuration { get; }
    public IFeaturesConfigurationRepository FeaturesConfiguration { get; }
    public IMigrationRepository Migrations { get; }
    public ILicensesRepository Licenses { get; }
    public IOctopusServerNodeRepository OctopusServerNodes { get; }
    public IPerformanceConfigurationRepository PerformanceConfiguration { get; }
    public IServerStatusRepository ServerStatus { get; }
    public ISpaceRepository Spaces { get; }
    public IUserRepository Users { get; }
    public IUserRolesRepository UserRoles { get; }
    public IUpgradeConfigurationRepository UpgradeConfiguration { get; }
    public ITelemetryConfigurationRepository TelemetryConfigurationRepository { get; }
    public IDeploymentFreezeRepository DeploymentFreezes { get; }
    public abstract virtual ISchedulerRepository get_Schedulers();
    public abstract virtual IBackupRepository get_Backups();
    public abstract virtual ICertificateConfigurationRepository get_CertificateConfiguration();
    public abstract virtual IConfigurationRepository get_Configuration();
    public abstract virtual IFeaturesConfigurationRepository get_FeaturesConfiguration();
    public abstract virtual IMigrationRepository get_Migrations();
    public abstract virtual ILicensesRepository get_Licenses();
    public abstract virtual IOctopusServerNodeRepository get_OctopusServerNodes();
    public abstract virtual IPerformanceConfigurationRepository get_PerformanceConfiguration();
    public abstract virtual IServerStatusRepository get_ServerStatus();
    public abstract virtual ISpaceRepository get_Spaces();
    public abstract virtual IUserRepository get_Users();
    public abstract virtual IUserRolesRepository get_UserRoles();
    public abstract virtual IUpgradeConfigurationRepository get_UpgradeConfiguration();
    public abstract virtual ITelemetryConfigurationRepository get_TelemetryConfigurationRepository();
    public abstract virtual IDeploymentFreezeRepository get_DeploymentFreezes();
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<RootResource> LoadRootDocument();
    public abstract virtual Task`1<RootResource> LoadRootDocument(CancellationToken cancellationToken);
}
public interface Octopus.Client.IOctopusSystemRepository {
    public ISchedulerRepository Schedulers { get; }
    public IBackupRepository Backups { get; }
    public ICommunityActionTemplateRepository CommunityActionTemplates { get; }
    public IConfigurationRepository Configuration { get; }
    public IFeaturesConfigurationRepository FeaturesConfiguration { get; }
    public IMigrationRepository Migrations { get; }
    public ILicensesRepository Licenses { get; }
    public IOctopusServerNodeRepository OctopusServerNodes { get; }
    public IPerformanceConfigurationRepository PerformanceConfiguration { get; }
    public IServerStatusRepository ServerStatus { get; }
    public ISpaceRepository Spaces { get; }
    public IUserRepository Users { get; }
    public IUserRolesRepository UserRoles { get; }
    public IUpgradeConfigurationRepository UpgradeConfiguration { get; }
    public ITelemetryConfigurationRepository TelemetryConfigurationRepository { get; }
    public IDeploymentFreezeRepository DeploymentFreezes { get; }
    public abstract virtual ISchedulerRepository get_Schedulers();
    public abstract virtual IBackupRepository get_Backups();
    public abstract virtual ICommunityActionTemplateRepository get_CommunityActionTemplates();
    public abstract virtual IConfigurationRepository get_Configuration();
    public abstract virtual IFeaturesConfigurationRepository get_FeaturesConfiguration();
    public abstract virtual IMigrationRepository get_Migrations();
    public abstract virtual ILicensesRepository get_Licenses();
    public abstract virtual IOctopusServerNodeRepository get_OctopusServerNodes();
    public abstract virtual IPerformanceConfigurationRepository get_PerformanceConfiguration();
    public abstract virtual IServerStatusRepository get_ServerStatus();
    public abstract virtual ISpaceRepository get_Spaces();
    public abstract virtual IUserRepository get_Users();
    public abstract virtual IUserRolesRepository get_UserRoles();
    public abstract virtual IUpgradeConfigurationRepository get_UpgradeConfiguration();
    public abstract virtual ITelemetryConfigurationRepository get_TelemetryConfigurationRepository();
    public abstract virtual IDeploymentFreezeRepository get_DeploymentFreezes();
    public abstract virtual RootResource LoadRootDocument();
}
internal class Octopus.Client.LocationChecker : object {
    private static ILog Logger;
    private static LocationChecker();
    public static void CheckAssemblyLocation();
    private static void CheckBasedOnApplication(RegistryKey octopusRegNode, string application, string processName);
}
internal interface Octopus.Client.Logging.ILog {
    public abstract virtual bool Log(LogLevel logLevel, Func`1<string> messageFunc, Exception exception, Object[] formatParameters);
}
public interface Octopus.Client.Logging.ILogProvider {
    public abstract virtual Logger GetLogger(string name);
    public abstract virtual IDisposable OpenNestedContext(string message);
    public abstract virtual IDisposable OpenMappedContext(string key, string value);
}
[ExtensionAttribute]
internal static class Octopus.Client.Logging.LogExtensions : object {
    [ExtensionAttribute]
public static bool IsDebugEnabled(ILog logger);
    [ExtensionAttribute]
public static bool IsErrorEnabled(ILog logger);
    [ExtensionAttribute]
public static bool IsFatalEnabled(ILog logger);
    [ExtensionAttribute]
public static bool IsInfoEnabled(ILog logger);
    [ExtensionAttribute]
public static bool IsTraceEnabled(ILog logger);
    [ExtensionAttribute]
public static bool IsWarnEnabled(ILog logger);
    [ExtensionAttribute]
public static void Debug(ILog logger, Func`1<string> messageFunc);
    [ExtensionAttribute]
public static void Debug(ILog logger, string message);
    [ExtensionAttribute]
public static void DebugFormat(ILog logger, string message, Object[] args);
    [ExtensionAttribute]
public static void DebugException(ILog logger, string message, Exception exception);
    [ExtensionAttribute]
public static void DebugException(ILog logger, string message, Exception exception, Object[] formatParams);
    [ExtensionAttribute]
public static void Error(ILog logger, Func`1<string> messageFunc);
    [ExtensionAttribute]
public static void Error(ILog logger, string message);
    [ExtensionAttribute]
public static void ErrorFormat(ILog logger, string message, Object[] args);
    [ExtensionAttribute]
public static void ErrorException(ILog logger, string message, Exception exception, Object[] formatParams);
    [ExtensionAttribute]
public static void Fatal(ILog logger, Func`1<string> messageFunc);
    [ExtensionAttribute]
public static void Fatal(ILog logger, string message);
    [ExtensionAttribute]
public static void FatalFormat(ILog logger, string message, Object[] args);
    [ExtensionAttribute]
public static void FatalException(ILog logger, string message, Exception exception, Object[] formatParams);
    [ExtensionAttribute]
public static void Info(ILog logger, Func`1<string> messageFunc);
    [ExtensionAttribute]
public static void Info(ILog logger, string message);
    [ExtensionAttribute]
public static void InfoFormat(ILog logger, string message, Object[] args);
    [ExtensionAttribute]
public static void InfoException(ILog logger, string message, Exception exception, Object[] formatParams);
    [ExtensionAttribute]
public static void Trace(ILog logger, Func`1<string> messageFunc);
    [ExtensionAttribute]
public static void Trace(ILog logger, string message);
    [ExtensionAttribute]
public static void TraceFormat(ILog logger, string message, Object[] args);
    [ExtensionAttribute]
public static void TraceException(ILog logger, string message, Exception exception, Object[] formatParams);
    [ExtensionAttribute]
public static void Warn(ILog logger, Func`1<string> messageFunc);
    [ExtensionAttribute]
public static void Warn(ILog logger, string message);
    [ExtensionAttribute]
public static void WarnFormat(ILog logger, string message, Object[] args);
    [ExtensionAttribute]
public static void WarnException(ILog logger, string message, Exception exception, Object[] formatParams);
    private static void GuardAgainstNullLogger(ILog logger);
    [ExtensionAttribute]
private static void LogFormat(ILog logger, LogLevel logLevel, string message, Object[] args);
    [ExtensionAttribute]
private static Func`1<T> AsFunc(T value);
    [ExtensionAttribute]
private static T Return(T value);
}
public class Octopus.Client.Logging.Logger : MulticastDelegate {
    public Logger(object object, IntPtr method);
    public virtual bool Invoke(LogLevel logLevel, Func`1<string> messageFunc, Exception exception, Object[] formatParameters);
    public virtual IAsyncResult BeginInvoke(LogLevel logLevel, Func`1<string> messageFunc, Exception exception, Object[] formatParameters, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class Octopus.Client.Logging.LoggerExecutionWrapper : object {
    private Logger _logger;
    private Func`1<bool> _getIsDisabled;
    internal static string FailedToGenerateLogMessage;
    internal Logger WrappedLogger { get; }
    internal LoggerExecutionWrapper(Logger logger, Func`1<bool> getIsDisabled);
    internal Logger get_WrappedLogger();
    public sealed virtual bool Log(LogLevel logLevel, Func`1<string> messageFunc, Exception exception, Object[] formatParameters);
}
public enum Octopus.Client.Logging.LogLevel : Enum {
    public int value__;
    public static LogLevel Trace;
    public static LogLevel Debug;
    public static LogLevel Info;
    public static LogLevel Warn;
    public static LogLevel Error;
    public static LogLevel Fatal;
}
public static class Octopus.Client.Logging.LogProvider : object {
    public static string DisableLoggingEnvironmentVariable;
    private static string NullLogProvider;
    [DynamicAttribute]
private static object s_currentLogProvider;
    private static Action`1<ILogProvider> s_onCurrentLogProviderSet;
    [CompilerGeneratedAttribute]
private static bool <IsDisabled>k__BackingField;
    internal static List`1<Tuple`2<IsLoggerAvailable, CreateLogProvider>> LogProviderResolvers;
    public static bool IsDisabled { get; public set; }
    unknown static Action`1<ILogProvider> OnCurrentLogProviderSet {internal set; }
    internal static ILogProvider CurrentLogProvider { get; }
    private static LogProvider();
    public static void SetCurrentLogProvider(ILogProvider logProvider);
    [CompilerGeneratedAttribute]
public static bool get_IsDisabled();
    [CompilerGeneratedAttribute]
public static void set_IsDisabled(bool value);
    internal static void set_OnCurrentLogProviderSet(Action`1<ILogProvider> value);
    internal static ILogProvider get_CurrentLogProvider();
    internal static ILog For();
    internal static ILog GetCurrentClassLogger();
    internal static ILog GetLogger(Type type);
    internal static ILog GetLogger(string name);
    internal static IDisposable OpenNestedContext(string message);
    internal static IDisposable OpenMappedContext(string key, string value);
    private static void RaiseOnCurrentLogProviderSet();
    internal static ILogProvider ResolveLogProvider();
}
internal class Octopus.Client.Logging.LogProviders.DisposableAction : object {
    private Action _onDispose;
    public DisposableAction(Action onDispose);
    public sealed virtual void Dispose();
}
internal class Octopus.Client.Logging.LogProviders.EntLibLogProvider : LogProviderBase {
    private static string TypeTemplate;
    private static bool s_providerIsAvailableOverride;
    private static Type LogEntryType;
    private static Type LoggerType;
    private static Type TraceEventTypeType;
    private static Action`3<string, string, int> WriteLogEntry;
    private static Func`3<string, int, bool> ShouldLogEntry;
    public static bool ProviderIsAvailableOverride { get; public set; }
    private static EntLibLogProvider();
    public static bool get_ProviderIsAvailableOverride();
    public static void set_ProviderIsAvailableOverride(bool value);
    public virtual Logger GetLogger(string name);
    internal static bool IsLoggerAvailable();
    private static Action`3<string, string, int> GetWriteLogEntry();
    private static Func`3<string, int, bool> GetShouldLogEntry();
    private static MemberInitExpression GetWriteLogExpression(Expression message, Expression severityParameter, ParameterExpression logNameParameter);
}
internal class Octopus.Client.Logging.LogProviders.Log4NetLogProvider : LogProviderBase {
    private Func`2<string, object> _getLoggerByNameDelegate;
    private static bool s_providerIsAvailableOverride;
    public static bool ProviderIsAvailableOverride { get; public set; }
    private static Log4NetLogProvider();
    public static bool get_ProviderIsAvailableOverride();
    public static void set_ProviderIsAvailableOverride(bool value);
    public virtual Logger GetLogger(string name);
    internal static bool IsLoggerAvailable();
    protected virtual OpenNdc GetOpenNdcMethod();
    protected virtual OpenMdc GetOpenMdcMethod();
    private static Type GetLogManagerType();
    private static Func`2<string, object> GetGetLoggerMethodCall();
}
internal static class Octopus.Client.Logging.LogProviders.LogMessageFormatter : object {
    private static Regex Pattern;
    private static LogMessageFormatter();
    public static Func`1<string> SimulateStructuredLogging(Func`1<string> messageBuilder, Object[] formatParameters);
    private static string ReplaceFirst(string text, string search, string replace);
}
internal abstract class Octopus.Client.Logging.LogProviders.LogProviderBase : object {
    private Lazy`1<OpenNdc> _lazyOpenNdcMethod;
    private Lazy`1<OpenMdc> _lazyOpenMdcMethod;
    private static IDisposable NoopDisposableInstance;
    private static LogProviderBase();
    public abstract virtual Logger GetLogger(string name);
    public sealed virtual IDisposable OpenNestedContext(string message);
    public sealed virtual IDisposable OpenMappedContext(string key, string value);
    protected virtual OpenNdc GetOpenNdcMethod();
    protected virtual OpenMdc GetOpenMdcMethod();
}
internal class Octopus.Client.Logging.LogProviders.LoupeLogProvider : LogProviderBase {
    private static bool s_providerIsAvailableOverride;
    private WriteDelegate _logWriteDelegate;
    public static bool ProviderIsAvailableOverride { get; public set; }
    private static LoupeLogProvider();
    public static bool get_ProviderIsAvailableOverride();
    public static void set_ProviderIsAvailableOverride(bool value);
    public virtual Logger GetLogger(string name);
    public static bool IsLoggerAvailable();
    private static Type GetLogManagerType();
    private static WriteDelegate GetLogWriteDelegate();
}
internal class Octopus.Client.Logging.LogProviders.NLogLogProvider : LogProviderBase {
    private Func`2<string, object> _getLoggerByNameDelegate;
    private static bool s_providerIsAvailableOverride;
    public static bool ProviderIsAvailableOverride { get; public set; }
    private static NLogLogProvider();
    public static bool get_ProviderIsAvailableOverride();
    public static void set_ProviderIsAvailableOverride(bool value);
    public virtual Logger GetLogger(string name);
    public static bool IsLoggerAvailable();
    protected virtual OpenNdc GetOpenNdcMethod();
    protected virtual OpenMdc GetOpenMdcMethod();
    private static Type GetLogManagerType();
    private static Func`2<string, object> GetGetLoggerMethodCall();
}
internal class Octopus.Client.Logging.LogProviders.SerilogLogProvider : LogProviderBase {
    private Func`2<string, object> _getLoggerByNameDelegate;
    private static bool s_providerIsAvailableOverride;
    public static bool ProviderIsAvailableOverride { get; public set; }
    private static SerilogLogProvider();
    public static bool get_ProviderIsAvailableOverride();
    public static void set_ProviderIsAvailableOverride(bool value);
    public virtual Logger GetLogger(string name);
    internal static bool IsLoggerAvailable();
    protected virtual OpenNdc GetOpenNdcMethod();
    protected virtual OpenMdc GetOpenMdcMethod();
    private static Func`3<string, string, IDisposable> GetPushProperty();
    private static Type GetLogManagerType();
    private static Func`2<string, object> GetForContextMethodCall();
}
internal static class Octopus.Client.Logging.LogProviders.TraceEventTypeValues : object {
    internal static Type Type;
    internal static int Verbose;
    internal static int Information;
    internal static int Warning;
    internal static int Error;
    internal static int Critical;
    private static TraceEventTypeValues();
}
[ExtensionAttribute]
internal static class Octopus.Client.Logging.LogProviders.TypeExtensions : object {
    [ExtensionAttribute]
internal static MethodInfo GetMethodPortable(Type type, string name);
    [ExtensionAttribute]
internal static MethodInfo GetMethodPortable(Type type, string name, Type[] types);
    [ExtensionAttribute]
internal static PropertyInfo GetPropertyPortable(Type type, string name);
    [ExtensionAttribute]
internal static IEnumerable`1<FieldInfo> GetFieldsPortable(Type type);
    [ExtensionAttribute]
internal static Type GetBaseTypePortable(Type type);
    [ExtensionAttribute]
internal static object CreateDelegate(MethodInfo methodInfo, Type delegateType);
    [ExtensionAttribute]
internal static Assembly GetAssemblyPortable(Type type);
}
internal static class Octopus.Client.MixedScopeConstants : object {
    public static string QueryStringParameterSpaces;
    public static string QueryStringParameterIncludeSystem;
    public static string AllSpacesQueryStringParameterValue;
}
[DebuggerDisplayAttribute("Name = {Name}")]
public abstract class Octopus.Client.Model.Accounts.AccountResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <EnvironmentIds>k__BackingField;
    private Nullable`1<TenantedDeploymentMode> tenantedDeploymentParticipation;
    [CompilerGeneratedAttribute]
private ReferenceCollection <TenantIds>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <TenantTags>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Slug>k__BackingField;
    [WriteableAttribute]
[TrimAttribute]
public string Name { get; public set; }
    [WriteableAttribute]
public string Description { get; public set; }
    [WriteableAttribute]
public ReferenceCollection EnvironmentIds { get; public set; }
    [WriteableAttribute]
public TenantedDeploymentMode TenantedDeploymentParticipation { get; public set; }
    [WriteableAttribute]
public ReferenceCollection TenantIds { get; public set; }
    [WriteableAttribute]
public ReferenceCollection TenantTags { get; public set; }
    [WriteableOnCreateAttribute]
public AccountType AccountType { get; }
    public string SpaceId { get; public set; }
    public string Slug { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_EnvironmentIds();
    [CompilerGeneratedAttribute]
public void set_EnvironmentIds(ReferenceCollection value);
    public void set_TenantedDeploymentParticipation(TenantedDeploymentMode value);
    public TenantedDeploymentMode get_TenantedDeploymentParticipation();
    [CompilerGeneratedAttribute]
public ReferenceCollection get_TenantIds();
    [CompilerGeneratedAttribute]
public void set_TenantIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_TenantTags();
    [CompilerGeneratedAttribute]
public void set_TenantTags(ReferenceCollection value);
    public abstract virtual AccountType get_AccountType();
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Slug();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Slug(string value);
}
public enum Octopus.Client.Model.Accounts.AccountType : Enum {
    public int value__;
    public static AccountType None;
    public static AccountType UsernamePassword;
    public static AccountType SshKeyPair;
    public static AccountType AzureSubscription;
    public static AccountType AzureServicePrincipal;
    public static AccountType AmazonWebServicesAccount;
    public static AccountType AmazonWebServicesRoleAccount;
    public static AccountType Token;
    public static AccountType GoogleCloudAccount;
    public static AccountType AzureOidc;
}
public class Octopus.Client.Model.Accounts.AmazonWebServicesAccountResource : AccountResource {
    [CompilerGeneratedAttribute]
private string <AccessKey>k__BackingField;
    [CompilerGeneratedAttribute]
private SensitiveValue <SecretKey>k__BackingField;
    public AccountType AccountType { get; }
    [TrimAttribute]
[RequiredAttribute]
[WriteableAttribute]
public string AccessKey { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
[RequiredAttribute]
public SensitiveValue SecretKey { get; public set; }
    public virtual AccountType get_AccountType();
    [CompilerGeneratedAttribute]
public string get_AccessKey();
    [CompilerGeneratedAttribute]
public void set_AccessKey(string value);
    [CompilerGeneratedAttribute]
public SensitiveValue get_SecretKey();
    [CompilerGeneratedAttribute]
public void set_SecretKey(SensitiveValue value);
}
public class Octopus.Client.Model.Accounts.AzureOidcAccountResource : AccountResource {
    [CompilerGeneratedAttribute]
private string <SubscriptionNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TenantId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AzureEnvironment>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResourceManagementEndpointBaseUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ActiveDirectoryEndpointBaseUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Audience>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <DeploymentSubjectKeys>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <HealthCheckSubjectKeys>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <AccountTestSubjectKeys>k__BackingField;
    public AccountType AccountType { get; }
    [WriteableAttribute]
[TrimAttribute]
[RequiredAttribute]
public string SubscriptionNumber { get; public set; }
    [TrimAttribute]
[NotDocumentReferenceAttribute]
[WriteableAttribute]
public string ClientId { get; public set; }
    [WriteableAttribute]
[NotDocumentReferenceAttribute]
[TrimAttribute]
public string TenantId { get; public set; }
    [WriteableAttribute]
[TrimAttribute]
public string AzureEnvironment { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string ResourceManagementEndpointBaseUri { get; public set; }
    [WriteableAttribute]
[TrimAttribute]
public string ActiveDirectoryEndpointBaseUri { get; public set; }
    [WriteableAttribute]
[TrimAttribute]
public string Audience { get; public set; }
    [WriteableAttribute]
public String[] DeploymentSubjectKeys { get; public set; }
    [WriteableAttribute]
public String[] HealthCheckSubjectKeys { get; public set; }
    [WriteableAttribute]
public String[] AccountTestSubjectKeys { get; public set; }
    public virtual AccountType get_AccountType();
    [CompilerGeneratedAttribute]
public string get_SubscriptionNumber();
    [CompilerGeneratedAttribute]
public void set_SubscriptionNumber(string value);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public string get_TenantId();
    [CompilerGeneratedAttribute]
public void set_TenantId(string value);
    [CompilerGeneratedAttribute]
public string get_AzureEnvironment();
    [CompilerGeneratedAttribute]
public void set_AzureEnvironment(string value);
    [CompilerGeneratedAttribute]
public string get_ResourceManagementEndpointBaseUri();
    [CompilerGeneratedAttribute]
public void set_ResourceManagementEndpointBaseUri(string value);
    [CompilerGeneratedAttribute]
public string get_ActiveDirectoryEndpointBaseUri();
    [CompilerGeneratedAttribute]
public void set_ActiveDirectoryEndpointBaseUri(string value);
    [CompilerGeneratedAttribute]
public string get_Audience();
    [CompilerGeneratedAttribute]
public void set_Audience(string value);
    [CompilerGeneratedAttribute]
public String[] get_DeploymentSubjectKeys();
    [CompilerGeneratedAttribute]
public void set_DeploymentSubjectKeys(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_HealthCheckSubjectKeys();
    [CompilerGeneratedAttribute]
public void set_HealthCheckSubjectKeys(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_AccountTestSubjectKeys();
    [CompilerGeneratedAttribute]
public void set_AccountTestSubjectKeys(String[] value);
}
public class Octopus.Client.Model.Accounts.AzureServicePrincipalAccountResource : AccountResource {
    [CompilerGeneratedAttribute]
private string <SubscriptionNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TenantId>k__BackingField;
    [CompilerGeneratedAttribute]
private SensitiveValue <Password>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AzureEnvironment>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResourceManagementEndpointBaseUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ActiveDirectoryEndpointBaseUri>k__BackingField;
    public AccountType AccountType { get; }
    [RequiredAttribute]
[WriteableAttribute]
[TrimAttribute]
public string SubscriptionNumber { get; public set; }
    [TrimAttribute]
[NotDocumentReferenceAttribute]
[WriteableAttribute]
public string ClientId { get; public set; }
    [NotDocumentReferenceAttribute]
[WriteableAttribute]
[TrimAttribute]
public string TenantId { get; public set; }
    [WriteableAttribute]
[TrimAttribute]
public SensitiveValue Password { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string AzureEnvironment { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string ResourceManagementEndpointBaseUri { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string ActiveDirectoryEndpointBaseUri { get; public set; }
    public virtual AccountType get_AccountType();
    [CompilerGeneratedAttribute]
public string get_SubscriptionNumber();
    [CompilerGeneratedAttribute]
public void set_SubscriptionNumber(string value);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public string get_TenantId();
    [CompilerGeneratedAttribute]
public void set_TenantId(string value);
    [CompilerGeneratedAttribute]
public SensitiveValue get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(SensitiveValue value);
    [CompilerGeneratedAttribute]
public string get_AzureEnvironment();
    [CompilerGeneratedAttribute]
public void set_AzureEnvironment(string value);
    [CompilerGeneratedAttribute]
public string get_ResourceManagementEndpointBaseUri();
    [CompilerGeneratedAttribute]
public void set_ResourceManagementEndpointBaseUri(string value);
    [CompilerGeneratedAttribute]
public string get_ActiveDirectoryEndpointBaseUri();
    [CompilerGeneratedAttribute]
public void set_ActiveDirectoryEndpointBaseUri(string value);
}
public class Octopus.Client.Model.Accounts.AzureStorageAccount : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Location>k__BackingField;
    public string Name { get; public set; }
    public string Location { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Location();
    [CompilerGeneratedAttribute]
public void set_Location(string value);
}
public class Octopus.Client.Model.Accounts.AzureSubscriptionAccountResource : AccountResource {
    [CompilerGeneratedAttribute]
private string <SubscriptionNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private SensitiveValue <CertificateBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CertificateThumbprint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AzureEnvironment>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServiceManagementEndpointBaseUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServiceManagementEndpointSuffix>k__BackingField;
    public AccountType AccountType { get; }
    [RequiredAttribute]
[TrimAttribute]
[WriteableAttribute]
public string SubscriptionNumber { get; public set; }
    [WriteableAttribute]
[TrimAttribute]
public SensitiveValue CertificateBytes { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string CertificateThumbprint { get; public set; }
    [WriteableAttribute]
[TrimAttribute]
public string AzureEnvironment { get; public set; }
    [WriteableAttribute]
[TrimAttribute]
public string ServiceManagementEndpointBaseUri { get; public set; }
    [WriteableAttribute]
[TrimAttribute]
public string ServiceManagementEndpointSuffix { get; public set; }
    public virtual AccountType get_AccountType();
    [CompilerGeneratedAttribute]
public string get_SubscriptionNumber();
    [CompilerGeneratedAttribute]
public void set_SubscriptionNumber(string value);
    [CompilerGeneratedAttribute]
public SensitiveValue get_CertificateBytes();
    [CompilerGeneratedAttribute]
public void set_CertificateBytes(SensitiveValue value);
    [CompilerGeneratedAttribute]
public string get_CertificateThumbprint();
    [CompilerGeneratedAttribute]
public void set_CertificateThumbprint(string value);
    [CompilerGeneratedAttribute]
public string get_AzureEnvironment();
    [CompilerGeneratedAttribute]
public void set_AzureEnvironment(string value);
    [CompilerGeneratedAttribute]
public string get_ServiceManagementEndpointBaseUri();
    [CompilerGeneratedAttribute]
public void set_ServiceManagementEndpointBaseUri(string value);
    [CompilerGeneratedAttribute]
public string get_ServiceManagementEndpointSuffix();
    [CompilerGeneratedAttribute]
public void set_ServiceManagementEndpointSuffix(string value);
}
public class Octopus.Client.Model.Accounts.GoogleCloudAccountResource : AccountResource {
    [CompilerGeneratedAttribute]
private SensitiveValue <JsonKey>k__BackingField;
    public AccountType AccountType { get; }
    [WriteableAttribute]
[RequiredAttribute]
[TrimAttribute]
public SensitiveValue JsonKey { get; public set; }
    public virtual AccountType get_AccountType();
    [CompilerGeneratedAttribute]
public SensitiveValue get_JsonKey();
    [CompilerGeneratedAttribute]
public void set_JsonKey(SensitiveValue value);
}
public class Octopus.Client.Model.Accounts.SshKeyPairAccountResource : AccountResource {
    [CompilerGeneratedAttribute]
private string <Username>k__BackingField;
    [CompilerGeneratedAttribute]
private SensitiveValue <PrivateKeyFile>k__BackingField;
    [CompilerGeneratedAttribute]
private SensitiveValue <PrivateKeyPassphrase>k__BackingField;
    public AccountType AccountType { get; }
    [WriteableAttribute]
[TrimAttribute]
public string Username { get; public set; }
    [WriteableAttribute]
public SensitiveValue PrivateKeyFile { get; public set; }
    [WriteableAttribute]
public SensitiveValue PrivateKeyPassphrase { get; public set; }
    public virtual AccountType get_AccountType();
    [CompilerGeneratedAttribute]
public string get_Username();
    [CompilerGeneratedAttribute]
public void set_Username(string value);
    [CompilerGeneratedAttribute]
public SensitiveValue get_PrivateKeyFile();
    [CompilerGeneratedAttribute]
public void set_PrivateKeyFile(SensitiveValue value);
    [CompilerGeneratedAttribute]
public SensitiveValue get_PrivateKeyPassphrase();
    [CompilerGeneratedAttribute]
public void set_PrivateKeyPassphrase(SensitiveValue value);
}
[AttributeUsageAttribute("256")]
public class Octopus.Client.Model.Accounts.SupportedAccountTypesAttribute : Attribute {
    private AccountType[] accountTypes;
    public AccountType[] AccountTypes { get; }
    public SupportedAccountTypesAttribute(AccountType[] accountTypes);
    public AccountType[] get_AccountTypes();
}
public class Octopus.Client.Model.Accounts.TokenAccountResource : AccountResource {
    [CompilerGeneratedAttribute]
private SensitiveValue <Token>k__BackingField;
    public AccountType AccountType { get; }
    [RequiredAttribute]
[WriteableAttribute]
public SensitiveValue Token { get; public set; }
    public virtual AccountType get_AccountType();
    [CompilerGeneratedAttribute]
public SensitiveValue get_Token();
    [CompilerGeneratedAttribute]
public void set_Token(SensitiveValue value);
}
public class Octopus.Client.Model.Accounts.Usages.AccountUsageResource : Resource {
    [CompilerGeneratedAttribute]
private ICollection`1<TargetUsageEntry> <Targets>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<StepUsage> <DeploymentProcesses>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<ReleaseUsage> <Releases>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<ProjectVariableSetUsage> <ProjectVariableSets>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<LibraryVariableSetUsageEntry> <LibraryVariableSets>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<RunbookStepUsage> <RunbookProcesses>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<RunbookSnapshotUsage> <RunbookSnapshots>k__BackingField;
    public ICollection`1<TargetUsageEntry> Targets { get; public set; }
    public ICollection`1<StepUsage> DeploymentProcesses { get; public set; }
    public ICollection`1<ReleaseUsage> Releases { get; public set; }
    public ICollection`1<ProjectVariableSetUsage> ProjectVariableSets { get; public set; }
    public ICollection`1<LibraryVariableSetUsageEntry> LibraryVariableSets { get; public set; }
    public ICollection`1<RunbookStepUsage> RunbookProcesses { get; public set; }
    public ICollection`1<RunbookSnapshotUsage> RunbookSnapshots { get; public set; }
    [CompilerGeneratedAttribute]
public ICollection`1<TargetUsageEntry> get_Targets();
    [CompilerGeneratedAttribute]
public void set_Targets(ICollection`1<TargetUsageEntry> value);
    [CompilerGeneratedAttribute]
public ICollection`1<StepUsage> get_DeploymentProcesses();
    [CompilerGeneratedAttribute]
public void set_DeploymentProcesses(ICollection`1<StepUsage> value);
    [CompilerGeneratedAttribute]
public ICollection`1<ReleaseUsage> get_Releases();
    [CompilerGeneratedAttribute]
public void set_Releases(ICollection`1<ReleaseUsage> value);
    [CompilerGeneratedAttribute]
public ICollection`1<ProjectVariableSetUsage> get_ProjectVariableSets();
    [CompilerGeneratedAttribute]
public void set_ProjectVariableSets(ICollection`1<ProjectVariableSetUsage> value);
    [CompilerGeneratedAttribute]
public ICollection`1<LibraryVariableSetUsageEntry> get_LibraryVariableSets();
    [CompilerGeneratedAttribute]
public void set_LibraryVariableSets(ICollection`1<LibraryVariableSetUsageEntry> value);
    [CompilerGeneratedAttribute]
public ICollection`1<RunbookStepUsage> get_RunbookProcesses();
    [CompilerGeneratedAttribute]
public void set_RunbookProcesses(ICollection`1<RunbookStepUsage> value);
    [CompilerGeneratedAttribute]
public ICollection`1<RunbookSnapshotUsage> get_RunbookSnapshots();
    [CompilerGeneratedAttribute]
public void set_RunbookSnapshots(ICollection`1<RunbookSnapshotUsage> value);
}
public class Octopus.Client.Model.Accounts.Usages.LibraryVariableSetUsageEntry : object {
    [CompilerGeneratedAttribute]
private string <LibraryVariableSetId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LibraryVariableSetName>k__BackingField;
    public string LibraryVariableSetId { get; public set; }
    public string LibraryVariableSetName { get; public set; }
    [CompilerGeneratedAttribute]
public string get_LibraryVariableSetId();
    [CompilerGeneratedAttribute]
public void set_LibraryVariableSetId(string value);
    [CompilerGeneratedAttribute]
public string get_LibraryVariableSetName();
    [CompilerGeneratedAttribute]
public void set_LibraryVariableSetName(string value);
}
public class Octopus.Client.Model.Accounts.Usages.ProjectVariableSetUsage : object {
    [CompilerGeneratedAttribute]
private string <ProjectSlug>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<ReleaseUsageEntry> <Releases>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<RunbookSnapshotUsageEntry> <RunbookSnapshots>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsCurrentlyBeingUsedInProject>k__BackingField;
    public string ProjectSlug { get; public set; }
    public string ProjectName { get; public set; }
    public string ProjectId { get; public set; }
    public ICollection`1<ReleaseUsageEntry> Releases { get; public set; }
    public List`1<RunbookSnapshotUsageEntry> RunbookSnapshots { get; public set; }
    public bool IsCurrentlyBeingUsedInProject { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ProjectSlug();
    [CompilerGeneratedAttribute]
public void set_ProjectSlug(string value);
    [CompilerGeneratedAttribute]
public string get_ProjectName();
    [CompilerGeneratedAttribute]
public void set_ProjectName(string value);
    [CompilerGeneratedAttribute]
public string get_ProjectId();
    [CompilerGeneratedAttribute]
public void set_ProjectId(string value);
    [CompilerGeneratedAttribute]
public ICollection`1<ReleaseUsageEntry> get_Releases();
    [CompilerGeneratedAttribute]
public void set_Releases(ICollection`1<ReleaseUsageEntry> value);
    [CompilerGeneratedAttribute]
public List`1<RunbookSnapshotUsageEntry> get_RunbookSnapshots();
    [CompilerGeneratedAttribute]
public void set_RunbookSnapshots(List`1<RunbookSnapshotUsageEntry> value);
    [CompilerGeneratedAttribute]
public bool get_IsCurrentlyBeingUsedInProject();
    [CompilerGeneratedAttribute]
public void set_IsCurrentlyBeingUsedInProject(bool value);
}
public class Octopus.Client.Model.Accounts.Usages.ReleaseUsage : object {
    [CompilerGeneratedAttribute]
private string <ProjectName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<ReleaseUsageEntry> <Releases>k__BackingField;
    public string ProjectName { get; public set; }
    public string ProjectId { get; public set; }
    public ICollection`1<ReleaseUsageEntry> Releases { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ProjectName();
    [CompilerGeneratedAttribute]
public void set_ProjectName(string value);
    [CompilerGeneratedAttribute]
public string get_ProjectId();
    [CompilerGeneratedAttribute]
public void set_ProjectId(string value);
    [CompilerGeneratedAttribute]
public ICollection`1<ReleaseUsageEntry> get_Releases();
    [CompilerGeneratedAttribute]
public void set_Releases(ICollection`1<ReleaseUsageEntry> value);
}
public class Octopus.Client.Model.Accounts.Usages.ReleaseUsageEntry : object {
    [CompilerGeneratedAttribute]
private string <ReleaseId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ReleaseVersion>k__BackingField;
    public string ReleaseId { get; public set; }
    public string ReleaseVersion { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ReleaseId();
    [CompilerGeneratedAttribute]
public void set_ReleaseId(string value);
    [CompilerGeneratedAttribute]
public string get_ReleaseVersion();
    [CompilerGeneratedAttribute]
public void set_ReleaseVersion(string value);
}
public class Octopus.Client.Model.Accounts.Usages.RunbookSnapshotUsage : object {
    [CompilerGeneratedAttribute]
private string <RunbookId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RunbookName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<RunbookSnapshotUsageEntry> <Snapshots>k__BackingField;
    public string RunbookId { get; public set; }
    public string RunbookName { get; public set; }
    public string ProjectName { get; public set; }
    public string ProjectId { get; public set; }
    public ICollection`1<RunbookSnapshotUsageEntry> Snapshots { get; public set; }
    [CompilerGeneratedAttribute]
public string get_RunbookId();
    [CompilerGeneratedAttribute]
public void set_RunbookId(string value);
    [CompilerGeneratedAttribute]
public string get_RunbookName();
    [CompilerGeneratedAttribute]
public void set_RunbookName(string value);
    [CompilerGeneratedAttribute]
public string get_ProjectName();
    [CompilerGeneratedAttribute]
public void set_ProjectName(string value);
    [CompilerGeneratedAttribute]
public string get_ProjectId();
    [CompilerGeneratedAttribute]
public void set_ProjectId(string value);
    [CompilerGeneratedAttribute]
public ICollection`1<RunbookSnapshotUsageEntry> get_Snapshots();
    [CompilerGeneratedAttribute]
public void set_Snapshots(ICollection`1<RunbookSnapshotUsageEntry> value);
}
public class Octopus.Client.Model.Accounts.Usages.RunbookSnapshotUsageEntry : object {
    [CompilerGeneratedAttribute]
private string <SnapshotId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SnapshotName>k__BackingField;
    public string SnapshotId { get; public set; }
    public string SnapshotName { get; public set; }
    [CompilerGeneratedAttribute]
public string get_SnapshotId();
    [CompilerGeneratedAttribute]
public void set_SnapshotId(string value);
    [CompilerGeneratedAttribute]
public string get_SnapshotName();
    [CompilerGeneratedAttribute]
public void set_SnapshotName(string value);
}
public class Octopus.Client.Model.Accounts.Usages.RunbookStepUsage : StepUsageBase {
    [CompilerGeneratedAttribute]
private string <ProcessId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RunbookId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RunbookName>k__BackingField;
    public string ProcessId { get; public set; }
    public string RunbookId { get; public set; }
    public string RunbookName { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ProcessId();
    [CompilerGeneratedAttribute]
public void set_ProcessId(string value);
    [CompilerGeneratedAttribute]
public string get_RunbookId();
    [CompilerGeneratedAttribute]
public void set_RunbookId(string value);
    [CompilerGeneratedAttribute]
public string get_RunbookName();
    [CompilerGeneratedAttribute]
public void set_RunbookName(string value);
}
public class Octopus.Client.Model.Accounts.Usages.StepUsage : StepUsageBase {
}
public class Octopus.Client.Model.Accounts.Usages.StepUsageBase : object {
    [CompilerGeneratedAttribute]
private string <ProjectName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectSlug>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<StepUsageEntry> <Steps>k__BackingField;
    public string ProjectName { get; public set; }
    public string ProjectId { get; public set; }
    public string ProjectSlug { get; public set; }
    public ICollection`1<StepUsageEntry> Steps { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ProjectName();
    [CompilerGeneratedAttribute]
public void set_ProjectName(string value);
    [CompilerGeneratedAttribute]
public string get_ProjectId();
    [CompilerGeneratedAttribute]
public void set_ProjectId(string value);
    [CompilerGeneratedAttribute]
public string get_ProjectSlug();
    [CompilerGeneratedAttribute]
public void set_ProjectSlug(string value);
    [CompilerGeneratedAttribute]
public ICollection`1<StepUsageEntry> get_Steps();
    [CompilerGeneratedAttribute]
public void set_Steps(ICollection`1<StepUsageEntry> value);
}
public class Octopus.Client.Model.Accounts.Usages.StepUsageEntry : object {
    [CompilerGeneratedAttribute]
private string <StepName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StepId>k__BackingField;
    public string StepName { get; public set; }
    public string StepId { get; public set; }
    [CompilerGeneratedAttribute]
public string get_StepName();
    [CompilerGeneratedAttribute]
public void set_StepName(string value);
    [CompilerGeneratedAttribute]
public string get_StepId();
    [CompilerGeneratedAttribute]
public void set_StepId(string value);
}
public class Octopus.Client.Model.Accounts.Usages.TargetUsageEntry : object {
    [CompilerGeneratedAttribute]
private string <TargetName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TargetId>k__BackingField;
    public string TargetName { get; public set; }
    public string TargetId { get; public set; }
    [CompilerGeneratedAttribute]
public string get_TargetName();
    [CompilerGeneratedAttribute]
public void set_TargetName(string value);
    [CompilerGeneratedAttribute]
public string get_TargetId();
    [CompilerGeneratedAttribute]
public void set_TargetId(string value);
}
public class Octopus.Client.Model.Accounts.UsernamePasswordAccountResource : AccountResource {
    [CompilerGeneratedAttribute]
private string <Username>k__BackingField;
    [CompilerGeneratedAttribute]
private SensitiveValue <Password>k__BackingField;
    public AccountType AccountType { get; }
    [TrimAttribute]
[RequiredAttribute]
[WriteableAttribute]
public string Username { get; public set; }
    [WriteableAttribute]
public SensitiveValue Password { get; public set; }
    public virtual AccountType get_AccountType();
    [CompilerGeneratedAttribute]
public string get_Username();
    [CompilerGeneratedAttribute]
public void set_Username(string value);
    [CompilerGeneratedAttribute]
public SensitiveValue get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(SensitiveValue value);
}
public class Octopus.Client.Model.ActionsUpdateProcessResource : object {
    [CompilerGeneratedAttribute]
private ProcessType <ProcessType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProcessId>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <ActionIds>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private LinkCollection <Links>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GitRef>k__BackingField;
    public ProcessType ProcessType { get; public set; }
    public string ProcessId { get; public set; }
    public String[] ActionIds { get; public set; }
    public string Id { get; public set; }
    public LinkCollection Links { get; public set; }
    public string GitRef { get; public set; }
    [CompilerGeneratedAttribute]
public ProcessType get_ProcessType();
    [CompilerGeneratedAttribute]
public void set_ProcessType(ProcessType value);
    [CompilerGeneratedAttribute]
public string get_ProcessId();
    [CompilerGeneratedAttribute]
public void set_ProcessId(string value);
    [CompilerGeneratedAttribute]
public String[] get_ActionIds();
    [CompilerGeneratedAttribute]
public void set_ActionIds(String[] value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public sealed virtual LinkCollection get_Links();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Links(LinkCollection value);
    [CompilerGeneratedAttribute]
public string get_GitRef();
    [CompilerGeneratedAttribute]
public void set_GitRef(string value);
}
public class Octopus.Client.Model.ActionsUpdateResource : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, PropertyValueResource> <DefaultPropertyValues>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, PropertyValueResource> <Overrides>k__BackingField;
    [CompilerGeneratedAttribute]
private LinkCollection <Links>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, String[]> <ActionIdsByProcessId>k__BackingField;
    [CompilerGeneratedAttribute]
private ActionsUpdateProcessResource[] <ActionsToUpdate>k__BackingField;
    public string Id { get; public set; }
    [RequiredAttribute]
public int Version { get; public set; }
    public IDictionary`2<string, PropertyValueResource> DefaultPropertyValues { get; public set; }
    public IDictionary`2<string, PropertyValueResource> Overrides { get; public set; }
    public LinkCollection Links { get; public set; }
    [ObsoleteAttribute("UseActionsToUpdate instead")]
public IDictionary`2<string, String[]> ActionIdsByProcessId { get; public set; }
    [RequiredAttribute]
public ActionsUpdateProcessResource[] ActionsToUpdate { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public int get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(int value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, PropertyValueResource> get_DefaultPropertyValues();
    [CompilerGeneratedAttribute]
public void set_DefaultPropertyValues(IDictionary`2<string, PropertyValueResource> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, PropertyValueResource> get_Overrides();
    [CompilerGeneratedAttribute]
public void set_Overrides(IDictionary`2<string, PropertyValueResource> value);
    [CompilerGeneratedAttribute]
public sealed virtual LinkCollection get_Links();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Links(LinkCollection value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, String[]> get_ActionIdsByProcessId();
    [CompilerGeneratedAttribute]
public void set_ActionIdsByProcessId(IDictionary`2<string, String[]> value);
    [CompilerGeneratedAttribute]
public ActionsUpdateProcessResource[] get_ActionsToUpdate();
    [CompilerGeneratedAttribute]
public void set_ActionsToUpdate(ActionsUpdateProcessResource[] value);
}
public class Octopus.Client.Model.ActionTemplateCategoryResource : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private int <DisplayOrder>k__BackingField;
    [CompilerGeneratedAttribute]
private LinkCollection <Links>k__BackingField;
    public string Id { get; public set; }
    public string Name { get; public set; }
    public int DisplayOrder { get; public set; }
    public LinkCollection Links { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public int get_DisplayOrder();
    [CompilerGeneratedAttribute]
public void set_DisplayOrder(int value);
    [CompilerGeneratedAttribute]
public sealed virtual LinkCollection get_Links();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Links(LinkCollection value);
}
public class Octopus.Client.Model.ActionTemplateParameterResource : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Label>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HelpText>k__BackingField;
    [CompilerGeneratedAttribute]
private PropertyValueResource <DefaultValue>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <DisplaySettings>k__BackingField;
    public string Id { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string Name { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string Label { get; public set; }
    [WriteableAttribute]
public string HelpText { get; public set; }
    [WriteableAttribute]
public PropertyValueResource DefaultValue { get; public set; }
    [WriteableAttribute]
public IDictionary`2<string, string> DisplaySettings { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Label();
    [CompilerGeneratedAttribute]
public void set_Label(string value);
    [CompilerGeneratedAttribute]
public string get_HelpText();
    [CompilerGeneratedAttribute]
public void set_HelpText(string value);
    [CompilerGeneratedAttribute]
public PropertyValueResource get_DefaultValue();
    [CompilerGeneratedAttribute]
public void set_DefaultValue(PropertyValueResource value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_DisplaySettings();
    [CompilerGeneratedAttribute]
public void set_DisplaySettings(IDictionary`2<string, string> value);
    public bool IsCertificate();
    public bool IsSensitive();
    public bool IsAmazonWebServicesAccount();
    public bool IsAzureAccount();
    public string GetControlType();
    public bool IsControlType(string controlType);
}
public class Octopus.Client.Model.ActionTemplateResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ActionType>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CommunityActionTemplateId>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, PropertyValueResource> <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private GitDependencyCollectionResource <GitDependencies>k__BackingField;
    [CompilerGeneratedAttribute]
private PackageReferenceCollection <Packages>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ActionTemplateParameterResource> <Parameters>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StepPackageVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Inputs>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [RequiredAttribute]
[WriteableAttribute]
public string Name { get; public set; }
    [WriteableAttribute]
public string Description { get; public set; }
    [RequiredAttribute]
[WriteableOnCreateAttribute]
public string ActionType { get; public set; }
    public int Version { get; public set; }
    public string CommunityActionTemplateId { get; public set; }
    [JsonPropertyAttribute]
public IDictionary`2<string, PropertyValueResource> Properties { get; }
    [JsonPropertyAttribute]
public GitDependencyCollectionResource GitDependencies { get; }
    [JsonPropertyAttribute]
public PackageReferenceCollection Packages { get; }
    [JsonPropertyAttribute]
public IList`1<ActionTemplateParameterResource> Parameters { get; }
    [JsonPropertyAttribute]
public string StepPackageVersion { get; public set; }
    [JsonPropertyAttribute]
public object Inputs { get; public set; }
    public string SpaceId { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public string get_ActionType();
    [CompilerGeneratedAttribute]
public void set_ActionType(string value);
    [CompilerGeneratedAttribute]
public int get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(int value);
    [CompilerGeneratedAttribute]
public string get_CommunityActionTemplateId();
    [CompilerGeneratedAttribute]
public void set_CommunityActionTemplateId(string value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, PropertyValueResource> get_Properties();
    [CompilerGeneratedAttribute]
public GitDependencyCollectionResource get_GitDependencies();
    [CompilerGeneratedAttribute]
public PackageReferenceCollection get_Packages();
    [CompilerGeneratedAttribute]
public IList`1<ActionTemplateParameterResource> get_Parameters();
    [CompilerGeneratedAttribute]
public string get_StepPackageVersion();
    [CompilerGeneratedAttribute]
public void set_StepPackageVersion(string value);
    [CompilerGeneratedAttribute]
public object get_Inputs();
    [CompilerGeneratedAttribute]
public void set_Inputs(object value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
}
public class Octopus.Client.Model.ActionTemplateSearchResource : object {
    private string legacyCategory;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Keywords>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Author>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Website>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsInstalled>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsBuiltIn>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <Categories>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <Features>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CommunityActionTemplateId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasUpdate>k__BackingField;
    [CompilerGeneratedAttribute]
private LinkCollection <Links>k__BackingField;
    public string Id { get; public set; }
    public string Type { get; public set; }
    public string Name { get; public set; }
    public string Description { get; public set; }
    public string Keywords { get; public set; }
    public string Author { get; public set; }
    public string Website { get; public set; }
    public bool IsInstalled { get; public set; }
    public bool IsBuiltIn { get; public set; }
    public string Category { get; public set; }
    public List`1<string> Categories { get; public set; }
    public IEnumerable`1<string> Features { get; public set; }
    public string CommunityActionTemplateId { get; public set; }
    public bool HasUpdate { get; public set; }
    public LinkCollection Links { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public string get_Keywords();
    [CompilerGeneratedAttribute]
public void set_Keywords(string value);
    [CompilerGeneratedAttribute]
public string get_Author();
    [CompilerGeneratedAttribute]
public void set_Author(string value);
    [CompilerGeneratedAttribute]
public string get_Website();
    [CompilerGeneratedAttribute]
public void set_Website(string value);
    [CompilerGeneratedAttribute]
public bool get_IsInstalled();
    [CompilerGeneratedAttribute]
public void set_IsInstalled(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsBuiltIn();
    [CompilerGeneratedAttribute]
public void set_IsBuiltIn(bool value);
    public string get_Category();
    public void set_Category(string value);
    [CompilerGeneratedAttribute]
public List`1<string> get_Categories();
    [CompilerGeneratedAttribute]
public void set_Categories(List`1<string> value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_Features();
    [CompilerGeneratedAttribute]
public void set_Features(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public string get_CommunityActionTemplateId();
    [CompilerGeneratedAttribute]
public void set_CommunityActionTemplateId(string value);
    [CompilerGeneratedAttribute]
public bool get_HasUpdate();
    [CompilerGeneratedAttribute]
public void set_HasUpdate(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual LinkCollection get_Links();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Links(LinkCollection value);
}
public class Octopus.Client.Model.ActionTemplateUsageResource : Resource {
    [CompilerGeneratedAttribute]
private string <ActionTemplateId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RunbookId>k__BackingField;
    [CompilerGeneratedAttribute]
private ProcessType <ProcessType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProcessId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ActionId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ActionName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RunbookName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StepId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StepName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectSlug>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DeploymentProcessId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Branch>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Release>k__BackingField;
    public string ActionTemplateId { get; public set; }
    public string RunbookId { get; public set; }
    public ProcessType ProcessType { get; public set; }
    public string ProcessId { get; public set; }
    public string ActionId { get; public set; }
    public string ActionName { get; public set; }
    public string RunbookName { get; public set; }
    public string StepId { get; public set; }
    public string StepName { get; public set; }
    public string ProjectId { get; public set; }
    public string ProjectName { get; public set; }
    public string ProjectSlug { get; public set; }
    public string Version { get; public set; }
    [ObsoleteAttribute("Use ProcessId with ProcessType instead")]
public string DeploymentProcessId { get; public set; }
    public string Branch { get; public set; }
    public string Release { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ActionTemplateId();
    [CompilerGeneratedAttribute]
public void set_ActionTemplateId(string value);
    [CompilerGeneratedAttribute]
public string get_RunbookId();
    [CompilerGeneratedAttribute]
public void set_RunbookId(string value);
    [CompilerGeneratedAttribute]
public ProcessType get_ProcessType();
    [CompilerGeneratedAttribute]
public void set_ProcessType(ProcessType value);
    [CompilerGeneratedAttribute]
public string get_ProcessId();
    [CompilerGeneratedAttribute]
public void set_ProcessId(string value);
    [CompilerGeneratedAttribute]
public string get_ActionId();
    [CompilerGeneratedAttribute]
public void set_ActionId(string value);
    [CompilerGeneratedAttribute]
public string get_ActionName();
    [CompilerGeneratedAttribute]
public void set_ActionName(string value);
    [CompilerGeneratedAttribute]
public string get_RunbookName();
    [CompilerGeneratedAttribute]
public void set_RunbookName(string value);
    [CompilerGeneratedAttribute]
public string get_StepId();
    [CompilerGeneratedAttribute]
public void set_StepId(string value);
    [CompilerGeneratedAttribute]
public string get_StepName();
    [CompilerGeneratedAttribute]
public void set_StepName(string value);
    [CompilerGeneratedAttribute]
public string get_ProjectId();
    [CompilerGeneratedAttribute]
public void set_ProjectId(string value);
    [CompilerGeneratedAttribute]
public string get_ProjectName();
    [CompilerGeneratedAttribute]
public void set_ProjectName(string value);
    [CompilerGeneratedAttribute]
public string get_ProjectSlug();
    [CompilerGeneratedAttribute]
public void set_ProjectSlug(string value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
    [CompilerGeneratedAttribute]
public string get_DeploymentProcessId();
    [CompilerGeneratedAttribute]
public void set_DeploymentProcessId(string value);
    [CompilerGeneratedAttribute]
public string get_Branch();
    [CompilerGeneratedAttribute]
public void set_Branch(string value);
    [CompilerGeneratedAttribute]
public string get_Release();
    [CompilerGeneratedAttribute]
public void set_Release(string value);
}
public enum Octopus.Client.Model.ActionUpdateOutcome : Enum {
    public int value__;
    public static ActionUpdateOutcome Success;
    public static ActionUpdateOutcome ManualMergeRequired;
    public static ActionUpdateOutcome DefaultParamterValueMissing;
    public static ActionUpdateOutcome RemovedPackageInUse;
}
public enum Octopus.Client.Model.ActionUpdatePackageUsedBy : Enum {
    public int value__;
    public static ActionUpdatePackageUsedBy ProjectVersionStrategy;
    public static ActionUpdatePackageUsedBy ProjectReleaseCreationStrategy;
    public static ActionUpdatePackageUsedBy ChannelRule;
}
public class Octopus.Client.Model.ActionUpdateRemovedPackageUsage : object {
    [CompilerGeneratedAttribute]
private string <PackageReference>k__BackingField;
    [CompilerGeneratedAttribute]
private ActionUpdatePackageUsedBy <UsedBy>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UsedById>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UsedByName>k__BackingField;
    public string PackageReference { get; }
    public ActionUpdatePackageUsedBy UsedBy { get; }
    public string UsedById { get; }
    public string UsedByName { get; }
    public ActionUpdateRemovedPackageUsage(string packageReference, ActionUpdatePackageUsedBy usedBy, string usedById, string usedByName);
    [CompilerGeneratedAttribute]
public string get_PackageReference();
    [CompilerGeneratedAttribute]
public ActionUpdatePackageUsedBy get_UsedBy();
    [CompilerGeneratedAttribute]
public string get_UsedById();
    [CompilerGeneratedAttribute]
public string get_UsedByName();
}
public class Octopus.Client.Model.ActionUpdateResultResource : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private ActionUpdateOutcome <Outcome>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, String[]> <ManualMergeRequiredReasonsByPropertyName>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <NamesOfNewParametersMissingDefaultValue>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<ActionUpdateRemovedPackageUsage> <RemovedPackageUsages>k__BackingField;
    [CompilerGeneratedAttribute]
private LinkCollection <Links>k__BackingField;
    public string Id { get; public set; }
    public ActionUpdateOutcome Outcome { get; public set; }
    public IDictionary`2<string, String[]> ManualMergeRequiredReasonsByPropertyName { get; public set; }
    public String[] NamesOfNewParametersMissingDefaultValue { get; public set; }
    public ICollection`1<ActionUpdateRemovedPackageUsage> RemovedPackageUsages { get; public set; }
    public LinkCollection Links { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public ActionUpdateOutcome get_Outcome();
    [CompilerGeneratedAttribute]
public void set_Outcome(ActionUpdateOutcome value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, String[]> get_ManualMergeRequiredReasonsByPropertyName();
    [CompilerGeneratedAttribute]
public void set_ManualMergeRequiredReasonsByPropertyName(IDictionary`2<string, String[]> value);
    [CompilerGeneratedAttribute]
public String[] get_NamesOfNewParametersMissingDefaultValue();
    [CompilerGeneratedAttribute]
public void set_NamesOfNewParametersMissingDefaultValue(String[] value);
    [CompilerGeneratedAttribute]
public ICollection`1<ActionUpdateRemovedPackageUsage> get_RemovedPackageUsages();
    [CompilerGeneratedAttribute]
public void set_RemovedPackageUsages(ICollection`1<ActionUpdateRemovedPackageUsage> value);
    [CompilerGeneratedAttribute]
public sealed virtual LinkCollection get_Links();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Links(LinkCollection value);
}
public class Octopus.Client.Model.ActivityElement : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <Started>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <Ended>k__BackingField;
    [CompilerGeneratedAttribute]
private ActivityStatus <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private ActivityElement[] <Children>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ShowAtSummaryLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private ActivityLogElement[] <LogElements>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ProgressPercentage>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProgressMessage>k__BackingField;
    public string Id { get; public set; }
    public string Name { get; public set; }
    public Nullable`1<DateTimeOffset> Started { get; public set; }
    public Nullable`1<DateTimeOffset> Ended { get; public set; }
    public ActivityStatus Status { get; public set; }
    public ActivityElement[] Children { get; public set; }
    public bool ShowAtSummaryLevel { get; public set; }
    public ActivityLogElement[] LogElements { get; public set; }
    public int ProgressPercentage { get; public set; }
    public string ProgressMessage { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_Started();
    [CompilerGeneratedAttribute]
public void set_Started(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_Ended();
    [CompilerGeneratedAttribute]
public void set_Ended(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public ActivityStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(ActivityStatus value);
    [CompilerGeneratedAttribute]
public ActivityElement[] get_Children();
    [CompilerGeneratedAttribute]
public void set_Children(ActivityElement[] value);
    [CompilerGeneratedAttribute]
public bool get_ShowAtSummaryLevel();
    [CompilerGeneratedAttribute]
public void set_ShowAtSummaryLevel(bool value);
    [CompilerGeneratedAttribute]
public ActivityLogElement[] get_LogElements();
    [CompilerGeneratedAttribute]
public void set_LogElements(ActivityLogElement[] value);
    [CompilerGeneratedAttribute]
public int get_ProgressPercentage();
    [CompilerGeneratedAttribute]
public void set_ProgressPercentage(int value);
    [CompilerGeneratedAttribute]
public string get_ProgressMessage();
    [CompilerGeneratedAttribute]
public void set_ProgressMessage(string value);
}
public class Octopus.Client.Model.ActivityLogElement : object {
    [CompilerGeneratedAttribute]
private string <Category>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <OccurredAt>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MessageText>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Detail>k__BackingField;
    public string Category { get; public set; }
    public Nullable`1<DateTimeOffset> OccurredAt { get; public set; }
    public string MessageText { get; public set; }
    [JsonPropertyAttribute]
public string Detail { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Category();
    [CompilerGeneratedAttribute]
public void set_Category(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_OccurredAt();
    [CompilerGeneratedAttribute]
public void set_OccurredAt(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public string get_MessageText();
    [CompilerGeneratedAttribute]
public void set_MessageText(string value);
    [CompilerGeneratedAttribute]
public string get_Detail();
    [CompilerGeneratedAttribute]
public void set_Detail(string value);
}
public enum Octopus.Client.Model.ActivityStatus : Enum {
    public int value__;
    public static ActivityStatus Pending;
    public static ActivityStatus Running;
    public static ActivityStatus Success;
    public static ActivityStatus Failed;
    public static ActivityStatus Skipped;
    public static ActivityStatus SuccessWithWarning;
    public static ActivityStatus Canceled;
}
[AttributeUsageAttribute("128")]
public class Octopus.Client.Model.AllowCsvAttribute : Attribute {
}
public class Octopus.Client.Model.AnonymousProjectGitCredentialResource : ProjectGitCredentialResource {
    [CompilerGeneratedAttribute]
private ProjectGitCredentialType <Type>k__BackingField;
    public ProjectGitCredentialType Type { get; }
    [CompilerGeneratedAttribute]
public virtual ProjectGitCredentialType get_Type();
}
public class Octopus.Client.Model.ApiConstants : object {
    public static int DefaultClientRequestTimeout;
    public static string SupportedApiSchemaVersionMin;
    public static string SupportedApiSchemaVersionMax;
    public static string AuthenticationCookiePrefix;
    public static string ApiKeyHttpHeaderName;
    public static string AntiforgeryTokenCookiePrefix;
    public static string AntiforgeryTokenHttpHeaderName;
    public static string OctopusUserAgentProductName;
    private static ApiConstants();
}
public class Octopus.Client.Model.ApiKeyCreatedResource : ApiKeyResourceBase {
    [CompilerGeneratedAttribute]
private string <ApiKey>k__BackingField;
    public string ApiKey { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ApiKey();
    [CompilerGeneratedAttribute]
public void set_ApiKey(string value);
}
public class Octopus.Client.Model.ApiKeyResource : ApiKeyResourceBase {
    [CompilerGeneratedAttribute]
private SensitiveValue <ApiKey>k__BackingField;
    public SensitiveValue ApiKey { get; public set; }
    [CompilerGeneratedAttribute]
public SensitiveValue get_ApiKey();
    [CompilerGeneratedAttribute]
public void set_ApiKey(SensitiveValue value);
}
public abstract class Octopus.Client.Model.ApiKeyResourceBase : Resource {
    [CompilerGeneratedAttribute]
private string <Purpose>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserId>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <Created>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <Expires>k__BackingField;
    [WriteableOnCreateAttribute]
public string Purpose { get; public set; }
    public string UserId { get; public set; }
    public DateTimeOffset Created { get; public set; }
    public Nullable`1<DateTimeOffset> Expires { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Purpose();
    [CompilerGeneratedAttribute]
public void set_Purpose(string value);
    [CompilerGeneratedAttribute]
public string get_UserId();
    [CompilerGeneratedAttribute]
public void set_UserId(string value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_Created();
    [CompilerGeneratedAttribute]
public void set_Created(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_Expires();
    [CompilerGeneratedAttribute]
public void set_Expires(Nullable`1<DateTimeOffset> value);
}
public class Octopus.Client.Model.ArchiveLimits.ArchiveLimitConfigurationResource : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private long <OctopusServerGigabytes>k__BackingField;
    [CompilerGeneratedAttribute]
private long <DeploymentPackageGigabytes>k__BackingField;
    [CompilerGeneratedAttribute]
private LinkCollection <Links>k__BackingField;
    public string Id { get; public set; }
    [WriteableAttribute]
public long OctopusServerGigabytes { get; public set; }
    [WriteableAttribute]
public long DeploymentPackageGigabytes { get; public set; }
    public LinkCollection Links { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public long get_OctopusServerGigabytes();
    [CompilerGeneratedAttribute]
public void set_OctopusServerGigabytes(long value);
    [CompilerGeneratedAttribute]
public long get_DeploymentPackageGigabytes();
    [CompilerGeneratedAttribute]
public void set_DeploymentPackageGigabytes(long value);
    [CompilerGeneratedAttribute]
public sealed virtual LinkCollection get_Links();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Links(LinkCollection value);
}
public class Octopus.Client.Model.ArtifactoryGenericFeedResource : FeedResource {
    [CompilerGeneratedAttribute]
private string <FeedUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LayoutRegex>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Repository>k__BackingField;
    [CompilerGeneratedAttribute]
private SensitiveValue <Password>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Username>k__BackingField;
    public FeedType FeedType { get; }
    [WriteableAttribute]
public string FeedUri { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string LayoutRegex { get; public set; }
    [WriteableAttribute]
[TrimAttribute]
public string Repository { get; public set; }
    [WriteableAttribute]
[TrimAttribute]
public SensitiveValue Password { get; public set; }
    [WriteableAttribute]
[TrimAttribute]
public string Username { get; public set; }
    public virtual FeedType get_FeedType();
    [CompilerGeneratedAttribute]
public string get_FeedUri();
    [CompilerGeneratedAttribute]
public void set_FeedUri(string value);
    [CompilerGeneratedAttribute]
public string get_LayoutRegex();
    [CompilerGeneratedAttribute]
public void set_LayoutRegex(string value);
    [CompilerGeneratedAttribute]
public string get_Repository();
    [CompilerGeneratedAttribute]
public void set_Repository(string value);
    [CompilerGeneratedAttribute]
public SensitiveValue get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(SensitiveValue value);
    [CompilerGeneratedAttribute]
public string get_Username();
    [CompilerGeneratedAttribute]
public void set_Username(string value);
}
public class Octopus.Client.Model.ArtifactResource : Resource {
    [CompilerGeneratedAttribute]
private string <Filename>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Source>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServerTaskId>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <Created>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LogCorrelationId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [RequiredAttribute]
[WriteableOnCreateAttribute]
[JsonPropertyAttribute]
public string Filename { get; public set; }
    [JsonPropertyAttribute]
public string Source { get; public set; }
    [JsonPropertyAttribute]
[WriteableOnCreateAttribute]
public string ServerTaskId { get; public set; }
    [JsonPropertyAttribute]
public DateTimeOffset Created { get; public set; }
    [JsonPropertyAttribute]
public string LogCorrelationId { get; public set; }
    public string SpaceId { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Filename();
    [CompilerGeneratedAttribute]
public void set_Filename(string value);
    [CompilerGeneratedAttribute]
public string get_Source();
    [CompilerGeneratedAttribute]
public void set_Source(string value);
    [CompilerGeneratedAttribute]
public string get_ServerTaskId();
    [CompilerGeneratedAttribute]
public void set_ServerTaskId(string value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_Created();
    [CompilerGeneratedAttribute]
public void set_Created(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public string get_LogCorrelationId();
    [CompilerGeneratedAttribute]
public void set_LogCorrelationId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
}
public class Octopus.Client.Model.AuthenticationConfigResource : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private LinkCollection <Links>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AutoLoginEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsSelfServiceIdentityEditingEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <TrustedRedirectUrls>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CookieDomain>k__BackingField;
    [CompilerGeneratedAttribute]
private int <SessionTimeoutInSeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaximumSessionDurationInSeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <RememberMeEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UserApiKeysEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private OidcConfigResource <OidcConfigurationSettings>k__BackingField;
    public string Id { get; public set; }
    public LinkCollection Links { get; public set; }
    [WriteableAttribute]
public bool AutoLoginEnabled { get; public set; }
    [WriteableAttribute]
public bool IsSelfServiceIdentityEditingEnabled { get; public set; }
    [WriteableAttribute]
public String[] TrustedRedirectUrls { get; public set; }
    [WriteableAttribute]
public string CookieDomain { get; public set; }
    [WriteableAttribute]
public int SessionTimeoutInSeconds { get; public set; }
    [WriteableAttribute]
public int MaximumSessionDurationInSeconds { get; public set; }
    [WriteableAttribute]
public bool RememberMeEnabled { get; public set; }
    [WriteableAttribute]
public bool UserApiKeysEnabled { get; public set; }
    [WriteableAttribute]
public OidcConfigResource OidcConfigurationSettings { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public sealed virtual LinkCollection get_Links();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Links(LinkCollection value);
    [CompilerGeneratedAttribute]
public bool get_AutoLoginEnabled();
    [CompilerGeneratedAttribute]
public void set_AutoLoginEnabled(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsSelfServiceIdentityEditingEnabled();
    [CompilerGeneratedAttribute]
public void set_IsSelfServiceIdentityEditingEnabled(bool value);
    [CompilerGeneratedAttribute]
public String[] get_TrustedRedirectUrls();
    [CompilerGeneratedAttribute]
public void set_TrustedRedirectUrls(String[] value);
    [CompilerGeneratedAttribute]
public string get_CookieDomain();
    [CompilerGeneratedAttribute]
public void set_CookieDomain(string value);
    [CompilerGeneratedAttribute]
public int get_SessionTimeoutInSeconds();
    [CompilerGeneratedAttribute]
public void set_SessionTimeoutInSeconds(int value);
    [CompilerGeneratedAttribute]
public int get_MaximumSessionDurationInSeconds();
    [CompilerGeneratedAttribute]
public void set_MaximumSessionDurationInSeconds(int value);
    [CompilerGeneratedAttribute]
public bool get_RememberMeEnabled();
    [CompilerGeneratedAttribute]
public void set_RememberMeEnabled(bool value);
    [CompilerGeneratedAttribute]
public bool get_UserApiKeysEnabled();
    [CompilerGeneratedAttribute]
public void set_UserApiKeysEnabled(bool value);
    [CompilerGeneratedAttribute]
public OidcConfigResource get_OidcConfigurationSettings();
    [CompilerGeneratedAttribute]
public void set_OidcConfigurationSettings(OidcConfigResource value);
}
public class Octopus.Client.Model.AutoDeployReleaseOverrideResource : object {
    [CompilerGeneratedAttribute]
private string <EnvironmentId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TenantId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ReleaseId>k__BackingField;
    [CompilerGeneratedAttribute]
private static IEqualityComparer`1<AutoDeployReleaseOverrideResource> <EnvironmentIdTenantIdComparer>k__BackingField;
    public string EnvironmentId { get; }
    public string TenantId { get; }
    public string ReleaseId { get; }
    public static IEqualityComparer`1<AutoDeployReleaseOverrideResource> EnvironmentIdTenantIdComparer { get; }
    public AutoDeployReleaseOverrideResource(string environmentId, string releaseId);
    [JsonConstructorAttribute]
public AutoDeployReleaseOverrideResource(string environmentId, string tenantId, string releaseId);
    private static AutoDeployReleaseOverrideResource();
    [CompilerGeneratedAttribute]
public string get_EnvironmentId();
    [CompilerGeneratedAttribute]
public string get_TenantId();
    [CompilerGeneratedAttribute]
public string get_ReleaseId();
    [CompilerGeneratedAttribute]
public static IEqualityComparer`1<AutoDeployReleaseOverrideResource> get_EnvironmentIdTenantIdComparer();
}
public enum Octopus.Client.Model.AutomationEnvironment : Enum {
    public int value__;
    public static AutomationEnvironment NoneOrUnknown;
    public static AutomationEnvironment Octopus;
    public static AutomationEnvironment Bamboo;
    public static AutomationEnvironment TeamCity;
    public static AutomationEnvironment AzureDevOps;
    public static AutomationEnvironment AppVeyor;
    public static AutomationEnvironment BitBucket;
    public static AutomationEnvironment Jenkins;
    public static AutomationEnvironment CircleCI;
    public static AutomationEnvironment GitLabCI;
    public static AutomationEnvironment Travis;
    public static AutomationEnvironment GoCD;
    public static AutomationEnvironment BitRise;
    public static AutomationEnvironment Buddy;
    public static AutomationEnvironment BuildKite;
    public static AutomationEnvironment CirrusCI;
    public static AutomationEnvironment AWSCodeBuild;
    public static AutomationEnvironment Codeship;
    public static AutomationEnvironment Drone;
    public static AutomationEnvironment Dsari;
    public static AutomationEnvironment Hudson;
    public static AutomationEnvironment MagnumCI;
    public static AutomationEnvironment SailCI;
    public static AutomationEnvironment Semaphore;
    public static AutomationEnvironment Shippable;
    public static AutomationEnvironment SolanoCI;
    public static AutomationEnvironment StriderCD;
    public static AutomationEnvironment GitHubActions;
}
public class Octopus.Client.Model.AwsElasticContainerRegistryFeedResource : FeedResource {
    [CompilerGeneratedAttribute]
private string <Region>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccessKey>k__BackingField;
    [CompilerGeneratedAttribute]
private SensitiveValue <SecretKey>k__BackingField;
    public FeedType FeedType { get; }
    [WriteableAttribute]
public string Region { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string AccessKey { get; public set; }
    [WriteableAttribute]
[TrimAttribute]
public SensitiveValue SecretKey { get; public set; }
    public virtual FeedType get_FeedType();
    [CompilerGeneratedAttribute]
public string get_Region();
    [CompilerGeneratedAttribute]
public void set_Region(string value);
    [CompilerGeneratedAttribute]
public string get_AccessKey();
    [CompilerGeneratedAttribute]
public void set_AccessKey(string value);
    [CompilerGeneratedAttribute]
public SensitiveValue get_SecretKey();
    [CompilerGeneratedAttribute]
public void set_SecretKey(SensitiveValue value);
}
public class Octopus.Client.Model.AzureContainerRegistryFeedResource : DockerFeedResource {
    public FeedType FeedType { get; }
    public virtual FeedType get_FeedType();
}
public class Octopus.Client.Model.AzureRootResource : Resource {
}
public class Octopus.Client.Model.BackupConfigurationResource : Resource {
    [CompilerGeneratedAttribute]
private string <BackupToDirectory>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsMasterKeyBackedUp>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <BackupAutomatically>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <BackupEvery>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <StartingFrom>k__BackingField;
    [CompilerGeneratedAttribute]
private RetentionPeriod <Retention>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <NextDue>k__BackingField;
    [WriteableAttribute]
public string BackupToDirectory { get; public set; }
    [WriteableAttribute]
public bool IsMasterKeyBackedUp { get; public set; }
    [WriteableAttribute]
public bool BackupAutomatically { get; public set; }
    [WriteableAttribute]
public Nullable`1<TimeSpan> BackupEvery { get; public set; }
    [WriteableAttribute]
public Nullable`1<TimeSpan> StartingFrom { get; public set; }
    [WriteableAttribute]
public RetentionPeriod Retention { get; public set; }
    public Nullable`1<DateTimeOffset> NextDue { get; public set; }
    [CompilerGeneratedAttribute]
public string get_BackupToDirectory();
    [CompilerGeneratedAttribute]
public void set_BackupToDirectory(string value);
    [CompilerGeneratedAttribute]
public bool get_IsMasterKeyBackedUp();
    [CompilerGeneratedAttribute]
public void set_IsMasterKeyBackedUp(bool value);
    [CompilerGeneratedAttribute]
public bool get_BackupAutomatically();
    [CompilerGeneratedAttribute]
public void set_BackupAutomatically(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_BackupEvery();
    [CompilerGeneratedAttribute]
public void set_BackupEvery(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_StartingFrom();
    [CompilerGeneratedAttribute]
public void set_StartingFrom(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public RetentionPeriod get_Retention();
    [CompilerGeneratedAttribute]
public void set_Retention(RetentionPeriod value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_NextDue();
    [CompilerGeneratedAttribute]
public void set_NextDue(Nullable`1<DateTimeOffset> value);
}
public class Octopus.Client.Model.BuildInformation.OctopusBuildInformation : object {
    internal static string BuildInformationRequiresOctopusVersion;
    internal static string BuildInformationRequiresOctopusVersionMessage;
    [CompilerGeneratedAttribute]
private string <BuildEnvironment>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BuildNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BuildUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Branch>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VcsType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VcsRoot>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VcsCommitNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private Commit[] <Commits>k__BackingField;
    public string BuildEnvironment { get; public set; }
    public string BuildNumber { get; public set; }
    public string BuildUrl { get; public set; }
    public string Branch { get; public set; }
    public string VcsType { get; public set; }
    public string VcsRoot { get; public set; }
    public string VcsCommitNumber { get; public set; }
    public Commit[] Commits { get; public set; }
    private static OctopusBuildInformation();
    [CompilerGeneratedAttribute]
public string get_BuildEnvironment();
    [CompilerGeneratedAttribute]
public void set_BuildEnvironment(string value);
    [CompilerGeneratedAttribute]
public string get_BuildNumber();
    [CompilerGeneratedAttribute]
public void set_BuildNumber(string value);
    [CompilerGeneratedAttribute]
public string get_BuildUrl();
    [CompilerGeneratedAttribute]
public void set_BuildUrl(string value);
    [CompilerGeneratedAttribute]
public string get_Branch();
    [CompilerGeneratedAttribute]
public void set_Branch(string value);
    [CompilerGeneratedAttribute]
public string get_VcsType();
    [CompilerGeneratedAttribute]
public void set_VcsType(string value);
    [CompilerGeneratedAttribute]
public string get_VcsRoot();
    [CompilerGeneratedAttribute]
public void set_VcsRoot(string value);
    [CompilerGeneratedAttribute]
public string get_VcsCommitNumber();
    [CompilerGeneratedAttribute]
public void set_VcsCommitNumber(string value);
    [CompilerGeneratedAttribute]
public Commit[] get_Commits();
    [CompilerGeneratedAttribute]
public void set_Commits(Commit[] value);
}
public class Octopus.Client.Model.BuildInformation.OctopusPackageVersionBuildInformationMappedResource : Resource {
    [CompilerGeneratedAttribute]
private string <PackageId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BuildEnvironment>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BuildNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BuildUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Branch>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VcsType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VcsRoot>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VcsCommitNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VcsCommitUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IssueTrackerName>k__BackingField;
    [CompilerGeneratedAttribute]
private WorkItemLink[] <WorkItems>k__BackingField;
    [CompilerGeneratedAttribute]
private CommitDetails[] <Commits>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IncompleteDataWarning>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <Created>k__BackingField;
    public string PackageId { get; public set; }
    public string Version { get; public set; }
    public string BuildEnvironment { get; public set; }
    public string BuildNumber { get; public set; }
    public string BuildUrl { get; public set; }
    public string Branch { get; public set; }
    public string VcsType { get; public set; }
    public string VcsRoot { get; public set; }
    public string VcsCommitNumber { get; public set; }
    public string VcsCommitUrl { get; public set; }
    public string IssueTrackerName { get; public set; }
    public WorkItemLink[] WorkItems { get; public set; }
    public CommitDetails[] Commits { get; public set; }
    public string IncompleteDataWarning { get; public set; }
    public Nullable`1<DateTimeOffset> Created { get; public set; }
    [CompilerGeneratedAttribute]
public string get_PackageId();
    [CompilerGeneratedAttribute]
public void set_PackageId(string value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
    [CompilerGeneratedAttribute]
public string get_BuildEnvironment();
    [CompilerGeneratedAttribute]
public void set_BuildEnvironment(string value);
    [CompilerGeneratedAttribute]
public string get_BuildNumber();
    [CompilerGeneratedAttribute]
public void set_BuildNumber(string value);
    [CompilerGeneratedAttribute]
public string get_BuildUrl();
    [CompilerGeneratedAttribute]
public void set_BuildUrl(string value);
    [CompilerGeneratedAttribute]
public string get_Branch();
    [CompilerGeneratedAttribute]
public void set_Branch(string value);
    [CompilerGeneratedAttribute]
public string get_VcsType();
    [CompilerGeneratedAttribute]
public void set_VcsType(string value);
    [CompilerGeneratedAttribute]
public string get_VcsRoot();
    [CompilerGeneratedAttribute]
public void set_VcsRoot(string value);
    [CompilerGeneratedAttribute]
public string get_VcsCommitNumber();
    [CompilerGeneratedAttribute]
public void set_VcsCommitNumber(string value);
    [CompilerGeneratedAttribute]
public string get_VcsCommitUrl();
    [CompilerGeneratedAttribute]
public void set_VcsCommitUrl(string value);
    [CompilerGeneratedAttribute]
public string get_IssueTrackerName();
    [CompilerGeneratedAttribute]
public void set_IssueTrackerName(string value);
    [CompilerGeneratedAttribute]
public WorkItemLink[] get_WorkItems();
    [CompilerGeneratedAttribute]
public void set_WorkItems(WorkItemLink[] value);
    [CompilerGeneratedAttribute]
public CommitDetails[] get_Commits();
    [CompilerGeneratedAttribute]
public void set_Commits(CommitDetails[] value);
    [CompilerGeneratedAttribute]
public string get_IncompleteDataWarning();
    [CompilerGeneratedAttribute]
public void set_IncompleteDataWarning(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_Created();
    [CompilerGeneratedAttribute]
public void set_Created(Nullable`1<DateTimeOffset> value);
}
public class Octopus.Client.Model.BuildInformation.OctopusPackageVersionBuildInformationResource : Resource {
    [CompilerGeneratedAttribute]
private string <PackageId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private OctopusBuildInformation <OctopusBuildInformation>k__BackingField;
    public string PackageId { get; public set; }
    public string Version { get; public set; }
    public OctopusBuildInformation OctopusBuildInformation { get; public set; }
    [CompilerGeneratedAttribute]
public string get_PackageId();
    [CompilerGeneratedAttribute]
public void set_PackageId(string value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
    [CompilerGeneratedAttribute]
public OctopusBuildInformation get_OctopusBuildInformation();
    [CompilerGeneratedAttribute]
public void set_OctopusBuildInformation(OctopusBuildInformation value);
}
public class Octopus.Client.Model.BuildInformation.ReleasePackageVersionBuildInformationResource : object {
    [CompilerGeneratedAttribute]
private string <PackageId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BuildEnvironment>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BuildNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BuildUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Branch>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VcsType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VcsRoot>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VcsCommitNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VcsCommitUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IssueTrackerName>k__BackingField;
    [CompilerGeneratedAttribute]
private WorkItemLink[] <WorkItems>k__BackingField;
    [CompilerGeneratedAttribute]
private CommitDetails[] <Commits>k__BackingField;
    public string PackageId { get; public set; }
    public string Version { get; public set; }
    public string BuildEnvironment { get; public set; }
    public string BuildNumber { get; public set; }
    public string BuildUrl { get; public set; }
    public string Branch { get; public set; }
    public string VcsType { get; public set; }
    public string VcsRoot { get; public set; }
    public string VcsCommitNumber { get; public set; }
    public string VcsCommitUrl { get; public set; }
    public string IssueTrackerName { get; public set; }
    public WorkItemLink[] WorkItems { get; public set; }
    public CommitDetails[] Commits { get; public set; }
    [CompilerGeneratedAttribute]
public string get_PackageId();
    [CompilerGeneratedAttribute]
public void set_PackageId(string value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
    [CompilerGeneratedAttribute]
public string get_BuildEnvironment();
    [CompilerGeneratedAttribute]
public void set_BuildEnvironment(string value);
    [CompilerGeneratedAttribute]
public string get_BuildNumber();
    [CompilerGeneratedAttribute]
public void set_BuildNumber(string value);
    [CompilerGeneratedAttribute]
public string get_BuildUrl();
    [CompilerGeneratedAttribute]
public void set_BuildUrl(string value);
    [CompilerGeneratedAttribute]
public string get_Branch();
    [CompilerGeneratedAttribute]
public void set_Branch(string value);
    [CompilerGeneratedAttribute]
public string get_VcsType();
    [CompilerGeneratedAttribute]
public void set_VcsType(string value);
    [CompilerGeneratedAttribute]
public string get_VcsRoot();
    [CompilerGeneratedAttribute]
public void set_VcsRoot(string value);
    [CompilerGeneratedAttribute]
public string get_VcsCommitNumber();
    [CompilerGeneratedAttribute]
public void set_VcsCommitNumber(string value);
    [CompilerGeneratedAttribute]
public string get_VcsCommitUrl();
    [CompilerGeneratedAttribute]
public void set_VcsCommitUrl(string value);
    [CompilerGeneratedAttribute]
public string get_IssueTrackerName();
    [CompilerGeneratedAttribute]
public void set_IssueTrackerName(string value);
    [CompilerGeneratedAttribute]
public WorkItemLink[] get_WorkItems();
    [CompilerGeneratedAttribute]
public void set_WorkItems(WorkItemLink[] value);
    [CompilerGeneratedAttribute]
public CommitDetails[] get_Commits();
    [CompilerGeneratedAttribute]
public void set_Commits(CommitDetails[] value);
}
public class Octopus.Client.Model.BuiltInFeedResource : FeedResource {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <DeleteUnreleasedPackagesAfterDays>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsBuiltInRepoSyncEnabled>k__BackingField;
    public FeedType FeedType { get; }
    [WriteableAttribute]
public Nullable`1<int> DeleteUnreleasedPackagesAfterDays { get; public set; }
    [WriteableAttribute]
public bool IsBuiltInRepoSyncEnabled { get; public set; }
    public virtual FeedType get_FeedType();
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_DeleteUnreleasedPackagesAfterDays();
    [CompilerGeneratedAttribute]
public void set_DeleteUnreleasedPackagesAfterDays(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public bool get_IsBuiltInRepoSyncEnabled();
    [CompilerGeneratedAttribute]
public void set_IsBuiltInRepoSyncEnabled(bool value);
}
public class Octopus.Client.Model.BuiltInFeedStatsResource : Resource {
    [CompilerGeneratedAttribute]
private int <TotalPackages>k__BackingField;
    public int TotalPackages { get; public set; }
    [CompilerGeneratedAttribute]
public int get_TotalPackages();
    [CompilerGeneratedAttribute]
public void set_TotalPackages(int value);
}
public static class Octopus.Client.Model.BuiltInTasks : object {
    public static String[] TasksThatCanBeQueuedByUsers();
}
public enum Octopus.Client.Model.CalamariUpdateBehavior : Enum {
    public int value__;
    public static CalamariUpdateBehavior UpdateOnDeployment;
    public static CalamariUpdateBehavior UpdateOnNewMachine;
    public static CalamariUpdateBehavior UpdateAlways;
}
public class Octopus.Client.Model.CertificateConfigurationResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Thumbprint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SignatureAlgorithm>k__BackingField;
    public string Name { get; public set; }
    public string Thumbprint { get; public set; }
    public string SignatureAlgorithm { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Thumbprint();
    [CompilerGeneratedAttribute]
public void set_Thumbprint(string value);
    [CompilerGeneratedAttribute]
public string get_SignatureAlgorithm();
    [CompilerGeneratedAttribute]
public void set_SignatureAlgorithm(string value);
}
public enum Octopus.Client.Model.CertificateExportPemOptions : Enum {
    public int value__;
    public static CertificateExportPemOptions PrimaryOnly;
    public static CertificateExportPemOptions PrimaryAndChain;
    public static CertificateExportPemOptions ChainOnly;
}
public enum Octopus.Client.Model.CertificateFormat : Enum {
    public int value__;
    public static CertificateFormat Pkcs12;
    public static CertificateFormat Der;
    public static CertificateFormat Pem;
    public static CertificateFormat Unknown;
}
[DebuggerDisplayAttribute("Name = {Name}")]
public class Octopus.Client.Model.CertificateResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Notes>k__BackingField;
    [CompilerGeneratedAttribute]
private SensitiveValue <CertificateData>k__BackingField;
    [CompilerGeneratedAttribute]
private SensitiveValue <Password>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <EnvironmentIds>k__BackingField;
    private Nullable`1<TenantedDeploymentMode> tenantedDeploymentParticipation;
    [CompilerGeneratedAttribute]
private ReferenceCollection <TenantIds>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <TenantTags>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <Archived>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ReplacedBy>k__BackingField;
    [CompilerGeneratedAttribute]
private CertificateFormat <CertificateDataFormat>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SubjectDistinguishedName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SubjectCommonName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SubjectOrganization>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IssuerDistinguishedName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IssuerCommonName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IssuerOrganization>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SelfSigned>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Thumbprint>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <NotAfter>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <NotBefore>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsExpired>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasPrivateKey>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SerialNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SignatureAlgorithmName>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <SubjectAlternativeNames>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<X509Certificate> <CertificateChain>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [WriteableAttribute]
public string Name { get; public set; }
    [WriteableAttribute]
public string Notes { get; public set; }
    [WriteableOnCreateAttribute]
public SensitiveValue CertificateData { get; public set; }
    [WriteableOnCreateAttribute]
public SensitiveValue Password { get; public set; }
    [WriteableAttribute]
public ReferenceCollection EnvironmentIds { get; public set; }
    [WriteableAttribute]
public TenantedDeploymentMode TenantedDeploymentParticipation { get; public set; }
    [WriteableAttribute]
public ReferenceCollection TenantIds { get; public set; }
    [WriteableAttribute]
public ReferenceCollection TenantTags { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<DateTimeOffset> Archived { get; private set; }
    [JsonPropertyAttribute]
public string ReplacedBy { get; private set; }
    [JsonPropertyAttribute]
public CertificateFormat CertificateDataFormat { get; private set; }
    [JsonPropertyAttribute]
public string SubjectDistinguishedName { get; private set; }
    [JsonPropertyAttribute]
public string SubjectCommonName { get; private set; }
    [JsonPropertyAttribute]
public string SubjectOrganization { get; private set; }
    [JsonPropertyAttribute]
public string IssuerDistinguishedName { get; private set; }
    [JsonPropertyAttribute]
public string IssuerCommonName { get; private set; }
    [JsonPropertyAttribute]
public string IssuerOrganization { get; private set; }
    [JsonPropertyAttribute]
public bool SelfSigned { get; private set; }
    [JsonPropertyAttribute]
public string Thumbprint { get; private set; }
    [JsonPropertyAttribute]
public DateTimeOffset NotAfter { get; private set; }
    [JsonPropertyAttribute]
public DateTimeOffset NotBefore { get; private set; }
    [JsonPropertyAttribute]
public bool IsExpired { get; private set; }
    [JsonPropertyAttribute]
public bool HasPrivateKey { get; private set; }
    [JsonPropertyAttribute]
public int Version { get; private set; }
    [JsonPropertyAttribute]
public string SerialNumber { get; private set; }
    [JsonPropertyAttribute]
public string SignatureAlgorithmName { get; private set; }
    public IList`1<string> SubjectAlternativeNames { get; public set; }
    public IList`1<X509Certificate> CertificateChain { get; public set; }
    public string SpaceId { get; public set; }
    public CertificateResource(string name, string certificateData);
    public CertificateResource(string name, string certificateData, string password);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Notes();
    [CompilerGeneratedAttribute]
public void set_Notes(string value);
    [CompilerGeneratedAttribute]
public SensitiveValue get_CertificateData();
    [CompilerGeneratedAttribute]
public void set_CertificateData(SensitiveValue value);
    [CompilerGeneratedAttribute]
public SensitiveValue get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(SensitiveValue value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_EnvironmentIds();
    [CompilerGeneratedAttribute]
public void set_EnvironmentIds(ReferenceCollection value);
    public void set_TenantedDeploymentParticipation(TenantedDeploymentMode value);
    public TenantedDeploymentMode get_TenantedDeploymentParticipation();
    [CompilerGeneratedAttribute]
public ReferenceCollection get_TenantIds();
    [CompilerGeneratedAttribute]
public void set_TenantIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_TenantTags();
    [CompilerGeneratedAttribute]
public void set_TenantTags(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_Archived();
    [CompilerGeneratedAttribute]
private void set_Archived(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public string get_ReplacedBy();
    [CompilerGeneratedAttribute]
private void set_ReplacedBy(string value);
    [CompilerGeneratedAttribute]
public CertificateFormat get_CertificateDataFormat();
    [CompilerGeneratedAttribute]
private void set_CertificateDataFormat(CertificateFormat value);
    [CompilerGeneratedAttribute]
public string get_SubjectDistinguishedName();
    [CompilerGeneratedAttribute]
private void set_SubjectDistinguishedName(string value);
    [CompilerGeneratedAttribute]
public string get_SubjectCommonName();
    [CompilerGeneratedAttribute]
private void set_SubjectCommonName(string value);
    [CompilerGeneratedAttribute]
public string get_SubjectOrganization();
    [CompilerGeneratedAttribute]
private void set_SubjectOrganization(string value);
    [CompilerGeneratedAttribute]
public string get_IssuerDistinguishedName();
    [CompilerGeneratedAttribute]
private void set_IssuerDistinguishedName(string value);
    [CompilerGeneratedAttribute]
public string get_IssuerCommonName();
    [CompilerGeneratedAttribute]
private void set_IssuerCommonName(string value);
    [CompilerGeneratedAttribute]
public string get_IssuerOrganization();
    [CompilerGeneratedAttribute]
private void set_IssuerOrganization(string value);
    [CompilerGeneratedAttribute]
public bool get_SelfSigned();
    [CompilerGeneratedAttribute]
private void set_SelfSigned(bool value);
    [CompilerGeneratedAttribute]
public string get_Thumbprint();
    [CompilerGeneratedAttribute]
private void set_Thumbprint(string value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_NotAfter();
    [CompilerGeneratedAttribute]
private void set_NotAfter(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_NotBefore();
    [CompilerGeneratedAttribute]
private void set_NotBefore(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public bool get_IsExpired();
    [CompilerGeneratedAttribute]
private void set_IsExpired(bool value);
    [CompilerGeneratedAttribute]
public bool get_HasPrivateKey();
    [CompilerGeneratedAttribute]
private void set_HasPrivateKey(bool value);
    [CompilerGeneratedAttribute]
public int get_Version();
    [CompilerGeneratedAttribute]
private void set_Version(int value);
    [CompilerGeneratedAttribute]
public string get_SerialNumber();
    [CompilerGeneratedAttribute]
private void set_SerialNumber(string value);
    [CompilerGeneratedAttribute]
public string get_SignatureAlgorithmName();
    [CompilerGeneratedAttribute]
private void set_SignatureAlgorithmName(string value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_SubjectAlternativeNames();
    [CompilerGeneratedAttribute]
public void set_SubjectAlternativeNames(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<X509Certificate> get_CertificateChain();
    [CompilerGeneratedAttribute]
public void set_CertificateChain(IList`1<X509Certificate> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
}
public class Octopus.Client.Model.CertificateUsageResource : Resource {
    [CompilerGeneratedAttribute]
private ICollection`1<ProjectResource> <ProjectUsages>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<LibraryVariableSetResource> <LibraryVariableSetUsages>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<TenantResource> <TenantUsages>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<MachineResource> <DeploymentTargetUsages>k__BackingField;
    public ICollection`1<ProjectResource> ProjectUsages { get; public set; }
    public ICollection`1<LibraryVariableSetResource> LibraryVariableSetUsages { get; public set; }
    public ICollection`1<TenantResource> TenantUsages { get; public set; }
    public ICollection`1<MachineResource> DeploymentTargetUsages { get; public set; }
    [CompilerGeneratedAttribute]
public ICollection`1<ProjectResource> get_ProjectUsages();
    [CompilerGeneratedAttribute]
public void set_ProjectUsages(ICollection`1<ProjectResource> value);
    [CompilerGeneratedAttribute]
public ICollection`1<LibraryVariableSetResource> get_LibraryVariableSetUsages();
    [CompilerGeneratedAttribute]
public void set_LibraryVariableSetUsages(ICollection`1<LibraryVariableSetResource> value);
    [CompilerGeneratedAttribute]
public ICollection`1<TenantResource> get_TenantUsages();
    [CompilerGeneratedAttribute]
public void set_TenantUsages(ICollection`1<TenantResource> value);
    [CompilerGeneratedAttribute]
public ICollection`1<MachineResource> get_DeploymentTargetUsages();
    [CompilerGeneratedAttribute]
public void set_DeploymentTargetUsages(ICollection`1<MachineResource> value);
}
public class Octopus.Client.Model.ChannelGitResourceRuleResource : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<DeploymentActionGitDependencyResource> <GitDependencyActions>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <Rules>k__BackingField;
    public string Id { get; public set; }
    public List`1<DeploymentActionGitDependencyResource> GitDependencyActions { get; public set; }
    public List`1<string> Rules { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public List`1<DeploymentActionGitDependencyResource> get_GitDependencyActions();
    [CompilerGeneratedAttribute]
public void set_GitDependencyActions(List`1<DeploymentActionGitDependencyResource> value);
    [CompilerGeneratedAttribute]
public List`1<string> get_Rules();
    [CompilerGeneratedAttribute]
public void set_Rules(List`1<string> value);
}
public class Octopus.Client.Model.ChannelResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LifecycleId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDefault>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ChannelVersionRuleResource> <Rules>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <GitReferenceRules>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ChannelGitResourceRuleResource> <GitResourceRules>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <TenantTags>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Slug>k__BackingField;
    [WriteableAttribute]
public string Name { get; public set; }
    [WriteableAttribute]
public string Description { get; public set; }
    [WriteableOnCreateAttribute]
public string ProjectId { get; public set; }
    [WriteableAttribute]
public string LifecycleId { get; public set; }
    [WriteableAttribute]
public bool IsDefault { get; public set; }
    [WriteableAttribute]
public List`1<ChannelVersionRuleResource> Rules { get; public set; }
    [WriteableAttribute]
public List`1<string> GitReferenceRules { get; public set; }
    [WriteableAttribute]
public List`1<ChannelGitResourceRuleResource> GitResourceRules { get; public set; }
    [WriteableAttribute]
public ReferenceCollection TenantTags { get; public set; }
    public string SpaceId { get; public set; }
    public string Slug { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ProjectId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ProjectId(string value);
    [CompilerGeneratedAttribute]
public string get_LifecycleId();
    [CompilerGeneratedAttribute]
public void set_LifecycleId(string value);
    [CompilerGeneratedAttribute]
public bool get_IsDefault();
    [CompilerGeneratedAttribute]
public void set_IsDefault(bool value);
    [CompilerGeneratedAttribute]
public List`1<ChannelVersionRuleResource> get_Rules();
    [CompilerGeneratedAttribute]
public void set_Rules(List`1<ChannelVersionRuleResource> value);
    [CompilerGeneratedAttribute]
public List`1<string> get_GitReferenceRules();
    [CompilerGeneratedAttribute]
public void set_GitReferenceRules(List`1<string> value);
    [CompilerGeneratedAttribute]
public List`1<ChannelGitResourceRuleResource> get_GitResourceRules();
    [CompilerGeneratedAttribute]
public void set_GitResourceRules(List`1<ChannelGitResourceRuleResource> value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_TenantTags();
    [CompilerGeneratedAttribute]
public void set_TenantTags(ReferenceCollection value);
    public ChannelResource SetAsDefaultChannel();
    public ChannelResource UsingLifecycle(LifecycleResource lifecycle);
    public ChannelResource ClearRules();
    public ChannelResource AddRule(ChannelVersionRuleResource rule);
    public ChannelResource AddCommonRuleForAllActions(string versionRange, string tagRegex, DeploymentProcessResource process);
    public ChannelResource AddRule(string versionRange, string tagRegex, DeploymentActionResource[] actions);
    public ChannelResource ClearGitReferenceRules();
    public ChannelResource AddGitReferenceRule(string rule);
    public ChannelResource ClearGitResourceRules();
    public ChannelResource AddGitResourceRule(ChannelGitResourceRuleResource rule);
    public ChannelResource ClearTenantTags();
    public ChannelResource AddOrUpdateTenantTags(TagResource[] tags);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Slug();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Slug(string value);
}
public class Octopus.Client.Model.ChannelVersionRuleResource : Resource {
    [CompilerGeneratedAttribute]
private string <VersionRange>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Tag>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<DeploymentActionPackageResource> <ActionPackages>k__BackingField;
    [JsonExtensionDataAttribute]
private IDictionary`2<string, JToken> additionalData;
    [WriteableAttribute]
[TrimAttribute]
public string VersionRange { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string Tag { get; public set; }
    [JsonPropertyAttribute]
[WriteableAttribute]
public ICollection`1<DeploymentActionPackageResource> ActionPackages { get; public set; }
    [CompilerGeneratedAttribute]
public string get_VersionRange();
    [CompilerGeneratedAttribute]
public void set_VersionRange(string value);
    [CompilerGeneratedAttribute]
public string get_Tag();
    [CompilerGeneratedAttribute]
public void set_Tag(string value);
    [CompilerGeneratedAttribute]
public ICollection`1<DeploymentActionPackageResource> get_ActionPackages();
    [CompilerGeneratedAttribute]
public void set_ActionPackages(ICollection`1<DeploymentActionPackageResource> value);
    [OnDeserializedAttribute]
private void OnDeserialized(StreamingContext context);
    [OnSerializingAttribute]
private void OnSerializing(StreamingContext context);
}
public class Octopus.Client.Model.CommitResource : object {
    [CompilerGeneratedAttribute]
private string <CommitMessage>k__BackingField;
    public string CommitMessage { get; public set; }
    [CompilerGeneratedAttribute]
public string get_CommitMessage();
    [CompilerGeneratedAttribute]
public void set_CommitMessage(string value);
}
public class Octopus.Client.Model.CommitResource`1 : CommitResource {
    [CompilerGeneratedAttribute]
private TResource <Resource>k__BackingField;
    public TResource Resource { get; public set; }
    [CompilerGeneratedAttribute]
public TResource get_Resource();
    [CompilerGeneratedAttribute]
public void set_Resource(TResource value);
}
public enum Octopus.Client.Model.CommunicationStyle : Enum {
    public int value__;
    public static CommunicationStyle None;
    [TentacleUpgradeSupportedAttribute]
[ScriptConsoleSupportedAttribute]
public static CommunicationStyle TentaclePassive;
    [TentacleUpgradeSupportedAttribute]
[ScriptConsoleSupportedAttribute]
public static CommunicationStyle TentacleActive;
    [ScriptConsoleSupportedAttribute]
[SupportedAccountTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static CommunicationStyle Ssh;
    public static CommunicationStyle OfflineDrop;
    [ScriptConsoleSupportedAttribute]
public static CommunicationStyle AzureWebApp;
    [SupportedAccountTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static CommunicationStyle Ftp;
    [ScriptConsoleSupportedAttribute]
[SupportedAccountTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static CommunicationStyle AzureCloudService;
    public static CommunicationStyle AzureServiceFabricCluster;
    [ScriptConsoleSupportedAttribute]
[SupportedAccountTypesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static CommunicationStyle Kubernetes;
    public static CommunicationStyle StepPackage;
    [ScriptConsoleSupportedAttribute]
public static CommunicationStyle KubernetesTentacle;
}
public class Octopus.Client.Model.CommunityActionTemplateResource : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Author>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Website>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HistoryUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, PropertyValueResource> <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ActionTemplateParameterResource> <Parameters>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StepPackageVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Inputs>k__BackingField;
    [CompilerGeneratedAttribute]
private LinkCollection <Links>k__BackingField;
    public string Id { get; public set; }
    public string Type { get; public set; }
    public string Name { get; public set; }
    public string Author { get; public set; }
    public string Description { get; public set; }
    public int Version { get; public set; }
    public string Website { get; public set; }
    public string HistoryUrl { get; public set; }
    [JsonPropertyAttribute]
public IDictionary`2<string, PropertyValueResource> Properties { get; }
    [JsonPropertyAttribute]
public IList`1<ActionTemplateParameterResource> Parameters { get; }
    [JsonPropertyAttribute]
public string StepPackageVersion { get; public set; }
    [JsonPropertyAttribute]
public object Inputs { get; public set; }
    public LinkCollection Links { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Author();
    [CompilerGeneratedAttribute]
public void set_Author(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public int get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(int value);
    [CompilerGeneratedAttribute]
public string get_Website();
    [CompilerGeneratedAttribute]
public void set_Website(string value);
    [CompilerGeneratedAttribute]
public string get_HistoryUrl();
    [CompilerGeneratedAttribute]
public void set_HistoryUrl(string value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, PropertyValueResource> get_Properties();
    [CompilerGeneratedAttribute]
public IList`1<ActionTemplateParameterResource> get_Parameters();
    [CompilerGeneratedAttribute]
public string get_StepPackageVersion();
    [CompilerGeneratedAttribute]
public void set_StepPackageVersion(string value);
    [CompilerGeneratedAttribute]
public object get_Inputs();
    [CompilerGeneratedAttribute]
public void set_Inputs(object value);
    [CompilerGeneratedAttribute]
public sealed virtual LinkCollection get_Links();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Links(LinkCollection value);
}
public class Octopus.Client.Model.ConfigurationItemResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    public string Name { get; public set; }
    public string Description { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
}
public static class Octopus.Client.Model.ControlType : object {
    public static string ControlTypeKey;
    public static string SingleLineText;
    public static string MultiLineText;
    public static string Select;
    public static string Checkbox;
    public static string Sensitive;
    public static string StepName;
    public static string AzureAccount;
    public static string AmazonWebServicesAccount;
    public static string Certificate;
    public static string UsernamePasswordAccount;
    private static ControlType();
    public static Dictionary`2<string, string> AsDisplaySettings(string controlType);
}
public class Octopus.Client.Model.CreateChannelCommand : ChannelResource {
    [CompilerGeneratedAttribute]
private string <ChangeDescription>k__BackingField;
    public string ChangeDescription { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_ChangeDescription();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ChangeDescription(string value);
}
public class Octopus.Client.Model.DashboardConfigurationResource : Resource {
    [CompilerGeneratedAttribute]
private ReferenceCollection <IncludedProjectGroupIds>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <IncludedProjectIds>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <IncludedEnvironmentIds>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <IncludedTenantIds>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ProjectLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <IncludedTenantTags>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [WriteableAttribute]
public ReferenceCollection IncludedProjectGroupIds { get; public set; }
    [WriteableAttribute]
public ReferenceCollection IncludedProjectIds { get; public set; }
    [WriteableAttribute]
public ReferenceCollection IncludedEnvironmentIds { get; public set; }
    [WriteableAttribute]
public ReferenceCollection IncludedTenantIds { get; public set; }
    [WriteableAttribute]
public Nullable`1<int> ProjectLimit { get; public set; }
    [WriteableAttribute]
public ReferenceCollection IncludedTenantTags { get; public set; }
    public string SpaceId { get; public set; }
    [CompilerGeneratedAttribute]
public ReferenceCollection get_IncludedProjectGroupIds();
    [CompilerGeneratedAttribute]
public void set_IncludedProjectGroupIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_IncludedProjectIds();
    [CompilerGeneratedAttribute]
public void set_IncludedProjectIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_IncludedEnvironmentIds();
    [CompilerGeneratedAttribute]
public void set_IncludedEnvironmentIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_IncludedTenantIds();
    [CompilerGeneratedAttribute]
public void set_IncludedTenantIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ProjectLimit();
    [CompilerGeneratedAttribute]
public void set_ProjectLimit(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_IncludedTenantTags();
    [CompilerGeneratedAttribute]
public void set_IncludedTenantTags(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
}
public class Octopus.Client.Model.DashboardEnvironmentResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public string Name { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
}
public class Octopus.Client.Model.DashboardItemResource : Resource {
    [CompilerGeneratedAttribute]
private string <ProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EnvironmentId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ReleaseId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DeploymentId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TaskId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TenantId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ChannelId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ReleaseVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <Created>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <QueueTime>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <StartTime>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <CompletedTime>k__BackingField;
    [CompilerGeneratedAttribute]
private TaskState <State>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasPendingInterruptions>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasWarningsOrErrors>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Duration>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsCurrent>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsPrevious>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsCompleted>k__BackingField;
    public string ProjectId { get; public set; }
    public string EnvironmentId { get; public set; }
    public string ReleaseId { get; public set; }
    public string DeploymentId { get; public set; }
    public string TaskId { get; public set; }
    public string TenantId { get; public set; }
    public string ChannelId { get; public set; }
    public string ReleaseVersion { get; public set; }
    public DateTimeOffset Created { get; public set; }
    public DateTimeOffset QueueTime { get; public set; }
    public Nullable`1<DateTimeOffset> StartTime { get; public set; }
    public Nullable`1<DateTimeOffset> CompletedTime { get; public set; }
    public TaskState State { get; public set; }
    public bool HasPendingInterruptions { get; public set; }
    public bool HasWarningsOrErrors { get; public set; }
    public string ErrorMessage { get; public set; }
    public string Duration { get; public set; }
    public bool IsCurrent { get; public set; }
    public bool IsPrevious { get; public set; }
    public bool IsCompleted { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ProjectId();
    [CompilerGeneratedAttribute]
public void set_ProjectId(string value);
    [CompilerGeneratedAttribute]
public string get_EnvironmentId();
    [CompilerGeneratedAttribute]
public void set_EnvironmentId(string value);
    [CompilerGeneratedAttribute]
public string get_ReleaseId();
    [CompilerGeneratedAttribute]
public void set_ReleaseId(string value);
    [CompilerGeneratedAttribute]
public string get_DeploymentId();
    [CompilerGeneratedAttribute]
public void set_DeploymentId(string value);
    [CompilerGeneratedAttribute]
public string get_TaskId();
    [CompilerGeneratedAttribute]
public void set_TaskId(string value);
    [CompilerGeneratedAttribute]
public string get_TenantId();
    [CompilerGeneratedAttribute]
public void set_TenantId(string value);
    [CompilerGeneratedAttribute]
public string get_ChannelId();
    [CompilerGeneratedAttribute]
public void set_ChannelId(string value);
    [CompilerGeneratedAttribute]
public string get_ReleaseVersion();
    [CompilerGeneratedAttribute]
public void set_ReleaseVersion(string value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_Created();
    [CompilerGeneratedAttribute]
public void set_Created(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_QueueTime();
    [CompilerGeneratedAttribute]
public void set_QueueTime(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_StartTime();
    [CompilerGeneratedAttribute]
public void set_StartTime(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_CompletedTime();
    [CompilerGeneratedAttribute]
public void set_CompletedTime(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public TaskState get_State();
    [CompilerGeneratedAttribute]
public void set_State(TaskState value);
    [CompilerGeneratedAttribute]
public bool get_HasPendingInterruptions();
    [CompilerGeneratedAttribute]
public void set_HasPendingInterruptions(bool value);
    [CompilerGeneratedAttribute]
public bool get_HasWarningsOrErrors();
    [CompilerGeneratedAttribute]
public void set_HasWarningsOrErrors(bool value);
    [CompilerGeneratedAttribute]
public string get_ErrorMessage();
    [CompilerGeneratedAttribute]
public void set_ErrorMessage(string value);
    [CompilerGeneratedAttribute]
public string get_Duration();
    [CompilerGeneratedAttribute]
public void set_Duration(string value);
    [CompilerGeneratedAttribute]
public bool get_IsCurrent();
    [CompilerGeneratedAttribute]
public void set_IsCurrent(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsPrevious();
    [CompilerGeneratedAttribute]
public void set_IsPrevious(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsCompleted();
    [CompilerGeneratedAttribute]
public void set_IsCompleted(bool value);
}
public enum Octopus.Client.Model.DashboardItemsOptions : Enum {
    public int value__;
    public static DashboardItemsOptions IncludeCurrentDeploymentOnly;
    public static DashboardItemsOptions IncludeCurrentAndPreviousSuccessfulDeployment;
}
public class Octopus.Client.Model.DashboardProjectGroupResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <EnvironmentIds>k__BackingField;
    public string Name { get; public set; }
    public ReferenceCollection EnvironmentIds { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_EnvironmentIds();
    [CompilerGeneratedAttribute]
public void set_EnvironmentIds(ReferenceCollection value);
    public DashboardProjectGroupResource Copy();
}
public class Octopus.Client.Model.DashboardProjectResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDisabled>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Slug>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectGroupId>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <EnvironmentIds>k__BackingField;
    [CompilerGeneratedAttribute]
private TenantedDeploymentMode <TenantDeploymentMode>k__BackingField;
    [CompilerGeneratedAttribute]
private TenantedDeploymentMode <TenantedDeploymentMode>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CanPerformUntenantedDeployment>k__BackingField;
    public string Name { get; public set; }
    public bool IsDisabled { get; public set; }
    public string Slug { get; public set; }
    public string ProjectGroupId { get; public set; }
    public ReferenceCollection EnvironmentIds { get; public set; }
    [JsonIgnoreAttribute]
[ObsoleteAttribute("Use TenantedDeploymentMode instead. This property wasn't populated correctly anyway.")]
public TenantedDeploymentMode TenantDeploymentMode { get; public set; }
    public TenantedDeploymentMode TenantedDeploymentMode { get; public set; }
    public bool CanPerformUntenantedDeployment { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public bool get_IsDisabled();
    [CompilerGeneratedAttribute]
public void set_IsDisabled(bool value);
    [CompilerGeneratedAttribute]
public string get_Slug();
    [CompilerGeneratedAttribute]
public void set_Slug(string value);
    [CompilerGeneratedAttribute]
public string get_ProjectGroupId();
    [CompilerGeneratedAttribute]
public void set_ProjectGroupId(string value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_EnvironmentIds();
    [CompilerGeneratedAttribute]
public void set_EnvironmentIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public TenantedDeploymentMode get_TenantDeploymentMode();
    [CompilerGeneratedAttribute]
public void set_TenantDeploymentMode(TenantedDeploymentMode value);
    [CompilerGeneratedAttribute]
public TenantedDeploymentMode get_TenantedDeploymentMode();
    [CompilerGeneratedAttribute]
public void set_TenantedDeploymentMode(TenantedDeploymentMode value);
    [CompilerGeneratedAttribute]
public bool get_CanPerformUntenantedDeployment();
    [CompilerGeneratedAttribute]
public void set_CanPerformUntenantedDeployment(bool value);
    public DashboardProjectResource Copy();
}
public enum Octopus.Client.Model.DashboardRenderMode : Enum {
    public int value__;
    public static DashboardRenderMode VirtualizeColumns;
    public static DashboardRenderMode VirtualizeRowsAndColumns;
}
public class Octopus.Client.Model.DashboardResource : Resource {
    [CompilerGeneratedAttribute]
private List`1<DashboardProjectResource> <Projects>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<DashboardProjectGroupResource> <ProjectGroups>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<DashboardEnvironmentResource> <Environments>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<DashboardTenantResource> <Tenants>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<DashboardItemResource> <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<DashboardItemResource> <PreviousItems>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ProjectLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsFiltered>k__BackingField;
    public List`1<DashboardProjectResource> Projects { get; public set; }
    public List`1<DashboardProjectGroupResource> ProjectGroups { get; public set; }
    public List`1<DashboardEnvironmentResource> Environments { get; public set; }
    public List`1<DashboardTenantResource> Tenants { get; public set; }
    public List`1<DashboardItemResource> Items { get; public set; }
    public List`1<DashboardItemResource> PreviousItems { get; public set; }
    public Nullable`1<int> ProjectLimit { get; public set; }
    public bool IsFiltered { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<DashboardProjectResource> get_Projects();
    [CompilerGeneratedAttribute]
public void set_Projects(List`1<DashboardProjectResource> value);
    [CompilerGeneratedAttribute]
public List`1<DashboardProjectGroupResource> get_ProjectGroups();
    [CompilerGeneratedAttribute]
public void set_ProjectGroups(List`1<DashboardProjectGroupResource> value);
    [CompilerGeneratedAttribute]
public List`1<DashboardEnvironmentResource> get_Environments();
    [CompilerGeneratedAttribute]
public void set_Environments(List`1<DashboardEnvironmentResource> value);
    [CompilerGeneratedAttribute]
public List`1<DashboardTenantResource> get_Tenants();
    [CompilerGeneratedAttribute]
public void set_Tenants(List`1<DashboardTenantResource> value);
    [CompilerGeneratedAttribute]
public List`1<DashboardItemResource> get_Items();
    [CompilerGeneratedAttribute]
public void set_Items(List`1<DashboardItemResource> value);
    [CompilerGeneratedAttribute]
public List`1<DashboardItemResource> get_PreviousItems();
    [CompilerGeneratedAttribute]
public void set_PreviousItems(List`1<DashboardItemResource> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ProjectLimit();
    [CompilerGeneratedAttribute]
public void set_ProjectLimit(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public bool get_IsFiltered();
    [CompilerGeneratedAttribute]
public void set_IsFiltered(bool value);
}
public class Octopus.Client.Model.DashboardTenantResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, ReferenceCollection> <ProjectEnvironments>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <TenantTags>k__BackingField;
    public string Name { get; public set; }
    public IDictionary`2<string, ReferenceCollection> ProjectEnvironments { get; public set; }
    public ReferenceCollection TenantTags { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, ReferenceCollection> get_ProjectEnvironments();
    [CompilerGeneratedAttribute]
public void set_ProjectEnvironments(IDictionary`2<string, ReferenceCollection> value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_TenantTags();
    [CompilerGeneratedAttribute]
public void set_TenantTags(ReferenceCollection value);
}
public class Octopus.Client.Model.DatabasePersistenceSettingsResource : PersistenceSettingsResource {
    [CompilerGeneratedAttribute]
private PersistenceSettingsType <Type>k__BackingField;
    public PersistenceSettingsType Type { get; }
    [CompilerGeneratedAttribute]
public virtual PersistenceSettingsType get_Type();
}
[FlagsAttribute]
[JsonConverterAttribute("Octopus.Client.Model.DaysOfWeekFlagConverter")]
public enum Octopus.Client.Model.DaysOfWeek : Enum {
    public int value__;
    public static DaysOfWeek Sunday;
    public static DaysOfWeek Monday;
    public static DaysOfWeek Tuesday;
    public static DaysOfWeek Wednesday;
    public static DaysOfWeek Thursday;
    public static DaysOfWeek Friday;
    public static DaysOfWeek Saturday;
}
public class Octopus.Client.Model.DaysOfWeekFlagConverter : JsonConverter {
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual bool CanConvert(Type objectType);
}
public class Octopus.Client.Model.Defect : object {
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private DefectStatus <Status>k__BackingField;
    public string Description { get; public set; }
    public DefectStatus Status { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public DefectStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(DefectStatus value);
}
public class Octopus.Client.Model.DefectResource : Resource {
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DefectStatus> <Status>k__BackingField;
    [RequiredAttribute]
[WriteableOnCreateAttribute]
public string Description { get; public set; }
    public Nullable`1<DefectStatus> Status { get; public set; }
    public DefectResource(string description);
    public DefectResource(string description, DefectStatus status);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<DefectStatus> get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(Nullable`1<DefectStatus> value);
}
public enum Octopus.Client.Model.DefectStatus : Enum {
    public int value__;
    public static DefectStatus Unresolved;
    public static DefectStatus Resolved;
}
public enum Octopus.Client.Model.DeleteMachinesBehavior : Enum {
    public int value__;
    public static DeleteMachinesBehavior DoNotDelete;
    public static DeleteMachinesBehavior DeleteUnavailableMachines;
}
public enum Octopus.Client.Model.DeploymentActionCondition : Enum {
    public int value__;
    public static DeploymentActionCondition Success;
    public static DeploymentActionCondition Variable;
}
public class Octopus.Client.Model.DeploymentActionContainerResource : object {
    [CompilerGeneratedAttribute]
private string <Image>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FeedId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GitUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Dockerfile>k__BackingField;
    public string Image { get; public set; }
    public string FeedId { get; public set; }
    public string GitUrl { get; public set; }
    public string Dockerfile { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Image();
    [CompilerGeneratedAttribute]
public void set_Image(string value);
    [CompilerGeneratedAttribute]
public string get_FeedId();
    [CompilerGeneratedAttribute]
public void set_FeedId(string value);
    [CompilerGeneratedAttribute]
public string get_GitUrl();
    [CompilerGeneratedAttribute]
public void set_GitUrl(string value);
    [CompilerGeneratedAttribute]
public string get_Dockerfile();
    [CompilerGeneratedAttribute]
public void set_Dockerfile(string value);
}
public class Octopus.Client.Model.DeploymentActionGitDependencyResource : object {
    [CompilerGeneratedAttribute]
private string <DeploymentActionSlug>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GitDependencyName>k__BackingField;
    public string DeploymentActionSlug { get; public set; }
    public string GitDependencyName { get; public set; }
    public DeploymentActionGitDependencyResource(string deploymentActionSlug);
    [JsonConstructorAttribute]
public DeploymentActionGitDependencyResource(string deploymentActionSlug, string gitDependencyName);
    [CompilerGeneratedAttribute]
public string get_DeploymentActionSlug();
    [CompilerGeneratedAttribute]
public void set_DeploymentActionSlug(string value);
    [CompilerGeneratedAttribute]
public string get_GitDependencyName();
    [CompilerGeneratedAttribute]
public void set_GitDependencyName(string value);
}
public class Octopus.Client.Model.DeploymentActionPackageResource : object {
    [CompilerGeneratedAttribute]
private string <DeploymentAction>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PackageReference>k__BackingField;
    public string DeploymentAction { get; public set; }
    public string PackageReference { get; public set; }
    public DeploymentActionPackageResource(string deploymentAction);
    [JsonConstructorAttribute]
public DeploymentActionPackageResource(string deploymentAction, string packageReference);
    [CompilerGeneratedAttribute]
public string get_DeploymentAction();
    [CompilerGeneratedAttribute]
public void set_DeploymentAction(string value);
    [CompilerGeneratedAttribute]
public string get_PackageReference();
    [CompilerGeneratedAttribute]
public void set_PackageReference(string value);
    public bool DeploymentActionNameMatches(string name);
    public bool PackageReferenceNameMatches(string name);
    internal string ToLegacyStringFormat();
    internal static DeploymentActionPackageResource FromLegacyStringFormat(string s);
}
public class Octopus.Client.Model.DeploymentActionResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ActionType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Notes>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDisabled>k__BackingField;
    [CompilerGeneratedAttribute]
private string <WorkerPoolId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <WorkerPoolVariable>k__BackingField;
    [CompilerGeneratedAttribute]
private DeploymentActionContainerResource <Container>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CanBeUsedForProjectVersioning>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Slug>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsRequired>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <Environments>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <ExcludedEnvironments>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <Channels>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <TenantTags>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, PropertyValueResource> <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private PackageReferenceCollection <Packages>k__BackingField;
    [CompilerGeneratedAttribute]
private GitDependencyCollectionResource <GitDependencies>k__BackingField;
    [CompilerGeneratedAttribute]
private DeploymentActionCondition <Condition>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StepPackageVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Inputs>k__BackingField;
    public string Name { get; public set; }
    public string ActionType { get; public set; }
    public string Notes { get; public set; }
    public bool IsDisabled { get; public set; }
    public string WorkerPoolId { get; public set; }
    public string WorkerPoolVariable { get; public set; }
    public DeploymentActionContainerResource Container { get; public set; }
    public bool CanBeUsedForProjectVersioning { get; public set; }
    public string Slug { get; public set; }
    public bool IsRequired { get; public set; }
    [JsonPropertyAttribute]
public ReferenceCollection Environments { get; }
    [JsonPropertyAttribute]
public ReferenceCollection ExcludedEnvironments { get; }
    [JsonPropertyAttribute]
public ReferenceCollection Channels { get; }
    [JsonPropertyAttribute]
public ReferenceCollection TenantTags { get; }
    [JsonPropertyAttribute]
public IDictionary`2<string, PropertyValueResource> Properties { get; }
    [JsonPropertyAttribute]
public PackageReferenceCollection Packages { get; }
    [JsonPropertyAttribute]
public GitDependencyCollectionResource GitDependencies { get; }
    public DeploymentActionCondition Condition { get; public set; }
    [JsonPropertyAttribute]
public string StepPackageVersion { get; public set; }
    [JsonPropertyAttribute]
public object Inputs { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_ActionType();
    [CompilerGeneratedAttribute]
public void set_ActionType(string value);
    [CompilerGeneratedAttribute]
public string get_Notes();
    [CompilerGeneratedAttribute]
public void set_Notes(string value);
    [CompilerGeneratedAttribute]
public bool get_IsDisabled();
    [CompilerGeneratedAttribute]
public void set_IsDisabled(bool value);
    [CompilerGeneratedAttribute]
public string get_WorkerPoolId();
    [CompilerGeneratedAttribute]
public void set_WorkerPoolId(string value);
    [CompilerGeneratedAttribute]
public string get_WorkerPoolVariable();
    [CompilerGeneratedAttribute]
public void set_WorkerPoolVariable(string value);
    [CompilerGeneratedAttribute]
public DeploymentActionContainerResource get_Container();
    [CompilerGeneratedAttribute]
public void set_Container(DeploymentActionContainerResource value);
    [CompilerGeneratedAttribute]
public bool get_CanBeUsedForProjectVersioning();
    [CompilerGeneratedAttribute]
public void set_CanBeUsedForProjectVersioning(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Slug();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Slug(string value);
    [CompilerGeneratedAttribute]
public bool get_IsRequired();
    [CompilerGeneratedAttribute]
public void set_IsRequired(bool value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_Environments();
    [CompilerGeneratedAttribute]
public ReferenceCollection get_ExcludedEnvironments();
    [CompilerGeneratedAttribute]
public ReferenceCollection get_Channels();
    [CompilerGeneratedAttribute]
public ReferenceCollection get_TenantTags();
    [CompilerGeneratedAttribute]
public IDictionary`2<string, PropertyValueResource> get_Properties();
    [CompilerGeneratedAttribute]
public PackageReferenceCollection get_Packages();
    [CompilerGeneratedAttribute]
public GitDependencyCollectionResource get_GitDependencies();
    [CompilerGeneratedAttribute]
public DeploymentActionCondition get_Condition();
    [CompilerGeneratedAttribute]
public void set_Condition(DeploymentActionCondition value);
    [CompilerGeneratedAttribute]
public string get_StepPackageVersion();
    [CompilerGeneratedAttribute]
public void set_StepPackageVersion(string value);
    [CompilerGeneratedAttribute]
public object get_Inputs();
    [CompilerGeneratedAttribute]
public void set_Inputs(object value);
    public DeploymentActionResource ClearAllConditions();
    public DeploymentActionResource ForChannels(ChannelResource[] channels);
    public DeploymentActionResource ForEnvironments(EnvironmentResource[] environments);
    public DeploymentActionResource ForTenantTags(TagResource[] tags);
}
public enum Octopus.Client.Model.DeploymentApprovalStatus : Enum {
    public int value__;
    public static DeploymentApprovalStatus Approved;
    public static DeploymentApprovalStatus Rejected;
}
public class Octopus.Client.Model.DeploymentConnectivityPolicy : object {
    [CompilerGeneratedAttribute]
private SkipMachineBehavior <SkipMachineBehavior>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <TargetRoles>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowDeploymentsToNoTargets>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ExcludeUnhealthyTargets>k__BackingField;
    public SkipMachineBehavior SkipMachineBehavior { get; public set; }
    public ReferenceCollection TargetRoles { get; public set; }
    public bool AllowDeploymentsToNoTargets { get; public set; }
    public bool ExcludeUnhealthyTargets { get; public set; }
    [CompilerGeneratedAttribute]
public SkipMachineBehavior get_SkipMachineBehavior();
    [CompilerGeneratedAttribute]
public void set_SkipMachineBehavior(SkipMachineBehavior value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_TargetRoles();
    [CompilerGeneratedAttribute]
public void set_TargetRoles(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public bool get_AllowDeploymentsToNoTargets();
    [CompilerGeneratedAttribute]
public void set_AllowDeploymentsToNoTargets(bool value);
    [CompilerGeneratedAttribute]
public bool get_ExcludeUnhealthyTargets();
    [CompilerGeneratedAttribute]
public void set_ExcludeUnhealthyTargets(bool value);
}
public class Octopus.Client.Model.DeploymentFreezes.CreateDeploymentFreezeCommand : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <Start>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <End>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, ReferenceCollection> <ProjectEnvironmentScope>k__BackingField;
    [RequiredAttribute]
[MaxLengthAttribute("200")]
[MinLengthAttribute("1")]
public string Name { get; public set; }
    [RequiredAttribute]
public DateTimeOffset Start { get; public set; }
    [RequiredAttribute]
public DateTimeOffset End { get; public set; }
    [RequiredAttribute]
public Dictionary`2<string, ReferenceCollection> ProjectEnvironmentScope { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_Start();
    [CompilerGeneratedAttribute]
public void set_Start(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_End();
    [CompilerGeneratedAttribute]
public void set_End(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, ReferenceCollection> get_ProjectEnvironmentScope();
    [CompilerGeneratedAttribute]
public void set_ProjectEnvironmentScope(Dictionary`2<string, ReferenceCollection> value);
}
public class Octopus.Client.Model.DeploymentFreezes.CreateDeploymentFreezeResponse : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <Start>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <End>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, ReferenceCollection> <ProjectEnvironmentScope>k__BackingField;
    [RequiredAttribute]
public string Id { get; public set; }
    [RequiredAttribute]
public string Name { get; public set; }
    [RequiredAttribute]
public DateTimeOffset Start { get; public set; }
    [RequiredAttribute]
public DateTimeOffset End { get; public set; }
    [RequiredAttribute]
public Dictionary`2<string, ReferenceCollection> ProjectEnvironmentScope { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_Start();
    [CompilerGeneratedAttribute]
public void set_Start(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_End();
    [CompilerGeneratedAttribute]
public void set_End(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, ReferenceCollection> get_ProjectEnvironmentScope();
    [CompilerGeneratedAttribute]
public void set_ProjectEnvironmentScope(Dictionary`2<string, ReferenceCollection> value);
}
public class Octopus.Client.Model.DeploymentFreezes.DeleteDeploymentFreezeCommand : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [RequiredAttribute]
public string Id { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
}
public class Octopus.Client.Model.DeploymentFreezes.DeleteDeploymentFreezeResponse : object {
}
[ExtensionAttribute]
public static class Octopus.Client.Model.DeploymentFreezes.DeploymentFreezeClientExtensions : object {
    [ExtensionAttribute]
public static CreateDeploymentFreezeResponse Create(IOctopusClient client, CreateDeploymentFreezeCommand command);
}
public class Octopus.Client.Model.DeploymentFreezes.DeploymentFreezeResource : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <Start>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <End>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, ReferenceCollection> <ProjectEnvironmentScope>k__BackingField;
    [RequiredAttribute]
public string Id { get; public set; }
    [RequiredAttribute]
public string Name { get; public set; }
    [RequiredAttribute]
public DateTimeOffset Start { get; public set; }
    [RequiredAttribute]
public DateTimeOffset End { get; public set; }
    [RequiredAttribute]
public Dictionary`2<string, ReferenceCollection> ProjectEnvironmentScope { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_Start();
    [CompilerGeneratedAttribute]
public void set_Start(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_End();
    [CompilerGeneratedAttribute]
public void set_End(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, ReferenceCollection> get_ProjectEnvironmentScope();
    [CompilerGeneratedAttribute]
public void set_ProjectEnvironmentScope(Dictionary`2<string, ReferenceCollection> value);
}
public class Octopus.Client.Model.DeploymentFreezes.GetDeploymentFreezeByIdRequest : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [RequiredAttribute]
public string Id { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
}
public class Octopus.Client.Model.DeploymentFreezes.GetDeploymentFreezeByIdResponse : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <Start>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <End>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, ReferenceCollection> <ProjectEnvironmentScope>k__BackingField;
    [RequiredAttribute]
public string Id { get; public set; }
    [RequiredAttribute]
public string Name { get; public set; }
    [RequiredAttribute]
public DateTimeOffset Start { get; public set; }
    [RequiredAttribute]
public DateTimeOffset End { get; public set; }
    [RequiredAttribute]
public Dictionary`2<string, ReferenceCollection> ProjectEnvironmentScope { get; protected set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_Start();
    [CompilerGeneratedAttribute]
public void set_Start(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_End();
    [CompilerGeneratedAttribute]
public void set_End(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, ReferenceCollection> get_ProjectEnvironmentScope();
    [CompilerGeneratedAttribute]
protected void set_ProjectEnvironmentScope(Dictionary`2<string, ReferenceCollection> value);
}
public class Octopus.Client.Model.DeploymentFreezes.GetDeploymentFreezesRequest : object {
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<string> <Ids>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<string> <ProjectIds>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<string> <EnvironmentIds>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PartialName>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Skip>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Take>k__BackingField;
    [OptionalAttribute]
public IReadOnlyCollection`1<string> Ids { get; public set; }
    [OptionalAttribute]
public IReadOnlyCollection`1<string> ProjectIds { get; public set; }
    [OptionalAttribute]
public IReadOnlyCollection`1<string> EnvironmentIds { get; public set; }
    [OptionalAttribute]
public string PartialName { get; public set; }
    [RequiredAttribute]
public int Skip { get; public set; }
    [RequiredAttribute]
public int Take { get; public set; }
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<string> get_Ids();
    [CompilerGeneratedAttribute]
public void set_Ids(IReadOnlyCollection`1<string> value);
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<string> get_ProjectIds();
    [CompilerGeneratedAttribute]
public void set_ProjectIds(IReadOnlyCollection`1<string> value);
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<string> get_EnvironmentIds();
    [CompilerGeneratedAttribute]
public void set_EnvironmentIds(IReadOnlyCollection`1<string> value);
    [CompilerGeneratedAttribute]
public string get_PartialName();
    [CompilerGeneratedAttribute]
public void set_PartialName(string value);
    [CompilerGeneratedAttribute]
public int get_Skip();
    [CompilerGeneratedAttribute]
public void set_Skip(int value);
    [CompilerGeneratedAttribute]
public int get_Take();
    [CompilerGeneratedAttribute]
public void set_Take(int value);
}
public class Octopus.Client.Model.DeploymentFreezes.GetDeploymentFreezesResponse : object {
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<DeploymentFreezeResource> <DeploymentFreezes>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Count>k__BackingField;
    [RequiredAttribute]
public IReadOnlyCollection`1<DeploymentFreezeResource> DeploymentFreezes { get; public set; }
    [RequiredAttribute]
public int Count { get; public set; }
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<DeploymentFreezeResource> get_DeploymentFreezes();
    [CompilerGeneratedAttribute]
public void set_DeploymentFreezes(IReadOnlyCollection`1<DeploymentFreezeResource> value);
    [CompilerGeneratedAttribute]
public int get_Count();
    [CompilerGeneratedAttribute]
public void set_Count(int value);
}
public class Octopus.Client.Model.DeploymentFreezes.ModifyDeploymentFreezeCommand : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <Start>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <End>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, ReferenceCollection> <ProjectEnvironmentScope>k__BackingField;
    [RequiredAttribute]
public string Id { get; public set; }
    [MaxLengthAttribute("200")]
[MinLengthAttribute("1")]
[RequiredAttribute]
public string Name { get; public set; }
    [RequiredAttribute]
public DateTimeOffset Start { get; public set; }
    [RequiredAttribute]
public DateTimeOffset End { get; public set; }
    [RequiredAttribute]
public Dictionary`2<string, ReferenceCollection> ProjectEnvironmentScope { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_Start();
    [CompilerGeneratedAttribute]
public void set_Start(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_End();
    [CompilerGeneratedAttribute]
public void set_End(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, ReferenceCollection> get_ProjectEnvironmentScope();
    [CompilerGeneratedAttribute]
public void set_ProjectEnvironmentScope(Dictionary`2<string, ReferenceCollection> value);
}
public class Octopus.Client.Model.DeploymentFreezes.ModifyDeploymentFreezeResponse : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <Start>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <End>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, ReferenceCollection> <ProjectEnvironmentScope>k__BackingField;
    [RequiredAttribute]
public string Id { get; public set; }
    [RequiredAttribute]
public string Name { get; public set; }
    [RequiredAttribute]
public DateTimeOffset Start { get; public set; }
    [RequiredAttribute]
public DateTimeOffset End { get; public set; }
    [RequiredAttribute]
public Dictionary`2<string, ReferenceCollection> ProjectEnvironmentScope { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_Start();
    [CompilerGeneratedAttribute]
public void set_Start(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_End();
    [CompilerGeneratedAttribute]
public void set_End(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, ReferenceCollection> get_ProjectEnvironmentScope();
    [CompilerGeneratedAttribute]
public void set_ProjectEnvironmentScope(Dictionary`2<string, ReferenceCollection> value);
}
public class Octopus.Client.Model.DeploymentPreviewBaseResource : Resource {
    [CompilerGeneratedAttribute]
private List`1<DeploymentTemplateStep> <StepsToExecute>k__BackingField;
    [CompilerGeneratedAttribute]
private Form <Form>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseGuidedFailureModeByDefault>k__BackingField;
    public List`1<DeploymentTemplateStep> StepsToExecute { get; public set; }
    public Form Form { get; public set; }
    public bool UseGuidedFailureModeByDefault { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<DeploymentTemplateStep> get_StepsToExecute();
    [CompilerGeneratedAttribute]
public void set_StepsToExecute(List`1<DeploymentTemplateStep> value);
    [CompilerGeneratedAttribute]
public Form get_Form();
    [CompilerGeneratedAttribute]
public void set_Form(Form value);
    [CompilerGeneratedAttribute]
public bool get_UseGuidedFailureModeByDefault();
    [CompilerGeneratedAttribute]
public void set_UseGuidedFailureModeByDefault(bool value);
}
public class Octopus.Client.Model.DeploymentPreviewResource : DeploymentPreviewBaseResource {
    [CompilerGeneratedAttribute]
private List`1<ReleaseChanges> <Changes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ChangesMarkdown>k__BackingField;
    public List`1<ReleaseChanges> Changes { get; public set; }
    public string ChangesMarkdown { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<ReleaseChanges> get_Changes();
    [CompilerGeneratedAttribute]
public void set_Changes(List`1<ReleaseChanges> value);
    [CompilerGeneratedAttribute]
public string get_ChangesMarkdown();
    [CompilerGeneratedAttribute]
public void set_ChangesMarkdown(string value);
}
public static class Octopus.Client.Model.DeploymentPriority : object {
    public static string On;
    public static string Off;
    public static string LifecycleDefault;
    private static DeploymentPriority();
}
public class Octopus.Client.Model.DeploymentProcess.InlineScriptAction : ScriptAction {
    private string scriptBody;
    [CompilerGeneratedAttribute]
private ScriptSyntax <Syntax>k__BackingField;
    public ScriptSource Source { get; }
    public ScriptSyntax Syntax { get; }
    public InlineScriptAction(ScriptSyntax syntax, string scriptBody);
    public virtual ScriptSource get_Source();
    [CompilerGeneratedAttribute]
public virtual ScriptSyntax get_Syntax();
    public string GetScriptBody();
}
public class Octopus.Client.Model.DeploymentProcess.InlineScriptActionFromFileInAssembly : ScriptAction {
    [CompilerGeneratedAttribute]
private Assembly <ResourceAssembly>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResourceName>k__BackingField;
    public ScriptSource Source { get; }
    public ScriptSyntax Syntax { get; }
    public Assembly ResourceAssembly { get; }
    public string ResourceName { get; }
    public InlineScriptActionFromFileInAssembly(string resourceName, Assembly resourceAssembly);
    public virtual ScriptSource get_Source();
    public virtual ScriptSyntax get_Syntax();
    [CompilerGeneratedAttribute]
public Assembly get_ResourceAssembly();
    [CompilerGeneratedAttribute]
public string get_ResourceName();
    public string GetScriptBody();
}
public abstract class Octopus.Client.Model.DeploymentProcess.ScriptAction : object {
    public ScriptSource Source { get; }
    public ScriptSyntax Syntax { get; }
    public abstract virtual ScriptSource get_Source();
    public abstract virtual ScriptSyntax get_Syntax();
    protected ScriptSyntax CalculateScriptType(string scriptFileName);
    public static InlineScriptAction InlineScript(ScriptSyntax syntax, string scriptBody);
    public static InlineScriptActionFromFileInAssembly InlineScriptFromFileInAssembly(string resourceName, Assembly resourceAssembly);
}
public class Octopus.Client.Model.DeploymentProcess.ScriptActionFromFileInPackage : ScriptAction {
    [CompilerGeneratedAttribute]
private string <PackageFeedId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PackageId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ScriptFilePath>k__BackingField;
    public ScriptSource Source { get; }
    public ScriptSyntax Syntax { get; }
    public string PackageFeedId { get; protected set; }
    public string PackageId { get; protected set; }
    public string ScriptFilePath { get; protected set; }
    public ScriptActionFromFileInPackage(PackageResource package, string scriptFilePath);
    public virtual ScriptSource get_Source();
    public virtual ScriptSyntax get_Syntax();
    [CompilerGeneratedAttribute]
public string get_PackageFeedId();
    [CompilerGeneratedAttribute]
protected void set_PackageFeedId(string value);
    [CompilerGeneratedAttribute]
public string get_PackageId();
    [CompilerGeneratedAttribute]
protected void set_PackageId(string value);
    [CompilerGeneratedAttribute]
public string get_ScriptFilePath();
    [CompilerGeneratedAttribute]
protected void set_ScriptFilePath(string value);
}
public enum Octopus.Client.Model.DeploymentProcess.ScriptSource : Enum {
    public int value__;
    public static ScriptSource Inline;
    public static ScriptSource Package;
}
public enum Octopus.Client.Model.DeploymentProcess.ScriptTarget : Enum {
    public int value__;
    public static ScriptTarget Server;
    public static ScriptTarget Target;
}
public class Octopus.Client.Model.DeploymentProcessResource : Resource {
    [CompilerGeneratedAttribute]
private string <ProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<DeploymentStepResource> <Steps>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LastSnapshotId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    public string ProjectId { get; public set; }
    public IList`1<DeploymentStepResource> Steps { get; }
    [RequiredAttribute]
public int Version { get; public set; }
    public string LastSnapshotId { get; public set; }
    public string SpaceId { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_ProjectId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ProjectId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<DeploymentStepResource> get_Steps();
    [CompilerGeneratedAttribute]
public sealed virtual int get_Version();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Version(int value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_LastSnapshotId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_LastSnapshotId(string value);
    public sealed virtual DeploymentStepResource FindStep(string name);
    public sealed virtual DeploymentStepResource AddOrUpdateStep(string name);
    public sealed virtual IProcessResource RemoveStep(string name);
    public sealed virtual IProcessResource ClearSteps();
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
}
public class Octopus.Client.Model.DeploymentPromomotionTenant : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<DeploymentPromotionTarget> <PromoteTo>k__BackingField;
    public string Name { get; public set; }
    public List`1<DeploymentPromotionTarget> PromoteTo { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public List`1<DeploymentPromotionTarget> get_PromoteTo();
    [CompilerGeneratedAttribute]
public void set_PromoteTo(List`1<DeploymentPromotionTarget> value);
}
public class Octopus.Client.Model.DeploymentPromotionTarget : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public string Name { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
}
public class Octopus.Client.Model.DeploymentResource : Resource {
    [CompilerGeneratedAttribute]
private string <ReleaseId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ChannelId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DeploymentProcessId>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ReleaseChanges> <Changes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ChangesMarkdown>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EnvironmentId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TenantId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ForcePackageDownload>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ForcePackageRedeployment>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <SkipActions>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <SpecificMachineIds>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <ExcludedMachineIds>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ManifestVariableSetId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TaskId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseGuidedFailure>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Priority>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Comments>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <FormValues>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <QueueTime>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <QueueTimeExpiry>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <Created>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [CompilerGeneratedAttribute]
private RetentionPeriod <TentacleRetentionPeriod>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DeployedBy>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DeployedById>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <FailureEncountered>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <DeployedToMachineIds>k__BackingField;
    [WriteableOnCreateAttribute]
[RequiredAttribute]
public string ReleaseId { get; public set; }
    public string ChannelId { get; public set; }
    public string DeploymentProcessId { get; public set; }
    public List`1<ReleaseChanges> Changes { get; public set; }
    public string ChangesMarkdown { get; public set; }
    [RequiredAttribute]
[WriteableOnCreateAttribute]
public string EnvironmentId { get; public set; }
    [WriteableOnCreateAttribute]
public string TenantId { get; public set; }
    [WriteableOnCreateAttribute]
public bool ForcePackageDownload { get; public set; }
    [WriteableOnCreateAttribute]
public bool ForcePackageRedeployment { get; public set; }
    [WriteableOnCreateAttribute]
public ReferenceCollection SkipActions { get; public set; }
    [WriteableOnCreateAttribute]
public ReferenceCollection SpecificMachineIds { get; public set; }
    [WriteableOnCreateAttribute]
public ReferenceCollection ExcludedMachineIds { get; public set; }
    public string ManifestVariableSetId { get; public set; }
    public string TaskId { get; public set; }
    public string ProjectId { get; public set; }
    [WriteableOnCreateAttribute]
public bool UseGuidedFailure { get; public set; }
    [WriteableOnCreateAttribute]
public string Priority { get; public set; }
    [WriteableOnCreateAttribute]
public string Comments { get; public set; }
    [JsonPropertyAttribute]
[WriteableOnCreateAttribute]
public Dictionary`2<string, string> FormValues { get; public set; }
    public Nullable`1<DateTimeOffset> QueueTime { get; public set; }
    public Nullable`1<DateTimeOffset> QueueTimeExpiry { get; public set; }
    public string Name { get; public set; }
    public DateTimeOffset Created { get; public set; }
    public string SpaceId { get; public set; }
    public RetentionPeriod TentacleRetentionPeriod { get; public set; }
    public string DeployedBy { get; public set; }
    public string DeployedById { get; public set; }
    public bool FailureEncountered { get; public set; }
    public ReferenceCollection DeployedToMachineIds { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ReleaseId();
    [CompilerGeneratedAttribute]
public void set_ReleaseId(string value);
    [CompilerGeneratedAttribute]
public string get_ChannelId();
    [CompilerGeneratedAttribute]
public void set_ChannelId(string value);
    [CompilerGeneratedAttribute]
public string get_DeploymentProcessId();
    [CompilerGeneratedAttribute]
public void set_DeploymentProcessId(string value);
    [CompilerGeneratedAttribute]
public List`1<ReleaseChanges> get_Changes();
    [CompilerGeneratedAttribute]
public void set_Changes(List`1<ReleaseChanges> value);
    [CompilerGeneratedAttribute]
public string get_ChangesMarkdown();
    [CompilerGeneratedAttribute]
public void set_ChangesMarkdown(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_EnvironmentId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_EnvironmentId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_TenantId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TenantId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_ForcePackageDownload();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ForcePackageDownload(bool value);
    [CompilerGeneratedAttribute]
public bool get_ForcePackageRedeployment();
    [CompilerGeneratedAttribute]
public void set_ForcePackageRedeployment(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual ReferenceCollection get_SkipActions();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SkipActions(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public sealed virtual ReferenceCollection get_SpecificMachineIds();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpecificMachineIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public sealed virtual ReferenceCollection get_ExcludedMachineIds();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ExcludedMachineIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ManifestVariableSetId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ManifestVariableSetId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_TaskId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TaskId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ProjectId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ProjectId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_UseGuidedFailure();
    [CompilerGeneratedAttribute]
public sealed virtual void set_UseGuidedFailure(bool value);
    [CompilerGeneratedAttribute]
public string get_Priority();
    [CompilerGeneratedAttribute]
public void set_Priority(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Comments();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Comments(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Dictionary`2<string, string> get_FormValues();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FormValues(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<DateTimeOffset> get_QueueTime();
    [CompilerGeneratedAttribute]
public sealed virtual void set_QueueTime(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<DateTimeOffset> get_QueueTimeExpiry();
    [CompilerGeneratedAttribute]
public sealed virtual void set_QueueTimeExpiry(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Name(string value);
    [CompilerGeneratedAttribute]
public sealed virtual DateTimeOffset get_Created();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Created(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual RetentionPeriod get_TentacleRetentionPeriod();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TentacleRetentionPeriod(RetentionPeriod value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_DeployedBy();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DeployedBy(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_DeployedById();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DeployedById(string value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_FailureEncountered();
    [CompilerGeneratedAttribute]
public void set_FailureEncountered(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual ReferenceCollection get_DeployedToMachineIds();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DeployedToMachineIds(ReferenceCollection value);
}
public class Octopus.Client.Model.DeploymentSettingsResource : Resource {
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private DeploymentConnectivityPolicy <ConnectivityPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private GuidedFailureMode <DefaultGuidedFailureMode>k__BackingField;
    [CompilerGeneratedAttribute]
private VersioningStrategyResource <VersioningStrategy>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ReleaseNotesTemplate>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DefaultToSkipIfAlreadyInstalled>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DeploymentChangesTemplate>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ForcePackageDownload>k__BackingField;
    public string SpaceId { get; public set; }
    public string ProjectId { get; public set; }
    [JsonPropertyAttribute]
[WriteableAttribute]
public DeploymentConnectivityPolicy ConnectivityPolicy { get; public set; }
    [WriteableAttribute]
public GuidedFailureMode DefaultGuidedFailureMode { get; public set; }
    [WriteableAttribute]
public VersioningStrategyResource VersioningStrategy { get; public set; }
    [WriteableAttribute]
public string ReleaseNotesTemplate { get; public set; }
    [WriteableAttribute]
public bool DefaultToSkipIfAlreadyInstalled { get; public set; }
    [WriteableAttribute]
public string DeploymentChangesTemplate { get; public set; }
    [WriteableAttribute]
public bool ForcePackageDownload { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
    [CompilerGeneratedAttribute]
public string get_ProjectId();
    [CompilerGeneratedAttribute]
public void set_ProjectId(string value);
    [CompilerGeneratedAttribute]
public DeploymentConnectivityPolicy get_ConnectivityPolicy();
    [CompilerGeneratedAttribute]
public void set_ConnectivityPolicy(DeploymentConnectivityPolicy value);
    [CompilerGeneratedAttribute]
public GuidedFailureMode get_DefaultGuidedFailureMode();
    [CompilerGeneratedAttribute]
public void set_DefaultGuidedFailureMode(GuidedFailureMode value);
    [CompilerGeneratedAttribute]
public VersioningStrategyResource get_VersioningStrategy();
    [CompilerGeneratedAttribute]
public void set_VersioningStrategy(VersioningStrategyResource value);
    [CompilerGeneratedAttribute]
public string get_ReleaseNotesTemplate();
    [CompilerGeneratedAttribute]
public void set_ReleaseNotesTemplate(string value);
    [CompilerGeneratedAttribute]
public bool get_DefaultToSkipIfAlreadyInstalled();
    [CompilerGeneratedAttribute]
public void set_DefaultToSkipIfAlreadyInstalled(bool value);
    [CompilerGeneratedAttribute]
public string get_DeploymentChangesTemplate();
    [CompilerGeneratedAttribute]
public void set_DeploymentChangesTemplate(string value);
    [CompilerGeneratedAttribute]
public bool get_ForcePackageDownload();
    [CompilerGeneratedAttribute]
public void set_ForcePackageDownload(bool value);
}
public enum Octopus.Client.Model.DeploymentStepCondition : Enum {
    public int value__;
    public static DeploymentStepCondition Success;
    public static DeploymentStepCondition Failure;
    public static DeploymentStepCondition Always;
    public static DeploymentStepCondition Variable;
}
public enum Octopus.Client.Model.DeploymentStepPackageRequirement : Enum {
    public int value__;
    public static DeploymentStepPackageRequirement LetOctopusDecide;
    public static DeploymentStepPackageRequirement BeforePackageAcquisition;
    public static DeploymentStepPackageRequirement AfterPackageAcquisition;
}
public class Octopus.Client.Model.DeploymentStepProperties : object {
}
public class Octopus.Client.Model.DeploymentStepResource : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Slug>k__BackingField;
    [CompilerGeneratedAttribute]
private DeploymentStepPackageRequirement <PackageRequirement>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, PropertyValueResource> <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private DeploymentStepCondition <Condition>k__BackingField;
    [CompilerGeneratedAttribute]
private DeploymentStepStartTrigger <StartTrigger>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<DeploymentActionResource> <Actions>k__BackingField;
    public string Id { get; public set; }
    public string Name { get; public set; }
    public string Slug { get; public set; }
    [ObsoleteAttribute("This method was deprecated in https://github.com/OctopusDeploy/Issues/issues/3974.  Please use the PackageRequirement property instead.")]
public bool RequiresPackagesToBeAcquired { get; public set; }
    public DeploymentStepPackageRequirement PackageRequirement { get; public set; }
    [JsonPropertyAttribute]
public IDictionary`2<string, PropertyValueResource> Properties { get; }
    public DeploymentStepCondition Condition { get; public set; }
    public DeploymentStepStartTrigger StartTrigger { get; public set; }
    [JsonPropertyAttribute]
public List`1<DeploymentActionResource> Actions { get; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Slug();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Slug(string value);
    public bool get_RequiresPackagesToBeAcquired();
    public void set_RequiresPackagesToBeAcquired(bool value);
    [CompilerGeneratedAttribute]
public DeploymentStepPackageRequirement get_PackageRequirement();
    [CompilerGeneratedAttribute]
public void set_PackageRequirement(DeploymentStepPackageRequirement value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, PropertyValueResource> get_Properties();
    [CompilerGeneratedAttribute]
public DeploymentStepCondition get_Condition();
    [CompilerGeneratedAttribute]
public void set_Condition(DeploymentStepCondition value);
    [CompilerGeneratedAttribute]
public DeploymentStepStartTrigger get_StartTrigger();
    [CompilerGeneratedAttribute]
public void set_StartTrigger(DeploymentStepStartTrigger value);
    [CompilerGeneratedAttribute]
public List`1<DeploymentActionResource> get_Actions();
    public DeploymentStepResource ClearActions();
    public DeploymentStepResource WithCondition(DeploymentStepCondition condition);
    public DeploymentStepResource WithStartTrigger(DeploymentStepStartTrigger startTrigger);
    public DeploymentStepResource WithPackageRequirement(DeploymentStepPackageRequirement packageRequirement);
    [ObsoleteAttribute("This method was deprecated in https://github.com/OctopusDeploy/Issues/issues/3974.  Please use the WithPackageRequirement method instead.")]
public DeploymentStepResource RequirePackagesToBeAcquired(bool requirePackagesToBeAcquired);
    public DeploymentStepResource TargetingRoles(String[] roles);
    public DeploymentActionResource FindAction(string name);
    public DeploymentStepResource RemoveAction(string name);
    public DeploymentActionResource AddOrUpdateAction(string name);
    public DeploymentActionResource AddOrUpdateManualInterventionAction(string name, string instructions);
    public DeploymentActionResource AddOrUpdateScriptAction(string name, ScriptAction scriptAction, ScriptTarget scriptTarget);
    public DeploymentActionResource AddOrUpdatePackageAction(string name, PackageResource package);
}
public enum Octopus.Client.Model.DeploymentStepStartTrigger : Enum {
    public int value__;
    public static DeploymentStepStartTrigger StartAfterPrevious;
    public static DeploymentStepStartTrigger StartWithPrevious;
}
public enum Octopus.Client.Model.DeploymentTargets.DeploymentTargetTaskType : Enum {
    public int value__;
    public static DeploymentTargetTaskType Deployment;
    public static DeploymentTargetTaskType RunbookRun;
}
public class Octopus.Client.Model.DeploymentTemplateBaseResource : Resource {
    [CompilerGeneratedAttribute]
private bool <IsVariableSetModified>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsLibraryVariableSetModified>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<DeploymentPromotionTarget> <PromoteTo>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<DeploymentPromomotionTenant> <TenantPromotions>k__BackingField;
    public bool IsVariableSetModified { get; public set; }
    public bool IsLibraryVariableSetModified { get; public set; }
    public List`1<DeploymentPromotionTarget> PromoteTo { get; public set; }
    public List`1<DeploymentPromomotionTenant> TenantPromotions { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_IsVariableSetModified();
    [CompilerGeneratedAttribute]
public void set_IsVariableSetModified(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsLibraryVariableSetModified();
    [CompilerGeneratedAttribute]
public void set_IsLibraryVariableSetModified(bool value);
    [CompilerGeneratedAttribute]
public List`1<DeploymentPromotionTarget> get_PromoteTo();
    [CompilerGeneratedAttribute]
public void set_PromoteTo(List`1<DeploymentPromotionTarget> value);
    [CompilerGeneratedAttribute]
public List`1<DeploymentPromomotionTenant> get_TenantPromotions();
    [CompilerGeneratedAttribute]
public void set_TenantPromotions(List`1<DeploymentPromomotionTenant> value);
}
public class Octopus.Client.Model.DeploymentTemplateResource : DeploymentTemplateBaseResource {
    [CompilerGeneratedAttribute]
private bool <IsDeploymentProcessModified>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DeploymentNotes>k__BackingField;
    public bool IsDeploymentProcessModified { get; public set; }
    public string DeploymentNotes { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_IsDeploymentProcessModified();
    [CompilerGeneratedAttribute]
public void set_IsDeploymentProcessModified(bool value);
    [CompilerGeneratedAttribute]
public string get_DeploymentNotes();
    [CompilerGeneratedAttribute]
public void set_DeploymentNotes(string value);
}
public class Octopus.Client.Model.DeploymentTemplateStep : object {
    [CompilerGeneratedAttribute]
private string <ActionId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ActionName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ActionNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Roles>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <MachineNames>k__BackingField;
    [CompilerGeneratedAttribute]
private MachineDeploymentPreview[] <Machines>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CanBeSkipped>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasNoApplicableMachines>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceDataItem[] <UnavailableMachines>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceDataItem[] <ExcludedMachines>k__BackingField;
    public string ActionId { get; public set; }
    public string ActionName { get; public set; }
    public string ActionNumber { get; public set; }
    public String[] Roles { get; public set; }
    public String[] MachineNames { get; public set; }
    public MachineDeploymentPreview[] Machines { get; public set; }
    public bool CanBeSkipped { get; public set; }
    public bool HasNoApplicableMachines { get; public set; }
    public ReferenceDataItem[] UnavailableMachines { get; public set; }
    public ReferenceDataItem[] ExcludedMachines { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ActionId();
    [CompilerGeneratedAttribute]
public void set_ActionId(string value);
    [CompilerGeneratedAttribute]
public string get_ActionName();
    [CompilerGeneratedAttribute]
public void set_ActionName(string value);
    [CompilerGeneratedAttribute]
public string get_ActionNumber();
    [CompilerGeneratedAttribute]
public void set_ActionNumber(string value);
    [CompilerGeneratedAttribute]
public String[] get_Roles();
    [CompilerGeneratedAttribute]
public void set_Roles(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_MachineNames();
    [CompilerGeneratedAttribute]
public void set_MachineNames(String[] value);
    [CompilerGeneratedAttribute]
public MachineDeploymentPreview[] get_Machines();
    [CompilerGeneratedAttribute]
public void set_Machines(MachineDeploymentPreview[] value);
    [CompilerGeneratedAttribute]
public bool get_CanBeSkipped();
    [CompilerGeneratedAttribute]
public void set_CanBeSkipped(bool value);
    [CompilerGeneratedAttribute]
public bool get_HasNoApplicableMachines();
    [CompilerGeneratedAttribute]
public void set_HasNoApplicableMachines(bool value);
    [CompilerGeneratedAttribute]
public ReferenceDataItem[] get_UnavailableMachines();
    [CompilerGeneratedAttribute]
public void set_UnavailableMachines(ReferenceDataItem[] value);
    [CompilerGeneratedAttribute]
public ReferenceDataItem[] get_ExcludedMachines();
    [CompilerGeneratedAttribute]
public void set_ExcludedMachines(ReferenceDataItem[] value);
}
public enum Octopus.Client.Model.DiscoverableEndpointType : Enum {
    public int value__;
    public static DiscoverableEndpointType TentaclePassive;
    public static DiscoverableEndpointType TentacleActive;
    public static DiscoverableEndpointType Ssh;
}
public class Octopus.Client.Model.DiscoverMachineOptions : object {
    [CompilerGeneratedAttribute]
private string <Host>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Port>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DiscoverableEndpointType> <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private ProxyResource <Proxy>k__BackingField;
    public string Host { get; }
    public int Port { get; public set; }
    public Nullable`1<DiscoverableEndpointType> Type { get; public set; }
    public ProxyResource Proxy { get; public set; }
    public DiscoverMachineOptions(string host);
    [CompilerGeneratedAttribute]
public string get_Host();
    [CompilerGeneratedAttribute]
public int get_Port();
    [CompilerGeneratedAttribute]
public void set_Port(int value);
    [CompilerGeneratedAttribute]
public Nullable`1<DiscoverableEndpointType> get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(Nullable`1<DiscoverableEndpointType> value);
    [CompilerGeneratedAttribute]
public ProxyResource get_Proxy();
    [CompilerGeneratedAttribute]
public void set_Proxy(ProxyResource value);
}
public class Octopus.Client.Model.DockerFeedResource : FeedResource {
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RegistryPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FeedUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Username>k__BackingField;
    [CompilerGeneratedAttribute]
private SensitiveValue <Password>k__BackingField;
    public FeedType FeedType { get; }
    [WriteableAttribute]
public string ApiVersion { get; public set; }
    [WriteableAttribute]
public string RegistryPath { get; public set; }
    [WriteableAttribute]
public string FeedUri { get; public set; }
    [WriteableAttribute]
public string Username { get; public set; }
    [WriteableAttribute]
public SensitiveValue Password { get; public set; }
    public virtual FeedType get_FeedType();
    [CompilerGeneratedAttribute]
public string get_ApiVersion();
    [CompilerGeneratedAttribute]
public void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public string get_RegistryPath();
    [CompilerGeneratedAttribute]
public void set_RegistryPath(string value);
    [CompilerGeneratedAttribute]
public string get_FeedUri();
    [CompilerGeneratedAttribute]
public void set_FeedUri(string value);
    [CompilerGeneratedAttribute]
public string get_Username();
    [CompilerGeneratedAttribute]
public void set_Username(string value);
    [CompilerGeneratedAttribute]
public SensitiveValue get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(SensitiveValue value);
}
public class Octopus.Client.Model.DocumentTypeResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public string Name { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
}
public enum Octopus.Client.Model.EmailPriority : Enum {
    public int value__;
    public static EmailPriority Normal;
    public static EmailPriority Low;
    public static EmailPriority High;
}
public class Octopus.Client.Model.EncryptedBytes : object {
    private Byte[] ciphertext;
    private Byte[] salt;
    public Byte[] Ciphertext { get; }
    public Byte[] Salt { get; }
    public EncryptedBytes(Byte[] ciphertext, Byte[] salt);
    public Byte[] get_Ciphertext();
    public Byte[] get_Salt();
    public string ToBase64();
    public static EncryptedBytes FromBase64(string base64);
}
public enum Octopus.Client.Model.Endpoints.AzureServiceFabricCredentialType : Enum {
    public int value__;
    public static AzureServiceFabricCredentialType ClientCredential;
    public static AzureServiceFabricCredentialType UserCredential;
}
public enum Octopus.Client.Model.Endpoints.AzureServiceFabricSecurityMode : Enum {
    public int value__;
    public static AzureServiceFabricSecurityMode Unsecure;
    public static AzureServiceFabricSecurityMode SecureClientCertificate;
    public static AzureServiceFabricSecurityMode SecureAzureAD;
}
public class Octopus.Client.Model.Endpoints.AzureWebAppEndpointResource : EndpointResource {
    [CompilerGeneratedAttribute]
private string <AccountId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResourceGroupName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <WebAppName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <WebAppSlotName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DefaultWorkerPoolId>k__BackingField;
    public CommunicationStyle CommunicationStyle { get; }
    [WriteableAttribute]
[TrimAttribute]
public string AccountId { get; public set; }
    [WriteableAttribute]
[TrimAttribute]
public string ResourceGroupName { get; public set; }
    [WriteableAttribute]
[TrimAttribute]
public string WebAppName { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string WebAppSlotName { get; public set; }
    [WriteableAttribute]
[TrimAttribute]
public string DefaultWorkerPoolId { get; public set; }
    public virtual CommunicationStyle get_CommunicationStyle();
    [CompilerGeneratedAttribute]
public string get_AccountId();
    [CompilerGeneratedAttribute]
public void set_AccountId(string value);
    [CompilerGeneratedAttribute]
public string get_ResourceGroupName();
    [CompilerGeneratedAttribute]
public void set_ResourceGroupName(string value);
    [CompilerGeneratedAttribute]
public string get_WebAppName();
    [CompilerGeneratedAttribute]
public void set_WebAppName(string value);
    [CompilerGeneratedAttribute]
public string get_WebAppSlotName();
    [CompilerGeneratedAttribute]
public void set_WebAppSlotName(string value);
    [CompilerGeneratedAttribute]
public string get_DefaultWorkerPoolId();
    [CompilerGeneratedAttribute]
public void set_DefaultWorkerPoolId(string value);
}
public class Octopus.Client.Model.Endpoints.CloudRegionEndpointResource : EndpointResource {
    [CompilerGeneratedAttribute]
private string <DefaultWorkerPoolId>k__BackingField;
    public CommunicationStyle CommunicationStyle { get; }
    [WriteableAttribute]
[TrimAttribute]
public string DefaultWorkerPoolId { get; public set; }
    public virtual CommunicationStyle get_CommunicationStyle();
    [CompilerGeneratedAttribute]
public string get_DefaultWorkerPoolId();
    [CompilerGeneratedAttribute]
public void set_DefaultWorkerPoolId(string value);
}
public class Octopus.Client.Model.Endpoints.CloudServiceEndpointResource : EndpointResource {
    [CompilerGeneratedAttribute]
private string <AccountId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CloudServiceName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StorageAccountName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Slot>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SwapIfPossible>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseCurrentInstanceCount>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DefaultWorkerPoolId>k__BackingField;
    public CommunicationStyle CommunicationStyle { get; }
    [TrimAttribute]
[WriteableAttribute]
[RequiredAttribute]
public string AccountId { get; public set; }
    [RequiredAttribute]
[WriteableAttribute]
[TrimAttribute]
public string CloudServiceName { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
[RequiredAttribute]
public string StorageAccountName { get; public set; }
    [WriteableAttribute]
[TrimAttribute]
public string Slot { get; public set; }
    [WriteableAttribute]
public bool SwapIfPossible { get; public set; }
    [WriteableAttribute]
public bool UseCurrentInstanceCount { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string DefaultWorkerPoolId { get; public set; }
    public virtual CommunicationStyle get_CommunicationStyle();
    [CompilerGeneratedAttribute]
public string get_AccountId();
    [CompilerGeneratedAttribute]
public void set_AccountId(string value);
    [CompilerGeneratedAttribute]
public string get_CloudServiceName();
    [CompilerGeneratedAttribute]
public void set_CloudServiceName(string value);
    [CompilerGeneratedAttribute]
public string get_StorageAccountName();
    [CompilerGeneratedAttribute]
public void set_StorageAccountName(string value);
    [CompilerGeneratedAttribute]
public string get_Slot();
    [CompilerGeneratedAttribute]
public void set_Slot(string value);
    [CompilerGeneratedAttribute]
public bool get_SwapIfPossible();
    [CompilerGeneratedAttribute]
public void set_SwapIfPossible(bool value);
    [CompilerGeneratedAttribute]
public bool get_UseCurrentInstanceCount();
    [CompilerGeneratedAttribute]
public void set_UseCurrentInstanceCount(bool value);
    [CompilerGeneratedAttribute]
public string get_DefaultWorkerPoolId();
    [CompilerGeneratedAttribute]
public void set_DefaultWorkerPoolId(string value);
}
public abstract class Octopus.Client.Model.Endpoints.EndpointResource : Resource {
    public CommunicationStyle CommunicationStyle { get; }
    public abstract virtual CommunicationStyle get_CommunicationStyle();
}
public interface Octopus.Client.Model.Endpoints.IEndpointWithMultipleAuthenticationResource {
    public string AuthenticationType { get; }
    public abstract virtual string get_AuthenticationType();
}
public interface Octopus.Client.Model.Endpoints.IListeningTentacleEndpointResource {
    public string ProxyId { get; public set; }
    public abstract virtual string get_ProxyId();
    public abstract virtual void set_ProxyId(string value);
}
public interface Octopus.Client.Model.Endpoints.IPollingTentacleEndpointResource {
}
public interface Octopus.Client.Model.Endpoints.ITentacleEndpointResource {
    public string Thumbprint { get; public set; }
    public string Uri { get; public set; }
    public string CertificateSignatureAlgorithm { get; public set; }
    public abstract virtual string get_Thumbprint();
    public abstract virtual void set_Thumbprint(string value);
    public abstract virtual string get_Uri();
    public abstract virtual void set_Uri(string value);
    public abstract virtual string get_CertificateSignatureAlgorithm();
    public abstract virtual void set_CertificateSignatureAlgorithm(string value);
}
public class Octopus.Client.Model.Endpoints.KubernetesAgentDetailsResource : object {
    [CompilerGeneratedAttribute]
private string <AgentVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TentacleVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private UpgradeStatus <UpgradeStatus>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HelmReleaseName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <KubernetesNamespace>k__BackingField;
    public string AgentVersion { get; public set; }
    public string TentacleVersion { get; public set; }
    public UpgradeStatus UpgradeStatus { get; public set; }
    public string HelmReleaseName { get; public set; }
    public string KubernetesNamespace { get; public set; }
    public KubernetesAgentDetailsResource(string agentVersion, string tentacleVersion, UpgradeStatus upgradeStatus, string helmReleaseName, string kubernetesNamespace);
    [CompilerGeneratedAttribute]
public string get_AgentVersion();
    [CompilerGeneratedAttribute]
public void set_AgentVersion(string value);
    [CompilerGeneratedAttribute]
public string get_TentacleVersion();
    [CompilerGeneratedAttribute]
public void set_TentacleVersion(string value);
    [CompilerGeneratedAttribute]
public UpgradeStatus get_UpgradeStatus();
    [CompilerGeneratedAttribute]
public void set_UpgradeStatus(UpgradeStatus value);
    [CompilerGeneratedAttribute]
public string get_HelmReleaseName();
    [CompilerGeneratedAttribute]
public void set_HelmReleaseName(string value);
    [CompilerGeneratedAttribute]
public string get_KubernetesNamespace();
    [CompilerGeneratedAttribute]
public void set_KubernetesNamespace(string value);
}
public class Octopus.Client.Model.Endpoints.KubernetesAwsAuthenticationResource : KubernetesStandardAccountAuthenticationResource {
    [CompilerGeneratedAttribute]
private string <ClusterName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseInstanceRole>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AssumeRole>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AssumedRoleArn>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AssumedRoleSession>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <AssumeRoleSessionDurationSeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AssumeRoleExternalId>k__BackingField;
    [TrimAttribute]
[WriteableAttribute]
public string ClusterName { get; public set; }
    public string AuthenticationType { get; }
    public bool UseInstanceRole { get; public set; }
    public bool AssumeRole { get; public set; }
    public string AssumedRoleArn { get; public set; }
    public string AssumedRoleSession { get; public set; }
    public Nullable`1<int> AssumeRoleSessionDurationSeconds { get; public set; }
    public string AssumeRoleExternalId { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ClusterName();
    [CompilerGeneratedAttribute]
public void set_ClusterName(string value);
    public virtual string get_AuthenticationType();
    [CompilerGeneratedAttribute]
public bool get_UseInstanceRole();
    [CompilerGeneratedAttribute]
public void set_UseInstanceRole(bool value);
    [CompilerGeneratedAttribute]
public bool get_AssumeRole();
    [CompilerGeneratedAttribute]
public void set_AssumeRole(bool value);
    [CompilerGeneratedAttribute]
public string get_AssumedRoleArn();
    [CompilerGeneratedAttribute]
public void set_AssumedRoleArn(string value);
    [CompilerGeneratedAttribute]
public string get_AssumedRoleSession();
    [CompilerGeneratedAttribute]
public void set_AssumedRoleSession(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_AssumeRoleSessionDurationSeconds();
    [CompilerGeneratedAttribute]
public void set_AssumeRoleSessionDurationSeconds(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_AssumeRoleExternalId();
    [CompilerGeneratedAttribute]
public void set_AssumeRoleExternalId(string value);
}
public class Octopus.Client.Model.Endpoints.KubernetesAzureAuthenticationResource : KubernetesStandardAccountAuthenticationResource {
    [CompilerGeneratedAttribute]
private string <ClusterName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClusterResourceGroup>k__BackingField;
    [TrimAttribute]
[WriteableAttribute]
public string ClusterName { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string ClusterResourceGroup { get; public set; }
    public string AuthenticationType { get; }
    [CompilerGeneratedAttribute]
public string get_ClusterName();
    [CompilerGeneratedAttribute]
public void set_ClusterName(string value);
    [CompilerGeneratedAttribute]
public string get_ClusterResourceGroup();
    [CompilerGeneratedAttribute]
public void set_ClusterResourceGroup(string value);
    public virtual string get_AuthenticationType();
}
public class Octopus.Client.Model.Endpoints.KubernetesCertificateAuthenticationResource : object {
    [CompilerGeneratedAttribute]
private string <ClientCertificate>k__BackingField;
    [TrimAttribute]
[WriteableAttribute]
public string ClientCertificate { get; public set; }
    public string AuthenticationType { get; }
    [CompilerGeneratedAttribute]
public string get_ClientCertificate();
    [CompilerGeneratedAttribute]
public void set_ClientCertificate(string value);
    public sealed virtual string get_AuthenticationType();
}
public class Octopus.Client.Model.Endpoints.KubernetesEndpointResource : EndpointResource {
    [CompilerGeneratedAttribute]
private string <ClusterCertificate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClusterCertificatePath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClusterUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Namespace>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SkipTlsVerification>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProxyId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContainerOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DefaultWorkerPoolId>k__BackingField;
    [CompilerGeneratedAttribute]
private IEndpointWithMultipleAuthenticationResource <Authentication>k__BackingField;
    [CompilerGeneratedAttribute]
private DeploymentActionContainerResource <Container>k__BackingField;
    public CommunicationStyle CommunicationStyle { get; }
    [WriteableAttribute]
[TrimAttribute]
public string ClusterCertificate { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string ClusterCertificatePath { get; public set; }
    [WriteableAttribute]
[TrimAttribute]
public string ClusterUrl { get; public set; }
    [WriteableAttribute]
[TrimAttribute]
public string Namespace { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string SkipTlsVerification { get; public set; }
    [WriteableAttribute]
[TrimAttribute]
public string ProxyId { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string ContainerOptions { get; public set; }
    [WriteableAttribute]
[TrimAttribute]
public string DefaultWorkerPoolId { get; public set; }
    [WriteableAttribute]
public IEndpointWithMultipleAuthenticationResource Authentication { get; public set; }
    [WriteableAttribute]
public DeploymentActionContainerResource Container { get; public set; }
    public virtual CommunicationStyle get_CommunicationStyle();
    [CompilerGeneratedAttribute]
public string get_ClusterCertificate();
    [CompilerGeneratedAttribute]
public void set_ClusterCertificate(string value);
    [CompilerGeneratedAttribute]
public string get_ClusterCertificatePath();
    [CompilerGeneratedAttribute]
public void set_ClusterCertificatePath(string value);
    [CompilerGeneratedAttribute]
public string get_ClusterUrl();
    [CompilerGeneratedAttribute]
public void set_ClusterUrl(string value);
    [CompilerGeneratedAttribute]
public string get_Namespace();
    [CompilerGeneratedAttribute]
public void set_Namespace(string value);
    [CompilerGeneratedAttribute]
public string get_SkipTlsVerification();
    [CompilerGeneratedAttribute]
public void set_SkipTlsVerification(string value);
    [CompilerGeneratedAttribute]
public string get_ProxyId();
    [CompilerGeneratedAttribute]
public void set_ProxyId(string value);
    [CompilerGeneratedAttribute]
public string get_ContainerOptions();
    [CompilerGeneratedAttribute]
public void set_ContainerOptions(string value);
    [CompilerGeneratedAttribute]
public string get_DefaultWorkerPoolId();
    [CompilerGeneratedAttribute]
public void set_DefaultWorkerPoolId(string value);
    [CompilerGeneratedAttribute]
public IEndpointWithMultipleAuthenticationResource get_Authentication();
    [CompilerGeneratedAttribute]
public void set_Authentication(IEndpointWithMultipleAuthenticationResource value);
    [CompilerGeneratedAttribute]
public DeploymentActionContainerResource get_Container();
    [CompilerGeneratedAttribute]
public void set_Container(DeploymentActionContainerResource value);
}
public class Octopus.Client.Model.Endpoints.KubernetesGoogleCloudAuthenticationResource : KubernetesStandardAccountAuthenticationResource {
    [CompilerGeneratedAttribute]
private string <ClusterName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseVmServiceAccount>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ImpersonateServiceAccount>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServiceAccountEmails>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Project>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Region>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Zone>k__BackingField;
    public string ClusterName { get; public set; }
    public bool UseVmServiceAccount { get; public set; }
    public bool ImpersonateServiceAccount { get; public set; }
    public string ServiceAccountEmails { get; public set; }
    public string Project { get; public set; }
    public string Region { get; public set; }
    public string Zone { get; public set; }
    public string AuthenticationType { get; }
    [CompilerGeneratedAttribute]
public string get_ClusterName();
    [CompilerGeneratedAttribute]
public void set_ClusterName(string value);
    [CompilerGeneratedAttribute]
public bool get_UseVmServiceAccount();
    [CompilerGeneratedAttribute]
public void set_UseVmServiceAccount(bool value);
    [CompilerGeneratedAttribute]
public bool get_ImpersonateServiceAccount();
    [CompilerGeneratedAttribute]
public void set_ImpersonateServiceAccount(bool value);
    [CompilerGeneratedAttribute]
public string get_ServiceAccountEmails();
    [CompilerGeneratedAttribute]
public void set_ServiceAccountEmails(string value);
    [CompilerGeneratedAttribute]
public string get_Project();
    [CompilerGeneratedAttribute]
public void set_Project(string value);
    [CompilerGeneratedAttribute]
public string get_Region();
    [CompilerGeneratedAttribute]
public void set_Region(string value);
    [CompilerGeneratedAttribute]
public string get_Zone();
    [CompilerGeneratedAttribute]
public void set_Zone(string value);
    public virtual string get_AuthenticationType();
}
public class Octopus.Client.Model.Endpoints.KubernetesPodServiceAuthenticationResource : object {
    [CompilerGeneratedAttribute]
private string <TokenPath>k__BackingField;
    public string TokenPath { get; public set; }
    public string AuthenticationType { get; }
    [CompilerGeneratedAttribute]
public string get_TokenPath();
    [CompilerGeneratedAttribute]
public void set_TokenPath(string value);
    public sealed virtual string get_AuthenticationType();
}
public class Octopus.Client.Model.Endpoints.KubernetesStandardAccountAuthenticationResource : object {
    [CompilerGeneratedAttribute]
private string <AccountId>k__BackingField;
    [WriteableAttribute]
[TrimAttribute]
public string AccountId { get; public set; }
    public string AuthenticationType { get; }
    [CompilerGeneratedAttribute]
public string get_AccountId();
    [CompilerGeneratedAttribute]
public void set_AccountId(string value);
    public virtual string get_AuthenticationType();
}
public class Octopus.Client.Model.Endpoints.KubernetesTentacleEndpointResource : EndpointResource {
    [CompilerGeneratedAttribute]
private TentacleEndpointConfigurationResource <TentacleEndpointConfiguration>k__BackingField;
    [CompilerGeneratedAttribute]
private KubernetesAgentDetailsResource <KubernetesAgentDetails>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UpgradeLocked>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DefaultNamespace>k__BackingField;
    public CommunicationStyle CommunicationStyle { get; }
    public TentacleEndpointConfigurationResource TentacleEndpointConfiguration { get; public set; }
    public KubernetesAgentDetailsResource KubernetesAgentDetails { get; public set; }
    public bool UpgradeLocked { get; public set; }
    public string DefaultNamespace { get; public set; }
    public KubernetesTentacleEndpointResource(TentacleEndpointConfigurationResource tentacleEndpointConfiguration);
    public virtual CommunicationStyle get_CommunicationStyle();
    [CompilerGeneratedAttribute]
public TentacleEndpointConfigurationResource get_TentacleEndpointConfiguration();
    [CompilerGeneratedAttribute]
public void set_TentacleEndpointConfiguration(TentacleEndpointConfigurationResource value);
    [CompilerGeneratedAttribute]
public KubernetesAgentDetailsResource get_KubernetesAgentDetails();
    [CompilerGeneratedAttribute]
public void set_KubernetesAgentDetails(KubernetesAgentDetailsResource value);
    [CompilerGeneratedAttribute]
public bool get_UpgradeLocked();
    [CompilerGeneratedAttribute]
public void set_UpgradeLocked(bool value);
    [CompilerGeneratedAttribute]
public string get_DefaultNamespace();
    [CompilerGeneratedAttribute]
public void set_DefaultNamespace(string value);
}
public class Octopus.Client.Model.Endpoints.ListeningTentacleEndpointConfigurationResource : TentacleEndpointConfigurationResource {
    [CompilerGeneratedAttribute]
private string <ProxyId>k__BackingField;
    public TentacleCommunicationModeResource CommunicationMode { get; }
    [WriteableAttribute]
public string ProxyId { get; public set; }
    public ListeningTentacleEndpointConfigurationResource(string thumbprint, string uri);
    public virtual TentacleCommunicationModeResource get_CommunicationMode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ProxyId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ProxyId(string value);
}
public class Octopus.Client.Model.Endpoints.ListeningTentacleEndpointResource : TentacleEndpointResource {
    [CompilerGeneratedAttribute]
private string <ProxyId>k__BackingField;
    public CommunicationStyle CommunicationStyle { get; }
    [WriteableAttribute]
public string ProxyId { get; public set; }
    public virtual CommunicationStyle get_CommunicationStyle();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ProxyId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ProxyId(string value);
}
public class Octopus.Client.Model.Endpoints.OfflineDropDestinationResource : object {
    [CompilerGeneratedAttribute]
private OfflineDropDestinationType <DestinationType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DropFolderPath>k__BackingField;
    public OfflineDropDestinationType DestinationType { get; public set; }
    [TrimAttribute]
public string DropFolderPath { get; public set; }
    public OfflineDropDestinationResource(string dropFolderPath);
    [CompilerGeneratedAttribute]
public OfflineDropDestinationType get_DestinationType();
    [CompilerGeneratedAttribute]
public void set_DestinationType(OfflineDropDestinationType value);
    [CompilerGeneratedAttribute]
public string get_DropFolderPath();
    [CompilerGeneratedAttribute]
public void set_DropFolderPath(string value);
}
public enum Octopus.Client.Model.Endpoints.OfflineDropDestinationType : Enum {
    public int value__;
    public static OfflineDropDestinationType Artifact;
    public static OfflineDropDestinationType FileSystem;
}
public class Octopus.Client.Model.Endpoints.OfflineDropEndpointResource : EndpointResource {
    [CompilerGeneratedAttribute]
private OfflineDropDestinationResource <Destination>k__BackingField;
    [CompilerGeneratedAttribute]
private SensitiveValue <SensitiveVariablesEncryptionPassword>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ApplicationsDirectory>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OctopusWorkingDirectory>k__BackingField;
    [JsonExtensionDataAttribute]
private IDictionary`2<string, JToken> additionalData;
    public CommunicationStyle CommunicationStyle { get; }
    [WriteableAttribute]
public OfflineDropDestinationResource Destination { get; public set; }
    [WriteableAttribute]
public SensitiveValue SensitiveVariablesEncryptionPassword { get; public set; }
    [WriteableAttribute]
[TrimAttribute]
public string ApplicationsDirectory { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string OctopusWorkingDirectory { get; public set; }
    public virtual CommunicationStyle get_CommunicationStyle();
    [CompilerGeneratedAttribute]
public OfflineDropDestinationResource get_Destination();
    [CompilerGeneratedAttribute]
public void set_Destination(OfflineDropDestinationResource value);
    [CompilerGeneratedAttribute]
public SensitiveValue get_SensitiveVariablesEncryptionPassword();
    [CompilerGeneratedAttribute]
public void set_SensitiveVariablesEncryptionPassword(SensitiveValue value);
    [CompilerGeneratedAttribute]
public string get_ApplicationsDirectory();
    [CompilerGeneratedAttribute]
public void set_ApplicationsDirectory(string value);
    [CompilerGeneratedAttribute]
public string get_OctopusWorkingDirectory();
    [CompilerGeneratedAttribute]
public void set_OctopusWorkingDirectory(string value);
    [OnSerializingAttribute]
private void OnSerializing(StreamingContext context);
    [OnDeserializedAttribute]
private void OnDeserialized(StreamingContext context);
}
public class Octopus.Client.Model.Endpoints.PollingTentacleEndpointConfigurationResource : TentacleEndpointConfigurationResource {
    public TentacleCommunicationModeResource CommunicationMode { get; }
    public PollingTentacleEndpointConfigurationResource(string thumbprint, string uri);
    public virtual TentacleCommunicationModeResource get_CommunicationMode();
}
public class Octopus.Client.Model.Endpoints.PollingTentacleEndpointResource : TentacleEndpointResource {
    public CommunicationStyle CommunicationStyle { get; }
    public virtual CommunicationStyle get_CommunicationStyle();
}
public class Octopus.Client.Model.Endpoints.ServiceFabricEndpointResource : EndpointResource {
    [CompilerGeneratedAttribute]
private string <ConnectionEndpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private AzureServiceFabricSecurityMode <SecurityMode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServerCertThumbprint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientCertVariable>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CertificateStoreLocation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CertificateStoreName>k__BackingField;
    [CompilerGeneratedAttribute]
private AzureServiceFabricCredentialType <AadCredentialType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AadClientCredentialSecret>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AadUserCredentialUsername>k__BackingField;
    [CompilerGeneratedAttribute]
private SensitiveValue <AadUserCredentialPassword>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DefaultWorkerPoolId>k__BackingField;
    public CommunicationStyle CommunicationStyle { get; }
    [WriteableAttribute]
[TrimAttribute]
public string ConnectionEndpoint { get; public set; }
    [WriteableAttribute]
[TrimAttribute]
public AzureServiceFabricSecurityMode SecurityMode { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string ServerCertThumbprint { get; public set; }
    [WriteableAttribute]
[TrimAttribute]
public string ClientCertVariable { get; public set; }
    [WriteableAttribute]
[TrimAttribute]
public string CertificateStoreLocation { get; public set; }
    [WriteableAttribute]
[TrimAttribute]
public string CertificateStoreName { get; public set; }
    [WriteableAttribute]
[TrimAttribute]
public AzureServiceFabricCredentialType AadCredentialType { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string AadClientCredentialSecret { get; public set; }
    [WriteableAttribute]
[TrimAttribute]
public string AadUserCredentialUsername { get; public set; }
    [WriteableAttribute]
public SensitiveValue AadUserCredentialPassword { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string DefaultWorkerPoolId { get; public set; }
    public virtual CommunicationStyle get_CommunicationStyle();
    [CompilerGeneratedAttribute]
public string get_ConnectionEndpoint();
    [CompilerGeneratedAttribute]
public void set_ConnectionEndpoint(string value);
    [CompilerGeneratedAttribute]
public AzureServiceFabricSecurityMode get_SecurityMode();
    [CompilerGeneratedAttribute]
public void set_SecurityMode(AzureServiceFabricSecurityMode value);
    [CompilerGeneratedAttribute]
public string get_ServerCertThumbprint();
    [CompilerGeneratedAttribute]
public void set_ServerCertThumbprint(string value);
    [CompilerGeneratedAttribute]
public string get_ClientCertVariable();
    [CompilerGeneratedAttribute]
public void set_ClientCertVariable(string value);
    [CompilerGeneratedAttribute]
public string get_CertificateStoreLocation();
    [CompilerGeneratedAttribute]
public void set_CertificateStoreLocation(string value);
    [CompilerGeneratedAttribute]
public string get_CertificateStoreName();
    [CompilerGeneratedAttribute]
public void set_CertificateStoreName(string value);
    [CompilerGeneratedAttribute]
public AzureServiceFabricCredentialType get_AadCredentialType();
    [CompilerGeneratedAttribute]
public void set_AadCredentialType(AzureServiceFabricCredentialType value);
    [CompilerGeneratedAttribute]
public string get_AadClientCredentialSecret();
    [CompilerGeneratedAttribute]
public void set_AadClientCredentialSecret(string value);
    [CompilerGeneratedAttribute]
public string get_AadUserCredentialUsername();
    [CompilerGeneratedAttribute]
public void set_AadUserCredentialUsername(string value);
    [CompilerGeneratedAttribute]
public SensitiveValue get_AadUserCredentialPassword();
    [CompilerGeneratedAttribute]
public void set_AadUserCredentialPassword(SensitiveValue value);
    [CompilerGeneratedAttribute]
public string get_DefaultWorkerPoolId();
    [CompilerGeneratedAttribute]
public void set_DefaultWorkerPoolId(string value);
}
public class Octopus.Client.Model.Endpoints.SshEndpointResource : EndpointResource {
    [CompilerGeneratedAttribute]
private string <AccountId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Host>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Port>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Fingerprint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProxyId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DotNetCorePlatform>k__BackingField;
    public CommunicationStyle CommunicationStyle { get; }
    [WriteableAttribute]
[TrimAttribute]
public string AccountId { get; public set; }
    [WriteableAttribute]
[TrimAttribute]
public string Host { get; public set; }
    [WriteableAttribute]
public int Port { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string Fingerprint { get; public set; }
    public string Uri { get; }
    [WriteableAttribute]
public string ProxyId { get; public set; }
    [WriteableAttribute]
[TrimAttribute]
public string DotNetCorePlatform { get; public set; }
    public virtual CommunicationStyle get_CommunicationStyle();
    [CompilerGeneratedAttribute]
public string get_AccountId();
    [CompilerGeneratedAttribute]
public void set_AccountId(string value);
    [CompilerGeneratedAttribute]
public string get_Host();
    [CompilerGeneratedAttribute]
public void set_Host(string value);
    [CompilerGeneratedAttribute]
public int get_Port();
    [CompilerGeneratedAttribute]
public void set_Port(int value);
    [CompilerGeneratedAttribute]
public string get_Fingerprint();
    [CompilerGeneratedAttribute]
public void set_Fingerprint(string value);
    public string get_Uri();
    [CompilerGeneratedAttribute]
public string get_ProxyId();
    [CompilerGeneratedAttribute]
public void set_ProxyId(string value);
    [CompilerGeneratedAttribute]
public string get_DotNetCorePlatform();
    [CompilerGeneratedAttribute]
public void set_DotNetCorePlatform(string value);
}
public class Octopus.Client.Model.Endpoints.StepPackageEndpointResource : EndpointResource {
    [CompilerGeneratedAttribute]
private string <DeploymentTargetTypeId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StepPackageVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Inputs>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DefaultWorkerPoolId>k__BackingField;
    public CommunicationStyle CommunicationStyle { get; }
    [WriteableAttribute]
[TrimAttribute]
public string DeploymentTargetTypeId { get; public set; }
    [WriteableAttribute]
[TrimAttribute]
public string StepPackageVersion { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public object Inputs { get; public set; }
    [WriteableAttribute]
[TrimAttribute]
public string DefaultWorkerPoolId { get; public set; }
    public virtual CommunicationStyle get_CommunicationStyle();
    [CompilerGeneratedAttribute]
public string get_DeploymentTargetTypeId();
    [CompilerGeneratedAttribute]
public void set_DeploymentTargetTypeId(string value);
    [CompilerGeneratedAttribute]
public string get_StepPackageVersion();
    [CompilerGeneratedAttribute]
public void set_StepPackageVersion(string value);
    [CompilerGeneratedAttribute]
public object get_Inputs();
    [CompilerGeneratedAttribute]
public void set_Inputs(object value);
    [CompilerGeneratedAttribute]
public string get_DefaultWorkerPoolId();
    [CompilerGeneratedAttribute]
public void set_DefaultWorkerPoolId(string value);
}
public class Octopus.Client.Model.Endpoints.TentacleCommunicationModeResource : CaseInsensitiveStringTinyType {
    public static TentacleCommunicationModeResource Polling { get; }
    public static TentacleCommunicationModeResource Listening { get; }
    [JsonConstructorAttribute]
public TentacleCommunicationModeResource(string value);
    public static TentacleCommunicationModeResource get_Polling();
    public static TentacleCommunicationModeResource get_Listening();
}
public class Octopus.Client.Model.Endpoints.TentacleDetailsResource : object {
    [CompilerGeneratedAttribute]
private bool <UpgradeLocked>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UpgradeSuggested>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UpgradeRequired>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UpgradeAvailable>k__BackingField;
    [WriteableAttribute]
public bool UpgradeLocked { get; public set; }
    public string Version { get; public set; }
    public bool UpgradeSuggested { get; public set; }
    public bool UpgradeRequired { get; public set; }
    public bool UpgradeAvailable { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_UpgradeLocked();
    [CompilerGeneratedAttribute]
public void set_UpgradeLocked(bool value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
    [CompilerGeneratedAttribute]
public bool get_UpgradeSuggested();
    [CompilerGeneratedAttribute]
public void set_UpgradeSuggested(bool value);
    [CompilerGeneratedAttribute]
public bool get_UpgradeRequired();
    [CompilerGeneratedAttribute]
public void set_UpgradeRequired(bool value);
    [CompilerGeneratedAttribute]
public bool get_UpgradeAvailable();
    [CompilerGeneratedAttribute]
public void set_UpgradeAvailable(bool value);
}
public abstract class Octopus.Client.Model.Endpoints.TentacleEndpointConfigurationResource : object {
    [CompilerGeneratedAttribute]
private string <Thumbprint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Uri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CertificateSignatureAlgorithm>k__BackingField;
    public TentacleCommunicationModeResource CommunicationMode { get; }
    [TrimAttribute]
[RequiredAttribute]
[WriteableAttribute]
public string Thumbprint { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string Uri { get; public set; }
    public string CertificateSignatureAlgorithm { get; public set; }
    protected TentacleEndpointConfigurationResource(string thumbprint, string uri);
    public abstract virtual TentacleCommunicationModeResource get_CommunicationMode();
    [CompilerGeneratedAttribute]
public sealed virtual string get_Thumbprint();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Thumbprint(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Uri();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Uri(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_CertificateSignatureAlgorithm();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CertificateSignatureAlgorithm(string value);
}
public abstract class Octopus.Client.Model.Endpoints.TentacleEndpointResource : EndpointResource {
    [CompilerGeneratedAttribute]
private string <Thumbprint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Uri>k__BackingField;
    [CompilerGeneratedAttribute]
private TentacleDetailsResource <TentacleVersionDetails>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CertificateSignatureAlgorithm>k__BackingField;
    [WriteableAttribute]
[TrimAttribute]
[RequiredAttribute]
public string Thumbprint { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string Uri { get; public set; }
    [WriteableAttribute]
public TentacleDetailsResource TentacleVersionDetails { get; public set; }
    public string CertificateSignatureAlgorithm { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Thumbprint();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Thumbprint(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Uri();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Uri(string value);
    [CompilerGeneratedAttribute]
public TentacleDetailsResource get_TentacleVersionDetails();
    [CompilerGeneratedAttribute]
public void set_TentacleVersionDetails(TentacleDetailsResource value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_CertificateSignatureAlgorithm();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CertificateSignatureAlgorithm(string value);
}
public class Octopus.Client.Model.Endpoints.UpgradeStatus : CaseInsensitiveStringTinyType {
    public static UpgradeStatus NoUpgrades { get; }
    public static UpgradeStatus UpgradeAvailable { get; }
    public static UpgradeStatus UpgradeSuggested { get; }
    public static UpgradeStatus UpgradeRequired { get; }
    public UpgradeStatus(string value);
    public static UpgradeStatus get_NoUpgrades();
    public static UpgradeStatus get_UpgradeAvailable();
    public static UpgradeStatus get_UpgradeSuggested();
    public static UpgradeStatus get_UpgradeRequired();
}
internal class Octopus.Client.Model.EnvironmentHelper : object {
    public sealed virtual String[] SafelyGetEnvironmentInformation();
    private static string SafelyGet(Func`1<string> thingToGet);
    [IteratorStateMachineAttribute("Octopus.Client.Model.EnvironmentHelper/<GetEnvironmentVars>d__2")]
private static IEnumerable`1<string> GetEnvironmentVars();
}
public class Octopus.Client.Model.EnvironmentResource : ResourceWithExtensionSettings {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private int <SortOrder>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseGuidedFailure>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowDynamicInfrastructure>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Slug>k__BackingField;
    [WriteableAttribute]
[TrimAttribute]
public string Name { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string Description { get; public set; }
    [WriteableAttribute]
public int SortOrder { get; public set; }
    [WriteableAttribute]
public bool UseGuidedFailure { get; public set; }
    [WriteableAttribute]
public bool AllowDynamicInfrastructure { get; public set; }
    public string SpaceId { get; public set; }
    public string Slug { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public int get_SortOrder();
    [CompilerGeneratedAttribute]
public void set_SortOrder(int value);
    [CompilerGeneratedAttribute]
public bool get_UseGuidedFailure();
    [CompilerGeneratedAttribute]
public void set_UseGuidedFailure(bool value);
    [CompilerGeneratedAttribute]
public bool get_AllowDynamicInfrastructure();
    [CompilerGeneratedAttribute]
public void set_AllowDynamicInfrastructure(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Slug();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Slug(string value);
}
public class Octopus.Client.Model.EnvironmentsSummaryResource : SummaryResourcesCombined {
    [CompilerGeneratedAttribute]
private Dictionary`2<string, int> <MachineTenantSummaries>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, int> <MachineTenantTagSummaries>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<EnvironmentSummaryResource> <EnvironmentSummaries>k__BackingField;
    public Dictionary`2<string, int> MachineTenantSummaries { get; public set; }
    public Dictionary`2<string, int> MachineTenantTagSummaries { get; public set; }
    public List`1<EnvironmentSummaryResource> EnvironmentSummaries { get; public set; }
    [CompilerGeneratedAttribute]
public Dictionary`2<string, int> get_MachineTenantSummaries();
    [CompilerGeneratedAttribute]
public void set_MachineTenantSummaries(Dictionary`2<string, int> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, int> get_MachineTenantTagSummaries();
    [CompilerGeneratedAttribute]
public void set_MachineTenantTagSummaries(Dictionary`2<string, int> value);
    [CompilerGeneratedAttribute]
public List`1<EnvironmentSummaryResource> get_EnvironmentSummaries();
    [CompilerGeneratedAttribute]
public void set_EnvironmentSummaries(List`1<EnvironmentSummaryResource> value);
}
public class Octopus.Client.Model.EnvironmentSummaryResource : SummaryResource {
    [CompilerGeneratedAttribute]
private EnvironmentResource <Environment>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, int> <MachineTenantSummaries>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, int> <MachineTenantTagSummaries>k__BackingField;
    public EnvironmentResource Environment { get; public set; }
    public Dictionary`2<string, int> MachineTenantSummaries { get; public set; }
    public Dictionary`2<string, int> MachineTenantTagSummaries { get; public set; }
    [CompilerGeneratedAttribute]
public EnvironmentResource get_Environment();
    [CompilerGeneratedAttribute]
public void set_Environment(EnvironmentResource value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, int> get_MachineTenantSummaries();
    [CompilerGeneratedAttribute]
public void set_MachineTenantSummaries(Dictionary`2<string, int> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, int> get_MachineTenantTagSummaries();
    [CompilerGeneratedAttribute]
public void set_MachineTenantTagSummaries(Dictionary`2<string, int> value);
}
public class Octopus.Client.Model.EventAgentResource : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private LinkCollection <Links>k__BackingField;
    public string Id { get; public set; }
    public string Name { get; public set; }
    public LinkCollection Links { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public sealed virtual LinkCollection get_Links();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Links(LinkCollection value);
}
public class Octopus.Client.Model.EventCategoryResource : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private LinkCollection <Links>k__BackingField;
    public string Id { get; public set; }
    public string Name { get; public set; }
    public LinkCollection Links { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public sealed virtual LinkCollection get_Links();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Links(LinkCollection value);
}
public class Octopus.Client.Model.EventGroupResource : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <EventCategories>k__BackingField;
    [CompilerGeneratedAttribute]
private LinkCollection <Links>k__BackingField;
    public string Id { get; public set; }
    public string Name { get; public set; }
    public List`1<string> EventCategories { get; public set; }
    public LinkCollection Links { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public List`1<string> get_EventCategories();
    [CompilerGeneratedAttribute]
public void set_EventCategories(List`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual LinkCollection get_Links();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Links(LinkCollection value);
}
public class Octopus.Client.Model.EventNotificationSubscription : object {
    [CompilerGeneratedAttribute]
private EventNotificationSubscriptionFilter <Filter>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <EmailTeams>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <EmailFrequencyPeriod>k__BackingField;
    [CompilerGeneratedAttribute]
private EmailPriority <EmailPriority>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <EmailDigestLastProcessed>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <EmailDigestLastProcessedEventAutoId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EmailShowDatesInTimeZoneId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <WebhookURI>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <WebhookTeams>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <WebhookTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private string <WebhookHeaderKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <WebhookHeaderValue>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <WebhookLastProcessed>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <WebhookLastProcessedEventAutoId>k__BackingField;
    public EventNotificationSubscriptionFilter Filter { get; public set; }
    public ReferenceCollection EmailTeams { get; public set; }
    public TimeSpan EmailFrequencyPeriod { get; public set; }
    public EmailPriority EmailPriority { get; public set; }
    public Nullable`1<DateTimeOffset> EmailDigestLastProcessed { get; public set; }
    public Nullable`1<long> EmailDigestLastProcessedEventAutoId { get; public set; }
    public string EmailShowDatesInTimeZoneId { get; public set; }
    public string WebhookURI { get; public set; }
    public ReferenceCollection WebhookTeams { get; public set; }
    public TimeSpan WebhookTimeout { get; public set; }
    public string WebhookHeaderKey { get; public set; }
    public string WebhookHeaderValue { get; public set; }
    public Nullable`1<DateTimeOffset> WebhookLastProcessed { get; public set; }
    public Nullable`1<long> WebhookLastProcessedEventAutoId { get; public set; }
    [CompilerGeneratedAttribute]
public EventNotificationSubscriptionFilter get_Filter();
    [CompilerGeneratedAttribute]
public void set_Filter(EventNotificationSubscriptionFilter value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_EmailTeams();
    [CompilerGeneratedAttribute]
public void set_EmailTeams(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public TimeSpan get_EmailFrequencyPeriod();
    [CompilerGeneratedAttribute]
public void set_EmailFrequencyPeriod(TimeSpan value);
    [CompilerGeneratedAttribute]
public EmailPriority get_EmailPriority();
    [CompilerGeneratedAttribute]
public void set_EmailPriority(EmailPriority value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_EmailDigestLastProcessed();
    [CompilerGeneratedAttribute]
public void set_EmailDigestLastProcessed(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_EmailDigestLastProcessedEventAutoId();
    [CompilerGeneratedAttribute]
public void set_EmailDigestLastProcessedEventAutoId(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public string get_EmailShowDatesInTimeZoneId();
    [CompilerGeneratedAttribute]
public void set_EmailShowDatesInTimeZoneId(string value);
    [CompilerGeneratedAttribute]
public string get_WebhookURI();
    [CompilerGeneratedAttribute]
public void set_WebhookURI(string value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_WebhookTeams();
    [CompilerGeneratedAttribute]
public void set_WebhookTeams(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public TimeSpan get_WebhookTimeout();
    [CompilerGeneratedAttribute]
public void set_WebhookTimeout(TimeSpan value);
    [CompilerGeneratedAttribute]
public string get_WebhookHeaderKey();
    [CompilerGeneratedAttribute]
public void set_WebhookHeaderKey(string value);
    [CompilerGeneratedAttribute]
public string get_WebhookHeaderValue();
    [CompilerGeneratedAttribute]
public void set_WebhookHeaderValue(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_WebhookLastProcessed();
    [CompilerGeneratedAttribute]
public void set_WebhookLastProcessed(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_WebhookLastProcessedEventAutoId();
    [CompilerGeneratedAttribute]
public void set_WebhookLastProcessedEventAutoId(Nullable`1<long> value);
}
public class Octopus.Client.Model.EventNotificationSubscriptionFilter : object {
    [CompilerGeneratedAttribute]
private IList`1<string> <Users>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Projects>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <ProjectGroups>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Environments>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <EventGroups>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <EventCategories>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <EventAgents>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Tenants>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <Tags>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <DocumentTypes>k__BackingField;
    public IList`1<string> Users { get; public set; }
    public IList`1<string> Projects { get; public set; }
    public IList`1<string> ProjectGroups { get; public set; }
    public IList`1<string> Environments { get; public set; }
    public IList`1<string> EventGroups { get; public set; }
    public IList`1<string> EventCategories { get; public set; }
    public IList`1<string> EventAgents { get; public set; }
    public IList`1<string> Tenants { get; public set; }
    public IList`1<string> Tags { get; public set; }
    public IList`1<string> DocumentTypes { get; public set; }
    [CompilerGeneratedAttribute]
public IList`1<string> get_Users();
    [CompilerGeneratedAttribute]
public void set_Users(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Projects();
    [CompilerGeneratedAttribute]
public void set_Projects(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_ProjectGroups();
    [CompilerGeneratedAttribute]
public void set_ProjectGroups(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Environments();
    [CompilerGeneratedAttribute]
public void set_Environments(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_EventGroups();
    [CompilerGeneratedAttribute]
public void set_EventGroups(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_EventCategories();
    [CompilerGeneratedAttribute]
public void set_EventCategories(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_EventAgents();
    [CompilerGeneratedAttribute]
public void set_EventAgents(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Tenants();
    [CompilerGeneratedAttribute]
public void set_Tenants(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Tags();
    [CompilerGeneratedAttribute]
public void set_Tags(IList`1<string> value);
    [CompilerGeneratedAttribute]
public IList`1<string> get_DocumentTypes();
    [CompilerGeneratedAttribute]
public void set_DocumentTypes(IList`1<string> value);
}
public class Octopus.Client.Model.EventReference : object {
    private string referencedDocumentId;
    private int startIndex;
    private int length;
    public string ReferencedDocumentId { get; }
    public int StartIndex { get; }
    public int Length { get; }
    public EventReference(string referencedDocumentId, int startIndex, int length);
    public string get_ReferencedDocumentId();
    public int get_StartIndex();
    public int get_Length();
}
public class Octopus.Client.Model.EventResource : Resource {
    [CompilerGeneratedAttribute]
private ReferenceCollection <RelatedDocumentIds>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Category>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Username>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsService>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IdentityEstablishedWith>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserAgent>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <Occurred>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MessageHtml>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<EventReference> <MessageReferences>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Comments>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Details>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IpAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    public ReferenceCollection RelatedDocumentIds { get; public set; }
    public string Category { get; public set; }
    public string UserId { get; public set; }
    public string Username { get; public set; }
    public bool IsService { get; public set; }
    public string IdentityEstablishedWith { get; public set; }
    public string UserAgent { get; public set; }
    public DateTimeOffset Occurred { get; public set; }
    public string Message { get; public set; }
    public string MessageHtml { get; public set; }
    public List`1<EventReference> MessageReferences { get; public set; }
    public string Comments { get; public set; }
    public string Details { get; public set; }
    public string IpAddress { get; public set; }
    public string SpaceId { get; public set; }
    [CompilerGeneratedAttribute]
public ReferenceCollection get_RelatedDocumentIds();
    [CompilerGeneratedAttribute]
public void set_RelatedDocumentIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public string get_Category();
    [CompilerGeneratedAttribute]
public void set_Category(string value);
    [CompilerGeneratedAttribute]
public string get_UserId();
    [CompilerGeneratedAttribute]
public void set_UserId(string value);
    [CompilerGeneratedAttribute]
public string get_Username();
    [CompilerGeneratedAttribute]
public void set_Username(string value);
    [CompilerGeneratedAttribute]
public bool get_IsService();
    [CompilerGeneratedAttribute]
public void set_IsService(bool value);
    [CompilerGeneratedAttribute]
public string get_IdentityEstablishedWith();
    [CompilerGeneratedAttribute]
public void set_IdentityEstablishedWith(string value);
    [CompilerGeneratedAttribute]
public string get_UserAgent();
    [CompilerGeneratedAttribute]
public void set_UserAgent(string value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_Occurred();
    [CompilerGeneratedAttribute]
public void set_Occurred(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_MessageHtml();
    [CompilerGeneratedAttribute]
public void set_MessageHtml(string value);
    [CompilerGeneratedAttribute]
public List`1<EventReference> get_MessageReferences();
    [CompilerGeneratedAttribute]
public void set_MessageReferences(List`1<EventReference> value);
    [CompilerGeneratedAttribute]
public string get_Comments();
    [CompilerGeneratedAttribute]
public void set_Comments(string value);
    [CompilerGeneratedAttribute]
public string get_Details();
    [CompilerGeneratedAttribute]
public void set_Details(string value);
    [CompilerGeneratedAttribute]
public string get_IpAddress();
    [CompilerGeneratedAttribute]
public void set_IpAddress(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
}
public class Octopus.Client.Model.EventRetention.ArchivedEventFileResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <ModifiedDate>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <CreatedDate>k__BackingField;
    [CompilerGeneratedAttribute]
private double <FileBytes>k__BackingField;
    [TrimAttribute]
public string Name { get; public set; }
    public Nullable`1<DateTimeOffset> ModifiedDate { get; public set; }
    public Nullable`1<DateTimeOffset> CreatedDate { get; public set; }
    public double FileBytes { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_ModifiedDate();
    [CompilerGeneratedAttribute]
public void set_ModifiedDate(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_CreatedDate();
    [CompilerGeneratedAttribute]
public void set_CreatedDate(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public double get_FileBytes();
    [CompilerGeneratedAttribute]
public void set_FileBytes(double value);
}
public class Octopus.Client.Model.EventRetention.EventRetentionConfigurationResource : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private int <EventRetentionDays>k__BackingField;
    [CompilerGeneratedAttribute]
private LinkCollection <Links>k__BackingField;
    public string Id { get; public set; }
    [WriteableAttribute]
public int EventRetentionDays { get; public set; }
    public LinkCollection Links { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public int get_EventRetentionDays();
    [CompilerGeneratedAttribute]
public void set_EventRetentionDays(int value);
    [CompilerGeneratedAttribute]
public sealed virtual LinkCollection get_Links();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Links(LinkCollection value);
}
public enum Octopus.Client.Model.EventScope : Enum {
    public int value__;
    public static EventScope Application;
    public static EventScope Project;
    public static EventScope Release;
    public static EventScope Deployment;
}
internal static class Octopus.Client.Model.ExecutionEnvironment : object {
    public static bool IsRunningOnNix { get; }
    public static bool IsRunningOnMac { get; }
    public static bool get_IsRunningOnNix();
    private static int uname(IntPtr buf);
    public static bool get_IsRunningOnMac();
}
public class Octopus.Client.Model.ExtensionSettingsValues : object {
    [CompilerGeneratedAttribute]
private string <ExtensionId>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Values>k__BackingField;
    public string ExtensionId { get; public set; }
    public object Values { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ExtensionId();
    [CompilerGeneratedAttribute]
public void set_ExtensionId(string value);
    [CompilerGeneratedAttribute]
public object get_Values();
    [CompilerGeneratedAttribute]
public void set_Values(object value);
}
public class Octopus.Client.Model.ExternalSecurityGroupResource : Resource {
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    public string DisplayName { get; public set; }
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
}
public class Octopus.Client.Model.FeaturesConfigurationResource : Resource {
    [CompilerGeneratedAttribute]
private bool <IsBuiltInWorkerEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsCommunityActionTemplatesEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsKubernetesEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsHelpSidebarEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HelpSidebarSupportLink>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HelpSidebarSupportLinkLabel>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsActionContainersEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsConfigurationAsCodeEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsStepUiFrameworkEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsServiceNowIntegrationEnabled>k__BackingField;
    [WriteableAttribute]
public bool IsBuiltInWorkerEnabled { get; public set; }
    [WriteableAttribute]
public bool IsCommunityActionTemplatesEnabled { get; public set; }
    [WriteableAttribute]
public bool IsKubernetesEnabled { get; public set; }
    [WriteableAttribute]
public bool IsHelpSidebarEnabled { get; public set; }
    [WriteableAttribute]
public string HelpSidebarSupportLink { get; public set; }
    [WriteableAttribute]
public string HelpSidebarSupportLinkLabel { get; public set; }
    [WriteableAttribute]
public bool IsActionContainersEnabled { get; public set; }
    [WriteableAttribute]
public bool IsConfigurationAsCodeEnabled { get; public set; }
    [WriteableAttribute]
public bool IsStepUiFrameworkEnabled { get; public set; }
    [WriteableAttribute]
public bool IsServiceNowIntegrationEnabled { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_IsBuiltInWorkerEnabled();
    [CompilerGeneratedAttribute]
public void set_IsBuiltInWorkerEnabled(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsCommunityActionTemplatesEnabled();
    [CompilerGeneratedAttribute]
public void set_IsCommunityActionTemplatesEnabled(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsKubernetesEnabled();
    [CompilerGeneratedAttribute]
public void set_IsKubernetesEnabled(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsHelpSidebarEnabled();
    [CompilerGeneratedAttribute]
public void set_IsHelpSidebarEnabled(bool value);
    [CompilerGeneratedAttribute]
public string get_HelpSidebarSupportLink();
    [CompilerGeneratedAttribute]
public void set_HelpSidebarSupportLink(string value);
    [CompilerGeneratedAttribute]
public string get_HelpSidebarSupportLinkLabel();
    [CompilerGeneratedAttribute]
public void set_HelpSidebarSupportLinkLabel(string value);
    [CompilerGeneratedAttribute]
public bool get_IsActionContainersEnabled();
    [CompilerGeneratedAttribute]
public void set_IsActionContainersEnabled(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsConfigurationAsCodeEnabled();
    [CompilerGeneratedAttribute]
public void set_IsConfigurationAsCodeEnabled(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsStepUiFrameworkEnabled();
    [CompilerGeneratedAttribute]
public void set_IsStepUiFrameworkEnabled(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsServiceNowIntegrationEnabled();
    [CompilerGeneratedAttribute]
public void set_IsServiceNowIntegrationEnabled(bool value);
}
public class Octopus.Client.Model.FeedResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private FeedType <FeedType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Slug>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<PackageAcquisitionLocation> <PackageAcquisitionLocationOptions>k__BackingField;
    [WriteableAttribute]
public string Name { get; public set; }
    [WriteableOnCreateAttribute]
public FeedType FeedType { get; }
    public string SpaceId { get; public set; }
    public string Slug { get; public set; }
    public IList`1<PackageAcquisitionLocation> PackageAcquisitionLocationOptions { get; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public virtual FeedType get_FeedType();
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Slug();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Slug(string value);
    [CompilerGeneratedAttribute]
public IList`1<PackageAcquisitionLocation> get_PackageAcquisitionLocationOptions();
}
public enum Octopus.Client.Model.FeedType : Enum {
    public int value__;
    public static FeedType None;
    public static FeedType NuGet;
    public static FeedType Docker;
    public static FeedType Maven;
    public static FeedType OctopusProject;
    public static FeedType GitHub;
    public static FeedType BuiltIn;
    public static FeedType Helm;
    public static FeedType OciRegistry;
    public static FeedType AwsElasticContainerRegistry;
    public static FeedType S3;
    public static FeedType AzureContainerRegistry;
    public static FeedType GoogleContainerRegistry;
    public static FeedType ArtifactoryGeneric;
}
public class Octopus.Client.Model.FileUpload : object {
    [CompilerGeneratedAttribute]
private Stream <Contents>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FileName>k__BackingField;
    public Stream Contents { get; public set; }
    public string FileName { get; public set; }
    [CompilerGeneratedAttribute]
public Stream get_Contents();
    [CompilerGeneratedAttribute]
public void set_Contents(Stream value);
    [CompilerGeneratedAttribute]
public string get_FileName();
    [CompilerGeneratedAttribute]
public void set_FileName(string value);
}
public class Octopus.Client.Model.Forms.Button : object {
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Value>k__BackingField;
    public string Text { get; private set; }
    public object Value { get; private set; }
    public Button(string text, string value);
    [CompilerGeneratedAttribute]
public string get_Text();
    [CompilerGeneratedAttribute]
private void set_Text(string value);
    [CompilerGeneratedAttribute]
public object get_Value();
    [CompilerGeneratedAttribute]
private void set_Value(object value);
}
public class Octopus.Client.Model.Forms.Checkbox : Control {
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    public string Text { get; private set; }
    public Checkbox(string text);
    [CompilerGeneratedAttribute]
public string get_Text();
    [CompilerGeneratedAttribute]
private void set_Text(string value);
    public virtual object CoerceValue(string value);
    public virtual Type GetNativeValueType();
}
public abstract class Octopus.Client.Model.Forms.Control : object {
    public virtual object CoerceValue(string value);
    public virtual Type GetNativeValueType();
}
public class Octopus.Client.Model.Forms.Form : object {
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Values>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<FormElement> <Elements>k__BackingField;
    [JsonPropertyAttribute]
public Dictionary`2<string, string> Values { get; private set; }
    [JsonPropertyAttribute]
public List`1<FormElement> Elements { get; private set; }
    public Form(IEnumerable`1<FormElement> elements, IDictionary`2<string, string> values);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_Values();
    [CompilerGeneratedAttribute]
private void set_Values(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public List`1<FormElement> get_Elements();
    [CompilerGeneratedAttribute]
private void set_Elements(List`1<FormElement> value);
}
public class Octopus.Client.Model.Forms.FormElement : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Control <Control>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsValueRequired>k__BackingField;
    public string Name { get; private set; }
    public Control Control { get; private set; }
    public bool IsValueRequired { get; private set; }
    public FormElement(string name, Control control, bool isValueRequired);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
    [CompilerGeneratedAttribute]
public Control get_Control();
    [CompilerGeneratedAttribute]
private void set_Control(Control value);
    [CompilerGeneratedAttribute]
public bool get_IsValueRequired();
    [CompilerGeneratedAttribute]
private void set_IsValueRequired(bool value);
}
[ExtensionAttribute]
public static class Octopus.Client.Model.Forms.FormExtensions : object {
    [ExtensionAttribute]
public static void AddElement(Form form, string name, Control element, string initialValue, bool isValueRequired);
    [ExtensionAttribute]
public static void SetValue(Form form, string name, string value);
    [ExtensionAttribute]
private static FormElement GetElement(Form form, string name);
    [ExtensionAttribute]
private static string GetRawValue(Form form, string name);
    [ExtensionAttribute]
public static object GetCoercedValue(Form form, string name);
    [ExtensionAttribute]
public static void UpdateValues(Form form, IDictionary`2<string, string> values);
    [ExtensionAttribute]
public static IList`1<string> Validate(Form form);
}
public class Octopus.Client.Model.Forms.Paragraph : Control {
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    public string Text { get; private set; }
    public Paragraph(string text);
    [CompilerGeneratedAttribute]
public string get_Text();
    [CompilerGeneratedAttribute]
private void set_Text(string value);
}
public class Octopus.Client.Model.Forms.SubmitButtonGroup : Control {
    [CompilerGeneratedAttribute]
private List`1<Button> <Buttons>k__BackingField;
    public List`1<Button> Buttons { get; private set; }
    public SubmitButtonGroup(List`1<Button> buttons);
    [CompilerGeneratedAttribute]
public List`1<Button> get_Buttons();
    [CompilerGeneratedAttribute]
private void set_Buttons(List`1<Button> value);
    public virtual object CoerceValue(string value);
    public virtual Type GetNativeValueType();
}
public class Octopus.Client.Model.Forms.TextArea : Control {
    [CompilerGeneratedAttribute]
private string <Label>k__BackingField;
    public string Label { get; private set; }
    public TextArea(string label);
    [CompilerGeneratedAttribute]
public string get_Label();
    [CompilerGeneratedAttribute]
private void set_Label(string value);
    public virtual object CoerceValue(string value);
    public virtual Type GetNativeValueType();
}
public class Octopus.Client.Model.Forms.VariableValue : Control {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Label>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsSecure>k__BackingField;
    public string Name { get; private set; }
    public string Label { get; private set; }
    public string Description { get; private set; }
    public bool IsSecure { get; private set; }
    public VariableValue(string name, string label, string description, bool isSecure);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Label();
    [CompilerGeneratedAttribute]
private void set_Label(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
private void set_Description(string value);
    [CompilerGeneratedAttribute]
public bool get_IsSecure();
    [CompilerGeneratedAttribute]
private void set_IsSecure(bool value);
    public virtual object CoerceValue(string value);
    public virtual Type GetNativeValueType();
}
public class Octopus.Client.Model.GeneratedAccessTokenResource : object {
    [CompilerGeneratedAttribute]
private string <AccessToken>k__BackingField;
    public string AccessToken { get; public set; }
    [CompilerGeneratedAttribute]
public string get_AccessToken();
    [CompilerGeneratedAttribute]
public void set_AccessToken(string value);
}
public class Octopus.Client.Model.Git.ConvertProjectToGitCommand : object {
    [CompilerGeneratedAttribute]
private string <CommitMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private GitPersistenceSettingsResource <VersionControlSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InitialCommitBranchName>k__BackingField;
    [RequiredAttribute]
public string CommitMessage { get; public set; }
    [RequiredAttribute]
public GitPersistenceSettingsResource VersionControlSettings { get; public set; }
    public string InitialCommitBranchName { get; public set; }
    [CompilerGeneratedAttribute]
public string get_CommitMessage();
    [CompilerGeneratedAttribute]
public void set_CommitMessage(string value);
    [CompilerGeneratedAttribute]
public GitPersistenceSettingsResource get_VersionControlSettings();
    [CompilerGeneratedAttribute]
public void set_VersionControlSettings(GitPersistenceSettingsResource value);
    [CompilerGeneratedAttribute]
public string get_InitialCommitBranchName();
    [CompilerGeneratedAttribute]
public void set_InitialCommitBranchName(string value);
}
public class Octopus.Client.Model.Git.ConvertProjectToGitResponse : object {
    [CompilerGeneratedAttribute]
private MessageCollection <Messages>k__BackingField;
    public MessageCollection Messages { get; }
    [CompilerGeneratedAttribute]
public sealed virtual MessageCollection get_Messages();
}
public class Octopus.Client.Model.Git.ConvertProjectVariablesToGitCommand : object {
    [CompilerGeneratedAttribute]
private string <CommitMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Branch>k__BackingField;
    [WriteableAttribute]
public string CommitMessage { get; public set; }
    [WriteableAttribute]
public string Branch { get; public set; }
    [CompilerGeneratedAttribute]
public string get_CommitMessage();
    [CompilerGeneratedAttribute]
public void set_CommitMessage(string value);
    [CompilerGeneratedAttribute]
public string get_Branch();
    [CompilerGeneratedAttribute]
public void set_Branch(string value);
}
public class Octopus.Client.Model.Git.ConvertProjectVariablesToGitResponse : object {
}
public class Octopus.Client.Model.Git.GitReferenceResource : object {
    [CompilerGeneratedAttribute]
private string <GitRef>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GitCommit>k__BackingField;
    [WriteableOnCreateAttribute]
public string GitRef { get; public set; }
    public string GitCommit { get; public set; }
    [CompilerGeneratedAttribute]
public string get_GitRef();
    [CompilerGeneratedAttribute]
public void set_GitRef(string value);
    [CompilerGeneratedAttribute]
public string get_GitCommit();
    [CompilerGeneratedAttribute]
public void set_GitCommit(string value);
}
public interface Octopus.Client.Model.Git.IHaveCustomerVisibleMessages {
    public MessageCollection Messages { get; }
    public abstract virtual MessageCollection get_Messages();
}
public class Octopus.Client.Model.Git.MessageCollection : List`1<string> {
}
public class Octopus.Client.Model.GitBranchResource : ValidatedGitReferenceResource {
    [CompilerGeneratedAttribute]
private bool <IsProtected>k__BackingField;
    public bool IsProtected { get; }
    [JsonConstructorAttribute]
public GitBranchResource(string canonicalName, bool isProtected);
    public GitBranchResource(string canonicalName);
    [CompilerGeneratedAttribute]
public bool get_IsProtected();
}
public class Octopus.Client.Model.GitCommitResource : ValidatedGitReferenceResource {
    public GitCommitResource(string canonicalName);
}
public class Octopus.Client.Model.GitCredentials.CreateGitCredentialCommand : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private GitCredentialDetails <Details>k__BackingField;
    [WriteableAttribute]
public string Name { get; public set; }
    [WriteableAttribute]
public string Description { get; public set; }
    [WriteableAttribute]
public GitCredentialDetails Details { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public GitCredentialDetails get_Details();
    [CompilerGeneratedAttribute]
public void set_Details(GitCredentialDetails value);
}
internal class Octopus.Client.Model.GitCredentials.CreateGitCredentialResponse : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [WriteableAttribute]
public string Id { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
}
public abstract class Octopus.Client.Model.GitCredentials.GitCredentialDetails : object {
    public GitCredentialType Type { get; }
    public abstract virtual GitCredentialType get_Type();
}
public class Octopus.Client.Model.GitCredentials.GitCredentialResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private GitCredentialDetails <Details>k__BackingField;
    [WriteableAttribute]
public string Name { get; public set; }
    [WriteableAttribute]
public string SpaceId { get; public set; }
    [WriteableAttribute]
public string Description { get; public set; }
    [WriteableAttribute]
public GitCredentialDetails Details { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public GitCredentialDetails get_Details();
    [CompilerGeneratedAttribute]
public void set_Details(GitCredentialDetails value);
}
public enum Octopus.Client.Model.GitCredentials.GitCredentialType : Enum {
    public int value__;
    public static GitCredentialType UsernamePassword;
}
public class Octopus.Client.Model.GitCredentials.GitCredentialUsage : object {
    [CompilerGeneratedAttribute]
private GitCredentialUsageProject[] <Projects>k__BackingField;
    [CompilerGeneratedAttribute]
private int <OtherProjects>k__BackingField;
    [WriteableAttribute]
public GitCredentialUsageProject[] Projects { get; public set; }
    [WriteableAttribute]
public int OtherProjects { get; public set; }
    [CompilerGeneratedAttribute]
public GitCredentialUsageProject[] get_Projects();
    [CompilerGeneratedAttribute]
public void set_Projects(GitCredentialUsageProject[] value);
    [CompilerGeneratedAttribute]
public int get_OtherProjects();
    [CompilerGeneratedAttribute]
public void set_OtherProjects(int value);
}
public class Octopus.Client.Model.GitCredentials.GitCredentialUsageProject : object {
    [CompilerGeneratedAttribute]
private string <ProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Slug>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [WriteableAttribute]
public string ProjectId { get; public set; }
    [WriteableAttribute]
public string Slug { get; public set; }
    [WriteableAttribute]
public string Name { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ProjectId();
    [CompilerGeneratedAttribute]
public void set_ProjectId(string value);
    [CompilerGeneratedAttribute]
public string get_Slug();
    [CompilerGeneratedAttribute]
public void set_Slug(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
}
public class Octopus.Client.Model.GitCredentials.UsernamePasswordGitCredentialDetails : GitCredentialDetails {
    [CompilerGeneratedAttribute]
private GitCredentialType <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Username>k__BackingField;
    [CompilerGeneratedAttribute]
private SensitiveValue <Password>k__BackingField;
    public GitCredentialType Type { get; }
    [WriteableAttribute]
public string Username { get; public set; }
    [WriteableAttribute]
public SensitiveValue Password { get; public set; }
    [CompilerGeneratedAttribute]
public virtual GitCredentialType get_Type();
    [CompilerGeneratedAttribute]
public string get_Username();
    [CompilerGeneratedAttribute]
public void set_Username(string value);
    [CompilerGeneratedAttribute]
public SensitiveValue get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(SensitiveValue value);
}
[<775b3474-4bdb-4dfa-9504-95167a40b14b>NullableContextAttribute("1")]
[<7ee1374a-350e-48d8-b14b-16bf02905262>NullableAttribute("0")]
public class Octopus.Client.Model.GitDependencyCollectionResource : object {
    private Dictionary`2<string, GitDependencyResource> nameMap;
    [<7ee1374a-350e-48d8-b14b-16bf02905262>NullableAttribute("2")]
public GitDependencyResource PrimaryGitDependency { get; }
    public bool HasPrimaryGitDependency { get; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    public GitDependencyCollectionResource(IEnumerable`1<GitDependencyResource> gitDependencies);
    [<775b3474-4bdb-4dfa-9504-95167a40b14b>NullableContextAttribute("2")]
public GitDependencyResource get_PrimaryGitDependency();
    public bool get_HasPrimaryGitDependency();
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual void Add(GitDependencyResource item);
    public sealed virtual bool Contains(GitDependencyResource item);
    public sealed virtual void CopyTo(GitDependencyResource[] array, int arrayIndex);
    public sealed virtual bool Remove(GitDependencyResource item);
    public sealed virtual void Clear();
    public sealed virtual IEnumerator`1<GitDependencyResource> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public GitDependencyResource GetByName(string name);
    public bool TryGetByName(string name, GitDependencyResource& gitDependency);
}
[<7ee1374a-350e-48d8-b14b-16bf02905262>NullableAttribute("0")]
[<775b3474-4bdb-4dfa-9504-95167a40b14b>NullableContextAttribute("1")]
public class Octopus.Client.Model.GitDependencyResource : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RepositoryUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DefaultBranch>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <FilePathFilters>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GitCredentialType>k__BackingField;
    [<7ee1374a-350e-48d8-b14b-16bf02905262>NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <GitCredentialId>k__BackingField;
    [CompilerGeneratedAttribute]
[<7ee1374a-350e-48d8-b14b-16bf02905262>NullableAttribute("2")]
private string <StepPackageInputsReferenceId>k__BackingField;
    public string Name { get; }
    public string RepositoryUri { get; }
    public string DefaultBranch { get; }
    public String[] FilePathFilters { get; }
    public string GitCredentialType { get; }
    [<7ee1374a-350e-48d8-b14b-16bf02905262>NullableAttribute("2")]
public string GitCredentialId { get; }
    [<7ee1374a-350e-48d8-b14b-16bf02905262>NullableAttribute("2")]
public string StepPackageInputsReferenceId { get; public set; }
    public GitDependencyResource(string repositoryUri, string defaultBranch, string gitCredentialType, string gitCredentialId, String[] filePathFilters, string name, string stepPackageInputsReferenceId);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public string get_RepositoryUri();
    [CompilerGeneratedAttribute]
public string get_DefaultBranch();
    [CompilerGeneratedAttribute]
public String[] get_FilePathFilters();
    [CompilerGeneratedAttribute]
public string get_GitCredentialType();
    [<775b3474-4bdb-4dfa-9504-95167a40b14b>NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_GitCredentialId();
    [<775b3474-4bdb-4dfa-9504-95167a40b14b>NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_StepPackageInputsReferenceId();
    [<775b3474-4bdb-4dfa-9504-95167a40b14b>NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_StepPackageInputsReferenceId(string value);
}
public class Octopus.Client.Model.GitHubFeedResource : FeedResource {
    [CompilerGeneratedAttribute]
private int <DownloadAttempts>k__BackingField;
    [CompilerGeneratedAttribute]
private int <DownloadRetryBackoffSeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FeedUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Username>k__BackingField;
    [CompilerGeneratedAttribute]
private SensitiveValue <Password>k__BackingField;
    public FeedType FeedType { get; }
    [WriteableAttribute]
public int DownloadAttempts { get; public set; }
    [WriteableAttribute]
public int DownloadRetryBackoffSeconds { get; public set; }
    [WriteableAttribute]
public string FeedUri { get; public set; }
    [WriteableAttribute]
public string Username { get; public set; }
    [WriteableAttribute]
public SensitiveValue Password { get; public set; }
    public virtual FeedType get_FeedType();
    [CompilerGeneratedAttribute]
public int get_DownloadAttempts();
    [CompilerGeneratedAttribute]
public void set_DownloadAttempts(int value);
    [CompilerGeneratedAttribute]
public int get_DownloadRetryBackoffSeconds();
    [CompilerGeneratedAttribute]
public void set_DownloadRetryBackoffSeconds(int value);
    [CompilerGeneratedAttribute]
public string get_FeedUri();
    [CompilerGeneratedAttribute]
public void set_FeedUri(string value);
    [CompilerGeneratedAttribute]
public string get_Username();
    [CompilerGeneratedAttribute]
public void set_Username(string value);
    [CompilerGeneratedAttribute]
public SensitiveValue get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(SensitiveValue value);
}
public class Octopus.Client.Model.GitHubProjectGitCredentialResource : ProjectGitCredentialResource {
    [CompilerGeneratedAttribute]
private ProjectGitCredentialType <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    public ProjectGitCredentialType Type { get; }
    [WriteableAttribute]
public string Id { get; public set; }
    [CompilerGeneratedAttribute]
public virtual ProjectGitCredentialType get_Type();
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
}
public class Octopus.Client.Model.GitPersistenceSettingsConversionStateResource : object {
    [CompilerGeneratedAttribute]
private bool <VariablesAreInGit>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <RunbooksAreInGit>k__BackingField;
    public bool VariablesAreInGit { get; public set; }
    public bool RunbooksAreInGit { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_VariablesAreInGit();
    [CompilerGeneratedAttribute]
public void set_VariablesAreInGit(bool value);
    [CompilerGeneratedAttribute]
public bool get_RunbooksAreInGit();
    [CompilerGeneratedAttribute]
public void set_RunbooksAreInGit(bool value);
}
public class Octopus.Client.Model.GitPersistenceSettingsResource : PersistenceSettingsResource {
    [CompilerGeneratedAttribute]
private PersistenceSettingsType <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [CompilerGeneratedAttribute]
private ProjectGitCredentialResource <Credentials>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DefaultBranch>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BasePath>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ProtectedDefaultBranch>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <ProtectedBranchNamePatterns>k__BackingField;
    [CompilerGeneratedAttribute]
private GitPersistenceSettingsConversionStateResource <ConversionState>k__BackingField;
    public PersistenceSettingsType Type { get; }
    [WriteableAttribute]
public string Url { get; public set; }
    [WriteableAttribute]
public ProjectGitCredentialResource Credentials { get; public set; }
    [WriteableAttribute]
public string DefaultBranch { get; public set; }
    [WriteableAttribute]
public string BasePath { get; public set; }
    [WriteableAttribute]
public bool ProtectedDefaultBranch { get; public set; }
    [WriteableAttribute]
public List`1<string> ProtectedBranchNamePatterns { get; public set; }
    public GitPersistenceSettingsConversionStateResource ConversionState { get; public set; }
    [CompilerGeneratedAttribute]
public virtual PersistenceSettingsType get_Type();
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
    [CompilerGeneratedAttribute]
public ProjectGitCredentialResource get_Credentials();
    [CompilerGeneratedAttribute]
public void set_Credentials(ProjectGitCredentialResource value);
    [CompilerGeneratedAttribute]
public string get_DefaultBranch();
    [CompilerGeneratedAttribute]
public void set_DefaultBranch(string value);
    [CompilerGeneratedAttribute]
public string get_BasePath();
    [CompilerGeneratedAttribute]
public void set_BasePath(string value);
    [CompilerGeneratedAttribute]
public bool get_ProtectedDefaultBranch();
    [CompilerGeneratedAttribute]
public void set_ProtectedDefaultBranch(bool value);
    [CompilerGeneratedAttribute]
public List`1<string> get_ProtectedBranchNamePatterns();
    [CompilerGeneratedAttribute]
public void set_ProtectedBranchNamePatterns(List`1<string> value);
    [CompilerGeneratedAttribute]
public GitPersistenceSettingsConversionStateResource get_ConversionState();
    [CompilerGeneratedAttribute]
public void set_ConversionState(GitPersistenceSettingsConversionStateResource value);
}
public class Octopus.Client.Model.GitTagResource : ValidatedGitReferenceResource {
    public GitTagResource(string canonicalName);
}
public class Octopus.Client.Model.GoogleContainerRegistryFeedResource : DockerFeedResource {
    public FeedType FeedType { get; }
    public virtual FeedType get_FeedType();
}
public enum Octopus.Client.Model.GuidedFailureMode : Enum {
    public int value__;
    public static GuidedFailureMode EnvironmentDefault;
    public static GuidedFailureMode Off;
    public static GuidedFailureMode On;
}
public enum Octopus.Client.Model.HealthCheckType : Enum {
    public int value__;
    public static HealthCheckType RunScript;
    public static HealthCheckType OnlyConnectivity;
}
public class Octopus.Client.Model.HelmFeedResource : FeedResource {
    [CompilerGeneratedAttribute]
private string <FeedUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Username>k__BackingField;
    [CompilerGeneratedAttribute]
private SensitiveValue <Password>k__BackingField;
    public FeedType FeedType { get; }
    [WriteableAttribute]
public string FeedUri { get; public set; }
    [WriteableAttribute]
public string Username { get; public set; }
    [WriteableAttribute]
public SensitiveValue Password { get; public set; }
    public virtual FeedType get_FeedType();
    [CompilerGeneratedAttribute]
public string get_FeedUri();
    [CompilerGeneratedAttribute]
public void set_FeedUri(string value);
    [CompilerGeneratedAttribute]
public string get_Username();
    [CompilerGeneratedAttribute]
public void set_Username(string value);
    [CompilerGeneratedAttribute]
public SensitiveValue get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(SensitiveValue value);
}
public interface Octopus.Client.Model.IAuditedResource {
    public Nullable`1<DateTimeOffset> LastModifiedOn { get; public set; }
    public string LastModifiedBy { get; public set; }
    public abstract virtual Nullable`1<DateTimeOffset> get_LastModifiedOn();
    public abstract virtual void set_LastModifiedOn(Nullable`1<DateTimeOffset> value);
    public abstract virtual string get_LastModifiedBy();
    public abstract virtual void set_LastModifiedBy(string value);
}
public interface Octopus.Client.Model.ICommitCommand {
    public string ChangeDescription { get; public set; }
    public abstract virtual string get_ChangeDescription();
    public abstract virtual void set_ChangeDescription(string value);
}
public class Octopus.Client.Model.IconResource : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Color>k__BackingField;
    public string Id { get; public set; }
    public string Color { get; public set; }
    public IconResource(string id, string color);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Color();
    [CompilerGeneratedAttribute]
public void set_Color(string value);
}
public class Octopus.Client.Model.IdentityClaimResource : object {
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsIdentifyingClaim>k__BackingField;
    public string Value { get; public set; }
    public bool IsIdentifyingClaim { get; public set; }
    public IdentityClaimResource(string value, bool isIdentifyingClaim);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    [CompilerGeneratedAttribute]
public bool get_IsIdentifyingClaim();
    [CompilerGeneratedAttribute]
public void set_IsIdentifyingClaim(bool value);
}
public class Octopus.Client.Model.IdentityResource : object {
    [CompilerGeneratedAttribute]
private string <IdentityProviderName>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, IdentityClaimResource> <Claims>k__BackingField;
    public string IdentityProviderName { get; public set; }
    public Dictionary`2<string, IdentityClaimResource> Claims { get; }
    public IdentityResource(string identityProviderName);
    [CompilerGeneratedAttribute]
public string get_IdentityProviderName();
    [CompilerGeneratedAttribute]
public void set_IdentityProviderName(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, IdentityClaimResource> get_Claims();
}
internal interface Octopus.Client.Model.IEnvironmentHelper {
    public abstract virtual String[] SafelyGetEnvironmentInformation();
}
public interface Octopus.Client.Model.IExecutionResource {
    public string Name { get; public set; }
    public DateTimeOffset Created { get; public set; }
    public bool ForcePackageDownload { get; public set; }
    public string Comments { get; public set; }
    public ReferenceCollection SkipActions { get; public set; }
    public ReferenceCollection SpecificMachineIds { get; public set; }
    public ReferenceCollection ExcludedMachineIds { get; public set; }
    public bool UseGuidedFailure { get; public set; }
    public RetentionPeriod TentacleRetentionPeriod { get; public set; }
    public string EnvironmentId { get; public set; }
    public string TenantId { get; public set; }
    public string TaskId { get; public set; }
    public string ProjectId { get; public set; }
    public string ManifestVariableSetId { get; public set; }
    public string DeployedBy { get; public set; }
    public string DeployedById { get; public set; }
    public bool FailureEncountered { get; }
    public ReferenceCollection DeployedToMachineIds { get; public set; }
    public Dictionary`2<string, string> FormValues { get; public set; }
    public Nullable`1<DateTimeOffset> QueueTime { get; public set; }
    public Nullable`1<DateTimeOffset> QueueTimeExpiry { get; public set; }
    public abstract virtual string get_Name();
    public abstract virtual void set_Name(string value);
    public abstract virtual DateTimeOffset get_Created();
    public abstract virtual void set_Created(DateTimeOffset value);
    public abstract virtual bool get_ForcePackageDownload();
    public abstract virtual void set_ForcePackageDownload(bool value);
    public abstract virtual string get_Comments();
    public abstract virtual void set_Comments(string value);
    public abstract virtual ReferenceCollection get_SkipActions();
    public abstract virtual void set_SkipActions(ReferenceCollection value);
    public abstract virtual ReferenceCollection get_SpecificMachineIds();
    public abstract virtual void set_SpecificMachineIds(ReferenceCollection value);
    public abstract virtual ReferenceCollection get_ExcludedMachineIds();
    public abstract virtual void set_ExcludedMachineIds(ReferenceCollection value);
    public abstract virtual bool get_UseGuidedFailure();
    public abstract virtual void set_UseGuidedFailure(bool value);
    public abstract virtual RetentionPeriod get_TentacleRetentionPeriod();
    public abstract virtual void set_TentacleRetentionPeriod(RetentionPeriod value);
    public abstract virtual string get_EnvironmentId();
    public abstract virtual void set_EnvironmentId(string value);
    public abstract virtual string get_TenantId();
    public abstract virtual void set_TenantId(string value);
    public abstract virtual string get_TaskId();
    public abstract virtual void set_TaskId(string value);
    public abstract virtual string get_ProjectId();
    public abstract virtual void set_ProjectId(string value);
    public abstract virtual string get_ManifestVariableSetId();
    public abstract virtual void set_ManifestVariableSetId(string value);
    public abstract virtual string get_DeployedBy();
    public abstract virtual void set_DeployedBy(string value);
    public abstract virtual string get_DeployedById();
    public abstract virtual void set_DeployedById(string value);
    public abstract virtual bool get_FailureEncountered();
    public abstract virtual ReferenceCollection get_DeployedToMachineIds();
    public abstract virtual void set_DeployedToMachineIds(ReferenceCollection value);
    public abstract virtual Dictionary`2<string, string> get_FormValues();
    public abstract virtual void set_FormValues(Dictionary`2<string, string> value);
    public abstract virtual Nullable`1<DateTimeOffset> get_QueueTime();
    public abstract virtual void set_QueueTime(Nullable`1<DateTimeOffset> value);
    public abstract virtual Nullable`1<DateTimeOffset> get_QueueTimeExpiry();
    public abstract virtual void set_QueueTimeExpiry(Nullable`1<DateTimeOffset> value);
}
public interface Octopus.Client.Model.IHaveProject {
    public string ProjectId { get; public set; }
    public abstract virtual string get_ProjectId();
    public abstract virtual void set_ProjectId(string value);
}
public interface Octopus.Client.Model.IHaveSlugResource {
    public string Slug { get; public set; }
    public abstract virtual string get_Slug();
    public abstract virtual void set_Slug(string value);
}
public class Octopus.Client.Model.InterruptionResource : Resource {
    private InterruptionType type;
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <Created>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsPending>k__BackingField;
    [CompilerGeneratedAttribute]
private Form <Form>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <RelatedDocumentIds>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <ResponsibleTeamIds>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResponsibleUserId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CanTakeResponsibility>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasResponsibility>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TaskId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CorrelationId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsLinkedToOtherInterruption>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [JsonPropertyAttribute]
public string Title { get; public set; }
    [JsonPropertyAttribute]
public InterruptionType Type { get; public set; }
    [JsonPropertyAttribute]
public DateTimeOffset Created { get; public set; }
    [JsonPropertyAttribute]
public bool IsPending { get; public set; }
    [JsonPropertyAttribute]
public Form Form { get; public set; }
    [JsonPropertyAttribute]
public ReferenceCollection RelatedDocumentIds { get; public set; }
    [JsonPropertyAttribute]
public ReferenceCollection ResponsibleTeamIds { get; public set; }
    [JsonPropertyAttribute]
public string ResponsibleUserId { get; public set; }
    [JsonPropertyAttribute]
public bool CanTakeResponsibility { get; public set; }
    [JsonPropertyAttribute]
public bool HasResponsibility { get; public set; }
    [JsonPropertyAttribute]
public string TaskId { get; public set; }
    [JsonPropertyAttribute]
public string CorrelationId { get; public set; }
    [JsonPropertyAttribute]
public bool IsLinkedToOtherInterruption { get; public set; }
    public string SpaceId { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(string value);
    public InterruptionType get_Type();
    public void set_Type(InterruptionType value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_Created();
    [CompilerGeneratedAttribute]
public void set_Created(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public bool get_IsPending();
    [CompilerGeneratedAttribute]
public void set_IsPending(bool value);
    [CompilerGeneratedAttribute]
public Form get_Form();
    [CompilerGeneratedAttribute]
public void set_Form(Form value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_RelatedDocumentIds();
    [CompilerGeneratedAttribute]
public void set_RelatedDocumentIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_ResponsibleTeamIds();
    [CompilerGeneratedAttribute]
public void set_ResponsibleTeamIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public string get_ResponsibleUserId();
    [CompilerGeneratedAttribute]
public void set_ResponsibleUserId(string value);
    [CompilerGeneratedAttribute]
public bool get_CanTakeResponsibility();
    [CompilerGeneratedAttribute]
public void set_CanTakeResponsibility(bool value);
    [CompilerGeneratedAttribute]
public bool get_HasResponsibility();
    [CompilerGeneratedAttribute]
public void set_HasResponsibility(bool value);
    [CompilerGeneratedAttribute]
public string get_TaskId();
    [CompilerGeneratedAttribute]
public void set_TaskId(string value);
    [CompilerGeneratedAttribute]
public string get_CorrelationId();
    [CompilerGeneratedAttribute]
public void set_CorrelationId(string value);
    [CompilerGeneratedAttribute]
public bool get_IsLinkedToOtherInterruption();
    [CompilerGeneratedAttribute]
public void set_IsLinkedToOtherInterruption(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
}
[<775b3474-4bdb-4dfa-9504-95167a40b14b>NullableContextAttribute("1")]
[<7ee1374a-350e-48d8-b14b-16bf02905262>NullableAttribute("0")]
public class Octopus.Client.Model.InterruptionType : object {
    public static InterruptionType ManualIntervention;
    public static InterruptionType GuidedFailure;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    private string Id { get; }
    public InterruptionType(string id);
    private static InterruptionType();
    [CompilerGeneratedAttribute]
private string get_Id();
    [<775b3474-4bdb-4dfa-9504-95167a40b14b>NullableContextAttribute("2")]
public sealed virtual bool Equals(InterruptionType other);
    [<775b3474-4bdb-4dfa-9504-95167a40b14b>NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(InterruptionType left, InterruptionType right);
    public static bool op_Inequality(InterruptionType left, InterruptionType right);
    public virtual string ToString();
}
public class Octopus.Client.Model.InvitationResource : Resource {
    [CompilerGeneratedAttribute]
private ReferenceCollection <AddToTeamIds>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InvitationCode>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <Expires>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [RequiredAttribute]
[WriteableAttribute]
public ReferenceCollection AddToTeamIds { get; public set; }
    public string InvitationCode { get; public set; }
    public DateTimeOffset Expires { get; public set; }
    public string SpaceId { get; public set; }
    [CompilerGeneratedAttribute]
public ReferenceCollection get_AddToTeamIds();
    [CompilerGeneratedAttribute]
public void set_AddToTeamIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public string get_InvitationCode();
    [CompilerGeneratedAttribute]
public void set_InvitationCode(string value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_Expires();
    [CompilerGeneratedAttribute]
public void set_Expires(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
}
public interface Octopus.Client.Model.IProcessResource {
    public string ProjectId { get; public set; }
    public IList`1<DeploymentStepResource> Steps { get; }
    public int Version { get; public set; }
    public string LastSnapshotId { get; public set; }
    public abstract virtual string get_ProjectId();
    public abstract virtual void set_ProjectId(string value);
    public abstract virtual IList`1<DeploymentStepResource> get_Steps();
    public abstract virtual int get_Version();
    public abstract virtual void set_Version(int value);
    public abstract virtual string get_LastSnapshotId();
    public abstract virtual void set_LastSnapshotId(string value);
    public abstract virtual DeploymentStepResource FindStep(string name);
    public abstract virtual DeploymentStepResource AddOrUpdateStep(string name);
    public abstract virtual IProcessResource RemoveStep(string name);
    public abstract virtual IProcessResource ClearSteps();
}
public interface Octopus.Client.Model.ISnapshotResource {
    public DateTimeOffset Assembled { get; public set; }
    public string ProjectId { get; public set; }
    public List`1<string> LibraryVariableSetSnapshotIds { get; public set; }
    public List`1<SelectedPackage> SelectedPackages { get; }
    public string ProjectVariableSetSnapshotId { get; public set; }
    public abstract virtual DateTimeOffset get_Assembled();
    public abstract virtual void set_Assembled(DateTimeOffset value);
    public abstract virtual string get_ProjectId();
    public abstract virtual void set_ProjectId(string value);
    public abstract virtual List`1<string> get_LibraryVariableSetSnapshotIds();
    public abstract virtual void set_LibraryVariableSetSnapshotIds(List`1<string> value);
    public abstract virtual List`1<SelectedPackage> get_SelectedPackages();
    public abstract virtual string get_ProjectVariableSetSnapshotId();
    public abstract virtual void set_ProjectVariableSetSnapshotId(string value);
}
public class Octopus.Client.Model.IssueTrackers.Commit : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Comment>k__BackingField;
    public string Id { get; public set; }
    public string Comment { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Comment();
    [CompilerGeneratedAttribute]
public void set_Comment(string value);
}
public class Octopus.Client.Model.IssueTrackers.CommitDetails : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LinkUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Comment>k__BackingField;
    public string Id { get; public set; }
    public string LinkUrl { get; public set; }
    public string Comment { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_LinkUrl();
    [CompilerGeneratedAttribute]
public void set_LinkUrl(string value);
    [CompilerGeneratedAttribute]
public string get_Comment();
    [CompilerGeneratedAttribute]
public void set_Comment(string value);
}
public class Octopus.Client.Model.IssueTrackers.WorkItemLink : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LinkUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Source>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    public string Id { get; public set; }
    public string LinkUrl { get; public set; }
    public string Source { get; public set; }
    public string Description { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_LinkUrl();
    [CompilerGeneratedAttribute]
public void set_LinkUrl(string value);
    [CompilerGeneratedAttribute]
public string get_Source();
    [CompilerGeneratedAttribute]
public void set_Source(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
}
internal interface Octopus.Client.Model.IVariableScopeValues {
    public List`1<ReferenceDataItem> Environments { get; public set; }
    public List`1<ReferenceDataItem> Machines { get; public set; }
    public List`1<ReferenceDataItem> Actions { get; public set; }
    public List`1<ReferenceDataItem> Roles { get; public set; }
    public List`1<ReferenceDataItem> Channels { get; public set; }
    public abstract virtual List`1<ReferenceDataItem> get_Environments();
    public abstract virtual void set_Environments(List`1<ReferenceDataItem> value);
    public abstract virtual List`1<ReferenceDataItem> get_Machines();
    public abstract virtual void set_Machines(List`1<ReferenceDataItem> value);
    public abstract virtual List`1<ReferenceDataItem> get_Actions();
    public abstract virtual void set_Actions(List`1<ReferenceDataItem> value);
    public abstract virtual List`1<ReferenceDataItem> get_Roles();
    public abstract virtual void set_Roles(List`1<ReferenceDataItem> value);
    public abstract virtual List`1<ReferenceDataItem> get_Channels();
    public abstract virtual void set_Channels(List`1<ReferenceDataItem> value);
}
public interface Octopus.Client.Model.IVariableTemplateContainer {
    public List`1<ActionTemplateParameterResource> Templates { get; }
    public abstract virtual List`1<ActionTemplateParameterResource> get_Templates();
}
public interface Octopus.Client.Model.IVariableTemplateContainerEditor`1 {
    public abstract virtual TContainer Clear();
    public abstract virtual TContainer AddOrUpdateVariableTemplate(string name, string label, IDictionary`2<string, string> displaySettings);
    public abstract virtual TContainer AddOrUpdateVariableTemplate(string name, string label, IDictionary`2<string, string> displaySettings, string defaultValue, string helpText);
    public abstract virtual TContainer AddOrUpdateSingleLineTextTemplate(string name, string label);
    public abstract virtual TContainer AddOrUpdateSingleLineTextTemplate(string name, string label, string defaultValue, string helpText);
    public abstract virtual TContainer AddOrUpdateMultiLineTextTemplate(string name, string label);
    public abstract virtual TContainer AddOrUpdateMultiLineTextTemplate(string name, string label, string defaultValue, string helpText);
    public abstract virtual TContainer AddOrUpdateSensitiveTemplate(string name, string label);
    public abstract virtual TContainer AddOrUpdateSensitiveTemplate(string name, string label, string defaultValue, string helpText);
    public abstract virtual TContainer AddOrUpdateSelectTemplate(string name, string label, IDictionary`2<string, string> options);
    public abstract virtual TContainer AddOrUpdateSelectTemplate(string name, string label, IDictionary`2<string, string> options, string defaultValue, string helpText);
}
public enum Octopus.Client.Model.KubernetesAgentUpdateBehavior : Enum {
    public int value__;
    public static KubernetesAgentUpdateBehavior NeverUpdate;
    public static KubernetesAgentUpdateBehavior Update;
}
[ObsoleteAttribute("Removed in Octopus Server 2020.3.0")]
public enum Octopus.Client.Model.LeadershipRank : Enum {
    public int value__;
    public static LeadershipRank Follower;
    public static LeadershipRank Leader;
}
public class Octopus.Client.Model.LibraryVariableSetProjectUsage : object {
    [CompilerGeneratedAttribute]
private string <ProjectSlug>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<LibraryVariableSetRunbookSnapshotUsageEntry> <RunbookSnapshots>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<LibraryVariableSetReleaseUsageEntry> <Releases>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsCurrentlyBeingUsedInProject>k__BackingField;
    public string ProjectSlug { get; public set; }
    public string ProjectName { get; public set; }
    public string ProjectId { get; public set; }
    public List`1<LibraryVariableSetRunbookSnapshotUsageEntry> RunbookSnapshots { get; public set; }
    public ICollection`1<LibraryVariableSetReleaseUsageEntry> Releases { get; public set; }
    public bool IsCurrentlyBeingUsedInProject { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ProjectSlug();
    [CompilerGeneratedAttribute]
public void set_ProjectSlug(string value);
    [CompilerGeneratedAttribute]
public string get_ProjectName();
    [CompilerGeneratedAttribute]
public void set_ProjectName(string value);
    [CompilerGeneratedAttribute]
public string get_ProjectId();
    [CompilerGeneratedAttribute]
public void set_ProjectId(string value);
    [CompilerGeneratedAttribute]
public List`1<LibraryVariableSetRunbookSnapshotUsageEntry> get_RunbookSnapshots();
    [CompilerGeneratedAttribute]
public void set_RunbookSnapshots(List`1<LibraryVariableSetRunbookSnapshotUsageEntry> value);
    [CompilerGeneratedAttribute]
public ICollection`1<LibraryVariableSetReleaseUsageEntry> get_Releases();
    [CompilerGeneratedAttribute]
public void set_Releases(ICollection`1<LibraryVariableSetReleaseUsageEntry> value);
    [CompilerGeneratedAttribute]
public bool get_IsCurrentlyBeingUsedInProject();
    [CompilerGeneratedAttribute]
public void set_IsCurrentlyBeingUsedInProject(bool value);
}
public class Octopus.Client.Model.LibraryVariableSetReleaseUsageEntry : object {
    [CompilerGeneratedAttribute]
private string <ReleaseId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ReleaseVersion>k__BackingField;
    public string ReleaseId { get; public set; }
    public string ReleaseVersion { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ReleaseId();
    [CompilerGeneratedAttribute]
public void set_ReleaseId(string value);
    [CompilerGeneratedAttribute]
public string get_ReleaseVersion();
    [CompilerGeneratedAttribute]
public void set_ReleaseVersion(string value);
}
public class Octopus.Client.Model.LibraryVariableSetResource : Resource {
    private IVariableTemplateContainerEditor`1<LibraryVariableSetResource> variableTemplateEditor;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VariableSetId>k__BackingField;
    [CompilerGeneratedAttribute]
private VariableSetContentType <ContentType>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ActionTemplateParameterResource> <Templates>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [WriteableAttribute]
[TrimAttribute]
public string Name { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string Description { get; public set; }
    public string VariableSetId { get; public set; }
    [WriteableOnCreateAttribute]
public VariableSetContentType ContentType { get; public set; }
    public List`1<ActionTemplateParameterResource> Templates { get; public set; }
    public int Version { get; public set; }
    public string SpaceId { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public string get_VariableSetId();
    [CompilerGeneratedAttribute]
public void set_VariableSetId(string value);
    [CompilerGeneratedAttribute]
public VariableSetContentType get_ContentType();
    [CompilerGeneratedAttribute]
public void set_ContentType(VariableSetContentType value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<ActionTemplateParameterResource> get_Templates();
    [CompilerGeneratedAttribute]
public void set_Templates(List`1<ActionTemplateParameterResource> value);
    [CompilerGeneratedAttribute]
public int get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(int value);
    public sealed virtual LibraryVariableSetResource Clear();
    public sealed virtual LibraryVariableSetResource AddOrUpdateVariableTemplate(string name, string label, IDictionary`2<string, string> displaySettings);
    public sealed virtual LibraryVariableSetResource AddOrUpdateVariableTemplate(string name, string label, IDictionary`2<string, string> displaySettings, string defaultValue, string helpText);
    public sealed virtual LibraryVariableSetResource AddOrUpdateSingleLineTextTemplate(string name, string label);
    public sealed virtual LibraryVariableSetResource AddOrUpdateSingleLineTextTemplate(string name, string label, string defaultValue, string helpText);
    public sealed virtual LibraryVariableSetResource AddOrUpdateMultiLineTextTemplate(string name, string label);
    public sealed virtual LibraryVariableSetResource AddOrUpdateMultiLineTextTemplate(string name, string label, string defaultValue, string helpText);
    public sealed virtual LibraryVariableSetResource AddOrUpdateSensitiveTemplate(string name, string label);
    public sealed virtual LibraryVariableSetResource AddOrUpdateSensitiveTemplate(string name, string label, string defaultValue, string helpText);
    public sealed virtual LibraryVariableSetResource AddOrUpdateSelectTemplate(string name, string label, IDictionary`2<string, string> options);
    public sealed virtual LibraryVariableSetResource AddOrUpdateSelectTemplate(string name, string label, IDictionary`2<string, string> options, string defaultValue, string helpText);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
}
public class Octopus.Client.Model.LibraryVariableSetRunbookSnapshotUsageEntry : object {
    [CompilerGeneratedAttribute]
private string <SnapshotId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SnapshotName>k__BackingField;
    public string SnapshotId { get; public set; }
    public string SnapshotName { get; public set; }
    [CompilerGeneratedAttribute]
public string get_SnapshotId();
    [CompilerGeneratedAttribute]
public void set_SnapshotId(string value);
    [CompilerGeneratedAttribute]
public string get_SnapshotName();
    [CompilerGeneratedAttribute]
public void set_SnapshotName(string value);
}
public class Octopus.Client.Model.LibraryVariableSetUsageResource : Resource {
    [CompilerGeneratedAttribute]
private ICollection`1<LibraryVariableSetProjectUsage> <Projects>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CountOfProjectsUserCannotSee>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CountOfReleasesUserCannotSee>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CountOfRunbookSnapshotsUserCannotSee>k__BackingField;
    public ICollection`1<LibraryVariableSetProjectUsage> Projects { get; public set; }
    public int CountOfProjectsUserCannotSee { get; public set; }
    public int CountOfReleasesUserCannotSee { get; public set; }
    public int CountOfRunbookSnapshotsUserCannotSee { get; public set; }
    [CompilerGeneratedAttribute]
public ICollection`1<LibraryVariableSetProjectUsage> get_Projects();
    [CompilerGeneratedAttribute]
public void set_Projects(ICollection`1<LibraryVariableSetProjectUsage> value);
    [CompilerGeneratedAttribute]
public int get_CountOfProjectsUserCannotSee();
    [CompilerGeneratedAttribute]
public void set_CountOfProjectsUserCannotSee(int value);
    [CompilerGeneratedAttribute]
public int get_CountOfReleasesUserCannotSee();
    [CompilerGeneratedAttribute]
public void set_CountOfReleasesUserCannotSee(int value);
    [CompilerGeneratedAttribute]
public int get_CountOfRunbookSnapshotsUserCannotSee();
    [CompilerGeneratedAttribute]
public void set_CountOfRunbookSnapshotsUserCannotSee(int value);
}
public static class Octopus.Client.Model.LicenseKinds : object {
    public static string Unlicensed;
    public static string Trial;
    public static string CommunityEdition;
    public static string CommercialLicense;
    private static LicenseKinds();
}
public class Octopus.Client.Model.LicenseLimitStatusResource : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private int <EffectiveLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private int <LicensedLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EffectiveLimitDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LicenseLimitDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsUnlimited>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CurrentUsage>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Disposition>k__BackingField;
    public string Name { get; public set; }
    public int EffectiveLimit { get; public set; }
    public int LicensedLimit { get; public set; }
    public string EffectiveLimitDescription { get; public set; }
    public string LicenseLimitDescription { get; public set; }
    public bool IsUnlimited { get; public set; }
    public int CurrentUsage { get; public set; }
    public string Message { get; public set; }
    public string Disposition { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public int get_EffectiveLimit();
    [CompilerGeneratedAttribute]
public void set_EffectiveLimit(int value);
    [CompilerGeneratedAttribute]
public int get_LicensedLimit();
    [CompilerGeneratedAttribute]
public void set_LicensedLimit(int value);
    [CompilerGeneratedAttribute]
public string get_EffectiveLimitDescription();
    [CompilerGeneratedAttribute]
public void set_EffectiveLimitDescription(string value);
    [CompilerGeneratedAttribute]
public string get_LicenseLimitDescription();
    [CompilerGeneratedAttribute]
public void set_LicenseLimitDescription(string value);
    [CompilerGeneratedAttribute]
public bool get_IsUnlimited();
    [CompilerGeneratedAttribute]
public void set_IsUnlimited(bool value);
    [CompilerGeneratedAttribute]
public int get_CurrentUsage();
    [CompilerGeneratedAttribute]
public void set_CurrentUsage(int value);
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_Disposition();
    [CompilerGeneratedAttribute]
public void set_Disposition(string value);
}
public class Octopus.Client.Model.LicenseLimitUsageResource : LicenseLimitStatusResource {
    [CompilerGeneratedAttribute]
private string <LimitUsageDescription>k__BackingField;
    public string LimitUsageDescription { get; public set; }
    [CompilerGeneratedAttribute]
public string get_LimitUsageDescription();
    [CompilerGeneratedAttribute]
public void set_LimitUsageDescription(string value);
}
public static class Octopus.Client.Model.LicenseMessageDispositions : object {
    public static string Information;
    public static string Warning;
    public static string Error;
    private static LicenseMessageDispositions();
}
public class Octopus.Client.Model.LicenseMessageResource : object {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Disposition>k__BackingField;
    public string Message { get; public set; }
    public string Disposition { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Message();
    [CompilerGeneratedAttribute]
public void set_Message(string value);
    [CompilerGeneratedAttribute]
public string get_Disposition();
    [CompilerGeneratedAttribute]
public void set_Disposition(string value);
}
public class Octopus.Client.Model.LicenseResource : Resource {
    [CompilerGeneratedAttribute]
private string <LicenseText>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SerialNumber>k__BackingField;
    [WriteableAttribute]
public string LicenseText { get; public set; }
    public string SerialNumber { get; public set; }
    [CompilerGeneratedAttribute]
public string get_LicenseText();
    [CompilerGeneratedAttribute]
public void set_LicenseText(string value);
    [CompilerGeneratedAttribute]
public string get_SerialNumber();
    [CompilerGeneratedAttribute]
public void set_SerialNumber(string value);
}
public class Octopus.Client.Model.LicenseStatusResource : Resource {
    [CompilerGeneratedAttribute]
private string <LicenseKind>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsCompliant>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HostingEnvironment>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ComplianceSummary>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <EffectiveExpiryDate>k__BackingField;
    [CompilerGeneratedAttribute]
private int <DaysToEffectiveExpiryDate>k__BackingField;
    [CompilerGeneratedAttribute]
private LicenseMessageResource[] <Messages>k__BackingField;
    [CompilerGeneratedAttribute]
private LicenseLimitStatusResource[] <Limits>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DoesExpiryBlockKeyActivities>k__BackingField;
    [CompilerGeneratedAttribute]
private int <EffectiveNodeTaskLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private int <EffectiveClusterTaskLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsClusterTaskLimitControlledByLicense>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsNodeTaskLimitControlledByLicense>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PermissionsMode>k__BackingField;
    [ObsoleteAttribute("No longer supported from 2019.8.6")]
public string LicenseKind { get; public set; }
    public bool IsCompliant { get; public set; }
    public string HostingEnvironment { get; public set; }
    public string ComplianceSummary { get; public set; }
    [JsonConverterAttribute("Octopus.Client.Serialization.DateConverter")]
public DateTime EffectiveExpiryDate { get; public set; }
    public int DaysToEffectiveExpiryDate { get; public set; }
    public LicenseMessageResource[] Messages { get; public set; }
    public LicenseLimitStatusResource[] Limits { get; public set; }
    public bool DoesExpiryBlockKeyActivities { get; public set; }
    public int EffectiveNodeTaskLimit { get; public set; }
    public int EffectiveClusterTaskLimit { get; public set; }
    public bool IsClusterTaskLimitControlledByLicense { get; public set; }
    public bool IsNodeTaskLimitControlledByLicense { get; public set; }
    public string PermissionsMode { get; public set; }
    [CompilerGeneratedAttribute]
public string get_LicenseKind();
    [CompilerGeneratedAttribute]
public void set_LicenseKind(string value);
    [CompilerGeneratedAttribute]
public bool get_IsCompliant();
    [CompilerGeneratedAttribute]
public void set_IsCompliant(bool value);
    [CompilerGeneratedAttribute]
public string get_HostingEnvironment();
    [CompilerGeneratedAttribute]
public void set_HostingEnvironment(string value);
    [CompilerGeneratedAttribute]
public string get_ComplianceSummary();
    [CompilerGeneratedAttribute]
public void set_ComplianceSummary(string value);
    [CompilerGeneratedAttribute]
public DateTime get_EffectiveExpiryDate();
    [CompilerGeneratedAttribute]
public void set_EffectiveExpiryDate(DateTime value);
    [CompilerGeneratedAttribute]
public int get_DaysToEffectiveExpiryDate();
    [CompilerGeneratedAttribute]
public void set_DaysToEffectiveExpiryDate(int value);
    [CompilerGeneratedAttribute]
public LicenseMessageResource[] get_Messages();
    [CompilerGeneratedAttribute]
public void set_Messages(LicenseMessageResource[] value);
    [CompilerGeneratedAttribute]
public LicenseLimitStatusResource[] get_Limits();
    [CompilerGeneratedAttribute]
public void set_Limits(LicenseLimitStatusResource[] value);
    [CompilerGeneratedAttribute]
public bool get_DoesExpiryBlockKeyActivities();
    [CompilerGeneratedAttribute]
public void set_DoesExpiryBlockKeyActivities(bool value);
    [CompilerGeneratedAttribute]
public int get_EffectiveNodeTaskLimit();
    [CompilerGeneratedAttribute]
public void set_EffectiveNodeTaskLimit(int value);
    [CompilerGeneratedAttribute]
public int get_EffectiveClusterTaskLimit();
    [CompilerGeneratedAttribute]
public void set_EffectiveClusterTaskLimit(int value);
    [CompilerGeneratedAttribute]
public bool get_IsClusterTaskLimitControlledByLicense();
    [CompilerGeneratedAttribute]
public void set_IsClusterTaskLimitControlledByLicense(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsNodeTaskLimitControlledByLicense();
    [CompilerGeneratedAttribute]
public void set_IsNodeTaskLimitControlledByLicense(bool value);
    [CompilerGeneratedAttribute]
public string get_PermissionsMode();
    [CompilerGeneratedAttribute]
public void set_PermissionsMode(string value);
}
public class Octopus.Client.Model.LicenseUsageResource : Resource {
    [CompilerGeneratedAttribute]
private SpaceLicenseUsageResource[] <SpacesUsage>k__BackingField;
    [CompilerGeneratedAttribute]
private LicenseLimitUsageResource[] <Limits>k__BackingField;
    public SpaceLicenseUsageResource[] SpacesUsage { get; public set; }
    public LicenseLimitUsageResource[] Limits { get; public set; }
    [CompilerGeneratedAttribute]
public SpaceLicenseUsageResource[] get_SpacesUsage();
    [CompilerGeneratedAttribute]
public void set_SpacesUsage(SpaceLicenseUsageResource[] value);
    [CompilerGeneratedAttribute]
public LicenseLimitUsageResource[] get_Limits();
    [CompilerGeneratedAttribute]
public void set_Limits(LicenseLimitUsageResource[] value);
}
public class Octopus.Client.Model.LifecycleProgressionResource : Resource {
    [CompilerGeneratedAttribute]
private List`1<PhaseProgressionResource> <Phases>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <NextDeployments>k__BackingField;
    [CompilerGeneratedAttribute]
private int <NextDeploymentsMinimumRequired>k__BackingField;
    public List`1<PhaseProgressionResource> Phases { get; public set; }
    public ReferenceCollection NextDeployments { get; public set; }
    public int NextDeploymentsMinimumRequired { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<PhaseProgressionResource> get_Phases();
    [CompilerGeneratedAttribute]
public void set_Phases(List`1<PhaseProgressionResource> value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_NextDeployments();
    [CompilerGeneratedAttribute]
public void set_NextDeployments(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public int get_NextDeploymentsMinimumRequired();
    [CompilerGeneratedAttribute]
public void set_NextDeploymentsMinimumRequired(int value);
}
public class Octopus.Client.Model.LifecycleResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private RetentionPeriod <ReleaseRetentionPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private RetentionPeriod <TentacleRetentionPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<PhaseResource> <Phases>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Slug>k__BackingField;
    [WriteableAttribute]
[JsonPropertyAttribute]
public string Name { get; public set; }
    [WriteableAttribute]
[JsonPropertyAttribute]
public string Description { get; public set; }
    [JsonPropertyAttribute]
[WriteableAttribute]
public RetentionPeriod ReleaseRetentionPolicy { get; public set; }
    [WriteableAttribute]
[JsonPropertyAttribute]
public RetentionPeriod TentacleRetentionPolicy { get; public set; }
    public IList`1<PhaseResource> Phases { get; private set; }
    public string SpaceId { get; public set; }
    public string Slug { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public RetentionPeriod get_ReleaseRetentionPolicy();
    [CompilerGeneratedAttribute]
public void set_ReleaseRetentionPolicy(RetentionPeriod value);
    [CompilerGeneratedAttribute]
public RetentionPeriod get_TentacleRetentionPolicy();
    [CompilerGeneratedAttribute]
public void set_TentacleRetentionPolicy(RetentionPeriod value);
    [CompilerGeneratedAttribute]
public IList`1<PhaseResource> get_Phases();
    [CompilerGeneratedAttribute]
private void set_Phases(IList`1<PhaseResource> value);
    public LifecycleResource WithReleaseRetentionPolicy(RetentionPeriod period);
    public LifecycleResource WithTentacleRetentionPolicy(RetentionPeriod period);
    public LifecycleResource Clear();
    public PhaseResource FindPhase(string name);
    public PhaseResource AddOrUpdatePhase(string name);
    public LifecycleResource RemovePhase(string name);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Slug();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Slug(string value);
}
public class Octopus.Client.Model.LoginCommand : object {
    [CompilerGeneratedAttribute]
private string <Username>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Password>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <RememberMe>k__BackingField;
    [CompilerGeneratedAttribute]
private LoginState <State>k__BackingField;
    [RequiredAttribute]
public string Username { get; public set; }
    [RequiredAttribute]
public string Password { get; public set; }
    public bool RememberMe { get; public set; }
    public LoginState State { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Username();
    [CompilerGeneratedAttribute]
public void set_Username(string value);
    [CompilerGeneratedAttribute]
public string get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(string value);
    [CompilerGeneratedAttribute]
public bool get_RememberMe();
    [CompilerGeneratedAttribute]
public void set_RememberMe(bool value);
    [CompilerGeneratedAttribute]
public LoginState get_State();
    [CompilerGeneratedAttribute]
public void set_State(LoginState value);
}
public class Octopus.Client.Model.LoginState : object {
    [CompilerGeneratedAttribute]
private bool <UsingSecureConnection>k__BackingField;
    public bool UsingSecureConnection { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_UsingSecureConnection();
    [CompilerGeneratedAttribute]
public void set_UsingSecureConnection(bool value);
}
public abstract class Octopus.Client.Model.MachineBasedResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Thumbprint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Uri>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDisabled>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MachinePolicyId>k__BackingField;
    [CompilerGeneratedAttribute]
private MachineModelStatus <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private MachineModelHealthStatus <HealthStatus>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasLatestCalamari>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StatusSummary>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsInProcess>k__BackingField;
    [CompilerGeneratedAttribute]
private EndpointResource <Endpoint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OperatingSystem>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ShellName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ShellVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Architecture>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Slug>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SkipInitialHealthCheck>k__BackingField;
    [WriteableAttribute]
[TrimAttribute]
public string Name { get; public set; }
    public string SpaceId { get; public set; }
    [WriteableAttribute]
[TrimAttribute]
public string Thumbprint { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string Uri { get; public set; }
    [WriteableAttribute]
public bool IsDisabled { get; public set; }
    [WriteableAttribute]
public string MachinePolicyId { get; public set; }
    public MachineModelStatus Status { get; public set; }
    public MachineModelHealthStatus HealthStatus { get; public set; }
    public bool HasLatestCalamari { get; public set; }
    public string StatusSummary { get; public set; }
    public bool IsInProcess { get; public set; }
    [WriteableAttribute]
public EndpointResource Endpoint { get; public set; }
    public string OperatingSystem { get; public set; }
    public string ShellName { get; public set; }
    public string ShellVersion { get; public set; }
    public string Architecture { get; public set; }
    public string Slug { get; public set; }
    [WriteableAttribute]
public bool SkipInitialHealthCheck { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
    [CompilerGeneratedAttribute]
public string get_Thumbprint();
    [CompilerGeneratedAttribute]
public void set_Thumbprint(string value);
    [CompilerGeneratedAttribute]
public string get_Uri();
    [CompilerGeneratedAttribute]
public void set_Uri(string value);
    [CompilerGeneratedAttribute]
public bool get_IsDisabled();
    [CompilerGeneratedAttribute]
public void set_IsDisabled(bool value);
    [CompilerGeneratedAttribute]
public string get_MachinePolicyId();
    [CompilerGeneratedAttribute]
public void set_MachinePolicyId(string value);
    [CompilerGeneratedAttribute]
public MachineModelStatus get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(MachineModelStatus value);
    [CompilerGeneratedAttribute]
public MachineModelHealthStatus get_HealthStatus();
    [CompilerGeneratedAttribute]
public void set_HealthStatus(MachineModelHealthStatus value);
    [CompilerGeneratedAttribute]
public bool get_HasLatestCalamari();
    [CompilerGeneratedAttribute]
public void set_HasLatestCalamari(bool value);
    [CompilerGeneratedAttribute]
public string get_StatusSummary();
    [CompilerGeneratedAttribute]
public void set_StatusSummary(string value);
    [CompilerGeneratedAttribute]
public bool get_IsInProcess();
    [CompilerGeneratedAttribute]
public void set_IsInProcess(bool value);
    [CompilerGeneratedAttribute]
public EndpointResource get_Endpoint();
    [CompilerGeneratedAttribute]
public void set_Endpoint(EndpointResource value);
    [CompilerGeneratedAttribute]
public string get_OperatingSystem();
    [CompilerGeneratedAttribute]
public void set_OperatingSystem(string value);
    [CompilerGeneratedAttribute]
public string get_ShellName();
    [CompilerGeneratedAttribute]
public void set_ShellName(string value);
    [CompilerGeneratedAttribute]
public string get_ShellVersion();
    [CompilerGeneratedAttribute]
public void set_ShellVersion(string value);
    [CompilerGeneratedAttribute]
public string get_Architecture();
    [CompilerGeneratedAttribute]
public void set_Architecture(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Slug();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Slug(string value);
    [CompilerGeneratedAttribute]
public bool get_SkipInitialHealthCheck();
    [CompilerGeneratedAttribute]
public void set_SkipInitialHealthCheck(bool value);
}
public class Octopus.Client.Model.MachineCleanupPolicy : object {
    [CompilerGeneratedAttribute]
private DeleteMachinesBehavior <DeleteMachinesBehavior>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <DeleteMachinesElapsedTimeSpan>k__BackingField;
    public DeleteMachinesBehavior DeleteMachinesBehavior { get; public set; }
    public TimeSpan DeleteMachinesElapsedTimeSpan { get; public set; }
    [CompilerGeneratedAttribute]
public DeleteMachinesBehavior get_DeleteMachinesBehavior();
    [CompilerGeneratedAttribute]
public void set_DeleteMachinesBehavior(DeleteMachinesBehavior value);
    [CompilerGeneratedAttribute]
public TimeSpan get_DeleteMachinesElapsedTimeSpan();
    [CompilerGeneratedAttribute]
public void set_DeleteMachinesElapsedTimeSpan(TimeSpan value);
}
public class Octopus.Client.Model.MachineConnectionStatus : Resource {
    [CompilerGeneratedAttribute]
private string <MachineId>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ActivityLogElement> <Logs>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CurrentTentacleVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <LastChecked>k__BackingField;
    public string MachineId { get; public set; }
    public List`1<ActivityLogElement> Logs { get; public set; }
    public string Status { get; public set; }
    public string CurrentTentacleVersion { get; public set; }
    public DateTimeOffset LastChecked { get; public set; }
    [CompilerGeneratedAttribute]
public string get_MachineId();
    [CompilerGeneratedAttribute]
public void set_MachineId(string value);
    [CompilerGeneratedAttribute]
public List`1<ActivityLogElement> get_Logs();
    [CompilerGeneratedAttribute]
public void set_Logs(List`1<ActivityLogElement> value);
    [CompilerGeneratedAttribute]
public string get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(string value);
    [CompilerGeneratedAttribute]
public string get_CurrentTentacleVersion();
    [CompilerGeneratedAttribute]
public void set_CurrentTentacleVersion(string value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_LastChecked();
    [CompilerGeneratedAttribute]
public void set_LastChecked(DateTimeOffset value);
}
public enum Octopus.Client.Model.MachineConnectivityBehavior : Enum {
    public int value__;
    public static MachineConnectivityBehavior ExpectedToBeOnline;
    public static MachineConnectivityBehavior MayBeOfflineAndCanBeSkipped;
}
public class Octopus.Client.Model.MachineConnectivityPolicy : object {
    [CompilerGeneratedAttribute]
private MachineConnectivityBehavior <MachineConnectivityBehavior>k__BackingField;
    public MachineConnectivityBehavior MachineConnectivityBehavior { get; public set; }
    [CompilerGeneratedAttribute]
public MachineConnectivityBehavior get_MachineConnectivityBehavior();
    [CompilerGeneratedAttribute]
public void set_MachineConnectivityBehavior(MachineConnectivityBehavior value);
}
public class Octopus.Client.Model.MachineDeploymentPreview : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasLatestCalamari>k__BackingField;
    public string Id { get; public set; }
    public string Name { get; public set; }
    public bool HasLatestCalamari { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public bool get_HasLatestCalamari();
    [CompilerGeneratedAttribute]
public void set_HasLatestCalamari(bool value);
}
public class Octopus.Client.Model.MachineHealthCheckPolicy : object {
    private static string UtcTimezone;
    [CompilerGeneratedAttribute]
private MachineScriptPolicy <PowerShellHealthCheckPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private MachineScriptPolicy <BashHealthCheckPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <HealthCheckInterval>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HealthCheckCron>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HealthCheckCronTimezone>k__BackingField;
    [CompilerGeneratedAttribute]
private HealthCheckType <HealthCheckType>k__BackingField;
    [ObsoleteAttribute("Use PowerShellHealthCheckPolicy instead.")]
public MachineScriptPolicy TentacleEndpointHealthCheckPolicy { get; }
    public MachineScriptPolicy PowerShellHealthCheckPolicy { get; public set; }
    [ObsoleteAttribute("Use BashHealthCheckPolicy instead.")]
public MachineScriptPolicy SshEndpointHealthCheckPolicy { get; }
    public MachineScriptPolicy BashHealthCheckPolicy { get; public set; }
    public Nullable`1<TimeSpan> HealthCheckInterval { get; public set; }
    public string HealthCheckCron { get; public set; }
    public string HealthCheckCronTimezone { get; public set; }
    public HealthCheckType HealthCheckType { get; public set; }
    [JsonConstructorAttribute]
public MachineHealthCheckPolicy(MachineScriptPolicy powerShellHealthCheckPolicy, MachineScriptPolicy bashHealthCheckPolicy);
    public MachineScriptPolicy get_TentacleEndpointHealthCheckPolicy();
    [CompilerGeneratedAttribute]
public MachineScriptPolicy get_PowerShellHealthCheckPolicy();
    [CompilerGeneratedAttribute]
public void set_PowerShellHealthCheckPolicy(MachineScriptPolicy value);
    public MachineScriptPolicy get_SshEndpointHealthCheckPolicy();
    [CompilerGeneratedAttribute]
public MachineScriptPolicy get_BashHealthCheckPolicy();
    [CompilerGeneratedAttribute]
public void set_BashHealthCheckPolicy(MachineScriptPolicy value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_HealthCheckInterval();
    [CompilerGeneratedAttribute]
public void set_HealthCheckInterval(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public string get_HealthCheckCron();
    [CompilerGeneratedAttribute]
public void set_HealthCheckCron(string value);
    [CompilerGeneratedAttribute]
public string get_HealthCheckCronTimezone();
    [CompilerGeneratedAttribute]
public void set_HealthCheckCronTimezone(string value);
    [CompilerGeneratedAttribute]
public HealthCheckType get_HealthCheckType();
    [CompilerGeneratedAttribute]
public void set_HealthCheckType(HealthCheckType value);
}
public enum Octopus.Client.Model.MachineModelHealthStatus : Enum {
    public int value__;
    public static MachineModelHealthStatus Healthy;
    public static MachineModelHealthStatus Unavailable;
    public static MachineModelHealthStatus Unknown;
    public static MachineModelHealthStatus HasWarnings;
    public static MachineModelHealthStatus Unhealthy;
}
public enum Octopus.Client.Model.MachineModelStatus : Enum {
    public int value__;
    public static MachineModelStatus Online;
    public static MachineModelStatus Offline;
    public static MachineModelStatus Unknown;
    public static MachineModelStatus NeedsUpgrade;
    public static MachineModelStatus CalamariNeedsUpgrade;
    public static MachineModelStatus Disabled;
}
public class Octopus.Client.Model.MachinePolicyResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDefault>k__BackingField;
    [CompilerGeneratedAttribute]
private MachineHealthCheckPolicy <MachineHealthCheckPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private MachineConnectivityPolicy <MachineConnectivityPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private MachineCleanupPolicy <MachineCleanupPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private MachineUpdatePolicy <MachineUpdatePolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private MachineRpcCallRetryPolicy <MachineRpcCallRetryPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <PollingRequestQueueTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <PollingRequestMaximumMessageProcessingTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <ConnectionRetrySleepInterval>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ConnectionRetryCountLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <ConnectionRetryTimeLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <ConnectionConnectTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [JsonPropertyAttribute]
[WriteableAttribute]
public string Name { get; public set; }
    [WriteableAttribute]
[JsonPropertyAttribute]
public string Description { get; public set; }
    [WriteableAttribute]
[JsonPropertyAttribute]
public bool IsDefault { get; public set; }
    [WriteableAttribute]
[JsonPropertyAttribute]
public MachineHealthCheckPolicy MachineHealthCheckPolicy { get; public set; }
    [WriteableAttribute]
[JsonPropertyAttribute]
public MachineConnectivityPolicy MachineConnectivityPolicy { get; public set; }
    [WriteableAttribute]
[JsonPropertyAttribute]
public MachineCleanupPolicy MachineCleanupPolicy { get; public set; }
    [JsonPropertyAttribute]
[WriteableAttribute]
public MachineUpdatePolicy MachineUpdatePolicy { get; public set; }
    [WriteableAttribute]
[JsonPropertyAttribute]
public MachineRpcCallRetryPolicy MachineRpcCallRetryPolicy { get; public set; }
    [WriteableAttribute]
[JsonPropertyAttribute]
public TimeSpan PollingRequestQueueTimeout { get; public set; }
    [WriteableAttribute]
[JsonPropertyAttribute]
[ObsoleteAttribute("Not used since 2024.1.8781")]
public TimeSpan PollingRequestMaximumMessageProcessingTimeout { get; public set; }
    [WriteableAttribute]
[JsonPropertyAttribute]
public TimeSpan ConnectionRetrySleepInterval { get; public set; }
    [WriteableAttribute]
[JsonPropertyAttribute]
public int ConnectionRetryCountLimit { get; public set; }
    [WriteableAttribute]
[JsonPropertyAttribute]
public TimeSpan ConnectionRetryTimeLimit { get; public set; }
    [JsonPropertyAttribute]
[WriteableAttribute]
public TimeSpan ConnectionConnectTimeout { get; public set; }
    public string SpaceId { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public bool get_IsDefault();
    [CompilerGeneratedAttribute]
public void set_IsDefault(bool value);
    [CompilerGeneratedAttribute]
public MachineHealthCheckPolicy get_MachineHealthCheckPolicy();
    [CompilerGeneratedAttribute]
public void set_MachineHealthCheckPolicy(MachineHealthCheckPolicy value);
    [CompilerGeneratedAttribute]
public MachineConnectivityPolicy get_MachineConnectivityPolicy();
    [CompilerGeneratedAttribute]
public void set_MachineConnectivityPolicy(MachineConnectivityPolicy value);
    [CompilerGeneratedAttribute]
public MachineCleanupPolicy get_MachineCleanupPolicy();
    [CompilerGeneratedAttribute]
public void set_MachineCleanupPolicy(MachineCleanupPolicy value);
    [CompilerGeneratedAttribute]
public MachineUpdatePolicy get_MachineUpdatePolicy();
    [CompilerGeneratedAttribute]
public void set_MachineUpdatePolicy(MachineUpdatePolicy value);
    [CompilerGeneratedAttribute]
public MachineRpcCallRetryPolicy get_MachineRpcCallRetryPolicy();
    [CompilerGeneratedAttribute]
public void set_MachineRpcCallRetryPolicy(MachineRpcCallRetryPolicy value);
    [CompilerGeneratedAttribute]
public TimeSpan get_PollingRequestQueueTimeout();
    [CompilerGeneratedAttribute]
public void set_PollingRequestQueueTimeout(TimeSpan value);
    [CompilerGeneratedAttribute]
public TimeSpan get_PollingRequestMaximumMessageProcessingTimeout();
    [CompilerGeneratedAttribute]
public void set_PollingRequestMaximumMessageProcessingTimeout(TimeSpan value);
    [CompilerGeneratedAttribute]
public TimeSpan get_ConnectionRetrySleepInterval();
    [CompilerGeneratedAttribute]
public void set_ConnectionRetrySleepInterval(TimeSpan value);
    [CompilerGeneratedAttribute]
public int get_ConnectionRetryCountLimit();
    [CompilerGeneratedAttribute]
public void set_ConnectionRetryCountLimit(int value);
    [CompilerGeneratedAttribute]
public TimeSpan get_ConnectionRetryTimeLimit();
    [CompilerGeneratedAttribute]
public void set_ConnectionRetryTimeLimit(TimeSpan value);
    [CompilerGeneratedAttribute]
public TimeSpan get_ConnectionConnectTimeout();
    [CompilerGeneratedAttribute]
public void set_ConnectionConnectTimeout(TimeSpan value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
}
public class Octopus.Client.Model.MachinePollingConversation : object {
    [CompilerGeneratedAttribute]
private DateTime <StartedAtUtc>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <InitialMessageId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InitialMessageDescription>k__BackingField;
    public DateTime StartedAtUtc { get; public set; }
    public Guid InitialMessageId { get; public set; }
    public string InitialMessageDescription { get; public set; }
    [CompilerGeneratedAttribute]
public DateTime get_StartedAtUtc();
    [CompilerGeneratedAttribute]
public void set_StartedAtUtc(DateTime value);
    [CompilerGeneratedAttribute]
public Guid get_InitialMessageId();
    [CompilerGeneratedAttribute]
public void set_InitialMessageId(Guid value);
    [CompilerGeneratedAttribute]
public string get_InitialMessageDescription();
    [CompilerGeneratedAttribute]
public void set_InitialMessageDescription(string value);
}
public class Octopus.Client.Model.MachineResource : MachineBasedResource {
    [CompilerGeneratedAttribute]
private ReferenceCollection <EnvironmentIds>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <Roles>k__BackingField;
    private Nullable`1<TenantedDeploymentMode> tenantedDeploymentParticipation;
    [CompilerGeneratedAttribute]
private ReferenceCollection <TenantIds>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <TenantTags>k__BackingField;
    [WriteableAttribute]
public ReferenceCollection EnvironmentIds { get; public set; }
    [WriteableAttribute]
public ReferenceCollection Roles { get; public set; }
    [WriteableAttribute]
public TenantedDeploymentMode TenantedDeploymentParticipation { get; public set; }
    [WriteableAttribute]
public ReferenceCollection TenantIds { get; public set; }
    [WriteableAttribute]
public ReferenceCollection TenantTags { get; public set; }
    [CompilerGeneratedAttribute]
public ReferenceCollection get_EnvironmentIds();
    [CompilerGeneratedAttribute]
public void set_EnvironmentIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_Roles();
    [CompilerGeneratedAttribute]
public void set_Roles(ReferenceCollection value);
    public void set_TenantedDeploymentParticipation(TenantedDeploymentMode value);
    public TenantedDeploymentMode get_TenantedDeploymentParticipation();
    [CompilerGeneratedAttribute]
public ReferenceCollection get_TenantIds();
    [CompilerGeneratedAttribute]
public void set_TenantIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_TenantTags();
    [CompilerGeneratedAttribute]
public void set_TenantTags(ReferenceCollection value);
    public MachineResource AddOrUpdateEnvironments(EnvironmentResource[] environments);
    public MachineResource RemoveEnvironment(EnvironmentResource environment);
    public MachineResource ClearEnvironments();
    public MachineResource AddOrUpdateRoles(String[] roles);
    public MachineResource RemoveRole(string role);
    public MachineResource ClearRoles();
    public MachineResource AddOrUpdateTenants(TenantResource[] tenants);
    public MachineResource RemoveTenant(TenantResource tenant);
    public MachineResource ClearTenants();
    public MachineResource AddOrUpdateTenantTags(TagResource[] tenantTags);
    public MachineResource RemoveTenantTag(TagResource tenantTag);
    public MachineResource ClearTenantTags();
}
public class Octopus.Client.Model.MachineRpcCallRetryPolicy : object {
    [CompilerGeneratedAttribute]
private bool <Enabled>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <RetryDuration>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <HealthCheckRetryDuration>k__BackingField;
    public bool Enabled { get; public set; }
    public TimeSpan RetryDuration { get; public set; }
    public TimeSpan HealthCheckRetryDuration { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_Enabled();
    [CompilerGeneratedAttribute]
public void set_Enabled(bool value);
    [CompilerGeneratedAttribute]
public TimeSpan get_RetryDuration();
    [CompilerGeneratedAttribute]
public void set_RetryDuration(TimeSpan value);
    [CompilerGeneratedAttribute]
public TimeSpan get_HealthCheckRetryDuration();
    [CompilerGeneratedAttribute]
public void set_HealthCheckRetryDuration(TimeSpan value);
}
public class Octopus.Client.Model.MachineScriptPolicy : object {
    [CompilerGeneratedAttribute]
private MachineScriptPolicyRunType <RunType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ScriptBody>k__BackingField;
    public MachineScriptPolicyRunType RunType { get; public set; }
    public string ScriptBody { get; public set; }
    [CompilerGeneratedAttribute]
public MachineScriptPolicyRunType get_RunType();
    [CompilerGeneratedAttribute]
public void set_RunType(MachineScriptPolicyRunType value);
    [CompilerGeneratedAttribute]
public string get_ScriptBody();
    [CompilerGeneratedAttribute]
public void set_ScriptBody(string value);
}
public enum Octopus.Client.Model.MachineScriptPolicyRunType : Enum {
    public int value__;
    public static MachineScriptPolicyRunType InheritFromDefault;
    public static MachineScriptPolicyRunType Inline;
    [ObsoleteAttribute("The connectivity setting is now configured per MachineHealthCheckPolicy using the property HealthCheckType", "True")]
public static MachineScriptPolicyRunType OnlyConnectivity;
}
public class Octopus.Client.Model.MachineUpdatePolicy : object {
    [CompilerGeneratedAttribute]
private CalamariUpdateBehavior <CalamariUpdateBehavior>k__BackingField;
    [CompilerGeneratedAttribute]
private TentacleUpdateBehavior <TentacleUpdateBehavior>k__BackingField;
    [CompilerGeneratedAttribute]
private KubernetesAgentUpdateBehavior <KubernetesAgentUpdateBehavior>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TentacleUpdateAccountId>k__BackingField;
    public CalamariUpdateBehavior CalamariUpdateBehavior { get; public set; }
    public TentacleUpdateBehavior TentacleUpdateBehavior { get; public set; }
    public KubernetesAgentUpdateBehavior KubernetesAgentUpdateBehavior { get; public set; }
    public string TentacleUpdateAccountId { get; public set; }
    [CompilerGeneratedAttribute]
public CalamariUpdateBehavior get_CalamariUpdateBehavior();
    [CompilerGeneratedAttribute]
public void set_CalamariUpdateBehavior(CalamariUpdateBehavior value);
    [CompilerGeneratedAttribute]
public TentacleUpdateBehavior get_TentacleUpdateBehavior();
    [CompilerGeneratedAttribute]
public void set_TentacleUpdateBehavior(TentacleUpdateBehavior value);
    [CompilerGeneratedAttribute]
public KubernetesAgentUpdateBehavior get_KubernetesAgentUpdateBehavior();
    [CompilerGeneratedAttribute]
public void set_KubernetesAgentUpdateBehavior(KubernetesAgentUpdateBehavior value);
    [CompilerGeneratedAttribute]
public string get_TentacleUpdateAccountId();
    [CompilerGeneratedAttribute]
public void set_TentacleUpdateAccountId(string value);
}
public class Octopus.Client.Model.MaintenanceConfigurationResource : Resource {
    [CompilerGeneratedAttribute]
private bool <IsInMaintenanceMode>k__BackingField;
    [WriteableAttribute]
public bool IsInMaintenanceMode { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_IsInMaintenanceMode();
    [CompilerGeneratedAttribute]
public void set_IsInMaintenanceMode(bool value);
}
public class Octopus.Client.Model.MavenFeedResource : FeedResource {
    [CompilerGeneratedAttribute]
private int <DownloadAttempts>k__BackingField;
    [CompilerGeneratedAttribute]
private int <DownloadRetryBackoffSeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FeedUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Username>k__BackingField;
    [CompilerGeneratedAttribute]
private SensitiveValue <Password>k__BackingField;
    public FeedType FeedType { get; }
    [WriteableAttribute]
public int DownloadAttempts { get; public set; }
    [WriteableAttribute]
public int DownloadRetryBackoffSeconds { get; public set; }
    [WriteableAttribute]
public string FeedUri { get; public set; }
    [WriteableAttribute]
public string Username { get; public set; }
    [WriteableAttribute]
public SensitiveValue Password { get; public set; }
    public virtual FeedType get_FeedType();
    [CompilerGeneratedAttribute]
public int get_DownloadAttempts();
    [CompilerGeneratedAttribute]
public void set_DownloadAttempts(int value);
    [CompilerGeneratedAttribute]
public int get_DownloadRetryBackoffSeconds();
    [CompilerGeneratedAttribute]
public void set_DownloadRetryBackoffSeconds(int value);
    [CompilerGeneratedAttribute]
public string get_FeedUri();
    [CompilerGeneratedAttribute]
public void set_FeedUri(string value);
    [CompilerGeneratedAttribute]
public string get_Username();
    [CompilerGeneratedAttribute]
public void set_Username(string value);
    [CompilerGeneratedAttribute]
public SensitiveValue get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(SensitiveValue value);
}
public class Octopus.Client.Model.Migrations.MigrationImportResource : Resource {
    [CompilerGeneratedAttribute]
private string <PackageId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PackageFeedSpaceId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PackageVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Password>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsEncryptedPackage>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDryRun>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <OverwriteExisting>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DeletePackageOnCompletion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SuccessCallbackUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FailureCallbackUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TaskId>k__BackingField;
    [WriteableAttribute]
public string PackageId { get; public set; }
    [WriteableAttribute]
public string PackageFeedSpaceId { get; public set; }
    [WriteableAttribute]
public string PackageVersion { get; public set; }
    [WriteableAttribute]
public string Password { get; public set; }
    [WriteableAttribute]
public bool IsEncryptedPackage { get; public set; }
    [WriteableAttribute]
public bool IsDryRun { get; public set; }
    [WriteableAttribute]
public bool OverwriteExisting { get; public set; }
    [WriteableAttribute]
public bool DeletePackageOnCompletion { get; public set; }
    [WriteableAttribute]
public string SuccessCallbackUri { get; public set; }
    [WriteableAttribute]
public string FailureCallbackUri { get; public set; }
    public string TaskId { get; public set; }
    [CompilerGeneratedAttribute]
public string get_PackageId();
    [CompilerGeneratedAttribute]
public void set_PackageId(string value);
    [CompilerGeneratedAttribute]
public string get_PackageFeedSpaceId();
    [CompilerGeneratedAttribute]
public void set_PackageFeedSpaceId(string value);
    [CompilerGeneratedAttribute]
public string get_PackageVersion();
    [CompilerGeneratedAttribute]
public void set_PackageVersion(string value);
    [CompilerGeneratedAttribute]
public string get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(string value);
    [CompilerGeneratedAttribute]
public bool get_IsEncryptedPackage();
    [CompilerGeneratedAttribute]
public void set_IsEncryptedPackage(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsDryRun();
    [CompilerGeneratedAttribute]
public void set_IsDryRun(bool value);
    [CompilerGeneratedAttribute]
public bool get_OverwriteExisting();
    [CompilerGeneratedAttribute]
public void set_OverwriteExisting(bool value);
    [CompilerGeneratedAttribute]
public bool get_DeletePackageOnCompletion();
    [CompilerGeneratedAttribute]
public void set_DeletePackageOnCompletion(bool value);
    [CompilerGeneratedAttribute]
public string get_SuccessCallbackUri();
    [CompilerGeneratedAttribute]
public void set_SuccessCallbackUri(string value);
    [CompilerGeneratedAttribute]
public string get_FailureCallbackUri();
    [CompilerGeneratedAttribute]
public void set_FailureCallbackUri(string value);
    [CompilerGeneratedAttribute]
public string get_TaskId();
    [CompilerGeneratedAttribute]
public void set_TaskId(string value);
}
public class Octopus.Client.Model.Migrations.MigrationPartialExportResource : Resource {
    [CompilerGeneratedAttribute]
private string <PackageId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PackageVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Password>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <Projects>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IgnoreCertificates>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IgnoreMachines>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IgnoreDeployments>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IgnoreTenants>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IncludeTaskLogs>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EncryptPackage>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DestinationPackageFeedSpaceId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DestinationApiKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DestinationPackageFeed>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SuccessCallbackUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FailureCallbackUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TaskId>k__BackingField;
    [WriteableAttribute]
public string PackageId { get; public set; }
    [WriteableAttribute]
public string SpaceId { get; public set; }
    [WriteableAttribute]
public string PackageVersion { get; public set; }
    [WriteableAttribute]
public string Password { get; public set; }
    [WriteableAttribute]
public List`1<string> Projects { get; public set; }
    [WriteableAttribute]
public bool IgnoreCertificates { get; public set; }
    [WriteableAttribute]
public bool IgnoreMachines { get; public set; }
    [WriteableAttribute]
public bool IgnoreDeployments { get; public set; }
    [WriteableAttribute]
public bool IgnoreTenants { get; public set; }
    [WriteableAttribute]
public bool IncludeTaskLogs { get; public set; }
    [WriteableAttribute]
public bool EncryptPackage { get; public set; }
    [WriteableAttribute]
public string DestinationPackageFeedSpaceId { get; public set; }
    [WriteableAttribute]
public string DestinationApiKey { get; public set; }
    [WriteableAttribute]
public string DestinationPackageFeed { get; public set; }
    [WriteableAttribute]
public string SuccessCallbackUri { get; public set; }
    [WriteableAttribute]
public string FailureCallbackUri { get; public set; }
    public string TaskId { get; public set; }
    [CompilerGeneratedAttribute]
public string get_PackageId();
    [CompilerGeneratedAttribute]
public void set_PackageId(string value);
    [CompilerGeneratedAttribute]
public string get_SpaceId();
    [CompilerGeneratedAttribute]
public void set_SpaceId(string value);
    [CompilerGeneratedAttribute]
public string get_PackageVersion();
    [CompilerGeneratedAttribute]
public void set_PackageVersion(string value);
    [CompilerGeneratedAttribute]
public string get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(string value);
    [CompilerGeneratedAttribute]
public List`1<string> get_Projects();
    [CompilerGeneratedAttribute]
public void set_Projects(List`1<string> value);
    [CompilerGeneratedAttribute]
public bool get_IgnoreCertificates();
    [CompilerGeneratedAttribute]
public void set_IgnoreCertificates(bool value);
    [CompilerGeneratedAttribute]
public bool get_IgnoreMachines();
    [CompilerGeneratedAttribute]
public void set_IgnoreMachines(bool value);
    [CompilerGeneratedAttribute]
public bool get_IgnoreDeployments();
    [CompilerGeneratedAttribute]
public void set_IgnoreDeployments(bool value);
    [CompilerGeneratedAttribute]
public bool get_IgnoreTenants();
    [CompilerGeneratedAttribute]
public void set_IgnoreTenants(bool value);
    [CompilerGeneratedAttribute]
public bool get_IncludeTaskLogs();
    [CompilerGeneratedAttribute]
public void set_IncludeTaskLogs(bool value);
    [CompilerGeneratedAttribute]
public bool get_EncryptPackage();
    [CompilerGeneratedAttribute]
public void set_EncryptPackage(bool value);
    [CompilerGeneratedAttribute]
public string get_DestinationPackageFeedSpaceId();
    [CompilerGeneratedAttribute]
public void set_DestinationPackageFeedSpaceId(string value);
    [CompilerGeneratedAttribute]
public string get_DestinationApiKey();
    [CompilerGeneratedAttribute]
public void set_DestinationApiKey(string value);
    [CompilerGeneratedAttribute]
public string get_DestinationPackageFeed();
    [CompilerGeneratedAttribute]
public void set_DestinationPackageFeed(string value);
    [CompilerGeneratedAttribute]
public string get_SuccessCallbackUri();
    [CompilerGeneratedAttribute]
public void set_SuccessCallbackUri(string value);
    [CompilerGeneratedAttribute]
public string get_FailureCallbackUri();
    [CompilerGeneratedAttribute]
public void set_FailureCallbackUri(string value);
    [CompilerGeneratedAttribute]
public string get_TaskId();
    [CompilerGeneratedAttribute]
public void set_TaskId(string value);
}
public class Octopus.Client.Model.MissingVariableResource : object {
    [CompilerGeneratedAttribute]
private string <ProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LibraryVariableSetId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VariableTemplateName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VariableTemplateId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EnvironmentId>k__BackingField;
    [CompilerGeneratedAttribute]
private LinkCollection <Links>k__BackingField;
    [JsonPropertyAttribute]
public string ProjectId { get; public set; }
    [JsonPropertyAttribute]
public string LibraryVariableSetId { get; public set; }
    public string VariableTemplateName { get; public set; }
    public string VariableTemplateId { get; public set; }
    [JsonPropertyAttribute]
public string EnvironmentId { get; public set; }
    public LinkCollection Links { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ProjectId();
    [CompilerGeneratedAttribute]
public void set_ProjectId(string value);
    [CompilerGeneratedAttribute]
public string get_LibraryVariableSetId();
    [CompilerGeneratedAttribute]
public void set_LibraryVariableSetId(string value);
    [CompilerGeneratedAttribute]
public string get_VariableTemplateName();
    [CompilerGeneratedAttribute]
public void set_VariableTemplateName(string value);
    [CompilerGeneratedAttribute]
public string get_VariableTemplateId();
    [CompilerGeneratedAttribute]
public void set_VariableTemplateId(string value);
    [CompilerGeneratedAttribute]
public string get_EnvironmentId();
    [CompilerGeneratedAttribute]
public void set_EnvironmentId(string value);
    [CompilerGeneratedAttribute]
public LinkCollection get_Links();
    [CompilerGeneratedAttribute]
public void set_Links(LinkCollection value);
}
public class Octopus.Client.Model.ModifyChannelCommand : ChannelResource {
    [CompilerGeneratedAttribute]
private string <ChangeDescription>k__BackingField;
    public string ChangeDescription { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_ChangeDescription();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ChangeDescription(string value);
}
public class Octopus.Client.Model.ModifyDeploymentProcessCommand : DeploymentProcessResource {
    [CompilerGeneratedAttribute]
private string <ChangeDescription>k__BackingField;
    public string ChangeDescription { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_ChangeDescription();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ChangeDescription(string value);
}
public class Octopus.Client.Model.ModifyDeploymentSettingsCommand : DeploymentSettingsResource {
    [CompilerGeneratedAttribute]
private string <ChangeDescription>k__BackingField;
    public string ChangeDescription { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_ChangeDescription();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ChangeDescription(string value);
}
public enum Octopus.Client.Model.MultipleAccountType : Enum {
    public int value__;
    public static MultipleAccountType None;
    public static MultipleAccountType KubernetesStandard;
    public static MultipleAccountType KubernetesAws;
    public static MultipleAccountType KubernetesAzure;
    public static MultipleAccountType KubernetesCertificate;
    public static MultipleAccountType KubernetesPodService;
    public static MultipleAccountType KubernetesGoogleCloud;
}
public class Octopus.Client.Model.MultiTenancyStatusResource : Resource {
    [CompilerGeneratedAttribute]
private bool <Enabled>k__BackingField;
    public bool Enabled { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_Enabled();
    [CompilerGeneratedAttribute]
public void set_Enabled(bool value);
}
public class Octopus.Client.Model.NamedReferenceItem : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DisplayIdAndName>k__BackingField;
    public string Id { get; public set; }
    public string DisplayName { get; public set; }
    public bool DisplayIdAndName { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public bool get_DisplayIdAndName();
    [CompilerGeneratedAttribute]
public void set_DisplayIdAndName(bool value);
}
public class Octopus.Client.Model.NamedReferenceItemCollection : List`1<NamedReferenceItem> {
}
[AttributeUsageAttribute("128")]
public class Octopus.Client.Model.NormalizeAttribute : Attribute {
}
[AttributeUsageAttribute("128")]
public class Octopus.Client.Model.NotDocumentReferenceAttribute : Attribute {
}
[AttributeUsageAttribute("128")]
public class Octopus.Client.Model.NotReadableAttribute : ApiPropertyAttribute {
}
public class Octopus.Client.Model.NuGetFeedResource : FeedResource {
    public static int DefaultDownloadAttempts;
    public static int DefaultDownloadRetryBackoffSeconds;
    public static bool DefaultEnhancedMode;
    [CompilerGeneratedAttribute]
private int <DownloadAttempts>k__BackingField;
    [CompilerGeneratedAttribute]
private int <DownloadRetryBackoffSeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnhancedMode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FeedUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Username>k__BackingField;
    [CompilerGeneratedAttribute]
private SensitiveValue <Password>k__BackingField;
    public FeedType FeedType { get; }
    [WriteableAttribute]
public int DownloadAttempts { get; public set; }
    [WriteableAttribute]
public int DownloadRetryBackoffSeconds { get; public set; }
    [WriteableAttribute]
public bool EnhancedMode { get; public set; }
    [WriteableAttribute]
public string FeedUri { get; public set; }
    [WriteableAttribute]
public string Username { get; public set; }
    [WriteableAttribute]
public SensitiveValue Password { get; public set; }
    private static NuGetFeedResource();
    public virtual FeedType get_FeedType();
    [CompilerGeneratedAttribute]
public int get_DownloadAttempts();
    [CompilerGeneratedAttribute]
public void set_DownloadAttempts(int value);
    [CompilerGeneratedAttribute]
public int get_DownloadRetryBackoffSeconds();
    [CompilerGeneratedAttribute]
public void set_DownloadRetryBackoffSeconds(int value);
    [CompilerGeneratedAttribute]
public bool get_EnhancedMode();
    [CompilerGeneratedAttribute]
public void set_EnhancedMode(bool value);
    [CompilerGeneratedAttribute]
public string get_FeedUri();
    [CompilerGeneratedAttribute]
public void set_FeedUri(string value);
    [CompilerGeneratedAttribute]
public string get_Username();
    [CompilerGeneratedAttribute]
public void set_Username(string value);
    [CompilerGeneratedAttribute]
public SensitiveValue get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(SensitiveValue value);
}
public class Octopus.Client.Model.NumericReportData : object {
    [CompilerGeneratedAttribute]
private String[] <Labels>k__BackingField;
    [CompilerGeneratedAttribute]
private NumericReportSeries[] <Series>k__BackingField;
    public String[] Labels { get; public set; }
    public NumericReportSeries[] Series { get; public set; }
    [CompilerGeneratedAttribute]
public String[] get_Labels();
    [CompilerGeneratedAttribute]
public void set_Labels(String[] value);
    [CompilerGeneratedAttribute]
public NumericReportSeries[] get_Series();
    [CompilerGeneratedAttribute]
public void set_Series(NumericReportSeries[] value);
}
public class Octopus.Client.Model.NumericReportSeries : object {
    [CompilerGeneratedAttribute]
private string <Label>k__BackingField;
    [CompilerGeneratedAttribute]
private Double[] <Data>k__BackingField;
    public string Label { get; public set; }
    public Double[] Data { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Label();
    [CompilerGeneratedAttribute]
public void set_Label(string value);
    [CompilerGeneratedAttribute]
public Double[] get_Data();
    [CompilerGeneratedAttribute]
public void set_Data(Double[] value);
}
public class Octopus.Client.Model.OciRegistryFeedResource : FeedResource {
    [CompilerGeneratedAttribute]
private string <FeedUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Username>k__BackingField;
    [CompilerGeneratedAttribute]
private SensitiveValue <Password>k__BackingField;
    public FeedType FeedType { get; }
    [WriteableAttribute]
public string FeedUri { get; public set; }
    [WriteableAttribute]
public string Username { get; public set; }
    [WriteableAttribute]
public SensitiveValue Password { get; public set; }
    public virtual FeedType get_FeedType();
    [CompilerGeneratedAttribute]
public string get_FeedUri();
    [CompilerGeneratedAttribute]
public void set_FeedUri(string value);
    [CompilerGeneratedAttribute]
public string get_Username();
    [CompilerGeneratedAttribute]
public void set_Username(string value);
    [CompilerGeneratedAttribute]
public SensitiveValue get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(SensitiveValue value);
}
internal class Octopus.Client.Model.OctopusCustomHeaders : object {
    internal static IEnvironmentHelper environmentHelper;
    internal static IAutomationEnvironmentProvider automationEnvironmentProvider;
    [CompilerGeneratedAttribute]
private string <UserAgent>k__BackingField;
    internal string UserAgent { get; }
    internal OctopusCustomHeaders(string requestingTool);
    private static OctopusCustomHeaders();
    [CompilerGeneratedAttribute]
internal string get_UserAgent();
}
public class Octopus.Client.Model.OctopusProjectFeedResource : FeedResource {
    public FeedType FeedType { get; }
    public virtual FeedType get_FeedType();
}
public class Octopus.Client.Model.OctopusServerClusterSummaryResource : object {
    [CompilerGeneratedAttribute]
private OctopusServerNodeSummaryResource[] <Nodes>k__BackingField;
    [CompilerGeneratedAttribute]
private LinkCollection <Links>k__BackingField;
    public OctopusServerNodeSummaryResource[] Nodes { get; public set; }
    public LinkCollection Links { get; public set; }
    [CompilerGeneratedAttribute]
public OctopusServerNodeSummaryResource[] get_Nodes();
    [CompilerGeneratedAttribute]
public void set_Nodes(OctopusServerNodeSummaryResource[] value);
    [CompilerGeneratedAttribute]
public LinkCollection get_Links();
    [CompilerGeneratedAttribute]
public void set_Links(LinkCollection value);
}
public class Octopus.Client.Model.OctopusServerNodeDetailsResource : Resource {
    [CompilerGeneratedAttribute]
private int <RunningTasks>k__BackingField;
    [WriteableAttribute]
public int RunningTasks { get; public set; }
    [CompilerGeneratedAttribute]
public int get_RunningTasks();
    [CompilerGeneratedAttribute]
public void set_RunningTasks(int value);
}
public class Octopus.Client.Model.OctopusServerNodeResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaxConcurrentTasks>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsInMaintenanceMode>k__BackingField;
    public string Name { get; public set; }
    [WriteableAttribute]
public int MaxConcurrentTasks { get; public set; }
    [WriteableAttribute]
public bool IsInMaintenanceMode { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public int get_MaxConcurrentTasks();
    [CompilerGeneratedAttribute]
public void set_MaxConcurrentTasks(int value);
    [CompilerGeneratedAttribute]
public bool get_IsInMaintenanceMode();
    [CompilerGeneratedAttribute]
public void set_IsInMaintenanceMode(bool value);
}
public class Octopus.Client.Model.OctopusServerNodeSummaryResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaxConcurrentTasks>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsInMaintenanceMode>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <LastSeen>k__BackingField;
    [CompilerGeneratedAttribute]
private LeadershipRank <Rank>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsLeader>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsOffline>k__BackingField;
    [CompilerGeneratedAttribute]
private int <RunningTaskCount>k__BackingField;
    public string Name { get; public set; }
    public int MaxConcurrentTasks { get; public set; }
    public bool IsInMaintenanceMode { get; public set; }
    public Nullable`1<DateTimeOffset> LastSeen { get; public set; }
    [ObsoleteAttribute("Removed in Octopus Server 2020.3.0")]
public LeadershipRank Rank { get; public set; }
    [ObsoleteAttribute("Removed in Octopus Server 2020.3.0")]
public bool IsLeader { get; public set; }
    public bool IsOffline { get; public set; }
    public int RunningTaskCount { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public int get_MaxConcurrentTasks();
    [CompilerGeneratedAttribute]
public void set_MaxConcurrentTasks(int value);
    [CompilerGeneratedAttribute]
public bool get_IsInMaintenanceMode();
    [CompilerGeneratedAttribute]
public void set_IsInMaintenanceMode(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_LastSeen();
    [CompilerGeneratedAttribute]
public void set_LastSeen(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public LeadershipRank get_Rank();
    [CompilerGeneratedAttribute]
public void set_Rank(LeadershipRank value);
    [CompilerGeneratedAttribute]
public bool get_IsLeader();
    [CompilerGeneratedAttribute]
public void set_IsLeader(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsOffline();
    [CompilerGeneratedAttribute]
public void set_IsOffline(bool value);
    [CompilerGeneratedAttribute]
public int get_RunningTaskCount();
    [CompilerGeneratedAttribute]
public void set_RunningTaskCount(int value);
}
public class Octopus.Client.Model.OidcConfigResource : object {
    [CompilerGeneratedAttribute]
private string <OidcIssuerUrl>k__BackingField;
    [WriteableAttribute]
public string OidcIssuerUrl { get; public set; }
    public OidcConfigResource(string oidcIssuerUrl);
    [CompilerGeneratedAttribute]
public string get_OidcIssuerUrl();
    [CompilerGeneratedAttribute]
public void set_OidcIssuerUrl(string value);
}
public enum Octopus.Client.Model.OverwriteMode : Enum {
    public int value__;
    public static OverwriteMode FailIfExists;
    public static OverwriteMode OverwriteExisting;
    public static OverwriteMode IgnoreIfExists;
}
[ExtensionAttribute]
internal static class Octopus.Client.Model.OverwriteModeLink : object {
    public static string Link;
    private static OverwriteModeLink();
    [ExtensionAttribute]
public static bool ConvertToLegacyReplaceFlag(OverwriteMode this, ILog logger);
}
public enum Octopus.Client.Model.PackageAcquisitionLocation : Enum {
    public int value__;
    public static PackageAcquisitionLocation Server;
    public static PackageAcquisitionLocation ExecutionTarget;
    public static PackageAcquisitionLocation NotAcquired;
}
public class Octopus.Client.Model.PackageFromBuiltInFeedResource : PackageResource {
    [CompilerGeneratedAttribute]
private Nullable`1<long> <PackageSizeBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Hash>k__BackingField;
    public Nullable`1<long> PackageSizeBytes { get; public set; }
    public string Hash { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<long> get_PackageSizeBytes();
    [CompilerGeneratedAttribute]
public void set_PackageSizeBytes(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public string get_Hash();
    [CompilerGeneratedAttribute]
public void set_Hash(string value);
}
public class Octopus.Client.Model.PackageReference : object {
    private string name;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PackageId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FeedId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AcquisitionLocation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StepPackageInputsReferenceId>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Properties>k__BackingField;
    public string Id { get; public set; }
    public string Name { get; public set; }
    public string PackageId { get; public set; }
    public string FeedId { get; public set; }
    public string AcquisitionLocation { get; public set; }
    public string Version { get; public set; }
    [JsonPropertyAttribute]
public string StepPackageInputsReferenceId { get; public set; }
    [JsonPropertyAttribute]
public IDictionary`2<string, string> Properties { get; private set; }
    [JsonIgnoreAttribute]
public bool IsPrimaryPackage { get; }
    public PackageReference(string name, string packageId, string feedId, PackageAcquisitionLocation acquisitionLocation);
    public PackageReference(string name, string packageId, string feedId, string acquisitionLocation);
    public PackageReference(string packageId, string feedId, PackageAcquisitionLocation acquisitionLocation);
    public PackageReference(string packageId, string feedId, string acquisitionLocation);
    public PackageReference(string packageId, string feedId);
    [JsonConstructorAttribute]
protected PackageReference(string id, string name, string packageId, string feedId, string acquisitionLocation);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    public string get_Name();
    public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_PackageId();
    [CompilerGeneratedAttribute]
public void set_PackageId(string value);
    [CompilerGeneratedAttribute]
public string get_FeedId();
    [CompilerGeneratedAttribute]
public void set_FeedId(string value);
    [CompilerGeneratedAttribute]
public string get_AcquisitionLocation();
    [CompilerGeneratedAttribute]
public void set_AcquisitionLocation(string value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
    [CompilerGeneratedAttribute]
public string get_StepPackageInputsReferenceId();
    [CompilerGeneratedAttribute]
public void set_StepPackageInputsReferenceId(string value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Properties();
    [CompilerGeneratedAttribute]
private void set_Properties(IDictionary`2<string, string> value);
    public bool get_IsPrimaryPackage();
    public PackageReference Clone();
}
public class Octopus.Client.Model.PackageReferenceCollection : object {
    private Dictionary`2<string, PackageReference> nameMap;
    public PackageReference PrimaryPackage { get; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    public PackageReference get_PrimaryPackage();
    public sealed virtual void Add(PackageReference item);
    public PackageReference GetByName(string name);
    public bool TryGetByName(string name, PackageReference& package);
    public sealed virtual bool Contains(PackageReference item);
    public sealed virtual void CopyTo(PackageReference[] array, int arrayIndex);
    public sealed virtual bool Remove(PackageReference item);
    public sealed virtual int get_Count();
    public sealed virtual void Clear();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual IEnumerator`1<PackageReference> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
public class Octopus.Client.Model.PackageResource : Resource {
    [CompilerGeneratedAttribute]
private string <PackageId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FeedId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Summary>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <Published>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ReleaseNotes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FileExtension>k__BackingField;
    [CompilerGeneratedAttribute]
private OctopusPackageVersionBuildInformationMappedResource <PackageVersionBuildInformation>k__BackingField;
    [ObsoleteAttribute("Replaced by PackageId")]
public string NuGetPackageId { get; public set; }
    public string PackageId { get; public set; }
    [ObsoleteAttribute("Replaced by FeedId")]
public string NuGetFeedId { get; public set; }
    public string FeedId { get; public set; }
    public string Title { get; public set; }
    public string Summary { get; public set; }
    public string Version { get; public set; }
    public string Description { get; public set; }
    public Nullable`1<DateTimeOffset> Published { get; public set; }
    public string ReleaseNotes { get; public set; }
    public string FileExtension { get; public set; }
    public OctopusPackageVersionBuildInformationMappedResource PackageVersionBuildInformation { get; public set; }
    public string get_NuGetPackageId();
    public void set_NuGetPackageId(string value);
    [CompilerGeneratedAttribute]
public string get_PackageId();
    [CompilerGeneratedAttribute]
public void set_PackageId(string value);
    public string get_NuGetFeedId();
    public void set_NuGetFeedId(string value);
    [CompilerGeneratedAttribute]
public string get_FeedId();
    [CompilerGeneratedAttribute]
public void set_FeedId(string value);
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(string value);
    [CompilerGeneratedAttribute]
public string get_Summary();
    [CompilerGeneratedAttribute]
public void set_Summary(string value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_Published();
    [CompilerGeneratedAttribute]
public void set_Published(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public string get_ReleaseNotes();
    [CompilerGeneratedAttribute]
public void set_ReleaseNotes(string value);
    [CompilerGeneratedAttribute]
public string get_FileExtension();
    [CompilerGeneratedAttribute]
public void set_FileExtension(string value);
    [CompilerGeneratedAttribute]
public OctopusPackageVersionBuildInformationMappedResource get_PackageVersionBuildInformation();
    [CompilerGeneratedAttribute]
public void set_PackageVersionBuildInformation(OctopusPackageVersionBuildInformationMappedResource value);
}
public class Octopus.Client.Model.PackageSignatureResource : object {
    [CompilerGeneratedAttribute]
private Byte[] <Signature>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BaseVersion>k__BackingField;
    public Byte[] Signature { get; public set; }
    public string BaseVersion { get; public set; }
    [CompilerGeneratedAttribute]
public Byte[] get_Signature();
    [CompilerGeneratedAttribute]
public void set_Signature(Byte[] value);
    [CompilerGeneratedAttribute]
public string get_BaseVersion();
    [CompilerGeneratedAttribute]
public void set_BaseVersion(string value);
}
public class Octopus.Client.Model.PerformanceConfigurationResource : Resource {
    [CompilerGeneratedAttribute]
private DashboardRenderMode <DefaultDashboardRenderMode>k__BackingField;
    [WriteableAttribute]
public DashboardRenderMode DefaultDashboardRenderMode { get; public set; }
    [CompilerGeneratedAttribute]
public DashboardRenderMode get_DefaultDashboardRenderMode();
    [CompilerGeneratedAttribute]
public void set_DefaultDashboardRenderMode(DashboardRenderMode value);
}
[TypeConverterAttribute("Octopus.Client.Serialization.PermissionTypeConverter")]
[<775b3474-4bdb-4dfa-9504-95167a40b14b>NullableContextAttribute("1")]
[<7ee1374a-350e-48d8-b14b-16bf02905262>NullableAttribute("0")]
[DebuggerDisplayAttribute("Id")]
public class Octopus.Client.Model.Permission : object {
    [DescriptionAttribute("Perform system-level functions like configuring HTTP web hosting, the public URL, server nodes, maintenance mode, and server diagnostics")]
public static Permission AdministerSystem;
    [DescriptionAttribute("Edit project details")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission ProjectEdit;
    [SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DescriptionAttribute("View the details of projects")]
public static Permission ProjectView;
    [SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DescriptionAttribute("Create projects")]
public static Permission ProjectCreate;
    [DescriptionAttribute("Delete projects")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission ProjectDelete;
    [SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DescriptionAttribute("View the deployment process and channels associated with a project")]
public static Permission ProcessView;
    [DescriptionAttribute("Edit the deployment process and channels associated with a project")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission ProcessEdit;
    [DescriptionAttribute("Edit variables belonging to a project")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission VariableEdit;
    [DescriptionAttribute("Edit non-environment scoped variables belonging to a project or library variable set")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission VariableEditUnscoped;
    [SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DescriptionAttribute("View variables belonging to a project or library variable set")]
public static Permission VariableView;
    [SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DescriptionAttribute("View non-environment scoped variables belonging to a project or library variable set")]
public static Permission VariableViewUnscoped;
    [DescriptionAttribute("Create a release for a project")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission ReleaseCreate;
    [DescriptionAttribute("View a release of a project")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission ReleaseView;
    [DescriptionAttribute("Edit a release of a project")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission ReleaseEdit;
    [SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DescriptionAttribute("Delete a release of a project")]
public static Permission ReleaseDelete;
    [SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DescriptionAttribute("Block a release from progressing to the next lifecycle phase")]
public static Permission DefectReport;
    [DescriptionAttribute("Unblock a release so it can progress to the next phase")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission DefectResolve;
    [DescriptionAttribute("Deploy releases to target environments")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission DeploymentCreate;
    [SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DescriptionAttribute("Delete deployments")]
public static Permission DeploymentDelete;
    [DescriptionAttribute("View deployments")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission DeploymentView;
    [SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DescriptionAttribute("View environments")]
public static Permission EnvironmentView;
    [SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DescriptionAttribute("Create environments")]
public static Permission EnvironmentCreate;
    [SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DescriptionAttribute("Edit environments")]
public static Permission EnvironmentEdit;
    [SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DescriptionAttribute("Delete environments")]
public static Permission EnvironmentDelete;
    [DescriptionAttribute("Create machines")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission MachineCreate;
    [DescriptionAttribute("Edit machines")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission MachineEdit;
    [SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DescriptionAttribute("View machines")]
public static Permission MachineView;
    [DescriptionAttribute("Delete machines")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission MachineDelete;
    [DescriptionAttribute("View the artifacts created manually and during deployment")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission ArtifactView;
    [DescriptionAttribute("Manually create artifacts")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission ArtifactCreate;
    [SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DescriptionAttribute("Edit the details describing artifacts")]
public static Permission ArtifactEdit;
    [DescriptionAttribute("Delete artifacts")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission ArtifactDelete;
    [DescriptionAttribute("View package feeds and the packages in them")]
public static Permission FeedView;
    [DescriptionAttribute("View release and deployment events")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission EventView;
    [DescriptionAttribute("View library variable sets")]
public static Permission LibraryVariableSetView;
    [DescriptionAttribute("Create library variable sets")]
public static Permission LibraryVariableSetCreate;
    [DescriptionAttribute("Edit library variable sets")]
public static Permission LibraryVariableSetEdit;
    [DescriptionAttribute("Delete library variable sets")]
public static Permission LibraryVariableSetDelete;
    [DescriptionAttribute("View project groups")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission ProjectGroupView;
    [DescriptionAttribute("Create project groups")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission ProjectGroupCreate;
    [DescriptionAttribute("Edit project groups")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission ProjectGroupEdit;
    [DescriptionAttribute("Delete project groups")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission ProjectGroupDelete;
    [DescriptionAttribute("Create teams")]
public static Permission TeamCreate;
    [DescriptionAttribute("View teams")]
public static Permission TeamView;
    [DescriptionAttribute("Edit teams")]
public static Permission TeamEdit;
    [DescriptionAttribute("Delete teams")]
public static Permission TeamDelete;
    [DescriptionAttribute("View users")]
public static Permission UserView;
    [DescriptionAttribute("Invite users to register accounts")]
public static Permission UserInvite;
    [DescriptionAttribute("View other user's roles")]
public static Permission UserRoleView;
    [DescriptionAttribute("Edit user role definitions")]
public static Permission UserRoleEdit;
    [SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DescriptionAttribute("View summary-level information associated with a task")]
public static Permission TaskView;
    [SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DescriptionAttribute("View detailed information about the execution of a task, including the task log output")]
[ObsoleteAttribute("TaskViewLog is no longer supported by Octopus Server. Instead use the TaskView permission, which also grants access to Task logs", "False")]
public static Permission TaskViewLog;
    [SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DescriptionAttribute("Explicitly create (run) server tasks")]
public static Permission TaskCreate;
    [SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DescriptionAttribute("Cancel server tasks")]
public static Permission TaskCancel;
    [SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DescriptionAttribute("Edit server tasks")]
public static Permission TaskEdit;
    [SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DescriptionAttribute("View interruptions generated during deployments")]
public static Permission InterruptionView;
    [DescriptionAttribute("Take responsibility for and submit interruptions generated during deployments")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission InterruptionSubmit;
    [SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DescriptionAttribute("Take responsibility for and submit interruptions generated during deployments when the user is in a designated responsible team")]
public static Permission InterruptionViewSubmitResponsible;
    [DescriptionAttribute("Push new packages to the built-in package repository")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission BuiltInFeedPush;
    [SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DescriptionAttribute("Replace or delete packages in the built-in package repository")]
public static Permission BuiltInFeedAdminister;
    [SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DescriptionAttribute("Retrieve the contents of packages in the built-in package repository")]
public static Permission BuiltInFeedDownload;
    [DescriptionAttribute("View step templates")]
public static Permission ActionTemplateView;
    [DescriptionAttribute("Create step templates")]
public static Permission ActionTemplateCreate;
    [DescriptionAttribute("Edit step templates")]
public static Permission ActionTemplateEdit;
    [DescriptionAttribute("Delete step templates")]
public static Permission ActionTemplateDelete;
    [DescriptionAttribute("Create lifecycles")]
public static Permission LifecycleCreate;
    [DescriptionAttribute("View lifecycles")]
public static Permission LifecycleView;
    [DescriptionAttribute("Edit lifecycles")]
public static Permission LifecycleEdit;
    [DescriptionAttribute("Delete lifecycles")]
public static Permission LifecycleDelete;
    [DescriptionAttribute("View accounts")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission AccountView;
    [SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DescriptionAttribute("Edit accounts")]
public static Permission AccountEdit;
    [DescriptionAttribute("Create accounts")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission AccountCreate;
    [DescriptionAttribute("Delete accounts")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission AccountDelete;
    [DescriptionAttribute("Create tenants")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission TenantCreate;
    [DescriptionAttribute("Edit tenants")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission TenantEdit;
    [SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DescriptionAttribute("View tenants")]
public static Permission TenantView;
    [DescriptionAttribute("Delete tenants")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission TenantDelete;
    [DescriptionAttribute("Create tag sets")]
public static Permission TagSetCreate;
    [DescriptionAttribute("Edit tag sets")]
public static Permission TagSetEdit;
    [DescriptionAttribute("Delete tag sets")]
public static Permission TagSetDelete;
    [DescriptionAttribute("View telemetry data")]
public static Permission TelemetryView;
    [DescriptionAttribute("Create health check policies")]
public static Permission MachinePolicyCreate;
    [DescriptionAttribute("View health check policies")]
public static Permission MachinePolicyView;
    [DescriptionAttribute("Edit health check policies")]
public static Permission MachinePolicyEdit;
    [DescriptionAttribute("Delete health check policies")]
public static Permission MachinePolicyDelete;
    [DescriptionAttribute("Create proxies")]
public static Permission ProxyCreate;
    [DescriptionAttribute("View proxies")]
public static Permission ProxyView;
    [DescriptionAttribute("Edit proxies")]
public static Permission ProxyEdit;
    [DescriptionAttribute("Delete proxies")]
public static Permission ProxyDelete;
    [DescriptionAttribute("Create subscriptions")]
public static Permission SubscriptionCreate;
    [DescriptionAttribute("View subscriptions")]
public static Permission SubscriptionView;
    [DescriptionAttribute("Edit subscriptions")]
public static Permission SubscriptionEdit;
    [DescriptionAttribute("Delete subscriptions")]
public static Permission SubscriptionDelete;
    [DescriptionAttribute("Create triggers")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission TriggerCreate;
    [DescriptionAttribute("View triggers")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission TriggerView;
    [DescriptionAttribute("Edit triggers")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission TriggerEdit;
    [SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DescriptionAttribute("Delete triggers")]
public static Permission TriggerDelete;
    [DescriptionAttribute("View certificates")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission CertificateView;
    [DescriptionAttribute("Create certificates")]
public static Permission CertificateCreate;
    [SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DescriptionAttribute("Edit certificates")]
public static Permission CertificateEdit;
    [DescriptionAttribute("Delete certificates")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission CertificateDelete;
    [DescriptionAttribute("Export certificate private-keys")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission CertificateExportPrivateKey;
    [DescriptionAttribute("Edit users")]
public static Permission UserEdit;
    [DescriptionAttribute("Configure server settings like Authentication, SMTP, and HTTP Security Headers")]
public static Permission ConfigureServer;
    [DescriptionAttribute("Edit feeds")]
public static Permission FeedEdit;
    [DescriptionAttribute("View the workers in worker pools")]
public static Permission WorkerView;
    [DescriptionAttribute("Edit workers and worker pools")]
public static Permission WorkerEdit;
    [DescriptionAttribute("Edit spaces")]
public static Permission SpaceEdit;
    [DescriptionAttribute("View spaces")]
public static Permission SpaceView;
    [DescriptionAttribute("Delete spaces")]
public static Permission SpaceDelete;
    [DescriptionAttribute("Create spaces")]
public static Permission SpaceCreate;
    [DescriptionAttribute("Create/update build information")]
public static Permission BuildInformationPush;
    [DescriptionAttribute("Replace or delete build information")]
public static Permission BuildInformationAdminister;
    [SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DescriptionAttribute("View runbooks")]
public static Permission RunbookView;
    [DescriptionAttribute("Edit runbooks")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission RunbookEdit;
    [DescriptionAttribute("View runbook runs")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission RunbookRunView;
    [DescriptionAttribute("Delete runbook runs")]
[SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Permission RunbookRunDelete;
    [SupportsRestrictionAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DescriptionAttribute("Create runbook runs")]
public static Permission RunbookRunCreate;
    [DescriptionAttribute("View Git credentials")]
public static Permission GitCredentialView;
    [DescriptionAttribute("Edit Git credentials")]
public static Permission GitCredentialEdit;
    [DescriptionAttribute("Delete archived event files")]
public static Permission EventRetentionDelete;
    [DescriptionAttribute("View/list archived event files")]
public static Permission EventRetentionView;
    [DescriptionAttribute("View Insights reports")]
public static Permission InsightsReportView;
    [DescriptionAttribute("Create Insights reports")]
public static Permission InsightsReportCreate;
    [DescriptionAttribute("Edit Insights reports")]
public static Permission InsightsReportEdit;
    [DescriptionAttribute("Delete Insights reports")]
public static Permission InsightsReportDelete;
    [DescriptionAttribute("Create, update, delete and override deployment freezes")]
public static Permission DeploymentFreezeAdminister;
    [DescriptionAttribute("View deployment target tags")]
public static Permission TargetTagView;
    [DescriptionAttribute("Create, edit, delete deployment target tags")]
public static Permission TargetTagAdminister;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    private string Id { get; }
    public Permission(string id);
    private static Permission();
    [CompilerGeneratedAttribute]
private string get_Id();
    [<775b3474-4bdb-4dfa-9504-95167a40b14b>NullableContextAttribute("2")]
public sealed virtual bool Equals(Permission other);
    [<775b3474-4bdb-4dfa-9504-95167a40b14b>NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(Permission left, Permission right);
    public static bool op_Inequality(Permission left, Permission right);
    public virtual string ToString();
}
public class Octopus.Client.Model.PermissionDescription : object {
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <SupportedRestrictions>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CanApplyAtSystemLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CanApplyAtSpaceLevel>k__BackingField;
    public string Description { get; public set; }
    public String[] SupportedRestrictions { get; public set; }
    public bool CanApplyAtSystemLevel { get; public set; }
    public bool CanApplyAtSpaceLevel { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public String[] get_SupportedRestrictions();
    [CompilerGeneratedAttribute]
public void set_SupportedRestrictions(String[] value);
    [CompilerGeneratedAttribute]
public bool get_CanApplyAtSystemLevel();
    [CompilerGeneratedAttribute]
public void set_CanApplyAtSystemLevel(bool value);
    [CompilerGeneratedAttribute]
public bool get_CanApplyAtSpaceLevel();
    [CompilerGeneratedAttribute]
public void set_CanApplyAtSpaceLevel(bool value);
}
public static class Octopus.Client.Model.PermissionModes : object {
    public static string Unspecified;
    public static string Restricted;
    public static string Full;
    private static PermissionModes();
}
public static class Octopus.Client.Model.PermissionScope : object {
    public static string Environments;
    public static string Projects;
    public static string ProjectGroups;
    public static string Tenants;
}
public abstract class Octopus.Client.Model.PersistenceSettingsResource : object {
    public PersistenceSettingsType Type { get; }
    public abstract virtual PersistenceSettingsType get_Type();
}
public enum Octopus.Client.Model.PersistenceSettingsType : Enum {
    public int value__;
    public static PersistenceSettingsType Database;
    public static PersistenceSettingsType VersionControlled;
}
public class Octopus.Client.Model.PhaseDeploymentResource : object {
    [CompilerGeneratedAttribute]
private TaskResource <Task>k__BackingField;
    [CompilerGeneratedAttribute]
private DeploymentResource <Deployment>k__BackingField;
    public TaskResource Task { get; public set; }
    public DeploymentResource Deployment { get; public set; }
    [CompilerGeneratedAttribute]
public TaskResource get_Task();
    [CompilerGeneratedAttribute]
public void set_Task(TaskResource value);
    [CompilerGeneratedAttribute]
public DeploymentResource get_Deployment();
    [CompilerGeneratedAttribute]
public void set_Deployment(DeploymentResource value);
}
public enum Octopus.Client.Model.PhaseProgress : Enum {
    public int value__;
    public static PhaseProgress Pending;
    public static PhaseProgress Current;
    public static PhaseProgress Complete;
}
public class Octopus.Client.Model.PhaseProgressionResource : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Blocked>k__BackingField;
    [CompilerGeneratedAttribute]
private PhaseProgress <Progress>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<PhaseDeploymentResource> <Deployments>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <AutomaticDeploymentTargets>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <OptionalDeploymentTargets>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MinimumEnvironmentsBeforePromotion>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsOptionalPhase>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsPriorityPhase>k__BackingField;
    public string Id { get; public set; }
    public string Name { get; public set; }
    public bool Blocked { get; public set; }
    public PhaseProgress Progress { get; public set; }
    public List`1<PhaseDeploymentResource> Deployments { get; public set; }
    public ReferenceCollection AutomaticDeploymentTargets { get; public set; }
    public ReferenceCollection OptionalDeploymentTargets { get; public set; }
    public int MinimumEnvironmentsBeforePromotion { get; public set; }
    public bool IsOptionalPhase { get; public set; }
    public bool IsPriorityPhase { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public bool get_Blocked();
    [CompilerGeneratedAttribute]
public void set_Blocked(bool value);
    [CompilerGeneratedAttribute]
public PhaseProgress get_Progress();
    [CompilerGeneratedAttribute]
public void set_Progress(PhaseProgress value);
    [CompilerGeneratedAttribute]
public List`1<PhaseDeploymentResource> get_Deployments();
    [CompilerGeneratedAttribute]
public void set_Deployments(List`1<PhaseDeploymentResource> value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_AutomaticDeploymentTargets();
    [CompilerGeneratedAttribute]
public void set_AutomaticDeploymentTargets(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_OptionalDeploymentTargets();
    [CompilerGeneratedAttribute]
public void set_OptionalDeploymentTargets(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public int get_MinimumEnvironmentsBeforePromotion();
    [CompilerGeneratedAttribute]
public void set_MinimumEnvironmentsBeforePromotion(int value);
    [CompilerGeneratedAttribute]
public bool get_IsOptionalPhase();
    [CompilerGeneratedAttribute]
public void set_IsOptionalPhase(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsPriorityPhase();
    [CompilerGeneratedAttribute]
public void set_IsPriorityPhase(bool value);
}
public class Octopus.Client.Model.PhaseResource : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <AutomaticDeploymentTargets>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <OptionalDeploymentTargets>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MinimumEnvironmentsBeforePromotion>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsOptionalPhase>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsPriorityPhase>k__BackingField;
    [CompilerGeneratedAttribute]
private RetentionPeriod <ReleaseRetentionPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private RetentionPeriod <TentacleRetentionPolicy>k__BackingField;
    public string Id { get; public set; }
    [TrimAttribute]
public string Name { get; public set; }
    public ReferenceCollection AutomaticDeploymentTargets { get; public set; }
    public ReferenceCollection OptionalDeploymentTargets { get; public set; }
    public int MinimumEnvironmentsBeforePromotion { get; public set; }
    public bool IsOptionalPhase { get; public set; }
    public bool IsPriorityPhase { get; public set; }
    public RetentionPeriod ReleaseRetentionPolicy { get; public set; }
    public RetentionPeriod TentacleRetentionPolicy { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_AutomaticDeploymentTargets();
    [CompilerGeneratedAttribute]
public void set_AutomaticDeploymentTargets(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_OptionalDeploymentTargets();
    [CompilerGeneratedAttribute]
public void set_OptionalDeploymentTargets(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public int get_MinimumEnvironmentsBeforePromotion();
    [CompilerGeneratedAttribute]
public void set_MinimumEnvironmentsBeforePromotion(int value);
    [CompilerGeneratedAttribute]
public bool get_IsOptionalPhase();
    [CompilerGeneratedAttribute]
public void set_IsOptionalPhase(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsPriorityPhase();
    [CompilerGeneratedAttribute]
public void set_IsPriorityPhase(bool value);
    [CompilerGeneratedAttribute]
public RetentionPeriod get_ReleaseRetentionPolicy();
    [CompilerGeneratedAttribute]
public void set_ReleaseRetentionPolicy(RetentionPeriod value);
    [CompilerGeneratedAttribute]
public RetentionPeriod get_TentacleRetentionPolicy();
    [CompilerGeneratedAttribute]
public void set_TentacleRetentionPolicy(RetentionPeriod value);
    public PhaseResource Clear();
    public PhaseResource WithAutomaticDeploymentTargets(EnvironmentResource[] environments);
    public PhaseResource WithOptionalDeploymentTargets(EnvironmentResource[] environments);
    public PhaseResource WithMinimumEnvironmentsBeforePromotion(int minimumEnvironmentsBeforePromotion);
    public PhaseResource WithReleaseRetentionPolicy(RetentionPeriod period);
    public PhaseResource WithTentacleRetentionPolicy(RetentionPeriod period);
}
public class Octopus.Client.Model.ProcessReferenceDataItem : ReferenceDataItem {
    [CompilerGeneratedAttribute]
private ProcessType <ProcessType>k__BackingField;
    public ProcessType ProcessType { get; public set; }
    public ProcessReferenceDataItem(string id, string name, ProcessType processType);
    [CompilerGeneratedAttribute]
public ProcessType get_ProcessType();
    [CompilerGeneratedAttribute]
public void set_ProcessType(ProcessType value);
}
public enum Octopus.Client.Model.ProcessType : Enum {
    public int value__;
    public static ProcessType Deployment;
    public static ProcessType Runbook;
}
public class Octopus.Client.Model.ProgressionResource : Resource {
    [CompilerGeneratedAttribute]
private List`1<ReferenceDataItem> <Environments>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, IEnumerable`1<ReferenceDataItem>> <ChannelEnvironments>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ReleaseProgressionResource> <Releases>k__BackingField;
    public List`1<ReferenceDataItem> Environments { get; public set; }
    public Dictionary`2<string, IEnumerable`1<ReferenceDataItem>> ChannelEnvironments { get; public set; }
    public List`1<ReleaseProgressionResource> Releases { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<ReferenceDataItem> get_Environments();
    [CompilerGeneratedAttribute]
public void set_Environments(List`1<ReferenceDataItem> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, IEnumerable`1<ReferenceDataItem>> get_ChannelEnvironments();
    [CompilerGeneratedAttribute]
public void set_ChannelEnvironments(Dictionary`2<string, IEnumerable`1<ReferenceDataItem>> value);
    [CompilerGeneratedAttribute]
public List`1<ReleaseProgressionResource> get_Releases();
    [CompilerGeneratedAttribute]
public void set_Releases(List`1<ReleaseProgressionResource> value);
}
public class Octopus.Client.Model.ProjectedTeamReferenceDataItem : ReferenceDataItem {
    [CompilerGeneratedAttribute]
private bool <IsDirectlyAssigned>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <ExternalGroupNames>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    public bool IsDirectlyAssigned { get; public set; }
    public String[] ExternalGroupNames { get; public set; }
    public string SpaceId { get; public set; }
    public ProjectedTeamReferenceDataItem(string id, string name, string spaceId, bool isDirectlyAssigned, String[] externalGroupNames);
    [CompilerGeneratedAttribute]
public bool get_IsDirectlyAssigned();
    [CompilerGeneratedAttribute]
public void set_IsDirectlyAssigned(bool value);
    [CompilerGeneratedAttribute]
public String[] get_ExternalGroupNames();
    [CompilerGeneratedAttribute]
public void set_ExternalGroupNames(String[] value);
    [CompilerGeneratedAttribute]
public string get_SpaceId();
    [CompilerGeneratedAttribute]
public void set_SpaceId(string value);
}
public abstract class Octopus.Client.Model.ProjectGitCredentialResource : object {
    public ProjectGitCredentialType Type { get; }
    public abstract virtual ProjectGitCredentialType get_Type();
}
public enum Octopus.Client.Model.ProjectGitCredentialType : Enum {
    public int value__;
    public static ProjectGitCredentialType Anonymous;
    public static ProjectGitCredentialType UsernamePassword;
    public static ProjectGitCredentialType Reference;
    public static ProjectGitCredentialType GitHub;
}
public class Octopus.Client.Model.ProjectGroupResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <EnvironmentIds>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RetentionPolicyId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [TrimAttribute]
[WriteableAttribute]
public string Name { get; public set; }
    [WriteableAttribute]
public string Description { get; public set; }
    [WriteableAttribute]
public ReferenceCollection EnvironmentIds { get; public set; }
    [WriteableAttribute]
public string RetentionPolicyId { get; public set; }
    public string SpaceId { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_EnvironmentIds();
    [CompilerGeneratedAttribute]
public void set_EnvironmentIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public string get_RetentionPolicyId();
    [CompilerGeneratedAttribute]
public void set_RetentionPolicyId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
}
public class Octopus.Client.Model.ProjectResource : ResourceWithExtensionSettings {
    private IVariableTemplateContainerEditor`1<ProjectResource> variableTemplateEditor;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Slug>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDisabled>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectGroupId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VariableSetId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DeploymentProcessId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClonedFromProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LifecycleId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AutoCreateRelease>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsVersionControlled>k__BackingField;
    [CompilerGeneratedAttribute]
private PersistenceSettingsResource <PersistenceSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DiscreteChannelRelease>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <IncludedLibraryVariableSetIds>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DefaultToSkipIfAlreadyInstalled>k__BackingField;
    [CompilerGeneratedAttribute]
private TenantedDeploymentMode <TenantedDeploymentMode>k__BackingField;
    [CompilerGeneratedAttribute]
private GuidedFailureMode <DefaultGuidedFailureMode>k__BackingField;
    [CompilerGeneratedAttribute]
private VersioningStrategyResource <VersioningStrategy>k__BackingField;
    [CompilerGeneratedAttribute]
private ReleaseCreationStrategyResource <ReleaseCreationStrategy>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ActionTemplateParameterResource> <Templates>k__BackingField;
    [CompilerGeneratedAttribute]
private DeploymentConnectivityPolicy <ProjectConnectivityPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private ISet`1<AutoDeployReleaseOverrideResource> <AutoDeployReleaseOverrides>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ReleaseNotesTemplate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DeploymentChangesTemplate>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ForcePackageDownload>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AllowIgnoreChannelRules>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ExecuteDeploymentsOnResilientPipeline>k__BackingField;
    [CompilerGeneratedAttribute]
private IconResource <Icon>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [ContainsSomeValidCharactersAttribute]
[JsonPropertyAttribute]
[WriteableAttribute]
public string Name { get; public set; }
    [JsonPropertyAttribute]
public string Slug { get; public set; }
    [JsonPropertyAttribute]
[WriteableAttribute]
public string Description { get; public set; }
    [WriteableAttribute]
[JsonPropertyAttribute]
public bool IsDisabled { get; public set; }
    [JsonPropertyAttribute]
[WriteableAttribute]
public string ProjectGroupId { get; public set; }
    public string VariableSetId { get; public set; }
    public string DeploymentProcessId { get; public set; }
    public string ClonedFromProjectId { get; public set; }
    [JsonPropertyAttribute]
[WriteableAttribute]
public string LifecycleId { get; public set; }
    [WriteableAttribute]
[JsonPropertyAttribute]
public bool AutoCreateRelease { get; public set; }
    [JsonPropertyAttribute]
[WriteableAttribute]
public bool IsVersionControlled { get; public set; }
    [JsonPropertyAttribute]
public PersistenceSettingsResource PersistenceSettings { get; public set; }
    [WriteableAttribute]
public bool DiscreteChannelRelease { get; public set; }
    [WriteableAttribute]
public List`1<string> IncludedLibraryVariableSetIds { get; public set; }
    [WriteableAttribute]
[ObsoleteAttribute("Use DeploymentSettingsResource instead on the `deploymentsettings` API.")]
public bool DefaultToSkipIfAlreadyInstalled { get; public set; }
    [WriteableAttribute]
public TenantedDeploymentMode TenantedDeploymentMode { get; public set; }
    [ObsoleteAttribute("Use DeploymentSettingsResource instead on the `deploymentsettings` API.")]
[WriteableAttribute]
public GuidedFailureMode DefaultGuidedFailureMode { get; public set; }
    [WriteableAttribute]
[ObsoleteAttribute("Use DeploymentSettingsResource instead on the `deploymentsettings` API.")]
public VersioningStrategyResource VersioningStrategy { get; public set; }
    [WriteableAttribute]
public ReleaseCreationStrategyResource ReleaseCreationStrategy { get; public set; }
    public List`1<ActionTemplateParameterResource> Templates { get; public set; }
    [JsonPropertyAttribute]
[ObsoleteAttribute("Use DeploymentSettingsResource instead on the `deploymentsettings` API.")]
[WriteableAttribute]
public DeploymentConnectivityPolicy ProjectConnectivityPolicy { get; public set; }
    [WriteableAttribute]
public ISet`1<AutoDeployReleaseOverrideResource> AutoDeployReleaseOverrides { get; }
    [ObsoleteAttribute("Use DeploymentSettingsResource instead on the `deploymentsettings` API.")]
[WriteableAttribute]
public string ReleaseNotesTemplate { get; public set; }
    [WriteableAttribute]
[ObsoleteAttribute("Use DeploymentSettingsResource instead on the `deploymentsettings` API.")]
public string DeploymentChangesTemplate { get; public set; }
    [WriteableAttribute]
[ObsoleteAttribute("Use DeploymentSettingsResource instead on the `deploymentsettings` API.")]
public bool ForcePackageDownload { get; public set; }
    [WriteableAttribute]
public Nullable`1<bool> AllowIgnoreChannelRules { get; public set; }
    [WriteableAttribute]
public Nullable`1<bool> ExecuteDeploymentsOnResilientPipeline { get; public set; }
    public IconResource Icon { get; public set; }
    public string SpaceId { get; public set; }
    public ProjectResource(string id, string name, string slug);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Slug();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Slug(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public bool get_IsDisabled();
    [CompilerGeneratedAttribute]
public void set_IsDisabled(bool value);
    [CompilerGeneratedAttribute]
public string get_ProjectGroupId();
    [CompilerGeneratedAttribute]
public void set_ProjectGroupId(string value);
    [CompilerGeneratedAttribute]
public string get_VariableSetId();
    [CompilerGeneratedAttribute]
public void set_VariableSetId(string value);
    [CompilerGeneratedAttribute]
public string get_DeploymentProcessId();
    [CompilerGeneratedAttribute]
public void set_DeploymentProcessId(string value);
    [CompilerGeneratedAttribute]
public string get_ClonedFromProjectId();
    [CompilerGeneratedAttribute]
public void set_ClonedFromProjectId(string value);
    [CompilerGeneratedAttribute]
public string get_LifecycleId();
    [CompilerGeneratedAttribute]
public void set_LifecycleId(string value);
    [CompilerGeneratedAttribute]
public bool get_AutoCreateRelease();
    [CompilerGeneratedAttribute]
public void set_AutoCreateRelease(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsVersionControlled();
    [CompilerGeneratedAttribute]
public void set_IsVersionControlled(bool value);
    [CompilerGeneratedAttribute]
public PersistenceSettingsResource get_PersistenceSettings();
    [CompilerGeneratedAttribute]
public void set_PersistenceSettings(PersistenceSettingsResource value);
    [CompilerGeneratedAttribute]
public bool get_DiscreteChannelRelease();
    [CompilerGeneratedAttribute]
public void set_DiscreteChannelRelease(bool value);
    [CompilerGeneratedAttribute]
public List`1<string> get_IncludedLibraryVariableSetIds();
    [CompilerGeneratedAttribute]
public void set_IncludedLibraryVariableSetIds(List`1<string> value);
    [CompilerGeneratedAttribute]
public bool get_DefaultToSkipIfAlreadyInstalled();
    [CompilerGeneratedAttribute]
public void set_DefaultToSkipIfAlreadyInstalled(bool value);
    [CompilerGeneratedAttribute]
public TenantedDeploymentMode get_TenantedDeploymentMode();
    [CompilerGeneratedAttribute]
public void set_TenantedDeploymentMode(TenantedDeploymentMode value);
    [CompilerGeneratedAttribute]
public GuidedFailureMode get_DefaultGuidedFailureMode();
    [CompilerGeneratedAttribute]
public void set_DefaultGuidedFailureMode(GuidedFailureMode value);
    [CompilerGeneratedAttribute]
public VersioningStrategyResource get_VersioningStrategy();
    [CompilerGeneratedAttribute]
public void set_VersioningStrategy(VersioningStrategyResource value);
    [CompilerGeneratedAttribute]
public ReleaseCreationStrategyResource get_ReleaseCreationStrategy();
    [CompilerGeneratedAttribute]
public void set_ReleaseCreationStrategy(ReleaseCreationStrategyResource value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<ActionTemplateParameterResource> get_Templates();
    [CompilerGeneratedAttribute]
public void set_Templates(List`1<ActionTemplateParameterResource> value);
    [CompilerGeneratedAttribute]
public DeploymentConnectivityPolicy get_ProjectConnectivityPolicy();
    [CompilerGeneratedAttribute]
public void set_ProjectConnectivityPolicy(DeploymentConnectivityPolicy value);
    [CompilerGeneratedAttribute]
public ISet`1<AutoDeployReleaseOverrideResource> get_AutoDeployReleaseOverrides();
    [CompilerGeneratedAttribute]
public string get_ReleaseNotesTemplate();
    [CompilerGeneratedAttribute]
public void set_ReleaseNotesTemplate(string value);
    [CompilerGeneratedAttribute]
public string get_DeploymentChangesTemplate();
    [CompilerGeneratedAttribute]
public void set_DeploymentChangesTemplate(string value);
    [CompilerGeneratedAttribute]
public bool get_ForcePackageDownload();
    [CompilerGeneratedAttribute]
public void set_ForcePackageDownload(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_AllowIgnoreChannelRules();
    [CompilerGeneratedAttribute]
public void set_AllowIgnoreChannelRules(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ExecuteDeploymentsOnResilientPipeline();
    [CompilerGeneratedAttribute]
public void set_ExecuteDeploymentsOnResilientPipeline(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public IconResource get_Icon();
    [CompilerGeneratedAttribute]
public void set_Icon(IconResource value);
    public sealed virtual ProjectResource Clear();
    public sealed virtual ProjectResource AddOrUpdateVariableTemplate(string name, string label, IDictionary`2<string, string> displaySettings, string defaultValue, string helpText);
    public sealed virtual ProjectResource AddOrUpdateSingleLineTextTemplate(string name, string label);
    public sealed virtual ProjectResource AddOrUpdateSingleLineTextTemplate(string name, string label, string defaultValue, string helpText);
    public sealed virtual ProjectResource AddOrUpdateMultiLineTextTemplate(string name, string label);
    public sealed virtual ProjectResource AddOrUpdateMultiLineTextTemplate(string name, string label, string defaultValue, string helpText);
    public sealed virtual ProjectResource AddOrUpdateSensitiveTemplate(string name, string label);
    public sealed virtual ProjectResource AddOrUpdateSensitiveTemplate(string name, string label, string defaultValue, string helpText);
    public sealed virtual ProjectResource AddOrUpdateSelectTemplate(string name, string label, IDictionary`2<string, string> options);
    public sealed virtual ProjectResource AddOrUpdateSelectTemplate(string name, string label, IDictionary`2<string, string> options, string defaultValue, string helpText);
    public ProjectResource IncludingLibraryVariableSets(LibraryVariableSetResource[] libraryVariableSets);
    public sealed virtual ProjectResource AddOrUpdateVariableTemplate(string name, string label, IDictionary`2<string, string> displaySettings);
    public void AddAutoDeployReleaseOverride(EnvironmentResource environment, ReleaseResource release);
    public void AddAutoDeployReleaseOverride(EnvironmentResource environment, TenantResource tenant, ReleaseResource release);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
}
public class Octopus.Client.Model.ProjectTriggerResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDisabled>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private TriggerFilterResource <Filter>k__BackingField;
    [CompilerGeneratedAttribute]
private TriggerActionResource <Action>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [TrimAttribute]
[WriteableAttribute]
public string Name { get; public set; }
    [WriteableAttribute]
public string ProjectId { get; public set; }
    [WriteableAttribute]
public bool IsDisabled { get; public set; }
    [WriteableAttribute]
public string Description { get; public set; }
    [WriteableAttribute]
public TriggerFilterResource Filter { get; public set; }
    [WriteableAttribute]
public TriggerActionResource Action { get; public set; }
    public string SpaceId { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_ProjectId();
    [CompilerGeneratedAttribute]
public void set_ProjectId(string value);
    [CompilerGeneratedAttribute]
public bool get_IsDisabled();
    [CompilerGeneratedAttribute]
public void set_IsDisabled(bool value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public TriggerFilterResource get_Filter();
    [CompilerGeneratedAttribute]
public void set_Filter(TriggerFilterResource value);
    [CompilerGeneratedAttribute]
public TriggerActionResource get_Action();
    [CompilerGeneratedAttribute]
public void set_Action(TriggerActionResource value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
}
public class Octopus.Client.Model.PropertyValueResource : object {
    [CompilerGeneratedAttribute]
private bool <IsSensitive>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private SensitiveValue <SensitiveValue>k__BackingField;
    public bool IsSensitive { get; }
    public string Value { get; }
    public SensitiveValue SensitiveValue { get; }
    public PropertyValueResource(string value);
    public PropertyValueResource(string value, bool isSensitive);
    [JsonConstructorAttribute]
public PropertyValueResource(SensitiveValue sensitiveValue);
    [CompilerGeneratedAttribute]
public bool get_IsSensitive();
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public SensitiveValue get_SensitiveValue();
    public static PropertyValueResource op_Implicit(string value);
}
public class Octopus.Client.Model.ProxyResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Host>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Port>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProxyType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Username>k__BackingField;
    [CompilerGeneratedAttribute]
private SensitiveValue <Password>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [WriteableAttribute]
[TrimAttribute]
public string Name { get; public set; }
    [WriteableAttribute]
[TrimAttribute]
public string Host { get; public set; }
    [WriteableAttribute]
public int Port { get; public set; }
    [WriteableAttribute]
public string ProxyType { get; public set; }
    [WriteableAttribute]
public string Username { get; public set; }
    [WriteableAttribute]
public SensitiveValue Password { get; public set; }
    public string SpaceId { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Host();
    [CompilerGeneratedAttribute]
public void set_Host(string value);
    [CompilerGeneratedAttribute]
public int get_Port();
    [CompilerGeneratedAttribute]
public void set_Port(int value);
    [CompilerGeneratedAttribute]
public string get_ProxyType();
    [CompilerGeneratedAttribute]
public void set_ProxyType(string value);
    [CompilerGeneratedAttribute]
public string get_Username();
    [CompilerGeneratedAttribute]
public void set_Username(string value);
    [CompilerGeneratedAttribute]
public SensitiveValue get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(SensitiveValue value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
}
public class Octopus.Client.Model.ReferenceCollection : HashSet`1<string> {
    public ReferenceCollection(string singleValue);
    public ReferenceCollection(IEnumerable`1<string> values);
    public void ReplaceAll(IEnumerable`1<string> newItems);
    public ReferenceCollection Clone();
    public virtual string ToString();
    public static ReferenceCollection One(string item);
}
public class Octopus.Client.Model.ReferenceDataItem : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public string Id { get; public set; }
    public string Name { get; public set; }
    public ReferenceDataItem(string id, string name);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
}
public class Octopus.Client.Model.ReferenceProjectGitCredentialResource : ProjectGitCredentialResource {
    [CompilerGeneratedAttribute]
private ProjectGitCredentialType <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    public ProjectGitCredentialType Type { get; }
    [WriteableAttribute]
public string Id { get; public set; }
    [CompilerGeneratedAttribute]
public virtual ProjectGitCredentialType get_Type();
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
}
public class Octopus.Client.Model.RegisterCommand : UserResource {
    [CompilerGeneratedAttribute]
private string <InvitationCode>k__BackingField;
    [WriteableAttribute]
public string InvitationCode { get; public set; }
    [CompilerGeneratedAttribute]
public string get_InvitationCode();
    [CompilerGeneratedAttribute]
public void set_InvitationCode(string value);
}
public class Octopus.Client.Model.ReleaseChanges : object {
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ReleaseNotes>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ReleasePackageVersionBuildInformationResource> <BuildInformation>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<WorkItemLink> <WorkItems>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<CommitDetails> <Commits>k__BackingField;
    public string Version { get; public set; }
    public string ReleaseNotes { get; public set; }
    public List`1<ReleasePackageVersionBuildInformationResource> BuildInformation { get; public set; }
    public List`1<WorkItemLink> WorkItems { get; public set; }
    public List`1<CommitDetails> Commits { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
    [CompilerGeneratedAttribute]
public string get_ReleaseNotes();
    [CompilerGeneratedAttribute]
public void set_ReleaseNotes(string value);
    [CompilerGeneratedAttribute]
public List`1<ReleasePackageVersionBuildInformationResource> get_BuildInformation();
    [CompilerGeneratedAttribute]
public void set_BuildInformation(List`1<ReleasePackageVersionBuildInformationResource> value);
    [CompilerGeneratedAttribute]
public List`1<WorkItemLink> get_WorkItems();
    [CompilerGeneratedAttribute]
public void set_WorkItems(List`1<WorkItemLink> value);
    [CompilerGeneratedAttribute]
public List`1<CommitDetails> get_Commits();
    [CompilerGeneratedAttribute]
public void set_Commits(List`1<CommitDetails> value);
}
public class Octopus.Client.Model.ReleaseCreationStrategyResource : object {
    [CompilerGeneratedAttribute]
private DeploymentActionPackageResource <ReleaseCreationPackage>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ChannelId>k__BackingField;
    [JsonExtensionDataAttribute]
private IDictionary`2<string, JToken> additionalData;
    public DeploymentActionPackageResource ReleaseCreationPackage { get; public set; }
    public string ChannelId { get; public set; }
    [CompilerGeneratedAttribute]
public DeploymentActionPackageResource get_ReleaseCreationPackage();
    [CompilerGeneratedAttribute]
public void set_ReleaseCreationPackage(DeploymentActionPackageResource value);
    [CompilerGeneratedAttribute]
public string get_ChannelId();
    [CompilerGeneratedAttribute]
public void set_ChannelId(string value);
    [OnDeserializedAttribute]
private void OnDeserialized(StreamingContext context);
    [OnSerializingAttribute]
private void OnSerializing(StreamingContext context);
}
public class Octopus.Client.Model.ReleaseProgressionResource : object {
    [CompilerGeneratedAttribute]
private ReleaseResource <Release>k__BackingField;
    [CompilerGeneratedAttribute]
private ChannelResource <Channel>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, IList`1<DashboardItemResource>> <Deployments>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <NextDeployments>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasUnresolvedDefect>k__BackingField;
    [CompilerGeneratedAttribute]
private RetentionPeriod <ReleaseRetentionPeriod>k__BackingField;
    [CompilerGeneratedAttribute]
private RetentionPeriod <TentacleRetentionPeriod>k__BackingField;
    public ReleaseResource Release { get; public set; }
    public ChannelResource Channel { get; public set; }
    public Dictionary`2<string, IList`1<DashboardItemResource>> Deployments { get; public set; }
    public ReferenceCollection NextDeployments { get; public set; }
    public bool HasUnresolvedDefect { get; public set; }
    public RetentionPeriod ReleaseRetentionPeriod { get; public set; }
    public RetentionPeriod TentacleRetentionPeriod { get; public set; }
    [CompilerGeneratedAttribute]
public ReleaseResource get_Release();
    [CompilerGeneratedAttribute]
public void set_Release(ReleaseResource value);
    [CompilerGeneratedAttribute]
public ChannelResource get_Channel();
    [CompilerGeneratedAttribute]
public void set_Channel(ChannelResource value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, IList`1<DashboardItemResource>> get_Deployments();
    [CompilerGeneratedAttribute]
public void set_Deployments(Dictionary`2<string, IList`1<DashboardItemResource>> value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_NextDeployments();
    [CompilerGeneratedAttribute]
public void set_NextDeployments(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public bool get_HasUnresolvedDefect();
    [CompilerGeneratedAttribute]
public void set_HasUnresolvedDefect(bool value);
    [CompilerGeneratedAttribute]
public RetentionPeriod get_ReleaseRetentionPeriod();
    [CompilerGeneratedAttribute]
public void set_ReleaseRetentionPeriod(RetentionPeriod value);
    [CompilerGeneratedAttribute]
public RetentionPeriod get_TentacleRetentionPeriod();
    [CompilerGeneratedAttribute]
public void set_TentacleRetentionPeriod(RetentionPeriod value);
}
public class Octopus.Client.Model.ReleaseResource : Resource {
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ChannelId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ReleaseNotes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectDeploymentProcessSnapshotId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectVariableSetSnapshotId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IgnoreChannelRules>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ReleasePackageVersionBuildInformationResource> <BuildInformation>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <Assembled>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <LibraryVariableSetSnapshotIds>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<SelectedPackage> <SelectedPackages>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<SelectedGitResource> <SelectedGitResources>k__BackingField;
    [CompilerGeneratedAttribute]
private SnapshotGitReferenceResource <GitReference>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [StringLengthAttribute("349")]
[WriteableAttribute]
[RequiredAttribute]
[TrimAttribute]
public string Version { get; public set; }
    [WriteableAttribute]
public string ChannelId { get; public set; }
    [WriteableAttribute]
public string ReleaseNotes { get; public set; }
    public string ProjectDeploymentProcessSnapshotId { get; public set; }
    public string ProjectVariableSetSnapshotId { get; public set; }
    [NotReadableAttribute]
[WriteableAttribute]
[JsonPropertyAttribute]
public bool IgnoreChannelRules { get; public set; }
    [WriteableOnCreateAttribute]
public List`1<ReleasePackageVersionBuildInformationResource> BuildInformation { get; public set; }
    public DateTimeOffset Assembled { get; public set; }
    [WriteableOnCreateAttribute]
public string ProjectId { get; public set; }
    public List`1<string> LibraryVariableSetSnapshotIds { get; public set; }
    public List`1<SelectedPackage> SelectedPackages { get; public set; }
    public List`1<SelectedGitResource> SelectedGitResources { get; public set; }
    [JsonPropertyAttribute("VersionControlReference")]
public SnapshotGitReferenceResource GitReference { get; public set; }
    public string SpaceId { get; public set; }
    public ReleaseResource(string version, string projectId, string channelId);
    public ReleaseResource(string version, string projectId);
    public ReleaseResource(string projectId);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
    [CompilerGeneratedAttribute]
public string get_ChannelId();
    [CompilerGeneratedAttribute]
public void set_ChannelId(string value);
    [CompilerGeneratedAttribute]
public string get_ReleaseNotes();
    [CompilerGeneratedAttribute]
public void set_ReleaseNotes(string value);
    [CompilerGeneratedAttribute]
public string get_ProjectDeploymentProcessSnapshotId();
    [CompilerGeneratedAttribute]
public void set_ProjectDeploymentProcessSnapshotId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ProjectVariableSetSnapshotId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ProjectVariableSetSnapshotId(string value);
    [CompilerGeneratedAttribute]
public bool get_IgnoreChannelRules();
    [CompilerGeneratedAttribute]
public void set_IgnoreChannelRules(bool value);
    [CompilerGeneratedAttribute]
public List`1<ReleasePackageVersionBuildInformationResource> get_BuildInformation();
    [CompilerGeneratedAttribute]
public void set_BuildInformation(List`1<ReleasePackageVersionBuildInformationResource> value);
    [CompilerGeneratedAttribute]
public sealed virtual DateTimeOffset get_Assembled();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Assembled(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ProjectId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ProjectId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<string> get_LibraryVariableSetSnapshotIds();
    [CompilerGeneratedAttribute]
public sealed virtual void set_LibraryVariableSetSnapshotIds(List`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<SelectedPackage> get_SelectedPackages();
    [CompilerGeneratedAttribute]
public void set_SelectedPackages(List`1<SelectedPackage> value);
    [CompilerGeneratedAttribute]
public List`1<SelectedGitResource> get_SelectedGitResources();
    [CompilerGeneratedAttribute]
public void set_SelectedGitResources(List`1<SelectedGitResource> value);
    [CompilerGeneratedAttribute]
public SnapshotGitReferenceResource get_GitReference();
    [CompilerGeneratedAttribute]
public void set_GitReference(SnapshotGitReferenceResource value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
}
public class Octopus.Client.Model.ReleaseSummaryResource : Resource {
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [WriteableAttribute]
[ValidSemanticVersionOrMaskAttribute]
[TrimAttribute]
[StringLengthAttribute("349")]
[RequiredAttribute]
public string Version { get; public set; }
    public ReleaseSummaryResource(string releaseId, string version);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
}
public class Octopus.Client.Model.ReleaseTemplateBaseResource : Resource {
    [CompilerGeneratedAttribute]
private IList`1<ReleaseTemplatePackage> <Packages>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ReleaseTemplateGitResource> <GitResources>k__BackingField;
    public IList`1<ReleaseTemplatePackage> Packages { get; public set; }
    public IList`1<ReleaseTemplateGitResource> GitResources { get; public set; }
    [CompilerGeneratedAttribute]
public IList`1<ReleaseTemplatePackage> get_Packages();
    [CompilerGeneratedAttribute]
public void set_Packages(IList`1<ReleaseTemplatePackage> value);
    [CompilerGeneratedAttribute]
public IList`1<ReleaseTemplateGitResource> get_GitResources();
    [CompilerGeneratedAttribute]
public void set_GitResources(IList`1<ReleaseTemplateGitResource> value);
}
[<7ee1374a-350e-48d8-b14b-16bf02905262>NullableAttribute("0")]
[<775b3474-4bdb-4dfa-9504-95167a40b14b>NullableContextAttribute("1")]
public class Octopus.Client.Model.ReleaseTemplateGitResource : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ActionName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RepositoryUri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DefaultBranch>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsResolvable>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <FilePathFilters>k__BackingField;
    [CompilerGeneratedAttribute]
[<7ee1374a-350e-48d8-b14b-16bf02905262>NullableAttribute("2")]
private string <GitCredentialId>k__BackingField;
    [CompilerGeneratedAttribute]
[<7ee1374a-350e-48d8-b14b-16bf02905262>NullableAttribute("2")]
private GitReferenceResource <GitResourceSelectedLastRelease>k__BackingField;
    public string Name { get; public set; }
    public string ActionName { get; }
    public string RepositoryUri { get; }
    public string DefaultBranch { get; }
    public bool IsResolvable { get; }
    public String[] FilePathFilters { get; }
    [<7ee1374a-350e-48d8-b14b-16bf02905262>NullableAttribute("2")]
public string GitCredentialId { get; public set; }
    [<7ee1374a-350e-48d8-b14b-16bf02905262>NullableAttribute("2")]
public GitReferenceResource GitResourceSelectedLastRelease { get; public set; }
    public ReleaseTemplateGitResource(string name, string actionName, string repositoryUri, string defaultBranch, String[] filePathFilters, bool isResolvable);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_ActionName();
    [CompilerGeneratedAttribute]
public string get_RepositoryUri();
    [CompilerGeneratedAttribute]
public string get_DefaultBranch();
    [CompilerGeneratedAttribute]
public bool get_IsResolvable();
    [CompilerGeneratedAttribute]
public String[] get_FilePathFilters();
    [CompilerGeneratedAttribute]
[<775b3474-4bdb-4dfa-9504-95167a40b14b>NullableContextAttribute("2")]
public string get_GitCredentialId();
    [CompilerGeneratedAttribute]
[<775b3474-4bdb-4dfa-9504-95167a40b14b>NullableContextAttribute("2")]
public void set_GitCredentialId(string value);
    [<775b3474-4bdb-4dfa-9504-95167a40b14b>NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public GitReferenceResource get_GitResourceSelectedLastRelease();
    [CompilerGeneratedAttribute]
[<775b3474-4bdb-4dfa-9504-95167a40b14b>NullableContextAttribute("2")]
public void set_GitResourceSelectedLastRelease(GitReferenceResource value);
}
public class Octopus.Client.Model.ReleaseTemplatePackage : object {
    [CompilerGeneratedAttribute]
private string <ActionName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PackageId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PackageReferenceName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FeedId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FeedName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VersionSelectedLastRelease>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FixedVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsResolvable>k__BackingField;
    [ObsoleteAttribute("Replaced by ActionName")]
public string StepName { get; public set; }
    public string ActionName { get; public set; }
    [ObsoleteAttribute("Replaced by PackageId")]
public string NuGetPackageId { get; public set; }
    public string PackageId { get; public set; }
    public string PackageReferenceName { get; public set; }
    [ObsoleteAttribute("Replaced by FeedId")]
public string NuGetFeedId { get; public set; }
    public string FeedId { get; public set; }
    [ObsoleteAttribute("Replaced by FeedName")]
public string NuGetFeedName { get; public set; }
    public string FeedName { get; public set; }
    public string VersionSelectedLastRelease { get; public set; }
    public string FixedVersion { get; public set; }
    public bool IsResolvable { get; public set; }
    public string get_StepName();
    public void set_StepName(string value);
    [CompilerGeneratedAttribute]
public string get_ActionName();
    [CompilerGeneratedAttribute]
public void set_ActionName(string value);
    public string get_NuGetPackageId();
    public void set_NuGetPackageId(string value);
    [CompilerGeneratedAttribute]
public string get_PackageId();
    [CompilerGeneratedAttribute]
public void set_PackageId(string value);
    [CompilerGeneratedAttribute]
public string get_PackageReferenceName();
    [CompilerGeneratedAttribute]
public void set_PackageReferenceName(string value);
    public string get_NuGetFeedId();
    public void set_NuGetFeedId(string value);
    [CompilerGeneratedAttribute]
public string get_FeedId();
    [CompilerGeneratedAttribute]
public void set_FeedId(string value);
    public string get_NuGetFeedName();
    public void set_NuGetFeedName(string value);
    [CompilerGeneratedAttribute]
public string get_FeedName();
    [CompilerGeneratedAttribute]
public void set_FeedName(string value);
    [CompilerGeneratedAttribute]
public string get_VersionSelectedLastRelease();
    [CompilerGeneratedAttribute]
public void set_VersionSelectedLastRelease(string value);
    [CompilerGeneratedAttribute]
public string get_FixedVersion();
    [CompilerGeneratedAttribute]
public void set_FixedVersion(string value);
    [CompilerGeneratedAttribute]
public bool get_IsResolvable();
    [CompilerGeneratedAttribute]
public void set_IsResolvable(bool value);
}
public class Octopus.Client.Model.ReleaseTemplateResource : ReleaseTemplateBaseResource {
    [CompilerGeneratedAttribute]
private string <DeploymentProcessId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LastReleaseVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NextVersionIncrement>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VersioningPackageStepName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VersioningPackageReferenceName>k__BackingField;
    public string DeploymentProcessId { get; public set; }
    public string LastReleaseVersion { get; public set; }
    public string NextVersionIncrement { get; public set; }
    public string VersioningPackageStepName { get; public set; }
    public string VersioningPackageReferenceName { get; public set; }
    [CompilerGeneratedAttribute]
public string get_DeploymentProcessId();
    [CompilerGeneratedAttribute]
public void set_DeploymentProcessId(string value);
    [CompilerGeneratedAttribute]
public string get_LastReleaseVersion();
    [CompilerGeneratedAttribute]
public void set_LastReleaseVersion(string value);
    [CompilerGeneratedAttribute]
public string get_NextVersionIncrement();
    [CompilerGeneratedAttribute]
public void set_NextVersionIncrement(string value);
    [CompilerGeneratedAttribute]
public string get_VersioningPackageStepName();
    [CompilerGeneratedAttribute]
public void set_VersioningPackageStepName(string value);
    [CompilerGeneratedAttribute]
public string get_VersioningPackageReferenceName();
    [CompilerGeneratedAttribute]
public void set_VersioningPackageReferenceName(string value);
}
public class Octopus.Client.Model.ReportDeploymentCountOverTimeResource : Resource {
    [CompilerGeneratedAttribute]
private string <ProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private NumericReportData <ReportData>k__BackingField;
    public string ProjectId { get; public set; }
    public NumericReportData ReportData { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ProjectId();
    [CompilerGeneratedAttribute]
public void set_ProjectId(string value);
    [CompilerGeneratedAttribute]
public NumericReportData get_ReportData();
    [CompilerGeneratedAttribute]
public void set_ReportData(NumericReportData value);
}
public abstract class Octopus.Client.Model.Resource : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <LastModifiedOn>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LastModifiedBy>k__BackingField;
    [CompilerGeneratedAttribute]
private LinkCollection <Links>k__BackingField;
    [JsonPropertyAttribute]
public string Id { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<DateTimeOffset> LastModifiedOn { get; public set; }
    [JsonPropertyAttribute]
public string LastModifiedBy { get; public set; }
    [JsonPropertyAttribute]
public LinkCollection Links { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<DateTimeOffset> get_LastModifiedOn();
    [CompilerGeneratedAttribute]
public sealed virtual void set_LastModifiedOn(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_LastModifiedBy();
    [CompilerGeneratedAttribute]
public sealed virtual void set_LastModifiedBy(string value);
    [CompilerGeneratedAttribute]
public sealed virtual LinkCollection get_Links();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Links(LinkCollection value);
    public bool HasLink(string name);
    public string Link(string name);
}
public class Octopus.Client.Model.ResourceCollection`1 : Resource {
    [CompilerGeneratedAttribute]
private bool <IsStale>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TotalResults>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ItemsPerPage>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<TResource> <Items>k__BackingField;
    [JsonPropertyAttribute]
public string ItemType { get; }
    [JsonPropertyAttribute]
public bool IsStale { get; public set; }
    [JsonPropertyAttribute]
public int TotalResults { get; public set; }
    [JsonPropertyAttribute]
public int ItemsPerPage { get; public set; }
    [JsonPropertyAttribute]
public IList`1<TResource> Items { get; public set; }
    public ResourceCollection`1(IEnumerable`1<TResource> items, LinkCollection links);
    public string get_ItemType();
    [CompilerGeneratedAttribute]
public bool get_IsStale();
    [CompilerGeneratedAttribute]
public void set_IsStale(bool value);
    [CompilerGeneratedAttribute]
public int get_TotalResults();
    [CompilerGeneratedAttribute]
public void set_TotalResults(int value);
    [CompilerGeneratedAttribute]
public int get_ItemsPerPage();
    [CompilerGeneratedAttribute]
public void set_ItemsPerPage(int value);
    [CompilerGeneratedAttribute]
public IList`1<TResource> get_Items();
    [CompilerGeneratedAttribute]
public void set_Items(IList`1<TResource> value);
}
public abstract class Octopus.Client.Model.ResourceWithExtensionSettings : Resource {
    [CompilerGeneratedAttribute]
private List`1<ExtensionSettingsValues> <ExtensionSettings>k__BackingField;
    [WriteableAttribute]
public List`1<ExtensionSettingsValues> ExtensionSettings { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<ExtensionSettingsValues> get_ExtensionSettings();
    [CompilerGeneratedAttribute]
public void set_ExtensionSettings(List`1<ExtensionSettingsValues> value);
    public TSettings GetExtensionSettings(string extensionId);
}
public class Octopus.Client.Model.RetentionDefaultConfigurationResource : Resource {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <RetentionDays>k__BackingField;
    [WriteableAttribute]
public Nullable`1<int> RetentionDays { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_RetentionDays();
    [CompilerGeneratedAttribute]
public void set_RetentionDays(Nullable`1<int> value);
}
public class Octopus.Client.Model.RetentionPeriod : object {
    private int quantityToKeep;
    private RetentionUnit unit;
    public RetentionUnit Unit { get; }
    public int QuantityToKeep { get; }
    public bool ShouldKeepForever { get; }
    public RetentionPeriod(int quantityToKeep, RetentionUnit unit);
    public RetentionUnit get_Unit();
    public int get_QuantityToKeep();
    public bool get_ShouldKeepForever();
    public static RetentionPeriod KeepForever();
    public sealed virtual bool Equals(RetentionPeriod other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static bool op_Equality(RetentionPeriod left, RetentionPeriod right);
    public static bool op_Inequality(RetentionPeriod left, RetentionPeriod right);
    public virtual string ToString();
}
public class Octopus.Client.Model.RetentionPoliciesConfigurationResource : Resource {
    [CompilerGeneratedAttribute]
private string <CronExpression>k__BackingField;
    [WriteableAttribute]
public string CronExpression { get; public set; }
    [CompilerGeneratedAttribute]
public string get_CronExpression();
    [CompilerGeneratedAttribute]
public void set_CronExpression(string value);
}
public class Octopus.Client.Model.RetentionPolicyResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsReadOnly>k__BackingField;
    [CompilerGeneratedAttribute]
private RetentionPeriod <UndeployedReleases>k__BackingField;
    [CompilerGeneratedAttribute]
private RetentionPeriod <DeployedReleases>k__BackingField;
    [CompilerGeneratedAttribute]
private RetentionPeriod <TentacleDeployments>k__BackingField;
    [WriteableAttribute]
public string Name { get; public set; }
    public bool IsReadOnly { get; public set; }
    [WriteableAttribute]
public RetentionPeriod UndeployedReleases { get; public set; }
    [WriteableAttribute]
public RetentionPeriod DeployedReleases { get; public set; }
    [WriteableAttribute]
public RetentionPeriod TentacleDeployments { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public bool get_IsReadOnly();
    [CompilerGeneratedAttribute]
public void set_IsReadOnly(bool value);
    [CompilerGeneratedAttribute]
public RetentionPeriod get_UndeployedReleases();
    [CompilerGeneratedAttribute]
public void set_UndeployedReleases(RetentionPeriod value);
    [CompilerGeneratedAttribute]
public RetentionPeriod get_DeployedReleases();
    [CompilerGeneratedAttribute]
public void set_DeployedReleases(RetentionPeriod value);
    [CompilerGeneratedAttribute]
public RetentionPeriod get_TentacleDeployments();
    [CompilerGeneratedAttribute]
public void set_TentacleDeployments(RetentionPeriod value);
}
public enum Octopus.Client.Model.RetentionUnit : Enum {
    public int value__;
    public static RetentionUnit Days;
    public static RetentionUnit Items;
}
public class Octopus.Client.Model.RootResource : Resource {
    [CompilerGeneratedAttribute]
private string <Application>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ApiVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <InstallationId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsEarlyAccessProgram>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasLongTermSupport>k__BackingField;
    public string Application { get; public set; }
    public string Version { get; public set; }
    public string ApiVersion { get; public set; }
    public Guid InstallationId { get; public set; }
    [DefaultValueAttribute("False")]
[JsonPropertyAttribute]
public bool IsEarlyAccessProgram { get; public set; }
    [JsonPropertyAttribute]
[DefaultValueAttribute("False")]
public bool HasLongTermSupport { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Application();
    [CompilerGeneratedAttribute]
public void set_Application(string value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
    [CompilerGeneratedAttribute]
public string get_ApiVersion();
    [CompilerGeneratedAttribute]
public void set_ApiVersion(string value);
    [CompilerGeneratedAttribute]
public Guid get_InstallationId();
    [CompilerGeneratedAttribute]
public void set_InstallationId(Guid value);
    [CompilerGeneratedAttribute]
public bool get_IsEarlyAccessProgram();
    [CompilerGeneratedAttribute]
public void set_IsEarlyAccessProgram(bool value);
    [CompilerGeneratedAttribute]
public bool get_HasLongTermSupport();
    [CompilerGeneratedAttribute]
public void set_HasLongTermSupport(bool value);
}
public enum Octopus.Client.Model.RunbookEnvironmentScope : Enum {
    public int value__;
    public static RunbookEnvironmentScope All;
    public static RunbookEnvironmentScope Specified;
    public static RunbookEnvironmentScope FromProjectLifecycles;
}
public class Octopus.Client.Model.RunbookProcessResource : Resource {
    [CompilerGeneratedAttribute]
private string <RunbookId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<DeploymentStepResource> <Steps>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LastSnapshotId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    public string RunbookId { get; public set; }
    public string ProjectId { get; public set; }
    public IList`1<DeploymentStepResource> Steps { get; }
    [RequiredAttribute]
public int Version { get; public set; }
    public string LastSnapshotId { get; public set; }
    public string SpaceId { get; public set; }
    [CompilerGeneratedAttribute]
public string get_RunbookId();
    [CompilerGeneratedAttribute]
public void set_RunbookId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ProjectId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ProjectId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<DeploymentStepResource> get_Steps();
    [CompilerGeneratedAttribute]
public sealed virtual int get_Version();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Version(int value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_LastSnapshotId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_LastSnapshotId(string value);
    public sealed virtual DeploymentStepResource FindStep(string name);
    public sealed virtual DeploymentStepResource AddOrUpdateStep(string name);
    public sealed virtual IProcessResource RemoveStep(string name);
    public sealed virtual IProcessResource ClearSteps();
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
}
public class Octopus.Client.Model.RunbookResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Slug>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RunbookProcessId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PublishedRunbookSnapshotId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [CompilerGeneratedAttribute]
private TenantedDeploymentMode <MultiTenancyMode>k__BackingField;
    [CompilerGeneratedAttribute]
private DeploymentConnectivityPolicy <ConnectivityPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private RunbookEnvironmentScope <EnvironmentScope>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <Environments>k__BackingField;
    [CompilerGeneratedAttribute]
private GuidedFailureMode <DefaultGuidedFailureMode>k__BackingField;
    [CompilerGeneratedAttribute]
private RunbookRetentionPeriod <RunRetentionPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ForcePackageDownload>k__BackingField;
    [WriteableAttribute]
[TrimAttribute]
public string Name { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string Slug { get; public set; }
    [WriteableAttribute]
[TrimAttribute]
public string Description { get; public set; }
    [WriteableAttribute]
public string RunbookProcessId { get; public set; }
    [WriteableAttribute]
public string PublishedRunbookSnapshotId { get; public set; }
    [WriteableAttribute]
public string ProjectId { get; public set; }
    public string SpaceId { get; public set; }
    [WriteableAttribute]
public TenantedDeploymentMode MultiTenancyMode { get; public set; }
    [JsonPropertyAttribute]
[WriteableAttribute]
public DeploymentConnectivityPolicy ConnectivityPolicy { get; public set; }
    [WriteableAttribute]
public RunbookEnvironmentScope EnvironmentScope { get; public set; }
    [JsonPropertyAttribute]
public ReferenceCollection Environments { get; }
    [WriteableAttribute]
public GuidedFailureMode DefaultGuidedFailureMode { get; public set; }
    [WriteableAttribute]
public RunbookRetentionPeriod RunRetentionPolicy { get; public set; }
    [WriteableAttribute]
public bool ForcePackageDownload { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Slug();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Slug(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public string get_RunbookProcessId();
    [CompilerGeneratedAttribute]
public void set_RunbookProcessId(string value);
    [CompilerGeneratedAttribute]
public string get_PublishedRunbookSnapshotId();
    [CompilerGeneratedAttribute]
public void set_PublishedRunbookSnapshotId(string value);
    [CompilerGeneratedAttribute]
public string get_ProjectId();
    [CompilerGeneratedAttribute]
public void set_ProjectId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
    [CompilerGeneratedAttribute]
public TenantedDeploymentMode get_MultiTenancyMode();
    [CompilerGeneratedAttribute]
public void set_MultiTenancyMode(TenantedDeploymentMode value);
    [CompilerGeneratedAttribute]
public DeploymentConnectivityPolicy get_ConnectivityPolicy();
    [CompilerGeneratedAttribute]
public void set_ConnectivityPolicy(DeploymentConnectivityPolicy value);
    [CompilerGeneratedAttribute]
public RunbookEnvironmentScope get_EnvironmentScope();
    [CompilerGeneratedAttribute]
public void set_EnvironmentScope(RunbookEnvironmentScope value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_Environments();
    [CompilerGeneratedAttribute]
public GuidedFailureMode get_DefaultGuidedFailureMode();
    [CompilerGeneratedAttribute]
public void set_DefaultGuidedFailureMode(GuidedFailureMode value);
    [CompilerGeneratedAttribute]
public RunbookRetentionPeriod get_RunRetentionPolicy();
    [CompilerGeneratedAttribute]
public void set_RunRetentionPolicy(RunbookRetentionPeriod value);
    [CompilerGeneratedAttribute]
public bool get_ForcePackageDownload();
    [CompilerGeneratedAttribute]
public void set_ForcePackageDownload(bool value);
}
public class Octopus.Client.Model.RunbookRetentionPeriod : object {
    [CompilerGeneratedAttribute]
private int <QuantityToKeep>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ShouldKeepForever>k__BackingField;
    public int QuantityToKeep { get; public set; }
    public bool ShouldKeepForever { get; public set; }
    [CompilerGeneratedAttribute]
public int get_QuantityToKeep();
    [CompilerGeneratedAttribute]
public void set_QuantityToKeep(int value);
    [CompilerGeneratedAttribute]
public bool get_ShouldKeepForever();
    [CompilerGeneratedAttribute]
public void set_ShouldKeepForever(bool value);
}
public class Octopus.Client.Model.RunbookRunParameters : object {
    [CompilerGeneratedAttribute]
private bool <UseDefaultSnapshot>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RunbookId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RunbookSnapshotNameOrId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EnvironmentId>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <EnvironmentIds>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ForcePackageDownload>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <UseGuidedFailure>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <SpecificMachineIds>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <ExcludedMachineIds>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TenantId>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <TenantIds>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <TenantTagNames>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <SkipActions>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <QueueTime>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <QueueTimeExpiry>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <FormValues>k__BackingField;
    public bool UseDefaultSnapshot { get; public set; }
    public string RunbookId { get; public set; }
    public string ProjectId { get; public set; }
    public string RunbookSnapshotNameOrId { get; public set; }
    public string EnvironmentId { get; public set; }
    public String[] EnvironmentIds { get; public set; }
    public bool ForcePackageDownload { get; public set; }
    public Nullable`1<bool> UseGuidedFailure { get; public set; }
    public String[] SpecificMachineIds { get; public set; }
    public String[] ExcludedMachineIds { get; public set; }
    public string TenantId { get; public set; }
    public String[] TenantIds { get; public set; }
    public String[] TenantTagNames { get; public set; }
    public String[] SkipActions { get; public set; }
    public Nullable`1<DateTimeOffset> QueueTime { get; public set; }
    public Nullable`1<DateTimeOffset> QueueTimeExpiry { get; public set; }
    public Dictionary`2<string, string> FormValues { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_UseDefaultSnapshot();
    [CompilerGeneratedAttribute]
public void set_UseDefaultSnapshot(bool value);
    [CompilerGeneratedAttribute]
public string get_RunbookId();
    [CompilerGeneratedAttribute]
public void set_RunbookId(string value);
    [CompilerGeneratedAttribute]
public string get_ProjectId();
    [CompilerGeneratedAttribute]
public void set_ProjectId(string value);
    [CompilerGeneratedAttribute]
public string get_RunbookSnapshotNameOrId();
    [CompilerGeneratedAttribute]
public void set_RunbookSnapshotNameOrId(string value);
    [CompilerGeneratedAttribute]
public string get_EnvironmentId();
    [CompilerGeneratedAttribute]
public void set_EnvironmentId(string value);
    [CompilerGeneratedAttribute]
public String[] get_EnvironmentIds();
    [CompilerGeneratedAttribute]
public void set_EnvironmentIds(String[] value);
    [CompilerGeneratedAttribute]
public bool get_ForcePackageDownload();
    [CompilerGeneratedAttribute]
public void set_ForcePackageDownload(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_UseGuidedFailure();
    [CompilerGeneratedAttribute]
public void set_UseGuidedFailure(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public String[] get_SpecificMachineIds();
    [CompilerGeneratedAttribute]
public void set_SpecificMachineIds(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_ExcludedMachineIds();
    [CompilerGeneratedAttribute]
public void set_ExcludedMachineIds(String[] value);
    [CompilerGeneratedAttribute]
public string get_TenantId();
    [CompilerGeneratedAttribute]
public void set_TenantId(string value);
    [CompilerGeneratedAttribute]
public String[] get_TenantIds();
    [CompilerGeneratedAttribute]
public void set_TenantIds(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_TenantTagNames();
    [CompilerGeneratedAttribute]
public void set_TenantTagNames(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_SkipActions();
    [CompilerGeneratedAttribute]
public void set_SkipActions(String[] value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_QueueTime();
    [CompilerGeneratedAttribute]
public void set_QueueTime(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_QueueTimeExpiry();
    [CompilerGeneratedAttribute]
public void set_QueueTimeExpiry(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_FormValues();
    [CompilerGeneratedAttribute]
public void set_FormValues(Dictionary`2<string, string> value);
    public static RunbookRunParameters MapFrom(RunbookRunResource runbookRun);
}
public class Octopus.Client.Model.RunbookRunPreviewResource : DeploymentPreviewBaseResource {
}
public class Octopus.Client.Model.RunbookRunResource : Resource {
    [CompilerGeneratedAttribute]
private string <RunbookSnapshotId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FrozenRunbookProcessId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RunbookId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EnvironmentId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TenantId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ForcePackageDownload>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <SkipActions>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <SpecificMachineIds>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <ExcludedMachineIds>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ManifestVariableSetId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TaskId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseGuidedFailure>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Comments>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <FormValues>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <QueueTime>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <QueueTimeExpiry>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <Created>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [CompilerGeneratedAttribute]
private RetentionPeriod <TentacleRetentionPeriod>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DeployedBy>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DeployedById>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <FailureEncountered>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <DeployedToMachineIds>k__BackingField;
    [RequiredAttribute]
[WriteableOnCreateAttribute]
public string RunbookSnapshotId { get; public set; }
    public string FrozenRunbookProcessId { get; public set; }
    [WriteableOnCreateAttribute]
[RequiredAttribute]
public string RunbookId { get; public set; }
    [WriteableOnCreateAttribute]
[RequiredAttribute]
public string EnvironmentId { get; public set; }
    [WriteableOnCreateAttribute]
public string TenantId { get; public set; }
    [WriteableOnCreateAttribute]
public bool ForcePackageDownload { get; public set; }
    [WriteableOnCreateAttribute]
public ReferenceCollection SkipActions { get; public set; }
    [WriteableOnCreateAttribute]
public ReferenceCollection SpecificMachineIds { get; public set; }
    [WriteableOnCreateAttribute]
public ReferenceCollection ExcludedMachineIds { get; public set; }
    public string ManifestVariableSetId { get; public set; }
    public string TaskId { get; public set; }
    public string ProjectId { get; public set; }
    [WriteableOnCreateAttribute]
public bool UseGuidedFailure { get; public set; }
    [WriteableOnCreateAttribute]
public string Comments { get; public set; }
    [WriteableOnCreateAttribute]
[JsonPropertyAttribute]
public Dictionary`2<string, string> FormValues { get; public set; }
    public Nullable`1<DateTimeOffset> QueueTime { get; public set; }
    public Nullable`1<DateTimeOffset> QueueTimeExpiry { get; public set; }
    public string Name { get; public set; }
    public DateTimeOffset Created { get; public set; }
    public string SpaceId { get; public set; }
    public RetentionPeriod TentacleRetentionPeriod { get; public set; }
    public string DeployedBy { get; public set; }
    public string DeployedById { get; public set; }
    public bool FailureEncountered { get; public set; }
    public ReferenceCollection DeployedToMachineIds { get; public set; }
    [CompilerGeneratedAttribute]
public string get_RunbookSnapshotId();
    [CompilerGeneratedAttribute]
public void set_RunbookSnapshotId(string value);
    [CompilerGeneratedAttribute]
public string get_FrozenRunbookProcessId();
    [CompilerGeneratedAttribute]
public void set_FrozenRunbookProcessId(string value);
    [CompilerGeneratedAttribute]
public string get_RunbookId();
    [CompilerGeneratedAttribute]
public void set_RunbookId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_EnvironmentId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_EnvironmentId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_TenantId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TenantId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_ForcePackageDownload();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ForcePackageDownload(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual ReferenceCollection get_SkipActions();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SkipActions(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public sealed virtual ReferenceCollection get_SpecificMachineIds();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpecificMachineIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public sealed virtual ReferenceCollection get_ExcludedMachineIds();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ExcludedMachineIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ManifestVariableSetId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ManifestVariableSetId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_TaskId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TaskId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ProjectId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ProjectId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_UseGuidedFailure();
    [CompilerGeneratedAttribute]
public sealed virtual void set_UseGuidedFailure(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Comments();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Comments(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Dictionary`2<string, string> get_FormValues();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FormValues(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<DateTimeOffset> get_QueueTime();
    [CompilerGeneratedAttribute]
public sealed virtual void set_QueueTime(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<DateTimeOffset> get_QueueTimeExpiry();
    [CompilerGeneratedAttribute]
public sealed virtual void set_QueueTimeExpiry(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Name(string value);
    [CompilerGeneratedAttribute]
public sealed virtual DateTimeOffset get_Created();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Created(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual RetentionPeriod get_TentacleRetentionPeriod();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TentacleRetentionPeriod(RetentionPeriod value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_DeployedBy();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DeployedBy(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_DeployedById();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DeployedById(string value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_FailureEncountered();
    [CompilerGeneratedAttribute]
public void set_FailureEncountered(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual ReferenceCollection get_DeployedToMachineIds();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DeployedToMachineIds(ReferenceCollection value);
}
public class Octopus.Client.Model.RunbookRunTemplateResource : DeploymentTemplateBaseResource {
    [CompilerGeneratedAttribute]
private bool <IsRunbookProcessModified>k__BackingField;
    public bool IsRunbookProcessModified { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_IsRunbookProcessModified();
    [CompilerGeneratedAttribute]
public void set_IsRunbookProcessModified(bool value);
}
public class Octopus.Client.Model.RunbookSnapshotResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RunbookId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Notes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FrozenRunbookProcessId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FrozenProjectVariableSetId>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <Assembled>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <LibraryVariableSetSnapshotIds>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<SelectedPackage> <SelectedPackages>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<SelectedGitResource> <SelectedGitResources>k__BackingField;
    [CompilerGeneratedAttribute]
private SnapshotGitReferenceResource <GitReference>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectVariableSetSnapshotId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [WriteableAttribute]
public string Name { get; public set; }
    [WriteableOnCreateAttribute]
public string RunbookId { get; public set; }
    [WriteableAttribute]
public string Notes { get; public set; }
    public string FrozenRunbookProcessId { get; public set; }
    public string FrozenProjectVariableSetId { get; public set; }
    public DateTimeOffset Assembled { get; public set; }
    [WriteableOnCreateAttribute]
public string ProjectId { get; public set; }
    public List`1<string> LibraryVariableSetSnapshotIds { get; public set; }
    public List`1<SelectedPackage> SelectedPackages { get; public set; }
    public List`1<SelectedGitResource> SelectedGitResources { get; public set; }
    public SnapshotGitReferenceResource GitReference { get; public set; }
    public string ProjectVariableSetSnapshotId { get; public set; }
    public string SpaceId { get; public set; }
    public RunbookSnapshotResource(string projectId);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_RunbookId();
    [CompilerGeneratedAttribute]
public void set_RunbookId(string value);
    [CompilerGeneratedAttribute]
public string get_Notes();
    [CompilerGeneratedAttribute]
public void set_Notes(string value);
    [CompilerGeneratedAttribute]
public string get_FrozenRunbookProcessId();
    [CompilerGeneratedAttribute]
public void set_FrozenRunbookProcessId(string value);
    [CompilerGeneratedAttribute]
public string get_FrozenProjectVariableSetId();
    [CompilerGeneratedAttribute]
public void set_FrozenProjectVariableSetId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual DateTimeOffset get_Assembled();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Assembled(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ProjectId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ProjectId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<string> get_LibraryVariableSetSnapshotIds();
    [CompilerGeneratedAttribute]
public sealed virtual void set_LibraryVariableSetSnapshotIds(List`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<SelectedPackage> get_SelectedPackages();
    [CompilerGeneratedAttribute]
public void set_SelectedPackages(List`1<SelectedPackage> value);
    [CompilerGeneratedAttribute]
public List`1<SelectedGitResource> get_SelectedGitResources();
    [CompilerGeneratedAttribute]
public void set_SelectedGitResources(List`1<SelectedGitResource> value);
    [CompilerGeneratedAttribute]
public SnapshotGitReferenceResource get_GitReference();
    [CompilerGeneratedAttribute]
public void set_GitReference(SnapshotGitReferenceResource value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ProjectVariableSetSnapshotId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ProjectVariableSetSnapshotId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
}
public class Octopus.Client.Model.RunbookSnapshotTemplateResource : ReleaseTemplateBaseResource {
    [CompilerGeneratedAttribute]
private string <RunbookProcessId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NextNameIncrement>k__BackingField;
    public string RunbookProcessId { get; public set; }
    public string NextNameIncrement { get; public set; }
    [CompilerGeneratedAttribute]
public string get_RunbookProcessId();
    [CompilerGeneratedAttribute]
public void set_RunbookProcessId(string value);
    [CompilerGeneratedAttribute]
public string get_NextNameIncrement();
    [CompilerGeneratedAttribute]
public void set_NextNameIncrement(string value);
}
public class Octopus.Client.Model.S3FeedResource : FeedResource {
    [CompilerGeneratedAttribute]
private bool <UseMachineCredentials>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccessKey>k__BackingField;
    [CompilerGeneratedAttribute]
private SensitiveValue <SecretKey>k__BackingField;
    public FeedType FeedType { get; }
    [WriteableAttribute]
public bool UseMachineCredentials { get; public set; }
    [WriteableAttribute]
[TrimAttribute]
public string AccessKey { get; public set; }
    [WriteableAttribute]
[TrimAttribute]
public SensitiveValue SecretKey { get; public set; }
    public virtual FeedType get_FeedType();
    [CompilerGeneratedAttribute]
public bool get_UseMachineCredentials();
    [CompilerGeneratedAttribute]
public void set_UseMachineCredentials(bool value);
    [CompilerGeneratedAttribute]
public string get_AccessKey();
    [CompilerGeneratedAttribute]
public void set_AccessKey(string value);
    [CompilerGeneratedAttribute]
public SensitiveValue get_SecretKey();
    [CompilerGeneratedAttribute]
public void set_SecretKey(SensitiveValue value);
}
public class Octopus.Client.Model.ScheduledTaskDetailsResource : Resource {
    [CompilerGeneratedAttribute]
private ActivityElement <ActivityLog>k__BackingField;
    public ActivityElement ActivityLog { get; public set; }
    [CompilerGeneratedAttribute]
public ActivityElement get_ActivityLog();
    [CompilerGeneratedAttribute]
public void set_ActivityLog(ActivityElement value);
}
public class Octopus.Client.Model.ScheduledTaskStatusResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsEnabled>k__BackingField;
    public string Name { get; public set; }
    public bool IsEnabled { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public bool get_IsEnabled();
    [CompilerGeneratedAttribute]
public void set_IsEnabled(bool value);
}
public class Octopus.Client.Model.SchedulerStatusResource : Resource {
    [CompilerGeneratedAttribute]
private bool <IsRunning>k__BackingField;
    [CompilerGeneratedAttribute]
private ScheduledTaskStatusResource[] <TaskStatus>k__BackingField;
    public bool IsRunning { get; public set; }
    public ScheduledTaskStatusResource[] TaskStatus { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_IsRunning();
    [CompilerGeneratedAttribute]
public void set_IsRunning(bool value);
    [CompilerGeneratedAttribute]
public ScheduledTaskStatusResource[] get_TaskStatus();
    [CompilerGeneratedAttribute]
public void set_TaskStatus(ScheduledTaskStatusResource[] value);
}
public class Octopus.Client.Model.ScopedUserRoleResource : Resource {
    [CompilerGeneratedAttribute]
private string <UserRoleId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TeamId>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <ProjectGroupIds>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <ProjectIds>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <EnvironmentIds>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <TenantIds>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [WriteableAttribute]
public string UserRoleId { get; public set; }
    [WriteableAttribute]
public string TeamId { get; public set; }
    [WriteableAttribute]
public ReferenceCollection ProjectGroupIds { get; public set; }
    [WriteableAttribute]
public ReferenceCollection ProjectIds { get; public set; }
    [WriteableAttribute]
public ReferenceCollection EnvironmentIds { get; public set; }
    [WriteableAttribute]
public ReferenceCollection TenantIds { get; public set; }
    public string SpaceId { get; public set; }
    [CompilerGeneratedAttribute]
public string get_UserRoleId();
    [CompilerGeneratedAttribute]
public void set_UserRoleId(string value);
    [CompilerGeneratedAttribute]
public string get_TeamId();
    [CompilerGeneratedAttribute]
public void set_TeamId(string value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_ProjectGroupIds();
    [CompilerGeneratedAttribute]
public void set_ProjectGroupIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_ProjectIds();
    [CompilerGeneratedAttribute]
public void set_ProjectIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_EnvironmentIds();
    [CompilerGeneratedAttribute]
public void set_EnvironmentIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_TenantIds();
    [CompilerGeneratedAttribute]
public void set_TenantIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
}
public enum Octopus.Client.Model.ScopeField : Enum {
    public int value__;
    public static ScopeField Project;
    public static ScopeField Environment;
    public static ScopeField Machine;
    public static ScopeField Role;
    public static ScopeField TargetRole;
    public static ScopeField Action;
    public static ScopeField User;
    public static ScopeField Trigger;
    public static ScopeField ParentDeployment;
    public static ScopeField Private;
    public static ScopeField Channel;
    public static ScopeField TenantTag;
    public static ScopeField Tenant;
    public static ScopeField ProcessOwner;
}
[DebuggerDisplayAttribute("{ToString()}")]
public class Octopus.Client.Model.ScopeSpecification : Dictionary`2<ScopeField, ScopeValue> {
    public ScopeSpecification Clone();
    [ObsoleteAttribute("Rank usage is deprecated. Please see https://octopus.com/docs/deployment-process/variables for variable specificity rules.")]
public int Rank();
    private int Score(ScopeField field, int value);
    public sealed virtual bool Equals(ScopeSpecification other);
    public virtual int GetHashCode();
    public virtual string ToString();
}
public class Octopus.Client.Model.ScopeValue : ReferenceCollection {
    public ScopeValue(string value);
    public ScopeValue(string value, String[] additionalValues);
    public ScopeValue(IEnumerable`1<string> items);
    public static ScopeValue op_Implicit(string value);
}
[AttributeUsageAttribute("256")]
public class Octopus.Client.Model.ScriptConsoleSupportedAttribute : Attribute {
}
public enum Octopus.Client.Model.ScriptSyntax : Enum {
    public int value__;
    public static ScriptSyntax PowerShell;
    public static ScriptSyntax Bash;
    public static ScriptSyntax CSharp;
    public static ScriptSyntax FSharp;
    public static ScriptSyntax Python;
}
[ExtensionAttribute]
public static class Octopus.Client.Model.ScriptSyntaxExtension : object {
    [ExtensionAttribute]
public static string GetExtension(ScriptSyntax syntax);
}
public class Octopus.Client.Model.ScriptSyntaxMeta : object {
    public ScriptSyntax ScriptSyntax;
    public string Extension;
    public string Name;
    public static ScriptSyntaxMeta PowerShell;
    public static ScriptSyntaxMeta Bash;
    public static ScriptSyntaxMeta CSharp;
    public static ScriptSyntaxMeta FSharp;
    public static ScriptSyntaxMeta Python;
    public static ScriptSyntaxMeta[] All;
    private ScriptSyntaxMeta(ScriptSyntax scriptSyntax, string extension, string name);
    private static ScriptSyntaxMeta();
    public static ScriptSyntaxMeta FromName(string name);
    public static ScriptSyntaxMeta FromExtension(string extension);
}
public class Octopus.Client.Model.SelectedGitResource : object {
    [CompilerGeneratedAttribute]
private string <ActionName>k__BackingField;
    [CompilerGeneratedAttribute]
private GitReferenceResource <GitReferenceResource>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GitResourceReferenceName>k__BackingField;
    public string ActionName { get; public set; }
    public GitReferenceResource GitReferenceResource { get; public set; }
    public string GitResourceReferenceName { get; public set; }
    public SelectedGitResource(string actionName, GitReferenceResource gitReferenceResource);
    [CompilerGeneratedAttribute]
public string get_ActionName();
    [CompilerGeneratedAttribute]
public void set_ActionName(string value);
    [CompilerGeneratedAttribute]
public GitReferenceResource get_GitReferenceResource();
    [CompilerGeneratedAttribute]
public void set_GitReferenceResource(GitReferenceResource value);
    [CompilerGeneratedAttribute]
public string get_GitResourceReferenceName();
    [CompilerGeneratedAttribute]
public void set_GitResourceReferenceName(string value);
}
public class Octopus.Client.Model.SelectedPackage : object {
    [CompilerGeneratedAttribute]
private string <ActionName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PackageReferenceName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [ObsoleteAttribute("Replaced by ActionName")]
public string StepName { get; public set; }
    public string ActionName { get; public set; }
    public string PackageReferenceName { get; public set; }
    public string Version { get; public set; }
    public SelectedPackage(string actionName, string version);
    public SelectedPackage(string actionName, string packageReferenceName, string version);
    public string get_StepName();
    public void set_StepName(string value);
    [CompilerGeneratedAttribute]
public string get_ActionName();
    [CompilerGeneratedAttribute]
public void set_ActionName(string value);
    [CompilerGeneratedAttribute]
public string get_PackageReferenceName();
    [CompilerGeneratedAttribute]
public void set_PackageReferenceName(string value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
}
public class Octopus.Client.Model.SemanticVersion : StrictSemanticVersion {
    private string _originalString;
    public Version Version { get; }
    public bool IsLegacyVersion { get; }
    public int Revision { get; }
    public bool IsSemVer2 { get; }
    public string OriginalString { get; }
    public SemanticVersion(string version);
    public SemanticVersion(SemanticVersion version);
    public SemanticVersion(Version version, string releaseLabel, string metadata);
    public SemanticVersion(int major, int minor, int patch);
    public SemanticVersion(int major, int minor, int patch, string releaseLabel);
    public SemanticVersion(int major, int minor, int patch, string releaseLabel, string metadata);
    public SemanticVersion(int major, int minor, int patch, IEnumerable`1<string> releaseLabels, string metadata);
    public SemanticVersion(int major, int minor, int patch, int revision);
    public SemanticVersion(int major, int minor, int patch, int revision, string releaseLabel, string metadata);
    public SemanticVersion(int major, int minor, int patch, int revision, IEnumerable`1<string> releaseLabels, string metadata);
    public SemanticVersion(Version version, IEnumerable`1<string> releaseLabels, string metadata, string originalVersion, bool preserveMissingComponents);
    public static SemanticVersion op_Explicit(string versionString);
    public virtual string ToString();
    public Version get_Version();
    public virtual bool get_IsLegacyVersion();
    public int get_Revision();
    public bool get_IsSemVer2();
    public string get_OriginalString();
    public static string IncrementRelease(string release);
    public static SemanticVersion Parse(string value, bool preserveMissingComponents);
    public static bool TryParse(string value, SemanticVersion& version, bool preserveMissingComponents);
    public static bool TryParseStrict(string value, SemanticVersion& version);
    private static string GetLegacyString(Version version, IEnumerable`1<string> releaseLabels, string metadata);
    private static IEnumerable`1<string> ParseReleaseLabels(string releaseLabels);
}
public class Octopus.Client.Model.SemanticVersionComparer : object {
    public sealed virtual int Compare(string x, string y);
}
public static class Octopus.Client.Model.SemanticVersionMask : object {
    private static string PatternIncrement;
    private static string PatternCurrent;
    private static Regex FormatRegex;
    private static SemanticVersionMask();
    public static bool IsMask(string versionString);
    public static SemanticVersion GetLatestMaskedVersion(string mask, List`1<SemanticVersion> versions);
    public static SemanticVersion ApplyMask(string mask, SemanticVersion currentVersion);
    private static SemanticVersion GenerateVersionFromMask(MaskMatchedVersion mask);
    private static SemanticVersion GenerateVersionFromCurrent(MaskMatchedVersion mask, MaskMatchedVersion current);
}
public class Octopus.Client.Model.SensitiveValue : object {
    [CompilerGeneratedAttribute]
private bool <HasValue>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NewValue>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Hint>k__BackingField;
    public bool HasValue { get; public set; }
    public string NewValue { get; public set; }
    public string Hint { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_HasValue();
    [CompilerGeneratedAttribute]
public void set_HasValue(bool value);
    [CompilerGeneratedAttribute]
public string get_NewValue();
    [CompilerGeneratedAttribute]
public void set_NewValue(string value);
    [CompilerGeneratedAttribute]
public string get_Hint();
    [CompilerGeneratedAttribute]
public void set_Hint(string value);
    public static SensitiveValue op_Implicit(string newValue);
    public sealed virtual bool Equals(SensitiveValue other);
}
public class Octopus.Client.Model.ServerActivitiesResource : Resource {
    [CompilerGeneratedAttribute]
private ServerActivityResource[] <OrchestratedActivities>k__BackingField;
    [CompilerGeneratedAttribute]
private ServerActivityResource[] <SystemServices>k__BackingField;
    [CompilerGeneratedAttribute]
private ServerActivityResource[] <OrphanedActivities>k__BackingField;
    public ServerActivityResource[] OrchestratedActivities { get; public set; }
    public ServerActivityResource[] SystemServices { get; public set; }
    public ServerActivityResource[] OrphanedActivities { get; public set; }
    [CompilerGeneratedAttribute]
public ServerActivityResource[] get_OrchestratedActivities();
    [CompilerGeneratedAttribute]
public void set_OrchestratedActivities(ServerActivityResource[] value);
    [CompilerGeneratedAttribute]
public ServerActivityResource[] get_SystemServices();
    [CompilerGeneratedAttribute]
public void set_SystemServices(ServerActivityResource[] value);
    [CompilerGeneratedAttribute]
public ServerActivityResource[] get_OrphanedActivities();
    [CompilerGeneratedAttribute]
public void set_OrphanedActivities(ServerActivityResource[] value);
}
public class Octopus.Client.Model.ServerActivityResource : Resource {
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ActorName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Location>k__BackingField;
    [CompilerGeneratedAttribute]
private int <InputQueueCount>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CurrentOperation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CurrentlyReceiving>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <CurrentlyReceivingSinceUtc>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ServerActivityResource> <SupervisedActivities>k__BackingField;
    public string Description { get; public set; }
    public string ActorName { get; public set; }
    public string Location { get; public set; }
    public int InputQueueCount { get; public set; }
    public string CurrentOperation { get; public set; }
    public string CurrentlyReceiving { get; public set; }
    public Nullable`1<DateTime> CurrentlyReceivingSinceUtc { get; public set; }
    public List`1<ServerActivityResource> SupervisedActivities { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public string get_ActorName();
    [CompilerGeneratedAttribute]
public void set_ActorName(string value);
    [CompilerGeneratedAttribute]
public string get_Location();
    [CompilerGeneratedAttribute]
public void set_Location(string value);
    [CompilerGeneratedAttribute]
public int get_InputQueueCount();
    [CompilerGeneratedAttribute]
public void set_InputQueueCount(int value);
    [CompilerGeneratedAttribute]
public string get_CurrentOperation();
    [CompilerGeneratedAttribute]
public void set_CurrentOperation(string value);
    [CompilerGeneratedAttribute]
public string get_CurrentlyReceiving();
    [CompilerGeneratedAttribute]
public void set_CurrentlyReceiving(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_CurrentlyReceivingSinceUtc();
    [CompilerGeneratedAttribute]
public void set_CurrentlyReceivingSinceUtc(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public List`1<ServerActivityResource> get_SupervisedActivities();
    [CompilerGeneratedAttribute]
public void set_SupervisedActivities(List`1<ServerActivityResource> value);
}
public class Octopus.Client.Model.ServerConfigurationResource : Resource {
    [CompilerGeneratedAttribute]
private string <ServerUri>k__BackingField;
    [WriteableAttribute]
[TrimAttribute]
public string ServerUri { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ServerUri();
    [CompilerGeneratedAttribute]
public void set_ServerUri(string value);
}
public class Octopus.Client.Model.ServerStatusHealthResource : Resource {
    [CompilerGeneratedAttribute]
private bool <IsOperatingNormally>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsEntireClusterReadOnly>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsEntireClusterDrainingTasks>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsCompliantWithLicense>k__BackingField;
    public bool IsOperatingNormally { get; public set; }
    public string Description { get; public set; }
    public bool IsEntireClusterReadOnly { get; public set; }
    public bool IsEntireClusterDrainingTasks { get; public set; }
    public bool IsCompliantWithLicense { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_IsOperatingNormally();
    [CompilerGeneratedAttribute]
public void set_IsOperatingNormally(bool value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public bool get_IsEntireClusterReadOnly();
    [CompilerGeneratedAttribute]
public void set_IsEntireClusterReadOnly(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsEntireClusterDrainingTasks();
    [CompilerGeneratedAttribute]
public void set_IsEntireClusterDrainingTasks(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsCompliantWithLicense();
    [CompilerGeneratedAttribute]
public void set_IsCompliantWithLicense(bool value);
}
public class Octopus.Client.Model.ServerStatusResource : Resource {
    [CompilerGeneratedAttribute]
private bool <IsDatabaseEncrypted>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsUpgradeAvailable>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MaximumAvailableVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MaximumAvailableVersionCoveredByLicense>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MaintenanceExpires>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsInMaintenanceMode>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsMajorMinorUpgrade>k__BackingField;
    public bool IsDatabaseEncrypted { get; public set; }
    public bool IsUpgradeAvailable { get; public set; }
    public string MaximumAvailableVersion { get; public set; }
    public string MaximumAvailableVersionCoveredByLicense { get; public set; }
    public string MaintenanceExpires { get; public set; }
    public bool IsInMaintenanceMode { get; public set; }
    public bool IsMajorMinorUpgrade { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_IsDatabaseEncrypted();
    [CompilerGeneratedAttribute]
public void set_IsDatabaseEncrypted(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsUpgradeAvailable();
    [CompilerGeneratedAttribute]
public void set_IsUpgradeAvailable(bool value);
    [CompilerGeneratedAttribute]
public string get_MaximumAvailableVersion();
    [CompilerGeneratedAttribute]
public void set_MaximumAvailableVersion(string value);
    [CompilerGeneratedAttribute]
public string get_MaximumAvailableVersionCoveredByLicense();
    [CompilerGeneratedAttribute]
public void set_MaximumAvailableVersionCoveredByLicense(string value);
    [CompilerGeneratedAttribute]
public string get_MaintenanceExpires();
    [CompilerGeneratedAttribute]
public void set_MaintenanceExpires(string value);
    [CompilerGeneratedAttribute]
public bool get_IsInMaintenanceMode();
    [CompilerGeneratedAttribute]
public void set_IsInMaintenanceMode(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsMajorMinorUpgrade();
    [CompilerGeneratedAttribute]
public void set_IsMajorMinorUpgrade(bool value);
}
public enum Octopus.Client.Model.SkipMachineBehavior : Enum {
    public int value__;
    public static SkipMachineBehavior None;
    public static SkipMachineBehavior SkipUnavailableMachines;
}
public class Octopus.Client.Model.SmtpConfigurationResource : Resource {
    [CompilerGeneratedAttribute]
private string <SmtpHost>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <SmtpPort>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SendEmailFrom>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SmtpLogin>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableSsl>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Timeout>k__BackingField;
    [CompilerGeneratedAttribute]
private SensitiveValue <SmtpPassword>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NewSmtpPassword>k__BackingField;
    [WriteableAttribute]
public string SmtpHost { get; public set; }
    [RequiredAttribute]
[WriteableAttribute]
public Nullable`1<int> SmtpPort { get; public set; }
    [WriteableAttribute]
public string SendEmailFrom { get; public set; }
    [WriteableAttribute]
public string SmtpLogin { get; public set; }
    [WriteableAttribute]
public bool EnableSsl { get; public set; }
    [WriteableAttribute]
public Nullable`1<int> Timeout { get; public set; }
    [WriteableAttribute]
public SensitiveValue SmtpPassword { get; public set; }
    [WriteableAttribute]
[NotReadableAttribute]
[ObsoleteAttribute("Use 'SmtpPassword' instead. Will be removed in version 5.0.0.", "False")]
public string NewSmtpPassword { get; public set; }
    [CompilerGeneratedAttribute]
public string get_SmtpHost();
    [CompilerGeneratedAttribute]
public void set_SmtpHost(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_SmtpPort();
    [CompilerGeneratedAttribute]
public void set_SmtpPort(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_SendEmailFrom();
    [CompilerGeneratedAttribute]
public void set_SendEmailFrom(string value);
    [CompilerGeneratedAttribute]
public string get_SmtpLogin();
    [CompilerGeneratedAttribute]
public void set_SmtpLogin(string value);
    [CompilerGeneratedAttribute]
public bool get_EnableSsl();
    [CompilerGeneratedAttribute]
public void set_EnableSsl(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Timeout();
    [CompilerGeneratedAttribute]
public void set_Timeout(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public SensitiveValue get_SmtpPassword();
    [CompilerGeneratedAttribute]
public void set_SmtpPassword(SensitiveValue value);
    [CompilerGeneratedAttribute]
public string get_NewSmtpPassword();
    [CompilerGeneratedAttribute]
public void set_NewSmtpPassword(string value);
}
public class Octopus.Client.Model.SnapshotGitReferenceResource : object {
    [CompilerGeneratedAttribute]
private string <GitRef>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GitCommit>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VariablesGitCommit>k__BackingField;
    [WriteableOnCreateAttribute]
public string GitRef { get; public set; }
    public string GitCommit { get; public set; }
    public string VariablesGitCommit { get; public set; }
    [CompilerGeneratedAttribute]
public string get_GitRef();
    [CompilerGeneratedAttribute]
public void set_GitRef(string value);
    [CompilerGeneratedAttribute]
public string get_GitCommit();
    [CompilerGeneratedAttribute]
public void set_GitCommit(string value);
    [CompilerGeneratedAttribute]
public string get_VariablesGitCommit();
    [CompilerGeneratedAttribute]
public void set_VariablesGitCommit(string value);
}
public class Octopus.Client.Model.SpaceLicenseUsageResource : object {
    [CompilerGeneratedAttribute]
private string <SpaceName>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ProjectsCount>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TenantsCount>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MachinesCount>k__BackingField;
    public string SpaceName { get; public set; }
    public int ProjectsCount { get; public set; }
    public int TenantsCount { get; public set; }
    public int MachinesCount { get; public set; }
    [CompilerGeneratedAttribute]
public string get_SpaceName();
    [CompilerGeneratedAttribute]
public void set_SpaceName(string value);
    [CompilerGeneratedAttribute]
public int get_ProjectsCount();
    [CompilerGeneratedAttribute]
public void set_ProjectsCount(int value);
    [CompilerGeneratedAttribute]
public int get_TenantsCount();
    [CompilerGeneratedAttribute]
public void set_TenantsCount(int value);
    [CompilerGeneratedAttribute]
public int get_MachinesCount();
    [CompilerGeneratedAttribute]
public void set_MachinesCount(int value);
}
public class Octopus.Client.Model.SpaceResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Slug>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDefault>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsPrivate>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <TaskQueueStopped>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <SpaceManagersTeams>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <SpaceManagersTeamMembers>k__BackingField;
    [CompilerGeneratedAttribute]
private IconResource <Icon>k__BackingField;
    [WriteableAttribute]
public string Name { get; public set; }
    [WriteableAttribute]
public string Slug { get; public set; }
    [WriteableAttribute]
public string Description { get; public set; }
    [WriteableAttribute]
public bool IsDefault { get; public set; }
    public bool IsPrivate { get; public set; }
    public bool TaskQueueStopped { get; public set; }
    [WriteableAttribute]
public ReferenceCollection SpaceManagersTeams { get; public set; }
    [WriteableAttribute]
public ReferenceCollection SpaceManagersTeamMembers { get; public set; }
    public IconResource Icon { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Slug();
    [CompilerGeneratedAttribute]
public void set_Slug(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public bool get_IsDefault();
    [CompilerGeneratedAttribute]
public void set_IsDefault(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsPrivate();
    [CompilerGeneratedAttribute]
public void set_IsPrivate(bool value);
    [CompilerGeneratedAttribute]
public bool get_TaskQueueStopped();
    [CompilerGeneratedAttribute]
public void set_TaskQueueStopped(bool value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_SpaceManagersTeams();
    [CompilerGeneratedAttribute]
public void set_SpaceManagersTeams(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_SpaceManagersTeamMembers();
    [CompilerGeneratedAttribute]
public void set_SpaceManagersTeamMembers(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public IconResource get_Icon();
    [CompilerGeneratedAttribute]
public void set_Icon(IconResource value);
}
public class Octopus.Client.Model.SpaceRootResource : Resource {
}
public class Octopus.Client.Model.SpaceSearchResult : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    public string Id { get; public set; }
    public string Name { get; public set; }
    public string Type { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
}
[AttributeUsageAttribute("128")]
public class Octopus.Client.Model.SquidAttribute : Attribute {
}
public class Octopus.Client.Model.StaticWorkerPoolResource : WorkerPoolResource {
}
public class Octopus.Client.Model.SubscriptionResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private SubscriptionType <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDisabled>k__BackingField;
    [CompilerGeneratedAttribute]
private EventNotificationSubscription <EventNotificationSubscription>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [WriteableAttribute]
public string Name { get; public set; }
    [WriteableAttribute]
public SubscriptionType Type { get; public set; }
    [WriteableAttribute]
public bool IsDisabled { get; public set; }
    [WriteableAttribute]
public EventNotificationSubscription EventNotificationSubscription { get; public set; }
    public string SpaceId { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public SubscriptionType get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(SubscriptionType value);
    [CompilerGeneratedAttribute]
public bool get_IsDisabled();
    [CompilerGeneratedAttribute]
public void set_IsDisabled(bool value);
    [CompilerGeneratedAttribute]
public EventNotificationSubscription get_EventNotificationSubscription();
    [CompilerGeneratedAttribute]
public void set_EventNotificationSubscription(EventNotificationSubscription value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
}
public enum Octopus.Client.Model.SubscriptionType : Enum {
    public int value__;
    public static SubscriptionType Event;
}
public class Octopus.Client.Model.SummaryResource : object {
    [CompilerGeneratedAttribute]
private int <TotalMachines>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TotalDisabledMachines>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, int> <MachineHealthStatusSummaries>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, int> <MachineEndpointSummaries>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <TentacleUpgradesRequired>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <MachineIdsForCalamariUpgrade>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <MachineIdsForTentacleUpgrade>k__BackingField;
    public int TotalMachines { get; public set; }
    public int TotalDisabledMachines { get; public set; }
    public Dictionary`2<string, int> MachineHealthStatusSummaries { get; public set; }
    public Dictionary`2<string, int> MachineEndpointSummaries { get; public set; }
    public bool TentacleUpgradesRequired { get; public set; }
    public String[] MachineIdsForCalamariUpgrade { get; public set; }
    public String[] MachineIdsForTentacleUpgrade { get; public set; }
    [CompilerGeneratedAttribute]
public int get_TotalMachines();
    [CompilerGeneratedAttribute]
public void set_TotalMachines(int value);
    [CompilerGeneratedAttribute]
public int get_TotalDisabledMachines();
    [CompilerGeneratedAttribute]
public void set_TotalDisabledMachines(int value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, int> get_MachineHealthStatusSummaries();
    [CompilerGeneratedAttribute]
public void set_MachineHealthStatusSummaries(Dictionary`2<string, int> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, int> get_MachineEndpointSummaries();
    [CompilerGeneratedAttribute]
public void set_MachineEndpointSummaries(Dictionary`2<string, int> value);
    [CompilerGeneratedAttribute]
public bool get_TentacleUpgradesRequired();
    [CompilerGeneratedAttribute]
public void set_TentacleUpgradesRequired(bool value);
    [CompilerGeneratedAttribute]
public String[] get_MachineIdsForCalamariUpgrade();
    [CompilerGeneratedAttribute]
public void set_MachineIdsForCalamariUpgrade(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_MachineIdsForTentacleUpgrade();
    [CompilerGeneratedAttribute]
public void set_MachineIdsForTentacleUpgrade(String[] value);
}
public class Octopus.Client.Model.SummaryResourcesCombined : object {
    [CompilerGeneratedAttribute]
private int <TotalMachines>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TotalDisabledMachines>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, int> <MachineHealthStatusSummaries>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, int> <MachineEndpointSummaries>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <TentacleUpgradesRequired>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <MachineIdsForCalamariUpgrade>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <MachineIdsForTentacleUpgrade>k__BackingField;
    public int TotalMachines { get; public set; }
    public int TotalDisabledMachines { get; public set; }
    public Dictionary`2<string, int> MachineHealthStatusSummaries { get; public set; }
    public Dictionary`2<string, int> MachineEndpointSummaries { get; public set; }
    public bool TentacleUpgradesRequired { get; public set; }
    public String[] MachineIdsForCalamariUpgrade { get; public set; }
    public String[] MachineIdsForTentacleUpgrade { get; public set; }
    [CompilerGeneratedAttribute]
public int get_TotalMachines();
    [CompilerGeneratedAttribute]
public void set_TotalMachines(int value);
    [CompilerGeneratedAttribute]
public int get_TotalDisabledMachines();
    [CompilerGeneratedAttribute]
public void set_TotalDisabledMachines(int value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, int> get_MachineHealthStatusSummaries();
    [CompilerGeneratedAttribute]
public void set_MachineHealthStatusSummaries(Dictionary`2<string, int> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, int> get_MachineEndpointSummaries();
    [CompilerGeneratedAttribute]
public void set_MachineEndpointSummaries(Dictionary`2<string, int> value);
    [CompilerGeneratedAttribute]
public bool get_TentacleUpgradesRequired();
    [CompilerGeneratedAttribute]
public void set_TentacleUpgradesRequired(bool value);
    [CompilerGeneratedAttribute]
public String[] get_MachineIdsForCalamariUpgrade();
    [CompilerGeneratedAttribute]
public void set_MachineIdsForCalamariUpgrade(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_MachineIdsForTentacleUpgrade();
    [CompilerGeneratedAttribute]
public void set_MachineIdsForTentacleUpgrade(String[] value);
}
[AttributeUsageAttribute("256")]
public class Octopus.Client.Model.SupportsRestrictionAttribute : Attribute {
    [CompilerGeneratedAttribute]
private IList`1<string> <Scopes>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ExplicitTenantScopeRequired>k__BackingField;
    public IList`1<string> Scopes { get; }
    public bool ExplicitTenantScopeRequired { get; public set; }
    public SupportsRestrictionAttribute(String[] scopes);
    [CompilerGeneratedAttribute]
public IList`1<string> get_Scopes();
    [CompilerGeneratedAttribute]
public bool get_ExplicitTenantScopeRequired();
    [CompilerGeneratedAttribute]
public void set_ExplicitTenantScopeRequired(bool value);
}
public class Octopus.Client.Model.SystemInfoResource : Resource {
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OSVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private long <WorkingSetBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClrVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ThreadCount>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <Uptime>k__BackingField;
    public string Version { get; public set; }
    public string OSVersion { get; public set; }
    public long WorkingSetBytes { get; public set; }
    public string ClrVersion { get; public set; }
    public int ThreadCount { get; public set; }
    public TimeSpan Uptime { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
    [CompilerGeneratedAttribute]
public string get_OSVersion();
    [CompilerGeneratedAttribute]
public void set_OSVersion(string value);
    [CompilerGeneratedAttribute]
public long get_WorkingSetBytes();
    [CompilerGeneratedAttribute]
public void set_WorkingSetBytes(long value);
    [CompilerGeneratedAttribute]
public string get_ClrVersion();
    [CompilerGeneratedAttribute]
public void set_ClrVersion(string value);
    [CompilerGeneratedAttribute]
public int get_ThreadCount();
    [CompilerGeneratedAttribute]
public void set_ThreadCount(int value);
    [CompilerGeneratedAttribute]
public TimeSpan get_Uptime();
    [CompilerGeneratedAttribute]
public void set_Uptime(TimeSpan value);
}
public class Octopus.Client.Model.TagResource : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Color>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CanonicalTagName>k__BackingField;
    [CompilerGeneratedAttribute]
private int <SortOrder>k__BackingField;
    [WriteableAttribute]
[TrimAttribute]
public string Name { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string Description { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public string Color { get; public set; }
    [JsonPropertyAttribute]
public string Id { get; public set; }
    [JsonPropertyAttribute]
public string CanonicalTagName { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
public int SortOrder { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public string get_Color();
    [CompilerGeneratedAttribute]
public void set_Color(string value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_CanonicalTagName();
    [CompilerGeneratedAttribute]
public void set_CanonicalTagName(string value);
    [CompilerGeneratedAttribute]
public int get_SortOrder();
    [CompilerGeneratedAttribute]
public void set_SortOrder(int value);
}
public class Octopus.Client.Model.TagSetResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private int <SortOrder>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<TagResource> <Tags>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [TrimAttribute]
[WriteableAttribute]
public string Name { get; public set; }
    [WriteableAttribute]
[TrimAttribute]
public string Description { get; public set; }
    [WriteableAttribute]
public int SortOrder { get; public set; }
    [WriteableAttribute]
public IList`1<TagResource> Tags { get; public set; }
    public string SpaceId { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public int get_SortOrder();
    [CompilerGeneratedAttribute]
public void set_SortOrder(int value);
    [CompilerGeneratedAttribute]
public IList`1<TagResource> get_Tags();
    [CompilerGeneratedAttribute]
public void set_Tags(IList`1<TagResource> value);
    public TagSetResource AddOrUpdateTag(string name, string description, string color);
    public TagSetResource RemoveTag(string name);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
}
public class Octopus.Client.Model.TaskDetailsResource : Resource {
    private ActivityElement activityLog;
    [CompilerGeneratedAttribute]
private TaskResource <Task>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ActivityElement> <ActivityLogs>k__BackingField;
    [CompilerGeneratedAttribute]
private TaskProgress <Progress>k__BackingField;
    [CompilerGeneratedAttribute]
private long <PhysicalLogSize>k__BackingField;
    public TaskResource Task { get; public set; }
    public IList`1<ActivityElement> ActivityLogs { get; public set; }
    [EditorBrowsableAttribute("1")]
[ObsoleteAttribute("Use ActivityLogs property")]
public ActivityElement ActivityLog { get; public set; }
    public TaskProgress Progress { get; public set; }
    public long PhysicalLogSize { get; public set; }
    [CompilerGeneratedAttribute]
public TaskResource get_Task();
    [CompilerGeneratedAttribute]
public void set_Task(TaskResource value);
    [CompilerGeneratedAttribute]
public IList`1<ActivityElement> get_ActivityLogs();
    [CompilerGeneratedAttribute]
public void set_ActivityLogs(IList`1<ActivityElement> value);
    public ActivityElement get_ActivityLog();
    public void set_ActivityLog(ActivityElement value);
    [CompilerGeneratedAttribute]
public TaskProgress get_Progress();
    [CompilerGeneratedAttribute]
public void set_Progress(TaskProgress value);
    [CompilerGeneratedAttribute]
public long get_PhysicalLogSize();
    [CompilerGeneratedAttribute]
public void set_PhysicalLogSize(long value);
}
public class Octopus.Client.Model.TaskProgress : object {
    [CompilerGeneratedAttribute]
private int <ProgressPercentage>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EstimatedTimeRemaining>k__BackingField;
    public int ProgressPercentage { get; public set; }
    public string EstimatedTimeRemaining { get; public set; }
    [CompilerGeneratedAttribute]
public int get_ProgressPercentage();
    [CompilerGeneratedAttribute]
public void set_ProgressPercentage(int value);
    [CompilerGeneratedAttribute]
public string get_EstimatedTimeRemaining();
    [CompilerGeneratedAttribute]
public void set_EstimatedTimeRemaining(string value);
}
public class Octopus.Client.Model.TaskResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> <Arguments>k__BackingField;
    [CompilerGeneratedAttribute]
private TaskState <State>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Completed>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <QueueTime>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <QueueTimeExpiry>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <StartTime>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <LastUpdatedTime>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTimeOffset> <CompletedTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServerNode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Duration>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ErrorMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasBeenPickedUpByProcessor>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasPendingInterruptions>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CanRerun>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasWarningsOrErrors>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <EstimatedRemainingQueueDurationSeconds>k__BackingField;
    [WriteableOnCreateAttribute]
[JsonPropertyAttribute]
public string Name { get; public set; }
    [JsonPropertyAttribute]
[WriteableOnCreateAttribute]
public string Description { get; public set; }
    [WriteableOnCreateAttribute]
[JsonPropertyAttribute]
public Dictionary`2<string, object> Arguments { get; public set; }
    [JsonConverterAttribute("Newtonsoft.Json.Converters.StringEnumConverter")]
[JsonPropertyAttribute]
public TaskState State { get; public set; }
    [JsonPropertyAttribute]
public string Completed { get; public set; }
    [JsonPropertyAttribute]
public DateTimeOffset QueueTime { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<DateTimeOffset> QueueTimeExpiry { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<DateTimeOffset> StartTime { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<DateTimeOffset> LastUpdatedTime { get; public set; }
    [JsonPropertyAttribute]
public Nullable`1<DateTimeOffset> CompletedTime { get; public set; }
    [JsonPropertyAttribute]
public string ServerNode { get; public set; }
    [JsonPropertyAttribute]
public string Duration { get; public set; }
    [JsonPropertyAttribute]
public string ErrorMessage { get; public set; }
    [JsonPropertyAttribute]
public bool HasBeenPickedUpByProcessor { get; public set; }
    [JsonPropertyAttribute]
public bool IsCompleted { get; }
    [JsonPropertyAttribute]
public bool FinishedSuccessfully { get; }
    [JsonPropertyAttribute]
public bool HasPendingInterruptions { get; public set; }
    [JsonPropertyAttribute]
public bool CanRerun { get; public set; }
    [JsonPropertyAttribute]
public bool HasWarningsOrErrors { get; public set; }
    [JsonPropertyAttribute]
public string ProjectId { get; public set; }
    public string SpaceId { get; public set; }
    public int EstimatedRemainingQueueDurationSeconds { get; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, object> get_Arguments();
    [CompilerGeneratedAttribute]
public void set_Arguments(Dictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public TaskState get_State();
    [CompilerGeneratedAttribute]
public void set_State(TaskState value);
    [CompilerGeneratedAttribute]
public string get_Completed();
    [CompilerGeneratedAttribute]
public void set_Completed(string value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_QueueTime();
    [CompilerGeneratedAttribute]
public void set_QueueTime(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_QueueTimeExpiry();
    [CompilerGeneratedAttribute]
public void set_QueueTimeExpiry(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_StartTime();
    [CompilerGeneratedAttribute]
public void set_StartTime(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_LastUpdatedTime();
    [CompilerGeneratedAttribute]
public void set_LastUpdatedTime(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTimeOffset> get_CompletedTime();
    [CompilerGeneratedAttribute]
public void set_CompletedTime(Nullable`1<DateTimeOffset> value);
    [CompilerGeneratedAttribute]
public string get_ServerNode();
    [CompilerGeneratedAttribute]
public void set_ServerNode(string value);
    [CompilerGeneratedAttribute]
public string get_Duration();
    [CompilerGeneratedAttribute]
public void set_Duration(string value);
    [CompilerGeneratedAttribute]
public string get_ErrorMessage();
    [CompilerGeneratedAttribute]
public void set_ErrorMessage(string value);
    [CompilerGeneratedAttribute]
public bool get_HasBeenPickedUpByProcessor();
    [CompilerGeneratedAttribute]
public void set_HasBeenPickedUpByProcessor(bool value);
    public bool get_IsCompleted();
    public bool get_FinishedSuccessfully();
    [CompilerGeneratedAttribute]
public bool get_HasPendingInterruptions();
    [CompilerGeneratedAttribute]
public void set_HasPendingInterruptions(bool value);
    [CompilerGeneratedAttribute]
public bool get_CanRerun();
    [CompilerGeneratedAttribute]
public void set_CanRerun(bool value);
    [CompilerGeneratedAttribute]
public bool get_HasWarningsOrErrors();
    [CompilerGeneratedAttribute]
public void set_HasWarningsOrErrors(bool value);
    [CompilerGeneratedAttribute]
public string get_ProjectId();
    [CompilerGeneratedAttribute]
public void set_ProjectId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
    [CompilerGeneratedAttribute]
public int get_EstimatedRemainingQueueDurationSeconds();
}
public class Octopus.Client.Model.TaskResourceCollection : ResourceCollection`1<TaskResource> {
    [CompilerGeneratedAttribute]
private Dictionary`2<string, int> <TotalCounts>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, int> <TotalCountsInOtherSpaces>k__BackingField;
    public Dictionary`2<string, int> TotalCounts { get; public set; }
    public Dictionary`2<string, int> TotalCountsInOtherSpaces { get; public set; }
    public TaskResourceCollection(IEnumerable`1<TaskResource> items, LinkCollection links);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, int> get_TotalCounts();
    [CompilerGeneratedAttribute]
public void set_TotalCounts(Dictionary`2<string, int> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, int> get_TotalCountsInOtherSpaces();
    [CompilerGeneratedAttribute]
public void set_TotalCountsInOtherSpaces(Dictionary`2<string, int> value);
}
public enum Octopus.Client.Model.TaskState : Enum {
    public int value__;
    public static TaskState Queued;
    public static TaskState Executing;
    public static TaskState Failed;
    public static TaskState Canceled;
    public static TaskState TimedOut;
    public static TaskState Success;
    public static TaskState Cancelling;
}
public class Octopus.Client.Model.TaskTypeResource : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private LinkCollection <Links>k__BackingField;
    public string Id { get; public set; }
    public string Name { get; public set; }
    public LinkCollection Links { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public sealed virtual LinkCollection get_Links();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Links(LinkCollection value);
}
public class Octopus.Client.Model.TeamNameResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [WriteableAttribute]
[TrimAttribute]
public string Name { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
}
public class Octopus.Client.Model.TeamResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <MemberUserIds>k__BackingField;
    [CompilerGeneratedAttribute]
private NamedReferenceItemCollection <ExternalSecurityGroups>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CanBeDeleted>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CanBeRenamed>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CanChangeRoles>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CanChangeMembers>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Slug>k__BackingField;
    [TrimAttribute]
[WriteableAttribute]
public string Name { get; public set; }
    [JsonPropertyAttribute]
[WriteableAttribute]
public string Description { get; public set; }
    [WriteableAttribute]
public ReferenceCollection MemberUserIds { get; public set; }
    [WriteableAttribute]
public NamedReferenceItemCollection ExternalSecurityGroups { get; public set; }
    public bool CanBeDeleted { get; public set; }
    public bool CanBeRenamed { get; public set; }
    public bool CanChangeRoles { get; public set; }
    public bool CanChangeMembers { get; public set; }
    public string SpaceId { get; public set; }
    public string Slug { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_MemberUserIds();
    [CompilerGeneratedAttribute]
public void set_MemberUserIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public NamedReferenceItemCollection get_ExternalSecurityGroups();
    [CompilerGeneratedAttribute]
public void set_ExternalSecurityGroups(NamedReferenceItemCollection value);
    [CompilerGeneratedAttribute]
public bool get_CanBeDeleted();
    [CompilerGeneratedAttribute]
public void set_CanBeDeleted(bool value);
    [CompilerGeneratedAttribute]
public bool get_CanBeRenamed();
    [CompilerGeneratedAttribute]
public void set_CanBeRenamed(bool value);
    [CompilerGeneratedAttribute]
public bool get_CanChangeRoles();
    [CompilerGeneratedAttribute]
public void set_CanChangeRoles(bool value);
    [CompilerGeneratedAttribute]
public bool get_CanChangeMembers();
    [CompilerGeneratedAttribute]
public void set_CanChangeMembers(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Slug();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Slug(string value);
}
public class Octopus.Client.Model.TelemetryConfigurationResource : Resource {
    [CompilerGeneratedAttribute]
private bool <Enabled>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <ShowAsNewUntil>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsTelemetryEnforced>k__BackingField;
    [WriteableAttribute]
public bool Enabled { get; public set; }
    public DateTimeOffset ShowAsNewUntil { get; public set; }
    public bool IsTelemetryEnforced { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_Enabled();
    [CompilerGeneratedAttribute]
public void set_Enabled(bool value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_ShowAsNewUntil();
    [CompilerGeneratedAttribute]
public void set_ShowAsNewUntil(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public bool get_IsTelemetryEnforced();
    [CompilerGeneratedAttribute]
public void set_IsTelemetryEnforced(bool value);
}
public enum Octopus.Client.Model.TenantedDeploymentMode : Enum {
    public int value__;
    public static TenantedDeploymentMode Untenanted;
    public static TenantedDeploymentMode TenantedOrUntenanted;
    public static TenantedDeploymentMode Tenanted;
}
public class Octopus.Client.Model.TenantProjectEnvironmentMappingResource : Resource {
    [CompilerGeneratedAttribute]
private string <ProjectId>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <Environments>k__BackingField;
    [WriteableAttribute]
public string ProjectId { get; public set; }
    [WriteableAttribute]
public ReferenceCollection Environments { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ProjectId();
    [CompilerGeneratedAttribute]
public void set_ProjectId(string value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_Environments();
    [CompilerGeneratedAttribute]
public void set_Environments(ReferenceCollection value);
}
public class Octopus.Client.Model.TenantResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <TenantTags>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, ReferenceCollection> <ProjectEnvironments>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClonedFromTenantId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Slug>k__BackingField;
    [CompilerGeneratedAttribute]
private IconResource <Icon>k__BackingField;
    [WriteableAttribute]
public string Name { get; public set; }
    [WriteableAttribute]
public ReferenceCollection TenantTags { get; public set; }
    [WriteableAttribute]
public IDictionary`2<string, ReferenceCollection> ProjectEnvironments { get; public set; }
    public string SpaceId { get; public set; }
    public string Description { get; public set; }
    [WriteableOnCreateAttribute]
public string ClonedFromTenantId { get; public set; }
    public string Slug { get; public set; }
    public IconResource Icon { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_TenantTags();
    [CompilerGeneratedAttribute]
public void set_TenantTags(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, ReferenceCollection> get_ProjectEnvironments();
    [CompilerGeneratedAttribute]
public void set_ProjectEnvironments(IDictionary`2<string, ReferenceCollection> value);
    public TenantResource WithTag(TagResource tag);
    public TenantResource ClearTags();
    public TenantResource ConnectToProjectAndEnvironments(ProjectResource project, EnvironmentResource[] environments);
    public TenantResource ClearProjects();
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public string get_ClonedFromTenantId();
    [CompilerGeneratedAttribute]
public void set_ClonedFromTenantId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Slug();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Slug(string value);
    [CompilerGeneratedAttribute]
public IconResource get_Icon();
    [CompilerGeneratedAttribute]
public void set_Icon(IconResource value);
}
public class Octopus.Client.Model.TenantsMissingVariablesResource : object {
    [CompilerGeneratedAttribute]
private string <TenantId>k__BackingField;
    [CompilerGeneratedAttribute]
private LinkCollection <Links>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<MissingVariableResource> <MissingVariables>k__BackingField;
    public string TenantId { get; }
    public LinkCollection Links { get; }
    [JsonPropertyAttribute]
public IEnumerable`1<MissingVariableResource> MissingVariables { get; public set; }
    public TenantsMissingVariablesResource(string tenantId);
    [CompilerGeneratedAttribute]
public string get_TenantId();
    [CompilerGeneratedAttribute]
public LinkCollection get_Links();
    [CompilerGeneratedAttribute]
public IEnumerable`1<MissingVariableResource> get_MissingVariables();
    [CompilerGeneratedAttribute]
public void set_MissingVariables(IEnumerable`1<MissingVariableResource> value);
}
public class Octopus.Client.Model.TenantVariableResource : Resource {
    [CompilerGeneratedAttribute]
private string <TenantId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TenantName>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, Project> <ProjectVariables>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, Library> <LibraryVariables>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ConcurrencyToken>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    public string TenantId { get; public set; }
    public string TenantName { get; public set; }
    public Dictionary`2<string, Project> ProjectVariables { get; public set; }
    public Dictionary`2<string, Library> LibraryVariables { get; public set; }
    public string ConcurrencyToken { get; public set; }
    public string SpaceId { get; public set; }
    [CompilerGeneratedAttribute]
public string get_TenantId();
    [CompilerGeneratedAttribute]
public void set_TenantId(string value);
    [CompilerGeneratedAttribute]
public string get_TenantName();
    [CompilerGeneratedAttribute]
public void set_TenantName(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, Project> get_ProjectVariables();
    [CompilerGeneratedAttribute]
public void set_ProjectVariables(Dictionary`2<string, Project> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, Library> get_LibraryVariables();
    [CompilerGeneratedAttribute]
public void set_LibraryVariables(Dictionary`2<string, Library> value);
    [CompilerGeneratedAttribute]
public string get_ConcurrencyToken();
    [CompilerGeneratedAttribute]
public void set_ConcurrencyToken(string value);
    public bool TryGetProjectVariableValue(ProjectResource project, EnvironmentResource environment, string templateName, PropertyValueResource& value);
    public PropertyValueResource GetProjectVariableValue(ProjectResource projectResource, EnvironmentResource environmentResource, string templateName);
    public void SetProjectVariableValue(ProjectResource projectResource, EnvironmentResource environmentResource, string templateName, PropertyValueResource value);
    public bool TryGetLibraryVariableValue(LibraryVariableSetResource libraryVariableSet, string templateName, PropertyValueResource& value);
    public PropertyValueResource GetLibraryVariableValue(LibraryVariableSetResource libraryVariableSet, string templateName);
    public void SetLibraryVariableValue(LibraryVariableSetResource libraryVariableSetResource, string templateName, PropertyValueResource value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
}
public enum Octopus.Client.Model.TentacleUpdateBehavior : Enum {
    public int value__;
    public static TentacleUpdateBehavior NeverUpdate;
    public static TentacleUpdateBehavior Update;
}
[AttributeUsageAttribute("256")]
public class Octopus.Client.Model.TentacleUpgradeSupportedAttribute : Attribute {
}
public class Octopus.Client.Model.Triggers.ArcFeedFilterResource : TriggerFilterResource {
    [CompilerGeneratedAttribute]
private List`1<DeploymentActionPackageResource> <Packages>k__BackingField;
    public List`1<DeploymentActionPackageResource> Packages { get; public set; }
    public TriggerFilterType FilterType { get; }
    [CompilerGeneratedAttribute]
public List`1<DeploymentActionPackageResource> get_Packages();
    [CompilerGeneratedAttribute]
public void set_Packages(List`1<DeploymentActionPackageResource> value);
    public virtual TriggerFilterType get_FilterType();
}
public class Octopus.Client.Model.Triggers.AutoDeployActionResource : TriggerActionResource {
    [CompilerGeneratedAttribute]
private bool <ShouldRedeployWhenMachineHasBeenDeployedTo>k__BackingField;
    public TriggerActionType ActionType { get; }
    [WriteableAttribute]
public bool ShouldRedeployWhenMachineHasBeenDeployedTo { get; public set; }
    public virtual TriggerActionType get_ActionType();
    [CompilerGeneratedAttribute]
public bool get_ShouldRedeployWhenMachineHasBeenDeployedTo();
    [CompilerGeneratedAttribute]
public void set_ShouldRedeployWhenMachineHasBeenDeployedTo(bool value);
}
public class Octopus.Client.Model.Triggers.CreateReleaseActionResource : TriggerActionResource {
    [CompilerGeneratedAttribute]
private string <ChannelId>k__BackingField;
    public TriggerActionType ActionType { get; }
    [WriteableAttribute]
public string ChannelId { get; public set; }
    public virtual TriggerActionType get_ActionType();
    [CompilerGeneratedAttribute]
public string get_ChannelId();
    [CompilerGeneratedAttribute]
public void set_ChannelId(string value);
}
public class Octopus.Client.Model.Triggers.DeploymentActionSlugPackageResource : object {
    [CompilerGeneratedAttribute]
private string <DeploymentActionSlug>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PackageReference>k__BackingField;
    public string DeploymentActionSlug { get; public set; }
    public string PackageReference { get; public set; }
    [JsonConstructorAttribute]
public DeploymentActionSlugPackageResource(string deploymentActionSlug, string packageReference);
    [CompilerGeneratedAttribute]
public string get_DeploymentActionSlug();
    [CompilerGeneratedAttribute]
public void set_DeploymentActionSlug(string value);
    [CompilerGeneratedAttribute]
public string get_PackageReference();
    [CompilerGeneratedAttribute]
public void set_PackageReference(string value);
}
public class Octopus.Client.Model.Triggers.FeedFilterResource : TriggerFilterResource {
    [CompilerGeneratedAttribute]
private List`1<DeploymentActionSlugPackageResource> <Packages>k__BackingField;
    public TriggerFilterType FilterType { get; }
    [WriteableAttribute]
public List`1<DeploymentActionSlugPackageResource> Packages { get; public set; }
    public virtual TriggerFilterType get_FilterType();
    [CompilerGeneratedAttribute]
public List`1<DeploymentActionSlugPackageResource> get_Packages();
    [CompilerGeneratedAttribute]
public void set_Packages(List`1<DeploymentActionSlugPackageResource> value);
}
public class Octopus.Client.Model.Triggers.MachineFilterResource : TriggerFilterResource {
    [CompilerGeneratedAttribute]
private ReferenceCollection <EnvironmentIds>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <Roles>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <EventGroups>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <EventCategories>k__BackingField;
    public TriggerFilterType FilterType { get; }
    [WriteableAttribute]
public ReferenceCollection EnvironmentIds { get; public set; }
    [WriteableAttribute]
public ReferenceCollection Roles { get; public set; }
    [WriteableAttribute]
public ReferenceCollection EventGroups { get; public set; }
    [WriteableAttribute]
public ReferenceCollection EventCategories { get; public set; }
    public virtual TriggerFilterType get_FilterType();
    [CompilerGeneratedAttribute]
public ReferenceCollection get_EnvironmentIds();
    [CompilerGeneratedAttribute]
public void set_EnvironmentIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_Roles();
    [CompilerGeneratedAttribute]
public void set_Roles(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_EventGroups();
    [CompilerGeneratedAttribute]
public void set_EventGroups(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_EventCategories();
    [CompilerGeneratedAttribute]
public void set_EventCategories(ReferenceCollection value);
}
public class Octopus.Client.Model.Triggers.RunRunbookActionResource : TriggerActionResource {
    [CompilerGeneratedAttribute]
private string <RunbookId>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <EnvironmentIds>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <TenantIds>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <TenantTags>k__BackingField;
    public TriggerActionType ActionType { get; }
    [WriteableAttribute]
public string RunbookId { get; public set; }
    [WriteableAttribute]
public ReferenceCollection EnvironmentIds { get; public set; }
    [WriteableAttribute]
public ReferenceCollection TenantIds { get; public set; }
    [WriteableAttribute]
public ReferenceCollection TenantTags { get; public set; }
    public virtual TriggerActionType get_ActionType();
    [CompilerGeneratedAttribute]
public string get_RunbookId();
    [CompilerGeneratedAttribute]
public void set_RunbookId(string value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_EnvironmentIds();
    [CompilerGeneratedAttribute]
public void set_EnvironmentIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_TenantIds();
    [CompilerGeneratedAttribute]
public void set_TenantIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_TenantTags();
    [CompilerGeneratedAttribute]
public void set_TenantTags(ReferenceCollection value);
}
public class Octopus.Client.Model.Triggers.ScheduledTriggers.ContinuousDailyScheduledTriggerFilterResource : ScheduledTriggerFilterResource {
    [CompilerGeneratedAttribute]
private DateTime <RunAfter>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <RunUntil>k__BackingField;
    [CompilerGeneratedAttribute]
private DailyScheduledTriggerInterval <Interval>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<short> <HourInterval>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<short> <MinuteInterval>k__BackingField;
    [CompilerGeneratedAttribute]
private DaysOfWeek <DaysOfWeek>k__BackingField;
    public TriggerFilterType FilterType { get; }
    [WriteableAttribute]
public DateTime RunAfter { get; public set; }
    [WriteableAttribute]
public DateTime RunUntil { get; public set; }
    [WriteableAttribute]
public DailyScheduledTriggerInterval Interval { get; public set; }
    [WriteableAttribute]
public Nullable`1<short> HourInterval { get; public set; }
    [WriteableAttribute]
public Nullable`1<short> MinuteInterval { get; public set; }
    [WriteableAttribute]
public DaysOfWeek DaysOfWeek { get; public set; }
    public virtual TriggerFilterType get_FilterType();
    [CompilerGeneratedAttribute]
public DateTime get_RunAfter();
    [CompilerGeneratedAttribute]
public void set_RunAfter(DateTime value);
    [CompilerGeneratedAttribute]
public DateTime get_RunUntil();
    [CompilerGeneratedAttribute]
public void set_RunUntil(DateTime value);
    [CompilerGeneratedAttribute]
public DailyScheduledTriggerInterval get_Interval();
    [CompilerGeneratedAttribute]
public void set_Interval(DailyScheduledTriggerInterval value);
    [CompilerGeneratedAttribute]
public Nullable`1<short> get_HourInterval();
    [CompilerGeneratedAttribute]
public void set_HourInterval(Nullable`1<short> value);
    [CompilerGeneratedAttribute]
public Nullable`1<short> get_MinuteInterval();
    [CompilerGeneratedAttribute]
public void set_MinuteInterval(Nullable`1<short> value);
    [CompilerGeneratedAttribute]
public DaysOfWeek get_DaysOfWeek();
    [CompilerGeneratedAttribute]
public void set_DaysOfWeek(DaysOfWeek value);
}
public class Octopus.Client.Model.Triggers.ScheduledTriggers.CronScheduledTriggerFilterResource : ScheduledTriggerFilterResource {
    [CompilerGeneratedAttribute]
private string <CronExpression>k__BackingField;
    public TriggerFilterType FilterType { get; }
    [WriteableAttribute]
public string CronExpression { get; public set; }
    public virtual TriggerFilterType get_FilterType();
    [CompilerGeneratedAttribute]
public string get_CronExpression();
    [CompilerGeneratedAttribute]
public void set_CronExpression(string value);
}
public class Octopus.Client.Model.Triggers.ScheduledTriggers.DailyScheduledTriggerFilterResource : ScheduledTriggerFilterResource {
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <StartTime>k__BackingField;
    [CompilerGeneratedAttribute]
private ScheduledTriggerFilterRunType <RunType>k__BackingField;
    [CompilerGeneratedAttribute]
private DailyScheduledTriggerInterval <Interval>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<short> <HourInterval>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<short> <MinuteInterval>k__BackingField;
    public TriggerFilterType FilterType { get; }
    [WriteableAttribute]
public Nullable`1<DateTime> StartTime { get; public set; }
    [WriteableAttribute]
public ScheduledTriggerFilterRunType RunType { get; public set; }
    [WriteableAttribute]
public DailyScheduledTriggerInterval Interval { get; public set; }
    [WriteableAttribute]
public Nullable`1<short> HourInterval { get; public set; }
    [WriteableAttribute]
public Nullable`1<short> MinuteInterval { get; public set; }
    public virtual TriggerFilterType get_FilterType();
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_StartTime();
    [CompilerGeneratedAttribute]
public void set_StartTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public ScheduledTriggerFilterRunType get_RunType();
    [CompilerGeneratedAttribute]
public void set_RunType(ScheduledTriggerFilterRunType value);
    [CompilerGeneratedAttribute]
public DailyScheduledTriggerInterval get_Interval();
    [CompilerGeneratedAttribute]
public void set_Interval(DailyScheduledTriggerInterval value);
    [CompilerGeneratedAttribute]
public Nullable`1<short> get_HourInterval();
    [CompilerGeneratedAttribute]
public void set_HourInterval(Nullable`1<short> value);
    [CompilerGeneratedAttribute]
public Nullable`1<short> get_MinuteInterval();
    [CompilerGeneratedAttribute]
public void set_MinuteInterval(Nullable`1<short> value);
}
public enum Octopus.Client.Model.Triggers.ScheduledTriggers.DailyScheduledTriggerInterval : Enum {
    public int value__;
    public static DailyScheduledTriggerInterval OnceHourly;
    public static DailyScheduledTriggerInterval OnceEveryMinute;
    public static DailyScheduledTriggerInterval OnceDaily;
}
public enum Octopus.Client.Model.Triggers.ScheduledTriggers.DayOfWeek : Enum {
    public int value__;
    public static DayOfWeek Sunday;
    public static DayOfWeek Monday;
    public static DayOfWeek Tuesday;
    public static DayOfWeek Wednesday;
    public static DayOfWeek Thursday;
    public static DayOfWeek Friday;
    public static DayOfWeek Saturday;
}
public class Octopus.Client.Model.Triggers.ScheduledTriggers.DaysPerMonthScheduledTriggerFilterResource : ScheduledTriggerFilterResource {
    [CompilerGeneratedAttribute]
private DateTime <StartTime>k__BackingField;
    [CompilerGeneratedAttribute]
private MonthlyScheduleType <MonthlyScheduleType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DateOfMonth>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DayNumberOfMonth>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DayOfWeek> <DayOfWeek>k__BackingField;
    public TriggerFilterType FilterType { get; }
    [WriteableAttribute]
public DateTime StartTime { get; public set; }
    [WriteableAttribute]
public MonthlyScheduleType MonthlyScheduleType { get; public set; }
    [WriteableAttribute]
public string DateOfMonth { get; public set; }
    [WriteableAttribute]
public string DayNumberOfMonth { get; public set; }
    [WriteableAttribute]
public Nullable`1<DayOfWeek> DayOfWeek { get; public set; }
    public virtual TriggerFilterType get_FilterType();
    [CompilerGeneratedAttribute]
public DateTime get_StartTime();
    [CompilerGeneratedAttribute]
public void set_StartTime(DateTime value);
    [CompilerGeneratedAttribute]
public MonthlyScheduleType get_MonthlyScheduleType();
    [CompilerGeneratedAttribute]
public void set_MonthlyScheduleType(MonthlyScheduleType value);
    [CompilerGeneratedAttribute]
public string get_DateOfMonth();
    [CompilerGeneratedAttribute]
public void set_DateOfMonth(string value);
    [CompilerGeneratedAttribute]
public string get_DayNumberOfMonth();
    [CompilerGeneratedAttribute]
public void set_DayNumberOfMonth(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<DayOfWeek> get_DayOfWeek();
    [CompilerGeneratedAttribute]
public void set_DayOfWeek(Nullable`1<DayOfWeek> value);
}
public class Octopus.Client.Model.Triggers.ScheduledTriggers.DaysPerWeekScheduledTriggerFilterResource : DailyScheduledTriggerFilterResource {
    [CompilerGeneratedAttribute]
private bool <Monday>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Tuesday>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Wednesday>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Thursday>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Friday>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Saturday>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Sunday>k__BackingField;
    public TriggerFilterType FilterType { get; }
    [WriteableAttribute]
public bool Monday { get; public set; }
    [WriteableAttribute]
public bool Tuesday { get; public set; }
    [WriteableAttribute]
public bool Wednesday { get; public set; }
    [WriteableAttribute]
public bool Thursday { get; public set; }
    [WriteableAttribute]
public bool Friday { get; public set; }
    [WriteableAttribute]
public bool Saturday { get; public set; }
    [WriteableAttribute]
public bool Sunday { get; public set; }
    public virtual TriggerFilterType get_FilterType();
    [CompilerGeneratedAttribute]
public bool get_Monday();
    [CompilerGeneratedAttribute]
public void set_Monday(bool value);
    [CompilerGeneratedAttribute]
public bool get_Tuesday();
    [CompilerGeneratedAttribute]
public void set_Tuesday(bool value);
    [CompilerGeneratedAttribute]
public bool get_Wednesday();
    [CompilerGeneratedAttribute]
public void set_Wednesday(bool value);
    [CompilerGeneratedAttribute]
public bool get_Thursday();
    [CompilerGeneratedAttribute]
public void set_Thursday(bool value);
    [CompilerGeneratedAttribute]
public bool get_Friday();
    [CompilerGeneratedAttribute]
public void set_Friday(bool value);
    [CompilerGeneratedAttribute]
public bool get_Saturday();
    [CompilerGeneratedAttribute]
public void set_Saturday(bool value);
    [CompilerGeneratedAttribute]
public bool get_Sunday();
    [CompilerGeneratedAttribute]
public void set_Sunday(bool value);
}
public class Octopus.Client.Model.Triggers.ScheduledTriggers.DeployLatestReleaseActionResource : ScopedDeploymentActionResource {
    [CompilerGeneratedAttribute]
private string <Variables>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <SourceEnvironmentIds>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DestinationEnvironmentId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ShouldRedeployWhenReleaseIsCurrent>k__BackingField;
    public TriggerActionType ActionType { get; }
    [WriteableAttribute]
public string Variables { get; public set; }
    [WriteableAttribute]
public ReferenceCollection SourceEnvironmentIds { get; public set; }
    [WriteableAttribute]
public string DestinationEnvironmentId { get; public set; }
    [WriteableAttribute]
public bool ShouldRedeployWhenReleaseIsCurrent { get; public set; }
    public virtual TriggerActionType get_ActionType();
    [CompilerGeneratedAttribute]
public string get_Variables();
    [CompilerGeneratedAttribute]
public void set_Variables(string value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_SourceEnvironmentIds();
    [CompilerGeneratedAttribute]
public void set_SourceEnvironmentIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public string get_DestinationEnvironmentId();
    [CompilerGeneratedAttribute]
public void set_DestinationEnvironmentId(string value);
    [CompilerGeneratedAttribute]
public bool get_ShouldRedeployWhenReleaseIsCurrent();
    [CompilerGeneratedAttribute]
public void set_ShouldRedeployWhenReleaseIsCurrent(bool value);
}
public class Octopus.Client.Model.Triggers.ScheduledTriggers.DeployNewReleaseActionResource : ScopedDeploymentActionResource {
    [CompilerGeneratedAttribute]
private string <Variables>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EnvironmentId>k__BackingField;
    [CompilerGeneratedAttribute]
private GitReferenceResource <VersionControlReference>k__BackingField;
    public TriggerActionType ActionType { get; }
    [WriteableAttribute]
public string Variables { get; public set; }
    [WriteableAttribute]
public string EnvironmentId { get; public set; }
    public GitReferenceResource VersionControlReference { get; public set; }
    public virtual TriggerActionType get_ActionType();
    [CompilerGeneratedAttribute]
public string get_Variables();
    [CompilerGeneratedAttribute]
public void set_Variables(string value);
    [CompilerGeneratedAttribute]
public string get_EnvironmentId();
    [CompilerGeneratedAttribute]
public void set_EnvironmentId(string value);
    [CompilerGeneratedAttribute]
public GitReferenceResource get_VersionControlReference();
    [CompilerGeneratedAttribute]
public void set_VersionControlReference(GitReferenceResource value);
}
public enum Octopus.Client.Model.Triggers.ScheduledTriggers.MonthlyScheduleType : Enum {
    public int value__;
    public static MonthlyScheduleType DateOfMonth;
    public static MonthlyScheduleType DayOfMonth;
}
public class Octopus.Client.Model.Triggers.ScheduledTriggers.OnceDailyScheduledTriggerFilterResource : ScheduledTriggerFilterResource {
    [CompilerGeneratedAttribute]
private DateTime <StartTime>k__BackingField;
    [CompilerGeneratedAttribute]
private DaysOfWeek <DaysOfWeek>k__BackingField;
    public TriggerFilterType FilterType { get; }
    [WriteableAttribute]
public DateTime StartTime { get; public set; }
    [WriteableAttribute]
public DaysOfWeek DaysOfWeek { get; public set; }
    public virtual TriggerFilterType get_FilterType();
    [CompilerGeneratedAttribute]
public DateTime get_StartTime();
    [CompilerGeneratedAttribute]
public void set_StartTime(DateTime value);
    [CompilerGeneratedAttribute]
public DaysOfWeek get_DaysOfWeek();
    [CompilerGeneratedAttribute]
public void set_DaysOfWeek(DaysOfWeek value);
}
public abstract class Octopus.Client.Model.Triggers.ScheduledTriggers.ScheduledTriggerFilterResource : TriggerFilterResource {
    [CompilerGeneratedAttribute]
private string <Timezone>k__BackingField;
    [WriteableAttribute]
public string Timezone { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Timezone();
    [CompilerGeneratedAttribute]
public void set_Timezone(string value);
}
public enum Octopus.Client.Model.Triggers.ScheduledTriggers.ScheduledTriggerFilterRunType : Enum {
    public int value__;
    public static ScheduledTriggerFilterRunType ScheduledTime;
    public static ScheduledTriggerFilterRunType Continuously;
}
public abstract class Octopus.Client.Model.Triggers.ScopedDeploymentActionResource : TriggerActionResource {
    [CompilerGeneratedAttribute]
private string <ChannelId>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <TenantIds>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <TenantTags>k__BackingField;
    [WriteableAttribute]
public string ChannelId { get; public set; }
    [WriteableAttribute]
public ReferenceCollection TenantIds { get; public set; }
    [WriteableAttribute]
public ReferenceCollection TenantTags { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ChannelId();
    [CompilerGeneratedAttribute]
public void set_ChannelId(string value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_TenantIds();
    [CompilerGeneratedAttribute]
public void set_TenantIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_TenantTags();
    [CompilerGeneratedAttribute]
public void set_TenantTags(ReferenceCollection value);
}
public abstract class Octopus.Client.Model.Triggers.TriggerActionResource : Resource {
    public TriggerActionType ActionType { get; }
    public abstract virtual TriggerActionType get_ActionType();
}
public enum Octopus.Client.Model.Triggers.TriggerActionType : Enum {
    public int value__;
    public static TriggerActionType AutoDeploy;
    public static TriggerActionType DeployLatestRelease;
    public static TriggerActionType DeployNewRelease;
    public static TriggerActionType RunRunbook;
    public static TriggerActionType CreateRelease;
}
public abstract class Octopus.Client.Model.Triggers.TriggerFilterResource : Resource {
    public TriggerFilterType FilterType { get; }
    public abstract virtual TriggerFilterType get_FilterType();
}
public enum Octopus.Client.Model.Triggers.TriggerFilterType : Enum {
    public int value__;
    public static TriggerFilterType MachineFilter;
    public static TriggerFilterType OnceDailySchedule;
    public static TriggerFilterType ContinuousDailySchedule;
    public static TriggerFilterType DaysPerMonthSchedule;
    public static TriggerFilterType CronExpressionSchedule;
    public static TriggerFilterType DailySchedule;
    public static TriggerFilterType DaysPerWeekSchedule;
    public static TriggerFilterType FeedFilter;
    public static TriggerFilterType ArcFeedFilter;
}
[AttributeUsageAttribute("128")]
public class Octopus.Client.Model.TrimAttribute : Attribute {
}
public class Octopus.Client.Model.UpgradeConfigurationResource : Resource {
    [CompilerGeneratedAttribute]
private UpgradeNotificationMode <NotificationMode>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowChecking>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IncludeStatistics>k__BackingField;
    [WriteableAttribute]
public UpgradeNotificationMode NotificationMode { get; public set; }
    [WriteableAttribute]
public bool AllowChecking { get; public set; }
    [ObsoleteAttribute("Replaced by TelemetryConfigurationResource.Enabled")]
[WriteableAttribute]
public bool IncludeStatistics { get; public set; }
    [CompilerGeneratedAttribute]
public UpgradeNotificationMode get_NotificationMode();
    [CompilerGeneratedAttribute]
public void set_NotificationMode(UpgradeNotificationMode value);
    [CompilerGeneratedAttribute]
public bool get_AllowChecking();
    [CompilerGeneratedAttribute]
public void set_AllowChecking(bool value);
    [CompilerGeneratedAttribute]
public bool get_IncludeStatistics();
    [CompilerGeneratedAttribute]
public void set_IncludeStatistics(bool value);
}
public enum Octopus.Client.Model.UpgradeNotificationMode : Enum {
    public int value__;
    public static UpgradeNotificationMode AlwaysShow;
    public static UpgradeNotificationMode ShowOnlyMajorMinor;
    public static UpgradeNotificationMode NeverShow;
}
public class Octopus.Client.Model.UsernamePasswordProjectGitCredentialResource : ProjectGitCredentialResource {
    [CompilerGeneratedAttribute]
private ProjectGitCredentialType <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Username>k__BackingField;
    [CompilerGeneratedAttribute]
private SensitiveValue <Password>k__BackingField;
    public ProjectGitCredentialType Type { get; }
    [WriteableAttribute]
public string Username { get; public set; }
    [WriteableAttribute]
public SensitiveValue Password { get; public set; }
    [CompilerGeneratedAttribute]
public virtual ProjectGitCredentialType get_Type();
    [CompilerGeneratedAttribute]
public string get_Username();
    [CompilerGeneratedAttribute]
public void set_Username(string value);
    [CompilerGeneratedAttribute]
public SensitiveValue get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(SensitiveValue value);
}
public class Octopus.Client.Model.UserPermissionRestriction : object {
    [CompilerGeneratedAttribute]
private ReferenceCollection <RestrictedToProjectIds>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <RestrictedToEnvironmentIds>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <RestrictedToTenantIds>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferenceCollection <RestrictedToProjectGroupIds>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [CompilerGeneratedAttribute]
private static IEqualityComparer`1<UserPermissionRestriction> <UserPermissionRestrictionComparer>k__BackingField;
    public ReferenceCollection RestrictedToProjectIds { get; public set; }
    public ReferenceCollection RestrictedToEnvironmentIds { get; public set; }
    public ReferenceCollection RestrictedToTenantIds { get; public set; }
    public ReferenceCollection RestrictedToProjectGroupIds { get; public set; }
    public string SpaceId { get; public set; }
    public static IEqualityComparer`1<UserPermissionRestriction> UserPermissionRestrictionComparer { get; }
    private static UserPermissionRestriction();
    [CompilerGeneratedAttribute]
public ReferenceCollection get_RestrictedToProjectIds();
    [CompilerGeneratedAttribute]
public void set_RestrictedToProjectIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_RestrictedToEnvironmentIds();
    [CompilerGeneratedAttribute]
public void set_RestrictedToEnvironmentIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_RestrictedToTenantIds();
    [CompilerGeneratedAttribute]
public void set_RestrictedToTenantIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public ReferenceCollection get_RestrictedToProjectGroupIds();
    [CompilerGeneratedAttribute]
public void set_RestrictedToProjectGroupIds(ReferenceCollection value);
    [CompilerGeneratedAttribute]
public string get_SpaceId();
    [CompilerGeneratedAttribute]
public void set_SpaceId(string value);
    [CompilerGeneratedAttribute]
public static IEqualityComparer`1<UserPermissionRestriction> get_UserPermissionRestrictionComparer();
    public virtual string ToString();
}
public class Octopus.Client.Model.UserPermissionSetResource : Resource {
    [CompilerGeneratedAttribute]
private Dictionary`2<Permission, List`1<UserPermissionRestriction>> <SpacePermissions>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Permission> <SystemPermissions>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ProjectedTeamReferenceDataItem> <Teams>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsTeamsComplete>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsPermissionsComplete>k__BackingField;
    public Dictionary`2<Permission, List`1<UserPermissionRestriction>> SpacePermissions { get; public set; }
    public List`1<Permission> SystemPermissions { get; public set; }
    public List`1<ProjectedTeamReferenceDataItem> Teams { get; public set; }
    public bool IsTeamsComplete { get; public set; }
    public bool IsPermissionsComplete { get; public set; }
    [CompilerGeneratedAttribute]
public Dictionary`2<Permission, List`1<UserPermissionRestriction>> get_SpacePermissions();
    [CompilerGeneratedAttribute]
public void set_SpacePermissions(Dictionary`2<Permission, List`1<UserPermissionRestriction>> value);
    [CompilerGeneratedAttribute]
public List`1<Permission> get_SystemPermissions();
    [CompilerGeneratedAttribute]
public void set_SystemPermissions(List`1<Permission> value);
    [CompilerGeneratedAttribute]
public List`1<ProjectedTeamReferenceDataItem> get_Teams();
    [CompilerGeneratedAttribute]
public void set_Teams(List`1<ProjectedTeamReferenceDataItem> value);
    [CompilerGeneratedAttribute]
public bool get_IsTeamsComplete();
    [CompilerGeneratedAttribute]
public void set_IsTeamsComplete(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsPermissionsComplete();
    [CompilerGeneratedAttribute]
public void set_IsPermissionsComplete(bool value);
}
public class Octopus.Client.Model.UserResource : Resource {
    [CompilerGeneratedAttribute]
private string <Username>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsActive>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsService>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EmailAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CanPasswordBeEdited>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsRequestor>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Password>k__BackingField;
    [CompilerGeneratedAttribute]
private IdentityResource[] <Identities>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <Created>k__BackingField;
    [TrimAttribute]
[WriteableAttribute]
[StringLengthAttribute("64")]
public string Username { get; public set; }
    [TrimAttribute]
[WriteableAttribute]
[StringLengthAttribute("64")]
[RequiredAttribute]
public string DisplayName { get; public set; }
    [WriteableAttribute]
public bool IsActive { get; public set; }
    [WriteableOnCreateAttribute]
public bool IsService { get; public set; }
    [WriteableAttribute]
[StringLengthAttribute("256")]
[DataTypeAttribute("10")]
[TrimAttribute]
public string EmailAddress { get; public set; }
    public bool CanPasswordBeEdited { get; public set; }
    public bool IsRequestor { get; public set; }
    [WriteableAttribute]
[PasswordComplexityAttribute]
[JsonPropertyAttribute]
[NotReadableAttribute]
public string Password { get; public set; }
    [WriteableAttribute]
public IdentityResource[] Identities { get; public set; }
    [WriteableOnCreateAttribute]
public DateTimeOffset Created { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Username();
    [CompilerGeneratedAttribute]
public void set_Username(string value);
    [CompilerGeneratedAttribute]
public string get_DisplayName();
    [CompilerGeneratedAttribute]
public void set_DisplayName(string value);
    [CompilerGeneratedAttribute]
public bool get_IsActive();
    [CompilerGeneratedAttribute]
public void set_IsActive(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsService();
    [CompilerGeneratedAttribute]
public void set_IsService(bool value);
    [CompilerGeneratedAttribute]
public string get_EmailAddress();
    [CompilerGeneratedAttribute]
public void set_EmailAddress(string value);
    [CompilerGeneratedAttribute]
public bool get_CanPasswordBeEdited();
    [CompilerGeneratedAttribute]
public void set_CanPasswordBeEdited(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsRequestor();
    [CompilerGeneratedAttribute]
public void set_IsRequestor(bool value);
    [CompilerGeneratedAttribute]
public string get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(string value);
    [CompilerGeneratedAttribute]
public IdentityResource[] get_Identities();
    [CompilerGeneratedAttribute]
public void set_Identities(IdentityResource[] value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_Created();
    [CompilerGeneratedAttribute]
public void set_Created(DateTimeOffset value);
}
public class Octopus.Client.Model.UserRoleResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <SupportedRestrictions>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <SpacePermissionDescriptions>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <SystemPermissionDescriptions>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Permission> <GrantedSpacePermissions>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Permission> <GrantedSystemPermissions>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CanBeDeleted>k__BackingField;
    [WriteableAttribute]
public string Name { get; public set; }
    [WriteableAttribute]
public string Description { get; public set; }
    public List`1<string> SupportedRestrictions { get; public set; }
    public List`1<string> SpacePermissionDescriptions { get; public set; }
    public List`1<string> SystemPermissionDescriptions { get; public set; }
    [WriteableAttribute]
public List`1<Permission> GrantedSpacePermissions { get; public set; }
    [WriteableAttribute]
public List`1<Permission> GrantedSystemPermissions { get; public set; }
    public bool CanBeDeleted { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public List`1<string> get_SupportedRestrictions();
    [CompilerGeneratedAttribute]
public void set_SupportedRestrictions(List`1<string> value);
    [CompilerGeneratedAttribute]
public List`1<string> get_SpacePermissionDescriptions();
    [CompilerGeneratedAttribute]
public void set_SpacePermissionDescriptions(List`1<string> value);
    [CompilerGeneratedAttribute]
public List`1<string> get_SystemPermissionDescriptions();
    [CompilerGeneratedAttribute]
public void set_SystemPermissionDescriptions(List`1<string> value);
    [CompilerGeneratedAttribute]
public List`1<Permission> get_GrantedSpacePermissions();
    [CompilerGeneratedAttribute]
public void set_GrantedSpacePermissions(List`1<Permission> value);
    [CompilerGeneratedAttribute]
public List`1<Permission> get_GrantedSystemPermissions();
    [CompilerGeneratedAttribute]
public void set_GrantedSystemPermissions(List`1<Permission> value);
    [CompilerGeneratedAttribute]
public bool get_CanBeDeleted();
    [CompilerGeneratedAttribute]
public void set_CanBeDeleted(bool value);
}
public abstract class Octopus.Client.Model.ValidatedGitReferenceResource : Resource {
    [CompilerGeneratedAttribute]
private string <CanonicalName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public string CanonicalName { get; }
    public string Name { get; public set; }
    public ValidatedGitReferenceResource(string canonicalName);
    [CompilerGeneratedAttribute]
public string get_CanonicalName();
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
}
public class Octopus.Client.Model.VariablePromptOptions : object {
    [CompilerGeneratedAttribute]
private string <Label>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Required>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <DisplaySettings>k__BackingField;
    public string Label { get; public set; }
    public string Description { get; public set; }
    public bool Required { get; public set; }
    public IDictionary`2<string, string> DisplaySettings { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Label();
    [CompilerGeneratedAttribute]
public void set_Label(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public bool get_Required();
    [CompilerGeneratedAttribute]
public void set_Required(bool value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_DisplaySettings();
    [CompilerGeneratedAttribute]
public void set_DisplaySettings(IDictionary`2<string, string> value);
    public VariablePromptOptions Clone();
}
public class Octopus.Client.Model.VariableResource : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private VariableType <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private ScopeSpecification <Scope>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsEditable>k__BackingField;
    [CompilerGeneratedAttribute]
private VariablePromptOptions <Prompt>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsSensitive>k__BackingField;
    public string Id { get; public set; }
    public string Name { get; public set; }
    public string Value { get; public set; }
    public string Description { get; public set; }
    public VariableType Type { get; public set; }
    public ScopeSpecification Scope { get; public set; }
    public bool IsEditable { get; public set; }
    public VariablePromptOptions Prompt { get; public set; }
    public bool IsSensitive { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public VariableType get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(VariableType value);
    [CompilerGeneratedAttribute]
public ScopeSpecification get_Scope();
    [CompilerGeneratedAttribute]
public void set_Scope(ScopeSpecification value);
    [CompilerGeneratedAttribute]
public bool get_IsEditable();
    [CompilerGeneratedAttribute]
public void set_IsEditable(bool value);
    [CompilerGeneratedAttribute]
public VariablePromptOptions get_Prompt();
    [CompilerGeneratedAttribute]
public void set_Prompt(VariablePromptOptions value);
    [CompilerGeneratedAttribute]
public bool get_IsSensitive();
    [CompilerGeneratedAttribute]
public void set_IsSensitive(bool value);
}
public class Octopus.Client.Model.VariableScopeValues : object {
    [CompilerGeneratedAttribute]
private List`1<ReferenceDataItem> <Environments>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ReferenceDataItem> <Machines>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ReferenceDataItem> <Actions>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ReferenceDataItem> <Roles>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ReferenceDataItem> <Channels>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ReferenceDataItem> <TenantTags>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ProcessReferenceDataItem> <Processes>k__BackingField;
    public List`1<ReferenceDataItem> Environments { get; public set; }
    public List`1<ReferenceDataItem> Machines { get; public set; }
    public List`1<ReferenceDataItem> Actions { get; public set; }
    public List`1<ReferenceDataItem> Roles { get; public set; }
    public List`1<ReferenceDataItem> Channels { get; public set; }
    public List`1<ReferenceDataItem> TenantTags { get; public set; }
    public List`1<ProcessReferenceDataItem> Processes { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual List`1<ReferenceDataItem> get_Environments();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Environments(List`1<ReferenceDataItem> value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<ReferenceDataItem> get_Machines();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Machines(List`1<ReferenceDataItem> value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<ReferenceDataItem> get_Actions();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Actions(List`1<ReferenceDataItem> value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<ReferenceDataItem> get_Roles();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Roles(List`1<ReferenceDataItem> value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<ReferenceDataItem> get_Channels();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Channels(List`1<ReferenceDataItem> value);
    [CompilerGeneratedAttribute]
public List`1<ReferenceDataItem> get_TenantTags();
    [CompilerGeneratedAttribute]
public void set_TenantTags(List`1<ReferenceDataItem> value);
    [CompilerGeneratedAttribute]
public List`1<ProcessReferenceDataItem> get_Processes();
    [CompilerGeneratedAttribute]
public void set_Processes(List`1<ProcessReferenceDataItem> value);
}
public enum Octopus.Client.Model.VariableSetContentType : Enum {
    public int value__;
    public static VariableSetContentType Variables;
    public static VariableSetContentType ScriptModule;
}
public class Octopus.Client.Model.VariableSetResource : Resource {
    [CompilerGeneratedAttribute]
private string <OwnerId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<VariableResource> <Variables>k__BackingField;
    [CompilerGeneratedAttribute]
private VariableScopeValues <ScopeValues>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    public string OwnerId { get; public set; }
    public int Version { get; public set; }
    public IList`1<VariableResource> Variables { get; public set; }
    public VariableScopeValues ScopeValues { get; public set; }
    public string SpaceId { get; public set; }
    [CompilerGeneratedAttribute]
public string get_OwnerId();
    [CompilerGeneratedAttribute]
public void set_OwnerId(string value);
    [CompilerGeneratedAttribute]
public int get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(int value);
    [CompilerGeneratedAttribute]
public IList`1<VariableResource> get_Variables();
    [CompilerGeneratedAttribute]
public void set_Variables(IList`1<VariableResource> value);
    [CompilerGeneratedAttribute]
public VariableScopeValues get_ScopeValues();
    [CompilerGeneratedAttribute]
public void set_ScopeValues(VariableScopeValues value);
    public VariableSetResource AddOrUpdateVariableValue(string name, string value);
    public VariableSetResource AddOrUpdateVariableValue(string name, string value, string description);
    public VariableSetResource AddOrUpdateVariableValue(string name, string value, ScopeSpecification scope);
    public VariableSetResource AddOrUpdateVariableValue(string name, string value, ScopeSpecification scope, bool isSensitive);
    public VariableSetResource AddOrUpdateVariableValue(string name, string value, ScopeSpecification scope, bool isSensitive, string description);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
}
public class Octopus.Client.Model.VariableTemplateContainerEditor`1 : object {
    private TContainer container;
    private static Dictionary`2<string, string> SingleLineTextTemplateDisplaySettings;
    private static Dictionary`2<string, string> MultiLineTextTemplateDisplaySettings;
    private static Dictionary`2<string, string> SensitiveTemplateDisplaySettings;
    public VariableTemplateContainerEditor`1(TContainer container);
    private static VariableTemplateContainerEditor`1();
    public sealed virtual TContainer AddOrUpdateVariableTemplate(string name, string label, IDictionary`2<string, string> displaySettings);
    public sealed virtual TContainer AddOrUpdateVariableTemplate(string name, string label, IDictionary`2<string, string> displaySettings, string defaultValue, string helpText);
    private bool IsSensitive(IDictionary`2<string, string> displaySettings);
    private static Dictionary`2<string, string> BuildSelectTemplateDisplaySettings(IDictionary`2<string, string> options);
    public sealed virtual TContainer AddOrUpdateSingleLineTextTemplate(string name, string label);
    public sealed virtual TContainer AddOrUpdateSingleLineTextTemplate(string name, string label, string defaultValue, string helpText);
    public sealed virtual TContainer AddOrUpdateMultiLineTextTemplate(string name, string label);
    public sealed virtual TContainer AddOrUpdateMultiLineTextTemplate(string name, string label, string defaultValue, string helpText);
    public sealed virtual TContainer AddOrUpdateSensitiveTemplate(string name, string label);
    public sealed virtual TContainer AddOrUpdateSensitiveTemplate(string name, string label, string defaultValue, string helpText);
    public sealed virtual TContainer AddOrUpdateSelectTemplate(string name, string label, IDictionary`2<string, string> options);
    public sealed virtual TContainer AddOrUpdateSelectTemplate(string name, string label, IDictionary`2<string, string> options, string defaultValue, string helpText);
    public sealed virtual TContainer Clear();
}
public enum Octopus.Client.Model.VariableType : Enum {
    public int value__;
    public static VariableType String;
    public static VariableType Sensitive;
    public static VariableType Certificate;
    public static VariableType AmazonWebServicesAccount;
    public static VariableType AzureAccount;
    public static VariableType WorkerPool;
    public static VariableType UsernamePasswordAccount;
}
public interface Octopus.Client.Model.Versioning.IVersionComparer {
}
public class Octopus.Client.Model.Versioning.StrictSemanticVersion : object {
    internal IEnumerable`1<string> _releaseLabels;
    internal string _metadata;
    internal Version _version;
    public int Major { get; }
    public int Minor { get; }
    public int Patch { get; }
    public IEnumerable`1<string> ReleaseLabels { get; }
    public string Release { get; }
    public bool IsPrerelease { get; }
    public bool HasMetadata { get; }
    public string Metadata { get; }
    public StrictSemanticVersion(StrictSemanticVersion version);
    public StrictSemanticVersion(int major, int minor, int patch);
    public StrictSemanticVersion(int major, int minor, int patch, string releaseLabel);
    public StrictSemanticVersion(int major, int minor, int patch, string releaseLabel, string metadata);
    public StrictSemanticVersion(int major, int minor, int patch, IEnumerable`1<string> releaseLabels, string metadata);
    protected StrictSemanticVersion(Version version, string releaseLabel, string metadata);
    protected StrictSemanticVersion(int major, int minor, int patch, int revision, string releaseLabel, string metadata);
    protected StrictSemanticVersion(int major, int minor, int patch, int revision, IEnumerable`1<string> releaseLabels, string metadata);
    protected StrictSemanticVersion(Version version, IEnumerable`1<string> releaseLabels, string metadata, bool preserveMissingComponents);
    public int get_Major();
    public int get_Minor();
    public int get_Patch();
    public IEnumerable`1<string> get_ReleaseLabels();
    public string get_Release();
    public virtual bool get_IsPrerelease();
    public virtual bool get_HasMetadata();
    public virtual string get_Metadata();
    public virtual string ToNormalizedString();
    public virtual string ToString();
    public virtual string ToString(string format, IFormatProvider formatProvider);
    protected bool TryFormatter(string format, IFormatProvider formatProvider, String& formattedString);
    public virtual int GetHashCode();
    public virtual int CompareTo(object obj);
    public virtual int CompareTo(StrictSemanticVersion other);
    public virtual bool Equals(object obj);
    public virtual bool Equals(StrictSemanticVersion other);
    public virtual bool Equals(StrictSemanticVersion other, VersionComparison versionComparison);
    public virtual int CompareTo(StrictSemanticVersion other, VersionComparison versionComparison);
    public static bool op_Equality(StrictSemanticVersion version1, StrictSemanticVersion version2);
    public static bool op_Inequality(StrictSemanticVersion version1, StrictSemanticVersion version2);
    public static bool op_LessThan(StrictSemanticVersion version1, StrictSemanticVersion version2);
    public static bool op_LessThanOrEqual(StrictSemanticVersion version1, StrictSemanticVersion version2);
    public static bool op_GreaterThan(StrictSemanticVersion version1, StrictSemanticVersion version2);
    public static bool op_GreaterThanOrEqual(StrictSemanticVersion version1, StrictSemanticVersion version2);
    private static int Compare(StrictSemanticVersion version1, StrictSemanticVersion version2);
    public static StrictSemanticVersion Parse(string value);
    public static bool TryParse(string value, StrictSemanticVersion& version);
    internal static bool IsLetterOrDigitOrDash(char c);
    internal static bool IsValid(string s, bool allowLeadingZeros);
    internal static bool IsValidPart(string s, bool allowLeadingZeros);
    internal static bool IsValidPart(Char[] chars, bool allowLeadingZeros);
    internal static Tuple`3<string, String[], string> ParseSections(string value);
    internal static Version NormalizeVersionValue(Version version);
    private static IEnumerable`1<string> ParseReleaseLabels(string releaseLabels);
}
public class Octopus.Client.Model.Versioning.VersionComparer : object {
    private VersionComparison _mode;
    public static IVersionComparer Default;
    public static IVersionComparer Version;
    public static IVersionComparer VersionRelease;
    public static IVersionComparer VersionReleaseMetadata;
    public VersionComparer(VersionComparison versionComparison);
    private static VersionComparer();
    public sealed virtual bool Equals(StrictSemanticVersion x, StrictSemanticVersion y);
    public static int Compare(StrictSemanticVersion version1, StrictSemanticVersion version2, VersionComparison versionComparison);
    public sealed virtual int GetHashCode(StrictSemanticVersion version);
    public sealed virtual int Compare(StrictSemanticVersion x, StrictSemanticVersion y);
    private static int CompareLegacyVersion(SemanticVersion legacyX, SemanticVersion legacyY);
    private static int CompareReleaseLabels(IEnumerable`1<string> version1, IEnumerable`1<string> version2);
    private static int CompareRelease(string version1, string version2);
}
public enum Octopus.Client.Model.Versioning.VersionComparison : Enum {
    public int value__;
    public static VersionComparison Default;
    public static VersionComparison Version;
    public static VersionComparison VersionRelease;
    public static VersionComparison VersionReleaseMetadata;
}
public class Octopus.Client.Model.Versioning.VersionFormatter : object {
    public sealed virtual string Format(string format, object arg, IFormatProvider formatProvider);
    public sealed virtual object GetFormat(Type formatType);
    private static string GetNormalizedString(StrictSemanticVersion version);
    private static string Format(char c, StrictSemanticVersion version);
    private static string FormatVersion(StrictSemanticVersion version);
}
public class Octopus.Client.Model.VersioningStrategyResource : object {
    [CompilerGeneratedAttribute]
private string <Template>k__BackingField;
    [CompilerGeneratedAttribute]
private DeploymentActionPackageResource <DonorPackage>k__BackingField;
    [JsonExtensionDataAttribute]
private IDictionary`2<string, JToken> additionalData;
    public string Template { get; public set; }
    public DeploymentActionPackageResource DonorPackage { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Template();
    [CompilerGeneratedAttribute]
public void set_Template(string value);
    [CompilerGeneratedAttribute]
public DeploymentActionPackageResource get_DonorPackage();
    [CompilerGeneratedAttribute]
public void set_DonorPackage(DeploymentActionPackageResource value);
    [OnDeserializedAttribute]
private void OnDeserialized(StreamingContext context);
    [OnSerializingAttribute]
private void OnSerializing(StreamingContext context);
}
public class Octopus.Client.Model.WebPortalConfiguration.WebPortalConfigResource : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private LinkCollection <Links>k__BackingField;
    [CompilerGeneratedAttribute]
private WebPortalSecurityResource <Security>k__BackingField;
    [CompilerGeneratedAttribute]
private WebPortalLoggingResource <Logging>k__BackingField;
    public string Id { get; public set; }
    public LinkCollection Links { get; public set; }
    public WebPortalSecurityResource Security { get; public set; }
    public WebPortalLoggingResource Logging { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public sealed virtual LinkCollection get_Links();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Links(LinkCollection value);
    [CompilerGeneratedAttribute]
public WebPortalSecurityResource get_Security();
    [CompilerGeneratedAttribute]
public void set_Security(WebPortalSecurityResource value);
    [CompilerGeneratedAttribute]
public WebPortalLoggingResource get_Logging();
    [CompilerGeneratedAttribute]
public void set_Logging(WebPortalLoggingResource value);
}
public class Octopus.Client.Model.WebPortalConfiguration.WebPortalLoggingResource : object {
    [CompilerGeneratedAttribute]
private String[] <TrustedProxies>k__BackingField;
    [WriteableAttribute]
public String[] TrustedProxies { get; public set; }
    [CompilerGeneratedAttribute]
public String[] get_TrustedProxies();
    [CompilerGeneratedAttribute]
public void set_TrustedProxies(String[] value);
}
public class Octopus.Client.Model.WebPortalConfiguration.WebPortalSecurityResource : object {
    [CompilerGeneratedAttribute]
private string <CorsWhitelist>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ReferrerPolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ContentSecurityPolicyEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HttpStrictTransportSecurityEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private long <HttpStrictTransportSecurityMaxAge>k__BackingField;
    [CompilerGeneratedAttribute]
private XOptionsResource <XOptions>k__BackingField;
    [WriteableAttribute]
public string CorsWhitelist { get; public set; }
    [WriteableAttribute]
public string ReferrerPolicy { get; public set; }
    [WriteableAttribute]
public bool ContentSecurityPolicyEnabled { get; public set; }
    [WriteableAttribute]
public bool HttpStrictTransportSecurityEnabled { get; public set; }
    [RequiredAttribute]
[WriteableAttribute]
public long HttpStrictTransportSecurityMaxAge { get; public set; }
    public XOptionsResource XOptions { get; public set; }
    [CompilerGeneratedAttribute]
public string get_CorsWhitelist();
    [CompilerGeneratedAttribute]
public void set_CorsWhitelist(string value);
    [CompilerGeneratedAttribute]
public string get_ReferrerPolicy();
    [CompilerGeneratedAttribute]
public void set_ReferrerPolicy(string value);
    [CompilerGeneratedAttribute]
public bool get_ContentSecurityPolicyEnabled();
    [CompilerGeneratedAttribute]
public void set_ContentSecurityPolicyEnabled(bool value);
    [CompilerGeneratedAttribute]
public bool get_HttpStrictTransportSecurityEnabled();
    [CompilerGeneratedAttribute]
public void set_HttpStrictTransportSecurityEnabled(bool value);
    [CompilerGeneratedAttribute]
public long get_HttpStrictTransportSecurityMaxAge();
    [CompilerGeneratedAttribute]
public void set_HttpStrictTransportSecurityMaxAge(long value);
    [CompilerGeneratedAttribute]
public XOptionsResource get_XOptions();
    [CompilerGeneratedAttribute]
public void set_XOptions(XOptionsResource value);
}
public class Octopus.Client.Model.WebPortalConfiguration.XOptionsResource : object {
    public static string XFrameAllowFromDescription;
    public static string XFrameOptionsDescription;
    [CompilerGeneratedAttribute]
private string <XFrameOptionAllowFrom>k__BackingField;
    [CompilerGeneratedAttribute]
private string <XFrameOptions>k__BackingField;
    [WriteableAttribute]
public string XFrameOptionAllowFrom { get; public set; }
    [WriteableAttribute]
public string XFrameOptions { get; public set; }
    [CompilerGeneratedAttribute]
public string get_XFrameOptionAllowFrom();
    [CompilerGeneratedAttribute]
public void set_XFrameOptionAllowFrom(string value);
    [CompilerGeneratedAttribute]
public string get_XFrameOptions();
    [CompilerGeneratedAttribute]
public void set_XFrameOptions(string value);
}
public class Octopus.Client.Model.WorkerPoolResource : Resource {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDefault>k__BackingField;
    [CompilerGeneratedAttribute]
private int <SortOrder>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SpaceId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Slug>k__BackingField;
    [CompilerGeneratedAttribute]
private WorkerPoolType <WorkerPoolType>k__BackingField;
    [TrimAttribute]
[WriteableAttribute]
public string Name { get; public set; }
    [WriteableAttribute]
[TrimAttribute]
public string Description { get; public set; }
    [WriteableAttribute]
public bool IsDefault { get; public set; }
    [WriteableAttribute]
public int SortOrder { get; public set; }
    public string SpaceId { get; public set; }
    public string Slug { get; public set; }
    public WorkerPoolType WorkerPoolType { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public bool get_IsDefault();
    [CompilerGeneratedAttribute]
public void set_IsDefault(bool value);
    [CompilerGeneratedAttribute]
public int get_SortOrder();
    [CompilerGeneratedAttribute]
public void set_SortOrder(int value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SpaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SpaceId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Slug();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Slug(string value);
    [CompilerGeneratedAttribute]
public WorkerPoolType get_WorkerPoolType();
    [CompilerGeneratedAttribute]
public void set_WorkerPoolType(WorkerPoolType value);
}
public class Octopus.Client.Model.WorkerPoolsSummaryResource : SummaryResourcesCombined {
    [CompilerGeneratedAttribute]
private List`1<WorkerPoolSummaryResource> <WorkerPoolSummaries>k__BackingField;
    public List`1<WorkerPoolSummaryResource> WorkerPoolSummaries { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<WorkerPoolSummaryResource> get_WorkerPoolSummaries();
    [CompilerGeneratedAttribute]
public void set_WorkerPoolSummaries(List`1<WorkerPoolSummaryResource> value);
}
public class Octopus.Client.Model.WorkerPoolSummaryResource : SummaryResource {
    [CompilerGeneratedAttribute]
private WorkerPoolResource <WorkerPool>k__BackingField;
    public WorkerPoolResource WorkerPool { get; public set; }
    [CompilerGeneratedAttribute]
public WorkerPoolResource get_WorkerPool();
    [CompilerGeneratedAttribute]
public void set_WorkerPool(WorkerPoolResource value);
}
public enum Octopus.Client.Model.WorkerPoolType : Enum {
    public int value__;
    public static WorkerPoolType StaticWorkerPool;
    public static WorkerPoolType DynamicWorkerPool;
}
public class Octopus.Client.Model.WorkerResource : MachineBasedResource {
    [CompilerGeneratedAttribute]
private ReferenceCollection <WorkerPoolIds>k__BackingField;
    [WriteableAttribute]
public ReferenceCollection WorkerPoolIds { get; public set; }
    [CompilerGeneratedAttribute]
public ReferenceCollection get_WorkerPoolIds();
    [CompilerGeneratedAttribute]
public void set_WorkerPoolIds(ReferenceCollection value);
    public WorkerResource AddOrUpdateWorkerPools(WorkerPoolResource[] pools);
    public WorkerResource RemoveWorkerPool(WorkerPoolResource pool);
    public WorkerResource ClearWorkerPools();
}
public class Octopus.Client.OctopusAsyncClient : object {
    private static ILog Logger;
    private OctopusServerEndpoint serverEndpoint;
    private JsonSerializerSettings defaultJsonSerializerSettings;
    private ResourceSelfLinkExtractor resourceSelfLinkExtractor;
    private HttpClient client;
    private CookieContainer cookieContainer;
    private Uri cookieOriginUri;
    private bool ignoreSslErrors;
    private bool ignoreSslErrorMessageLogged;
    private string antiforgeryCookieName;
    private IHttpRouteExtractor httpRouteExtractor;
    [CompilerGeneratedAttribute]
private Action`1<HttpRequestMessage> BeforeSendingHttpRequest;
    [CompilerGeneratedAttribute]
private Action`1<HttpResponseMessage> AfterReceivedHttpResponse;
    [CompilerGeneratedAttribute]
private Action`1<OctopusRequest> SendingOctopusRequest;
    [CompilerGeneratedAttribute]
private Action`1<OctopusResponse> ReceivedOctopusResponse;
    [CompilerGeneratedAttribute]
private IOctopusAsyncRepository <Repository>k__BackingField;
    public bool IsUsingSecureConnection { get; }
    public RootResource RootDocument { get; }
    public IOctopusAsyncRepository Repository { get; protected set; }
    protected OctopusAsyncClient(OctopusServerEndpoint serverEndpoint, OctopusClientOptions options, bool addCertificateCallback, string requestingTool, IHttpRouteExtractor httpRouteExtractor);
    private static OctopusAsyncClient();
    private Uri BuildCookieUri(OctopusServerEndpoint octopusServerEndpoint);
    private bool IgnoreServerCertificateCallback(HttpRequestMessage message, X509Certificate2 certificate, X509Chain chain, SslPolicyErrors errors);
    public sealed virtual IOctopusSpaceAsyncRepository ForSpace(SpaceResource space);
    public sealed virtual IOctopusSystemAsyncRepository ForSystem();
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncClient/<Do>d__16`2")]
public sealed virtual Task`1<TResponse> Do(ICommand`2<TCommand, TResponse> command, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncClient/<Request>d__17`2")]
public sealed virtual Task`1<TResponse> Request(IRequest`2<TRequest, TResponse> request, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncClient/<Send>d__18`1")]
private Task`1<TResponse> Send(HttpMethod method, Uri relativeRoute, object payload, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncClient/<Create>d__19")]
public static Task`1<IOctopusAsyncClient> Create(OctopusServerEndpoint serverEndpoint, OctopusClientOptions options);
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncClient/<Create>d__20")]
internal static Task`1<IOctopusAsyncClient> Create(OctopusServerEndpoint serverEndpoint, OctopusClientOptions options, string requestingTool);
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncClient/<Create>d__21")]
private static Task`1<IOctopusAsyncClient> Create(OctopusServerEndpoint serverEndpoint, OctopusClientOptions options, bool addHandler, string requestingTool);
    public sealed virtual bool get_IsUsingSecureConnection();
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncClient/<SignIn>d__24")]
public sealed virtual Task SignIn(LoginCommand loginCommand);
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncClient/<SignIn>d__25")]
public sealed virtual Task SignIn(LoginCommand loginCommand, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncClient/<SignOut>d__26")]
public sealed virtual Task SignOut();
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncClient/<SignOut>d__27")]
public sealed virtual Task SignOut(CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
public sealed virtual void add_BeforeSendingHttpRequest(Action`1<HttpRequestMessage> value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_BeforeSendingHttpRequest(Action`1<HttpRequestMessage> value);
    [CompilerGeneratedAttribute]
public sealed virtual void add_AfterReceivedHttpResponse(Action`1<HttpResponseMessage> value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_AfterReceivedHttpResponse(Action`1<HttpResponseMessage> value);
    public sealed virtual RootResource get_RootDocument();
    [CompilerGeneratedAttribute]
public sealed virtual void add_SendingOctopusRequest(Action`1<OctopusRequest> value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_SendingOctopusRequest(Action`1<OctopusRequest> value);
    [CompilerGeneratedAttribute]
public sealed virtual void add_ReceivedOctopusResponse(Action`1<OctopusResponse> value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_ReceivedOctopusResponse(Action`1<OctopusResponse> value);
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncClient/<Get>d__42`1")]
public sealed virtual Task`1<TResource> Get(string path, object pathParameters);
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncClient/<Get>d__43`1")]
public sealed virtual Task`1<TResource> Get(string path, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncClient/<Get>d__44`1")]
public sealed virtual Task`1<TResource> Get(string path, object pathParameters, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
public sealed virtual IOctopusAsyncRepository get_Repository();
    [CompilerGeneratedAttribute]
protected void set_Repository(IOctopusAsyncRepository value);
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncClient/<List>d__49`1")]
public sealed virtual Task`1<ResourceCollection`1<TResource>> List(string path, object pathParameters);
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncClient/<List>d__50`1")]
public sealed virtual Task`1<ResourceCollection`1<TResource>> List(string path, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncClient/<List>d__51`1")]
public sealed virtual Task`1<ResourceCollection`1<TResource>> List(string path, object pathParameters, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncClient/<ListAll>d__52`1")]
public sealed virtual Task`1<IReadOnlyList`1<TResource>> ListAll(string path, object pathParameters);
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncClient/<ListAll>d__53`1")]
public sealed virtual Task`1<IReadOnlyList`1<TResource>> ListAll(string path, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncClient/<ListAll>d__54`1")]
public sealed virtual Task`1<IReadOnlyList`1<TResource>> ListAll(string path, object pathParameters, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncClient/<Paginate>d__55`1")]
public sealed virtual Task Paginate(string path, object pathParameters, Func`2<ResourceCollection`1<TResource>, bool> getNextPage);
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncClient/<Paginate>d__56`1")]
public sealed virtual Task Paginate(string path, object pathParameters, Func`2<ResourceCollection`1<TResource>, bool> getNextPage, CancellationToken cancellationToken);
    public sealed virtual Task Paginate(string path, Func`2<ResourceCollection`1<TResource>, bool> getNextPage);
    public sealed virtual Task Paginate(string path, Func`2<ResourceCollection`1<TResource>, bool> getNextPage, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncClient/<Create>d__59`1")]
public sealed virtual Task`1<TResource> Create(string path, TResource resource, object pathParameters);
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncClient/<Create>d__60`1")]
public sealed virtual Task`1<TResource> Create(string path, TResource resource, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncClient/<Create>d__61`1")]
public sealed virtual Task`1<TResource> Create(string path, TResource resource, object pathParameters, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncClient/<Create>d__62`2")]
public sealed virtual Task`1<TResponse> Create(string path, TCommand command, object pathParameters, CancellationToken cancellationToken);
    public sealed virtual Task Post(string path, TResource resource, object pathParameters);
    public sealed virtual Task Post(string path, TResource resource, CancellationToken cancellationToken);
    public sealed virtual Task Post(string path, TResource resource, object pathParameters, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncClient/<Post>d__66`2")]
public sealed virtual Task`1<TResponse> Post(string path, TResource resource, object pathParameters);
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncClient/<Post>d__67`2")]
public sealed virtual Task`1<TResponse> Post(string path, TResource resource, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncClient/<Post>d__68`2")]
public sealed virtual Task`1<TResponse> Post(string path, TResource resource, object pathParameters, CancellationToken cancellationToken);
    public sealed virtual Task Post(string path);
    public sealed virtual Task Post(string path, CancellationToken cancellationToken);
    public sealed virtual Task Put(string path, TResource resource);
    public sealed virtual Task Put(string path, TResource resource, CancellationToken cancellationToken);
    public sealed virtual Task Put(string path, TResource resource, object pathParameters);
    public sealed virtual Task Put(string path, TResource resource, object pathParameters, CancellationToken cancellationToken);
    public sealed virtual Task Put(string path);
    public sealed virtual Task Put(string path, CancellationToken cancellationToken);
    public sealed virtual Task Delete(string path, object pathParameters, object resource);
    public sealed virtual Task Delete(string path, CancellationToken cancellationToken);
    public sealed virtual Task Delete(string path, object pathParameters, object resource, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncClient/<Delete>d__80`2")]
public sealed virtual Task`1<TResponse> Delete(string path, TCommand command, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncClient/<Update>d__81`1")]
public sealed virtual Task`1<TResource> Update(string path, TResource resource, object pathParameters);
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncClient/<Update>d__82`1")]
public sealed virtual Task`1<TResource> Update(string path, TResource resource, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncClient/<Update>d__83`1")]
public sealed virtual Task`1<TResource> Update(string path, TResource resource, object pathParameters, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncClient/<Update>d__84`2")]
public sealed virtual Task`1<TResponse> Update(string path, TCommand resource, object pathParameters, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncClient/<GetContent>d__85")]
public sealed virtual Task`1<Stream> GetContent(string path, object pathParameters);
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncClient/<GetContent>d__86")]
public sealed virtual Task`1<Stream> GetContent(string path, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncClient/<GetContent>d__87")]
public sealed virtual Task`1<Stream> GetContent(string path, object pathParameters, CancellationToken cancellationToken);
    public sealed virtual Task PutContent(string path, Stream contentStream);
    public sealed virtual Task PutContent(string path, Stream contentStream, CancellationToken cancellationToken);
    public sealed virtual Uri QualifyUri(string path, object parameters);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
[AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncClient/<DispatchRequest>d__91`1")]
protected Task`1<OctopusResponse`1<TResponseResource>> DispatchRequest(OctopusRequest request, bool readResponse);
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncClient/<DispatchRequest>d__92`1")]
protected virtual Task`1<OctopusResponse`1<TResponseResource>> DispatchRequest(OctopusRequest request, bool readResponse, CancellationToken cancellationToken);
    private HttpContent GetContent(OctopusRequest request);
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncClient/<ReadResponse>d__94`1")]
private Task`1<T> ReadResponse(HttpResponseMessage response);
    private void ValidateSpaceId(SpaceResource space);
    public sealed virtual void Dispose();
    [CompilerGeneratedAttribute]
private bool <DispatchRequest>b__92_0(Cookie c);
}
public class Octopus.Client.OctopusAsyncRepository : object {
    internal static int SecondsToWaitForServerToStart;
    private AsyncLazy`1<RootResource> loadRootResource;
    private Lazy`1<Task`1<SpaceRootResource>> loadSpaceRootResource;
    private static string rootDocumentUri;
    [CompilerGeneratedAttribute]
private IOctopusAsyncClient <Client>k__BackingField;
    [CompilerGeneratedAttribute]
private RepositoryScope <Scope>k__BackingField;
    [CompilerGeneratedAttribute]
private IAccountRepository <Accounts>k__BackingField;
    [CompilerGeneratedAttribute]
private IActionTemplateRepository <ActionTemplates>k__BackingField;
    [CompilerGeneratedAttribute]
private IArtifactRepository <Artifacts>k__BackingField;
    [CompilerGeneratedAttribute]
private IBackupRepository <Backups>k__BackingField;
    [CompilerGeneratedAttribute]
private IBuiltInPackageRepositoryRepository <BuiltInPackageRepository>k__BackingField;
    [CompilerGeneratedAttribute]
private IBuildInformationRepository <BuildInformationRepository>k__BackingField;
    [CompilerGeneratedAttribute]
private ICertificateConfigurationRepository <CertificateConfiguration>k__BackingField;
    [CompilerGeneratedAttribute]
private ICertificateRepository <Certificates>k__BackingField;
    [CompilerGeneratedAttribute]
private IChannelRepository <Channels>k__BackingField;
    [CompilerGeneratedAttribute]
private ICommunityActionTemplateRepository <CommunityActionTemplates>k__BackingField;
    [CompilerGeneratedAttribute]
private IConfigurationRepository <Configuration>k__BackingField;
    [CompilerGeneratedAttribute]
private IDashboardConfigurationRepository <DashboardConfigurations>k__BackingField;
    [CompilerGeneratedAttribute]
private IDashboardRepository <Dashboards>k__BackingField;
    [CompilerGeneratedAttribute]
private IDefectsRepository <Defects>k__BackingField;
    [CompilerGeneratedAttribute]
private IDeploymentProcessRepository <DeploymentProcesses>k__BackingField;
    [CompilerGeneratedAttribute]
private IDeploymentSettingsRepository <DeploymentSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private IDeploymentRepository <Deployments>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnvironmentRepository <Environments>k__BackingField;
    [CompilerGeneratedAttribute]
private IEventRepository <Events>k__BackingField;
    [CompilerGeneratedAttribute]
private IArchivedEventFileRepository <ArchivedEventFiles>k__BackingField;
    [CompilerGeneratedAttribute]
private IFeaturesConfigurationRepository <FeaturesConfiguration>k__BackingField;
    [CompilerGeneratedAttribute]
private IFeedRepository <Feeds>k__BackingField;
    [CompilerGeneratedAttribute]
private IGitCredentialRepository <GitCredentials>k__BackingField;
    [CompilerGeneratedAttribute]
private IInterruptionRepository <Interruptions>k__BackingField;
    [CompilerGeneratedAttribute]
private ILibraryVariableSetRepository <LibraryVariableSets>k__BackingField;
    [CompilerGeneratedAttribute]
private ILicensesRepository <Licenses>k__BackingField;
    [CompilerGeneratedAttribute]
private ILifecyclesRepository <Lifecycles>k__BackingField;
    [CompilerGeneratedAttribute]
private IMachinePolicyRepository <MachinePolicies>k__BackingField;
    [CompilerGeneratedAttribute]
private IMachineRepository <Machines>k__BackingField;
    [CompilerGeneratedAttribute]
private IMachineRoleRepository <MachineRoles>k__BackingField;
    [CompilerGeneratedAttribute]
private IMigrationRepository <Migrations>k__BackingField;
    [CompilerGeneratedAttribute]
private IOctopusServerNodeRepository <OctopusServerNodes>k__BackingField;
    [CompilerGeneratedAttribute]
private IPerformanceConfigurationRepository <PerformanceConfiguration>k__BackingField;
    [CompilerGeneratedAttribute]
private IProjectGroupRepository <ProjectGroups>k__BackingField;
    [CompilerGeneratedAttribute]
private IProjectRepository <Projects>k__BackingField;
    [CompilerGeneratedAttribute]
private IRunbookRepository <Runbooks>k__BackingField;
    [CompilerGeneratedAttribute]
private IRunbookProcessRepository <RunbookProcesses>k__BackingField;
    [CompilerGeneratedAttribute]
private IRunbookSnapshotRepository <RunbookSnapshots>k__BackingField;
    [CompilerGeneratedAttribute]
private IRunbookRunRepository <RunbookRuns>k__BackingField;
    [CompilerGeneratedAttribute]
private IProjectTriggerRepository <ProjectTriggers>k__BackingField;
    [CompilerGeneratedAttribute]
private IProxyRepository <Proxies>k__BackingField;
    [CompilerGeneratedAttribute]
private IReleaseRepository <Releases>k__BackingField;
    [CompilerGeneratedAttribute]
private IRetentionPolicyRepository <RetentionPolicies>k__BackingField;
    [CompilerGeneratedAttribute]
private ISchedulerRepository <Schedulers>k__BackingField;
    [CompilerGeneratedAttribute]
private IServerStatusRepository <ServerStatus>k__BackingField;
    [CompilerGeneratedAttribute]
private ISpaceRepository <Spaces>k__BackingField;
    [CompilerGeneratedAttribute]
private ISubscriptionRepository <Subscriptions>k__BackingField;
    [CompilerGeneratedAttribute]
private ITagSetRepository <TagSets>k__BackingField;
    [CompilerGeneratedAttribute]
private ITaskRepository <Tasks>k__BackingField;
    [CompilerGeneratedAttribute]
private ITeamsRepository <Teams>k__BackingField;
    [CompilerGeneratedAttribute]
private ITenantRepository <Tenants>k__BackingField;
    [CompilerGeneratedAttribute]
private ITenantVariablesRepository <TenantVariables>k__BackingField;
    [CompilerGeneratedAttribute]
private IUserInvitesRepository <UserInvites>k__BackingField;
    [CompilerGeneratedAttribute]
private IUserRepository <Users>k__BackingField;
    [CompilerGeneratedAttribute]
private IUserRolesRepository <UserRoles>k__BackingField;
    [CompilerGeneratedAttribute]
private IVariableSetRepository <VariableSets>k__BackingField;
    [CompilerGeneratedAttribute]
private IWorkerPoolRepository <WorkerPools>k__BackingField;
    [CompilerGeneratedAttribute]
private IWorkerRepository <Workers>k__BackingField;
    [CompilerGeneratedAttribute]
private IScopedUserRoleRepository <ScopedUserRoles>k__BackingField;
    [CompilerGeneratedAttribute]
private IUserPermissionsRepository <UserPermissions>k__BackingField;
    [CompilerGeneratedAttribute]
private IUserTeamsRepository <UserTeams>k__BackingField;
    [CompilerGeneratedAttribute]
private IUpgradeConfigurationRepository <UpgradeConfiguration>k__BackingField;
    [CompilerGeneratedAttribute]
private ITelemetryConfigurationRepository <TelemetryConfigurationRepository>k__BackingField;
    [CompilerGeneratedAttribute]
private IDeploymentFreezeRepository <DeploymentFreezes>k__BackingField;
    public IOctopusAsyncClient Client { get; }
    public RepositoryScope Scope { get; private set; }
    public IAccountRepository Accounts { get; }
    public IActionTemplateRepository ActionTemplates { get; }
    public IArtifactRepository Artifacts { get; }
    public IBackupRepository Backups { get; }
    public IBuiltInPackageRepositoryRepository BuiltInPackageRepository { get; }
    public IBuildInformationRepository BuildInformationRepository { get; }
    public ICertificateConfigurationRepository CertificateConfiguration { get; }
    public ICertificateRepository Certificates { get; }
    public IChannelRepository Channels { get; }
    public ICommunityActionTemplateRepository CommunityActionTemplates { get; }
    public IConfigurationRepository Configuration { get; }
    public IDashboardConfigurationRepository DashboardConfigurations { get; }
    public IDashboardRepository Dashboards { get; }
    public IDefectsRepository Defects { get; }
    public IDeploymentProcessRepository DeploymentProcesses { get; }
    public IDeploymentSettingsRepository DeploymentSettings { get; }
    public IDeploymentRepository Deployments { get; }
    public IEnvironmentRepository Environments { get; }
    public IEventRepository Events { get; }
    public IArchivedEventFileRepository ArchivedEventFiles { get; }
    public IFeaturesConfigurationRepository FeaturesConfiguration { get; }
    public IFeedRepository Feeds { get; }
    public IGitCredentialRepository GitCredentials { get; }
    public IInterruptionRepository Interruptions { get; }
    public ILibraryVariableSetRepository LibraryVariableSets { get; }
    public ILicensesRepository Licenses { get; }
    public ILifecyclesRepository Lifecycles { get; }
    public IMachinePolicyRepository MachinePolicies { get; }
    public IMachineRepository Machines { get; }
    public IMachineRoleRepository MachineRoles { get; }
    public IMigrationRepository Migrations { get; }
    public IOctopusServerNodeRepository OctopusServerNodes { get; }
    public IPerformanceConfigurationRepository PerformanceConfiguration { get; }
    public IProjectGroupRepository ProjectGroups { get; }
    public IProjectRepository Projects { get; }
    public IRunbookRepository Runbooks { get; }
    public IRunbookProcessRepository RunbookProcesses { get; }
    public IRunbookSnapshotRepository RunbookSnapshots { get; }
    public IRunbookRunRepository RunbookRuns { get; }
    public IProjectTriggerRepository ProjectTriggers { get; }
    public IProxyRepository Proxies { get; }
    public IReleaseRepository Releases { get; }
    public IRetentionPolicyRepository RetentionPolicies { get; }
    public ISchedulerRepository Schedulers { get; }
    public IServerStatusRepository ServerStatus { get; }
    public ISpaceRepository Spaces { get; }
    public ISubscriptionRepository Subscriptions { get; }
    public ITagSetRepository TagSets { get; }
    public ITaskRepository Tasks { get; }
    public ITeamsRepository Teams { get; }
    public ITenantRepository Tenants { get; }
    public ITenantVariablesRepository TenantVariables { get; }
    public IUserInvitesRepository UserInvites { get; }
    public IUserRepository Users { get; }
    public IUserRolesRepository UserRoles { get; }
    public IVariableSetRepository VariableSets { get; }
    public IWorkerPoolRepository WorkerPools { get; }
    public IWorkerRepository Workers { get; }
    public IScopedUserRoleRepository ScopedUserRoles { get; }
    public IUserPermissionsRepository UserPermissions { get; }
    public IUserTeamsRepository UserTeams { get; }
    public IUpgradeConfigurationRepository UpgradeConfiguration { get; }
    public ITelemetryConfigurationRepository TelemetryConfigurationRepository { get; }
    public IDeploymentFreezeRepository DeploymentFreezes { get; }
    public OctopusAsyncRepository(IOctopusAsyncClient client, RepositoryScope repositoryScope);
    private static OctopusAsyncRepository();
    [CompilerGeneratedAttribute]
public sealed virtual IOctopusAsyncClient get_Client();
    [CompilerGeneratedAttribute]
public sealed virtual RepositoryScope get_Scope();
    [CompilerGeneratedAttribute]
private void set_Scope(RepositoryScope value);
    [CompilerGeneratedAttribute]
public sealed virtual IAccountRepository get_Accounts();
    [CompilerGeneratedAttribute]
public sealed virtual IActionTemplateRepository get_ActionTemplates();
    [CompilerGeneratedAttribute]
public sealed virtual IArtifactRepository get_Artifacts();
    [CompilerGeneratedAttribute]
public sealed virtual IBackupRepository get_Backups();
    [CompilerGeneratedAttribute]
public sealed virtual IBuiltInPackageRepositoryRepository get_BuiltInPackageRepository();
    [CompilerGeneratedAttribute]
public sealed virtual IBuildInformationRepository get_BuildInformationRepository();
    [CompilerGeneratedAttribute]
public sealed virtual ICertificateConfigurationRepository get_CertificateConfiguration();
    [CompilerGeneratedAttribute]
public sealed virtual ICertificateRepository get_Certificates();
    [CompilerGeneratedAttribute]
public sealed virtual IChannelRepository get_Channels();
    [CompilerGeneratedAttribute]
public sealed virtual ICommunityActionTemplateRepository get_CommunityActionTemplates();
    [CompilerGeneratedAttribute]
public sealed virtual IConfigurationRepository get_Configuration();
    [CompilerGeneratedAttribute]
public sealed virtual IDashboardConfigurationRepository get_DashboardConfigurations();
    [CompilerGeneratedAttribute]
public sealed virtual IDashboardRepository get_Dashboards();
    [CompilerGeneratedAttribute]
public sealed virtual IDefectsRepository get_Defects();
    [CompilerGeneratedAttribute]
public sealed virtual IDeploymentProcessRepository get_DeploymentProcesses();
    [CompilerGeneratedAttribute]
public sealed virtual IDeploymentSettingsRepository get_DeploymentSettings();
    [CompilerGeneratedAttribute]
public sealed virtual IDeploymentRepository get_Deployments();
    [CompilerGeneratedAttribute]
public sealed virtual IEnvironmentRepository get_Environments();
    [CompilerGeneratedAttribute]
public sealed virtual IEventRepository get_Events();
    [CompilerGeneratedAttribute]
public sealed virtual IArchivedEventFileRepository get_ArchivedEventFiles();
    [CompilerGeneratedAttribute]
public sealed virtual IFeaturesConfigurationRepository get_FeaturesConfiguration();
    [CompilerGeneratedAttribute]
public sealed virtual IFeedRepository get_Feeds();
    [CompilerGeneratedAttribute]
public sealed virtual IGitCredentialRepository get_GitCredentials();
    [CompilerGeneratedAttribute]
public sealed virtual IInterruptionRepository get_Interruptions();
    [CompilerGeneratedAttribute]
public sealed virtual ILibraryVariableSetRepository get_LibraryVariableSets();
    [CompilerGeneratedAttribute]
public sealed virtual ILicensesRepository get_Licenses();
    [CompilerGeneratedAttribute]
public sealed virtual ILifecyclesRepository get_Lifecycles();
    [CompilerGeneratedAttribute]
public sealed virtual IMachinePolicyRepository get_MachinePolicies();
    [CompilerGeneratedAttribute]
public sealed virtual IMachineRepository get_Machines();
    [CompilerGeneratedAttribute]
public sealed virtual IMachineRoleRepository get_MachineRoles();
    [CompilerGeneratedAttribute]
public sealed virtual IMigrationRepository get_Migrations();
    [CompilerGeneratedAttribute]
public sealed virtual IOctopusServerNodeRepository get_OctopusServerNodes();
    [CompilerGeneratedAttribute]
public sealed virtual IPerformanceConfigurationRepository get_PerformanceConfiguration();
    [CompilerGeneratedAttribute]
public sealed virtual IProjectGroupRepository get_ProjectGroups();
    [CompilerGeneratedAttribute]
public sealed virtual IProjectRepository get_Projects();
    [CompilerGeneratedAttribute]
public sealed virtual IRunbookRepository get_Runbooks();
    [CompilerGeneratedAttribute]
public sealed virtual IRunbookProcessRepository get_RunbookProcesses();
    [CompilerGeneratedAttribute]
public sealed virtual IRunbookSnapshotRepository get_RunbookSnapshots();
    [CompilerGeneratedAttribute]
public sealed virtual IRunbookRunRepository get_RunbookRuns();
    [CompilerGeneratedAttribute]
public sealed virtual IProjectTriggerRepository get_ProjectTriggers();
    [CompilerGeneratedAttribute]
public sealed virtual IProxyRepository get_Proxies();
    [CompilerGeneratedAttribute]
public sealed virtual IReleaseRepository get_Releases();
    [CompilerGeneratedAttribute]
public sealed virtual IRetentionPolicyRepository get_RetentionPolicies();
    [CompilerGeneratedAttribute]
public sealed virtual ISchedulerRepository get_Schedulers();
    [CompilerGeneratedAttribute]
public sealed virtual IServerStatusRepository get_ServerStatus();
    [CompilerGeneratedAttribute]
public sealed virtual ISpaceRepository get_Spaces();
    [CompilerGeneratedAttribute]
public sealed virtual ISubscriptionRepository get_Subscriptions();
    [CompilerGeneratedAttribute]
public sealed virtual ITagSetRepository get_TagSets();
    [CompilerGeneratedAttribute]
public sealed virtual ITaskRepository get_Tasks();
    [CompilerGeneratedAttribute]
public sealed virtual ITeamsRepository get_Teams();
    [CompilerGeneratedAttribute]
public sealed virtual ITenantRepository get_Tenants();
    [CompilerGeneratedAttribute]
public sealed virtual ITenantVariablesRepository get_TenantVariables();
    [CompilerGeneratedAttribute]
public sealed virtual IUserInvitesRepository get_UserInvites();
    [CompilerGeneratedAttribute]
public sealed virtual IUserRepository get_Users();
    [CompilerGeneratedAttribute]
public sealed virtual IUserRolesRepository get_UserRoles();
    [CompilerGeneratedAttribute]
public sealed virtual IVariableSetRepository get_VariableSets();
    [CompilerGeneratedAttribute]
public sealed virtual IWorkerPoolRepository get_WorkerPools();
    [CompilerGeneratedAttribute]
public sealed virtual IWorkerRepository get_Workers();
    [CompilerGeneratedAttribute]
public sealed virtual IScopedUserRoleRepository get_ScopedUserRoles();
    [CompilerGeneratedAttribute]
public sealed virtual IUserPermissionsRepository get_UserPermissions();
    [CompilerGeneratedAttribute]
public sealed virtual IUserTeamsRepository get_UserTeams();
    [CompilerGeneratedAttribute]
public sealed virtual IUpgradeConfigurationRepository get_UpgradeConfiguration();
    [CompilerGeneratedAttribute]
public sealed virtual ITelemetryConfigurationRepository get_TelemetryConfigurationRepository();
    [CompilerGeneratedAttribute]
public sealed virtual IDeploymentFreezeRepository get_DeploymentFreezes();
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncRepository/<HasLink>d__204")]
public sealed virtual Task`1<bool> HasLink(string name);
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncRepository/<HasLinkParameter>d__205")]
public sealed virtual Task`1<bool> HasLinkParameter(string linkName, string parameterName);
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncRepository/<Link>d__206")]
public sealed virtual Task`1<string> Link(string name);
    public sealed virtual Task`1<RootResource> LoadRootDocument();
    public sealed virtual Task`1<RootResource> LoadRootDocument(CancellationToken cancellationToken);
    public sealed virtual Task`1<SpaceRootResource> LoadSpaceRootDocument();
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncRepository/<LoadRootDocumentInner>d__210")]
private Task`1<RootResource> LoadRootDocumentInner(CancellationToken cancellationToken);
    private Task`1<SpaceRootResource> LoadSpaceRootDocumentInner();
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncRepository/<<LoadSpaceRootDocumentInner>b__211_1>d")]
[CompilerGeneratedAttribute]
private Task`1<SpaceRootResource> <LoadSpaceRootDocumentInner>b__211_1();
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncRepository/<<LoadSpaceRootDocumentInner>g__LoadSpaceRootResourceFor|211_2>d")]
[CompilerGeneratedAttribute]
private Task`1<SpaceRootResource> <LoadSpaceRootDocumentInner>g__LoadSpaceRootResourceFor|211_2(SpaceResource space);
    [AsyncStateMachineAttribute("Octopus.Client.OctopusAsyncRepository/<<LoadSpaceRootDocumentInner>g__TryGetDefaultSpace|211_3>d")]
[CompilerGeneratedAttribute]
private Task`1<SpaceResource> <LoadSpaceRootDocumentInner>g__TryGetDefaultSpace|211_3();
}
public class Octopus.Client.OctopusClient : object {
    private static ILog Logger;
    private OctopusServerEndpoint serverEndpoint;
    private CookieContainer cookieContainer;
    private Uri cookieOriginUri;
    private JsonSerializerSettings defaultJsonSerializerSettings;
    private ResourceSelfLinkExtractor resourceSelfLinkExtractor;
    private OctopusCustomHeaders octopusCustomHeaders;
    private string antiforgeryCookieName;
    private IHttpRouteExtractor httpRouteExtractor;
    [CompilerGeneratedAttribute]
private IOctopusRepository <Repository>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`1<WebRequest> BeforeSendingHttpRequest;
    [CompilerGeneratedAttribute]
private Action`1<WebResponse> AfterReceivingHttpResponse;
    [CompilerGeneratedAttribute]
private Action`1<OctopusRequest> SendingOctopusRequest;
    [CompilerGeneratedAttribute]
private Action`1<OctopusResponse> ReceivedOctopusResponse;
    public RootResource RootDocument { get; }
    public IOctopusRepository Repository { get; private set; }
    public bool IsUsingSecureConnection { get; }
    public OctopusClient(OctopusServerEndpoint serverEndpoint, OctopusClientOptions options);
    internal OctopusClient(OctopusServerEndpoint serverEndpoint, string requestingTool, OctopusClientOptions options);
    private static OctopusClient();
    public sealed virtual RootResource get_RootDocument();
    [CompilerGeneratedAttribute]
public sealed virtual IOctopusRepository get_Repository();
    [CompilerGeneratedAttribute]
private void set_Repository(IOctopusRepository value);
    public sealed virtual bool get_IsUsingSecureConnection();
    public sealed virtual IOctopusSpaceRepository ForSpace(SpaceResource space);
    public sealed virtual IOctopusSystemRepository ForSystem();
    public sealed virtual TResponse Do(ICommand`2<TCommand, TResponse> command, CancellationToken cancellationToken);
    public sealed virtual TResponse Request(IRequest`2<TRequest, TResponse> request, CancellationToken cancellationToken);
    private TResponse Send(HttpMethod method, Uri relativeRoute, object payload, CancellationToken cancellationToken);
    public sealed virtual void SignIn(LoginCommand loginCommand);
    public sealed virtual void SignOut();
    [CompilerGeneratedAttribute]
public sealed virtual void add_BeforeSendingHttpRequest(Action`1<WebRequest> value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_BeforeSendingHttpRequest(Action`1<WebRequest> value);
    [CompilerGeneratedAttribute]
public sealed virtual void add_AfterReceivingHttpResponse(Action`1<WebResponse> value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_AfterReceivingHttpResponse(Action`1<WebResponse> value);
    [CompilerGeneratedAttribute]
public sealed virtual void add_SendingOctopusRequest(Action`1<OctopusRequest> value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_SendingOctopusRequest(Action`1<OctopusRequest> value);
    [CompilerGeneratedAttribute]
public sealed virtual void add_ReceivedOctopusResponse(Action`1<OctopusResponse> value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_ReceivedOctopusResponse(Action`1<OctopusResponse> value);
    public void Initialize();
    private Uri BuildCookieUri(OctopusServerEndpoint octopusServerEndpoint);
    public sealed virtual TResource Get(string path, object pathParameters);
    public sealed virtual ResourceCollection`1<TResource> List(string path, object pathParameters);
    public sealed virtual IReadOnlyList`1<TResource> ListAll(string path, object pathParameters);
    public sealed virtual void Paginate(string path, object pathParameters, Func`2<ResourceCollection`1<TResource>, bool> getNextPage);
    public sealed virtual void Paginate(string path, Func`2<ResourceCollection`1<TResource>, bool> getNextPage);
    public sealed virtual TResource Create(string path, TResource resource, object pathParameters);
    public sealed virtual TResponse Create(string path, TCommand command, object pathParameters);
    public sealed virtual void Post(string path, TResource resource, object pathParameters);
    public sealed virtual TResponse Post(string path, TResource resource, object pathParameters);
    public sealed virtual void Post(string path);
    public sealed virtual void Put(string path, TResource resource);
    public sealed virtual void Put(string path);
    public sealed virtual void Put(string path, TResource resource, object pathParameters);
    public sealed virtual void Delete(string path, object pathParameters, object resource);
    public sealed virtual TResponse Delete(string path, TCommand command, object pathParameters);
    public sealed virtual TResource Update(string path, TResource resource, object pathParameters);
    public sealed virtual TResponse Update(string path, TCommand command, object pathParameters);
    public sealed virtual Stream GetContent(string path, object pathParameters);
    public sealed virtual void PutContent(string path, Stream contentStream);
    public sealed virtual Uri QualifyUri(string path, object parameters);
    protected virtual OctopusResponse`1<TResponseResource> DispatchRequest(OctopusRequest request, bool readResponse);
    public sealed virtual void Dispose();
    private void ValidateSpaceId(SpaceResource space);
    [CompilerGeneratedAttribute]
private bool <DispatchRequest>b__60_0(Cookie c);
}
public class Octopus.Client.OctopusClientFactory : object {
    public sealed virtual IOctopusClient CreateClient(OctopusServerEndpoint serverEndpoint, OctopusClientOptions options);
    public sealed virtual Task`1<IOctopusAsyncClient> CreateAsyncClient(OctopusServerEndpoint serverEndpoint, OctopusClientOptions options);
    private string DetermineRequestingTool();
}
public class Octopus.Client.OctopusClientOptions : object {
    [CompilerGeneratedAttribute]
private TimeSpan <Timeout>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Proxy>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProxyUsername>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProxyPassword>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowDefaultProxy>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`1<Type[]> <ScanForHttpRouteTypes>k__BackingField;
    public TimeSpan Timeout { get; public set; }
    public string Proxy { get; public set; }
    public string ProxyUsername { get; public set; }
    public string ProxyPassword { get; public set; }
    public bool AllowDefaultProxy { get; public set; }
    public Func`1<Type[]> ScanForHttpRouteTypes { get; public set; }
    [CompilerGeneratedAttribute]
public TimeSpan get_Timeout();
    [CompilerGeneratedAttribute]
public void set_Timeout(TimeSpan value);
    [CompilerGeneratedAttribute]
public string get_Proxy();
    [CompilerGeneratedAttribute]
public void set_Proxy(string value);
    [CompilerGeneratedAttribute]
public string get_ProxyUsername();
    [CompilerGeneratedAttribute]
public void set_ProxyUsername(string value);
    [CompilerGeneratedAttribute]
public string get_ProxyPassword();
    [CompilerGeneratedAttribute]
public void set_ProxyPassword(string value);
    [CompilerGeneratedAttribute]
public bool get_AllowDefaultProxy();
    [CompilerGeneratedAttribute]
public void set_AllowDefaultProxy(bool value);
    [CompilerGeneratedAttribute]
public Func`1<Type[]> get_ScanForHttpRouteTypes();
    [CompilerGeneratedAttribute]
public void set_ScanForHttpRouteTypes(Func`1<Type[]> value);
}
public class Octopus.Client.OctopusRepository : object {
    private Lazy`1<RootResource> loadRootResource;
    private Lazy`1<SpaceRootResource> loadSpaceRootResource;
    [CompilerGeneratedAttribute]
private IOctopusClient <Client>k__BackingField;
    [CompilerGeneratedAttribute]
private RepositoryScope <Scope>k__BackingField;
    [CompilerGeneratedAttribute]
private IAccountRepository <Accounts>k__BackingField;
    [CompilerGeneratedAttribute]
private IActionTemplateRepository <ActionTemplates>k__BackingField;
    [CompilerGeneratedAttribute]
private IArtifactRepository <Artifacts>k__BackingField;
    [CompilerGeneratedAttribute]
private IBackupRepository <Backups>k__BackingField;
    [CompilerGeneratedAttribute]
private IBuiltInPackageRepositoryRepository <BuiltInPackageRepository>k__BackingField;
    [CompilerGeneratedAttribute]
private IBuildInformationRepository <BuildInformationRepository>k__BackingField;
    [CompilerGeneratedAttribute]
private ICertificateConfigurationRepository <CertificateConfiguration>k__BackingField;
    [CompilerGeneratedAttribute]
private ICertificateRepository <Certificates>k__BackingField;
    [CompilerGeneratedAttribute]
private IChannelRepository <Channels>k__BackingField;
    [CompilerGeneratedAttribute]
private ICommunityActionTemplateRepository <CommunityActionTemplates>k__BackingField;
    [CompilerGeneratedAttribute]
private IConfigurationRepository <Configuration>k__BackingField;
    [CompilerGeneratedAttribute]
private IDashboardConfigurationRepository <DashboardConfigurations>k__BackingField;
    [CompilerGeneratedAttribute]
private IDashboardRepository <Dashboards>k__BackingField;
    [CompilerGeneratedAttribute]
private IDefectsRepository <Defects>k__BackingField;
    [CompilerGeneratedAttribute]
private IDeploymentProcessRepository <DeploymentProcesses>k__BackingField;
    [CompilerGeneratedAttribute]
private IDeploymentSettingsRepository <DeploymentSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private IDeploymentRepository <Deployments>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnvironmentRepository <Environments>k__BackingField;
    [CompilerGeneratedAttribute]
private IEventRepository <Events>k__BackingField;
    [CompilerGeneratedAttribute]
private IArchivedEventFileRepository <ArchivedEventFiles>k__BackingField;
    [CompilerGeneratedAttribute]
private IFeaturesConfigurationRepository <FeaturesConfiguration>k__BackingField;
    [CompilerGeneratedAttribute]
private IFeedRepository <Feeds>k__BackingField;
    [CompilerGeneratedAttribute]
private IInterruptionRepository <Interruptions>k__BackingField;
    [CompilerGeneratedAttribute]
private ILibraryVariableSetRepository <LibraryVariableSets>k__BackingField;
    [CompilerGeneratedAttribute]
private ILifecyclesRepository <Lifecycles>k__BackingField;
    [CompilerGeneratedAttribute]
private ILicensesRepository <Licenses>k__BackingField;
    [CompilerGeneratedAttribute]
private IMachinePolicyRepository <MachinePolicies>k__BackingField;
    [CompilerGeneratedAttribute]
private IMachineRepository <Machines>k__BackingField;
    [CompilerGeneratedAttribute]
private IMachineRoleRepository <MachineRoles>k__BackingField;
    [CompilerGeneratedAttribute]
private IMigrationRepository <Migrations>k__BackingField;
    [CompilerGeneratedAttribute]
private IOctopusServerNodeRepository <OctopusServerNodes>k__BackingField;
    [CompilerGeneratedAttribute]
private IPerformanceConfigurationRepository <PerformanceConfiguration>k__BackingField;
    [CompilerGeneratedAttribute]
private IProjectGroupRepository <ProjectGroups>k__BackingField;
    [CompilerGeneratedAttribute]
private IProjectRepository <Projects>k__BackingField;
    [CompilerGeneratedAttribute]
private IRunbookRepository <Runbooks>k__BackingField;
    [CompilerGeneratedAttribute]
private IRunbookProcessRepository <RunbookProcesses>k__BackingField;
    [CompilerGeneratedAttribute]
private IRunbookSnapshotRepository <RunbookSnapshots>k__BackingField;
    [CompilerGeneratedAttribute]
private IRunbookRunRepository <RunbookRuns>k__BackingField;
    [CompilerGeneratedAttribute]
private IProjectTriggerRepository <ProjectTriggers>k__BackingField;
    [CompilerGeneratedAttribute]
private IProxyRepository <Proxies>k__BackingField;
    [CompilerGeneratedAttribute]
private IReleaseRepository <Releases>k__BackingField;
    [CompilerGeneratedAttribute]
private IRetentionPolicyRepository <RetentionPolicies>k__BackingField;
    [CompilerGeneratedAttribute]
private ISchedulerRepository <Schedulers>k__BackingField;
    [CompilerGeneratedAttribute]
private IServerStatusRepository <ServerStatus>k__BackingField;
    [CompilerGeneratedAttribute]
private ISpaceRepository <Spaces>k__BackingField;
    [CompilerGeneratedAttribute]
private ISubscriptionRepository <Subscriptions>k__BackingField;
    [CompilerGeneratedAttribute]
private ITagSetRepository <TagSets>k__BackingField;
    [CompilerGeneratedAttribute]
private ITaskRepository <Tasks>k__BackingField;
    [CompilerGeneratedAttribute]
private ITeamsRepository <Teams>k__BackingField;
    [CompilerGeneratedAttribute]
private ITenantRepository <Tenants>k__BackingField;
    [CompilerGeneratedAttribute]
private ITenantVariablesRepository <TenantVariables>k__BackingField;
    [CompilerGeneratedAttribute]
private IUserInvitesRepository <UserInvites>k__BackingField;
    [CompilerGeneratedAttribute]
private IUserRepository <Users>k__BackingField;
    [CompilerGeneratedAttribute]
private IUserRolesRepository <UserRoles>k__BackingField;
    [CompilerGeneratedAttribute]
private IVariableSetRepository <VariableSets>k__BackingField;
    [CompilerGeneratedAttribute]
private IWorkerPoolRepository <WorkerPools>k__BackingField;
    [CompilerGeneratedAttribute]
private IWorkerRepository <Workers>k__BackingField;
    [CompilerGeneratedAttribute]
private IScopedUserRoleRepository <ScopedUserRoles>k__BackingField;
    [CompilerGeneratedAttribute]
private IUserPermissionsRepository <UserPermissions>k__BackingField;
    [CompilerGeneratedAttribute]
private IUserTeamsRepository <UserTeams>k__BackingField;
    [CompilerGeneratedAttribute]
private IUpgradeConfigurationRepository <UpgradeConfiguration>k__BackingField;
    [CompilerGeneratedAttribute]
private ITelemetryConfigurationRepository <TelemetryConfigurationRepository>k__BackingField;
    [CompilerGeneratedAttribute]
private IDeploymentFreezeRepository <DeploymentFreezes>k__BackingField;
    public IOctopusClient Client { get; }
    public RepositoryScope Scope { get; }
    public IAccountRepository Accounts { get; }
    public IActionTemplateRepository ActionTemplates { get; }
    public IArtifactRepository Artifacts { get; }
    public IBackupRepository Backups { get; }
    public IBuiltInPackageRepositoryRepository BuiltInPackageRepository { get; }
    public IBuildInformationRepository BuildInformationRepository { get; }
    public ICertificateConfigurationRepository CertificateConfiguration { get; }
    public ICertificateRepository Certificates { get; }
    public IChannelRepository Channels { get; }
    public ICommunityActionTemplateRepository CommunityActionTemplates { get; }
    public IConfigurationRepository Configuration { get; }
    public IDashboardConfigurationRepository DashboardConfigurations { get; }
    public IDashboardRepository Dashboards { get; }
    public IDefectsRepository Defects { get; }
    public IDeploymentProcessRepository DeploymentProcesses { get; }
    public IDeploymentSettingsRepository DeploymentSettings { get; }
    public IDeploymentRepository Deployments { get; }
    public IEnvironmentRepository Environments { get; }
    public IEventRepository Events { get; }
    public IArchivedEventFileRepository ArchivedEventFiles { get; }
    public IFeaturesConfigurationRepository FeaturesConfiguration { get; }
    public IFeedRepository Feeds { get; }
    public IInterruptionRepository Interruptions { get; }
    public ILibraryVariableSetRepository LibraryVariableSets { get; }
    public ILifecyclesRepository Lifecycles { get; }
    public ILicensesRepository Licenses { get; }
    public IMachinePolicyRepository MachinePolicies { get; }
    public IMachineRepository Machines { get; }
    public IMachineRoleRepository MachineRoles { get; }
    public IMigrationRepository Migrations { get; }
    public IOctopusServerNodeRepository OctopusServerNodes { get; }
    public IPerformanceConfigurationRepository PerformanceConfiguration { get; }
    public IProjectGroupRepository ProjectGroups { get; }
    public IProjectRepository Projects { get; }
    public IRunbookRepository Runbooks { get; }
    public IRunbookProcessRepository RunbookProcesses { get; }
    public IRunbookSnapshotRepository RunbookSnapshots { get; }
    public IRunbookRunRepository RunbookRuns { get; }
    public IProjectTriggerRepository ProjectTriggers { get; }
    public IProxyRepository Proxies { get; }
    public IReleaseRepository Releases { get; }
    public IRetentionPolicyRepository RetentionPolicies { get; }
    public ISchedulerRepository Schedulers { get; }
    public IServerStatusRepository ServerStatus { get; }
    public ISpaceRepository Spaces { get; }
    public ISubscriptionRepository Subscriptions { get; }
    public ITagSetRepository TagSets { get; }
    public ITaskRepository Tasks { get; }
    public ITeamsRepository Teams { get; }
    public ITenantRepository Tenants { get; }
    public ITenantVariablesRepository TenantVariables { get; }
    public IUserInvitesRepository UserInvites { get; }
    public IUserRepository Users { get; }
    public IUserRolesRepository UserRoles { get; }
    public IVariableSetRepository VariableSets { get; }
    public IWorkerPoolRepository WorkerPools { get; }
    public IWorkerRepository Workers { get; }
    public IScopedUserRoleRepository ScopedUserRoles { get; }
    public IUserPermissionsRepository UserPermissions { get; }
    public IUserTeamsRepository UserTeams { get; }
    public IUpgradeConfigurationRepository UpgradeConfiguration { get; }
    public ITelemetryConfigurationRepository TelemetryConfigurationRepository { get; }
    public IDeploymentFreezeRepository DeploymentFreezes { get; }
    public OctopusRepository(OctopusServerEndpoint endpoint);
    public OctopusRepository(OctopusServerEndpoint endpoint, RepositoryScope repositoryScope);
    public OctopusRepository(IOctopusClient client, RepositoryScope repositoryScope);
    [CompilerGeneratedAttribute]
public sealed virtual IOctopusClient get_Client();
    [CompilerGeneratedAttribute]
public sealed virtual RepositoryScope get_Scope();
    [CompilerGeneratedAttribute]
public sealed virtual IAccountRepository get_Accounts();
    [CompilerGeneratedAttribute]
public sealed virtual IActionTemplateRepository get_ActionTemplates();
    [CompilerGeneratedAttribute]
public sealed virtual IArtifactRepository get_Artifacts();
    [CompilerGeneratedAttribute]
public sealed virtual IBackupRepository get_Backups();
    [CompilerGeneratedAttribute]
public sealed virtual IBuiltInPackageRepositoryRepository get_BuiltInPackageRepository();
    [CompilerGeneratedAttribute]
public sealed virtual IBuildInformationRepository get_BuildInformationRepository();
    [CompilerGeneratedAttribute]
public sealed virtual ICertificateConfigurationRepository get_CertificateConfiguration();
    [CompilerGeneratedAttribute]
public sealed virtual ICertificateRepository get_Certificates();
    [CompilerGeneratedAttribute]
public sealed virtual IChannelRepository get_Channels();
    [CompilerGeneratedAttribute]
public sealed virtual ICommunityActionTemplateRepository get_CommunityActionTemplates();
    [CompilerGeneratedAttribute]
public sealed virtual IConfigurationRepository get_Configuration();
    [CompilerGeneratedAttribute]
public sealed virtual IDashboardConfigurationRepository get_DashboardConfigurations();
    [CompilerGeneratedAttribute]
public sealed virtual IDashboardRepository get_Dashboards();
    [CompilerGeneratedAttribute]
public sealed virtual IDefectsRepository get_Defects();
    [CompilerGeneratedAttribute]
public sealed virtual IDeploymentProcessRepository get_DeploymentProcesses();
    [CompilerGeneratedAttribute]
public sealed virtual IDeploymentSettingsRepository get_DeploymentSettings();
    [CompilerGeneratedAttribute]
public sealed virtual IDeploymentRepository get_Deployments();
    [CompilerGeneratedAttribute]
public sealed virtual IEnvironmentRepository get_Environments();
    [CompilerGeneratedAttribute]
public sealed virtual IEventRepository get_Events();
    [CompilerGeneratedAttribute]
public sealed virtual IArchivedEventFileRepository get_ArchivedEventFiles();
    [CompilerGeneratedAttribute]
public sealed virtual IFeaturesConfigurationRepository get_FeaturesConfiguration();
    [CompilerGeneratedAttribute]
public sealed virtual IFeedRepository get_Feeds();
    [CompilerGeneratedAttribute]
public sealed virtual IInterruptionRepository get_Interruptions();
    [CompilerGeneratedAttribute]
public sealed virtual ILibraryVariableSetRepository get_LibraryVariableSets();
    [CompilerGeneratedAttribute]
public sealed virtual ILifecyclesRepository get_Lifecycles();
    [CompilerGeneratedAttribute]
public sealed virtual ILicensesRepository get_Licenses();
    [CompilerGeneratedAttribute]
public sealed virtual IMachinePolicyRepository get_MachinePolicies();
    [CompilerGeneratedAttribute]
public sealed virtual IMachineRepository get_Machines();
    [CompilerGeneratedAttribute]
public sealed virtual IMachineRoleRepository get_MachineRoles();
    [CompilerGeneratedAttribute]
public sealed virtual IMigrationRepository get_Migrations();
    [CompilerGeneratedAttribute]
public sealed virtual IOctopusServerNodeRepository get_OctopusServerNodes();
    [CompilerGeneratedAttribute]
public sealed virtual IPerformanceConfigurationRepository get_PerformanceConfiguration();
    [CompilerGeneratedAttribute]
public sealed virtual IProjectGroupRepository get_ProjectGroups();
    [CompilerGeneratedAttribute]
public sealed virtual IProjectRepository get_Projects();
    [CompilerGeneratedAttribute]
public sealed virtual IRunbookRepository get_Runbooks();
    [CompilerGeneratedAttribute]
public sealed virtual IRunbookProcessRepository get_RunbookProcesses();
    [CompilerGeneratedAttribute]
public sealed virtual IRunbookSnapshotRepository get_RunbookSnapshots();
    [CompilerGeneratedAttribute]
public sealed virtual IRunbookRunRepository get_RunbookRuns();
    [CompilerGeneratedAttribute]
public sealed virtual IProjectTriggerRepository get_ProjectTriggers();
    [CompilerGeneratedAttribute]
public sealed virtual IProxyRepository get_Proxies();
    [CompilerGeneratedAttribute]
public sealed virtual IReleaseRepository get_Releases();
    [CompilerGeneratedAttribute]
public sealed virtual IRetentionPolicyRepository get_RetentionPolicies();
    [CompilerGeneratedAttribute]
public sealed virtual ISchedulerRepository get_Schedulers();
    [CompilerGeneratedAttribute]
public sealed virtual IServerStatusRepository get_ServerStatus();
    [CompilerGeneratedAttribute]
public sealed virtual ISpaceRepository get_Spaces();
    [CompilerGeneratedAttribute]
public sealed virtual ISubscriptionRepository get_Subscriptions();
    [CompilerGeneratedAttribute]
public sealed virtual ITagSetRepository get_TagSets();
    [CompilerGeneratedAttribute]
public sealed virtual ITaskRepository get_Tasks();
    [CompilerGeneratedAttribute]
public sealed virtual ITeamsRepository get_Teams();
    [CompilerGeneratedAttribute]
public sealed virtual ITenantRepository get_Tenants();
    [CompilerGeneratedAttribute]
public sealed virtual ITenantVariablesRepository get_TenantVariables();
    [CompilerGeneratedAttribute]
public sealed virtual IUserInvitesRepository get_UserInvites();
    [CompilerGeneratedAttribute]
public sealed virtual IUserRepository get_Users();
    [CompilerGeneratedAttribute]
public sealed virtual IUserRolesRepository get_UserRoles();
    [CompilerGeneratedAttribute]
public sealed virtual IVariableSetRepository get_VariableSets();
    [CompilerGeneratedAttribute]
public sealed virtual IWorkerPoolRepository get_WorkerPools();
    [CompilerGeneratedAttribute]
public sealed virtual IWorkerRepository get_Workers();
    [CompilerGeneratedAttribute]
public sealed virtual IScopedUserRoleRepository get_ScopedUserRoles();
    [CompilerGeneratedAttribute]
public sealed virtual IUserPermissionsRepository get_UserPermissions();
    [CompilerGeneratedAttribute]
public sealed virtual IUserTeamsRepository get_UserTeams();
    [CompilerGeneratedAttribute]
public sealed virtual IUpgradeConfigurationRepository get_UpgradeConfiguration();
    [CompilerGeneratedAttribute]
public sealed virtual ITelemetryConfigurationRepository get_TelemetryConfigurationRepository();
    [CompilerGeneratedAttribute]
public sealed virtual IDeploymentFreezeRepository get_DeploymentFreezes();
    public sealed virtual bool HasLink(string name);
    public sealed virtual bool HasLinkParameter(string linkName, string parameterName);
    public sealed virtual string Link(string name);
    public sealed virtual RootResource LoadRootDocument();
    public sealed virtual SpaceRootResource LoadSpaceRootDocument();
    private RootResource LoadRootDocumentInner();
    private SpaceRootResource LoadSpaceRootDocumentInner();
    [CompilerGeneratedAttribute]
private SpaceRootResource <LoadSpaceRootDocumentInner>b__206_1();
    [CompilerGeneratedAttribute]
private SpaceRootResource <LoadSpaceRootDocumentInner>g__LoadSpaceRootResourceFor|206_2(SpaceResource space);
    [CompilerGeneratedAttribute]
private SpaceResource <LoadSpaceRootDocumentInner>g__TryGetDefaultSpace|206_3();
}
[ExtensionAttribute]
public static class Octopus.Client.OctopusRepositoryExtensions : object {
    [ExtensionAttribute]
public static IOctopusAsyncRepository CreateRepository(IOctopusAsyncClient client, RepositoryScope scope);
    [ExtensionAttribute]
public static IOctopusSpaceAsyncRepository ForSpace(IOctopusAsyncRepository repo, SpaceResource space);
    [ExtensionAttribute]
public static IOctopusSystemAsyncRepository ForSystem(IOctopusAsyncRepository repo);
    [ExtensionAttribute]
public static IOctopusSpaceRepository ForSpace(IOctopusRepository repo, SpaceResource space);
    [ExtensionAttribute]
public static IOctopusSystemRepository ForSystem(IOctopusRepository repo);
}
public class Octopus.Client.OctopusRequest : object {
    private string method;
    private Uri uri;
    private object requestResource;
    public string Method { get; }
    public Uri Uri { get; }
    public object RequestResource { get; }
    public OctopusRequest(string method, Uri uri, object requestResource);
    public string get_Method();
    public Uri get_Uri();
    public object get_RequestResource();
}
public class Octopus.Client.OctopusResponse : object {
    private OctopusRequest request;
    private HttpStatusCode statusCode;
    private string location;
    private object responseResource;
    public OctopusRequest Request { get; }
    public HttpStatusCode StatusCode { get; }
    public string Location { get; }
    public object ResponseResource { get; }
    public OctopusResponse(OctopusRequest request, HttpStatusCode statusCode, string location, object responseResource);
    public OctopusRequest get_Request();
    public HttpStatusCode get_StatusCode();
    public string get_Location();
    public object get_ResponseResource();
}
public class Octopus.Client.OctopusResponse`1 : OctopusResponse {
    public TResponseResource ResponseResource { get; }
    public OctopusResponse`1(OctopusRequest request, HttpStatusCode statusCode, string location, TResponseResource responseResource);
    public TResponseResource get_ResponseResource();
}
public class Octopus.Client.OctopusServerEndpoint : object {
    [CompilerGeneratedAttribute]
private ILinkResolver <OctopusServer>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ApiKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BearerToken>k__BackingField;
    [CompilerGeneratedAttribute]
private ICredentials <Credentials>k__BackingField;
    [CompilerGeneratedAttribute]
private IWebProxy <Proxy>k__BackingField;
    public ILinkResolver OctopusServer { get; }
    public bool IsUsingSecureConnection { get; }
    public string ApiKey { get; }
    public string BearerToken { get; }
    public ICredentials Credentials { get; }
    public IWebProxy Proxy { get; public set; }
    private OctopusServerEndpoint(string octopusServerAddress, BearerTokenValue bearerTokenValue, ICredentials credentials);
    public OctopusServerEndpoint(string octopusServerAddress);
    public OctopusServerEndpoint(string octopusServerAddress, string apiKey);
    public OctopusServerEndpoint(string octopusServerAddress, string apiKey, ICredentials credentials);
    public OctopusServerEndpoint(ILinkResolver octopusServer, string apiKey, ICredentials credentials);
    public static OctopusServerEndpoint CreateWithBearerToken(string octopusServerAddress, string bearerToken, ICredentials credentials);
    public static OctopusServerEndpoint CreateWithApiKey(string octopusServerAddress, string apiKey, ICredentials credentials);
    [CompilerGeneratedAttribute]
public ILinkResolver get_OctopusServer();
    public bool get_IsUsingSecureConnection();
    [CompilerGeneratedAttribute]
public string get_ApiKey();
    [CompilerGeneratedAttribute]
public string get_BearerToken();
    [CompilerGeneratedAttribute]
public ICredentials get_Credentials();
    public OctopusServerEndpoint AsUser(string newUserApiKey);
    [CompilerGeneratedAttribute]
public IWebProxy get_Proxy();
    [CompilerGeneratedAttribute]
public void set_Proxy(IWebProxy value);
    private static DefaultLinkResolver GetLinkResolverFromServerUrl(string octopusServerAddress);
}
public class Octopus.Client.Operations.InvalidRegistrationArgumentsException : ArgumentException {
    public InvalidRegistrationArgumentsException(string message);
}
[ObsoleteAttribute("Use IRegisterKubernetesDeploymentTargetOperation instead.")]
public interface Octopus.Client.Operations.IRegisterKubernetesClusterOperation {
    public string DefaultNamespace { get; public set; }
    public abstract virtual string get_DefaultNamespace();
    public abstract virtual void set_DefaultNamespace(string value);
}
public interface Octopus.Client.Operations.IRegisterKubernetesDeploymentTargetOperation {
    public string DefaultNamespace { get; public set; }
    public abstract virtual string get_DefaultNamespace();
    public abstract virtual void set_DefaultNamespace(string value);
}
public interface Octopus.Client.Operations.IRegisterKubernetesWorkerOperation {
}
public interface Octopus.Client.Operations.IRegisterMachineOperation {
    [ObsoleteAttribute("Use the Environments property as it supports environment names, slugs and Ids.")]
public String[] EnvironmentNames { get; public set; }
    public String[] Environments { get; public set; }
    public String[] Roles { get; public set; }
    public String[] Tenants { get; public set; }
    public String[] TenantTags { get; public set; }
    public TenantedDeploymentMode TenantedDeploymentParticipation { get; public set; }
    public abstract virtual String[] get_EnvironmentNames();
    public abstract virtual void set_EnvironmentNames(String[] value);
    public abstract virtual String[] get_Environments();
    public abstract virtual void set_Environments(String[] value);
    public abstract virtual String[] get_Roles();
    public abstract virtual void set_Roles(String[] value);
    public abstract virtual String[] get_Tenants();
    public abstract virtual void set_Tenants(String[] value);
    public abstract virtual String[] get_TenantTags();
    public abstract virtual void set_TenantTags(String[] value);
    public abstract virtual TenantedDeploymentMode get_TenantedDeploymentParticipation();
    public abstract virtual void set_TenantedDeploymentParticipation(TenantedDeploymentMode value);
}
public interface Octopus.Client.Operations.IRegisterMachineOperationBase {
    public string MachineName { get; public set; }
    public string MachinePolicy { get; public set; }
    public string TentacleHostname { get; public set; }
    public int TentaclePort { get; public set; }
    public string TentacleThumbprint { get; public set; }
    public string ProxyName { get; public set; }
    public bool AllowOverwrite { get; public set; }
    public CommunicationStyle CommunicationStyle { get; public set; }
    public Uri SubscriptionId { get; public set; }
    public abstract virtual string get_MachineName();
    public abstract virtual void set_MachineName(string value);
    public abstract virtual string get_MachinePolicy();
    public abstract virtual void set_MachinePolicy(string value);
    public abstract virtual string get_TentacleHostname();
    public abstract virtual void set_TentacleHostname(string value);
    public abstract virtual int get_TentaclePort();
    public abstract virtual void set_TentaclePort(int value);
    public abstract virtual string get_TentacleThumbprint();
    public abstract virtual void set_TentacleThumbprint(string value);
    public abstract virtual string get_ProxyName();
    public abstract virtual void set_ProxyName(string value);
    public abstract virtual bool get_AllowOverwrite();
    public abstract virtual void set_AllowOverwrite(bool value);
    public abstract virtual CommunicationStyle get_CommunicationStyle();
    public abstract virtual void set_CommunicationStyle(CommunicationStyle value);
    public abstract virtual Uri get_SubscriptionId();
    public abstract virtual void set_SubscriptionId(Uri value);
    public abstract virtual void Execute(OctopusServerEndpoint serverEndpoint);
    public abstract virtual void Execute(OctopusRepository repository);
    public abstract virtual void Execute(IOctopusSpaceRepository repository);
    public abstract virtual Task ExecuteAsync(OctopusServerEndpoint serverEndpoint);
    public abstract virtual Task ExecuteAsync(OctopusAsyncRepository repository);
    public abstract virtual Task ExecuteAsync(IOctopusSpaceAsyncRepository repository);
}
public interface Octopus.Client.Operations.IRegisterWorkerOperation {
    [ObsoleteAttribute("Use the WorkerPools property as it supports worker pool names, slugs and Ids.")]
public String[] WorkerPoolNames { get; public set; }
    public String[] WorkerPools { get; public set; }
    public abstract virtual String[] get_WorkerPoolNames();
    public abstract virtual void set_WorkerPoolNames(String[] value);
    public abstract virtual String[] get_WorkerPools();
    public abstract virtual void set_WorkerPools(String[] value);
}
[ObsoleteAttribute("Use RegisterKubernetesDeploymentTargetOperation instead.")]
public class Octopus.Client.Operations.RegisterKubernetesClusterOperation : RegisterMachineOperation {
    [CompilerGeneratedAttribute]
private string <DefaultNamespace>k__BackingField;
    public string DefaultNamespace { get; public set; }
    public RegisterKubernetesClusterOperation(IOctopusClientFactory clientFactory);
    [CompilerGeneratedAttribute]
public sealed virtual string get_DefaultNamespace();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DefaultNamespace(string value);
    protected virtual void PrepareMachineForReRegistration(MachineResource machine, string proxyId);
    protected virtual EndpointResource GenerateEndpoint(string proxyId);
}
public class Octopus.Client.Operations.RegisterKubernetesDeploymentTargetOperation : RegisterMachineOperation {
    [CompilerGeneratedAttribute]
private string <DefaultNamespace>k__BackingField;
    public string DefaultNamespace { get; public set; }
    public RegisterKubernetesDeploymentTargetOperation(IOctopusClientFactory clientFactory);
    [CompilerGeneratedAttribute]
public sealed virtual string get_DefaultNamespace();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DefaultNamespace(string value);
    protected virtual void PrepareMachineForReRegistration(MachineResource machine, string proxyId);
    protected virtual EndpointResource GenerateEndpoint(string proxyId);
}
public class Octopus.Client.Operations.RegisterKubernetesWorkerOperation : RegisterWorkerOperation {
    public RegisterKubernetesWorkerOperation(IOctopusClientFactory clientFactory);
    protected virtual void PrepareWorkerForReRegistration(WorkerResource worker, string proxyId);
    protected virtual EndpointResource GenerateEndpoint(string proxyId);
}
public class Octopus.Client.Operations.RegisterMachineOperation : RegisterMachineOperationBase {
    [CompilerGeneratedAttribute]
private String[] <EnvironmentNames>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Environments>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Roles>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Tenants>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <TenantTags>k__BackingField;
    [CompilerGeneratedAttribute]
private TenantedDeploymentMode <TenantedDeploymentParticipation>k__BackingField;
    [ObsoleteAttribute("Use the Environments property as it supports environment names, slugs and Ids.")]
public String[] EnvironmentNames { get; public set; }
    public String[] Environments { get; public set; }
    public String[] Roles { get; public set; }
    public String[] Tenants { get; public set; }
    public String[] TenantTags { get; public set; }
    public TenantedDeploymentMode TenantedDeploymentParticipation { get; public set; }
    public RegisterMachineOperation(IOctopusClientFactory clientFactory);
    [CompilerGeneratedAttribute]
public sealed virtual String[] get_EnvironmentNames();
    [CompilerGeneratedAttribute]
public sealed virtual void set_EnvironmentNames(String[] value);
    [CompilerGeneratedAttribute]
public sealed virtual String[] get_Environments();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Environments(String[] value);
    [CompilerGeneratedAttribute]
public sealed virtual String[] get_Roles();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Roles(String[] value);
    [CompilerGeneratedAttribute]
public sealed virtual String[] get_Tenants();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Tenants(String[] value);
    [CompilerGeneratedAttribute]
public sealed virtual String[] get_TenantTags();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TenantTags(String[] value);
    [CompilerGeneratedAttribute]
public sealed virtual TenantedDeploymentMode get_TenantedDeploymentParticipation();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TenantedDeploymentParticipation(TenantedDeploymentMode value);
    public virtual void Execute(IOctopusSpaceRepository repository);
    private static bool IsExistingMachine(MachineResource machine);
    private static void ModifyOrCreateMachine(IOctopusSpaceRepository repository, MachineResource machine);
    private List`1<TenantResource> GetTenants(IOctopusSpaceRepository repository);
    private void ValidateTenantTags(IOctopusSpaceRepository repository);
    private List`1<EnvironmentResource> GetEnvironments(IOctopusSpaceRepository repository);
    private MachineResource GetMachine(IOctopusSpaceRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Operations.RegisterMachineOperation/<ExecuteAsync>d__33")]
public virtual Task ExecuteAsync(IOctopusSpaceAsyncRepository repository);
    protected virtual void PrepareMachineForReRegistration(MachineResource machineResource, string proxyId);
    [AsyncStateMachineAttribute("Octopus.Client.Operations.RegisterMachineOperation/<ModifyOrCreateMachine>d__35")]
private static Task ModifyOrCreateMachine(IOctopusSpaceAsyncRepository repository, MachineResource machine);
    [AsyncStateMachineAttribute("Octopus.Client.Operations.RegisterMachineOperation/<GetTenants>d__36")]
private Task`1<List`1<TenantResource>> GetTenants(IOctopusSpaceAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Operations.RegisterMachineOperation/<ValidateTenantTags>d__37")]
private Task ValidateTenantTags(IOctopusSpaceAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Operations.RegisterMachineOperation/<GetEnvironments>d__38")]
private Task`1<List`1<EnvironmentResource>> GetEnvironments(IOctopusSpaceAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Operations.RegisterMachineOperation/<GetMachine>d__39")]
private Task`1<MachineResource> GetMachine(IOctopusSpaceAsyncRepository repository);
    private void ApplyDeploymentTargetChanges(MachineResource machine, IEnumerable`1<EnvironmentResource> environment, IEnumerable`1<TenantResource> tenants);
}
public abstract class Octopus.Client.Operations.RegisterMachineOperationBase : object {
    private IOctopusClientFactory clientFactory;
    [CompilerGeneratedAttribute]
private string <MachineName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MachinePolicy>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TentacleHostname>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TentaclePort>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TentacleThumbprint>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProxyName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowOverwrite>k__BackingField;
    [CompilerGeneratedAttribute]
private CommunicationStyle <CommunicationStyle>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <SubscriptionId>k__BackingField;
    public string MachineName { get; public set; }
    public string MachinePolicy { get; public set; }
    public string TentacleHostname { get; public set; }
    public int TentaclePort { get; public set; }
    public string TentacleThumbprint { get; public set; }
    public string ProxyName { get; public set; }
    public bool AllowOverwrite { get; public set; }
    public CommunicationStyle CommunicationStyle { get; public set; }
    public Uri SubscriptionId { get; public set; }
    public RegisterMachineOperationBase(IOctopusClientFactory clientFactory);
    [CompilerGeneratedAttribute]
public sealed virtual string get_MachineName();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MachineName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_MachinePolicy();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MachinePolicy(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_TentacleHostname();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TentacleHostname(string value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_TentaclePort();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TentaclePort(int value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_TentacleThumbprint();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TentacleThumbprint(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ProxyName();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ProxyName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_AllowOverwrite();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AllowOverwrite(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual CommunicationStyle get_CommunicationStyle();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CommunicationStyle(CommunicationStyle value);
    [CompilerGeneratedAttribute]
public sealed virtual Uri get_SubscriptionId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SubscriptionId(Uri value);
    public sealed virtual void Execute(OctopusServerEndpoint serverEndpoint);
    public sealed virtual void Execute(OctopusRepository repository);
    public abstract virtual void Execute(IOctopusSpaceRepository repository);
    protected MachinePolicyResource GetMachinePolicy(IOctopusSpaceRepository repository);
    protected ProxyResource GetProxy(IOctopusSpaceRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Operations.RegisterMachineOperationBase/<ExecuteAsync>d__43")]
public sealed virtual Task ExecuteAsync(OctopusServerEndpoint serverEndpoint);
    [AsyncStateMachineAttribute("Octopus.Client.Operations.RegisterMachineOperationBase/<ExecuteAsync>d__44")]
public sealed virtual Task ExecuteAsync(OctopusAsyncRepository repository);
    public abstract virtual Task ExecuteAsync(IOctopusSpaceAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Operations.RegisterMachineOperationBase/<GetMachinePolicy>d__46")]
protected Task`1<MachinePolicyResource> GetMachinePolicy(IOctopusSpaceAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Operations.RegisterMachineOperationBase/<GetProxy>d__47")]
protected Task`1<ProxyResource> GetProxy(IOctopusSpaceAsyncRepository repository);
    protected void ApplyBaseChanges(MachineBasedResource machine, MachinePolicyResource machinePolicy, ProxyResource proxy);
    protected virtual EndpointResource GenerateEndpoint(string proxyId);
    protected string GetListeningUri();
    protected static string CouldNotFindByNameMessage(string modelType, String[] missing);
    protected static string CouldNotFindByMultipleMessage(string modelType, String[] missing);
}
public class Octopus.Client.Operations.RegisterWorkerOperation : RegisterMachineOperationBase {
    [CompilerGeneratedAttribute]
private String[] <WorkerPoolNames>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <WorkerPools>k__BackingField;
    [ObsoleteAttribute("Use the WorkerPools property as it supports worker pool names, slugs and Ids.")]
public String[] WorkerPoolNames { get; public set; }
    public String[] WorkerPools { get; public set; }
    public RegisterWorkerOperation(IOctopusClientFactory clientFactory);
    [CompilerGeneratedAttribute]
public sealed virtual String[] get_WorkerPoolNames();
    [CompilerGeneratedAttribute]
public sealed virtual void set_WorkerPoolNames(String[] value);
    [CompilerGeneratedAttribute]
public sealed virtual String[] get_WorkerPools();
    [CompilerGeneratedAttribute]
public sealed virtual void set_WorkerPools(String[] value);
    public virtual void Execute(IOctopusSpaceRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Operations.RegisterWorkerOperation/<ExecuteAsync>d__11")]
public virtual Task ExecuteAsync(IOctopusSpaceAsyncRepository repository);
    private static bool IsExistingWorker(WorkerResource worker);
    protected virtual void PrepareWorkerForReRegistration(WorkerResource workerResource, string proxyId);
    private WorkerResource GetWorker(IOctopusSpaceRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Operations.RegisterWorkerOperation/<GetWorker>d__15")]
private Task`1<WorkerResource> GetWorker(IOctopusSpaceAsyncRepository repository);
    private List`1<WorkerPoolResource> GetWorkerPools(IOctopusSpaceRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Operations.RegisterWorkerOperation/<GetWorkerPools>d__17")]
private Task`1<List`1<WorkerPoolResource>> GetWorkerPools(IOctopusSpaceAsyncRepository repository);
    private static void ModifyOrCreateWorker(IOctopusSpaceRepository repository, WorkerResource worker);
    [AsyncStateMachineAttribute("Octopus.Client.Operations.RegisterWorkerOperation/<ModifyOrCreateWorker>d__19")]
private static Task ModifyOrCreateWorker(IOctopusSpaceAsyncRepository repository, WorkerResource worker);
}
internal class Octopus.Client.Repositories.AccountRepository : BasicRepository`1<AccountResource> {
    public AccountRepository(IOctopusRepository repository);
    public sealed virtual TAccount GetOfType(string idOrHref);
    public sealed virtual List`1<TAccount> GetOfType(String[] ids);
    public sealed virtual TAccount RefreshOfType(TAccount resource);
    public sealed virtual TAccount FindByNameOfType(string name);
    public sealed virtual List`1<TAccount> FindByNamesOfType(IEnumerable`1<string> names);
    private object PathParametersOfType(object pathParameters);
    public sealed virtual void PaginateOfType(Func`2<ResourceCollection`1<TAccount>, bool> getNextPage, object pathParameters);
    public sealed virtual TAccount FindOneOfType(Func`2<TAccount, bool> search, object pathParameters);
    public sealed virtual List`1<TAccount> FindManyOfType(Func`2<TAccount, bool> search, object pathParameters);
    public sealed virtual List`1<TAccount> FindAllOfType(object pathParameters);
    public sealed virtual AccountType DetermineAccountType();
    public sealed virtual AccountUsageResource GetAccountUsage(AccountResource account);
}
internal class Octopus.Client.Repositories.ActionTemplateRepository : BasicRepository`1<ActionTemplateResource> {
    public ActionTemplateRepository(IOctopusRepository repository);
    public sealed virtual List`1<ActionTemplateSearchResource> Search();
    public List`1<ActionTemplateCategoryResource> Categories();
    public sealed virtual ActionTemplateResource GetVersion(ActionTemplateResource resource, int version);
    public sealed virtual ActionUpdateResultResource[] UpdateActions(ActionTemplateResource actionTemplate, ActionsUpdateResource update);
    public sealed virtual void SetLogo(ActionTemplateResource resource, string fileName, Stream contents);
}
internal class Octopus.Client.Repositories.ArchivedEventFileRepository : BasicRepository`1<ArchivedEventFileResource> {
    public ArchivedEventFileRepository(IOctopusRepository repository);
    public sealed virtual Stream GetContent(ArchivedEventFileResource archiveEventFile);
    public sealed virtual ResourceCollection`1<ArchivedEventFileResource> List(int skip, Nullable`1<int> take);
}
internal class Octopus.Client.Repositories.ArtifactRepository : BasicRepository`1<ArtifactResource> {
    public ArtifactRepository(IOctopusRepository repository);
    public sealed virtual Stream GetContent(ArtifactResource artifact);
    public sealed virtual void PutContent(ArtifactResource artifact, Stream contentStream);
    public sealed virtual ResourceCollection`1<ArtifactResource> FindRegarding(IResource resource);
}
internal class Octopus.Client.Repositories.Async.AccountRepository : BasicRepository`1<AccountResource> {
    public AccountRepository(IOctopusAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.AccountRepository/<GetOfType>d__1`1")]
public sealed virtual Task`1<TAccount> GetOfType(string idOrHref);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.AccountRepository/<GetOfType>d__2`1")]
public sealed virtual Task`1<List`1<TAccount>> GetOfType(String[] ids);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.AccountRepository/<RefreshOfType>d__3`1")]
public sealed virtual Task`1<TAccount> RefreshOfType(TAccount resource);
    public sealed virtual Task`1<TAccount> FindByNameOfType(string name);
    public sealed virtual Task`1<List`1<TAccount>> FindByNamesOfType(IEnumerable`1<string> names);
    private object PathParametersOfType(object pathParameters);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.AccountRepository/<PaginateOfType>d__7`1")]
public sealed virtual Task PaginateOfType(Func`2<ResourceCollection`1<TAccount>, bool> getNextPage, object pathParameters);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.AccountRepository/<FindOneOfType>d__8`1")]
public sealed virtual Task`1<TAccount> FindOneOfType(Func`2<TAccount, bool> search, object pathParameters);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.AccountRepository/<FindManyOfType>d__9`1")]
public sealed virtual Task`1<List`1<TAccount>> FindManyOfType(Func`2<TAccount, bool> search, object pathParameters);
    public sealed virtual Task`1<List`1<TAccount>> FindAllOfType(object pathParameters);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.AccountRepository/<GetAccountUsage>d__11")]
public sealed virtual Task`1<AccountUsageResource> GetAccountUsage(AccountResource account);
    public sealed virtual AccountType DetermineAccountType();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<AccountResource> <>n__0(string idOrHref);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<List`1<AccountResource>> <>n__1(String[] ids);
    [DebuggerHiddenAttribute]
[CompilerGeneratedAttribute]
private Task`1<AccountResource> <>n__2(AccountResource resource);
}
internal class Octopus.Client.Repositories.Async.ActionTemplateRepository : BasicRepository`1<ActionTemplateResource> {
    public ActionTemplateRepository(IOctopusAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.ActionTemplateRepository/<Search>d__1")]
public sealed virtual Task`1<List`1<ActionTemplateSearchResource>> Search();
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.ActionTemplateRepository/<Categories>d__2")]
public Task`1<List`1<ActionTemplateCategoryResource>> Categories();
    public sealed virtual Task`1<ActionTemplateResource> GetVersion(ActionTemplateResource resource, int version);
    public sealed virtual Task`1<ActionUpdateResultResource[]> UpdateActions(ActionTemplateResource actionTemplate, ActionsUpdateResource update);
    public sealed virtual Task SetLogo(ActionTemplateResource resource, string fileName, Stream contents);
}
internal class Octopus.Client.Repositories.Async.ArchivedEventFileRepository : BasicRepository`1<ArchivedEventFileResource> {
    public ArchivedEventFileRepository(IOctopusAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.ArchivedEventFileRepository/<GetContent>d__1")]
public sealed virtual Task`1<Stream> GetContent(ArchivedEventFileResource archiveEventFile);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.ArchivedEventFileRepository/<List>d__2")]
public sealed virtual Task`1<ResourceCollection`1<ArchivedEventFileResource>> List(int skip, Nullable`1<int> take);
}
internal class Octopus.Client.Repositories.Async.ArtifactRepository : BasicRepository`1<ArtifactResource> {
    public ArtifactRepository(IOctopusAsyncRepository repository);
    public sealed virtual Task`1<Stream> GetContent(ArtifactResource artifact);
    public sealed virtual Task PutContent(ArtifactResource artifact, Stream contentStream);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.ArtifactRepository/<FindRegarding>d__3")]
public sealed virtual Task`1<ResourceCollection`1<ArtifactResource>> FindRegarding(IResource resource);
}
internal class Octopus.Client.Repositories.Async.BackupRepository : object {
    private IOctopusAsyncRepository repository;
    private IOctopusAsyncClient client;
    public BackupRepository(IOctopusAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BackupRepository/<GetConfiguration>d__3")]
public sealed virtual Task`1<BackupConfigurationResource> GetConfiguration();
    public sealed virtual Task`1<BackupConfigurationResource> ModifyConfiguration(BackupConfigurationResource backupConfiguration);
}
internal abstract class Octopus.Client.Repositories.Async.BasicRepository`1 : object {
    private Func`2<IOctopusAsyncRepository, Task`1<string>> getCollectionLinkName;
    protected string CollectionLinkName;
    private SemanticVersion minimumRequiredVersion;
    private bool hasMinimumRequiredVersion;
    [CompilerGeneratedAttribute]
private IOctopusAsyncClient <Client>k__BackingField;
    [CompilerGeneratedAttribute]
private IOctopusAsyncRepository <Repository>k__BackingField;
    public IOctopusAsyncClient Client { get; }
    public IOctopusAsyncRepository Repository { get; }
    protected BasicRepository`1(IOctopusAsyncRepository repository, string collectionLinkName, Func`2<IOctopusAsyncRepository, Task`1<string>> getCollectionLinkName);
    protected virtual Dictionary`2<string, object> GetAdditionalQueryParameters();
    [CompilerGeneratedAttribute]
public sealed virtual IOctopusAsyncClient get_Client();
    [CompilerGeneratedAttribute]
public IOctopusAsyncRepository get_Repository();
    protected virtual Task CheckSpaceResource(IHaveSpaceResource spaceResource);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BasicRepository`1/<ServerSupportsSpaces>d__13")]
private Task`1<bool> ServerSupportsSpaces();
    protected void MinimumCompatibleVersion(string version);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BasicRepository`1/<AssertSpaceIdMatchesResource>d__15")]
private Task AssertSpaceIdMatchesResource(TResource resource);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BasicRepository`1/<ThrowIfServerVersionIsNotCompatible>d__16")]
protected Task`1<bool> ThrowIfServerVersionIsNotCompatible(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BasicRepository`1/<EnsureServerIsMinimumVersion>d__17")]
protected Task EnsureServerIsMinimumVersion(SemanticVersion requiredVersion, Func`2<string, string> messageGenerator, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public virtual Task`1<TResource> Create(TResource resource, object pathParameters);
    public virtual Task`1<TResource> Create(TResource resource, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BasicRepository`1/<Create>d__20")]
public virtual Task`1<TResource> Create(TResource resource, object pathParameters, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public virtual Task`1<TResource> Modify(TResource resource);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BasicRepository`1/<Modify>d__22")]
public virtual Task`1<TResource> Modify(TResource resource, CancellationToken cancellationToken);
    public sealed virtual Task Delete(TResource resource);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BasicRepository`1/<Delete>d__24")]
public sealed virtual Task Delete(TResource resource, CancellationToken cancellationToken);
    public sealed virtual Task Paginate(Func`2<ResourceCollection`1<TResource>, bool> getNextPage, string path, object pathParameters);
    public sealed virtual Task Paginate(Func`2<ResourceCollection`1<TResource>, bool> getNextPage, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BasicRepository`1/<Paginate>d__27")]
public sealed virtual Task Paginate(Func`2<ResourceCollection`1<TResource>, bool> getNextPage, string path, object pathParameters, CancellationToken cancellationToken);
    public sealed virtual Task`1<TResource> FindOne(Func`2<TResource, bool> search, string path, object pathParameters);
    public sealed virtual Task`1<TResource> FindOne(Func`2<TResource, bool> search, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BasicRepository`1/<FindOne>d__30")]
public sealed virtual Task`1<TResource> FindOne(Func`2<TResource, bool> search, string path, object pathParameters, CancellationToken cancellationToken);
    public sealed virtual Task`1<List`1<TResource>> FindMany(Func`2<TResource, bool> search, string path, object pathParameters);
    public sealed virtual Task`1<List`1<TResource>> FindMany(Func`2<TResource, bool> search, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BasicRepository`1/<FindMany>d__33")]
public sealed virtual Task`1<List`1<TResource>> FindMany(Func`2<TResource, bool> search, string path, object pathParameters, CancellationToken cancellationToken);
    public sealed virtual Task`1<List`1<TResource>> FindAll(string path, object pathParameters);
    public sealed virtual Task`1<List`1<TResource>> FindAll(CancellationToken cancellationToken);
    public sealed virtual Task`1<List`1<TResource>> FindAll(string path, object pathParameters, CancellationToken cancellationToken);
    public sealed virtual Task`1<List`1<TResource>> GetAll();
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BasicRepository`1/<GetAll>d__38")]
public sealed virtual Task`1<List`1<TResource>> GetAll(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BasicRepository`1/<FindByPartialName>d__39")]
public sealed virtual Task`1<List`1<TResource>> FindByPartialName(string partialName, string path, object pathParameters, CancellationToken cancellationToken);
    public sealed virtual Task`1<List`1<TResource>> FindByPartialName(string partialName, CancellationToken cancellationToken);
    public sealed virtual Task`1<TResource> FindByName(string name, string path, object pathParameters);
    public sealed virtual Task`1<TResource> FindByName(string name, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BasicRepository`1/<FindByName>d__43")]
public sealed virtual Task`1<TResource> FindByName(string name, string path, object pathParameters, CancellationToken cancellationToken);
    public sealed virtual Task`1<List`1<TResource>> FindByNames(IEnumerable`1<string> names, string path, object pathParameters);
    public sealed virtual Task`1<List`1<TResource>> FindByNames(IEnumerable`1<string> names, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BasicRepository`1/<FindByNames>d__46")]
public sealed virtual Task`1<List`1<TResource>> FindByNames(IEnumerable`1<string> names, string path, object pathParameters, CancellationToken cancellationToken);
    public sealed virtual Task`1<TResource> FindBySlug(string slug, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BasicRepository`1/<FindBySlug>d__48")]
public sealed virtual Task`1<TResource> FindBySlug(string slug, string path, object pathParameters, CancellationToken cancellationToken);
    public sealed virtual Task`1<List`1<TResource>> FindBySlugs(IEnumerable`1<string> slugs, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BasicRepository`1/<FindBySlugs>d__50")]
public sealed virtual Task`1<List`1<TResource>> FindBySlugs(IEnumerable`1<string> slugs, string path, object pathParameters, CancellationToken cancellationToken);
    public sealed virtual Task`1<TResource> Get(string idOrHref);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BasicRepository`1/<Get>d__52")]
public sealed virtual Task`1<TResource> Get(string idOrHref, CancellationToken cancellationToken);
    public virtual Task`1<List`1<TResource>> Get(String[] ids);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BasicRepository`1/<Get>d__54")]
public virtual Task`1<List`1<TResource>> Get(CancellationToken cancellationToken, String[] ids);
    public sealed virtual Task`1<TResource> Refresh(TResource resource);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BasicRepository`1/<Refresh>d__56")]
public sealed virtual Task`1<TResource> Refresh(TResource resource, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BasicRepository`1/<EnrichSpaceId>d__57")]
protected virtual Task EnrichSpaceId(TResource resource);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BasicRepository`1/<ResolveLink>d__58")]
protected Task`1<string> ResolveLink(CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
private string <ThrowIfServerVersionIsNotCompatible>b__16_0(string currentServerVersion);
}
internal class Octopus.Client.Repositories.Async.BuildInformationRepository : object {
    private IOctopusAsyncRepository repository;
    private static ILog Logger;
    public BuildInformationRepository(IOctopusAsyncRepository repository);
    private static BuildInformationRepository();
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BuildInformationRepository/<Get>d__3")]
public sealed virtual Task`1<OctopusPackageVersionBuildInformationMappedResource> Get(string id);
    public sealed virtual Task`1<OctopusPackageVersionBuildInformationMappedResource> Push(string packageId, string version, OctopusBuildInformation octopusMetadata, bool replaceExisting);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BuildInformationRepository/<Push>d__5")]
public sealed virtual Task`1<OctopusPackageVersionBuildInformationMappedResource> Push(string packageId, string version, OctopusBuildInformation octopusMetadata, OverwriteMode overwriteMode);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BuildInformationRepository/<ListBuilds>d__6")]
public sealed virtual Task`1<ResourceCollection`1<OctopusPackageVersionBuildInformationMappedResource>> ListBuilds(string packageId, int skip, int take);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BuildInformationRepository/<LatestBuilds>d__7")]
public sealed virtual Task`1<ResourceCollection`1<OctopusPackageVersionBuildInformationMappedResource>> LatestBuilds(int skip, int take);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BuildInformationRepository/<Delete>d__8")]
public sealed virtual Task Delete(OctopusPackageVersionBuildInformationMappedResource buildInformation);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BuildInformationRepository/<DeleteBuilds>d__9")]
public sealed virtual Task DeleteBuilds(IReadOnlyList`1<OctopusPackageVersionBuildInformationMappedResource> builds);
}
internal class Octopus.Client.Repositories.Async.BuiltInPackageRepositoryRepository : object {
    private IOctopusAsyncRepository repository;
    private static ILog Logger;
    public BuiltInPackageRepositoryRepository(IOctopusAsyncRepository repository);
    private static BuiltInPackageRepositoryRepository();
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BuiltInPackageRepositoryRepository/<PushPackage>d__3")]
public sealed virtual Task`1<PackageFromBuiltInFeedResource> PushPackage(string fileName, Stream contents, OverwriteMode overwriteMode);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BuiltInPackageRepositoryRepository/<PushPackage>d__4")]
public sealed virtual Task`1<PackageFromBuiltInFeedResource> PushPackage(string fileName, Stream contents, bool replaceExisting);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BuiltInPackageRepositoryRepository/<PushPackage>d__5")]
public sealed virtual Task`1<PackageFromBuiltInFeedResource> PushPackage(string fileName, Stream contents, bool replaceExisting, bool useDeltaCompression);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BuiltInPackageRepositoryRepository/<PushPackage>d__6")]
public sealed virtual Task`1<PackageFromBuiltInFeedResource> PushPackage(string fileName, Stream contents, OverwriteMode overwriteMode, bool useDeltaCompression);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BuiltInPackageRepositoryRepository/<VerifyTransfer>d__7")]
private Task`1<PackageFromBuiltInFeedResource> VerifyTransfer(string fileName, Stream contents);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BuiltInPackageRepositoryRepository/<TryFindPackage>d__8")]
private Task`1<PackageFromBuiltInFeedResource> TryFindPackage(string packageId, SemanticVersion version);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BuiltInPackageRepositoryRepository/<AttemptDeltaPush>d__9")]
private Task`1<PackageFromBuiltInFeedResource> AttemptDeltaPush(string fileName, Stream contents, OverwriteMode overwriteMode);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BuiltInPackageRepositoryRepository/<ListPackages>d__10")]
public sealed virtual Task`1<ResourceCollection`1<PackageFromBuiltInFeedResource>> ListPackages(string packageId, int skip, int take);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BuiltInPackageRepositoryRepository/<GetPackage>d__11")]
public sealed virtual Task`1<PackageFromBuiltInFeedResource> GetPackage(string packageId, string version);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BuiltInPackageRepositoryRepository/<LatestPackages>d__12")]
public sealed virtual Task`1<ResourceCollection`1<PackageFromBuiltInFeedResource>> LatestPackages(int skip, int take);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BuiltInPackageRepositoryRepository/<DeletePackage>d__13")]
public sealed virtual Task DeletePackage(PackageResource package);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.BuiltInPackageRepositoryRepository/<DeletePackages>d__14")]
public sealed virtual Task DeletePackages(IReadOnlyList`1<PackageResource> packages);
}
internal class Octopus.Client.Repositories.Async.CertificateConfigurationRepository : BasicRepository`1<CertificateConfigurationResource> {
    public CertificateConfigurationRepository(IOctopusAsyncRepository repository);
    public sealed virtual Task`1<CertificateConfigurationResource> GetOctopusCertificate();
    public sealed virtual Task`1<Stream> GetPublicCertificate(CertificateConfigurationResource certificateConfiguration);
}
internal class Octopus.Client.Repositories.Async.CertificateRepository : BasicRepository`1<CertificateResource> {
    public CertificateRepository(IOctopusAsyncRepository repository);
    public sealed virtual Task`1<Stream> Export(CertificateResource certificate, Nullable`1<CertificateFormat> format, string password, bool includePrivateKey);
    public sealed virtual Task`1<Stream> ExportAsPem(CertificateResource certificate, bool includePrivateKey, CertificateExportPemOptions pemOptions);
    public sealed virtual Task`1<CertificateResource> Replace(CertificateResource certificate, string certificateData, string password);
    public sealed virtual Task Archive(CertificateResource certificate);
    public sealed virtual Task UnArchive(CertificateResource certificate);
    public sealed virtual Task`1<CertificateConfigurationResource> GetOctopusCertificate();
}
internal class Octopus.Client.Repositories.Async.ChannelRepository : BasicRepository`1<ChannelResource> {
    public ChannelRepository(IOctopusAsyncRepository repository);
    public sealed virtual Task`1<ChannelResource> FindByName(ProjectResource project, string name);
    public sealed virtual Task`1<ChannelEditor> CreateOrModify(ProjectResource project, string name);
    public sealed virtual Task`1<ChannelEditor> CreateOrModify(ProjectResource project, string name, string description);
    public sealed virtual Task`1<ResourceCollection`1<ReleaseResource>> GetReleases(ChannelResource channel, int skip, Nullable`1<int> take, string searchByVersion);
    public sealed virtual Task`1<IReadOnlyList`1<ReleaseResource>> GetAllReleases(ChannelResource channel);
    public sealed virtual Task`1<ReleaseResource> GetReleaseByVersion(ChannelResource channel, string version);
}
internal class Octopus.Client.Repositories.Async.CommunityActionTemplateRepository : BasicRepository`1<CommunityActionTemplateResource> {
    public CommunityActionTemplateRepository(IOctopusAsyncRepository repository);
    public sealed virtual Task Install(CommunityActionTemplateResource resource);
    public sealed virtual Task UpdateInstallation(CommunityActionTemplateResource resource);
    public sealed virtual Task`1<ActionTemplateResource> GetInstalledTemplate(CommunityActionTemplateResource resource);
}
internal class Octopus.Client.Repositories.Async.ConfigurationRepository : object {
    private IOctopusAsyncRepository repository;
    private string collectionLinkName;
    public ConfigurationRepository(IOctopusAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.ConfigurationRepository/<Get>d__3`1")]
public sealed virtual Task`1<T> Get();
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.ConfigurationRepository/<Modify>d__4`1")]
public sealed virtual Task`1<T> Modify(T configurationResource);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.ConfigurationRepository/<GetConfigurationItem>d__5")]
private Task`1<ConfigurationItemResource> GetConfigurationItem(IResource instance);
}
internal class Octopus.Client.Repositories.Async.DashboardConfigurationRepository : object {
    private IOctopusAsyncRepository repository;
    public DashboardConfigurationRepository(IOctopusAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.DashboardConfigurationRepository/<GetDashboardConfiguration>d__2")]
public sealed virtual Task`1<DashboardConfigurationResource> GetDashboardConfiguration();
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.DashboardConfigurationRepository/<ModifyDashboardConfiguration>d__3")]
public sealed virtual Task`1<DashboardConfigurationResource> ModifyDashboardConfiguration(DashboardConfigurationResource resource);
}
internal class Octopus.Client.Repositories.Async.DashboardRepository : object {
    private IOctopusAsyncRepository repository;
    public DashboardRepository(IOctopusAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.DashboardRepository/<GetDashboard>d__2")]
public sealed virtual Task`1<DashboardResource> GetDashboard();
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.DashboardRepository/<GetDynamicDashboard>d__3")]
public sealed virtual Task`1<DashboardResource> GetDynamicDashboard(String[] projects, String[] environments, DashboardItemsOptions dashboardItemsOptions);
}
internal class Octopus.Client.Repositories.Async.DefectsRepository : BasicRepository`1<DefectResource> {
    public DefectsRepository(IOctopusAsyncRepository repository);
    public sealed virtual Task`1<ResourceCollection`1<DefectResource>> GetDefects(ReleaseResource release);
    public sealed virtual Task RaiseDefect(ReleaseResource release, string description);
    public sealed virtual Task ResolveDefect(ReleaseResource release);
}
public class Octopus.Client.Repositories.Async.DeploymentFreezeRepository : object {
    [CompilerGeneratedAttribute]
private IOctopusAsyncClient <client>P;
    public DeploymentFreezeRepository(IOctopusAsyncClient client);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.DeploymentFreezeRepository/<Get>d__2")]
public sealed virtual Task`1<GetDeploymentFreezeByIdResponse> Get(GetDeploymentFreezeByIdRequest request, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.DeploymentFreezeRepository/<Get>d__3")]
public sealed virtual Task`1<GetDeploymentFreezesResponse> Get(GetDeploymentFreezesRequest request, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.DeploymentFreezeRepository/<Create>d__4")]
public sealed virtual Task`1<CreateDeploymentFreezeResponse> Create(CreateDeploymentFreezeCommand command, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.DeploymentFreezeRepository/<Modify>d__5")]
public sealed virtual Task`1<ModifyDeploymentFreezeResponse> Modify(ModifyDeploymentFreezeCommand command, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.DeploymentFreezeRepository/<Delete>d__6")]
public sealed virtual Task`1<DeleteDeploymentFreezeResponse> Delete(DeleteDeploymentFreezeCommand command, CancellationToken cancellationToken);
}
internal class Octopus.Client.Repositories.Async.DeploymentProcessRepository : BasicRepository`1<DeploymentProcessResource> {
    public DeploymentProcessRepository(IOctopusAsyncRepository repository);
    public sealed virtual Task`1<ReleaseTemplateResource> GetTemplate(DeploymentProcessResource deploymentProcess, ChannelResource channel);
    public sealed virtual Task`1<ReleaseTemplateResource> GetTemplate(DeploymentProcessResource deploymentProcess, ChannelResource channel, CancellationToken cancellationToken);
    public sealed virtual Task`1<DeploymentProcessResource> Get(ProjectResource projectResource, string gitRef);
    public sealed virtual Task`1<DeploymentProcessResource> Get(ProjectResource projectResource, string gitRef, CancellationToken cancellationToken);
    public sealed virtual Task`1<DeploymentProcessResource> Get(ProjectResource projectResource);
    public sealed virtual Task`1<DeploymentProcessResource> Get(ProjectResource projectResource, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.DeploymentProcessRepository/<Modify>d__7")]
public sealed virtual Task`1<DeploymentProcessResource> Modify(DeploymentProcessResource deploymentSettings, string commitMessage);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.DeploymentProcessRepository/<Modify>d__8")]
public sealed virtual Task`1<DeploymentProcessResource> Modify(DeploymentProcessResource deploymentSettings, string commitMessage, CancellationToken cancellationToken);
}
internal class Octopus.Client.Repositories.Async.DeploymentRepository : BasicRepository`1<DeploymentResource> {
    public DeploymentRepository(IOctopusAsyncRepository repository);
    public sealed virtual Task`1<TaskResource> GetTask(DeploymentResource resource);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.DeploymentRepository/<FindBy>d__2")]
public sealed virtual Task`1<ResourceCollection`1<DeploymentResource>> FindBy(String[] projects, String[] environments, int skip, Nullable`1<int> take);
    [ObsoleteAttribute("This method is not a find all, it still requires paging. So it has been renamed to `FindBy`")]
public sealed virtual Task`1<ResourceCollection`1<DeploymentResource>> FindAll(String[] projects, String[] environments, int skip, Nullable`1<int> take);
    public sealed virtual Task Paginate(String[] projects, String[] environments, Func`2<ResourceCollection`1<DeploymentResource>, bool> getNextPage);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.DeploymentRepository/<Paginate>d__5")]
public sealed virtual Task Paginate(String[] projects, String[] environments, String[] tenants, Func`2<ResourceCollection`1<DeploymentResource>, bool> getNextPage);
}
internal class Octopus.Client.Repositories.Async.DeploymentSettingsRepository : object {
    private IOctopusAsyncClient client;
    public DeploymentSettingsRepository(IOctopusAsyncRepository repository);
    public sealed virtual Task`1<DeploymentSettingsResource> Get(ProjectResource projectResource, string gitRef);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.DeploymentSettingsRepository/<Get>d__3")]
public sealed virtual Task`1<DeploymentSettingsResource> Get(ProjectResource projectResource, string gitRef, CancellationToken cancellationToken);
    public sealed virtual Task`1<DeploymentSettingsResource> Modify(DeploymentSettingsResource resource, string commitMessage);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.DeploymentSettingsRepository/<Modify>d__5")]
public sealed virtual Task`1<DeploymentSettingsResource> Modify(DeploymentSettingsResource resource, string commitMessage, CancellationToken cancellationToken);
    public sealed virtual Task`1<DeploymentSettingsResource> Get(ProjectResource projectResource);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.DeploymentSettingsRepository/<Get>d__7")]
public sealed virtual Task`1<DeploymentSettingsResource> Get(ProjectResource projectResource, CancellationToken cancellationToken);
    public sealed virtual Task`1<DeploymentSettingsResource> Modify(ProjectResource projectResource, DeploymentSettingsResource deploymentSettings);
    public sealed virtual Task`1<DeploymentSettingsResource> Modify(ProjectResource projectResource, DeploymentSettingsResource deploymentSettings, CancellationToken cancellationToken);
    public sealed virtual Task`1<DeploymentSettingsResource> Modify(DeploymentSettingsResource deploymentSettings);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.DeploymentSettingsRepository/<Modify>d__11")]
public sealed virtual Task`1<DeploymentSettingsResource> Modify(DeploymentSettingsResource deploymentSettings, CancellationToken cancellationToken);
}
internal class Octopus.Client.Repositories.Async.EnvironmentRepository : BasicRepository`1<EnvironmentResource> {
    public EnvironmentRepository(IOctopusAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.EnvironmentRepository/<GetMachines>d__1")]
public sealed virtual Task`1<List`1<MachineResource>> GetMachines(EnvironmentResource environment, Nullable`1<int> skip, Nullable`1<int> take, string partialName, string roles, Nullable`1<bool> isDisabled, string healthStatuses, string commStyles, string tenantIds, string tenantTags);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.EnvironmentRepository/<Summary>d__2")]
public sealed virtual Task`1<EnvironmentsSummaryResource> Summary(string ids, string partialName, string machinePartialName, string roles, Nullable`1<bool> isDisabled, string healthStatuses, string commStyles, string tenantIds, string tenantTags, Nullable`1<bool> hideEmptyEnvironments);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.EnvironmentRepository/<Sort>d__3")]
public sealed virtual Task Sort(String[] environmentIdsInOrder);
    public sealed virtual Task`1<EnvironmentEditor> CreateOrModify(string name);
    public sealed virtual Task`1<EnvironmentEditor> CreateOrModify(string name, string description);
    public sealed virtual Task`1<EnvironmentEditor> CreateOrModify(string name, string description, bool allowDynamicInfrastructure);
}
internal class Octopus.Client.Repositories.Async.EventRepository : MixedScopeBaseRepository`1<EventResource> {
    public EventRepository(IOctopusAsyncRepository repository);
    private EventRepository(IOctopusAsyncRepository repository, SpaceContext userDefinedSpaceContext);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.EventRepository/<List>d__2")]
[ObsoleteAttribute("This method was deprecated in Octopus 3.4.  Please use the other List method by providing named arguments.")]
public sealed virtual Task`1<ResourceCollection`1<EventResource>> List(int skip, string filterByUserId, string regardingDocumentId, bool includeInternalEvents);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.EventRepository/<List>d__3")]
public sealed virtual Task`1<ResourceCollection`1<EventResource>> List(int skip, Nullable`1<int> take, string from, string to, string regarding, string regardingAny, bool includeInternalEvents, string user, string users, string projects, string environments, string eventGroups, string eventCategories, string tenants, string tags, Nullable`1<long> fromAutoId, Nullable`1<long> toAutoId, string documentTypes, string eventAgents, string projectGroups);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.EventRepository/<GetDocumentTypes>d__4")]
public sealed virtual Task`1<IReadOnlyList`1<DocumentTypeResource>> GetDocumentTypes();
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.EventRepository/<GetAgents>d__5")]
public sealed virtual Task`1<IReadOnlyList`1<EventAgentResource>> GetAgents();
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.EventRepository/<GetCategories>d__6")]
public sealed virtual Task`1<IReadOnlyList`1<EventCategoryResource>> GetCategories();
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.EventRepository/<GetGroups>d__7")]
public sealed virtual Task`1<IReadOnlyList`1<EventGroupResource>> GetGroups();
    public sealed virtual IEventRepository UsingContext(SpaceContext spaceContext);
}
internal class Octopus.Client.Repositories.Async.FeaturesConfigurationRepository : object {
    private IOctopusAsyncRepository repository;
    public FeaturesConfigurationRepository(IOctopusAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.FeaturesConfigurationRepository/<GetFeaturesConfiguration>d__2")]
public sealed virtual Task`1<FeaturesConfigurationResource> GetFeaturesConfiguration();
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.FeaturesConfigurationRepository/<ModifyFeaturesConfiguration>d__3")]
public sealed virtual Task`1<FeaturesConfigurationResource> ModifyFeaturesConfiguration(FeaturesConfigurationResource resource);
}
internal class Octopus.Client.Repositories.Async.FeedRepository : BasicRepository`1<FeedResource> {
    public FeedRepository(IOctopusAsyncRepository repository);
    public sealed virtual Task`1<List`1<PackageResource>> GetVersions(FeedResource feed, String[] packageIds);
    public sealed virtual Task`1<List`1<PackageResource>> GetVersions(FeedResource feed, String[] packageIds, CancellationToken cancellationToken);
}
internal class Octopus.Client.Repositories.Async.GitCredentialRepository : BasicRepository`1<GitCredentialResource> {
    public GitCredentialRepository(IOctopusAsyncRepository repository);
    public sealed virtual Task`1<GitCredentialUsage> Usage(GitCredentialResource credential);
}
public interface Octopus.Client.Repositories.Async.IAccountRepository {
    public abstract virtual AccountType DetermineAccountType();
    public abstract virtual Task`1<TAccount> GetOfType(string idOrHref);
    public abstract virtual Task`1<List`1<TAccount>> GetOfType(String[] ids);
    public abstract virtual Task`1<TAccount> RefreshOfType(TAccount resource);
    public abstract virtual Task`1<TAccount> FindByNameOfType(string name);
    public abstract virtual Task`1<List`1<TAccount>> FindByNamesOfType(IEnumerable`1<string> names);
    public abstract virtual Task PaginateOfType(Func`2<ResourceCollection`1<TAccount>, bool> getNextPage, object pathParameters);
    public abstract virtual Task`1<TAccount> FindOneOfType(Func`2<TAccount, bool> search, object pathParameters);
    public abstract virtual Task`1<List`1<TAccount>> FindManyOfType(Func`2<TAccount, bool> search, object pathParameters);
    public abstract virtual Task`1<List`1<TAccount>> FindAllOfType(object pathParameters);
    public abstract virtual Task`1<AccountUsageResource> GetAccountUsage(AccountResource account);
}
public interface Octopus.Client.Repositories.Async.IActionTemplateRepository {
    public abstract virtual Task`1<List`1<ActionTemplateSearchResource>> Search();
    public abstract virtual Task`1<ActionTemplateResource> GetVersion(ActionTemplateResource resource, int version);
    public abstract virtual Task`1<ActionUpdateResultResource[]> UpdateActions(ActionTemplateResource actionTemplate, ActionsUpdateResource update);
    public abstract virtual Task SetLogo(ActionTemplateResource resource, string fileName, Stream contents);
}
public interface Octopus.Client.Repositories.Async.IArchivedEventFileRepository {
    public abstract virtual Task`1<Stream> GetContent(ArchivedEventFileResource archiveEventFile);
    public abstract virtual Task`1<ResourceCollection`1<ArchivedEventFileResource>> List(int skip, Nullable`1<int> take);
}
public interface Octopus.Client.Repositories.Async.IArtifactRepository {
    public abstract virtual Task`1<Stream> GetContent(ArtifactResource artifact);
    public abstract virtual Task PutContent(ArtifactResource artifact, Stream contentStream);
    public abstract virtual Task`1<ResourceCollection`1<ArtifactResource>> FindRegarding(IResource resource);
}
public interface Octopus.Client.Repositories.Async.IBackupRepository {
    public abstract virtual Task`1<BackupConfigurationResource> GetConfiguration();
    public abstract virtual Task`1<BackupConfigurationResource> ModifyConfiguration(BackupConfigurationResource backupConfiguration);
}
public interface Octopus.Client.Repositories.Async.IBuildInformationRepository {
    public abstract virtual Task`1<OctopusPackageVersionBuildInformationMappedResource> Get(string id);
    public abstract virtual Task`1<OctopusPackageVersionBuildInformationMappedResource> Push(string packageId, string version, OctopusBuildInformation octopusMetadata, OverwriteMode overwriteMode);
    [ObsoleteAttribute]
public abstract virtual Task`1<OctopusPackageVersionBuildInformationMappedResource> Push(string packageId, string version, OctopusBuildInformation octopusMetadata, bool replaceExisting);
    public abstract virtual Task`1<ResourceCollection`1<OctopusPackageVersionBuildInformationMappedResource>> ListBuilds(string packageId, int skip, int take);
    public abstract virtual Task`1<ResourceCollection`1<OctopusPackageVersionBuildInformationMappedResource>> LatestBuilds(int skip, int take);
    public abstract virtual Task Delete(OctopusPackageVersionBuildInformationMappedResource buildInformation);
    public abstract virtual Task DeleteBuilds(IReadOnlyList`1<OctopusPackageVersionBuildInformationMappedResource> builds);
}
public interface Octopus.Client.Repositories.Async.IBuiltInPackageRepositoryRepository {
    public abstract virtual Task`1<PackageFromBuiltInFeedResource> PushPackage(string fileName, Stream contents, bool replaceExisting);
    public abstract virtual Task`1<PackageFromBuiltInFeedResource> PushPackage(string fileName, Stream contents, bool replaceExisting, bool useDeltaCompression);
    public abstract virtual Task`1<PackageFromBuiltInFeedResource> PushPackage(string fileName, Stream contents, OverwriteMode overwriteMode);
    public abstract virtual Task`1<PackageFromBuiltInFeedResource> PushPackage(string fileName, Stream contents, OverwriteMode overwriteMode, bool useDeltaCompression);
    public abstract virtual Task`1<ResourceCollection`1<PackageFromBuiltInFeedResource>> ListPackages(string packageId, int skip, int take);
    public abstract virtual Task`1<ResourceCollection`1<PackageFromBuiltInFeedResource>> LatestPackages(int skip, int take);
    public abstract virtual Task DeletePackage(PackageResource package);
    public abstract virtual Task DeletePackages(IReadOnlyList`1<PackageResource> packages);
    public abstract virtual Task`1<PackageFromBuiltInFeedResource> GetPackage(string packageId, string version);
}
public interface Octopus.Client.Repositories.Async.ICanExtendSpaceContext`1 {
    public abstract virtual T UsingContext(SpaceContext spaceContext);
}
public interface Octopus.Client.Repositories.Async.ICertificateConfigurationRepository {
    public abstract virtual Task`1<CertificateConfigurationResource> GetOctopusCertificate();
    public abstract virtual Task`1<Stream> GetPublicCertificate(CertificateConfigurationResource certificateConfiguration);
}
public interface Octopus.Client.Repositories.Async.ICertificateRepository {
    public abstract virtual Task`1<Stream> Export(CertificateResource certificate, Nullable`1<CertificateFormat> format, string password, bool includePrivateKey);
    public abstract virtual Task`1<Stream> ExportAsPem(CertificateResource certificate, bool includePrivateKey, CertificateExportPemOptions pemOptions);
    public abstract virtual Task`1<CertificateResource> Replace(CertificateResource certificate, string certificateData, string password);
    public abstract virtual Task Archive(CertificateResource certificate);
    public abstract virtual Task UnArchive(CertificateResource certificate);
    public abstract virtual Task`1<CertificateConfigurationResource> GetOctopusCertificate();
}
public interface Octopus.Client.Repositories.Async.IChannelRepository {
    public abstract virtual Task`1<ChannelResource> FindByName(ProjectResource project, string name);
    public abstract virtual Task`1<ChannelEditor> CreateOrModify(ProjectResource project, string name);
    public abstract virtual Task`1<ChannelEditor> CreateOrModify(ProjectResource project, string name, string description);
    public abstract virtual Task`1<ResourceCollection`1<ReleaseResource>> GetReleases(ChannelResource channel, int skip, Nullable`1<int> take, string searchByVersion);
    public abstract virtual Task`1<IReadOnlyList`1<ReleaseResource>> GetAllReleases(ChannelResource channel);
    public abstract virtual Task`1<ReleaseResource> GetReleaseByVersion(ChannelResource channel, string version);
}
public interface Octopus.Client.Repositories.Async.ICommunityActionTemplateRepository {
    public abstract virtual Task`1<ActionTemplateResource> GetInstalledTemplate(CommunityActionTemplateResource resource);
    public abstract virtual Task Install(CommunityActionTemplateResource resource);
    public abstract virtual Task UpdateInstallation(CommunityActionTemplateResource resource);
}
public interface Octopus.Client.Repositories.Async.IConfigurationRepository {
    public abstract virtual Task`1<T> Get();
    public abstract virtual Task`1<T> Modify(T configurationResource);
}
public interface Octopus.Client.Repositories.Async.ICreate`1 {
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<TResource> Create(TResource resource, object pathParameters);
    public abstract virtual Task`1<TResource> Create(TResource resource, CancellationToken cancellationToken);
    public abstract virtual Task`1<TResource> Create(TResource resource, object pathParameters, CancellationToken cancellationToken);
}
public interface Octopus.Client.Repositories.Async.IDashboardConfigurationRepository {
    public abstract virtual Task`1<DashboardConfigurationResource> GetDashboardConfiguration();
    public abstract virtual Task`1<DashboardConfigurationResource> ModifyDashboardConfiguration(DashboardConfigurationResource resource);
}
public interface Octopus.Client.Repositories.Async.IDashboardRepository {
    public abstract virtual Task`1<DashboardResource> GetDashboard();
    public abstract virtual Task`1<DashboardResource> GetDynamicDashboard(String[] projects, String[] environments, DashboardItemsOptions dashboardItemsOptions);
}
public interface Octopus.Client.Repositories.Async.IDefectsRepository {
    public abstract virtual Task`1<ResourceCollection`1<DefectResource>> GetDefects(ReleaseResource release);
    public abstract virtual Task RaiseDefect(ReleaseResource release, string description);
    public abstract virtual Task ResolveDefect(ReleaseResource release);
}
public interface Octopus.Client.Repositories.Async.IDelete`1 {
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task Delete(TResource resource);
    public abstract virtual Task Delete(TResource resource, CancellationToken cancellationToken);
}
public interface Octopus.Client.Repositories.Async.IDeploymentFreezeRepository {
    public abstract virtual Task`1<GetDeploymentFreezeByIdResponse> Get(GetDeploymentFreezeByIdRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<GetDeploymentFreezesResponse> Get(GetDeploymentFreezesRequest request, CancellationToken cancellationToken);
    public abstract virtual Task`1<CreateDeploymentFreezeResponse> Create(CreateDeploymentFreezeCommand command, CancellationToken cancellationToken);
    public abstract virtual Task`1<ModifyDeploymentFreezeResponse> Modify(ModifyDeploymentFreezeCommand command, CancellationToken cancellationToken);
    public abstract virtual Task`1<DeleteDeploymentFreezeResponse> Delete(DeleteDeploymentFreezeCommand command, CancellationToken cancellationToken);
}
public interface Octopus.Client.Repositories.Async.IDeploymentProcessRepository {
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<ReleaseTemplateResource> GetTemplate(DeploymentProcessResource deploymentProcess, ChannelResource channel);
    public abstract virtual Task`1<ReleaseTemplateResource> GetTemplate(DeploymentProcessResource deploymentProcess, ChannelResource channel, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<DeploymentProcessResource> Get(ProjectResource projectResource, string gitRef);
    public abstract virtual Task`1<DeploymentProcessResource> Get(ProjectResource projectResource, string gitRef, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<DeploymentProcessResource> Get(ProjectResource projectResource);
    public abstract virtual Task`1<DeploymentProcessResource> Get(ProjectResource projectResource, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<DeploymentProcessResource> Modify(DeploymentProcessResource deploymentSettings, string commitMessage);
    public abstract virtual Task`1<DeploymentProcessResource> Modify(DeploymentProcessResource deploymentSettings, string commitMessage, CancellationToken cancellationToken);
}
public interface Octopus.Client.Repositories.Async.IDeploymentRepository {
    public abstract virtual Task`1<TaskResource> GetTask(DeploymentResource resource);
    public abstract virtual Task`1<ResourceCollection`1<DeploymentResource>> FindBy(String[] projects, String[] environments, int skip, Nullable`1<int> take);
    [ObsoleteAttribute("This method is not a find all, it still requires paging. So it has been renamed to `FindBy`")]
public abstract virtual Task`1<ResourceCollection`1<DeploymentResource>> FindAll(String[] projects, String[] environments, int skip, Nullable`1<int> take);
    public abstract virtual Task Paginate(String[] projects, String[] environments, Func`2<ResourceCollection`1<DeploymentResource>, bool> getNextPage);
    public abstract virtual Task Paginate(String[] projects, String[] environments, String[] tenants, Func`2<ResourceCollection`1<DeploymentResource>, bool> getNextPage);
}
public interface Octopus.Client.Repositories.Async.IDeploymentSettingsRepository {
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<DeploymentSettingsResource> Get(ProjectResource project);
    public abstract virtual Task`1<DeploymentSettingsResource> Get(ProjectResource project, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<DeploymentSettingsResource> Get(ProjectResource projectResource, string gitRef);
    public abstract virtual Task`1<DeploymentSettingsResource> Get(ProjectResource projectResource, string gitRef, CancellationToken cancellationToken);
    [ObsoleteAttribute("ProjectResource is no longer required to be passed in")]
public abstract virtual Task`1<DeploymentSettingsResource> Modify(ProjectResource project, DeploymentSettingsResource deploymentSettings);
    [ObsoleteAttribute("ProjectResource is no longer required to be passed in")]
public abstract virtual Task`1<DeploymentSettingsResource> Modify(ProjectResource project, DeploymentSettingsResource deploymentSettings, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<DeploymentSettingsResource> Modify(DeploymentSettingsResource deploymentSettings);
    public abstract virtual Task`1<DeploymentSettingsResource> Modify(DeploymentSettingsResource deploymentSettings, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<DeploymentSettingsResource> Modify(DeploymentSettingsResource resource, string commitMessage);
    public abstract virtual Task`1<DeploymentSettingsResource> Modify(DeploymentSettingsResource resource, string commitMessage, CancellationToken cancellationToken);
}
public interface Octopus.Client.Repositories.Async.IEnvironmentRepository {
    public abstract virtual Task`1<List`1<MachineResource>> GetMachines(EnvironmentResource environment, Nullable`1<int> skip, Nullable`1<int> take, string partialName, string roles, Nullable`1<bool> isDisabled, string healthStatuses, string commStyles, string tenantIds, string tenantTags);
    public abstract virtual Task`1<EnvironmentsSummaryResource> Summary(string ids, string partialName, string machinePartialName, string roles, Nullable`1<bool> isDisabled, string healthStatuses, string commStyles, string tenantIds, string tenantTags, Nullable`1<bool> hideEmptyEnvironments);
    public abstract virtual Task Sort(String[] environmentIdsInOrder);
    public abstract virtual Task`1<EnvironmentEditor> CreateOrModify(string name);
    public abstract virtual Task`1<EnvironmentEditor> CreateOrModify(string name, string description);
    public abstract virtual Task`1<EnvironmentEditor> CreateOrModify(string name, string description, bool allowDynamicInfrastructure);
}
public interface Octopus.Client.Repositories.Async.IEventRepository {
    [ObsoleteAttribute("This method was deprecated in Octopus 3.4.  Please use the other List method by providing named arguments.")]
public abstract virtual Task`1<ResourceCollection`1<EventResource>> List(int skip, string filterByUserId, string regardingDocumentId, bool includeInternalEvents);
    public abstract virtual Task`1<ResourceCollection`1<EventResource>> List(int skip, Nullable`1<int> take, string from, string to, string regarding, string regardingAny, bool includeInternalEvents, string user, string users, string projects, string environments, string eventGroups, string eventCategories, string tenants, string tags, Nullable`1<long> fromAutoId, Nullable`1<long> toAutoId, string documentTypes, string eventAgents, string projectGroups);
    public abstract virtual Task`1<IReadOnlyList`1<DocumentTypeResource>> GetDocumentTypes();
    public abstract virtual Task`1<IReadOnlyList`1<EventAgentResource>> GetAgents();
    public abstract virtual Task`1<IReadOnlyList`1<EventCategoryResource>> GetCategories();
    public abstract virtual Task`1<IReadOnlyList`1<EventGroupResource>> GetGroups();
}
public interface Octopus.Client.Repositories.Async.IFeaturesConfigurationRepository {
    public abstract virtual Task`1<FeaturesConfigurationResource> GetFeaturesConfiguration();
    public abstract virtual Task`1<FeaturesConfigurationResource> ModifyFeaturesConfiguration(FeaturesConfigurationResource resource);
}
public interface Octopus.Client.Repositories.Async.IFeedRepository {
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<List`1<PackageResource>> GetVersions(FeedResource feed, String[] packageIds);
    public abstract virtual Task`1<List`1<PackageResource>> GetVersions(FeedResource feed, String[] packageIds, CancellationToken cancellationToken);
}
public interface Octopus.Client.Repositories.Async.IFindByName`1 {
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<TResource> FindByName(string name, string path, object pathParameters);
    public abstract virtual Task`1<TResource> FindByName(string name, CancellationToken cancellationToken);
    public abstract virtual Task`1<TResource> FindByName(string name, string path, object pathParameters, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<List`1<TResource>> FindByNames(IEnumerable`1<string> names, string path, object pathParameters);
    public abstract virtual Task`1<List`1<TResource>> FindByNames(IEnumerable`1<string> names, CancellationToken cancellationToken);
    public abstract virtual Task`1<List`1<TResource>> FindByNames(IEnumerable`1<string> names, string path, object pathParameters, CancellationToken cancellationToken);
}
public interface Octopus.Client.Repositories.Async.IFindByPartialName`1 {
    public abstract virtual Task`1<List`1<TResource>> FindByPartialName(string partialName, CancellationToken cancellationToken);
    public abstract virtual Task`1<List`1<TResource>> FindByPartialName(string partialName, string path, object pathParameters, CancellationToken cancellationToken);
}
public interface Octopus.Client.Repositories.Async.IFindBySlug`1 {
    public abstract virtual Task`1<TResource> FindBySlug(string slug, CancellationToken cancellationToken);
    public abstract virtual Task`1<TResource> FindBySlug(string slug, string path, object pathParameters, CancellationToken cancellationToken);
    public abstract virtual Task`1<List`1<TResource>> FindBySlugs(IEnumerable`1<string> slugs, CancellationToken cancellationToken);
    public abstract virtual Task`1<List`1<TResource>> FindBySlugs(IEnumerable`1<string> slugs, string path, object pathParameters, CancellationToken cancellationToken);
}
public interface Octopus.Client.Repositories.Async.IGet`1 {
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<TResource> Get(string idOrHref);
    public abstract virtual Task`1<TResource> Get(string idOrHref, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<List`1<TResource>> Get(String[] ids);
    public abstract virtual Task`1<List`1<TResource>> Get(CancellationToken cancellationToken, String[] ids);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<TResource> Refresh(TResource resource);
    public abstract virtual Task`1<TResource> Refresh(TResource resource, CancellationToken cancellationToken);
}
public interface Octopus.Client.Repositories.Async.IGetAll`1 {
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<List`1<TResource>> GetAll();
    public abstract virtual Task`1<List`1<TResource>> GetAll(CancellationToken cancellationToken);
}
public interface Octopus.Client.Repositories.Async.IGitCredentialRepository {
    public abstract virtual Task`1<GitCredentialUsage> Usage(GitCredentialResource credential);
}
public interface Octopus.Client.Repositories.Async.IInterruptionRepository {
    public abstract virtual Task`1<ResourceCollection`1<InterruptionResource>> List(int skip, Nullable`1<int> take, bool pendingOnly, string regardingDocumentId);
    public abstract virtual Task Submit(InterruptionResource interruption);
    public abstract virtual Task TakeResponsibility(InterruptionResource interruption);
    public abstract virtual Task`1<UserResource> GetResponsibleUser(InterruptionResource interruption);
}
public interface Octopus.Client.Repositories.Async.ILibraryVariableSetRepository {
    public abstract virtual Task`1<LibraryVariableSetEditor> CreateOrModify(string name);
    public abstract virtual Task`1<LibraryVariableSetEditor> CreateOrModify(string name, string description);
}
public interface Octopus.Client.Repositories.Async.ILicensesRepository {
    public abstract virtual Task`1<LicenseResource> GetCurrent();
    public abstract virtual Task`1<LicenseResource> UpdateCurrent(LicenseResource resource);
    public abstract virtual Task`1<LicenseStatusResource> GetStatus();
}
public interface Octopus.Client.Repositories.Async.ILifecyclesRepository {
    public abstract virtual Task`1<LifecycleEditor> CreateOrModify(string name);
    public abstract virtual Task`1<LifecycleEditor> CreateOrModify(string name, string description);
}
public interface Octopus.Client.Repositories.Async.IMachinePolicyRepository {
    public abstract virtual Task`1<List`1<MachineResource>> GetMachines(MachinePolicyResource machinePolicy);
    public abstract virtual Task`1<MachinePolicyResource> GetTemplate();
}
public interface Octopus.Client.Repositories.Async.IMachineRepository {
    public abstract virtual Task`1<MachineResource> Discover(string host, int port, Nullable`1<DiscoverableEndpointType> discoverableEndpointType);
    public abstract virtual Task`1<MachineResource> Discover(DiscoverMachineOptions options);
    public abstract virtual Task`1<MachineConnectionStatus> GetConnectionStatus(MachineResource machine);
    public abstract virtual Task`1<List`1<MachineResource>> FindByThumbprint(string thumbprint);
    public abstract virtual Task`1<IReadOnlyList`1<TaskResource>> GetTasks(MachineResource machine);
    public abstract virtual Task`1<IReadOnlyList`1<TaskResource>> GetTasks(MachineResource machine, object pathParameters);
    public abstract virtual Task`1<MachineEditor> CreateOrModify(string name, EndpointResource endpoint, EnvironmentResource[] environments, String[] roles, TenantResource[] tenants, TagResource[] tenantTags, Nullable`1<TenantedDeploymentMode> tenantedDeploymentParticipation);
    public abstract virtual Task`1<MachineEditor> CreateOrModify(string name, EndpointResource endpoint, EnvironmentResource[] environments, String[] roles);
    public abstract virtual Task`1<ResourceCollection`1<MachineResource>> List(int skip, Nullable`1<int> take, string ids, string name, string partialName, string roles, Nullable`1<bool> isDisabled, string healthStatuses, string commStyles, string tenantIds, string tenantTags, string environmentIds);
}
public interface Octopus.Client.Repositories.Async.IMachineRoleRepository {
    public abstract virtual Task`1<List`1<string>> GetAllRoleNames();
}
public interface Octopus.Client.Repositories.Async.IMigrationRepository {
    public abstract virtual Task`1<MigrationPartialExportResource> PartialExport(MigrationPartialExportResource resource);
    public abstract virtual Task`1<MigrationImportResource> Import(MigrationImportResource resource);
}
public interface Octopus.Client.Repositories.Async.IModify`1 {
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<TResource> Modify(TResource resource);
    public abstract virtual Task`1<TResource> Modify(TResource resource, CancellationToken cancellationToken);
}
internal class Octopus.Client.Repositories.Async.InterruptionRepository : BasicRepository`1<InterruptionResource> {
    public InterruptionRepository(IOctopusAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.InterruptionRepository/<List>d__1")]
public sealed virtual Task`1<ResourceCollection`1<InterruptionResource>> List(int skip, Nullable`1<int> take, bool pendingOnly, string regardingDocumentId);
    public sealed virtual Task Submit(InterruptionResource interruption);
    public sealed virtual Task TakeResponsibility(InterruptionResource interruption);
    public sealed virtual Task`1<UserResource> GetResponsibleUser(InterruptionResource interruption);
}
public interface Octopus.Client.Repositories.Async.IOctopusServerNodeRepository {
    public abstract virtual Task`1<OctopusServerNodeDetailsResource> Details(OctopusServerNodeResource node);
    public abstract virtual Task`1<OctopusServerClusterSummaryResource> Summary();
}
public interface Octopus.Client.Repositories.Async.IPaginate`1 {
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task Paginate(Func`2<ResourceCollection`1<TResource>, bool> getNextPage, string path, object pathParameters);
    public abstract virtual Task Paginate(Func`2<ResourceCollection`1<TResource>, bool> getNextPage, CancellationToken cancellationToken);
    public abstract virtual Task Paginate(Func`2<ResourceCollection`1<TResource>, bool> getNextPage, string path, object pathParameters, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<TResource> FindOne(Func`2<TResource, bool> search, string path, object pathParameters);
    public abstract virtual Task`1<TResource> FindOne(Func`2<TResource, bool> search, CancellationToken cancellationToken);
    public abstract virtual Task`1<TResource> FindOne(Func`2<TResource, bool> search, string path, object pathParameters, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<List`1<TResource>> FindMany(Func`2<TResource, bool> search, string path, object pathParameters);
    public abstract virtual Task`1<List`1<TResource>> FindMany(Func`2<TResource, bool> search, CancellationToken cancellationToken);
    public abstract virtual Task`1<List`1<TResource>> FindMany(Func`2<TResource, bool> search, string path, object pathParameters, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<List`1<TResource>> FindAll(string path, object pathParameters);
    public abstract virtual Task`1<List`1<TResource>> FindAll(CancellationToken cancellationToken);
    public abstract virtual Task`1<List`1<TResource>> FindAll(string path, object pathParameters, CancellationToken cancellationToken);
}
public interface Octopus.Client.Repositories.Async.IPerformanceConfigurationRepository {
    public abstract virtual Task`1<PerformanceConfigurationResource> Get();
    public abstract virtual Task`1<PerformanceConfigurationResource> Modify(PerformanceConfigurationResource resource);
}
public interface Octopus.Client.Repositories.Async.IProjectBetaRepository {
    public abstract virtual Task`1<ConvertProjectVariablesToGitResponse> MigrateVariablesToGit(ProjectResource projectResource, string branch, string commitMessage);
}
public interface Octopus.Client.Repositories.Async.IProjectGroupRepository {
    public abstract virtual Task`1<List`1<ProjectResource>> GetProjects(ProjectGroupResource projectGroup);
    public abstract virtual Task`1<ProjectGroupEditor> CreateOrModify(string name);
    public abstract virtual Task`1<ProjectGroupEditor> CreateOrModify(string name, string description);
}
public interface Octopus.Client.Repositories.Async.IProjectRepository {
    public abstract virtual IProjectBetaRepository Beta();
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<ResourceCollection`1<GitBranchResource>> GetGitBranches(ProjectResource projectResource);
    public abstract virtual Task`1<ResourceCollection`1<GitBranchResource>> GetGitBranches(ProjectResource projectResource, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<GitBranchResource> GetGitBranch(ProjectResource projectResource, string branch);
    public abstract virtual Task`1<GitBranchResource> GetGitBranch(ProjectResource projectResource, string branch, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<ResourceCollection`1<GitTagResource>> GetGitTags(ProjectResource projectResource);
    public abstract virtual Task`1<ResourceCollection`1<GitTagResource>> GetGitTags(ProjectResource projectResource, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<GitTagResource> GetGitTag(ProjectResource projectResource, string tag);
    public abstract virtual Task`1<GitTagResource> GetGitTag(ProjectResource projectResource, string tag, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<GitCommitResource> GetGitCommit(ProjectResource projectResource, string hash);
    public abstract virtual Task`1<GitCommitResource> GetGitCommit(ProjectResource projectResource, string hash, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<ConvertProjectToGitResponse> ConvertToGit(ProjectResource project, GitPersistenceSettingsResource gitPersistenceSettings, string commitMessage);
    public abstract virtual Task`1<ConvertProjectToGitResponse> ConvertToGit(ProjectResource project, GitPersistenceSettingsResource gitPersistenceSettings, string commitMessage, CancellationToken cancellationToken);
    public abstract virtual Task`1<ConvertProjectToGitResponse> ConvertToGit(ProjectResource project, GitPersistenceSettingsResource gitPersistenceSettings, string commitMessage, string initialCommitBranch, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<ResourceCollection`1<ReleaseResource>> GetReleases(ProjectResource project, int skip, Nullable`1<int> take, string searchByVersion);
    public abstract virtual Task`1<ResourceCollection`1<ReleaseResource>> GetReleases(ProjectResource project, CancellationToken cancellationToken);
    public abstract virtual Task`1<ResourceCollection`1<ReleaseResource>> GetReleases(ProjectResource project, int skip, Nullable`1<int> take, string searchByVersion, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<IReadOnlyList`1<ReleaseResource>> GetAllReleases(ProjectResource project);
    public abstract virtual Task`1<IReadOnlyList`1<ReleaseResource>> GetAllReleases(ProjectResource project, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<ReleaseResource> GetReleaseByVersion(ProjectResource project, string version);
    public abstract virtual Task`1<ReleaseResource> GetReleaseByVersion(ProjectResource project, string version, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<ResourceCollection`1<ChannelResource>> GetChannels(ProjectResource project);
    public abstract virtual Task`1<ResourceCollection`1<ChannelResource>> GetChannels(ProjectResource project, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<IReadOnlyList`1<ChannelResource>> GetAllChannels(ProjectResource project);
    public abstract virtual Task`1<IReadOnlyList`1<ChannelResource>> GetAllChannels(ProjectResource project, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<ProgressionResource> GetProgression(ProjectResource project, Nullable`1<int> releaseHistoryCount);
    public abstract virtual Task`1<ProgressionResource> GetProgression(ProjectResource project, CancellationToken cancellationToken, Nullable`1<int> releaseHistoryCount);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<ResourceCollection`1<ProjectTriggerResource>> GetTriggers(ProjectResource project);
    public abstract virtual Task`1<ResourceCollection`1<ProjectTriggerResource>> GetTriggers(ProjectResource project, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<IReadOnlyList`1<ProjectTriggerResource>> GetAllTriggers(ProjectResource project);
    public abstract virtual Task`1<IReadOnlyList`1<ProjectTriggerResource>> GetAllTriggers(ProjectResource project, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task SetLogo(ProjectResource project, string fileName, Stream contents);
    public abstract virtual Task SetLogo(ProjectResource project, string fileName, Stream contents, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<ProjectEditor> CreateOrModify(string name, ProjectGroupResource projectGroup, LifecycleResource lifecycle);
    public abstract virtual Task`1<ProjectEditor> CreateOrModify(string name, ProjectGroupResource projectGroup, LifecycleResource lifecycle, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<ProjectEditor> CreateOrModify(string name, ProjectGroupResource projectGroup, LifecycleResource lifecycle, string description, string cloneId);
    public abstract virtual Task`1<ProjectEditor> CreateOrModify(string name, ProjectGroupResource projectGroup, LifecycleResource lifecycle, string description, CancellationToken cancellationToken);
    public abstract virtual Task`1<ProjectEditor> CreateOrModify(string name, ProjectGroupResource projectGroup, LifecycleResource lifecycle, string description, string cloneId, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<ResourceCollection`1<RunbookSnapshotResource>> GetRunbookSnapshots(ProjectResource project, int skip, Nullable`1<int> take, string searchByName);
    public abstract virtual Task`1<ResourceCollection`1<RunbookSnapshotResource>> GetRunbookSnapshots(ProjectResource project, CancellationToken cancellationToken);
    public abstract virtual Task`1<ResourceCollection`1<RunbookSnapshotResource>> GetRunbookSnapshots(ProjectResource project, int skip, Nullable`1<int> take, string searchByName, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<IReadOnlyList`1<RunbookSnapshotResource>> GetAllRunbookSnapshots(ProjectResource project);
    public abstract virtual Task`1<IReadOnlyList`1<RunbookSnapshotResource>> GetAllRunbookSnapshots(ProjectResource project, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<RunbookSnapshotResource> GetRunbookSnapshotByName(ProjectResource project, string name);
    public abstract virtual Task`1<RunbookSnapshotResource> GetRunbookSnapshotByName(ProjectResource project, string name, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<ResourceCollection`1<RunbookResource>> GetRunbooks(ProjectResource project, int skip, Nullable`1<int> take, string searchByName);
    public abstract virtual Task`1<ResourceCollection`1<RunbookResource>> GetRunbooks(ProjectResource project, CancellationToken cancellationToken);
    public abstract virtual Task`1<ResourceCollection`1<RunbookResource>> GetRunbooks(ProjectResource project, int skip, Nullable`1<int> take, string searchByName, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<IReadOnlyList`1<RunbookResource>> GetAllRunbooks(ProjectResource project);
    public abstract virtual Task`1<IReadOnlyList`1<RunbookResource>> GetAllRunbooks(ProjectResource project, CancellationToken cancellationToken);
}
public interface Octopus.Client.Repositories.Async.IProjectTriggerRepository {
    public abstract virtual Task`1<ProjectTriggerResource> FindByName(ProjectResource project, string name);
    public abstract virtual Task`1<ProjectTriggerEditor> CreateOrModify(ProjectResource project, string name, TriggerFilterResource filter, TriggerActionResource action);
    public abstract virtual Task`1<ResourceCollection`1<ProjectTriggerResource>> FindByRunbook(String[] runbookIds);
}
public interface Octopus.Client.Repositories.Async.IProxyRepository {
}
public interface Octopus.Client.Repositories.Async.IReleaseRepository {
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<ResourceCollection`1<DeploymentResource>> GetDeployments(ReleaseResource release, int skip, Nullable`1<int> take);
    public abstract virtual Task`1<ResourceCollection`1<DeploymentResource>> GetDeployments(ReleaseResource release, CancellationToken cancellationToken);
    public abstract virtual Task`1<ResourceCollection`1<DeploymentResource>> GetDeployments(ReleaseResource release, int skip, Nullable`1<int> take, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<ResourceCollection`1<ArtifactResource>> GetArtifacts(ReleaseResource release, int skip, Nullable`1<int> take);
    public abstract virtual Task`1<ResourceCollection`1<ArtifactResource>> GetArtifacts(ReleaseResource release, CancellationToken cancellationToken);
    public abstract virtual Task`1<ResourceCollection`1<ArtifactResource>> GetArtifacts(ReleaseResource release, int skip, Nullable`1<int> take, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<DeploymentTemplateResource> GetTemplate(ReleaseResource release);
    public abstract virtual Task`1<DeploymentTemplateResource> GetTemplate(ReleaseResource release, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<DeploymentPreviewResource> GetPreview(DeploymentPromotionTarget promotionTarget);
    public abstract virtual Task`1<DeploymentPreviewResource> GetPreview(DeploymentPromotionTarget promotionTarget, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<ReleaseResource> SnapshotVariables(ReleaseResource release);
    public abstract virtual Task`1<ReleaseResource> SnapshotVariables(ReleaseResource release, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<ReleaseResource> Create(ReleaseResource release, bool ignoreChannelRules);
    public abstract virtual Task`1<ReleaseResource> Create(ReleaseResource release, bool ignoreChannelRules, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<LifecycleProgressionResource> GetProgression(ReleaseResource release);
    public abstract virtual Task`1<LifecycleProgressionResource> GetProgression(ReleaseResource release, CancellationToken cancellationToken);
}
public interface Octopus.Client.Repositories.Async.IResourceRepository {
    public IOctopusAsyncClient Client { get; }
    public abstract virtual IOctopusAsyncClient get_Client();
}
public interface Octopus.Client.Repositories.Async.IRetentionPolicyRepository {
    public abstract virtual Task`1<TaskResource> ApplyNow(string spaceId);
}
public interface Octopus.Client.Repositories.Async.IRunbookProcessRepository {
    public abstract virtual Task`1<RunbookSnapshotTemplateResource> GetTemplate(RunbookProcessResource runbookProcess);
}
public interface Octopus.Client.Repositories.Async.IRunbookRepository {
    public abstract virtual Task`1<RunbookResource> FindByName(ProjectResource project, string name);
    public abstract virtual Task`1<RunbookEditor> CreateOrModify(ProjectResource project, string name, string description);
    public abstract virtual Task`1<RunbookSnapshotTemplateResource> GetRunbookSnapshotTemplate(RunbookResource runbook);
    public abstract virtual Task`1<RunbookRunTemplateResource> GetRunbookRunTemplate(RunbookResource runbook);
    public abstract virtual Task`1<RunbookRunPreviewResource> GetPreview(DeploymentPromotionTarget promotionTarget);
    public abstract virtual Task`1<RunbookRunResource> Run(RunbookResource runbook, RunbookRunResource runbookRun);
    public abstract virtual Task`1<RunbookRunResource[]> Run(RunbookResource runbook, RunbookRunParameters runbookRunParameters);
}
public interface Octopus.Client.Repositories.Async.IRunbookRunRepository {
    public abstract virtual Task`1<TaskResource> GetTask(RunbookRunResource resource);
    public abstract virtual Task`1<ResourceCollection`1<RunbookRunResource>> FindBy(String[] projects, String[] runbooks, String[] environments, int skip, Nullable`1<int> take);
    public abstract virtual Task Paginate(String[] projects, String[] runbooks, String[] environments, Func`2<ResourceCollection`1<RunbookRunResource>, bool> getNextPage);
    public abstract virtual Task Paginate(String[] projects, String[] runbooks, String[] environments, String[] tenants, Func`2<ResourceCollection`1<RunbookRunResource>, bool> getNextPage);
}
public interface Octopus.Client.Repositories.Async.IRunbookSnapshotRepository {
    public abstract virtual Task`1<ResourceCollection`1<RunbookRunResource>> GetRunbookRuns(RunbookSnapshotResource runbookSnapshot, int skip, Nullable`1<int> take);
    public abstract virtual Task`1<ResourceCollection`1<ArtifactResource>> GetArtifacts(RunbookSnapshotResource runbookSnapshot, int skip, Nullable`1<int> take);
    public abstract virtual Task`1<RunbookRunTemplateResource> GetTemplate(RunbookSnapshotResource runbookSnapshot);
    public abstract virtual Task`1<RunbookRunPreviewResource> GetPreview(DeploymentPromotionTarget promotionTarget);
    public abstract virtual Task`1<RunbookSnapshotResource> SnapshotVariables(RunbookSnapshotResource runbookSnapshot);
    public abstract virtual Task`1<RunbookSnapshotResource> Create(RunbookSnapshotResource runbookSnapshot);
}
public interface Octopus.Client.Repositories.Async.ISchedulerRepository {
    public abstract virtual Task Start();
    public abstract virtual Task Start(string taskName);
    public abstract virtual Task Stop();
    public abstract virtual Task Stop(string taskName);
    public abstract virtual Task Trigger(string taskName);
    public abstract virtual Task`1<ScheduledTaskDetailsResource> GetLogs(string taskName);
    public abstract virtual Task`1<Stream> GetRawLogs(string taskName);
    public abstract virtual Task`1<SchedulerStatusResource> Status();
}
public interface Octopus.Client.Repositories.Async.IScopedUserRoleRepository {
}
public interface Octopus.Client.Repositories.Async.IServerStatusRepository {
    public abstract virtual Task`1<ServerStatusResource> GetServerStatus();
    public abstract virtual Task`1<SystemInfoResource> GetSystemInfo(ServerStatusResource status);
    public abstract virtual Task`1<ServerStatusHealthResource> GetServerHealth();
}
public interface Octopus.Client.Repositories.Async.ISpaceRepository {
    public abstract virtual Task SetLogo(SpaceResource space, string fileName, Stream contents);
    public abstract virtual Task`1<SpaceSearchResult[]> Search(string spaceId, string keyword);
}
public interface Octopus.Client.Repositories.Async.ISubscriptionRepository {
    public abstract virtual Task`1<SubscriptionEditor> CreateOrModify(string name, EventNotificationSubscription eventNotificationSubscription, bool isDisabled);
}
public interface Octopus.Client.Repositories.Async.ITagSetRepository {
    public abstract virtual Task Sort(String[] tagSetIdsInOrder);
    public abstract virtual Task`1<TagSetEditor> CreateOrModify(string name);
    public abstract virtual Task`1<TagSetEditor> CreateOrModify(string name, string description);
}
public interface Octopus.Client.Repositories.Async.ITaskRepository {
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<TaskResource> ExecuteHealthCheck(string description, int timeoutAfterMinutes, int machineTimeoutAfterMinutes, string environmentId, String[] machineIds, string restrictTo, string workerpoolId, String[] workerIds);
    public abstract virtual Task`1<TaskResource> ExecuteHealthCheck(CancellationToken cancellationToken, string description, int timeoutAfterMinutes, int machineTimeoutAfterMinutes, string environmentId, String[] machineIds, string restrictTo, string workerpoolId, String[] workerIds);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<TaskResource> ExecuteCalamariUpdate(string description, String[] machineIds);
    public abstract virtual Task`1<TaskResource> ExecuteCalamariUpdate(CancellationToken cancellationToken, string description, String[] machineIds);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<TaskResource> ExecuteBackup(string description);
    public abstract virtual Task`1<TaskResource> ExecuteBackup(CancellationToken cancellationToken, string description);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<TaskResource> ExecuteTentacleUpgrade(string description, string environmentId, String[] machineIds, string restrictTo, string workerpooltId, String[] workerIds);
    public abstract virtual Task`1<TaskResource> ExecuteTentacleUpgrade(CancellationToken cancellationToken, string description, string environmentId, String[] machineIds, string restrictTo, string workerpooltId, String[] workerIds);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<TaskResource> ExecuteAdHocScript(string scriptBody, String[] machineIds, String[] environmentIds, String[] targetRoles, string description, string syntax, Nullable`1<TargetType> targetType);
    public abstract virtual Task`1<TaskResource> ExecuteAdHocScript(string scriptBody, CancellationToken cancellationToken, String[] machineIds, String[] environmentIds, String[] targetRoles, string description, string syntax, Nullable`1<TargetType> targetType);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<TaskDetailsResource> GetDetails(TaskResource resource, Nullable`1<bool> includeVerboseOutput, Nullable`1<int> tail);
    public abstract virtual Task`1<TaskDetailsResource> GetDetails(TaskResource resource, CancellationToken cancellationToken, Nullable`1<bool> includeVerboseOutput, Nullable`1<int> tail);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<TaskResource> ExecuteActionTemplate(ActionTemplateResource resource, Dictionary`2<string, PropertyValueResource> properties, String[] machineIds, String[] environmentIds, String[] targetRoles, string description, Nullable`1<TargetType> targetType);
    public abstract virtual Task`1<TaskResource> ExecuteActionTemplate(ActionTemplateResource resource, Dictionary`2<string, PropertyValueResource> properties, CancellationToken cancellationToken, String[] machineIds, String[] environmentIds, String[] targetRoles, string description, Nullable`1<TargetType> targetType);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<TaskResource> ExecuteCommunityActionTemplatesSynchronisation(string description);
    public abstract virtual Task`1<TaskResource> ExecuteCommunityActionTemplatesSynchronisation(CancellationToken cancellationToken, string description);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<List`1<TaskResource>> GetAllActive(int pageSize);
    public abstract virtual Task`1<List`1<TaskResource>> GetAllActive(CancellationToken cancellationToken, int pageSize);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<TaskResourceCollection> GetActiveWithSummary(int pageSize, int skip);
    public abstract virtual Task`1<TaskResourceCollection> GetActiveWithSummary(CancellationToken cancellationToken, int pageSize, int skip);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<TaskResourceCollection> GetAllWithSummary(int pageSize, int skip);
    public abstract virtual Task`1<TaskResourceCollection> GetAllWithSummary(CancellationToken cancellationToken, int pageSize, int skip);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<string> GetRawOutputLog(TaskResource resource);
    public abstract virtual Task`1<string> GetRawOutputLog(TaskResource resource, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<TaskTypeResource[]> GetTaskTypes();
    public abstract virtual Task`1<TaskTypeResource[]> GetTaskTypes(CancellationToken cancellationToken);
    public abstract virtual Task Prioritize(TaskResource resource, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task Rerun(TaskResource resource);
    public abstract virtual Task Rerun(TaskResource resource, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task Cancel(TaskResource resource);
    public abstract virtual Task Cancel(TaskResource resource, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task ModifyState(TaskResource resource, TaskState newState, string reason);
    public abstract virtual Task ModifyState(TaskResource resource, TaskState newState, string reason, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<IReadOnlyList`1<TaskResource>> GetQueuedBehindTasks(TaskResource resource);
    public abstract virtual Task`1<IReadOnlyList`1<TaskResource>> GetQueuedBehindTasks(TaskResource resource, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task WaitForCompletion(TaskResource task, int pollIntervalSeconds, int timeoutAfterMinutes, Action`1<TaskResource[]> interval);
    public abstract virtual Task WaitForCompletion(TaskResource task, CancellationToken cancellationToken, int pollIntervalSeconds, int timeoutAfterMinutes, Action`2<TaskResource[], CancellationToken> interval);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task WaitForCompletion(TaskResource[] tasks, int pollIntervalSeconds, int timeoutAfterMinutes, Action`1<TaskResource[]> interval);
    public abstract virtual Task WaitForCompletion(TaskResource[] tasks, CancellationToken cancellationToken, int pollIntervalSeconds, int timeoutAfterMinutes, Action`2<TaskResource[], CancellationToken> interval);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task WaitForCompletion(TaskResource[] tasks, int pollIntervalSeconds, int timeoutAfterMinutes, Func`2<TaskResource[], Task> interval);
    public abstract virtual Task WaitForCompletion(TaskResource[] tasks, CancellationToken cancellationToken, int pollIntervalSeconds, int timeoutAfterMinutes, Func`3<TaskResource[], CancellationToken, Task> interval);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task WaitForCompletion(TaskResource[] tasks, int pollIntervalSeconds, Nullable`1<TimeSpan> timeoutAfter, Func`2<TaskResource[], Task> interval);
    public abstract virtual Task WaitForCompletion(TaskResource[] tasks, CancellationToken cancellationToken, int pollIntervalSeconds, Nullable`1<TimeSpan> timeoutAfter, Func`3<TaskResource[], CancellationToken, Task> interval);
}
public interface Octopus.Client.Repositories.Async.ITeamsRepository {
    public abstract virtual Task`1<List`1<ScopedUserRoleResource>> GetScopedUserRoles(TeamResource team);
}
public interface Octopus.Client.Repositories.Async.ITelemetryConfigurationRepository {
    public abstract virtual Task`1<TelemetryConfigurationResource> GetTelemetryConfiguration();
    public abstract virtual Task`1<TelemetryConfigurationResource> ModifyTelemetryConfiguration(TelemetryConfigurationResource resource);
    public abstract virtual Task`1<TelemetryConfigurationResource> EnableTelemetry();
    public abstract virtual Task`1<TelemetryConfigurationResource> DisableTelemetry();
}
public interface Octopus.Client.Repositories.Async.ITenantRepository {
    public abstract virtual Task`1<MultiTenancyStatusResource> Status();
    public abstract virtual Task SetLogo(TenantResource tenant, string fileName, Stream contents);
    public abstract virtual Task`1<TenantVariableResource> GetVariables(TenantResource tenant);
    public abstract virtual Task`1<TenantVariableResource> ModifyVariables(TenantResource tenant, TenantVariableResource variables);
    public abstract virtual Task`1<List`1<TenantsMissingVariablesResource>> GetMissingVariables(string tenantId, string projectId, string environmentId);
    public abstract virtual Task`1<List`1<TenantResource>> FindAll(string name, String[] tags, int pageSize);
    public abstract virtual Task`1<TenantEditor> CreateOrModify(string name);
    public abstract virtual Task`1<TenantEditor> CreateOrModify(string name, string description);
    public abstract virtual Task`1<TenantEditor> CreateOrModify(string name, string description, string cloneId);
}
public interface Octopus.Client.Repositories.Async.ITenantVariablesRepository {
    public abstract virtual Task`1<List`1<TenantVariableResource>> GetAll(ProjectResource projectResource);
}
public interface Octopus.Client.Repositories.Async.IUpgradeConfigurationRepository {
    public abstract virtual Task`1<UpgradeConfigurationResource> Get();
}
public interface Octopus.Client.Repositories.Async.IUserInvitesRepository {
    public abstract virtual Task`1<InvitationResource> Invite(string addToTeamId);
    public abstract virtual Task`1<InvitationResource> Invite(ReferenceCollection addToTeamIds);
}
public interface Octopus.Client.Repositories.Async.IUserPermissionsRepository {
    public abstract virtual Task`1<UserPermissionSetResource> Get(UserResource user);
    [ObsoleteAttribute("Use GetDescriptions(UserResource) instead. This method only returns empty sets and is only kept for backwards compatibility.")]
public abstract virtual Task`1<UserPermissionSetResource> GetConfiguration(UserResource user);
    public abstract virtual Task`1<IReadOnlyDictionary`2<Permission, PermissionDescription>> GetDescriptions(UserResource user);
    public abstract virtual Task`1<Stream> Export(UserPermissionSetResource userPermissions);
}
public interface Octopus.Client.Repositories.Async.IUserRepository {
    public abstract virtual Task`1<UserResource> FindByUsername(string username);
    public abstract virtual Task`1<UserResource> Create(string username, string displayName, string password, string emailAddress);
    public abstract virtual Task`1<UserResource> CreateServiceAccount(string username, string displayName);
    public abstract virtual Task`1<UserResource> Register(RegisterCommand registerCommand);
    public abstract virtual Task SignIn(LoginCommand loginCommand);
    public abstract virtual Task SignIn(string username, string password, bool rememberMe);
    public abstract virtual Task SignOut();
    public abstract virtual Task`1<UserResource> GetCurrent();
    public abstract virtual Task`1<SpaceResource[]> GetSpaces(UserResource user);
    public abstract virtual Task`1<GeneratedAccessTokenResource> GenerateAccessToken(UserResource user, CancellationToken cancellationToken);
    public abstract virtual Task`1<ApiKeyCreatedResource> CreateApiKey(UserResource user, string purpose, Nullable`1<DateTimeOffset> expires);
    public abstract virtual Task`1<List`1<ApiKeyResource>> GetApiKeys(UserResource user);
    public abstract virtual Task RevokeApiKey(ApiKeyResourceBase apiKey);
    public abstract virtual Task RevokeSessions(UserResource user);
    [ObsoleteAttribute("Use the IUserInvitesRepository instead", "False")]
public abstract virtual Task`1<InvitationResource> Invite(string addToTeamId);
    [ObsoleteAttribute("Use the IUserInvitesRepository instead", "False")]
public abstract virtual Task`1<InvitationResource> Invite(ReferenceCollection addToTeamIds);
}
public interface Octopus.Client.Repositories.Async.IUserRolesRepository {
}
public interface Octopus.Client.Repositories.Async.IUserTeamsRepository {
    public abstract virtual Task`1<TeamNameResource[]> Get(UserResource user);
}
public interface Octopus.Client.Repositories.Async.IVariableSetRepository {
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<String[]> GetVariableNames(string projects, String[] environments, string gitRef);
    public abstract virtual Task`1<String[]> GetVariableNames(string projects, String[] environments, CancellationToken cancellationToken);
    public abstract virtual Task`1<String[]> GetVariableNames(string projects, String[] environments, string gitRef, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<VariableSetResource> GetVariablePreview(string project, string channel, string tenant, string runbook, string action, string environment, string machine, string role);
    public abstract virtual Task`1<VariableSetResource> GetVariablePreview(string project, string channel, string tenant, string runbook, string action, string environment, string machine, string role, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<VariableSetResource> GetVariablePreview(ProjectResource projectResource, string channel, string tenant, string runbook, string action, string environment, string machine, string role, string gitRef);
    public abstract virtual Task`1<VariableSetResource> GetVariablePreview(ProjectResource projectResource, CancellationToken cancellationToken);
    public abstract virtual Task`1<VariableSetResource> GetVariablePreview(ProjectResource projectResource, string channel, string tenant, string runbook, string action, string environment, string machine, string role, string gitRef, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public abstract virtual Task`1<VariableSetResource> Get(ProjectResource projectResource, string gitRef);
    public abstract virtual Task`1<VariableSetResource> Get(ProjectResource projectResource, CancellationToken cancellationToken);
    public abstract virtual Task`1<VariableSetResource> Get(ProjectResource projectResource, string gitRef, CancellationToken cancellationToken);
}
public interface Octopus.Client.Repositories.Async.IWorkerPoolRepository {
    public abstract virtual Task`1<List`1<WorkerResource>> GetMachines(WorkerPoolResource workerPool, Nullable`1<int> skip, Nullable`1<int> take, string partialName, Nullable`1<bool> isDisabled, string healthStatuses, string commStyles);
    public abstract virtual Task`1<WorkerPoolsSummaryResource> Summary(string ids, string partialName, string machinePartialName, Nullable`1<bool> isDisabled, string healthStatuses, string commStyles, Nullable`1<bool> hideEmptyPools);
    public abstract virtual Task Sort(String[] workerPoolIdsInOrder);
    public abstract virtual Task`1<WorkerPoolEditor> CreateOrModify(string name);
    public abstract virtual Task`1<WorkerPoolEditor> CreateOrModify(string name, string description);
}
public interface Octopus.Client.Repositories.Async.IWorkerRepository {
    public abstract virtual Task`1<WorkerResource> Discover(string host, int port, Nullable`1<DiscoverableEndpointType> discoverableEndpointType);
    public abstract virtual Task`1<MachineConnectionStatus> GetConnectionStatus(WorkerResource machine);
    public abstract virtual Task`1<List`1<WorkerResource>> FindByThumbprint(string thumbprint);
    public abstract virtual Task`1<WorkerEditor> CreateOrModify(string name, EndpointResource endpoint, WorkerPoolResource[] pools);
    public abstract virtual Task`1<ResourceCollection`1<WorkerResource>> List(int skip, Nullable`1<int> take, string ids, string name, string partialName, Nullable`1<bool> isDisabled, string healthStatuses, string commStyles, string workerpoolIds);
}
internal class Octopus.Client.Repositories.Async.LegacyInvitationRepository : BasicRepository`1<InvitationResource> {
    public LegacyInvitationRepository(IOctopusAsyncRepository repository);
}
internal class Octopus.Client.Repositories.Async.LibraryVariableSetRepository : BasicRepository`1<LibraryVariableSetResource> {
    public LibraryVariableSetRepository(IOctopusAsyncRepository repository);
    public sealed virtual Task`1<LibraryVariableSetEditor> CreateOrModify(string name);
    public sealed virtual Task`1<LibraryVariableSetEditor> CreateOrModify(string name, string description);
}
internal class Octopus.Client.Repositories.Async.LicensesRepository : BasicRepository`1<LicenseResource> {
    public LicensesRepository(IOctopusAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.LicensesRepository/<GetCurrent>d__1")]
public sealed virtual Task`1<LicenseResource> GetCurrent();
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.LicensesRepository/<UpdateCurrent>d__2")]
public sealed virtual Task`1<LicenseResource> UpdateCurrent(LicenseResource resource);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.LicensesRepository/<GetStatus>d__3")]
public sealed virtual Task`1<LicenseStatusResource> GetStatus();
}
internal class Octopus.Client.Repositories.Async.LifecyclesRepository : BasicRepository`1<LifecycleResource> {
    public LifecyclesRepository(IOctopusAsyncRepository repository);
    public sealed virtual Task`1<LifecycleEditor> CreateOrModify(string name);
    public sealed virtual Task`1<LifecycleEditor> CreateOrModify(string name, string description);
}
internal class Octopus.Client.Repositories.Async.MachinePolicyRepository : BasicRepository`1<MachinePolicyResource> {
    public MachinePolicyRepository(IOctopusAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.MachinePolicyRepository/<GetMachines>d__1")]
public sealed virtual Task`1<List`1<MachineResource>> GetMachines(MachinePolicyResource machinePolicy);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.MachinePolicyRepository/<GetTemplate>d__2")]
public sealed virtual Task`1<MachinePolicyResource> GetTemplate();
}
internal class Octopus.Client.Repositories.Async.MachineRepository : BasicRepository`1<MachineResource> {
    public MachineRepository(IOctopusAsyncRepository repository);
    public sealed virtual Task`1<MachineResource> Discover(string host, int port, Nullable`1<DiscoverableEndpointType> type);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.MachineRepository/<Discover>d__2")]
public sealed virtual Task`1<MachineResource> Discover(DiscoverMachineOptions options);
    public sealed virtual Task`1<MachineConnectionStatus> GetConnectionStatus(MachineResource machine);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.MachineRepository/<FindByThumbprint>d__4")]
public sealed virtual Task`1<List`1<MachineResource>> FindByThumbprint(string thumbprint);
    public sealed virtual Task`1<IReadOnlyList`1<TaskResource>> GetTasks(MachineResource machine);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.MachineRepository/<GetTasks>d__6")]
public sealed virtual Task`1<IReadOnlyList`1<TaskResource>> GetTasks(MachineResource machine, object pathParameters);
    public sealed virtual Task`1<MachineEditor> CreateOrModify(string name, EndpointResource endpoint, EnvironmentResource[] environments, String[] roles, TenantResource[] tenants, TagResource[] tenantTags, Nullable`1<TenantedDeploymentMode> tenantedDeploymentParticipation);
    public sealed virtual Task`1<MachineEditor> CreateOrModify(string name, EndpointResource endpoint, EnvironmentResource[] environments, String[] roles);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.MachineRepository/<List>d__9")]
public sealed virtual Task`1<ResourceCollection`1<MachineResource>> List(int skip, Nullable`1<int> take, string ids, string name, string partialName, string roles, Nullable`1<bool> isDisabled, string healthStatuses, string commStyles, string tenantIds, string tenantTags, string environmentIds);
}
internal class Octopus.Client.Repositories.Async.MachineRoleRepository : object {
    private IOctopusAsyncRepository repository;
    public MachineRoleRepository(IOctopusAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.MachineRoleRepository/<GetAllRoleNames>d__2")]
public sealed virtual Task`1<List`1<string>> GetAllRoleNames();
}
internal class Octopus.Client.Repositories.Async.MigrationRepository : object {
    private IOctopusAsyncRepository repository;
    public MigrationRepository(IOctopusAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.MigrationRepository/<PartialExport>d__2")]
public sealed virtual Task`1<MigrationPartialExportResource> PartialExport(MigrationPartialExportResource resource);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.MigrationRepository/<Import>d__3")]
public sealed virtual Task`1<MigrationImportResource> Import(MigrationImportResource resource);
}
internal class Octopus.Client.Repositories.Async.MixedScopeBaseRepository`1 : BasicRepository`1<TMixedScopeResource> {
    private SpaceContext userDefinedSpaceContext;
    protected MixedScopeBaseRepository`1(IOctopusAsyncRepository repository, string collectionLinkName);
    protected MixedScopeBaseRepository`1(IOctopusAsyncRepository repository, string collectionLinkName, SpaceContext userDefinedSpaceContext);
    protected virtual Dictionary`2<string, object> GetAdditionalQueryParameters();
    private void ValidateThatICanUseACustomSpaceContext();
    protected virtual Task CheckSpaceResource(IHaveSpaceResource spaceResource);
    protected SpaceContext GetCurrentSpaceContext();
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.MixedScopeBaseRepository`1/<EnrichSpaceId>d__7")]
protected virtual Task EnrichSpaceId(TMixedScopeResource resource);
    protected void EnsureSingleSpaceContext();
    protected void EnsureSystemContext();
    [DebuggerHiddenAttribute]
[CompilerGeneratedAttribute]
private Task <>n__0(TMixedScopeResource resource);
    [CompilerGeneratedAttribute]
private void <EnsureSingleSpaceContext>b__8_2();
}
internal class Octopus.Client.Repositories.Async.OctopusServerNodeRepository : BasicRepository`1<OctopusServerNodeResource> {
    private IOctopusAsyncRepository repository;
    public OctopusServerNodeRepository(IOctopusAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.OctopusServerNodeRepository/<Details>d__2")]
public sealed virtual Task`1<OctopusServerNodeDetailsResource> Details(OctopusServerNodeResource node);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.OctopusServerNodeRepository/<Summary>d__3")]
public sealed virtual Task`1<OctopusServerClusterSummaryResource> Summary();
}
internal class Octopus.Client.Repositories.Async.PerformanceConfigurationRepository : object {
    private IOctopusAsyncRepository repository;
    public PerformanceConfigurationRepository(IOctopusAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.PerformanceConfigurationRepository/<Get>d__2")]
public sealed virtual Task`1<PerformanceConfigurationResource> Get();
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.PerformanceConfigurationRepository/<Modify>d__3")]
public sealed virtual Task`1<PerformanceConfigurationResource> Modify(PerformanceConfigurationResource resource);
}
internal class Octopus.Client.Repositories.Async.ProjectBetaRepository : object {
    private IOctopusAsyncClient client;
    public ProjectBetaRepository(IOctopusAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.ProjectBetaRepository/<MigrateVariablesToGit>d__2")]
public sealed virtual Task`1<ConvertProjectVariablesToGitResponse> MigrateVariablesToGit(ProjectResource projectResource, string branch, string commitMessage);
    private bool ProjectHasVariablesInGit(ProjectResource projectResource);
}
internal class Octopus.Client.Repositories.Async.ProjectGroupRepository : BasicRepository`1<ProjectGroupResource> {
    public ProjectGroupRepository(IOctopusAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.ProjectGroupRepository/<GetProjects>d__1")]
public sealed virtual Task`1<List`1<ProjectResource>> GetProjects(ProjectGroupResource projectGroup);
    public sealed virtual Task`1<ProjectGroupEditor> CreateOrModify(string name);
    public sealed virtual Task`1<ProjectGroupEditor> CreateOrModify(string name, string description);
}
internal class Octopus.Client.Repositories.Async.ProjectRepository : BasicRepository`1<ProjectResource> {
    private IProjectBetaRepository beta;
    public ProjectRepository(IOctopusAsyncRepository repository);
    public sealed virtual IProjectBetaRepository Beta();
    public sealed virtual Task`1<ResourceCollection`1<GitBranchResource>> GetGitBranches(ProjectResource projectResource);
    public sealed virtual Task`1<ResourceCollection`1<GitBranchResource>> GetGitBranches(ProjectResource projectResource, CancellationToken cancellationToken);
    public sealed virtual Task`1<GitBranchResource> GetGitBranch(ProjectResource projectResource, string branch);
    public sealed virtual Task`1<GitBranchResource> GetGitBranch(ProjectResource projectResource, string branch, CancellationToken cancellationToken);
    public sealed virtual Task`1<ResourceCollection`1<GitTagResource>> GetGitTags(ProjectResource projectResource);
    public sealed virtual Task`1<ResourceCollection`1<GitTagResource>> GetGitTags(ProjectResource projectResource, CancellationToken cancellationToken);
    public sealed virtual Task`1<GitTagResource> GetGitTag(ProjectResource projectResource, string branch);
    public sealed virtual Task`1<GitTagResource> GetGitTag(ProjectResource projectResource, string branch, CancellationToken cancellationToken);
    public sealed virtual Task`1<GitCommitResource> GetGitCommit(ProjectResource projectResource, string hash);
    public sealed virtual Task`1<GitCommitResource> GetGitCommit(ProjectResource projectResource, string hash, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.ProjectRepository/<ConvertToGit>d__13")]
public sealed virtual Task`1<ConvertProjectToGitResponse> ConvertToGit(ProjectResource project, GitPersistenceSettingsResource gitPersistenceSettings, string commitMessage);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.ProjectRepository/<ConvertToGit>d__14")]
public sealed virtual Task`1<ConvertProjectToGitResponse> ConvertToGit(ProjectResource project, GitPersistenceSettingsResource gitPersistenceSettings, string commitMessage, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.ProjectRepository/<ConvertToGit>d__15")]
public sealed virtual Task`1<ConvertProjectToGitResponse> ConvertToGit(ProjectResource project, GitPersistenceSettingsResource gitPersistenceSettings, string commitMessage, string initialCommitBranch, CancellationToken cancellationToken);
    public sealed virtual Task`1<ResourceCollection`1<ReleaseResource>> GetReleases(ProjectResource project, int skip, Nullable`1<int> take, string searchByVersion);
    public sealed virtual Task`1<ResourceCollection`1<ReleaseResource>> GetReleases(ProjectResource project, CancellationToken cancellationToken);
    public sealed virtual Task`1<ResourceCollection`1<ReleaseResource>> GetReleases(ProjectResource project, int skip, Nullable`1<int> take, string searchByVersion, CancellationToken cancellationToken);
    public sealed virtual Task`1<IReadOnlyList`1<ReleaseResource>> GetAllReleases(ProjectResource project);
    public sealed virtual Task`1<IReadOnlyList`1<ReleaseResource>> GetAllReleases(ProjectResource project, CancellationToken cancellationToken);
    public sealed virtual Task`1<ReleaseResource> GetReleaseByVersion(ProjectResource project, string version);
    public sealed virtual Task`1<ReleaseResource> GetReleaseByVersion(ProjectResource project, string version, CancellationToken cancellationToken);
    public sealed virtual Task`1<ResourceCollection`1<ChannelResource>> GetChannels(ProjectResource project);
    public sealed virtual Task`1<ResourceCollection`1<ChannelResource>> GetChannels(ProjectResource project, CancellationToken cancellationToken);
    public sealed virtual Task`1<IReadOnlyList`1<ChannelResource>> GetAllChannels(ProjectResource project);
    public sealed virtual Task`1<IReadOnlyList`1<ChannelResource>> GetAllChannels(ProjectResource project, CancellationToken cancellationToken);
    public sealed virtual Task`1<ProgressionResource> GetProgression(ProjectResource project, Nullable`1<int> releaseHistoryCount);
    public sealed virtual Task`1<ProgressionResource> GetProgression(ProjectResource project, CancellationToken cancellationToken, Nullable`1<int> releaseHistoryCount);
    public sealed virtual Task`1<ResourceCollection`1<ProjectTriggerResource>> GetTriggers(ProjectResource project);
    public sealed virtual Task`1<ResourceCollection`1<ProjectTriggerResource>> GetTriggers(ProjectResource project, CancellationToken cancellationToken);
    public sealed virtual Task`1<IReadOnlyList`1<ProjectTriggerResource>> GetAllTriggers(ProjectResource project);
    public sealed virtual Task`1<IReadOnlyList`1<ProjectTriggerResource>> GetAllTriggers(ProjectResource project, CancellationToken cancellationToken);
    public sealed virtual Task SetLogo(ProjectResource project, string fileName, Stream contents);
    public sealed virtual Task SetLogo(ProjectResource project, string fileName, Stream contents, CancellationToken cancellationToken);
    public sealed virtual Task`1<ProjectEditor> CreateOrModify(string name, ProjectGroupResource projectGroup, LifecycleResource lifecycle);
    public sealed virtual Task`1<ProjectEditor> CreateOrModify(string name, ProjectGroupResource projectGroup, LifecycleResource lifecycle, CancellationToken cancellationToken);
    public sealed virtual Task`1<ProjectEditor> CreateOrModify(string name, ProjectGroupResource projectGroup, LifecycleResource lifecycle, string description, string cloneId);
    public sealed virtual Task`1<ProjectEditor> CreateOrModify(string name, ProjectGroupResource projectGroup, LifecycleResource lifecycle, string description, CancellationToken cancellationToken);
    public sealed virtual Task`1<ProjectEditor> CreateOrModify(string name, ProjectGroupResource projectGroup, LifecycleResource lifecycle, string description, string cloneId, CancellationToken cancellationToken);
    public sealed virtual Task`1<ResourceCollection`1<RunbookSnapshotResource>> GetRunbookSnapshots(ProjectResource project, int skip, Nullable`1<int> take, string searchByName);
    public sealed virtual Task`1<ResourceCollection`1<RunbookSnapshotResource>> GetRunbookSnapshots(ProjectResource project, CancellationToken cancellationToken);
    public sealed virtual Task`1<ResourceCollection`1<RunbookSnapshotResource>> GetRunbookSnapshots(ProjectResource project, int skip, Nullable`1<int> take, string searchByName, CancellationToken cancellationToken);
    public sealed virtual Task`1<IReadOnlyList`1<RunbookSnapshotResource>> GetAllRunbookSnapshots(ProjectResource project);
    public sealed virtual Task`1<IReadOnlyList`1<RunbookSnapshotResource>> GetAllRunbookSnapshots(ProjectResource project, CancellationToken cancellationToken);
    public sealed virtual Task`1<RunbookSnapshotResource> GetRunbookSnapshotByName(ProjectResource project, string name);
    public sealed virtual Task`1<RunbookSnapshotResource> GetRunbookSnapshotByName(ProjectResource project, string name, CancellationToken cancellationToken);
    public sealed virtual Task`1<ResourceCollection`1<RunbookResource>> GetRunbooks(ProjectResource project, int skip, Nullable`1<int> take, string searchByName);
    public sealed virtual Task`1<ResourceCollection`1<RunbookResource>> GetRunbooks(ProjectResource project, CancellationToken cancellationToken);
    public sealed virtual Task`1<ResourceCollection`1<RunbookResource>> GetRunbooks(ProjectResource project, int skip, Nullable`1<int> take, string searchByName, CancellationToken cancellationToken);
    public sealed virtual Task`1<IReadOnlyList`1<RunbookResource>> GetAllRunbooks(ProjectResource project);
    public sealed virtual Task`1<IReadOnlyList`1<RunbookResource>> GetAllRunbooks(ProjectResource project, CancellationToken cancellationToken);
}
internal class Octopus.Client.Repositories.Async.ProjectTriggerRepository : BasicRepository`1<ProjectTriggerResource> {
    public ProjectTriggerRepository(IOctopusAsyncRepository repository);
    public sealed virtual Task`1<ProjectTriggerResource> FindByName(ProjectResource project, string name);
    public sealed virtual Task`1<ProjectTriggerEditor> CreateOrModify(ProjectResource project, string name, TriggerFilterResource filter, TriggerActionResource action);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.ProjectTriggerRepository/<FindByRunbook>d__3")]
public sealed virtual Task`1<ResourceCollection`1<ProjectTriggerResource>> FindByRunbook(String[] runbookIds);
}
internal class Octopus.Client.Repositories.Async.ProxyRepository : BasicRepository`1<ProxyResource> {
    public ProxyRepository(IOctopusAsyncRepository repository);
}
internal class Octopus.Client.Repositories.Async.ReleaseRepository : BasicRepository`1<ReleaseResource> {
    public ReleaseRepository(IOctopusAsyncRepository repository);
    public sealed virtual Task`1<ResourceCollection`1<DeploymentResource>> GetDeployments(ReleaseResource release, int skip, Nullable`1<int> take);
    public sealed virtual Task`1<ResourceCollection`1<DeploymentResource>> GetDeployments(ReleaseResource release, CancellationToken cancellationToken);
    public sealed virtual Task`1<ResourceCollection`1<DeploymentResource>> GetDeployments(ReleaseResource release, int skip, Nullable`1<int> take, CancellationToken cancellationToken);
    public sealed virtual Task`1<ResourceCollection`1<ArtifactResource>> GetArtifacts(ReleaseResource release, int skip, Nullable`1<int> take);
    public sealed virtual Task`1<ResourceCollection`1<ArtifactResource>> GetArtifacts(ReleaseResource release, CancellationToken cancellationToken);
    public sealed virtual Task`1<ResourceCollection`1<ArtifactResource>> GetArtifacts(ReleaseResource release, int skip, Nullable`1<int> take, CancellationToken cancellationToken);
    public sealed virtual Task`1<DeploymentTemplateResource> GetTemplate(ReleaseResource release);
    public sealed virtual Task`1<DeploymentTemplateResource> GetTemplate(ReleaseResource release, CancellationToken cancellationToken);
    public sealed virtual Task`1<DeploymentPreviewResource> GetPreview(DeploymentPromotionTarget promotionTarget, CancellationToken cancellationToken);
    public sealed virtual Task`1<DeploymentPreviewResource> GetPreview(DeploymentPromotionTarget promotionTarget);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.ReleaseRepository/<SnapshotVariables>d__11")]
public sealed virtual Task`1<ReleaseResource> SnapshotVariables(ReleaseResource release);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.ReleaseRepository/<SnapshotVariables>d__12")]
public sealed virtual Task`1<ReleaseResource> SnapshotVariables(ReleaseResource release, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.ReleaseRepository/<Create>d__13")]
public sealed virtual Task`1<ReleaseResource> Create(ReleaseResource release, bool ignoreChannelRules);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.ReleaseRepository/<Create>d__14")]
public sealed virtual Task`1<ReleaseResource> Create(ReleaseResource release, bool ignoreChannelRules, CancellationToken cancellationToken);
    public sealed virtual Task`1<LifecycleProgressionResource> GetProgression(ReleaseResource release);
    public sealed virtual Task`1<LifecycleProgressionResource> GetProgression(ReleaseResource release, CancellationToken cancellationToken);
}
internal class Octopus.Client.Repositories.Async.RetentionPolicyRepository : BasicRepository`1<RetentionPolicyResource> {
    public RetentionPolicyRepository(IOctopusAsyncRepository repository);
    public sealed virtual Task`1<TaskResource> ApplyNow(string spaceId);
}
internal class Octopus.Client.Repositories.Async.RunbookProcessRepository : BasicRepository`1<RunbookProcessResource> {
    public RunbookProcessRepository(IOctopusAsyncRepository repository);
    public sealed virtual Task`1<RunbookSnapshotTemplateResource> GetTemplate(RunbookProcessResource runbookProcess);
}
internal class Octopus.Client.Repositories.Async.RunbookRepository : BasicRepository`1<RunbookResource> {
    private SemanticVersion integrationTestVersion;
    private SemanticVersion versionAfterWhichRunbookRunParametersAreAvailable;
    public RunbookRepository(IOctopusAsyncRepository repository);
    public sealed virtual Task`1<RunbookResource> FindByName(ProjectResource project, string name);
    public sealed virtual Task`1<RunbookEditor> CreateOrModify(ProjectResource project, string name, string description);
    public sealed virtual Task`1<RunbookSnapshotTemplateResource> GetRunbookSnapshotTemplate(RunbookResource runbook);
    public sealed virtual Task`1<RunbookRunTemplateResource> GetRunbookRunTemplate(RunbookResource runbook);
    public sealed virtual Task`1<RunbookRunPreviewResource> GetPreview(DeploymentPromotionTarget promotionTarget);
    private bool ServerSupportsRunbookRunParameters(string version);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.RunbookRepository/<Run>d__9")]
public sealed virtual Task`1<RunbookRunResource> Run(RunbookResource runbook, RunbookRunResource runbookRun);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.RunbookRepository/<Run>d__10")]
public sealed virtual Task`1<RunbookRunResource[]> Run(RunbookResource runbook, RunbookRunParameters runbookRunParameters);
}
internal class Octopus.Client.Repositories.Async.RunbookRunRepository : BasicRepository`1<RunbookRunResource> {
    public RunbookRunRepository(IOctopusAsyncRepository repository);
    public sealed virtual Task`1<TaskResource> GetTask(RunbookRunResource resource);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.RunbookRunRepository/<FindBy>d__2")]
public sealed virtual Task`1<ResourceCollection`1<RunbookRunResource>> FindBy(String[] projects, String[] runbooks, String[] environments, int skip, Nullable`1<int> take);
    public sealed virtual Task Paginate(String[] projects, String[] runbooks, String[] environments, Func`2<ResourceCollection`1<RunbookRunResource>, bool> getNextPage);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.RunbookRunRepository/<Paginate>d__4")]
public sealed virtual Task Paginate(String[] projects, String[] runbooks, String[] environments, String[] tenants, Func`2<ResourceCollection`1<RunbookRunResource>, bool> getNextPage);
}
internal class Octopus.Client.Repositories.Async.RunbookSnapshotRepository : BasicRepository`1<RunbookSnapshotResource> {
    public RunbookSnapshotRepository(IOctopusAsyncRepository repository);
    public sealed virtual Task`1<ResourceCollection`1<RunbookRunResource>> GetRunbookRuns(RunbookSnapshotResource runbookSnapshot, int skip, Nullable`1<int> take);
    public sealed virtual Task`1<ResourceCollection`1<ArtifactResource>> GetArtifacts(RunbookSnapshotResource runbookSnapshot, int skip, Nullable`1<int> take);
    public sealed virtual Task`1<RunbookRunTemplateResource> GetTemplate(RunbookSnapshotResource runbookSnapshot);
    public sealed virtual Task`1<RunbookRunPreviewResource> GetPreview(DeploymentPromotionTarget promotionTarget);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.RunbookSnapshotRepository/<SnapshotVariables>d__5")]
public sealed virtual Task`1<RunbookSnapshotResource> SnapshotVariables(RunbookSnapshotResource runbookSnapshot);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.RunbookSnapshotRepository/<Create>d__6")]
public sealed virtual Task`1<RunbookSnapshotResource> Create(RunbookSnapshotResource runbookSnapshot);
}
internal class Octopus.Client.Repositories.Async.SchedulerRepository : object {
    private IOctopusAsyncRepository repository;
    public SchedulerRepository(IOctopusAsyncRepository repository);
    public sealed virtual Task Start();
    public sealed virtual Task Start(string taskName);
    public sealed virtual Task Trigger(string taskName);
    public sealed virtual Task Stop();
    public sealed virtual Task Stop(string taskName);
    public sealed virtual Task`1<ScheduledTaskDetailsResource> GetLogs(string taskName);
    public sealed virtual Task`1<Stream> GetRawLogs(string taskName);
    public sealed virtual Task`1<SchedulerStatusResource> Status();
}
internal class Octopus.Client.Repositories.Async.ScopedUserRoleRepository : MixedScopeBaseRepository`1<ScopedUserRoleResource> {
    public ScopedUserRoleRepository(IOctopusAsyncRepository repository);
    private ScopedUserRoleRepository(IOctopusAsyncRepository repository, SpaceContext spaceContext);
    public sealed virtual IScopedUserRoleRepository UsingContext(SpaceContext spaceContext);
}
internal class Octopus.Client.Repositories.Async.ServerStatusRepository : BasicRepository`1<ServerStatusResource> {
    public ServerStatusRepository(IOctopusAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.ServerStatusRepository/<GetServerStatus>d__1")]
public sealed virtual Task`1<ServerStatusResource> GetServerStatus();
    public sealed virtual Task`1<SystemInfoResource> GetSystemInfo(ServerStatusResource status);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.ServerStatusRepository/<GetServerHealth>d__3")]
public sealed virtual Task`1<ServerStatusHealthResource> GetServerHealth();
}
internal class Octopus.Client.Repositories.Async.SpaceRepository : BasicRepository`1<SpaceResource> {
    public SpaceRepository(IOctopusAsyncRepository repository);
    public sealed virtual Task SetLogo(SpaceResource space, string fileName, Stream contents);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.SpaceRepository/<Search>d__2")]
public sealed virtual Task`1<SpaceSearchResult[]> Search(string spaceId, string keyword);
}
public class Octopus.Client.Repositories.Async.SpaceScopedOperationOutsideOfCurrentSpaceContextException : Exception {
    public SpaceScopedOperationOutsideOfCurrentSpaceContextException(string spaceId, SpaceContext context);
}
internal class Octopus.Client.Repositories.Async.SubscriptionRepository : BasicRepository`1<SubscriptionResource> {
    public SubscriptionRepository(IOctopusAsyncRepository repository);
    public sealed virtual Task`1<SubscriptionEditor> CreateOrModify(string name, EventNotificationSubscription eventNotificationSubscription, bool isDisabled);
}
internal class Octopus.Client.Repositories.Async.TagSetRepository : BasicRepository`1<TagSetResource> {
    public TagSetRepository(IOctopusAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TagSetRepository/<Sort>d__1")]
public sealed virtual Task Sort(String[] tagSetIdsInOrder);
    public sealed virtual Task`1<TagSetEditor> CreateOrModify(string name);
    public sealed virtual Task`1<TagSetEditor> CreateOrModify(string name, string description);
}
internal class Octopus.Client.Repositories.Async.TaskRepository : MixedScopeBaseRepository`1<TaskResource> {
    public TaskRepository(IOctopusAsyncRepository repository);
    private TaskRepository(IOctopusAsyncRepository repository, SpaceContext spaceContext);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public sealed virtual Task`1<TaskResource> ExecuteHealthCheck(string description, int timeoutAfterMinutes, int machineTimeoutAfterMinutes, string environmentId, String[] machineIds, string restrictTo, string workerpoolId, String[] workerIds);
    public sealed virtual Task`1<TaskResource> ExecuteHealthCheck(CancellationToken cancellationToken, string description, int timeoutAfterMinutes, int machineTimeoutAfterMinutes, string environmentId, String[] machineIds, string restrictTo, string workerpoolId, String[] workerIds);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public sealed virtual Task`1<TaskResource> ExecuteCalamariUpdate(string description, String[] machineIds);
    public sealed virtual Task`1<TaskResource> ExecuteCalamariUpdate(CancellationToken cancellationToken, string description, String[] machineIds);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public sealed virtual Task`1<TaskResource> ExecuteBackup(string description);
    public sealed virtual Task`1<TaskResource> ExecuteBackup(CancellationToken cancellationToken, string description);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TaskRepository/<ExecuteTentacleUpgrade>d__8")]
[ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public sealed virtual Task`1<TaskResource> ExecuteTentacleUpgrade(string description, string environmentId, String[] machineIds, string restrictTo, string workerpoolId, String[] workerIds);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TaskRepository/<ExecuteTentacleUpgrade>d__9")]
public sealed virtual Task`1<TaskResource> ExecuteTentacleUpgrade(CancellationToken cancellationToken, string description, string environmentId, String[] machineIds, string restrictTo, string workerpoolId, String[] workerIds);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TaskRepository/<ExecuteAdHocScript>d__10")]
[ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public sealed virtual Task`1<TaskResource> ExecuteAdHocScript(string scriptBody, String[] machineIds, String[] environmentIds, String[] targetRoles, string description, string syntax, Nullable`1<TargetType> targetType);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TaskRepository/<ExecuteAdHocScript>d__11")]
public sealed virtual Task`1<TaskResource> ExecuteAdHocScript(string scriptBody, CancellationToken cancellationToken, String[] machineIds, String[] environmentIds, String[] targetRoles, string description, string syntax, Nullable`1<TargetType> targetType);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
[AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TaskRepository/<ExecuteActionTemplate>d__12")]
public sealed virtual Task`1<TaskResource> ExecuteActionTemplate(ActionTemplateResource template, Dictionary`2<string, PropertyValueResource> properties, String[] machineIds, String[] environmentIds, String[] targetRoles, string description, Nullable`1<TargetType> targetType);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TaskRepository/<ExecuteActionTemplate>d__13")]
public sealed virtual Task`1<TaskResource> ExecuteActionTemplate(ActionTemplateResource template, Dictionary`2<string, PropertyValueResource> properties, CancellationToken cancellationToken, String[] machineIds, String[] environmentIds, String[] targetRoles, string description, Nullable`1<TargetType> targetType);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TaskRepository/<EnsureValidTargetType>d__14")]
private Task EnsureValidTargetType(Nullable`1<TargetType> targetType, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public sealed virtual Task`1<TaskResource> ExecuteCommunityActionTemplatesSynchronisation(string description);
    public sealed virtual Task`1<TaskResource> ExecuteCommunityActionTemplatesSynchronisation(CancellationToken cancellationToken, string description);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TaskRepository/<GetDetails>d__17")]
[ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public sealed virtual Task`1<TaskDetailsResource> GetDetails(TaskResource resource, Nullable`1<bool> includeVerboseOutput, Nullable`1<int> tail);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TaskRepository/<GetDetails>d__18")]
public sealed virtual Task`1<TaskDetailsResource> GetDetails(TaskResource resource, CancellationToken cancellationToken, Nullable`1<bool> includeVerboseOutput, Nullable`1<int> tail);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TaskRepository/<GetRawOutputLog>d__19")]
[ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public sealed virtual Task`1<string> GetRawOutputLog(TaskResource resource);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TaskRepository/<GetRawOutputLog>d__20")]
public sealed virtual Task`1<string> GetRawOutputLog(TaskResource resource, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TaskRepository/<GetTaskTypes>d__21")]
[ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public sealed virtual Task`1<TaskTypeResource[]> GetTaskTypes();
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TaskRepository/<GetTaskTypes>d__22")]
public sealed virtual Task`1<TaskTypeResource[]> GetTaskTypes(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TaskRepository/<Prioritize>d__23")]
public sealed virtual Task Prioritize(TaskResource resource, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
[AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TaskRepository/<Rerun>d__24")]
public sealed virtual Task Rerun(TaskResource resource);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TaskRepository/<Rerun>d__25")]
public sealed virtual Task Rerun(TaskResource resource, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TaskRepository/<Cancel>d__26")]
[ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public sealed virtual Task Cancel(TaskResource resource);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TaskRepository/<Cancel>d__27")]
public sealed virtual Task Cancel(TaskResource resource, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TaskRepository/<ModifyState>d__28")]
[ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public sealed virtual Task ModifyState(TaskResource resource, TaskState newState, string reason);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TaskRepository/<ModifyState>d__29")]
public sealed virtual Task ModifyState(TaskResource resource, TaskState newState, string reason, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
[AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TaskRepository/<GetQueuedBehindTasks>d__30")]
public sealed virtual Task`1<IReadOnlyList`1<TaskResource>> GetQueuedBehindTasks(TaskResource resource);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TaskRepository/<GetQueuedBehindTasks>d__31")]
public sealed virtual Task`1<IReadOnlyList`1<TaskResource>> GetQueuedBehindTasks(TaskResource resource, CancellationToken cancellationToken);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public sealed virtual Task WaitForCompletion(TaskResource task, int pollIntervalSeconds, int timeoutAfterMinutes, Action`1<TaskResource[]> interval);
    public sealed virtual Task WaitForCompletion(TaskResource task, CancellationToken cancellationToken, int pollIntervalSeconds, int timeoutAfterMinutes, Action`2<TaskResource[], CancellationToken> interval);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public sealed virtual Task WaitForCompletion(TaskResource[] tasks, int pollIntervalSeconds, int timeoutAfterMinutes, Action`1<TaskResource[]> interval);
    public sealed virtual Task WaitForCompletion(TaskResource[] tasks, CancellationToken cancellationToken, int pollIntervalSeconds, int timeoutAfterMinutes, Action`2<TaskResource[], CancellationToken> interval);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public sealed virtual Task WaitForCompletion(TaskResource[] tasks, int pollIntervalSeconds, int timeoutAfterMinutes, Func`2<TaskResource[], Task> interval);
    public sealed virtual Task WaitForCompletion(TaskResource[] tasks, CancellationToken cancellationToken, int pollIntervalSeconds, int timeoutAfterMinutes, Func`3<TaskResource[], CancellationToken, Task> interval);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TaskRepository/<WaitForCompletion>d__38")]
[ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public sealed virtual Task WaitForCompletion(TaskResource[] tasks, int pollIntervalSeconds, Nullable`1<TimeSpan> timeoutAfter, Func`2<TaskResource[], Task> interval);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TaskRepository/<WaitForCompletion>d__39")]
public sealed virtual Task WaitForCompletion(TaskResource[] tasks, CancellationToken cancellationToken, int pollIntervalSeconds, Nullable`1<TimeSpan> timeoutAfter, Func`3<TaskResource[], CancellationToken, Task> interval);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public sealed virtual Task`1<List`1<TaskResource>> GetAllActive(int pageSize);
    public sealed virtual Task`1<List`1<TaskResource>> GetAllActive(CancellationToken cancellationToken, int pageSize);
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
[AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TaskRepository/<GetActiveWithSummary>d__42")]
public sealed virtual Task`1<TaskResourceCollection> GetActiveWithSummary(int pageSize, int skip);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TaskRepository/<GetActiveWithSummary>d__43")]
public sealed virtual Task`1<TaskResourceCollection> GetActiveWithSummary(CancellationToken cancellationToken, int pageSize, int skip);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TaskRepository/<GetAllWithSummary>d__44")]
[ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public sealed virtual Task`1<TaskResourceCollection> GetAllWithSummary(int pageSize, int skip);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TaskRepository/<GetAllWithSummary>d__45")]
public sealed virtual Task`1<TaskResourceCollection> GetAllWithSummary(CancellationToken cancellationToken, int pageSize, int skip);
    public sealed virtual ITaskRepository UsingContext(SpaceContext spaceContext);
    private void EnsureTaskCanRunInTheCurrentContext(TaskResource task);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TaskRepository/<CreateSystemTask>d__48")]
private Task`1<TaskResource> CreateSystemTask(TaskResource task, CancellationToken cancellationToken);
}
internal class Octopus.Client.Repositories.Async.TeamsRepository : MixedScopeBaseRepository`1<TeamResource> {
    public TeamsRepository(IOctopusAsyncRepository repository);
    private TeamsRepository(IOctopusAsyncRepository repository, SpaceContext spaceContext);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TeamsRepository/<GetScopedUserRoles>d__2")]
public sealed virtual Task`1<List`1<ScopedUserRoleResource>> GetScopedUserRoles(TeamResource team);
    public sealed virtual ITeamsRepository UsingContext(SpaceContext spaceContext);
}
public class Octopus.Client.Repositories.Async.TelemetryConfigurationRepository : object {
    private IOctopusAsyncRepository repository;
    private static string LinkName;
    public TelemetryConfigurationRepository(IOctopusAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TelemetryConfigurationRepository/<GetTelemetryConfiguration>d__3")]
public sealed virtual Task`1<TelemetryConfigurationResource> GetTelemetryConfiguration();
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TelemetryConfigurationRepository/<ModifyTelemetryConfiguration>d__4")]
public sealed virtual Task`1<TelemetryConfigurationResource> ModifyTelemetryConfiguration(TelemetryConfigurationResource resource);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TelemetryConfigurationRepository/<EnableTelemetry>d__5")]
public sealed virtual Task`1<TelemetryConfigurationResource> EnableTelemetry();
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TelemetryConfigurationRepository/<DisableTelemetry>d__6")]
public sealed virtual Task`1<TelemetryConfigurationResource> DisableTelemetry();
}
internal class Octopus.Client.Repositories.Async.TenantRepository : BasicRepository`1<TenantResource> {
    public TenantRepository(IOctopusAsyncRepository repository);
    public sealed virtual Task`1<TenantVariableResource> GetVariables(TenantResource tenant);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TenantRepository/<FindAll>d__2")]
public sealed virtual Task`1<List`1<TenantResource>> FindAll(string name, String[] tags, int pageSize);
    public sealed virtual Task`1<TenantVariableResource> ModifyVariables(TenantResource tenant, TenantVariableResource variables);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TenantRepository/<GetMissingVariables>d__4")]
public sealed virtual Task`1<List`1<TenantsMissingVariablesResource>> GetMissingVariables(string tenantId, string projectId, string environmentId);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TenantRepository/<Status>d__5")]
public sealed virtual Task`1<MultiTenancyStatusResource> Status();
    public sealed virtual Task SetLogo(TenantResource tenant, string fileName, Stream contents);
    public sealed virtual Task`1<TenantEditor> CreateOrModify(string name);
    public sealed virtual Task`1<TenantEditor> CreateOrModify(string name, string description);
    public sealed virtual Task`1<TenantEditor> CreateOrModify(string name, string description, string cloneId);
}
internal class Octopus.Client.Repositories.Async.TenantVariablesRepository : BasicRepository`1<TenantVariableResource> {
    public TenantVariablesRepository(IOctopusAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.TenantVariablesRepository/<GetAll>d__0")]
public sealed virtual Task`1<List`1<TenantVariableResource>> GetAll(ProjectResource projectResource);
}
internal class Octopus.Client.Repositories.Async.UpgradeConfigurationRepository : BasicRepository`1<UpgradeConfigurationResource> {
    public UpgradeConfigurationRepository(IOctopusAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.UpgradeConfigurationRepository/<Get>d__1")]
public sealed virtual Task`1<UpgradeConfigurationResource> Get();
}
internal class Octopus.Client.Repositories.Async.UserInvitesRepository : MixedScopeBaseRepository`1<InvitationResource> {
    public UserInvitesRepository(IOctopusAsyncRepository repository);
    public sealed virtual Task`1<InvitationResource> Invite(string addToTeamId);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.UserInvitesRepository/<Invite>d__2")]
public sealed virtual Task`1<InvitationResource> Invite(ReferenceCollection addToTeamIds);
}
internal class Octopus.Client.Repositories.Async.UserPermissionsRepository : MixedScopeBaseRepository`1<UserPermissionSetResource> {
    public UserPermissionsRepository(IOctopusAsyncRepository repository);
    private UserPermissionsRepository(IOctopusAsyncRepository repository, SpaceContext spaceContext);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.UserPermissionsRepository/<Get>d__2")]
public sealed virtual Task`1<UserPermissionSetResource> Get(UserResource user);
    [ObsoleteAttribute("Use GetDescriptions(UserResource) instead. This method only returns empty sets and is only kept for backwards compatibility.")]
[AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.UserPermissionsRepository/<GetConfiguration>d__3")]
public sealed virtual Task`1<UserPermissionSetResource> GetConfiguration(UserResource user);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.UserPermissionsRepository/<GetDescriptions>d__4")]
public sealed virtual Task`1<IReadOnlyDictionary`2<Permission, PermissionDescription>> GetDescriptions(UserResource user);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.UserPermissionsRepository/<Export>d__5")]
public sealed virtual Task`1<Stream> Export(UserPermissionSetResource userPermissions);
    public sealed virtual IUserPermissionsRepository UsingContext(SpaceContext spaceContext);
}
internal class Octopus.Client.Repositories.Async.UserRepository : BasicRepository`1<UserResource> {
    private BasicRepository`1<InvitationResource> invitations;
    public UserRepository(IOctopusAsyncRepository repository);
    public sealed virtual Task`1<UserResource> FindByUsername(string username);
    public sealed virtual Task`1<UserResource> Create(string username, string displayName, string password, string emailAddress);
    public sealed virtual Task`1<UserResource> CreateServiceAccount(string username, string displayName);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.UserRepository/<Register>d__5")]
public sealed virtual Task`1<UserResource> Register(RegisterCommand registerCommand);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.UserRepository/<SignIn>d__6")]
public sealed virtual Task SignIn(LoginCommand loginCommand);
    public sealed virtual Task SignIn(string username, string password, bool rememberMe);
    public sealed virtual Task SignOut();
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.UserRepository/<GetCurrent>d__9")]
public sealed virtual Task`1<UserResource> GetCurrent();
    public sealed virtual Task`1<SpaceResource[]> GetSpaces(UserResource user);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.UserRepository/<GenerateAccessToken>d__11")]
public sealed virtual Task`1<GeneratedAccessTokenResource> GenerateAccessToken(UserResource user, CancellationToken cancellationToken);
    public sealed virtual Task`1<ApiKeyCreatedResource> CreateApiKey(UserResource user, string purpose, Nullable`1<DateTimeOffset> expires);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.UserRepository/<GetApiKeys>d__13")]
public sealed virtual Task`1<List`1<ApiKeyResource>> GetApiKeys(UserResource user);
    public sealed virtual Task RevokeApiKey(ApiKeyResourceBase apiKey);
    public sealed virtual Task RevokeSessions(UserResource user);
    [ObsoleteAttribute("Use the IUserInvitesRepository instead", "False")]
public sealed virtual Task`1<InvitationResource> Invite(string addToTeamId);
    [ObsoleteAttribute("Use the IUserInvitesRepository instead", "False")]
public sealed virtual Task`1<InvitationResource> Invite(ReferenceCollection addToTeamIds);
}
internal class Octopus.Client.Repositories.Async.UserRolesRepository : BasicRepository`1<UserRoleResource> {
    private static Permission TaskViewLogPermission;
    public UserRolesRepository(IOctopusAsyncRepository repository);
    private static UserRolesRepository();
    [ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
[AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.UserRolesRepository/<Create>d__1")]
public virtual Task`1<UserRoleResource> Create(UserRoleResource resource, object pathParameters);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.UserRolesRepository/<Create>d__2")]
public virtual Task`1<UserRoleResource> Create(UserRoleResource resource, object pathParameters, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.UserRolesRepository/<Modify>d__3")]
[ObsoleteAttribute("Please use the overload with cancellation token instead.", "False")]
public virtual Task`1<UserRoleResource> Modify(UserRoleResource resource);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.UserRolesRepository/<Modify>d__4")]
public virtual Task`1<UserRoleResource> Modify(UserRoleResource resource, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.UserRolesRepository/<RemoveInvalidPermissions>d__6")]
private Task RemoveInvalidPermissions(UserRoleResource resource, CancellationToken cancellationToken);
    [DebuggerHiddenAttribute]
[CompilerGeneratedAttribute]
private Task`1<UserRoleResource> <>n__0(UserRoleResource resource, object pathParameters, CancellationToken cancellationToken);
    [DebuggerHiddenAttribute]
[CompilerGeneratedAttribute]
private Task`1<UserRoleResource> <>n__1(UserRoleResource resource, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
internal static List`1<Permission> <RemoveInvalidPermissions>g__RemoveDeprecatedPermission|6_0(Permission permissionToRemove, List`1<Permission> permissions);
}
internal class Octopus.Client.Repositories.Async.UserTeamsRepository : MixedScopeBaseRepository`1<TeamNameResource> {
    public UserTeamsRepository(IOctopusAsyncRepository repository);
    private UserTeamsRepository(IOctopusAsyncRepository repository, SpaceContext spaceContext);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.UserTeamsRepository/<Get>d__2")]
public sealed virtual Task`1<TeamNameResource[]> Get(UserResource user);
    public sealed virtual IUserTeamsRepository UsingContext(SpaceContext spaceContext);
}
internal class Octopus.Client.Repositories.Async.VariableSetRepository : BasicRepository`1<VariableSetResource> {
    public VariableSetRepository(IOctopusAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.VariableSetRepository/<GetVariableNames>d__1")]
public sealed virtual Task`1<String[]> GetVariableNames(string project, String[] environments, string gitRef);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.VariableSetRepository/<GetVariableNames>d__2")]
public sealed virtual Task`1<String[]> GetVariableNames(string project, String[] environments, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.VariableSetRepository/<GetVariableNames>d__3")]
public sealed virtual Task`1<String[]> GetVariableNames(string project, String[] environments, string gitRef, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.VariableSetRepository/<Get>d__4")]
public sealed virtual Task`1<VariableSetResource> Get(ProjectResource projectResource, string gitRef);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.VariableSetRepository/<Get>d__5")]
public sealed virtual Task`1<VariableSetResource> Get(ProjectResource projectResource, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.VariableSetRepository/<Get>d__6")]
public sealed virtual Task`1<VariableSetResource> Get(ProjectResource projectResource, string gitRef, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.VariableSetRepository/<GetVariablePreview>d__7")]
public sealed virtual Task`1<VariableSetResource> GetVariablePreview(string project, string channel, string tenant, string runbook, string action, string environment, string machine, string role);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.VariableSetRepository/<GetVariablePreview>d__8")]
public sealed virtual Task`1<VariableSetResource> GetVariablePreview(string project, string channel, string tenant, string runbook, string action, string environment, string machine, string role, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.VariableSetRepository/<GetVariablePreview>d__9")]
public sealed virtual Task`1<VariableSetResource> GetVariablePreview(ProjectResource projectResource, string channel, string tenant, string runbook, string action, string environment, string machine, string role, string gitRef);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.VariableSetRepository/<GetVariablePreview>d__10")]
public sealed virtual Task`1<VariableSetResource> GetVariablePreview(ProjectResource projectResource, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.VariableSetRepository/<GetVariablePreview>d__11")]
public sealed virtual Task`1<VariableSetResource> GetVariablePreview(ProjectResource projectResource, string channel, string tenant, string runbook, string action, string environment, string machine, string role, string gitRef, CancellationToken cancellationToken);
    public virtual Task`1<List`1<VariableSetResource>> Get(String[] ids);
    public virtual Task`1<List`1<VariableSetResource>> Get(CancellationToken cancellationToken, String[] ids);
    private bool ProjectHasVariablesInGit(ProjectResource projectResource);
}
internal class Octopus.Client.Repositories.Async.WorkerPoolRepository : BasicRepository`1<WorkerPoolResource> {
    public WorkerPoolRepository(IOctopusAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.WorkerPoolRepository/<GetMachines>d__1")]
public sealed virtual Task`1<List`1<WorkerResource>> GetMachines(WorkerPoolResource workerPool, Nullable`1<int> skip, Nullable`1<int> take, string partialName, Nullable`1<bool> isDisabled, string healthStatuses, string commStyles);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.WorkerPoolRepository/<Summary>d__2")]
public sealed virtual Task`1<WorkerPoolsSummaryResource> Summary(string ids, string partialName, string machinePartialName, Nullable`1<bool> isDisabled, string healthStatuses, string commStyles, Nullable`1<bool> hideEmptyPools);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.WorkerPoolRepository/<Sort>d__3")]
public sealed virtual Task Sort(String[] workerPoolIdsInOrder);
    public sealed virtual Task`1<WorkerPoolEditor> CreateOrModify(string name);
    public sealed virtual Task`1<WorkerPoolEditor> CreateOrModify(string name, string description);
}
internal class Octopus.Client.Repositories.Async.WorkerRepository : BasicRepository`1<WorkerResource> {
    public WorkerRepository(IOctopusAsyncRepository repository);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.WorkerRepository/<Discover>d__1")]
public sealed virtual Task`1<WorkerResource> Discover(string host, int port, Nullable`1<DiscoverableEndpointType> type);
    public sealed virtual Task`1<MachineConnectionStatus> GetConnectionStatus(WorkerResource worker);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.WorkerRepository/<FindByThumbprint>d__3")]
public sealed virtual Task`1<List`1<WorkerResource>> FindByThumbprint(string thumbprint);
    public sealed virtual Task`1<WorkerEditor> CreateOrModify(string name, EndpointResource endpoint, WorkerPoolResource[] workerpools);
    [AsyncStateMachineAttribute("Octopus.Client.Repositories.Async.WorkerRepository/<List>d__5")]
public sealed virtual Task`1<ResourceCollection`1<WorkerResource>> List(int skip, Nullable`1<int> take, string ids, string name, string partialName, Nullable`1<bool> isDisabled, string healthStatuses, string commStyles, string workerpoolIds);
}
internal class Octopus.Client.Repositories.BackupRepository : object {
    private IOctopusRepository repository;
    public BackupRepository(IOctopusRepository repository);
    public sealed virtual BackupConfigurationResource GetConfiguration();
    public sealed virtual BackupConfigurationResource ModifyConfiguration(BackupConfigurationResource backupConfiguration);
}
internal abstract class Octopus.Client.Repositories.BasicRepository`1 : object {
    private Func`2<IOctopusRepository, string> getCollectionLinkName;
    [CompilerGeneratedAttribute]
private IOctopusRepository <Repository>k__BackingField;
    private IOctopusClient client;
    protected string CollectionLinkName;
    private SemanticVersion minimumRequiredVersion;
    private bool hasMinimumRequiredVersion;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> <AdditionalQueryParameters>k__BackingField;
    public IOctopusRepository Repository { get; }
    protected Dictionary`2<string, object> AdditionalQueryParameters { get; }
    public IOctopusClient Client { get; }
    protected BasicRepository`1(IOctopusRepository repository, string collectionLinkName, Func`2<IOctopusRepository, string> getCollectionLinkName);
    [CompilerGeneratedAttribute]
public IOctopusRepository get_Repository();
    [CompilerGeneratedAttribute]
protected virtual Dictionary`2<string, object> get_AdditionalQueryParameters();
    public sealed virtual IOctopusClient get_Client();
    protected virtual void CheckSpaceResource(IHaveSpaceResource spaceResource);
    private bool ServerSupportsSpaces();
    protected void MinimumCompatibleVersion(string version);
    protected void ThrowIfServerVersionIsNotCompatible();
    protected void EnsureServerIsMinimumVersion(SemanticVersion requiredVersion, Func`2<string, string> messageGenerator);
    private void AssertSpaceIdMatchesResource(TResource resource);
    public virtual TResource Create(TResource resource, object pathParameters);
    public virtual TResource Modify(TResource resource);
    public sealed virtual void Delete(TResource resource);
    public sealed virtual void Paginate(Func`2<ResourceCollection`1<TResource>, bool> getNextPage, string path, object pathParameters);
    public sealed virtual TResource FindOne(Func`2<TResource, bool> search, string path, object pathParameters);
    public sealed virtual List`1<TResource> FindMany(Func`2<TResource, bool> search, string path, object pathParameters);
    public sealed virtual List`1<TResource> FindAll(string path, object pathParameters);
    public sealed virtual List`1<TResource> GetAll();
    public sealed virtual List`1<TResource> FindByPartialName(string partialName, string path, object pathParameters);
    public sealed virtual TResource FindByName(string name, string path, object pathParameters);
    public sealed virtual List`1<TResource> FindByNames(IEnumerable`1<string> names, string path, object pathParameters);
    public sealed virtual TResource FindBySlug(string slug, string path, object pathParameters);
    public sealed virtual List`1<TResource> FindBySlugs(IEnumerable`1<string> slugs, string path, object pathParameters);
    public sealed virtual TResource Get(string idOrHref);
    public virtual List`1<TResource> Get(String[] ids);
    public sealed virtual TResource Refresh(TResource resource);
    protected virtual void EnrichSpaceId(TResource resource);
    protected string ResolveLink();
    [CompilerGeneratedAttribute]
private string <ThrowIfServerVersionIsNotCompatible>b__17_0(string currentServerVersion);
}
public class Octopus.Client.Repositories.BuildInformationRepository : object {
    private IOctopusRepository repository;
    private static ILog Logger;
    public BuildInformationRepository(IOctopusRepository repository);
    private static BuildInformationRepository();
    public sealed virtual OctopusPackageVersionBuildInformationMappedResource Get(string id);
    public sealed virtual OctopusPackageVersionBuildInformationMappedResource Push(string packageId, string version, OctopusBuildInformation octopusMetadata);
    public sealed virtual OctopusPackageVersionBuildInformationMappedResource Push(string packageId, string version, OctopusBuildInformation octopusMetadata, OverwriteMode overwriteMode);
    public sealed virtual ResourceCollection`1<OctopusPackageVersionBuildInformationMappedResource> ListBuilds(string packageId, int skip, int take);
    public sealed virtual ResourceCollection`1<OctopusPackageVersionBuildInformationMappedResource> LatestBuilds(int skip, int take);
    public sealed virtual void Delete(OctopusPackageVersionBuildInformationMappedResource buildInformation);
    public sealed virtual void DeleteBuilds(IReadOnlyList`1<OctopusPackageVersionBuildInformationMappedResource> builds);
}
internal class Octopus.Client.Repositories.BuiltInPackageRepositoryRepository : object {
    private IOctopusRepository repository;
    private static ILog Logger;
    public BuiltInPackageRepositoryRepository(IOctopusRepository repository);
    private static BuiltInPackageRepositoryRepository();
    public sealed virtual PackageFromBuiltInFeedResource PushPackage(string fileName, Stream contents, OverwriteMode overwriteMode);
    public sealed virtual PackageFromBuiltInFeedResource PushPackage(string fileName, Stream contents, bool replaceExisting);
    public sealed virtual PackageFromBuiltInFeedResource PushPackage(string fileName, Stream contents, bool replaceExisting, bool useDeltaCompression);
    public sealed virtual PackageFromBuiltInFeedResource GetPackage(string packageId, string version);
    public sealed virtual PackageFromBuiltInFeedResource PushPackage(string fileName, Stream contents, OverwriteMode overwriteMode, bool useDeltaCompression);
    private PackageFromBuiltInFeedResource VerifyTransfer(string fileName, Stream contents);
    private PackageFromBuiltInFeedResource TryFindPackage(string packageId, SemanticVersion version);
    private PackageFromBuiltInFeedResource AttemptDeltaPush(string fileName, Stream contents, OverwriteMode overwriteMode);
    public sealed virtual ResourceCollection`1<PackageFromBuiltInFeedResource> ListPackages(string packageId, int skip, int take);
    public sealed virtual ResourceCollection`1<PackageFromBuiltInFeedResource> LatestPackages(int skip, int take);
    public sealed virtual void DeletePackage(PackageResource package);
    public sealed virtual void DeletePackages(IReadOnlyList`1<PackageResource> packages);
}
internal class Octopus.Client.Repositories.CertificateConfigurationRepository : BasicRepository`1<CertificateConfigurationResource> {
    public CertificateConfigurationRepository(IOctopusRepository repository);
    public sealed virtual CertificateConfigurationResource GetOctopusCertificate();
    public sealed virtual Stream GetPublicCertificate(CertificateConfigurationResource certificateConfiguration);
    private static string DetermineCollectionLinkName(IOctopusRepository repository);
}
internal class Octopus.Client.Repositories.CertificateRepository : BasicRepository`1<CertificateResource> {
    public CertificateRepository(IOctopusRepository repository);
    public sealed virtual Stream Export(CertificateResource certificate, Nullable`1<CertificateFormat> format, string password, bool includePrivateKey);
    public sealed virtual Stream ExportAsPem(CertificateResource certificate, bool includePrivateKey, CertificateExportPemOptions pemOptions);
    public sealed virtual CertificateResource Replace(CertificateResource certificate, string certificateData, string password);
    public sealed virtual void Archive(CertificateResource certificate);
    public sealed virtual void UnArchive(CertificateResource certificate);
    public sealed virtual CertificateConfigurationResource GetOctopusCertificate();
}
internal class Octopus.Client.Repositories.ChannelRepository : BasicRepository`1<ChannelResource> {
    public ChannelRepository(IOctopusRepository repository);
    public sealed virtual ChannelResource FindByName(ProjectResource project, string name);
    public sealed virtual ChannelEditor CreateOrModify(ProjectResource project, string name);
    public sealed virtual ChannelEditor CreateOrModify(ProjectResource project, string name, string description);
}
internal class Octopus.Client.Repositories.CommunityActionTemplateRepository : BasicRepository`1<CommunityActionTemplateResource> {
    public CommunityActionTemplateRepository(IOctopusRepository repository);
    public sealed virtual void Install(CommunityActionTemplateResource resource);
    public sealed virtual void UpdateInstallation(CommunityActionTemplateResource resource);
    public sealed virtual ActionTemplateResource GetInstalledTemplate(CommunityActionTemplateResource resource);
}
internal class Octopus.Client.Repositories.ConfigurationRepository : object {
    private IOctopusRepository repository;
    private string collectionLinkName;
    public ConfigurationRepository(IOctopusRepository repository);
    public sealed virtual T Get();
    public sealed virtual T Modify(T configurationResource);
    private ConfigurationItemResource GetConfigurationItem(IResource instance);
}
internal class Octopus.Client.Repositories.DashboardConfigurationRepository : object {
    private IOctopusRepository repository;
    public DashboardConfigurationRepository(IOctopusRepository repository);
    public sealed virtual DashboardConfigurationResource GetDashboardConfiguration();
    public sealed virtual DashboardConfigurationResource ModifyDashboardConfiguration(DashboardConfigurationResource resource);
}
internal class Octopus.Client.Repositories.DashboardRepository : object {
    private IOctopusRepository repository;
    public DashboardRepository(IOctopusRepository repository);
    public sealed virtual DashboardResource GetDashboard();
    public sealed virtual DashboardResource GetDynamicDashboard(String[] projects, String[] environments, DashboardItemsOptions dashboardItemsOptions);
}
internal class Octopus.Client.Repositories.DefectsRepository : BasicRepository`1<DefectResource> {
    public DefectsRepository(IOctopusRepository repository);
    public sealed virtual ResourceCollection`1<DefectResource> GetDefects(ReleaseResource release);
    public sealed virtual void RaiseDefect(ReleaseResource release, string description);
    public sealed virtual void ResolveDefect(ReleaseResource release);
}
public class Octopus.Client.Repositories.DeploymentFreezeRepository : object {
    [CompilerGeneratedAttribute]
private IOctopusClient <client>P;
    public DeploymentFreezeRepository(IOctopusClient client);
    public sealed virtual GetDeploymentFreezeByIdResponse Get(GetDeploymentFreezeByIdRequest request);
    public sealed virtual GetDeploymentFreezesResponse Get(GetDeploymentFreezesRequest request);
    public sealed virtual CreateDeploymentFreezeResponse Create(CreateDeploymentFreezeCommand command);
    public sealed virtual ModifyDeploymentFreezeResponse Modify(ModifyDeploymentFreezeCommand command);
    public sealed virtual DeleteDeploymentFreezeResponse Delete(DeleteDeploymentFreezeCommand command);
}
internal class Octopus.Client.Repositories.DeploymentProcessRepository : BasicRepository`1<DeploymentProcessResource> {
    public DeploymentProcessRepository(IOctopusRepository repository);
    public sealed virtual ReleaseTemplateResource GetTemplate(DeploymentProcessResource deploymentProcess, ChannelResource channel);
    public sealed virtual DeploymentProcessResource Get(ProjectResource projectResource);
    public sealed virtual DeploymentProcessResource Get(ProjectResource projectResource, string gitRef);
    public sealed virtual DeploymentProcessResource Modify(DeploymentProcessResource deploymentSettings, string commitMessage);
}
internal class Octopus.Client.Repositories.DeploymentRepository : BasicRepository`1<DeploymentResource> {
    public DeploymentRepository(IOctopusRepository repository);
    public sealed virtual TaskResource GetTask(DeploymentResource resource);
    public sealed virtual ResourceCollection`1<DeploymentResource> FindBy(String[] projects, String[] environments, int skip, Nullable`1<int> take);
    [ObsoleteAttribute("This method is not a find all, it still requires paging. So it has been renamed to `FindBy`")]
public sealed virtual ResourceCollection`1<DeploymentResource> FindAll(String[] projects, String[] environments, int skip, Nullable`1<int> take);
    public sealed virtual void Paginate(String[] projects, String[] environments, Func`2<ResourceCollection`1<DeploymentResource>, bool> getNextPage);
    public sealed virtual void Paginate(String[] projects, String[] environments, String[] tenants, Func`2<ResourceCollection`1<DeploymentResource>, bool> getNextPage);
}
internal class Octopus.Client.Repositories.DeploymentSettingsRepository : object {
    private IOctopusClient client;
    public DeploymentSettingsRepository(IOctopusRepository repository);
    public sealed virtual DeploymentSettingsResource Get(ProjectResource projectResource, string gitRef);
    public sealed virtual DeploymentSettingsResource Get(ProjectResource project);
    public sealed virtual DeploymentSettingsResource Modify(ProjectResource project, DeploymentSettingsResource deploymentSettings);
    public sealed virtual DeploymentSettingsResource Modify(DeploymentSettingsResource deploymentSettings);
    public sealed virtual DeploymentSettingsResource Modify(DeploymentSettingsResource deploymentSettings, string commitMessage);
}
internal class Octopus.Client.Repositories.EnvironmentRepository : BasicRepository`1<EnvironmentResource> {
    public EnvironmentRepository(IOctopusRepository repository);
    public sealed virtual List`1<MachineResource> GetMachines(EnvironmentResource environment, Nullable`1<int> skip, Nullable`1<int> take, string partialName, string roles, Nullable`1<bool> isDisabled, string healthStatuses, string commStyles, string tenantIds, string tenantTags);
    public sealed virtual EnvironmentsSummaryResource Summary(string ids, string partialName, string machinePartialName, string roles, Nullable`1<bool> isDisabled, string healthStatuses, string commStyles, string tenantIds, string tenantTags, Nullable`1<bool> hideEmptyEnvironments);
    public sealed virtual void Sort(String[] environmentIdsInOrder);
    public sealed virtual EnvironmentEditor CreateOrModify(string name);
    public sealed virtual EnvironmentEditor CreateOrModify(string name, string description);
    public sealed virtual EnvironmentEditor CreateOrModify(string name, string description, bool allowDynamicInfrastructure);
}
internal class Octopus.Client.Repositories.EventRepository : MixedScopeBaseRepository`1<EventResource> {
    public EventRepository(IOctopusRepository repository);
    private EventRepository(IOctopusRepository repository, SpaceContext userDefinedSpaceContext);
    [ObsoleteAttribute("This method was deprecated in Octopus 3.4.  Please use the other List method by providing named arguments.")]
public sealed virtual ResourceCollection`1<EventResource> List(int skip, string filterByUserId, string regardingDocumentId, bool includeInternalEvents);
    public sealed virtual ResourceCollection`1<EventResource> List(int skip, Nullable`1<int> take, string from, string to, string regarding, string regardingAny, bool includeInternalEvents, string user, string users, string projects, string environments, string eventGroups, string eventCategories, string tenants, string tags, Nullable`1<long> fromAutoId, Nullable`1<long> toAutoId, string documentTypes, string eventAgents, string projectGroups);
    public sealed virtual IReadOnlyList`1<DocumentTypeResource> GetDocumentTypes();
    public sealed virtual IReadOnlyList`1<EventAgentResource> GetAgents();
    public sealed virtual IReadOnlyList`1<EventCategoryResource> GetCategories();
    public sealed virtual IReadOnlyList`1<EventGroupResource> GetGroups();
    public sealed virtual IEventRepository UsingContext(SpaceContext userDefinedSpaceContext);
}
internal class Octopus.Client.Repositories.FeaturesConfigurationRepository : object {
    private IOctopusRepository repository;
    public FeaturesConfigurationRepository(IOctopusRepository repository);
    public sealed virtual FeaturesConfigurationResource GetFeaturesConfiguration();
    public sealed virtual FeaturesConfigurationResource ModifyFeaturesConfiguration(FeaturesConfigurationResource resource);
}
internal class Octopus.Client.Repositories.FeedRepository : BasicRepository`1<FeedResource> {
    public FeedRepository(IOctopusRepository repository);
    public sealed virtual List`1<PackageResource> GetVersions(FeedResource feed, String[] packageIds);
}
public interface Octopus.Client.Repositories.IAccountRepository {
    public abstract virtual AccountType DetermineAccountType();
    public abstract virtual TAccount GetOfType(string idOrHref);
    public abstract virtual List`1<TAccount> GetOfType(String[] ids);
    public abstract virtual TAccount RefreshOfType(TAccount resource);
    public abstract virtual TAccount FindByNameOfType(string name);
    public abstract virtual List`1<TAccount> FindByNamesOfType(IEnumerable`1<string> names);
    public abstract virtual void PaginateOfType(Func`2<ResourceCollection`1<TAccount>, bool> getNextPage, object pathParameters);
    public abstract virtual TAccount FindOneOfType(Func`2<TAccount, bool> search, object pathParameters);
    public abstract virtual List`1<TAccount> FindManyOfType(Func`2<TAccount, bool> search, object pathParameters);
    public abstract virtual List`1<TAccount> FindAllOfType(object pathParameters);
    public abstract virtual AccountUsageResource GetAccountUsage(AccountResource account);
}
public interface Octopus.Client.Repositories.IActionTemplateRepository {
    public abstract virtual List`1<ActionTemplateSearchResource> Search();
    public abstract virtual ActionTemplateResource GetVersion(ActionTemplateResource resource, int version);
    public abstract virtual ActionUpdateResultResource[] UpdateActions(ActionTemplateResource actionTemplate, ActionsUpdateResource update);
    public abstract virtual void SetLogo(ActionTemplateResource resource, string fileName, Stream contents);
}
public interface Octopus.Client.Repositories.IArchivedEventFileRepository {
    public abstract virtual Stream GetContent(ArchivedEventFileResource archiveEventFile);
    public abstract virtual ResourceCollection`1<ArchivedEventFileResource> List(int skip, Nullable`1<int> take);
}
public interface Octopus.Client.Repositories.IArtifactRepository {
    public abstract virtual Stream GetContent(ArtifactResource artifact);
    public abstract virtual void PutContent(ArtifactResource artifact, Stream contentStream);
    public abstract virtual ResourceCollection`1<ArtifactResource> FindRegarding(IResource resource);
}
public interface Octopus.Client.Repositories.IBackupRepository {
    public abstract virtual BackupConfigurationResource GetConfiguration();
    public abstract virtual BackupConfigurationResource ModifyConfiguration(BackupConfigurationResource backupConfiguration);
}
public interface Octopus.Client.Repositories.IBuildInformationRepository {
    public abstract virtual OctopusPackageVersionBuildInformationMappedResource Get(string id);
    public abstract virtual OctopusPackageVersionBuildInformationMappedResource Push(string packageId, string version, OctopusBuildInformation octopusMetadata, OverwriteMode overwriteMode);
    public abstract virtual OctopusPackageVersionBuildInformationMappedResource Push(string packageId, string version, OctopusBuildInformation octopusMetadata);
    public abstract virtual ResourceCollection`1<OctopusPackageVersionBuildInformationMappedResource> ListBuilds(string packageId, int skip, int take);
    public abstract virtual ResourceCollection`1<OctopusPackageVersionBuildInformationMappedResource> LatestBuilds(int skip, int take);
    public abstract virtual void Delete(OctopusPackageVersionBuildInformationMappedResource buildInformation);
    public abstract virtual void DeleteBuilds(IReadOnlyList`1<OctopusPackageVersionBuildInformationMappedResource> builds);
}
public interface Octopus.Client.Repositories.IBuiltInPackageRepositoryRepository {
    public abstract virtual PackageFromBuiltInFeedResource PushPackage(string fileName, Stream contents, bool replaceExisting);
    public abstract virtual PackageFromBuiltInFeedResource PushPackage(string fileName, Stream contents, bool replaceExisting, bool useDeltaCompression);
    public abstract virtual PackageFromBuiltInFeedResource PushPackage(string fileName, Stream contents, OverwriteMode overwriteMode);
    public abstract virtual PackageFromBuiltInFeedResource PushPackage(string fileName, Stream contents, OverwriteMode overwriteMode, bool useDeltaCompression);
    public abstract virtual ResourceCollection`1<PackageFromBuiltInFeedResource> ListPackages(string packageId, int skip, int take);
    public abstract virtual ResourceCollection`1<PackageFromBuiltInFeedResource> LatestPackages(int skip, int take);
    public abstract virtual void DeletePackage(PackageResource package);
    public abstract virtual void DeletePackages(IReadOnlyList`1<PackageResource> packages);
    public abstract virtual PackageFromBuiltInFeedResource GetPackage(string packageId, string version);
}
public interface Octopus.Client.Repositories.ICanExtendSpaceContext`1 {
    public abstract virtual T UsingContext(SpaceContext userDefinedSpaceContext);
}
public interface Octopus.Client.Repositories.ICertificateConfigurationRepository {
    public abstract virtual CertificateConfigurationResource GetOctopusCertificate();
    public abstract virtual Stream GetPublicCertificate(CertificateConfigurationResource certificateConfiguration);
}
public interface Octopus.Client.Repositories.ICertificateRepository {
    public abstract virtual Stream Export(CertificateResource certificate, Nullable`1<CertificateFormat> format, string password, bool includePrivateKey);
    public abstract virtual Stream ExportAsPem(CertificateResource certificate, bool includePrivateKey, CertificateExportPemOptions pemOptions);
    public abstract virtual CertificateResource Replace(CertificateResource certificate, string certificateData, string password);
    public abstract virtual void Archive(CertificateResource certificate);
    public abstract virtual void UnArchive(CertificateResource certificate);
    public abstract virtual CertificateConfigurationResource GetOctopusCertificate();
}
public interface Octopus.Client.Repositories.IChannelRepository {
    public abstract virtual ChannelResource FindByName(ProjectResource project, string name);
    public abstract virtual ChannelEditor CreateOrModify(ProjectResource project, string name);
    public abstract virtual ChannelEditor CreateOrModify(ProjectResource project, string name, string description);
}
public interface Octopus.Client.Repositories.ICommunityActionTemplateRepository {
    public abstract virtual ActionTemplateResource GetInstalledTemplate(CommunityActionTemplateResource resource);
    public abstract virtual void Install(CommunityActionTemplateResource resource);
    public abstract virtual void UpdateInstallation(CommunityActionTemplateResource resource);
}
public interface Octopus.Client.Repositories.IConfigurationRepository {
    public abstract virtual T Get();
    public abstract virtual T Modify(T configurationResource);
}
public interface Octopus.Client.Repositories.ICreate`1 {
    public abstract virtual TResource Create(TResource resource, object pathParameters);
}
public interface Octopus.Client.Repositories.IDashboardConfigurationRepository {
    public abstract virtual DashboardConfigurationResource GetDashboardConfiguration();
    public abstract virtual DashboardConfigurationResource ModifyDashboardConfiguration(DashboardConfigurationResource resource);
}
public interface Octopus.Client.Repositories.IDashboardRepository {
    public abstract virtual DashboardResource GetDashboard();
    public abstract virtual DashboardResource GetDynamicDashboard(String[] projects, String[] environments, DashboardItemsOptions dashboardItemsOptions);
}
public interface Octopus.Client.Repositories.IDefectsRepository {
    public abstract virtual ResourceCollection`1<DefectResource> GetDefects(ReleaseResource release);
    public abstract virtual void RaiseDefect(ReleaseResource release, string description);
    public abstract virtual void ResolveDefect(ReleaseResource release);
}
public interface Octopus.Client.Repositories.IDelete`1 {
    public abstract virtual void Delete(TResource resource);
}
public interface Octopus.Client.Repositories.IDeploymentFreezeRepository {
    public abstract virtual GetDeploymentFreezeByIdResponse Get(GetDeploymentFreezeByIdRequest request);
    public abstract virtual GetDeploymentFreezesResponse Get(GetDeploymentFreezesRequest request);
    public abstract virtual CreateDeploymentFreezeResponse Create(CreateDeploymentFreezeCommand command);
    public abstract virtual ModifyDeploymentFreezeResponse Modify(ModifyDeploymentFreezeCommand command);
    public abstract virtual DeleteDeploymentFreezeResponse Delete(DeleteDeploymentFreezeCommand command);
}
public interface Octopus.Client.Repositories.IDeploymentProcessRepository {
    public abstract virtual ReleaseTemplateResource GetTemplate(DeploymentProcessResource deploymentProcess, ChannelResource channel);
    public abstract virtual DeploymentProcessResource Get(ProjectResource projectResource);
    public abstract virtual DeploymentProcessResource Get(ProjectResource projectResource, string gitRef);
    public abstract virtual DeploymentProcessResource Modify(DeploymentProcessResource deploymentSettings, string commitMessage);
}
public interface Octopus.Client.Repositories.IDeploymentRepository {
    public abstract virtual TaskResource GetTask(DeploymentResource resource);
    public abstract virtual ResourceCollection`1<DeploymentResource> FindBy(String[] projects, String[] environments, int skip, Nullable`1<int> take);
    [ObsoleteAttribute("This method is not a find all, it still requires paging. So it has been renamed to `FindBy`")]
public abstract virtual ResourceCollection`1<DeploymentResource> FindAll(String[] projects, String[] environments, int skip, Nullable`1<int> take);
    public abstract virtual void Paginate(String[] projects, String[] environments, Func`2<ResourceCollection`1<DeploymentResource>, bool> getNextPage);
    public abstract virtual void Paginate(String[] projects, String[] environments, String[] tenants, Func`2<ResourceCollection`1<DeploymentResource>, bool> getNextPage);
}
public interface Octopus.Client.Repositories.IDeploymentSettingsRepository {
    public abstract virtual DeploymentSettingsResource Get(ProjectResource projectResource, string gitRef);
    public abstract virtual DeploymentSettingsResource Get(ProjectResource project);
    [ObsoleteAttribute("ProjectResource is no longer required to be passed in")]
public abstract virtual DeploymentSettingsResource Modify(ProjectResource project, DeploymentSettingsResource deploymentSettings);
    public abstract virtual DeploymentSettingsResource Modify(DeploymentSettingsResource deploymentSettings);
    public abstract virtual DeploymentSettingsResource Modify(DeploymentSettingsResource deploymentSettings, string commitMessage);
}
public interface Octopus.Client.Repositories.IEnvironmentRepository {
    public abstract virtual List`1<MachineResource> GetMachines(EnvironmentResource environment, Nullable`1<int> skip, Nullable`1<int> take, string partialName, string roles, Nullable`1<bool> isDisabled, string healthStatuses, string commStyles, string tenantIds, string tenantTags);
    public abstract virtual EnvironmentsSummaryResource Summary(string ids, string partialName, string machinePartialName, string roles, Nullable`1<bool> isDisabled, string healthStatuses, string commStyles, string tenantIds, string tenantTags, Nullable`1<bool> hideEmptyEnvironments);
    public abstract virtual void Sort(String[] environmentIdsInOrder);
    public abstract virtual EnvironmentEditor CreateOrModify(string name);
    public abstract virtual EnvironmentEditor CreateOrModify(string name, string description);
    public abstract virtual EnvironmentEditor CreateOrModify(string name, string description, bool allowDynamicInfrastructure);
}
public interface Octopus.Client.Repositories.IEventRepository {
    [ObsoleteAttribute("This method was deprecated in Octopus 3.4.  Please use the other List method by providing named arguments.")]
public abstract virtual ResourceCollection`1<EventResource> List(int skip, string filterByUserId, string regardingDocumentId, bool includeInternalEvents);
    public abstract virtual ResourceCollection`1<EventResource> List(int skip, Nullable`1<int> take, string from, string to, string regarding, string regardingAny, bool includeInternalEvents, string user, string users, string projects, string environments, string eventGroups, string eventCategories, string tenants, string tags, Nullable`1<long> fromAutoId, Nullable`1<long> toAutoId, string documentTypes, string eventAgents, string projectGroups);
    public abstract virtual IReadOnlyList`1<DocumentTypeResource> GetDocumentTypes();
    public abstract virtual IReadOnlyList`1<EventAgentResource> GetAgents();
    public abstract virtual IReadOnlyList`1<EventCategoryResource> GetCategories();
    public abstract virtual IReadOnlyList`1<EventGroupResource> GetGroups();
}
public interface Octopus.Client.Repositories.IFeaturesConfigurationRepository {
    public abstract virtual FeaturesConfigurationResource GetFeaturesConfiguration();
    public abstract virtual FeaturesConfigurationResource ModifyFeaturesConfiguration(FeaturesConfigurationResource resource);
}
public interface Octopus.Client.Repositories.IFeedRepository {
    public abstract virtual List`1<PackageResource> GetVersions(FeedResource feed, String[] packageIds);
}
public interface Octopus.Client.Repositories.IFindByName`1 {
    public abstract virtual TResource FindByName(string name, string path, object pathParameters);
    public abstract virtual List`1<TResource> FindByNames(IEnumerable`1<string> names, string path, object pathParameters);
}
public interface Octopus.Client.Repositories.IFindByPartialName`1 {
    public abstract virtual List`1<TResource> FindByPartialName(string partialName, string path, object pathParameters);
}
public interface Octopus.Client.Repositories.IFindBySlug`1 {
    public abstract virtual TResource FindBySlug(string slug, string path, object pathParameters);
    public abstract virtual List`1<TResource> FindBySlugs(IEnumerable`1<string> slugs, string path, object pathParameters);
}
public interface Octopus.Client.Repositories.IGet`1 {
    public abstract virtual TResource Get(string idOrHref);
    public abstract virtual List`1<TResource> Get(String[] ids);
    public abstract virtual TResource Refresh(TResource resource);
}
public interface Octopus.Client.Repositories.IGetAll`1 {
    public abstract virtual List`1<TResource> GetAll();
}
public interface Octopus.Client.Repositories.IInterruptionRepository {
    public abstract virtual ResourceCollection`1<InterruptionResource> List(int skip, Nullable`1<int> take, bool pendingOnly, string regardingDocumentId);
    public abstract virtual void Submit(InterruptionResource interruption);
    public abstract virtual void TakeResponsibility(InterruptionResource interruption);
    public abstract virtual UserResource GetResponsibleUser(InterruptionResource interruption);
}
public interface Octopus.Client.Repositories.ILibraryVariableSetRepository {
    public abstract virtual LibraryVariableSetEditor CreateOrModify(string name);
    public abstract virtual LibraryVariableSetEditor CreateOrModify(string name, string description);
}
public interface Octopus.Client.Repositories.ILicensesRepository {
    public abstract virtual LicenseResource GetCurrent();
    public abstract virtual LicenseResource UpdateCurrent(LicenseResource resource);
    public abstract virtual LicenseStatusResource GetStatus();
}
public interface Octopus.Client.Repositories.ILifecyclesRepository {
    public abstract virtual LifecycleEditor CreateOrModify(string name);
    public abstract virtual LifecycleEditor CreateOrModify(string name, string description);
}
public interface Octopus.Client.Repositories.IMachinePolicyRepository {
    public abstract virtual List`1<MachineResource> GetMachines(MachinePolicyResource machinePolicy);
    public abstract virtual MachinePolicyResource GetTemplate();
}
public interface Octopus.Client.Repositories.IMachineRepository {
    public abstract virtual MachineResource Discover(string host, int port, Nullable`1<DiscoverableEndpointType> discoverableEndpointType);
    public abstract virtual MachineResource Discover(DiscoverMachineOptions options);
    public abstract virtual MachineConnectionStatus GetConnectionStatus(MachineResource machine);
    public abstract virtual List`1<MachineResource> FindByThumbprint(string thumbprint);
    public abstract virtual IReadOnlyList`1<TaskResource> GetTasks(MachineResource machine, Nullable`1<DeploymentTargetTaskType> type);
    public abstract virtual IReadOnlyList`1<TaskResource> GetTasks(MachineResource machine, object pathParameters);
    public abstract virtual MachineEditor CreateOrModify(string name, EndpointResource endpoint, EnvironmentResource[] environments, String[] roles, TenantResource[] tenants, TagResource[] tenantTags, Nullable`1<TenantedDeploymentMode> tenantedDeploymentParticipation);
    public abstract virtual MachineEditor CreateOrModify(string name, EndpointResource endpoint, EnvironmentResource[] environments, String[] roles);
    public abstract virtual ResourceCollection`1<MachineResource> List(int skip, Nullable`1<int> take, string ids, string name, string partialName, string roles, Nullable`1<bool> isDisabled, string healthStatuses, string commStyles, string tenantIds, string tenantTags, string environmentIds);
}
public interface Octopus.Client.Repositories.IMachineRoleRepository {
    public abstract virtual List`1<string> GetAllRoleNames();
}
public interface Octopus.Client.Repositories.IMigrationRepository {
    public abstract virtual MigrationPartialExportResource PartialExport(MigrationPartialExportResource resource);
    public abstract virtual MigrationImportResource Import(MigrationImportResource resource);
}
public interface Octopus.Client.Repositories.IModify`1 {
    public abstract virtual TResource Modify(TResource resource);
}
internal class Octopus.Client.Repositories.InterruptionRepository : BasicRepository`1<InterruptionResource> {
    public InterruptionRepository(IOctopusRepository repository);
    public sealed virtual ResourceCollection`1<InterruptionResource> List(int skip, Nullable`1<int> take, bool pendingOnly, string regardingDocumentId);
    public sealed virtual void Submit(InterruptionResource interruption);
    public sealed virtual void TakeResponsibility(InterruptionResource interruption);
    public sealed virtual UserResource GetResponsibleUser(InterruptionResource interruption);
}
public interface Octopus.Client.Repositories.IOctopusServerNodeRepository {
    public abstract virtual OctopusServerNodeDetailsResource Details(OctopusServerNodeResource node);
    public abstract virtual OctopusServerClusterSummaryResource Summary();
}
public interface Octopus.Client.Repositories.IPaginate`1 {
    public abstract virtual void Paginate(Func`2<ResourceCollection`1<TResource>, bool> getNextPage, string path, object pathParameters);
    public abstract virtual TResource FindOne(Func`2<TResource, bool> search, string path, object pathParameters);
    public abstract virtual List`1<TResource> FindMany(Func`2<TResource, bool> search, string path, object pathParameters);
    public abstract virtual List`1<TResource> FindAll(string path, object pathParameters);
}
public interface Octopus.Client.Repositories.IPerformanceConfigurationRepository {
    public abstract virtual PerformanceConfigurationResource Get();
    public abstract virtual PerformanceConfigurationResource Modify(PerformanceConfigurationResource resource);
}
public interface Octopus.Client.Repositories.IProjectGroupRepository {
    public abstract virtual List`1<ProjectResource> GetProjects(ProjectGroupResource projectGroup);
    public abstract virtual ProjectGroupEditor CreateOrModify(string name);
    public abstract virtual ProjectGroupEditor CreateOrModify(string name, string description);
}
public interface Octopus.Client.Repositories.IProjectRepository {
    public abstract virtual ResourceCollection`1<GitTagResource> GetGitTags(ProjectResource projectResource);
    public abstract virtual GitTagResource GetGitTag(ProjectResource projectResource, string tag);
    public abstract virtual ResourceCollection`1<GitBranchResource> GetGitBranches(ProjectResource projectResource);
    public abstract virtual GitBranchResource GetGitBranch(ProjectResource projectResource, string branch);
    public abstract virtual GitCommitResource GetGitCommit(ProjectResource projectResource, string hash);
    public abstract virtual ConvertProjectToGitResponse ConvertToGit(ProjectResource project, GitPersistenceSettingsResource gitPersistenceSettings, string commitMessage);
    public abstract virtual ConvertProjectToGitResponse ConvertToGit(ProjectResource project, GitPersistenceSettingsResource gitPersistenceSettings, string commitMessage, string initialCommitBranch);
    public abstract virtual ResourceCollection`1<ReleaseResource> GetReleases(ProjectResource project, int skip, Nullable`1<int> take, string searchByVersion);
    public abstract virtual IReadOnlyList`1<ReleaseResource> GetAllReleases(ProjectResource project);
    public abstract virtual ReleaseResource GetReleaseByVersion(ProjectResource project, string version);
    public abstract virtual ResourceCollection`1<ChannelResource> GetChannels(ProjectResource project);
    public abstract virtual IReadOnlyList`1<ChannelResource> GetAllChannels(ProjectResource project);
    public abstract virtual ProgressionResource GetProgression(ProjectResource project);
    public abstract virtual ResourceCollection`1<ProjectTriggerResource> GetTriggers(ProjectResource project);
    public abstract virtual IReadOnlyList`1<ProjectTriggerResource> GetAllTriggers(ProjectResource project);
    public abstract virtual void SetLogo(ProjectResource project, string fileName, Stream contents);
    public abstract virtual ProjectEditor CreateOrModify(string name, ProjectGroupResource projectGroup, LifecycleResource lifecycle);
    public abstract virtual ProjectEditor CreateOrModify(string name, ProjectGroupResource projectGroup, LifecycleResource lifecycle, string description, string cloneId);
    public abstract virtual ResourceCollection`1<RunbookSnapshotResource> GetRunbookSnapshots(ProjectResource project, int skip, Nullable`1<int> take, string searchByName);
    public abstract virtual IReadOnlyList`1<RunbookSnapshotResource> GetAllRunbookSnapshots(ProjectResource project);
    public abstract virtual RunbookSnapshotResource GetRunbookSnapshotByName(ProjectResource project, string name);
    public abstract virtual ResourceCollection`1<RunbookResource> GetRunbooks(ProjectResource project, int skip, Nullable`1<int> take, string searchByName);
    public abstract virtual IReadOnlyList`1<RunbookResource> GetAllRunbooks(ProjectResource project);
}
public interface Octopus.Client.Repositories.IProjectTriggerRepository {
    public abstract virtual ProjectTriggerResource FindByName(ProjectResource project, string name);
    public abstract virtual ProjectTriggerEditor CreateOrModify(ProjectResource project, string name, TriggerFilterResource filter, TriggerActionResource action);
    public abstract virtual ResourceCollection`1<ProjectTriggerResource> FindByRunbook(String[] runbookIds);
}
public interface Octopus.Client.Repositories.IProxyRepository {
}
public interface Octopus.Client.Repositories.IReleaseRepository {
    public abstract virtual ResourceCollection`1<DeploymentResource> GetDeployments(ReleaseResource release, int skip, Nullable`1<int> take);
    public abstract virtual ResourceCollection`1<ArtifactResource> GetArtifacts(ReleaseResource release, int skip, Nullable`1<int> take);
    public abstract virtual DeploymentTemplateResource GetTemplate(ReleaseResource release);
    public abstract virtual DeploymentPreviewResource GetPreview(DeploymentPromotionTarget promotionTarget);
    public abstract virtual ReleaseResource SnapshotVariables(ReleaseResource release);
    public abstract virtual ReleaseResource Create(ReleaseResource release, bool ignoreChannelRules);
    public abstract virtual LifecycleProgressionResource GetProgression(ReleaseResource release);
}
public interface Octopus.Client.Repositories.IResourceRepository {
    public IOctopusClient Client { get; }
    public abstract virtual IOctopusClient get_Client();
}
public interface Octopus.Client.Repositories.IRetentionPolicyRepository {
    public abstract virtual TaskResource ApplyNow(string spaceId);
}
public interface Octopus.Client.Repositories.IRunbookProcessRepository {
    public abstract virtual RunbookSnapshotTemplateResource GetTemplate(RunbookProcessResource runbookProcess);
}
public interface Octopus.Client.Repositories.IRunbookRepository {
    public abstract virtual RunbookResource FindByName(ProjectResource project, string name);
    public abstract virtual RunbookEditor CreateOrModify(ProjectResource project, string name, string description);
    public abstract virtual RunbookSnapshotTemplateResource GetRunbookSnapshotTemplate(RunbookResource runbook);
    public abstract virtual RunbookRunTemplateResource GetRunbookRunTemplate(RunbookResource runbook);
    public abstract virtual RunbookRunPreviewResource GetPreview(DeploymentPromotionTarget promotionTarget);
    public abstract virtual RunbookRunResource Run(RunbookResource runbook, RunbookRunResource runbookRun);
    public abstract virtual RunbookRunResource[] Run(RunbookResource runbook, RunbookRunParameters runbookRunParameters);
}
public interface Octopus.Client.Repositories.IRunbookRunRepository {
    public abstract virtual TaskResource GetTask(RunbookRunResource resource);
    public abstract virtual ResourceCollection`1<RunbookRunResource> FindBy(String[] projects, String[] runbooks, String[] environments, int skip, Nullable`1<int> take);
    public abstract virtual void Paginate(String[] projects, String[] runbooks, String[] environments, Func`2<ResourceCollection`1<RunbookRunResource>, bool> getNextPage);
    public abstract virtual void Paginate(String[] projects, String[] runbooks, String[] environments, String[] tenants, Func`2<ResourceCollection`1<RunbookRunResource>, bool> getNextPage);
}
public interface Octopus.Client.Repositories.IRunbookSnapshotRepository {
    public abstract virtual ResourceCollection`1<RunbookRunResource> GetRunbookRuns(RunbookSnapshotResource runbookSnapshot, int skip, Nullable`1<int> take);
    public abstract virtual ResourceCollection`1<ArtifactResource> GetArtifacts(RunbookSnapshotResource runbookSnapshot, int skip, Nullable`1<int> take);
    public abstract virtual RunbookRunTemplateResource GetTemplate(RunbookSnapshotResource runbookSnapshot);
    public abstract virtual RunbookRunPreviewResource GetPreview(DeploymentPromotionTarget promotionTarget);
    public abstract virtual RunbookSnapshotResource SnapshotVariables(RunbookSnapshotResource runbookSnapshot);
    public abstract virtual RunbookSnapshotResource Create(RunbookSnapshotResource runbookSnapshot);
}
public interface Octopus.Client.Repositories.ISchedulerRepository {
    public abstract virtual void Start();
    public abstract virtual void Start(string taskName);
    public abstract virtual void Stop();
    public abstract virtual void Stop(string taskName);
    public abstract virtual void Trigger(string taskName);
    public abstract virtual ScheduledTaskDetailsResource GetLogs(string taskName);
    public abstract virtual Stream GetRawLogs(string taskName);
    public abstract virtual SchedulerStatusResource Status();
}
public interface Octopus.Client.Repositories.IScopedUserRoleRepository {
}
public interface Octopus.Client.Repositories.IServerStatusRepository {
    public abstract virtual ServerStatusResource GetServerStatus();
    public abstract virtual SystemInfoResource GetSystemInfo(ServerStatusResource status);
    public abstract virtual ServerStatusHealthResource GetServerHealth();
}
public interface Octopus.Client.Repositories.ISpaceRepository {
    public abstract virtual void SetLogo(SpaceResource space, string fileName, Stream contents);
    public abstract virtual SpaceSearchResult[] Search(string spaceId, string keyword);
}
public interface Octopus.Client.Repositories.ISubscriptionRepository {
    public abstract virtual SubscriptionEditor CreateOrModify(string name, EventNotificationSubscription eventNotificationSubscription, bool isDisabled);
}
public interface Octopus.Client.Repositories.ITagSetRepository {
    public abstract virtual void Sort(String[] tagSetIdsInOrder);
    public abstract virtual TagSetEditor CreateOrModify(string name);
    public abstract virtual TagSetEditor CreateOrModify(string name, string description);
}
public interface Octopus.Client.Repositories.ITaskRepository {
    public abstract virtual TaskResource ExecuteHealthCheck(string description, int timeoutAfterMinutes, int machineTimeoutAfterMinutes, string environmentId, String[] machineIds, string restrictTo, string workerpoolId, String[] workerIds);
    public abstract virtual TaskResource ExecuteCalamariUpdate(string description, String[] machineIds);
    public abstract virtual TaskResource ExecuteBackup(string description);
    public abstract virtual TaskResource ExecuteTentacleUpgrade(string description, string environmentId, String[] machineIds, string restrictTo, string workerpoolId, String[] workerIds);
    public abstract virtual TaskResource ExecuteAdHocScript(string scriptBody, String[] machineIds, String[] environmentIds, String[] targetRoles, string description, string syntax, Nullable`1<TargetType> targetType);
    public abstract virtual TaskResource ExecuteActionTemplate(ActionTemplateResource resource, Dictionary`2<string, PropertyValueResource> properties, String[] machineIds, String[] environmentIds, String[] targetRoles, string description, Nullable`1<TargetType> targetType);
    public abstract virtual TaskResource ExecuteCommunityActionTemplatesSynchronisation(string description);
    public abstract virtual List`1<TaskResource> GetAllActive(int pageSize);
    public abstract virtual TaskResourceCollection GetActiveWithSummary(int pageSize, int skip);
    public abstract virtual TaskResourceCollection GetAllWithSummary(int pageSize, int skip);
    public abstract virtual TaskDetailsResource GetDetails(TaskResource resource, Nullable`1<bool> includeVerboseOutput, Nullable`1<int> tail);
    public abstract virtual string GetRawOutputLog(TaskResource resource);
    public abstract virtual TaskTypeResource[] GetTaskTypes();
    public abstract virtual void Prioritize(TaskResource resource);
    public abstract virtual void Rerun(TaskResource resource);
    public abstract virtual void Cancel(TaskResource resource);
    public abstract virtual void ModifyState(TaskResource resource, TaskState newState, string reason);
    public abstract virtual IReadOnlyList`1<TaskResource> GetQueuedBehindTasks(TaskResource resource);
    public abstract virtual void WaitForCompletion(TaskResource task, int pollIntervalSeconds, int timeoutAfterMinutes, Action`1<TaskResource[]> interval);
    public abstract virtual void WaitForCompletion(TaskResource[] tasks, int pollIntervalSeconds, int timeoutAfterMinutes, Action`1<TaskResource[]> interval);
    public abstract virtual void WaitForCompletion(TaskResource[] tasks, int pollIntervalSeconds, Nullable`1<TimeSpan> timeoutAfter, Action`1<TaskResource[]> interval);
}
public interface Octopus.Client.Repositories.ITeamsRepository {
    public abstract virtual List`1<ScopedUserRoleResource> GetScopedUserRoles(TeamResource team);
}
public interface Octopus.Client.Repositories.ITelemetryConfigurationRepository {
    public abstract virtual TelemetryConfigurationResource GetTelemetryConfiguration();
    public abstract virtual TelemetryConfigurationResource ModifyTelemetryConfiguration(TelemetryConfigurationResource resource);
    public abstract virtual TelemetryConfigurationResource EnableTelemetry();
    public abstract virtual TelemetryConfigurationResource DisableTelemetry();
}
public interface Octopus.Client.Repositories.ITenantRepository {
    public abstract virtual MultiTenancyStatusResource Status();
    public abstract virtual void SetLogo(TenantResource tenant, string fileName, Stream contents);
    public abstract virtual TenantVariableResource GetVariables(TenantResource tenant);
    public abstract virtual TenantVariableResource ModifyVariables(TenantResource tenant, TenantVariableResource variables);
    public abstract virtual List`1<TenantsMissingVariablesResource> GetMissingVariables(string tenantId, string projectId, string environmentId);
    public abstract virtual List`1<TenantResource> FindAll(string name, String[] tags, int pageSize);
    public abstract virtual TenantEditor CreateOrModify(string name);
    public abstract virtual TenantEditor CreateOrModify(string name, string description);
    public abstract virtual TenantEditor CreateOrModify(string name, string description, string cloneId);
}
public interface Octopus.Client.Repositories.ITenantVariablesRepository {
    public abstract virtual List`1<TenantVariableResource> GetAll(ProjectResource projectResource);
}
public interface Octopus.Client.Repositories.IUpgradeConfigurationRepository {
    public abstract virtual UpgradeConfigurationResource Get();
}
public interface Octopus.Client.Repositories.IUserInvitesRepository {
    public abstract virtual InvitationResource Invite(string addToTeamId);
    public abstract virtual InvitationResource Invite(ReferenceCollection addToTeamIds);
}
public interface Octopus.Client.Repositories.IUserPermissionsRepository {
    public abstract virtual UserPermissionSetResource Get(UserResource user);
    public abstract virtual UserPermissionSetResource GetConfiguration(UserResource user);
    public abstract virtual Stream Export(UserPermissionSetResource userPermissions);
}
public interface Octopus.Client.Repositories.IUserRepository {
    public abstract virtual UserResource FindByUsername(string username);
    public abstract virtual UserResource Create(string username, string displayName, string password, string emailAddress);
    public abstract virtual UserResource CreateServiceAccount(string username, string displayName);
    public abstract virtual UserResource Register(RegisterCommand registerCommand);
    public abstract virtual void SignIn(LoginCommand loginCommand);
    public abstract virtual void SignIn(string username, string password, bool rememberMe);
    public abstract virtual void SignOut();
    public abstract virtual UserResource GetCurrent();
    public abstract virtual SpaceResource[] GetSpaces(UserResource user);
    public abstract virtual ApiKeyCreatedResource CreateApiKey(UserResource user, string purpose, Nullable`1<DateTimeOffset> expires);
    public abstract virtual List`1<ApiKeyResource> GetApiKeys(UserResource user);
    public abstract virtual void RevokeApiKey(ApiKeyResourceBase apiKey);
    public abstract virtual void RevokeSessions(UserResource user);
    [ObsoleteAttribute("Use the IUserInvitesRepository instead", "False")]
public abstract virtual InvitationResource Invite(string addToTeamId);
    [ObsoleteAttribute("Use the IUserInvitesRepository instead", "False")]
public abstract virtual InvitationResource Invite(ReferenceCollection addToTeamIds);
}
public interface Octopus.Client.Repositories.IUserRolesRepository {
}
public interface Octopus.Client.Repositories.IUserTeamsRepository {
    public abstract virtual TeamNameResource[] Get(UserResource user);
}
public interface Octopus.Client.Repositories.IVariableSetRepository {
    public abstract virtual String[] GetVariableNames(string projects, String[] environments, string gitRef);
    public abstract virtual VariableSetResource GetVariablePreview(string project, string channel, string tenant, string runbook, string action, string environment, string machine, string role);
    public abstract virtual VariableSetResource GetVariablePreview(ProjectResource projectResource, string channel, string tenant, string runbook, string action, string environment, string machine, string role, string gitRef);
    public abstract virtual VariableSetResource Get(ProjectResource projectResource, string gitRef);
}
public interface Octopus.Client.Repositories.IWorkerPoolRepository {
    public abstract virtual List`1<WorkerResource> GetMachines(WorkerPoolResource workerPool, Nullable`1<int> skip, Nullable`1<int> take, string partialName, Nullable`1<bool> isDisabled, string healthStatuses, string commStyles);
    public abstract virtual WorkerPoolsSummaryResource Summary(string ids, string partialName, string machinePartialName, Nullable`1<bool> isDisabled, string healthStatuses, string commStyles, Nullable`1<bool> hideEmptypools);
    public abstract virtual void Sort(String[] workerpoolIdsInOrder);
    public abstract virtual WorkerPoolEditor CreateOrModify(string name);
    public abstract virtual WorkerPoolEditor CreateOrModify(string name, string description);
}
public interface Octopus.Client.Repositories.IWorkerRepository {
    public abstract virtual WorkerResource Discover(string host, int port, Nullable`1<DiscoverableEndpointType> discoverableEndpointType);
    public abstract virtual MachineConnectionStatus GetConnectionStatus(WorkerResource machine);
    public abstract virtual List`1<WorkerResource> FindByThumbprint(string thumbprint);
    public abstract virtual WorkerEditor CreateOrModify(string name, EndpointResource endpoint, WorkerPoolResource[] pools);
    public abstract virtual ResourceCollection`1<WorkerResource> List(int skip, Nullable`1<int> take, string ids, string name, string partialName, Nullable`1<bool> isDisabled, string healthStatuses, string commStyles, string workerpoolIds);
}
internal class Octopus.Client.Repositories.LegacyInvitationRepository : BasicRepository`1<InvitationResource> {
    public LegacyInvitationRepository(IOctopusRepository repository);
}
internal class Octopus.Client.Repositories.LibraryVariableSetRepository : BasicRepository`1<LibraryVariableSetResource> {
    public LibraryVariableSetRepository(IOctopusRepository repository);
    public sealed virtual LibraryVariableSetEditor CreateOrModify(string name);
    public sealed virtual LibraryVariableSetEditor CreateOrModify(string name, string description);
}
internal class Octopus.Client.Repositories.LicensesRepository : BasicRepository`1<LicenseResource> {
    public LicensesRepository(IOctopusRepository repository);
    public sealed virtual LicenseResource GetCurrent();
    public sealed virtual LicenseResource UpdateCurrent(LicenseResource resource);
    public sealed virtual LicenseStatusResource GetStatus();
}
internal class Octopus.Client.Repositories.LifecyclesRepository : BasicRepository`1<LifecycleResource> {
    public LifecyclesRepository(IOctopusRepository repository);
    public sealed virtual LifecycleEditor CreateOrModify(string name);
    public sealed virtual LifecycleEditor CreateOrModify(string name, string description);
}
internal class Octopus.Client.Repositories.MachinePolicyRepository : BasicRepository`1<MachinePolicyResource> {
    public MachinePolicyRepository(IOctopusRepository repository);
    public sealed virtual List`1<MachineResource> GetMachines(MachinePolicyResource machinePolicy);
    public sealed virtual MachinePolicyResource GetTemplate();
}
internal class Octopus.Client.Repositories.MachineRepository : BasicRepository`1<MachineResource> {
    public MachineRepository(IOctopusRepository repository);
    public sealed virtual MachineResource Discover(string host, int port, Nullable`1<DiscoverableEndpointType> type);
    public sealed virtual MachineResource Discover(DiscoverMachineOptions options);
    public sealed virtual MachineConnectionStatus GetConnectionStatus(MachineResource machine);
    public sealed virtual List`1<MachineResource> FindByThumbprint(string thumbprint);
    public sealed virtual IReadOnlyList`1<TaskResource> GetTasks(MachineResource machine, Nullable`1<DeploymentTargetTaskType> type);
    public sealed virtual IReadOnlyList`1<TaskResource> GetTasks(MachineResource machine, object pathParameters);
    public sealed virtual MachineEditor CreateOrModify(string name, EndpointResource endpoint, EnvironmentResource[] environments, String[] roles, TenantResource[] tenants, TagResource[] tenantTags, Nullable`1<TenantedDeploymentMode> tenantedDeploymentParticipation);
    public sealed virtual MachineEditor CreateOrModify(string name, EndpointResource endpoint, EnvironmentResource[] environments, String[] roles);
    public sealed virtual ResourceCollection`1<MachineResource> List(int skip, Nullable`1<int> take, string ids, string name, string partialName, string roles, Nullable`1<bool> isDisabled, string healthStatuses, string commStyles, string tenantIds, string tenantTags, string environmentIds);
}
internal class Octopus.Client.Repositories.MachineRoleRepository : object {
    private IOctopusRepository repository;
    public MachineRoleRepository(IOctopusRepository repository);
    public sealed virtual List`1<string> GetAllRoleNames();
}
internal class Octopus.Client.Repositories.MigrationRepository : object {
    private IOctopusRepository repository;
    public MigrationRepository(IOctopusRepository repository);
    public sealed virtual MigrationPartialExportResource PartialExport(MigrationPartialExportResource resource);
    public sealed virtual MigrationImportResource Import(MigrationImportResource resource);
}
internal abstract class Octopus.Client.Repositories.MixedScopeBaseRepository`1 : BasicRepository`1<TMixedScopeResource> {
    private SpaceContext userDefinedSpaceContext;
    protected Dictionary`2<string, object> AdditionalQueryParameters { get; }
    protected MixedScopeBaseRepository`1(IOctopusRepository repository, string collectionLinkName);
    protected MixedScopeBaseRepository`1(IOctopusRepository repository, string collectionLinkName, SpaceContext userDefinedSpaceContext);
    protected virtual Dictionary`2<string, object> get_AdditionalQueryParameters();
    protected virtual void CheckSpaceResource(IHaveSpaceResource spaceResource);
    protected SpaceContext GetCurrentSpaceContext();
    private void ValidateThatICanUseACustomSpaceContext();
    protected virtual void EnrichSpaceId(TMixedScopeResource resource);
    protected void EnsureSingleSpaceContext();
    protected void EnsureSystemContext();
    [CompilerGeneratedAttribute]
private void <EnsureSingleSpaceContext>b__9_2();
}
internal class Octopus.Client.Repositories.OctopusServerNodeRepository : BasicRepository`1<OctopusServerNodeResource> {
    private IOctopusRepository repository;
    public OctopusServerNodeRepository(IOctopusRepository repository);
    public sealed virtual OctopusServerNodeDetailsResource Details(OctopusServerNodeResource node);
    public sealed virtual OctopusServerClusterSummaryResource Summary();
}
public class Octopus.Client.Repositories.PerformanceConfigurationRepository : object {
    private IOctopusRepository repository;
    public PerformanceConfigurationRepository(IOctopusRepository repository);
    public sealed virtual PerformanceConfigurationResource Get();
    public sealed virtual PerformanceConfigurationResource Modify(PerformanceConfigurationResource resource);
}
internal class Octopus.Client.Repositories.ProjectGroupRepository : BasicRepository`1<ProjectGroupResource> {
    public ProjectGroupRepository(IOctopusRepository repository);
    public sealed virtual List`1<ProjectResource> GetProjects(ProjectGroupResource projectGroup);
    public sealed virtual ProjectGroupEditor CreateOrModify(string name);
    public sealed virtual ProjectGroupEditor CreateOrModify(string name, string description);
}
internal class Octopus.Client.Repositories.ProjectRepository : BasicRepository`1<ProjectResource> {
    public ProjectRepository(IOctopusRepository repository);
    public sealed virtual ResourceCollection`1<GitBranchResource> GetGitBranches(ProjectResource projectResource);
    public sealed virtual ResourceCollection`1<GitTagResource> GetGitTags(ProjectResource projectResource);
    public sealed virtual GitBranchResource GetGitBranch(ProjectResource projectResource, string branch);
    public sealed virtual GitCommitResource GetGitCommit(ProjectResource projectResource, string hash);
    public sealed virtual GitTagResource GetGitTag(ProjectResource projectResource, string tag);
    public sealed virtual ConvertProjectToGitResponse ConvertToGit(ProjectResource project, GitPersistenceSettingsResource gitPersistenceSettings, string commitMessage);
    public sealed virtual ConvertProjectToGitResponse ConvertToGit(ProjectResource project, GitPersistenceSettingsResource gitPersistenceSettings, string commitMessage, string initialCommitBranch);
    public sealed virtual ResourceCollection`1<ReleaseResource> GetReleases(ProjectResource project, int skip, Nullable`1<int> take, string searchByVersion);
    public sealed virtual IReadOnlyList`1<ReleaseResource> GetAllReleases(ProjectResource project);
    public sealed virtual ReleaseResource GetReleaseByVersion(ProjectResource project, string version);
    public sealed virtual ResourceCollection`1<ChannelResource> GetChannels(ProjectResource project);
    public sealed virtual IReadOnlyList`1<ChannelResource> GetAllChannels(ProjectResource project);
    public sealed virtual ProgressionResource GetProgression(ProjectResource project);
    public sealed virtual ResourceCollection`1<ProjectTriggerResource> GetTriggers(ProjectResource project);
    public sealed virtual IReadOnlyList`1<ProjectTriggerResource> GetAllTriggers(ProjectResource project);
    public sealed virtual void SetLogo(ProjectResource project, string fileName, Stream contents);
    public sealed virtual ProjectEditor CreateOrModify(string name, ProjectGroupResource projectGroup, LifecycleResource lifecycle);
    public sealed virtual ProjectEditor CreateOrModify(string name, ProjectGroupResource projectGroup, LifecycleResource lifecycle, string description, string cloneId);
    public sealed virtual ResourceCollection`1<RunbookSnapshotResource> GetRunbookSnapshots(ProjectResource project, int skip, Nullable`1<int> take, string searchByName);
    public sealed virtual IReadOnlyList`1<RunbookSnapshotResource> GetAllRunbookSnapshots(ProjectResource project);
    public sealed virtual RunbookSnapshotResource GetRunbookSnapshotByName(ProjectResource project, string name);
    public sealed virtual ResourceCollection`1<RunbookResource> GetRunbooks(ProjectResource project, int skip, Nullable`1<int> take, string searchByName);
    public sealed virtual IReadOnlyList`1<RunbookResource> GetAllRunbooks(ProjectResource project);
}
internal class Octopus.Client.Repositories.ProjectTriggerRepository : BasicRepository`1<ProjectTriggerResource> {
    public ProjectTriggerRepository(IOctopusRepository repository);
    public sealed virtual ProjectTriggerResource FindByName(ProjectResource project, string name);
    public sealed virtual ProjectTriggerEditor CreateOrModify(ProjectResource project, string name, TriggerFilterResource filter, TriggerActionResource action);
    public sealed virtual ResourceCollection`1<ProjectTriggerResource> FindByRunbook(String[] runbookIds);
}
internal class Octopus.Client.Repositories.ProxyRepository : BasicRepository`1<ProxyResource> {
    public ProxyRepository(IOctopusRepository repository);
}
internal class Octopus.Client.Repositories.ReleaseRepository : BasicRepository`1<ReleaseResource> {
    public ReleaseRepository(IOctopusRepository repository);
    public sealed virtual ResourceCollection`1<DeploymentResource> GetDeployments(ReleaseResource release, int skip, Nullable`1<int> take);
    public sealed virtual ResourceCollection`1<ArtifactResource> GetArtifacts(ReleaseResource release, int skip, Nullable`1<int> take);
    public sealed virtual DeploymentTemplateResource GetTemplate(ReleaseResource release);
    public sealed virtual DeploymentPreviewResource GetPreview(DeploymentPromotionTarget promotionTarget);
    public sealed virtual ReleaseResource SnapshotVariables(ReleaseResource release);
    public sealed virtual ReleaseResource Create(ReleaseResource release, bool ignoreChannelRules);
    public sealed virtual LifecycleProgressionResource GetProgression(ReleaseResource release);
}
internal class Octopus.Client.Repositories.RetentionPolicyRepository : BasicRepository`1<RetentionPolicyResource> {
    public RetentionPolicyRepository(IOctopusRepository repository);
    public sealed virtual TaskResource ApplyNow(string spaceId);
}
internal class Octopus.Client.Repositories.RunbookProcessRepository : BasicRepository`1<RunbookProcessResource> {
    public RunbookProcessRepository(IOctopusRepository repository);
    public sealed virtual RunbookSnapshotTemplateResource GetTemplate(RunbookProcessResource runbookProcess);
}
internal class Octopus.Client.Repositories.RunbookRepository : BasicRepository`1<RunbookResource> {
    private SemanticVersion versionAfterWhichRunbookRunParametersAreAvailable;
    private SemanticVersion integrationTestVersion;
    public RunbookRepository(IOctopusRepository repository);
    public sealed virtual RunbookResource FindByName(ProjectResource project, string name);
    public sealed virtual RunbookEditor CreateOrModify(ProjectResource project, string name, string description);
    public sealed virtual RunbookSnapshotTemplateResource GetRunbookSnapshotTemplate(RunbookResource runbook);
    public sealed virtual RunbookRunTemplateResource GetRunbookRunTemplate(RunbookResource runbook);
    public sealed virtual RunbookRunPreviewResource GetPreview(DeploymentPromotionTarget promotionTarget);
    private bool ServerSupportsRunbookRunParameters(string version);
    public sealed virtual RunbookRunResource Run(RunbookResource runbook, RunbookRunResource runbookRun);
    public sealed virtual RunbookRunResource[] Run(RunbookResource runbook, RunbookRunParameters runbookRunParameters);
}
internal class Octopus.Client.Repositories.RunbookRunRepository : BasicRepository`1<RunbookRunResource> {
    public RunbookRunRepository(IOctopusRepository repository);
    public sealed virtual TaskResource GetTask(RunbookRunResource resource);
    public sealed virtual ResourceCollection`1<RunbookRunResource> FindBy(String[] projects, String[] runbooks, String[] environments, int skip, Nullable`1<int> take);
    public sealed virtual void Paginate(String[] projects, String[] runbooks, String[] environments, Func`2<ResourceCollection`1<RunbookRunResource>, bool> getNextPage);
    public sealed virtual void Paginate(String[] projects, String[] runbooks, String[] environments, String[] tenants, Func`2<ResourceCollection`1<RunbookRunResource>, bool> getNextPage);
}
internal class Octopus.Client.Repositories.RunbookSnapshotRepository : BasicRepository`1<RunbookSnapshotResource> {
    public RunbookSnapshotRepository(IOctopusRepository repository);
    public sealed virtual ResourceCollection`1<RunbookRunResource> GetRunbookRuns(RunbookSnapshotResource runbookSnapshot, int skip, Nullable`1<int> take);
    public sealed virtual ResourceCollection`1<ArtifactResource> GetArtifacts(RunbookSnapshotResource runbookSnapshot, int skip, Nullable`1<int> take);
    public sealed virtual RunbookRunTemplateResource GetTemplate(RunbookSnapshotResource runbookSnapshot);
    public sealed virtual RunbookRunPreviewResource GetPreview(DeploymentPromotionTarget promotionTarget);
    public sealed virtual RunbookSnapshotResource SnapshotVariables(RunbookSnapshotResource runbookSnapshot);
    public sealed virtual RunbookSnapshotResource Create(RunbookSnapshotResource runbookSnapshot);
}
internal class Octopus.Client.Repositories.SchedulerRepository : object {
    private IOctopusRepository repository;
    public SchedulerRepository(IOctopusRepository repository);
    public sealed virtual void Start();
    public sealed virtual void Start(string taskName);
    public sealed virtual void Trigger(string taskName);
    public sealed virtual void Stop();
    public sealed virtual void Stop(string taskName);
    public sealed virtual ScheduledTaskDetailsResource GetLogs(string taskName);
    public sealed virtual Stream GetRawLogs(string taskName);
    public sealed virtual SchedulerStatusResource Status();
}
internal class Octopus.Client.Repositories.ScopedUserRoleRepository : MixedScopeBaseRepository`1<ScopedUserRoleResource> {
    public ScopedUserRoleRepository(IOctopusRepository repository);
    private ScopedUserRoleRepository(IOctopusRepository repository, SpaceContext userDefinedSpaceContext);
    public sealed virtual IScopedUserRoleRepository UsingContext(SpaceContext userDefinedSpaceContext);
}
internal class Octopus.Client.Repositories.ServerStatusRepository : BasicRepository`1<ServerStatusResource> {
    public ServerStatusRepository(IOctopusRepository repository);
    public sealed virtual ServerStatusResource GetServerStatus();
    public sealed virtual ServerStatusHealthResource GetServerHealth();
    public sealed virtual SystemInfoResource GetSystemInfo(ServerStatusResource status);
}
internal class Octopus.Client.Repositories.SpaceRepository : BasicRepository`1<SpaceResource> {
    public SpaceRepository(IOctopusRepository repository);
    public sealed virtual void SetLogo(SpaceResource space, string fileName, Stream contents);
    public sealed virtual SpaceSearchResult[] Search(string spaceId, string keyword);
}
internal class Octopus.Client.Repositories.SubscriptionRepository : BasicRepository`1<SubscriptionResource> {
    public SubscriptionRepository(IOctopusRepository repository);
    public sealed virtual SubscriptionEditor CreateOrModify(string name, EventNotificationSubscription eventNotificationSubscription, bool isDisabled);
}
internal class Octopus.Client.Repositories.TagSetRepository : BasicRepository`1<TagSetResource> {
    public TagSetRepository(IOctopusRepository repository);
    public sealed virtual void Sort(String[] tagSetIdsInOrder);
    public sealed virtual TagSetEditor CreateOrModify(string name);
    public sealed virtual TagSetEditor CreateOrModify(string name, string description);
}
internal class Octopus.Client.Repositories.TaskRepository : MixedScopeBaseRepository`1<TaskResource> {
    public TaskRepository(IOctopusRepository repository);
    private TaskRepository(IOctopusRepository repository, SpaceContext userDefinedSpaceContext);
    public sealed virtual TaskResource ExecuteHealthCheck(string description, int timeoutAfterMinutes, int machineTimeoutAfterMinutes, string environmentId, String[] machineIds, string restrictTo, string workerpoolId, String[] workerIds);
    public sealed virtual TaskResource ExecuteCalamariUpdate(string description, String[] machineIds);
    public sealed virtual TaskResource ExecuteBackup(string description);
    public sealed virtual TaskResource ExecuteTentacleUpgrade(string description, string environmentId, String[] machineIds, string restrictTo, string workerpoolId, String[] workerIds);
    public sealed virtual TaskResource ExecuteAdHocScript(string scriptBody, String[] machineIds, String[] environmentIds, String[] targetRoles, string description, string syntax, Nullable`1<TargetType> targetType);
    public sealed virtual TaskResource ExecuteActionTemplate(ActionTemplateResource template, Dictionary`2<string, PropertyValueResource> properties, String[] machineIds, String[] environmentIds, String[] targetRoles, string description, Nullable`1<TargetType> targetType);
    private void EnsureValidTargetType(Nullable`1<TargetType> targetType);
    public sealed virtual TaskResource ExecuteCommunityActionTemplatesSynchronisation(string description);
    public sealed virtual TaskDetailsResource GetDetails(TaskResource resource, Nullable`1<bool> includeVerboseOutput, Nullable`1<int> tail);
    public sealed virtual string GetRawOutputLog(TaskResource resource);
    public sealed virtual TaskTypeResource[] GetTaskTypes();
    public sealed virtual void Prioritize(TaskResource resource);
    public sealed virtual void Rerun(TaskResource resource);
    public sealed virtual void Cancel(TaskResource resource);
    public sealed virtual void ModifyState(TaskResource resource, TaskState newState, string reason);
    public sealed virtual IReadOnlyList`1<TaskResource> GetQueuedBehindTasks(TaskResource resource);
    public sealed virtual void WaitForCompletion(TaskResource task, int pollIntervalSeconds, int timeoutAfterMinutes, Action`1<TaskResource[]> interval);
    public sealed virtual void WaitForCompletion(TaskResource[] tasks, int pollIntervalSeconds, int timeoutAfterMinutes, Action`1<TaskResource[]> interval);
    public sealed virtual void WaitForCompletion(TaskResource[] tasks, int pollIntervalSeconds, Nullable`1<TimeSpan> timeoutAfter, Action`1<TaskResource[]> interval);
    public sealed virtual List`1<TaskResource> GetAllActive(int pageSize);
    public sealed virtual TaskResourceCollection GetActiveWithSummary(int pageSize, int skip);
    public sealed virtual TaskResourceCollection GetAllWithSummary(int pageSize, int skip);
    public sealed virtual ITaskRepository UsingContext(SpaceContext userDefinedSpaceContext);
    private void EnsureTaskCanRunInTheCurrentContext(TaskResource task);
    private TaskResource CreateSystemTask(TaskResource task);
    [CompilerGeneratedAttribute]
private <>f__AnonymousType68`2<TaskResource, TaskResource> <WaitForCompletion>b__20_0(TaskResource task);
}
internal class Octopus.Client.Repositories.TeamsRepository : MixedScopeBaseRepository`1<TeamResource> {
    public TeamsRepository(IOctopusRepository repository);
    private TeamsRepository(IOctopusRepository repository, SpaceContext userDefinedSpaceContext);
    public sealed virtual List`1<ScopedUserRoleResource> GetScopedUserRoles(TeamResource team);
    public sealed virtual ITeamsRepository UsingContext(SpaceContext userDefinedSpaceContext);
}
public class Octopus.Client.Repositories.TelemetryConfigurationRepository : object {
    private IOctopusRepository repository;
    private static string LinkName;
    public TelemetryConfigurationRepository(IOctopusRepository repository);
    public sealed virtual TelemetryConfigurationResource GetTelemetryConfiguration();
    public sealed virtual TelemetryConfigurationResource ModifyTelemetryConfiguration(TelemetryConfigurationResource resource);
    public sealed virtual TelemetryConfigurationResource EnableTelemetry();
    public sealed virtual TelemetryConfigurationResource DisableTelemetry();
}
internal class Octopus.Client.Repositories.TenantRepository : BasicRepository`1<TenantResource> {
    public TenantRepository(IOctopusRepository repository);
    public sealed virtual TenantVariableResource GetVariables(TenantResource tenant);
    public sealed virtual List`1<TenantResource> FindAll(string name, String[] tags, int pageSize);
    public sealed virtual TenantVariableResource ModifyVariables(TenantResource tenant, TenantVariableResource variables);
    public sealed virtual List`1<TenantsMissingVariablesResource> GetMissingVariables(string tenantId, string projectId, string environmentId);
    public sealed virtual MultiTenancyStatusResource Status();
    public sealed virtual void SetLogo(TenantResource tenant, string fileName, Stream contents);
    public sealed virtual TenantEditor CreateOrModify(string name);
    public sealed virtual TenantEditor CreateOrModify(string name, string description);
    public sealed virtual TenantEditor CreateOrModify(string name, string description, string cloneId);
}
internal class Octopus.Client.Repositories.TenantVariablesRepository : BasicRepository`1<TenantVariableResource> {
    public TenantVariablesRepository(IOctopusRepository repository);
    public sealed virtual List`1<TenantVariableResource> GetAll(ProjectResource projectResource);
}
internal class Octopus.Client.Repositories.UpgradeConfigurationRepository : BasicRepository`1<UpgradeConfigurationResource> {
    public UpgradeConfigurationRepository(IOctopusRepository repository);
    public sealed virtual UpgradeConfigurationResource Get();
}
internal class Octopus.Client.Repositories.UserInvitesRepository : MixedScopeBaseRepository`1<InvitationResource> {
    public UserInvitesRepository(IOctopusRepository octopusRepository);
    public sealed virtual InvitationResource Invite(string addToTeamId);
    public sealed virtual InvitationResource Invite(ReferenceCollection addToTeamIds);
}
internal class Octopus.Client.Repositories.UserPermissionsRepository : MixedScopeBaseRepository`1<UserPermissionSetResource> {
    public UserPermissionsRepository(IOctopusRepository repository);
    private UserPermissionsRepository(IOctopusRepository repository, SpaceContext userDefinedSpaceContext);
    public sealed virtual UserPermissionSetResource Get(UserResource user);
    public sealed virtual UserPermissionSetResource GetConfiguration(UserResource user);
    public sealed virtual Stream Export(UserPermissionSetResource userPermissions);
    public sealed virtual IUserPermissionsRepository UsingContext(SpaceContext userDefinedSpaceContext);
}
internal class Octopus.Client.Repositories.UserRepository : BasicRepository`1<UserResource> {
    private BasicRepository`1<InvitationResource> invitations;
    public UserRepository(IOctopusRepository repository);
    public sealed virtual UserResource FindByUsername(string username);
    public sealed virtual UserResource Create(string username, string displayName, string password, string emailAddress);
    public sealed virtual UserResource CreateServiceAccount(string username, string displayName);
    public sealed virtual UserResource Register(RegisterCommand registerCommand);
    public sealed virtual void SignIn(LoginCommand loginCommand);
    public sealed virtual void SignIn(string username, string password, bool rememberMe);
    public sealed virtual void SignOut();
    public sealed virtual UserResource GetCurrent();
    public sealed virtual SpaceResource[] GetSpaces(UserResource user);
    public sealed virtual ApiKeyCreatedResource CreateApiKey(UserResource user, string purpose, Nullable`1<DateTimeOffset> expires);
    public sealed virtual List`1<ApiKeyResource> GetApiKeys(UserResource user);
    public sealed virtual void RevokeApiKey(ApiKeyResourceBase apiKey);
    public sealed virtual void RevokeSessions(UserResource user);
    [ObsoleteAttribute("Use the IUserInvitesRepository instead", "False")]
public sealed virtual InvitationResource Invite(string addToTeamId);
    [ObsoleteAttribute("Use the IUserInvitesRepository instead", "False")]
public sealed virtual InvitationResource Invite(ReferenceCollection addToTeamIds);
}
internal class Octopus.Client.Repositories.UserRolesRepository : BasicRepository`1<UserRoleResource> {
    private static Permission TaskViewLogPermission;
    public UserRolesRepository(IOctopusRepository repository);
    private static UserRolesRepository();
    public virtual UserRoleResource Create(UserRoleResource resource, object pathParameters);
    public virtual UserRoleResource Modify(UserRoleResource resource);
    private void RemoveInvalidPermissions(UserRoleResource resource);
    [CompilerGeneratedAttribute]
internal static List`1<Permission> <RemoveInvalidPermissions>g__RemoveDeprecatedPermission|4_0(Permission permissionToRemove, List`1<Permission> permissions);
}
internal class Octopus.Client.Repositories.UserTeamsRepository : MixedScopeBaseRepository`1<TeamNameResource> {
    public UserTeamsRepository(IOctopusRepository repository);
    private UserTeamsRepository(IOctopusRepository repository, SpaceContext userDefinedSpaceContext);
    public sealed virtual TeamNameResource[] Get(UserResource user);
    public sealed virtual IUserTeamsRepository UsingContext(SpaceContext userDefinedSpaceContext);
}
internal class Octopus.Client.Repositories.VariableSetRepository : BasicRepository`1<VariableSetResource> {
    public VariableSetRepository(IOctopusRepository repository);
    public sealed virtual String[] GetVariableNames(string project, String[] environments, string gitRef);
    public sealed virtual VariableSetResource Get(ProjectResource projectResource, string gitRef);
    public sealed virtual VariableSetResource GetVariablePreview(string project, string channel, string tenant, string runbook, string action, string environment, string machine, string role);
    public sealed virtual VariableSetResource GetVariablePreview(ProjectResource projectResource, string channel, string tenant, string runbook, string action, string environment, string machine, string role, string gitRef);
    public virtual List`1<VariableSetResource> Get(String[] ids);
    private bool ProjectHasVariablesInGit(ProjectResource projectResource);
}
internal class Octopus.Client.Repositories.WorkerPoolRepository : BasicRepository`1<WorkerPoolResource> {
    public WorkerPoolRepository(IOctopusRepository repository);
    public sealed virtual List`1<WorkerResource> GetMachines(WorkerPoolResource workerPool, Nullable`1<int> skip, Nullable`1<int> take, string partialName, Nullable`1<bool> isDisabled, string healthStatuses, string commStyles);
    public sealed virtual WorkerPoolsSummaryResource Summary(string ids, string partialName, string machinePartialName, Nullable`1<bool> isDisabled, string healthStatuses, string commStyles, Nullable`1<bool> hideEmptyPools);
    public sealed virtual void Sort(String[] workerpoolIdsInOrder);
    public sealed virtual WorkerPoolEditor CreateOrModify(string name);
    public sealed virtual WorkerPoolEditor CreateOrModify(string name, string description);
}
internal class Octopus.Client.Repositories.WorkerRepository : BasicRepository`1<WorkerResource> {
    public WorkerRepository(IOctopusRepository repository);
    public sealed virtual WorkerResource Discover(string host, int port, Nullable`1<DiscoverableEndpointType> type);
    public sealed virtual MachineConnectionStatus GetConnectionStatus(WorkerResource machine);
    public sealed virtual List`1<WorkerResource> FindByThumbprint(string thumbprint);
    public sealed virtual WorkerEditor CreateOrModify(string name, EndpointResource endpoint, WorkerPoolResource[] pools);
    public sealed virtual ResourceCollection`1<WorkerResource> List(int skip, Nullable`1<int> take, string ids, string name, string partialName, Nullable`1<bool> isDisabled, string healthStatuses, string commStyles, string workerpoolIds);
}
public class Octopus.Client.RepositoryScope : object {
    private RepositoryScopeType type;
    private SpaceResource space;
    private RepositoryScope(RepositoryScopeType type, SpaceResource space);
    public static RepositoryScope ForSpace(SpaceResource space);
    public static RepositoryScope ForSystem();
    public static RepositoryScope Unspecified();
    public T Apply(Func`2<SpaceResource, T> whenSpaceScoped, Func`1<T> whenSystemScoped, Func`1<T> whenUnspecifiedScope);
    public void Apply(Action`1<SpaceResource> whenSpaceScoped, Action whenSystemScoped, Action whenUnspecifiedScope);
}
internal class Octopus.Client.ResourceSelfLinkExtractor : object {
    public string GetSelfUrlOrNull(TResource resource);
}
public class Octopus.Client.Serialization.AccountConverter : InheritedClassConverter`2<AccountResource, AccountType> {
    private static IDictionary`2<AccountType, Type> AccountTypeMappings;
    protected IDictionary`2<AccountType, Type> DerivedTypeMappings { get; }
    protected string TypeDesignatingPropertyName { get; }
    private static AccountConverter();
    protected virtual IDictionary`2<AccountType, Type> get_DerivedTypeMappings();
    protected virtual string get_TypeDesignatingPropertyName();
}
internal class Octopus.Client.Serialization.ControlConverter : JsonConverter {
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual bool CanConvert(Type objectType);
}
[<775b3474-4bdb-4dfa-9504-95167a40b14b>NullableContextAttribute("1")]
[<7ee1374a-350e-48d8-b14b-16bf02905262>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Octopus.Client.Serialization.CrossPlatformDateTimeZoneJsonConverter : JsonConverter`1<DateTimeZone> {
    public virtual void WriteJson(JsonWriter writer, DateTimeZone value, JsonSerializer serializer);
    public virtual DateTimeZone ReadJson(JsonReader reader, Type objectType, DateTimeZone existingValue, bool hasExistingValue, JsonSerializer serializer);
}
public class Octopus.Client.Serialization.DateConverter : IsoDateTimeConverter {
}
public class Octopus.Client.Serialization.EndpointConverter : InheritedClassConverter`2<EndpointResource, CommunicationStyle> {
    private static IDictionary`2<CommunicationStyle, Type> EndpointTypes;
    protected IDictionary`2<CommunicationStyle, Type> DerivedTypeMappings { get; }
    protected string TypeDesignatingPropertyName { get; }
    private static EndpointConverter();
    protected virtual IDictionary`2<CommunicationStyle, Type> get_DerivedTypeMappings();
    protected virtual string get_TypeDesignatingPropertyName();
}
public class Octopus.Client.Serialization.EndpointWithMultipleAuthenticationConverter : InheritedClassConverter`2<IEndpointWithMultipleAuthenticationResource, MultipleAccountType> {
    private static IDictionary`2<MultipleAccountType, Type> FeedTypeMappings;
    protected IDictionary`2<MultipleAccountType, Type> DerivedTypeMappings { get; }
    protected string TypeDesignatingPropertyName { get; }
    private static EndpointWithMultipleAuthenticationConverter();
    protected virtual IDictionary`2<MultipleAccountType, Type> get_DerivedTypeMappings();
    protected virtual string get_TypeDesignatingPropertyName();
}
public class Octopus.Client.Serialization.FeedConverter : InheritedClassConverter`2<FeedResource, FeedType> {
    private static IDictionary`2<FeedType, Type> FeedTypeMappings;
    private static Type defaultType;
    [CompilerGeneratedAttribute]
private Type <DefaultType>k__BackingField;
    protected IDictionary`2<FeedType, Type> DerivedTypeMappings { get; }
    protected string TypeDesignatingPropertyName { get; }
    protected Type DefaultType { get; }
    private static FeedConverter();
    protected virtual IDictionary`2<FeedType, Type> get_DerivedTypeMappings();
    protected virtual string get_TypeDesignatingPropertyName();
    [CompilerGeneratedAttribute]
protected virtual Type get_DefaultType();
}
public class Octopus.Client.Serialization.GitCredentialDetailsConverter : InheritedClassConverter`2<GitCredentialDetails, GitCredentialType> {
    private static IDictionary`2<GitCredentialType, Type> GitCredentialDetailsTypeMappings;
    private static Type defaultType;
    [CompilerGeneratedAttribute]
private Type <DefaultType>k__BackingField;
    protected IDictionary`2<GitCredentialType, Type> DerivedTypeMappings { get; }
    protected string TypeDesignatingPropertyName { get; }
    protected Type DefaultType { get; }
    private static GitCredentialDetailsConverter();
    protected virtual IDictionary`2<GitCredentialType, Type> get_DerivedTypeMappings();
    protected virtual string get_TypeDesignatingPropertyName();
    [CompilerGeneratedAttribute]
protected virtual Type get_DefaultType();
}
public class Octopus.Client.Serialization.GitSettingsConverter : InheritedClassConverter`2<ProjectGitCredentialResource, ProjectGitCredentialType> {
    private static IDictionary`2<ProjectGitCredentialType, Type> GitCredentialTypeMappings;
    private static Type defaultType;
    [CompilerGeneratedAttribute]
private Type <DefaultType>k__BackingField;
    protected IDictionary`2<ProjectGitCredentialType, Type> DerivedTypeMappings { get; }
    protected string TypeDesignatingPropertyName { get; }
    protected Type DefaultType { get; }
    private static GitSettingsConverter();
    protected virtual IDictionary`2<ProjectGitCredentialType, Type> get_DerivedTypeMappings();
    protected virtual string get_TypeDesignatingPropertyName();
    [CompilerGeneratedAttribute]
protected virtual Type get_DefaultType();
}
public class Octopus.Client.Serialization.HrefConverter : JsonConverter {
    private Func`1<string> baseUrlResolver;
    public HrefConverter(Func`1<string> baseUrlResolver);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual bool CanConvert(Type objectType);
}
public abstract class Octopus.Client.Serialization.InheritedClassConverter`2 : JsonConverter {
    [CompilerGeneratedAttribute]
private Type <DefaultType>k__BackingField;
    protected Type DefaultType { get; }
    protected IDictionary`2<TDiscriminator, Type> DerivedTypeMappings { get; }
    protected string TypeDesignatingPropertyName { get; }
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    [CompilerGeneratedAttribute]
protected virtual Type get_DefaultType();
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    private Type GetTypeFromDiscriminator(string derivedType);
    private static TDiscriminator GetDiscriminatingTypeFromStringValue(string derivedType);
    public virtual bool CanConvert(Type objectType);
    protected abstract virtual IDictionary`2<TDiscriminator, Type> get_DerivedTypeMappings();
    protected abstract virtual string get_TypeDesignatingPropertyName();
}
[<775b3474-4bdb-4dfa-9504-95167a40b14b>NullableContextAttribute("1")]
[<7ee1374a-350e-48d8-b14b-16bf02905262>NullableAttribute("0")]
public class Octopus.Client.Serialization.InterruptionTypeConverter : JsonConverter {
    public virtual bool CanConvert(Type objectType);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
}
public static class Octopus.Client.Serialization.JsonSerialization : object {
    public static JsonSerializerSettings GetDefaultSerializerSettings();
    public static string SerializeObject(object obj);
    public static T DeserializeObject(string value);
}
public class Octopus.Client.Serialization.MultiIsoDateTimeFormatConverter : JsonConverter {
    private List`1<JsonConverter> converters;
    private JsonConverter DefaultConverter { get; }
    public MultiIsoDateTimeFormatConverter(string defaultFormat, String[] additionalReadFormats);
    private JsonConverter get_DefaultConverter();
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual bool CanConvert(Type objectType);
}
[<775b3474-4bdb-4dfa-9504-95167a40b14b>NullableContextAttribute("1")]
[<7ee1374a-350e-48d8-b14b-16bf02905262>NullableAttribute("0")]
public class Octopus.Client.Serialization.PermissionConverter : JsonConverter {
    public virtual bool CanConvert(Type objectType);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
}
[<7ee1374a-350e-48d8-b14b-16bf02905262>NullableAttribute("0")]
[<775b3474-4bdb-4dfa-9504-95167a40b14b>NullableContextAttribute("1")]
internal class Octopus.Client.Serialization.PermissionTypeConverter : TypeConverter {
    public virtual bool CanConvertTo(ITypeDescriptorContext context, Type destinationType);
    public virtual bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType);
    public virtual object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value);
}
public class Octopus.Client.Serialization.PermissiveInstantJsonConverter : JsonConverter`1<Nullable`1<Instant>> {
    public virtual void WriteJson(JsonWriter writer, Nullable`1<Instant> value, JsonSerializer serializer);
    public virtual Nullable`1<Instant> ReadJson(JsonReader reader, Type objectType, Nullable`1<Instant> existingValue, bool hasExistingValue, JsonSerializer serializer);
}
public class Octopus.Client.Serialization.PersistenceSettingsConverter : InheritedClassConverter`2<PersistenceSettingsResource, PersistenceSettingsType> {
    private static IDictionary`2<PersistenceSettingsType, Type> PersistenceSettingsTypeMappings;
    private static Type defaultType;
    [CompilerGeneratedAttribute]
private Type <DefaultType>k__BackingField;
    protected IDictionary`2<PersistenceSettingsType, Type> DerivedTypeMappings { get; }
    protected string TypeDesignatingPropertyName { get; }
    protected Type DefaultType { get; }
    private static PersistenceSettingsConverter();
    protected virtual IDictionary`2<PersistenceSettingsType, Type> get_DerivedTypeMappings();
    protected virtual string get_TypeDesignatingPropertyName();
    [CompilerGeneratedAttribute]
protected virtual Type get_DefaultType();
}
public class Octopus.Client.Serialization.PrivateMemberContractResolver : DefaultContractResolver {
    protected virtual JsonProperty CreateProperty(MemberInfo member, MemberSerialization memberSerialization);
}
public static class Octopus.Client.Serialization.Serializer : object {
    public static string Serialize(object metadata, T exportObject);
    public static string Serialize(object obj);
    public static T Deserialize(string input);
}
public class Octopus.Client.Serialization.TentacleConfigurationConverter : InheritedClassConverter`2<TentacleEndpointConfigurationResource, TentacleCommunicationModeResource> {
    private static IDictionary`2<TentacleCommunicationModeResource, Type> EndpointTypes;
    protected IDictionary`2<TentacleCommunicationModeResource, Type> DerivedTypeMappings { get; }
    protected string TypeDesignatingPropertyName { get; }
    private static TentacleConfigurationConverter();
    protected virtual IDictionary`2<TentacleCommunicationModeResource, Type> get_DerivedTypeMappings();
    protected virtual string get_TypeDesignatingPropertyName();
}
public class Octopus.Client.Serialization.TriggerActionConverter : InheritedClassConverter`2<TriggerActionResource, TriggerActionType> {
    private static IDictionary`2<TriggerActionType, Type> ActionTypes;
    protected IDictionary`2<TriggerActionType, Type> DerivedTypeMappings { get; }
    protected string TypeDesignatingPropertyName { get; }
    private static TriggerActionConverter();
    protected virtual IDictionary`2<TriggerActionType, Type> get_DerivedTypeMappings();
    protected virtual string get_TypeDesignatingPropertyName();
}
public class Octopus.Client.Serialization.TriggerFilterConverter : InheritedClassConverter`2<TriggerFilterResource, TriggerFilterType> {
    private static IDictionary`2<TriggerFilterType, Type> FilterTypes;
    protected IDictionary`2<TriggerFilterType, Type> DerivedTypeMappings { get; }
    protected string TypeDesignatingPropertyName { get; }
    private static TriggerFilterConverter();
    protected virtual IDictionary`2<TriggerFilterType, Type> get_DerivedTypeMappings();
    protected virtual string get_TypeDesignatingPropertyName();
}
public class Octopus.Client.SingleSpaceOperationInMultiSpaceContextException : Exception {
}
public class Octopus.Client.SpaceContext : object {
    private SpaceSelection spaceSelection;
    private IReadOnlyCollection`1<SpaceResource> spaces;
    [CompilerGeneratedAttribute]
private bool <IncludeSystem>k__BackingField;
    public bool IncludeSystem { get; }
    private SpaceContext(SpaceSelection spaceSelection, IReadOnlyCollection`1<SpaceResource> spaces, bool includeSystem);
    public static SpaceContext AllSpaces();
    public static SpaceContext AllSpacesAndSystem();
    public static SpaceContext SpecificSpace(SpaceResource space);
    public static SpaceContext SpecificSpaceAndSystem(SpaceResource space);
    public static SpaceContext SpecificSpaces(IEnumerable`1<SpaceResource> spaces);
    public static SpaceContext SpecificSpacesAndSystem(IEnumerable`1<SpaceResource> spaces);
    public static SpaceContext SpecificSpaces(SpaceResource[] spaces);
    public static SpaceContext SpecificSpacesAndSystem(SpaceResource[] spaces);
    public static SpaceContext SystemOnly();
    [CompilerGeneratedAttribute]
public bool get_IncludeSystem();
    public T ApplySpaceSelection(Func`2<IReadOnlyCollection`1<SpaceResource>, T> handleSpecificSpaces, Func`1<T> handleAllSpaces);
    public void ApplySpaceSelection(Action`1<IReadOnlyCollection`1<SpaceResource>> handleSpecificSpaces, Action handleAllSpaces);
}
public class Octopus.Client.SpaceContextSwitchException : Exception {
}
public class Octopus.Client.SpaceScopedOperationInSystemContextException : Exception {
}
public enum Octopus.Client.SpaceSelection : Enum {
    public int value__;
    public static SpaceSelection AllSpaces;
    public static SpaceSelection SpecificSpaces;
}
public class Octopus.Client.Tasks.AsyncLazy`1 : object {
    private Func`2<CancellationToken, Task`1<T>> factoryFunc;
    private SemaphoreSlim semaphore;
    private T value;
    [CompilerGeneratedAttribute]
private bool <HasValue>k__BackingField;
    public bool HasValue { get; private set; }
    public AsyncLazy`1(Func`2<CancellationToken, Task`1<T>> factoryFunc);
    [CompilerGeneratedAttribute]
public bool get_HasValue();
    [CompilerGeneratedAttribute]
private void set_HasValue(bool value);
    [AsyncStateMachineAttribute("Octopus.Client.Tasks.AsyncLazy`1/<Value>d__8")]
public Task`1<T> Value(CancellationToken cancellationToken);
}
public class Octopus.Client.UrlTemplate : object {
    private static string UriReservedSymbols;
    private static string UriUnreservedSymbols;
    private static Dictionary`2<char, OperatorInfo> Operators;
    private Dictionary`2<string, object> parameters;
    private string template;
    private bool errorDetected;
    private List`1<string> parameterNames;
    private StringBuilder result;
    public UrlTemplate(string template);
    private static UrlTemplate();
    public void SetParameter(string name, object value);
    public void SetParameter(string name, string value);
    public void SetParameter(string name, IEnumerable`1<string> value);
    public void SetParameter(string name, IDictionary`2<string, string> value);
    public IEnumerable`1<string> GetParameterNames();
    public string Resolve();
    private void ProcessExpression(StringBuilder currentExpression);
    private bool ProcessVariable(VarSpec varSpec);
    private void AppendDictionary(OperatorInfo op, bool explode, IDictionary`2<string, string> dictionary);
    private void AppendList(OperatorInfo op, bool explode, string variable, IEnumerable`1<string> list);
    private void AppendValue(string value, int prefixLength, bool allowReserved);
    private void AppendName(string variable, OperatorInfo op, bool valueIsEmpty);
    private static string Encode(string p, bool allowReserved);
    private static OperatorInfo GetOperator(char operatorIndicator);
    public static string Resolve(string templateSpec, object parameters);
    public static string Resolve(string templateSpec, IDictionary`2<string, object> parameters);
}
[ExtensionAttribute]
internal static class Octopus.Client.Util.AsyncRepositoryExtensions : object {
    [ExtensionAttribute]
[AsyncStateMachineAttribute("Octopus.Client.Util.AsyncRepositoryExtensions/<FindByNameIdOrSlugs>d__0`2")]
public static Task`1<List`1<TResource>> FindByNameIdOrSlugs(TRepository repository, String[] searchIdentifiers, Func`2<String[], string> exceptionMessageGenerator);
}
internal class Octopus.Client.Util.ClientProxy : object {
    [CompilerGeneratedAttribute]
private Uri <ProxyUri>k__BackingField;
    [CompilerGeneratedAttribute]
private ICredentials <Credentials>k__BackingField;
    public Uri ProxyUri { get; protected set; }
    public ICredentials Credentials { get; public set; }
    public ClientProxy(string address, string username, string password);
    [CompilerGeneratedAttribute]
public Uri get_ProxyUri();
    [CompilerGeneratedAttribute]
protected void set_ProxyUri(Uri value);
    [CompilerGeneratedAttribute]
public sealed virtual ICredentials get_Credentials();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Credentials(ICredentials value);
    public sealed virtual Uri GetProxy(Uri destination);
    public sealed virtual bool IsBypassed(Uri host);
}
[ExtensionAttribute]
internal static class Octopus.Client.Util.DynamicExtensions : object {
    [ExtensionAttribute]
public static object ToDynamic(object value, object metadata);
    private static IDictionary`2<string, object> GetExpandoObject(object value);
}
internal static class Octopus.Client.Util.HashCalculator : object {
    public static string Hash(Stream stream);
    public static string Hash(Byte[] bytes);
    public static string Hash(string input);
    private static string Sanitize(Byte[] hash);
}
public class Octopus.Client.Util.HashCodeCombiner : object {
    private static long Seed;
    private long combinedHash;
    public int CombinedHash { get; }
    public int get_CombinedHash();
    public HashCodeCombiner AddInt32(int i);
    public HashCodeCombiner AddObject(int i);
    public HashCodeCombiner AddObject(bool b);
    public HashCodeCombiner AddObject(object o);
    public static int GetHashCode(Object[] objects);
}
[ExtensionAttribute]
internal static class Octopus.Client.Util.LinkSpaceExtension : object {
    [ExtensionAttribute]
public static string AppendSpaceId(Href link, SpaceResource space);
}
internal static class Octopus.Client.Util.PackageContentComparer : object {
    public static bool AreSame(PackageFromBuiltInFeedResource uploadedPackage, Stream contents, ILog logger);
    private static string CalculateLocalPackageHash(Stream contents);
}
public class Octopus.Client.Util.PackageIdentityParser : object {
    public static bool TryParsePackageIdAndVersion(string idAndVersion, String& packageId, SemanticVersion& version);
}
internal static class Octopus.Client.Util.ParameterHelper : object {
    public static Dictionary`2<string, object> CombineParameters(Dictionary`2<string, object> currentAdditionalQueryParameters, object userProvidedParameters);
    private static IDictionary`2<string, object> GetParameters(object parameters);
}
[ExtensionAttribute]
internal static class Octopus.Client.Util.RepositoryExtensions : object {
    [ExtensionAttribute]
public static List`1<TResource> FindByNameIdOrSlugs(TRepository repository, String[] searchIdentifiers, Func`2<String[], string> exceptionMessageGenerator);
}
internal class Octopus.Client.Util.TemporaryFile : object {
    private static ILog Logger;
    [CompilerGeneratedAttribute]
private string <FileName>k__BackingField;
    public string FileName { get; }
    private static TemporaryFile();
    [CompilerGeneratedAttribute]
public string get_FileName();
    public sealed virtual void Dispose();
}
public class Octopus.Client.Validation.ContainsSomeValidCharactersAttribute : Attribute {
}
[AttributeUsageAttribute("128")]
public class Octopus.Client.Validation.NonEmptyCollectionAttribute : ValidationAttribute {
    public virtual bool IsValid(object value);
}
[AttributeUsageAttribute("128")]
public class Octopus.Client.Validation.NonEmptyCollectionItemAttribute : ValidationAttribute {
    public virtual bool IsValid(object value);
}
public class Octopus.Client.Validation.PasswordComplexityAttribute : ValidationAttribute {
    public static string DefaultMessage;
    private static PasswordComplexityAttribute();
    public virtual bool IsValid(object value);
    public static bool IsPasswordStrongEnough(string password);
    private static int CalculateStrength(string password);
}
[AttributeUsageAttribute("128")]
public class Octopus.Client.Validation.PathSegmentAttribute : Attribute {
}
internal static class Octopus.Client.Validation.ServerVersionCheck : object {
    private static String[] WhitelistOfServerVersionsSafeToIgnore;
    private static ServerVersionCheck();
    public static bool IsOlderThanClient(string currentServerVersion, SemanticVersion minimumRequiredVersion);
    private static SemanticVersion Normalize(SemanticVersion version);
}
[AttributeUsageAttribute("128")]
public class Octopus.Client.Validation.ValidSemanticVersionOrMaskAttribute : ValidationAttribute {
    public virtual bool IsValid(object value);
}
[AttributeUsageAttribute("4")]
public class Octopus.Server.MessageContracts.Base.Attributes.ExperimentalAttribute : Attribute {
}
[<e2619cd4-38f2-491a-93df-a58fd945c094>NullableAttribute("0")]
[AttributeUsageAttribute("128")]
[<7306beb1-509c-4064-b0d4-4d9d9c2ea1a4>NullableContextAttribute("2")]
public class Octopus.Server.MessageContracts.Base.Attributes.OptionalAttribute : ValidationAttribute {
    public virtual bool IsValid(object value);
    protected virtual ValidationResult IsValid(object value, ValidationContext validationContext);
}
public enum Octopus.Server.MessageContracts.Base.HttpRoutes.HttpMethod : Enum {
    public int value__;
    public static HttpMethod Get;
    public static HttpMethod Put;
    public static HttpMethod Post;
    public static HttpMethod Patch;
    public static HttpMethod Delete;
}
[AttributeUsageAttribute("256")]
public class Octopus.Server.MessageContracts.Base.HttpRoutes.HttpRouteTemplateAttribute : Attribute {
}
public interface Octopus.Server.MessageContracts.Base.HttpRoutes.IHttpCommandRouteFor`2 {
    public HttpMethod HttpMethod { get; }
    public abstract virtual HttpMethod get_HttpMethod();
}
public interface Octopus.Server.MessageContracts.Base.HttpRoutes.IHttpRequestRouteFor`2 {
    public HttpMethod HttpMethod { get; }
    public abstract virtual HttpMethod get_HttpMethod();
}
public interface Octopus.Server.MessageContracts.Base.IBroadcastRequest`2 {
}
public interface Octopus.Server.MessageContracts.Base.ICommand`2 {
}
public interface Octopus.Server.MessageContracts.Base.IRequest`2 {
}
public interface Octopus.Server.MessageContracts.Base.IResponse {
}
[<7b90d52c-6cae-4d20-a46a-0eb940bf7d2a>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[<b6c89d4a-266e-47e3-ae32-f25e8ff0ec23>NullableContextAttribute("1")]
internal abstract class Octopus.TinyTypes.CaseInsensitiveStringTinyType : TinyType`1<string> {
    private int calculateHash;
    protected CaseInsensitiveStringTinyType(string value);
    [<b6c89d4a-266e-47e3-ae32-f25e8ff0ec23>NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
[<7b90d52c-6cae-4d20-a46a-0eb940bf7d2a>NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[<b6c89d4a-266e-47e3-ae32-f25e8ff0ec23>NullableContextAttribute("1")]
internal abstract class Octopus.TinyTypes.CaseSensitiveStringTinyType : TinyType`1<string> {
    protected CaseSensitiveStringTinyType(string value);
}
[<17a6ad34-f40e-412d-8e82-6669015c9081>NullableContextAttribute("1")]
[<8ca00514-04ad-4405-ba09-14b0485a7f7d>NullableAttribute("0")]
internal class Octopus.TinyTypes.Json.TinyTypeJsonConverter : JsonConverter {
    private static MethodInfo OpenGenericCreateMethod;
    private static TinyTypeJsonConverter();
    public virtual bool CanConvert(Type objectType);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    private static TTinyType Create(TWrapped value);
}
[DebuggerDisplayAttribute("{Value}")]
[<7b90d52c-6cae-4d20-a46a-0eb940bf7d2a>NullableAttribute("0")]
[<b6c89d4a-266e-47e3-ae32-f25e8ff0ec23>NullableContextAttribute("1")]
internal abstract class Octopus.TinyTypes.TinyType`1 : object {
    private static BindingFlags Flags;
    private static ConcurrentDictionary`2<Type, Delegate> TypeCreatorCache;
    [CompilerGeneratedAttribute]
private T <Value>k__BackingField;
    public T Value { get; }
    protected TinyType`1(T value);
    private static TinyType`1();
    [CompilerGeneratedAttribute]
public T get_Value();
    [<b6c89d4a-266e-47e3-ae32-f25e8ff0ec23>NullableContextAttribute("2")]
public virtual int CompareTo(object obj);
    [<b6c89d4a-266e-47e3-ae32-f25e8ff0ec23>NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public static bool op_Equality(TinyType`1<T> a, TinyType`1<T> b);
    public static bool op_Inequality(TinyType`1<T> a, TinyType`1<T> b);
    public virtual int GetHashCode();
    [<b6c89d4a-266e-47e3-ae32-f25e8ff0ec23>NullableContextAttribute("2")]
public virtual string ToString();
    public static Func`2<T, TTinyType> GetTinyTypeCreatorDelegate(Type tinyType);
    public static TinyType`1<T> Create(Type tinyType, object value);
    [<b6c89d4a-266e-47e3-ae32-f25e8ff0ec23>NullableContextAttribute("0")]
public static TTinyType Create(object value);
}
[ExtensionAttribute]
[<7b90d52c-6cae-4d20-a46a-0eb940bf7d2a>NullableAttribute("0")]
[<b6c89d4a-266e-47e3-ae32-f25e8ff0ec23>NullableContextAttribute("1")]
internal static class Octopus.TinyTypes.TinyTypeExtensionMethods : object {
    [ExtensionAttribute]
public static Type UnderlyingValueType(Type type);
    [ExtensionAttribute]
public static bool IsTinyType(Type type);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Octopus.TinyTypes.TypeConverters.TinyTypeConverter`1 : TypeConverter {
    private static Type GuidType;
    private static Type UnderlyingValueType;
    private static MethodInfo OpenGenericCreateMethod;
    private static Func`2<object, TTinyType> CreateMethod;
    private static TinyTypeConverter`1();
    private static Func`2<object, TTinyType> ConstructCreateMethod();
    public virtual bool CanConvertTo(ITypeDescriptorContext context, Type destinationType);
    public virtual bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType);
    public virtual object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value);
    private static TResult Create(TWrapped value);
}
internal static class Octopus.TinyTypes.TypeConverters.TinyTypeConverters : object {
    [NullableContextAttribute("1")]
public static void RegisterConverterFor(Type tinyType);
}
internal static class System.<1c82a2fb-2648-4b60-9c00-6cb7e54be045>SR : object {
    private static ResourceManager s_resourceManager;
    private static string s_resourcesName;
    private static ResourceManager ResourceManager { get; }
    internal static string OrderCannotBeNegative { get; }
    internal static Type ResourceType { get; }
    private static ResourceManager get_ResourceManager();
    private static bool UsingResourceKeys();
    internal static string GetResourceString(string resourceKey, string defaultString);
    internal static string Format(string resourceFormat, Object[] args);
    internal static string Format(string resourceFormat, object p1);
    internal static string Format(string resourceFormat, object p1, object p2);
    internal static string Format(string resourceFormat, object p1, object p2, object p3);
    internal static string get_OrderCannotBeNegative();
    internal static Type get_ResourceType();
}
internal static class System.<24c1485b-1812-422c-944a-cf3bab5551ae>SR : object {
    private static ResourceManager s_resourceManager;
    private static string s_resourcesName;
    private static ResourceManager ResourceManager { get; }
    internal static string ArgumentOutOfRange_NeedNonNegNum { get; }
    internal static string ArgumentOutOfRange_NeedPosNum { get; }
    internal static string Argument_InvalidOffLen { get; }
    internal static string Argument_InvalidOidValue { get; }
    internal static string Argument_InvalidValue { get; }
    internal static string ArgumentNull_Buffer { get; }
    internal static string Arg_CryptographyException { get; }
    internal static string Cryptography_BadHashSize_ForAlgorithm { get; }
    internal static string Cryptography_Config_EncodedOIDError { get; }
    internal static string Cryptography_CSP_NoPrivateKey { get; }
    internal static string Cryptography_Der_Invalid_Encoding { get; }
    internal static string Cryptography_DSA_KeyGenNotSupported { get; }
    internal static string Cryptography_ECXmlSerializationFormatRequired { get; }
    internal static string Cryptography_ECC_NamedCurvesOnly { get; }
    internal static string Cryptography_HashAlgorithmNameNullOrEmpty { get; }
    internal static string Cryptography_InvalidOID { get; }
    internal static string Cryptography_CurveNotSupported { get; }
    internal static string Cryptography_InvalidCurveOid { get; }
    internal static string Cryptography_InvalidCurveKeyParameters { get; }
    internal static string Cryptography_InvalidDsaParameters_MissingFields { get; }
    internal static string Cryptography_InvalidDsaParameters_MismatchedPGY { get; }
    internal static string Cryptography_InvalidDsaParameters_MismatchedQX { get; }
    internal static string Cryptography_InvalidDsaParameters_MismatchedPJ { get; }
    internal static string Cryptography_InvalidDsaParameters_SeedRestriction_ShortKey { get; }
    internal static string Cryptography_InvalidDsaParameters_QRestriction_ShortKey { get; }
    internal static string Cryptography_InvalidDsaParameters_QRestriction_LargeKey { get; }
    internal static string Cryptography_InvalidECCharacteristic2Curve { get; }
    internal static string Cryptography_InvalidECPrimeCurve { get; }
    internal static string Cryptography_InvalidECNamedCurve { get; }
    internal static string Cryptography_InvalidKeySize { get; }
    internal static string Cryptography_InvalidKey_SemiWeak { get; }
    internal static string Cryptography_InvalidKey_Weak { get; }
    internal static string Cryptography_InvalidIVSize { get; }
    internal static string Cryptography_InvalidOperation { get; }
    internal static string Cryptography_InvalidPadding { get; }
    internal static string Cryptography_InvalidRsaParameters { get; }
    internal static string Cryptography_InvalidPaddingMode { get; }
    internal static string Cryptography_Invalid_IA5String { get; }
    internal static string Cryptography_MissingIV { get; }
    internal static string Cryptography_MissingKey { get; }
    internal static string Cryptography_MissingOID { get; }
    internal static string Cryptography_MustTransformWholeBlock { get; }
    internal static string Cryptography_NotValidPrivateKey { get; }
    internal static string Cryptography_NotValidPublicOrPrivateKey { get; }
    internal static string Cryptography_OpenInvalidHandle { get; }
    internal static string Cryptography_PartialBlock { get; }
    internal static string Cryptography_PasswordDerivedBytes_FewBytesSalt { get; }
    internal static string Cryptography_RC2_EKS40 { get; }
    internal static string Cryptography_RC2_EKSKS { get; }
    internal static string Cryptography_RC2_EKSKS2 { get; }
    internal static string Cryptography_Rijndael_BlockSize { get; }
    internal static string Cryptography_TransformBeyondEndOfBuffer { get; }
    internal static string Cryptography_CipherModeNotSupported { get; }
    internal static string Cryptography_UnknownHashAlgorithm { get; }
    internal static string Cryptography_UnknownPaddingMode { get; }
    internal static string Cryptography_UnexpectedTransformTruncation { get; }
    internal static string Cryptography_Unmapped_System_Typed_Error { get; }
    internal static string Cryptography_UnsupportedPaddingMode { get; }
    internal static string NotSupported_Method { get; }
    internal static string NotSupported_SubclassOverride { get; }
    internal static string Cryptography_AlgorithmTypesMustBeVisible { get; }
    internal static string Cryptography_AddNullOrEmptyName { get; }
    internal static Type ResourceType { get; }
    private static ResourceManager get_ResourceManager();
    private static bool UsingResourceKeys();
    internal static string GetResourceString(string resourceKey, string defaultString);
    internal static string Format(string resourceFormat, Object[] args);
    internal static string Format(string resourceFormat, object p1);
    internal static string Format(string resourceFormat, object p1, object p2);
    internal static string Format(string resourceFormat, object p1, object p2, object p3);
    internal static string get_ArgumentOutOfRange_NeedNonNegNum();
    internal static string get_ArgumentOutOfRange_NeedPosNum();
    internal static string get_Argument_InvalidOffLen();
    internal static string get_Argument_InvalidOidValue();
    internal static string get_Argument_InvalidValue();
    internal static string get_ArgumentNull_Buffer();
    internal static string get_Arg_CryptographyException();
    internal static string get_Cryptography_BadHashSize_ForAlgorithm();
    internal static string get_Cryptography_Config_EncodedOIDError();
    internal static string get_Cryptography_CSP_NoPrivateKey();
    internal static string get_Cryptography_Der_Invalid_Encoding();
    internal static string get_Cryptography_DSA_KeyGenNotSupported();
    internal static string get_Cryptography_ECXmlSerializationFormatRequired();
    internal static string get_Cryptography_ECC_NamedCurvesOnly();
    internal static string get_Cryptography_HashAlgorithmNameNullOrEmpty();
    internal static string get_Cryptography_InvalidOID();
    internal static string get_Cryptography_CurveNotSupported();
    internal static string get_Cryptography_InvalidCurveOid();
    internal static string get_Cryptography_InvalidCurveKeyParameters();
    internal static string get_Cryptography_InvalidDsaParameters_MissingFields();
    internal static string get_Cryptography_InvalidDsaParameters_MismatchedPGY();
    internal static string get_Cryptography_InvalidDsaParameters_MismatchedQX();
    internal static string get_Cryptography_InvalidDsaParameters_MismatchedPJ();
    internal static string get_Cryptography_InvalidDsaParameters_SeedRestriction_ShortKey();
    internal static string get_Cryptography_InvalidDsaParameters_QRestriction_ShortKey();
    internal static string get_Cryptography_InvalidDsaParameters_QRestriction_LargeKey();
    internal static string get_Cryptography_InvalidECCharacteristic2Curve();
    internal static string get_Cryptography_InvalidECPrimeCurve();
    internal static string get_Cryptography_InvalidECNamedCurve();
    internal static string get_Cryptography_InvalidKeySize();
    internal static string get_Cryptography_InvalidKey_SemiWeak();
    internal static string get_Cryptography_InvalidKey_Weak();
    internal static string get_Cryptography_InvalidIVSize();
    internal static string get_Cryptography_InvalidOperation();
    internal static string get_Cryptography_InvalidPadding();
    internal static string get_Cryptography_InvalidRsaParameters();
    internal static string get_Cryptography_InvalidPaddingMode();
    internal static string get_Cryptography_Invalid_IA5String();
    internal static string get_Cryptography_MissingIV();
    internal static string get_Cryptography_MissingKey();
    internal static string get_Cryptography_MissingOID();
    internal static string get_Cryptography_MustTransformWholeBlock();
    internal static string get_Cryptography_NotValidPrivateKey();
    internal static string get_Cryptography_NotValidPublicOrPrivateKey();
    internal static string get_Cryptography_OpenInvalidHandle();
    internal static string get_Cryptography_PartialBlock();
    internal static string get_Cryptography_PasswordDerivedBytes_FewBytesSalt();
    internal static string get_Cryptography_RC2_EKS40();
    internal static string get_Cryptography_RC2_EKSKS();
    internal static string get_Cryptography_RC2_EKSKS2();
    internal static string get_Cryptography_Rijndael_BlockSize();
    internal static string get_Cryptography_TransformBeyondEndOfBuffer();
    internal static string get_Cryptography_CipherModeNotSupported();
    internal static string get_Cryptography_UnknownHashAlgorithm();
    internal static string get_Cryptography_UnknownPaddingMode();
    internal static string get_Cryptography_UnexpectedTransformTruncation();
    internal static string get_Cryptography_Unmapped_System_Typed_Error();
    internal static string get_Cryptography_UnsupportedPaddingMode();
    internal static string get_NotSupported_Method();
    internal static string get_NotSupported_SubclassOverride();
    internal static string get_Cryptography_AlgorithmTypesMustBeVisible();
    internal static string get_Cryptography_AddNullOrEmptyName();
    internal static Type get_ResourceType();
}
internal static class System.<39773163-b3fe-46f9-b2d2-191875627faf>SR : object {
    private static ResourceManager s_resourceManager;
    private static string s_resourcesName;
    private static ResourceManager ResourceManager { get; }
    internal static string Argument_InvalidFlag { get; }
    internal static Type ResourceType { get; }
    private static ResourceManager get_ResourceManager();
    private static bool UsingResourceKeys();
    internal static string GetResourceString(string resourceKey, string defaultString);
    internal static string Format(string resourceFormat, Object[] args);
    internal static string Format(string resourceFormat, object p1);
    internal static string Format(string resourceFormat, object p1, object p2);
    internal static string Format(string resourceFormat, object p1, object p2, object p3);
    internal static string get_Argument_InvalidFlag();
    internal static Type get_ResourceType();
}
internal static class System.<55ca644b-dffc-41ef-9ad1-975dbe7a7858>SR : object {
    private static ResourceManager s_resourceManager;
    private static string s_resourcesName;
    private static ResourceManager ResourceManager { get; }
    internal static string ArgumentOutOfRange_Enum { get; }
    internal static string ArgumentOutOfRange_NeedPosNum { get; }
    internal static string CannotReadFromDeflateStream { get; }
    internal static string CannotWriteToDeflateStream { get; }
    internal static string GenericInvalidData { get; }
    internal static string InvalidArgumentOffsetCount { get; }
    internal static string InvalidBeginCall { get; }
    internal static string InvalidBlockLength { get; }
    internal static string InvalidHuffmanData { get; }
    internal static string NotSupported { get; }
    internal static string NotSupported_UnreadableStream { get; }
    internal static string NotSupported_UnwritableStream { get; }
    internal static string ObjectDisposed_StreamClosed { get; }
    internal static string UnknownBlockType { get; }
    internal static string UnknownState { get; }
    internal static string ZLibErrorDLLLoadError { get; }
    internal static string ZLibErrorInconsistentStream { get; }
    internal static string ZLibErrorIncorrectInitParameters { get; }
    internal static string ZLibErrorNotEnoughMemory { get; }
    internal static string ZLibErrorVersionMismatch { get; }
    internal static string ZLibErrorUnexpected { get; }
    internal static string ArgumentNeedNonNegative { get; }
    internal static string CannotBeEmpty { get; }
    internal static string CDCorrupt { get; }
    internal static string CentralDirectoryInvalid { get; }
    internal static string CreateInReadMode { get; }
    internal static string CreateModeCapabilities { get; }
    internal static string CreateModeCreateEntryWhileOpen { get; }
    internal static string CreateModeWriteOnceAndOneEntryAtATime { get; }
    internal static string DateTimeOutOfRange { get; }
    internal static string DeletedEntry { get; }
    internal static string DeleteOnlyInUpdate { get; }
    internal static string DeleteOpenEntry { get; }
    internal static string EntriesInCreateMode { get; }
    internal static string EntryNameEncodingNotSupported { get; }
    internal static string EntryNamesTooLong { get; }
    internal static string EntryTooLarge { get; }
    internal static string EOCDNotFound { get; }
    internal static string FieldTooBigCompressedSize { get; }
    internal static string FieldTooBigLocalHeaderOffset { get; }
    internal static string FieldTooBigNumEntries { get; }
    internal static string FieldTooBigOffsetToCD { get; }
    internal static string FieldTooBigOffsetToZip64EOCD { get; }
    internal static string FieldTooBigStartDiskNumber { get; }
    internal static string FieldTooBigUncompressedSize { get; }
    internal static string FrozenAfterWrite { get; }
    internal static string HiddenStreamName { get; }
    internal static string LengthAfterWrite { get; }
    internal static string LocalFileHeaderCorrupt { get; }
    internal static string NumEntriesWrong { get; }
    internal static string OffsetLengthInvalid { get; }
    internal static string ReadingNotSupported { get; }
    internal static string ReadModeCapabilities { get; }
    internal static string ReadOnlyArchive { get; }
    internal static string SeekingNotSupported { get; }
    internal static string SetLengthRequiresSeekingAndWriting { get; }
    internal static string SplitSpanned { get; }
    internal static string UnexpectedEndOfStream { get; }
    internal static string UnsupportedCompression { get; }
    internal static string UnsupportedCompressionMethod { get; }
    internal static string UpdateModeCapabilities { get; }
    internal static string UpdateModeOneStream { get; }
    internal static string WritingNotSupported { get; }
    internal static string Zip64EOCDNotWhereExpected { get; }
    internal static string Argument_InvalidPathChars { get; }
    internal static Type ResourceType { get; }
    private static ResourceManager get_ResourceManager();
    private static bool UsingResourceKeys();
    internal static string GetResourceString(string resourceKey, string defaultString);
    internal static string Format(string resourceFormat, Object[] args);
    internal static string Format(string resourceFormat, object p1);
    internal static string Format(string resourceFormat, object p1, object p2);
    internal static string Format(string resourceFormat, object p1, object p2, object p3);
    internal static string get_ArgumentOutOfRange_Enum();
    internal static string get_ArgumentOutOfRange_NeedPosNum();
    internal static string get_CannotReadFromDeflateStream();
    internal static string get_CannotWriteToDeflateStream();
    internal static string get_GenericInvalidData();
    internal static string get_InvalidArgumentOffsetCount();
    internal static string get_InvalidBeginCall();
    internal static string get_InvalidBlockLength();
    internal static string get_InvalidHuffmanData();
    internal static string get_NotSupported();
    internal static string get_NotSupported_UnreadableStream();
    internal static string get_NotSupported_UnwritableStream();
    internal static string get_ObjectDisposed_StreamClosed();
    internal static string get_UnknownBlockType();
    internal static string get_UnknownState();
    internal static string get_ZLibErrorDLLLoadError();
    internal static string get_ZLibErrorInconsistentStream();
    internal static string get_ZLibErrorIncorrectInitParameters();
    internal static string get_ZLibErrorNotEnoughMemory();
    internal static string get_ZLibErrorVersionMismatch();
    internal static string get_ZLibErrorUnexpected();
    internal static string get_ArgumentNeedNonNegative();
    internal static string get_CannotBeEmpty();
    internal static string get_CDCorrupt();
    internal static string get_CentralDirectoryInvalid();
    internal static string get_CreateInReadMode();
    internal static string get_CreateModeCapabilities();
    internal static string get_CreateModeCreateEntryWhileOpen();
    internal static string get_CreateModeWriteOnceAndOneEntryAtATime();
    internal static string get_DateTimeOutOfRange();
    internal static string get_DeletedEntry();
    internal static string get_DeleteOnlyInUpdate();
    internal static string get_DeleteOpenEntry();
    internal static string get_EntriesInCreateMode();
    internal static string get_EntryNameEncodingNotSupported();
    internal static string get_EntryNamesTooLong();
    internal static string get_EntryTooLarge();
    internal static string get_EOCDNotFound();
    internal static string get_FieldTooBigCompressedSize();
    internal static string get_FieldTooBigLocalHeaderOffset();
    internal static string get_FieldTooBigNumEntries();
    internal static string get_FieldTooBigOffsetToCD();
    internal static string get_FieldTooBigOffsetToZip64EOCD();
    internal static string get_FieldTooBigStartDiskNumber();
    internal static string get_FieldTooBigUncompressedSize();
    internal static string get_FrozenAfterWrite();
    internal static string get_HiddenStreamName();
    internal static string get_LengthAfterWrite();
    internal static string get_LocalFileHeaderCorrupt();
    internal static string get_NumEntriesWrong();
    internal static string get_OffsetLengthInvalid();
    internal static string get_ReadingNotSupported();
    internal static string get_ReadModeCapabilities();
    internal static string get_ReadOnlyArchive();
    internal static string get_SeekingNotSupported();
    internal static string get_SetLengthRequiresSeekingAndWriting();
    internal static string get_SplitSpanned();
    internal static string get_UnexpectedEndOfStream();
    internal static string get_UnsupportedCompression();
    internal static string get_UnsupportedCompressionMethod();
    internal static string get_UpdateModeCapabilities();
    internal static string get_UpdateModeOneStream();
    internal static string get_WritingNotSupported();
    internal static string get_Zip64EOCDNotWhereExpected();
    internal static string get_Argument_InvalidPathChars();
    internal static Type get_ResourceType();
}
internal static class System.<79f575f7-5dac-45b1-b7f9-a07277893b5d>SR : object {
    private static ResourceManager s_resourceManager;
    private static string s_resourcesName;
    private static ResourceManager ResourceManager { get; }
    internal static string Argument_EmptyValue { get; }
    internal static string PlatformNotSupported_RuntimeInformation { get; }
    internal static Type ResourceType { get; }
    private static ResourceManager get_ResourceManager();
    private static bool UsingResourceKeys();
    internal static string GetResourceString(string resourceKey, string defaultString);
    internal static string Format(string resourceFormat, Object[] args);
    internal static string Format(string resourceFormat, object p1);
    internal static string Format(string resourceFormat, object p1, object p2);
    internal static string Format(string resourceFormat, object p1, object p2, object p3);
    internal static string get_Argument_EmptyValue();
    internal static string get_PlatformNotSupported_RuntimeInformation();
    internal static Type get_ResourceType();
}
internal static class System.<7ced91c3-8f35-48de-a140-51ceb1e0420b>SR : object {
    private static ResourceManager s_resourceManager;
    private static string s_resourcesName;
    private static ResourceManager ResourceManager { get; }
    internal static string ADP_CollectionIndexString { get; }
    internal static string ADP_CollectionInvalidType { get; }
    internal static string ADP_CollectionIsNotParent { get; }
    internal static string ADP_CollectionNullValue { get; }
    internal static string ADP_CollectionRemoveInvalidObject { get; }
    internal static string ADP_CollectionUniqueValue { get; }
    internal static string ADP_ConnectionStateMsg_Closed { get; }
    internal static string ADP_ConnectionStateMsg_Connecting { get; }
    internal static string ADP_ConnectionStateMsg_Open { get; }
    internal static string ADP_ConnectionStateMsg_OpenExecuting { get; }
    internal static string ADP_ConnectionStateMsg_OpenFetching { get; }
    internal static string ADP_ConnectionStateMsg { get; }
    internal static string ADP_ConnectionStringSyntax { get; }
    internal static string ADP_DataReaderClosed { get; }
    internal static string ADP_EmptyString { get; }
    internal static string ADP_InvalidEnumerationValue { get; }
    internal static string ADP_InvalidKey { get; }
    internal static string ADP_InvalidValue { get; }
    internal static string Xml_SimpleTypeNotSupported { get; }
    internal static string Xml_MissingAttribute { get; }
    internal static string Xml_ValueOutOfRange { get; }
    internal static string Xml_AttributeValues { get; }
    internal static string Xml_RelationParentNameMissing { get; }
    internal static string Xml_RelationChildNameMissing { get; }
    internal static string Xml_RelationTableKeyMissing { get; }
    internal static string Xml_RelationChildKeyMissing { get; }
    internal static string Xml_UndefinedDatatype { get; }
    internal static string Xml_DatatypeNotDefined { get; }
    internal static string Xml_InvalidField { get; }
    internal static string Xml_InvalidSelector { get; }
    internal static string Xml_InvalidKey { get; }
    internal static string Xml_DuplicateConstraint { get; }
    internal static string Xml_CannotConvert { get; }
    internal static string Xml_MissingRefer { get; }
    internal static string Xml_MismatchKeyLength { get; }
    internal static string Xml_CircularComplexType { get; }
    internal static string Xml_CannotInstantiateAbstract { get; }
    internal static string Xml_MultipleTargetConverterError { get; }
    internal static string Xml_MultipleTargetConverterEmpty { get; }
    internal static string Xml_MergeDuplicateDeclaration { get; }
    internal static string Xml_MissingTable { get; }
    internal static string Xml_MissingSQL { get; }
    internal static string Xml_ColumnConflict { get; }
    internal static string Xml_InvalidPrefix { get; }
    internal static string Xml_NestedCircular { get; }
    internal static string Xml_FoundEntity { get; }
    internal static string Xml_PolymorphismNotSupported { get; }
    internal static string Xml_CanNotDeserializeObjectType { get; }
    internal static string Xml_DataTableInferenceNotSupported { get; }
    internal static string Xml_MultipleParentRows { get; }
    internal static string Xml_IsDataSetAttributeMissingInSchema { get; }
    internal static string Xml_TooManyIsDataSetAtributeInSchema { get; }
    internal static string Xml_DynamicWithoutXmlSerializable { get; }
    internal static string Expr_NYI { get; }
    internal static string Expr_MissingOperand { get; }
    internal static string Expr_TypeMismatch { get; }
    internal static string Expr_ExpressionTooComplex { get; }
    internal static string Expr_UnboundName { get; }
    internal static string Expr_InvalidString { get; }
    internal static string Expr_UndefinedFunction { get; }
    internal static string Expr_Syntax { get; }
    internal static string Expr_FunctionArgumentCount { get; }
    internal static string Expr_MissingRightParen { get; }
    internal static string Expr_UnknownToken { get; }
    internal static string Expr_UnknownToken1 { get; }
    internal static string Expr_DatatypeConvertion { get; }
    internal static string Expr_DatavalueConvertion { get; }
    internal static string Expr_InvalidName { get; }
    internal static string Expr_InvalidDate { get; }
    internal static string Expr_NonConstantArgument { get; }
    internal static string Expr_InvalidPattern { get; }
    internal static string Expr_InWithoutParentheses { get; }
    internal static string Expr_ArgumentType { get; }
    internal static string Expr_ArgumentTypeInteger { get; }
    internal static string Expr_TypeMismatchInBinop { get; }
    internal static string Expr_AmbiguousBinop { get; }
    internal static string Expr_InWithoutList { get; }
    internal static string Expr_UnsupportedOperator { get; }
    internal static string Expr_InvalidNameBracketing { get; }
    internal static string Expr_MissingOperandBefore { get; }
    internal static string Expr_TooManyRightParentheses { get; }
    internal static string Expr_UnresolvedRelation { get; }
    internal static string Expr_AggregateArgument { get; }
    internal static string Expr_AggregateUnbound { get; }
    internal static string Expr_EvalNoContext { get; }
    internal static string Expr_ExpressionUnbound { get; }
    internal static string Expr_ComputeNotAggregate { get; }
    internal static string Expr_FilterConvertion { get; }
    internal static string Expr_InvalidType { get; }
    internal static string Expr_LookupArgument { get; }
    internal static string Expr_InvokeArgument { get; }
    internal static string Expr_ArgumentOutofRange { get; }
    internal static string Expr_IsSyntax { get; }
    internal static string Expr_Overflow { get; }
    internal static string Expr_BindFailure { get; }
    internal static string Expr_InvalidHoursArgument { get; }
    internal static string Expr_InvalidMinutesArgument { get; }
    internal static string Expr_InvalidTimeZoneRange { get; }
    internal static string Expr_MismatchKindandTimeSpan { get; }
    internal static string Expr_UnsupportedType { get; }
    internal static string Data_EnforceConstraints { get; }
    internal static string Data_CannotModifyCollection { get; }
    internal static string Data_CaseInsensitiveNameConflict { get; }
    internal static string Data_NamespaceNameConflict { get; }
    internal static string Data_InvalidOffsetLength { get; }
    internal static string Data_ArgumentOutOfRange { get; }
    internal static string Data_ArgumentNull { get; }
    internal static string Data_ArgumentContainsNull { get; }
    internal static string DataColumns_OutOfRange { get; }
    internal static string DataColumns_Add1 { get; }
    internal static string DataColumns_Add2 { get; }
    internal static string DataColumns_Add3 { get; }
    internal static string DataColumns_Add4 { get; }
    internal static string DataColumns_AddDuplicate { get; }
    internal static string DataColumns_AddDuplicate2 { get; }
    internal static string DataColumns_AddDuplicate3 { get; }
    internal static string DataColumns_Remove { get; }
    internal static string DataColumns_RemovePrimaryKey { get; }
    internal static string DataColumns_RemoveChildKey { get; }
    internal static string DataColumns_RemoveConstraint { get; }
    internal static string DataColumn_AutoIncrementAndExpression { get; }
    internal static string DataColumn_AutoIncrementAndDefaultValue { get; }
    internal static string DataColumn_DefaultValueAndAutoIncrement { get; }
    internal static string DataColumn_AutoIncrementSeed { get; }
    internal static string DataColumn_NameRequired { get; }
    internal static string DataColumn_ChangeDataType { get; }
    internal static string DataColumn_NullDataType { get; }
    internal static string DataColumn_DefaultValueDataType { get; }
    internal static string DataColumn_DefaultValueDataType1 { get; }
    internal static string DataColumn_DefaultValueColumnDataType { get; }
    internal static string DataColumn_ReadOnlyAndExpression { get; }
    internal static string DataColumn_UniqueAndExpression { get; }
    internal static string DataColumn_ExpressionAndUnique { get; }
    internal static string DataColumn_ExpressionAndReadOnly { get; }
    internal static string DataColumn_ExpressionAndConstraint { get; }
    internal static string DataColumn_ExpressionInConstraint { get; }
    internal static string DataColumn_ExpressionCircular { get; }
    internal static string DataColumn_NullKeyValues { get; }
    internal static string DataColumn_NullValues { get; }
    internal static string DataColumn_ReadOnly { get; }
    internal static string DataColumn_NonUniqueValues { get; }
    internal static string DataColumn_NotInTheTable { get; }
    internal static string DataColumn_NotInAnyTable { get; }
    internal static string DataColumn_SetFailed { get; }
    internal static string DataColumn_CannotSetToNull { get; }
    internal static string DataColumn_LongerThanMaxLength { get; }
    internal static string DataColumn_HasToBeStringType { get; }
    internal static string DataColumn_CannotSetMaxLength { get; }
    internal static string DataColumn_CannotSetMaxLength2 { get; }
    internal static string DataColumn_CannotSimpleContentType { get; }
    internal static string DataColumn_CannotSimpleContent { get; }
    internal static string DataColumn_ExceedMaxLength { get; }
    internal static string DataColumn_NotAllowDBNull { get; }
    internal static string DataColumn_CannotChangeNamespace { get; }
    internal static string DataColumn_AutoIncrementCannotSetIfHasData { get; }
    internal static string DataColumn_NotInTheUnderlyingTable { get; }
    internal static string DataColumn_InvalidDataColumnMapping { get; }
    internal static string DataColumn_CannotSetDateTimeModeForNonDateTimeColumns { get; }
    internal static string DataColumn_DateTimeMode { get; }
    internal static string DataColumn_INullableUDTwithoutStaticNull { get; }
    internal static string DataColumn_UDTImplementsIChangeTrackingButnotIRevertible { get; }
    internal static string DataColumn_SetAddedAndModifiedCalledOnNonUnchanged { get; }
    internal static string DataColumn_OrdinalExceedMaximun { get; }
    internal static string DataColumn_NullableTypesNotSupported { get; }
    internal static string DataConstraint_NoName { get; }
    internal static string DataConstraint_Violation { get; }
    internal static string DataConstraint_ViolationValue { get; }
    internal static string DataConstraint_NotInTheTable { get; }
    internal static string DataConstraint_OutOfRange { get; }
    internal static string DataConstraint_Duplicate { get; }
    internal static string DataConstraint_DuplicateName { get; }
    internal static string DataConstraint_UniqueViolation { get; }
    internal static string DataConstraint_ForeignTable { get; }
    internal static string DataConstraint_ParentValues { get; }
    internal static string DataConstraint_AddFailed { get; }
    internal static string DataConstraint_RemoveFailed { get; }
    internal static string DataConstraint_NeededForForeignKeyConstraint { get; }
    internal static string DataConstraint_CascadeDelete { get; }
    internal static string DataConstraint_CascadeUpdate { get; }
    internal static string DataConstraint_ClearParentTable { get; }
    internal static string DataConstraint_ForeignKeyViolation { get; }
    internal static string DataConstraint_BadObjectPropertyAccess { get; }
    internal static string DataConstraint_RemoveParentRow { get; }
    internal static string DataConstraint_AddPrimaryKeyConstraint { get; }
    internal static string DataConstraint_CantAddConstraintToMultipleNestedTable { get; }
    internal static string DataKey_TableMismatch { get; }
    internal static string DataKey_NoColumns { get; }
    internal static string DataKey_TooManyColumns { get; }
    internal static string DataKey_DuplicateColumns { get; }
    internal static string DataKey_RemovePrimaryKey { get; }
    internal static string DataKey_RemovePrimaryKey1 { get; }
    internal static string DataRelation_ColumnsTypeMismatch { get; }
    internal static string DataRelation_KeyColumnsIdentical { get; }
    internal static string DataRelation_KeyLengthMismatch { get; }
    internal static string DataRelation_KeyZeroLength { get; }
    internal static string DataRelation_ForeignRow { get; }
    internal static string DataRelation_NoName { get; }
    internal static string DataRelation_ForeignTable { get; }
    internal static string DataRelation_ForeignDataSet { get; }
    internal static string DataRelation_GetParentRowTableMismatch { get; }
    internal static string DataRelation_SetParentRowTableMismatch { get; }
    internal static string DataRelation_DataSetMismatch { get; }
    internal static string DataRelation_TablesInDifferentSets { get; }
    internal static string DataRelation_AlreadyExists { get; }
    internal static string DataRelation_DoesNotExist { get; }
    internal static string DataRelation_AlreadyInOtherDataSet { get; }
    internal static string DataRelation_AlreadyInTheDataSet { get; }
    internal static string DataRelation_DuplicateName { get; }
    internal static string DataRelation_NotInTheDataSet { get; }
    internal static string DataRelation_OutOfRange { get; }
    internal static string DataRelation_TableNull { get; }
    internal static string DataRelation_TableWasRemoved { get; }
    internal static string DataRelation_ChildTableMismatch { get; }
    internal static string DataRelation_ParentTableMismatch { get; }
    internal static string DataRelation_RelationNestedReadOnly { get; }
    internal static string DataRelation_TableCantBeNestedInTwoTables { get; }
    internal static string DataRelation_LoopInNestedRelations { get; }
    internal static string DataRelation_CaseLocaleMismatch { get; }
    internal static string DataRelation_ParentOrChildColumnsDoNotHaveDataSet { get; }
    internal static string DataRelation_InValidNestedRelation { get; }
    internal static string DataRelation_InValidNamespaceInNestedRelation { get; }
    internal static string DataRow_NotInTheDataSet { get; }
    internal static string DataRow_NotInTheTable { get; }
    internal static string DataRow_ParentRowNotInTheDataSet { get; }
    internal static string DataRow_EditInRowChanging { get; }
    internal static string DataRow_EndEditInRowChanging { get; }
    internal static string DataRow_BeginEditInRowChanging { get; }
    internal static string DataRow_CancelEditInRowChanging { get; }
    internal static string DataRow_DeleteInRowDeleting { get; }
    internal static string DataRow_ValuesArrayLength { get; }
    internal static string DataRow_NoCurrentData { get; }
    internal static string DataRow_NoOriginalData { get; }
    internal static string DataRow_NoProposedData { get; }
    internal static string DataRow_RemovedFromTheTable { get; }
    internal static string DataRow_DeletedRowInaccessible { get; }
    internal static string DataRow_InvalidVersion { get; }
    internal static string DataRow_OutOfRange { get; }
    internal static string DataRow_RowInsertOutOfRange { get; }
    internal static string DataRow_RowInsertMissing { get; }
    internal static string DataRow_RowOutOfRange { get; }
    internal static string DataRow_AlreadyInOtherCollection { get; }
    internal static string DataRow_AlreadyInTheCollection { get; }
    internal static string DataRow_AlreadyDeleted { get; }
    internal static string DataRow_Empty { get; }
    internal static string DataRow_AlreadyRemoved { get; }
    internal static string DataRow_MultipleParents { get; }
    internal static string DataRow_InvalidRowBitPattern { get; }
    internal static string DataSet_SetNameToEmpty { get; }
    internal static string DataSet_SetDataSetNameConflicting { get; }
    internal static string DataSet_UnsupportedSchema { get; }
    internal static string DataSet_CannotChangeCaseLocale { get; }
    internal static string DataSet_CannotChangeSchemaSerializationMode { get; }
    internal static string DataTable_ForeignPrimaryKey { get; }
    internal static string DataTable_CannotAddToSimpleContent { get; }
    internal static string DataTable_NoName { get; }
    internal static string DataTable_MultipleSimpleContentColumns { get; }
    internal static string DataTable_MissingPrimaryKey { get; }
    internal static string DataTable_InvalidSortString { get; }
    internal static string DataTable_CanNotSerializeDataTableHierarchy { get; }
    internal static string DataTable_CanNotRemoteDataTable { get; }
    internal static string DataTable_CanNotSetRemotingFormat { get; }
    internal static string DataTable_CanNotSerializeDataTableWithEmptyName { get; }
    internal static string DataTable_DuplicateName { get; }
    internal static string DataTable_DuplicateName2 { get; }
    internal static string DataTable_SelfnestedDatasetConflictingName { get; }
    internal static string DataTable_DatasetConflictingName { get; }
    internal static string DataTable_AlreadyInOtherDataSet { get; }
    internal static string DataTable_AlreadyInTheDataSet { get; }
    internal static string DataTable_NotInTheDataSet { get; }
    internal static string DataTable_OutOfRange { get; }
    internal static string DataTable_InRelation { get; }
    internal static string DataTable_InConstraint { get; }
    internal static string DataTable_TableNotFound { get; }
    internal static string DataMerge_MissingDefinition { get; }
    internal static string DataMerge_MissingConstraint { get; }
    internal static string DataMerge_DataTypeMismatch { get; }
    internal static string DataMerge_PrimaryKeyMismatch { get; }
    internal static string DataMerge_PrimaryKeyColumnsMismatch { get; }
    internal static string DataMerge_ReltionKeyColumnsMismatch { get; }
    internal static string DataMerge_MissingColumnDefinition { get; }
    internal static string DataIndex_RecordStateRange { get; }
    internal static string DataIndex_FindWithoutSortOrder { get; }
    internal static string DataIndex_KeyLength { get; }
    internal static string DataStorage_AggregateException { get; }
    internal static string DataStorage_InvalidStorageType { get; }
    internal static string DataStorage_ProblematicChars { get; }
    internal static string DataStorage_SetInvalidDataType { get; }
    internal static string DataStorage_IComparableNotDefined { get; }
    internal static string DataView_SetFailed { get; }
    internal static string DataView_SetDataSetFailed { get; }
    internal static string DataView_SetRowStateFilter { get; }
    internal static string DataView_SetTable { get; }
    internal static string DataView_CanNotSetDataSet { get; }
    internal static string DataView_CanNotUseDataViewManager { get; }
    internal static string DataView_CanNotSetTable { get; }
    internal static string DataView_CanNotUse { get; }
    internal static string DataView_CanNotBindTable { get; }
    internal static string DataView_SetIListObject { get; }
    internal static string DataView_AddNewNotAllowNull { get; }
    internal static string DataView_NotOpen { get; }
    internal static string DataView_CreateChildView { get; }
    internal static string DataView_CanNotDelete { get; }
    internal static string DataView_CanNotEdit { get; }
    internal static string DataView_GetElementIndex { get; }
    internal static string DataView_AddExternalObject { get; }
    internal static string DataView_CanNotClear { get; }
    internal static string DataView_InsertExternalObject { get; }
    internal static string DataView_RemoveExternalObject { get; }
    internal static string DataROWView_PropertyNotFound { get; }
    internal static string Range_Argument { get; }
    internal static string Range_NullRange { get; }
    internal static string RecordManager_MinimumCapacity { get; }
    internal static string SqlConvert_ConvertFailed { get; }
    internal static string DataSet_DefaultDataException { get; }
    internal static string DataSet_DefaultConstraintException { get; }
    internal static string DataSet_DefaultDeletedRowInaccessibleException { get; }
    internal static string DataSet_DefaultDuplicateNameException { get; }
    internal static string DataSet_DefaultInRowChangingEventException { get; }
    internal static string DataSet_DefaultInvalidConstraintException { get; }
    internal static string DataSet_DefaultMissingPrimaryKeyException { get; }
    internal static string DataSet_DefaultNoNullAllowedException { get; }
    internal static string DataSet_DefaultReadOnlyException { get; }
    internal static string DataSet_DefaultRowNotInTableException { get; }
    internal static string DataSet_DefaultVersionNotFoundException { get; }
    internal static string Load_ReadOnlyDataModified { get; }
    internal static string DataTableReader_InvalidDataTableReader { get; }
    internal static string DataTableReader_SchemaInvalidDataTableReader { get; }
    internal static string DataTableReader_CannotCreateDataReaderOnEmptyDataSet { get; }
    internal static string DataTableReader_DataTableReaderArgumentIsEmpty { get; }
    internal static string DataTableReader_ArgumentContainsNullValue { get; }
    internal static string DataTableReader_InvalidRowInDataTableReader { get; }
    internal static string DataTableReader_DataTableCleared { get; }
    internal static string RbTree_InvalidState { get; }
    internal static string RbTree_EnumerationBroken { get; }
    internal static string NamedSimpleType_InvalidDuplicateNamedSimpleTypeDelaration { get; }
    internal static string DataDom_Foliation { get; }
    internal static string DataDom_TableNameChange { get; }
    internal static string DataDom_TableNamespaceChange { get; }
    internal static string DataDom_ColumnNameChange { get; }
    internal static string DataDom_ColumnNamespaceChange { get; }
    internal static string DataDom_ColumnMappingChange { get; }
    internal static string DataDom_TableColumnsChange { get; }
    internal static string DataDom_DataSetTablesChange { get; }
    internal static string DataDom_DataSetNestedRelationsChange { get; }
    internal static string DataDom_DataSetNull { get; }
    internal static string DataDom_DataSetNameChange { get; }
    internal static string DataDom_CloneNode { get; }
    internal static string DataDom_MultipleLoad { get; }
    internal static string DataDom_MultipleDataSet { get; }
    internal static string DataDom_NotSupport_GetElementById { get; }
    internal static string DataDom_NotSupport_EntRef { get; }
    internal static string DataDom_NotSupport_Clear { get; }
    internal static string ADP_EmptyArray { get; }
    internal static string SQL_WrongType { get; }
    internal static string ADP_InvalidConnectionOptionValue { get; }
    internal static string ADP_KeywordNotSupported { get; }
    internal static string ADP_InternalProviderError { get; }
    internal static string ADP_NoQuoteChange { get; }
    internal static string ADP_MissingSourceCommand { get; }
    internal static string ADP_MissingSourceCommandConnection { get; }
    internal static string ADP_InvalidMultipartName { get; }
    internal static string ADP_InvalidMultipartNameQuoteUsage { get; }
    internal static string ADP_InvalidMultipartNameToManyParts { get; }
    internal static string ADP_ColumnSchemaExpression { get; }
    internal static string ADP_ColumnSchemaMismatch { get; }
    internal static string ADP_ColumnSchemaMissing1 { get; }
    internal static string ADP_ColumnSchemaMissing2 { get; }
    internal static string ADP_InvalidSourceColumn { get; }
    internal static string ADP_MissingColumnMapping { get; }
    internal static string ADP_NotSupportedEnumerationValue { get; }
    internal static string ADP_MissingTableSchema { get; }
    internal static string ADP_InvalidSourceTable { get; }
    internal static string ADP_MissingTableMapping { get; }
    internal static string ADP_ConnectionRequired_Insert { get; }
    internal static string ADP_ConnectionRequired_Update { get; }
    internal static string ADP_ConnectionRequired_Delete { get; }
    internal static string ADP_ConnectionRequired_Batch { get; }
    internal static string ADP_ConnectionRequired_Clone { get; }
    internal static string ADP_OpenConnectionRequired_Insert { get; }
    internal static string ADP_OpenConnectionRequired_Update { get; }
    internal static string ADP_OpenConnectionRequired_Delete { get; }
    internal static string ADP_OpenConnectionRequired_Clone { get; }
    internal static string ADP_MissingSelectCommand { get; }
    internal static string ADP_UnwantedStatementType { get; }
    internal static string ADP_FillSchemaRequiresSourceTableName { get; }
    internal static string ADP_FillRequiresSourceTableName { get; }
    internal static string ADP_FillChapterAutoIncrement { get; }
    internal static string ADP_MissingDataReaderFieldType { get; }
    internal static string ADP_OnlyOneTableForStartRecordOrMaxRecords { get; }
    internal static string ADP_UpdateRequiresSourceTable { get; }
    internal static string ADP_UpdateRequiresSourceTableName { get; }
    internal static string ADP_UpdateRequiresCommandClone { get; }
    internal static string ADP_UpdateRequiresCommandSelect { get; }
    internal static string ADP_UpdateRequiresCommandInsert { get; }
    internal static string ADP_UpdateRequiresCommandUpdate { get; }
    internal static string ADP_UpdateRequiresCommandDelete { get; }
    internal static string ADP_UpdateMismatchRowTable { get; }
    internal static string ADP_RowUpdatedErrors { get; }
    internal static string ADP_RowUpdatingErrors { get; }
    internal static string ADP_ResultsNotAllowedDuringBatch { get; }
    internal static string ADP_UpdateConcurrencyViolation_Update { get; }
    internal static string ADP_UpdateConcurrencyViolation_Delete { get; }
    internal static string ADP_UpdateConcurrencyViolation_Batch { get; }
    internal static string ADP_InvalidSourceBufferIndex { get; }
    internal static string ADP_InvalidDestinationBufferIndex { get; }
    internal static string ADP_StreamClosed { get; }
    internal static string ADP_InvalidSeekOrigin { get; }
    internal static string ADP_DynamicSQLJoinUnsupported { get; }
    internal static string ADP_DynamicSQLNoTableInfo { get; }
    internal static string ADP_DynamicSQLNoKeyInfoDelete { get; }
    internal static string ADP_DynamicSQLNoKeyInfoUpdate { get; }
    internal static string ADP_DynamicSQLNoKeyInfoRowVersionDelete { get; }
    internal static string ADP_DynamicSQLNoKeyInfoRowVersionUpdate { get; }
    internal static string ADP_DynamicSQLNestedQuote { get; }
    internal static string SQL_InvalidBufferSizeOrIndex { get; }
    internal static string SQL_InvalidDataLength { get; }
    internal static string SqlMisc_NullString { get; }
    internal static string SqlMisc_MessageString { get; }
    internal static string SqlMisc_ArithOverflowMessage { get; }
    internal static string SqlMisc_DivideByZeroMessage { get; }
    internal static string SqlMisc_NullValueMessage { get; }
    internal static string SqlMisc_TruncationMessage { get; }
    internal static string SqlMisc_DateTimeOverflowMessage { get; }
    internal static string SqlMisc_ConcatDiffCollationMessage { get; }
    internal static string SqlMisc_CompareDiffCollationMessage { get; }
    internal static string SqlMisc_InvalidFlagMessage { get; }
    internal static string SqlMisc_NumeToDecOverflowMessage { get; }
    internal static string SqlMisc_ConversionOverflowMessage { get; }
    internal static string SqlMisc_InvalidDateTimeMessage { get; }
    internal static string SqlMisc_TimeZoneSpecifiedMessage { get; }
    internal static string SqlMisc_InvalidArraySizeMessage { get; }
    internal static string SqlMisc_InvalidPrecScaleMessage { get; }
    internal static string SqlMisc_FormatMessage { get; }
    internal static string SqlMisc_SqlTypeMessage { get; }
    internal static string SqlMisc_NoBufferMessage { get; }
    internal static string SqlMisc_BufferInsufficientMessage { get; }
    internal static string SqlMisc_WriteNonZeroOffsetOnNullMessage { get; }
    internal static string SqlMisc_WriteOffsetLargerThanLenMessage { get; }
    internal static string SqlMisc_NotFilledMessage { get; }
    internal static string SqlMisc_AlreadyFilledMessage { get; }
    internal static string SqlMisc_ClosedXmlReaderMessage { get; }
    internal static string SqlMisc_InvalidOpStreamClosed { get; }
    internal static string SqlMisc_InvalidOpStreamNonWritable { get; }
    internal static string SqlMisc_InvalidOpStreamNonReadable { get; }
    internal static string SqlMisc_InvalidOpStreamNonSeekable { get; }
    internal static string ADP_DBConcurrencyExceptionMessage { get; }
    internal static string ADP_InvalidMaxRecords { get; }
    internal static string ADP_CollectionIndexInt32 { get; }
    internal static string ADP_MissingTableMappingDestination { get; }
    internal static string ADP_InvalidStartRecord { get; }
    internal static string DataDom_EnforceConstraintsShouldBeOff { get; }
    internal static string DataColumns_RemoveExpression { get; }
    internal static string DataRow_RowInsertTwice { get; }
    internal static string Xml_ElementTypeNotFound { get; }
    internal static Type ResourceType { get; }
    private static ResourceManager get_ResourceManager();
    private static bool UsingResourceKeys();
    internal static string GetResourceString(string resourceKey, string defaultString);
    internal static string Format(string resourceFormat, Object[] args);
    internal static string Format(string resourceFormat, object p1);
    internal static string Format(string resourceFormat, object p1, object p2);
    internal static string Format(string resourceFormat, object p1, object p2, object p3);
    internal static string get_ADP_CollectionIndexString();
    internal static string get_ADP_CollectionInvalidType();
    internal static string get_ADP_CollectionIsNotParent();
    internal static string get_ADP_CollectionNullValue();
    internal static string get_ADP_CollectionRemoveInvalidObject();
    internal static string get_ADP_CollectionUniqueValue();
    internal static string get_ADP_ConnectionStateMsg_Closed();
    internal static string get_ADP_ConnectionStateMsg_Connecting();
    internal static string get_ADP_ConnectionStateMsg_Open();
    internal static string get_ADP_ConnectionStateMsg_OpenExecuting();
    internal static string get_ADP_ConnectionStateMsg_OpenFetching();
    internal static string get_ADP_ConnectionStateMsg();
    internal static string get_ADP_ConnectionStringSyntax();
    internal static string get_ADP_DataReaderClosed();
    internal static string get_ADP_EmptyString();
    internal static string get_ADP_InvalidEnumerationValue();
    internal static string get_ADP_InvalidKey();
    internal static string get_ADP_InvalidValue();
    internal static string get_Xml_SimpleTypeNotSupported();
    internal static string get_Xml_MissingAttribute();
    internal static string get_Xml_ValueOutOfRange();
    internal static string get_Xml_AttributeValues();
    internal static string get_Xml_RelationParentNameMissing();
    internal static string get_Xml_RelationChildNameMissing();
    internal static string get_Xml_RelationTableKeyMissing();
    internal static string get_Xml_RelationChildKeyMissing();
    internal static string get_Xml_UndefinedDatatype();
    internal static string get_Xml_DatatypeNotDefined();
    internal static string get_Xml_InvalidField();
    internal static string get_Xml_InvalidSelector();
    internal static string get_Xml_InvalidKey();
    internal static string get_Xml_DuplicateConstraint();
    internal static string get_Xml_CannotConvert();
    internal static string get_Xml_MissingRefer();
    internal static string get_Xml_MismatchKeyLength();
    internal static string get_Xml_CircularComplexType();
    internal static string get_Xml_CannotInstantiateAbstract();
    internal static string get_Xml_MultipleTargetConverterError();
    internal static string get_Xml_MultipleTargetConverterEmpty();
    internal static string get_Xml_MergeDuplicateDeclaration();
    internal static string get_Xml_MissingTable();
    internal static string get_Xml_MissingSQL();
    internal static string get_Xml_ColumnConflict();
    internal static string get_Xml_InvalidPrefix();
    internal static string get_Xml_NestedCircular();
    internal static string get_Xml_FoundEntity();
    internal static string get_Xml_PolymorphismNotSupported();
    internal static string get_Xml_CanNotDeserializeObjectType();
    internal static string get_Xml_DataTableInferenceNotSupported();
    internal static string get_Xml_MultipleParentRows();
    internal static string get_Xml_IsDataSetAttributeMissingInSchema();
    internal static string get_Xml_TooManyIsDataSetAtributeInSchema();
    internal static string get_Xml_DynamicWithoutXmlSerializable();
    internal static string get_Expr_NYI();
    internal static string get_Expr_MissingOperand();
    internal static string get_Expr_TypeMismatch();
    internal static string get_Expr_ExpressionTooComplex();
    internal static string get_Expr_UnboundName();
    internal static string get_Expr_InvalidString();
    internal static string get_Expr_UndefinedFunction();
    internal static string get_Expr_Syntax();
    internal static string get_Expr_FunctionArgumentCount();
    internal static string get_Expr_MissingRightParen();
    internal static string get_Expr_UnknownToken();
    internal static string get_Expr_UnknownToken1();
    internal static string get_Expr_DatatypeConvertion();
    internal static string get_Expr_DatavalueConvertion();
    internal static string get_Expr_InvalidName();
    internal static string get_Expr_InvalidDate();
    internal static string get_Expr_NonConstantArgument();
    internal static string get_Expr_InvalidPattern();
    internal static string get_Expr_InWithoutParentheses();
    internal static string get_Expr_ArgumentType();
    internal static string get_Expr_ArgumentTypeInteger();
    internal static string get_Expr_TypeMismatchInBinop();
    internal static string get_Expr_AmbiguousBinop();
    internal static string get_Expr_InWithoutList();
    internal static string get_Expr_UnsupportedOperator();
    internal static string get_Expr_InvalidNameBracketing();
    internal static string get_Expr_MissingOperandBefore();
    internal static string get_Expr_TooManyRightParentheses();
    internal static string get_Expr_UnresolvedRelation();
    internal static string get_Expr_AggregateArgument();
    internal static string get_Expr_AggregateUnbound();
    internal static string get_Expr_EvalNoContext();
    internal static string get_Expr_ExpressionUnbound();
    internal static string get_Expr_ComputeNotAggregate();
    internal static string get_Expr_FilterConvertion();
    internal static string get_Expr_InvalidType();
    internal static string get_Expr_LookupArgument();
    internal static string get_Expr_InvokeArgument();
    internal static string get_Expr_ArgumentOutofRange();
    internal static string get_Expr_IsSyntax();
    internal static string get_Expr_Overflow();
    internal static string get_Expr_BindFailure();
    internal static string get_Expr_InvalidHoursArgument();
    internal static string get_Expr_InvalidMinutesArgument();
    internal static string get_Expr_InvalidTimeZoneRange();
    internal static string get_Expr_MismatchKindandTimeSpan();
    internal static string get_Expr_UnsupportedType();
    internal static string get_Data_EnforceConstraints();
    internal static string get_Data_CannotModifyCollection();
    internal static string get_Data_CaseInsensitiveNameConflict();
    internal static string get_Data_NamespaceNameConflict();
    internal static string get_Data_InvalidOffsetLength();
    internal static string get_Data_ArgumentOutOfRange();
    internal static string get_Data_ArgumentNull();
    internal static string get_Data_ArgumentContainsNull();
    internal static string get_DataColumns_OutOfRange();
    internal static string get_DataColumns_Add1();
    internal static string get_DataColumns_Add2();
    internal static string get_DataColumns_Add3();
    internal static string get_DataColumns_Add4();
    internal static string get_DataColumns_AddDuplicate();
    internal static string get_DataColumns_AddDuplicate2();
    internal static string get_DataColumns_AddDuplicate3();
    internal static string get_DataColumns_Remove();
    internal static string get_DataColumns_RemovePrimaryKey();
    internal static string get_DataColumns_RemoveChildKey();
    internal static string get_DataColumns_RemoveConstraint();
    internal static string get_DataColumn_AutoIncrementAndExpression();
    internal static string get_DataColumn_AutoIncrementAndDefaultValue();
    internal static string get_DataColumn_DefaultValueAndAutoIncrement();
    internal static string get_DataColumn_AutoIncrementSeed();
    internal static string get_DataColumn_NameRequired();
    internal static string get_DataColumn_ChangeDataType();
    internal static string get_DataColumn_NullDataType();
    internal static string get_DataColumn_DefaultValueDataType();
    internal static string get_DataColumn_DefaultValueDataType1();
    internal static string get_DataColumn_DefaultValueColumnDataType();
    internal static string get_DataColumn_ReadOnlyAndExpression();
    internal static string get_DataColumn_UniqueAndExpression();
    internal static string get_DataColumn_ExpressionAndUnique();
    internal static string get_DataColumn_ExpressionAndReadOnly();
    internal static string get_DataColumn_ExpressionAndConstraint();
    internal static string get_DataColumn_ExpressionInConstraint();
    internal static string get_DataColumn_ExpressionCircular();
    internal static string get_DataColumn_NullKeyValues();
    internal static string get_DataColumn_NullValues();
    internal static string get_DataColumn_ReadOnly();
    internal static string get_DataColumn_NonUniqueValues();
    internal static string get_DataColumn_NotInTheTable();
    internal static string get_DataColumn_NotInAnyTable();
    internal static string get_DataColumn_SetFailed();
    internal static string get_DataColumn_CannotSetToNull();
    internal static string get_DataColumn_LongerThanMaxLength();
    internal static string get_DataColumn_HasToBeStringType();
    internal static string get_DataColumn_CannotSetMaxLength();
    internal static string get_DataColumn_CannotSetMaxLength2();
    internal static string get_DataColumn_CannotSimpleContentType();
    internal static string get_DataColumn_CannotSimpleContent();
    internal static string get_DataColumn_ExceedMaxLength();
    internal static string get_DataColumn_NotAllowDBNull();
    internal static string get_DataColumn_CannotChangeNamespace();
    internal static string get_DataColumn_AutoIncrementCannotSetIfHasData();
    internal static string get_DataColumn_NotInTheUnderlyingTable();
    internal static string get_DataColumn_InvalidDataColumnMapping();
    internal static string get_DataColumn_CannotSetDateTimeModeForNonDateTimeColumns();
    internal static string get_DataColumn_DateTimeMode();
    internal static string get_DataColumn_INullableUDTwithoutStaticNull();
    internal static string get_DataColumn_UDTImplementsIChangeTrackingButnotIRevertible();
    internal static string get_DataColumn_SetAddedAndModifiedCalledOnNonUnchanged();
    internal static string get_DataColumn_OrdinalExceedMaximun();
    internal static string get_DataColumn_NullableTypesNotSupported();
    internal static string get_DataConstraint_NoName();
    internal static string get_DataConstraint_Violation();
    internal static string get_DataConstraint_ViolationValue();
    internal static string get_DataConstraint_NotInTheTable();
    internal static string get_DataConstraint_OutOfRange();
    internal static string get_DataConstraint_Duplicate();
    internal static string get_DataConstraint_DuplicateName();
    internal static string get_DataConstraint_UniqueViolation();
    internal static string get_DataConstraint_ForeignTable();
    internal static string get_DataConstraint_ParentValues();
    internal static string get_DataConstraint_AddFailed();
    internal static string get_DataConstraint_RemoveFailed();
    internal static string get_DataConstraint_NeededForForeignKeyConstraint();
    internal static string get_DataConstraint_CascadeDelete();
    internal static string get_DataConstraint_CascadeUpdate();
    internal static string get_DataConstraint_ClearParentTable();
    internal static string get_DataConstraint_ForeignKeyViolation();
    internal static string get_DataConstraint_BadObjectPropertyAccess();
    internal static string get_DataConstraint_RemoveParentRow();
    internal static string get_DataConstraint_AddPrimaryKeyConstraint();
    internal static string get_DataConstraint_CantAddConstraintToMultipleNestedTable();
    internal static string get_DataKey_TableMismatch();
    internal static string get_DataKey_NoColumns();
    internal static string get_DataKey_TooManyColumns();
    internal static string get_DataKey_DuplicateColumns();
    internal static string get_DataKey_RemovePrimaryKey();
    internal static string get_DataKey_RemovePrimaryKey1();
    internal static string get_DataRelation_ColumnsTypeMismatch();
    internal static string get_DataRelation_KeyColumnsIdentical();
    internal static string get_DataRelation_KeyLengthMismatch();
    internal static string get_DataRelation_KeyZeroLength();
    internal static string get_DataRelation_ForeignRow();
    internal static string get_DataRelation_NoName();
    internal static string get_DataRelation_ForeignTable();
    internal static string get_DataRelation_ForeignDataSet();
    internal static string get_DataRelation_GetParentRowTableMismatch();
    internal static string get_DataRelation_SetParentRowTableMismatch();
    internal static string get_DataRelation_DataSetMismatch();
    internal static string get_DataRelation_TablesInDifferentSets();
    internal static string get_DataRelation_AlreadyExists();
    internal static string get_DataRelation_DoesNotExist();
    internal static string get_DataRelation_AlreadyInOtherDataSet();
    internal static string get_DataRelation_AlreadyInTheDataSet();
    internal static string get_DataRelation_DuplicateName();
    internal static string get_DataRelation_NotInTheDataSet();
    internal static string get_DataRelation_OutOfRange();
    internal static string get_DataRelation_TableNull();
    internal static string get_DataRelation_TableWasRemoved();
    internal static string get_DataRelation_ChildTableMismatch();
    internal static string get_DataRelation_ParentTableMismatch();
    internal static string get_DataRelation_RelationNestedReadOnly();
    internal static string get_DataRelation_TableCantBeNestedInTwoTables();
    internal static string get_DataRelation_LoopInNestedRelations();
    internal static string get_DataRelation_CaseLocaleMismatch();
    internal static string get_DataRelation_ParentOrChildColumnsDoNotHaveDataSet();
    internal static string get_DataRelation_InValidNestedRelation();
    internal static string get_DataRelation_InValidNamespaceInNestedRelation();
    internal static string get_DataRow_NotInTheDataSet();
    internal static string get_DataRow_NotInTheTable();
    internal static string get_DataRow_ParentRowNotInTheDataSet();
    internal static string get_DataRow_EditInRowChanging();
    internal static string get_DataRow_EndEditInRowChanging();
    internal static string get_DataRow_BeginEditInRowChanging();
    internal static string get_DataRow_CancelEditInRowChanging();
    internal static string get_DataRow_DeleteInRowDeleting();
    internal static string get_DataRow_ValuesArrayLength();
    internal static string get_DataRow_NoCurrentData();
    internal static string get_DataRow_NoOriginalData();
    internal static string get_DataRow_NoProposedData();
    internal static string get_DataRow_RemovedFromTheTable();
    internal static string get_DataRow_DeletedRowInaccessible();
    internal static string get_DataRow_InvalidVersion();
    internal static string get_DataRow_OutOfRange();
    internal static string get_DataRow_RowInsertOutOfRange();
    internal static string get_DataRow_RowInsertMissing();
    internal static string get_DataRow_RowOutOfRange();
    internal static string get_DataRow_AlreadyInOtherCollection();
    internal static string get_DataRow_AlreadyInTheCollection();
    internal static string get_DataRow_AlreadyDeleted();
    internal static string get_DataRow_Empty();
    internal static string get_DataRow_AlreadyRemoved();
    internal static string get_DataRow_MultipleParents();
    internal static string get_DataRow_InvalidRowBitPattern();
    internal static string get_DataSet_SetNameToEmpty();
    internal static string get_DataSet_SetDataSetNameConflicting();
    internal static string get_DataSet_UnsupportedSchema();
    internal static string get_DataSet_CannotChangeCaseLocale();
    internal static string get_DataSet_CannotChangeSchemaSerializationMode();
    internal static string get_DataTable_ForeignPrimaryKey();
    internal static string get_DataTable_CannotAddToSimpleContent();
    internal static string get_DataTable_NoName();
    internal static string get_DataTable_MultipleSimpleContentColumns();
    internal static string get_DataTable_MissingPrimaryKey();
    internal static string get_DataTable_InvalidSortString();
    internal static string get_DataTable_CanNotSerializeDataTableHierarchy();
    internal static string get_DataTable_CanNotRemoteDataTable();
    internal static string get_DataTable_CanNotSetRemotingFormat();
    internal static string get_DataTable_CanNotSerializeDataTableWithEmptyName();
    internal static string get_DataTable_DuplicateName();
    internal static string get_DataTable_DuplicateName2();
    internal static string get_DataTable_SelfnestedDatasetConflictingName();
    internal static string get_DataTable_DatasetConflictingName();
    internal static string get_DataTable_AlreadyInOtherDataSet();
    internal static string get_DataTable_AlreadyInTheDataSet();
    internal static string get_DataTable_NotInTheDataSet();
    internal static string get_DataTable_OutOfRange();
    internal static string get_DataTable_InRelation();
    internal static string get_DataTable_InConstraint();
    internal static string get_DataTable_TableNotFound();
    internal static string get_DataMerge_MissingDefinition();
    internal static string get_DataMerge_MissingConstraint();
    internal static string get_DataMerge_DataTypeMismatch();
    internal static string get_DataMerge_PrimaryKeyMismatch();
    internal static string get_DataMerge_PrimaryKeyColumnsMismatch();
    internal static string get_DataMerge_ReltionKeyColumnsMismatch();
    internal static string get_DataMerge_MissingColumnDefinition();
    internal static string get_DataIndex_RecordStateRange();
    internal static string get_DataIndex_FindWithoutSortOrder();
    internal static string get_DataIndex_KeyLength();
    internal static string get_DataStorage_AggregateException();
    internal static string get_DataStorage_InvalidStorageType();
    internal static string get_DataStorage_ProblematicChars();
    internal static string get_DataStorage_SetInvalidDataType();
    internal static string get_DataStorage_IComparableNotDefined();
    internal static string get_DataView_SetFailed();
    internal static string get_DataView_SetDataSetFailed();
    internal static string get_DataView_SetRowStateFilter();
    internal static string get_DataView_SetTable();
    internal static string get_DataView_CanNotSetDataSet();
    internal static string get_DataView_CanNotUseDataViewManager();
    internal static string get_DataView_CanNotSetTable();
    internal static string get_DataView_CanNotUse();
    internal static string get_DataView_CanNotBindTable();
    internal static string get_DataView_SetIListObject();
    internal static string get_DataView_AddNewNotAllowNull();
    internal static string get_DataView_NotOpen();
    internal static string get_DataView_CreateChildView();
    internal static string get_DataView_CanNotDelete();
    internal static string get_DataView_CanNotEdit();
    internal static string get_DataView_GetElementIndex();
    internal static string get_DataView_AddExternalObject();
    internal static string get_DataView_CanNotClear();
    internal static string get_DataView_InsertExternalObject();
    internal static string get_DataView_RemoveExternalObject();
    internal static string get_DataROWView_PropertyNotFound();
    internal static string get_Range_Argument();
    internal static string get_Range_NullRange();
    internal static string get_RecordManager_MinimumCapacity();
    internal static string get_SqlConvert_ConvertFailed();
    internal static string get_DataSet_DefaultDataException();
    internal static string get_DataSet_DefaultConstraintException();
    internal static string get_DataSet_DefaultDeletedRowInaccessibleException();
    internal static string get_DataSet_DefaultDuplicateNameException();
    internal static string get_DataSet_DefaultInRowChangingEventException();
    internal static string get_DataSet_DefaultInvalidConstraintException();
    internal static string get_DataSet_DefaultMissingPrimaryKeyException();
    internal static string get_DataSet_DefaultNoNullAllowedException();
    internal static string get_DataSet_DefaultReadOnlyException();
    internal static string get_DataSet_DefaultRowNotInTableException();
    internal static string get_DataSet_DefaultVersionNotFoundException();
    internal static string get_Load_ReadOnlyDataModified();
    internal static string get_DataTableReader_InvalidDataTableReader();
    internal static string get_DataTableReader_SchemaInvalidDataTableReader();
    internal static string get_DataTableReader_CannotCreateDataReaderOnEmptyDataSet();
    internal static string get_DataTableReader_DataTableReaderArgumentIsEmpty();
    internal static string get_DataTableReader_ArgumentContainsNullValue();
    internal static string get_DataTableReader_InvalidRowInDataTableReader();
    internal static string get_DataTableReader_DataTableCleared();
    internal static string get_RbTree_InvalidState();
    internal static string get_RbTree_EnumerationBroken();
    internal static string get_NamedSimpleType_InvalidDuplicateNamedSimpleTypeDelaration();
    internal static string get_DataDom_Foliation();
    internal static string get_DataDom_TableNameChange();
    internal static string get_DataDom_TableNamespaceChange();
    internal static string get_DataDom_ColumnNameChange();
    internal static string get_DataDom_ColumnNamespaceChange();
    internal static string get_DataDom_ColumnMappingChange();
    internal static string get_DataDom_TableColumnsChange();
    internal static string get_DataDom_DataSetTablesChange();
    internal static string get_DataDom_DataSetNestedRelationsChange();
    internal static string get_DataDom_DataSetNull();
    internal static string get_DataDom_DataSetNameChange();
    internal static string get_DataDom_CloneNode();
    internal static string get_DataDom_MultipleLoad();
    internal static string get_DataDom_MultipleDataSet();
    internal static string get_DataDom_NotSupport_GetElementById();
    internal static string get_DataDom_NotSupport_EntRef();
    internal static string get_DataDom_NotSupport_Clear();
    internal static string get_ADP_EmptyArray();
    internal static string get_SQL_WrongType();
    internal static string get_ADP_InvalidConnectionOptionValue();
    internal static string get_ADP_KeywordNotSupported();
    internal static string get_ADP_InternalProviderError();
    internal static string get_ADP_NoQuoteChange();
    internal static string get_ADP_MissingSourceCommand();
    internal static string get_ADP_MissingSourceCommandConnection();
    internal static string get_ADP_InvalidMultipartName();
    internal static string get_ADP_InvalidMultipartNameQuoteUsage();
    internal static string get_ADP_InvalidMultipartNameToManyParts();
    internal static string get_ADP_ColumnSchemaExpression();
    internal static string get_ADP_ColumnSchemaMismatch();
    internal static string get_ADP_ColumnSchemaMissing1();
    internal static string get_ADP_ColumnSchemaMissing2();
    internal static string get_ADP_InvalidSourceColumn();
    internal static string get_ADP_MissingColumnMapping();
    internal static string get_ADP_NotSupportedEnumerationValue();
    internal static string get_ADP_MissingTableSchema();
    internal static string get_ADP_InvalidSourceTable();
    internal static string get_ADP_MissingTableMapping();
    internal static string get_ADP_ConnectionRequired_Insert();
    internal static string get_ADP_ConnectionRequired_Update();
    internal static string get_ADP_ConnectionRequired_Delete();
    internal static string get_ADP_ConnectionRequired_Batch();
    internal static string get_ADP_ConnectionRequired_Clone();
    internal static string get_ADP_OpenConnectionRequired_Insert();
    internal static string get_ADP_OpenConnectionRequired_Update();
    internal static string get_ADP_OpenConnectionRequired_Delete();
    internal static string get_ADP_OpenConnectionRequired_Clone();
    internal static string get_ADP_MissingSelectCommand();
    internal static string get_ADP_UnwantedStatementType();
    internal static string get_ADP_FillSchemaRequiresSourceTableName();
    internal static string get_ADP_FillRequiresSourceTableName();
    internal static string get_ADP_FillChapterAutoIncrement();
    internal static string get_ADP_MissingDataReaderFieldType();
    internal static string get_ADP_OnlyOneTableForStartRecordOrMaxRecords();
    internal static string get_ADP_UpdateRequiresSourceTable();
    internal static string get_ADP_UpdateRequiresSourceTableName();
    internal static string get_ADP_UpdateRequiresCommandClone();
    internal static string get_ADP_UpdateRequiresCommandSelect();
    internal static string get_ADP_UpdateRequiresCommandInsert();
    internal static string get_ADP_UpdateRequiresCommandUpdate();
    internal static string get_ADP_UpdateRequiresCommandDelete();
    internal static string get_ADP_UpdateMismatchRowTable();
    internal static string get_ADP_RowUpdatedErrors();
    internal static string get_ADP_RowUpdatingErrors();
    internal static string get_ADP_ResultsNotAllowedDuringBatch();
    internal static string get_ADP_UpdateConcurrencyViolation_Update();
    internal static string get_ADP_UpdateConcurrencyViolation_Delete();
    internal static string get_ADP_UpdateConcurrencyViolation_Batch();
    internal static string get_ADP_InvalidSourceBufferIndex();
    internal static string get_ADP_InvalidDestinationBufferIndex();
    internal static string get_ADP_StreamClosed();
    internal static string get_ADP_InvalidSeekOrigin();
    internal static string get_ADP_DynamicSQLJoinUnsupported();
    internal static string get_ADP_DynamicSQLNoTableInfo();
    internal static string get_ADP_DynamicSQLNoKeyInfoDelete();
    internal static string get_ADP_DynamicSQLNoKeyInfoUpdate();
    internal static string get_ADP_DynamicSQLNoKeyInfoRowVersionDelete();
    internal static string get_ADP_DynamicSQLNoKeyInfoRowVersionUpdate();
    internal static string get_ADP_DynamicSQLNestedQuote();
    internal static string get_SQL_InvalidBufferSizeOrIndex();
    internal static string get_SQL_InvalidDataLength();
    internal static string get_SqlMisc_NullString();
    internal static string get_SqlMisc_MessageString();
    internal static string get_SqlMisc_ArithOverflowMessage();
    internal static string get_SqlMisc_DivideByZeroMessage();
    internal static string get_SqlMisc_NullValueMessage();
    internal static string get_SqlMisc_TruncationMessage();
    internal static string get_SqlMisc_DateTimeOverflowMessage();
    internal static string get_SqlMisc_ConcatDiffCollationMessage();
    internal static string get_SqlMisc_CompareDiffCollationMessage();
    internal static string get_SqlMisc_InvalidFlagMessage();
    internal static string get_SqlMisc_NumeToDecOverflowMessage();
    internal static string get_SqlMisc_ConversionOverflowMessage();
    internal static string get_SqlMisc_InvalidDateTimeMessage();
    internal static string get_SqlMisc_TimeZoneSpecifiedMessage();
    internal static string get_SqlMisc_InvalidArraySizeMessage();
    internal static string get_SqlMisc_InvalidPrecScaleMessage();
    internal static string get_SqlMisc_FormatMessage();
    internal static string get_SqlMisc_SqlTypeMessage();
    internal static string get_SqlMisc_NoBufferMessage();
    internal static string get_SqlMisc_BufferInsufficientMessage();
    internal static string get_SqlMisc_WriteNonZeroOffsetOnNullMessage();
    internal static string get_SqlMisc_WriteOffsetLargerThanLenMessage();
    internal static string get_SqlMisc_NotFilledMessage();
    internal static string get_SqlMisc_AlreadyFilledMessage();
    internal static string get_SqlMisc_ClosedXmlReaderMessage();
    internal static string get_SqlMisc_InvalidOpStreamClosed();
    internal static string get_SqlMisc_InvalidOpStreamNonWritable();
    internal static string get_SqlMisc_InvalidOpStreamNonReadable();
    internal static string get_SqlMisc_InvalidOpStreamNonSeekable();
    internal static string get_ADP_DBConcurrencyExceptionMessage();
    internal static string get_ADP_InvalidMaxRecords();
    internal static string get_ADP_CollectionIndexInt32();
    internal static string get_ADP_MissingTableMappingDestination();
    internal static string get_ADP_InvalidStartRecord();
    internal static string get_DataDom_EnforceConstraintsShouldBeOff();
    internal static string get_DataColumns_RemoveExpression();
    internal static string get_DataRow_RowInsertTwice();
    internal static string get_Xml_ElementTypeNotFound();
    internal static Type get_ResourceType();
}
internal static class System.<8ed77467-061e-4518-b376-f7d806f1bb84>SR : object {
    private static ResourceManager s_resourceManager;
    [CompilerGeneratedAttribute]
private static Type <ResourceType>k__BackingField;
    private static ResourceManager ResourceManager { get; }
    internal static Type ResourceType { get; }
    internal static string ArgumentIsNullOrWhitespace { get; }
    internal static string AttributeStore_Unknown_Property { get; }
    internal static string Common_PropertyNotFound { get; }
    internal static string CompareAttribute_MustMatch { get; }
    internal static string CompareAttribute_UnknownProperty { get; }
    internal static string CreditCardAttribute_Invalid { get; }
    internal static string CustomValidationAttribute_Method_Must_Return_ValidationResult { get; }
    internal static string CustomValidationAttribute_Method_Not_Found { get; }
    internal static string CustomValidationAttribute_Method_Required { get; }
    internal static string CustomValidationAttribute_Method_Signature { get; }
    internal static string CustomValidationAttribute_Type_Conversion_Failed { get; }
    internal static string CustomValidationAttribute_Type_Must_Be_Public { get; }
    internal static string CustomValidationAttribute_ValidationError { get; }
    internal static string CustomValidationAttribute_ValidatorType_Required { get; }
    internal static string DataTypeAttribute_EmptyDataTypeString { get; }
    internal static string DisplayAttribute_PropertyNotSet { get; }
    internal static string EmailAddressAttribute_Invalid { get; }
    internal static string EnumDataTypeAttribute_TypeCannotBeNull { get; }
    internal static string EnumDataTypeAttribute_TypeNeedsToBeAnEnum { get; }
    internal static string FileExtensionsAttribute_Invalid { get; }
    internal static string LocalizableString_LocalizationFailed { get; }
    internal static string MaxLengthAttribute_InvalidMaxLength { get; }
    internal static string MaxLengthAttribute_ValidationError { get; }
    internal static string MinLengthAttribute_InvalidMinLength { get; }
    internal static string MinLengthAttribute_ValidationError { get; }
    internal static string LengthAttribute_InvalidValueType { get; }
    internal static string PhoneAttribute_Invalid { get; }
    internal static string RangeAttribute_ArbitraryTypeNotIComparable { get; }
    internal static string RangeAttribute_MinGreaterThanMax { get; }
    internal static string RangeAttribute_Must_Set_Min_And_Max { get; }
    internal static string RangeAttribute_Must_Set_Operand_Type { get; }
    internal static string RangeAttribute_ValidationError { get; }
    internal static string RegexAttribute_ValidationError { get; }
    internal static string RegularExpressionAttribute_Empty_Pattern { get; }
    internal static string RequiredAttribute_ValidationError { get; }
    internal static string StringLengthAttribute_InvalidMaxLength { get; }
    internal static string StringLengthAttribute_ValidationError { get; }
    internal static string StringLengthAttribute_ValidationErrorIncludingMinimum { get; }
    internal static string UIHintImplementation_ControlParameterKeyIsNotAString { get; }
    internal static string UIHintImplementation_ControlParameterKeyIsNull { get; }
    internal static string UIHintImplementation_ControlParameterKeyOccursMoreThanOnce { get; }
    internal static string UIHintImplementation_NeedEvenNumberOfControlParameters { get; }
    internal static string UrlAttribute_Invalid { get; }
    internal static string ValidationAttribute_Cannot_Set_ErrorMessage_And_Resource { get; }
    internal static string ValidationAttribute_IsValid_NotImplemented { get; }
    internal static string ValidationAttribute_NeedBothResourceTypeAndResourceName { get; }
    internal static string ValidationAttribute_ResourcePropertyNotStringType { get; }
    internal static string ValidationAttribute_ResourceTypeDoesNotHaveProperty { get; }
    internal static string ValidationAttribute_ValidationError { get; }
    internal static string Validator_InstanceMustMatchValidationContextInstance { get; }
    internal static string Validator_Property_Value_Wrong_Type { get; }
    private static <8ed77467-061e-4518-b376-f7d806f1bb84>SR();
    private static ResourceManager get_ResourceManager();
    private static bool UsingResourceKeys();
    internal static string GetResourceString(string resourceKey, string defaultString);
    internal static string Format(string resourceFormat, Object[] args);
    internal static string Format(string resourceFormat, object p1);
    internal static string Format(string resourceFormat, object p1, object p2);
    internal static string Format(string resourceFormat, object p1, object p2, object p3);
    [CompilerGeneratedAttribute]
internal static Type get_ResourceType();
    internal static string get_ArgumentIsNullOrWhitespace();
    internal static string get_AttributeStore_Unknown_Property();
    internal static string get_Common_PropertyNotFound();
    internal static string get_CompareAttribute_MustMatch();
    internal static string get_CompareAttribute_UnknownProperty();
    internal static string get_CreditCardAttribute_Invalid();
    internal static string get_CustomValidationAttribute_Method_Must_Return_ValidationResult();
    internal static string get_CustomValidationAttribute_Method_Not_Found();
    internal static string get_CustomValidationAttribute_Method_Required();
    internal static string get_CustomValidationAttribute_Method_Signature();
    internal static string get_CustomValidationAttribute_Type_Conversion_Failed();
    internal static string get_CustomValidationAttribute_Type_Must_Be_Public();
    internal static string get_CustomValidationAttribute_ValidationError();
    internal static string get_CustomValidationAttribute_ValidatorType_Required();
    internal static string get_DataTypeAttribute_EmptyDataTypeString();
    internal static string get_DisplayAttribute_PropertyNotSet();
    internal static string get_EmailAddressAttribute_Invalid();
    internal static string get_EnumDataTypeAttribute_TypeCannotBeNull();
    internal static string get_EnumDataTypeAttribute_TypeNeedsToBeAnEnum();
    internal static string get_FileExtensionsAttribute_Invalid();
    internal static string get_LocalizableString_LocalizationFailed();
    internal static string get_MaxLengthAttribute_InvalidMaxLength();
    internal static string get_MaxLengthAttribute_ValidationError();
    internal static string get_MinLengthAttribute_InvalidMinLength();
    internal static string get_MinLengthAttribute_ValidationError();
    internal static string get_LengthAttribute_InvalidValueType();
    internal static string get_PhoneAttribute_Invalid();
    internal static string get_RangeAttribute_ArbitraryTypeNotIComparable();
    internal static string get_RangeAttribute_MinGreaterThanMax();
    internal static string get_RangeAttribute_Must_Set_Min_And_Max();
    internal static string get_RangeAttribute_Must_Set_Operand_Type();
    internal static string get_RangeAttribute_ValidationError();
    internal static string get_RegexAttribute_ValidationError();
    internal static string get_RegularExpressionAttribute_Empty_Pattern();
    internal static string get_RequiredAttribute_ValidationError();
    internal static string get_StringLengthAttribute_InvalidMaxLength();
    internal static string get_StringLengthAttribute_ValidationError();
    internal static string get_StringLengthAttribute_ValidationErrorIncludingMinimum();
    internal static string get_UIHintImplementation_ControlParameterKeyIsNotAString();
    internal static string get_UIHintImplementation_ControlParameterKeyIsNull();
    internal static string get_UIHintImplementation_ControlParameterKeyOccursMoreThanOnce();
    internal static string get_UIHintImplementation_NeedEvenNumberOfControlParameters();
    internal static string get_UrlAttribute_Invalid();
    internal static string get_ValidationAttribute_Cannot_Set_ErrorMessage_And_Resource();
    internal static string get_ValidationAttribute_IsValid_NotImplemented();
    internal static string get_ValidationAttribute_NeedBothResourceTypeAndResourceName();
    internal static string get_ValidationAttribute_ResourcePropertyNotStringType();
    internal static string get_ValidationAttribute_ResourceTypeDoesNotHaveProperty();
    internal static string get_ValidationAttribute_ValidationError();
    internal static string get_Validator_InstanceMustMatchValidationContextInstance();
    internal static string get_Validator_Property_Value_Wrong_Type();
}
internal static class System.<a935ee2d-5434-4938-94fc-b0b09490eb91>SR : object {
    private static ResourceManager s_resourceManager;
    private static string s_resourcesName;
    private static ResourceManager ResourceManager { get; }
    internal static string Argument_AlreadyBoundOrSyncHandle { get; }
    internal static string Argument_InvalidHandle { get; }
    internal static string Argument_NativeOverlappedAlreadyFree { get; }
    internal static string Argument_NativeOverlappedWrongBoundHandle { get; }
    internal static string Argument_PreAllocatedAlreadyAllocated { get; }
    internal static string InvalidOperation_NativeOverlappedReused { get; }
    internal static Type ResourceType { get; }
    private static ResourceManager get_ResourceManager();
    private static bool UsingResourceKeys();
    internal static string GetResourceString(string resourceKey, string defaultString);
    internal static string Format(string resourceFormat, Object[] args);
    internal static string Format(string resourceFormat, object p1);
    internal static string Format(string resourceFormat, object p1, object p2);
    internal static string Format(string resourceFormat, object p1, object p2, object p3);
    internal static string get_Argument_AlreadyBoundOrSyncHandle();
    internal static string get_Argument_InvalidHandle();
    internal static string get_Argument_NativeOverlappedAlreadyFree();
    internal static string get_Argument_NativeOverlappedWrongBoundHandle();
    internal static string get_Argument_PreAllocatedAlreadyAllocated();
    internal static string get_InvalidOperation_NativeOverlappedReused();
    internal static Type get_ResourceType();
}
internal static class System.<ea8717da-89de-4dad-a870-e5d1ed343742>SR : object {
    private static ResourceManager s_resourceManager;
    private static string s_resourcesName;
    private static ResourceManager ResourceManager { get; }
    internal static string net_securityprotocolnotsupported { get; }
    internal static string net_http_httpmethod_format_error { get; }
    internal static string net_http_reasonphrase_format_error { get; }
    internal static string net_http_copyto_array_too_small { get; }
    internal static string net_http_headers_not_found { get; }
    internal static string net_http_headers_single_value_header { get; }
    internal static string net_http_headers_invalid_header_name { get; }
    internal static string net_http_headers_invalid_value { get; }
    internal static string net_http_headers_not_allowed_header_name { get; }
    internal static string net_http_headers_invalid_host_header { get; }
    internal static string net_http_headers_invalid_from_header { get; }
    internal static string net_http_headers_invalid_etag_name { get; }
    internal static string net_http_headers_invalid_range { get; }
    internal static string net_http_headers_no_newlines { get; }
    internal static string net_http_content_buffersize_exceeded { get; }
    internal static string net_http_content_no_task_returned { get; }
    internal static string net_http_content_stream_already_read { get; }
    internal static string net_http_content_readonly_stream { get; }
    internal static string net_http_content_invalid_charset { get; }
    internal static string net_http_content_stream_copy_error { get; }
    internal static string net_http_argument_empty_string { get; }
    internal static string net_http_client_request_already_sent { get; }
    internal static string net_http_operation_started { get; }
    internal static string net_http_client_execution_error { get; }
    internal static string net_http_client_absolute_baseaddress_required { get; }
    internal static string net_http_client_invalid_requesturi { get; }
    internal static string net_http_client_http_baseaddress_required { get; }
    internal static string net_http_parser_invalid_base64_string { get; }
    internal static string net_http_handler_noresponse { get; }
    internal static string net_http_handler_norequest { get; }
    internal static string net_http_message_not_success_statuscode { get; }
    internal static string net_http_content_field_too_long { get; }
    internal static string net_http_log_headers_no_newlines { get; }
    internal static string net_http_log_headers_invalid_quality { get; }
    internal static string net_http_log_headers_wrong_email_format { get; }
    internal static string net_http_handler_not_assigned { get; }
    internal static string net_http_invalid_enable_first { get; }
    internal static string net_http_content_buffersize_limit { get; }
    internal static string net_http_value_not_supported { get; }
    internal static string net_http_io_read { get; }
    internal static string net_http_io_read_incomplete { get; }
    internal static string net_http_io_write { get; }
    internal static string net_http_chunked_not_allowed_with_empty_content { get; }
    internal static string net_http_invalid_cookiecontainer { get; }
    internal static string net_http_invalid_proxyusepolicy { get; }
    internal static string net_http_invalid_proxy { get; }
    internal static string net_http_handler_nocontentlength { get; }
    internal static string net_http_value_must_be_greater_than { get; }
    internal static string MailHeaderFieldInvalidCharacter { get; }
    internal static string MailAddressInvalidFormat { get; }
    internal static string MailHeaderFieldMalformedHeader { get; }
    internal static string InvalidHeaderName { get; }
    internal static string net_cookie_attribute { get; }
    internal static string net_http_unix_invalid_credential { get; }
    internal static string net_http_unix_https_support_unavailable_libcurl { get; }
    internal static string ArgumentOutOfRange_FileLengthTooBig { get; }
    internal static string IO_FileExists_Name { get; }
    internal static string IO_FileNotFound { get; }
    internal static string IO_FileNotFound_FileName { get; }
    internal static string IO_PathNotFound_NoPathName { get; }
    internal static string IO_PathNotFound_Path { get; }
    internal static string IO_PathTooLong { get; }
    internal static string IO_SharingViolation_File { get; }
    internal static string IO_SharingViolation_NoFileName { get; }
    internal static string UnauthorizedAccess_IODenied_NoPathName { get; }
    internal static string UnauthorizedAccess_IODenied_Path { get; }
    internal static string net_http_content_no_concurrent_reads { get; }
    internal static string net_http_username_empty_string { get; }
    internal static string net_http_no_concurrent_io_allowed { get; }
    internal static string net_http_unix_invalid_response { get; }
    internal static string net_http_unix_handler_disposed { get; }
    internal static string net_http_buffer_insufficient_length { get; }
    internal static string net_http_response_headers_exceeded_length { get; }
    internal static string ArgumentOutOfRange_NeedPosNum { get; }
    internal static string NotSupported_UnreadableStream { get; }
    internal static string NotSupported_UnwritableStream { get; }
    internal static string ObjectDisposed_StreamClosed { get; }
    internal static string net_http_libcurl_callback_notsupported { get; }
    internal static string net_http_libcurl_clientcerts_notsupported { get; }
    internal static string net_http_libcurl_revocation_notsupported { get; }
    internal static Type ResourceType { get; }
    private static ResourceManager get_ResourceManager();
    private static bool UsingResourceKeys();
    internal static string GetResourceString(string resourceKey, string defaultString);
    internal static string Format(string resourceFormat, Object[] args);
    internal static string Format(string resourceFormat, object p1);
    internal static string Format(string resourceFormat, object p1, object p2);
    internal static string Format(string resourceFormat, object p1, object p2, object p3);
    internal static string get_net_securityprotocolnotsupported();
    internal static string get_net_http_httpmethod_format_error();
    internal static string get_net_http_reasonphrase_format_error();
    internal static string get_net_http_copyto_array_too_small();
    internal static string get_net_http_headers_not_found();
    internal static string get_net_http_headers_single_value_header();
    internal static string get_net_http_headers_invalid_header_name();
    internal static string get_net_http_headers_invalid_value();
    internal static string get_net_http_headers_not_allowed_header_name();
    internal static string get_net_http_headers_invalid_host_header();
    internal static string get_net_http_headers_invalid_from_header();
    internal static string get_net_http_headers_invalid_etag_name();
    internal static string get_net_http_headers_invalid_range();
    internal static string get_net_http_headers_no_newlines();
    internal static string get_net_http_content_buffersize_exceeded();
    internal static string get_net_http_content_no_task_returned();
    internal static string get_net_http_content_stream_already_read();
    internal static string get_net_http_content_readonly_stream();
    internal static string get_net_http_content_invalid_charset();
    internal static string get_net_http_content_stream_copy_error();
    internal static string get_net_http_argument_empty_string();
    internal static string get_net_http_client_request_already_sent();
    internal static string get_net_http_operation_started();
    internal static string get_net_http_client_execution_error();
    internal static string get_net_http_client_absolute_baseaddress_required();
    internal static string get_net_http_client_invalid_requesturi();
    internal static string get_net_http_client_http_baseaddress_required();
    internal static string get_net_http_parser_invalid_base64_string();
    internal static string get_net_http_handler_noresponse();
    internal static string get_net_http_handler_norequest();
    internal static string get_net_http_message_not_success_statuscode();
    internal static string get_net_http_content_field_too_long();
    internal static string get_net_http_log_headers_no_newlines();
    internal static string get_net_http_log_headers_invalid_quality();
    internal static string get_net_http_log_headers_wrong_email_format();
    internal static string get_net_http_handler_not_assigned();
    internal static string get_net_http_invalid_enable_first();
    internal static string get_net_http_content_buffersize_limit();
    internal static string get_net_http_value_not_supported();
    internal static string get_net_http_io_read();
    internal static string get_net_http_io_read_incomplete();
    internal static string get_net_http_io_write();
    internal static string get_net_http_chunked_not_allowed_with_empty_content();
    internal static string get_net_http_invalid_cookiecontainer();
    internal static string get_net_http_invalid_proxyusepolicy();
    internal static string get_net_http_invalid_proxy();
    internal static string get_net_http_handler_nocontentlength();
    internal static string get_net_http_value_must_be_greater_than();
    internal static string get_MailHeaderFieldInvalidCharacter();
    internal static string get_MailAddressInvalidFormat();
    internal static string get_MailHeaderFieldMalformedHeader();
    internal static string get_InvalidHeaderName();
    internal static string get_net_cookie_attribute();
    internal static string get_net_http_unix_invalid_credential();
    internal static string get_net_http_unix_https_support_unavailable_libcurl();
    internal static string get_ArgumentOutOfRange_FileLengthTooBig();
    internal static string get_IO_FileExists_Name();
    internal static string get_IO_FileNotFound();
    internal static string get_IO_FileNotFound_FileName();
    internal static string get_IO_PathNotFound_NoPathName();
    internal static string get_IO_PathNotFound_Path();
    internal static string get_IO_PathTooLong();
    internal static string get_IO_SharingViolation_File();
    internal static string get_IO_SharingViolation_NoFileName();
    internal static string get_UnauthorizedAccess_IODenied_NoPathName();
    internal static string get_UnauthorizedAccess_IODenied_Path();
    internal static string get_net_http_content_no_concurrent_reads();
    internal static string get_net_http_username_empty_string();
    internal static string get_net_http_no_concurrent_io_allowed();
    internal static string get_net_http_unix_invalid_response();
    internal static string get_net_http_unix_handler_disposed();
    internal static string get_net_http_buffer_insufficient_length();
    internal static string get_net_http_response_headers_exceeded_length();
    internal static string get_ArgumentOutOfRange_NeedPosNum();
    internal static string get_NotSupported_UnreadableStream();
    internal static string get_NotSupported_UnwritableStream();
    internal static string get_ObjectDisposed_StreamClosed();
    internal static string get_net_http_libcurl_callback_notsupported();
    internal static string get_net_http_libcurl_clientcerts_notsupported();
    internal static string get_net_http_libcurl_revocation_notsupported();
    internal static Type get_ResourceType();
}
internal class System.Data.Common.DataRowDbColumn : DbColumn {
    private DataColumnCollection _schemaColumns;
    private DataRow _schemaRow;
    public DataRowDbColumn(DataRow readerSchemaRow, DataColumnCollection readerSchemaColumns);
    private void populateFields();
    private T GetDbColumnValue(string columnName);
}
[DefaultMemberAttribute("Item")]
internal abstract class System.Data.Common.DbColumn : object {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AllowDBNull>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BaseCatalogName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BaseColumnName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BaseSchemaName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BaseServerName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BaseTableName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ColumnName>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ColumnOrdinal>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ColumnSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsAliased>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsAutoIncrement>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsExpression>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsHidden>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsIdentity>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsKey>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsLong>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsReadOnly>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsUnique>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <NumericPrecision>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <NumericScale>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UdtAssemblyQualifiedName>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <DataType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DataTypeName>k__BackingField;
    public Nullable`1<bool> AllowDBNull { get; protected set; }
    public string BaseCatalogName { get; protected set; }
    public string BaseColumnName { get; protected set; }
    public string BaseSchemaName { get; protected set; }
    public string BaseServerName { get; protected set; }
    public string BaseTableName { get; protected set; }
    public string ColumnName { get; protected set; }
    public Nullable`1<int> ColumnOrdinal { get; protected set; }
    public Nullable`1<int> ColumnSize { get; protected set; }
    public Nullable`1<bool> IsAliased { get; protected set; }
    public Nullable`1<bool> IsAutoIncrement { get; protected set; }
    public Nullable`1<bool> IsExpression { get; protected set; }
    public Nullable`1<bool> IsHidden { get; protected set; }
    public Nullable`1<bool> IsIdentity { get; protected set; }
    public Nullable`1<bool> IsKey { get; protected set; }
    public Nullable`1<bool> IsLong { get; protected set; }
    public Nullable`1<bool> IsReadOnly { get; protected set; }
    public Nullable`1<bool> IsUnique { get; protected set; }
    public Nullable`1<int> NumericPrecision { get; protected set; }
    public Nullable`1<int> NumericScale { get; protected set; }
    public string UdtAssemblyQualifiedName { get; protected set; }
    public Type DataType { get; protected set; }
    public string DataTypeName { get; protected set; }
    public object Item { get; }
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_AllowDBNull();
    [CompilerGeneratedAttribute]
protected void set_AllowDBNull(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_BaseCatalogName();
    [CompilerGeneratedAttribute]
protected void set_BaseCatalogName(string value);
    [CompilerGeneratedAttribute]
public string get_BaseColumnName();
    [CompilerGeneratedAttribute]
protected void set_BaseColumnName(string value);
    [CompilerGeneratedAttribute]
public string get_BaseSchemaName();
    [CompilerGeneratedAttribute]
protected void set_BaseSchemaName(string value);
    [CompilerGeneratedAttribute]
public string get_BaseServerName();
    [CompilerGeneratedAttribute]
protected void set_BaseServerName(string value);
    [CompilerGeneratedAttribute]
public string get_BaseTableName();
    [CompilerGeneratedAttribute]
protected void set_BaseTableName(string value);
    [CompilerGeneratedAttribute]
public string get_ColumnName();
    [CompilerGeneratedAttribute]
protected void set_ColumnName(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ColumnOrdinal();
    [CompilerGeneratedAttribute]
protected void set_ColumnOrdinal(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_ColumnSize();
    [CompilerGeneratedAttribute]
protected void set_ColumnSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IsAliased();
    [CompilerGeneratedAttribute]
protected void set_IsAliased(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IsAutoIncrement();
    [CompilerGeneratedAttribute]
protected void set_IsAutoIncrement(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IsExpression();
    [CompilerGeneratedAttribute]
protected void set_IsExpression(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IsHidden();
    [CompilerGeneratedAttribute]
protected void set_IsHidden(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IsIdentity();
    [CompilerGeneratedAttribute]
protected void set_IsIdentity(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IsKey();
    [CompilerGeneratedAttribute]
protected void set_IsKey(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IsLong();
    [CompilerGeneratedAttribute]
protected void set_IsLong(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IsReadOnly();
    [CompilerGeneratedAttribute]
protected void set_IsReadOnly(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_IsUnique();
    [CompilerGeneratedAttribute]
protected void set_IsUnique(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_NumericPrecision();
    [CompilerGeneratedAttribute]
protected void set_NumericPrecision(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_NumericScale();
    [CompilerGeneratedAttribute]
protected void set_NumericScale(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_UdtAssemblyQualifiedName();
    [CompilerGeneratedAttribute]
protected void set_UdtAssemblyQualifiedName(string value);
    [CompilerGeneratedAttribute]
public Type get_DataType();
    [CompilerGeneratedAttribute]
protected void set_DataType(Type value);
    [CompilerGeneratedAttribute]
public string get_DataTypeName();
    [CompilerGeneratedAttribute]
protected void set_DataTypeName(string value);
    public virtual object get_Item(string property);
}
[ExtensionAttribute]
internal static class System.Data.Common.DbDataReaderExtensions : object {
    [ExtensionAttribute]
public static ReadOnlyCollection`1<DbColumn> GetColumnSchema(DbDataReader reader);
    [ExtensionAttribute]
public static bool CanGetColumnSchema(DbDataReader reader);
}
internal interface System.Data.Common.IDbColumnSchemaGenerator {
    public abstract virtual ReadOnlyCollection`1<DbColumn> GetColumnSchema();
}
[AttributeUsageAttribute("2432")]
internal class System.Diagnostics.CodeAnalysis.AllowNullAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ParameterValue>k__BackingField;
    public bool ParameterValue { get; }
    public DoesNotReturnIfAttribute(bool parameterValue);
    [CompilerGeneratedAttribute]
public bool get_ParameterValue();
}
[AttributeUsageAttribute("10624")]
internal class System.Diagnostics.CodeAnalysis.MaybeNullAttribute : Attribute {
}
[AttributeUsageAttribute("10688")]
internal class System.Diagnostics.CodeAnalysis.NotNullAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
internal class System.Diagnostics.CodeAnalysis.NotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public NotNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[ExtensionAttribute]
internal static class System.Diagnostics.StackFrameExtensions : object {
    [ExtensionAttribute]
public static bool HasNativeImage(StackFrame stackFrame);
    [ExtensionAttribute]
public static bool HasMethod(StackFrame stackFrame);
    [ExtensionAttribute]
public static bool HasILOffset(StackFrame stackFrame);
    [ExtensionAttribute]
public static bool HasSource(StackFrame stackFrame);
    [ExtensionAttribute]
public static IntPtr GetNativeIP(StackFrame stackFrame);
    [ExtensionAttribute]
public static IntPtr GetNativeImageBase(StackFrame stackFrame);
}
internal class System.Diagnostics.Tracing.EventCounter : object {
    private string _name;
    private EventCounterGroup _group;
    private static int BufferedSize;
    private static float UnusedBufferSlotValue;
    private static int UnsetIndex;
    private Single[] modreq(System.Runtime.CompilerServices.IsVolatile) _bufferedValues;
    private Int32 modreq(System.Runtime.CompilerServices.IsVolatile) _bufferedValuesIndex;
    private int _count;
    private float _sum;
    private float _sumSquared;
    private float _min;
    private float _max;
    private object MyLock { get; }
    public EventCounter(string name, EventSource eventSource);
    public void WriteMetric(float value);
    public virtual string ToString();
    private object get_MyLock();
    private void InitializeBuffer();
    private void Enqueue(float value);
    private void Flush();
    private void OnMetricWritten(float value);
    internal EventCounterPayload GetEventCounterPayload();
    private void ResetStatistics();
}
internal class System.Diagnostics.Tracing.EventCounterGroup : object {
    private EventSource _eventSource;
    private List`1<EventCounter> _eventCounters;
    private static WeakReference`1[] s_eventCounterGroups;
    private static object s_eventCounterGroupsLock;
    private DateTime _timeStampSinceCollectionStarted;
    private int _pollingIntervalInMilliseconds;
    private Timer _pollingTimer;
    internal EventCounterGroup(EventSource eventSource);
    private static EventCounterGroup();
    internal void Add(EventCounter eventCounter);
    internal void Remove(EventCounter eventCounter);
    private void RegisterCommandCallback();
    private void OnEventSourceCommand(object sender, EventCommandEventArgs e);
    private static void EnsureEventSourceIndexAvailable(int eventSourceIndex);
    internal static EventCounterGroup GetEventCounterGroup(EventSource eventSource);
    private void DisposeTimer();
    private void EnableTimer(float pollingIntervalInSeconds);
    private void OnTimer(object state);
}
[EventDataAttribute]
internal class System.Diagnostics.Tracing.EventCounterPayload : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private float <Mean>k__BackingField;
    [CompilerGeneratedAttribute]
private float <StandardDeviation>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Count>k__BackingField;
    [CompilerGeneratedAttribute]
private float <Min>k__BackingField;
    [CompilerGeneratedAttribute]
private float <Max>k__BackingField;
    [CompilerGeneratedAttribute]
private float <IntervalSec>k__BackingField;
    public string Name { get; public set; }
    public float Mean { get; public set; }
    public float StandardDeviation { get; public set; }
    public int Count { get; public set; }
    public float Min { get; public set; }
    public float Max { get; public set; }
    public float IntervalSec { get; internal set; }
    private IEnumerable`1<KeyValuePair`2<string, object>> ForEnumeration { get; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public float get_Mean();
    [CompilerGeneratedAttribute]
public void set_Mean(float value);
    [CompilerGeneratedAttribute]
public float get_StandardDeviation();
    [CompilerGeneratedAttribute]
public void set_StandardDeviation(float value);
    [CompilerGeneratedAttribute]
public int get_Count();
    [CompilerGeneratedAttribute]
public void set_Count(int value);
    [CompilerGeneratedAttribute]
public float get_Min();
    [CompilerGeneratedAttribute]
public void set_Min(float value);
    [CompilerGeneratedAttribute]
public float get_Max();
    [CompilerGeneratedAttribute]
public void set_Max(float value);
    [CompilerGeneratedAttribute]
public float get_IntervalSec();
    [CompilerGeneratedAttribute]
internal void set_IntervalSec(float value);
    public sealed virtual IEnumerator`1<KeyValuePair`2<string, object>> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    [IteratorStateMachineAttribute("System.Diagnostics.Tracing.EventCounterPayload/<get_ForEnumeration>d__31")]
private IEnumerable`1<KeyValuePair`2<string, object>> get_ForEnumeration();
}
internal class System.Diagnostics.Tracing.EventListenerHelper : EventListener {
    public static int EventSourceIndex(EventSource eventSource);
    protected virtual void OnEventWritten(EventWrittenEventArgs eventData);
}
internal class System.Globalization.CultureAwareComparer : StringComparer {
    internal static CompareOptions ValidCompareMaskOffFlags;
    private CompareInfo _compareInfo;
    private CompareOptions _options;
    internal CultureAwareComparer(CompareInfo compareInfo, CompareOptions options);
    public virtual int Compare(string x, string y);
    public virtual bool Equals(string x, string y);
    public virtual int GetHashCode(string obj);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
[ExtensionAttribute]
internal static class System.Globalization.GlobalizationExtensions : object {
    [ExtensionAttribute]
public static StringComparer GetStringComparer(CompareInfo compareInfo, CompareOptions options);
}
internal static class System.HResults : object {
    internal static int APPMODEL_ERROR_NO_PACKAGE;
    internal static int CLDB_E_FILE_CORRUPT;
    internal static int CLDB_E_FILE_OLDVER;
    internal static int CLDB_E_INDEX_NOTFOUND;
    internal static int CLR_E_BIND_ASSEMBLY_NOT_FOUND;
    internal static int CLR_E_BIND_ASSEMBLY_PUBLIC_KEY_MISMATCH;
    internal static int CLR_E_BIND_ASSEMBLY_VERSION_TOO_LOW;
    internal static int CLR_E_BIND_TYPE_NOT_FOUND;
    internal static int CLR_E_BIND_UNRECOGNIZED_IDENTITY_FORMAT;
    internal static int COR_E_ABANDONEDMUTEX;
    internal static int COR_E_AMBIGUOUSMATCH;
    internal static int COR_E_APPDOMAINUNLOADED;
    internal static int COR_E_APPLICATION;
    internal static int COR_E_ARGUMENT;
    internal static int COR_E_ARGUMENTOUTOFRANGE;
    internal static int COR_E_ARITHMETIC;
    internal static int COR_E_ARRAYTYPEMISMATCH;
    internal static int COR_E_ASSEMBLYEXPECTED;
    internal static int COR_E_BADIMAGEFORMAT;
    internal static int COR_E_CANNOTUNLOADAPPDOMAIN;
    internal static int COR_E_CODECONTRACTFAILED;
    internal static int COR_E_CONTEXTMARSHAL;
    internal static int COR_E_CUSTOMATTRIBUTEFORMAT;
    internal static int COR_E_DATAMISALIGNED;
    internal static int COR_E_DIVIDEBYZERO;
    internal static int COR_E_DLLNOTFOUND;
    internal static int COR_E_DUPLICATEWAITOBJECT;
    internal static int COR_E_ENTRYPOINTNOTFOUND;
    internal static int COR_E_EXCEPTION;
    internal static int COR_E_EXECUTIONENGINE;
    internal static int COR_E_FIELDACCESS;
    internal static int COR_E_FIXUPSINEXE;
    internal static int COR_E_FORMAT;
    internal static int COR_E_INDEXOUTOFRANGE;
    internal static int COR_E_INSUFFICIENTEXECUTIONSTACK;
    internal static int COR_E_INVALIDCAST;
    internal static int COR_E_INVALIDCOMOBJECT;
    internal static int COR_E_INVALIDFILTERCRITERIA;
    internal static int COR_E_INVALIDOLEVARIANTTYPE;
    internal static int COR_E_INVALIDOPERATION;
    internal static int COR_E_INVALIDPROGRAM;
    internal static int COR_E_KEYNOTFOUND;
    internal static int COR_E_LOADING_REFERENCE_ASSEMBLY;
    internal static int COR_E_MARSHALDIRECTIVE;
    internal static int COR_E_MEMBERACCESS;
    internal static int COR_E_METHODACCESS;
    internal static int COR_E_MISSINGFIELD;
    internal static int COR_E_MISSINGMANIFESTRESOURCE;
    internal static int COR_E_MISSINGMEMBER;
    internal static int COR_E_MISSINGMETHOD;
    internal static int COR_E_MISSINGSATELLITEASSEMBLY;
    internal static int COR_E_MODULE_HASH_CHECK_FAILED;
    internal static int COR_E_MULTICASTNOTSUPPORTED;
    internal static int COR_E_NEWER_RUNTIME;
    internal static int COR_E_NOTFINITENUMBER;
    internal static int COR_E_NOTSUPPORTED;
    internal static int COR_E_NULLREFERENCE;
    internal static int COR_E_OBJECTDISPOSED;
    internal static int COR_E_OPERATIONCANCELED;
    internal static int COR_E_OUTOFMEMORY;
    internal static int COR_E_OVERFLOW;
    internal static int COR_E_PLATFORMNOTSUPPORTED;
    internal static int COR_E_RANK;
    internal static int COR_E_REFLECTIONTYPELOAD;
    internal static int COR_E_REMOTING;
    internal static int COR_E_RUNTIMEWRAPPED;
    internal static int COR_E_SAFEARRAYRANKMISMATCH;
    internal static int COR_E_SAFEARRAYTYPEMISMATCH;
    internal static int COR_E_SECURITY;
    internal static int COR_E_SERIALIZATION;
    internal static int COR_E_SERVER;
    internal static int COR_E_STACKOVERFLOW;
    internal static int COR_E_SYNCHRONIZATIONLOCK;
    internal static int COR_E_SYSTEM;
    internal static int COR_E_TARGET;
    internal static int COR_E_TARGETINVOCATION;
    internal static int COR_E_TARGETPARAMCOUNT;
    internal static int COR_E_THREADABORTED;
    internal static int COR_E_THREADINTERRUPTED;
    internal static int COR_E_THREADSTART;
    internal static int COR_E_THREADSTATE;
    internal static int COR_E_TIMEOUT;
    internal static int COR_E_TYPEACCESS;
    internal static int COR_E_TYPEINITIALIZATION;
    internal static int COR_E_TYPELOAD;
    internal static int COR_E_TYPEUNLOADED;
    internal static int COR_E_UNAUTHORIZEDACCESS;
    internal static int COR_E_VERIFICATION;
    internal static int COR_E_WAITHANDLECANNOTBEOPENED;
    internal static int CORSEC_E_CRYPTO;
    internal static int CORSEC_E_CRYPTO_UNEX_OPER;
    internal static int CORSEC_E_INVALID_IMAGE_FORMAT;
    internal static int CORSEC_E_INVALID_PUBLICKEY;
    internal static int CORSEC_E_INVALID_STRONGNAME;
    internal static int CORSEC_E_MIN_GRANT_FAIL;
    internal static int CORSEC_E_MISSING_STRONGNAME;
    internal static int CORSEC_E_NO_EXEC_PERM;
    internal static int CORSEC_E_POLICY_EXCEPTION;
    internal static int CORSEC_E_SIGNATURE_MISMATCH;
    internal static int CORSEC_E_XMLSYNTAX;
    internal static int CTL_E_DEVICEIOERROR;
    internal static int CTL_E_DIVISIONBYZERO;
    internal static int CTL_E_FILENOTFOUND;
    internal static int CTL_E_OUTOFMEMORY;
    internal static int CTL_E_OUTOFSTACKSPACE;
    internal static int CTL_E_OVERFLOW;
    internal static int CTL_E_PATHFILEACCESSERROR;
    internal static int CTL_E_PATHNOTFOUND;
    internal static int CTL_E_PERMISSIONDENIED;
    internal static int E_ELEMENTNOTAVAILABLE;
    internal static int E_ELEMENTNOTENABLED;
    internal static int E_FAIL;
    internal static int E_HANDLE;
    internal static int E_ILLEGAL_DELEGATE_ASSIGNMENT;
    internal static int E_ILLEGAL_METHOD_CALL;
    internal static int E_ILLEGAL_STATE_CHANGE;
    internal static int E_INVALIDARG;
    internal static int E_LAYOUTCYCLE;
    internal static int E_NOTIMPL;
    internal static int E_OUTOFMEMORY;
    internal static int E_POINTER;
    internal static int E_XAMLPARSEFAILED;
    internal static int ERROR_BAD_EXE_FORMAT;
    internal static int ERROR_BAD_NET_NAME;
    internal static int ERROR_BAD_NETPATH;
    internal static int ERROR_DISK_CORRUPT;
    internal static int ERROR_DLL_INIT_FAILED;
    internal static int ERROR_DLL_NOT_FOUND;
    internal static int ERROR_EXE_MARKED_INVALID;
    internal static int ERROR_FILE_CORRUPT;
    internal static int ERROR_FILE_INVALID;
    internal static int ERROR_FILE_NOT_FOUND;
    internal static int ERROR_INVALID_DLL;
    internal static int ERROR_INVALID_NAME;
    internal static int ERROR_INVALID_ORDINAL;
    internal static int ERROR_INVALID_PARAMETER;
    internal static int ERROR_LOCK_VIOLATION;
    internal static int ERROR_MOD_NOT_FOUND;
    internal static int ERROR_NO_UNICODE_TRANSLATION;
    internal static int ERROR_NOACCESS;
    internal static int ERROR_NOT_OWNER;
    internal static int ERROR_NOT_READY;
    internal static int ERROR_OPEN_FAILED;
    internal static int ERROR_PATH_NOT_FOUND;
    internal static int ERROR_SHARING_VIOLATION;
    internal static int ERROR_TIMEOUT;
    internal static int ERROR_TOO_MANY_OPEN_FILES;
    internal static int ERROR_UNRECOGNIZED_VOLUME;
    internal static int ERROR_WRONG_TARGET_NAME;
    internal static int FUSION_E_ASM_MODULE_MISSING;
    internal static int FUSION_E_CACHEFILE_FAILED;
    internal static int FUSION_E_CODE_DOWNLOAD_DISABLED;
    internal static int FUSION_E_HOST_GAC_ASM_MISMATCH;
    internal static int FUSION_E_INVALID_NAME;
    internal static int FUSION_E_INVALID_PRIVATE_ASM_LOCATION;
    internal static int FUSION_E_LOADFROM_BLOCKED;
    internal static int FUSION_E_PRIVATE_ASM_DISALLOWED;
    internal static int FUSION_E_REF_DEF_MISMATCH;
    internal static int FUSION_E_SIGNATURE_CHECK_FAILED;
    internal static int INET_E_CANNOT_CONNECT;
    internal static int INET_E_CONNECTION_TIMEOUT;
    internal static int INET_E_DATA_NOT_AVAILABLE;
    internal static int INET_E_DOWNLOAD_FAILURE;
    internal static int INET_E_OBJECT_NOT_FOUND;
    internal static int INET_E_RESOURCE_NOT_FOUND;
    internal static int INET_E_UNKNOWN_PROTOCOL;
    internal static int ISS_E_ALLOC_TOO_LARGE;
    internal static int ISS_E_BLOCK_SIZE_TOO_SMALL;
    internal static int ISS_E_CALLER;
    internal static int ISS_E_CORRUPTED_STORE_FILE;
    internal static int ISS_E_CREATE_DIR;
    internal static int ISS_E_CREATE_MUTEX;
    internal static int ISS_E_DEPRECATE;
    internal static int ISS_E_FILE_NOT_MAPPED;
    internal static int ISS_E_FILE_WRITE;
    internal static int ISS_E_GET_FILE_SIZE;
    internal static int ISS_E_ISOSTORE;
    internal static int ISS_E_LOCK_FAILED;
    internal static int ISS_E_MACHINE;
    internal static int ISS_E_MACHINE_DACL;
    internal static int ISS_E_MAP_VIEW_OF_FILE;
    internal static int ISS_E_OPEN_FILE_MAPPING;
    internal static int ISS_E_OPEN_STORE_FILE;
    internal static int ISS_E_PATH_LENGTH;
    internal static int ISS_E_SET_FILE_POINTER;
    internal static int ISS_E_STORE_NOT_OPEN;
    internal static int ISS_E_STORE_VERSION;
    internal static int ISS_E_TABLE_ROW_NOT_FOUND;
    internal static int ISS_E_USAGE_WILL_EXCEED_QUOTA;
    internal static int META_E_BAD_SIGNATURE;
    internal static int META_E_CA_FRIENDS_SN_REQUIRED;
    internal static int MSEE_E_ASSEMBLYLOADINPROGRESS;
    internal static int RO_E_CLOSED;
    internal static int E_BOUNDS;
    internal static int RO_E_METADATA_NAME_NOT_FOUND;
    internal static int SECURITY_E_INCOMPATIBLE_EVIDENCE;
    internal static int SECURITY_E_INCOMPATIBLE_SHARE;
    internal static int SECURITY_E_UNVERIFIABLE;
    internal static int STG_E_PATHNOTFOUND;
    public static int COR_E_DIRECTORYNOTFOUND;
    public static int COR_E_ENDOFSTREAM;
    public static int COR_E_FILELOAD;
    public static int COR_E_FILENOTFOUND;
    public static int COR_E_IO;
    public static int COR_E_PATHTOOLONG;
}
internal enum System.IO.Compression.BlockType : Enum {
    public int value__;
    public static BlockType Uncompressed;
    public static BlockType Static;
    public static BlockType Dynamic;
}
internal class System.IO.Compression.CheckSumAndSizeWriteStream : Stream {
    private Stream _baseStream;
    private Stream _baseBaseStream;
    private long _position;
    private UInt32 _checksum;
    private bool _leaveOpenOnClose;
    private bool _canWrite;
    private bool _isDisposed;
    private bool _everWritten;
    private long _initialPosition;
    private ZipArchiveEntry _zipArchiveEntry;
    private EventHandler _onClose;
    private Action`6<long, long, UInt32, Stream, ZipArchiveEntry, EventHandler> _saveCrcAndSizes;
    public long Length { get; }
    public long Position { get; public set; }
    public bool CanRead { get; }
    public bool CanSeek { get; }
    public bool CanWrite { get; }
    public CheckSumAndSizeWriteStream(Stream baseStream, Stream baseBaseStream, bool leaveOpenOnClose, ZipArchiveEntry entry, EventHandler onClose, Action`6<long, long, UInt32, Stream, ZipArchiveEntry, EventHandler> saveCrcAndSizes);
    public virtual long get_Length();
    public virtual long get_Position();
    public virtual void set_Position(long value);
    public virtual bool get_CanRead();
    public virtual bool get_CanSeek();
    public virtual bool get_CanWrite();
    private void ThrowIfDisposed();
    public virtual int Read(Byte[] buffer, int offset, int count);
    public virtual long Seek(long offset, SeekOrigin origin);
    public virtual void SetLength(long value);
    public virtual void Write(Byte[] buffer, int offset, int count);
    public virtual void Flush();
    protected virtual void Dispose(bool disposing);
}
internal class System.IO.Compression.CopyEncoder : object {
    private static int PaddingSize;
    private static int MaxUncompressedBlockSize;
    public void GetBlock(DeflateInput input, OutputBuffer output, bool isFinal);
    private void WriteLenNLen(ushort len, OutputBuffer output);
}
internal static class System.IO.Compression.Crc32Helper : object {
    private static UInt32[] s_crcTable_0;
    private static UInt32[] s_crcTable_1;
    private static UInt32[] s_crcTable_2;
    private static UInt32[] s_crcTable_3;
    private static UInt32[] s_crcTable_4;
    private static UInt32[] s_crcTable_5;
    private static UInt32[] s_crcTable_6;
    private static UInt32[] s_crcTable_7;
    private static Crc32Helper();
    public static UInt32 UpdateCrc32(UInt32 crc32, Byte[] buffer, int offset, int length);
    private static UInt32 ManagedCrc32(UInt32 crc32, Byte[] buffer, int offset, int length);
}
internal class System.IO.Compression.DeflateInput : object {
    [CompilerGeneratedAttribute]
private Byte[] <Buffer>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Count>k__BackingField;
    [CompilerGeneratedAttribute]
private int <StartIndex>k__BackingField;
    internal Byte[] Buffer { get; internal set; }
    internal int Count { get; internal set; }
    internal int StartIndex { get; internal set; }
    [CompilerGeneratedAttribute]
internal Byte[] get_Buffer();
    [CompilerGeneratedAttribute]
internal void set_Buffer(Byte[] value);
    [CompilerGeneratedAttribute]
internal int get_Count();
    [CompilerGeneratedAttribute]
internal void set_Count(int value);
    [CompilerGeneratedAttribute]
internal int get_StartIndex();
    [CompilerGeneratedAttribute]
internal void set_StartIndex(int value);
    internal void ConsumeBytes(int n);
    internal InputState DumpState();
    internal void RestoreState(InputState state);
}
internal class System.IO.Compression.DeflateManagedStream : Stream {
    internal static int DefaultBufferSize;
    private Stream _stream;
    private CompressionMode _mode;
    private bool _leaveOpen;
    private InflaterManaged _inflater;
    private DeflaterManaged _deflater;
    private Byte[] _buffer;
    private int _asyncOperations;
    private IFileFormatWriter _formatWriter;
    private bool _wroteHeader;
    private bool _wroteBytes;
    public Stream BaseStream { get; }
    public bool CanRead { get; }
    public bool CanWrite { get; }
    public bool CanSeek { get; }
    public long Length { get; }
    public long Position { get; public set; }
    public DeflateManagedStream(Stream stream, CompressionMode mode);
    internal DeflateManagedStream(Stream stream, bool leaveOpen, IFileFormatReader reader);
    internal DeflateManagedStream(Stream stream, CompressionMethodValues method);
    public DeflateManagedStream(Stream stream, CompressionMode mode, bool leaveOpen);
    public DeflateManagedStream(Stream stream, CompressionLevel compressionLevel);
    public DeflateManagedStream(Stream stream, CompressionLevel compressionLevel, bool leaveOpen);
    internal void InitializeInflater(Stream stream, bool leaveOpen, IFileFormatReader reader, CompressionMethodValues method);
    internal void InitializeDeflater(Stream stream, bool leaveOpen, CompressionLevel compressionLevel);
    internal void SetFileFormatWriter(IFileFormatWriter writer);
    public Stream get_BaseStream();
    public virtual bool get_CanRead();
    public virtual bool get_CanWrite();
    public virtual bool get_CanSeek();
    public virtual long get_Length();
    public virtual long get_Position();
    public virtual void set_Position(long value);
    public virtual void Flush();
    public virtual Task FlushAsync(CancellationToken cancellationToken);
    public virtual long Seek(long offset, SeekOrigin origin);
    public virtual void SetLength(long value);
    public virtual int Read(Byte[] array, int offset, int count);
    private void ValidateParameters(Byte[] array, int offset, int count);
    private void EnsureNotDisposed();
    private static void ThrowStreamClosedException();
    private void EnsureDecompressionMode();
    private static void ThrowCannotReadFromDeflateManagedStreamException();
    private void EnsureCompressionMode();
    private static void ThrowCannotWriteToDeflateManagedStreamException();
    public virtual IAsyncResult BeginRead(Byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);
    public virtual int EndRead(IAsyncResult asyncResult);
    public virtual Task`1<int> ReadAsync(Byte[] array, int offset, int count, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("System.IO.Compression.DeflateManagedStream/<ReadAsyncCore>d__48")]
private Task`1<int> ReadAsyncCore(Task`1<int> readTask, Byte[] array, int offset, int count, CancellationToken cancellationToken);
    public virtual void Write(Byte[] array, int offset, int count);
    private void WriteDeflaterOutput();
    private void DoMaintenance(Byte[] array, int offset, int count);
    private void PurgeBuffers(bool disposing);
    protected virtual void Dispose(bool disposing);
    public virtual Task WriteAsync(Byte[] array, int offset, int count, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("System.IO.Compression.DeflateManagedStream/<WriteAsyncCore>d__55")]
private Task WriteAsyncCore(Byte[] array, int offset, int count, CancellationToken cancellationToken);
    public virtual IAsyncResult BeginWrite(Byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);
    public virtual void EndWrite(IAsyncResult asyncResult);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task <>n__0(Byte[] buffer, int offset, int count, CancellationToken cancellationToken);
}
internal class System.IO.Compression.DeflaterManaged : object {
    private static int MinBlockSize;
    private static int MaxHeaderFooterGoo;
    private static int CleanCopySize;
    private static double BadCompressionThreshold;
    private FastEncoder _deflateEncoder;
    private CopyEncoder _copyEncoder;
    private DeflateInput _input;
    private OutputBuffer _output;
    private DeflaterState _processingState;
    private DeflateInput _inputFromHistory;
    internal bool NeedsInput();
    internal void SetInput(Byte[] inputBuffer, int startIndex, int count);
    internal int GetDeflateOutput(Byte[] outputBuffer);
    internal bool Finish(Byte[] outputBuffer, Int32& bytesRead);
    private bool UseCompressed(double ratio);
    private void FlushInputWindows();
    private void WriteFinal();
    public sealed virtual void Dispose();
}
internal class System.IO.Compression.FastEncoder : object {
    private FastEncoderWindow _inputWindow;
    private Match _currentMatch;
    private double _lastCompressionRatio;
    internal int BytesInHistory { get; }
    internal DeflateInput UnprocessedInput { get; }
    internal double LastCompressionRatio { get; }
    internal int get_BytesInHistory();
    internal DeflateInput get_UnprocessedInput();
    internal void FlushInput();
    internal double get_LastCompressionRatio();
    internal void GetBlock(DeflateInput input, OutputBuffer output, int maxBytesToCopy);
    internal void GetCompressedData(DeflateInput input, OutputBuffer output);
    internal void GetBlockHeader(OutputBuffer output);
    internal void GetBlockFooter(OutputBuffer output);
    private void GetCompressedOutput(DeflateInput input, OutputBuffer output, int maxBytesToCopy);
    private void GetCompressedOutput(OutputBuffer output);
    private bool InputAvailable(DeflateInput input);
    private bool SafeToWriteTo(OutputBuffer output);
    private void WriteEndOfBlock(OutputBuffer output);
    internal static void WriteMatch(int matchLen, int matchPos, OutputBuffer output);
    internal static void WriteChar(byte b, OutputBuffer output);
    internal static void WriteDeflatePreamble(OutputBuffer output);
}
internal static class System.IO.Compression.FastEncoderStatics : object {
    internal static Byte[] FastEncoderTreeStructureData;
    internal static Byte[] BFinalFastEncoderTreeStructureData;
    internal static UInt32[] FastEncoderLiteralCodeInfo;
    internal static UInt32[] FastEncoderDistanceCodeInfo;
    internal static UInt32[] BitMask;
    internal static Byte[] ExtraLengthBits;
    internal static Byte[] ExtraDistanceBits;
    internal static int NumChars;
    internal static int NumLengthBaseCodes;
    internal static int NumDistBaseCodes;
    internal static UInt32 FastEncoderPostTreeBitBuf;
    internal static int FastEncoderPostTreeBitCount;
    internal static UInt32 NoCompressionHeader;
    internal static int NoCompressionHeaderBitCount;
    internal static UInt32 BFinalNoCompressionHeader;
    internal static int BFinalNoCompressionHeaderBitCount;
    internal static int MaxCodeLen;
    private static Byte[] s_distLookup;
    private static FastEncoderStatics();
    private static Byte[] CreateDistanceLookup();
    internal static int GetSlot(int pos);
    public static UInt32 BitReverse(UInt32 code, int length);
}
internal class System.IO.Compression.FastEncoderWindow : object {
    private Byte[] _window;
    private int _bufPos;
    private int _bufEnd;
    private static int FastEncoderHashShift;
    private static int FastEncoderHashtableSize;
    private static int FastEncoderHashMask;
    private static int FastEncoderWindowSize;
    private static int FastEncoderWindowMask;
    private static int FastEncoderMatch3DistThreshold;
    internal static int MaxMatch;
    internal static int MinMatch;
    private static int SearchDepth;
    private static int GoodLength;
    private static int NiceLength;
    private static int LazyMatchThreshold;
    private UInt16[] _prev;
    private UInt16[] _lookup;
    public int BytesAvailable { get; }
    public DeflateInput UnprocessedInput { get; }
    public int FreeWindowSpace { get; }
    public int get_BytesAvailable();
    public DeflateInput get_UnprocessedInput();
    public void FlushWindow();
    private void ResetWindow();
    public int get_FreeWindowSpace();
    public void CopyBytes(Byte[] inputBuffer, int startIndex, int count);
    public void MoveWindows();
    private UInt32 HashValue(UInt32 hash, byte b);
    private UInt32 InsertString(UInt32& hash);
    private void InsertStrings(UInt32& hash, int matchLen);
    internal bool GetNextSymbolOrMatch(Match match);
    private int FindMatch(int search, Int32& matchPos, int searchDepth, int niceLength);
    [ConditionalAttribute("DEBUG")]
private void DebugAssertVerifyHashes();
    [ConditionalAttribute("DEBUG")]
private void DebugAssertRecalculatedHashesAreEqual(int position1, int position2, string message);
}
internal class System.IO.Compression.HuffmanTree : object {
    internal static int MaxLiteralTreeElements;
    internal static int MaxDistTreeElements;
    internal static int EndOfBlockCode;
    internal static int NumberOfCodeLengthTreeElements;
    private int _tableBits;
    private Int16[] _table;
    private Int16[] _left;
    private Int16[] _right;
    private Byte[] _codeLengthArray;
    private int _tableMask;
    [CompilerGeneratedAttribute]
private static HuffmanTree <StaticLiteralLengthTree>k__BackingField;
    [CompilerGeneratedAttribute]
private static HuffmanTree <StaticDistanceTree>k__BackingField;
    public static HuffmanTree StaticLiteralLengthTree { get; }
    public static HuffmanTree StaticDistanceTree { get; }
    public HuffmanTree(Byte[] codeLengths);
    private static HuffmanTree();
    [CompilerGeneratedAttribute]
public static HuffmanTree get_StaticLiteralLengthTree();
    [CompilerGeneratedAttribute]
public static HuffmanTree get_StaticDistanceTree();
    private static Byte[] GetStaticLiteralTreeLength();
    private static Byte[] GetStaticDistanceTreeLength();
    private UInt32[] CalculateHuffmanCode();
    private void CreateTable();
    public int GetNextSymbol(InputBuffer input);
}
internal interface System.IO.Compression.IFileFormatReader {
    public int ZLibWindowSize { get; }
    public abstract virtual bool ReadHeader(InputBuffer input);
    public abstract virtual bool ReadFooter(InputBuffer input);
    public abstract virtual void UpdateWithBytesRead(Byte[] buffer, int offset, int bytesToCopy);
    public abstract virtual void Validate();
    public abstract virtual int get_ZLibWindowSize();
}
internal interface System.IO.Compression.IFileFormatWriter {
    public abstract virtual Byte[] GetHeader();
    public abstract virtual void UpdateWithBytesRead(Byte[] buffer, int offset, int bytesToCopy);
    public abstract virtual Byte[] GetFooter();
}
internal class System.IO.Compression.InflaterManaged : object {
    private static Byte[] s_extraLengthBits;
    private static Int32[] s_lengthBase;
    private static Int32[] s_distanceBasePosition;
    private static Byte[] s_codeOrder;
    private static Byte[] s_staticDistanceTreeTable;
    private OutputWindow _output;
    private InputBuffer _input;
    private HuffmanTree _literalLengthTree;
    private HuffmanTree _distanceTree;
    private InflaterState _state;
    private bool _hasFormatReader;
    private int _bfinal;
    private BlockType _blockType;
    private Byte[] _blockLengthBuffer;
    private int _blockLength;
    private int _length;
    private int _distanceCode;
    private int _extraBits;
    private int _loopCounter;
    private int _literalLengthCodeCount;
    private int _distanceCodeCount;
    private int _codeLengthCodeCount;
    private int _codeArraySize;
    private int _lengthCode;
    private Byte[] _codeList;
    private Byte[] _codeLengthTreeCodeLength;
    private bool _deflate64;
    private HuffmanTree _codeLengthTree;
    private IFileFormatReader _formatReader;
    public int AvailableOutput { get; }
    public InflaterManaged(bool deflate64);
    internal InflaterManaged(IFileFormatReader reader, bool deflate64);
    private static InflaterManaged();
    public void SetFileFormatReader(IFileFormatReader reader);
    private void Reset();
    public void SetInput(Byte[] inputBytes, int offset, int length);
    public bool Finished();
    public int get_AvailableOutput();
    public bool NeedsInput();
    public int Inflate(Byte[] bytes, int offset, int length);
    private bool Decode();
    private bool DecodeUncompressedBlock(Boolean& end_of_block);
    private bool DecodeBlock(Boolean& end_of_block_code_seen);
    private bool DecodeDynamicBlockHeader();
    public void Dispose();
}
internal enum System.IO.Compression.InflaterState : Enum {
    public int value__;
    public static InflaterState ReadingHeader;
    public static InflaterState ReadingBFinal;
    public static InflaterState ReadingBType;
    public static InflaterState ReadingNumLitCodes;
    public static InflaterState ReadingNumDistCodes;
    public static InflaterState ReadingNumCodeLengthCodes;
    public static InflaterState ReadingCodeLengthCodes;
    public static InflaterState ReadingTreeCodesBefore;
    public static InflaterState ReadingTreeCodesAfter;
    public static InflaterState DecodeTop;
    public static InflaterState HaveInitialLength;
    public static InflaterState HaveFullLength;
    public static InflaterState HaveDistCode;
    public static InflaterState UncompressedAligning;
    public static InflaterState UncompressedByte1;
    public static InflaterState UncompressedByte2;
    public static InflaterState UncompressedByte3;
    public static InflaterState UncompressedByte4;
    public static InflaterState DecodingUncompressed;
    public static InflaterState StartReadingFooter;
    public static InflaterState ReadingFooter;
    public static InflaterState VerifyingFooter;
    public static InflaterState Done;
}
internal class System.IO.Compression.InputBuffer : object {
    private Byte[] _buffer;
    private int _start;
    private int _end;
    private UInt32 _bitBuffer;
    private int _bitsInBuffer;
    public int AvailableBits { get; }
    public int AvailableBytes { get; }
    public int get_AvailableBits();
    public int get_AvailableBytes();
    public bool EnsureBitsAvailable(int count);
    public UInt32 TryLoad16Bits();
    private UInt32 GetBitMask(int count);
    public int GetBits(int count);
    public int CopyTo(Byte[] output, int offset, int length);
    public bool NeedsInput();
    public void SetInput(Byte[] buffer, int offset, int length);
    public void SkipBits(int n);
    public void SkipToByteBoundary();
}
internal class System.IO.Compression.Match : object {
    [CompilerGeneratedAttribute]
private MatchState <State>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Position>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Length>k__BackingField;
    [CompilerGeneratedAttribute]
private byte <Symbol>k__BackingField;
    internal MatchState State { get; internal set; }
    internal int Position { get; internal set; }
    internal int Length { get; internal set; }
    internal byte Symbol { get; internal set; }
    [CompilerGeneratedAttribute]
internal MatchState get_State();
    [CompilerGeneratedAttribute]
internal void set_State(MatchState value);
    [CompilerGeneratedAttribute]
internal int get_Position();
    [CompilerGeneratedAttribute]
internal void set_Position(int value);
    [CompilerGeneratedAttribute]
internal int get_Length();
    [CompilerGeneratedAttribute]
internal void set_Length(int value);
    [CompilerGeneratedAttribute]
internal byte get_Symbol();
    [CompilerGeneratedAttribute]
internal void set_Symbol(byte value);
}
internal enum System.IO.Compression.MatchState : Enum {
    public int value__;
    public static MatchState HasSymbol;
    public static MatchState HasMatch;
    public static MatchState HasSymbolAndMatch;
}
internal class System.IO.Compression.OutputBuffer : object {
    private Byte[] _byteBuffer;
    private int _pos;
    private UInt32 _bitBuf;
    private int _bitCount;
    internal int BytesWritten { get; }
    internal int FreeBytes { get; }
    internal int BitsInBuffer { get; }
    internal void UpdateBuffer(Byte[] output);
    internal int get_BytesWritten();
    internal int get_FreeBytes();
    internal void WriteUInt16(ushort value);
    internal void WriteBits(int n, UInt32 bits);
    internal void FlushBits();
    internal void WriteBytes(Byte[] byteArray, int offset, int count);
    private void WriteBytesUnaligned(Byte[] byteArray, int offset, int count);
    private void WriteByteUnaligned(byte b);
    internal int get_BitsInBuffer();
    internal BufferState DumpState();
    internal void RestoreState(BufferState state);
}
internal class System.IO.Compression.OutputWindow : object {
    private static int WindowSize;
    private static int WindowMask;
    private Byte[] _window;
    private int _end;
    private int _bytesUsed;
    public int FreeBytes { get; }
    public int AvailableBytes { get; }
    public void Write(byte b);
    public void WriteLengthDistance(int length, int distance);
    public int CopyFrom(InputBuffer input, int length);
    public int get_FreeBytes();
    public int get_AvailableBytes();
    public int CopyTo(Byte[] output, int offset, int length);
}
internal class System.IO.Compression.PositionPreservingWriteOnlyStreamWrapper : Stream {
    private Stream _stream;
    private long _position;
    public bool CanRead { get; }
    public bool CanSeek { get; }
    public bool CanWrite { get; }
    public long Position { get; public set; }
    public bool CanTimeout { get; }
    public int ReadTimeout { get; public set; }
    public int WriteTimeout { get; public set; }
    public long Length { get; }
    public PositionPreservingWriteOnlyStreamWrapper(Stream stream);
    public virtual bool get_CanRead();
    public virtual bool get_CanSeek();
    public virtual bool get_CanWrite();
    public virtual long get_Position();
    public virtual void set_Position(long value);
    public virtual void Write(Byte[] buffer, int offset, int count);
    public virtual IAsyncResult BeginWrite(Byte[] buffer, int offset, int count, AsyncCallback callback, object state);
    public virtual void EndWrite(IAsyncResult asyncResult);
    public virtual void WriteByte(byte value);
    public virtual Task WriteAsync(Byte[] buffer, int offset, int count, CancellationToken cancellationToken);
    public virtual bool get_CanTimeout();
    public virtual int get_ReadTimeout();
    public virtual void set_ReadTimeout(int value);
    public virtual int get_WriteTimeout();
    public virtual void set_WriteTimeout(int value);
    public virtual void Flush();
    public virtual Task FlushAsync(CancellationToken cancellationToken);
    public virtual void Close();
    protected virtual void Dispose(bool disposing);
    public virtual long get_Length();
    public virtual long Seek(long offset, SeekOrigin origin);
    public virtual void SetLength(long value);
    public virtual int Read(Byte[] buffer, int offset, int count);
}
internal class System.IO.Compression.SubReadStream : Stream {
    private long _startInSuperStream;
    private long _positionInSuperStream;
    private long _endInSuperStream;
    private Stream _superStream;
    private bool _canRead;
    private bool _isDisposed;
    public long Length { get; }
    public long Position { get; public set; }
    public bool CanRead { get; }
    public bool CanSeek { get; }
    public bool CanWrite { get; }
    public SubReadStream(Stream superStream, long startPosition, long maxLength);
    public virtual long get_Length();
    public virtual long get_Position();
    public virtual void set_Position(long value);
    public virtual bool get_CanRead();
    public virtual bool get_CanSeek();
    public virtual bool get_CanWrite();
    private void ThrowIfDisposed();
    private void ThrowIfCantRead();
    public virtual int Read(Byte[] buffer, int offset, int count);
    public virtual long Seek(long offset, SeekOrigin origin);
    public virtual void SetLength(long value);
    public virtual void Write(Byte[] buffer, int offset, int count);
    public virtual void Flush();
    protected virtual void Dispose(bool disposing);
}
internal class System.IO.Compression.WrappedStream : Stream {
    private Stream _baseStream;
    private bool _closeBaseStream;
    private Action`1<ZipArchiveEntry> _onClosed;
    private ZipArchiveEntry _zipArchiveEntry;
    private bool _isDisposed;
    public long Length { get; }
    public long Position { get; public set; }
    public bool CanRead { get; }
    public bool CanSeek { get; }
    public bool CanWrite { get; }
    internal WrappedStream(Stream baseStream, bool closeBaseStream);
    private WrappedStream(Stream baseStream, bool closeBaseStream, ZipArchiveEntry entry, Action`1<ZipArchiveEntry> onClosed);
    internal WrappedStream(Stream baseStream, ZipArchiveEntry entry, Action`1<ZipArchiveEntry> onClosed);
    public virtual long get_Length();
    public virtual long get_Position();
    public virtual void set_Position(long value);
    public virtual bool get_CanRead();
    public virtual bool get_CanSeek();
    public virtual bool get_CanWrite();
    private void ThrowIfDisposed();
    private void ThrowIfCantRead();
    private void ThrowIfCantWrite();
    private void ThrowIfCantSeek();
    public virtual int Read(Byte[] buffer, int offset, int count);
    public virtual long Seek(long offset, SeekOrigin origin);
    public virtual void SetLength(long value);
    public virtual void Write(Byte[] buffer, int offset, int count);
    public virtual void Flush();
    protected virtual void Dispose(bool disposing);
}
internal class System.IO.Compression.Zip64EndOfCentralDirectoryLocator : ValueType {
    public static UInt32 SignatureConstant;
    public static int SizeOfBlockWithoutSignature;
    public UInt32 NumberOfDiskWithZip64EOCD;
    public ulong OffsetOfZip64EOCD;
    public UInt32 TotalNumberOfDisks;
    public static bool TryReadBlock(BinaryReader reader, Zip64EndOfCentralDirectoryLocator& zip64EOCDLocator);
    public static void WriteBlock(Stream stream, long zip64EOCDRecordStart);
}
internal class System.IO.Compression.Zip64EndOfCentralDirectoryRecord : ValueType {
    private static UInt32 SignatureConstant;
    private static ulong NormalSize;
    public ulong SizeOfThisRecord;
    public ushort VersionMadeBy;
    public ushort VersionNeededToExtract;
    public UInt32 NumberOfThisDisk;
    public UInt32 NumberOfDiskWithStartOfCD;
    public ulong NumberOfEntriesOnThisDisk;
    public ulong NumberOfEntriesTotal;
    public ulong SizeOfCentralDirectory;
    public ulong OffsetOfCentralDirectory;
    public static bool TryReadBlock(BinaryReader reader, Zip64EndOfCentralDirectoryRecord& zip64EOCDRecord);
    public static void WriteBlock(Stream stream, long numberOfEntries, long startOfCentralDirectory, long sizeOfCentralDirectory);
}
internal class System.IO.Compression.Zip64ExtraField : ValueType {
    public static int OffsetToFirstField;
    private static ushort TagConstant;
    private ushort _size;
    private Nullable`1<long> _uncompressedSize;
    private Nullable`1<long> _compressedSize;
    private Nullable`1<long> _localHeaderOffset;
    private Nullable`1<int> _startDiskNumber;
    public ushort TotalSize { get; }
    public Nullable`1<long> UncompressedSize { get; public set; }
    public Nullable`1<long> CompressedSize { get; public set; }
    public Nullable`1<long> LocalHeaderOffset { get; public set; }
    public Nullable`1<int> StartDiskNumber { get; }
    public ushort get_TotalSize();
    public Nullable`1<long> get_UncompressedSize();
    public void set_UncompressedSize(Nullable`1<long> value);
    public Nullable`1<long> get_CompressedSize();
    public void set_CompressedSize(Nullable`1<long> value);
    public Nullable`1<long> get_LocalHeaderOffset();
    public void set_LocalHeaderOffset(Nullable`1<long> value);
    public Nullable`1<int> get_StartDiskNumber();
    private void UpdateSize();
    public static Zip64ExtraField GetJustZip64Block(Stream extraFieldStream, bool readUncompressedSize, bool readCompressedSize, bool readLocalHeaderOffset, bool readStartDiskNumber);
    private static bool TryGetZip64BlockFromGenericExtraField(ZipGenericExtraField extraField, bool readUncompressedSize, bool readCompressedSize, bool readLocalHeaderOffset, bool readStartDiskNumber, Zip64ExtraField& zip64Block);
    public static Zip64ExtraField GetAndRemoveZip64Block(List`1<ZipGenericExtraField> extraFields, bool readUncompressedSize, bool readCompressedSize, bool readLocalHeaderOffset, bool readStartDiskNumber);
    public static void RemoveZip64Blocks(List`1<ZipGenericExtraField> extraFields);
    public void WriteBlock(Stream stream);
}
internal class System.IO.Compression.ZipArchive : object {
    private Stream _archiveStream;
    private ZipArchiveEntry _archiveStreamOwner;
    private BinaryReader _archiveReader;
    private ZipArchiveMode _mode;
    private List`1<ZipArchiveEntry> _entries;
    private ReadOnlyCollection`1<ZipArchiveEntry> _entriesCollection;
    private Dictionary`2<string, ZipArchiveEntry> _entriesDictionary;
    private bool _readEntries;
    private bool _leaveOpen;
    private long _centralDirectoryStart;
    private bool _isDisposed;
    private UInt32 _numberOfThisDisk;
    private long _expectedNumberOfEntries;
    private Stream _backingStream;
    private Byte[] _archiveComment;
    private Encoding _entryNameEncoding;
    public ReadOnlyCollection`1<ZipArchiveEntry> Entries { get; }
    public ZipArchiveMode Mode { get; }
    internal BinaryReader ArchiveReader { get; }
    internal Stream ArchiveStream { get; }
    internal UInt32 NumberOfThisDisk { get; }
    internal Encoding EntryNameEncoding { get; private set; }
    public ZipArchive(Stream stream);
    public ZipArchive(Stream stream, ZipArchiveMode mode);
    public ZipArchive(Stream stream, ZipArchiveMode mode, bool leaveOpen);
    public ZipArchive(Stream stream, ZipArchiveMode mode, bool leaveOpen, Encoding entryNameEncoding);
    public ReadOnlyCollection`1<ZipArchiveEntry> get_Entries();
    public ZipArchiveMode get_Mode();
    public ZipArchiveEntry CreateEntry(string entryName);
    public ZipArchiveEntry CreateEntry(string entryName, CompressionLevel compressionLevel);
    protected virtual void Dispose(bool disposing);
    public sealed virtual void Dispose();
    public ZipArchiveEntry GetEntry(string entryName);
    internal BinaryReader get_ArchiveReader();
    internal Stream get_ArchiveStream();
    internal UInt32 get_NumberOfThisDisk();
    internal Encoding get_EntryNameEncoding();
    private void set_EntryNameEncoding(Encoding value);
    private ZipArchiveEntry DoCreateEntry(string entryName, Nullable`1<CompressionLevel> compressionLevel);
    internal void AcquireArchiveStream(ZipArchiveEntry entry);
    private void AddEntry(ZipArchiveEntry entry);
    [ConditionalAttribute("DEBUG")]
internal void DebugAssertIsStillArchiveStreamOwner(ZipArchiveEntry entry);
    internal void ReleaseArchiveStream(ZipArchiveEntry entry);
    internal void RemoveEntry(ZipArchiveEntry entry);
    internal void ThrowIfDisposed();
    private void CloseStreams();
    private void EnsureCentralDirectoryRead();
    private void Init(Stream stream, ZipArchiveMode mode, bool leaveOpen);
    private void ReadCentralDirectory();
    private void ReadEndOfCentralDirectory();
    private void WriteFile();
    private void WriteArchiveEpilogue(long startOfCentralDirectory, long sizeOfCentralDirectory);
}
internal class System.IO.Compression.ZipArchiveEntry : object {
    private static ushort DefaultVersionToExtract;
    private static int MaxSingleBufferSize;
    private ZipArchive _archive;
    private bool _originallyInArchive;
    private int _diskNumberStart;
    private ZipVersionMadeByPlatform _versionMadeByPlatform;
    private ZipVersionNeededValues _versionMadeBySpecification;
    private ZipVersionNeededValues _versionToExtract;
    private BitFlagValues _generalPurposeBitFlag;
    private CompressionMethodValues _storedCompressionMethod;
    private DateTimeOffset _lastModified;
    private long _compressedSize;
    private long _uncompressedSize;
    private long _offsetOfLocalHeader;
    private Nullable`1<long> _storedOffsetOfCompressedData;
    private UInt32 _crc32;
    private Byte[][] _compressedBytes;
    private MemoryStream _storedUncompressedData;
    private bool _currentlyOpenForWrite;
    private bool _everOpenedForWrite;
    private Stream _outstandingWriteStream;
    private UInt32 _externalFileAttr;
    private string _storedEntryName;
    private Byte[] _storedEntryNameBytes;
    private List`1<ZipGenericExtraField> _cdUnknownExtraFields;
    private List`1<ZipGenericExtraField> _lhUnknownExtraFields;
    private Byte[] _fileComment;
    private Nullable`1<CompressionLevel> _compressionLevel;
    private static bool s_allowLargeZipArchiveEntriesInUpdateMode;
    internal static ZipVersionMadeByPlatform CurrentZipPlatform;
    public ZipArchive Archive { get; }
    public long CompressedLength { get; }
    public int ExternalAttributes { get; public set; }
    public string FullName { get; private set; }
    public DateTimeOffset LastWriteTime { get; public set; }
    public long Length { get; }
    public string Name { get; }
    internal bool EverOpenedForWrite { get; }
    private long OffsetOfCompressedData { get; }
    private MemoryStream UncompressedData { get; }
    private CompressionMethodValues CompressionMethod { get; private set; }
    internal ZipArchiveEntry(ZipArchive archive, ZipCentralDirectoryFileHeader cd, CompressionLevel compressionLevel);
    internal ZipArchiveEntry(ZipArchive archive, ZipCentralDirectoryFileHeader cd);
    internal ZipArchiveEntry(ZipArchive archive, string entryName, CompressionLevel compressionLevel);
    internal ZipArchiveEntry(ZipArchive archive, string entryName);
    private static ZipArchiveEntry();
    public ZipArchive get_Archive();
    public long get_CompressedLength();
    public int get_ExternalAttributes();
    public void set_ExternalAttributes(int value);
    public string get_FullName();
    private void set_FullName(string value);
    public DateTimeOffset get_LastWriteTime();
    public void set_LastWriteTime(DateTimeOffset value);
    public long get_Length();
    public string get_Name();
    public void Delete();
    public Stream Open();
    public virtual string ToString();
    internal bool get_EverOpenedForWrite();
    private long get_OffsetOfCompressedData();
    private MemoryStream get_UncompressedData();
    private CompressionMethodValues get_CompressionMethod();
    private void set_CompressionMethod(CompressionMethodValues value);
    private string DecodeEntryName(Byte[] entryNameBytes);
    private Byte[] EncodeEntryName(string entryName, Boolean& isUTF8);
    internal void WriteAndFinishLocalEntry();
    internal void WriteCentralDirectoryFileHeader();
    internal bool LoadLocalHeaderExtraFieldAndCompressedBytesIfNeeded();
    internal void ThrowIfNotOpenable(bool needToUncompress, bool needToLoadIntoMemory);
    private CheckSumAndSizeWriteStream GetDataCompressor(Stream backingStream, bool leaveBackingStreamOpen, EventHandler onClose);
    private Stream GetDataDecompressor(Stream compressedStreamToRead);
    private Stream OpenInReadMode(bool checkOpenable);
    private Stream OpenInWriteMode();
    private Stream OpenInUpdateMode();
    private bool IsOpenable(bool needToUncompress, bool needToLoadIntoMemory, String& message);
    private bool SizesTooLarge();
    private bool WriteLocalFileHeader(bool isEmptyFile);
    private void WriteLocalFileHeaderAndDataIfNeeded();
    private void WriteCrcAndSizesInLocalHeader(bool zip64HeaderUsed);
    private void WriteDataDescriptor();
    private void UnloadStreams();
    private void CloseStreams();
    private void VersionToExtractAtLeast(ZipVersionNeededValues value);
    private void ThrowIfInvalidArchive();
    private static string GetFileName_Windows(string path);
    private static string GetFileName_Unix(string path);
    internal static string ParseFileName(string path, ZipVersionMadeByPlatform madeByPlatform);
}
internal enum System.IO.Compression.ZipArchiveMode : Enum {
    public int value__;
    public static ZipArchiveMode Read;
    public static ZipArchiveMode Create;
    public static ZipArchiveMode Update;
}
internal class System.IO.Compression.ZipCentralDirectoryFileHeader : ValueType {
    public static UInt32 SignatureConstant;
    public byte VersionMadeByCompatibility;
    public byte VersionMadeBySpecification;
    public ushort VersionNeededToExtract;
    public ushort GeneralPurposeBitFlag;
    public ushort CompressionMethod;
    public UInt32 LastModified;
    public UInt32 Crc32;
    public long CompressedSize;
    public long UncompressedSize;
    public ushort FilenameLength;
    public ushort ExtraFieldLength;
    public ushort FileCommentLength;
    public int DiskNumberStart;
    public ushort InternalFileAttributes;
    public UInt32 ExternalFileAttributes;
    public long RelativeOffsetOfLocalHeader;
    public Byte[] Filename;
    public Byte[] FileComment;
    public List`1<ZipGenericExtraField> ExtraFields;
    public static bool TryReadBlock(BinaryReader reader, bool saveExtraFieldsAndComments, ZipCentralDirectoryFileHeader& header);
}
internal class System.IO.Compression.ZipEndOfCentralDirectoryBlock : ValueType {
    public static UInt32 SignatureConstant;
    public static int SizeOfBlockWithoutSignature;
    public UInt32 Signature;
    public ushort NumberOfThisDisk;
    public ushort NumberOfTheDiskWithTheStartOfTheCentralDirectory;
    public ushort NumberOfEntriesInTheCentralDirectoryOnThisDisk;
    public ushort NumberOfEntriesInTheCentralDirectory;
    public UInt32 SizeOfCentralDirectory;
    public UInt32 OffsetOfStartOfCentralDirectoryWithRespectToTheStartingDiskNumber;
    public Byte[] ArchiveComment;
    public static void WriteBlock(Stream stream, long numberOfEntries, long startOfCentralDirectory, long sizeOfCentralDirectory, Byte[] archiveComment);
    public static bool TryReadBlock(BinaryReader reader, ZipEndOfCentralDirectoryBlock& eocdBlock);
}
internal class System.IO.Compression.ZipGenericExtraField : ValueType {
    private static int SizeOfHeader;
    private ushort _tag;
    private ushort _size;
    private Byte[] _data;
    public ushort Tag { get; }
    public ushort Size { get; }
    public Byte[] Data { get; }
    public ushort get_Tag();
    public ushort get_Size();
    public Byte[] get_Data();
    public void WriteBlock(Stream stream);
    public static bool TryReadBlock(BinaryReader reader, long endExtraField, ZipGenericExtraField& field);
    public static List`1<ZipGenericExtraField> ParseExtraField(Stream extraFieldData);
    public static int TotalSize(List`1<ZipGenericExtraField> fields);
    public static void WriteAllBlocks(List`1<ZipGenericExtraField> fields, Stream stream);
}
[ExtensionAttribute]
internal static class System.IO.Compression.ZipHelper : object {
    internal static UInt32 Mask32Bit;
    internal static ushort Mask16Bit;
    private static int BackwardsSeekingBufferSize;
    internal static int ValidZipDate_YearMin;
    internal static int ValidZipDate_YearMax;
    private static DateTime s_invalidDateIndicator;
    private static ZipHelper();
    internal static bool RequiresUnicode(string test);
    internal static void ReadBytes(Stream stream, Byte[] buffer, int bytesToRead);
    internal static DateTime DosTimeToDateTime(UInt32 dateTime);
    internal static UInt32 DateTimeToDosTime(DateTime dateTime);
    internal static bool SeekBackwardsToSignature(Stream stream, UInt32 signatureToFind);
    [ExtensionAttribute]
internal static void AdvanceToPosition(Stream stream, long position);
    private static bool SeekBackwardsAndRead(Stream stream, Byte[] buffer, Int32& bufferPointer);
}
internal class System.IO.Compression.ZipLocalFileHeader : ValueType {
    public static UInt32 DataDescriptorSignature;
    public static UInt32 SignatureConstant;
    public static int OffsetToCrcFromHeaderStart;
    public static int OffsetToBitFlagFromHeaderStart;
    public static int SizeOfLocalHeader;
    public static List`1<ZipGenericExtraField> GetExtraFields(BinaryReader reader);
    public static bool TrySkipBlock(BinaryReader reader);
}
internal enum System.IO.Compression.ZipVersionMadeByPlatform : Enum {
    public byte value__;
    public static ZipVersionMadeByPlatform Windows;
    public static ZipVersionMadeByPlatform Unix;
}
internal enum System.IO.Compression.ZipVersionNeededValues : Enum {
    public ushort value__;
    public static ZipVersionNeededValues Default;
    public static ZipVersionNeededValues ExplicitDirectory;
    public static ZipVersionNeededValues Deflate;
    public static ZipVersionNeededValues Deflate64;
    public static ZipVersionNeededValues Zip64;
}
internal static class System.IO.StreamHelpers : object {
    public static void ValidateCopyToArgs(Stream source, Stream destination, int bufferSize);
}
internal static class System.IO.StringBuilderCache : object {
    private static int MAX_BUILDER_SIZE;
    private static int DEFAULT_CAPACITY;
    [ThreadStaticAttribute]
private static StringBuilder t_cachedInstance;
    public static StringBuilder Acquire(int capacity);
    public static void Release(StringBuilder sb);
    public static string GetStringAndRelease(StringBuilder sb);
}
internal interface System.ITupleInternal {
    public int Size { get; }
    public abstract virtual int GetHashCode(IEqualityComparer comparer);
    public abstract virtual int get_Size();
    public abstract virtual string ToStringEnd();
}
internal class System.Net.Http.ByteArrayContent : HttpContent {
    private Byte[] _content;
    private int _offset;
    private int _count;
    public ByteArrayContent(Byte[] content);
    public ByteArrayContent(Byte[] content, int offset, int count);
    protected virtual Task SerializeToStreamAsync(Stream stream, TransportContext context);
    protected internal virtual bool TryComputeLength(Int64& length);
    protected virtual Task`1<Stream> CreateContentReadStreamAsync();
}
internal enum System.Net.Http.ClientCertificateOption : Enum {
    public int value__;
    public static ClientCertificateOption Manual;
    public static ClientCertificateOption Automatic;
}
internal abstract class System.Net.Http.DelegatingHandler : HttpMessageHandler {
    private HttpMessageHandler _innerHandler;
    private Boolean modreq(System.Runtime.CompilerServices.IsVolatile) _operationStarted;
    private Boolean modreq(System.Runtime.CompilerServices.IsVolatile) _disposed;
    public HttpMessageHandler InnerHandler { get; public set; }
    protected DelegatingHandler(HttpMessageHandler innerHandler);
    public HttpMessageHandler get_InnerHandler();
    public void set_InnerHandler(HttpMessageHandler value);
    protected internal virtual Task`1<HttpResponseMessage> SendAsync(HttpRequestMessage request, CancellationToken cancellationToken);
    protected virtual void Dispose(bool disposing);
    private void CheckDisposed();
    private void CheckDisposedOrStarted();
    private void SetOperationStarted();
}
internal abstract class System.Net.Http.DelegatingStream : Stream {
    private Stream _innerStream;
    protected Stream BaseStream { get; }
    public bool CanRead { get; }
    public bool CanSeek { get; }
    public bool CanWrite { get; }
    public long Length { get; }
    public long Position { get; public set; }
    public int ReadTimeout { get; public set; }
    public bool CanTimeout { get; }
    public int WriteTimeout { get; public set; }
    protected DelegatingStream(Stream innerStream);
    protected Stream get_BaseStream();
    public virtual bool get_CanRead();
    public virtual bool get_CanSeek();
    public virtual bool get_CanWrite();
    public virtual long get_Length();
    public virtual long get_Position();
    public virtual void set_Position(long value);
    public virtual int get_ReadTimeout();
    public virtual void set_ReadTimeout(int value);
    public virtual bool get_CanTimeout();
    public virtual int get_WriteTimeout();
    public virtual void set_WriteTimeout(int value);
    protected virtual void Dispose(bool disposing);
    public virtual long Seek(long offset, SeekOrigin origin);
    public virtual int Read(Byte[] buffer, int offset, int count);
    public virtual int ReadByte();
    public virtual Task`1<int> ReadAsync(Byte[] buffer, int offset, int count, CancellationToken cancellationToken);
    public virtual IAsyncResult BeginRead(Byte[] buffer, int offset, int count, AsyncCallback callback, object state);
    public virtual int EndRead(IAsyncResult asyncResult);
    public virtual void Flush();
    public virtual Task FlushAsync(CancellationToken cancellationToken);
    public virtual void SetLength(long value);
    public virtual void Write(Byte[] buffer, int offset, int count);
    public virtual void WriteByte(byte value);
    public virtual Task WriteAsync(Byte[] buffer, int offset, int count, CancellationToken cancellationToken);
    public virtual IAsyncResult BeginWrite(Byte[] buffer, int offset, int count, AsyncCallback callback, object state);
    public virtual void EndWrite(IAsyncResult asyncResult);
    public virtual Task CopyToAsync(Stream destination, int bufferSize, CancellationToken cancellationToken);
}
internal class System.Net.Http.FormUrlEncodedContent : ByteArrayContent {
    public FormUrlEncodedContent(IEnumerable`1<KeyValuePair`2<string, string>> nameValueCollection);
    private static Byte[] GetContentByteArray(IEnumerable`1<KeyValuePair`2<string, string>> nameValueCollection);
    private static string Encode(string data);
}
internal class System.Net.Http.Headers.AuthenticationHeaderValue : object {
    private string _scheme;
    private string _parameter;
    public string Scheme { get; }
    public string Parameter { get; }
    public AuthenticationHeaderValue(string scheme);
    public AuthenticationHeaderValue(string scheme, string parameter);
    private AuthenticationHeaderValue(AuthenticationHeaderValue source);
    public string get_Scheme();
    public string get_Parameter();
    public virtual string ToString();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static AuthenticationHeaderValue Parse(string input);
    public static bool TryParse(string input, AuthenticationHeaderValue& parsedValue);
    internal static int GetAuthenticationLength(string input, int startIndex, Object& parsedValue);
    private static bool TrySkipFirstBlob(string input, Int32& current, Int32& parameterEndIndex);
    private static bool TryGetParametersEndIndex(string input, Int32& parseEndIndex, Int32& parameterEndIndex);
    private sealed virtual override object System.ICloneable.Clone();
}
internal abstract class System.Net.Http.Headers.BaseHeaderParser : HttpHeaderParser {
    protected BaseHeaderParser(bool supportsMultipleValues);
    protected abstract virtual int GetParsedValueLength(string value, int startIndex, object storeValue, Object& parsedValue);
    public sealed virtual bool TryParseValue(string value, object storeValue, Int32& index, Object& parsedValue);
}
internal class System.Net.Http.Headers.ByteArrayHeaderParser : HttpHeaderParser {
    internal static ByteArrayHeaderParser Parser;
    private static ByteArrayHeaderParser();
    public virtual string ToString(object value);
    public virtual bool TryParseValue(string value, object storeValue, Int32& index, Object& parsedValue);
}
internal class System.Net.Http.Headers.CacheControlHeaderParser : BaseHeaderParser {
    internal static CacheControlHeaderParser Parser;
    private static CacheControlHeaderParser();
    protected virtual int GetParsedValueLength(string value, int startIndex, object storeValue, Object& parsedValue);
}
internal class System.Net.Http.Headers.CacheControlHeaderValue : object {
    private static string maxAgeString;
    private static string maxStaleString;
    private static string minFreshString;
    private static string mustRevalidateString;
    private static string noCacheString;
    private static string noStoreString;
    private static string noTransformString;
    private static string onlyIfCachedString;
    private static string privateString;
    private static string proxyRevalidateString;
    private static string publicString;
    private static string sharedMaxAgeString;
    private static HttpHeaderParser s_nameValueListParser;
    private static Action`1<string> s_checkIsValidToken;
    private bool _noCache;
    private ObjectCollection`1<string> _noCacheHeaders;
    private bool _noStore;
    private Nullable`1<TimeSpan> _maxAge;
    private Nullable`1<TimeSpan> _sharedMaxAge;
    private bool _maxStale;
    private Nullable`1<TimeSpan> _maxStaleLimit;
    private Nullable`1<TimeSpan> _minFresh;
    private bool _noTransform;
    private bool _onlyIfCached;
    private bool _publicField;
    private bool _privateField;
    private ObjectCollection`1<string> _privateHeaders;
    private bool _mustRevalidate;
    private bool _proxyRevalidate;
    private ObjectCollection`1<NameValueHeaderValue> _extensions;
    public bool NoCache { get; public set; }
    public ICollection`1<string> NoCacheHeaders { get; }
    public bool NoStore { get; public set; }
    public Nullable`1<TimeSpan> MaxAge { get; public set; }
    public Nullable`1<TimeSpan> SharedMaxAge { get; public set; }
    public bool MaxStale { get; public set; }
    public Nullable`1<TimeSpan> MaxStaleLimit { get; public set; }
    public Nullable`1<TimeSpan> MinFresh { get; public set; }
    public bool NoTransform { get; public set; }
    public bool OnlyIfCached { get; public set; }
    public bool Public { get; public set; }
    public bool Private { get; public set; }
    public ICollection`1<string> PrivateHeaders { get; }
    public bool MustRevalidate { get; public set; }
    public bool ProxyRevalidate { get; public set; }
    public ICollection`1<NameValueHeaderValue> Extensions { get; }
    private CacheControlHeaderValue(CacheControlHeaderValue source);
    private static CacheControlHeaderValue();
    public bool get_NoCache();
    public void set_NoCache(bool value);
    public ICollection`1<string> get_NoCacheHeaders();
    public bool get_NoStore();
    public void set_NoStore(bool value);
    public Nullable`1<TimeSpan> get_MaxAge();
    public void set_MaxAge(Nullable`1<TimeSpan> value);
    public Nullable`1<TimeSpan> get_SharedMaxAge();
    public void set_SharedMaxAge(Nullable`1<TimeSpan> value);
    public bool get_MaxStale();
    public void set_MaxStale(bool value);
    public Nullable`1<TimeSpan> get_MaxStaleLimit();
    public void set_MaxStaleLimit(Nullable`1<TimeSpan> value);
    public Nullable`1<TimeSpan> get_MinFresh();
    public void set_MinFresh(Nullable`1<TimeSpan> value);
    public bool get_NoTransform();
    public void set_NoTransform(bool value);
    public bool get_OnlyIfCached();
    public void set_OnlyIfCached(bool value);
    public bool get_Public();
    public void set_Public(bool value);
    public bool get_Private();
    public void set_Private(bool value);
    public ICollection`1<string> get_PrivateHeaders();
    public bool get_MustRevalidate();
    public void set_MustRevalidate(bool value);
    public bool get_ProxyRevalidate();
    public void set_ProxyRevalidate(bool value);
    public ICollection`1<NameValueHeaderValue> get_Extensions();
    public virtual string ToString();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static CacheControlHeaderValue Parse(string input);
    public static bool TryParse(string input, CacheControlHeaderValue& parsedValue);
    internal static int GetCacheControlLength(string input, int startIndex, CacheControlHeaderValue storeValue, CacheControlHeaderValue& parsedValue);
    private static bool TrySetCacheControlValues(CacheControlHeaderValue cc, List`1<NameValueHeaderValue> nameValueList);
    private static bool TrySetTokenOnlyValue(NameValueHeaderValue nameValue, Boolean& boolField);
    private static bool TrySetOptionalTokenList(NameValueHeaderValue nameValue, Boolean& boolField, ObjectCollection`1& destination);
    private static bool TrySetTimeSpan(NameValueHeaderValue nameValue, Nullable`1& timeSpan);
    private static void AppendValueIfRequired(StringBuilder sb, bool appendValue, string value);
    private static void AppendValueWithSeparatorIfRequired(StringBuilder sb, string value);
    private static void AppendValues(StringBuilder sb, ObjectCollection`1<string> values);
    private static void CheckIsValidToken(string item);
    private sealed virtual override object System.ICloneable.Clone();
}
internal class System.Net.Http.Headers.ContentDispositionHeaderValue : object {
    private static string fileName;
    private static string name;
    private static string fileNameStar;
    private static string creationDate;
    private static string modificationDate;
    private static string readDate;
    private static string size;
    private ObjectCollection`1<NameValueHeaderValue> _parameters;
    private string _dispositionType;
    public string DispositionType { get; public set; }
    public ICollection`1<NameValueHeaderValue> Parameters { get; }
    public string Name { get; public set; }
    public string FileName { get; public set; }
    public string FileNameStar { get; public set; }
    public Nullable`1<DateTimeOffset> CreationDate { get; public set; }
    public Nullable`1<DateTimeOffset> ModificationDate { get; public set; }
    public Nullable`1<DateTimeOffset> ReadDate { get; public set; }
    public Nullable`1<long> Size { get; public set; }
    protected ContentDispositionHeaderValue(ContentDispositionHeaderValue source);
    public ContentDispositionHeaderValue(string dispositionType);
    public string get_DispositionType();
    public void set_DispositionType(string value);
    public ICollection`1<NameValueHeaderValue> get_Parameters();
    public string get_Name();
    public void set_Name(string value);
    public string get_FileName();
    public void set_FileName(string value);
    public string get_FileNameStar();
    public void set_FileNameStar(string value);
    public Nullable`1<DateTimeOffset> get_CreationDate();
    public void set_CreationDate(Nullable`1<DateTimeOffset> value);
    public Nullable`1<DateTimeOffset> get_ModificationDate();
    public void set_ModificationDate(Nullable`1<DateTimeOffset> value);
    public Nullable`1<DateTimeOffset> get_ReadDate();
    public void set_ReadDate(Nullable`1<DateTimeOffset> value);
    public Nullable`1<long> get_Size();
    public void set_Size(Nullable`1<long> value);
    public virtual string ToString();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override object System.ICloneable.Clone();
    public static ContentDispositionHeaderValue Parse(string input);
    public static bool TryParse(string input, ContentDispositionHeaderValue& parsedValue);
    internal static int GetDispositionTypeLength(string input, int startIndex, Object& parsedValue);
    private static int GetDispositionTypeExpressionLength(string input, int startIndex, String& dispositionType);
    private static void CheckDispositionTypeFormat(string dispositionType, string parameterName);
    private Nullable`1<DateTimeOffset> GetDate(string parameter);
    private void SetDate(string parameter, Nullable`1<DateTimeOffset> date);
    private string GetName(string parameter);
    private void SetName(string parameter, string value);
    private string EncodeAndQuoteMime(string input);
    private bool IsQuoted(string value);
    private bool RequiresEncoding(string input);
    private string EncodeMime(string input);
    private bool TryDecodeMime(string input, String& output);
    private string Encode5987(string input);
    private bool TryDecode5987(string input, String& output);
}
internal class System.Net.Http.Headers.ContentRangeHeaderValue : object {
    private string _unit;
    private Nullable`1<long> _from;
    private Nullable`1<long> _to;
    private Nullable`1<long> _length;
    public string Unit { get; public set; }
    public Nullable`1<long> From { get; }
    public Nullable`1<long> To { get; }
    public Nullable`1<long> Length { get; }
    public bool HasLength { get; }
    public bool HasRange { get; }
    public ContentRangeHeaderValue(long from, long to, long length);
    public ContentRangeHeaderValue(long length);
    public ContentRangeHeaderValue(long from, long to);
    private ContentRangeHeaderValue(ContentRangeHeaderValue source);
    public string get_Unit();
    public void set_Unit(string value);
    public Nullable`1<long> get_From();
    public Nullable`1<long> get_To();
    public Nullable`1<long> get_Length();
    public bool get_HasLength();
    public bool get_HasRange();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public virtual string ToString();
    public static ContentRangeHeaderValue Parse(string input);
    public static bool TryParse(string input, ContentRangeHeaderValue& parsedValue);
    internal static int GetContentRangeLength(string input, int startIndex, Object& parsedValue);
    private static bool TryGetLengthLength(string input, Int32& current, Int32& lengthLength);
    private static bool TryGetRangeLength(string input, Int32& current, Int32& fromLength, Int32& toStartIndex, Int32& toLength);
    private static bool TryCreateContentRange(string input, string unit, int fromStartIndex, int fromLength, int toStartIndex, int toLength, int lengthStartIndex, int lengthLength, Object& parsedValue);
    private sealed virtual override object System.ICloneable.Clone();
}
internal class System.Net.Http.Headers.DateHeaderParser : HttpHeaderParser {
    internal static DateHeaderParser Parser;
    private static DateHeaderParser();
    public virtual string ToString(object value);
    public virtual bool TryParseValue(string value, object storeValue, Int32& index, Object& parsedValue);
}
internal class System.Net.Http.Headers.EntityTagHeaderValue : object {
    private static EntityTagHeaderValue s_any;
    private string _tag;
    private bool _isWeak;
    public string Tag { get; }
    public bool IsWeak { get; }
    public static EntityTagHeaderValue Any { get; }
    public EntityTagHeaderValue(string tag);
    public EntityTagHeaderValue(string tag, bool isWeak);
    private EntityTagHeaderValue(EntityTagHeaderValue source);
    public string get_Tag();
    public bool get_IsWeak();
    public static EntityTagHeaderValue get_Any();
    public virtual string ToString();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static EntityTagHeaderValue Parse(string input);
    public static bool TryParse(string input, EntityTagHeaderValue& parsedValue);
    internal static int GetEntityTagLength(string input, int startIndex, EntityTagHeaderValue& parsedValue);
    private sealed virtual override object System.ICloneable.Clone();
}
internal class System.Net.Http.Headers.GenericHeaderParser : BaseHeaderParser {
    internal static GenericHeaderParser HostParser;
    internal static GenericHeaderParser TokenListParser;
    internal static GenericHeaderParser SingleValueNameValueWithParametersParser;
    internal static GenericHeaderParser MultipleValueNameValueWithParametersParser;
    internal static GenericHeaderParser SingleValueNameValueParser;
    internal static GenericHeaderParser MultipleValueNameValueParser;
    internal static GenericHeaderParser MailAddressParser;
    internal static GenericHeaderParser SingleValueProductParser;
    internal static GenericHeaderParser MultipleValueProductParser;
    internal static GenericHeaderParser RangeConditionParser;
    internal static GenericHeaderParser SingleValueAuthenticationParser;
    internal static GenericHeaderParser MultipleValueAuthenticationParser;
    internal static GenericHeaderParser RangeParser;
    internal static GenericHeaderParser RetryConditionParser;
    internal static GenericHeaderParser ContentRangeParser;
    internal static GenericHeaderParser ContentDispositionParser;
    internal static GenericHeaderParser SingleValueStringWithQualityParser;
    internal static GenericHeaderParser MultipleValueStringWithQualityParser;
    internal static GenericHeaderParser SingleValueEntityTagParser;
    internal static GenericHeaderParser MultipleValueEntityTagParser;
    internal static GenericHeaderParser SingleValueViaParser;
    internal static GenericHeaderParser MultipleValueViaParser;
    internal static GenericHeaderParser SingleValueWarningParser;
    internal static GenericHeaderParser MultipleValueWarningParser;
    private GetParsedValueLengthDelegate _getParsedValueLength;
    private IEqualityComparer _comparer;
    public IEqualityComparer Comparer { get; }
    private GenericHeaderParser(bool supportsMultipleValues, GetParsedValueLengthDelegate getParsedValueLength);
    private GenericHeaderParser(bool supportsMultipleValues, GetParsedValueLengthDelegate getParsedValueLength, IEqualityComparer comparer);
    private static GenericHeaderParser();
    public virtual IEqualityComparer get_Comparer();
    protected virtual int GetParsedValueLength(string value, int startIndex, object storeValue, Object& parsedValue);
    private static int ParseNameValue(string value, int startIndex, Object& parsedValue);
    private static int ParseProduct(string value, int startIndex, Object& parsedValue);
    private static int ParseSingleEntityTag(string value, int startIndex, Object& parsedValue);
    private static int ParseMultipleEntityTags(string value, int startIndex, Object& parsedValue);
    private static int ParseMailAddress(string value, int startIndex, Object& parsedValue);
    private static int ParseHost(string value, int startIndex, Object& parsedValue);
    private static int ParseTokenList(string value, int startIndex, Object& parsedValue);
}
internal static class System.Net.Http.Headers.HeaderUtilities : object {
    private static string qualityName;
    internal static string ConnectionClose;
    internal static TransferCodingHeaderValue TransferEncodingChunked;
    internal static NameValueWithParametersHeaderValue ExpectContinue;
    internal static string BytesUnit;
    internal static Action`2<HttpHeaderValueCollection`1<string>, string> TokenValidator;
    private static HeaderUtilities();
    internal static void SetQuality(ObjectCollection`1<NameValueHeaderValue> parameters, Nullable`1<double> value);
    internal static Nullable`1<double> GetQuality(ObjectCollection`1<NameValueHeaderValue> parameters);
    internal static void CheckValidToken(string value, string parameterName);
    internal static void CheckValidComment(string value, string parameterName);
    internal static void CheckValidQuotedString(string value, string parameterName);
    internal static bool AreEqualCollections(ObjectCollection`1<T> x, ObjectCollection`1<T> y);
    internal static bool AreEqualCollections(ObjectCollection`1<T> x, ObjectCollection`1<T> y, IEqualityComparer`1<T> comparer);
    internal static int GetNextNonEmptyOrWhitespaceIndex(string input, int startIndex, bool skipEmptyValues, Boolean& separatorFound);
    internal static Nullable`1<DateTimeOffset> GetDateTimeOffsetValue(string headerName, HttpHeaders store);
    internal static Nullable`1<TimeSpan> GetTimeSpanValue(string headerName, HttpHeaders store);
    internal static bool TryParseInt32(string value, Int32& result);
    internal static bool TryParseInt64(string value, Int64& result);
    internal static string DumpHeaders(HttpHeaders[] headers);
    internal static bool IsValidEmailAddress(string value);
    private static void ValidateToken(HttpHeaderValueCollection`1<string> collection, string value);
}
internal class System.Net.Http.Headers.HttpContentHeaders : HttpHeaders {
    private static Dictionary`2<string, HttpHeaderParser> s_parserStore;
    private static HashSet`1<string> s_invalidHeaders;
    private HttpContent _parent;
    private bool _contentLengthSet;
    private HttpHeaderValueCollection`1<string> _allow;
    private HttpHeaderValueCollection`1<string> _contentEncoding;
    private HttpHeaderValueCollection`1<string> _contentLanguage;
    public ICollection`1<string> Allow { get; }
    public ContentDispositionHeaderValue ContentDisposition { get; public set; }
    public ICollection`1<string> ContentEncoding { get; }
    public ICollection`1<string> ContentLanguage { get; }
    public Nullable`1<long> ContentLength { get; public set; }
    public Uri ContentLocation { get; public set; }
    public Byte[] ContentMD5 { get; public set; }
    public ContentRangeHeaderValue ContentRange { get; public set; }
    public MediaTypeHeaderValue ContentType { get; public set; }
    public Nullable`1<DateTimeOffset> Expires { get; public set; }
    public Nullable`1<DateTimeOffset> LastModified { get; public set; }
    internal HttpContentHeaders(HttpContent parent);
    private static HttpContentHeaders();
    public ICollection`1<string> get_Allow();
    public ContentDispositionHeaderValue get_ContentDisposition();
    public void set_ContentDisposition(ContentDispositionHeaderValue value);
    public ICollection`1<string> get_ContentEncoding();
    public ICollection`1<string> get_ContentLanguage();
    public Nullable`1<long> get_ContentLength();
    public void set_ContentLength(Nullable`1<long> value);
    public Uri get_ContentLocation();
    public void set_ContentLocation(Uri value);
    public Byte[] get_ContentMD5();
    public void set_ContentMD5(Byte[] value);
    public ContentRangeHeaderValue get_ContentRange();
    public void set_ContentRange(ContentRangeHeaderValue value);
    public MediaTypeHeaderValue get_ContentType();
    public void set_ContentType(MediaTypeHeaderValue value);
    public Nullable`1<DateTimeOffset> get_Expires();
    public void set_Expires(Nullable`1<DateTimeOffset> value);
    public Nullable`1<DateTimeOffset> get_LastModified();
    public void set_LastModified(Nullable`1<DateTimeOffset> value);
    private static Dictionary`2<string, HttpHeaderParser> CreateParserStore();
    private static HashSet`1<string> CreateInvalidHeaders();
    internal static void AddKnownHeaders(HashSet`1<string> headerSet);
}
internal class System.Net.Http.Headers.HttpGeneralHeaders : object {
    private HttpHeaderValueCollection`1<string> _connection;
    private HttpHeaderValueCollection`1<string> _trailer;
    private HttpHeaderValueCollection`1<TransferCodingHeaderValue> _transferEncoding;
    private HttpHeaderValueCollection`1<ProductHeaderValue> _upgrade;
    private HttpHeaderValueCollection`1<ViaHeaderValue> _via;
    private HttpHeaderValueCollection`1<WarningHeaderValue> _warning;
    private HttpHeaderValueCollection`1<NameValueHeaderValue> _pragma;
    private HttpHeaders _parent;
    private bool _transferEncodingChunkedSet;
    private bool _connectionCloseSet;
    public CacheControlHeaderValue CacheControl { get; public set; }
    public HttpHeaderValueCollection`1<string> Connection { get; }
    public Nullable`1<bool> ConnectionClose { get; public set; }
    public Nullable`1<DateTimeOffset> Date { get; public set; }
    public HttpHeaderValueCollection`1<NameValueHeaderValue> Pragma { get; }
    public HttpHeaderValueCollection`1<string> Trailer { get; }
    public HttpHeaderValueCollection`1<TransferCodingHeaderValue> TransferEncoding { get; }
    public Nullable`1<bool> TransferEncodingChunked { get; public set; }
    public HttpHeaderValueCollection`1<ProductHeaderValue> Upgrade { get; }
    public HttpHeaderValueCollection`1<ViaHeaderValue> Via { get; }
    public HttpHeaderValueCollection`1<WarningHeaderValue> Warning { get; }
    private HttpHeaderValueCollection`1<string> ConnectionCore { get; }
    private HttpHeaderValueCollection`1<TransferCodingHeaderValue> TransferEncodingCore { get; }
    internal HttpGeneralHeaders(HttpHeaders parent);
    public CacheControlHeaderValue get_CacheControl();
    public void set_CacheControl(CacheControlHeaderValue value);
    public HttpHeaderValueCollection`1<string> get_Connection();
    public Nullable`1<bool> get_ConnectionClose();
    public void set_ConnectionClose(Nullable`1<bool> value);
    public Nullable`1<DateTimeOffset> get_Date();
    public void set_Date(Nullable`1<DateTimeOffset> value);
    public HttpHeaderValueCollection`1<NameValueHeaderValue> get_Pragma();
    public HttpHeaderValueCollection`1<string> get_Trailer();
    public HttpHeaderValueCollection`1<TransferCodingHeaderValue> get_TransferEncoding();
    public Nullable`1<bool> get_TransferEncodingChunked();
    public void set_TransferEncodingChunked(Nullable`1<bool> value);
    public HttpHeaderValueCollection`1<ProductHeaderValue> get_Upgrade();
    public HttpHeaderValueCollection`1<ViaHeaderValue> get_Via();
    public HttpHeaderValueCollection`1<WarningHeaderValue> get_Warning();
    private HttpHeaderValueCollection`1<string> get_ConnectionCore();
    private HttpHeaderValueCollection`1<TransferCodingHeaderValue> get_TransferEncodingCore();
    internal static void AddParsers(Dictionary`2<string, HttpHeaderParser> parserStore);
    internal static void AddKnownHeaders(HashSet`1<string> headerSet);
    internal void AddSpecialsFrom(HttpGeneralHeaders sourceHeaders);
}
internal abstract class System.Net.Http.Headers.HttpHeaderParser : object {
    internal static string DefaultSeparator;
    private bool _supportsMultipleValues;
    private string _separator;
    public bool SupportsMultipleValues { get; }
    public string Separator { get; }
    public IEqualityComparer Comparer { get; }
    protected HttpHeaderParser(bool supportsMultipleValues);
    protected HttpHeaderParser(bool supportsMultipleValues, string separator);
    public bool get_SupportsMultipleValues();
    public string get_Separator();
    public virtual IEqualityComparer get_Comparer();
    public abstract virtual bool TryParseValue(string value, object storeValue, Int32& index, Object& parsedValue);
    public object ParseValue(string value, object storeValue, Int32& index);
    public virtual string ToString(object value);
}
internal abstract class System.Net.Http.Headers.HttpHeaders : object {
    private Dictionary`2<string, HeaderStoreItemInfo> _headerStore;
    private Dictionary`2<string, HttpHeaderParser> _parserStore;
    private HashSet`1<string> _invalidHeaders;
    public void Add(string name, string value);
    public void Add(string name, IEnumerable`1<string> values);
    public bool TryAddWithoutValidation(string name, string value);
    public bool TryAddWithoutValidation(string name, IEnumerable`1<string> values);
    public void Clear();
    public bool Remove(string name);
    public IEnumerable`1<string> GetValues(string name);
    public bool TryGetValues(string name, IEnumerable`1& values);
    public bool Contains(string name);
    public virtual string ToString();
    [IteratorStateMachineAttribute("System.Net.Http.Headers.HttpHeaders/<GetHeaderStrings>d__15")]
internal IEnumerable`1<KeyValuePair`2<string, string>> GetHeaderStrings();
    internal string GetHeaderString(string headerName);
    internal string GetHeaderString(string headerName, object exclude);
    private string GetHeaderString(HeaderStoreItemInfo info);
    private string GetHeaderString(HeaderStoreItemInfo info, object exclude);
    public sealed virtual IEnumerator`1<KeyValuePair`2<string, IEnumerable`1<string>>> GetEnumerator();
    [IteratorStateMachineAttribute("System.Net.Http.Headers.HttpHeaders/<GetEnumeratorCore>d__21")]
private IEnumerator`1<KeyValuePair`2<string, IEnumerable`1<string>>> GetEnumeratorCore();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    internal void SetConfiguration(Dictionary`2<string, HttpHeaderParser> parserStore, HashSet`1<string> invalidHeaders);
    internal void AddParsedValue(string name, object value);
    internal void SetParsedValue(string name, object value);
    internal void SetOrRemoveParsedValue(string name, object value);
    internal bool RemoveParsedValue(string name, object value);
    internal bool ContainsParsedValue(string name, object value);
    internal virtual void AddHeaders(HttpHeaders sourceHeaders);
    private void AddHeaderInfo(string headerName, HeaderStoreItemInfo sourceInfo);
    private static void CloneAndAddValue(HeaderStoreItemInfo destinationInfo, object source);
    private static object CloneStringHeaderInfoValues(object source);
    private HeaderStoreItemInfo GetOrCreateHeaderInfo(string name, bool parseRawValues);
    private HeaderStoreItemInfo CreateAndAddHeaderToStore(string name);
    private void AddHeaderToStore(string name, HeaderStoreItemInfo info);
    private bool TryGetHeaderInfo(string name, HeaderStoreItemInfo& info);
    private bool TryGetAndParseHeaderInfo(string name, HeaderStoreItemInfo& info);
    private bool ParseRawHeaderValues(string name, HeaderStoreItemInfo info, bool removeEmptyHeader);
    private static void ParseMultipleRawHeaderValues(string name, HeaderStoreItemInfo info, List`1<string> rawValues);
    private static void ParseSingleRawHeaderValue(string name, HeaderStoreItemInfo info);
    internal bool TryParseAndAddValue(string name, string value);
    private static bool TryParseAndAddRawHeaderValue(string name, HeaderStoreItemInfo info, string value, bool addWhenInvalid);
    private static void AddValue(HeaderStoreItemInfo info, object value, StoreLocation location);
    private static void AddValueToStoreValue(HeaderStoreItemInfo info, object value, Object& currentStoreValue);
    internal object GetParsedValues(string name);
    private void PrepareHeaderInfoForAdd(string name, HeaderStoreItemInfo& info, Boolean& addToStore);
    private void ParseAndAddValue(string name, HeaderStoreItemInfo info, string value);
    private HttpHeaderParser GetParser(string name);
    private void CheckHeaderName(string name);
    private bool TryCheckHeaderName(string name);
    private static void CheckInvalidNewLine(string value);
    private static bool ContainsInvalidNewLine(string value, string name);
    private static String[] GetValuesAsStrings(HeaderStoreItemInfo info);
    private static String[] GetValuesAsStrings(HeaderStoreItemInfo info, object exclude);
    private static int GetValueCount(HeaderStoreItemInfo info);
    private static void UpdateValueCount(object valueStore, Int32& valueCount);
    private static void ReadStoreValues(String[] values, object storeValue, HttpHeaderParser parser, T exclude, Int32& currentIndex);
    private static bool ShouldAdd(object storeValue, HttpHeaderParser parser, T exclude);
    private bool AreEqual(object value, object storeValue, IEqualityComparer comparer);
}
internal class System.Net.Http.Headers.HttpHeaderValueCollection`1 : object {
    private string _headerName;
    private HttpHeaders _store;
    private T _specialValue;
    private Action`2<HttpHeaderValueCollection`1<T>, T> _validator;
    public int Count { get; }
    public bool IsReadOnly { get; }
    internal bool IsSpecialValueSet { get; }
    internal HttpHeaderValueCollection`1(string headerName, HttpHeaders store);
    internal HttpHeaderValueCollection`1(string headerName, HttpHeaders store, Action`2<HttpHeaderValueCollection`1<T>, T> validator);
    internal HttpHeaderValueCollection`1(string headerName, HttpHeaders store, T specialValue);
    internal HttpHeaderValueCollection`1(string headerName, HttpHeaders store, T specialValue, Action`2<HttpHeaderValueCollection`1<T>, T> validator);
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    internal bool get_IsSpecialValueSet();
    public sealed virtual void Add(T item);
    public void ParseAdd(string input);
    public bool TryParseAdd(string input);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(T item);
    public sealed virtual void CopyTo(T[] array, int arrayIndex);
    public sealed virtual bool Remove(T item);
    [IteratorStateMachineAttribute("System.Net.Http.Headers.HttpHeaderValueCollection`1/<GetEnumerator>d__21")]
public sealed virtual IEnumerator`1<T> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public virtual string ToString();
    internal string GetHeaderStringWithoutSpecial();
    internal void SetSpecialValue();
    internal void RemoveSpecialValue();
    private void CheckValue(T item);
    private int GetCount();
}
internal class System.Net.Http.Headers.HttpRequestHeaders : HttpHeaders {
    private static Dictionary`2<string, HttpHeaderParser> s_parserStore;
    private static HashSet`1<string> s_invalidHeaders;
    private HttpGeneralHeaders _generalHeaders;
    private HttpHeaderValueCollection`1<MediaTypeWithQualityHeaderValue> _accept;
    private HttpHeaderValueCollection`1<NameValueWithParametersHeaderValue> _expect;
    private bool _expectContinueSet;
    private HttpHeaderValueCollection`1<EntityTagHeaderValue> _ifMatch;
    private HttpHeaderValueCollection`1<EntityTagHeaderValue> _ifNoneMatch;
    private HttpHeaderValueCollection`1<TransferCodingWithQualityHeaderValue> _te;
    private HttpHeaderValueCollection`1<ProductInfoHeaderValue> _userAgent;
    private HttpHeaderValueCollection`1<StringWithQualityHeaderValue> _acceptCharset;
    private HttpHeaderValueCollection`1<StringWithQualityHeaderValue> _acceptEncoding;
    private HttpHeaderValueCollection`1<StringWithQualityHeaderValue> _acceptLanguage;
    public HttpHeaderValueCollection`1<MediaTypeWithQualityHeaderValue> Accept { get; }
    public HttpHeaderValueCollection`1<StringWithQualityHeaderValue> AcceptCharset { get; }
    public HttpHeaderValueCollection`1<StringWithQualityHeaderValue> AcceptEncoding { get; }
    public HttpHeaderValueCollection`1<StringWithQualityHeaderValue> AcceptLanguage { get; }
    public AuthenticationHeaderValue Authorization { get; public set; }
    public HttpHeaderValueCollection`1<NameValueWithParametersHeaderValue> Expect { get; }
    public Nullable`1<bool> ExpectContinue { get; public set; }
    public string From { get; public set; }
    public string Host { get; public set; }
    public HttpHeaderValueCollection`1<EntityTagHeaderValue> IfMatch { get; }
    public Nullable`1<DateTimeOffset> IfModifiedSince { get; public set; }
    public HttpHeaderValueCollection`1<EntityTagHeaderValue> IfNoneMatch { get; }
    public RangeConditionHeaderValue IfRange { get; public set; }
    public Nullable`1<DateTimeOffset> IfUnmodifiedSince { get; public set; }
    public Nullable`1<int> MaxForwards { get; public set; }
    public AuthenticationHeaderValue ProxyAuthorization { get; public set; }
    public RangeHeaderValue Range { get; public set; }
    public Uri Referrer { get; public set; }
    public HttpHeaderValueCollection`1<TransferCodingWithQualityHeaderValue> TE { get; }
    public HttpHeaderValueCollection`1<ProductInfoHeaderValue> UserAgent { get; }
    private HttpHeaderValueCollection`1<NameValueWithParametersHeaderValue> ExpectCore { get; }
    public CacheControlHeaderValue CacheControl { get; public set; }
    public HttpHeaderValueCollection`1<string> Connection { get; }
    public Nullable`1<bool> ConnectionClose { get; public set; }
    public Nullable`1<DateTimeOffset> Date { get; public set; }
    public HttpHeaderValueCollection`1<NameValueHeaderValue> Pragma { get; }
    public HttpHeaderValueCollection`1<string> Trailer { get; }
    public HttpHeaderValueCollection`1<TransferCodingHeaderValue> TransferEncoding { get; }
    public Nullable`1<bool> TransferEncodingChunked { get; public set; }
    public HttpHeaderValueCollection`1<ProductHeaderValue> Upgrade { get; }
    public HttpHeaderValueCollection`1<ViaHeaderValue> Via { get; }
    public HttpHeaderValueCollection`1<WarningHeaderValue> Warning { get; }
    private static HttpRequestHeaders();
    public HttpHeaderValueCollection`1<MediaTypeWithQualityHeaderValue> get_Accept();
    public HttpHeaderValueCollection`1<StringWithQualityHeaderValue> get_AcceptCharset();
    public HttpHeaderValueCollection`1<StringWithQualityHeaderValue> get_AcceptEncoding();
    public HttpHeaderValueCollection`1<StringWithQualityHeaderValue> get_AcceptLanguage();
    public AuthenticationHeaderValue get_Authorization();
    public void set_Authorization(AuthenticationHeaderValue value);
    public HttpHeaderValueCollection`1<NameValueWithParametersHeaderValue> get_Expect();
    public Nullable`1<bool> get_ExpectContinue();
    public void set_ExpectContinue(Nullable`1<bool> value);
    public string get_From();
    public void set_From(string value);
    public string get_Host();
    public void set_Host(string value);
    public HttpHeaderValueCollection`1<EntityTagHeaderValue> get_IfMatch();
    public Nullable`1<DateTimeOffset> get_IfModifiedSince();
    public void set_IfModifiedSince(Nullable`1<DateTimeOffset> value);
    public HttpHeaderValueCollection`1<EntityTagHeaderValue> get_IfNoneMatch();
    public RangeConditionHeaderValue get_IfRange();
    public void set_IfRange(RangeConditionHeaderValue value);
    public Nullable`1<DateTimeOffset> get_IfUnmodifiedSince();
    public void set_IfUnmodifiedSince(Nullable`1<DateTimeOffset> value);
    public Nullable`1<int> get_MaxForwards();
    public void set_MaxForwards(Nullable`1<int> value);
    public AuthenticationHeaderValue get_ProxyAuthorization();
    public void set_ProxyAuthorization(AuthenticationHeaderValue value);
    public RangeHeaderValue get_Range();
    public void set_Range(RangeHeaderValue value);
    public Uri get_Referrer();
    public void set_Referrer(Uri value);
    public HttpHeaderValueCollection`1<TransferCodingWithQualityHeaderValue> get_TE();
    public HttpHeaderValueCollection`1<ProductInfoHeaderValue> get_UserAgent();
    private HttpHeaderValueCollection`1<NameValueWithParametersHeaderValue> get_ExpectCore();
    public CacheControlHeaderValue get_CacheControl();
    public void set_CacheControl(CacheControlHeaderValue value);
    public HttpHeaderValueCollection`1<string> get_Connection();
    public Nullable`1<bool> get_ConnectionClose();
    public void set_ConnectionClose(Nullable`1<bool> value);
    public Nullable`1<DateTimeOffset> get_Date();
    public void set_Date(Nullable`1<DateTimeOffset> value);
    public HttpHeaderValueCollection`1<NameValueHeaderValue> get_Pragma();
    public HttpHeaderValueCollection`1<string> get_Trailer();
    public HttpHeaderValueCollection`1<TransferCodingHeaderValue> get_TransferEncoding();
    public Nullable`1<bool> get_TransferEncodingChunked();
    public void set_TransferEncodingChunked(Nullable`1<bool> value);
    public HttpHeaderValueCollection`1<ProductHeaderValue> get_Upgrade();
    public HttpHeaderValueCollection`1<ViaHeaderValue> get_Via();
    public HttpHeaderValueCollection`1<WarningHeaderValue> get_Warning();
    private static Dictionary`2<string, HttpHeaderParser> CreateParserStore();
    private static HashSet`1<string> CreateInvalidHeaders();
    internal static void AddKnownHeaders(HashSet`1<string> headerSet);
    internal virtual void AddHeaders(HttpHeaders sourceHeaders);
}
internal class System.Net.Http.Headers.HttpResponseHeaders : HttpHeaders {
    private static Dictionary`2<string, HttpHeaderParser> s_parserStore;
    private static HashSet`1<string> s_invalidHeaders;
    private HttpGeneralHeaders _generalHeaders;
    private HttpHeaderValueCollection`1<string> _acceptRanges;
    private HttpHeaderValueCollection`1<AuthenticationHeaderValue> _wwwAuthenticate;
    private HttpHeaderValueCollection`1<AuthenticationHeaderValue> _proxyAuthenticate;
    private HttpHeaderValueCollection`1<ProductInfoHeaderValue> _server;
    private HttpHeaderValueCollection`1<string> _vary;
    public HttpHeaderValueCollection`1<string> AcceptRanges { get; }
    public Nullable`1<TimeSpan> Age { get; public set; }
    public EntityTagHeaderValue ETag { get; public set; }
    public Uri Location { get; public set; }
    public HttpHeaderValueCollection`1<AuthenticationHeaderValue> ProxyAuthenticate { get; }
    public RetryConditionHeaderValue RetryAfter { get; public set; }
    public HttpHeaderValueCollection`1<ProductInfoHeaderValue> Server { get; }
    public HttpHeaderValueCollection`1<string> Vary { get; }
    public HttpHeaderValueCollection`1<AuthenticationHeaderValue> WwwAuthenticate { get; }
    public CacheControlHeaderValue CacheControl { get; public set; }
    public HttpHeaderValueCollection`1<string> Connection { get; }
    public Nullable`1<bool> ConnectionClose { get; public set; }
    public Nullable`1<DateTimeOffset> Date { get; public set; }
    public HttpHeaderValueCollection`1<NameValueHeaderValue> Pragma { get; }
    public HttpHeaderValueCollection`1<string> Trailer { get; }
    public HttpHeaderValueCollection`1<TransferCodingHeaderValue> TransferEncoding { get; }
    public Nullable`1<bool> TransferEncodingChunked { get; public set; }
    public HttpHeaderValueCollection`1<ProductHeaderValue> Upgrade { get; }
    public HttpHeaderValueCollection`1<ViaHeaderValue> Via { get; }
    public HttpHeaderValueCollection`1<WarningHeaderValue> Warning { get; }
    private static HttpResponseHeaders();
    public HttpHeaderValueCollection`1<string> get_AcceptRanges();
    public Nullable`1<TimeSpan> get_Age();
    public void set_Age(Nullable`1<TimeSpan> value);
    public EntityTagHeaderValue get_ETag();
    public void set_ETag(EntityTagHeaderValue value);
    public Uri get_Location();
    public void set_Location(Uri value);
    public HttpHeaderValueCollection`1<AuthenticationHeaderValue> get_ProxyAuthenticate();
    public RetryConditionHeaderValue get_RetryAfter();
    public void set_RetryAfter(RetryConditionHeaderValue value);
    public HttpHeaderValueCollection`1<ProductInfoHeaderValue> get_Server();
    public HttpHeaderValueCollection`1<string> get_Vary();
    public HttpHeaderValueCollection`1<AuthenticationHeaderValue> get_WwwAuthenticate();
    public CacheControlHeaderValue get_CacheControl();
    public void set_CacheControl(CacheControlHeaderValue value);
    public HttpHeaderValueCollection`1<string> get_Connection();
    public Nullable`1<bool> get_ConnectionClose();
    public void set_ConnectionClose(Nullable`1<bool> value);
    public Nullable`1<DateTimeOffset> get_Date();
    public void set_Date(Nullable`1<DateTimeOffset> value);
    public HttpHeaderValueCollection`1<NameValueHeaderValue> get_Pragma();
    public HttpHeaderValueCollection`1<string> get_Trailer();
    public HttpHeaderValueCollection`1<TransferCodingHeaderValue> get_TransferEncoding();
    public Nullable`1<bool> get_TransferEncodingChunked();
    public void set_TransferEncodingChunked(Nullable`1<bool> value);
    public HttpHeaderValueCollection`1<ProductHeaderValue> get_Upgrade();
    public HttpHeaderValueCollection`1<ViaHeaderValue> get_Via();
    public HttpHeaderValueCollection`1<WarningHeaderValue> get_Warning();
    private static Dictionary`2<string, HttpHeaderParser> CreateParserStore();
    private static HashSet`1<string> CreateInvalidHeaders();
    internal static void AddKnownHeaders(HashSet`1<string> headerSet);
    internal virtual void AddHeaders(HttpHeaders sourceHeaders);
}
internal class System.Net.Http.Headers.Int32NumberHeaderParser : BaseHeaderParser {
    internal static Int32NumberHeaderParser Parser;
    private static Int32NumberHeaderParser();
    public virtual string ToString(object value);
    protected virtual int GetParsedValueLength(string value, int startIndex, object storeValue, Object& parsedValue);
}
internal class System.Net.Http.Headers.Int64NumberHeaderParser : BaseHeaderParser {
    internal static Int64NumberHeaderParser Parser;
    private static Int64NumberHeaderParser();
    public virtual string ToString(object value);
    protected virtual int GetParsedValueLength(string value, int startIndex, object storeValue, Object& parsedValue);
}
internal class System.Net.Http.Headers.MediaTypeHeaderParser : BaseHeaderParser {
    private bool _supportsMultipleValues;
    private Func`1<MediaTypeHeaderValue> _mediaTypeCreator;
    internal static MediaTypeHeaderParser SingleValueParser;
    internal static MediaTypeHeaderParser SingleValueWithQualityParser;
    internal static MediaTypeHeaderParser MultipleValuesParser;
    private MediaTypeHeaderParser(bool supportsMultipleValues, Func`1<MediaTypeHeaderValue> mediaTypeCreator);
    private static MediaTypeHeaderParser();
    protected virtual int GetParsedValueLength(string value, int startIndex, object storeValue, Object& parsedValue);
    private static MediaTypeHeaderValue CreateMediaType();
    private static MediaTypeHeaderValue CreateMediaTypeWithQuality();
}
internal class System.Net.Http.Headers.MediaTypeHeaderValue : object {
    private static string charSet;
    private ObjectCollection`1<NameValueHeaderValue> _parameters;
    private string _mediaType;
    public string CharSet { get; public set; }
    public ICollection`1<NameValueHeaderValue> Parameters { get; }
    public string MediaType { get; public set; }
    protected MediaTypeHeaderValue(MediaTypeHeaderValue source);
    public MediaTypeHeaderValue(string mediaType);
    public string get_CharSet();
    public void set_CharSet(string value);
    public ICollection`1<NameValueHeaderValue> get_Parameters();
    public string get_MediaType();
    public void set_MediaType(string value);
    public virtual string ToString();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static MediaTypeHeaderValue Parse(string input);
    public static bool TryParse(string input, MediaTypeHeaderValue& parsedValue);
    internal static int GetMediaTypeLength(string input, int startIndex, Func`1<MediaTypeHeaderValue> mediaTypeCreator, MediaTypeHeaderValue& parsedValue);
    private static int GetMediaTypeExpressionLength(string input, int startIndex, String& mediaType);
    private static void CheckMediaTypeFormat(string mediaType, string parameterName);
    private sealed virtual override object System.ICloneable.Clone();
}
internal class System.Net.Http.Headers.MediaTypeWithQualityHeaderValue : MediaTypeHeaderValue {
    public Nullable`1<double> Quality { get; public set; }
    public MediaTypeWithQualityHeaderValue(string mediaType);
    public MediaTypeWithQualityHeaderValue(string mediaType, double quality);
    private MediaTypeWithQualityHeaderValue(MediaTypeWithQualityHeaderValue source);
    public Nullable`1<double> get_Quality();
    public void set_Quality(Nullable`1<double> value);
    private sealed virtual override object System.ICloneable.Clone();
    public static MediaTypeWithQualityHeaderValue Parse(string input);
    public static bool TryParse(string input, MediaTypeWithQualityHeaderValue& parsedValue);
}
internal class System.Net.Http.Headers.NameValueHeaderValue : object {
    private static Func`1<NameValueHeaderValue> s_defaultNameValueCreator;
    private string _name;
    private string _value;
    public string Name { get; }
    public string Value { get; public set; }
    public NameValueHeaderValue(string name);
    public NameValueHeaderValue(string name, string value);
    protected NameValueHeaderValue(NameValueHeaderValue source);
    private static NameValueHeaderValue();
    public string get_Name();
    public string get_Value();
    public void set_Value(string value);
    public virtual int GetHashCode();
    public virtual bool Equals(object obj);
    public static NameValueHeaderValue Parse(string input);
    public static bool TryParse(string input, NameValueHeaderValue& parsedValue);
    public virtual string ToString();
    private void AddToStringBuilder(StringBuilder sb);
    internal static void ToString(ObjectCollection`1<NameValueHeaderValue> values, char separator, bool leadingSeparator, StringBuilder destination);
    internal static int GetHashCode(ObjectCollection`1<NameValueHeaderValue> values);
    internal static int GetNameValueLength(string input, int startIndex, NameValueHeaderValue& parsedValue);
    internal static int GetNameValueLength(string input, int startIndex, Func`1<NameValueHeaderValue> nameValueCreator, NameValueHeaderValue& parsedValue);
    internal static int GetNameValueListLength(string input, int startIndex, char delimiter, ObjectCollection`1<NameValueHeaderValue> nameValueCollection);
    internal static NameValueHeaderValue Find(ObjectCollection`1<NameValueHeaderValue> values, string name);
    internal static int GetValueLength(string input, int startIndex);
    private static void CheckNameValueFormat(string name, string value);
    private static void CheckValueFormat(string value);
    private static NameValueHeaderValue CreateNameValue();
    private sealed virtual override object System.ICloneable.Clone();
}
internal class System.Net.Http.Headers.NameValueWithParametersHeaderValue : NameValueHeaderValue {
    private static Func`1<NameValueHeaderValue> s_nameValueCreator;
    private ObjectCollection`1<NameValueHeaderValue> _parameters;
    public ICollection`1<NameValueHeaderValue> Parameters { get; }
    public NameValueWithParametersHeaderValue(string name);
    public NameValueWithParametersHeaderValue(string name, string value);
    protected NameValueWithParametersHeaderValue(NameValueWithParametersHeaderValue source);
    private static NameValueWithParametersHeaderValue();
    public ICollection`1<NameValueHeaderValue> get_Parameters();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public virtual string ToString();
    public static NameValueWithParametersHeaderValue Parse(string input);
    public static bool TryParse(string input, NameValueWithParametersHeaderValue& parsedValue);
    internal static int GetNameValueWithParametersLength(string input, int startIndex, Object& parsedValue);
    private static NameValueHeaderValue CreateNameValue();
    private sealed virtual override object System.ICloneable.Clone();
}
internal class System.Net.Http.Headers.ObjectCollection`1 : Collection`1<T> {
    private static Action`1<T> s_defaultValidator;
    private Action`1<T> _validator;
    public ObjectCollection`1(Action`1<T> validator);
    private static ObjectCollection`1();
    public Enumerator<T> GetEnumerator();
    protected virtual void InsertItem(int index, T item);
    protected virtual void SetItem(int index, T item);
    private static void CheckNotNull(T item);
}
internal class System.Net.Http.Headers.ProductHeaderValue : object {
    private string _name;
    private string _version;
    public string Name { get; }
    public string Version { get; }
    public ProductHeaderValue(string name);
    public ProductHeaderValue(string name, string version);
    private ProductHeaderValue(ProductHeaderValue source);
    public string get_Name();
    public string get_Version();
    public virtual string ToString();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static ProductHeaderValue Parse(string input);
    public static bool TryParse(string input, ProductHeaderValue& parsedValue);
    internal static int GetProductLength(string input, int startIndex, ProductHeaderValue& parsedValue);
    private sealed virtual override object System.ICloneable.Clone();
}
internal class System.Net.Http.Headers.ProductInfoHeaderParser : HttpHeaderParser {
    private static string separator;
    internal static ProductInfoHeaderParser SingleValueParser;
    internal static ProductInfoHeaderParser MultipleValueParser;
    private ProductInfoHeaderParser(bool supportsMultipleValues);
    private static ProductInfoHeaderParser();
    public virtual bool TryParseValue(string value, object storeValue, Int32& index, Object& parsedValue);
}
internal class System.Net.Http.Headers.ProductInfoHeaderValue : object {
    private ProductHeaderValue _product;
    private string _comment;
    public ProductHeaderValue Product { get; }
    public string Comment { get; }
    public ProductInfoHeaderValue(string productName, string productVersion);
    public ProductInfoHeaderValue(ProductHeaderValue product);
    public ProductInfoHeaderValue(string comment);
    private ProductInfoHeaderValue(ProductInfoHeaderValue source);
    public ProductHeaderValue get_Product();
    public string get_Comment();
    public virtual string ToString();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static ProductInfoHeaderValue Parse(string input);
    public static bool TryParse(string input, ProductInfoHeaderValue& parsedValue);
    internal static int GetProductInfoLength(string input, int startIndex, ProductInfoHeaderValue& parsedValue);
    private sealed virtual override object System.ICloneable.Clone();
}
internal class System.Net.Http.Headers.RangeConditionHeaderValue : object {
    private Nullable`1<DateTimeOffset> _date;
    private EntityTagHeaderValue _entityTag;
    public Nullable`1<DateTimeOffset> Date { get; }
    public EntityTagHeaderValue EntityTag { get; }
    public RangeConditionHeaderValue(DateTimeOffset date);
    public RangeConditionHeaderValue(EntityTagHeaderValue entityTag);
    public RangeConditionHeaderValue(string entityTag);
    private RangeConditionHeaderValue(RangeConditionHeaderValue source);
    public Nullable`1<DateTimeOffset> get_Date();
    public EntityTagHeaderValue get_EntityTag();
    public virtual string ToString();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static RangeConditionHeaderValue Parse(string input);
    public static bool TryParse(string input, RangeConditionHeaderValue& parsedValue);
    internal static int GetRangeConditionLength(string input, int startIndex, Object& parsedValue);
    private sealed virtual override object System.ICloneable.Clone();
}
internal class System.Net.Http.Headers.RangeHeaderValue : object {
    private string _unit;
    private ObjectCollection`1<RangeItemHeaderValue> _ranges;
    public string Unit { get; public set; }
    public ICollection`1<RangeItemHeaderValue> Ranges { get; }
    public RangeHeaderValue(Nullable`1<long> from, Nullable`1<long> to);
    private RangeHeaderValue(RangeHeaderValue source);
    public string get_Unit();
    public void set_Unit(string value);
    public ICollection`1<RangeItemHeaderValue> get_Ranges();
    public virtual string ToString();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static RangeHeaderValue Parse(string input);
    public static bool TryParse(string input, RangeHeaderValue& parsedValue);
    internal static int GetRangeLength(string input, int startIndex, Object& parsedValue);
    private sealed virtual override object System.ICloneable.Clone();
}
internal class System.Net.Http.Headers.RangeItemHeaderValue : object {
    private Nullable`1<long> _from;
    private Nullable`1<long> _to;
    public Nullable`1<long> From { get; }
    public Nullable`1<long> To { get; }
    public RangeItemHeaderValue(Nullable`1<long> from, Nullable`1<long> to);
    private RangeItemHeaderValue(RangeItemHeaderValue source);
    public Nullable`1<long> get_From();
    public Nullable`1<long> get_To();
    public virtual string ToString();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    internal static int GetRangeItemListLength(string input, int startIndex, ICollection`1<RangeItemHeaderValue> rangeCollection);
    internal static int GetRangeItemLength(string input, int startIndex, RangeItemHeaderValue& parsedValue);
    private sealed virtual override object System.ICloneable.Clone();
}
internal class System.Net.Http.Headers.RetryConditionHeaderValue : object {
    private Nullable`1<DateTimeOffset> _date;
    private Nullable`1<TimeSpan> _delta;
    public Nullable`1<DateTimeOffset> Date { get; }
    public Nullable`1<TimeSpan> Delta { get; }
    public RetryConditionHeaderValue(DateTimeOffset date);
    public RetryConditionHeaderValue(TimeSpan delta);
    private RetryConditionHeaderValue(RetryConditionHeaderValue source);
    public Nullable`1<DateTimeOffset> get_Date();
    public Nullable`1<TimeSpan> get_Delta();
    public virtual string ToString();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static RetryConditionHeaderValue Parse(string input);
    public static bool TryParse(string input, RetryConditionHeaderValue& parsedValue);
    internal static int GetRetryConditionLength(string input, int startIndex, Object& parsedValue);
    private sealed virtual override object System.ICloneable.Clone();
}
internal class System.Net.Http.Headers.StringWithQualityHeaderValue : object {
    private string _value;
    private Nullable`1<double> _quality;
    public string Value { get; }
    public Nullable`1<double> Quality { get; }
    public StringWithQualityHeaderValue(string value);
    public StringWithQualityHeaderValue(string value, double quality);
    private StringWithQualityHeaderValue(StringWithQualityHeaderValue source);
    public string get_Value();
    public Nullable`1<double> get_Quality();
    public virtual string ToString();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static StringWithQualityHeaderValue Parse(string input);
    public static bool TryParse(string input, StringWithQualityHeaderValue& parsedValue);
    internal static int GetStringWithQualityLength(string input, int startIndex, Object& parsedValue);
    private static bool TryReadQuality(string input, StringWithQualityHeaderValue result, Int32& index);
    private sealed virtual override object System.ICloneable.Clone();
}
internal class System.Net.Http.Headers.TimeSpanHeaderParser : BaseHeaderParser {
    internal static TimeSpanHeaderParser Parser;
    private static TimeSpanHeaderParser();
    public virtual string ToString(object value);
    protected virtual int GetParsedValueLength(string value, int startIndex, object storeValue, Object& parsedValue);
}
internal class System.Net.Http.Headers.TransferCodingHeaderParser : BaseHeaderParser {
    private Func`1<TransferCodingHeaderValue> _transferCodingCreator;
    internal static TransferCodingHeaderParser SingleValueParser;
    internal static TransferCodingHeaderParser MultipleValueParser;
    internal static TransferCodingHeaderParser SingleValueWithQualityParser;
    internal static TransferCodingHeaderParser MultipleValueWithQualityParser;
    private TransferCodingHeaderParser(bool supportsMultipleValues, Func`1<TransferCodingHeaderValue> transferCodingCreator);
    private static TransferCodingHeaderParser();
    protected virtual int GetParsedValueLength(string value, int startIndex, object storeValue, Object& parsedValue);
    private static TransferCodingHeaderValue CreateTransferCoding();
    private static TransferCodingHeaderValue CreateTransferCodingWithQuality();
}
internal class System.Net.Http.Headers.TransferCodingHeaderValue : object {
    private ObjectCollection`1<NameValueHeaderValue> _parameters;
    private string _value;
    public string Value { get; }
    public ICollection`1<NameValueHeaderValue> Parameters { get; }
    protected TransferCodingHeaderValue(TransferCodingHeaderValue source);
    public TransferCodingHeaderValue(string value);
    public string get_Value();
    public ICollection`1<NameValueHeaderValue> get_Parameters();
    public static TransferCodingHeaderValue Parse(string input);
    public static bool TryParse(string input, TransferCodingHeaderValue& parsedValue);
    internal static int GetTransferCodingLength(string input, int startIndex, Func`1<TransferCodingHeaderValue> transferCodingCreator, TransferCodingHeaderValue& parsedValue);
    public virtual string ToString();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    private sealed virtual override object System.ICloneable.Clone();
}
internal class System.Net.Http.Headers.TransferCodingWithQualityHeaderValue : TransferCodingHeaderValue {
    public Nullable`1<double> Quality { get; public set; }
    public TransferCodingWithQualityHeaderValue(string value);
    public TransferCodingWithQualityHeaderValue(string value, double quality);
    private TransferCodingWithQualityHeaderValue(TransferCodingWithQualityHeaderValue source);
    public Nullable`1<double> get_Quality();
    public void set_Quality(Nullable`1<double> value);
    private sealed virtual override object System.ICloneable.Clone();
    public static TransferCodingWithQualityHeaderValue Parse(string input);
    public static bool TryParse(string input, TransferCodingWithQualityHeaderValue& parsedValue);
}
internal class System.Net.Http.Headers.UriHeaderParser : HttpHeaderParser {
    private UriKind _uriKind;
    internal static UriHeaderParser RelativeOrAbsoluteUriParser;
    private UriHeaderParser(UriKind uriKind);
    private static UriHeaderParser();
    public virtual bool TryParseValue(string value, object storeValue, Int32& index, Object& parsedValue);
    internal static string DecodeUtf8FromString(string input);
    public virtual string ToString(object value);
}
internal class System.Net.Http.Headers.ViaHeaderValue : object {
    private string _protocolName;
    private string _protocolVersion;
    private string _receivedBy;
    private string _comment;
    public string ProtocolName { get; }
    public string ProtocolVersion { get; }
    public string ReceivedBy { get; }
    public string Comment { get; }
    public ViaHeaderValue(string protocolVersion, string receivedBy);
    public ViaHeaderValue(string protocolVersion, string receivedBy, string protocolName);
    public ViaHeaderValue(string protocolVersion, string receivedBy, string protocolName, string comment);
    private ViaHeaderValue(ViaHeaderValue source);
    public string get_ProtocolName();
    public string get_ProtocolVersion();
    public string get_ReceivedBy();
    public string get_Comment();
    public virtual string ToString();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static ViaHeaderValue Parse(string input);
    public static bool TryParse(string input, ViaHeaderValue& parsedValue);
    internal static int GetViaLength(string input, int startIndex, Object& parsedValue);
    private static int GetProtocolEndIndex(string input, int startIndex, String& protocolName, String& protocolVersion);
    private sealed virtual override object System.ICloneable.Clone();
    private static void CheckReceivedBy(string receivedBy);
}
internal class System.Net.Http.Headers.WarningHeaderValue : object {
    private int _code;
    private string _agent;
    private string _text;
    private Nullable`1<DateTimeOffset> _date;
    public int Code { get; }
    public string Agent { get; }
    public string Text { get; }
    public Nullable`1<DateTimeOffset> Date { get; }
    public WarningHeaderValue(int code, string agent, string text);
    public WarningHeaderValue(int code, string agent, string text, DateTimeOffset date);
    private WarningHeaderValue(WarningHeaderValue source);
    public int get_Code();
    public string get_Agent();
    public string get_Text();
    public Nullable`1<DateTimeOffset> get_Date();
    public virtual string ToString();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static WarningHeaderValue Parse(string input);
    public static bool TryParse(string input, WarningHeaderValue& parsedValue);
    internal static int GetWarningLength(string input, int startIndex, Object& parsedValue);
    private static bool TryReadAgent(string input, int startIndex, Int32& current, String& agent);
    private static bool TryReadCode(string input, Int32& current, Int32& code);
    private static bool TryReadDate(string input, Int32& current, Nullable`1& date);
    private sealed virtual override object System.ICloneable.Clone();
    private static void CheckCode(int code);
    private static void CheckAgent(string agent);
}
internal class System.Net.Http.HttpClient : HttpMessageInvoker {
    private static TimeSpan s_defaultTimeout;
    private static TimeSpan s_maxTimeout;
    private static TimeSpan s_infiniteTimeout;
    private static HttpCompletionOption defaultCompletionOption;
    private Boolean modreq(System.Runtime.CompilerServices.IsVolatile) _operationStarted;
    private Boolean modreq(System.Runtime.CompilerServices.IsVolatile) _disposed;
    private CancellationTokenSource _pendingRequestsCts;
    private HttpRequestHeaders _defaultRequestHeaders;
    private Uri _baseAddress;
    private TimeSpan _timeout;
    private int _maxResponseContentBufferSize;
    public HttpRequestHeaders DefaultRequestHeaders { get; }
    public Uri BaseAddress { get; public set; }
    public TimeSpan Timeout { get; public set; }
    public long MaxResponseContentBufferSize { get; public set; }
    public HttpClient(HttpMessageHandler handler);
    public HttpClient(HttpMessageHandler handler, bool disposeHandler);
    private static HttpClient();
    public HttpRequestHeaders get_DefaultRequestHeaders();
    public Uri get_BaseAddress();
    public void set_BaseAddress(Uri value);
    public TimeSpan get_Timeout();
    public void set_Timeout(TimeSpan value);
    public long get_MaxResponseContentBufferSize();
    public void set_MaxResponseContentBufferSize(long value);
    public Task`1<string> GetStringAsync(string requestUri);
    public Task`1<string> GetStringAsync(Uri requestUri);
    [AsyncStateMachineAttribute("System.Net.Http.HttpClient/<GetStringAsyncCore>d__27")]
private Task`1<string> GetStringAsyncCore(Task`1<HttpResponseMessage> getTask);
    public Task`1<Byte[]> GetByteArrayAsync(string requestUri);
    public Task`1<Byte[]> GetByteArrayAsync(Uri requestUri);
    [AsyncStateMachineAttribute("System.Net.Http.HttpClient/<GetByteArrayAsyncCore>d__30")]
private Task`1<Byte[]> GetByteArrayAsyncCore(Task`1<HttpResponseMessage> getTask);
    public Task`1<Stream> GetStreamAsync(string requestUri);
    public Task`1<Stream> GetStreamAsync(Uri requestUri);
    [AsyncStateMachineAttribute("System.Net.Http.HttpClient/<FinishGetStreamAsync>d__33")]
private Task`1<Stream> FinishGetStreamAsync(Task`1<HttpResponseMessage> getTask);
    public Task`1<HttpResponseMessage> GetAsync(string requestUri);
    public Task`1<HttpResponseMessage> GetAsync(Uri requestUri);
    public Task`1<HttpResponseMessage> GetAsync(string requestUri, HttpCompletionOption completionOption);
    public Task`1<HttpResponseMessage> GetAsync(Uri requestUri, HttpCompletionOption completionOption);
    public Task`1<HttpResponseMessage> GetAsync(string requestUri, CancellationToken cancellationToken);
    public Task`1<HttpResponseMessage> GetAsync(Uri requestUri, CancellationToken cancellationToken);
    public Task`1<HttpResponseMessage> GetAsync(string requestUri, HttpCompletionOption completionOption, CancellationToken cancellationToken);
    public Task`1<HttpResponseMessage> GetAsync(Uri requestUri, HttpCompletionOption completionOption, CancellationToken cancellationToken);
    public Task`1<HttpResponseMessage> PostAsync(string requestUri, HttpContent content);
    public Task`1<HttpResponseMessage> PostAsync(Uri requestUri, HttpContent content);
    public Task`1<HttpResponseMessage> PostAsync(string requestUri, HttpContent content, CancellationToken cancellationToken);
    public Task`1<HttpResponseMessage> PostAsync(Uri requestUri, HttpContent content, CancellationToken cancellationToken);
    public Task`1<HttpResponseMessage> PutAsync(string requestUri, HttpContent content);
    public Task`1<HttpResponseMessage> PutAsync(Uri requestUri, HttpContent content);
    public Task`1<HttpResponseMessage> PutAsync(string requestUri, HttpContent content, CancellationToken cancellationToken);
    public Task`1<HttpResponseMessage> PutAsync(Uri requestUri, HttpContent content, CancellationToken cancellationToken);
    public Task`1<HttpResponseMessage> DeleteAsync(string requestUri);
    public Task`1<HttpResponseMessage> DeleteAsync(Uri requestUri);
    public Task`1<HttpResponseMessage> DeleteAsync(string requestUri, CancellationToken cancellationToken);
    public Task`1<HttpResponseMessage> DeleteAsync(Uri requestUri, CancellationToken cancellationToken);
    public Task`1<HttpResponseMessage> SendAsync(HttpRequestMessage request);
    public virtual Task`1<HttpResponseMessage> SendAsync(HttpRequestMessage request, CancellationToken cancellationToken);
    public Task`1<HttpResponseMessage> SendAsync(HttpRequestMessage request, HttpCompletionOption completionOption);
    public Task`1<HttpResponseMessage> SendAsync(HttpRequestMessage request, HttpCompletionOption completionOption, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("System.Net.Http.HttpClient/<FinishSendAsyncBuffered>d__58")]
private Task`1<HttpResponseMessage> FinishSendAsyncBuffered(Task`1<HttpResponseMessage> sendTask, HttpRequestMessage request, CancellationTokenSource cts, bool disposeCts);
    [AsyncStateMachineAttribute("System.Net.Http.HttpClient/<FinishSendAsyncUnbuffered>d__59")]
private Task`1<HttpResponseMessage> FinishSendAsyncUnbuffered(Task`1<HttpResponseMessage> sendTask, HttpRequestMessage request, CancellationTokenSource cts, bool disposeCts);
    private void HandleFinishSendAsyncError(Exception e, CancellationTokenSource cts);
    private void HandleFinishSendAsyncCleanup(CancellationTokenSource cts, bool disposeCts);
    public void CancelPendingRequests();
    protected virtual void Dispose(bool disposing);
    private void SetOperationStarted();
    private void CheckDisposedOrStarted();
    private void CheckDisposed();
    private static void CheckRequestMessage(HttpRequestMessage request);
    private void PrepareRequestMessage(HttpRequestMessage request);
    private static void CheckBaseAddress(Uri baseAddress, string parameterName);
    private Uri CreateUri(string uri);
}
internal class System.Net.Http.HttpClientHandler : HttpMessageHandler {
    private static Action`1<object> s_onCancel;
    private Action`1<object> _startRequest;
    private AsyncCallback _getRequestStreamCallback;
    private AsyncCallback _getResponseCallback;
    private Boolean modreq(System.Runtime.CompilerServices.IsVolatile) _operationStarted;
    private Boolean modreq(System.Runtime.CompilerServices.IsVolatile) _disposed;
    private long _maxRequestContentBufferSize;
    private int _maxResponseHeadersLength;
    private CookieContainer _cookieContainer;
    private bool _useCookies;
    private DecompressionMethods _automaticDecompression;
    private IWebProxy _proxy;
    private bool _useProxy;
    private ICredentials _defaultProxyCredentials;
    private bool _preAuthenticate;
    private bool _useDefaultCredentials;
    private ICredentials _credentials;
    private bool _allowAutoRedirect;
    private int _maxAutomaticRedirections;
    private string _connectionGroupName;
    private ClientCertificateOption _clientCertOptions;
    private X509Certificate2Collection _clientCertificates;
    private IDictionary`2<string, object> _properties;
    private int _maxConnectionsPerServer;
    private Func`5<HttpRequestMessage, X509Certificate2, X509Chain, SslPolicyErrors, bool> _serverCertificateCustomValidationCallback;
    [CompilerGeneratedAttribute]
private static Func`5<HttpRequestMessage, X509Certificate2, X509Chain, SslPolicyErrors, bool> <DangerousAcceptAnyServerCertificateValidator>k__BackingField;
    public bool AllowAutoRedirect { get; public set; }
    public DecompressionMethods AutomaticDecompression { get; public set; }
    public bool CheckCertificateRevocationList { get; public set; }
    public ClientCertificateOption ClientCertificateOptions { get; public set; }
    public X509CertificateCollection ClientCertificates { get; }
    public CookieContainer CookieContainer { get; public set; }
    public ICredentials Credentials { get; public set; }
    public ICredentials DefaultProxyCredentials { get; public set; }
    public int MaxAutomaticRedirections { get; public set; }
    public int MaxConnectionsPerServer { get; public set; }
    public long MaxRequestContentBufferSize { get; public set; }
    public int MaxResponseHeadersLength { get; public set; }
    public bool PreAuthenticate { get; public set; }
    public IDictionary`2<string, object> Properties { get; }
    public IWebProxy Proxy { get; public set; }
    public static Func`5<HttpRequestMessage, X509Certificate2, X509Chain, SslPolicyErrors, bool> DangerousAcceptAnyServerCertificateValidator { get; }
    public Func`5<HttpRequestMessage, X509Certificate2, X509Chain, SslPolicyErrors, bool> ServerCertificateCustomValidationCallback { get; public set; }
    public SslProtocols SslProtocols { get; public set; }
    public bool SupportsAutomaticDecompression { get; }
    public bool SupportsProxy { get; }
    public bool SupportsRedirectConfiguration { get; }
    public bool UseCookies { get; public set; }
    public bool UseDefaultCredentials { get; public set; }
    public bool UseProxy { get; public set; }
    private static HttpClientHandler();
    public bool get_AllowAutoRedirect();
    public void set_AllowAutoRedirect(bool value);
    public DecompressionMethods get_AutomaticDecompression();
    public void set_AutomaticDecompression(DecompressionMethods value);
    public bool get_CheckCertificateRevocationList();
    public void set_CheckCertificateRevocationList(bool value);
    public ClientCertificateOption get_ClientCertificateOptions();
    public void set_ClientCertificateOptions(ClientCertificateOption value);
    public X509CertificateCollection get_ClientCertificates();
    public CookieContainer get_CookieContainer();
    public void set_CookieContainer(CookieContainer value);
    public ICredentials get_Credentials();
    public void set_Credentials(ICredentials value);
    public ICredentials get_DefaultProxyCredentials();
    public void set_DefaultProxyCredentials(ICredentials value);
    public int get_MaxAutomaticRedirections();
    public void set_MaxAutomaticRedirections(int value);
    public int get_MaxConnectionsPerServer();
    public void set_MaxConnectionsPerServer(int value);
    public long get_MaxRequestContentBufferSize();
    public void set_MaxRequestContentBufferSize(long value);
    public int get_MaxResponseHeadersLength();
    public void set_MaxResponseHeadersLength(int value);
    public bool get_PreAuthenticate();
    public void set_PreAuthenticate(bool value);
    public IDictionary`2<string, object> get_Properties();
    public IWebProxy get_Proxy();
    [SecuritySafeCriticalAttribute]
public void set_Proxy(IWebProxy value);
    [CompilerGeneratedAttribute]
public static Func`5<HttpRequestMessage, X509Certificate2, X509Chain, SslPolicyErrors, bool> get_DangerousAcceptAnyServerCertificateValidator();
    public Func`5<HttpRequestMessage, X509Certificate2, X509Chain, SslPolicyErrors, bool> get_ServerCertificateCustomValidationCallback();
    public void set_ServerCertificateCustomValidationCallback(Func`5<HttpRequestMessage, X509Certificate2, X509Chain, SslPolicyErrors, bool> value);
    public SslProtocols get_SslProtocols();
    public void set_SslProtocols(SslProtocols value);
    public virtual bool get_SupportsAutomaticDecompression();
    public virtual bool get_SupportsProxy();
    public virtual bool get_SupportsRedirectConfiguration();
    public bool get_UseCookies();
    public void set_UseCookies(bool value);
    public bool get_UseDefaultCredentials();
    public void set_UseDefaultCredentials(bool value);
    public bool get_UseProxy();
    public void set_UseProxy(bool value);
    protected virtual void Dispose(bool disposing);
    private HttpWebRequest CreateAndPrepareWebRequest(HttpRequestMessage request);
    private bool ServerCertificateValidationCallback(object sender, X509Certificate certificate, X509Chain chain, SslPolicyErrors sslPolicyErrors);
    internal virtual void InitializeWebRequest(HttpRequestMessage request, HttpWebRequest webRequest);
    private void SetDefaultOptions(HttpWebRequest webRequest);
    private static void SetConnectionOptions(HttpWebRequest webRequest, HttpRequestMessage request);
    private void SetServicePointOptions(HttpWebRequest webRequest, HttpRequestMessage request);
    private static void SetRequestHeaders(HttpWebRequest webRequest, HttpRequestMessage request);
    private static void SetContentHeaders(HttpWebRequest webRequest, HttpRequestMessage request);
    protected internal virtual Task`1<HttpResponseMessage> SendAsync(HttpRequestMessage request, CancellationToken cancellationToken);
    private void StartRequest(object obj);
    private void PrepareAndStartContentUpload(RequestState state);
    private void StartGettingRequestStream(RequestState state);
    private void GetRequestStreamCallback(IAsyncResult ar);
    private void StartGettingResponse(RequestState state);
    private void GetResponseCallback(IAsyncResult ar);
    private HttpResponseMessage CreateResponseMessage(HttpWebResponse webResponse, HttpRequestMessage request);
    private void HandleAsyncException(RequestState state, Exception e);
    private static void OnCancel(object state);
    private void SetOperationStarted();
    private void CheckDisposed();
    internal void CheckDisposedOrStarted();
    private static bool AreEqual(string x, string y);
    [SecuritySafeCriticalAttribute]
private void SafeCaptureIdenity(RequestState state);
}
internal enum System.Net.Http.HttpCompletionOption : Enum {
    public int value__;
    public static HttpCompletionOption ResponseContentRead;
    public static HttpCompletionOption ResponseHeadersRead;
}
internal abstract class System.Net.Http.HttpContent : object {
    private HttpContentHeaders _headers;
    private MemoryStream _bufferedContent;
    private bool _disposed;
    private Task`1<Stream> _contentReadStream;
    private bool _canCalculateLength;
    internal static int MaxBufferSize;
    internal static Encoding DefaultStringEncoding;
    private static int UTF8CodePage;
    private static int UTF8PreambleLength;
    private static byte UTF8PreambleByte0;
    private static byte UTF8PreambleByte1;
    private static byte UTF8PreambleByte2;
    private static int UTF8PreambleFirst2Bytes;
    private static int UTF32CodePage;
    private static int UTF32PreambleLength;
    private static byte UTF32PreambleByte0;
    private static byte UTF32PreambleByte1;
    private static byte UTF32PreambleByte2;
    private static byte UTF32PreambleByte3;
    private static int UTF32OrUnicodePreambleFirst2Bytes;
    private static int UnicodeCodePage;
    private static int UnicodePreambleLength;
    private static byte UnicodePreambleByte0;
    private static byte UnicodePreambleByte1;
    private static int BigEndianUnicodeCodePage;
    private static int BigEndianUnicodePreambleLength;
    private static byte BigEndianUnicodePreambleByte0;
    private static byte BigEndianUnicodePreambleByte1;
    private static int BigEndianUnicodePreambleFirst2Bytes;
    public HttpContentHeaders Headers { get; }
    private bool IsBuffered { get; }
    private static HttpContent();
    public HttpContentHeaders get_Headers();
    private bool get_IsBuffered();
    internal void SetBuffer(Byte[] buffer, int offset, int count);
    internal bool TryGetBuffer(ArraySegment`1& buffer);
    public Task`1<string> ReadAsStringAsync();
    private string ReadBufferedContentAsString();
    internal static string ReadBufferAsString(ArraySegment`1<byte> buffer, HttpContentHeaders headers);
    public Task`1<Byte[]> ReadAsByteArrayAsync();
    internal Byte[] ReadBufferedContentAsByteArray();
    public Task`1<Stream> ReadAsStreamAsync();
    protected abstract virtual Task SerializeToStreamAsync(Stream stream, TransportContext context);
    public Task CopyToAsync(Stream stream, TransportContext context);
    [AsyncStateMachineAttribute("System.Net.Http.HttpContent/<CopyToAsyncCore>d__44")]
private static Task CopyToAsyncCore(Task copyTask);
    public Task CopyToAsync(Stream stream);
    internal void CopyTo(Stream stream);
    public Task LoadIntoBufferAsync();
    public Task LoadIntoBufferAsync(long maxBufferSize);
    [AsyncStateMachineAttribute("System.Net.Http.HttpContent/<LoadIntoBufferAsyncCore>d__49")]
private Task LoadIntoBufferAsyncCore(Task serializeToStreamTask, MemoryStream tempBuffer);
    protected virtual Task`1<Stream> CreateContentReadStreamAsync();
    protected internal abstract virtual bool TryComputeLength(Int64& length);
    internal Nullable`1<long> GetComputedOrBufferLength();
    private MemoryStream CreateMemoryStream(long maxBufferSize, Exception& error);
    protected virtual void Dispose(bool disposing);
    public sealed virtual void Dispose();
    private void CheckDisposed();
    private void CheckTaskNotNull(Task task);
    private static bool StreamCopyExceptionNeedsWrapping(Exception e);
    private static Exception GetStreamCopyException(Exception originalException);
    private static int GetPreambleLength(ArraySegment`1<byte> buffer, Encoding encoding);
    private static bool TryDetectEncoding(ArraySegment`1<byte> buffer, Encoding& encoding, Int32& preambleLength);
    private static bool BufferHasPrefix(ArraySegment`1<byte> buffer, Byte[] prefix);
    [AsyncStateMachineAttribute("System.Net.Http.HttpContent/<WaitAndReturnAsync>d__63`2")]
private static Task`1<TResult> WaitAndReturnAsync(Task waitTask, TState state, Func`2<TState, TResult> returnFunc);
    private static Exception CreateOverCapacityException(int maxBufferSize);
}
internal abstract class System.Net.Http.HttpMessageHandler : object {
    protected internal abstract virtual Task`1<HttpResponseMessage> SendAsync(HttpRequestMessage request, CancellationToken cancellationToken);
    protected virtual void Dispose(bool disposing);
    public sealed virtual void Dispose();
}
internal class System.Net.Http.HttpMessageInvoker : object {
    private Boolean modreq(System.Runtime.CompilerServices.IsVolatile) _disposed;
    private bool _disposeHandler;
    private HttpMessageHandler _handler;
    public HttpMessageInvoker(HttpMessageHandler handler);
    public HttpMessageInvoker(HttpMessageHandler handler, bool disposeHandler);
    public virtual Task`1<HttpResponseMessage> SendAsync(HttpRequestMessage request, CancellationToken cancellationToken);
    public sealed virtual void Dispose();
    protected virtual void Dispose(bool disposing);
    private void CheckDisposed();
}
internal class System.Net.Http.HttpMethod : object {
    private string _method;
    private int _hashcode;
    private static HttpMethod s_getMethod;
    private static HttpMethod s_putMethod;
    private static HttpMethod s_postMethod;
    private static HttpMethod s_deleteMethod;
    private static HttpMethod s_headMethod;
    private static HttpMethod s_optionsMethod;
    private static HttpMethod s_traceMethod;
    public static HttpMethod Get { get; }
    public static HttpMethod Put { get; }
    public static HttpMethod Post { get; }
    public static HttpMethod Delete { get; }
    public static HttpMethod Head { get; }
    public static HttpMethod Options { get; }
    public static HttpMethod Trace { get; }
    public string Method { get; }
    public HttpMethod(string method);
    private static HttpMethod();
    public static HttpMethod get_Get();
    public static HttpMethod get_Put();
    public static HttpMethod get_Post();
    public static HttpMethod get_Delete();
    public static HttpMethod get_Head();
    public static HttpMethod get_Options();
    public static HttpMethod get_Trace();
    public string get_Method();
    public sealed virtual bool Equals(HttpMethod other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public virtual string ToString();
    public static bool op_Equality(HttpMethod left, HttpMethod right);
    public static bool op_Inequality(HttpMethod left, HttpMethod right);
    private static bool IsUpperAscii(string value);
}
internal enum System.Net.Http.HttpParseResult : Enum {
    public int value__;
    public static HttpParseResult Parsed;
    public static HttpParseResult NotParsed;
    public static HttpParseResult InvalidFormat;
}
internal class System.Net.Http.HttpRequestException : Exception {
    public HttpRequestException(string message);
    public HttpRequestException(string message, Exception inner);
}
internal class System.Net.Http.HttpRequestMessage : object {
    private static int MessageNotYetSent;
    private static int MessageAlreadySent;
    private int _sendStatus;
    private HttpMethod _method;
    private Uri _requestUri;
    private HttpRequestHeaders _headers;
    private Version _version;
    private HttpContent _content;
    private bool _disposed;
    private IDictionary`2<string, object> _properties;
    public Version Version { get; public set; }
    public HttpContent Content { get; public set; }
    public HttpMethod Method { get; public set; }
    public Uri RequestUri { get; public set; }
    public HttpRequestHeaders Headers { get; }
    public IDictionary`2<string, object> Properties { get; }
    public HttpRequestMessage(HttpMethod method, Uri requestUri);
    public HttpRequestMessage(HttpMethod method, string requestUri);
    public Version get_Version();
    public void set_Version(Version value);
    public HttpContent get_Content();
    public void set_Content(HttpContent value);
    public HttpMethod get_Method();
    public void set_Method(HttpMethod value);
    public Uri get_RequestUri();
    public void set_RequestUri(Uri value);
    public HttpRequestHeaders get_Headers();
    public IDictionary`2<string, object> get_Properties();
    public virtual string ToString();
    private void InitializeValues(HttpMethod method, Uri requestUri);
    internal bool MarkAsSent();
    protected virtual void Dispose(bool disposing);
    public sealed virtual void Dispose();
    private void CheckDisposed();
}
internal class System.Net.Http.HttpResponseMessage : object {
    private static HttpStatusCode defaultStatusCode;
    private HttpStatusCode _statusCode;
    private HttpResponseHeaders _headers;
    private string _reasonPhrase;
    private HttpRequestMessage _requestMessage;
    private Version _version;
    private HttpContent _content;
    private bool _disposed;
    public Version Version { get; public set; }
    public HttpContent Content { get; public set; }
    public HttpStatusCode StatusCode { get; public set; }
    public string ReasonPhrase { get; public set; }
    public HttpResponseHeaders Headers { get; }
    public HttpRequestMessage RequestMessage { get; public set; }
    public bool IsSuccessStatusCode { get; }
    public HttpResponseMessage(HttpStatusCode statusCode);
    public Version get_Version();
    public void set_Version(Version value);
    public HttpContent get_Content();
    public void set_Content(HttpContent value);
    public HttpStatusCode get_StatusCode();
    public void set_StatusCode(HttpStatusCode value);
    public string get_ReasonPhrase();
    public void set_ReasonPhrase(string value);
    public HttpResponseHeaders get_Headers();
    public HttpRequestMessage get_RequestMessage();
    public void set_RequestMessage(HttpRequestMessage value);
    public bool get_IsSuccessStatusCode();
    public HttpResponseMessage EnsureSuccessStatusCode();
    public virtual string ToString();
    private bool ContainsNewLineCharacter(string value);
    protected virtual void Dispose(bool disposing);
    public sealed virtual void Dispose();
    private void CheckDisposed();
}
internal static class System.Net.Http.HttpRuleParser : object {
    private static Boolean[] s_tokenChars;
    private static int maxNestedCount;
    private static String[] s_dateFormats;
    internal static char CR;
    internal static char LF;
    internal static int MaxInt64Digits;
    internal static int MaxInt32Digits;
    internal static Encoding DefaultHttpEncoding;
    private static HttpRuleParser();
    private static Boolean[] CreateTokenChars();
    internal static bool IsTokenChar(char character);
    internal static int GetTokenLength(string input, int startIndex);
    internal static int GetWhitespaceLength(string input, int startIndex);
    internal static bool ContainsInvalidNewLine(string value);
    internal static bool ContainsInvalidNewLine(string value, int startIndex);
    internal static int GetNumberLength(string input, int startIndex, bool allowDecimal);
    internal static int GetHostLength(string input, int startIndex, bool allowToken, String& host);
    internal static HttpParseResult GetCommentLength(string input, int startIndex, Int32& length);
    internal static HttpParseResult GetQuotedStringLength(string input, int startIndex, Int32& length);
    internal static HttpParseResult GetQuotedPairLength(string input, int startIndex, Int32& length);
    internal static string DateToString(DateTimeOffset dateTime);
    internal static bool TryStringToDate(string input, DateTimeOffset& result);
    private static HttpParseResult GetExpressionLength(string input, int startIndex, char openChar, char closeChar, bool supportsNesting, Int32& nestedCount, Int32& length);
    private static bool IsValidHostName(string host);
}
[ExtensionAttribute]
internal static class System.Net.Http.HttpUtilities : object {
    internal static Version DefaultRequestVersion { get; }
    internal static Version DefaultResponseVersion { get; }
    internal static Version get_DefaultRequestVersion();
    internal static Version get_DefaultResponseVersion();
    internal static bool IsHttpUri(Uri uri);
    internal static bool HandleFaultsAndCancelation(Task task, TaskCompletionSource`1<T> tcs);
    [ExtensionAttribute]
internal static Task ContinueWithStandard(Task task, Action`1<Task> continuation);
    [ExtensionAttribute]
internal static Task ContinueWithStandard(Task task, object state, Action`2<Task, object> continuation);
    [ExtensionAttribute]
internal static Task ContinueWithStandard(Task`1<T> task, Action`1<Task`1<T>> continuation);
    [ExtensionAttribute]
internal static Task ContinueWithStandard(Task`1<T> task, object state, Action`2<Task`1<T>, object> continuation);
}
internal abstract class System.Net.Http.MessageProcessingHandler : DelegatingHandler {
    protected MessageProcessingHandler(HttpMessageHandler innerHandler);
    protected abstract virtual HttpRequestMessage ProcessRequest(HttpRequestMessage request, CancellationToken cancellationToken);
    protected abstract virtual HttpResponseMessage ProcessResponse(HttpResponseMessage response, CancellationToken cancellationToken);
    protected internal sealed virtual Task`1<HttpResponseMessage> SendAsync(HttpRequestMessage request, CancellationToken cancellationToken);
    private static void HandleCanceledOperations(CancellationToken cancellationToken, TaskCompletionSource`1<HttpResponseMessage> tcs, OperationCanceledException e);
}
internal class System.Net.Http.MultipartContent : HttpContent {
    private static string CrLf;
    private static int s_crlfLength;
    private static int s_dashDashLength;
    private static int s_colonSpaceLength;
    private static int s_commaSpaceLength;
    private List`1<HttpContent> _nestedContent;
    private string _boundary;
    public MultipartContent(string subtype);
    public MultipartContent(string subtype, string boundary);
    private static MultipartContent();
    private static void ValidateBoundary(string boundary);
    private static string GetDefaultBoundary();
    public virtual void Add(HttpContent content);
    protected virtual void Dispose(bool disposing);
    public sealed virtual IEnumerator`1<HttpContent> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    [AsyncStateMachineAttribute("System.Net.Http.MultipartContent/<SerializeToStreamAsync>d__16")]
protected virtual Task SerializeToStreamAsync(Stream stream, TransportContext context);
    [AsyncStateMachineAttribute("System.Net.Http.MultipartContent/<CreateContentReadStreamAsync>d__17")]
protected virtual Task`1<Stream> CreateContentReadStreamAsync();
    private string SerializeHeadersToString(StringBuilder scratch, int contentIndex, HttpContent content);
    private static Task EncodeStringToStreamAsync(Stream stream, string input);
    private static Stream EncodeStringToNewStream(string input);
    protected internal virtual bool TryComputeLength(Int64& length);
    private static int GetEncodedLength(string input);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<Stream> <>n__0();
}
internal class System.Net.Http.MultipartFormDataContent : MultipartContent {
    private static string formData;
    public MultipartFormDataContent(string boundary);
    public virtual void Add(HttpContent content);
    public void Add(HttpContent content, string name);
    public void Add(HttpContent content, string name, string fileName);
    private void AddInternal(HttpContent content, string name, string fileName);
}
internal class System.Net.Http.StreamContent : HttpContent {
    private static int DefaultBufferSize;
    private Stream _content;
    private int _bufferSize;
    private CancellationToken _cancellationToken;
    private bool _contentConsumed;
    private long _start;
    public StreamContent(Stream content);
    public StreamContent(Stream content, int bufferSize);
    internal StreamContent(Stream content, CancellationToken cancellationToken);
    private StreamContent(Stream content, int bufferSize, CancellationToken cancellationToken);
    protected virtual Task SerializeToStreamAsync(Stream stream, TransportContext context);
    protected internal virtual bool TryComputeLength(Int64& length);
    protected virtual void Dispose(bool disposing);
    protected virtual Task`1<Stream> CreateContentReadStreamAsync();
    private void PrepareContent();
}
internal static class System.Net.Http.StreamToStreamCopy : object {
    public static Task CopyAsync(Stream source, Stream destination, int bufferSize, bool disposeSource, CancellationToken cancellationToken);
    private static Task DisposeSourceWhenCompleteAsync(Task task, Stream source);
    private static void DisposeSource(Stream source);
}
internal class System.Net.Http.StringContent : ByteArrayContent {
    private static string defaultMediaType;
    public StringContent(string content);
    public StringContent(string content, Encoding encoding);
    public StringContent(string content, Encoding encoding, string mediaType);
    private static Byte[] GetContentByteArray(string content, Encoding encoding);
}
internal static class System.Net.HttpVersionInternal : object {
    public static Version Unknown;
    public static Version Version10;
    public static Version Version11;
    public static Version Version20;
    private static HttpVersionInternal();
}
[SecuritySafeCriticalAttribute]
[EventSourceAttribute]
internal class System.Net.NetEventSource : EventSource {
    private static int UriBaseAddressId;
    private static int ContentNullId;
    private static int ClientSendCompletedId;
    private static int HeadersInvalidValueId;
    private static int HandlerMessageId;
    public static NetEventSource Log;
    private static string MissingMember;
    private static string NullInstance;
    private static string StaticMethodObject;
    private static string NoParameters;
    private static int MaxDumpSize;
    private static int EnterEventId;
    private static int ExitEventId;
    private static int AssociateEventId;
    private static int InfoEventId;
    private static int ErrorEventId;
    private static int CriticalFailureEventId;
    private static int DumpArrayEventId;
    private static int NextAvailableEventId;
    public static bool IsEnabled { get; }
    private static NetEventSource();
    [NonEventAttribute]
public static void UriBaseAddress(object obj, Uri baseAddress);
    [EventAttribute("8")]
private void UriBaseAddress(string uriBaseAddress, string objName, int objHash);
    [NonEventAttribute]
public static void ContentNull(object obj);
    [EventAttribute("9")]
private void ContentNull(string objName, int objHash);
    [NonEventAttribute]
public static void ClientSendCompleted(HttpClient httpClient, HttpResponseMessage response, HttpRequestMessage request);
    [EventAttribute("10")]
private void ClientSendCompleted(string responseString, int httpRequestMessageHash, int httpResponseMessageHash, int httpClientHash);
    [EventAttribute("11")]
public void HeadersInvalidValue(string name, string rawValue);
    [EventAttribute("12")]
public void HandlerMessage(int handlerId, int workerId, int requestId, string memberName, string message);
    [NonEventAttribute]
private void WriteEvent(int eventId, int arg1, int arg2, int arg3, string arg4, string arg5);
    [NonEventAttribute]
public static void Enter(object thisOrContextObject, FormattableString formattableString, string memberName);
    [NonEventAttribute]
public static void Enter(object thisOrContextObject, object arg0, string memberName);
    [NonEventAttribute]
public static void Enter(object thisOrContextObject, object arg0, object arg1, string memberName);
    [NonEventAttribute]
public static void Enter(object thisOrContextObject, object arg0, object arg1, object arg2, string memberName);
    [EventAttribute("1")]
private void Enter(string thisOrContextObject, string memberName, string parameters);
    [NonEventAttribute]
public static void Exit(object thisOrContextObject, FormattableString formattableString, string memberName);
    [NonEventAttribute]
public static void Exit(object thisOrContextObject, object arg0, string memberName);
    [NonEventAttribute]
public static void Exit(object thisOrContextObject, object arg0, object arg1, string memberName);
    [EventAttribute("2")]
private void Exit(string thisOrContextObject, string memberName, string result);
    [NonEventAttribute]
public static void Info(object thisOrContextObject, FormattableString formattableString, string memberName);
    [NonEventAttribute]
public static void Info(object thisOrContextObject, object message, string memberName);
    [EventAttribute("4")]
private void Info(string thisOrContextObject, string memberName, string message);
    [NonEventAttribute]
public static void Error(object thisOrContextObject, FormattableString formattableString, string memberName);
    [NonEventAttribute]
public static void Error(object thisOrContextObject, object message, string memberName);
    [EventAttribute("5")]
private void ErrorMessage(string thisOrContextObject, string memberName, string message);
    [NonEventAttribute]
public static void Fail(object thisOrContextObject, FormattableString formattableString, string memberName);
    [NonEventAttribute]
public static void Fail(object thisOrContextObject, object message, string memberName);
    [EventAttribute("6")]
private void CriticalFailure(string thisOrContextObject, string memberName, string message);
    [NonEventAttribute]
public static void DumpBuffer(object thisOrContextObject, Byte[] buffer, string memberName);
    [NonEventAttribute]
public static void DumpBuffer(object thisOrContextObject, Byte[] buffer, int offset, int count, string memberName);
    [NonEventAttribute]
public static void DumpBuffer(object thisOrContextObject, IntPtr bufferPtr, int count, string memberName);
    [EventAttribute("7")]
private void DumpBuffer(string thisOrContextObject, string memberName, Byte[] buffer);
    [NonEventAttribute]
public static void Associate(object first, object second, string memberName);
    [NonEventAttribute]
public static void Associate(object thisOrContextObject, object first, object second, string memberName);
    [EventAttribute("3")]
private void Associate(string thisOrContextObject, string memberName, string first, string second);
    [ConditionalAttribute("DEBUG_NETEVENTSOURCE_MISUSE")]
private static void DebugValidateArg(object arg);
    [ConditionalAttribute("DEBUG_NETEVENTSOURCE_MISUSE")]
private static void DebugValidateArg(FormattableString arg);
    public static bool get_IsEnabled();
    [NonEventAttribute]
public static string IdOf(object value);
    [NonEventAttribute]
public static int GetHashCode(object value);
    [NonEventAttribute]
public static object Format(object value);
    [NonEventAttribute]
private static string Format(FormattableString s);
    [NonEventAttribute]
private void WriteEvent(int eventId, string arg1, string arg2, string arg3, string arg4);
    [NonEventAttribute]
private void WriteEvent(int eventId, string arg1, string arg2, Byte[] arg3);
    [NonEventAttribute]
private void WriteEvent(int eventId, string arg1, int arg2, int arg3, int arg4);
    [NonEventAttribute]
private void WriteEvent(int eventId, string arg1, int arg2, string arg3);
    [NonEventAttribute]
private void WriteEvent(int eventId, string arg1, string arg2, int arg3);
    [NonEventAttribute]
private void WriteEvent(int eventId, string arg1, string arg2, string arg3, int arg4);
}
internal class System.Net.Sockets.SocketReceiveFromResult : ValueType {
    public int ReceivedBytes;
    public EndPoint RemoteEndPoint;
}
internal class System.Net.Sockets.SocketReceiveMessageFromResult : ValueType {
    public int ReceivedBytes;
    public SocketFlags SocketFlags;
    public EndPoint RemoteEndPoint;
    public IPPacketInformation PacketInformation;
}
[ExtensionAttribute]
internal static class System.Net.Sockets.SocketTaskExtensions : object {
    [ExtensionAttribute]
public static Task`1<Socket> AcceptAsync(Socket socket);
    [ExtensionAttribute]
public static Task`1<Socket> AcceptAsync(Socket socket, Socket acceptSocket);
    [ExtensionAttribute]
public static Task ConnectAsync(Socket socket, EndPoint remoteEndPoint);
    [ExtensionAttribute]
public static Task ConnectAsync(Socket socket, IPAddress address, int port);
    [ExtensionAttribute]
public static Task ConnectAsync(Socket socket, IPAddress[] addresses, int port);
    [ExtensionAttribute]
public static Task ConnectAsync(Socket socket, string host, int port);
    [ExtensionAttribute]
public static Task`1<int> ReceiveAsync(Socket socket, ArraySegment`1<byte> buffer, SocketFlags socketFlags);
    [ExtensionAttribute]
public static Task`1<int> ReceiveAsync(Socket socket, IList`1<ArraySegment`1<byte>> buffers, SocketFlags socketFlags);
    [ExtensionAttribute]
public static Task`1<SocketReceiveFromResult> ReceiveFromAsync(Socket socket, ArraySegment`1<byte> buffer, SocketFlags socketFlags, EndPoint remoteEndPoint);
    [ExtensionAttribute]
public static Task`1<SocketReceiveMessageFromResult> ReceiveMessageFromAsync(Socket socket, ArraySegment`1<byte> buffer, SocketFlags socketFlags, EndPoint remoteEndPoint);
    [ExtensionAttribute]
public static Task`1<int> SendAsync(Socket socket, ArraySegment`1<byte> buffer, SocketFlags socketFlags);
    [ExtensionAttribute]
public static Task`1<int> SendAsync(Socket socket, IList`1<ArraySegment`1<byte>> buffers, SocketFlags socketFlags);
    [ExtensionAttribute]
public static Task`1<int> SendToAsync(Socket socket, ArraySegment`1<byte> buffer, SocketFlags socketFlags, EndPoint remoteEndPoint);
}
internal static class System.NotImplemented : object {
    internal static Exception ByDesign { get; }
    internal static Exception get_ByDesign();
    internal static Exception ByDesignWithMessage(string message);
}
internal static class System.Numerics.Hashing.HashHelpers : object {
    public static int RandomSeed;
    private static HashHelpers();
    public static int Combine(int h1, int h2);
}
[AttributeUsageAttribute("5196")]
[CompilerGeneratedAttribute]
[<4a8e267e-932f-4677-a3b3-6c2dca899a53>EmbeddedAttribute]
internal class System.Runtime.CompilerServices.<17a6ad34-f40e-412d-8e82-6669015c9081>NullableContextAttribute : Attribute {
    public byte Flag;
    public <17a6ad34-f40e-412d-8e82-6669015c9081>NullableContextAttribute(byte );
}
[<891e8447-969a-4444-b8fd-23aeb3eb64d3>EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
[CompilerGeneratedAttribute]
internal class System.Runtime.CompilerServices.<17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute : Attribute {
    public byte Flag;
    public <17e156b6-e304-43b7-9756-1ed2e2fb59a5>NullableContextAttribute(byte );
}
[<1bfbc8ad-7051-4b12-839c-d1d228cdbf91>EmbeddedAttribute]
[CompilerGeneratedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.<310e5112-376f-4e79-a10d-6a04415fd5e0>NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public <310e5112-376f-4e79-a10d-6a04415fd5e0>NullableAttribute(byte );
    public <310e5112-376f-4e79-a10d-6a04415fd5e0>NullableAttribute(Byte[] );
}
[AttributeUsageAttribute("5196")]
[<f2e404b9-0ed2-43a2-a034-d5167cd1a306>EmbeddedAttribute]
[CompilerGeneratedAttribute]
internal class System.Runtime.CompilerServices.<5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute : Attribute {
    public byte Flag;
    public <5d513bda-a279-4234-b88a-4953cc2a4e0a>NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[<d26ad42d-e9b5-4389-b79e-39a5ceecb498>EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.<7306beb1-509c-4064-b0d4-4d9d9c2ea1a4>NullableContextAttribute : Attribute {
    public byte Flag;
    public <7306beb1-509c-4064-b0d4-4d9d9c2ea1a4>NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[AttributeUsageAttribute("5196")]
[<e4402215-eb58-4809-a34b-498b37ba923e>EmbeddedAttribute]
internal class System.Runtime.CompilerServices.<775b3474-4bdb-4dfa-9504-95167a40b14b>NullableContextAttribute : Attribute {
    public byte Flag;
    public <775b3474-4bdb-4dfa-9504-95167a40b14b>NullableContextAttribute(byte );
}
[AttributeUsageAttribute("27524")]
[<f2e404b9-0ed2-43a2-a034-d5167cd1a306>EmbeddedAttribute]
[CompilerGeneratedAttribute]
internal class System.Runtime.CompilerServices.<7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public <7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute(byte );
    public <7a857ce5-2ba6-4793-9945-a1d9a7ee0bc1>NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[AttributeUsageAttribute("27524")]
[<0d7ff737-4cad-4dea-bf45-c870c743cf98>EmbeddedAttribute]
internal class System.Runtime.CompilerServices.<7b90d52c-6cae-4d20-a46a-0eb940bf7d2a>NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public <7b90d52c-6cae-4d20-a46a-0eb940bf7d2a>NullableAttribute(byte );
    public <7b90d52c-6cae-4d20-a46a-0eb940bf7d2a>NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[<e4402215-eb58-4809-a34b-498b37ba923e>EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.<7ee1374a-350e-48d8-b14b-16bf02905262>NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public <7ee1374a-350e-48d8-b14b-16bf02905262>NullableAttribute(byte );
    public <7ee1374a-350e-48d8-b14b-16bf02905262>NullableAttribute(Byte[] );
}
[<891e8447-969a-4444-b8fd-23aeb3eb64d3>EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
[CompilerGeneratedAttribute]
internal class System.Runtime.CompilerServices.<85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public <85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute(byte );
    public <85e15a5e-fde1-45ca-9183-260f3b508ae5>NullableAttribute(Byte[] );
}
[AttributeUsageAttribute("27524")]
[CompilerGeneratedAttribute]
[<4a8e267e-932f-4677-a3b3-6c2dca899a53>EmbeddedAttribute]
internal class System.Runtime.CompilerServices.<8ca00514-04ad-4405-ba09-14b0485a7f7d>NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public <8ca00514-04ad-4405-ba09-14b0485a7f7d>NullableAttribute(byte );
    public <8ca00514-04ad-4405-ba09-14b0485a7f7d>NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[AttributeUsageAttribute("5196")]
[<0d7ff737-4cad-4dea-bf45-c870c743cf98>EmbeddedAttribute]
internal class System.Runtime.CompilerServices.<b6c89d4a-266e-47e3-ae32-f25e8ff0ec23>NullableContextAttribute : Attribute {
    public byte Flag;
    public <b6c89d4a-266e-47e3-ae32-f25e8ff0ec23>NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[<d26ad42d-e9b5-4389-b79e-39a5ceecb498>EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.<e2619cd4-38f2-491a-93df-a58fd945c094>NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public <e2619cd4-38f2-491a-93df-a58fd945c094>NullableAttribute(byte );
    public <e2619cd4-38f2-491a-93df-a58fd945c094>NullableAttribute(Byte[] );
}
[<891e8447-969a-4444-b8fd-23aeb3eb64d3>EmbeddedAttribute]
[CompilerGeneratedAttribute]
internal class System.Runtime.CompilerServices.<e6d5c873-dec8-4703-a863-d4c8912e7d9b>IsReadOnlyAttribute : Attribute {
}
[<f2e404b9-0ed2-43a2-a034-d5167cd1a306>EmbeddedAttribute]
[CompilerGeneratedAttribute]
internal class System.Runtime.CompilerServices.<f87e9192-349b-4fe9-9283-65da525832f1>IsReadOnlyAttribute : Attribute {
}
internal class System.Runtime.CompilerServices.IsReadOnlyAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[AttributeUsageAttribute("5196")]
[EmbeddedAttribute]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[<e4402215-eb58-4809-a34b-498b37ba923e>EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
[AttributeUsageAttribute("11148")]
[CLSCompliantAttribute("False")]
internal class System.Runtime.CompilerServices.TupleElementNamesAttribute : Attribute {
    private String[] _transformNames;
    public IList`1<string> TransformNames { get; }
    public TupleElementNamesAttribute(String[] transformNames);
    public IList`1<string> get_TransformNames();
}
internal static class System.Runtime.CompilerServices.Unsafe : object {
    [NonVersionableAttribute]
public static T Read(Void* source);
    [NonVersionableAttribute]
public static T ReadUnaligned(Void* source);
    [NonVersionableAttribute]
public static T ReadUnaligned(Byte& source);
    [NonVersionableAttribute]
public static void Write(Void* destination, T value);
    [NonVersionableAttribute]
public static void WriteUnaligned(Void* destination, T value);
    [NonVersionableAttribute]
public static void WriteUnaligned(Byte& destination, T value);
    [NonVersionableAttribute]
public static void Copy(Void* destination, T& source);
    [NonVersionableAttribute]
public static void Copy(T& destination, Void* source);
    [NonVersionableAttribute]
public static Void* AsPointer(T& value);
    [NonVersionableAttribute]
public static int SizeOf();
    [NonVersionableAttribute]
public static void CopyBlock(Void* destination, Void* source, UInt32 byteCount);
    [NonVersionableAttribute]
public static void CopyBlock(Byte& destination, Byte& source, UInt32 byteCount);
    [NonVersionableAttribute]
public static void CopyBlockUnaligned(Void* destination, Void* source, UInt32 byteCount);
    [NonVersionableAttribute]
public static void CopyBlockUnaligned(Byte& destination, Byte& source, UInt32 byteCount);
    [NonVersionableAttribute]
public static void InitBlock(Void* startAddress, byte value, UInt32 byteCount);
    [NonVersionableAttribute]
public static void InitBlock(Byte& startAddress, byte value, UInt32 byteCount);
    [NonVersionableAttribute]
public static void InitBlockUnaligned(Void* startAddress, byte value, UInt32 byteCount);
    [NonVersionableAttribute]
public static void InitBlockUnaligned(Byte& startAddress, byte value, UInt32 byteCount);
    [NonVersionableAttribute]
public static T As(object o);
    [NonVersionableAttribute]
public static T& AsRef(Void* source);
    [NonVersionableAttribute]
public static T& AsRef(T& source);
    [NonVersionableAttribute]
public static TTo& As(TFrom& source);
    [NonVersionableAttribute]
public static T& Unbox(object box);
    [NonVersionableAttribute]
public static T& Add(T& source, int elementOffset);
    [NonVersionableAttribute]
public static Void* Add(Void* source, int elementOffset);
    [NonVersionableAttribute]
public static T& Add(T& source, IntPtr elementOffset);
    [NonVersionableAttribute]
public static T& AddByteOffset(T& source, IntPtr byteOffset);
    [NonVersionableAttribute]
public static T& Subtract(T& source, int elementOffset);
    [NonVersionableAttribute]
public static Void* Subtract(Void* source, int elementOffset);
    [NonVersionableAttribute]
public static T& Subtract(T& source, IntPtr elementOffset);
    [NonVersionableAttribute]
public static T& SubtractByteOffset(T& source, IntPtr byteOffset);
    [NonVersionableAttribute]
public static IntPtr ByteOffset(T& origin, T& target);
    [NonVersionableAttribute]
public static bool AreSame(T& left, T& right);
    [NonVersionableAttribute]
public static bool IsAddressGreaterThan(T& left, T& right);
    [NonVersionableAttribute]
public static bool IsAddressLessThan(T& left, T& right);
}
internal enum System.Runtime.InteropServices.Architecture : Enum {
    public int value__;
    public static Architecture X86;
    public static Architecture X64;
    public static Architecture Arm;
    public static Architecture Arm64;
}
internal class System.Runtime.InteropServices.OSPlatform : ValueType {
    private string _osPlatform;
    [CompilerGeneratedAttribute]
private static OSPlatform <Linux>k__BackingField;
    [CompilerGeneratedAttribute]
private static OSPlatform <OSX>k__BackingField;
    [CompilerGeneratedAttribute]
private static OSPlatform <Windows>k__BackingField;
    public static OSPlatform Linux { get; }
    public static OSPlatform OSX { get; }
    public static OSPlatform Windows { get; }
    private OSPlatform(string osPlatform);
    private static OSPlatform();
    [CompilerGeneratedAttribute]
public static OSPlatform get_Linux();
    [CompilerGeneratedAttribute]
public static OSPlatform get_OSX();
    [CompilerGeneratedAttribute]
public static OSPlatform get_Windows();
    public static OSPlatform Create(string osPlatform);
    public sealed virtual bool Equals(OSPlatform other);
    internal bool Equals(string other);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public virtual string ToString();
    public static bool op_Equality(OSPlatform left, OSPlatform right);
    public static bool op_Inequality(OSPlatform left, OSPlatform right);
}
internal static class System.Runtime.InteropServices.RuntimeInformation : object {
    private static string s_osDescription;
    private static object s_osLock;
    private static object s_processLock;
    private static Nullable`1<Architecture> s_osArch;
    private static Nullable`1<Architecture> s_processArch;
    private static string FrameworkName;
    private static string s_frameworkDescription;
    public static string OSDescription { get; }
    public static Architecture OSArchitecture { get; }
    public static Architecture ProcessArchitecture { get; }
    public static string FrameworkDescription { get; }
    private static RuntimeInformation();
    public static bool IsOSPlatform(OSPlatform osPlatform);
    public static string get_OSDescription();
    public static Architecture get_OSArchitecture();
    public static Architecture get_ProcessArchitecture();
    public static string get_FrameworkDescription();
}
[ExtensionAttribute]
internal static class System.Runtime.Serialization.DataContractSerializerExtensions : object {
    [ExtensionAttribute]
public static ISerializationSurrogateProvider GetSerializationSurrogateProvider(DataContractSerializer serializer);
    [ExtensionAttribute]
public static void SetSerializationSurrogateProvider(DataContractSerializer serializer, ISerializationSurrogateProvider provider);
}
internal interface System.Runtime.Serialization.ISerializationSurrogateProvider {
    public abstract virtual Type GetSurrogateType(Type type);
    public abstract virtual object GetObjectToSerialize(object obj, Type targetType);
    public abstract virtual object GetDeserializedObject(object obj, Type targetType);
}
[AttributeUsageAttribute("108")]
internal class System.Runtime.Versioning.NonVersionableAttribute : Attribute {
}
internal class System.Security.Cryptography.IncrementalHash : object {
    private static int NTE_BAD_ALGID;
    private HashAlgorithmName _algorithmName;
    private HashAlgorithm _hash;
    private bool _disposed;
    private bool _resetPending;
    public HashAlgorithmName AlgorithmName { get; }
    private IncrementalHash(HashAlgorithmName name, HashAlgorithm hash);
    public HashAlgorithmName get_AlgorithmName();
    public void AppendData(Byte[] data);
    public void AppendData(Byte[] data, int offset, int count);
    public Byte[] GetHashAndReset();
    public sealed virtual void Dispose();
    public static IncrementalHash CreateHash(HashAlgorithmName hashAlgorithm);
    public static IncrementalHash CreateHMAC(HashAlgorithmName hashAlgorithm, Byte[] key);
    private static HashAlgorithm GetHashAlgorithm(HashAlgorithmName hashAlgorithm);
    private static HashAlgorithm GetHMAC(HashAlgorithmName hashAlgorithm, Byte[] key);
}
internal static class System.Security.SecureStringMarshal : object {
    public static IntPtr SecureStringToCoTaskMemAnsi(SecureString s);
    public static IntPtr SecureStringToGlobalAllocAnsi(SecureString s);
    public static IntPtr SecureStringToCoTaskMemUnicode(SecureString s);
    public static IntPtr SecureStringToGlobalAllocUnicode(SecureString s);
}
internal static class System.SR : object {
    private static ResourceManager s_resourceManager;
    private static string s_resourcesName;
    private static ResourceManager ResourceManager { get; }
    internal static string ArgumentException_ValueTupleIncorrectType { get; }
    internal static string ArgumentException_ValueTupleLastArgumentNotAValueTuple { get; }
    internal static Type ResourceType { get; }
    private static ResourceManager get_ResourceManager();
    private static bool UsingResourceKeys();
    internal static string GetResourceString(string resourceKey, string defaultString);
    internal static string Format(string resourceFormat, Object[] args);
    internal static string Format(string resourceFormat, object p1);
    internal static string Format(string resourceFormat, object p1, object p2);
    internal static string Format(string resourceFormat, object p1, object p2, object p3);
    internal static string get_ArgumentException_ValueTupleIncorrectType();
    internal static string get_ArgumentException_ValueTupleLastArgumentNotAValueTuple();
    internal static Type get_ResourceType();
}
[ExtensionAttribute]
internal static class System.StringNormalizationExtensions : object {
    [ExtensionAttribute]
public static bool IsNormalized(string value);
    [ExtensionAttribute]
[SecurityCriticalAttribute]
public static bool IsNormalized(string value, NormalizationForm normalizationForm);
    [ExtensionAttribute]
public static string Normalize(string value);
    [SecurityCriticalAttribute]
[ExtensionAttribute]
public static string Normalize(string value, NormalizationForm normalizationForm);
}
internal class System.Threading.DeferredDisposableLifetime`1 : ValueType {
    private int _count;
    public bool AddRef(T obj);
    public void Release(T obj);
    public void Dispose(T obj);
}
internal interface System.Threading.IDeferredDisposable {
    public abstract virtual void OnFinalRelease(bool disposed);
}
internal class System.Threading.PreAllocatedOverlapped : object {
    internal ThreadPoolBoundHandleOverlapped _overlapped;
    private DeferredDisposableLifetime`1<PreAllocatedOverlapped> _lifetime;
    [CLSCompliantAttribute("False")]
public PreAllocatedOverlapped(IOCompletionCallback callback, object state, object pinData);
    internal bool AddRef();
    internal void Release();
    public sealed virtual void Dispose();
    protected virtual override void Finalize();
    private sealed virtual override void System.Threading.IDeferredDisposable.OnFinalRelease(bool disposed);
}
internal static class System.Threading.Tasks.<e9812fb8-e88e-43c3-a762-d67279aaeff9>TaskToApm : object {
    public static IAsyncResult Begin(Task task, AsyncCallback callback, object state);
    public static void End(IAsyncResult asyncResult);
    public static TResult End(IAsyncResult asyncResult);
    private static void InvokeCallbackWhenTaskCompletes(Task antecedent, AsyncCallback callback, IAsyncResult asyncResult);
}
internal static class System.Threading.Tasks.TaskToApm : object {
    public static IAsyncResult Begin(Task task, AsyncCallback callback, object state);
    public static void End(IAsyncResult asyncResult);
    public static TResult End(IAsyncResult asyncResult);
    private static void InvokeCallbackWhenTaskCompletes(Task antecedent, AsyncCallback callback, IAsyncResult asyncResult);
}
internal class System.Threading.ThreadPoolBoundHandle : object {
    private SafeHandle _handle;
    private bool _isDisposed;
    public SafeHandle Handle { get; }
    private ThreadPoolBoundHandle(SafeHandle handle);
    public SafeHandle get_Handle();
    public static ThreadPoolBoundHandle BindHandle(SafeHandle handle);
    [CLSCompliantAttribute("False")]
public NativeOverlapped* AllocateNativeOverlapped(IOCompletionCallback callback, object state, object pinData);
    [CLSCompliantAttribute("False")]
public NativeOverlapped* AllocateNativeOverlapped(PreAllocatedOverlapped preAllocated);
    [CLSCompliantAttribute("False")]
public void FreeNativeOverlapped(NativeOverlapped* overlapped);
    [CLSCompliantAttribute("False")]
public static object GetNativeOverlappedState(NativeOverlapped* overlapped);
    private static ThreadPoolBoundHandleOverlapped GetOverlappedWrapper(NativeOverlapped* overlapped, ThreadPoolBoundHandle expectedBoundHandle);
    public sealed virtual void Dispose();
    private void EnsureNotDisposed();
}
internal class System.Threading.ThreadPoolBoundHandleOverlapped : Overlapped {
    private static IOCompletionCallback s_completionCallback;
    private IOCompletionCallback _userCallback;
    internal object _userState;
    internal PreAllocatedOverlapped _preAllocated;
    internal NativeOverlapped* _nativeOverlapped;
    internal ThreadPoolBoundHandle _boundHandle;
    internal bool _completed;
    public ThreadPoolBoundHandleOverlapped(IOCompletionCallback callback, object state, object pinData, PreAllocatedOverlapped preAllocated);
    private static ThreadPoolBoundHandleOverlapped();
    private static void CompletionCallback(UInt32 errorCode, UInt32 numBytes, NativeOverlapped* nativeOverlapped);
}
[ExtensionAttribute]
internal static class System.TupleExtensions : object {
    [ExtensionAttribute]
[EditorBrowsableAttribute("1")]
public static void Deconstruct(Tuple`1<T1> value, T1& item1);
    [EditorBrowsableAttribute("1")]
[ExtensionAttribute]
public static void Deconstruct(Tuple`2<T1, T2> value, T1& item1, T2& item2);
    [ExtensionAttribute]
[EditorBrowsableAttribute("1")]
public static void Deconstruct(Tuple`3<T1, T2, T3> value, T1& item1, T2& item2, T3& item3);
    [EditorBrowsableAttribute("1")]
[ExtensionAttribute]
public static void Deconstruct(Tuple`4<T1, T2, T3, T4> value, T1& item1, T2& item2, T3& item3, T4& item4);
    [ExtensionAttribute]
[EditorBrowsableAttribute("1")]
public static void Deconstruct(Tuple`5<T1, T2, T3, T4, T5> value, T1& item1, T2& item2, T3& item3, T4& item4, T5& item5);
    [ExtensionAttribute]
[EditorBrowsableAttribute("1")]
public static void Deconstruct(Tuple`6<T1, T2, T3, T4, T5, T6> value, T1& item1, T2& item2, T3& item3, T4& item4, T5& item5, T6& item6);
    [EditorBrowsableAttribute("1")]
[ExtensionAttribute]
public static void Deconstruct(Tuple`7<T1, T2, T3, T4, T5, T6, T7> value, T1& item1, T2& item2, T3& item3, T4& item4, T5& item5, T6& item6, T7& item7);
    [ExtensionAttribute]
[EditorBrowsableAttribute("1")]
public static void Deconstruct(Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`1<T8>> value, T1& item1, T2& item2, T3& item3, T4& item4, T5& item5, T6& item6, T7& item7, T8& item8);
    [EditorBrowsableAttribute("1")]
[ExtensionAttribute]
public static void Deconstruct(Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`2<T8, T9>> value, T1& item1, T2& item2, T3& item3, T4& item4, T5& item5, T6& item6, T7& item7, T8& item8, T9& item9);
    [ExtensionAttribute]
[EditorBrowsableAttribute("1")]
public static void Deconstruct(Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`3<T8, T9, T10>> value, T1& item1, T2& item2, T3& item3, T4& item4, T5& item5, T6& item6, T7& item7, T8& item8, T9& item9, T10& item10);
    [EditorBrowsableAttribute("1")]
[ExtensionAttribute]
public static void Deconstruct(Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`4<T8, T9, T10, T11>> value, T1& item1, T2& item2, T3& item3, T4& item4, T5& item5, T6& item6, T7& item7, T8& item8, T9& item9, T10& item10, T11& item11);
    [ExtensionAttribute]
[EditorBrowsableAttribute("1")]
public static void Deconstruct(Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`5<T8, T9, T10, T11, T12>> value, T1& item1, T2& item2, T3& item3, T4& item4, T5& item5, T6& item6, T7& item7, T8& item8, T9& item9, T10& item10, T11& item11, T12& item12);
    [ExtensionAttribute]
[EditorBrowsableAttribute("1")]
public static void Deconstruct(Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`6<T8, T9, T10, T11, T12, T13>> value, T1& item1, T2& item2, T3& item3, T4& item4, T5& item5, T6& item6, T7& item7, T8& item8, T9& item9, T10& item10, T11& item11, T12& item12, T13& item13);
    [EditorBrowsableAttribute("1")]
[ExtensionAttribute]
public static void Deconstruct(Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`7<T8, T9, T10, T11, T12, T13, T14>> value, T1& item1, T2& item2, T3& item3, T4& item4, T5& item5, T6& item6, T7& item7, T8& item8, T9& item9, T10& item10, T11& item11, T12& item12, T13& item13, T14& item14);
    [EditorBrowsableAttribute("1")]
[ExtensionAttribute]
public static void Deconstruct(Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`8<T8, T9, T10, T11, T12, T13, T14, Tuple`1<T15>>> value, T1& item1, T2& item2, T3& item3, T4& item4, T5& item5, T6& item6, T7& item7, T8& item8, T9& item9, T10& item10, T11& item11, T12& item12, T13& item13, T14& item14, T15& item15);
    [ExtensionAttribute]
[EditorBrowsableAttribute("1")]
public static void Deconstruct(Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`8<T8, T9, T10, T11, T12, T13, T14, Tuple`2<T15, T16>>> value, T1& item1, T2& item2, T3& item3, T4& item4, T5& item5, T6& item6, T7& item7, T8& item8, T9& item9, T10& item10, T11& item11, T12& item12, T13& item13, T14& item14, T15& item15, T16& item16);
    [EditorBrowsableAttribute("1")]
[ExtensionAttribute]
public static void Deconstruct(Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`8<T8, T9, T10, T11, T12, T13, T14, Tuple`3<T15, T16, T17>>> value, T1& item1, T2& item2, T3& item3, T4& item4, T5& item5, T6& item6, T7& item7, T8& item8, T9& item9, T10& item10, T11& item11, T12& item12, T13& item13, T14& item14, T15& item15, T16& item16, T17& item17);
    [ExtensionAttribute]
[EditorBrowsableAttribute("1")]
public static void Deconstruct(Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`8<T8, T9, T10, T11, T12, T13, T14, Tuple`4<T15, T16, T17, T18>>> value, T1& item1, T2& item2, T3& item3, T4& item4, T5& item5, T6& item6, T7& item7, T8& item8, T9& item9, T10& item10, T11& item11, T12& item12, T13& item13, T14& item14, T15& item15, T16& item16, T17& item17, T18& item18);
    [ExtensionAttribute]
[EditorBrowsableAttribute("1")]
public static void Deconstruct(Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`8<T8, T9, T10, T11, T12, T13, T14, Tuple`5<T15, T16, T17, T18, T19>>> value, T1& item1, T2& item2, T3& item3, T4& item4, T5& item5, T6& item6, T7& item7, T8& item8, T9& item9, T10& item10, T11& item11, T12& item12, T13& item13, T14& item14, T15& item15, T16& item16, T17& item17, T18& item18, T19& item19);
    [ExtensionAttribute]
[EditorBrowsableAttribute("1")]
public static void Deconstruct(Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`8<T8, T9, T10, T11, T12, T13, T14, Tuple`6<T15, T16, T17, T18, T19, T20>>> value, T1& item1, T2& item2, T3& item3, T4& item4, T5& item5, T6& item6, T7& item7, T8& item8, T9& item9, T10& item10, T11& item11, T12& item12, T13& item13, T14& item14, T15& item15, T16& item16, T17& item17, T18& item18, T19& item19, T20& item20);
    [EditorBrowsableAttribute("1")]
[ExtensionAttribute]
public static void Deconstruct(Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`8<T8, T9, T10, T11, T12, T13, T14, Tuple`7<T15, T16, T17, T18, T19, T20, T21>>> value, T1& item1, T2& item2, T3& item3, T4& item4, T5& item5, T6& item6, T7& item7, T8& item8, T9& item9, T10& item10, T11& item11, T12& item12, T13& item13, T14& item14, T15& item15, T16& item16, T17& item17, T18& item18, T19& item19, T20& item20, T21& item21);
    [ExtensionAttribute]
public static ValueTuple`1<T1> ToValueTuple(Tuple`1<T1> value);
    [ExtensionAttribute]
public static ValueTuple`2<T1, T2> ToValueTuple(Tuple`2<T1, T2> value);
    [ExtensionAttribute]
public static ValueTuple`3<T1, T2, T3> ToValueTuple(Tuple`3<T1, T2, T3> value);
    [ExtensionAttribute]
public static ValueTuple`4<T1, T2, T3, T4> ToValueTuple(Tuple`4<T1, T2, T3, T4> value);
    [ExtensionAttribute]
public static ValueTuple`5<T1, T2, T3, T4, T5> ToValueTuple(Tuple`5<T1, T2, T3, T4, T5> value);
    [ExtensionAttribute]
public static ValueTuple`6<T1, T2, T3, T4, T5, T6> ToValueTuple(Tuple`6<T1, T2, T3, T4, T5, T6> value);
    [ExtensionAttribute]
public static ValueTuple`7<T1, T2, T3, T4, T5, T6, T7> ToValueTuple(Tuple`7<T1, T2, T3, T4, T5, T6, T7> value);
    [ExtensionAttribute]
public static ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, ValueTuple`1<T8>> ToValueTuple(Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`1<T8>> value);
    [ExtensionAttribute]
public static ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, ValueTuple`2<T8, T9>> ToValueTuple(Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`2<T8, T9>> value);
    [ExtensionAttribute]
public static ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, ValueTuple`3<T8, T9, T10>> ToValueTuple(Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`3<T8, T9, T10>> value);
    [ExtensionAttribute]
public static ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, ValueTuple`4<T8, T9, T10, T11>> ToValueTuple(Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`4<T8, T9, T10, T11>> value);
    [ExtensionAttribute]
public static ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, ValueTuple`5<T8, T9, T10, T11, T12>> ToValueTuple(Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`5<T8, T9, T10, T11, T12>> value);
    [ExtensionAttribute]
public static ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, ValueTuple`6<T8, T9, T10, T11, T12, T13>> ToValueTuple(Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`6<T8, T9, T10, T11, T12, T13>> value);
    [ExtensionAttribute]
public static ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, ValueTuple`7<T8, T9, T10, T11, T12, T13, T14>> ToValueTuple(Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`7<T8, T9, T10, T11, T12, T13, T14>> value);
    [ExtensionAttribute]
public static ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, ValueTuple`8<T8, T9, T10, T11, T12, T13, T14, ValueTuple`1<T15>>> ToValueTuple(Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`8<T8, T9, T10, T11, T12, T13, T14, Tuple`1<T15>>> value);
    [ExtensionAttribute]
public static ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, ValueTuple`8<T8, T9, T10, T11, T12, T13, T14, ValueTuple`2<T15, T16>>> ToValueTuple(Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`8<T8, T9, T10, T11, T12, T13, T14, Tuple`2<T15, T16>>> value);
    [ExtensionAttribute]
public static ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, ValueTuple`8<T8, T9, T10, T11, T12, T13, T14, ValueTuple`3<T15, T16, T17>>> ToValueTuple(Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`8<T8, T9, T10, T11, T12, T13, T14, Tuple`3<T15, T16, T17>>> value);
    [ExtensionAttribute]
public static ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, ValueTuple`8<T8, T9, T10, T11, T12, T13, T14, ValueTuple`4<T15, T16, T17, T18>>> ToValueTuple(Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`8<T8, T9, T10, T11, T12, T13, T14, Tuple`4<T15, T16, T17, T18>>> value);
    [ExtensionAttribute]
public static ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, ValueTuple`8<T8, T9, T10, T11, T12, T13, T14, ValueTuple`5<T15, T16, T17, T18, T19>>> ToValueTuple(Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`8<T8, T9, T10, T11, T12, T13, T14, Tuple`5<T15, T16, T17, T18, T19>>> value);
    [ExtensionAttribute]
public static ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, ValueTuple`8<T8, T9, T10, T11, T12, T13, T14, ValueTuple`6<T15, T16, T17, T18, T19, T20>>> ToValueTuple(Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`8<T8, T9, T10, T11, T12, T13, T14, Tuple`6<T15, T16, T17, T18, T19, T20>>> value);
    [ExtensionAttribute]
public static ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, ValueTuple`8<T8, T9, T10, T11, T12, T13, T14, ValueTuple`7<T15, T16, T17, T18, T19, T20, T21>>> ToValueTuple(Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`8<T8, T9, T10, T11, T12, T13, T14, Tuple`7<T15, T16, T17, T18, T19, T20, T21>>> value);
    [ExtensionAttribute]
public static Tuple`1<T1> ToTuple(ValueTuple`1<T1> value);
    [ExtensionAttribute]
public static Tuple`2<T1, T2> ToTuple(ValueTuple`2<T1, T2> value);
    [ExtensionAttribute]
public static Tuple`3<T1, T2, T3> ToTuple(ValueTuple`3<T1, T2, T3> value);
    [ExtensionAttribute]
public static Tuple`4<T1, T2, T3, T4> ToTuple(ValueTuple`4<T1, T2, T3, T4> value);
    [ExtensionAttribute]
public static Tuple`5<T1, T2, T3, T4, T5> ToTuple(ValueTuple`5<T1, T2, T3, T4, T5> value);
    [ExtensionAttribute]
public static Tuple`6<T1, T2, T3, T4, T5, T6> ToTuple(ValueTuple`6<T1, T2, T3, T4, T5, T6> value);
    [ExtensionAttribute]
public static Tuple`7<T1, T2, T3, T4, T5, T6, T7> ToTuple(ValueTuple`7<T1, T2, T3, T4, T5, T6, T7> value);
    [ExtensionAttribute]
public static Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`1<T8>> ToTuple(ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, ValueTuple`1<T8>> value);
    [ExtensionAttribute]
public static Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`2<T8, T9>> ToTuple(ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, ValueTuple`2<T8, T9>> value);
    [ExtensionAttribute]
public static Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`3<T8, T9, T10>> ToTuple(ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, ValueTuple`3<T8, T9, T10>> value);
    [ExtensionAttribute]
public static Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`4<T8, T9, T10, T11>> ToTuple(ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, ValueTuple`4<T8, T9, T10, T11>> value);
    [ExtensionAttribute]
public static Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`5<T8, T9, T10, T11, T12>> ToTuple(ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, ValueTuple`5<T8, T9, T10, T11, T12>> value);
    [ExtensionAttribute]
public static Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`6<T8, T9, T10, T11, T12, T13>> ToTuple(ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, ValueTuple`6<T8, T9, T10, T11, T12, T13>> value);
    [ExtensionAttribute]
public static Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`7<T8, T9, T10, T11, T12, T13, T14>> ToTuple(ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, ValueTuple`7<T8, T9, T10, T11, T12, T13, T14>> value);
    [ExtensionAttribute]
public static Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`8<T8, T9, T10, T11, T12, T13, T14, Tuple`1<T15>>> ToTuple(ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, ValueTuple`8<T8, T9, T10, T11, T12, T13, T14, ValueTuple`1<T15>>> value);
    [ExtensionAttribute]
public static Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`8<T8, T9, T10, T11, T12, T13, T14, Tuple`2<T15, T16>>> ToTuple(ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, ValueTuple`8<T8, T9, T10, T11, T12, T13, T14, ValueTuple`2<T15, T16>>> value);
    [ExtensionAttribute]
public static Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`8<T8, T9, T10, T11, T12, T13, T14, Tuple`3<T15, T16, T17>>> ToTuple(ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, ValueTuple`8<T8, T9, T10, T11, T12, T13, T14, ValueTuple`3<T15, T16, T17>>> value);
    [ExtensionAttribute]
public static Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`8<T8, T9, T10, T11, T12, T13, T14, Tuple`4<T15, T16, T17, T18>>> ToTuple(ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, ValueTuple`8<T8, T9, T10, T11, T12, T13, T14, ValueTuple`4<T15, T16, T17, T18>>> value);
    [ExtensionAttribute]
public static Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`8<T8, T9, T10, T11, T12, T13, T14, Tuple`5<T15, T16, T17, T18, T19>>> ToTuple(ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, ValueTuple`8<T8, T9, T10, T11, T12, T13, T14, ValueTuple`5<T15, T16, T17, T18, T19>>> value);
    [ExtensionAttribute]
public static Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`8<T8, T9, T10, T11, T12, T13, T14, Tuple`6<T15, T16, T17, T18, T19, T20>>> ToTuple(ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, ValueTuple`8<T8, T9, T10, T11, T12, T13, T14, ValueTuple`6<T15, T16, T17, T18, T19, T20>>> value);
    [ExtensionAttribute]
public static Tuple`8<T1, T2, T3, T4, T5, T6, T7, Tuple`8<T8, T9, T10, T11, T12, T13, T14, Tuple`7<T15, T16, T17, T18, T19, T20, T21>>> ToTuple(ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, ValueTuple`8<T8, T9, T10, T11, T12, T13, T14, ValueTuple`7<T15, T16, T17, T18, T19, T20, T21>>> value);
    private static ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, TRest> CreateLong(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7, TRest rest);
    private static Tuple`8<T1, T2, T3, T4, T5, T6, T7, TRest> CreateLongRef(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7, TRest rest);
}
internal class System.UriShim : object {
    private static char c_DummyChar;
    private static Char[] s_hexUpperChars;
    private static UriShim();
    public static string HexEscape(char character);
    public static char HexUnescape(string pattern, Int32& index);
    public static bool IsHexEncoding(string pattern, int index);
    internal static void EscapeAsciiChar(char ch, Char[] to, Int32& pos);
    private static char EscapedAscii(char digit, char next);
}
internal class System.ValueTuple : ValueType {
    private int System.ITupleInternal.Size { get; }
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(ValueTuple other);
    private sealed virtual override bool System.Collections.IStructuralEquatable.Equals(object other, IEqualityComparer comparer);
    private sealed virtual override int System.IComparable.CompareTo(object other);
    public sealed virtual int CompareTo(ValueTuple other);
    private sealed virtual override int System.Collections.IStructuralComparable.CompareTo(object other, IComparer comparer);
    public virtual int GetHashCode();
    private sealed virtual override int System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer comparer);
    private sealed virtual override int System.ITupleInternal.GetHashCode(IEqualityComparer comparer);
    public virtual string ToString();
    private sealed virtual override string System.ITupleInternal.ToStringEnd();
    private sealed virtual override int System.ITupleInternal.get_Size();
    public static ValueTuple Create();
    public static ValueTuple`1<T1> Create(T1 item1);
    public static ValueTuple`2<T1, T2> Create(T1 item1, T2 item2);
    public static ValueTuple`3<T1, T2, T3> Create(T1 item1, T2 item2, T3 item3);
    public static ValueTuple`4<T1, T2, T3, T4> Create(T1 item1, T2 item2, T3 item3, T4 item4);
    public static ValueTuple`5<T1, T2, T3, T4, T5> Create(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5);
    public static ValueTuple`6<T1, T2, T3, T4, T5, T6> Create(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6);
    public static ValueTuple`7<T1, T2, T3, T4, T5, T6, T7> Create(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7);
    public static ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, ValueTuple`1<T8>> Create(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7, T8 item8);
    internal static int CombineHashCodes(int h1, int h2);
    internal static int CombineHashCodes(int h1, int h2, int h3);
    internal static int CombineHashCodes(int h1, int h2, int h3, int h4);
    internal static int CombineHashCodes(int h1, int h2, int h3, int h4, int h5);
    internal static int CombineHashCodes(int h1, int h2, int h3, int h4, int h5, int h6);
    internal static int CombineHashCodes(int h1, int h2, int h3, int h4, int h5, int h6, int h7);
    internal static int CombineHashCodes(int h1, int h2, int h3, int h4, int h5, int h6, int h7, int h8);
}
internal class System.ValueTuple`1 : ValueType {
    private static EqualityComparer`1<T1> s_t1Comparer;
    public T1 Item1;
    private int System.ITupleInternal.Size { get; }
    public ValueTuple`1(T1 item1);
    private static ValueTuple`1();
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(ValueTuple`1<T1> other);
    private sealed virtual override bool System.Collections.IStructuralEquatable.Equals(object other, IEqualityComparer comparer);
    private sealed virtual override int System.IComparable.CompareTo(object other);
    public sealed virtual int CompareTo(ValueTuple`1<T1> other);
    private sealed virtual override int System.Collections.IStructuralComparable.CompareTo(object other, IComparer comparer);
    public virtual int GetHashCode();
    private sealed virtual override int System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer comparer);
    private sealed virtual override int System.ITupleInternal.GetHashCode(IEqualityComparer comparer);
    public virtual string ToString();
    private sealed virtual override string System.ITupleInternal.ToStringEnd();
    private sealed virtual override int System.ITupleInternal.get_Size();
}
internal class System.ValueTuple`2 : ValueType {
    private static EqualityComparer`1<T1> s_t1Comparer;
    private static EqualityComparer`1<T2> s_t2Comparer;
    public T1 Item1;
    public T2 Item2;
    private int System.ITupleInternal.Size { get; }
    public ValueTuple`2(T1 item1, T2 item2);
    private static ValueTuple`2();
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(ValueTuple`2<T1, T2> other);
    private sealed virtual override bool System.Collections.IStructuralEquatable.Equals(object other, IEqualityComparer comparer);
    private sealed virtual override int System.IComparable.CompareTo(object other);
    public sealed virtual int CompareTo(ValueTuple`2<T1, T2> other);
    private sealed virtual override int System.Collections.IStructuralComparable.CompareTo(object other, IComparer comparer);
    public virtual int GetHashCode();
    private sealed virtual override int System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer comparer);
    private int GetHashCodeCore(IEqualityComparer comparer);
    private sealed virtual override int System.ITupleInternal.GetHashCode(IEqualityComparer comparer);
    public virtual string ToString();
    private sealed virtual override string System.ITupleInternal.ToStringEnd();
    private sealed virtual override int System.ITupleInternal.get_Size();
}
internal class System.ValueTuple`3 : ValueType {
    private static EqualityComparer`1<T1> s_t1Comparer;
    private static EqualityComparer`1<T2> s_t2Comparer;
    private static EqualityComparer`1<T3> s_t3Comparer;
    public T1 Item1;
    public T2 Item2;
    public T3 Item3;
    private int System.ITupleInternal.Size { get; }
    public ValueTuple`3(T1 item1, T2 item2, T3 item3);
    private static ValueTuple`3();
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(ValueTuple`3<T1, T2, T3> other);
    private sealed virtual override bool System.Collections.IStructuralEquatable.Equals(object other, IEqualityComparer comparer);
    private sealed virtual override int System.IComparable.CompareTo(object other);
    public sealed virtual int CompareTo(ValueTuple`3<T1, T2, T3> other);
    private sealed virtual override int System.Collections.IStructuralComparable.CompareTo(object other, IComparer comparer);
    public virtual int GetHashCode();
    private sealed virtual override int System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer comparer);
    private int GetHashCodeCore(IEqualityComparer comparer);
    private sealed virtual override int System.ITupleInternal.GetHashCode(IEqualityComparer comparer);
    public virtual string ToString();
    private sealed virtual override string System.ITupleInternal.ToStringEnd();
    private sealed virtual override int System.ITupleInternal.get_Size();
}
internal class System.ValueTuple`4 : ValueType {
    private static EqualityComparer`1<T1> s_t1Comparer;
    private static EqualityComparer`1<T2> s_t2Comparer;
    private static EqualityComparer`1<T3> s_t3Comparer;
    private static EqualityComparer`1<T4> s_t4Comparer;
    public T1 Item1;
    public T2 Item2;
    public T3 Item3;
    public T4 Item4;
    private int System.ITupleInternal.Size { get; }
    public ValueTuple`4(T1 item1, T2 item2, T3 item3, T4 item4);
    private static ValueTuple`4();
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(ValueTuple`4<T1, T2, T3, T4> other);
    private sealed virtual override bool System.Collections.IStructuralEquatable.Equals(object other, IEqualityComparer comparer);
    private sealed virtual override int System.IComparable.CompareTo(object other);
    public sealed virtual int CompareTo(ValueTuple`4<T1, T2, T3, T4> other);
    private sealed virtual override int System.Collections.IStructuralComparable.CompareTo(object other, IComparer comparer);
    public virtual int GetHashCode();
    private sealed virtual override int System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer comparer);
    private int GetHashCodeCore(IEqualityComparer comparer);
    private sealed virtual override int System.ITupleInternal.GetHashCode(IEqualityComparer comparer);
    public virtual string ToString();
    private sealed virtual override string System.ITupleInternal.ToStringEnd();
    private sealed virtual override int System.ITupleInternal.get_Size();
}
internal class System.ValueTuple`5 : ValueType {
    private static EqualityComparer`1<T1> s_t1Comparer;
    private static EqualityComparer`1<T2> s_t2Comparer;
    private static EqualityComparer`1<T3> s_t3Comparer;
    private static EqualityComparer`1<T4> s_t4Comparer;
    private static EqualityComparer`1<T5> s_t5Comparer;
    public T1 Item1;
    public T2 Item2;
    public T3 Item3;
    public T4 Item4;
    public T5 Item5;
    private int System.ITupleInternal.Size { get; }
    public ValueTuple`5(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5);
    private static ValueTuple`5();
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(ValueTuple`5<T1, T2, T3, T4, T5> other);
    private sealed virtual override bool System.Collections.IStructuralEquatable.Equals(object other, IEqualityComparer comparer);
    private sealed virtual override int System.IComparable.CompareTo(object other);
    public sealed virtual int CompareTo(ValueTuple`5<T1, T2, T3, T4, T5> other);
    private sealed virtual override int System.Collections.IStructuralComparable.CompareTo(object other, IComparer comparer);
    public virtual int GetHashCode();
    private sealed virtual override int System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer comparer);
    private int GetHashCodeCore(IEqualityComparer comparer);
    private sealed virtual override int System.ITupleInternal.GetHashCode(IEqualityComparer comparer);
    public virtual string ToString();
    private sealed virtual override string System.ITupleInternal.ToStringEnd();
    private sealed virtual override int System.ITupleInternal.get_Size();
}
internal class System.ValueTuple`6 : ValueType {
    private static EqualityComparer`1<T1> s_t1Comparer;
    private static EqualityComparer`1<T2> s_t2Comparer;
    private static EqualityComparer`1<T3> s_t3Comparer;
    private static EqualityComparer`1<T4> s_t4Comparer;
    private static EqualityComparer`1<T5> s_t5Comparer;
    private static EqualityComparer`1<T6> s_t6Comparer;
    public T1 Item1;
    public T2 Item2;
    public T3 Item3;
    public T4 Item4;
    public T5 Item5;
    public T6 Item6;
    private int System.ITupleInternal.Size { get; }
    public ValueTuple`6(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6);
    private static ValueTuple`6();
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(ValueTuple`6<T1, T2, T3, T4, T5, T6> other);
    private sealed virtual override bool System.Collections.IStructuralEquatable.Equals(object other, IEqualityComparer comparer);
    private sealed virtual override int System.IComparable.CompareTo(object other);
    public sealed virtual int CompareTo(ValueTuple`6<T1, T2, T3, T4, T5, T6> other);
    private sealed virtual override int System.Collections.IStructuralComparable.CompareTo(object other, IComparer comparer);
    public virtual int GetHashCode();
    private sealed virtual override int System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer comparer);
    private int GetHashCodeCore(IEqualityComparer comparer);
    private sealed virtual override int System.ITupleInternal.GetHashCode(IEqualityComparer comparer);
    public virtual string ToString();
    private sealed virtual override string System.ITupleInternal.ToStringEnd();
    private sealed virtual override int System.ITupleInternal.get_Size();
}
internal class System.ValueTuple`7 : ValueType {
    private static EqualityComparer`1<T1> s_t1Comparer;
    private static EqualityComparer`1<T2> s_t2Comparer;
    private static EqualityComparer`1<T3> s_t3Comparer;
    private static EqualityComparer`1<T4> s_t4Comparer;
    private static EqualityComparer`1<T5> s_t5Comparer;
    private static EqualityComparer`1<T6> s_t6Comparer;
    private static EqualityComparer`1<T7> s_t7Comparer;
    public T1 Item1;
    public T2 Item2;
    public T3 Item3;
    public T4 Item4;
    public T5 Item5;
    public T6 Item6;
    public T7 Item7;
    private int System.ITupleInternal.Size { get; }
    public ValueTuple`7(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7);
    private static ValueTuple`7();
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(ValueTuple`7<T1, T2, T3, T4, T5, T6, T7> other);
    private sealed virtual override bool System.Collections.IStructuralEquatable.Equals(object other, IEqualityComparer comparer);
    private sealed virtual override int System.IComparable.CompareTo(object other);
    public sealed virtual int CompareTo(ValueTuple`7<T1, T2, T3, T4, T5, T6, T7> other);
    private sealed virtual override int System.Collections.IStructuralComparable.CompareTo(object other, IComparer comparer);
    public virtual int GetHashCode();
    private sealed virtual override int System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer comparer);
    private int GetHashCodeCore(IEqualityComparer comparer);
    private sealed virtual override int System.ITupleInternal.GetHashCode(IEqualityComparer comparer);
    public virtual string ToString();
    private sealed virtual override string System.ITupleInternal.ToStringEnd();
    private sealed virtual override int System.ITupleInternal.get_Size();
}
internal class System.ValueTuple`8 : ValueType {
    private static EqualityComparer`1<T1> s_t1Comparer;
    private static EqualityComparer`1<T2> s_t2Comparer;
    private static EqualityComparer`1<T3> s_t3Comparer;
    private static EqualityComparer`1<T4> s_t4Comparer;
    private static EqualityComparer`1<T5> s_t5Comparer;
    private static EqualityComparer`1<T6> s_t6Comparer;
    private static EqualityComparer`1<T7> s_t7Comparer;
    private static EqualityComparer`1<TRest> s_tRestComparer;
    public T1 Item1;
    public T2 Item2;
    public T3 Item3;
    public T4 Item4;
    public T5 Item5;
    public T6 Item6;
    public T7 Item7;
    public TRest Rest;
    private int System.ITupleInternal.Size { get; }
    public ValueTuple`8(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7, TRest rest);
    private static ValueTuple`8();
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, TRest> other);
    private sealed virtual override bool System.Collections.IStructuralEquatable.Equals(object other, IEqualityComparer comparer);
    private sealed virtual override int System.IComparable.CompareTo(object other);
    public sealed virtual int CompareTo(ValueTuple`8<T1, T2, T3, T4, T5, T6, T7, TRest> other);
    private sealed virtual override int System.Collections.IStructuralComparable.CompareTo(object other, IComparer comparer);
    public virtual int GetHashCode();
    private sealed virtual override int System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer comparer);
    private int GetHashCodeCore(IEqualityComparer comparer);
    private sealed virtual override int System.ITupleInternal.GetHashCode(IEqualityComparer comparer);
    public virtual string ToString();
    private sealed virtual override string System.ITupleInternal.ToStringEnd();
    private sealed virtual override int System.ITupleInternal.get_Size();
}
[ExtensionAttribute]
internal static class System.Xml.XPath.XDocumentExtensions : object {
    [ExtensionAttribute]
public static IXPathNavigable ToXPathNavigable(XNode node);
}
internal static class TimeZoneConverter.DataLoader : object {
    public static void Populate(IDictionary`2<string, string> ianaMap, IDictionary`2<string, string> windowsMap, IDictionary`2<string, string> railsMap, IDictionary`2<string, IList`1<string>> inverseRailsMap);
    [IteratorStateMachineAttribute("TimeZoneConverter.DataLoader/<GetEmbeddedData>d__1")]
private static IEnumerable`1<string> GetEmbeddedData(string resourceName);
}
internal static class TimeZoneConverter.TZConvert : object {
    private static IDictionary`2<string, string> IanaMap;
    private static IDictionary`2<string, string> WindowsMap;
    private static IDictionary`2<string, string> RailsMap;
    private static IDictionary`2<string, IList`1<string>> InverseRailsMap;
    private static bool IsWindows;
    private static Dictionary`2<string, TimeZoneInfo> SystemTimeZones;
    [CompilerGeneratedAttribute]
private static ICollection`1<string> <KnownIanaTimeZoneNames>k__BackingField;
    [CompilerGeneratedAttribute]
private static ICollection`1<string> <KnownWindowsTimeZoneIds>k__BackingField;
    [CompilerGeneratedAttribute]
private static ICollection`1<string> <KnownRailsTimeZoneNames>k__BackingField;
    public static ICollection`1<string> KnownIanaTimeZoneNames { get; }
    public static ICollection`1<string> KnownWindowsTimeZoneIds { get; }
    public static ICollection`1<string> KnownRailsTimeZoneNames { get; }
    private static TZConvert();
    [CompilerGeneratedAttribute]
public static ICollection`1<string> get_KnownIanaTimeZoneNames();
    [CompilerGeneratedAttribute]
public static ICollection`1<string> get_KnownWindowsTimeZoneIds();
    [CompilerGeneratedAttribute]
public static ICollection`1<string> get_KnownRailsTimeZoneNames();
    public static string IanaToWindows(string ianaTimeZoneName);
    public static bool TryIanaToWindows(string ianaTimeZoneName, String& windowsTimeZoneId);
    public static string WindowsToIana(string windowsTimeZoneId, string territoryCode);
    public static bool TryWindowsToIana(string windowsTimeZoneId, String& ianaTimeZoneName);
    public static bool TryWindowsToIana(string windowsTimeZoneId, string territoryCode, String& ianaTimeZoneName);
    public static TimeZoneInfo GetTimeZoneInfo(string windowsOrIanaTimeZoneId);
    public static bool TryGetTimeZoneInfo(string windowsOrIanaTimeZoneId, TimeZoneInfo& timeZoneInfo);
    public static IList`1<string> IanaToRails(string ianaTimeZoneName);
    public static bool TryIanaToRails(string ianaTimeZoneName, IList`1& railsTimeZoneNames);
    public static string RailsToIana(string railsTimeZoneName);
    public static bool TryRailsToIana(string railsTimeZoneName, String& ianaTimeZoneName);
    public static string RailsToWindows(string railsTimeZoneName);
    public static bool TryRailsToWindows(string railsTimeZoneName, String& windowsTimeZoneId);
    public static IList`1<string> WindowsToRails(string windowsTimeZoneId, string territoryCode);
    public static bool TryWindowsToRails(string windowsTimeZoneId, IList`1& railsTimeZoneNames);
    public static bool TryWindowsToRails(string windowsTimeZoneId, string territoryCode, IList`1& railsTimeZoneNames);
    private static Dictionary`2<string, TimeZoneInfo> GetSystemTimeZones();
}
